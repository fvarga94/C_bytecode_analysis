create_info_hash_table	FOR,0:CALL,3:WHILE,0:ELSE,0:IF,2:functions,0:SWITCH,0:DO,0	26
0x4000780	              0x55	                                push rbp	       451	dwarf2.c	FUNCTION_2
0x4000781	              0x53	                                push rbx	       451	dwarf2.c	FUNCTION_2
0x4000782	      0xbe28000000	                           mov esi, 0x28	       454	dwarf2.c	FUNCTION_2
0x4000787	          0x4889fd	                            mov rbp, rdi	       451	dwarf2.c	FUNCTION_2
0x400078a	        0x4883ec08	                              sub rsp, 8	       451	dwarf2.c	FUNCTION_2
0x400078e	      0xe800000000	                          call 0x4000793	       454	dwarf2.c	FUNCTION_2
0x4000793	            0x31f6	                            xor esi, esi	       454	dwarf2.c	FUNCTION_2
0x4000795	          0x4885c0	                           test rax, rax	       456	dwarf2.c	FUNCTION_2	IF_1
0x4000798	            0x741c	                            je 0x40007b6	       456	dwarf2.c	FUNCTION_2	IF_1
0x400079a	      0xbe00000000	                              mov esi, 0	       459	dwarf2.c	FUNCTION_2	IF_2	CALL_2
0x400079f	      0xba20000000	                           mov edx, 0x20	       459	dwarf2.c	FUNCTION_2	IF_2	CALL_2
0x40007a4	          0x4889c7	                            mov rdi, rax	       459	dwarf2.c	FUNCTION_2	IF_2	CALL_2
0x40007a7	          0x4889c3	                            mov rbx, rax	       459	dwarf2.c	FUNCTION_2	IF_2	CALL_2
0x40007aa	      0xe800000000	                          call 0x40007af	       459	dwarf2.c	FUNCTION_2	IF_2	CALL_2
0x40007af	            0x85c0	                           test eax, eax	       459	dwarf2.c	FUNCTION_2	IF_2	CALL_2
0x40007b1	          0x4889de	                            mov rsi, rbx	       459	dwarf2.c	FUNCTION_2	IF_2	CALL_2
0x40007b4	            0x740a	                            je 0x40007c0	       459	dwarf2.c	FUNCTION_2	IF_2	CALL_2
0x40007b6	        0x4883c408	                              add rsp, 8	       467	dwarf2.c	FUNCTION_2
0x40007ba	          0x4889f0	                            mov rax, rsi	       467	dwarf2.c	FUNCTION_2
0x40007bd	              0x5b	                                 pop rbx	       467	dwarf2.c	FUNCTION_2
0x40007be	              0x5d	                                 pop rbp	       467	dwarf2.c	FUNCTION_2
0x40007bf	              0xc3	                                     ret	       467	dwarf2.c	FUNCTION_2
0x40007c0	          0x4889ef	                            mov rdi, rbp	       462	dwarf2.c	FUNCTION_2	IF_2	CALL_3
0x40007c3	      0xe800000000	                          call 0x40007c8	       462	dwarf2.c	FUNCTION_2	IF_2	CALL_3
0x40007c8	            0x31f6	                            xor esi, esi	       463	dwarf2.c	FUNCTION_2	IF_2
0x40007ca	            0xebea	                           jmp 0x40007b6	       463	dwarf2.c	FUNCTION_2	IF_2
add_line_info	FOR,0:CALL,10:WHILE,1:ELSE,5:IF,12:functions,0:SWITCH,0:DO,0	196
0x40002b0	            0x4157	                                push r15	      1448	dwarf2.c	FUNCTION_25
0x40002b2	            0x4156	                                push r14	      1448	dwarf2.c	FUNCTION_25
0x40002b4	          0x4189d6	                           mov r14d, edx	      1448	dwarf2.c	FUNCTION_25
0x40002b7	            0x4155	                                push r13	      1448	dwarf2.c	FUNCTION_25
0x40002b9	            0x4154	                                push r12	      1448	dwarf2.c	FUNCTION_25
0x40002bb	          0x4989f4	                            mov r12, rsi	      1448	dwarf2.c	FUNCTION_25
0x40002be	              0x55	                                push rbp	      1448	dwarf2.c	FUNCTION_25
0x40002bf	              0x53	                                push rbx	      1448	dwarf2.c	FUNCTION_25
0x40002c0	          0x4889fd	                            mov rbp, rdi	      1448	dwarf2.c	FUNCTION_25
0x40002c3	      0xbe28000000	                           mov esi, 0x28	      1451	dwarf2.c	FUNCTION_25	CALL_1
0x40002c8	          0x4989cd	                            mov r13, rcx	      1448	dwarf2.c	FUNCTION_25
0x40002cb	        0x4883ec18	                           sub rsp, 0x18	      1448	dwarf2.c	FUNCTION_25
0x40002cf	        0x4c8b7f30	            mov r15, qword [rdi + 0x30] 	      1450	dwarf2.c	FUNCTION_25
0x40002d3	          0x488b3f	                    mov rdi, qword [rdi]	      1451	dwarf2.c	FUNCTION_25	CALL_1
0x40002d6	      0x448944240c	              mov dword [rsp + 0xc], r8d	      1448	dwarf2.c	FUNCTION_25
0x40002db	      0x44894c2408	                mov dword [rsp + 8], r9d	      1448	dwarf2.c	FUNCTION_25
0x40002e0	      0xe800000000	                          call 0x40002e5	      1451	dwarf2.c	FUNCTION_25	CALL_1
0x40002e5	          0x4885c0	                           test rax, rax	      1453	dwarf2.c	FUNCTION_25	IF_1
0x40002e8	      0x448b4c2408	                mov r9d, dword [rsp + 8]	      1453	dwarf2.c	FUNCTION_25	IF_1
0x40002ed	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      1453	dwarf2.c	FUNCTION_25	IF_1
0x40002f2	     0xf8488010000	                            je 0x4000480	      1453	dwarf2.c	FUNCTION_25	IF_1
0x40002f8	          0x4889c3	                            mov rbx, rax	      1453	dwarf2.c	FUNCTION_25	IF_1
0x40002fb	    0x48c700000000	                      mov qword [rax], 0	      1457	dwarf2.c	FUNCTION_25
0x4000302	        0x4c896008	                mov qword [rax + 8], r12	      1458	dwarf2.c	FUNCTION_25
0x4000306	        0x44887024	             mov byte [rax + 0x24], r14b	      1459	dwarf2.c	FUNCTION_25
0x400030a	        0x44894018	             mov dword [rax + 0x18], r8d	      1460	dwarf2.c	FUNCTION_25
0x400030e	          0x4d85ed	                           test r13, r13	      1465	dwarf2.c	FUNCTION_25	IF_2
0x4000311	        0x4489481c	             mov dword [rax + 0x1c], r9d	      1461	dwarf2.c	FUNCTION_25
0x4000315	        0x8b442450	            mov eax, dword [rsp + 0x50] 	      1462	dwarf2.c	FUNCTION_25
0x4000319	          0x894320	             mov dword [rbx + 0x20], eax	      1462	dwarf2.c	FUNCTION_25
0x400031c	       0xfb6442458	           movzx eax, byte [rsp + 0x58] 	      1463	dwarf2.c	FUNCTION_25
0x4000321	          0x884325	               mov byte [rbx + 0x25], al	      1463	dwarf2.c	FUNCTION_25
0x4000324	            0x740b	                            je 0x4000331	      1465	dwarf2.c	FUNCTION_25	IF_2
0x4000326	      0x41807d0000	                       cmp byte [r13], 0	      1465	dwarf2.c	FUNCTION_25	IF_2
0x400032b	     0xf851f010000	                           jne 0x4000450	      1465	dwarf2.c	FUNCTION_25	IF_2
0x4000331	    0x48c743100000	               mov qword [rbx + 0x10], 0	      1473	dwarf2.c	FUNCTION_25	ELSE_1
0x4000339	          0x4d85ff	                           test r15, r15	      1490	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x400033c	            0x7419	                            je 0x4000357	      1490	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x400033e	        0x498b4f10	            mov rcx, qword [r15 + 0x10] 	      1491	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4000342	        0x488b7108	                mov rsi, qword [rcx + 8]	      1491	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4000346	          0x4939f4	                            cmp r12, rsi	      1491	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4000349	     0xf8449010000	                            je 0x4000498	      1491	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x400034f	         0xfb64125	           movzx eax, byte [rcx + 0x25] 	      1491	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x4000353	            0x84c0	                             test al, al	      1502	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4000355	            0x7449	                            je 0x40003a0	      1502	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4000357	      0xbf28000000	                           mov edi, 0x28	      1506	dwarf2.c	FUNCTION_25	ELSE_2	IF_6	CALL_5
0x400035c	      0xe800000000	                          call 0x4000361	      1506	dwarf2.c	FUNCTION_25	ELSE_2	IF_6	CALL_5
0x4000361	          0x4885c0	                           test rax, rax	      1507	dwarf2.c	FUNCTION_25	ELSE_2	IF_6	IF_7
0x4000364	     0xf8416010000	                            je 0x4000480	      1507	dwarf2.c	FUNCTION_25	ELSE_2	IF_6	IF_7
0x400036a	        0x488b5530	            mov rdx, qword [rbp + 0x30] 	      1510	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x400036e	          0x4c8920	                    mov qword [rax], r12	      1509	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4000371	        0x48895810	             mov qword [rax + 0x10], rbx	      1511	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4000375	        0x48895008	                mov qword [rax + 8], rdx	      1510	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4000379	        0x83451001	               add dword [rbp + 0x10], 1	      1514	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x400037d	        0x48894530	            mov qword [rbp + 0x30], rax 	      1513	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4000381	        0x48895d38	            mov qword [rbp + 0x38], rbx 	      1512	dwarf2.c	FUNCTION_25	ELSE_2	IF_6
0x4000385	      0xb801000000	                              mov eax, 1	      1557	dwarf2.c	FUNCTION_25
0x400038a	        0x4883c418	                           add rsp, 0x18	      1558	dwarf2.c	FUNCTION_25
0x400038e	              0x5b	                                 pop rbx	      1558	dwarf2.c	FUNCTION_25
0x400038f	              0x5d	                                 pop rbp	      1558	dwarf2.c	FUNCTION_25
0x4000390	            0x415c	                                 pop r12	      1558	dwarf2.c	FUNCTION_25
0x4000392	            0x415d	                                 pop r13	      1558	dwarf2.c	FUNCTION_25
0x4000394	            0x415e	                                 pop r14	      1558	dwarf2.c	FUNCTION_25
0x4000396	            0x415f	                                 pop r15	      1558	dwarf2.c	FUNCTION_25
0x4000398	              0xc3	                                     ret	      1558	dwarf2.c	FUNCTION_25
0x4000399	     0xf1f80000000	                         nop dword [rax]	      1558	dwarf2.c	FUNCTION_25
0x40003a0	        0x807b2500	                cmp byte [rbx + 0x25], 0	      1516	dwarf2.c	FUNCTION_25	ELSE_3	IF_8
0x40003a4	            0x757a	                           jne 0x4000420	      1516	dwarf2.c	FUNCTION_25	ELSE_3	IF_8
0x40003a6	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1516	dwarf2.c	FUNCTION_25	ELSE_3	IF_8
0x40003aa	          0x4839fe	                            cmp rsi, rdi	      1429	dwarf2.c	FUNCTION_24
0x40003ad	            0x7271	                            jb 0x4000420	      1429	dwarf2.c	FUNCTION_24
0x40003af	            0x745f	                            je 0x4000410	      1429	dwarf2.c	FUNCTION_24
0x40003b1	        0x488b4538	            mov rax, qword [rbp + 0x38] 	      1527	dwarf2.c	FUNCTION_25	ELSE_4	IF_10	CALL_7
0x40003b5	        0x483b7808	                cmp rdi, qword [rax + 8]	      1429	dwarf2.c	FUNCTION_24
0x40003b9	     0xf8649010000	                           jbe 0x4000508	      1429	dwarf2.c	FUNCTION_24
0x40003bf	          0x488b01	                    mov rax, qword [rcx]	      1540	dwarf2.c	FUNCTION_25	ELSE_5
0x40003c2	          0x4885c0	                           test rax, rax	      1542	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x40003c5	            0x752f	                           jne 0x40003f6	      1542	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x40003c7	      0xe9a3010000	                           jmp 0x400056f	      1542	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x40003cc	         0xf1f4000	                         nop dword [rax]	      1542	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x40003d0	        0x483b7808	                cmp rdi, qword [rax + 8]	      1429	dwarf2.c	FUNCTION_24
0x40003d4	     0xf8703010000	                            ja 0x40004dd	      1429	dwarf2.c	FUNCTION_24
0x40003da	     0xf84f0000000	                            je 0x40004d0	      1429	dwarf2.c	FUNCTION_24
0x40003e0	          0x488b10	                    mov rdx, qword [rax]	      1549	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x40003e3	          0x4885d2	                           test rdx, rdx	      1542	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x40003e6	     0xf8454010000	                            je 0x4000540	      1542	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x40003ec	        0x488b7008	                mov rsi, qword [rax + 8]	      1542	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x40003f0	          0x4889c1	                            mov rcx, rax	      1542	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x40003f3	          0x4889d0	                            mov rax, rdx	      1542	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x40003f6	          0x4839f7	                            cmp rdi, rsi	      1429	dwarf2.c	FUNCTION_24
0x40003f9	            0x77e5	                            ja 0x40003e0	      1429	dwarf2.c	FUNCTION_24
0x40003fb	            0x75d3	                           jne 0x40003d0	      1429	dwarf2.c	FUNCTION_24
0x40003fd	         0xfb65124	           movzx edx, byte [rcx + 0x24] 	      1430	dwarf2.c	FUNCTION_24
0x4000401	          0x385324	               cmp byte [rbx + 0x24], dl	      1430	dwarf2.c	FUNCTION_24
0x4000404	            0x77da	                            ja 0x40003e0	      1430	dwarf2.c	FUNCTION_24
0x4000406	            0xebc8	                           jmp 0x40003d0	      1430	dwarf2.c	FUNCTION_24
0x4000408	     0xf1f84000000	                   nop dword [rax + rax]	      1430	dwarf2.c	FUNCTION_24
0x4000410	         0xfb64324	           movzx eax, byte [rbx + 0x24] 	      1430	dwarf2.c	FUNCTION_24
0x4000414	          0x384124	               cmp byte [rcx + 0x24], al	      1430	dwarf2.c	FUNCTION_24
0x4000417	            0x7398	                           jae 0x40003b1	      1430	dwarf2.c	FUNCTION_24
0x4000419	     0xf1f80000000	                         nop dword [rax]	      1430	dwarf2.c	FUNCTION_24
0x4000420	      0x48837d3800	               cmp qword [rbp + 0x38], 0	      1524	dwarf2.c	FUNCTION_25	ELSE_3	IF_8	IF_9
0x4000425	          0x48890b	                    mov qword [rbx], rcx	      1520	dwarf2.c	FUNCTION_25	ELSE_3	IF_8
0x4000428	        0x49895f10	             mov qword [r15 + 0x10], rbx	      1521	dwarf2.c	FUNCTION_25	ELSE_3	IF_8
0x400042c	     0xf8416010000	                            je 0x4000548	      1524	dwarf2.c	FUNCTION_25	ELSE_3	IF_8	IF_9
0x4000432	        0x4883c418	                           add rsp, 0x18	      1558	dwarf2.c	FUNCTION_25
0x4000436	      0xb801000000	                              mov eax, 1	      1557	dwarf2.c	FUNCTION_25
0x400043b	              0x5b	                                 pop rbx	      1558	dwarf2.c	FUNCTION_25
0x400043c	              0x5d	                                 pop rbp	      1558	dwarf2.c	FUNCTION_25
0x400043d	            0x415c	                                 pop r12	      1558	dwarf2.c	FUNCTION_25
0x400043f	            0x415d	                                 pop r13	      1558	dwarf2.c	FUNCTION_25
0x4000441	            0x415e	                                 pop r14	      1558	dwarf2.c	FUNCTION_25
0x4000443	            0x415f	                                 pop r15	      1558	dwarf2.c	FUNCTION_25
0x4000445	              0xc3	                                     ret	      1558	dwarf2.c	FUNCTION_25
0x4000446	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1558	dwarf2.c	FUNCTION_25
0x4000450	          0x4c89ef	                            mov rdi, r13	      1467	dwarf2.c	FUNCTION_25	IF_2	CALL_3
0x4000453	      0xe800000000	                          call 0x4000458	      1467	dwarf2.c	FUNCTION_25	IF_2	CALL_3
0x4000458	        0x488b7d00	                    mov rdi, qword [rbp]	      1467	dwarf2.c	FUNCTION_25	IF_2	CALL_3
0x400045c	        0x488d7001	                      lea rsi, [rax + 1]	      1467	dwarf2.c	FUNCTION_25	IF_2	CALL_3
0x4000460	      0xe800000000	                          call 0x4000465	      1467	dwarf2.c	FUNCTION_25	IF_2	CALL_3
0x4000465	          0x4885c0	                           test rax, rax	      1468	dwarf2.c	FUNCTION_25	IF_2	IF_3
0x4000468	        0x48894310	             mov qword [rbx + 0x10], rax	      1467	dwarf2.c	FUNCTION_25	IF_2	CALL_3
0x400046c	            0x7412	                            je 0x4000480	      1468	dwarf2.c	FUNCTION_25	IF_2	IF_3
0x400046e	          0x4c89ee	                            mov rsi, r13	       110	string3.h	FUNCTION_78	CALL_3
0x4000471	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_78	CALL_3
0x4000474	      0xe800000000	                          call 0x4000479	       110	string3.h	FUNCTION_78	CALL_3
0x4000479	      0xe9bbfeffff	                           jmp 0x4000339	       110	string3.h	FUNCTION_78	CALL_3
0x400047e	            0x6690	                                     nop	       110	string3.h	FUNCTION_78	CALL_3
0x4000480	        0x4883c418	                           add rsp, 0x18	      1558	dwarf2.c	FUNCTION_25
0x4000484	            0x31c0	                            xor eax, eax	      1454	dwarf2.c	FUNCTION_25	IF_1
0x4000486	              0x5b	                                 pop rbx	      1558	dwarf2.c	FUNCTION_25
0x4000487	              0x5d	                                 pop rbp	      1558	dwarf2.c	FUNCTION_25
0x4000488	            0x415c	                                 pop r12	      1558	dwarf2.c	FUNCTION_25
0x400048a	            0x415d	                                 pop r13	      1558	dwarf2.c	FUNCTION_25
0x400048c	            0x415e	                                 pop r14	      1558	dwarf2.c	FUNCTION_25
0x400048e	            0x415f	                                 pop r15	      1558	dwarf2.c	FUNCTION_25
0x4000490	              0xc3	                                     ret	      1558	dwarf2.c	FUNCTION_25
0x4000491	     0xf1f80000000	                         nop dword [rax]	      1558	dwarf2.c	FUNCTION_25
0x4000498	        0x443a7124	            cmp r14b, byte [rcx + 0x24] 	      1492	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x400049c	     0xf85adfeffff	                           jne 0x400034f	      1492	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x40004a2	         0xfb65125	           movzx edx, byte [rcx + 0x25] 	      1493	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x40004a6	        0x39542458	            cmp dword [rsp + 0x58], edx 	      1493	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x40004aa	            0x89d0	                            mov eax, edx	      1493	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x40004ac	     0xf85a1feffff	                           jne 0x4000353	      1493	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x40004b2	        0x483b4d38	            cmp rcx, qword [rbp + 0x38] 	      1497	dwarf2.c	FUNCTION_25	ELSE_1	IF_4	IF_5
0x40004b6	     0xf84bd000000	                            je 0x4000579	      1497	dwarf2.c	FUNCTION_25	ELSE_1	IF_4	IF_5
0x40004bc	          0x488b01	                    mov rax, qword [rcx]	      1499	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x40004bf	          0x488903	                    mov qword [rbx], rax	      1499	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x40004c2	        0x49895f10	             mov qword [r15 + 0x10], rbx	      1500	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x40004c6	      0xb801000000	                              mov eax, 1	      1557	dwarf2.c	FUNCTION_25
0x40004cb	      0xe9bafeffff	                           jmp 0x400038a	      1500	dwarf2.c	FUNCTION_25	ELSE_1	IF_4
0x40004d0	         0xfb65024	           movzx edx, byte [rax + 0x24] 	      1430	dwarf2.c	FUNCTION_24
0x40004d4	          0x385324	               cmp byte [rbx + 0x24], dl	      1430	dwarf2.c	FUNCTION_24
0x40004d7	     0xf8603ffffff	                           jbe 0x40003e0	      1430	dwarf2.c	FUNCTION_24
0x40004dd	          0x488b11	                    mov rdx, qword [rcx]	      1430	dwarf2.c	FUNCTION_24
0x40004e0	          0x4889c8	                            mov rax, rcx	      1429	dwarf2.c	FUNCTION_24
0x40004e3	          0x4d3b27	                    cmp r12, qword [r15]	      1554	dwarf2.c	FUNCTION_25	ELSE_5	IF_12
0x40004e6	        0x48894538	            mov qword [rbp + 0x38], rax 	      1551	dwarf2.c	FUNCTION_25	ELSE_5
0x40004ea	          0x488913	                    mov qword [rbx], rdx	      1552	dwarf2.c	FUNCTION_25	ELSE_5
0x40004ed	          0x488918	                    mov qword [rax], rbx	      1553	dwarf2.c	FUNCTION_25	ELSE_5
0x40004f0	     0xf833cffffff	                           jae 0x4000432	      1554	dwarf2.c	FUNCTION_25	ELSE_5	IF_12
0x40004f6	          0x4d8927	                    mov qword [r15], r12	      1555	dwarf2.c	FUNCTION_25	ELSE_5	IF_12
0x40004f9	      0xb801000000	                              mov eax, 1	      1557	dwarf2.c	FUNCTION_25
0x40004fe	      0xe987feffff	                           jmp 0x400038a	      1557	dwarf2.c	FUNCTION_25
0x4000503	       0xf1f440000	                   nop dword [rax + rax]	      1557	dwarf2.c	FUNCTION_25
0x4000508	            0x7456	                            je 0x4000560	      1429	dwarf2.c	FUNCTION_24
0x400050a	          0x488b10	                    mov rdx, qword [rax]	      1528	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x400050d	          0x4885d2	                           test rdx, rdx	      1528	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x4000510	            0x741e	                            je 0x4000530	      1528	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x4000512	        0x483b7a08	                cmp rdi, qword [rdx + 8]	      1429	dwarf2.c	FUNCTION_24
0x4000516	            0x7718	                            ja 0x4000530	      1429	dwarf2.c	FUNCTION_24
0x4000518	     0xf85a1feffff	                           jne 0x40003bf	      1429	dwarf2.c	FUNCTION_24
0x400051e	      0x440fb65224	          movzx r10d, byte [rdx + 0x24] 	      1430	dwarf2.c	FUNCTION_24
0x4000523	        0x44385324	            cmp byte [rbx + 0x24], r10b 	      1430	dwarf2.c	FUNCTION_24
0x4000527	     0xf8692feffff	                           jbe 0x40003bf	      1430	dwarf2.c	FUNCTION_24
0x400052d	           0xf1f00	                         nop dword [rax]	      1430	dwarf2.c	FUNCTION_24
0x4000530	          0x488913	                    mov qword [rbx], rdx	      1532	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x4000533	          0x488918	                    mov qword [rax], rbx	      1533	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x4000536	      0xe9f7feffff	                           jmp 0x4000432	      1533	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x400053b	       0xf1f440000	                   nop dword [rax + rax]	      1533	dwarf2.c	FUNCTION_25	ELSE_4	IF_10
0x4000540	            0x31d2	                            xor edx, edx	      1549	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x4000542	            0xeb9f	                           jmp 0x40004e3	      1549	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x4000544	         0xf1f4000	                         nop dword [rax]	      1549	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x4000548	        0x48895d38	            mov qword [rbp + 0x38], rbx 	      1525	dwarf2.c	FUNCTION_25	ELSE_3	IF_8	IF_9
0x400054c	      0xb801000000	                              mov eax, 1	      1557	dwarf2.c	FUNCTION_25
0x4000551	      0xe934feffff	                           jmp 0x400038a	      1557	dwarf2.c	FUNCTION_25
0x4000556	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1557	dwarf2.c	FUNCTION_25
0x4000560	         0xfb65024	           movzx edx, byte [rax + 0x24] 	      1430	dwarf2.c	FUNCTION_24
0x4000564	          0x385324	               cmp byte [rbx + 0x24], dl	      1430	dwarf2.c	FUNCTION_24
0x4000567	     0xf8752feffff	                            ja 0x40003bf	      1430	dwarf2.c	FUNCTION_24
0x400056d	            0xeb9b	                           jmp 0x400050a	      1430	dwarf2.c	FUNCTION_24
0x400056f	          0x4889c8	                            mov rax, rcx	      1542	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x4000572	            0x31d2	                            xor edx, edx	      1542	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x4000574	      0xe96affffff	                           jmp 0x40004e3	      1542	dwarf2.c	FUNCTION_25	ELSE_5	WHILE_1
0x4000579	        0x48895d38	            mov qword [rbp + 0x38], rbx 	      1498	dwarf2.c	FUNCTION_25	ELSE_1	IF_4	IF_5
0x400057d	      0xe93affffff	                           jmp 0x40004bc	      1498	dwarf2.c	FUNCTION_25	ELSE_1	IF_4	IF_5
_bfd_elf_find_function	FOR,1:CALL,8:WHILE,0:ELSE,0:IF,13:functions,0:SWITCH,0:DO,0	140
0x4004ff0	            0x4157	                                push r15	      4990	dwarf2.c	FUNCTION_71
0x4004ff2	            0x4156	                                push r14	      4990	dwarf2.c	FUNCTION_71
0x4004ff4	            0x4155	                                push r13	      4990	dwarf2.c	FUNCTION_71
0x4004ff6	            0x4154	                                push r12	      4990	dwarf2.c	FUNCTION_71
0x4004ff8	              0x55	                                push rbp	      4990	dwarf2.c	FUNCTION_71
0x4004ff9	              0x53	                                push rbx	      4990	dwarf2.c	FUNCTION_71
0x4004ffa	        0x4883ec48	                           sub rsp, 0x48	      4990	dwarf2.c	FUNCTION_71
0x4004ffe	    0x64488b042528	                mov rax, qword fs:[0x28]	      4990	dwarf2.c	FUNCTION_71
0x4005007	      0x4889442438	             mov qword [rsp + 0x38], rax	      4990	dwarf2.c	FUNCTION_71
0x400500c	            0x31c0	                            xor eax, eax	      4990	dwarf2.c	FUNCTION_71
0x400500e	          0x4885f6	                           test rsi, rsi	      4999	dwarf2.c	FUNCTION_71	IF_1
0x4005011	      0x4889542408	                mov qword [rsp + 8], rdx	      4990	dwarf2.c	FUNCTION_71
0x4005016	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      4990	dwarf2.c	FUNCTION_71
0x400501b	      0x4c89442410	              mov qword [rsp + 0x10], r8	      4990	dwarf2.c	FUNCTION_71
0x4005020	      0x4c894c2420	              mov qword [rsp + 0x20], r9	      4990	dwarf2.c	FUNCTION_71
0x4005025	     0xf84d5010000	                            je 0x4005200	      4999	dwarf2.c	FUNCTION_71	IF_1
0x400502b	        0x488b4708	                mov rax, qword [rdi + 8]	      5002	dwarf2.c	FUNCTION_71	IF_2	CALL_1
0x400502f	          0x4889fd	                            mov rbp, rdi	      5002	dwarf2.c	FUNCTION_71	IF_2	CALL_1
0x4005032	        0x83780805	                  cmp dword [rax + 8], 5	      5002	dwarf2.c	FUNCTION_71	IF_2	CALL_1
0x4005036	     0xf85c4010000	                           jne 0x4005200	      5002	dwarf2.c	FUNCTION_71	IF_2	CALL_1
0x400503c	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      5005	dwarf2.c	FUNCTION_71	CALL_2
0x4005043	          0x4889f3	                            mov rbx, rsi	      5005	dwarf2.c	FUNCTION_71	CALL_2
0x4005046	    0x4c8bb8380300	           mov r15, qword [rax + 0x338] 	      5005	dwarf2.c	FUNCTION_71	CALL_2
0x400504d	          0x4d85ff	                           test r15, r15	      5006	dwarf2.c	FUNCTION_71	IF_3
0x4005050	     0xf847f010000	                            je 0x40051d5	      5006	dwarf2.c	FUNCTION_71	IF_3
0x4005056	      0x488b442408	                mov rax, qword [rsp + 8]	      5013	dwarf2.c	FUNCTION_71	IF_5
0x400505b	          0x493907	                    cmp qword [r15], rax	      5013	dwarf2.c	FUNCTION_71	IF_5
0x400505e	     0xf84a4010000	                            je 0x4005208	      5013	dwarf2.c	FUNCTION_71	IF_5
0x4005064	        0x488b4508	                mov rax, qword [rbp + 8]	      5030	dwarf2.c	FUNCTION_71	IF_5	CALL_5
0x4005068	    0x488ba8680300	           mov rbp, qword [rax + 0x368] 	      5030	dwarf2.c	FUNCTION_71	IF_5	CALL_5
0x400506f	      0x488b442408	                mov rax, qword [rsp + 8]	      5038	dwarf2.c	FUNCTION_71	IF_5
0x4005074	    0x49c747100000	               mov qword [r15 + 0x10], 0	      5035	dwarf2.c	FUNCTION_71	IF_5
0x400507c	    0x49c747080000	                  mov qword [r15 + 8], 0	      5036	dwarf2.c	FUNCTION_71	IF_5
0x4005084	    0x49c747180000	               mov qword [r15 + 0x18], 0	      5037	dwarf2.c	FUNCTION_71	IF_5
0x400508c	          0x498907	                    mov qword [r15], rax	      5038	dwarf2.c	FUNCTION_71	IF_5
0x400508f	          0x4c8b2b	                    mov r13, qword [rbx]	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x4005092	          0x4d85ed	                           test r13, r13	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x4005095	     0xf8465010000	                            je 0x4005200	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x400509b	          0x4531e4	                          xor r12d, r12d	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x400509e	    0x48c744242800	               mov qword [rsp + 0x28], 0	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x40050a7	          0x4531f6	                          xor r14d, r14d	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x40050aa	            0xeb24	                           jmp 0x40050d0	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x40050ac	         0xf1f4000	                         nop dword [rax]	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x40050b0	        0x4183fc01	                             cmp r12d, 1	      5050	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_6	IF_7
0x40050b4	      0xb802000000	                              mov eax, 2	      5050	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_6	IF_7
0x40050b9	          0x4d89ee	                            mov r14, r13	      5051	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_6
0x40050bc	        0x440f44e0	                         cmove r12d, eax	      5050	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_6	IF_7
0x40050c0	        0x4883c308	                              add rbx, 8	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x40050c4	          0x4c8b2b	                    mov r13, qword [rbx]	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x40050c7	          0x4d85ed	                           test r13, r13	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x40050ca	     0xf848c000000	                            je 0x400515c	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x40050d0	      0x41f6451940	           test byte [r13 + 0x19], 0x40 	      5046	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_6
0x40050d5	            0x75d9	                           jne 0x40050b0	      5046	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_6
0x40050d7	      0x488d542430	                   lea rdx, [rsp + 0x30]	      5054	dwarf2.c	FUNCTION_71	IF_5	FOR_1	CALL_6
0x40050dc	      0x488b742408	                mov rsi, qword [rsp + 8]	      5054	dwarf2.c	FUNCTION_71	IF_5	FOR_1	CALL_6
0x40050e1	          0x4c89ef	                            mov rdi, r13	      5054	dwarf2.c	FUNCTION_71	IF_5	FOR_1	CALL_6
0x40050e4	    0xff95d0020000	                call qword [rbp + 0x2d0]	      5054	dwarf2.c	FUNCTION_71	IF_5	FOR_1	CALL_6
0x40050ea	          0x4885c0	                           test rax, rax	      5055	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x40050ed	            0x7451	                            je 0x4005140	      5055	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x40050ef	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      5056	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x40050f4	      0x4839542418	            cmp qword [rsp + 0x18], rdx 	      5056	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x40050f9	            0x7245	                            jb 0x4005140	      5056	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x40050fb	      0x483b542428	            cmp rdx, qword [rsp + 0x28] 	      5057	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4005100	     0xf86ba000000	                           jbe 0x40051c0	      5057	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4005106	          0x4d85f6	                           test r14, r14	      5065	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	IF_9
0x4005109	        0x4d896f08	                mov qword [r15 + 8], r13	      5061	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x400510d	        0x49894718	             mov qword [r15 + 0x18], rax	      5062	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4005111	    0x49c747100000	               mov qword [r15 + 0x10], 0	      5063	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x4005119	     0xf841a010000	                            je 0x4005239	      5065	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	IF_9
0x400511f	      0x41f6451801	               test byte [r13 + 0x18], 1	      5067	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	IF_9
0x4005124	            0x750b	                           jne 0x4005131	      5067	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	IF_9
0x4005126	        0x4183fc02	                             cmp r12d, 2	      5067	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	IF_9
0x400512a	      0x4889542428	             mov qword [rsp + 0x28], rdx	      5067	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	IF_9
0x400512f	            0x748f	                            je 0x40050c0	      5067	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	IF_9
0x4005131	        0x498b4608	                mov rax, qword [r14 + 8]	      5068	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	CALL_7
0x4005135	      0x4889542428	             mov qword [rsp + 0x28], rdx	      5068	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	CALL_7
0x400513a	        0x49894710	             mov qword [r15 + 0x10], rax	      5068	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	CALL_7
0x400513e	            0x6690	                                     nop	      5068	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8	CALL_7
0x4005140	          0x4585e4	                         test r12d, r12d	      5071	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_10
0x4005143	      0xb801000000	                              mov eax, 1	      5071	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_10
0x4005148	        0x440f44e0	                         cmove r12d, eax	      5071	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_10
0x400514c	        0x4883c308	                              add rbx, 8	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x4005150	          0x4c8b2b	                    mov r13, qword [rbx]	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x4005153	          0x4d85ed	                           test r13, r13	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x4005156	     0xf8574ffffff	                           jne 0x40050d0	      5040	dwarf2.c	FUNCTION_71	IF_5	FOR_1
0x400515c	      0x49837f0800	                  cmp qword [r15 + 8], 0	      5075	dwarf2.c	FUNCTION_71	IF_11
0x4005161	     0xf8499000000	                            je 0x4005200	      5075	dwarf2.c	FUNCTION_71	IF_11
0x4005167	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      5078	dwarf2.c	FUNCTION_71	IF_12
0x400516d	            0x740c	                            je 0x400517b	      5078	dwarf2.c	FUNCTION_71	IF_12
0x400516f	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      5079	dwarf2.c	FUNCTION_71	IF_12
0x4005173	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      5079	dwarf2.c	FUNCTION_71	IF_12
0x4005178	          0x488906	                    mov qword [rsi], rax	      5079	dwarf2.c	FUNCTION_71	IF_12
0x400517b	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      5080	dwarf2.c	FUNCTION_71	IF_13
0x4005180	          0x4885c9	                           test rcx, rcx	      5080	dwarf2.c	FUNCTION_71	IF_13
0x4005183	            0x740b	                            je 0x4005190	      5080	dwarf2.c	FUNCTION_71	IF_13
0x4005185	        0x498b4708	                mov rax, qword [r15 + 8]	      5081	dwarf2.c	FUNCTION_71	CALL_8
0x4005189	        0x488b4008	                mov rax, qword [rax + 8]	      5081	dwarf2.c	FUNCTION_71	CALL_8
0x400518d	          0x488901	                    mov qword [rcx], rax	      5081	dwarf2.c	FUNCTION_71	CALL_8
0x4005190	        0x498b4708	                mov rax, qword [r15 + 8]	      5083	dwarf2.c	FUNCTION_71
0x4005194	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      5084	dwarf2.c	FUNCTION_71
0x4005199	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      5084	dwarf2.c	FUNCTION_71
0x40051a2	     0xf859b000000	                           jne 0x4005243	      5084	dwarf2.c	FUNCTION_71
0x40051a8	        0x4883c448	                           add rsp, 0x48	      5084	dwarf2.c	FUNCTION_71
0x40051ac	              0x5b	                                 pop rbx	      5084	dwarf2.c	FUNCTION_71
0x40051ad	              0x5d	                                 pop rbp	      5084	dwarf2.c	FUNCTION_71
0x40051ae	            0x415c	                                 pop r12	      5084	dwarf2.c	FUNCTION_71
0x40051b0	            0x415d	                                 pop r13	      5084	dwarf2.c	FUNCTION_71
0x40051b2	            0x415e	                                 pop r14	      5084	dwarf2.c	FUNCTION_71
0x40051b4	            0x415f	                                 pop r15	      5084	dwarf2.c	FUNCTION_71
0x40051b6	              0xc3	                                     ret	      5084	dwarf2.c	FUNCTION_71
0x40051b7	    0x660f1f840000	                    nop word [rax + rax]	      5084	dwarf2.c	FUNCTION_71
0x40051c0	     0xf857affffff	                           jne 0x4005140	      5058	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x40051c6	        0x493b4718	            cmp rax, qword [r15 + 0x18] 	      5059	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x40051ca	     0xf8670ffffff	                           jbe 0x4005140	      5059	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x40051d0	      0xe931ffffff	                           jmp 0x4005106	      5059	dwarf2.c	FUNCTION_71	IF_5	FOR_1	IF_8
0x40051d5	      0xbe20000000	                           mov esi, 0x20	      5008	dwarf2.c	FUNCTION_71	IF_3	CALL_3
0x40051da	      0xe800000000	                          call 0x40051df	      5008	dwarf2.c	FUNCTION_71	IF_3	CALL_3
0x40051df	          0x4989c7	                            mov r15, rax	      5008	dwarf2.c	FUNCTION_71	IF_3	CALL_3
0x40051e2	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      5009	dwarf2.c	FUNCTION_71	IF_3	CALL_4
0x40051e9	          0x4d85ff	                           test r15, r15	      5010	dwarf2.c	FUNCTION_71	IF_3	IF_4
0x40051ec	    0x4c89b8380300	            mov qword [rax + 0x338], r15	      5009	dwarf2.c	FUNCTION_71	IF_3	CALL_4
0x40051f3	     0xf855dfeffff	                           jne 0x4005056	      5010	dwarf2.c	FUNCTION_71	IF_3	IF_4
0x40051f9	     0xf1f80000000	                         nop dword [rax]	      5010	dwarf2.c	FUNCTION_71	IF_3	IF_4
0x4005200	            0x31c0	                            xor eax, eax	      5000	dwarf2.c	FUNCTION_71	IF_1
0x4005202	            0xeb90	                           jmp 0x4005194	      5000	dwarf2.c	FUNCTION_71	IF_1
0x4005204	         0xf1f4000	                         nop dword [rax]	      5000	dwarf2.c	FUNCTION_71	IF_1
0x4005208	        0x498b4708	                mov rax, qword [r15 + 8]	      5014	dwarf2.c	FUNCTION_71	IF_5
0x400520c	          0x4885c0	                           test rax, rax	      5014	dwarf2.c	FUNCTION_71	IF_5
0x400520f	     0xf844ffeffff	                            je 0x4005064	      5014	dwarf2.c	FUNCTION_71	IF_5
0x4005215	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5015	dwarf2.c	FUNCTION_71	IF_5
0x4005219	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      5015	dwarf2.c	FUNCTION_71	IF_5
0x400521e	          0x4839f0	                            cmp rax, rsi	      5015	dwarf2.c	FUNCTION_71	IF_5
0x4005221	     0xf873dfeffff	                            ja 0x4005064	      5015	dwarf2.c	FUNCTION_71	IF_5
0x4005227	        0x49034718	             add rax, qword [r15 + 0x18]	      5016	dwarf2.c	FUNCTION_71	IF_5
0x400522b	          0x4839c6	                            cmp rsi, rax	      5016	dwarf2.c	FUNCTION_71	IF_5
0x400522e	     0xf8330feffff	                           jae 0x4005064	      5016	dwarf2.c	FUNCTION_71	IF_5
0x4005234	      0xe92effffff	                           jmp 0x4005167	      5016	dwarf2.c	FUNCTION_71	IF_5
0x4005239	      0x4889542428	             mov qword [rsp + 0x28], rdx	      5016	dwarf2.c	FUNCTION_71	IF_5
0x400523e	      0xe9fdfeffff	                           jmp 0x4005140	      5016	dwarf2.c	FUNCTION_71	IF_5
0x4005243	      0xe800000000	                          call 0x4005248	      5084	dwarf2.c	FUNCTION_71
read_formatted_entries	FOR,3:CALL,19:WHILE,0:ELSE,0:IF,4:functions,0:SWITCH,2:DO,0	239
0x4001aa0	            0x4157	                                push r15	      1896	dwarf2.c	FUNCTION_34
0x4001aa2	            0x4156	                                push r14	      1896	dwarf2.c	FUNCTION_34
0x4001aa4	            0x4155	                                push r13	      1896	dwarf2.c	FUNCTION_34
0x4001aa6	            0x4154	                                push r12	      1896	dwarf2.c	FUNCTION_34
0x4001aa8	              0x55	                                push rbp	      1896	dwarf2.c	FUNCTION_34
0x4001aa9	              0x53	                                push rbx	      1896	dwarf2.c	FUNCTION_34
0x4001aaa	          0x4889d3	                            mov rbx, rdx	      1896	dwarf2.c	FUNCTION_34
0x4001aad	    0x4881ec980000	                           sub rsp, 0x98	      1896	dwarf2.c	FUNCTION_34
0x4001ab4	          0x488b06	                    mov rax, qword [rsi]	      1900	dwarf2.c	FUNCTION_34
0x4001ab7	        0x4c8b6710	            mov r12, qword [rdi + 0x10] 	      1897	dwarf2.c	FUNCTION_34
0x4001abb	      0x4889742440	             mov qword [rsp + 0x40], rsi	      1896	dwarf2.c	FUNCTION_34
0x4001ac0	      0x48894c2430	             mov qword [rsp + 0x30], rcx	      1896	dwarf2.c	FUNCTION_34
0x4001ac5	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      1896	dwarf2.c	FUNCTION_34
0x4001ace	    0x48898c248800	             mov qword [rsp + 0x88], rcx	      1896	dwarf2.c	FUNCTION_34
0x4001ad6	            0x31c9	                            xor ecx, ecx	      1896	dwarf2.c	FUNCTION_34
0x4001ad8	        0x488d7001	                      lea rsi, [rax + 1]	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001adc	        0x48893c24	                    mov qword [rsp], rdi	      1896	dwarf2.c	FUNCTION_34
0x4001ae0	      0x4c89442438	              mov qword [rsp + 0x38], r8	      1896	dwarf2.c	FUNCTION_34
0x4001ae5	          0x4839f2	                            cmp rdx, rsi	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001ae8	      0x4889742420	             mov qword [rsp + 0x20], rsi	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001aed	            0x7351	                           jae 0x4001b40	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001aef	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4001af4	      0x488d542450	                   lea rdx, [rsp + 0x50]	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4001af9	            0x31c9	                            xor ecx, ecx	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4001afb	          0x4989d8	                             mov r8, rbx	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4001afe	          0x4c89e7	                            mov rdi, r12	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4001b01	      0xe800000000	                          call 0x4001b06	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4001b06	          0x4885c0	                           test rax, rax	      1917	dwarf2.c	FUNCTION_34	IF_1
0x4001b09	     0xf847d030000	                            je 0x4001e8c	      1917	dwarf2.c	FUNCTION_34	IF_1
0x4001b0f	      0xba05000000	                              mov edx, 5	      1919	dwarf2.c	FUNCTION_34	IF_1	CALL_7
0x4001b14	      0xbe00000000	                              mov esi, 0	      1919	dwarf2.c	FUNCTION_34	IF_1	CALL_7
0x4001b19	      0xbf00000000	                              mov edi, 0	      1919	dwarf2.c	FUNCTION_34	IF_1	CALL_7
0x4001b1e	      0xe800000000	                          call 0x4001b23	      1919	dwarf2.c	FUNCTION_34	IF_1	CALL_7
0x4001b23	          0x4889c7	                            mov rdi, rax	      1919	dwarf2.c	FUNCTION_34	IF_1	CALL_7
0x4001b26	            0x31c0	                            xor eax, eax	      1919	dwarf2.c	FUNCTION_34	IF_1	CALL_7
0x4001b28	      0xe800000000	                          call 0x4001b2d	      1919	dwarf2.c	FUNCTION_34	IF_1	CALL_7
0x4001b2d	      0xbf11000000	                           mov edi, 0x11	      1920	dwarf2.c	FUNCTION_34	IF_1	CALL_8
0x4001b32	      0xe800000000	                          call 0x4001b37	      1920	dwarf2.c	FUNCTION_34	IF_1	CALL_8
0x4001b37	            0x31c0	                            xor eax, eax	      1921	dwarf2.c	FUNCTION_34	IF_1
0x4001b39	      0xe99a020000	                           jmp 0x4001dd8	      1921	dwarf2.c	FUNCTION_34	IF_1
0x4001b3e	            0x6690	                                     nop	      1921	dwarf2.c	FUNCTION_34	IF_1
0x4001b40	        0x440fb638	                  movzx r15d, byte [rax]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4001b44	          0x4584ff	                         test r15b, r15b	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4001b47	            0x74a6	                            je 0x4001aef	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4001b49	          0x4889f5	                            mov rbp, rsi	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4001b4c	          0x4531ed	                          xor r13d, r13d	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4001b4f	              0x90	                                     nop	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4001b50	      0x488d542450	                   lea rdx, [rsp + 0x50]	      1909	dwarf2.c	FUNCTION_34	FOR_1	CALL_3
0x4001b55	            0x31c9	                            xor ecx, ecx	      1909	dwarf2.c	FUNCTION_34	FOR_1	CALL_3
0x4001b57	          0x4889ee	                            mov rsi, rbp	      1909	dwarf2.c	FUNCTION_34	FOR_1	CALL_3
0x4001b5a	          0x4989d8	                             mov r8, rbx	      1909	dwarf2.c	FUNCTION_34	FOR_1	CALL_3
0x4001b5d	          0x4c89e7	                            mov rdi, r12	      1909	dwarf2.c	FUNCTION_34	FOR_1	CALL_3
0x4001b60	        0x4183c501	                             add r13d, 1	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4001b64	      0xe800000000	                          call 0x4001b69	      1909	dwarf2.c	FUNCTION_34	FOR_1	CALL_3
0x4001b69	        0x8b442450	            mov eax, dword [rsp + 0x50] 	      1910	dwarf2.c	FUNCTION_34	FOR_1
0x4001b6d	      0x488d542450	                   lea rdx, [rsp + 0x50]	      1911	dwarf2.c	FUNCTION_34	FOR_1	CALL_4
0x4001b72	            0x31c9	                            xor ecx, ecx	      1911	dwarf2.c	FUNCTION_34	FOR_1	CALL_4
0x4001b74	          0x4989d8	                             mov r8, rbx	      1911	dwarf2.c	FUNCTION_34	FOR_1	CALL_4
0x4001b77	          0x4c89e7	                            mov rdi, r12	      1911	dwarf2.c	FUNCTION_34	FOR_1	CALL_4
0x4001b7a	          0x4801c5	                            add rbp, rax	      1910	dwarf2.c	FUNCTION_34	FOR_1
0x4001b7d	          0x4889ee	                            mov rsi, rbp	      1911	dwarf2.c	FUNCTION_34	FOR_1	CALL_4
0x4001b80	      0xe800000000	                          call 0x4001b85	      1911	dwarf2.c	FUNCTION_34	FOR_1	CALL_4
0x4001b85	        0x8b442450	            mov eax, dword [rsp + 0x50] 	      1912	dwarf2.c	FUNCTION_34	FOR_1
0x4001b89	          0x4801c5	                            add rbp, rax	      1912	dwarf2.c	FUNCTION_34	FOR_1
0x4001b8c	          0x4538fd	                          cmp r13b, r15b	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4001b8f	            0x75bf	                           jne 0x4001b50	      1907	dwarf2.c	FUNCTION_34	FOR_1
0x4001b91	      0x488d542450	                   lea rdx, [rsp + 0x50]	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4001b96	            0x31c9	                            xor ecx, ecx	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4001b98	          0x4c89e7	                            mov rdi, r12	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4001b9b	          0x4989d8	                             mov r8, rbx	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4001b9e	          0x4889ee	                            mov rsi, rbp	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4001ba1	      0xe800000000	                          call 0x4001ba6	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4001ba6	          0x4889c2	                            mov rdx, rax	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4001ba9	      0x4889442428	             mov qword [rsp + 0x28], rax	      1915	dwarf2.c	FUNCTION_34	CALL_5
0x4001bae	        0x8b442450	            mov eax, dword [rsp + 0x50] 	      1916	dwarf2.c	FUNCTION_34
0x4001bb2	      0x488d4c0500	                    lea rcx, [rbp + rax]	      1916	dwarf2.c	FUNCTION_34
0x4001bb7	          0x4889d8	                            mov rax, rbx	      1926	dwarf2.c	FUNCTION_34	IF_2
0x4001bba	          0x4829c8	                            sub rax, rcx	      1926	dwarf2.c	FUNCTION_34	IF_2
0x4001bbd	          0x4889cf	                            mov rdi, rcx	      1916	dwarf2.c	FUNCTION_34
0x4001bc0	          0x4839c2	                            cmp rdx, rax	      1926	dwarf2.c	FUNCTION_34	IF_2
0x4001bc3	     0xf878f020000	                            ja 0x4001e58	      1926	dwarf2.c	FUNCTION_34	IF_2
0x4001bc9	    0x48837c242800	               cmp qword [rsp + 0x28], 0	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4001bcf	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4001bd8	     0xf8432010000	                            je 0x4001d10	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4001bde	      0x44887c2417	             mov byte [rsp + 0x17], r15b	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4001be3	          0x4989fd	                            mov r13, rdi	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4001be6	          0x4d89e7	                            mov r15, r12	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4001be9	      0x488b6c2420	            mov rbp, qword [rsp + 0x20] 	        90	string3.h	FUNCTION_75	CALL_6
0x4001bee	    0x48c744247000	               mov qword [rsp + 0x70], 0	        90	string3.h	FUNCTION_75	CALL_6
0x4001bf7	          0x4531e4	                          xor r12d, r12d	        90	string3.h	FUNCTION_75	CALL_6
0x4001bfa	    0x48c744247800	               mov qword [rsp + 0x78], 0	        90	string3.h	FUNCTION_75	CALL_6
0x4001c03	    0x48c784248000	               mov qword [rsp + 0x80], 0	        90	string3.h	FUNCTION_75	CALL_6
0x4001c0f	      0x488d542450	                   lea rdx, [rsp + 0x50]	      1949	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_13
0x4001c14	            0x31c9	                            xor ecx, ecx	      1949	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_13
0x4001c16	          0x4889ee	                            mov rsi, rbp	      1949	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_13
0x4001c19	          0x4989d8	                             mov r8, rbx	      1949	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_13
0x4001c1c	          0x4c89ff	                            mov rdi, r15	      1949	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_13
0x4001c1f	      0xe800000000	                          call 0x4001c24	      1949	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_13
0x4001c24	        0x8b542450	            mov edx, dword [rsp + 0x50] 	      1951	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001c28	          0x4801d5	                            add rbp, rdx	      1951	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001c2b	        0x4883f805	                              cmp rax, 5	      1952	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4001c2f	     0xf8773010000	                            ja 0x4001da8	      1952	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4001c35	    0xff24c5000000	                       jmp qword [rax*8]	      1952	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4001c3c	         0xf1f4000	                         nop dword [rax]	      1952	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4001c40	      0x488d442454	                   lea rax, [rsp + 0x54]	      1946	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001c45	      0x4889442408	                mov qword [rsp + 8], rax	      1946	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001c4a	      0x488d442470	                   lea rax, [rsp + 0x70]	      1955	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4001c4f	      0x4889442418	             mov qword [rsp + 0x18], rax	      1955	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4001c54	      0x488d542450	                   lea rdx, [rsp + 0x50]	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x4001c59	            0x31c9	                            xor ecx, ecx	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x4001c5b	          0x4889ee	                            mov rsi, rbp	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x4001c5e	          0x4989d8	                             mov r8, rbx	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x4001c61	          0x4c89ff	                            mov rdi, r15	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x4001c64	      0xe800000000	                          call 0x4001c69	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x4001c69	          0x4989c6	                            mov r14, rax	      1976	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_17
0x4001c6c	        0x8b442450	            mov eax, dword [rsp + 0x50] 	      1978	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001c70	        0x488b0c24	                    mov rcx, qword [rsp]	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4001c74	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4001c79	          0x4d89e8	                             mov r8, r13	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4001c7c	            0x31d2	                            xor edx, edx	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4001c7e	          0x4989d9	                             mov r9, rbx	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4001c81	          0x4489f6	                           mov esi, r14d	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4001c84	          0x4801c5	                            add rbp, rax	      1978	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001c87	      0xe824f3ffff	           call sym.read_attribute_value	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4001c8c	          0x4885c0	                           test rax, rax	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x4001c8f	          0x4989c5	                            mov r13, rax	      1980	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	CALL_18
0x4001c92	     0xf843e010000	                            je 0x4001dd6	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x4001c98	        0x4983fe1f	                           cmp r14, 0x1f	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x4001c9c	            0x7721	                            ja 0x4001cbf	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x4001c9e	      0xb801000000	                              mov eax, 1	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x4001ca3	          0x4489f1	                           mov ecx, r14d	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x4001ca6	          0x48d3e0	                             shl rax, cl	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x4001ca9	      0xa9e0880000	                        test eax, 0x88e0	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x4001cae	     0xf8554010000	                           jne 0x4001e08	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x4001cb4	      0xa900010080	                    test eax, 0x80000100	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x4001cb9	     0xf8571010000	                           jne 0x4001e30	      1981	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	IF_3
0x4001cbf	        0x4183c401	                             add r12d, 1	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001cc3	      0x443a642417	            cmp r12b, byte [rsp + 0x17] 	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001cc8	     0xf8541ffffff	                           jne 0x4001c0f	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001cce	    0x448b84248000	            mov r8d, dword [rsp + 0x80] 	      2000	dwarf2.c	FUNCTION_34	FOR_2	IF_4	CALL_19
0x4001cd6	        0x8b4c247c	            mov ecx, dword [rsp + 0x7c] 	      2000	dwarf2.c	FUNCTION_34	FOR_2	IF_4	CALL_19
0x4001cda	        0x8b542478	            mov edx, dword [rsp + 0x78] 	      2000	dwarf2.c	FUNCTION_34	FOR_2	IF_4	CALL_19
0x4001cde	      0x488b742470	            mov rsi, qword [rsp + 0x70] 	      2000	dwarf2.c	FUNCTION_34	FOR_2	IF_4	CALL_19
0x4001ce3	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2000	dwarf2.c	FUNCTION_34	FOR_2	IF_4	CALL_19
0x4001ce8	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      2000	dwarf2.c	FUNCTION_34	FOR_2	IF_4	CALL_19
0x4001ced	            0xffd0	                                call rax	      2000	dwarf2.c	FUNCTION_34	FOR_2	IF_4	CALL_19
0x4001cef	            0x85c0	                           test eax, eax	      2000	dwarf2.c	FUNCTION_34	FOR_2	IF_4	CALL_19
0x4001cf1	     0xf84df000000	                            je 0x4001dd6	      2000	dwarf2.c	FUNCTION_34	FOR_2	IF_4	CALL_19
0x4001cf7	    0x488344244801	               add qword [rsp + 0x48], 1	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4001cfd	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4001d02	      0x4839442428	            cmp qword [rsp + 0x28], rax 	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4001d07	     0xf87dcfeffff	                            ja 0x4001be9	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4001d0d	          0x4c89ef	                            mov rdi, r13	      1935	dwarf2.c	FUNCTION_34	FOR_2
0x4001d10	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      2004	dwarf2.c	FUNCTION_34
0x4001d15	          0x488938	                    mov qword [rax], rdi	      2004	dwarf2.c	FUNCTION_34
0x4001d18	      0xb801000000	                              mov eax, 1	      2005	dwarf2.c	FUNCTION_34
0x4001d1d	      0xe9b6000000	                           jmp 0x4001dd8	      2005	dwarf2.c	FUNCTION_34
0x4001d22	    0x660f1f440000	                    nop word [rax + rax]	      2005	dwarf2.c	FUNCTION_34
0x4001d28	      0x488d442454	                   lea rax, [rsp + 0x54]	      1946	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001d2d	      0x4889442408	                mov qword [rsp + 8], rax	      1946	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001d32	      0x488d442458	                   lea rax, [rsp + 0x58]	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001d37	      0x4889442418	             mov qword [rsp + 0x18], rax	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001d3c	      0xe913ffffff	                           jmp 0x4001c54	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001d41	     0xf1f80000000	                         nop dword [rax]	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001d48	      0x488d44247c	                   lea rax, [rsp + 0x7c]	      1961	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4001d4d	      0x4889442408	                mov qword [rsp + 8], rax	      1961	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4001d52	      0x488d442458	                   lea rax, [rsp + 0x58]	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001d57	      0x4889442418	             mov qword [rsp + 0x18], rax	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001d5c	      0xe9f3feffff	                           jmp 0x4001c54	      1962	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4001d61	     0xf1f80000000	                         nop dword [rax]	      1962	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4001d68	      0x488d442478	                   lea rax, [rsp + 0x78]	      1958	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4001d6d	      0x4889442408	                mov qword [rsp + 8], rax	      1958	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4001d72	      0x488d442458	                   lea rax, [rsp + 0x58]	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001d77	      0x4889442418	             mov qword [rsp + 0x18], rax	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001d7c	      0xe9d3feffff	                           jmp 0x4001c54	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001d81	     0xf1f80000000	                         nop dword [rax]	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001d88	    0x488d84248000	                   lea rax, [rsp + 0x80]	      1964	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4001d90	      0x4889442408	                mov qword [rsp + 8], rax	      1964	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4001d95	      0x488d442458	                   lea rax, [rsp + 0x58]	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001d9a	      0x4889442418	             mov qword [rsp + 0x18], rax	      1945	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001d9f	      0xe9b0feffff	                           jmp 0x4001c54	      1965	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4001da4	         0xf1f4000	                         nop dword [rax]	      1965	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4001da8	          0x4989c6	                            mov r14, rax	      1965	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1
0x4001dab	      0xba05000000	                              mov edx, 5	      1970	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_15
0x4001db0	      0xbe00000000	                              mov esi, 0	      1970	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_15
0x4001db5	      0xbf00000000	                              mov edi, 0	      1970	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_15
0x4001dba	      0xe800000000	                          call 0x4001dbf	      1970	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_15
0x4001dbf	          0x4c89f6	                            mov rsi, r14	      1969	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_14
0x4001dc2	          0x4889c7	                            mov rdi, rax	      1969	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_14
0x4001dc5	            0x31c0	                            xor eax, eax	      1969	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_14
0x4001dc7	      0xe800000000	                          call 0x4001dcc	      1969	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_14
0x4001dcc	      0xbf11000000	                           mov edi, 0x11	      1972	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_16
0x4001dd1	      0xe800000000	                          call 0x4001dd6	      1972	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_16
0x4001dd6	            0x31c0	                            xor eax, eax	      1972	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_1	CALL_16
0x4001dd8	    0x488b9c248800	            mov rbx, qword [rsp + 0x88] 	      2006	dwarf2.c	FUNCTION_34
0x4001de0	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2006	dwarf2.c	FUNCTION_34
0x4001de9	     0xf85ae000000	                           jne 0x4001e9d	      2006	dwarf2.c	FUNCTION_34
0x4001def	    0x4881c4980000	                           add rsp, 0x98	      2006	dwarf2.c	FUNCTION_34
0x4001df6	              0x5b	                                 pop rbx	      2006	dwarf2.c	FUNCTION_34
0x4001df7	              0x5d	                                 pop rbp	      2006	dwarf2.c	FUNCTION_34
0x4001df8	            0x415c	                                 pop r12	      2006	dwarf2.c	FUNCTION_34
0x4001dfa	            0x415d	                                 pop r13	      2006	dwarf2.c	FUNCTION_34
0x4001dfc	            0x415e	                                 pop r14	      2006	dwarf2.c	FUNCTION_34
0x4001dfe	            0x415f	                                 pop r15	      2006	dwarf2.c	FUNCTION_34
0x4001e00	              0xc3	                                     ret	      2006	dwarf2.c	FUNCTION_34
0x4001e01	     0xf1f80000000	                         nop dword [rax]	      2006	dwarf2.c	FUNCTION_34
0x4001e08	        0x4183c401	                             add r12d, 1	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001e0c	      0x443a642417	            cmp r12b, byte [rsp + 0x17] 	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001e11	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      1995	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4001e16	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1995	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4001e1b	            0x8907	                    mov dword [rdi], eax	      1995	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4001e1d	     0xf85ecfdffff	                           jne 0x4001c0f	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001e23	      0xe9a6feffff	                           jmp 0x4001cce	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001e28	     0xf1f84000000	                   nop dword [rax + rax]	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001e30	        0x4183c401	                             add r12d, 1	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001e34	      0x443a642417	            cmp r12b, byte [rsp + 0x17] 	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001e39	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      1987	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4001e3e	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1987	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4001e43	          0x488907	                    mov qword [rdi], rax	      1987	dwarf2.c	FUNCTION_34	FOR_2	FOR_3	SWITCH_2
0x4001e46	     0xf85c3fdffff	                           jne 0x4001c0f	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001e4c	      0xe97dfeffff	                           jmp 0x4001cce	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001e51	     0xf1f80000000	                         nop dword [rax]	      1941	dwarf2.c	FUNCTION_34	FOR_2	FOR_3
0x4001e58	      0xba05000000	                              mov edx, 5	      1929	dwarf2.c	FUNCTION_34	IF_2	CALL_10
0x4001e5d	      0xbe00000000	                              mov esi, 0	      1929	dwarf2.c	FUNCTION_34	IF_2	CALL_10
0x4001e62	      0xbf00000000	                              mov edi, 0	      1929	dwarf2.c	FUNCTION_34	IF_2	CALL_10
0x4001e67	      0xe800000000	                          call 0x4001e6c	      1929	dwarf2.c	FUNCTION_34	IF_2	CALL_10
0x4001e6c	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      1928	dwarf2.c	FUNCTION_34	IF_2	CALL_9
0x4001e71	          0x4889c7	                            mov rdi, rax	      1928	dwarf2.c	FUNCTION_34	IF_2	CALL_9
0x4001e74	            0x31c0	                            xor eax, eax	      1928	dwarf2.c	FUNCTION_34	IF_2	CALL_9
0x4001e76	      0xe800000000	                          call 0x4001e7b	      1928	dwarf2.c	FUNCTION_34	IF_2	CALL_9
0x4001e7b	      0xbf11000000	                           mov edi, 0x11	      1931	dwarf2.c	FUNCTION_34	IF_2	CALL_11
0x4001e80	      0xe800000000	                          call 0x4001e85	      1931	dwarf2.c	FUNCTION_34	IF_2	CALL_11
0x4001e85	            0x31c0	                            xor eax, eax	      1932	dwarf2.c	FUNCTION_34	IF_2
0x4001e87	      0xe94cffffff	                           jmp 0x4001dd8	      1932	dwarf2.c	FUNCTION_34	IF_2
0x4001e8c	        0x8b442450	            mov eax, dword [rsp + 0x50] 	      1916	dwarf2.c	FUNCTION_34
0x4001e90	      0x4803442420	             add rax, qword [rsp + 0x20]	      1916	dwarf2.c	FUNCTION_34
0x4001e95	          0x4889c7	                            mov rdi, rax	      1916	dwarf2.c	FUNCTION_34
0x4001e98	      0xe973feffff	                           jmp 0x4001d10	      1916	dwarf2.c	FUNCTION_34
0x4001e9d	      0xe800000000	                          call 0x4001ea2	      2006	dwarf2.c	FUNCTION_34
scan_unit_for_symbols	FOR,2:CALL,24:WHILE,1:ELSE,2:IF,29:functions,0:SWITCH,3:DO,0	483
0x40035a0	            0x4157	                                push r15	      3041	dwarf2.c	FUNCTION_45
0x40035a2	            0x4156	                                push r14	      3041	dwarf2.c	FUNCTION_45
0x40035a4	          0x4989fe	                            mov r14, rdi	      3041	dwarf2.c	FUNCTION_45
0x40035a7	            0x4155	                                push r13	      3041	dwarf2.c	FUNCTION_45
0x40035a9	            0x4154	                                push r12	      3041	dwarf2.c	FUNCTION_45
0x40035ab	              0x55	                                push rbp	      3041	dwarf2.c	FUNCTION_45
0x40035ac	              0x53	                                push rbx	      3041	dwarf2.c	FUNCTION_45
0x40035ad	    0x4881ec980000	                           sub rsp, 0x98	      3041	dwarf2.c	FUNCTION_45
0x40035b4	        0x488b6f68	            mov rbp, qword [rdi + 0x68] 	      3043	dwarf2.c	FUNCTION_45
0x40035b8	    0x64488b042528	                mov rax, qword fs:[0x28]	      3041	dwarf2.c	FUNCTION_45
0x40035c1	    0x488984248800	             mov qword [rsp + 0x88], rax	      3041	dwarf2.c	FUNCTION_45
0x40035c9	            0x31c0	                            xor eax, eax	      3041	dwarf2.c	FUNCTION_45
0x40035cb	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      3042	dwarf2.c	FUNCTION_45
0x40035cf	      0x4889442408	                mov qword [rsp + 8], rax	      3042	dwarf2.c	FUNCTION_45
0x40035d4	    0x488b87a00000	            mov rax, qword [rdi + 0xa0] 	      3044	dwarf2.c	FUNCTION_45
0x40035db	      0xbf00010000	                          mov edi, 0x100	      3054	dwarf2.c	FUNCTION_45
0x40035e0	        0x4c8b6020	            mov r12, qword [rax + 0x20] 	      3044	dwarf2.c	FUNCTION_45
0x40035e4	      0xe800000000	                          call 0x40035e9	      3054	dwarf2.c	FUNCTION_45
0x40035e9	          0x4889c1	                            mov rcx, rax	      3054	dwarf2.c	FUNCTION_45
0x40035ec	        0x48890424	                    mov qword [rsp], rax	      3054	dwarf2.c	FUNCTION_45
0x40035f0	            0x31c0	                            xor eax, eax	      3057	dwarf2.c	FUNCTION_45	IF_1
0x40035f2	          0x4885c9	                           test rcx, rcx	      3056	dwarf2.c	FUNCTION_45	IF_1
0x40035f5	            0x7529	                           jne 0x4003620	      3056	dwarf2.c	FUNCTION_45	IF_1
0x40035f7	    0x488b9c248800	            mov rbx, qword [rsp + 0x88] 	      3321	dwarf2.c	FUNCTION_45
0x40035ff	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      3321	dwarf2.c	FUNCTION_45
0x4003608	     0xf8577070000	                           jne 0x4003d85	      3321	dwarf2.c	FUNCTION_45
0x400360e	    0x4881c4980000	                           add rsp, 0x98	      3321	dwarf2.c	FUNCTION_45
0x4003615	              0x5b	                                 pop rbx	      3321	dwarf2.c	FUNCTION_45
0x4003616	              0x5d	                                 pop rbp	      3321	dwarf2.c	FUNCTION_45
0x4003617	            0x415c	                                 pop r12	      3321	dwarf2.c	FUNCTION_45
0x4003619	            0x415d	                                 pop r13	      3321	dwarf2.c	FUNCTION_45
0x400361b	            0x415e	                                 pop r14	      3321	dwarf2.c	FUNCTION_45
0x400361d	            0x415f	                                 pop r15	      3321	dwarf2.c	FUNCTION_45
0x400361f	              0xc3	                                     ret	      3321	dwarf2.c	FUNCTION_45
0x4003620	          0x4c39e5	                            cmp rbp, r12	      3072	dwarf2.c	FUNCTION_45	WHILE_1	IF_2
0x4003623	    0x48c701000000	                      mov qword [rcx], 0	      3058	dwarf2.c	FUNCTION_45
0x400362a	            0x735c	                           jae 0x4003688	      3072	dwarf2.c	FUNCTION_45	WHILE_1	IF_2
0x400362c	        0x498d4610	                   lea rax, [r14 + 0x10]	      3072	dwarf2.c	FUNCTION_45	WHILE_1	IF_2
0x4003630	    0xc74424542000	           mov dword [rsp + 0x54], 0x20 	      3072	dwarf2.c	FUNCTION_45	WHILE_1	IF_2
0x4003638	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      3072	dwarf2.c	FUNCTION_45	WHILE_1	IF_2
0x4003640	      0x4889442458	             mov qword [rsp + 0x58], rax	      3072	dwarf2.c	FUNCTION_45	WHILE_1	IF_2
0x4003645	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3075	dwarf2.c	FUNCTION_45	WHILE_1	CALL_2
0x400364a	      0x488d54246c	                   lea rdx, [rsp + 0x6c]	      3075	dwarf2.c	FUNCTION_45	WHILE_1	CALL_2
0x400364f	            0x31c9	                            xor ecx, ecx	      3075	dwarf2.c	FUNCTION_45	WHILE_1	CALL_2
0x4003651	          0x4889ee	                            mov rsi, rbp	      3075	dwarf2.c	FUNCTION_45	WHILE_1	CALL_2
0x4003654	          0x4d89e0	                             mov r8, r12	      3075	dwarf2.c	FUNCTION_45	WHILE_1	CALL_2
0x4003657	      0xe800000000	                          call 0x400365c	      3075	dwarf2.c	FUNCTION_45	WHILE_1	CALL_2
0x400365c	          0x4889c1	                            mov rcx, rax	      3075	dwarf2.c	FUNCTION_45	WHILE_1	CALL_2
0x400365f	            0x89c3	                            mov ebx, eax	      3075	dwarf2.c	FUNCTION_45	WHILE_1	CALL_2
0x4003661	        0x8b44246c	            mov eax, dword [rsp + 0x6c] 	      3077	dwarf2.c	FUNCTION_45	WHILE_1
0x4003665	          0x4801c5	                            add rbp, rax	      3077	dwarf2.c	FUNCTION_45	WHILE_1
0x4003668	            0x85c9	                           test ecx, ecx	      3079	dwarf2.c	FUNCTION_45	WHILE_1	IF_3
0x400366a	            0x7534	                           jne 0x40036a0	      3079	dwarf2.c	FUNCTION_45	WHILE_1	IF_3
0x400366c	      0x836c241c01	               sub dword [rsp + 0x1c], 1	      3081	dwarf2.c	FUNCTION_45	WHILE_1	IF_3
0x4003671	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      3081	dwarf2.c	FUNCTION_45	WHILE_1	IF_3
0x4003675	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3060	dwarf2.c	FUNCTION_45	WHILE_1
0x4003678	     0xf84f4060000	                            je 0x4003d72	      3060	dwarf2.c	FUNCTION_45	WHILE_1
0x400367e	          0x4939ec	                            cmp r12, rbp	      3072	dwarf2.c	FUNCTION_45	WHILE_1	IF_2
0x4003681	            0x77c2	                            ja 0x4003645	      3072	dwarf2.c	FUNCTION_45	WHILE_1	IF_2
0x4003683	       0xf1f440000	                   nop dword [rax + rax]	      3072	dwarf2.c	FUNCTION_45	WHILE_1	IF_2
0x4003688	        0x488b3c24	                    mov rdi, qword [rsp]	      3319	dwarf2.c	FUNCTION_45	CALL_24
0x400368c	      0xe800000000	                          call 0x4003691	      3319	dwarf2.c	FUNCTION_45	CALL_24
0x4003691	            0x31c0	                            xor eax, eax	      3320	dwarf2.c	FUNCTION_45
0x4003693	      0xe95fffffff	                           jmp 0x40035f7	      3320	dwarf2.c	FUNCTION_45
0x4003698	     0xf1f84000000	                   nop dword [rax + rax]	      3320	dwarf2.c	FUNCTION_45
0x40036a0	            0x89c8	                            mov eax, ecx	       925	dwarf2.c	FUNCTION_18
0x40036a2	      0xbabf56cf0e	                      mov edx, 0xecf56bf	       925	dwarf2.c	FUNCTION_18
0x40036a7	            0xf7e2	                                 mul edx	       925	dwarf2.c	FUNCTION_18
0x40036a9	            0x89c8	                            mov eax, ecx	       925	dwarf2.c	FUNCTION_18
0x40036ab	            0x29d0	                            sub eax, edx	       925	dwarf2.c	FUNCTION_18
0x40036ad	            0xd1e8	                              shr eax, 1	       925	dwarf2.c	FUNCTION_18
0x40036af	             0x1d0	                            add eax, edx	       925	dwarf2.c	FUNCTION_18
0x40036b1	            0x89ca	                            mov edx, ecx	       925	dwarf2.c	FUNCTION_18
0x40036b3	          0xc1e806	                              shr eax, 6	       925	dwarf2.c	FUNCTION_18
0x40036b6	          0x6bc079	                     imul eax, eax, 0x79	       925	dwarf2.c	FUNCTION_18
0x40036b9	            0x29c2	                            sub edx, eax	       925	dwarf2.c	FUNCTION_18
0x40036bb	        0x498b4638	            mov rax, qword [r14 + 0x38] 	       925	dwarf2.c	FUNCTION_18
0x40036bf	        0x4c8b2cd0	            mov r13, qword [rax + rdx*8]	       925	dwarf2.c	FUNCTION_18
0x40036c3	          0x4d85ed	                           test r13, r13	       927	dwarf2.c	FUNCTION_18	WHILE_1
0x40036c6	            0x7417	                            je 0x40036df	       927	dwarf2.c	FUNCTION_18	WHILE_1
0x40036c8	        0x413b4d00	                    cmp ecx, dword [r13]	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x40036cc	            0x7508	                           jne 0x40036d6	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x40036ce	            0xeb50	                           jmp 0x4003720	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x40036d0	        0x413b5d00	                    cmp ebx, dword [r13]	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x40036d4	            0x744a	                            je 0x4003720	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x40036d6	        0x4d8b6d18	            mov r13, qword [r13 + 0x18] 	       932	dwarf2.c	FUNCTION_18	WHILE_1	ELSE_1
0x40036da	          0x4d85ed	                           test r13, r13	       927	dwarf2.c	FUNCTION_18	WHILE_1
0x40036dd	            0x75f1	                           jne 0x40036d0	       927	dwarf2.c	FUNCTION_18	WHILE_1
0x40036df	    0x3b1d00000000	            cmp ebx, dword [0x040036e5] 	      3091	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5
0x40036e5	            0x7429	                            je 0x4003710	      3091	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5
0x40036e7	      0xba05000000	                              mov edx, 5	      3094	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5	CALL_5
0x40036ec	      0xbe00000000	                              mov esi, 0	      3094	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5	CALL_5
0x40036f1	      0xbf00000000	                              mov edi, 0	      3094	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5	CALL_5
0x40036f6	      0xe800000000	                          call 0x40036fb	      3094	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5	CALL_5
0x40036fb	            0x89de	                            mov esi, ebx	      3093	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5	CALL_4
0x40036fd	          0x4889c7	                            mov rdi, rax	      3093	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5	CALL_4
0x4003700	            0x31c0	                            xor eax, eax	      3093	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5	CALL_4
0x4003702	      0xe800000000	                          call 0x4003707	      3093	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5	CALL_4
0x4003707	    0x891d00000000	            mov dword [0x0400370d], ebx 	      3096	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5
0x400370d	           0xf1f00	                         nop dword [rax]	      3096	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	IF_5
0x4003710	      0xbf11000000	                           mov edi, 0x11	      3098	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	CALL_6
0x4003715	      0xe800000000	                          call 0x400371a	      3098	dwarf2.c	FUNCTION_45	WHILE_1	IF_4	CALL_6
0x400371a	      0xe969ffffff	                           jmp 0x4003688	      3099	dwarf2.c	FUNCTION_45	WHILE_1	IF_4
0x400371f	              0x90	                                     nop	      3099	dwarf2.c	FUNCTION_45	WHILE_1	IF_4
0x4003720	        0x418b4504	                mov eax, dword [r13 + 4]	      3103	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4003724	          0x83f82e	                           cmp eax, 0x2e	      3104	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4003727	     0xf8673030000	                           jbe 0x4003aa0	      3104	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x400372d	          0x83f834	                           cmp eax, 0x34	      3129	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x4003730	     0xf84ca050000	                            je 0x4003d00	      3129	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x4003736	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3102	dwarf2.c	FUNCTION_45	WHILE_1
0x400373f	      0x486344241c	         movsxd rax, dword [rsp + 0x1c] 	      3144	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1
0x4003744	        0x488b1c24	                    mov rbx, qword [rsp]	      3144	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1
0x4003748	    0x48c704c30000	              mov qword [rbx + rax*8], 0	      3144	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1
0x4003750	            0x31db	                            xor ebx, ebx	      3128	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1
0x4003752	        0x418b7d0c	              mov edi, dword [r13 + 0xc]	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x4003756	            0x85ff	                           test edi, edi	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x4003758	     0xf84ea040000	                            je 0x4003c48	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x400375e	        0x488d432c	                   lea rax, [rbx + 0x2c]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4003762	          0x4531ff	                          xor r15d, r15d	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x4003765	    0xc74424500000	               mov dword [rsp + 0x50], 0	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x400376d	    0x48c744242800	               mov qword [rsp + 0x28], 0	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x4003776	    0x48c744242000	               mov qword [rsp + 0x20], 0	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x400377f	      0x4889442430	             mov qword [rsp + 0x30], rax	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4003784	        0x488d4330	                   lea rax, [rbx + 0x30]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4003788	      0x4889442438	             mov qword [rsp + 0x38], rax	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x400378d	        0x488d4324	                   lea rax, [rbx + 0x24]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4003791	      0x4889442440	             mov qword [rsp + 0x40], rax	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4003796	        0x488d4318	                   lea rax, [rbx + 0x18]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x400379a	      0x4889442448	             mov qword [rsp + 0x48], rax	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x400379f	          0x4889e8	                            mov rax, rbp	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x40037a2	          0x4489fd	                           mov ebp, r15d	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x40037a5	          0x4989c7	                            mov r15, rax	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x40037a8	            0xeb43	                           jmp 0x40037ed	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x40037aa	    0x660f1f440000	                    nop word [rax + rax]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x40037b0	          0x83f812	                           cmp eax, 0x12	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40037b3	     0xf8487010000	                            je 0x4003940	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40037b9	     0xf8721010000	                            ja 0x40038e0	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40037bf	          0x83f803	                              cmp eax, 3	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40037c2	     0xf84a8010000	                            je 0x4003970	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40037c8	          0x83f811	                           cmp eax, 0x11	      3200	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40037cb	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      3200	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40037d0	    0x480f44442478	           cmove rax, qword [rsp + 0x78]	      3200	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40037d6	      0x4889442420	             mov qword [rsp + 0x20], rax	      3200	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40037db	       0xf1f440000	                   nop dword [rax + rax]	      3200	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40037e0	          0x83c501	                              add ebp, 1	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x40037e3	        0x41396d0c	              cmp dword [r13 + 0xc], ebp	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x40037e7	     0xf8613040000	                           jbe 0x4003c00	      3147	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2
0x40037ed	            0x89e8	                            mov eax, ebp	      3149	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	CALL_10
0x40037ef	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x40037f4	          0x4d89f8	                             mov r8, r15	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x40037f7	        0x48c1e004	                              shl rax, 4	      3149	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	CALL_10
0x40037fb	        0x49034510	             add rax, qword [r13 + 0x10]	      3149	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	CALL_10
0x40037ff	          0x4d89e1	                             mov r9, r12	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4003802	          0x4c89f1	                            mov rcx, r14	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4003805	            0x8b10	                    mov edx, dword [rax]	      1285	dwarf2.c	FUNCTION_22
0x4003807	          0x8b7004	                mov esi, dword [rax + 4]	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x400380a	        0x89542470	             mov dword [rsp + 0x70], edx	      1285	dwarf2.c	FUNCTION_22
0x400380e	        0x488b5008	                mov rdx, qword [rax + 8]	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4003812	      0xe899d7ffff	           call sym.read_attribute_value	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4003817	          0x4885c0	                           test rax, rax	      3151	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_12
0x400381a	          0x4989c7	                            mov r15, rax	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x400381d	     0xf8465feffff	                            je 0x4003688	      3151	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_12
0x4003823	          0x4885db	                           test rbx, rbx	      3154	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13
0x4003826	            0x7450	                            je 0x4003878	      3154	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13
0x4003828	        0x8b442470	            mov eax, dword [rsp + 0x70] 	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x400382c	          0x83f83b	                           cmp eax, 0x3b	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x400382f	     0xf842b010000	                            je 0x4003960	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003835	     0xf8675ffffff	                           jbe 0x40037b0	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x400383b	          0x83f858	                           cmp eax, 0x58	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x400383e	     0xf84cc010000	                            je 0x4003a10	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003844	     0xf86c6000000	                           jbe 0x4003910	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x400384a	          0x83f86e	                           cmp eax, 0x6e	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x400384d	     0xf8475010000	                            je 0x40039c8	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003853	      0x3d07200000	                         cmp eax, 0x2007	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003858	     0xf846a010000	                            je 0x40039c8	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x400385e	          0x83f859	                           cmp eax, 0x59	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003861	     0xf8579ffffff	                           jne 0x40037e0	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003867	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      3164	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x400386c	          0x894320	             mov dword [rbx + 0x20], eax	      3164	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x400386f	      0xe96cffffff	                           jmp 0x40037e0	      3165	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003874	         0xf1f4000	                         nop dword [rax]	      3165	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003878	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      3226	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19
0x400387e	     0xf845cffffff	                            je 0x40037e0	      3226	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19
0x4003884	        0x8b442470	            mov eax, dword [rsp + 0x70] 	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4003888	          0x83f83a	                           cmp eax, 0x3a	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x400388b	     0xf844f030000	                            je 0x4003be0	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4003891	     0xf87d9010000	                            ja 0x4003a70	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4003897	          0x83f802	                              cmp eax, 2	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x400389a	     0xf84a0020000	                            je 0x4003b40	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x40038a0	          0x83f803	                              cmp eax, 3	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x40038a3	     0xf8537ffffff	                           jne 0x40037e0	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x40038a9	        0x8b442474	            mov eax, dword [rsp + 0x74] 	      3231	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_20	CALL_18
0x40038ad	          0x83f81f	                           cmp eax, 0x1f	      1077	dwarf2.c	FUNCTION_20
0x40038b0	     0xf87ca030000	                            ja 0x4003c80	      1077	dwarf2.c	FUNCTION_20
0x40038b6	      0xb900410080	                     mov ecx, 0x80004100	      1078	dwarf2.c	FUNCTION_20
0x40038bb	        0x480fa3c1	                             bt rcx, rax	      1078	dwarf2.c	FUNCTION_20
0x40038bf	     0xf831bffffff	                           jae 0x40037e0	      1078	dwarf2.c	FUNCTION_20
0x40038c5	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      3232	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_20
0x40038ca	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3232	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_20
0x40038cf	        0x48894618	             mov qword [rsi + 0x18], rax	      3232	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_20
0x40038d3	      0xe908ffffff	                           jmp 0x40037e0	      3232	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_20
0x40038d8	     0xf1f84000000	                   nop dword [rax + rax]	      3232	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_20
0x40038e0	          0x83f831	                           cmp eax, 0x31	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40038e3	     0xf8447010000	                            je 0x4003a30	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40038e9	          0x83f83a	                           cmp eax, 0x3a	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40038ec	     0xf85eefeffff	                           jne 0x40037e0	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x40038f2	        0x498b7e78	            mov rdi, qword [r14 + 0x78] 	      3214	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_17
0x40038f6	        0x8b742478	            mov esi, dword [rsp + 0x78] 	      3214	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_17
0x40038fa	      0xe891ccffff	                call sym.concat_filename	      3214	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_17
0x40038ff	        0x48894318	             mov qword [rbx + 0x18], rax	      3214	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_17
0x4003903	      0xe9d8feffff	                           jmp 0x40037e0	      3216	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003908	     0xf1f84000000	                   nop dword [rax + rax]	      3216	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003910	          0x83f847	                           cmp eax, 0x47	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003913	     0xf8417010000	                            je 0x4003a30	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003919	          0x83f855	                           cmp eax, 0x55	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x400391c	     0xf85befeffff	                           jne 0x40037e0	      3156	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003922	      0x488b542478	            mov rdx, qword [rsp + 0x78] 	      3209	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_18	CALL_16
0x4003927	        0x488d7338	                   lea rsi, [rbx + 0x38]	      3209	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_18	CALL_16
0x400392b	          0x4c89f7	                            mov rdi, r14	      3209	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_18	CALL_16
0x400392e	      0xe80de0ffff	                 call sym.read_rangelist	      3209	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_18	CALL_16
0x4003933	            0x85c0	                           test eax, eax	      3209	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_18	CALL_16
0x4003935	     0xf85a5feffff	                           jne 0x40037e0	      3209	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_18	CALL_16
0x400393b	      0xe948fdffff	                           jmp 0x4003688	      3209	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_18	CALL_16
0x4003940	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      3204	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003945	      0x4889442428	             mov qword [rsp + 0x28], rax	      3204	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x400394a	            0x31c0	                            xor eax, eax	      3205	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x400394c	      0x837c247401	               cmp dword [rsp + 0x74], 1	      3205	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003951	           0xf95c0	                                setne al	      3205	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003954	        0x89442450	             mov dword [rsp + 0x50], eax	      3205	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003958	      0xe983feffff	                           jmp 0x40037e0	      3206	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x400395d	           0xf1f00	                         nop dword [rax]	      3206	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003960	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      3219	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003965	          0x894324	             mov dword [rbx + 0x24], eax	      3219	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003968	      0xe973feffff	                           jmp 0x40037e0	      3220	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x400396d	           0xf1f00	                         nop dword [rax]	      3220	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003970	      0x48837b3000	               cmp qword [rbx + 0x30], 0	      3180	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15	CALL_13
0x4003975	     0xf8565feffff	                           jne 0x40037e0	      3180	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15	CALL_13
0x400397b	        0x8b442474	            mov eax, dword [rsp + 0x74] 	      3180	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15	CALL_13
0x400397f	          0x83f81f	                           cmp eax, 0x1f	      1077	dwarf2.c	FUNCTION_20
0x4003982	     0xf8664030000	                           jbe 0x4003cec	      1077	dwarf2.c	FUNCTION_20
0x4003988	      0x3d211f0000	                         cmp eax, 0x1f21	      1078	dwarf2.c	FUNCTION_20
0x400398d	     0xf854dfeffff	                           jne 0x40037e0	      1078	dwarf2.c	FUNCTION_20
0x4003993	       0xf1f440000	                   nop dword [rax + rax]	      1078	dwarf2.c	FUNCTION_20
0x4003998	        0x418b4e40	            mov ecx, dword [r14 + 0x40] 	      1078	dwarf2.c	FUNCTION_20
0x400399c	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      3182	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15
0x40039a1	          0x83f91d	                           cmp ecx, 0x1d	      3182	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15
0x40039a4	        0x48894330	             mov qword [rbx + 0x30], rax	      3182	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15
0x40039a8	     0xf8732feffff	                            ja 0x40037e0	      3182	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15
0x40039ae	      0xb801000000	                              mov eax, 1	      3182	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15
0x40039b3	          0x48d3e0	                             shl rax, cl	      3182	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15
0x40039b6	      0xa9eeb20420	                    test eax, 0x2004b2ee	      3182	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15
0x40039bb	            0x752c	                           jne 0x40039e9	      3182	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15
0x40039bd	      0xe91efeffff	                           jmp 0x40037e0	      3182	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15
0x40039c2	    0x660f1f440000	                    nop word [rax + rax]	      3182	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_15
0x40039c8	        0x8b442474	            mov eax, dword [rsp + 0x74] 	      3192	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_17	CALL_15
0x40039cc	          0x83f81f	                           cmp eax, 0x1f	      1077	dwarf2.c	FUNCTION_20
0x40039cf	            0x7627	                           jbe 0x40039f8	      1077	dwarf2.c	FUNCTION_20
0x40039d1	      0x3d211f0000	                         cmp eax, 0x1f21	      1078	dwarf2.c	FUNCTION_20
0x40039d6	     0xf8504feffff	                           jne 0x40037e0	      1078	dwarf2.c	FUNCTION_20
0x40039dc	         0xf1f4000	                         nop dword [rax]	      1078	dwarf2.c	FUNCTION_20
0x40039e0	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      3194	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_17
0x40039e5	        0x48894330	             mov qword [rbx + 0x30], rax	      3194	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_17
0x40039e9	    0xc7432c010000	               mov dword [rbx + 0x2c], 1	      3195	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_17
0x40039f0	      0xe9ebfdffff	                           jmp 0x40037e0	      3195	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_17
0x40039f5	           0xf1f00	                         nop dword [rax]	      3195	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_17
0x40039f8	      0xb900410080	                     mov ecx, 0x80004100	      1078	dwarf2.c	FUNCTION_20
0x40039fd	        0x480fa3c1	                             bt rcx, rax	      1078	dwarf2.c	FUNCTION_20
0x4003a01	            0x72dd	                            jb 0x40039e0	      1078	dwarf2.c	FUNCTION_20
0x4003a03	      0xe9d8fdffff	                           jmp 0x40037e0	      1078	dwarf2.c	FUNCTION_20
0x4003a08	     0xf1f84000000	                   nop dword [rax + rax]	      1078	dwarf2.c	FUNCTION_20
0x4003a10	        0x498b7e78	            mov rdi, qword [r14 + 0x78] 	      3159	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_11
0x4003a14	        0x8b742478	            mov esi, dword [rsp + 0x78] 	      3159	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_11
0x4003a18	      0xe873cbffff	                call sym.concat_filename	      3159	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_11
0x4003a1d	        0x48894310	             mov qword [rbx + 0x10], rax	      3159	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	CALL_11
0x4003a21	      0xe9bafdffff	                           jmp 0x40037e0	      3161	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003a26	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3161	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1
0x4003a30	        0xff742440	                 push qword [rsp + 0x40]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4003a34	        0xff742450	                 push qword [rsp + 0x50]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4003a38	          0x4c89fe	                            mov rsi, r15	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4003a3b	      0x4c8b4c2440	              mov r9, qword [rsp + 0x40]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4003a40	      0x4c8b442448	              mov r8, qword [rsp + 0x48]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4003a45	          0x4c89f7	                            mov rdi, r14	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4003a48	    0x488b8c248800	            mov rcx, qword [rsp + 0x88] 	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4003a50	    0x8b9424840000	            mov edx, dword [rsp + 0x84] 	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4003a57	      0xe8f4f5ffff	 call sym.find_abstract_instance.isra.29	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4003a5c	            0x85c0	                           test eax, eax	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4003a5e	              0x59	                                 pop rcx	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4003a5f	              0x5e	                                 pop rsi	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4003a60	     0xf857afdffff	                           jne 0x40037e0	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4003a66	      0xe91dfcffff	                           jmp 0x4003688	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4003a6b	       0xf1f440000	                   nop dword [rax + rax]	      3169	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	IF_13	SWITCH_1	IF_14	CALL_12
0x4003a70	          0x83f83b	                           cmp eax, 0x3b	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4003a73	     0xf84af000000	                            je 0x4003b28	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4003a79	          0x83f83f	                           cmp eax, 0x3f	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4003a7c	     0xf855efdffff	                           jne 0x40037e0	      3228	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4003a82	    0x48837c247800	               cmp qword [rsp + 0x78], 0	      3245	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_21
0x4003a88	     0xf8452fdffff	                            je 0x40037e0	      3245	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_21
0x4003a8e	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3246	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_21
0x4003a93	        0x806030fe	             and byte [rax + 0x30], 0xfe	      3246	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_21
0x4003a97	      0xe944fdffff	                           jmp 0x40037e0	      3246	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_21
0x4003a9c	         0xf1f4000	                         nop dword [rax]	      3246	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	IF_21
0x4003aa0	    0x48bb08000020	              movabs rbx, 0x400020000008	      3105	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4003aaa	        0x480fa3c3	                             bt rbx, rax	      3105	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4003aae	     0xf8382fcffff	                           jae 0x4003736	      3105	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4003ab4	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3108	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_7
0x4003ab9	      0xbe58000000	                           mov esi, 0x58	      3108	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_7
0x4003abe	      0xe800000000	                          call 0x4003ac3	      3108	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_7
0x4003ac3	          0x4885c0	                           test rax, rax	      3109	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_7
0x4003ac6	          0x4889c3	                            mov rbx, rax	      3108	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_7
0x4003ac9	     0xf84b9fbffff	                            je 0x4003688	      3109	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_7
0x4003acf	        0x418b4504	                mov eax, dword [r13 + 4]	      3111	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4003ad3	    0x498b96800000	            mov rdx, qword [r14 + 0x80] 	      3112	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4003ada	    0x458b86b80000	            mov r8d, dword [r14 + 0xb8] 	      3115	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_8
0x4003ae1	          0x894328	             mov dword [rbx + 0x28], eax	      3111	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4003ae4	          0x488913	                    mov qword [rbx], rdx	      3112	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4003ae7	    0x498386900000	               add qword [r14 + 0x90], 1	      3114	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4003aef	          0x4585c0	                           test r8d, r8d	      3115	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_8
0x4003af2	    0x49899e800000	             mov qword [r14 + 0x80], rbx	      3113	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4003af9	     0xf85a7010000	                           jne 0x4003ca6	      3115	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_8
0x4003aff	          0x83f81d	                           cmp eax, 0x1d	      3117	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8
0x4003b02	     0xf84b5010000	                            je 0x4003cbd	      3117	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8
0x4003b08	      0x486344241c	         movsxd rax, dword [rsp + 0x1c] 	      3124	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4003b0d	        0x488b0c24	                    mov rcx, qword [rsp]	      3124	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4003b11	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3102	dwarf2.c	FUNCTION_45	WHILE_1
0x4003b1a	        0x48891cc1	            mov qword [rcx + rax*8], rbx	      3124	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4003b1e	      0xe92ffcffff	                           jmp 0x4003752	      3106	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4003b23	       0xf1f440000	                   nop dword [rax + rax]	      3106	dwarf2.c	FUNCTION_45	WHILE_1	IF_6
0x4003b28	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      3241	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4003b2d	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      3241	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4003b32	          0x894110	             mov dword [rcx + 0x10], eax	      3241	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4003b35	      0xe9a6fcffff	                           jmp 0x40037e0	      3242	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4003b3a	    0x660f1f440000	                    nop word [rax + rax]	      3242	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4003b40	        0x8b4c2474	            mov ecx, dword [rsp + 0x74] 	      3250	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3
0x4003b44	          0x83f918	                           cmp ecx, 0x18	      3250	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3
0x4003b47	     0xf8793fcffff	                            ja 0x40037e0	      3250	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3
0x4003b4d	      0xb801000000	                              mov eax, 1	      3250	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3
0x4003b52	          0x48d3e0	                             shl rax, cl	      3250	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3
0x4003b55	      0xa918060001	                     test eax, 0x1000618	      3250	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3
0x4003b5a	     0xf8480fcffff	                            je 0x40037e0	      3250	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3
0x4003b60	      0x488b542478	            mov rdx, qword [rsp + 0x78] 	      3257	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x4003b65	        0x488b4208	                mov rax, qword [rdx + 8]	      3257	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x4003b69	          0x4885c0	                           test rax, rax	      3257	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x4003b6c	     0xf846efcffff	                            je 0x40037e0	      3257	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x4003b72	          0x803803	                       cmp byte [rax], 3	      3258	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x4003b75	     0xf8565fcffff	                           jne 0x40037e0	      3258	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x4003b7b	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      3260	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x4003b80	        0x806130fe	             and byte [rcx + 0x30], 0xfe	      3260	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22
0x4003b84	    0x410fb68eac00	           movzx ecx, byte [r14 + 0xac] 	      3268	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23
0x4003b8c	          0x8d7101	                      lea esi, [rcx + 1]	      3268	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23
0x4003b8f	            0x3932	                    cmp dword [rdx], esi	      3268	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23
0x4003b91	     0xf8549fcffff	                           jne 0x40037e0	      3268	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23
0x4003b97	    0x8d14cd000000	                        lea edx, [rcx*8]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003b9e	          0x83fa08	                              cmp edx, 8	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003ba1	     0xf84e3010000	                            je 0x4003d8a	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003ba7	          0x83fa10	                           cmp edx, 0x10	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003baa	     0xf84e3010000	                            je 0x4003d93	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003bb0	          0x83fa20	                           cmp edx, 0x20	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003bb3	     0xf8402020000	                            je 0x4003dbb	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003bb9	          0x83fa40	                           cmp edx, 0x40	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003bbc	     0xf85e5010000	                           jne 0x4003da7	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003bc2	        0x488d7801	                      lea rdi, [rax + 1]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003bc6	        0x498b4610	            mov rax, qword [r14 + 0x10] 	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003bca	        0x488b4008	                mov rax, qword [rax + 8]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003bce	          0xff5020	                 call qword [rax + 0x20]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003bd1	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003bd6	        0x48894120	             mov qword [rcx + 0x20], rax	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003bda	      0xe901fcffff	                           jmp 0x40037e0	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003bdf	              0x90	                                     nop	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003be0	        0x498b7e78	            mov rdi, qword [r14 + 0x78] 	      3236	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	CALL_19
0x4003be4	        0x8b742478	            mov esi, dword [rsp + 0x78] 	      3236	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	CALL_19
0x4003be8	      0xe8a3c9ffff	                call sym.concat_filename	      3236	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	CALL_19
0x4003bed	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      3236	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	CALL_19
0x4003bf2	        0x48894108	                mov qword [rcx + 8], rax	      3236	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	CALL_19
0x4003bf6	      0xe9e5fbffff	                           jmp 0x40037e0	      3238	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4003bfb	       0xf1f440000	                   nop dword [rax + rax]	      3238	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2
0x4003c00	        0x8b542450	            mov edx, dword [rsp + 0x50] 	      3286	dwarf2.c	FUNCTION_45	WHILE_1	IF_24
0x4003c04	          0x4c89fd	                            mov rbp, r15	      3286	dwarf2.c	FUNCTION_45	WHILE_1	IF_24
0x4003c07	            0x85d2	                           test edx, edx	      3286	dwarf2.c	FUNCTION_45	WHILE_1	IF_24
0x4003c09	     0xf8481000000	                            je 0x4003c90	      3286	dwarf2.c	FUNCTION_45	WHILE_1	IF_24
0x4003c0f	          0x4885db	                           test rbx, rbx	      3286	dwarf2.c	FUNCTION_45	WHILE_1	IF_24
0x4003c12	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      3286	dwarf2.c	FUNCTION_45	WHILE_1	IF_24
0x4003c17	           0xf95c2	                                setne dl	      3286	dwarf2.c	FUNCTION_45	WHILE_1	IF_24
0x4003c1a	      0x4801742428	            add qword [rsp + 0x28], rsi 	      3286	dwarf2.c	FUNCTION_45	WHILE_1	IF_24
0x4003c1f	           0xf95c0	                                setne al	      3286	dwarf2.c	FUNCTION_45	WHILE_1	IF_24
0x4003c22	            0x21d0	                            and eax, edx	      3286	dwarf2.c	FUNCTION_45	WHILE_1	IF_24
0x4003c24	            0x84c0	                             test al, al	      3289	dwarf2.c	FUNCTION_45	WHILE_1	IF_25
0x4003c26	            0x7420	                            je 0x4003c48	      3289	dwarf2.c	FUNCTION_45	WHILE_1	IF_25
0x4003c28	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      3291	dwarf2.c	FUNCTION_45	WHILE_1	IF_25	IF_26	CALL_21
0x4003c2d	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      3291	dwarf2.c	FUNCTION_45	WHILE_1	IF_25	IF_26	CALL_21
0x4003c32	        0x488d7338	                   lea rsi, [rbx + 0x38]	      3291	dwarf2.c	FUNCTION_45	WHILE_1	IF_25	IF_26	CALL_21
0x4003c36	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      3291	dwarf2.c	FUNCTION_45	WHILE_1	IF_25	IF_26	CALL_21
0x4003c3b	      0xe840d1ffff	             call sym.arange_add.isra.23	      3291	dwarf2.c	FUNCTION_45	WHILE_1	IF_25	IF_26	CALL_21
0x4003c40	            0x85c0	                           test eax, eax	      3291	dwarf2.c	FUNCTION_45	WHILE_1	IF_25	IF_26	CALL_21
0x4003c42	     0xf8440faffff	                            je 0x4003688	      3291	dwarf2.c	FUNCTION_45	WHILE_1	IF_25	IF_26	CALL_21
0x4003c48	        0x418b4508	                mov eax, dword [r13 + 8]	      3295	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x4003c4c	            0x85c0	                           test eax, eax	      3295	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x4003c4e	     0xf842afaffff	                            je 0x400367e	      3295	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x4003c54	      0x8344241c01	               add dword [rsp + 0x1c], 1	      3297	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x4003c59	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      3297	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x4003c5d	        0x3b442454	            cmp eax, dword [rsp + 0x54] 	      3299	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28
0x4003c61	     0xf8dda000000	                           jge 0x4003d41	      3299	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28
0x4003c67	      0x486344241c	         movsxd rax, dword [rsp + 0x1c] 	      3311	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x4003c6c	        0x488b1c24	                    mov rbx, qword [rsp]	      3311	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x4003c70	    0x48c704c30000	              mov qword [rbx + rax*8], 0	      3311	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x4003c78	      0xe901faffff	                           jmp 0x400367e	      3311	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x4003c7d	           0xf1f00	                         nop dword [rax]	      3311	dwarf2.c	FUNCTION_45	WHILE_1	IF_27
0x4003c80	      0x3d211f0000	                         cmp eax, 0x1f21	      1078	dwarf2.c	FUNCTION_20
0x4003c85	     0xf8555fbffff	                           jne 0x40037e0	      1078	dwarf2.c	FUNCTION_20
0x4003c8b	      0xe935fcffff	                           jmp 0x40038c5	      1078	dwarf2.c	FUNCTION_20
0x4003c90	    0x48837c242800	               cmp qword [rsp + 0x28], 0	      1078	dwarf2.c	FUNCTION_20
0x4003c96	           0xf95c2	                                setne dl	      1078	dwarf2.c	FUNCTION_20
0x4003c99	          0x4885db	                           test rbx, rbx	      1078	dwarf2.c	FUNCTION_20
0x4003c9c	           0xf95c0	                                setne al	      1078	dwarf2.c	FUNCTION_20
0x4003c9f	            0x21d0	                            and eax, edx	      1078	dwarf2.c	FUNCTION_20
0x4003ca1	      0xe97effffff	                           jmp 0x4003c24	      1078	dwarf2.c	FUNCTION_20
0x4003ca6	      0xbe2b0c0000	                          mov esi, 0xc2b	      3115	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_8
0x4003cab	      0xbf00000000	                              mov edi, 0	      3115	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_8
0x4003cb0	      0xe800000000	                          call 0x4003cb5	      3115	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_8
0x4003cb5	          0x8b4328	            mov eax, dword [rbx + 0x28] 	      3115	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_8
0x4003cb8	      0xe942feffff	                           jmp 0x4003aff	      3115	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_8
0x4003cbd	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      3115	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_8
0x4003cc1	        0x488b0c24	                    mov rcx, qword [rsp]	      3115	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_8
0x4003cc5	          0x83e801	                              sub eax, 1	      3115	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	CALL_8
0x4003cc8	            0xeb18	                           jmp 0x4003ce2	      3118	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1
0x4003cca	    0x660f1f440000	                    nop word [rax + rax]	      3118	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1
0x4003cd0	            0x89c2	                            mov edx, eax	      3119	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x4003cd2	          0x83e801	                              sub eax, 1	      3119	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x4003cd5	        0x488b14d1	            mov rdx, qword [rcx + rdx*8]	      3119	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x4003cd9	          0x4885d2	                           test rdx, rdx	      3119	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x4003cdc	     0xf8587000000	                           jne 0x4003d69	      3119	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x4003ce2	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3118	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1
0x4003ce5	            0x75e9	                           jne 0x4003cd0	      3118	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1
0x4003ce7	      0xe91cfeffff	                           jmp 0x4003b08	      3118	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1
0x4003cec	      0xb900410080	                     mov ecx, 0x80004100	      1078	dwarf2.c	FUNCTION_20
0x4003cf1	        0x480fa3c1	                             bt rcx, rax	      1078	dwarf2.c	FUNCTION_20
0x4003cf5	     0xf829dfcffff	                            jb 0x4003998	      1078	dwarf2.c	FUNCTION_20
0x4003cfb	      0xe9e0faffff	                           jmp 0x40037e0	      1078	dwarf2.c	FUNCTION_20
0x4003d00	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3132	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10	CALL_9
0x4003d05	      0xbe38000000	                           mov esi, 0x38	      3132	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10	CALL_9
0x4003d0a	      0xe800000000	                          call 0x4003d0f	      3132	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10	CALL_9
0x4003d0f	          0x4885c0	                           test rax, rax	      3133	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10	IF_11
0x4003d12	          0x4889c3	                            mov rbx, rax	      3132	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10	CALL_9
0x4003d15	      0x4889442410	             mov qword [rsp + 0x10], rax	      3132	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10	CALL_9
0x4003d1a	     0xf8468f9ffff	                            je 0x4003688	      3133	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10	IF_11
0x4003d20	        0x418b4504	                mov eax, dword [r13 + 4]	      3135	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x4003d24	        0x804b3001	                 or byte [rbx + 0x30], 1	      3136	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x4003d28	          0x894314	             mov dword [rbx + 0x14], eax	      3135	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x4003d2b	    0x498b86980000	            mov rax, qword [r14 + 0x98] 	      3137	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x4003d32	          0x488903	                    mov qword [rbx], rax	      3137	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x4003d35	    0x49899e980000	             mov qword [r14 + 0x98], rbx	      3138	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x4003d3c	      0xe9fef9ffff	                           jmp 0x400373f	      3138	dwarf2.c	FUNCTION_45	WHILE_1	ELSE_1	IF_10
0x4003d41	        0xd1642454	               shl dword [rsp + 0x54], 1	      3303	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28
0x4003d45	        0x488b3c24	                    mov rdi, qword [rsp]	      3304	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28
0x4003d49	      0x4863742454	         movsxd rsi, dword [rsp + 0x54] 	      3303	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28
0x4003d4e	        0x48c1e603	                              shl rsi, 3	      3304	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28
0x4003d52	      0xe800000000	                          call 0x4003d57	      3304	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28
0x4003d57	          0x4885c0	                           test rax, rax	      3307	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28	IF_29
0x4003d5a	     0xf8428f9ffff	                            je 0x4003688	      3307	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28	IF_29
0x4003d60	        0x48890424	                    mov qword [rsp], rax	      3307	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28	IF_29
0x4003d64	      0xe9fefeffff	                           jmp 0x4003c67	      3307	dwarf2.c	FUNCTION_45	WHILE_1	IF_27	IF_28	IF_29
0x4003d69	        0x48895308	                mov qword [rbx + 8], rdx	      3121	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x4003d6d	      0xe996fdffff	                           jmp 0x4003b08	      3122	dwarf2.c	FUNCTION_45	WHILE_1	IF_6	IF_8	FOR_1	IF_9
0x4003d72	        0x488b3c24	                    mov rdi, qword [rsp]	      3315	dwarf2.c	FUNCTION_45	CALL_23
0x4003d76	      0xe800000000	                          call 0x4003d7b	      3315	dwarf2.c	FUNCTION_45	CALL_23
0x4003d7b	      0xb801000000	                              mov eax, 1	      3316	dwarf2.c	FUNCTION_45
0x4003d80	      0xe972f8ffff	                           jmp 0x40035f7	      3316	dwarf2.c	FUNCTION_45
0x4003d85	      0xe800000000	                          call 0x4003d8a	      3321	dwarf2.c	FUNCTION_45
0x4003d8a	         0xfb64001	               movzx eax, byte [rax + 1]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003d8e	      0xe93efeffff	                           jmp 0x4003bd1	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003d93	        0x488d7801	                      lea rdi, [rax + 1]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003d97	        0x498b4610	            mov rax, qword [r14 + 0x10] 	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003d9b	        0x488b4008	                mov rax, qword [rax + 8]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003d9f	          0xff5050	                 call qword [rax + 0x50]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003da2	      0xe92afeffff	                           jmp 0x4003bd1	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003da7	      0xba00000000	                              mov edx, 0	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003dac	      0xbec70c0000	                          mov esi, 0xcc7	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003db1	      0xbf00000000	                              mov edi, 0	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003db6	      0xe800000000	                          call 0x4003dbb	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003dbb	        0x488d7801	                      lea rdi, [rax + 1]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003dbf	        0x498b4610	            mov rax, qword [r14 + 0x10] 	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003dc3	        0x488b4008	                mov rax, qword [rax + 8]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003dc7	          0xff5038	                 call qword [rax + 0x38]	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
0x4003dca	      0xe902feffff	                           jmp 0x4003bd1	      3269	dwarf2.c	FUNCTION_45	WHILE_1	FOR_2	ELSE_2	IF_19	SWITCH_2	SWITCH_3	IF_22	IF_23	CALL_20
read_rangelist	FOR,1:CALL,4:WHILE,0:ELSE,1:IF,7:functions,0:SWITCH,0:DO,0	93
0x4001940	            0x4157	                                push r15	      2990	dwarf2.c	FUNCTION_44
0x4001942	            0x4156	                                push r14	      2990	dwarf2.c	FUNCTION_44
0x4001944	          0x4989ff	                            mov r15, rdi	      2990	dwarf2.c	FUNCTION_44
0x4001947	            0x4155	                                push r13	      2990	dwarf2.c	FUNCTION_44
0x4001949	            0x4154	                                push r12	      2990	dwarf2.c	FUNCTION_44
0x400194b	          0x4989f5	                            mov r13, rsi	      2990	dwarf2.c	FUNCTION_44
0x400194e	              0x55	                                push rbp	      2990	dwarf2.c	FUNCTION_44
0x400194f	              0x53	                                push rbx	      2990	dwarf2.c	FUNCTION_44
0x4001950	          0x4889d3	                            mov rbx, rdx	      2990	dwarf2.c	FUNCTION_44
0x4001953	        0x4883ec18	                           sub rsp, 0x18	      2990	dwarf2.c	FUNCTION_44
0x4001957	    0x488b87a00000	            mov rax, qword [rdi + 0xa0] 	      2995	dwarf2.c	FUNCTION_44	IF_1
0x400195e	    0x4c8ba7b00000	            mov r12, qword [rdi + 0xb0] 	      2993	dwarf2.c	FUNCTION_44
0x4001965	    0x488ba8c00000	            mov rbp, qword [rax + 0xc0] 	      2995	dwarf2.c	FUNCTION_44	IF_1
0x400196c	          0x4885ed	                           test rbp, rbp	      2995	dwarf2.c	FUNCTION_44	IF_1
0x400196f	     0xf84bd000000	                            je 0x4001a32	      2995	dwarf2.c	FUNCTION_44	IF_1
0x4001975	          0x4801eb	                            add rbx, rbp	      3002	dwarf2.c	FUNCTION_44	IF_3
0x4001978	     0xf82e0000000	                            jb 0x4001a5e	      3002	dwarf2.c	FUNCTION_44	IF_3
0x400197e	    0x4803a8c80000	             add rbp, qword [rax + 0xc8]	      3004	dwarf2.c	FUNCTION_44
0x4001985	        0x498d4710	                   lea rax, [r15 + 0x10]	      3004	dwarf2.c	FUNCTION_44
0x4001989	    0x410fb6b7ac00	           movzx esi, byte [r15 + 0xac] 	      3004	dwarf2.c	FUNCTION_44
0x4001991	      0x4889442408	                mov qword [rsp + 8], rax	      3004	dwarf2.c	FUNCTION_44
0x4001996	            0xeb11	                           jmp 0x40019a9	      3004	dwarf2.c	FUNCTION_44
0x4001998	     0xf1f84000000	                   nop dword [rax + rax]	      3004	dwarf2.c	FUNCTION_44
0x40019a0	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      3022	dwarf2.c	FUNCTION_44	FOR_1	IF_6
0x40019a4	            0x7463	                            je 0x4001a09	      3022	dwarf2.c	FUNCTION_44	FOR_1	IF_6
0x40019a6	          0x4989c4	                            mov r12, rax	      3026	dwarf2.c	FUNCTION_44	FOR_1	ELSE_1	IF_7	CALL_4
0x40019a9	        0x488d0436	                    lea rax, [rsi + rsi]	      3012	dwarf2.c	FUNCTION_44	FOR_1	IF_4
0x40019ad	      0x25fe010000	                          and eax, 0x1fe	      3012	dwarf2.c	FUNCTION_44	FOR_1	IF_4
0x40019b2	          0x4801d8	                            add rax, rbx	      3012	dwarf2.c	FUNCTION_44	FOR_1	IF_4
0x40019b5	          0x4839c5	                            cmp rbp, rax	      3012	dwarf2.c	FUNCTION_44	FOR_1	IF_4
0x40019b8	     0xf82a0000000	                            jb 0x4001a5e	      3012	dwarf2.c	FUNCTION_44	FOR_1	IF_4
0x40019be	        0x498b7f10	            mov rdi, qword [r15 + 0x10] 	      3015	dwarf2.c	FUNCTION_44	FOR_1	CALL_2
0x40019c2	          0x4889da	                            mov rdx, rbx	      3015	dwarf2.c	FUNCTION_44	FOR_1	CALL_2
0x40019c5	          0x4889e9	                            mov rcx, rbp	      3015	dwarf2.c	FUNCTION_44	FOR_1	CALL_2
0x40019c8	      0xe8d3f4ffff	           call sym.read_address.isra.28	      3015	dwarf2.c	FUNCTION_44	FOR_1	CALL_2
0x40019cd	          0x4989c6	                            mov r14, rax	      3015	dwarf2.c	FUNCTION_44	FOR_1	CALL_2
0x40019d0	    0x410fb687ac00	           movzx eax, byte [r15 + 0xac] 	      3016	dwarf2.c	FUNCTION_44	FOR_1
0x40019d8	        0x498b7f10	            mov rdi, qword [r15 + 0x10] 	      3017	dwarf2.c	FUNCTION_44	FOR_1	CALL_3
0x40019dc	          0x4889e9	                            mov rcx, rbp	      3017	dwarf2.c	FUNCTION_44	FOR_1	CALL_3
0x40019df	          0x4801c3	                            add rbx, rax	      3016	dwarf2.c	FUNCTION_44	FOR_1
0x40019e2	          0x4889c6	                            mov rsi, rax	      3016	dwarf2.c	FUNCTION_44	FOR_1
0x40019e5	          0x4889da	                            mov rdx, rbx	      3017	dwarf2.c	FUNCTION_44	FOR_1	CALL_3
0x40019e8	      0xe8b3f4ffff	           call sym.read_address.isra.28	      3017	dwarf2.c	FUNCTION_44	FOR_1	CALL_3
0x40019ed	    0x410fb697ac00	           movzx edx, byte [r15 + 0xac] 	      3018	dwarf2.c	FUNCTION_44	FOR_1
0x40019f5	          0x4c89f1	                            mov rcx, r14	      3020	dwarf2.c	FUNCTION_44	FOR_1	IF_5
0x40019f8	          0x4801d3	                            add rbx, rdx	      3018	dwarf2.c	FUNCTION_44	FOR_1
0x40019fb	          0x4809c1	                             or rcx, rax	      3020	dwarf2.c	FUNCTION_44	FOR_1	IF_5
0x40019fe	          0x4889d6	                            mov rsi, rdx	      3018	dwarf2.c	FUNCTION_44	FOR_1
0x4001a01	            0x746d	                            je 0x4001a70	      3020	dwarf2.c	FUNCTION_44	FOR_1	IF_5
0x4001a03	        0x4983feff	             cmp r14, 0xffffffffffffffff	      3022	dwarf2.c	FUNCTION_44	FOR_1	IF_6
0x4001a07	            0x7497	                            je 0x40019a0	      3022	dwarf2.c	FUNCTION_44	FOR_1	IF_6
0x4001a09	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3026	dwarf2.c	FUNCTION_44	FOR_1	ELSE_1	IF_7	CALL_4
0x4001a0e	        0x498d0c04	                    lea rcx, [r12 + rax]	      3026	dwarf2.c	FUNCTION_44	FOR_1	ELSE_1	IF_7	CALL_4
0x4001a12	        0x4b8d1434	                    lea rdx, [r12 + r14]	      3026	dwarf2.c	FUNCTION_44	FOR_1	ELSE_1	IF_7	CALL_4
0x4001a16	          0x4c89ee	                            mov rsi, r13	      3026	dwarf2.c	FUNCTION_44	FOR_1	ELSE_1	IF_7	CALL_4
0x4001a19	      0xe862f3ffff	             call sym.arange_add.isra.23	      3026	dwarf2.c	FUNCTION_44	FOR_1	ELSE_1	IF_7	CALL_4
0x4001a1e	            0x85c0	                           test eax, eax	      3026	dwarf2.c	FUNCTION_44	FOR_1	ELSE_1	IF_7	CALL_4
0x4001a20	            0x743c	                            je 0x4001a5e	      3026	dwarf2.c	FUNCTION_44	FOR_1	ELSE_1	IF_7	CALL_4
0x4001a22	    0x410fb6b7ac00	           movzx esi, byte [r15 + 0xac] 	      3026	dwarf2.c	FUNCTION_44	FOR_1	ELSE_1	IF_7	CALL_4
0x4001a2a	          0x4c89e0	                            mov rax, r12	      3026	dwarf2.c	FUNCTION_44	FOR_1	ELSE_1	IF_7	CALL_4
0x4001a2d	      0xe974ffffff	                           jmp 0x40019a6	      3026	dwarf2.c	FUNCTION_44	FOR_1	ELSE_1	IF_7	CALL_4
0x4001a32	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x4001a36	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x4001a3a	    0x4c8d88c80000	                    lea r9, [rax + 0xc8]	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x4001a41	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x4001a45	    0x4c8d80c00000	                    lea r8, [rax + 0xc0]	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x4001a4c	    0x488db1b00000	                   lea rsi, [rcx + 0xb0]	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x4001a53	            0x31c9	                            xor ecx, ecx	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x4001a55	      0xe8e6e5ffff	                   call sym.read_section	      2537	dwarf2.c	FUNCTION_37	CALL_1
0x4001a5a	            0x85c0	                           test eax, eax	      2997	dwarf2.c	FUNCTION_44	IF_1	IF_2	CALL_1
0x4001a5c	            0x7526	                           jne 0x4001a84	      2997	dwarf2.c	FUNCTION_44	IF_1	IF_2	CALL_1
0x4001a5e	        0x4883c418	                           add rsp, 0x18	      3032	dwarf2.c	FUNCTION_44
0x4001a62	            0x31c0	                            xor eax, eax	      2998	dwarf2.c	FUNCTION_44	IF_1	IF_2
0x4001a64	              0x5b	                                 pop rbx	      3032	dwarf2.c	FUNCTION_44
0x4001a65	              0x5d	                                 pop rbp	      3032	dwarf2.c	FUNCTION_44
0x4001a66	            0x415c	                                 pop r12	      3032	dwarf2.c	FUNCTION_44
0x4001a68	            0x415d	                                 pop r13	      3032	dwarf2.c	FUNCTION_44
0x4001a6a	            0x415e	                                 pop r14	      3032	dwarf2.c	FUNCTION_44
0x4001a6c	            0x415f	                                 pop r15	      3032	dwarf2.c	FUNCTION_44
0x4001a6e	              0xc3	                                     ret	      3032	dwarf2.c	FUNCTION_44
0x4001a6f	              0x90	                                     nop	      3032	dwarf2.c	FUNCTION_44
0x4001a70	        0x4883c418	                           add rsp, 0x18	      3032	dwarf2.c	FUNCTION_44
0x4001a74	      0xb801000000	                              mov eax, 1	      3031	dwarf2.c	FUNCTION_44
0x4001a79	              0x5b	                                 pop rbx	      3032	dwarf2.c	FUNCTION_44
0x4001a7a	              0x5d	                                 pop rbp	      3032	dwarf2.c	FUNCTION_44
0x4001a7b	            0x415c	                                 pop r12	      3032	dwarf2.c	FUNCTION_44
0x4001a7d	            0x415d	                                 pop r13	      3032	dwarf2.c	FUNCTION_44
0x4001a7f	            0x415e	                                 pop r14	      3032	dwarf2.c	FUNCTION_44
0x4001a81	            0x415f	                                 pop r15	      3032	dwarf2.c	FUNCTION_44
0x4001a83	              0xc3	                                     ret	      3032	dwarf2.c	FUNCTION_44
0x4001a84	    0x498b87a00000	            mov rax, qword [r15 + 0xa0] 	      3032	dwarf2.c	FUNCTION_44
0x4001a8b	    0x488ba8c00000	            mov rbp, qword [rax + 0xc0] 	      3032	dwarf2.c	FUNCTION_44
0x4001a92	      0xe9defeffff	                           jmp 0x4001975	      3032	dwarf2.c	FUNCTION_44
_bfd_dwarf2_slurp_debug_info	FOR,2:CALL,25:WHILE,0:ELSE,2:IF,18:functions,0:SWITCH,0:DO,0	279
0x4004b80	            0x4157	                                push r15	      4311	dwarf2.c	FUNCTION_66
0x4004b82	            0x4156	                                push r14	      4311	dwarf2.c	FUNCTION_66
0x4004b84	          0x4d89c7	                             mov r15, r8	      4311	dwarf2.c	FUNCTION_66
0x4004b87	            0x4155	                                push r13	      4311	dwarf2.c	FUNCTION_66
0x4004b89	            0x4154	                                push r12	      4311	dwarf2.c	FUNCTION_66
0x4004b8b	          0x4989d5	                            mov r13, rdx	      4311	dwarf2.c	FUNCTION_66
0x4004b8e	              0x55	                                push rbp	      4311	dwarf2.c	FUNCTION_66
0x4004b8f	              0x53	                                push rbx	      4311	dwarf2.c	FUNCTION_66
0x4004b90	          0x4989f4	                            mov r12, rsi	      4311	dwarf2.c	FUNCTION_66
0x4004b93	          0x4889fb	                            mov rbx, rdi	      4311	dwarf2.c	FUNCTION_66
0x4004b96	          0x4989ce	                            mov r14, rcx	      4311	dwarf2.c	FUNCTION_66
0x4004b99	        0x4883ec28	                           sub rsp, 0x28	      4311	dwarf2.c	FUNCTION_66
0x4004b9d	          0x498b28	                     mov rbp, qword [r8]	      4315	dwarf2.c	FUNCTION_66
0x4004ba0	    0x64488b042528	                mov rax, qword fs:[0x28]	      4311	dwarf2.c	FUNCTION_66
0x4004ba9	      0x4889442418	             mov qword [rsp + 0x18], rax	      4311	dwarf2.c	FUNCTION_66
0x4004bae	            0x31c0	                            xor eax, eax	      4311	dwarf2.c	FUNCTION_66
0x4004bb0	      0x44894c2408	                mov dword [rsp + 8], r9d	      4311	dwarf2.c	FUNCTION_66
0x4004bb5	          0x4885ed	                           test rbp, rbp	      4317	dwarf2.c	FUNCTION_66	IF_1
0x4004bb8	     0xf84a2030000	                            je 0x4004f60	      4317	dwarf2.c	FUNCTION_66	IF_1
0x4004bbe	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	      4319	dwarf2.c	FUNCTION_66	IF_1	IF_2
0x4004bc2	          0x4839df	                            cmp rdi, rbx	      4319	dwarf2.c	FUNCTION_66	IF_1	IF_2
0x4004bc5	     0xf8465020000	                            je 0x4004e30	      4319	dwarf2.c	FUNCTION_66	IF_1	IF_2
0x4004bcb	          0x4889df	                            mov rdi, rbx	      4333	dwarf2.c	FUNCTION_66	IF_1	CALL_3
0x4004bce	          0x4c89fe	                            mov rsi, r15	      4333	dwarf2.c	FUNCTION_66	IF_1	CALL_3
0x4004bd1	      0xe800000000	                          call 0x4004bd6	      4333	dwarf2.c	FUNCTION_66	IF_1	CALL_3
0x4004bd6	        0x488d7d08	                      lea rdi, [rbp + 8]	        90	string3.h	FUNCTION_75	CALL_6
0x4004bda	          0x4889e9	                            mov rcx, rbp	        90	string3.h	FUNCTION_75	CALL_6
0x4004bdd	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_75	CALL_6
0x4004bdf	    0x48c745000000	                      mov qword [rbp], 0	        90	string3.h	FUNCTION_75	CALL_6
0x4004be7	    0x48c785100100	              mov qword [rbp + 0x110], 0	        90	string3.h	FUNCTION_75	CALL_6
0x4004bf2	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_75	CALL_6
0x4004bf6	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_75	CALL_6
0x4004bf9	    0x81c118010000	                          add ecx, 0x118	        90	string3.h	FUNCTION_75	CALL_6
0x4004bff	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_75	CALL_6
0x4004c02	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_75	CALL_6
0x4004c05	    0x8bbba0000000	            mov edi, dword [rbx + 0xa0] 	      4258	dwarf2.c	FUNCTION_64	IF_1
0x4004c0b	        0x48895d28	            mov qword [rbp + 0x28], rbx 	      4342	dwarf2.c	FUNCTION_66
0x4004c0f	        0x4c896d10	            mov qword [rbp + 0x10], r13 	      4343	dwarf2.c	FUNCTION_66
0x4004c13	        0x4c897578	            mov qword [rbp + 0x78], r14 	      4344	dwarf2.c	FUNCTION_66
0x4004c17	            0x85ff	                           test edi, edi	      4258	dwarf2.c	FUNCTION_64	IF_1
0x4004c19	     0xf85a1010000	                           jne 0x4004dc0	      4258	dwarf2.c	FUNCTION_64	IF_1
0x4004c1f	          0x4d85e4	                           test r12, r12	      4350	dwarf2.c	FUNCTION_66	IF_7
0x4004c22	          0x49892f	                    mov qword [r15], rbp	      4348	dwarf2.c	FUNCTION_66
0x4004c25	     0xf8425030000	                            je 0x4004f50	      4350	dwarf2.c	FUNCTION_66	IF_7
0x4004c2b	          0x4c39e3	                            cmp rbx, r12	      4350	dwarf2.c	FUNCTION_66	IF_7
0x4004c2e	       0xf9444240f	                   sete byte [rsp + 0xf]	      4350	dwarf2.c	FUNCTION_66	IF_7
0x4004c33	          0x4c89ee	                            mov rsi, r13	      4350	dwarf2.c	FUNCTION_66	IF_7
0x4004c36	          0x4c89e7	                            mov rdi, r12	      4350	dwarf2.c	FUNCTION_66	IF_7
0x4004c39	      0xe822c0ffff	        call sym.find_debug_info.part.21	      4350	dwarf2.c	FUNCTION_66	IF_7
0x4004c3e	          0x4885c0	                           test rax, rax	      4354	dwarf2.c	FUNCTION_66	IF_8
0x4004c41	          0x4989c7	                            mov r15, rax	      4354	dwarf2.c	FUNCTION_66	IF_8
0x4004c44	            0x750b	                           jne 0x4004c51	      4354	dwarf2.c	FUNCTION_66	IF_8
0x4004c46	      0x807c240f00	                 cmp byte [rsp + 0xf], 0	      4354	dwarf2.c	FUNCTION_66	IF_8
0x4004c4b	     0xf85ef000000	                           jne 0x4004d40	      4354	dwarf2.c	FUNCTION_66	IF_8
0x4004c51	        0x8b442408	                mov eax, dword [rsp + 8]	      4390	dwarf2.c	FUNCTION_66	IF_13
0x4004c55	        0x4c896530	            mov qword [rbp + 0x30], r12 	      4388	dwarf2.c	FUNCTION_66
0x4004c59	            0x85c0	                           test eax, eax	      4390	dwarf2.c	FUNCTION_66	IF_13
0x4004c5b	     0xf8537020000	                           jne 0x4004e98	      4390	dwarf2.c	FUNCTION_66	IF_13
0x4004c61	          0x4c89fa	                            mov rdx, r15	      4405	dwarf2.c	FUNCTION_66	IF_14	CALL_18
0x4004c64	          0x4c89ee	                            mov rsi, r13	      4405	dwarf2.c	FUNCTION_66	IF_14	CALL_18
0x4004c67	          0x4c89e7	                            mov rdi, r12	      4405	dwarf2.c	FUNCTION_66	IF_14	CALL_18
0x4004c6a	      0xe871c0ffff	                call sym.find_debug_info	      4405	dwarf2.c	FUNCTION_66	IF_14	CALL_18
0x4004c6f	          0x4885c0	                           test rax, rax	      4405	dwarf2.c	FUNCTION_66	IF_14	CALL_18
0x4004c72	     0xf8438020000	                            je 0x4004eb0	      4405	dwarf2.c	FUNCTION_66	IF_14	CALL_18
0x4004c78	          0x4d85ff	                           test r15, r15	      4417	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x4004c7b	    0x48c744241000	               mov qword [rsp + 0x10], 0	      4417	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x4004c84	     0xf84f1020000	                            je 0x4004f7b	      4417	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x4004c8a	            0x31c0	                            xor eax, eax	      4417	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x4004c8c	            0xeb07	                           jmp 0x4004c95	      4417	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x4004c8e	            0x6690	                                     nop	      4417	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x4004c90	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4417	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x4004c95	        0x49034738	             add rax, qword [r15 + 0x38]	      4420	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x4004c99	          0x4c89fa	                            mov rdx, r15	      4419	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1	CALL_20
0x4004c9c	          0x4c89ee	                            mov rsi, r13	      4419	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1	CALL_20
0x4004c9f	          0x4c89e7	                            mov rdi, r12	      4419	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1	CALL_20
0x4004ca2	      0x4889442410	             mov qword [rsp + 0x10], rax	      4420	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x4004ca7	      0xe834c0ffff	                call sym.find_debug_info	      4419	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1	CALL_20
0x4004cac	          0x4885c0	                           test rax, rax	      4417	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x4004caf	          0x4989c7	                            mov r15, rax	      4419	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1	CALL_20
0x4004cb2	            0x75dc	                           jne 0x4004c90	      4417	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x4004cb4	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4417	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x4004cb9	      0xe800000000	                          call 0x4004cbe	      4422	dwarf2.c	FUNCTION_66	ELSE_2	CALL_21
0x4004cbe	          0x4885c0	                           test rax, rax	      4423	dwarf2.c	FUNCTION_66	ELSE_2	IF_16
0x4004cc1	        0x48894570	            mov qword [rbp + 0x70], rax 	      4422	dwarf2.c	FUNCTION_66	ELSE_2	CALL_21
0x4004cc5	     0xf84cc000000	                            je 0x4004d97	      4423	dwarf2.c	FUNCTION_66	ELSE_2	IF_16
0x4004ccb	          0x4c89ee	                            mov rsi, r13	      4423	dwarf2.c	FUNCTION_66	ELSE_2	IF_16
0x4004cce	          0x4c89e7	                            mov rdi, r12	      4423	dwarf2.c	FUNCTION_66	ELSE_2	IF_16
0x4004cd1	    0x48c744241000	               mov qword [rsp + 0x10], 0	      4426	dwarf2.c	FUNCTION_66	ELSE_2
0x4004cda	      0xe881bfffff	        call sym.find_debug_info.part.21	      4426	dwarf2.c	FUNCTION_66	ELSE_2
0x4004cdf	          0x4885c0	                           test rax, rax	      4427	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_22
0x4004ce2	          0x4889c3	                            mov rbx, rax	      4427	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_22
0x4004ce5	            0x7523	                           jne 0x4004d0a	      4427	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_22
0x4004ce7	      0xe9f4010000	                           jmp 0x4004ee0	      4427	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_22
0x4004cec	         0xf1f4000	                         nop dword [rax]	      4427	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_22
0x4004cf0	          0x4889da	                            mov rdx, rbx	      4429	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_23
0x4004cf3	          0x4c89ee	                            mov rsi, r13	      4429	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_23
0x4004cf6	          0x4c89e7	                            mov rdi, r12	      4429	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_23
0x4004cf9	      0xe8e2bfffff	                call sym.find_debug_info	      4429	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_23
0x4004cfe	          0x4885c0	                           test rax, rax	      4427	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_22
0x4004d01	          0x4889c3	                            mov rbx, rax	      4429	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_23
0x4004d04	     0xf84d6010000	                            je 0x4004ee0	      4427	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	CALL_22
0x4004d0a	        0x4c8b7b38	            mov r15, qword [rbx + 0x38] 	      4433	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2
0x4004d0e	          0x4d85ff	                           test r15, r15	      4434	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_17
0x4004d11	            0x74dd	                            je 0x4004cf0	      4434	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_17
0x4004d13	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      4437	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18	CALL_24
0x4004d18	        0x48035570	             add rdx, qword [rbp + 0x70]	      4437	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18	CALL_24
0x4004d1c	          0x4c89f1	                            mov rcx, r14	      4437	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18	CALL_24
0x4004d1f	          0x4889de	                            mov rsi, rbx	      4437	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18	CALL_24
0x4004d22	          0x4c89e7	                            mov rdi, r12	      4437	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18	CALL_24
0x4004d25	      0xe800000000	                          call 0x4004d2a	      4437	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18	CALL_24
0x4004d2a	          0x4885c0	                           test rax, rax	      4437	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18	CALL_24
0x4004d2d	            0x7468	                            je 0x4004d97	      4437	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2	IF_18	CALL_24
0x4004d2f	      0x4c017c2410	            add qword [rsp + 0x10], r15 	      4442	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2
0x4004d34	            0xebba	                           jmp 0x4004cf0	      4442	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2
0x4004d36	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4442	dwarf2.c	FUNCTION_66	ELSE_2	FOR_2
0x4004d40	      0xbe00000000	                              mov esi, 0	      4358	dwarf2.c	FUNCTION_66	IF_8	CALL_8
0x4004d45	          0x4889df	                            mov rdi, rbx	      4358	dwarf2.c	FUNCTION_66	IF_8	CALL_8
0x4004d48	      0xe800000000	                          call 0x4004d4d	      4358	dwarf2.c	FUNCTION_66	IF_8	CALL_8
0x4004d4d	          0x4885c0	                           test rax, rax	      4359	dwarf2.c	FUNCTION_66	IF_8	IF_9
0x4004d50	          0x4989c6	                            mov r14, rax	      4358	dwarf2.c	FUNCTION_66	IF_8	CALL_8
0x4004d53	     0xf846b020000	                            je 0x4004fc4	      4359	dwarf2.c	FUNCTION_66	IF_8	IF_9
0x4004d59	            0x31f6	                            xor esi, esi	      4370	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_10
0x4004d5b	          0x4c89f7	                            mov rdi, r14	      4370	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_10
0x4004d5e	      0xe800000000	                          call 0x4004d63	      4370	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_10
0x4004d63	          0x4885c0	                           test rax, rax	      4370	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_10
0x4004d66	          0x4989c4	                            mov r12, rax	      4370	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_10
0x4004d69	            0x7424	                            je 0x4004d8f	      4370	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_10
0x4004d6b	    0x814844000010	         or dword [rax + 0x44], 0x100000	      4371	dwarf2.c	FUNCTION_66	IF_8	IF_11
0x4004d72	      0xbe01000000	                              mov esi, 1	      4372	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_11
0x4004d77	          0x4889c7	                            mov rdi, rax	      4372	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_11
0x4004d7a	      0xe800000000	                          call 0x4004d7f	      4372	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_11
0x4004d7f	            0x85c0	                           test eax, eax	      4371	dwarf2.c	FUNCTION_66	IF_8	IF_11
0x4004d81	     0xf85fb010000	                           jne 0x4004f82	      4371	dwarf2.c	FUNCTION_66	IF_8	IF_11
0x4004d87	          0x4c89e7	                            mov rdi, r12	      4378	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_14
0x4004d8a	      0xe800000000	                          call 0x4004d8f	      4378	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_14
0x4004d8f	          0x4c89f7	                            mov rdi, r14	      4380	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_15
0x4004d92	      0xe800000000	                          call 0x4004d97	      4380	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_15
0x4004d97	            0x31c0	                            xor eax, eax	      4381	dwarf2.c	FUNCTION_66	IF_8	IF_11
0x4004d99	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      4451	dwarf2.c	FUNCTION_66
0x4004d9e	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4451	dwarf2.c	FUNCTION_66
0x4004da7	     0xf8535020000	                           jne 0x4004fe2	      4451	dwarf2.c	FUNCTION_66
0x4004dad	        0x4883c428	                           add rsp, 0x28	      4451	dwarf2.c	FUNCTION_66
0x4004db1	              0x5b	                                 pop rbx	      4451	dwarf2.c	FUNCTION_66
0x4004db2	              0x5d	                                 pop rbp	      4451	dwarf2.c	FUNCTION_66
0x4004db3	            0x415c	                                 pop r12	      4451	dwarf2.c	FUNCTION_66
0x4004db5	            0x415d	                                 pop r13	      4451	dwarf2.c	FUNCTION_66
0x4004db7	            0x415e	                                 pop r14	      4451	dwarf2.c	FUNCTION_66
0x4004db9	            0x415f	                                 pop r15	      4451	dwarf2.c	FUNCTION_66
0x4004dbb	              0xc3	                                     ret	      4451	dwarf2.c	FUNCTION_66
0x4004dbc	         0xf1f4000	                         nop dword [rax]	      4451	dwarf2.c	FUNCTION_66
0x4004dc0	        0x48c1e703	                              shl rdi, 3	      4260	dwarf2.c	FUNCTION_64	CALL_1
0x4004dc4	      0xe800000000	                          call 0x4004dc9	      4260	dwarf2.c	FUNCTION_64	CALL_1
0x4004dc9	          0x4885c0	                           test rax, rax	      4261	dwarf2.c	FUNCTION_64	IF_2
0x4004dcc	    0x488985d80000	            mov qword [rbp + 0xd8], rax 	      4260	dwarf2.c	FUNCTION_64	CALL_1
0x4004dd3	            0x74c2	                            je 0x4004d97	      4261	dwarf2.c	FUNCTION_64	IF_2
0x4004dd5	    0x8b93a0000000	            mov edx, dword [rbx + 0xa0] 	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x4004ddb	    0x488bbb900000	            mov rdi, qword [rbx + 0x90] 	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x4004de2	            0x85d2	                           test edx, edx	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x4004de4	     0xf8435feffff	                            je 0x4004c1f	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x4004dea	          0x83ea01	                              sub edx, 1	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x4004ded	      0x488d74d008	              lea rsi, [rax + rdx*8 + 8]	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x4004df2	            0xeb20	                           jmp 0x4004e14	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x4004df4	         0xf1f4000	                         nop dword [rax]	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x4004df8	        0x488b5760	            mov rdx, qword [rdi + 0x60] 	      4266	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x4004dfc	        0x48035128	             add rdx, qword [rcx + 0x28]	      4266	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x4004e00	          0x488910	                    mov qword [rax], rdx	      4266	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x4004e03	        0x4883c008	                              add rax, 8	      4266	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x4004e07	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x4004e0b	          0x4839c6	                            cmp rsi, rax	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x4004e0e	     0xf840bfeffff	                            je 0x4004c1f	      4263	dwarf2.c	FUNCTION_64	FOR_1
0x4004e14	        0x488b4f68	            mov rcx, qword [rdi + 0x68] 	      4265	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x4004e18	          0x4885c9	                           test rcx, rcx	      4265	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x4004e1b	            0x75db	                           jne 0x4004df8	      4265	dwarf2.c	FUNCTION_64	FOR_1	IF_3
0x4004e1d	        0x488b5728	            mov rdx, qword [rdi + 0x28] 	      4268	dwarf2.c	FUNCTION_64	FOR_1	ELSE_1
0x4004e21	          0x488910	                    mov qword [rax], rdx	      4268	dwarf2.c	FUNCTION_64	FOR_1	ELSE_1
0x4004e24	            0xebdd	                           jmp 0x4004e03	      4268	dwarf2.c	FUNCTION_64	FOR_1	ELSE_1
0x4004e26	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4268	dwarf2.c	FUNCTION_64	FOR_1	ELSE_1
0x4004e30	    0x8b8fa0000000	            mov ecx, dword [rdi + 0xa0] 	      4268	dwarf2.c	FUNCTION_64	FOR_1	ELSE_1
0x4004e36	    0x488b97900000	            mov rdx, qword [rdi + 0x90] 	      4268	dwarf2.c	FUNCTION_64	FOR_1	ELSE_1
0x4004e3d	            0x85c9	                           test ecx, ecx	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x4004e3f	     0xf84d3000000	                            je 0x4004f18	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x4004e45	    0x488b85d80000	            mov rax, qword [rbp + 0xd8] 	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x4004e4c	          0x83e901	                              sub ecx, 1	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x4004e4f	      0x4c8d44c808	               lea r8, [rax + rcx*8 + 8]	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x4004e54	            0xeb2c	                           jmp 0x4004e82	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x4004e56	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x4004e60	        0x488b4a60	            mov rcx, qword [rdx + 0x60] 	      4291	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1	IF_1
0x4004e64	        0x48034e28	             add rcx, qword [rsi + 0x28]	      4291	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1	IF_1
0x4004e68	          0x483908	                    cmp qword [rax], rcx	      4294	dwarf2.c	FUNCTION_65	FOR_1	ELSE_1	IF_2
0x4004e6b	     0xf855afdffff	                           jne 0x4004bcb	      4294	dwarf2.c	FUNCTION_65	FOR_1	ELSE_1	IF_2
0x4004e71	        0x4883c008	                              add rax, 8	      4294	dwarf2.c	FUNCTION_65	FOR_1	ELSE_1	IF_2
0x4004e75	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x4004e79	          0x4939c0	                             cmp r8, rax	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x4004e7c	     0xf8496000000	                            je 0x4004f18	      4286	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1
0x4004e82	        0x488b7268	            mov rsi, qword [rdx + 0x68] 	      4290	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1	IF_1
0x4004e86	          0x4885f6	                           test rsi, rsi	      4290	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1	IF_1
0x4004e89	            0x75d5	                           jne 0x4004e60	      4290	dwarf2.c	ELSE_1	FUNCTION_65	FOR_1	IF_1
0x4004e8b	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	      4293	dwarf2.c	FUNCTION_65	FOR_1	ELSE_1
0x4004e8f	            0xebd7	                           jmp 0x4004e68	      4293	dwarf2.c	FUNCTION_65	FOR_1	ELSE_1
0x4004e91	     0xf1f80000000	                         nop dword [rax]	      4293	dwarf2.c	FUNCTION_65	FOR_1	ELSE_1
0x4004e98	          0x4889ee	                            mov rsi, rbp	      4391	dwarf2.c	FUNCTION_66	IF_13	CALL_17
0x4004e9b	          0x4889df	                            mov rdi, rbx	      4391	dwarf2.c	FUNCTION_66	IF_13	CALL_17
0x4004e9e	      0xe88dbaffff	                 call sym.place_sections	      4391	dwarf2.c	FUNCTION_66	IF_13	CALL_17
0x4004ea3	            0x85c0	                           test eax, eax	      4391	dwarf2.c	FUNCTION_66	IF_13	CALL_17
0x4004ea5	     0xf85b6fdffff	                           jne 0x4004c61	      4391	dwarf2.c	FUNCTION_66	IF_13	CALL_17
0x4004eab	      0xe9e7feffff	                           jmp 0x4004d97	      4391	dwarf2.c	FUNCTION_66	IF_13	CALL_17
0x4004eb0	        0x498b4738	            mov rax, qword [r15 + 0x38] 	      4408	dwarf2.c	FUNCTION_66	IF_14
0x4004eb4	      0x4c8d4c2410	                    lea r9, [rsp + 0x10]	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4004eb9	        0x4c8d4570	                    lea r8, [rbp + 0x70]	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4004ebd	            0x31c9	                            xor ecx, ecx	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4004ebf	          0x4c89f2	                            mov rdx, r14	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4004ec2	          0x4c89e7	                            mov rdi, r12	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4004ec5	      0x4889442410	             mov qword [rsp + 0x10], rax	      4408	dwarf2.c	FUNCTION_66	IF_14
0x4004eca	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4004ece	        0x488d7030	                   lea rsi, [rax + 0x30]	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4004ed2	      0xe869b1ffff	                   call sym.read_section	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4004ed7	            0x85c0	                           test eax, eax	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4004ed9	     0xf84b8feffff	                            je 0x4004d97	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4004edf	              0x90	                                     nop	      4409	dwarf2.c	FUNCTION_66	IF_14	IF_15	CALL_19
0x4004ee0	        0x488b4570	            mov rax, qword [rbp + 0x70] 	      4446	dwarf2.c	FUNCTION_66
0x4004ee4	          0x4c89ee	                            mov rsi, r13	      4446	dwarf2.c	FUNCTION_66
0x4004ee7	          0x4c89e7	                            mov rdi, r12	      4446	dwarf2.c	FUNCTION_66
0x4004eea	        0x48894518	            mov qword [rbp + 0x18], rax 	      4446	dwarf2.c	FUNCTION_66
0x4004eee	      0x4803442410	             add rax, qword [rsp + 0x10]	      4447	dwarf2.c	FUNCTION_66
0x4004ef3	        0x48894520	            mov qword [rbp + 0x20], rax 	      4447	dwarf2.c	FUNCTION_66
0x4004ef7	      0xe864bdffff	        call sym.find_debug_info.part.21	      4447	dwarf2.c	FUNCTION_66
0x4004efc	        0x48894538	            mov qword [rbp + 0x38], rax 	      4448	dwarf2.c	FUNCTION_66	CALL_25
0x4004f00	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      4449	dwarf2.c	FUNCTION_66
0x4004f04	        0x48894540	            mov qword [rbp + 0x40], rax 	      4449	dwarf2.c	FUNCTION_66
0x4004f08	      0xb801000000	                              mov eax, 1	      4450	dwarf2.c	FUNCTION_66
0x4004f0d	      0xe987feffff	                           jmp 0x4004d99	      4450	dwarf2.c	FUNCTION_66
0x4004f12	    0x660f1f440000	                    nop word [rax + rax]	      4450	dwarf2.c	FUNCTION_66
0x4004f18	      0x48837d3000	               cmp qword [rbp + 0x30], 0	      4324	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3
0x4004f1d	     0xf8474feffff	                            je 0x4004d97	      4324	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3
0x4004f23	        0x8b542408	                mov edx, dword [rsp + 8]	      4326	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4	CALL_2
0x4004f27	      0xb801000000	                              mov eax, 1	      4328	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3
0x4004f2c	            0x85d2	                           test edx, edx	      4326	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4	CALL_2
0x4004f2e	     0xf8465feffff	                            je 0x4004d99	      4326	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4	CALL_2
0x4004f34	          0x4889ee	                            mov rsi, rbp	      4326	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4	CALL_2
0x4004f37	      0xe8f4b9ffff	                 call sym.place_sections	      4326	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4	CALL_2
0x4004f3c	            0x85c0	                           test eax, eax	      4327	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4
0x4004f3e	           0xf95c0	                                setne al	      4327	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4
0x4004f41	           0xfb6c0	                           movzx eax, al	      4327	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4
0x4004f44	      0xe950feffff	                           jmp 0x4004d99	      4327	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4
0x4004f49	     0xf1f80000000	                         nop dword [rax]	      4327	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4
0x4004f50	          0x4989dc	                            mov r12, rbx	      4327	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4
0x4004f53	      0xc644240f01	                 mov byte [rsp + 0xf], 1	      4327	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4
0x4004f58	      0xe9d6fcffff	                           jmp 0x4004c33	      4327	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4
0x4004f5d	           0xf1f00	                         nop dword [rax]	      4327	dwarf2.c	FUNCTION_66	IF_1	IF_2	IF_3	IF_4
0x4004f60	      0xbe18010000	                          mov esi, 0x118	      4338	dwarf2.c	FUNCTION_66	ELSE_1	CALL_5
0x4004f65	      0xe800000000	                          call 0x4004f6a	      4338	dwarf2.c	FUNCTION_66	ELSE_1	CALL_5
0x4004f6a	          0x4885c0	                           test rax, rax	      4339	dwarf2.c	FUNCTION_66	ELSE_1	IF_5
0x4004f6d	          0x4889c5	                            mov rbp, rax	      4338	dwarf2.c	FUNCTION_66	ELSE_1	CALL_5
0x4004f70	     0xf858ffcffff	                           jne 0x4004c05	      4339	dwarf2.c	FUNCTION_66	ELSE_1	IF_5
0x4004f76	      0xe91cfeffff	                           jmp 0x4004d97	      4339	dwarf2.c	FUNCTION_66	ELSE_1	IF_5
0x4004f7b	            0x31ff	                            xor edi, edi	      4417	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x4004f7d	      0xe937fdffff	                           jmp 0x4004cb9	      4417	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x4004f82	          0x4c89ee	                            mov rsi, r13	      4417	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x4004f85	          0x4c89e7	                            mov rdi, r12	      4417	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x4004f88	      0xe8d3bcffff	        call sym.find_debug_info.part.21	      4417	dwarf2.c	FUNCTION_66	ELSE_2	FOR_1
0x4004f8d	          0x4885c0	                           test rax, rax	      4373	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_12
0x4004f90	          0x4989c7	                            mov r15, rax	      4373	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_12
0x4004f93	     0xf84eefdffff	                            je 0x4004d87	      4373	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_12
0x4004f99	          0x4c89e7	                            mov rdi, r12	      4375	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_13
0x4004f9c	      0xe800000000	                          call 0x4004fa1	      4375	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_13
0x4004fa1	            0x85c0	                           test eax, eax	      4375	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_13
0x4004fa3	     0xf84defdffff	                            je 0x4004d87	      4375	dwarf2.c	FUNCTION_66	IF_8	IF_11	CALL_13
0x4004fa9	    0x4d8bb424b000	            mov r14, qword [r12 + 0xb0] 	      4384	dwarf2.c	FUNCTION_66	IF_8	CALL_16
0x4004fb1	    0xc78514010000	              mov dword [rbp + 0x114], 1	      4386	dwarf2.c	FUNCTION_66	IF_8
0x4004fbb	        0x4c897578	            mov qword [rbp + 0x78], r14 	      4385	dwarf2.c	FUNCTION_66	IF_8
0x4004fbf	      0xe98dfcffff	                           jmp 0x4004c51	      4385	dwarf2.c	FUNCTION_66	IF_8
0x4004fc4	      0xbe00000000	                              mov esi, 0	      4360	dwarf2.c	FUNCTION_66	IF_8	CALL_9
0x4004fc9	          0x4889df	                            mov rdi, rbx	      4360	dwarf2.c	FUNCTION_66	IF_8	CALL_9
0x4004fcc	      0xe800000000	                          call 0x4004fd1	      4360	dwarf2.c	FUNCTION_66	IF_8	CALL_9
0x4004fd1	          0x4885c0	                           test rax, rax	      4362	dwarf2.c	FUNCTION_66	IF_8	IF_10
0x4004fd4	          0x4989c6	                            mov r14, rax	      4360	dwarf2.c	FUNCTION_66	IF_8	CALL_9
0x4004fd7	     0xf84bafdffff	                            je 0x4004d97	      4362	dwarf2.c	FUNCTION_66	IF_8	IF_10
0x4004fdd	      0xe977fdffff	                           jmp 0x4004d59	      4362	dwarf2.c	FUNCTION_66	IF_8	IF_10
0x4004fe2	      0xe800000000	                          call 0x4004fe7	      4451	dwarf2.c	FUNCTION_66
info_hash_table_newfunc	FOR,0:CALL,2:WHILE,0:ELSE,0:IF,3:functions,0:SWITCH,0:DO,0	26
0x40007d0	              0x53	                                push rbx	       421	dwarf2.c	FUNCTION_1
0x40007d1	          0x4889f3	                            mov rbx, rsi	       421	dwarf2.c	FUNCTION_1
0x40007d4	        0x4883ec10	                           sub rsp, 0x10	       421	dwarf2.c	FUNCTION_1
0x40007d8	          0x4885ff	                           test rdi, rdi	       426	dwarf2.c	FUNCTION_1	IF_1
0x40007db	            0x7423	                            je 0x4000800	       426	dwarf2.c	FUNCTION_1	IF_1
0x40007dd	          0x4889de	                            mov rsi, rbx	       435	dwarf2.c	FUNCTION_1
0x40007e0	      0xe800000000	                          call 0x40007e5	       435	dwarf2.c	FUNCTION_1
0x40007e5	          0x4885c0	                           test rax, rax	       439	dwarf2.c	FUNCTION_1	IF_3
0x40007e8	            0x7435	                            je 0x400081f	       439	dwarf2.c	FUNCTION_1	IF_3
0x40007ea	    0x48c740180000	               mov qword [rax + 0x18], 0	       440	dwarf2.c	FUNCTION_1	IF_3
0x40007f2	        0x4883c410	                           add rsp, 0x10	       443	dwarf2.c	FUNCTION_1
0x40007f6	              0x5b	                                 pop rbx	       443	dwarf2.c	FUNCTION_1
0x40007f7	              0xc3	                                     ret	       443	dwarf2.c	FUNCTION_1
0x40007f8	     0xf1f84000000	                   nop dword [rax + rax]	       443	dwarf2.c	FUNCTION_1
0x4000800	          0x4889df	                            mov rdi, rbx	       428	dwarf2.c	FUNCTION_1	IF_1	CALL_1
0x4000803	      0xbe20000000	                           mov esi, 0x20	       428	dwarf2.c	FUNCTION_1	IF_1	CALL_1
0x4000808	      0x4889542408	                mov qword [rsp + 8], rdx	       428	dwarf2.c	FUNCTION_1	IF_1	CALL_1
0x400080d	      0xe800000000	                          call 0x4000812	       428	dwarf2.c	FUNCTION_1	IF_1	CALL_1
0x4000812	          0x4885c0	                           test rax, rax	       430	dwarf2.c	FUNCTION_1	IF_1	IF_2
0x4000815	          0x4889c7	                            mov rdi, rax	       428	dwarf2.c	FUNCTION_1	IF_1	CALL_1
0x4000818	      0x488b542408	                mov rdx, qword [rsp + 8]	       430	dwarf2.c	FUNCTION_1	IF_1	IF_2
0x400081d	            0x75be	                           jne 0x40007dd	       430	dwarf2.c	FUNCTION_1	IF_1	IF_2
0x400081f	        0x4883c410	                           add rsp, 0x10	       443	dwarf2.c	FUNCTION_1
0x4000823	            0x31c0	                            xor eax, eax	       443	dwarf2.c	FUNCTION_1
0x4000825	              0x5b	                                 pop rbx	       443	dwarf2.c	FUNCTION_1
0x4000826	              0xc3	                                     ret	       443	dwarf2.c	FUNCTION_1
line_info_add_include_dir_stub	FOR,0:CALL,1:WHILE,0:ELSE,0:IF,0:functions,0:SWITCH,0:DO,0	4
0x4000e90	          0x4889f2	                            mov rdx, rsi	      1850	dwarf2.c	FUNCTION_32
0x4000e93	        0x488d7720	                   lea rsi, [rdi + 0x20]	      1850	dwarf2.c	FUNCTION_32
0x4000e97	        0x4883c70c	                            add rdi, 0xc	      1850	dwarf2.c	FUNCTION_32
0x4000e9b	            0xeb83	jmp sym.line_info_add_include_dir.isra.27	      1851	dwarf2.c	FUNCTION_32	CALL_1
read_attribute_value	FOR,0:CALL,43:WHILE,0:ELSE,2:IF,9:functions,0:SWITCH,1:DO,0	567
0x4000fb0	            0x4157	                                push r15	      1092	dwarf2.c	FUNCTION_21
0x4000fb2	            0x4156	                                push r14	      1092	dwarf2.c	FUNCTION_21
0x4000fb4	          0x4989d7	                            mov r15, rdx	      1092	dwarf2.c	FUNCTION_21
0x4000fb7	            0x4155	                                push r13	      1092	dwarf2.c	FUNCTION_21
0x4000fb9	            0x4154	                                push r12	      1092	dwarf2.c	FUNCTION_21
0x4000fbb	          0x4989cd	                            mov r13, rcx	      1092	dwarf2.c	FUNCTION_21
0x4000fbe	              0x55	                                push rbp	      1092	dwarf2.c	FUNCTION_21
0x4000fbf	              0x53	                                push rbx	      1092	dwarf2.c	FUNCTION_21
0x4000fc0	          0x4889fd	                            mov rbp, rdi	      1092	dwarf2.c	FUNCTION_21
0x4000fc3	            0x89f3	                            mov ebx, esi	      1092	dwarf2.c	FUNCTION_21
0x4000fc5	          0x4d89c4	                             mov r12, r8	      1092	dwarf2.c	FUNCTION_21
0x4000fc8	        0x4883ec28	                           sub rsp, 0x28	      1092	dwarf2.c	FUNCTION_21
0x4000fcc	    0x64488b042528	                mov rax, qword fs:[0x28]	      1092	dwarf2.c	FUNCTION_21
0x4000fd5	      0x4889442418	             mov qword [rsp + 0x18], rax	      1092	dwarf2.c	FUNCTION_21
0x4000fda	            0x31c0	                            xor eax, eax	      1092	dwarf2.c	FUNCTION_21
0x4000fdc	          0x4d39c8	                              cmp r8, r9	      1098	dwarf2.c	FUNCTION_21	IF_1
0x4000fdf	            0x7209	                            jb 0x4000fea	      1098	dwarf2.c	FUNCTION_21	IF_1
0x4000fe1	          0x83fe19	                           cmp esi, 0x19	      1098	dwarf2.c	FUNCTION_21	IF_1
0x4000fe4	     0xf85a6000000	                           jne 0x4001090	      1098	dwarf2.c	FUNCTION_21	IF_1
0x4000fea	          0x83fb10	                           cmp ebx, 0x10	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4000fed	        0x4d8b7510	            mov r14, qword [r13 + 0x10] 	      1093	dwarf2.c	FUNCTION_21
0x4000ff1	          0x895d04	                mov dword [rbp + 4], ebx	      1105	dwarf2.c	FUNCTION_21
0x4000ff4	     0xf84de030000	                            je 0x40013d8	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4000ffa	            0x7744	                            ja 0x4001040	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4000ffc	          0x83fb08	                              cmp ebx, 8	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4000fff	     0xf84a3050000	                            je 0x40015a8	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001005	     0xf86dd000000	                           jbe 0x40010e8	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400100b	          0x83fb0c	                            cmp ebx, 0xc	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400100e	     0xf8415020000	                            je 0x4001229	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001014	     0xf862e020000	                           jbe 0x4001248	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400101a	          0x83fb0e	                            cmp ebx, 0xe	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400101d	     0xf841d060000	                            je 0x4001640	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001023	     0xf87cf010000	                            ja 0x40011f8	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001029	          0x4d89c8	                              mov r8, r9	      1216	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_30
0x400102c	      0xb901000000	                              mov ecx, 1	      1216	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_30
0x4001031	      0xe9c7010000	                           jmp 0x40011fd	      1216	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_30
0x4001036	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1216	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_30
0x4001040	          0x83fb17	                           cmp ebx, 0x17	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001043	     0xf8427050000	                            je 0x4001570	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001049	     0xf87e1000000	                            ja 0x4001130	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400104f	          0x83fb13	                           cmp ebx, 0x13	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001052	     0xf8410030000	                            je 0x4001368	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001058	     0xf86c2010000	                           jbe 0x4001220	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400105e	          0x83fb15	                           cmp ebx, 0x15	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001061	     0xf8491010000	                            je 0x40011f8	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001067	     0xf87ab030000	                            ja 0x4001418	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400106d	      0x498d5c2408	                      lea rbx, [r12 + 8]	       620	dwarf2.c	FUNCTION_10	IF_1
0x4001072	            0x31c0	                            xor eax, eax	       621	dwarf2.c	FUNCTION_10	IF_1
0x4001074	          0x4939d9	                             cmp r9, rbx	       620	dwarf2.c	FUNCTION_10	IF_1
0x4001077	            0x720f	                            jb 0x4001088	       620	dwarf2.c	FUNCTION_10	IF_1
0x4001079	        0x498d7e08	                      lea rdi, [r14 + 8]	       620	dwarf2.c	FUNCTION_10	IF_1
0x400107d	          0x4c89e6	                            mov rsi, r12	       620	dwarf2.c	FUNCTION_10	IF_1
0x4001080	      0xe8ebf7ffff	     call sym.read_8_bytes.isra.6.part.7	       620	dwarf2.c	FUNCTION_10	IF_1
0x4001085	           0xf1f00	                         nop dword [rax]	       620	dwarf2.c	FUNCTION_10	IF_1
0x4001088	        0x48894508	                mov qword [rbp + 8], rax	      1242	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_36
0x400108c	            0xeb2d	                           jmp 0x40010bb	      1244	dwarf2.c	FUNCTION_21	SWITCH_1
0x400108e	            0x6690	                                     nop	      1244	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001090	      0xba05000000	                              mov edx, 5	      1100	dwarf2.c	FUNCTION_21	IF_1	CALL_2
0x4001095	      0xbe00000000	                              mov esi, 0	      1100	dwarf2.c	FUNCTION_21	IF_1	CALL_2
0x400109a	      0xbf00000000	                              mov edi, 0	      1100	dwarf2.c	FUNCTION_21	IF_1	CALL_2
0x400109f	      0xe800000000	                          call 0x40010a4	      1100	dwarf2.c	FUNCTION_21	IF_1	CALL_2
0x40010a4	          0x4889c7	                            mov rdi, rax	      1100	dwarf2.c	FUNCTION_21	IF_1	CALL_2
0x40010a7	            0x31c0	                            xor eax, eax	      1100	dwarf2.c	FUNCTION_21	IF_1	CALL_2
0x40010a9	          0x4c89e3	                            mov rbx, r12	      1102	dwarf2.c	FUNCTION_21	IF_1
0x40010ac	      0xe800000000	                          call 0x40010b1	      1100	dwarf2.c	FUNCTION_21	IF_1	CALL_2
0x40010b1	      0xbf11000000	                           mov edi, 0x11	      1101	dwarf2.c	FUNCTION_21	IF_1	CALL_3
0x40010b6	      0xe800000000	                          call 0x40010bb	      1101	dwarf2.c	FUNCTION_21	IF_1	CALL_3
0x40010bb	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1274	dwarf2.c	FUNCTION_21
0x40010c0	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1274	dwarf2.c	FUNCTION_21
0x40010c9	          0x4889d8	                            mov rax, rbx	      1274	dwarf2.c	FUNCTION_21
0x40010cc	     0xf855e080000	                           jne 0x4001930	      1274	dwarf2.c	FUNCTION_21
0x40010d2	        0x4883c428	                           add rsp, 0x28	      1274	dwarf2.c	FUNCTION_21
0x40010d6	              0x5b	                                 pop rbx	      1274	dwarf2.c	FUNCTION_21
0x40010d7	              0x5d	                                 pop rbp	      1274	dwarf2.c	FUNCTION_21
0x40010d8	            0x415c	                                 pop r12	      1274	dwarf2.c	FUNCTION_21
0x40010da	            0x415d	                                 pop r13	      1274	dwarf2.c	FUNCTION_21
0x40010dc	            0x415e	                                 pop r14	      1274	dwarf2.c	FUNCTION_21
0x40010de	            0x415f	                                 pop r15	      1274	dwarf2.c	FUNCTION_21
0x40010e0	              0xc3	                                     ret	      1274	dwarf2.c	FUNCTION_21
0x40010e1	     0xf1f80000000	                         nop dword [rax]	      1274	dwarf2.c	FUNCTION_21
0x40010e8	          0x83fb04	                              cmp ebx, 4	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40010eb	     0xf84df040000	                            je 0x40015d0	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40010f1	     0xf8611020000	                           jbe 0x4001308	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40010f7	          0x83fb06	                              cmp ebx, 6	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40010fa	     0xf8468020000	                            je 0x4001368	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001100	     0xf8767ffffff	                            ja 0x400106d	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001106	      0x498d5c2402	                      lea rbx, [r12 + 2]	       604	dwarf2.c	FUNCTION_8	IF_1
0x400110b	            0x31c0	                            xor eax, eax	       604	dwarf2.c	FUNCTION_8	IF_1
0x400110d	          0x4939d9	                             cmp r9, rbx	       604	dwarf2.c	FUNCTION_8	IF_1
0x4001110	     0xf8272ffffff	                            jb 0x4001088	       604	dwarf2.c	FUNCTION_8	IF_1
0x4001116	        0x498d7e08	                      lea rdi, [r14 + 8]	       604	dwarf2.c	FUNCTION_8	IF_1
0x400111a	          0x4c89e6	                            mov rsi, r12	       604	dwarf2.c	FUNCTION_8	IF_1
0x400111d	      0xe80ef7ffff	     call sym.read_2_bytes.isra.2.part.3	       604	dwarf2.c	FUNCTION_8	IF_1
0x4001122	            0x89c0	                            mov eax, eax	       604	dwarf2.c	FUNCTION_8	IF_1
0x4001124	      0xe95fffffff	                           jmp 0x4001088	       604	dwarf2.c	FUNCTION_8	IF_1
0x4001129	     0xf1f80000000	                         nop dword [rax]	       604	dwarf2.c	FUNCTION_8	IF_1
0x4001130	          0x83fb20	                           cmp ebx, 0x20	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001133	     0xf8434ffffff	                            je 0x400106d	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001139	     0xf8791010000	                            ja 0x40012d0	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400113f	          0x83fb19	                           cmp ebx, 0x19	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001142	     0xf8410040000	                            je 0x4001558	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001148	     0xf8205010000	                            jb 0x4001253	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400114e	          0x83fb1f	                           cmp ebx, 0x1f	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001151	     0xf8549020000	                           jne 0x40013a0	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001157	    0x410fb685ad00	           movzx eax, byte [r13 + 0xad] 	       739	dwarf2.c	FUNCTION_14	IF_1
0x400115f	    0x498b9da00000	            mov rbx, qword [r13 + 0xa0] 	       736	dwarf2.c	FUNCTION_14
0x4001166	          0x4889c2	                            mov rdx, rax	       739	dwarf2.c	FUNCTION_14	IF_1
0x4001169	          0x4c01e0	                            add rax, r12	       739	dwarf2.c	FUNCTION_14	IF_1
0x400116c	          0x4939c1	                             cmp r9, rax	       739	dwarf2.c	FUNCTION_14	IF_1
0x400116f	     0xf8263050000	                            jb 0x40016d8	       739	dwarf2.c	FUNCTION_14	IF_1
0x4001175	          0x80fa04	                               cmp dl, 4	       745	dwarf2.c	FUNCTION_14	IF_2
0x4001178	     0xf8442060000	                            je 0x40017c0	       745	dwarf2.c	FUNCTION_14	IF_2
0x400117e	      0x498d442408	                      lea rax, [r12 + 8]	       620	dwarf2.c	FUNCTION_10	IF_1
0x4001183	          0x4531ff	                          xor r15d, r15d	       621	dwarf2.c	FUNCTION_10	IF_1
0x4001186	          0x4c89f7	                            mov rdi, r14	       620	dwarf2.c	FUNCTION_10	IF_1
0x4001189	          0x4939c1	                             cmp r9, rax	       620	dwarf2.c	FUNCTION_10	IF_1
0x400118c	     0xf83cd060000	                           jae 0x400185f	       620	dwarf2.c	FUNCTION_10	IF_1
0x4001192	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x4001196	        0x89542414	             mov dword [rsp + 0x14], edx	       750	dwarf2.c	FUNCTION_14
0x400119a	    0x4c8d8bb80000	                    lea r9, [rbx + 0xb8]	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x40011a1	        0x488b5378	            mov rdx, qword [rbx + 0x78] 	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x40011a5	    0x4c8d83b00000	                    lea r8, [rbx + 0xb0]	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x40011ac	          0x4c89f9	                            mov rcx, r15	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x40011af	    0x488db0000100	                  lea rsi, [rax + 0x100]	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x40011b6	      0xe885eeffff	                   call sym.read_section	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x40011bb	            0x85c0	                           test eax, eax	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x40011bd	     0xf845c060000	                            je 0x400181f	       752	dwarf2.c	FUNCTION_14	IF_3	CALL_3
0x40011c3	    0x4c3bbbb80000	            cmp r15, qword [rbx + 0xb8] 	       758	dwarf2.c	FUNCTION_14	IF_4
0x40011ca	     0xf834f060000	                           jae 0x400181f	       758	dwarf2.c	FUNCTION_14	IF_4
0x40011d0	          0x4c89f8	                            mov rax, r15	       760	dwarf2.c	FUNCTION_14
0x40011d3	    0x480383b00000	             add rax, qword [rbx + 0xb0]	       760	dwarf2.c	FUNCTION_14
0x40011da	          0x803800	                       cmp byte [rax], 0	       761	dwarf2.c	FUNCTION_14	IF_5
0x40011dd	     0xf843c060000	                            je 0x400181f	       761	dwarf2.c	FUNCTION_14	IF_5
0x40011e3	        0x8b5c2414	            mov ebx, dword [rsp + 0x14] 	       761	dwarf2.c	FUNCTION_14	IF_5
0x40011e7	        0x48894508	                mov qword [rbp + 8], rax	      1175	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_20
0x40011eb	          0x4c01e3	                            add rbx, r12	      1176	dwarf2.c	FUNCTION_21	SWITCH_1
0x40011ee	      0xe9c8feffff	                           jmp 0x40010bb	      1177	dwarf2.c	FUNCTION_21	SWITCH_1
0x40011f3	       0xf1f440000	                   nop dword [rax + rax]	      1177	dwarf2.c	FUNCTION_21	SWITCH_1
0x40011f8	          0x4d89c8	                              mov r8, r9	      1246	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_37
0x40011fb	            0x31c9	                            xor ecx, ecx	      1246	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_37
0x40011fd	      0x488d542414	                   lea rdx, [rsp + 0x14]	      1246	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_37
0x4001202	          0x4c89e6	                            mov rsi, r12	      1246	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_37
0x4001205	          0x4c89f7	                            mov rdi, r14	      1246	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_37
0x4001208	      0xe800000000	                          call 0x400120d	      1246	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_37
0x400120d	        0x48894508	                mov qword [rbp + 8], rax	      1246	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_37
0x4001211	        0x8b5c2414	            mov ebx, dword [rsp + 0x14] 	      1248	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001215	          0x4c01e3	                            add rbx, r12	      1248	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001218	      0xe99efeffff	                           jmp 0x40010bb	      1249	dwarf2.c	FUNCTION_21	SWITCH_1
0x400121d	           0xf1f00	                         nop dword [rax]	      1249	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001220	          0x83fb11	                           cmp ebx, 0x11	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001223	     0xf8567010000	                           jne 0x4001390	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001229	      0x498d5c2401	                      lea rbx, [r12 + 1]	       588	dwarf2.c	FUNCTION_6	IF_1
0x400122e	            0x31c0	                            xor eax, eax	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001230	          0x4939d9	                             cmp r9, rbx	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001233	     0xf824ffeffff	                            jb 0x4001088	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001239	      0x410fb60424	                   movzx eax, byte [r12]	       588	dwarf2.c	FUNCTION_6	IF_1
0x400123e	      0xe945feffff	                           jmp 0x4001088	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001243	       0xf1f440000	                   nop dword [rax + rax]	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001248	          0x83fb0a	                            cmp ebx, 0xa	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400124b	     0xf84bf020000	                            je 0x4001510	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001251	            0x77d6	                            ja 0x4001229	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001253	      0xbe10000000	                           mov esi, 0x10	      1185	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_22
0x4001258	          0x4c89f7	                            mov rdi, r14	      1185	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_22
0x400125b	      0x4c894c2408	                 mov qword [rsp + 8], r9	      1185	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_22
0x4001260	      0xe800000000	                          call 0x4001265	      1185	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_22
0x4001265	          0x4885c0	                           test rax, rax	      1186	dwarf2.c	FUNCTION_21	SWITCH_1	IF_7
0x4001268	          0x4989c5	                            mov r13, rax	      1185	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_22
0x400126b	     0xf8459010000	                            je 0x40013ca	      1186	dwarf2.c	FUNCTION_21	SWITCH_1	IF_7
0x4001271	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      1188	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_23
0x4001276	      0x488d542414	                   lea rdx, [rsp + 0x14]	      1188	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_23
0x400127b	            0x31c9	                            xor ecx, ecx	      1188	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_23
0x400127d	          0x4c89e6	                            mov rsi, r12	      1188	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_23
0x4001280	          0x4c89f7	                            mov rdi, r14	      1188	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_23
0x4001283	          0x4d89c8	                              mov r8, r9	      1188	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_23
0x4001286	      0xe800000000	                          call 0x400128b	      1188	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_23
0x400128b	        0x8b542414	            mov edx, dword [rsp + 0x14] 	      1190	dwarf2.c	FUNCTION_21	SWITCH_1
0x400128f	        0x41894500	                    mov dword [r13], eax	      1188	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_23
0x4001293	            0x89c0	                            mov eax, eax	       631	dwarf2.c	FUNCTION_11
0x4001295	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       633	dwarf2.c	FUNCTION_11	IF_1
0x400129a	          0x4901d4	                            add r12, rdx	      1190	dwarf2.c	FUNCTION_21	SWITCH_1
0x400129d	        0x498d1c04	                    lea rbx, [r12 + rax]	       631	dwarf2.c	FUNCTION_11
0x40012a1	          0x4939d9	                             cmp r9, rbx	       633	dwarf2.c	FUNCTION_11	IF_1
0x40012a4	     0xf82a1000000	                            jb 0x400134b	       633	dwarf2.c	FUNCTION_11	IF_1
0x40012aa	          0x4939dc	                            cmp r12, rbx	       633	dwarf2.c	FUNCTION_11	IF_1
0x40012ad	     0xf8798000000	                            ja 0x400134b	       633	dwarf2.c	FUNCTION_11	IF_1
0x40012b3	        0x4d896508	                mov qword [r13 + 8], r12	       641	dwarf2.c	FUNCTION_11	ELSE_1
0x40012b7	    0x660f1f840000	                    nop word [rax + rax]	       641	dwarf2.c	FUNCTION_11	ELSE_1
0x40012c0	        0x4c896d08	                mov qword [rbp + 8], r13	      1192	dwarf2.c	FUNCTION_21	SWITCH_1
0x40012c4	      0xe9f2fdffff	                           jmp 0x40010bb	      1193	dwarf2.c	FUNCTION_21	SWITCH_1
0x40012c9	     0xf1f80000000	                         nop dword [rax]	      1193	dwarf2.c	FUNCTION_21	SWITCH_1
0x40012d0	    0x81fb201f0000	                         cmp ebx, 0x1f20	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40012d6	     0xf8494020000	                            je 0x4001570	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40012dc	    0x81fb211f0000	                         cmp ebx, 0x1f21	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40012e2	     0xf8480010000	                            je 0x4001468	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40012e8	          0x83fb21	                           cmp ebx, 0x21	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40012eb	     0xf85af000000	                           jne 0x40013a0	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40012f1	    0xc745040d0000	                mov dword [rbp + 4], 0xd	      1264	dwarf2.c	FUNCTION_21	SWITCH_1
0x40012f8	        0x4c897d08	                mov qword [rbp + 8], r15	      1265	dwarf2.c	FUNCTION_21	SWITCH_1
0x40012fc	          0x4c89e3	                            mov rbx, r12	      1266	dwarf2.c	FUNCTION_21	SWITCH_1
0x40012ff	      0xe9b7fdffff	                           jmp 0x40010bb	      1266	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001304	         0xf1f4000	                         nop dword [rax]	      1266	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001308	          0x83fb01	                              cmp ebx, 1	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400130b	     0xf84da000000	                            je 0x40013eb	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001311	          0x83fb03	                              cmp ebx, 3	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001314	     0xf8586000000	                           jne 0x40013a0	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x400131a	      0xbe10000000	                           mov esi, 0x10	      1136	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_9
0x400131f	          0x4c89f7	                            mov rdi, r14	      1136	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_9
0x4001322	      0x4c894c2408	                 mov qword [rsp + 8], r9	      1136	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_9
0x4001327	      0xe800000000	                          call 0x400132c	      1136	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_9
0x400132c	          0x4885c0	                           test rax, rax	      1137	dwarf2.c	FUNCTION_21	SWITCH_1	IF_5
0x400132f	          0x4989c5	                            mov r13, rax	      1136	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_9
0x4001332	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      1137	dwarf2.c	FUNCTION_21	SWITCH_1	IF_5
0x4001337	     0xf848d000000	                            je 0x40013ca	      1137	dwarf2.c	FUNCTION_21	SWITCH_1	IF_5
0x400133d	      0x4d8d7c2402	                      lea r15, [r12 + 2]	       604	dwarf2.c	FUNCTION_8	IF_1
0x4001342	          0x4d39f9	                             cmp r9, r15	       604	dwarf2.c	FUNCTION_8	IF_1
0x4001345	     0xf8301040000	                           jae 0x400174c	       604	dwarf2.c	FUNCTION_8	IF_1
0x400134b	    0x49c745080000	                  mov qword [r13 + 8], 0	       635	dwarf2.c	FUNCTION_11	IF_1
0x4001353	    0x41c745000000	                      mov dword [r13], 0	       636	dwarf2.c	FUNCTION_11	IF_1
0x400135b	          0x4c89cb	                             mov rbx, r9	       636	dwarf2.c	FUNCTION_11	IF_1
0x400135e	      0xe95dffffff	                           jmp 0x40012c0	       636	dwarf2.c	FUNCTION_11	IF_1
0x4001363	       0xf1f440000	                   nop dword [rax + rax]	       636	dwarf2.c	FUNCTION_11	IF_1
0x4001368	      0x498d5c2404	                      lea rbx, [r12 + 4]	       612	dwarf2.c	FUNCTION_9	IF_1
0x400136d	            0x31c0	                            xor eax, eax	       612	dwarf2.c	FUNCTION_9	IF_1
0x400136f	          0x4939d9	                             cmp r9, rbx	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001372	     0xf8210fdffff	                            jb 0x4001088	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001378	        0x498d7e08	                      lea rdi, [r14 + 8]	       612	dwarf2.c	FUNCTION_9	IF_1
0x400137c	          0x4c89e6	                            mov rsi, r12	       612	dwarf2.c	FUNCTION_9	IF_1
0x400137f	      0xe8ccf4ffff	     call sym.read_4_bytes.isra.4.part.5	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001384	            0x89c0	                            mov eax, eax	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001386	      0xe9fdfcffff	                           jmp 0x4001088	       612	dwarf2.c	FUNCTION_9	IF_1
0x400138b	       0xf1f440000	                   nop dword [rax + rax]	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001390	          0x83fb12	                           cmp ebx, 0x12	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001393	     0xf846dfdffff	                            je 0x4001106	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001399	     0xf1f80000000	                         nop dword [rax]	      1107	dwarf2.c	FUNCTION_21	SWITCH_1
0x40013a0	      0xba05000000	                              mov edx, 5	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x40013a5	      0xbe00000000	                              mov esi, 0	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x40013aa	      0xbf00000000	                              mov edi, 0	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x40013af	      0xe800000000	                          call 0x40013b4	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x40013b4	            0x89de	                            mov esi, ebx	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x40013b6	          0x4889c7	                            mov rdi, rax	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x40013b9	            0x31c0	                            xor eax, eax	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x40013bb	      0xe800000000	                          call 0x40013c0	      1268	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_42
0x40013c0	      0xbf11000000	                           mov edi, 0x11	      1270	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_43
0x40013c5	      0xe800000000	                          call 0x40013ca	      1270	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_43
0x40013ca	            0x31db	                            xor ebx, ebx	      1271	dwarf2.c	FUNCTION_21	SWITCH_1
0x40013cc	      0xe9eafcffff	                           jmp 0x40010bb	      1271	dwarf2.c	FUNCTION_21	SWITCH_1
0x40013d1	     0xf1f80000000	                         nop dword [rax]	      1271	dwarf2.c	FUNCTION_21	SWITCH_1
0x40013d8	    0x418b85a80000	            mov eax, dword [r13 + 0xa8] 	      1112	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2
0x40013df	          0x83e803	                              sub eax, 3	      1112	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2
0x40013e2	          0x83f801	                              cmp eax, 1	      1112	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2
0x40013e5	     0xf8685010000	                           jbe 0x4001570	      1112	dwarf2.c	FUNCTION_21	SWITCH_1	IF_2
0x40013eb	    0x410fb6b5ac00	           movzx esi, byte [r13 + 0xac] 	      1123	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_6
0x40013f3	          0x4c89c9	                             mov rcx, r9	      1123	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_6
0x40013f6	          0x4c89e2	                            mov rdx, r12	      1123	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_6
0x40013f9	          0x4c89f7	                            mov rdi, r14	      1123	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_6
0x40013fc	      0xe89ffaffff	           call sym.read_address.isra.28	      1123	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_6
0x4001401	        0x48894508	                mov qword [rbp + 8], rax	      1123	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_6
0x4001405	    0x410fb69dac00	           movzx ebx, byte [r13 + 0xac] 	      1124	dwarf2.c	FUNCTION_21	SWITCH_1
0x400140d	          0x4c01e3	                            add rbx, r12	      1124	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001410	      0xe9a6fcffff	                           jmp 0x40010bb	      1125	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001415	           0xf1f00	                         nop dword [rax]	      1125	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001418	      0x488d542414	                   lea rdx, [rsp + 0x14]	      1251	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_38
0x400141d	          0x4d89c8	                              mov r8, r9	      1251	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_38
0x4001420	            0x31c9	                            xor ecx, ecx	      1251	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_38
0x4001422	          0x4c89e6	                            mov rsi, r12	      1251	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_38
0x4001425	          0x4c89f7	                            mov rdi, r14	      1251	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_38
0x4001428	      0x4c894c2408	                 mov qword [rsp + 8], r9	      1251	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_38
0x400142d	      0xe800000000	                          call 0x4001432	      1251	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_38
0x4001432	          0x4889c3	                            mov rbx, rax	      1251	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_38
0x4001435	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      1253	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001439	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      1254	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x400143e	          0x4901c4	                            add r12, rax	      1253	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001441	          0x83fb21	                           cmp ebx, 0x21	      1254	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x4001444	     0xf84e9030000	                            je 0x4001833	      1254	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x400144a	            0x89de	                            mov esi, ebx	      1260	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_40
0x400144c	          0x4d89e0	                             mov r8, r12	      1260	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_40
0x400144f	          0x4c89e9	                            mov rcx, r13	      1260	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_40
0x4001452	          0x4c89fa	                            mov rdx, r15	      1260	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_40
0x4001455	          0x4889ef	                            mov rdi, rbp	      1260	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_40
0x4001458	      0xe853fbffff	           call sym.read_attribute_value	      1260	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_40
0x400145d	          0x4889c3	                            mov rbx, rax	      1260	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_40
0x4001460	      0xe956fcffff	                           jmp 0x40010bb	      1262	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001465	           0xf1f00	                         nop dword [rax]	      1262	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001468	    0x410fb685ad00	           movzx eax, byte [r13 + 0xad] 	       780	dwarf2.c	FUNCTION_15	IF_1
0x4001470	    0x4d8bbda00000	            mov r15, qword [r13 + 0xa0] 	       777	dwarf2.c	FUNCTION_15
0x4001477	          0x4889c2	                            mov rdx, rax	       780	dwarf2.c	FUNCTION_15	IF_1
0x400147a	          0x4c01e0	                            add rax, r12	       780	dwarf2.c	FUNCTION_15	IF_1
0x400147d	          0x4939c1	                             cmp r9, rax	       780	dwarf2.c	FUNCTION_15	IF_1
0x4001480	     0xf82a4030000	                            jb 0x400182a	       780	dwarf2.c	FUNCTION_15	IF_1
0x4001486	          0x80fa04	                               cmp dl, 4	       786	dwarf2.c	FUNCTION_15	IF_2
0x4001489	     0xf8465030000	                            je 0x40017f4	       786	dwarf2.c	FUNCTION_15	IF_2
0x400148f	      0x498d442408	                      lea rax, [r12 + 8]	       620	dwarf2.c	FUNCTION_10	IF_1
0x4001494	            0x31db	                            xor ebx, ebx	       621	dwarf2.c	FUNCTION_10	IF_1
0x4001496	          0x4939c1	                             cmp r9, rax	       620	dwarf2.c	FUNCTION_10	IF_1
0x4001499	     0xf8300040000	                           jae 0x400189f	       620	dwarf2.c	FUNCTION_10	IF_1
0x400149f	      0x49837f4800	               cmp qword [r15 + 0x48], 0	       793	dwarf2.c	FUNCTION_15	IF_3
0x40014a4	        0x89542414	             mov dword [rsp + 0x14], edx	       791	dwarf2.c	FUNCTION_15
0x40014a8	     0xf840d040000	                            je 0x40018bb	       793	dwarf2.c	FUNCTION_15	IF_3
0x40014ae	        0x498b4710	            mov rax, qword [r15 + 0x10] 	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x40014b2	        0x4d8d4f58	                    lea r9, [r15 + 0x58]	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x40014b6	        0x4d8d4750	                    lea r8, [r15 + 0x50]	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x40014ba	            0x31d2	                            xor edx, edx	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x40014bc	          0x4889d9	                            mov rcx, rbx	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x40014bf	    0x488db0f00000	                   lea rsi, [rax + 0xf0]	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x40014c6	    0x498b85a00000	            mov rax, qword [r13 + 0xa0] 	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x40014cd	        0x488b7848	            mov rdi, qword [rax + 0x48] 	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x40014d1	      0xe86aebffff	                   call sym.read_section	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x40014d6	            0x85c0	                           test eax, eax	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x40014d8	     0xf84ea010000	                            je 0x40016c8	       814	dwarf2.c	FUNCTION_15	IF_7	CALL_8
0x40014de	        0x493b5f58	            cmp rbx, qword [r15 + 0x58] 	       822	dwarf2.c	FUNCTION_15	IF_8
0x40014e2	     0xf83e0010000	                           jae 0x40016c8	       822	dwarf2.c	FUNCTION_15	IF_8
0x40014e8	          0x4889d8	                            mov rax, rbx	       824	dwarf2.c	FUNCTION_15
0x40014eb	        0x49034750	             add rax, qword [r15 + 0x50]	       824	dwarf2.c	FUNCTION_15
0x40014ef	          0x803800	                       cmp byte [rax], 0	       825	dwarf2.c	FUNCTION_15	IF_9
0x40014f2	     0xf84d0010000	                            je 0x40016c8	       825	dwarf2.c	FUNCTION_15	IF_9
0x40014f8	        0x8b542414	            mov edx, dword [rsp + 0x14] 	       825	dwarf2.c	FUNCTION_15	IF_9
0x40014fc	          0x4889c3	                            mov rbx, rax	       825	dwarf2.c	FUNCTION_15	IF_9
0x40014ff	        0x48895d08	                mov qword [rbp + 8], rbx	      1179	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_21
0x4001503	        0x498d1c14	                    lea rbx, [r12 + rdx]	      1180	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001507	      0xe9affbffff	                           jmp 0x40010bb	      1181	dwarf2.c	FUNCTION_21	SWITCH_1
0x400150c	         0xf1f4000	                         nop dword [rax]	      1181	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001510	      0xbe10000000	                           mov esi, 0x10	      1196	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_25
0x4001515	          0x4c89f7	                            mov rdi, r14	      1196	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_25
0x4001518	      0x4c894c2408	                 mov qword [rsp + 8], r9	      1196	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_25
0x400151d	      0xe800000000	                          call 0x4001522	      1196	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_25
0x4001522	          0x4885c0	                           test rax, rax	      1197	dwarf2.c	FUNCTION_21	SWITCH_1	IF_8
0x4001525	     0xf849ffeffff	                            je 0x40013ca	      1197	dwarf2.c	FUNCTION_21	SWITCH_1	IF_8
0x400152b	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001530	      0x498d4c2401	                      lea rcx, [r12 + 1]	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001535	          0x4939c9	                             cmp r9, rcx	       588	dwarf2.c	FUNCTION_6	IF_1
0x4001538	     0xf83aa010000	                           jae 0x40016e8	       588	dwarf2.c	FUNCTION_6	IF_1
0x400153e	    0x48c740080000	                  mov qword [rax + 8], 0	       635	dwarf2.c	FUNCTION_11	IF_1
0x4001546	    0xc70000000000	                      mov dword [rax], 0	       636	dwarf2.c	FUNCTION_11	IF_1
0x400154c	          0x4c89cb	                             mov rbx, r9	       636	dwarf2.c	FUNCTION_11	IF_1
0x400154f	      0xe934fbffff	                           jmp 0x4001088	       636	dwarf2.c	FUNCTION_11	IF_1
0x4001554	         0xf1f4000	                         nop dword [rax]	       636	dwarf2.c	FUNCTION_11	IF_1
0x4001558	    0x48c745080100	                  mov qword [rbp + 8], 1	      1213	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001560	          0x4c89e3	                            mov rbx, r12	      1214	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001563	      0xe953fbffff	                           jmp 0x40010bb	      1214	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001568	     0xf1f84000000	                   nop dword [rax + rax]	      1214	dwarf2.c	FUNCTION_21	SWITCH_1
0x4001570	    0x4180bdad0000	                cmp byte [r13 + 0xad], 4	      1128	dwarf2.c	FUNCTION_21	SWITCH_1	IF_4
0x4001578	     0xf849a010000	                            je 0x4001718	      1128	dwarf2.c	FUNCTION_21	SWITCH_1	IF_4
0x400157e	      0x498d542408	                      lea rdx, [r12 + 8]	       620	dwarf2.c	FUNCTION_10	IF_1
0x4001583	            0x31c0	                            xor eax, eax	       621	dwarf2.c	FUNCTION_10	IF_1
0x4001585	          0x4939d1	                             cmp r9, rdx	       620	dwarf2.c	FUNCTION_10	IF_1
0x4001588	     0xf83ad010000	                           jae 0x400173b	       620	dwarf2.c	FUNCTION_10	IF_1
0x400158e	        0x48894508	                mov qword [rbp + 8], rax	      1131	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_8
0x4001592	    0x410fb69dad00	           movzx ebx, byte [r13 + 0xad] 	      1132	dwarf2.c	FUNCTION_21	SWITCH_1
0x400159a	          0x4c01e3	                            add rbx, r12	      1132	dwarf2.c	FUNCTION_21	SWITCH_1
0x400159d	      0xe919fbffff	                           jmp 0x40010bb	      1133	dwarf2.c	FUNCTION_21	SWITCH_1
0x40015a2	    0x660f1f440000	                    nop word [rax + rax]	      1133	dwarf2.c	FUNCTION_21	SWITCH_1
0x40015a8	          0x4d39cc	                             cmp r12, r9	       660	dwarf2.c	FUNCTION_12	IF_1
0x40015ab	     0xf8327010000	                           jae 0x40016d8	       660	dwarf2.c	FUNCTION_12	IF_1
0x40015b1	      0x41803c2400	                       cmp byte [r12], 0	       666	dwarf2.c	FUNCTION_12	IF_2
0x40015b6	     0xf85d8010000	                           jne 0x4001794	       666	dwarf2.c	FUNCTION_12	IF_2
0x40015bc	      0xbb01000000	                              mov ebx, 1	       666	dwarf2.c	FUNCTION_12	IF_2
0x40015c1	            0x31c0	                            xor eax, eax	       669	dwarf2.c	FUNCTION_12	IF_2
0x40015c3	      0xe91ffcffff	                           jmp 0x40011e7	       669	dwarf2.c	FUNCTION_12	IF_2
0x40015c8	     0xf1f84000000	                   nop dword [rax + rax]	       669	dwarf2.c	FUNCTION_12	IF_2
0x40015d0	      0xbe10000000	                           mov esi, 0x10	      1146	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_12
0x40015d5	          0x4c89f7	                            mov rdi, r14	      1146	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_12
0x40015d8	      0x4c894c2408	                 mov qword [rsp + 8], r9	      1146	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_12
0x40015dd	      0xe800000000	                          call 0x40015e2	      1146	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_12
0x40015e2	          0x4885c0	                           test rax, rax	      1147	dwarf2.c	FUNCTION_21	SWITCH_1	IF_6
0x40015e5	          0x4989c5	                            mov r13, rax	      1146	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_12
0x40015e8	     0xf84dcfdffff	                            je 0x40013ca	      1147	dwarf2.c	FUNCTION_21	SWITCH_1	IF_6
0x40015ee	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       612	dwarf2.c	FUNCTION_9	IF_1
0x40015f3	      0x4d8d7c2404	                      lea r15, [r12 + 4]	       612	dwarf2.c	FUNCTION_9	IF_1
0x40015f8	          0x4d39f9	                             cmp r9, r15	       612	dwarf2.c	FUNCTION_9	IF_1
0x40015fb	     0xf824afdffff	                            jb 0x400134b	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001601	        0x498d7e08	                      lea rdi, [r14 + 8]	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001605	          0x4c89e6	                            mov rsi, r12	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001608	      0x4c894c2408	                 mov qword [rsp + 8], r9	       612	dwarf2.c	FUNCTION_9	IF_1
0x400160d	      0xe83ef2ffff	     call sym.read_4_bytes.isra.4.part.5	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001612	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       633	dwarf2.c	FUNCTION_11	IF_1
0x4001617	            0x89c3	                            mov ebx, eax	       631	dwarf2.c	FUNCTION_11
0x4001619	        0x41894500	                    mov dword [r13], eax	      1149	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_13
0x400161d	          0x4c01fb	                            add rbx, r15	       631	dwarf2.c	FUNCTION_11
0x4001620	          0x4939d9	                             cmp r9, rbx	       633	dwarf2.c	FUNCTION_11	IF_1
0x4001623	     0xf8222fdffff	                            jb 0x400134b	       633	dwarf2.c	FUNCTION_11	IF_1
0x4001629	          0x4939df	                            cmp r15, rbx	       633	dwarf2.c	FUNCTION_11	IF_1
0x400162c	     0xf8719fdffff	                            ja 0x400134b	       633	dwarf2.c	FUNCTION_11	IF_1
0x4001632	        0x4d897d08	                mov qword [r13 + 8], r15	       641	dwarf2.c	FUNCTION_11	ELSE_1
0x4001636	      0xe985fcffff	                           jmp 0x40012c0	       641	dwarf2.c	FUNCTION_11	ELSE_1
0x400163b	       0xf1f440000	                   nop dword [rax + rax]	       641	dwarf2.c	FUNCTION_11	ELSE_1
0x4001640	    0x410fb685ad00	           movzx eax, byte [r13 + 0xad] 	       701	dwarf2.c	FUNCTION_13	IF_1
0x4001648	    0x4d8bbda00000	            mov r15, qword [r13 + 0xa0] 	       698	dwarf2.c	FUNCTION_13
0x400164f	          0x4889c2	                            mov rdx, rax	       701	dwarf2.c	FUNCTION_13	IF_1
0x4001652	          0x4c01e0	                            add rax, r12	       701	dwarf2.c	FUNCTION_13	IF_1
0x4001655	          0x4939c1	                             cmp r9, rax	       701	dwarf2.c	FUNCTION_13	IF_1
0x4001658	     0xf82cc010000	                            jb 0x400182a	       701	dwarf2.c	FUNCTION_13	IF_1
0x400165e	          0x80fa04	                               cmp dl, 4	       707	dwarf2.c	FUNCTION_13	IF_2
0x4001661	     0xf84fb000000	                            je 0x4001762	       707	dwarf2.c	FUNCTION_13	IF_2
0x4001667	      0x498d442408	                      lea rax, [r12 + 8]	       620	dwarf2.c	FUNCTION_10	IF_1
0x400166c	            0x31db	                            xor ebx, ebx	       621	dwarf2.c	FUNCTION_10	IF_1
0x400166e	          0x4c89f7	                            mov rdi, r14	       620	dwarf2.c	FUNCTION_10	IF_1
0x4001671	          0x4939c1	                             cmp r9, rax	       620	dwarf2.c	FUNCTION_10	IF_1
0x4001674	     0xf8305020000	                           jae 0x400187f	       620	dwarf2.c	FUNCTION_10	IF_1
0x400167a	        0x498b4710	            mov rax, qword [r15 + 0x10] 	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x400167e	        0x89542414	             mov dword [rsp + 0x14], edx	       712	dwarf2.c	FUNCTION_13
0x4001682	    0x4d8d8fa80000	                    lea r9, [r15 + 0xa8]	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x4001689	        0x498b5778	            mov rdx, qword [r15 + 0x78] 	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x400168d	    0x4d8d87a00000	                    lea r8, [r15 + 0xa0]	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x4001694	          0x4889d9	                            mov rcx, rbx	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x4001697	    0x488db0e00000	                   lea rsi, [rax + 0xe0]	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x400169e	      0xe89de9ffff	                   call sym.read_section	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x40016a3	            0x85c0	                           test eax, eax	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x40016a5	            0x7421	                            je 0x40016c8	       714	dwarf2.c	FUNCTION_13	IF_3	CALL_3
0x40016a7	    0x493b9fa80000	            cmp rbx, qword [r15 + 0xa8] 	       719	dwarf2.c	FUNCTION_13	IF_4
0x40016ae	            0x7318	                           jae 0x40016c8	       719	dwarf2.c	FUNCTION_13	IF_4
0x40016b0	          0x4889d8	                            mov rax, rbx	       721	dwarf2.c	FUNCTION_13
0x40016b3	    0x490387a00000	             add rax, qword [r15 + 0xa0]	       721	dwarf2.c	FUNCTION_13
0x40016ba	          0x803800	                       cmp byte [rax], 0	       722	dwarf2.c	FUNCTION_13	IF_5
0x40016bd	     0xf8535feffff	                           jne 0x40014f8	       722	dwarf2.c	FUNCTION_13	IF_5
0x40016c3	       0xf1f440000	                   nop dword [rax + rax]	       722	dwarf2.c	FUNCTION_13	IF_5
0x40016c8	        0x8b542414	            mov edx, dword [rsp + 0x14] 	       722	dwarf2.c	FUNCTION_13	IF_5
0x40016cc	            0x31db	                            xor ebx, ebx	       820	dwarf2.c	FUNCTION_15	IF_7
0x40016ce	      0xe92cfeffff	                           jmp 0x40014ff	       820	dwarf2.c	FUNCTION_15	IF_7
0x40016d3	       0xf1f440000	                   nop dword [rax + rax]	       820	dwarf2.c	FUNCTION_15	IF_7
0x40016d8	            0x31db	                            xor ebx, ebx	       739	dwarf2.c	FUNCTION_14	IF_1
0x40016da	            0x31c0	                            xor eax, eax	       742	dwarf2.c	FUNCTION_14	IF_1
0x40016dc	      0xe906fbffff	                           jmp 0x40011e7	       742	dwarf2.c	FUNCTION_14	IF_1
0x40016e1	     0xf1f80000000	                         nop dword [rax]	       742	dwarf2.c	FUNCTION_14	IF_1
0x40016e8	      0x410fb63424	                   movzx esi, byte [r12]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x40016ed	        0x400fb6de	                          movzx ebx, sil	       631	dwarf2.c	FUNCTION_11
0x40016f1	            0x8930	                    mov dword [rax], esi	      1199	dwarf2.c	FUNCTION_21	SWITCH_1	CALL_26
0x40016f3	          0x4801cb	                            add rbx, rcx	       631	dwarf2.c	FUNCTION_11
0x40016f6	          0x4939d9	                             cmp r9, rbx	       633	dwarf2.c	FUNCTION_11	IF_1
0x40016f9	     0xf823ffeffff	                            jb 0x400153e	       633	dwarf2.c	FUNCTION_11	IF_1
0x40016ff	          0x4839d9	                            cmp rcx, rbx	       633	dwarf2.c	FUNCTION_11	IF_1
0x4001702	     0xf8736feffff	                            ja 0x400153e	       633	dwarf2.c	FUNCTION_11	IF_1
0x4001708	        0x48894808	                mov qword [rax + 8], rcx	       641	dwarf2.c	FUNCTION_11	ELSE_1
0x400170c	      0xe977f9ffff	                           jmp 0x4001088	       641	dwarf2.c	FUNCTION_11	ELSE_1
0x4001711	     0xf1f80000000	                         nop dword [rax]	       641	dwarf2.c	FUNCTION_11	ELSE_1
0x4001718	      0x498d542404	                      lea rdx, [r12 + 4]	       612	dwarf2.c	FUNCTION_9	IF_1
0x400171d	            0x31c0	                            xor eax, eax	       612	dwarf2.c	FUNCTION_9	IF_1
0x400171f	          0x4939d1	                             cmp r9, rdx	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001722	     0xf8266feffff	                            jb 0x400158e	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001728	        0x498d7e08	                      lea rdi, [r14 + 8]	       612	dwarf2.c	FUNCTION_9	IF_1
0x400172c	          0x4c89e6	                            mov rsi, r12	       612	dwarf2.c	FUNCTION_9	IF_1
0x400172f	      0xe81cf1ffff	     call sym.read_4_bytes.isra.4.part.5	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001734	            0x89c0	                            mov eax, eax	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001736	      0xe953feffff	                           jmp 0x400158e	       612	dwarf2.c	FUNCTION_9	IF_1
0x400173b	        0x498d7e08	                      lea rdi, [r14 + 8]	       612	dwarf2.c	FUNCTION_9	IF_1
0x400173f	          0x4c89e6	                            mov rsi, r12	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001742	      0xe829f1ffff	     call sym.read_8_bytes.isra.6.part.7	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001747	      0xe942feffff	                           jmp 0x400158e	       612	dwarf2.c	FUNCTION_9	IF_1
0x400174c	        0x498d7e08	                      lea rdi, [r14 + 8]	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001750	          0x4c89e6	                            mov rsi, r12	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001753	      0x4c894c2408	                 mov qword [rsp + 8], r9	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001758	      0xe8d3f0ffff	     call sym.read_2_bytes.isra.2.part.3	       612	dwarf2.c	FUNCTION_9	IF_1
0x400175d	      0xe9b0feffff	                           jmp 0x4001612	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001762	      0x498d442404	                      lea rax, [r12 + 4]	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001767	            0x31db	                            xor ebx, ebx	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001769	          0x4c89f7	                            mov rdi, r14	       612	dwarf2.c	FUNCTION_9	IF_1
0x400176c	          0x4939c1	                             cmp r9, rax	       612	dwarf2.c	FUNCTION_9	IF_1
0x400176f	     0xf8205ffffff	                            jb 0x400167a	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001775	        0x498d7e08	                      lea rdi, [r14 + 8]	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001779	          0x4c89e6	                            mov rsi, r12	       612	dwarf2.c	FUNCTION_9	IF_1
0x400177c	      0xe8cff0ffff	     call sym.read_4_bytes.isra.4.part.5	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001781	    0x410fb695ad00	           movzx edx, byte [r13 + 0xad] 	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001789	        0x498b7d10	            mov rdi, qword [r13 + 0x10] 	       612	dwarf2.c	FUNCTION_9	IF_1
0x400178d	            0x89c3	                            mov ebx, eax	       612	dwarf2.c	FUNCTION_9	IF_1
0x400178f	      0xe9e6feffff	                           jmp 0x400167a	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001794	      0x498d442401	                      lea rax, [r12 + 1]	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4001799	            0xeb13	                           jmp 0x40017ae	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x400179b	       0xf1f440000	                   nop dword [rax + rax]	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40017a0	        0x4883c001	                              add rax, 1	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40017a4	        0x8078ff00	                   cmp byte [rax - 1], 0	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40017a8	     0xf845a010000	                            je 0x4001908	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40017ae	          0x4939c1	                             cmp r9, rax	       672	dwarf2.c	FUNCTION_12	WHILE_1
0x40017b1	            0x75ed	                           jne 0x40017a0	       672	dwarf2.c	FUNCTION_12	WHILE_1
0x40017b3	          0x4489cb	                            mov ebx, r9d	       672	dwarf2.c	FUNCTION_12	WHILE_1
0x40017b6	            0x31c0	                            xor eax, eax	       680	dwarf2.c	FUNCTION_12
0x40017b8	          0x4429e3	                           sub ebx, r12d	       680	dwarf2.c	FUNCTION_12
0x40017bb	      0xe927faffff	                           jmp 0x40011e7	       680	dwarf2.c	FUNCTION_12
0x40017c0	      0x498d442404	                      lea rax, [r12 + 4]	       612	dwarf2.c	FUNCTION_9	IF_1
0x40017c5	          0x4531ff	                          xor r15d, r15d	       612	dwarf2.c	FUNCTION_9	IF_1
0x40017c8	          0x4c89f7	                            mov rdi, r14	       612	dwarf2.c	FUNCTION_9	IF_1
0x40017cb	          0x4939c1	                             cmp r9, rax	       612	dwarf2.c	FUNCTION_9	IF_1
0x40017ce	     0xf82bef9ffff	                            jb 0x4001192	       612	dwarf2.c	FUNCTION_9	IF_1
0x40017d4	        0x4883c708	                              add rdi, 8	       612	dwarf2.c	FUNCTION_9	IF_1
0x40017d8	          0x4c89e6	                            mov rsi, r12	       612	dwarf2.c	FUNCTION_9	IF_1
0x40017db	      0xe870f0ffff	     call sym.read_4_bytes.isra.4.part.5	       612	dwarf2.c	FUNCTION_9	IF_1
0x40017e0	    0x410fb695ad00	           movzx edx, byte [r13 + 0xad] 	       612	dwarf2.c	FUNCTION_9	IF_1
0x40017e8	        0x498b7d10	            mov rdi, qword [r13 + 0x10] 	       612	dwarf2.c	FUNCTION_9	IF_1
0x40017ec	          0x4189c7	                           mov r15d, eax	       612	dwarf2.c	FUNCTION_9	IF_1
0x40017ef	      0xe99ef9ffff	                           jmp 0x4001192	       612	dwarf2.c	FUNCTION_9	IF_1
0x40017f4	      0x498d442404	                      lea rax, [r12 + 4]	       612	dwarf2.c	FUNCTION_9	IF_1
0x40017f9	            0x31db	                            xor ebx, ebx	       612	dwarf2.c	FUNCTION_9	IF_1
0x40017fb	          0x4939c1	                             cmp r9, rax	       612	dwarf2.c	FUNCTION_9	IF_1
0x40017fe	     0xf829bfcffff	                            jb 0x400149f	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001804	        0x498d7e08	                      lea rdi, [r14 + 8]	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001808	          0x4c89e6	                            mov rsi, r12	       612	dwarf2.c	FUNCTION_9	IF_1
0x400180b	      0xe840f0ffff	     call sym.read_4_bytes.isra.4.part.5	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001810	    0x410fb695ad00	           movzx edx, byte [r13 + 0xad] 	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001818	            0x89c3	                            mov ebx, eax	       612	dwarf2.c	FUNCTION_9	IF_1
0x400181a	      0xe980fcffff	                           jmp 0x400149f	       612	dwarf2.c	FUNCTION_9	IF_1
0x400181f	        0x8b5c2414	            mov ebx, dword [rsp + 0x14] 	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001823	            0x31c0	                            xor eax, eax	       756	dwarf2.c	FUNCTION_14	IF_3
0x4001825	      0xe9bdf9ffff	                           jmp 0x40011e7	       756	dwarf2.c	FUNCTION_14	IF_3
0x400182a	            0x31d2	                            xor edx, edx	       780	dwarf2.c	FUNCTION_15	IF_1
0x400182c	            0x31db	                            xor ebx, ebx	       783	dwarf2.c	FUNCTION_15	IF_1
0x400182e	      0xe9ccfcffff	                           jmp 0x40014ff	       783	dwarf2.c	FUNCTION_15	IF_1
0x4001833	      0x488d542414	                   lea rdx, [rsp + 0x14]	      1256	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9	CALL_39
0x4001838	          0x4d89c8	                              mov r8, r9	      1256	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9	CALL_39
0x400183b	          0x4c89e6	                            mov rsi, r12	      1256	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9	CALL_39
0x400183e	      0xb901000000	                              mov ecx, 1	      1256	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9	CALL_39
0x4001843	          0x4c89f7	                            mov rdi, r14	      1256	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9	CALL_39
0x4001846	      0xe800000000	                          call 0x400184b	      1256	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9	CALL_39
0x400184b	          0x4989c7	                            mov r15, rax	      1256	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9	CALL_39
0x400184e	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      1258	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x4001852	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      1258	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x4001857	          0x4901c4	                            add r12, rax	      1258	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x400185a	      0xe9ebfbffff	                           jmp 0x400144a	      1258	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x400185f	        0x4883c708	                              add rdi, 8	      1258	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x4001863	          0x4c89e6	                            mov rsi, r12	      1258	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x4001866	      0xe805f0ffff	     call sym.read_8_bytes.isra.6.part.7	      1258	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x400186b	    0x410fb695ad00	           movzx edx, byte [r13 + 0xad] 	      1258	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x4001873	          0x4989c7	                            mov r15, rax	      1258	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x4001876	        0x498b7d10	            mov rdi, qword [r13 + 0x10] 	      1258	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x400187a	      0xe913f9ffff	                           jmp 0x4001192	      1258	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x400187f	        0x498d7e08	                      lea rdi, [r14 + 8]	      1258	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x4001883	          0x4c89e6	                            mov rsi, r12	      1258	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x4001886	      0xe8e5efffff	     call sym.read_8_bytes.isra.6.part.7	      1258	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x400188b	    0x410fb695ad00	           movzx edx, byte [r13 + 0xad] 	      1258	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x4001893	          0x4889c3	                            mov rbx, rax	      1258	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x4001896	        0x498b7d10	            mov rdi, qword [r13 + 0x10] 	      1258	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x400189a	      0xe9dbfdffff	                           jmp 0x400167a	      1258	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x400189f	        0x498d7e08	                      lea rdi, [r14 + 8]	      1258	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x40018a3	          0x4c89e6	                            mov rsi, r12	      1258	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x40018a6	      0xe8c5efffff	     call sym.read_8_bytes.isra.6.part.7	      1258	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x40018ab	    0x410fb695ad00	           movzx edx, byte [r13 + 0xad] 	      1258	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x40018b3	          0x4889c3	                            mov rbx, rax	      1258	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x40018b6	      0xe9e4fbffff	                           jmp 0x400149f	      1258	dwarf2.c	FUNCTION_21	SWITCH_1	IF_9
0x40018bb	        0x498b7d10	            mov rdi, qword [r13 + 0x10] 	       796	dwarf2.c	FUNCTION_15	IF_3	CALL_3
0x40018bf	      0xbe00000000	                              mov esi, 0	       796	dwarf2.c	FUNCTION_15	IF_3	CALL_3
0x40018c4	      0xe800000000	                          call 0x40018c9	       796	dwarf2.c	FUNCTION_15	IF_3	CALL_3
0x40018c9	          0x4885c0	                           test rax, rax	       798	dwarf2.c	FUNCTION_15	IF_3	IF_4
0x40018cc	          0x4989c6	                            mov r14, rax	       796	dwarf2.c	FUNCTION_15	IF_3	CALL_3
0x40018cf	     0xf84f3fdffff	                            je 0x40016c8	       798	dwarf2.c	FUNCTION_15	IF_3	IF_4
0x40018d5	            0x31f6	                            xor esi, esi	       801	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_4
0x40018d7	          0x4889c7	                            mov rdi, rax	       801	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_4
0x40018da	      0xe800000000	                          call 0x40018df	       801	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_4
0x40018df	          0x4885c0	                           test rax, rax	       801	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_4
0x40018e2	            0x7439	                            je 0x400191d	       801	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_4
0x40018e4	      0xbe01000000	                              mov esi, 1	       802	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_5
0x40018e9	          0x4889c7	                            mov rdi, rax	       802	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_5
0x40018ec	      0x4889442408	                mov qword [rsp + 8], rax	       802	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_5
0x40018f1	      0xe800000000	                          call 0x40018f6	       802	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_5
0x40018f6	            0x85c0	                           test eax, eax	       802	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_5
0x40018f8	      0x488b542408	                mov rdx, qword [rsp + 8]	       802	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_5
0x40018fd	            0x7416	                            je 0x4001915	       802	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_5
0x40018ff	        0x49895748	             mov qword [r15 + 0x48], rdx	       811	dwarf2.c	FUNCTION_15	IF_3
0x4001903	      0xe9a6fbffff	                           jmp 0x40014ae	       811	dwarf2.c	FUNCTION_15	IF_3
0x4001908	            0x89c3	                            mov ebx, eax	       811	dwarf2.c	FUNCTION_15	IF_3
0x400190a	          0x4c89e0	                            mov rax, r12	       675	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x400190d	          0x4429e3	                           sub ebx, r12d	       675	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4001910	      0xe9d2f8ffff	                           jmp 0x40011e7	       675	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4001915	          0x4889d7	                            mov rdi, rdx	       805	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_6
0x4001918	      0xe800000000	                          call 0x400191d	       805	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_6
0x400191d	          0x4c89f7	                            mov rdi, r14	       808	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_7
0x4001920	            0x31db	                            xor ebx, ebx	       809	dwarf2.c	FUNCTION_15	IF_3	IF_5
0x4001922	      0xe800000000	                          call 0x4001927	       808	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_7
0x4001927	        0x8b542414	            mov edx, dword [rsp + 0x14] 	       808	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_7
0x400192b	      0xe9cffbffff	                           jmp 0x40014ff	       808	dwarf2.c	FUNCTION_15	IF_3	IF_5	CALL_7
0x4001930	      0xe800000000	                          call 0x4001935	      1274	dwarf2.c	FUNCTION_21
concat_filename	FOR,0:CALL,13:WHILE,0:ELSE,1:IF,11:functions,0:SWITCH,0:DO,0	137
0x4000590	          0x4885ff	                           test rdi, rdi	      1569	dwarf2.c	FUNCTION_26	IF_1
0x4000593	            0x4156	                                push r14	      1566	dwarf2.c	FUNCTION_26
0x4000595	            0x4155	                                push r13	      1566	dwarf2.c	FUNCTION_26
0x4000597	            0x4154	                                push r12	      1566	dwarf2.c	FUNCTION_26
0x4000599	              0x55	                                push rbp	      1566	dwarf2.c	FUNCTION_26
0x400059a	              0x53	                                push rbx	      1566	dwarf2.c	FUNCTION_26
0x400059b	     0xf84e7000000	                            je 0x4000688	      1569	dwarf2.c	FUNCTION_26	IF_1
0x40005a1	          0x8d46ff	                      lea eax, [rsi - 1]	      1569	dwarf2.c	FUNCTION_26	IF_1
0x40005a4	          0x3b4708	                cmp eax, dword [rdi + 8]	      1569	dwarf2.c	FUNCTION_26	IF_1
0x40005a7	     0xf83db000000	                           jae 0x4000688	      1569	dwarf2.c	FUNCTION_26	IF_1
0x40005ad	        0x488d1440	                  lea rdx, [rax + rax*2]	      1578	dwarf2.c	FUNCTION_26
0x40005b1	        0x488b4728	            mov rax, qword [rdi + 0x28] 	      1578	dwarf2.c	FUNCTION_26
0x40005b5	        0x488d04d0	                  lea rax, [rax + rdx*8]	      1578	dwarf2.c	FUNCTION_26
0x40005b9	          0x488b28	                    mov rbp, qword [rax]	      1578	dwarf2.c	FUNCTION_26
0x40005bc	          0x4885ed	                           test rbp, rbp	      1579	dwarf2.c	FUNCTION_26	IF_3
0x40005bf	     0xf84cb000000	                            je 0x4000690	      1579	dwarf2.c	FUNCTION_26	IF_3
0x40005c5	        0x807d002f	                    cmp byte [rbp], 0x2f	      1582	dwarf2.c	FUNCTION_26	IF_4	CALL_5
0x40005c9	     0xf8499010000	                            je 0x4000768	      1582	dwarf2.c	FUNCTION_26	IF_4	CALL_5
0x40005cf	          0x8b4008	                mov eax, dword [rax + 8]	      1589	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x40005d2	            0x85c0	                           test eax, eax	      1589	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x40005d4	     0xf84ee000000	                            je 0x40006c8	      1589	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x40005da	          0x3b470c	              cmp eax, dword [rdi + 0xc]	      1591	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x40005dd	     0xf87e5000000	                            ja 0x40006c8	      1591	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x40005e3	        0x488b5720	            mov rdx, qword [rdi + 0x20] 	      1593	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x40005e7	          0x4885d2	                           test rdx, rdx	      1593	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x40005ea	     0xf84d8000000	                            je 0x40006c8	      1593	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x40005f0	          0x83e801	                              sub eax, 1	      1594	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x40005f3	        0x4c8b24c2	            mov r12, qword [rdx + rax*8]	      1594	dwarf2.c	FUNCTION_26	IF_4	IF_5
0x40005f7	          0x4d85e4	                           test r12, r12	      1596	dwarf2.c	FUNCTION_26	IF_4	IF_6	CALL_6
0x40005fa	     0xf84c8000000	                            je 0x40006c8	      1596	dwarf2.c	FUNCTION_26	IF_4	IF_6	CALL_6
0x4000600	      0x41803c242f	                    cmp byte [r12], 0x2f	      1596	dwarf2.c	FUNCTION_26	IF_4	IF_6	CALL_6
0x4000605	     0xf84ca000000	                            je 0x40006d5	      1596	dwarf2.c	FUNCTION_26	IF_4	IF_6	CALL_6
0x400060b	        0x4c8b6f18	            mov r13, qword [rdi + 0x18] 	      1597	dwarf2.c	FUNCTION_26	IF_4	IF_6
0x400060f	          0x4d85ed	                           test r13, r13	      1599	dwarf2.c	FUNCTION_26	IF_4	IF_7
0x4000612	     0xf84bd000000	                            je 0x40006d5	      1599	dwarf2.c	FUNCTION_26	IF_4	IF_7
0x4000618	          0x4c89ef	                            mov rdi, r13	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x400061b	      0xe800000000	                          call 0x4000620	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000620	          0x4889ef	                            mov rdi, rbp	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000623	          0x4989c6	                            mov r14, rax	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000626	      0xe800000000	                          call 0x400062b	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x400062b	          0x4c89e7	                            mov rdi, r12	      1612	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_10
0x400062e	          0x4889c3	                            mov rbx, rax	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x4000631	      0xe800000000	                          call 0x4000636	      1612	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_10
0x4000636	      0x498d7c1e03	                lea rdi, [r14 + rbx + 3]	      1613	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_11
0x400063b	          0x4801c7	                            add rdi, rax	      1613	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_11
0x400063e	      0xe800000000	                          call 0x4000643	      1613	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_11
0x4000643	          0x4885c0	                           test rax, rax	      1614	dwarf2.c	FUNCTION_26	IF_4	IF_9	IF_10
0x4000646	          0x4889c3	                            mov rbx, rax	      1613	dwarf2.c	FUNCTION_26	IF_4	IF_9	CALL_11
0x4000649	     0xf84d1000000	                            je 0x4000720	      1614	dwarf2.c	FUNCTION_26	IF_4	IF_9	IF_10
0x400064f	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000653	          0x4d89e1	                             mov r9, r12	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000656	          0x4d89e8	                             mov r8, r13	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000659	              0x55	                                push rbp	        33	stdio2.h	FUNCTION_84	CALL_1
0x400065a	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000661	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000664	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000669	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x400066e	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000670	      0xe800000000	                          call 0x4000675	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000675	              0x58	                                 pop rax	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000676	          0x4889d8	                            mov rax, rbx	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000679	              0x5a	                                 pop rdx	        33	stdio2.h	FUNCTION_84	CALL_1
0x400067a	              0x5b	                                 pop rbx	      1628	dwarf2.c	FUNCTION_26
0x400067b	              0x5d	                                 pop rbp	      1628	dwarf2.c	FUNCTION_26
0x400067c	            0x415c	                                 pop r12	      1628	dwarf2.c	FUNCTION_26
0x400067e	            0x415d	                                 pop r13	      1628	dwarf2.c	FUNCTION_26
0x4000680	            0x415e	                                 pop r14	      1628	dwarf2.c	FUNCTION_26
0x4000682	              0xc3	                                     ret	      1628	dwarf2.c	FUNCTION_26
0x4000683	       0xf1f440000	                   nop dword [rax + rax]	      1628	dwarf2.c	FUNCTION_26
0x4000688	            0x85f6	                           test esi, esi	      1572	dwarf2.c	FUNCTION_26	IF_1	IF_2
0x400068a	     0xf85a0000000	                           jne 0x4000730	      1572	dwarf2.c	FUNCTION_26	IF_1	IF_2
0x4000690	      0xbf0a000000	                            mov edi, 0xa	      1580	dwarf2.c	FUNCTION_26	CALL_4
0x4000695	      0xe800000000	                          call 0x400069a	      1580	dwarf2.c	FUNCTION_26	CALL_4
0x400069a	          0x4885c0	                           test rax, rax	      1580	dwarf2.c	FUNCTION_26	CALL_4
0x400069d	     0xf847d000000	                            je 0x4000720	      1580	dwarf2.c	FUNCTION_26	CALL_4
0x40006a3	    0x48b93c756e6b	          movabs rcx, 0x6e776f6e6b6e753c	        53	string3.h	FUNCTION_72	CALL_3
0x40006ad	          0x488908	                    mov qword [rax], rcx	        53	string3.h	FUNCTION_72	CALL_3
0x40006b0	      0xb93e000000	                           mov ecx, 0x3e	        53	string3.h	FUNCTION_72	CALL_3
0x40006b5	        0x66894808	                  mov word [rax + 8], cx	        53	string3.h	FUNCTION_72	CALL_3
0x40006b9	              0x5b	                                 pop rbx	      1628	dwarf2.c	FUNCTION_26
0x40006ba	              0x5d	                                 pop rbp	      1628	dwarf2.c	FUNCTION_26
0x40006bb	            0x415c	                                 pop r12	      1628	dwarf2.c	FUNCTION_26
0x40006bd	            0x415d	                                 pop r13	      1628	dwarf2.c	FUNCTION_26
0x40006bf	            0x415e	                                 pop r14	      1628	dwarf2.c	FUNCTION_26
0x40006c1	              0xc3	                                     ret	      1628	dwarf2.c	FUNCTION_26
0x40006c2	    0x660f1f440000	                    nop word [rax + rax]	      1628	dwarf2.c	FUNCTION_26
0x40006c8	        0x4c8b6718	            mov r12, qword [rdi + 0x18] 	      1597	dwarf2.c	FUNCTION_26	IF_4	IF_6
0x40006cc	          0x4d85e4	                           test r12, r12	      1599	dwarf2.c	FUNCTION_26	IF_4	IF_7
0x40006cf	     0xf8493000000	                            je 0x4000768	      1599	dwarf2.c	FUNCTION_26	IF_4	IF_7
0x40006d5	          0x4c89e7	                            mov rdi, r12	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x40006d8	      0xe800000000	                          call 0x40006dd	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x40006dd	          0x4889ef	                            mov rdi, rbp	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x40006e0	          0x4889c3	                            mov rbx, rax	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x40006e3	      0xe800000000	                          call 0x40006e8	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x40006e8	      0x488d7c0302	                lea rdi, [rbx + rax + 2]	      1608	dwarf2.c	FUNCTION_26	IF_4	CALL_9
0x40006ed	      0xe800000000	                          call 0x40006f2	      1619	dwarf2.c	FUNCTION_26	IF_4	ELSE_1	CALL_12
0x40006f2	          0x4889c3	                            mov rbx, rax	      1619	dwarf2.c	FUNCTION_26	IF_4	ELSE_1	CALL_12
0x40006f5	            0x31c0	                            xor eax, eax	      1619	dwarf2.c	FUNCTION_26	IF_4	ELSE_1	CALL_12
0x40006f7	          0x4885db	                           test rbx, rbx	      1620	dwarf2.c	FUNCTION_26	IF_4	ELSE_1	IF_11
0x40006fa	            0x74bd	                            je 0x40006b9	      1620	dwarf2.c	FUNCTION_26	IF_4	ELSE_1	IF_11
0x40006fc	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_84	CALL_1
0x40006ff	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000702	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000707	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_84	CALL_1
0x400070e	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000713	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000716	      0xe800000000	                          call 0x400071b	        33	stdio2.h	FUNCTION_84	CALL_1
0x400071b	          0x4889d8	                            mov rax, rbx	        33	stdio2.h	FUNCTION_84	CALL_1
0x400071e	            0xeb99	                           jmp 0x40006b9	        33	stdio2.h	FUNCTION_84	CALL_1
0x4000720	              0x5b	                                 pop rbx	      1628	dwarf2.c	FUNCTION_26
0x4000721	            0x31c0	                            xor eax, eax	      1628	dwarf2.c	FUNCTION_26
0x4000723	              0x5d	                                 pop rbp	      1628	dwarf2.c	FUNCTION_26
0x4000724	            0x415c	                                 pop r12	      1628	dwarf2.c	FUNCTION_26
0x4000726	            0x415d	                                 pop r13	      1628	dwarf2.c	FUNCTION_26
0x4000728	            0x415e	                                 pop r14	      1628	dwarf2.c	FUNCTION_26
0x400072a	              0xc3	                                     ret	      1628	dwarf2.c	FUNCTION_26
0x400072b	       0xf1f440000	                   nop dword [rax + rax]	      1628	dwarf2.c	FUNCTION_26
0x4000730	      0xba05000000	                              mov edx, 5	      1574	dwarf2.c	FUNCTION_26	IF_1	CALL_2
0x4000735	      0xbe00000000	                              mov esi, 0	      1574	dwarf2.c	FUNCTION_26	IF_1	CALL_2
0x400073a	      0xbf00000000	                              mov edi, 0	      1574	dwarf2.c	FUNCTION_26	IF_1	CALL_2
0x400073f	      0xe800000000	                          call 0x4000744	      1574	dwarf2.c	FUNCTION_26	IF_1	CALL_2
0x4000744	          0x4889c7	                            mov rdi, rax	      1573	dwarf2.c	FUNCTION_26	IF_1	IF_2	CALL_1
0x4000747	            0x31c0	                            xor eax, eax	      1573	dwarf2.c	FUNCTION_26	IF_1	IF_2	CALL_1
0x4000749	      0xe800000000	                          call 0x400074e	      1573	dwarf2.c	FUNCTION_26	IF_1	IF_2	CALL_1
0x400074e	      0xbf0a000000	                            mov edi, 0xa	      1580	dwarf2.c	FUNCTION_26	CALL_4
0x4000753	      0xe800000000	                          call 0x4000758	      1580	dwarf2.c	FUNCTION_26	CALL_4
0x4000758	          0x4885c0	                           test rax, rax	      1580	dwarf2.c	FUNCTION_26	CALL_4
0x400075b	     0xf8542ffffff	                           jne 0x40006a3	      1580	dwarf2.c	FUNCTION_26	CALL_4
0x4000761	            0xebbd	                           jmp 0x4000720	      1580	dwarf2.c	FUNCTION_26	CALL_4
0x4000763	       0xf1f440000	                   nop dword [rax + rax]	      1580	dwarf2.c	FUNCTION_26	CALL_4
0x4000768	              0x5b	                                 pop rbx	      1628	dwarf2.c	FUNCTION_26
0x4000769	          0x4889ef	                            mov rdi, rbp	      1606	dwarf2.c	FUNCTION_26	IF_4	CALL_7
0x400076c	              0x5d	                                 pop rbp	      1628	dwarf2.c	FUNCTION_26
0x400076d	            0x415c	                                 pop r12	      1628	dwarf2.c	FUNCTION_26
0x400076f	            0x415d	                                 pop r13	      1628	dwarf2.c	FUNCTION_26
0x4000771	            0x415e	                                 pop r14	      1628	dwarf2.c	FUNCTION_26
0x4000773	      0xe900000000	                           jmp 0x4000778	      1606	dwarf2.c	FUNCTION_26	IF_4	CALL_7
decode_line_info	FOR,2:CALL,81:WHILE,5:ELSE,8:IF,42:functions,0:SWITCH,2:DO,0	977
0x4001eb0	            0x4157	                                push r15	      2012	dwarf2.c	FUNCTION_35
0x4001eb2	            0x4156	                                push r14	      2012	dwarf2.c	FUNCTION_35
0x4001eb4	            0x4155	                                push r13	      2012	dwarf2.c	FUNCTION_35
0x4001eb6	            0x4154	                                push r12	      2012	dwarf2.c	FUNCTION_35
0x4001eb8	              0x55	                                push rbp	      2012	dwarf2.c	FUNCTION_35
0x4001eb9	              0x53	                                push rbx	      2012	dwarf2.c	FUNCTION_35
0x4001eba	          0x4889f3	                            mov rbx, rsi	      2012	dwarf2.c	FUNCTION_35
0x4001ebd	    0x4c8d8b980000	                    lea r9, [rbx + 0x98]	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4001ec4	    0x4c8d83900000	                    lea r8, [rbx + 0x90]	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4001ecb	    0x4881eca80000	                           sub rsp, 0xa8	      2012	dwarf2.c	FUNCTION_35
0x4001ed2	        0x488b4610	            mov rax, qword [rsi + 0x10] 	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4001ed6	        0x4c8b7f10	            mov r15, qword [rdi + 0x10] 	      2013	dwarf2.c	FUNCTION_35
0x4001eda	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      2012	dwarf2.c	FUNCTION_35
0x4001ee3	    0x48898c249800	             mov qword [rsp + 0x98], rcx	      2012	dwarf2.c	FUNCTION_35
0x4001eeb	            0x31c9	                            xor ecx, ecx	      2012	dwarf2.c	FUNCTION_35
0x4001eed	        0x488b5678	            mov rdx, qword [rsi + 0x78] 	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4001ef1	        0x488b4f60	            mov rcx, qword [rdi + 0x60] 	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4001ef5	        0x488d7050	                   lea rsi, [rax + 0x50]	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4001ef9	      0x48897c2430	             mov qword [rsp + 0x30], rdi	      2012	dwarf2.c	FUNCTION_35
0x4001efe	          0x4c89ff	                            mov rdi, r15	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4001f01	      0xe83ae1ffff	                   call sym.read_section	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4001f06	            0x85c0	                           test eax, eax	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4001f08	     0xf843c020000	                            je 0x400214a	      2024	dwarf2.c	FUNCTION_35	IF_1	CALL_1
0x4001f0e	      0xbe40000000	                           mov esi, 0x40	      2030	dwarf2.c	FUNCTION_35	CALL_2
0x4001f13	          0x4c89ff	                            mov rdi, r15	      2030	dwarf2.c	FUNCTION_35	CALL_2
0x4001f16	      0xe800000000	                          call 0x4001f1b	      2030	dwarf2.c	FUNCTION_35	CALL_2
0x4001f1b	          0x4885c0	                           test rax, rax	      2031	dwarf2.c	FUNCTION_35	IF_2
0x4001f1e	          0x4989c6	                            mov r14, rax	      2030	dwarf2.c	FUNCTION_35	CALL_2
0x4001f21	     0xf8423020000	                            je 0x400214a	      2031	dwarf2.c	FUNCTION_35	IF_2
0x4001f27	          0x4c8938	                    mov qword [rax], r15	      2033	dwarf2.c	FUNCTION_35
0x4001f2a	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      2034	dwarf2.c	FUNCTION_35
0x4001f2f	    0x488bab980000	            mov rbp, qword [rbx + 0x98] 	      2047	dwarf2.c	FUNCTION_35	IF_3
0x4001f36	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2034	dwarf2.c	FUNCTION_35
0x4001f3a	    0x41c746080000	                  mov dword [r14 + 8], 0	      2036	dwarf2.c	FUNCTION_35
0x4001f42	        0x4883fd0f	                            cmp rbp, 0xf	      2047	dwarf2.c	FUNCTION_35	IF_3
0x4001f46	    0x49c746280000	               mov qword [r14 + 0x28], 0	      2037	dwarf2.c	FUNCTION_35
0x4001f4e	    0x41c7460c0000	                mov dword [r14 + 0xc], 0	      2039	dwarf2.c	FUNCTION_35
0x4001f56	    0x49c746200000	               mov qword [r14 + 0x20], 0	      2040	dwarf2.c	FUNCTION_35
0x4001f5e	    0x41c746100000	               mov dword [r14 + 0x10], 0	      2042	dwarf2.c	FUNCTION_35
0x4001f66	        0x49894618	             mov qword [r14 + 0x18], rax	      2034	dwarf2.c	FUNCTION_35
0x4001f6a	    0x49c746300000	               mov qword [r14 + 0x30], 0	      2043	dwarf2.c	FUNCTION_35
0x4001f72	    0x49c746380000	               mov qword [r14 + 0x38], 0	      2045	dwarf2.c	FUNCTION_35
0x4001f7a	     0xf862c0e0000	                           jbe 0x4002dac	      2047	dwarf2.c	FUNCTION_35	IF_3
0x4001f80	    0x488b93900000	            mov rdx, qword [rbx + 0x90] 	      2055	dwarf2.c	FUNCTION_35
0x4001f87	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	      2055	dwarf2.c	FUNCTION_35
0x4001f8c	          0x4889d0	                            mov rax, rdx	      2055	dwarf2.c	FUNCTION_35
0x4001f8f	        0x48034360	             add rax, qword [rbx + 0x60]	      2055	dwarf2.c	FUNCTION_35
0x4001f93	          0x4801d5	                            add rbp, rdx	      2056	dwarf2.c	FUNCTION_35
0x4001f96	        0x498d5f08	                      lea rbx, [r15 + 8]	      2056	dwarf2.c	FUNCTION_35
0x4001f9a	      0x48895c2450	             mov qword [rsp + 0x50], rbx	      2056	dwarf2.c	FUNCTION_35
0x4001f9f	        0x488d7004	                      lea rsi, [rax + 4]	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001fa3	    0x488984249000	             mov qword [rsp + 0x90], rax	      2055	dwarf2.c	FUNCTION_35
0x4001fab	          0x4839f5	                            cmp rbp, rsi	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001fae	     0xf83c1010000	                           jae 0x4002175	       612	dwarf2.c	FUNCTION_9	IF_1
0x4001fb4	    0x4889b4249000	             mov qword [rsp + 0x90], rsi	      2060	dwarf2.c	FUNCTION_35
0x4001fbc	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	      2068	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x4001fc1	    0x80bbac000000	                cmp byte [rbx + 0xac], 8	      2068	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x4001fc8	     0xf8489090000	                            je 0x4002957	      2068	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x4001fce	    0x488bb4249000	            mov rsi, qword [rsp + 0x90] 	      2076	dwarf2.c	FUNCTION_35	IF_6
0x4001fd6	            0x31db	                            xor ebx, ebx	      2076	dwarf2.c	FUNCTION_35	IF_6
0x4001fd8	          0x4531ed	                          xor r13d, r13d	       604	dwarf2.c	FUNCTION_8	IF_1
0x4001fdb	      0xb904000000	                              mov ecx, 4	      2061	dwarf2.c	FUNCTION_35
0x4001fe0	        0x4c8d241e	                    lea r12, [rsi + rbx]	      2087	dwarf2.c	FUNCTION_35
0x4001fe4	        0x488d4602	                      lea rax, [rsi + 2]	       604	dwarf2.c	FUNCTION_8	IF_1
0x4001fe8	          0x4939c4	                            cmp r12, rax	       604	dwarf2.c	FUNCTION_8	IF_1
0x4001feb	     0xf82f3010000	                            jb 0x40021e4	       604	dwarf2.c	FUNCTION_8	IF_1
0x4001ff1	        0x498d7f08	                      lea rdi, [r15 + 8]	       604	dwarf2.c	FUNCTION_8	IF_1
0x4001ff5	        0x894c2408	                mov dword [rsp + 8], ecx	       604	dwarf2.c	FUNCTION_8	IF_1
0x4001ff9	      0xe832e8ffff	     call sym.read_2_bytes.isra.2.part.3	       604	dwarf2.c	FUNCTION_8	IF_1
0x4001ffe	          0x4189c5	                           mov r13d, eax	       604	dwarf2.c	FUNCTION_8	IF_1
0x4002001	          0x8d40fe	                      lea eax, [rax - 2]	      2090	dwarf2.c	FUNCTION_35	IF_7
0x4002004	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      2090	dwarf2.c	FUNCTION_35	IF_7
0x4002008	        0x6683f803	                               cmp ax, 3	      2090	dwarf2.c	FUNCTION_35	IF_7
0x400200c	     0xf87270f0000	                            ja 0x4002f39	      2090	dwarf2.c	FUNCTION_35	IF_7
0x4002012	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	      2097	dwarf2.c	FUNCTION_35
0x400201a	      0x664183fd05	                             cmp r13w, 5	      2099	dwarf2.c	FUNCTION_35	IF_8
0x400201f	            0x89cb	                            mov ebx, ecx	      2099	dwarf2.c	FUNCTION_35	IF_8
0x4002021	        0x488d7002	                      lea rsi, [rax + 2]	      2097	dwarf2.c	FUNCTION_35
0x4002025	    0x4889b4249000	             mov qword [rsp + 0x90], rsi	      2097	dwarf2.c	FUNCTION_35
0x400202d	     0xf84e3010000	                            je 0x4002216	      2099	dwarf2.c	FUNCTION_35	IF_8
0x4002033	            0x31c0	                            xor eax, eax	      2099	dwarf2.c	FUNCTION_35	IF_8
0x4002035	      0x664183fd04	                             cmp r13w, 4	      2099	dwarf2.c	FUNCTION_35	IF_8
0x400203a	           0xf94c0	                                 sete al	      2099	dwarf2.c	FUNCTION_35	IF_8
0x400203d	      0x488d441805	                lea rax, [rax + rbx + 5]	      2099	dwarf2.c	FUNCTION_35	IF_8
0x4002042	          0x4801f0	                            add rax, rsi	      2099	dwarf2.c	FUNCTION_35	IF_8
0x4002045	          0x4939c4	                            cmp r12, rax	      2099	dwarf2.c	FUNCTION_35	IF_8
0x4002048	     0xf86900d0000	                           jbe 0x4002dde	      2099	dwarf2.c	FUNCTION_35	IF_8
0x400204e	          0x83f904	                              cmp ecx, 4	      2128	dwarf2.c	FUNCTION_35	IF_11
0x4002051	     0xf84f7010000	                            je 0x400224e	      2128	dwarf2.c	FUNCTION_35	IF_11
0x4002057	        0x488d4608	                      lea rax, [rsi + 8]	       620	dwarf2.c	FUNCTION_10	IF_1
0x400205b	          0x4939c4	                            cmp r12, rax	       620	dwarf2.c	FUNCTION_10	IF_1
0x400205e	     0xf83a20a0000	                           jae 0x4002b06	       620	dwarf2.c	FUNCTION_10	IF_1
0x4002064	          0x4801de	                            add rsi, rbx	      2132	dwarf2.c	FUNCTION_35
0x4002067	    0xc74424240000	               mov dword [rsp + 0x24], 0	       589	dwarf2.c	FUNCTION_6	IF_1
0x400206f	        0x488d4601	                      lea rax, [rsi + 1]	       588	dwarf2.c	FUNCTION_6	IF_1
0x4002073	    0x4889b4249000	             mov qword [rsp + 0x90], rsi	      2132	dwarf2.c	FUNCTION_35
0x400207b	          0x4939c4	                            cmp r12, rax	       588	dwarf2.c	FUNCTION_6	IF_1
0x400207e	            0x7207	                            jb 0x4002087	       588	dwarf2.c	FUNCTION_6	IF_1
0x4002080	           0xfb61e	                   movzx ebx, byte [rsi]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4002083	        0x895c2424	             mov dword [rsp + 0x24], ebx	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4002087	      0x664183fd03	                             cmp r13w, 3	      2137	dwarf2.c	FUNCTION_35	IF_12
0x400208c	    0x488984249000	             mov qword [rsp + 0x90], rax	      2135	dwarf2.c	FUNCTION_35
0x4002094	     0xf86d7010000	                           jbe 0x4002271	      2137	dwarf2.c	FUNCTION_35	IF_12
0x400209a	        0x488d4602	                      lea rax, [rsi + 2]	       588	dwarf2.c	FUNCTION_6	IF_1
0x400209e	          0x4939c4	                            cmp r12, rax	       588	dwarf2.c	FUNCTION_6	IF_1
0x40020a1	     0xf8349080000	                           jae 0x40028f0	       588	dwarf2.c	FUNCTION_6	IF_1
0x40020a7	    0x488984249000	             mov qword [rsp + 0x90], rax	      2140	dwarf2.c	FUNCTION_35	IF_12
0x40020af	      0xba05000000	                              mov edx, 5	      2148	dwarf2.c	FUNCTION_35	ELSE_3	IF_13	CALL_29
0x40020b4	      0xbe00000000	                              mov esi, 0	      2148	dwarf2.c	FUNCTION_35	ELSE_3	IF_13	CALL_29
0x40020b9	      0xe94e060000	                           jmp 0x400270c	      2148	dwarf2.c	FUNCTION_35	ELSE_3	IF_13	CALL_29
0x40020be	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	      2148	dwarf2.c	FUNCTION_35	ELSE_3	IF_13	CALL_29
0x40020c3	    0x4889b4249000	             mov qword [rsp + 0x90], rsi	      2291	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40020cb	      0xba05000000	                              mov edx, 5	      2340	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_64
0x40020d0	      0xbe00000000	                              mov esi, 0	      2340	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_64
0x40020d5	      0xbf00000000	                              mov edi, 0	      2340	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_64
0x40020da	      0xe800000000	                          call 0x40020df	      2340	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_64
0x40020df	          0x4889c7	                            mov rdi, rax	      2339	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_63
0x40020e2	            0x31c0	                            xor eax, eax	      2339	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_63
0x40020e4	      0xe800000000	                          call 0x40020e9	      2339	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_63
0x40020e9	      0xbf11000000	                           mov edi, 0x11	      2341	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_65
0x40020ee	      0xe800000000	                          call 0x40020f3	      2341	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_65
0x40020f3	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2343	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_31
0x40020f8	          0x4885c0	                           test rax, rax	      2343	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_31
0x40020fb	            0x740b	                            je 0x4002108	      2343	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_31
0x40020fd	          0x4889c7	                            mov rdi, rax	      2344	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_66
0x4002100	      0xe800000000	                          call 0x4002105	      2344	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_66
0x4002105	           0xf1f00	                         nop dword [rax]	      2344	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_66
0x4002108	        0x498b7e30	            mov rdi, qword [r14 + 0x30] 	      2444	dwarf2.c	FUNCTION_35	WHILE_5
0x400210c	          0x4885ff	                           test rdi, rdi	      2444	dwarf2.c	FUNCTION_35	WHILE_5
0x400210f	            0x741d	                            je 0x400212e	      2444	dwarf2.c	FUNCTION_35	WHILE_5
0x4002111	     0xf1f80000000	                         nop dword [rax]	      2444	dwarf2.c	FUNCTION_35	WHILE_5
0x4002118	        0x488b4708	                mov rax, qword [rdi + 8]	      2447	dwarf2.c	FUNCTION_35	WHILE_5
0x400211c	        0x49894630	             mov qword [r14 + 0x30], rax	      2447	dwarf2.c	FUNCTION_35	WHILE_5
0x4002120	      0xe800000000	                          call 0x4002125	      2448	dwarf2.c	FUNCTION_35	WHILE_5	CALL_79
0x4002125	        0x498b7e30	            mov rdi, qword [r14 + 0x30] 	      2444	dwarf2.c	FUNCTION_35	WHILE_5
0x4002129	          0x4885ff	                           test rdi, rdi	      2444	dwarf2.c	FUNCTION_35	WHILE_5
0x400212c	            0x75ea	                           jne 0x4002118	      2444	dwarf2.c	FUNCTION_35	WHILE_5
0x400212e	        0x498b7e28	            mov rdi, qword [r14 + 0x28] 	      2450	dwarf2.c	FUNCTION_35	IF_41
0x4002132	          0x4885ff	                           test rdi, rdi	      2450	dwarf2.c	FUNCTION_35	IF_41
0x4002135	            0x7405	                            je 0x400213c	      2450	dwarf2.c	FUNCTION_35	IF_41
0x4002137	      0xe800000000	                          call 0x400213c	      2451	dwarf2.c	FUNCTION_35	CALL_80
0x400213c	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	      2452	dwarf2.c	FUNCTION_35	IF_42
0x4002140	          0x4885ff	                           test rdi, rdi	      2452	dwarf2.c	FUNCTION_35	IF_42
0x4002143	            0x7405	                            je 0x400214a	      2452	dwarf2.c	FUNCTION_35	IF_42
0x4002145	      0xe800000000	                          call 0x400214a	      2453	dwarf2.c	FUNCTION_35	CALL_81
0x400214a	            0x31c0	                            xor eax, eax	      2454	dwarf2.c	FUNCTION_35
0x400214c	    0x488b9c249800	            mov rbx, qword [rsp + 0x98] 	      2455	dwarf2.c	FUNCTION_35
0x4002154	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2455	dwarf2.c	FUNCTION_35
0x400215d	     0xf85df0d0000	                           jne 0x4002f42	      2455	dwarf2.c	FUNCTION_35
0x4002163	    0x4881c4a80000	                           add rsp, 0xa8	      2455	dwarf2.c	FUNCTION_35
0x400216a	              0x5b	                                 pop rbx	      2455	dwarf2.c	FUNCTION_35
0x400216b	              0x5d	                                 pop rbp	      2455	dwarf2.c	FUNCTION_35
0x400216c	            0x415c	                                 pop r12	      2455	dwarf2.c	FUNCTION_35
0x400216e	            0x415d	                                 pop r13	      2455	dwarf2.c	FUNCTION_35
0x4002170	            0x415e	                                 pop r14	      2455	dwarf2.c	FUNCTION_35
0x4002172	            0x415f	                                 pop r15	      2455	dwarf2.c	FUNCTION_35
0x4002174	              0xc3	                                     ret	      2455	dwarf2.c	FUNCTION_35
0x4002175	          0x4889c6	                            mov rsi, rax	      2455	dwarf2.c	FUNCTION_35
0x4002178	          0x4889df	                            mov rdi, rbx	      2455	dwarf2.c	FUNCTION_35
0x400217b	      0xe8d0e6ffff	     call sym.read_4_bytes.isra.4.part.5	      2455	dwarf2.c	FUNCTION_35
0x4002180	            0x89c3	                            mov ebx, eax	      2059	dwarf2.c	FUNCTION_35	CALL_6
0x4002182	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	      2060	dwarf2.c	FUNCTION_35
0x400218a	      0xbaffffffff	                     mov edx, 0xffffffff	      2062	dwarf2.c	FUNCTION_35	IF_4
0x400218f	          0x4839d3	                            cmp rbx, rdx	      2062	dwarf2.c	FUNCTION_35	IF_4
0x4002192	        0x488d7004	                      lea rsi, [rax + 4]	      2060	dwarf2.c	FUNCTION_35
0x4002196	    0x4889b4249000	             mov qword [rsp + 0x90], rsi	      2060	dwarf2.c	FUNCTION_35
0x400219e	     0xf85770c0000	                           jne 0x4002e1b	      2062	dwarf2.c	FUNCTION_35	IF_4
0x40021a4	        0x4883c00c	                            add rax, 0xc	       620	dwarf2.c	FUNCTION_10	IF_1
0x40021a8	            0x31db	                            xor ebx, ebx	       621	dwarf2.c	FUNCTION_10	IF_1
0x40021aa	          0x4839c5	                            cmp rbp, rax	       620	dwarf2.c	FUNCTION_10	IF_1
0x40021ad	     0xf83d1070000	                           jae 0x4002984	       620	dwarf2.c	FUNCTION_10	IF_1
0x40021b3	        0x4883c608	                              add rsi, 8	      2065	dwarf2.c	FUNCTION_35	IF_4
0x40021b7	      0xb908000000	                              mov ecx, 8	      2066	dwarf2.c	FUNCTION_35	IF_4
0x40021bc	    0x4889b4249000	             mov qword [rsp + 0x90], rsi	      2065	dwarf2.c	FUNCTION_35	IF_4
0x40021c4	          0x4829f5	                            sub rbp, rsi	      2076	dwarf2.c	FUNCTION_35	IF_6
0x40021c7	          0x4839dd	                            cmp rbp, rbx	      2076	dwarf2.c	FUNCTION_35	IF_6
0x40021ca	     0xf82a70b0000	                            jb 0x4002d77	      2076	dwarf2.c	FUNCTION_35	IF_6
0x40021d0	        0x4c8d241e	                    lea r12, [rsi + rbx]	      2087	dwarf2.c	FUNCTION_35
0x40021d4	        0x488d4602	                      lea rax, [rsi + 2]	       604	dwarf2.c	FUNCTION_8	IF_1
0x40021d8	          0x4531ed	                          xor r13d, r13d	       604	dwarf2.c	FUNCTION_8	IF_1
0x40021db	          0x4939c4	                            cmp r12, rax	       604	dwarf2.c	FUNCTION_8	IF_1
0x40021de	     0xf830dfeffff	                           jae 0x4001ff1	       604	dwarf2.c	FUNCTION_8	IF_1
0x40021e4	      0xbe00000000	                              mov esi, 0	      2093	dwarf2.c	FUNCTION_35	IF_7	CALL_14
0x40021e9	      0xba05000000	                              mov edx, 5	      2093	dwarf2.c	FUNCTION_35	IF_7	CALL_14
0x40021ee	      0xbf00000000	                              mov edi, 0	      2093	dwarf2.c	FUNCTION_35	IF_7	CALL_14
0x40021f3	      0xe800000000	                          call 0x40021f8	      2093	dwarf2.c	FUNCTION_35	IF_7	CALL_14
0x40021f8	          0x4489ee	                           mov esi, r13d	      2092	dwarf2.c	FUNCTION_35	IF_7	CALL_13
0x40021fb	          0x4889c7	                            mov rdi, rax	      2120	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_21
0x40021fe	            0x31c0	                            xor eax, eax	      2120	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_21
0x4002200	      0xe800000000	                          call 0x4002205	      2120	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_21
0x4002205	      0xbf11000000	                           mov edi, 0x11	      2123	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_23
0x400220a	      0xe800000000	                          call 0x400220f	      2123	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_23
0x400220f	            0x31c0	                            xor eax, eax	      2124	dwarf2.c	FUNCTION_35	IF_9	IF_10
0x4002211	      0xe936ffffff	                           jmp 0x400214c	      2124	dwarf2.c	FUNCTION_35	IF_9	IF_10
0x4002216	      0x488d541e08	                lea rdx, [rsi + rbx + 8]	      2099	dwarf2.c	FUNCTION_35	IF_8
0x400221b	          0x4939d4	                            cmp r12, rdx	      2099	dwarf2.c	FUNCTION_35	IF_8
0x400221e	     0xf86ba0b0000	                           jbe 0x4002dde	      2099	dwarf2.c	FUNCTION_35	IF_8
0x4002224	        0x488d7004	                      lea rsi, [rax + 4]	       588	dwarf2.c	FUNCTION_6	IF_1
0x4002228	        0x488d5003	                      lea rdx, [rax + 3]	       588	dwarf2.c	FUNCTION_6	IF_1
0x400222c	          0x4939f4	                            cmp r12, rsi	       588	dwarf2.c	FUNCTION_6	IF_1
0x400222f	    0x488994249000	             mov qword [rsp + 0x90], rdx	       588	dwarf2.c	FUNCTION_6	IF_1
0x4002237	     0xf837d060000	                           jae 0x40028ba	       588	dwarf2.c	FUNCTION_6	IF_1
0x400223d	          0x83f904	                              cmp ecx, 4	      2128	dwarf2.c	FUNCTION_35	IF_11
0x4002240	    0x4889b4249000	             mov qword [rsp + 0x90], rsi	      2117	dwarf2.c	FUNCTION_35	IF_9
0x4002248	     0xf8509feffff	                           jne 0x4002057	      2128	dwarf2.c	FUNCTION_35	IF_11
0x400224e	        0x488d4604	                      lea rax, [rsi + 4]	       612	dwarf2.c	FUNCTION_9	IF_1
0x4002252	          0x4939c4	                            cmp r12, rax	       612	dwarf2.c	FUNCTION_9	IF_1
0x4002255	     0xf8209feffff	                            jb 0x4002064	       612	dwarf2.c	FUNCTION_9	IF_1
0x400225b	        0x498d7f08	                      lea rdi, [r15 + 8]	       612	dwarf2.c	FUNCTION_9	IF_1
0x400225f	      0xe8ece5ffff	     call sym.read_4_bytes.isra.4.part.5	       612	dwarf2.c	FUNCTION_9	IF_1
0x4002264	    0x488bb4249000	            mov rsi, qword [rsp + 0x90] 	       612	dwarf2.c	FUNCTION_9	IF_1
0x400226c	      0xe9f3fdffff	                           jmp 0x4002064	       612	dwarf2.c	FUNCTION_9	IF_1
0x4002271	      0xc644243b01	                mov byte [rsp + 0x3b], 1	      2143	dwarf2.c	FUNCTION_35	ELSE_3
0x4002276	        0x488d5001	                      lea rdx, [rax + 1]	      2154	dwarf2.c	FUNCTION_35
0x400227a	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	       597	dwarf2.c	FUNCTION_7	IF_1
0x4002282	    0x488994249000	             mov qword [rsp + 0x90], rdx	      2154	dwarf2.c	FUNCTION_35
0x400228a	        0x488d5002	                      lea rdx, [rax + 2]	       596	dwarf2.c	FUNCTION_7	IF_1
0x400228e	          0x4939d4	                            cmp r12, rdx	       596	dwarf2.c	FUNCTION_7	IF_1
0x4002291	            0x7211	                            jb 0x40022a4	       596	dwarf2.c	FUNCTION_7	IF_1
0x4002293	         0xfb65801	               movzx ebx, byte [rax + 1]	       598	dwarf2.c	FUNCTION_7	CALL_1
0x4002297	          0x8d4b80	                   lea ecx, [rbx - 0x80]	       598	dwarf2.c	FUNCTION_7	CALL_1
0x400229a	           0xfb6c9	                           movzx ecx, cl	       598	dwarf2.c	FUNCTION_7	CALL_1
0x400229d	          0x8d5980	                   lea ebx, [rcx - 0x80]	       598	dwarf2.c	FUNCTION_7	CALL_1
0x40022a0	        0x895c243c	             mov dword [rsp + 0x3c], ebx	       598	dwarf2.c	FUNCTION_7	CALL_1
0x40022a4	        0x488d4803	                      lea rcx, [rax + 3]	       588	dwarf2.c	FUNCTION_6	IF_1
0x40022a8	    0x488994249000	             mov qword [rsp + 0x90], rdx	      2157	dwarf2.c	FUNCTION_35
0x40022b0	          0x4939cc	                            cmp r12, rcx	       588	dwarf2.c	FUNCTION_6	IF_1
0x40022b3	     0xf822c040000	                            jb 0x40026e5	       588	dwarf2.c	FUNCTION_6	IF_1
0x40022b9	         0xfb65802	               movzx ebx, byte [rax + 2]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x40022bd	        0x488d5004	                      lea rdx, [rax + 4]	       588	dwarf2.c	FUNCTION_6	IF_1
0x40022c1	    0x48898c249000	             mov qword [rsp + 0x90], rcx	      2160	dwarf2.c	FUNCTION_35
0x40022c9	          0x4939d4	                            cmp r12, rdx	       588	dwarf2.c	FUNCTION_6	IF_1
0x40022cc	        0x885c2423	               mov byte [rsp + 0x23], bl	       590	dwarf2.c	FUNCTION_6	CALL_1
0x40022d0	        0x895c2440	             mov dword [rsp + 0x40], ebx	       590	dwarf2.c	FUNCTION_6	CALL_1
0x40022d4	     0xf8248060000	                            jb 0x4002922	       588	dwarf2.c	FUNCTION_6	IF_1
0x40022da	         0xfb65803	               movzx ebx, byte [rax + 3]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x40022de	    0x488994249000	             mov qword [rsp + 0x90], rdx	      2163	dwarf2.c	FUNCTION_35
0x40022e6	           0xfb6f3	                           movzx esi, bl	      2165	dwarf2.c	FUNCTION_35	IF_14
0x40022e9	        0x885c2408	                  mov byte [rsp + 8], bl	       590	dwarf2.c	FUNCTION_6	CALL_1
0x40022ed	        0x895c2414	             mov dword [rsp + 0x14], ebx	       590	dwarf2.c	FUNCTION_6	CALL_1
0x40022f1	      0x488d4432ff	                lea rax, [rdx + rsi - 1]	      2165	dwarf2.c	FUNCTION_35	IF_14
0x40022f6	          0x4939c4	                            cmp r12, rax	      2165	dwarf2.c	FUNCTION_35	IF_14
0x40022f9	     0xf8603040000	                           jbe 0x4002702	      2165	dwarf2.c	FUNCTION_35	IF_14
0x40022ff	          0x4c89ff	                            mov rdi, r15	      2173	dwarf2.c	FUNCTION_35	CALL_38
0x4002302	      0xe800000000	                          call 0x4002307	      2173	dwarf2.c	FUNCTION_35	CALL_38
0x4002307	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x400230b	          0x4889c3	                            mov rbx, rax	      2173	dwarf2.c	FUNCTION_35	CALL_38
0x400230e	      0x4889442458	             mov qword [rsp + 0x58], rax	      2173	dwarf2.c	FUNCTION_35	CALL_38
0x4002313	          0xc60001	                       mov byte [rax], 1	      2175	dwarf2.c	FUNCTION_35
0x4002316	          0x83f901	                              cmp ecx, 1	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x4002319	            0x7642	                           jbe 0x400235d	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x400231b	          0x83e902	                              sub ecx, 2	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x400231e	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x4002326	        0x488d5301	                      lea rdx, [rbx + 1]	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x400232a	      0x488d7c0b02	                lea rdi, [rbx + rcx + 2]	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x400232f	              0x90	                                     nop	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x4002330	        0x488d7001	                      lea rsi, [rax + 1]	       588	dwarf2.c	FUNCTION_6	IF_1
0x4002334	            0x31c9	                            xor ecx, ecx	       588	dwarf2.c	FUNCTION_6	IF_1
0x4002336	          0x4939f4	                            cmp r12, rsi	       588	dwarf2.c	FUNCTION_6	IF_1
0x4002339	            0x7203	                            jb 0x400233e	       588	dwarf2.c	FUNCTION_6	IF_1
0x400233b	           0xfb608	                   movzx ecx, byte [rax]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x400233e	            0x880a	                      mov byte [rdx], cl	      2179	dwarf2.c	FUNCTION_35	FOR_1	CALL_39
0x4002340	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	      2180	dwarf2.c	FUNCTION_35	FOR_1
0x4002348	        0x4883c201	                              add rdx, 1	      2180	dwarf2.c	FUNCTION_35	FOR_1
0x400234c	        0x4883c001	                              add rax, 1	      2180	dwarf2.c	FUNCTION_35	FOR_1
0x4002350	          0x4839fa	                            cmp rdx, rdi	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x4002353	    0x488984249000	             mov qword [rsp + 0x90], rax	      2180	dwarf2.c	FUNCTION_35	FOR_1
0x400235b	            0x75d3	                           jne 0x4002330	      2177	dwarf2.c	FUNCTION_35	FOR_1
0x400235d	      0x664183fd05	                             cmp r13w, 5	      2183	dwarf2.c	FUNCTION_35	IF_15
0x4002362	        0x498d6e20	                   lea rbp, [r14 + 0x20]	      2183	dwarf2.c	FUNCTION_35	IF_15
0x4002366	        0x498d5e0c	                    lea rbx, [r14 + 0xc]	      2183	dwarf2.c	FUNCTION_35	IF_15
0x400236a	     0xf843d070000	                            je 0x4002aad	      2183	dwarf2.c	FUNCTION_35	IF_15
0x4002370	    0x488b94249000	            mov rdx, qword [rsp + 0x90] 	      2198	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	CALL_42
0x4002378	          0x4939d4	                            cmp r12, rdx	       660	dwarf2.c	FUNCTION_12	IF_1
0x400237b	     0xf8642020000	                           jbe 0x40025c3	       660	dwarf2.c	FUNCTION_12	IF_1
0x4002381	     0xf1f80000000	                         nop dword [rax]	       660	dwarf2.c	FUNCTION_12	IF_1
0x4002388	          0x803a00	                       cmp byte [rdx], 0	       666	dwarf2.c	FUNCTION_12	IF_2
0x400238b	     0xf843e030000	                            je 0x40026cf	       666	dwarf2.c	FUNCTION_12	IF_2
0x4002391	        0x488d4201	                      lea rax, [rdx + 1]	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4002395	            0xeb17	                           jmp 0x40023ae	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4002397	    0x660f1f840000	                    nop word [rax + rax]	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40023a0	        0x4883c001	                              add rax, 1	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40023a4	        0x8078ff00	                   cmp byte [rax - 1], 0	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40023a8	     0xf84da010000	                            je 0x4002588	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40023ae	          0x4939c4	                            cmp r12, rax	       672	dwarf2.c	FUNCTION_12	WHILE_1
0x40023b1	            0x75ed	                           jne 0x40023a0	       672	dwarf2.c	FUNCTION_12	WHILE_1
0x40023b3	          0x4d89e5	                            mov r13, r12	       679	dwarf2.c	FUNCTION_12
0x40023b6	          0x4929d5	                            sub r13, rdx	       679	dwarf2.c	FUNCTION_12
0x40023b9	    0x4489ac248c00	            mov dword [rsp + 0x8c], r13d	       679	dwarf2.c	FUNCTION_12
0x40023c1	          0x4589ed	                          mov r13d, r13d	       679	dwarf2.c	FUNCTION_12
0x40023c4	          0x4901d5	                            add r13, rdx	      2206	dwarf2.c	FUNCTION_35	ELSE_4
0x40023c7	          0x4d39ec	                            cmp r12, r13	       660	dwarf2.c	FUNCTION_12	IF_1
0x40023ca	    0x4c89ac249000	             mov qword [rsp + 0x90], r13	      2206	dwarf2.c	FUNCTION_35	ELSE_4
0x40023d2	     0xf86ce020000	                           jbe 0x40026a6	       660	dwarf2.c	FUNCTION_12	IF_1
0x40023d8	      0x41807d0000	                       cmp byte [r13], 0	       666	dwarf2.c	FUNCTION_12	IF_2
0x40023dd	     0xf84b5060000	                            je 0x4002a98	       666	dwarf2.c	FUNCTION_12	IF_2
0x40023e3	        0x498d4501	                      lea rax, [r13 + 1]	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40023e7	            0xeb15	                           jmp 0x40023fe	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40023e9	     0xf1f80000000	                         nop dword [rax]	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40023f0	        0x4883c001	                              add rax, 1	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40023f4	        0x8078ff00	                   cmp byte [rax - 1], 0	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40023f8	     0xf84e2010000	                            je 0x40025e0	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40023fe	          0x4939c4	                            cmp r12, rax	       672	dwarf2.c	FUNCTION_12	WHILE_1
0x4002401	            0x75ed	                           jne 0x40023f0	       672	dwarf2.c	FUNCTION_12	WHILE_1
0x4002403	          0x4c89e6	                            mov rsi, r12	       679	dwarf2.c	FUNCTION_12
0x4002406	          0x4c29ee	                            sub rsi, r13	       679	dwarf2.c	FUNCTION_12
0x4002409	    0x89b4248c0000	             mov dword [rsp + 0x8c], esi	       679	dwarf2.c	FUNCTION_12
0x4002410	            0x89f6	                            mov esi, esi	       679	dwarf2.c	FUNCTION_12
0x4002412	          0x4c01ee	                            add rsi, r13	      2226	dwarf2.c	FUNCTION_35	ELSE_4
0x4002415	    0x4889b4249000	             mov qword [rsp + 0x90], rsi	      2226	dwarf2.c	FUNCTION_35	ELSE_4
0x400241d	       0xfb644243b	           movzx eax, byte [rsp + 0x3b] 	      2268	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4002422	      0x4c897c2448	             mov qword [rsp + 0x48], r15	      2268	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4002427	      0x4c89742418	             mov qword [rsp + 0x18], r14	      2268	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x400242c	        0x89442478	             mov dword [rsp + 0x78], eax	      2268	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4002430	      0xb8ff000000	                           mov eax, 0xff	      2414	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4002435	        0x2b442414	             sub eax, dword [rsp + 0x14]	      2414	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x4002439	        0x8944247c	             mov dword [rsp + 0x7c], eax	      2414	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x400243d	          0x4939f4	                            cmp r12, rsi	      2230	dwarf2.c	FUNCTION_35	WHILE_3
0x4002440	     0xf86110a0000	                           jbe 0x4002e57	      2230	dwarf2.c	FUNCTION_35	WHILE_3
0x4002446	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x400244b	    0x48c744242800	               mov qword [rsp + 0x28], 0	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x4002454	        0x448b4808	                mov r9d, dword [rax + 8]	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x4002458	          0x4585c9	                           test r9d, r9d	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x400245b	     0xf85bb070000	                           jne 0x4002c1c	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x4002461	          0x4531f6	                          xor r14d, r14d	      2284	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002464	            0x31db	                            xor ebx, ebx	      2284	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002466	    0x49c7c5ffffff	             mov r13, 0xffffffffffffffff	      2284	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x400246d	          0x4c89f0	                            mov rax, r14	      2284	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002470	    0xc74424140000	               mov dword [rsp + 0x14], 0	      2284	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002478	          0x4d89e6	                            mov r14, r12	      2284	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x400247b	    0xc74424440000	               mov dword [rsp + 0x44], 0	      2284	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002483	      0xbd01000000	                              mov ebp, 1	      2284	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002488	          0x4531ff	                          xor r15d, r15d	      2284	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x400248b	          0x4989c4	                            mov r12, rax	      2284	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x400248e	            0x6690	                                     nop	      2284	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002490	          0x4939f6	                            cmp r14, rsi	      2251	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4
0x4002493	     0xf8667070000	                           jbe 0x4002c00	      2251	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4
0x4002499	        0x488d7e01	                      lea rdi, [rsi + 1]	       588	dwarf2.c	FUNCTION_6	IF_1
0x400249d	          0x4939fe	                            cmp r14, rdi	       588	dwarf2.c	FUNCTION_6	IF_1
0x40024a0	            0x7226	                            jb 0x40024c8	       588	dwarf2.c	FUNCTION_6	IF_1
0x40024a2	           0xfb606	                   movzx eax, byte [rsi]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x40024a5	    0x4889bc249000	             mov qword [rsp + 0x90], rdi	      2254	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4
0x40024ad	        0x3a442408	                  cmp al, byte [rsp + 8]	      2256	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x40024b1	            0x732a	                           jae 0x40024dd	      2256	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x40024b3	            0x3c09	                               cmp al, 9	      2284	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40024b5	     0xf87e2040000	                            ja 0x400299d	      2284	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40024bb	    0xff24c5000000	                       jmp qword [rax*8]	      2284	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40024c2	    0x660f1f440000	                    nop word [rax + rax]	      2284	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40024c8	            0x31c0	                            xor eax, eax	      2253	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	CALL_50
0x40024ca	      0x807c240800	                   cmp byte [rsp + 8], 0	      2256	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x40024cf	    0x4889bc249000	             mov qword [rsp + 0x90], rdi	      2254	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4
0x40024d7	     0xf853e050000	                           jne 0x4002a1b	      2256	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x40024dd	      0x448b442440	            mov r8d, dword [rsp + 0x40] 	      2260	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_21
0x40024e2	        0x2a442408	                  sub al, byte [rsp + 8]	      2259	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x40024e6	          0x4585c0	                           test r8d, r8d	      2260	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_21
0x40024e9	     0xf8407070000	                            je 0x4002bf6	      2260	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_21
0x40024ef	           0xfb6c8	                           movzx ecx, al	      2263	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x40024f2	            0x89c8	                            mov eax, ecx	      2263	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x40024f4	        0xf6742423	                   div byte [rsp + 0x23]	      2263	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x40024f8	      0x807c243b01	                cmp byte [rsp + 0x3b], 1	      2262	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x40024fd	           0xfb6c0	                           movzx eax, al	      2263	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x4002500	     0xf84ba010000	                            je 0x40026c0	      2262	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x4002506	          0x4401f8	                           add eax, r15d	      2267	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4002509	              0x99	                                     cdq	      2267	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x400250a	        0xf77c2478	                 idiv dword [rsp + 0x78]	      2267	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x400250e	       0xfaf442424	            imul eax, dword [rsp + 0x24]	      2267	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4002513	        0x440fb6fa	                          movzx r15d, dl	      2270	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4002517	            0x4898	                                    cdqe	      2267	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x4002519	          0x4901c4	                            add r12, rax	      2267	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	ELSE_5
0x400251c	            0x89c8	                            mov eax, ecx	      2273	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x400251e	        0xf6742423	                   div byte [rsp + 0x23]	      2273	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x4002522	           0xfb6c4	                           movzx eax, ah	      2273	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x4002525	         0x344243c	             add eax, dword [rsp + 0x3c]	      2273	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x4002529	             0x1c5	                            add ebp, eax	      2273	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20
0x400252b	            0x6a00	                                  push 0	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x400252d	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x4002531	        0x410fb6d7	                         movzx edx, r15b	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x4002535	          0x4189e8	                            mov r8d, ebp	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x4002538	          0x4c89e6	                            mov rsi, r12	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x400253b	              0x50	                                push rax	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x400253c	      0x448b4c2454	            mov r9d, dword [rsp + 0x54] 	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x4002541	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x4002546	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x400254b	      0xe860ddffff	                  call sym.add_line_info	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x4002550	            0x85c0	                           test eax, eax	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x4002552	              0x5a	                                 pop rdx	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x4002553	              0x59	                                 pop rcx	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x4002554	     0xf849c060000	                            je 0x4002bf6	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x400255a	          0x4d39e5	                            cmp r13, r12	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x400255d	    0x488bb4249000	            mov rsi, qword [rsp + 0x90] 	      2349	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_32	CALL_67
0x4002565	    0xc74424140000	               mov dword [rsp + 0x14], 0	      2352	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x400256d	        0x4d0f47ec	                          cmova r13, r12	      2352	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002571	          0x4c39e3	                            cmp rbx, r12	      2352	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002574	        0x490f42dc	                          cmovb rbx, r12	      2352	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002578	      0xe913ffffff	                           jmp 0x4002490	      2352	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x400257d	          0x4889fe	                            mov rsi, rdi	      2284	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002580	      0xe90bffffff	                           jmp 0x4002490	      2284	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002585	           0xf1f00	                         nop dword [rax]	      2284	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002588	          0x4829d0	                            sub rax, rdx	       675	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x400258b	          0x4889ee	                            mov rsi, rbp	      2202	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	IF_18	CALL_43
0x400258e	          0x4889df	                            mov rdi, rbx	      2202	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	IF_18	CALL_43
0x4002591	    0x8984248c0000	             mov dword [rsp + 0x8c], eax	       675	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4002598	            0x89c0	                            mov eax, eax	      2200	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1
0x400259a	          0x4801d0	                            add rax, rdx	      2200	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1
0x400259d	    0x488984249000	             mov qword [rsp + 0x90], rax	      2200	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1
0x40025a5	      0xe876e8ffff	call sym.line_info_add_include_dir.isra.27	      2202	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	IF_18	CALL_43
0x40025aa	            0x85c0	                           test eax, eax	      2202	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	IF_18	CALL_43
0x40025ac	     0xf8456fbffff	                            je 0x4002108	      2202	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	IF_18	CALL_43
0x40025b2	    0x488b94249000	            mov rdx, qword [rsp + 0x90] 	      2198	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_1	CALL_42
0x40025ba	          0x4939d4	                            cmp r12, rdx	       660	dwarf2.c	FUNCTION_12	IF_1
0x40025bd	     0xf87c5fdffff	                            ja 0x4002388	       660	dwarf2.c	FUNCTION_12	IF_1
0x40025c3	    0xc784248c0000	               mov dword [rsp + 0x8c], 0	       662	dwarf2.c	FUNCTION_12	IF_1
0x40025ce	          0x4531ed	                          xor r13d, r13d	       662	dwarf2.c	FUNCTION_12	IF_1
0x40025d1	      0xe9eefdffff	                           jmp 0x40023c4	       662	dwarf2.c	FUNCTION_12	IF_1
0x40025d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       662	dwarf2.c	FUNCTION_12	IF_1
0x40025e0	          0x4c29e8	                            sub rax, r13	       675	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40025e3	    0x488d94248c00	                   lea rdx, [rsp + 0x8c]	      2215	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_45
0x40025eb	            0x31c9	                            xor ecx, ecx	      2215	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_45
0x40025ed	    0x8984248c0000	             mov dword [rsp + 0x8c], eax	       675	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x40025f4	            0x89c0	                            mov eax, eax	      2213	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x40025f6	          0x4d89e0	                             mov r8, r12	      2215	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_45
0x40025f9	      0x498d740500	                    lea rsi, [r13 + rax]	      2213	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x40025fe	          0x4c89ff	                            mov rdi, r15	      2215	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_45
0x4002601	    0x4889b4249000	             mov qword [rsp + 0x90], rsi	      2213	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x4002609	      0xe800000000	                          call 0x400260e	      2215	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_45
0x400260e	    0x8bb4248c0000	            mov esi, dword [rsp + 0x8c] 	      2216	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x4002615	    0x488d94248c00	                   lea rdx, [rsp + 0x8c]	      2217	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_46
0x400261d	            0x31c9	                            xor ecx, ecx	      2217	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_46
0x400261f	    0x4803b4249000	             add rsi, qword [rsp + 0x90]	      2216	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x4002627	          0x4d89e0	                             mov r8, r12	      2217	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_46
0x400262a	          0x4c89ff	                            mov rdi, r15	      2217	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_46
0x400262d	          0x4889c3	                            mov rbx, rax	      2215	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_45
0x4002630	    0x4889b4249000	             mov qword [rsp + 0x90], rsi	      2216	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x4002638	      0xe800000000	                          call 0x400263d	      2217	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_46
0x400263d	    0x8bb4248c0000	            mov esi, dword [rsp + 0x8c] 	      2218	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x4002644	    0x488d94248c00	                   lea rdx, [rsp + 0x8c]	      2219	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_47
0x400264c	            0x31c9	                            xor ecx, ecx	      2219	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_47
0x400264e	    0x4803b4249000	             add rsi, qword [rsp + 0x90]	      2218	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x4002656	          0x4d89e0	                             mov r8, r12	      2219	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_47
0x4002659	          0x4c89ff	                            mov rdi, r15	      2219	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_47
0x400265c	          0x4889c5	                            mov rbp, rax	      2217	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_46
0x400265f	    0x4889b4249000	             mov qword [rsp + 0x90], rsi	      2218	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x4002667	      0xe800000000	                          call 0x400266c	      2219	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_47
0x400266c	    0x8b94248c0000	            mov edx, dword [rsp + 0x8c] 	      2220	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x4002673	          0x4189c0	                            mov r8d, eax	      2222	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	IF_19	CALL_48
0x4002676	            0x89e9	                            mov ecx, ebp	      2222	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	IF_19	CALL_48
0x4002678	    0x480194249000	            add qword [rsp + 0x90], rdx 	      2220	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2
0x4002680	          0x4c89ee	                            mov rsi, r13	      2222	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	IF_19	CALL_48
0x4002683	            0x89da	                            mov edx, ebx	      2222	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	IF_19	CALL_48
0x4002685	          0x4c89f7	                            mov rdi, r14	      2222	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	IF_19	CALL_48
0x4002688	      0xe883dbffff	        call sym.line_info_add_file_name	      2222	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	IF_19	CALL_48
0x400268d	            0x85c0	                           test eax, eax	      2222	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	IF_19	CALL_48
0x400268f	     0xf8473faffff	                            je 0x4002108	      2222	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	IF_19	CALL_48
0x4002695	    0x4c8bac249000	            mov r13, qword [rsp + 0x90] 	      2222	dwarf2.c	FUNCTION_35	ELSE_4	WHILE_2	IF_19	CALL_48
0x400269d	          0x4d39ec	                            cmp r12, r13	       660	dwarf2.c	FUNCTION_12	IF_1
0x40026a0	     0xf8732fdffff	                            ja 0x40023d8	       660	dwarf2.c	FUNCTION_12	IF_1
0x40026a6	    0xc784248c0000	               mov dword [rsp + 0x8c], 0	       662	dwarf2.c	FUNCTION_12	IF_1
0x40026b1	            0x31f6	                            xor esi, esi	       662	dwarf2.c	FUNCTION_12	IF_1
0x40026b3	      0xe95afdffff	                           jmp 0x4002412	       662	dwarf2.c	FUNCTION_12	IF_1
0x40026b8	     0xf1f84000000	                   nop dword [rax + rax]	       662	dwarf2.c	FUNCTION_12	IF_1
0x40026c0	       0xfaf442424	            imul eax, dword [rsp + 0x24]	      2263	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x40026c5	            0x4898	                                    cdqe	      2263	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x40026c7	          0x4901c4	                            add r12, rax	      2263	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x40026ca	      0xe94dfeffff	                           jmp 0x400251c	      2263	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	IF_20	IF_22
0x40026cf	    0xc784248c0000	               mov dword [rsp + 0x8c], 1	       668	dwarf2.c	FUNCTION_12	IF_2
0x40026da	    0x41bd01000000	                             mov r13d, 1	       668	dwarf2.c	FUNCTION_12	IF_2
0x40026e0	      0xe9dffcffff	                           jmp 0x40023c4	       668	dwarf2.c	FUNCTION_12	IF_2
0x40026e5	        0x488d5004	                      lea rdx, [rax + 4]	       588	dwarf2.c	FUNCTION_6	IF_1
0x40026e9	    0x48898c249000	             mov qword [rsp + 0x90], rcx	      2160	dwarf2.c	FUNCTION_35
0x40026f1	          0x4939d4	                            cmp r12, rdx	       588	dwarf2.c	FUNCTION_6	IF_1
0x40026f4	     0xf8316020000	                           jae 0x4002910	       588	dwarf2.c	FUNCTION_6	IF_1
0x40026fa	    0x488994249000	             mov qword [rsp + 0x90], rdx	      2163	dwarf2.c	FUNCTION_35
0x4002702	      0xba05000000	                              mov edx, 5	      2167	dwarf2.c	FUNCTION_35	IF_14	CALL_36
0x4002707	      0xbe00000000	                              mov esi, 0	      2167	dwarf2.c	FUNCTION_35	IF_14	CALL_36
0x400270c	      0xbf00000000	                              mov edi, 0	      2167	dwarf2.c	FUNCTION_35	IF_14	CALL_36
0x4002711	      0xe800000000	                          call 0x4002716	      2167	dwarf2.c	FUNCTION_35	IF_14	CALL_36
0x4002716	          0x4889c7	                            mov rdi, rax	      2167	dwarf2.c	FUNCTION_35	IF_14	CALL_36
0x4002719	            0x31c0	                            xor eax, eax	      2167	dwarf2.c	FUNCTION_35	IF_14	CALL_36
0x400271b	      0xe800000000	                          call 0x4002720	      2167	dwarf2.c	FUNCTION_35	IF_14	CALL_36
0x4002720	      0xbf11000000	                           mov edi, 0x11	      2168	dwarf2.c	FUNCTION_35	IF_14	CALL_37
0x4002725	      0xe800000000	                          call 0x400272a	      2168	dwarf2.c	FUNCTION_35	IF_14	CALL_37
0x400272a	            0x31c0	                            xor eax, eax	      2169	dwarf2.c	FUNCTION_35	IF_14
0x400272c	      0xe91bfaffff	                           jmp 0x400214c	      2169	dwarf2.c	FUNCTION_35	IF_14
0x4002731	        0x4883c603	                              add rsi, 3	       604	dwarf2.c	FUNCTION_8	IF_1
0x4002735	            0x31c0	                            xor eax, eax	       604	dwarf2.c	FUNCTION_8	IF_1
0x4002737	          0x4939f6	                            cmp r14, rsi	       604	dwarf2.c	FUNCTION_8	IF_1
0x400273a	     0xf83fb040000	                           jae 0x4002c3b	       604	dwarf2.c	FUNCTION_8	IF_1
0x4002740	        0x488d7702	                      lea rsi, [rdi + 2]	      2422	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002744	          0x4901c4	                            add r12, rax	      2420	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_75
0x4002747	          0x4531ff	                          xor r15d, r15d	      2421	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x400274a	    0x4889b4249000	             mov qword [rsp + 0x90], rsi	      2422	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002752	      0xe939fdffff	                           jmp 0x4002490	      2423	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002757	          0x4889fe	                            mov rsi, rdi	      2395	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_74
0x400275a	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      2395	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_74
0x400275f	    0x488d94248c00	                   lea rdx, [rsp + 0x8c]	      2395	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_74
0x4002767	          0x4d89f0	                             mov r8, r14	      2395	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_74
0x400276a	            0x31c9	                            xor ecx, ecx	      2395	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_74
0x400276c	      0xe800000000	                          call 0x4002771	      2395	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_74
0x4002771	    0x8bb4248c0000	            mov esi, dword [rsp + 0x8c] 	      2397	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002778	        0x89442444	             mov dword [rsp + 0x44], eax	      2395	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_74
0x400277c	    0x4803b4249000	             add rsi, qword [rsp + 0x90]	      2397	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002784	    0x4889b4249000	             mov qword [rsp + 0x90], rsi	      2397	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x400278c	      0xe9fffcffff	                           jmp 0x4002490	      2398	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002791	        0x8b442440	            mov eax, dword [rsp + 0x40] 	      2405	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_37
0x4002795	            0x85c0	                           test eax, eax	      2405	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_37
0x4002797	     0xf8459040000	                            je 0x4002bf6	      2405	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_37
0x400279d	        0x8b44247c	            mov eax, dword [rsp + 0x7c] 	      2408	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x40027a1	              0x99	                                     cdq	      2408	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x40027a2	        0xf77c2440	                 idiv dword [rsp + 0x40]	      2408	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x40027a6	      0x807c243b01	                cmp byte [rsp + 0x3b], 1	      2407	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x40027ab	     0xf84a6040000	                            je 0x4002c57	      2407	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x40027b1	       0xfb64c243b	           movzx ecx, byte [rsp + 0x3b] 	      2415	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x40027b6	            0x4898	                                    cdqe	      2414	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x40027b8	            0x31d2	                            xor edx, edx	      2413	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x40027ba	          0x4c01f8	                            add rax, r15	      2414	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x40027bd	          0x4889fe	                            mov rsi, rdi	      2416	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x40027c0	          0x48f7f1	                                 div rcx	      2413	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x40027c3	        0x8b4c2424	            mov ecx, dword [rsp + 0x24] 	      2413	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x40027c7	        0x480fafc1	                           imul rax, rcx	      2413	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x40027cb	        0x440fb6fa	                          movzx r15d, dl	      2416	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x40027cf	          0x4901c4	                            add r12, rax	      2413	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x40027d2	      0xe9b9fcffff	                           jmp 0x4002490	      2413	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_8
0x40027d7	          0x4889fe	                            mov rsi, rdi	      2376	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_70
0x40027da	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      2376	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_70
0x40027df	    0x488d94248c00	                   lea rdx, [rsp + 0x8c]	      2376	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_70
0x40027e7	          0x4d89f0	                             mov r8, r14	      2376	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_70
0x40027ea	      0xb901000000	                              mov ecx, 1	      2376	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_70
0x40027ef	      0xe800000000	                          call 0x40027f4	      2376	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_70
0x40027f4	             0x1c5	                            add ebp, eax	      2376	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_70
0x40027f6	    0x8bb4248c0000	            mov esi, dword [rsp + 0x8c] 	      2378	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x40027fd	    0x4803b4249000	             add rsi, qword [rsp + 0x90]	      2378	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002805	    0x4889b4249000	             mov qword [rsp + 0x90], rsi	      2378	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x400280d	      0xe97efcffff	                           jmp 0x4002490	      2379	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002812	          0x4889fe	                            mov rsi, rdi	      2386	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_71
0x4002815	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      2386	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_71
0x400281a	    0x488d94248c00	                   lea rdx, [rsp + 0x8c]	      2386	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_71
0x4002822	            0x31c9	                            xor ecx, ecx	      2386	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_71
0x4002824	          0x4d89f0	                             mov r8, r14	      2386	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_71
0x4002827	      0xe800000000	                          call 0x400282c	      2386	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_71
0x400282c	          0x4889c6	                            mov rsi, rax	      2386	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_71
0x400282f	    0x8b84248c0000	            mov eax, dword [rsp + 0x8c] 	      2388	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002836	    0x480184249000	            add qword [rsp + 0x90], rax 	      2388	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x400283e	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2389	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_36
0x4002843	          0x4885c0	                           test rax, rax	      2389	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_36
0x4002846	            0x7412	                            je 0x400285a	      2389	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_36
0x4002848	          0x4889c7	                            mov rdi, rax	      2390	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_72
0x400284b	      0x4889742428	             mov qword [rsp + 0x28], rsi	      2390	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_72
0x4002850	      0xe800000000	                          call 0x4002855	      2390	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_72
0x4002855	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      2390	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_72
0x400285a	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2391	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_73
0x400285f	      0xe82cddffff	                call sym.concat_filename	      2391	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_73
0x4002864	      0x4889442428	             mov qword [rsp + 0x28], rax	      2391	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_73
0x4002869	    0x488bb4249000	            mov rsi, qword [rsp + 0x90] 	      2391	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_73
0x4002871	      0xe91afcffff	                           jmp 0x4002490	      2392	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002876	            0x31c9	                            xor ecx, ecx	      2361	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35	CALL_68
0x4002878	      0x807c243b01	                cmp byte [rsp + 0x3b], 1	      2359	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35
0x400287d	          0x4889fe	                            mov rsi, rdi	      2361	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35	CALL_68
0x4002880	          0x4d89f0	                             mov r8, r14	      2361	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35	CALL_68
0x4002883	    0x488d94248c00	                   lea rdx, [rsp + 0x8c]	      2361	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35	CALL_68
0x400288b	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      2361	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35	CALL_68
0x4002890	     0xf84d3030000	                            je 0x4002c69	      2359	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35
0x4002896	      0xe800000000	                          call 0x400289b	      2366	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7	CALL_69
0x400289b	       0xfb64c243b	           movzx ecx, byte [rsp + 0x3b] 	      2369	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x40028a0	          0x4c01f8	                            add rax, r15	      2369	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x40028a3	            0x31d2	                            xor edx, edx	      2369	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x40028a5	      0x448b642424	           mov r12d, dword [rsp + 0x24] 	      2369	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x40028aa	          0x48f7f1	                                 div rcx	      2369	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x40028ad	        0x4c0fafe0	                           imul r12, rax	      2369	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x40028b1	        0x440fb6fa	                          movzx r15d, dl	      2371	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x40028b5	      0xe93cffffff	                           jmp 0x40027f6	      2371	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	ELSE_7
0x40028ba	         0xfb66803	               movzx ebp, byte [rax + 3]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x40028be	    0x4889b4249000	             mov qword [rsp + 0x90], rsi	      2117	dwarf2.c	FUNCTION_35	IF_9
0x40028c6	            0x85ed	                           test ebp, ebp	      2118	dwarf2.c	FUNCTION_35	IF_9	IF_10
0x40028c8	     0xf8480f7ffff	                            je 0x400204e	      2118	dwarf2.c	FUNCTION_35	IF_9	IF_10
0x40028ce	      0xbe00000000	                              mov esi, 0	      2121	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_22
0x40028d3	      0xba05000000	                              mov edx, 5	      2121	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_22
0x40028d8	      0xbf00000000	                              mov edi, 0	      2121	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_22
0x40028dd	      0xe800000000	                          call 0x40028e2	      2121	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_22
0x40028e2	            0x89ee	                            mov esi, ebp	      2120	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_21
0x40028e4	      0xe912f9ffff	                           jmp 0x40021fb	      2120	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_21
0x40028e9	     0xf1f80000000	                         nop dword [rax]	      2120	dwarf2.c	FUNCTION_35	IF_9	IF_10	CALL_21
0x40028f0	         0xfb65e01	               movzx ebx, byte [rsi + 1]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x40028f4	    0x488984249000	             mov qword [rsp + 0x90], rax	      2140	dwarf2.c	FUNCTION_35	IF_12
0x40028fc	            0x84db	                             test bl, bl	      2145	dwarf2.c	FUNCTION_35	ELSE_3	IF_13
0x40028fe	        0x885c243b	               mov byte [rsp + 0x3b], bl	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4002902	     0xf856ef9ffff	                           jne 0x4002276	      2145	dwarf2.c	FUNCTION_35	ELSE_3	IF_13
0x4002908	      0xe9a2f7ffff	                           jmp 0x40020af	      2145	dwarf2.c	FUNCTION_35	ELSE_3	IF_13
0x400290d	           0xf1f00	                         nop dword [rax]	      2145	dwarf2.c	FUNCTION_35	ELSE_3	IF_13
0x4002910	      0xc644242300	                mov byte [rsp + 0x23], 0	       588	dwarf2.c	FUNCTION_6	IF_1
0x4002915	    0xc74424400000	               mov dword [rsp + 0x40], 0	       589	dwarf2.c	FUNCTION_6	IF_1
0x400291d	      0xe9b8f9ffff	                           jmp 0x40022da	       589	dwarf2.c	FUNCTION_6	IF_1
0x4002922	          0x4939cc	                            cmp r12, rcx	      2165	dwarf2.c	FUNCTION_35	IF_14
0x4002925	    0x488994249000	             mov qword [rsp + 0x90], rdx	      2163	dwarf2.c	FUNCTION_35
0x400292d	     0xf86cffdffff	                           jbe 0x4002702	      2165	dwarf2.c	FUNCTION_35	IF_14
0x4002933	            0x31f6	                            xor esi, esi	      2173	dwarf2.c	FUNCTION_35	CALL_38
0x4002935	          0x4c89ff	                            mov rdi, r15	      2173	dwarf2.c	FUNCTION_35	CALL_38
0x4002938	      0xe800000000	                          call 0x400293d	      2173	dwarf2.c	FUNCTION_35	CALL_38
0x400293d	    0xc74424140000	               mov dword [rsp + 0x14], 0	       589	dwarf2.c	FUNCTION_6	IF_1
0x4002945	      0x4889442458	             mov qword [rsp + 0x58], rax	      2173	dwarf2.c	FUNCTION_35	CALL_38
0x400294a	          0xc60001	                       mov byte [rax], 1	      2175	dwarf2.c	FUNCTION_35
0x400294d	      0xc644240800	                   mov byte [rsp + 8], 0	      2162	dwarf2.c	FUNCTION_35	CALL_34
0x4002952	      0xe906faffff	                           jmp 0x400235d	      2162	dwarf2.c	FUNCTION_35	CALL_34
0x4002957	        0x4883c008	                              add rax, 8	       612	dwarf2.c	FUNCTION_9	IF_1
0x400295b	            0x31db	                            xor ebx, ebx	       612	dwarf2.c	FUNCTION_9	IF_1
0x400295d	          0x4839c5	                            cmp rbp, rax	       612	dwarf2.c	FUNCTION_9	IF_1
0x4002960	     0xf8387040000	                           jae 0x4002ded	       612	dwarf2.c	FUNCTION_9	IF_1
0x4002966	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	      2072	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x400296e	      0xb908000000	                              mov ecx, 8	      2073	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x4002973	        0x488d7004	                      lea rsi, [rax + 4]	      2072	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x4002977	    0x4889b4249000	             mov qword [rsp + 0x90], rsi	      2072	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x400297f	      0xe940f8ffff	                           jmp 0x40021c4	      2072	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x4002984	        0x498d7f08	                      lea rdi, [r15 + 8]	      2072	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x4002988	      0xe8e3deffff	     call sym.read_8_bytes.isra.6.part.7	      2072	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x400298d	    0x488bb4249000	            mov rsi, qword [rsp + 0x90] 	      2072	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x4002995	          0x4889c3	                            mov rbx, rax	      2072	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x4002998	      0xe916f8ffff	                           jmp 0x40021b3	      2072	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x400299d	      0x4803442458	             add rax, qword [rsp + 0x58]	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x40029a2	          0x4531c9	                            xor r9d, r9d	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x40029a5	          0x4889fe	                            mov rsi, rdi	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x40029a8	          0x803800	                       cmp byte [rax], 0	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x40029ab	     0xf84dffaffff	                            je 0x4002490	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x40029b1	      0x48895c2460	             mov qword [rsp + 0x60], rbx	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x40029b6	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x40029bb	      0x4c896c2468	             mov qword [rsp + 0x68], r13	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x40029c0	        0x896c2470	             mov dword [rsp + 0x70], ebp	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x40029c4	          0x4989c5	                            mov r13, rax	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x40029c7	          0x4489cd	                            mov ebp, r9d	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x40029ca	    0x660f1f440000	                    nop word [rax + rax]	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x40029d0	    0x488d94248c00	                   lea rdx, [rsp + 0x8c]	      2428	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2	CALL_76
0x40029d8	            0x31c9	                            xor ecx, ecx	      2428	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2	CALL_76
0x40029da	          0x4d89f0	                             mov r8, r14	      2428	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2	CALL_76
0x40029dd	          0x4889df	                            mov rdi, rbx	      2428	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2	CALL_76
0x40029e0	          0x83c501	                              add ebp, 1	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x40029e3	      0xe800000000	                          call 0x40029e8	      2428	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2	CALL_76
0x40029e8	    0x8bb4248c0000	            mov esi, dword [rsp + 0x8c] 	      2430	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x40029ef	    0x4803b4249000	             add rsi, qword [rsp + 0x90]	      2430	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x40029f7	    0x4889b4249000	             mov qword [rsp + 0x90], rsi	      2430	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x40029ff	      0x410fb64500	                   movzx eax, byte [r13]	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4002a04	            0x39e8	                            cmp eax, ebp	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4002a06	            0x77c8	                            ja 0x40029d0	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4002a08	      0x488b5c2460	            mov rbx, qword [rsp + 0x60] 	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4002a0d	      0x4c8b6c2468	            mov r13, qword [rsp + 0x68] 	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4002a12	        0x8b6c2470	            mov ebp, dword [rsp + 0x70] 	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4002a16	      0xe975faffff	                           jmp 0x4002490	      2426	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	FOR_2
0x4002a1b	          0x4889fe	                            mov rsi, rdi	      2287	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_52
0x4002a1e	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      2287	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_52
0x4002a23	    0x488d94248c00	                   lea rdx, [rsp + 0x8c]	      2287	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_52
0x4002a2b	            0x31c9	                            xor ecx, ecx	      2287	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_52
0x4002a2d	          0x4d89f0	                             mov r8, r14	      2287	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_52
0x4002a30	      0xe800000000	                          call 0x4002a35	      2287	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	CALL_52
0x4002a35	    0x8b94248c0000	            mov edx, dword [rsp + 0x8c] 	      2289	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002a3c	    0x480394249000	             add rdx, qword [rsp + 0x90]	      2289	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002a44	        0x488d7201	                      lea rsi, [rdx + 1]	       588	dwarf2.c	FUNCTION_6	IF_1
0x4002a48	    0x488994249000	             mov qword [rsp + 0x90], rdx	      2289	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002a50	          0x4939f6	                            cmp r14, rsi	       588	dwarf2.c	FUNCTION_6	IF_1
0x4002a53	     0xf8265f6ffff	                            jb 0x40020be	       588	dwarf2.c	FUNCTION_6	IF_1
0x4002a59	           0xfb60a	                   movzx ecx, byte [rdx]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4002a5c	    0x4889b4249000	             mov qword [rsp + 0x90], rsi	      2291	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1
0x4002a64	          0x80f903	                               cmp cl, 3	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002a67	     0xf84af000000	                            je 0x4002b1c	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002a6d	     0xf860b020000	                           jbe 0x4002c7e	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002a73	          0x80f904	                               cmp cl, 4	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002a76	     0xf84c4020000	                            je 0x4002d40	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002a7c	          0x80f980	                            cmp cl, 0x80	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002a7f	     0xf85aa040000	                           jne 0x4002f2f	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002a85	          0x83e801	                              sub eax, 1	      2336	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002a88	          0x4801c6	                            add rsi, rax	      2336	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002a8b	    0x4889b4249000	             mov qword [rsp + 0x90], rsi	      2336	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002a93	      0xe9f8f9ffff	                           jmp 0x4002490	      2337	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002a98	    0xc784248c0000	               mov dword [rsp + 0x8c], 1	       668	dwarf2.c	FUNCTION_12	IF_2
0x4002aa3	      0xbe01000000	                              mov esi, 1	       668	dwarf2.c	FUNCTION_12	IF_2
0x4002aa8	      0xe965f9ffff	                           jmp 0x4002412	       668	dwarf2.c	FUNCTION_12	IF_2
0x4002aad	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2186	dwarf2.c	FUNCTION_35	IF_15	IF_16	CALL_40
0x4002ab2	    0x488db4249000	                   lea rsi, [rsp + 0x90]	      2186	dwarf2.c	FUNCTION_35	IF_15	IF_16	CALL_40
0x4002aba	    0x41b800000000	                              mov r8d, 0	      2186	dwarf2.c	FUNCTION_35	IF_15	IF_16	CALL_40
0x4002ac0	          0x4c89f1	                            mov rcx, r14	      2186	dwarf2.c	FUNCTION_35	IF_15	IF_16	CALL_40
0x4002ac3	          0x4c89e2	                            mov rdx, r12	      2186	dwarf2.c	FUNCTION_35	IF_15	IF_16	CALL_40
0x4002ac6	      0xe8d5efffff	         call sym.read_formatted_entries	      2186	dwarf2.c	FUNCTION_35	IF_15	IF_16	CALL_40
0x4002acb	            0x85c0	                           test eax, eax	      2186	dwarf2.c	FUNCTION_35	IF_15	IF_16	CALL_40
0x4002acd	     0xf8435f6ffff	                            je 0x4002108	      2186	dwarf2.c	FUNCTION_35	IF_15	IF_16	CALL_40
0x4002ad3	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      2191	dwarf2.c	FUNCTION_35	IF_15	IF_17	CALL_41
0x4002ad8	    0x488db4249000	                   lea rsi, [rsp + 0x90]	      2191	dwarf2.c	FUNCTION_35	IF_15	IF_17	CALL_41
0x4002ae0	    0x41b800000000	                              mov r8d, 0	      2191	dwarf2.c	FUNCTION_35	IF_15	IF_17	CALL_41
0x4002ae6	          0x4c89f1	                            mov rcx, r14	      2191	dwarf2.c	FUNCTION_35	IF_15	IF_17	CALL_41
0x4002ae9	          0x4c89e2	                            mov rdx, r12	      2191	dwarf2.c	FUNCTION_35	IF_15	IF_17	CALL_41
0x4002aec	      0xe8afefffff	         call sym.read_formatted_entries	      2191	dwarf2.c	FUNCTION_35	IF_15	IF_17	CALL_41
0x4002af1	            0x85c0	                           test eax, eax	      2191	dwarf2.c	FUNCTION_35	IF_15	IF_17	CALL_41
0x4002af3	     0xf840ff6ffff	                            je 0x4002108	      2191	dwarf2.c	FUNCTION_35	IF_15	IF_17	CALL_41
0x4002af9	    0x488bb4249000	            mov rsi, qword [rsp + 0x90] 	      2191	dwarf2.c	FUNCTION_35	IF_15	IF_17	CALL_41
0x4002b01	      0xe917f9ffff	                           jmp 0x400241d	      2191	dwarf2.c	FUNCTION_35	IF_15	IF_17	CALL_41
0x4002b06	        0x498d7f08	                      lea rdi, [r15 + 8]	      2191	dwarf2.c	FUNCTION_35	IF_15	IF_17	CALL_41
0x4002b0a	      0xe861ddffff	     call sym.read_8_bytes.isra.6.part.7	      2191	dwarf2.c	FUNCTION_35	IF_15	IF_17	CALL_41
0x4002b0f	    0x488bb4249000	            mov rsi, qword [rsp + 0x90] 	      2191	dwarf2.c	FUNCTION_35	IF_15	IF_17	CALL_41
0x4002b17	      0xe948f5ffff	                           jmp 0x4002064	      2191	dwarf2.c	FUNCTION_35	IF_15	IF_17	CALL_41
0x4002b1c	          0x4939f6	                            cmp r14, rsi	       660	dwarf2.c	FUNCTION_12	IF_1
0x4002b1f	     0xf87d8020000	                            ja 0x4002dfd	       660	dwarf2.c	FUNCTION_12	IF_1
0x4002b25	    0xc784248c0000	               mov dword [rsp + 0x8c], 0	       662	dwarf2.c	FUNCTION_12	IF_1
0x4002b30	            0x31c0	                            xor eax, eax	       662	dwarf2.c	FUNCTION_12	IF_1
0x4002b32	          0x4531c9	                            xor r9d, r9d	       663	dwarf2.c	FUNCTION_12	IF_1
0x4002b35	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      2316	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_58
0x4002b3a	    0x488d94248c00	                   lea rdx, [rsp + 0x8c]	      2316	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_58
0x4002b42	          0x4801c6	                            add rsi, rax	      2315	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002b45	            0x31c9	                            xor ecx, ecx	      2316	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_58
0x4002b47	          0x4d89f0	                             mov r8, r14	      2316	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_58
0x4002b4a	      0x4c894c2470	              mov qword [rsp + 0x70], r9	      2316	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_58
0x4002b4f	    0x4889b4249000	             mov qword [rsp + 0x90], rsi	      2315	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002b57	      0xe800000000	                          call 0x4002b5c	      2316	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_58
0x4002b5c	    0x8bb4248c0000	            mov esi, dword [rsp + 0x8c] 	      2318	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002b63	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      2319	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_59
0x4002b68	    0x488d94248c00	                   lea rdx, [rsp + 0x8c]	      2319	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_59
0x4002b70	    0x4803b4249000	             add rsi, qword [rsp + 0x90]	      2318	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002b78	            0x31c9	                            xor ecx, ecx	      2319	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_59
0x4002b7a	          0x4d89f0	                             mov r8, r14	      2319	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_59
0x4002b7d	      0x4889442460	             mov qword [rsp + 0x60], rax	      2316	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_58
0x4002b82	    0x4889b4249000	             mov qword [rsp + 0x90], rsi	      2318	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002b8a	      0xe800000000	                          call 0x4002b8f	      2319	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_59
0x4002b8f	    0x8bb4248c0000	            mov esi, dword [rsp + 0x8c] 	      2321	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002b96	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      2322	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_60
0x4002b9b	    0x488d94248c00	                   lea rdx, [rsp + 0x8c]	      2322	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_60
0x4002ba3	    0x4803b4249000	             add rsi, qword [rsp + 0x90]	      2321	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002bab	            0x31c9	                            xor ecx, ecx	      2322	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_60
0x4002bad	          0x4d89f0	                             mov r8, r14	      2322	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_60
0x4002bb0	      0x4889442468	             mov qword [rsp + 0x68], rax	      2319	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_59
0x4002bb5	    0x4889b4249000	             mov qword [rsp + 0x90], rsi	      2321	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002bbd	      0xe800000000	                          call 0x4002bc2	      2322	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_60
0x4002bc2	    0x8b94248c0000	            mov edx, dword [rsp + 0x8c] 	      2324	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002bc9	      0x4c8b4c2470	              mov r9, qword [rsp + 0x70]	      2325	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_30	CALL_61
0x4002bce	          0x4189c0	                            mov r8d, eax	      2325	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_30	CALL_61
0x4002bd1	    0x480194249000	            add qword [rsp + 0x90], rdx 	      2324	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002bd9	        0x8b4c2468	            mov ecx, dword [rsp + 0x68] 	      2325	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_30	CALL_61
0x4002bdd	        0x8b542460	            mov edx, dword [rsp + 0x60] 	      2325	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_30	CALL_61
0x4002be1	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2325	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_30	CALL_61
0x4002be6	          0x4c89ce	                             mov rsi, r9	      2325	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_30	CALL_61
0x4002be9	      0xe822d6ffff	        call sym.line_info_add_file_name	      2325	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_30	CALL_61
0x4002bee	            0x85c0	                           test eax, eax	      2325	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_30	CALL_61
0x4002bf0	     0xf8573fcffff	                           jne 0x4002869	      2325	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_30	CALL_61
0x4002bf6	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	      2325	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_30	CALL_61
0x4002bfb	      0xe9f3f4ffff	                           jmp 0x40020f3	      2325	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_30	CALL_61
0x4002c00	          0x4d89f4	                            mov r12, r14	      2325	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_30	CALL_61
0x4002c03	    0x48837c242800	               cmp qword [rsp + 0x28], 0	      2436	dwarf2.c	FUNCTION_35	WHILE_3	IF_39
0x4002c09	     0xf8511030000	                           jne 0x4002f20	      2436	dwarf2.c	FUNCTION_35	WHILE_3	IF_39
0x4002c0f	    0x488bb4249000	            mov rsi, qword [rsp + 0x90] 	      2436	dwarf2.c	FUNCTION_35	WHILE_3	IF_39
0x4002c17	      0xe921f8ffff	                           jmp 0x400243d	      2436	dwarf2.c	FUNCTION_35	WHILE_3	IF_39
0x4002c1c	      0xbe01000000	                              mov esi, 1	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x4002c21	          0x4889c7	                            mov rdi, rax	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x4002c24	      0xe867d9ffff	                call sym.concat_filename	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x4002c29	    0x488bb4249000	            mov rsi, qword [rsp + 0x90] 	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x4002c31	      0x4889442428	             mov qword [rsp + 0x28], rax	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x4002c36	      0xe926f8ffff	                           jmp 0x4002461	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x4002c3b	          0x4889fe	                            mov rsi, rdi	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x4002c3e	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x4002c43	      0xe8e8dbffff	     call sym.read_2_bytes.isra.2.part.3	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x4002c48	    0x488bbc249000	            mov rdi, qword [rsp + 0x90] 	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x4002c50	            0x89c0	                            mov eax, eax	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x4002c52	      0xe9e9faffff	                           jmp 0x4002740	      2235	dwarf2.c	FUNCTION_35	WHILE_3	CALL_49
0x4002c57	       0xfaf442424	            imul eax, dword [rsp + 0x24]	      2408	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x4002c5c	          0x4889fe	                            mov rsi, rdi	      2408	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x4002c5f	            0x4898	                                    cdqe	      2408	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x4002c61	          0x4901c4	                            add r12, rax	      2408	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x4002c64	      0xe927f8ffff	                           jmp 0x4002490	      2408	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_38
0x4002c69	      0xe800000000	                          call 0x4002c6e	      2361	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35	CALL_68
0x4002c6e	        0x8b542424	            mov edx, dword [rsp + 0x24] 	      2360	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35
0x4002c72	        0x480fafc2	                           imul rax, rdx	      2360	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35
0x4002c76	          0x4901c4	                            add r12, rax	      2360	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35
0x4002c79	      0xe978fbffff	                           jmp 0x40027f6	      2360	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	IF_35
0x4002c7e	          0x80f901	                               cmp cl, 1	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002c81	            0x7451	                            je 0x4002cd4	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002c83	          0x80f902	                               cmp cl, 2	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002c86	     0xf85a3020000	                           jne 0x4002f2f	      2293	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002c8c	      0x4c8b7c2430	            mov r15, qword [rsp + 0x30] 	      2309	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_56
0x4002c91	          0x4889f2	                            mov rdx, rsi	      2309	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_56
0x4002c94	    0x410fb68fac00	           movzx ecx, byte [r15 + 0xac] 	      2309	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_56
0x4002c9c	        0x498b7f10	            mov rdi, qword [r15 + 0x10] 	      2309	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_56
0x4002ca0	        0x884c2460	               mov byte [rsp + 0x60], cl	      2309	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_56
0x4002ca4	       0xfb6742460	           movzx esi, byte [rsp + 0x60] 	      2309	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_56
0x4002ca9	          0x4c89f1	                            mov rcx, r14	      2309	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_56
0x4002cac	      0xe8efe1ffff	           call sym.read_address.isra.28	      2309	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_56
0x4002cb1	    0x410fb6b7ac00	           movzx esi, byte [r15 + 0xac] 	      2311	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002cb9	          0x4989c4	                            mov r12, rax	      2309	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_56
0x4002cbc	          0x4531ff	                          xor r15d, r15d	      2310	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002cbf	    0x4803b4249000	             add rsi, qword [rsp + 0x90]	      2311	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002cc7	    0x4889b4249000	             mov qword [rsp + 0x90], rsi	      2311	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002ccf	      0xe9bcf7ffff	                           jmp 0x4002490	      2312	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002cd4	          0x4c89e0	                            mov rax, r12	      2312	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002cd7	            0x6a01	                                  push 1	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002cd9	          0x4d89f4	                            mov r12, r14	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002cdc	          0x4989c6	                            mov r14, rax	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002cdf	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002ce3	        0x410fb6d7	                         movzx edx, r15b	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002ce7	          0x4c89f6	                            mov rsi, r14	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002cea	          0x4189e8	                            mov r8d, ebp	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002ced	              0x50	                                push rax	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002cee	      0x448b4c2454	            mov r9d, dword [rsp + 0x54] 	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002cf3	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002cf8	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002cfd	      0xe8aed5ffff	                  call sym.add_line_info	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002d02	            0x85c0	                           test eax, eax	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002d04	              0x5e	                                 pop rsi	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002d05	              0x5f	                                 pop rdi	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002d06	     0xf84eafeffff	                            je 0x4002bf6	      2297	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_26	CALL_54
0x4002d0c	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x4002d11	          0x4939de	                            cmp r14, rbx	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x4002d14	          0x4c89ea	                            mov rdx, r13	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x4002d17	        0x490f43de	                         cmovae rbx, r14	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x4002d1b	          0x4d39ee	                            cmp r14, r13	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x4002d1e	        0x490f46d6	                         cmovbe rdx, r14	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x4002d22	          0x4889d9	                            mov rcx, rbx	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x4002d25	        0x488d7018	                   lea rsi, [rax + 0x18]	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x4002d29	        0x488d7810	                   lea rdi, [rax + 0x10]	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x4002d2d	      0xe84ee0ffff	             call sym.arange_add.isra.23	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x4002d32	            0x85c0	                           test eax, eax	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x4002d34	     0xf85c9feffff	                           jne 0x4002c03	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x4002d3a	      0xe9b7feffff	                           jmp 0x4002bf6	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x4002d3f	              0x90	                                     nop	      2305	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	IF_29	CALL_55
0x4002d40	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      2331	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_62
0x4002d45	    0x488d94248c00	                   lea rdx, [rsp + 0x8c]	      2331	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_62
0x4002d4d	          0x4d89f0	                             mov r8, r14	      2331	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_62
0x4002d50	            0x31c9	                            xor ecx, ecx	      2331	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_62
0x4002d52	      0xe800000000	                          call 0x4002d57	      2331	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2	CALL_62
0x4002d57	    0x8bb4248c0000	            mov esi, dword [rsp + 0x8c] 	      2333	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002d5e	        0x89442414	             mov dword [rsp + 0x14], eax	      2330	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002d62	    0x4803b4249000	             add rsi, qword [rsp + 0x90]	      2333	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002d6a	    0x4889b4249000	             mov qword [rsp + 0x90], rsi	      2333	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002d72	      0xe919f7ffff	                           jmp 0x4002490	      2334	dwarf2.c	FUNCTION_35	WHILE_3	WHILE_4	ELSE_6	SWITCH_1	SWITCH_2
0x4002d77	      0xba05000000	                              mov edx, 5	      2080	dwarf2.c	FUNCTION_35	IF_6	CALL_10
0x4002d7c	      0xbe00000000	                              mov esi, 0	      2080	dwarf2.c	FUNCTION_35	IF_6	CALL_10
0x4002d81	      0xbf00000000	                              mov edi, 0	      2080	dwarf2.c	FUNCTION_35	IF_6	CALL_10
0x4002d86	      0xe800000000	                          call 0x4002d8b	      2080	dwarf2.c	FUNCTION_35	IF_6	CALL_10
0x4002d8b	          0x4889ea	                            mov rdx, rbp	      2078	dwarf2.c	FUNCTION_35	IF_6	CALL_9
0x4002d8e	          0x4889c7	                            mov rdi, rax	      2078	dwarf2.c	FUNCTION_35	IF_6	CALL_9
0x4002d91	          0x4889de	                            mov rsi, rbx	      2078	dwarf2.c	FUNCTION_35	IF_6	CALL_9
0x4002d94	            0x31c0	                            xor eax, eax	      2078	dwarf2.c	FUNCTION_35	IF_6	CALL_9
0x4002d96	      0xe800000000	                          call 0x4002d9b	      2078	dwarf2.c	FUNCTION_35	IF_6	CALL_9
0x4002d9b	      0xbf11000000	                           mov edi, 0x11	      2083	dwarf2.c	FUNCTION_35	IF_6	CALL_11
0x4002da0	      0xe800000000	                          call 0x4002da5	      2083	dwarf2.c	FUNCTION_35	IF_6	CALL_11
0x4002da5	            0x31c0	                            xor eax, eax	      2084	dwarf2.c	FUNCTION_35	IF_6
0x4002da7	      0xe9a0f3ffff	                           jmp 0x400214c	      2084	dwarf2.c	FUNCTION_35	IF_6
0x4002dac	      0xba05000000	                              mov edx, 5	      2050	dwarf2.c	FUNCTION_35	IF_3	CALL_4
0x4002db1	      0xbe00000000	                              mov esi, 0	      2050	dwarf2.c	FUNCTION_35	IF_3	CALL_4
0x4002db6	      0xbf00000000	                              mov edi, 0	      2050	dwarf2.c	FUNCTION_35	IF_3	CALL_4
0x4002dbb	      0xe800000000	                          call 0x4002dc0	      2050	dwarf2.c	FUNCTION_35	IF_3	CALL_4
0x4002dc0	          0x4889ee	                            mov rsi, rbp	      2049	dwarf2.c	FUNCTION_35	IF_3	CALL_3
0x4002dc3	          0x4889c7	                            mov rdi, rax	      2049	dwarf2.c	FUNCTION_35	IF_3	CALL_3
0x4002dc6	            0x31c0	                            xor eax, eax	      2049	dwarf2.c	FUNCTION_35	IF_3	CALL_3
0x4002dc8	      0xe800000000	                          call 0x4002dcd	      2049	dwarf2.c	FUNCTION_35	IF_3	CALL_3
0x4002dcd	      0xbf11000000	                           mov edi, 0x11	      2052	dwarf2.c	FUNCTION_35	IF_3	CALL_5
0x4002dd2	      0xe800000000	                          call 0x4002dd7	      2052	dwarf2.c	FUNCTION_35	IF_3	CALL_5
0x4002dd7	            0x31c0	                            xor eax, eax	      2053	dwarf2.c	FUNCTION_35	IF_3
0x4002dd9	      0xe96ef3ffff	                           jmp 0x400214c	      2053	dwarf2.c	FUNCTION_35	IF_3
0x4002dde	      0xba05000000	                              mov edx, 5	      2103	dwarf2.c	FUNCTION_35	IF_8	CALL_17
0x4002de3	      0xbe00000000	                              mov esi, 0	      2103	dwarf2.c	FUNCTION_35	IF_8	CALL_17
0x4002de8	      0xe91ff9ffff	                           jmp 0x400270c	      2103	dwarf2.c	FUNCTION_35	IF_8	CALL_17
0x4002ded	        0x498d7f08	                      lea rdi, [r15 + 8]	      2103	dwarf2.c	FUNCTION_35	IF_8	CALL_17
0x4002df1	      0xe85adaffff	     call sym.read_4_bytes.isra.4.part.5	      2103	dwarf2.c	FUNCTION_35	IF_8	CALL_17
0x4002df6	            0x89c3	                            mov ebx, eax	      2103	dwarf2.c	FUNCTION_35	IF_8	CALL_17
0x4002df8	      0xe969fbffff	                           jmp 0x4002966	      2103	dwarf2.c	FUNCTION_35	IF_8	CALL_17
0x4002dfd	        0x807a0100	                   cmp byte [rdx + 1], 0	       666	dwarf2.c	FUNCTION_12	IF_2
0x4002e01	            0x752b	                           jne 0x4002e2e	       666	dwarf2.c	FUNCTION_12	IF_2
0x4002e03	    0xc784248c0000	               mov dword [rsp + 0x8c], 1	       668	dwarf2.c	FUNCTION_12	IF_2
0x4002e0e	      0xb801000000	                              mov eax, 1	       668	dwarf2.c	FUNCTION_12	IF_2
0x4002e13	          0x4531c9	                            xor r9d, r9d	       669	dwarf2.c	FUNCTION_12	IF_2
0x4002e16	      0xe91afdffff	                           jmp 0x4002b35	       669	dwarf2.c	FUNCTION_12	IF_2
0x4002e1b	          0x4885db	                           test rbx, rbx	      2068	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x4002e1e	     0xf8498f1ffff	                            je 0x4001fbc	      2068	dwarf2.c	FUNCTION_35	ELSE_1	IF_5
0x4002e24	      0xb904000000	                              mov ecx, 4	      2061	dwarf2.c	FUNCTION_35
0x4002e29	      0xe996f3ffff	                           jmp 0x40021c4	      2061	dwarf2.c	FUNCTION_35
0x4002e2e	        0x4883c202	                              add rdx, 2	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4002e32	            0xeb0a	                           jmp 0x4002e3e	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4002e34	        0x4883c201	                              add rdx, 1	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4002e38	        0x807aff00	                   cmp byte [rdx - 1], 0	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4002e3c	            0x742f	                            je 0x4002e6d	       673	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4002e3e	          0x4939d6	                            cmp r14, rdx	       672	dwarf2.c	FUNCTION_12	WHILE_1
0x4002e41	            0x77f1	                            ja 0x4002e34	       672	dwarf2.c	FUNCTION_12	WHILE_1
0x4002e43	          0x4829f2	                            sub rdx, rsi	       679	dwarf2.c	FUNCTION_12
0x4002e46	          0x4531c9	                            xor r9d, r9d	       680	dwarf2.c	FUNCTION_12
0x4002e49	    0x8994248c0000	             mov dword [rsp + 0x8c], edx	       679	dwarf2.c	FUNCTION_12
0x4002e50	            0x89d0	                            mov eax, edx	       679	dwarf2.c	FUNCTION_12
0x4002e52	      0xe9defcffff	                           jmp 0x4002b35	       679	dwarf2.c	FUNCTION_12
0x4002e57	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	       679	dwarf2.c	FUNCTION_12
0x4002e5c	        0x458b7e10	           mov r15d, dword [r14 + 0x10] 	      1761	dwarf2.c	FUNCTION_30
0x4002e60	          0x4585ff	                         test r15d, r15d	      1764	dwarf2.c	FUNCTION_30	IF_1
0x4002e63	            0x751c	                           jne 0x4002e81	      1764	dwarf2.c	FUNCTION_30	IF_1
0x4002e65	          0x4c89f0	                            mov rax, r14	      2169	dwarf2.c	FUNCTION_35	IF_14
0x4002e68	      0xe9dff2ffff	                           jmp 0x400214c	      2169	dwarf2.c	FUNCTION_35	IF_14
0x4002e6d	          0x4829f2	                            sub rdx, rsi	       675	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4002e70	          0x4989f1	                             mov r9, rsi	       675	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4002e73	    0x8994248c0000	             mov dword [rsp + 0x8c], edx	       675	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4002e7a	            0x89d0	                            mov eax, edx	       675	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4002e7c	      0xe9b4fcffff	                           jmp 0x4002b35	       675	dwarf2.c	FUNCTION_12	WHILE_1	IF_3
0x4002e81	          0x4589fd	                          mov r13d, r15d	      1768	dwarf2.c	FUNCTION_30
0x4002e84	          0x498b3e	                    mov rdi, qword [r14]	      1769	dwarf2.c	FUNCTION_30	CALL_1
0x4002e87	      0x4b8d74ad00	                  lea rsi, [r13 + r13*4]	      1769	dwarf2.c	FUNCTION_30	CALL_1
0x4002e8c	        0x48c1e603	                              shl rsi, 3	      1769	dwarf2.c	FUNCTION_30	CALL_1
0x4002e90	      0xe800000000	                          call 0x4002e95	      1769	dwarf2.c	FUNCTION_30	CALL_1
0x4002e95	          0x4885c0	                           test rax, rax	      1770	dwarf2.c	FUNCTION_30	IF_2
0x4002e98	          0x4889c3	                            mov rbx, rax	      1769	dwarf2.c	FUNCTION_30	CALL_1
0x4002e9b	     0xf8467f2ffff	                            je 0x4002108	      1770	dwarf2.c	FUNCTION_30	IF_2
0x4002ea1	          0x4889c5	                            mov rbp, rax	      1770	dwarf2.c	FUNCTION_30	IF_2
0x4002ea4	        0x418d47ff	                      lea eax, [r15 - 1]	      1770	dwarf2.c	FUNCTION_30	IF_2
0x4002ea8	        0x4d8b6630	            mov r12, qword [r14 + 0x30] 	      1774	dwarf2.c	FUNCTION_30
0x4002eac	      0x488d448005	              lea rax, [rax + rax*4 + 5]	      1774	dwarf2.c	FUNCTION_30
0x4002eb1	        0x488d04c3	                  lea rax, [rbx + rax*8]	      1774	dwarf2.c	FUNCTION_30
0x4002eb5	      0x4889442408	                mov qword [rsp + 8], rax	      1774	dwarf2.c	FUNCTION_30
0x4002eba	            0xeb48	                           jmp 0x4002f04	      1774	dwarf2.c	FUNCTION_30
0x4002ebc	         0xf1f4000	                         nop dword [rax]	      1774	dwarf2.c	FUNCTION_30
0x4002ec0	        0x498b0424	                    mov rax, qword [r12]	      1780	dwarf2.c	FUNCTION_30	FOR_1
0x4002ec4	    0x48c745080000	                  mov qword [rbp + 8], 0	      1781	dwarf2.c	FUNCTION_30	FOR_1
0x4002ecc	          0x4c89e7	                            mov rdi, r12	      1786	dwarf2.c	FUNCTION_30	FOR_1	CALL_3
0x4002ecf	        0x4883c528	                           add rbp, 0x28	      1786	dwarf2.c	FUNCTION_30	FOR_1	CALL_3
0x4002ed3	        0x488945d8	             mov qword [rbp - 0x28], rax	      1780	dwarf2.c	FUNCTION_30	FOR_1
0x4002ed7	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      1782	dwarf2.c	FUNCTION_30	FOR_1
0x4002edc	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1783	dwarf2.c	FUNCTION_30	FOR_1
0x4002ee4	    0x48c745f80000	                  mov qword [rbp - 8], 0	      1784	dwarf2.c	FUNCTION_30	FOR_1
0x4002eec	        0x488945e8	             mov qword [rbp - 0x18], rax	      1782	dwarf2.c	FUNCTION_30	FOR_1
0x4002ef0	      0x4d8b7c2408	                mov r15, qword [r12 + 8]	      1785	dwarf2.c	FUNCTION_30	FOR_1
0x4002ef5	      0xe800000000	                          call 0x4002efa	      1786	dwarf2.c	FUNCTION_30	FOR_1	CALL_3
0x4002efa	      0x48396c2408	                cmp qword [rsp + 8], rbp	      1775	dwarf2.c	FUNCTION_30	FOR_1
0x4002eff	            0x7446	                            je 0x4002f47	      1775	dwarf2.c	FUNCTION_30	FOR_1
0x4002f01	          0x4d89fc	                            mov r12, r15	      1785	dwarf2.c	FUNCTION_30	FOR_1
0x4002f04	          0x4d85e4	                           test r12, r12	      1779	dwarf2.c	FUNCTION_30	FOR_1	CALL_2
0x4002f07	            0x75b7	                           jne 0x4002ec0	      1779	dwarf2.c	FUNCTION_30	FOR_1	CALL_2
0x4002f09	      0xbef3060000	                          mov esi, 0x6f3	      1779	dwarf2.c	FUNCTION_30	FOR_1	CALL_2
0x4002f0e	      0xbf00000000	                              mov edi, 0	      1779	dwarf2.c	FUNCTION_30	FOR_1	CALL_2
0x4002f13	      0xe800000000	                          call 0x4002f18	      1779	dwarf2.c	FUNCTION_30	FOR_1	CALL_2
0x4002f18	            0xeba6	                           jmp 0x4002ec0	      1779	dwarf2.c	FUNCTION_30	FOR_1	CALL_2
0x4002f1a	    0x660f1f440000	                    nop word [rax + rax]	      1779	dwarf2.c	FUNCTION_30	FOR_1	CALL_2
0x4002f20	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      2437	dwarf2.c	FUNCTION_35	WHILE_3	CALL_77
0x4002f25	      0xe800000000	                          call 0x4002f2a	      2437	dwarf2.c	FUNCTION_35	WHILE_3	CALL_77
0x4002f2a	      0xe9e0fcffff	                           jmp 0x4002c0f	      2437	dwarf2.c	FUNCTION_35	WHILE_3	CALL_77
0x4002f2f	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	      2437	dwarf2.c	FUNCTION_35	WHILE_3	CALL_77
0x4002f34	      0xe992f1ffff	                           jmp 0x40020cb	      2437	dwarf2.c	FUNCTION_35	WHILE_3	CALL_77
0x4002f39	        0x450fb7ed	                        movzx r13d, r13w	      2437	dwarf2.c	FUNCTION_35	WHILE_3	CALL_77
0x4002f3d	      0xe9a2f2ffff	                           jmp 0x40021e4	      2437	dwarf2.c	FUNCTION_35	WHILE_3	CALL_77
0x4002f42	      0xe800000000	                          call 0x4002f47	      2455	dwarf2.c	FUNCTION_35
0x4002f47	          0x4d85ff	                           test r15, r15	      1788	dwarf2.c	FUNCTION_30	CALL_4
0x4002f4a	            0x740f	                            je 0x4002f5b	      1788	dwarf2.c	FUNCTION_30	CALL_4
0x4002f4c	      0xbefc060000	                          mov esi, 0x6fc	      1788	dwarf2.c	FUNCTION_30	CALL_4
0x4002f51	      0xbf00000000	                              mov edi, 0	      1788	dwarf2.c	FUNCTION_30	CALL_4
0x4002f56	      0xe800000000	                          call 0x4002f5b	      1788	dwarf2.c	FUNCTION_30	CALL_4
0x4002f5b	          0x4c89ee	                            mov rsi, r13	      1790	dwarf2.c	FUNCTION_30	CALL_5
0x4002f5e	      0xb900000000	                              mov ecx, 0	      1790	dwarf2.c	FUNCTION_30	CALL_5
0x4002f63	      0xba28000000	                           mov edx, 0x28	      1790	dwarf2.c	FUNCTION_30	CALL_5
0x4002f68	          0x4889df	                            mov rdi, rbx	      1790	dwarf2.c	FUNCTION_30	CALL_5
0x4002f6b	      0xe800000000	                          call 0x4002f70	      1790	dwarf2.c	FUNCTION_30	CALL_5
0x4002f70	        0x458b4610	            mov r8d, dword [r14 + 0x10] 	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x4002f74	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1795	dwarf2.c	FUNCTION_30
0x4002f78	        0x4183f801	                              cmp r8d, 1	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x4002f7c	        0x488b7008	                mov rsi, qword [rax + 8]	      1795	dwarf2.c	FUNCTION_30
0x4002f80	            0x764e	                           jbe 0x4002fd0	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x4002f82	        0x488d4328	                   lea rax, [rbx + 0x28]	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x4002f86	      0xba01000000	                              mov edx, 1	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x4002f8b	      0xb901000000	                              mov ecx, 1	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x4002f90	          0x483930	                    cmp qword [rax], rsi	      1798	dwarf2.c	FUNCTION_30	FOR_2	IF_3
0x4002f93	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      1800	dwarf2.c	FUNCTION_30	FOR_2	IF_3	IF_4
0x4002f97	            0x7309	                           jae 0x4002fa2	      1798	dwarf2.c	FUNCTION_30	FOR_2	IF_3
0x4002f99	        0x48397708	                cmp qword [rdi + 8], rsi	      1800	dwarf2.c	FUNCTION_30	FOR_2	IF_3	IF_4
0x4002f9d	            0x7623	                           jbe 0x4002fc2	      1800	dwarf2.c	FUNCTION_30	FOR_2	IF_3	IF_4
0x4002f9f	          0x488930	                    mov qword [rax], rsi	      1805	dwarf2.c	FUNCTION_30	FOR_2	IF_3
0x4002fa2	            0x39ca	                            cmp edx, ecx	      1808	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x4002fa4	        0x488b7708	                mov rsi, qword [rdi + 8]	      1807	dwarf2.c	FUNCTION_30	FOR_2
0x4002fa8	            0x7315	                           jae 0x4002fbf	      1808	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x4002faa	          0x4189d1	                            mov r9d, edx	      1811	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x4002fad	          0x4c8b10	                    mov r10, qword [rax]	      1811	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x4002fb0	        0x4f8d0c89	                     lea r9, [r9 + r9*4]	      1811	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x4002fb4	        0x4e8d0ccb	                    lea r9, [rbx + r9*8]	      1811	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x4002fb8	          0x4d8911	                     mov qword [r9], r10	      1811	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x4002fbb	        0x49897910	              mov qword [r9 + 0x10], rdi	      1812	dwarf2.c	FUNCTION_30	FOR_2	IF_5
0x4002fbf	          0x83c201	                              add edx, 1	      1814	dwarf2.c	FUNCTION_30	FOR_2
0x4002fc2	          0x83c101	                              add ecx, 1	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x4002fc5	        0x4883c028	                           add rax, 0x28	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x4002fc9	          0x4439c1	                            cmp ecx, r8d	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x4002fcc	            0x75c2	                           jne 0x4002f90	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x4002fce	            0xeb05	                           jmp 0x4002fd5	      1796	dwarf2.c	FUNCTION_30	FOR_2
0x4002fd0	      0xba01000000	                              mov edx, 1	      1794	dwarf2.c	FUNCTION_30
0x4002fd5	        0x49895e30	             mov qword [r14 + 0x30], rbx	      1817	dwarf2.c	FUNCTION_30
0x4002fd9	        0x41895610	             mov dword [r14 + 0x10], edx	      1818	dwarf2.c	FUNCTION_30
0x4002fdd	      0xe983feffff	                           jmp 0x4002e65	      1818	dwarf2.c	FUNCTION_30
_bfd_dwarf2_find_inliner_info	FOR,0:CALL,0:WHILE,0:ELSE,0:IF,2:functions,0:SWITCH,0:DO,0	22
0x40048e0	          0x498b38	                     mov rdi, qword [r8]	      4865	dwarf2.c	FUNCTION_69
0x40048e3	          0x4885ff	                           test rdi, rdi	      4866	dwarf2.c	FUNCTION_69	IF_1
0x40048e6	            0x7440	                            je 0x4004928	      4866	dwarf2.c	FUNCTION_69	IF_1
0x40048e8	    0x488b87d00000	            mov rax, qword [rdi + 0xd0] 	      4868	dwarf2.c	FUNCTION_69	IF_1
0x40048ef	          0x4885c0	                           test rax, rax	      4870	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x40048f2	            0x7434	                            je 0x4004928	      4870	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x40048f4	      0x4883780800	                  cmp qword [rax + 8], 0	      4870	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x40048f9	            0x742d	                            je 0x4004928	      4870	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x40048fb	        0x4c8b4010	              mov r8, qword [rax + 0x10]	      4872	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x40048ff	          0x4c8906	                     mov qword [rsi], r8	      4872	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4004902	        0x488b7008	                mov rsi, qword [rax + 8]	      4873	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4004906	        0x488b7630	            mov rsi, qword [rsi + 0x30] 	      4873	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x400490a	          0x488932	                    mov qword [rdx], rsi	      4873	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x400490d	          0x8b5020	            mov edx, dword [rax + 0x20] 	      4874	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4004910	        0x488b4008	                mov rax, qword [rax + 8]	      4875	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4004914	            0x8911	                    mov dword [rcx], edx	      4874	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4004916	    0x488987d00000	             mov qword [rdi + 0xd0], rax	      4875	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x400491d	      0xb801000000	                              mov eax, 1	      4876	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4004922	              0xc3	                                     ret	      4876	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4004923	       0xf1f440000	                   nop dword [rax + rax]	      4876	dwarf2.c	FUNCTION_69	IF_1	IF_2
0x4004928	            0x31c0	                            xor eax, eax	      4880	dwarf2.c	FUNCTION_69
0x400492a	              0xc3	                                     ret	      4881	dwarf2.c	FUNCTION_69
stash_maybe_update_info_hash_tables	FOR,0:CALL,1:WHILE,1:ELSE,1:IF,3:functions,0:SWITCH,0:DO,0	159
0x4004050	          0x488b17	                    mov rdx, qword [rdi]	      4121	dwarf2.c	FUNCTION_60	IF_1
0x4004053	    0x488b87080100	           mov rax, qword [rdi + 0x108] 	      4121	dwarf2.c	FUNCTION_60	IF_1
0x400405a	          0x4839c2	                            cmp rdx, rax	      4121	dwarf2.c	FUNCTION_60	IF_1
0x400405d	     0xf843a020000	                            je 0x400429d	      4121	dwarf2.c	FUNCTION_60	IF_1
0x4004063	          0x4885c0	                           test rax, rax	      4124	dwarf2.c	FUNCTION_60	IF_2
0x4004066	            0x4156	                                push r14	      4117	dwarf2.c	FUNCTION_60
0x4004068	            0x4155	                                push r13	      4117	dwarf2.c	FUNCTION_60
0x400406a	            0x4154	                                push r12	      4117	dwarf2.c	FUNCTION_60
0x400406c	              0x55	                                push rbp	      4117	dwarf2.c	FUNCTION_60
0x400406d	              0x53	                                push rbx	      4117	dwarf2.c	FUNCTION_60
0x400406e	     0xf8420020000	                            je 0x4004294	      4124	dwarf2.c	FUNCTION_60	IF_2
0x4004074	        0x488b6808	                mov rbp, qword [rax + 8]	      4125	dwarf2.c	FUNCTION_60	IF_2
0x4004078	          0x4885ed	                           test rbp, rbp	      4129	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1
0x400407b	          0x4989fc	                            mov r12, rdi	      4129	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1
0x400407e	     0xf847b010000	                            je 0x40041ff	      4129	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1
0x4004084	         0xf1f4000	                         nop dword [rax]	      4129	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1
0x4004088	    0x4183bc241001	              cmp dword [r12 + 0x110], 2	      3745	dwarf2.c	FUNCTION_53	CALL_1
0x4004091	    0x4d8bac240001	           mov r13, qword [r12 + 0x100] 	      4131	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1	IF_3	CALL_1
0x4004099	    0x4d8bb424f800	            mov r14, qword [r12 + 0xf8] 	      4131	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1	IF_3	CALL_1
0x40040a1	     0xf84d9010000	                            je 0x4004280	      3745	dwarf2.c	FUNCTION_53	CALL_1
0x40040a7	          0x4c89e6	                            mov rsi, r12	      3747	dwarf2.c	FUNCTION_53	IF_1	CALL_2
0x40040aa	          0x4889ef	                            mov rdi, rbp	      3747	dwarf2.c	FUNCTION_53	IF_1	CALL_2
0x40040ad	      0xe81efdffff	call sym.comp_unit_maybe_decode_line_info	      3747	dwarf2.c	FUNCTION_53	IF_1	CALL_2
0x40040b2	            0x85c0	                           test eax, eax	      3747	dwarf2.c	FUNCTION_53	IF_1	CALL_2
0x40040b4	     0xf845e010000	                            je 0x4004218	      3747	dwarf2.c	FUNCTION_53	IF_1	CALL_2
0x40040ba	    0x8b85b8000000	            mov eax, dword [rbp + 0xb8] 	      3750	dwarf2.c	FUNCTION_53	CALL_3
0x40040c0	            0x85c0	                           test eax, eax	      3750	dwarf2.c	FUNCTION_53	CALL_3
0x40040c2	     0xf8568010000	                           jne 0x4004230	      3750	dwarf2.c	FUNCTION_53	CALL_3
0x40040c8	    0x488b9d800000	            mov rbx, qword [rbp + 0x80] 	      3757	dwarf2.c	FUNCTION_53	CALL_4
0x40040cf	          0x4885db	                           test rbx, rbx	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x40040d2	     0xf8477010000	                            je 0x400424f	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x40040d8	            0x31d2	                            xor edx, edx	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x40040da	            0xeb07	                           jmp 0x40040e3	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x40040dc	         0xf1f4000	                         nop dword [rax]	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x40040e0	          0x4889c3	                            mov rbx, rax	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x40040e3	          0x488b03	                    mov rax, qword [rbx]	      3709	dwarf2.c	FUNCTION_51	FOR_1
0x40040e6	          0x488913	                    mov qword [rbx], rdx	      3710	dwarf2.c	FUNCTION_51	FOR_1
0x40040e9	          0x4889da	                            mov rdx, rbx	      3710	dwarf2.c	FUNCTION_51	FOR_1
0x40040ec	          0x4885c0	                           test rax, rax	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x40040ef	            0x75ef	                           jne 0x40040e0	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x40040f1	    0x48899d800000	            mov qword [rbp + 0x80], rbx 	      3757	dwarf2.c	FUNCTION_53	CALL_4
0x40040f8	      0xb801000000	                              mov eax, 1	      3757	dwarf2.c	FUNCTION_53	CALL_4
0x40040fd	            0xeb05	                           jmp 0x4004104	      3757	dwarf2.c	FUNCTION_53	CALL_4
0x40040ff	              0x90	                                     nop	      3757	dwarf2.c	FUNCTION_53	CALL_4
0x4004100	            0x85c0	                           test eax, eax	      3758	dwarf2.c	FUNCTION_53	FOR_1
0x4004102	            0x741c	                            je 0x4004120	      3758	dwarf2.c	FUNCTION_53	FOR_1
0x4004104	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      3763	dwarf2.c	FUNCTION_53	FOR_1	IF_2
0x4004108	          0x4885f6	                           test rsi, rsi	      3763	dwarf2.c	FUNCTION_53	FOR_1	IF_2
0x400410b	            0x740b	                            je 0x4004118	      3763	dwarf2.c	FUNCTION_53	FOR_1	IF_2
0x400410d	          0x4889da	                            mov rdx, rbx	      3767	dwarf2.c	FUNCTION_53	FOR_1	IF_2	CALL_5
0x4004110	          0x4c89f7	                            mov rdi, r14	      3767	dwarf2.c	FUNCTION_53	FOR_1	IF_2	CALL_5
0x4004113	      0xe8d8eeffff	call sym.insert_info_hash_table.constprop.35	      3767	dwarf2.c	FUNCTION_53	FOR_1	IF_2	CALL_5
0x4004118	          0x488b1b	                    mov rbx, qword [rbx]	      3760	dwarf2.c	FUNCTION_53	FOR_1
0x400411b	          0x4885db	                           test rbx, rbx	      3758	dwarf2.c	FUNCTION_53	FOR_1
0x400411e	            0x75e0	                           jne 0x4004100	      3758	dwarf2.c	FUNCTION_53	FOR_1
0x4004120	    0x488b95800000	            mov rdx, qword [rbp + 0x80] 	      3758	dwarf2.c	FUNCTION_53	FOR_1
0x4004127	          0x4885d2	                           test rdx, rdx	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x400412a	            0x7415	                            je 0x4004141	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x400412c	            0x31f6	                            xor esi, esi	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x400412e	            0xeb03	                           jmp 0x4004133	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4004130	          0x4889ca	                            mov rdx, rcx	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4004133	          0x488b0a	                    mov rcx, qword [rdx]	      3709	dwarf2.c	FUNCTION_51	FOR_1
0x4004136	          0x488932	                    mov qword [rdx], rsi	      3710	dwarf2.c	FUNCTION_51	FOR_1
0x4004139	          0x4889d6	                            mov rsi, rdx	      3710	dwarf2.c	FUNCTION_51	FOR_1
0x400413c	          0x4885c9	                           test rcx, rcx	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x400413f	            0x75ef	                           jne 0x4004130	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4004141	            0x85c0	                           test eax, eax	      3771	dwarf2.c	FUNCTION_53	IF_3
0x4004143	    0x488995800000	            mov qword [rbp + 0x80], rdx 	      3770	dwarf2.c	FUNCTION_53	CALL_6
0x400414a	     0xf84c8000000	                            je 0x4004218	      3771	dwarf2.c	FUNCTION_53	IF_3
0x4004150	    0x488b9d980000	            mov rbx, qword [rbp + 0x98] 	      3775	dwarf2.c	FUNCTION_53	CALL_7
0x4004157	          0x4885db	                           test rbx, rbx	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x400415a	     0xf840f010000	                            je 0x400426f	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4004160	            0x31c9	                            xor ecx, ecx	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4004162	            0xeb07	                           jmp 0x400416b	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4004164	         0xf1f4000	                         nop dword [rax]	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4004168	          0x4889d3	                            mov rbx, rdx	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x400416b	          0x488b13	                    mov rdx, qword [rbx]	      3724	dwarf2.c	FUNCTION_52	FOR_1
0x400416e	          0x48890b	                    mov qword [rbx], rcx	      3725	dwarf2.c	FUNCTION_52	FOR_1
0x4004171	          0x4889d9	                            mov rcx, rbx	      3725	dwarf2.c	FUNCTION_52	FOR_1
0x4004174	          0x4885d2	                           test rdx, rdx	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4004177	            0x75ef	                           jne 0x4004168	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4004179	    0x48899d980000	            mov qword [rbp + 0x98], rbx 	      3775	dwarf2.c	FUNCTION_53	CALL_7
0x4004180	            0xeb0a	                           jmp 0x400418c	      3775	dwarf2.c	FUNCTION_53	CALL_7
0x4004182	    0x660f1f440000	                    nop word [rax + rax]	      3775	dwarf2.c	FUNCTION_53	CALL_7
0x4004188	            0x85c0	                           test eax, eax	      3776	dwarf2.c	FUNCTION_53	FOR_2
0x400418a	            0x7429	                            je 0x40041b5	      3776	dwarf2.c	FUNCTION_53	FOR_2
0x400418c	        0xf6433001	               test byte [rbx + 0x30], 1	      3781	dwarf2.c	FUNCTION_53	FOR_2	IF_4
0x4004190	            0x751b	                           jne 0x40041ad	      3781	dwarf2.c	FUNCTION_53	FOR_2	IF_4
0x4004192	      0x48837b0800	                  cmp qword [rbx + 8], 0	      3782	dwarf2.c	FUNCTION_53	FOR_2	IF_4
0x4004197	            0x7414	                            je 0x40041ad	      3782	dwarf2.c	FUNCTION_53	FOR_2	IF_4
0x4004199	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      3783	dwarf2.c	FUNCTION_53	FOR_2	IF_4
0x400419d	          0x4885f6	                           test rsi, rsi	      3783	dwarf2.c	FUNCTION_53	FOR_2	IF_4
0x40041a0	            0x740b	                            je 0x40041ad	      3783	dwarf2.c	FUNCTION_53	FOR_2	IF_4
0x40041a2	          0x4889da	                            mov rdx, rbx	      3787	dwarf2.c	FUNCTION_53	FOR_2	IF_4	CALL_8
0x40041a5	          0x4c89ef	                            mov rdi, r13	      3787	dwarf2.c	FUNCTION_53	FOR_2	IF_4	CALL_8
0x40041a8	      0xe843eeffff	call sym.insert_info_hash_table.constprop.35	      3787	dwarf2.c	FUNCTION_53	FOR_2	IF_4	CALL_8
0x40041ad	          0x488b1b	                    mov rbx, qword [rbx]	      3778	dwarf2.c	FUNCTION_53	FOR_2
0x40041b0	          0x4885db	                           test rbx, rbx	      3776	dwarf2.c	FUNCTION_53	FOR_2
0x40041b3	            0x75d3	                           jne 0x4004188	      3776	dwarf2.c	FUNCTION_53	FOR_2
0x40041b5	    0x488b95980000	            mov rdx, qword [rbp + 0x98] 	      3776	dwarf2.c	FUNCTION_53	FOR_2
0x40041bc	          0x4885d2	                           test rdx, rdx	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x40041bf	            0x7418	                            je 0x40041d9	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x40041c1	            0x31f6	                            xor esi, esi	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x40041c3	            0xeb06	                           jmp 0x40041cb	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x40041c5	           0xf1f00	                         nop dword [rax]	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x40041c8	          0x4889ca	                            mov rdx, rcx	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x40041cb	          0x488b0a	                    mov rcx, qword [rdx]	      3724	dwarf2.c	FUNCTION_52	FOR_1
0x40041ce	          0x488932	                    mov qword [rdx], rsi	      3725	dwarf2.c	FUNCTION_52	FOR_1
0x40041d1	          0x4889d6	                            mov rsi, rdx	      3725	dwarf2.c	FUNCTION_52	FOR_1
0x40041d4	          0x4885c9	                           test rcx, rcx	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x40041d7	            0x75ef	                           jne 0x40041c8	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x40041d9	            0x85c0	                           test eax, eax	      4131	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1	IF_3	CALL_1
0x40041db	    0x488995980000	            mov qword [rbp + 0x98], rdx 	      3791	dwarf2.c	FUNCTION_53	CALL_9
0x40041e2	    0xc785b8000000	               mov dword [rbp + 0xb8], 1	      3792	dwarf2.c	FUNCTION_53
0x40041ec	            0x742a	                            je 0x4004218	      4131	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1	IF_3	CALL_1
0x40041ee	        0x488b6d08	                mov rbp, qword [rbp + 8]	      4137	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1
0x40041f2	          0x4885ed	                           test rbp, rbp	      4129	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1
0x40041f5	     0xf858dfeffff	                           jne 0x4004088	      4129	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1
0x40041fb	        0x498b1424	                    mov rdx, qword [r12]	      4129	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1
0x40041ff	    0x498994240801	            mov qword [r12 + 0x108], rdx	      4140	dwarf2.c	FUNCTION_60
0x4004207	      0xb801000000	                              mov eax, 1	      4141	dwarf2.c	FUNCTION_60
0x400420c	              0x5b	                                 pop rbx	      4142	dwarf2.c	FUNCTION_60
0x400420d	              0x5d	                                 pop rbp	      4142	dwarf2.c	FUNCTION_60
0x400420e	            0x415c	                                 pop r12	      4142	dwarf2.c	FUNCTION_60
0x4004210	            0x415d	                                 pop r13	      4142	dwarf2.c	FUNCTION_60
0x4004212	            0x415e	                                 pop r14	      4142	dwarf2.c	FUNCTION_60
0x4004214	              0xc3	                                     ret	      4142	dwarf2.c	FUNCTION_60
0x4004215	           0xf1f00	                         nop dword [rax]	      4142	dwarf2.c	FUNCTION_60
0x4004218	    0x41c784241001	              mov dword [r12 + 0x110], 2	      4134	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1	IF_3
0x4004224	            0x31c0	                            xor eax, eax	      4135	dwarf2.c	FUNCTION_60	ELSE_1	WHILE_1	IF_3
0x4004226	              0x5b	                                 pop rbx	      4142	dwarf2.c	FUNCTION_60
0x4004227	              0x5d	                                 pop rbp	      4142	dwarf2.c	FUNCTION_60
0x4004228	            0x415c	                                 pop r12	      4142	dwarf2.c	FUNCTION_60
0x400422a	            0x415d	                                 pop r13	      4142	dwarf2.c	FUNCTION_60
0x400422c	            0x415e	                                 pop r14	      4142	dwarf2.c	FUNCTION_60
0x400422e	              0xc3	                                     ret	      4142	dwarf2.c	FUNCTION_60
0x400422f	              0x90	                                     nop	      4142	dwarf2.c	FUNCTION_60
0x4004230	      0xbea60e0000	                          mov esi, 0xea6	      3750	dwarf2.c	FUNCTION_53	CALL_3
0x4004235	      0xbf00000000	                              mov edi, 0	      3750	dwarf2.c	FUNCTION_53	CALL_3
0x400423a	      0xe800000000	                          call 0x400423f	      3750	dwarf2.c	FUNCTION_53	CALL_3
0x400423f	    0x488b9d800000	            mov rbx, qword [rbp + 0x80] 	      3757	dwarf2.c	FUNCTION_53	CALL_4
0x4004246	          0x4885db	                           test rbx, rbx	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x4004249	     0xf8589feffff	                           jne 0x40040d8	      3707	dwarf2.c	FUNCTION_51	FOR_1
0x400424f	    0x488b9d980000	            mov rbx, qword [rbp + 0x98] 	      3775	dwarf2.c	FUNCTION_53	CALL_7
0x4004256	    0x48c785800000	               mov qword [rbp + 0x80], 0	      3770	dwarf2.c	FUNCTION_53	CALL_6
0x4004261	      0xb801000000	                              mov eax, 1	      3743	dwarf2.c	FUNCTION_53
0x4004266	          0x4885db	                           test rbx, rbx	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4004269	     0xf85f1feffff	                           jne 0x4004160	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x400426f	            0x31d2	                            xor edx, edx	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4004271	      0xe963ffffff	                           jmp 0x40041d9	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4004276	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3722	dwarf2.c	FUNCTION_52	FOR_1
0x4004280	      0xbea10e0000	                          mov esi, 0xea1	      3745	dwarf2.c	FUNCTION_53	CALL_1
0x4004285	      0xbf00000000	                              mov edi, 0	      3745	dwarf2.c	FUNCTION_53	CALL_1
0x400428a	      0xe800000000	                          call 0x400428f	      3745	dwarf2.c	FUNCTION_53	CALL_1
0x400428f	      0xe913feffff	                           jmp 0x40040a7	      3745	dwarf2.c	FUNCTION_53	CALL_1
0x4004294	        0x488b6f08	                mov rbp, qword [rdi + 8]	      4127	dwarf2.c	FUNCTION_60	ELSE_1
0x4004298	      0xe9dbfdffff	                           jmp 0x4004078	      4127	dwarf2.c	FUNCTION_60	ELSE_1
0x400429d	      0xb801000000	                              mov eax, 1	      4122	dwarf2.c	FUNCTION_60	IF_1
0x40042a2	              0xc3	                                     ret	      4142	dwarf2.c	FUNCTION_60
_bfd_dwarf2_find_nearest_line	FOR,3:CALL,23:WHILE,1:ELSE,10:IF,40:functions,0:SWITCH,0:DO,0	1179
0x4005250	            0x4157	                                push r15	      4529	dwarf2.c	FUNCTION_68
0x4005252	            0x4156	                                push r14	      4529	dwarf2.c	FUNCTION_68
0x4005254	            0x4155	                                push r13	      4529	dwarf2.c	FUNCTION_68
0x4005256	            0x4154	                                push r12	      4529	dwarf2.c	FUNCTION_68
0x4005258	              0x55	                                push rbp	      4529	dwarf2.c	FUNCTION_68
0x4005259	              0x53	                                push rbx	      4529	dwarf2.c	FUNCTION_68
0x400525a	    0x4881ec180100	                          sub rsp, 0x118	      4529	dwarf2.c	FUNCTION_68
0x4005261	    0x49c701000000	                       mov qword [r9], 0	      4546	dwarf2.c	FUNCTION_68
0x4005268	    0x488b9c245801	           mov rbx, qword [rsp + 0x158] 	      4529	dwarf2.c	FUNCTION_68
0x4005270	    0x488b84245001	           mov rax, qword [rsp + 0x150] 	      4529	dwarf2.c	FUNCTION_68
0x4005278	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      4529	dwarf2.c	FUNCTION_68
0x400527d	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      4529	dwarf2.c	FUNCTION_68
0x4005282	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      4529	dwarf2.c	FUNCTION_68
0x400528b	    0x48898c240801	            mov qword [rsp + 0x108], rcx	      4529	dwarf2.c	FUNCTION_68
0x4005293	            0x31c9	                            xor ecx, ecx	      4529	dwarf2.c	FUNCTION_68
0x4005295	      0x48895c2408	                mov qword [rsp + 8], rbx	      4529	dwarf2.c	FUNCTION_68
0x400529a	    0x488b9c246001	           mov rbx, qword [rsp + 0x160] 	      4529	dwarf2.c	FUNCTION_68
0x40052a2	          0x4885c0	                           test rax, rax	      4547	dwarf2.c	FUNCTION_68	IF_1
0x40052a5	      0x4889742440	             mov qword [rsp + 0x40], rsi	      4529	dwarf2.c	FUNCTION_68
0x40052aa	      0x4889542420	             mov qword [rsp + 0x20], rdx	      4529	dwarf2.c	FUNCTION_68
0x40052af	      0x4c89442448	              mov qword [rsp + 0x48], r8	      4529	dwarf2.c	FUNCTION_68
0x40052b4	      0x4c894c2468	              mov qword [rsp + 0x68], r9	      4529	dwarf2.c	FUNCTION_68
0x40052b9	      0x48895c2438	             mov qword [rsp + 0x38], rbx	      4529	dwarf2.c	FUNCTION_68
0x40052be	    0x488b9c246801	           mov rbx, qword [rsp + 0x168] 	      4529	dwarf2.c	FUNCTION_68
0x40052c6	      0x4889442460	             mov qword [rsp + 0x60], rax	      4529	dwarf2.c	FUNCTION_68
0x40052cb	    0x48c78424e000	               mov qword [rsp + 0xe0], 0	      4542	dwarf2.c	FUNCTION_68
0x40052d7	      0x48895c2450	             mov qword [rsp + 0x50], rbx	      4529	dwarf2.c	FUNCTION_68
0x40052dc	    0x488b9c247801	           mov rbx, qword [rsp + 0x178] 	      4529	dwarf2.c	FUNCTION_68
0x40052e4	            0x7407	                            je 0x40052ed	      4547	dwarf2.c	FUNCTION_68	IF_1
0x40052e6	    0x48c700000000	                      mov qword [rax], 0	      4548	dwarf2.c	FUNCTION_68	IF_1
0x40052ed	      0x488b442408	                mov rax, qword [rsp + 8]	      4549	dwarf2.c	FUNCTION_68
0x40052f2	    0xc70000000000	                      mov dword [rax], 0	      4549	dwarf2.c	FUNCTION_68
0x40052f8	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4550	dwarf2.c	FUNCTION_68	IF_2
0x40052fd	          0x4885c0	                           test rax, rax	      4550	dwarf2.c	FUNCTION_68	IF_2
0x4005300	            0x7406	                            je 0x4005308	      4550	dwarf2.c	FUNCTION_68	IF_2
0x4005302	    0xc70000000000	                      mov dword [rax], 0	      4551	dwarf2.c	FUNCTION_68	IF_2
0x4005308	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4555	dwarf2.c	FUNCTION_68	IF_3
0x400530d	      0x488b4c2440	            mov rcx, qword [rsp + 0x40] 	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x4005312	          0x4531c9	                            xor r9d, r9d	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x4005315	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x400531a	          0x4989d8	                             mov r8, rbx	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x400531d	          0x8b4744	            mov eax, dword [rdi + 0x44] 	      4555	dwarf2.c	FUNCTION_68	IF_3
0x4005320	        0x89442428	             mov dword [rsp + 0x28], eax	      4555	dwarf2.c	FUNCTION_68	IF_3
0x4005324	          0xc1e805	                              shr eax, 5	      4555	dwarf2.c	FUNCTION_68	IF_3
0x4005327	            0xa842	                           test al, 0x42	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x4005329	        0x410f94c1	                                sete r9b	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x400532d	            0x31f6	                            xor esi, esi	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x400532f	      0xe800000000	                          call 0x4005334	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x4005334	            0x85c0	                           test eax, eax	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x4005336	     0xf849e010000	                            je 0x40054da	      4553	dwarf2.c	FUNCTION_68	IF_3	CALL_1
0x400533c	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4560	dwarf2.c	FUNCTION_68
0x4005341	            0x31f6	                            xor esi, esi	      4560	dwarf2.c	FUNCTION_68
0x4005343	          0x4c8b33	                    mov r14, qword [rbx]	      4558	dwarf2.c	FUNCTION_68
0x4005346	          0x4885c0	                           test rax, rax	      4560	dwarf2.c	FUNCTION_68
0x4005349	        0x400f95c6	                               setne sil	      4560	dwarf2.c	FUNCTION_68
0x400534d	    0x89b424a00000	             mov dword [rsp + 0xa0], esi	      4560	dwarf2.c	FUNCTION_68
0x4005354	     0xf840d060000	                            je 0x4005967	      4561	dwarf2.c	FUNCTION_68	IF_4
0x400535a	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x4005360	           0xf95c2	                                setne dl	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x4005363	    0x48837c244800	               cmp qword [rsp + 0x48], 0	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x4005369	           0xf95c0	                                setne al	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x400536c	             0x8c2	                               or dl, al	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x400536e	            0x7508	                           jne 0x4005378	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x4005370	    0x48837c246000	               cmp qword [rsp + 0x60], 0	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x4005376	            0x740f	                            je 0x4005387	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x4005378	      0xbed3110000	                         mov esi, 0x11d3	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x400537d	      0xbf00000000	                              mov edi, 0	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x4005382	      0xe800000000	                          call 0x4005387	      4563	dwarf2.c	FUNCTION_68	IF_4	CALL_2
0x4005387	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4564	dwarf2.c	FUNCTION_68	IF_4	CALL_3
0x400538c	        0x488b7020	            mov rsi, qword [rax + 0x20] 	      4564	dwarf2.c	FUNCTION_68	IF_4	CALL_3
0x4005390	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      4565	dwarf2.c	FUNCTION_68	IF_4
0x4005394	      0x4889742410	             mov qword [rsp + 0x10], rsi	      4564	dwarf2.c	FUNCTION_68	IF_4	CALL_3
0x4005399	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4605	dwarf2.c	FUNCTION_68	IF_8
0x400539e	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      4605	dwarf2.c	FUNCTION_68	IF_8
0x40053a2	          0x4885d2	                           test rdx, rdx	      4605	dwarf2.c	FUNCTION_68	IF_8
0x40053a5	     0xf84a9050000	                            je 0x4005954	      4605	dwarf2.c	FUNCTION_68	IF_8
0x40053ab	        0x488b4060	            mov rax, qword [rax + 0x60] 	      4606	dwarf2.c	FUNCTION_68	IF_8
0x40053af	        0x48034228	             add rax, qword [rdx + 0x28]	      4606	dwarf2.c	FUNCTION_68	IF_8
0x40053b3	          0x4801c8	                            add rax, rcx	      4606	dwarf2.c	FUNCTION_68	IF_8
0x40053b6	      0x4889442470	             mov qword [rsp + 0x70], rax	      4606	dwarf2.c	FUNCTION_68	IF_8
0x40053bb	      0x49837e1800	               cmp qword [r14 + 0x18], 0	      4612	dwarf2.c	FUNCTION_68	IF_9
0x40053c0	     0xf8414010000	                            je 0x40054da	      4612	dwarf2.c	FUNCTION_68	IF_9
0x40053c6	    0x448b8424a000	            mov r8d, dword [rsp + 0xa0] 	      4618	dwarf2.c	FUNCTION_68	IF_10
0x40053ce	    0x49c786d00000	               mov qword [r14 + 0xd0], 0	      4615	dwarf2.c	FUNCTION_68
0x40053d9	          0x4585c0	                           test r8d, r8d	      4618	dwarf2.c	FUNCTION_68	IF_10
0x40053dc	     0xf8423010000	                            je 0x4005505	      4618	dwarf2.c	FUNCTION_68	IF_10
0x40053e2	    0x418b86100100	           mov eax, dword [r14 + 0x110] 	      4623	dwarf2.c	FUNCTION_68	IF_10	IF_11
0x40053e9	            0x85c0	                           test eax, eax	      4623	dwarf2.c	FUNCTION_68	IF_10	IF_11
0x40053eb	     0xf8450030000	                            je 0x4005741	      4623	dwarf2.c	FUNCTION_68	IF_10	IF_11
0x40053f1	          0x83f801	                              cmp eax, 1	      4628	dwarf2.c	FUNCTION_68	IF_10	IF_12
0x40053f4	     0xf84ae030000	                            je 0x40057a8	      4628	dwarf2.c	FUNCTION_68	IF_10	IF_12
0x40053fa	          0x498b1e	                    mov rbx, qword [r14]	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x40053fd	          0x4885db	                           test rbx, rbx	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x4005400	     0xf846e020000	                            je 0x4005674	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x4005406	      0x4c8b642470	            mov r12, qword [rsp + 0x70] 	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x400540b	      0x488b6c2420	            mov rbp, qword [rsp + 0x20] 	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x4005410	      0x4c8b6c2468	            mov r13, qword [rsp + 0x68] 	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x4005415	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x400541a	            0xeb1b	                           jmp 0x4005437	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x400541c	         0xf1f4000	                         nop dword [rax]	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x4005420	          0x8b7b44	            mov edi, dword [rbx + 0x44] 	      3562	dwarf2.c	FUNCTION_47	IF_1
0x4005423	            0x85ff	                           test edi, edi	      3562	dwarf2.c	FUNCTION_47	IF_1
0x4005425	     0xf8495040000	                            je 0x40058c0	      3562	dwarf2.c	FUNCTION_47	IF_1
0x400542b	          0x488b1b	                    mov rbx, qword [rbx]	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x400542e	          0x4885db	                           test rbx, rbx	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x4005431	     0xf843d020000	                            je 0x4005674	      4641	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2
0x4005437	        0xf6451808	               test byte [rbp + 0x18], 8	      4642	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15
0x400543b	            0x7407	                            je 0x4005444	      4642	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15
0x400543d	      0x48837b2800	               cmp qword [rbx + 0x28], 0	      4643	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15
0x4005442	            0x75dc	                           jne 0x4005420	      4643	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15
0x4005444	          0x4d89f1	                             mov r9, r14	      4646	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_9
0x4005447	          0x4d89f8	                             mov r8, r15	      4646	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_9
0x400544a	          0x4c89e9	                            mov rcx, r13	      4646	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_9
0x400544d	          0x4c89e2	                            mov rdx, r12	      4646	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_9
0x4005450	          0x4889ee	                            mov rsi, rbp	      4646	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_9
0x4005453	          0x4889df	                            mov rdi, rbx	      4646	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_9
0x4005456	      0xe8f5e9ffff	            call sym.comp_unit_find_line	      4646	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_9
0x400545b	            0x85c0	                           test eax, eax	      4648	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	IF_16
0x400545d	            0x74cc	                            je 0x400542b	      4648	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	IF_16
0x400545f	        0x8944245c	             mov dword [rsp + 0x5c], eax	      4648	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	IF_16
0x4005463	       0xf1f440000	                   nop dword [rax + rax]	      4648	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	IF_16
0x4005468	    0x488b8424e000	            mov rax, qword [rsp + 0xe0] 	      4828	dwarf2.c	FUNCTION_68	IF_36
0x4005470	          0x4885c0	                           test rax, rax	      4828	dwarf2.c	FUNCTION_68	IF_36
0x4005473	            0x7417	                            je 0x400548c	      4828	dwarf2.c	FUNCTION_68	IF_36
0x4005475	          0x8b502c	            mov edx, dword [rax + 0x2c] 	      4830	dwarf2.c	FUNCTION_68	IF_36	IF_37
0x4005478	            0x85d2	                           test edx, edx	      4830	dwarf2.c	FUNCTION_68	IF_36	IF_37
0x400547a	     0xf8460040000	                            je 0x40058e0	      4830	dwarf2.c	FUNCTION_68	IF_36	IF_37
0x4005480	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4830	dwarf2.c	FUNCTION_68	IF_36	IF_37
0x4005484	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      4848	dwarf2.c	FUNCTION_68	IF_36
0x4005489	          0x488906	                    mov qword [rsi], rax	      4848	dwarf2.c	FUNCTION_68	IF_36
0x400548c	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4850	dwarf2.c	FUNCTION_68	IF_40
0x4005491	          0x8b5044	            mov edx, dword [rax + 0x44] 	      4850	dwarf2.c	FUNCTION_68	IF_40
0x4005494	        0x8b44245c	            mov eax, dword [rsp + 0x5c] 	      4853	dwarf2.c	FUNCTION_68
0x4005498	          0xc1ea05	                              shr edx, 5	      4850	dwarf2.c	FUNCTION_68	IF_40
0x400549b	          0x83e242	                           and edx, 0x42	      4850	dwarf2.c	FUNCTION_68	IF_40
0x400549e	            0x753c	                           jne 0x40054dc	      4850	dwarf2.c	FUNCTION_68	IF_40
0x40054a0	    0x418b8ee00000	            mov ecx, dword [r14 + 0xe0] 	      4850	dwarf2.c	FUNCTION_68	IF_40
0x40054a7	    0x498b96e80000	            mov rdx, qword [r14 + 0xe8] 	      4850	dwarf2.c	FUNCTION_68	IF_40
0x40054ae	            0x85c9	                           test ecx, ecx	      3888	dwarf2.c	FUNCTION_56	FOR_1
0x40054b0	            0x7e2a	                           jle 0x40054dc	      3888	dwarf2.c	FUNCTION_56	FOR_1
0x40054b2	          0x83e901	                              sub ecx, 1	      3888	dwarf2.c	FUNCTION_56	FOR_1
0x40054b5	        0x4883c101	                              add rcx, 1	      3888	dwarf2.c	FUNCTION_56	FOR_1
0x40054b9	        0x48c1e104	                              shl rcx, 4	      3888	dwarf2.c	FUNCTION_56	FOR_1
0x40054bd	          0x4801d1	                            add rcx, rdx	      3888	dwarf2.c	FUNCTION_56	FOR_1
0x40054c0	          0x488b02	                    mov rax, qword [rdx]	      3889	dwarf2.c	FUNCTION_56	FOR_1
0x40054c3	        0x4883c210	                           add rdx, 0x10	      3888	dwarf2.c	FUNCTION_56	FOR_1
0x40054c7	          0x4839ca	                            cmp rdx, rcx	      3888	dwarf2.c	FUNCTION_56	FOR_1
0x40054ca	    0x48c740280000	               mov qword [rax + 0x28], 0	      3889	dwarf2.c	FUNCTION_56	FOR_1
0x40054d2	            0x75ec	                           jne 0x40054c0	      3888	dwarf2.c	FUNCTION_56	FOR_1
0x40054d4	        0x8b44245c	            mov eax, dword [rsp + 0x5c] 	      4853	dwarf2.c	FUNCTION_68
0x40054d8	            0xeb02	                           jmp 0x40054dc	      4853	dwarf2.c	FUNCTION_68
0x40054da	            0x31c0	                            xor eax, eax	      4556	dwarf2.c	FUNCTION_68	IF_3
0x40054dc	    0x488bb4240801	           mov rsi, qword [rsp + 0x108] 	      4854	dwarf2.c	FUNCTION_68
0x40054e4	    0x644833342528	                xor rsi, qword fs:[0x28]	      4854	dwarf2.c	FUNCTION_68
0x40054ed	     0xf8554110000	                           jne 0x4006647	      4854	dwarf2.c	FUNCTION_68
0x40054f3	    0x4881c4180100	                          add rsp, 0x118	      4854	dwarf2.c	FUNCTION_68
0x40054fa	              0x5b	                                 pop rbx	      4854	dwarf2.c	FUNCTION_68
0x40054fb	              0x5d	                                 pop rbp	      4854	dwarf2.c	FUNCTION_68
0x40054fc	            0x415c	                                 pop r12	      4854	dwarf2.c	FUNCTION_68
0x40054fe	            0x415d	                                 pop r13	      4854	dwarf2.c	FUNCTION_68
0x4005500	            0x415e	                                 pop r14	      4854	dwarf2.c	FUNCTION_68
0x4005502	            0x415f	                                 pop r15	      4854	dwarf2.c	FUNCTION_68
0x4005504	              0xc3	                                     ret	      4854	dwarf2.c	FUNCTION_68
0x4005505	    0x48c78424e800	               mov qword [rsp + 0xe8], 0	      4656	dwarf2.c	FUNCTION_68	ELSE_4
0x4005511	    0x48c78424f000	               mov qword [rsp + 0xf0], 0	      4657	dwarf2.c	FUNCTION_68	ELSE_4
0x400551d	          0x498b2e	                    mov rbp, qword [r14]	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x4005520	    0xc78424d80000	               mov dword [rsp + 0xd8], 0	      4658	dwarf2.c	FUNCTION_68	ELSE_4
0x400552b	    0xc78424dc0000	               mov dword [rsp + 0xdc], 0	      4659	dwarf2.c	FUNCTION_68	ELSE_4
0x4005536	          0x4885ed	                           test rbp, rbp	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x4005539	     0xf84ad0f0000	                            je 0x40064ec	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x400553f	    0x48c7c3ffffff	             mov rbx, 0xffffffffffffffff	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x4005546	      0x4c8b642470	            mov r12, qword [rsp + 0x70] 	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x400554b	      0x4c8b7c2468	            mov r15, qword [rsp + 0x68] 	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4005550	      0x4c8b6c2438	            mov r13, qword [rsp + 0x38] 	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4005555	            0xeb23	                           jmp 0x400557a	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4005557	    0x660f1f840000	                    nop word [rax + rax]	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4005560	          0x8b7544	            mov esi, dword [rbp + 0x44] 	      3562	dwarf2.c	FUNCTION_47	IF_1
0x4005563	            0x31d2	                            xor edx, edx	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4005565	            0x85f6	                           test esi, esi	      3562	dwarf2.c	FUNCTION_47	IF_1
0x4005567	     0xf84db000000	                            je 0x4005648	      3562	dwarf2.c	FUNCTION_47	IF_1
0x400556d	        0x488b6d00	                    mov rbp, qword [rbp]	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x4005571	          0x4885ed	                           test rbp, rbp	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x4005574	     0xf84ad000000	                            je 0x4005627	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x400557a	      0x48837d2800	               cmp qword [rbp + 0x28], 0	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x400557f	            0x75df	                           jne 0x4005560	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4005581	        0x4883ec08	                              sub rsp, 8	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4005585	          0x4c89e6	                            mov rsi, r12	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4005588	          0x4889ef	                            mov rdi, rbp	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x400558b	            0x4156	                                push r14	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x400558d	    0x4c8d8c24ec00	                    lea r9, [rsp + 0xec]	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x4005595	    0x4c8d8424e800	                    lea r8, [rsp + 0xe8]	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x400559d	    0x488d8c240001	                  lea rcx, [rsp + 0x100]	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x40055a5	    0x488d9424f800	                   lea rdx, [rsp + 0xf8]	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x40055ad	      0xe8feecffff	    call sym.comp_unit_find_nearest_line	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x40055b2	          0x4885c0	                           test rax, rax	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x40055b5	              0x5a	                                 pop rdx	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x40055b6	              0x59	                                 pop rcx	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x40055b7	     0xf84a3000000	                            je 0x4005660	      4667	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_11
0x40055bd	          0x4839d8	                            cmp rax, rbx	      4686	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18
0x40055c0	      0xba01000000	                              mov edx, 1	      4686	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18
0x40055c5	            0x77a6	                            ja 0x400556d	      4686	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18
0x40055c7	    0x488b9424e800	            mov rdx, qword [rsp + 0xe8] 	      4688	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_19
0x40055cf	          0x4885d2	                           test rdx, rdx	      4688	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_19
0x40055d2	            0x7403	                            je 0x40055d7	      4688	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_19
0x40055d4	          0x498917	                    mov qword [r15], rdx	      4689	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_19
0x40055d7	    0x488b9424f000	            mov rdx, qword [rsp + 0xf0] 	      4690	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_20
0x40055df	          0x4885d2	                           test rdx, rdx	      4690	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_20
0x40055e2	            0x7408	                            je 0x40055ec	      4690	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_20
0x40055e4	    0x48899424e000	             mov qword [rsp + 0xe0], rdx	      4691	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_20
0x40055ec	          0x4d85ed	                           test r13, r13	      4692	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_21
0x40055ef	            0x740f	                            je 0x4005600	      4692	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_21
0x40055f1	    0x8b9424dc0000	            mov edx, dword [rsp + 0xdc] 	      4692	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_21
0x40055f8	            0x85d2	                           test edx, edx	      4692	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_21
0x40055fa	            0x7404	                            je 0x4005600	      4692	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_21
0x40055fc	        0x41895500	                    mov dword [r13], edx	      4693	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_21
0x4005600	    0x8b9424d80000	            mov edx, dword [rsp + 0xd8] 	      4694	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_22
0x4005607	            0x85d2	                           test edx, edx	      4694	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_22
0x4005609	            0x745c	                            je 0x4005667	      4694	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_22
0x400560b	        0x488b6d00	                    mov rbp, qword [rbp]	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x400560f	      0x488b742408	                mov rsi, qword [rsp + 8]	      4695	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_22
0x4005614	          0x4889c3	                            mov rbx, rax	      4695	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_22
0x4005617	          0x4885ed	                           test rbp, rbp	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x400561a	            0x8916	                    mov dword [rsi], edx	      4695	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_22
0x400561c	      0xba01000000	                              mov edx, 1	      4695	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	IF_17	IF_18	IF_22
0x4005621	     0xf8553ffffff	                           jne 0x400557a	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x4005627	        0x8954245c	             mov dword [rsp + 0x5c], edx	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x400562b	      0x488b442408	                mov rax, qword [rsp + 8]	      4701	dwarf2.c	FUNCTION_68	ELSE_4	IF_23
0x4005630	          0x448b28	                   mov r13d, dword [rax]	      4701	dwarf2.c	FUNCTION_68	ELSE_4	IF_23
0x4005633	          0x4585ed	                         test r13d, r13d	      4701	dwarf2.c	FUNCTION_68	ELSE_4	IF_23
0x4005636	            0x7444	                            je 0x400567c	      4701	dwarf2.c	FUNCTION_68	ELSE_4	IF_23
0x4005638	    0xc744245c0100	               mov dword [rsp + 0x5c], 1	      4701	dwarf2.c	FUNCTION_68	ELSE_4	IF_23
0x4005640	      0xe923feffff	                           jmp 0x4005468	      4701	dwarf2.c	FUNCTION_68	ELSE_4	IF_23
0x4005645	           0xf1f00	                         nop dword [rax]	      4701	dwarf2.c	FUNCTION_68	ELSE_4	IF_23
0x4005648	          0x4c89e6	                            mov rsi, r12	      4701	dwarf2.c	FUNCTION_68	ELSE_4	IF_23
0x400564b	          0x4889ef	                            mov rdi, rbp	      4701	dwarf2.c	FUNCTION_68	ELSE_4	IF_23
0x400564e	      0xe8adb2ffff	call sym.comp_unit_contains_address.part.13	      4701	dwarf2.c	FUNCTION_68	ELSE_4	IF_23
0x4005653	            0x85c0	                           test eax, eax	      4666	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_10
0x4005655	     0xf8526ffffff	                           jne 0x4005581	      4666	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_10
0x400565b	       0xf1f440000	                   nop dword [rax + rax]	      4666	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3	CALL_10
0x4005660	            0x31d2	                            xor edx, edx	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x4005662	      0xe906ffffff	                           jmp 0x400556d	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x4005667	          0x4889c3	                            mov rbx, rax	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x400566a	      0xba01000000	                              mov edx, 1	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x400566f	      0xe9f9feffff	                           jmp 0x400556d	      4661	dwarf2.c	FUNCTION_68	ELSE_4	FOR_3
0x4005674	    0xc744245c0000	               mov dword [rsp + 0x5c], 0	      4543	dwarf2.c	FUNCTION_68
0x400567c	    0x448ba4247001	          mov r12d, dword [rsp + 0x170] 	      4711	dwarf2.c	FUNCTION_68	IF_24
0x4005684	          0x4585e4	                         test r12d, r12d	      4711	dwarf2.c	FUNCTION_68	IF_24
0x4005687	     0xf84a4000000	                            je 0x4005731	      4711	dwarf2.c	FUNCTION_68	IF_24
0x400568d	    0x8b8424700100	           mov eax, dword [rsp + 0x170] 	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x4005694	          0x83e804	                              sub eax, 4	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x4005697	          0x83e0fb	                     and eax, 0xfffffffb	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x400569a	            0x740f	                            je 0x40056ab	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x400569c	      0xbe69120000	                         mov esi, 0x1269	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x40056a1	      0xbf00000000	                              mov edi, 0	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x40056a6	      0xe800000000	                          call 0x40056ab	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x40056ab	    0x83bc24700100	              cmp dword [rsp + 0x170], 8	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x40056b3	      0xb804000000	                              mov eax, 4	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x40056b8	        0x498b6e18	            mov rbp, qword [r14 + 0x18] 	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x40056bc	     0xf4584247001	         cmovne eax, dword [rsp + 0x170]	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x40056c4	        0x89442458	             mov dword [rsp + 0x58], eax	      4713	dwarf2.c	FUNCTION_68	CALL_12
0x40056c8	    0x498d86880000	                   lea rax, [r14 + 0x88]	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x40056cf	    0x48898424b800	             mov qword [rsp + 0xb8], rax	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x40056d7	        0x498b4e20	            mov rcx, qword [r14 + 0x20] 	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x40056db	      0xbbffffffff	                     mov ebx, 0xffffffff	      4725	dwarf2.c	FUNCTION_68	WHILE_1	IF_25
0x40056e0	          0x4839e9	                            cmp rcx, rbp	      4716	dwarf2.c	FUNCTION_68	WHILE_1
0x40056e3	     0xf867ffdffff	                           jbe 0x4005468	      4716	dwarf2.c	FUNCTION_68	WHILE_1
0x40056e9	     0xf1f80000000	                         nop dword [rax]	      4716	dwarf2.c	FUNCTION_68	WHILE_1
0x40056f0	        0x498b4630	            mov rax, qword [r14 + 0x30] 	      4716	dwarf2.c	FUNCTION_68	WHILE_1
0x40056f4	        0x488d7504	                      lea rsi, [rbp + 4]	       612	dwarf2.c	FUNCTION_9	IF_1
0x40056f8	          0x4889ea	                            mov rdx, rbp	       612	dwarf2.c	FUNCTION_9	IF_1
0x40056fb	          0x4839ce	                            cmp rsi, rcx	       612	dwarf2.c	FUNCTION_9	IF_1
0x40056fe	        0x488d7808	                      lea rdi, [rax + 8]	       612	dwarf2.c	FUNCTION_9	IF_1
0x4005702	     0xf8650010000	                           jbe 0x4005858	       612	dwarf2.c	FUNCTION_9	IF_1
0x4005708	        0x4883c208	                              add rdx, 8	       612	dwarf2.c	FUNCTION_9	IF_1
0x400570c	            0x31c0	                            xor eax, eax	       612	dwarf2.c	FUNCTION_9	IF_1
0x400570e	          0x4839d1	                            cmp rcx, rdx	       612	dwarf2.c	FUNCTION_9	IF_1
0x4005711	     0xf8391010000	                           jae 0x40058a8	       612	dwarf2.c	FUNCTION_9	IF_1
0x4005717	          0x4885c0	                           test rax, rax	      4757	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28
0x400571a	        0x49895618	             mov qword [r14 + 0x18], rdx	      4738	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26
0x400571e	     0xf85420f0000	                           jne 0x4006666	      4757	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28
0x4005724	          0x4889d5	                            mov rbp, rdx	      4757	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28
0x4005727	          0x4839e9	                            cmp rcx, rbp	      4716	dwarf2.c	FUNCTION_68	WHILE_1
0x400572a	            0x77c4	                            ja 0x40056f0	      4716	dwarf2.c	FUNCTION_68	WHILE_1
0x400572c	      0xe937fdffff	                           jmp 0x4005468	      4716	dwarf2.c	FUNCTION_68	WHILE_1
0x4005731	    0xc78424700100	              mov dword [rsp + 0x170], 4	      4712	dwarf2.c	FUNCTION_68	IF_24
0x400573c	      0xe96affffff	                           jmp 0x40056ab	      4712	dwarf2.c	FUNCTION_68	IF_24
0x4005741	    0x418b86f00000	            mov eax, dword [r14 + 0xf0] 	      4207	dwarf2.c	FUNCTION_62	IF_1
0x4005748	          0x8d5001	                      lea edx, [rax + 1]	      4207	dwarf2.c	FUNCTION_62	IF_1
0x400574b	          0x83f863	                           cmp eax, 0x63	      4207	dwarf2.c	FUNCTION_62	IF_1
0x400574e	    0x418996f00000	             mov dword [r14 + 0xf0], edx	      4207	dwarf2.c	FUNCTION_62	IF_1
0x4005755	     0xf8e9ffcffff	                           jle 0x40053fa	      4207	dwarf2.c	FUNCTION_62	IF_1
0x400575b	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      4214	dwarf2.c	FUNCTION_62	CALL_2
0x4005760	          0x4889df	                            mov rdi, rbx	      4214	dwarf2.c	FUNCTION_62	CALL_2
0x4005763	      0xe818b0ffff	         call sym.create_info_hash_table	      4214	dwarf2.c	FUNCTION_62	CALL_2
0x4005768	          0x4889df	                            mov rdi, rbx	      4215	dwarf2.c	FUNCTION_62	CALL_3
0x400576b	    0x498986f80000	             mov qword [r14 + 0xf8], rax	      4214	dwarf2.c	FUNCTION_62	CALL_2
0x4005772	      0xe809b0ffff	         call sym.create_info_hash_table	      4215	dwarf2.c	FUNCTION_62	CALL_3
0x4005777	    0x4983bef80000	               cmp qword [r14 + 0xf8], 0	      4216	dwarf2.c	FUNCTION_62	IF_2
0x400577f	    0x498986000100	            mov qword [r14 + 0x100], rax	      4215	dwarf2.c	FUNCTION_62	CALL_3
0x4005786	     0xf84650e0000	                            je 0x40065f1	      4216	dwarf2.c	FUNCTION_62	IF_2
0x400578c	          0x4885c0	                           test rax, rax	      4216	dwarf2.c	FUNCTION_62	IF_2
0x400578f	     0xf845c0e0000	                            je 0x40065f1	      4216	dwarf2.c	FUNCTION_62	IF_2
0x4005795	          0x4c89f7	                            mov rdi, r14	      4225	dwarf2.c	FUNCTION_62	CALL_4
0x4005798	      0xe8b3e8ffff	call sym.stash_maybe_update_info_hash_tables	      4225	dwarf2.c	FUNCTION_62	CALL_4
0x400579d	    0x41c786100100	              mov dword [r14 + 0x110], 1	      4226	dwarf2.c	FUNCTION_62
0x40057a8	          0x4c89f7	                            mov rdi, r14	      4629	dwarf2.c	FUNCTION_68	IF_10	CALL_6
0x40057ab	      0xe8a0e8ffff	call sym.stash_maybe_update_info_hash_tables	      4629	dwarf2.c	FUNCTION_68	IF_10	CALL_6
0x40057b0	    0x4183be100100	              cmp dword [r14 + 0x110], 1	      4631	dwarf2.c	FUNCTION_68	IF_10	IF_13
0x40057b8	     0xf853cfcffff	                           jne 0x40053fa	      4631	dwarf2.c	FUNCTION_68	IF_10	IF_13
0x40057be	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4243	dwarf2.c	FUNCTION_63	IF_1
0x40057c3	        0xf6401808	               test byte [rax + 0x18], 8	      4243	dwarf2.c	FUNCTION_63	IF_1
0x40057c7	     0xf85530d0000	                           jne 0x4006520	      4243	dwarf2.c	FUNCTION_63	IF_1
0x40057cd	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4243	dwarf2.c	FUNCTION_63	IF_1
0x40057d2	    0x498bbe000100	           mov rdi, qword [r14 + 0x100] 	       508	dwarf2.c	FUNCTION_4	CALL_1
0x40057d9	            0x31c9	                            xor ecx, ecx	       508	dwarf2.c	FUNCTION_4	CALL_1
0x40057db	            0x31d2	                            xor edx, edx	       508	dwarf2.c	FUNCTION_4	CALL_1
0x40057dd	        0x488b7008	                mov rsi, qword [rax + 8]	       508	dwarf2.c	FUNCTION_4	CALL_1
0x40057e1	        0x488b5820	            mov rbx, qword [rax + 0x20] 	       508	dwarf2.c	FUNCTION_4	CALL_1
0x40057e5	      0xe800000000	                          call 0x40057ea	       508	dwarf2.c	FUNCTION_4	CALL_1
0x40057ea	          0x4885c0	                           test rax, rax	       510	dwarf2.c	FUNCTION_4
0x40057ed	     0xf8481feffff	                            je 0x4005674	       510	dwarf2.c	FUNCTION_4
0x40057f3	        0x488b4018	            mov rax, qword [rax + 0x18] 	       510	dwarf2.c	FUNCTION_4
0x40057f7	          0x4885c0	                           test rax, rax	      4093	dwarf2.c	FUNCTION_59	FOR_1	CALL_3
0x40057fa	     0xf8474feffff	                            je 0x4005674	      4093	dwarf2.c	FUNCTION_59	FOR_1	CALL_3
0x4005800	      0x488b4c2470	            mov rcx, qword [rsp + 0x70] 	      4093	dwarf2.c	FUNCTION_59	FOR_1	CALL_3
0x4005805	            0xeb15	                           jmp 0x400581c	      4093	dwarf2.c	FUNCTION_59	FOR_1	CALL_3
0x4005807	    0x660f1f840000	                    nop word [rax + rax]	      4093	dwarf2.c	FUNCTION_59	FOR_1	CALL_3
0x4005810	          0x488b00	                    mov rax, qword [rax]	      4095	dwarf2.c	FUNCTION_59	FOR_1
0x4005813	          0x4885c0	                           test rax, rax	      4093	dwarf2.c	FUNCTION_59	FOR_1	CALL_3
0x4005816	     0xf8458feffff	                            je 0x4005674	      4093	dwarf2.c	FUNCTION_59	FOR_1	CALL_3
0x400581c	        0x488b5008	                mov rdx, qword [rax + 8]	      4097	dwarf2.c	FUNCTION_59	FOR_1
0x4005820	        0x483b4a20	            cmp rcx, qword [rdx + 0x20] 	      4098	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x4005824	            0x75ea	                           jne 0x4005810	      4098	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x4005826	        0x488b7228	            mov rsi, qword [rdx + 0x28] 	      4099	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x400582a	          0x4839f3	                            cmp rbx, rsi	      4099	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x400582d	            0x7405	                            je 0x4005834	      4099	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x400582f	          0x4885f6	                           test rsi, rsi	      4099	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x4005832	            0x75dc	                           jne 0x4005810	      4099	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x4005834	        0x488b4208	                mov rax, qword [rdx + 8]	      4102	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x4005838	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	      4102	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x400583d	        0x48895a28	             mov qword [rdx + 0x28], rbx	      4101	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x4005841	          0x488906	                    mov qword [rsi], rax	      4102	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x4005844	          0x8b4210	            mov eax, dword [rdx + 0x10] 	      4103	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x4005847	      0x488b742408	                mov rsi, qword [rsp + 8]	      4103	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x400584c	            0x8906	                    mov dword [rsi], eax	      4103	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x400584e	      0xe9e5fdffff	                           jmp 0x4005638	      4103	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x4005853	       0xf1f440000	                   nop dword [rax + rax]	      4103	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x4005858	          0x4889ee	                            mov rsi, rbp	      4103	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x400585b	      0xe8f0afffff	     call sym.read_4_bytes.isra.4.part.5	      4103	dwarf2.c	FUNCTION_59	FOR_1	IF_1
0x4005860	            0x89c0	                            mov eax, eax	      4722	dwarf2.c	FUNCTION_68	WHILE_1	CALL_13
0x4005862	          0x4839d8	                            cmp rax, rbx	      4725	dwarf2.c	FUNCTION_68	WHILE_1	IF_25
0x4005865	     0xf85a5010000	                           jne 0x4005a10	      4725	dwarf2.c	FUNCTION_68	WHILE_1	IF_25
0x400586b	        0x498b7618	            mov rsi, qword [r14 + 0x18] 	      4728	dwarf2.c	FUNCTION_68	WHILE_1	IF_25	CALL_14
0x400586f	        0x498b4e20	            mov rcx, qword [r14 + 0x20] 	      4728	dwarf2.c	FUNCTION_68	WHILE_1	IF_25	CALL_14
0x4005873	            0x31c0	                            xor eax, eax	       621	dwarf2.c	FUNCTION_10	IF_1
0x4005875	        0x488d560c	                    lea rdx, [rsi + 0xc]	       620	dwarf2.c	FUNCTION_10	IF_1
0x4005879	          0x4839d1	                            cmp rcx, rdx	       620	dwarf2.c	FUNCTION_10	IF_1
0x400587c	     0xf8295feffff	                            jb 0x4005717	       620	dwarf2.c	FUNCTION_10	IF_1
0x4005882	        0x498b4630	            mov rax, qword [r14 + 0x30] 	       620	dwarf2.c	FUNCTION_10	IF_1
0x4005886	        0x4883c604	                              add rsi, 4	       620	dwarf2.c	FUNCTION_10	IF_1
0x400588a	        0x488d7808	                      lea rdi, [rax + 8]	       620	dwarf2.c	FUNCTION_10	IF_1
0x400588e	      0xe8ddafffff	     call sym.read_8_bytes.isra.6.part.7	       620	dwarf2.c	FUNCTION_10	IF_1
0x4005893	        0x498b7618	            mov rsi, qword [r14 + 0x18] 	       620	dwarf2.c	FUNCTION_10	IF_1
0x4005897	        0x498b4e20	            mov rcx, qword [r14 + 0x20] 	       620	dwarf2.c	FUNCTION_10	IF_1
0x400589b	        0x488d560c	                    lea rdx, [rsi + 0xc]	       620	dwarf2.c	FUNCTION_10	IF_1
0x400589f	      0xe973feffff	                           jmp 0x4005717	       620	dwarf2.c	FUNCTION_10	IF_1
0x40058a4	         0xf1f4000	                         nop dword [rax]	       620	dwarf2.c	FUNCTION_10	IF_1
0x40058a8	      0xe8a3afffff	     call sym.read_4_bytes.isra.4.part.5	       620	dwarf2.c	FUNCTION_10	IF_1
0x40058ad	        0x498b5618	            mov rdx, qword [r14 + 0x18] 	       620	dwarf2.c	FUNCTION_10	IF_1
0x40058b1	        0x498b4e20	            mov rcx, qword [r14 + 0x20] 	       620	dwarf2.c	FUNCTION_10	IF_1
0x40058b5	            0x89c0	                            mov eax, eax	       620	dwarf2.c	FUNCTION_10	IF_1
0x40058b7	        0x4883c208	                              add rdx, 8	       620	dwarf2.c	FUNCTION_10	IF_1
0x40058bb	      0xe957feffff	                           jmp 0x4005717	       620	dwarf2.c	FUNCTION_10	IF_1
0x40058c0	          0x4c89e6	                            mov rsi, r12	       620	dwarf2.c	FUNCTION_10	IF_1
0x40058c3	          0x4889df	                            mov rdi, rbx	       620	dwarf2.c	FUNCTION_10	IF_1
0x40058c6	      0xe835b0ffff	call sym.comp_unit_contains_address.part.13	       620	dwarf2.c	FUNCTION_10	IF_1
0x40058cb	            0x85c0	                           test eax, eax	      4644	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_8
0x40058cd	     0xf8571fbffff	                           jne 0x4005444	      4644	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_8
0x40058d3	      0xe953fbffff	                           jmp 0x400542b	      4644	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_8
0x40058d8	     0xf1f84000000	                   nop dword [rax + rax]	      4644	dwarf2.c	FUNCTION_68	IF_10	ELSE_3	FOR_2	IF_15	CALL_8
0x40058e0	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x40058e5	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x40058ea	    0x41b800000000	                              mov r8d, 0	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x40058f0	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x40058f5	      0x4c8b4c2460	              mov r9, qword [rsp + 0x60]	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x40058fa	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x40058ff	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4005904	        0x48833800	                      cmp qword [rax], 0	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4005908	          0x4889da	                            mov rdx, rbx	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x400590b	        0x4c0f44c0	                           cmove r8, rax	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x400590f	      0xe800000000	                          call 0x4005914	      4835	dwarf2.c	FUNCTION_68	IF_36	IF_37	CALL_22
0x4005914	        0x488b4b68	            mov rcx, qword [rbx + 0x68] 	      4839	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_38
0x4005918	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      4838	dwarf2.c	FUNCTION_68	IF_36	IF_37
0x400591c	          0x4885c9	                           test rcx, rcx	      4839	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_38
0x400591f	            0x7408	                            je 0x4005929	      4839	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_38
0x4005921	        0x488b5360	            mov rdx, qword [rbx + 0x60] 	      4840	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_38
0x4005925	        0x48035128	             add rdx, qword [rcx + 0x28]	      4840	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_38
0x4005929	          0x4885c0	                           test rax, rax	      4841	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x400592c	    0x488b8c24e000	            mov rcx, qword [rsp + 0xe0] 	      4842	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4005934	            0x740e	                            je 0x4005944	      4841	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4005936	        0x48035010	             add rdx, qword [rax + 0x10]	      4842	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x400593a	        0x483b5140	            cmp rdx, qword [rcx + 0x40] 	      4842	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x400593e	     0xf84ae0a0000	                            je 0x40063f2	      4842	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4005944	        0x488b4130	            mov rax, qword [rcx + 0x30] 	      4842	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4005948	    0xc7412c010000	               mov dword [rcx + 0x2c], 1	      4846	dwarf2.c	FUNCTION_68	IF_36	IF_37
0x400594f	      0xe930fbffff	                           jmp 0x4005484	      4846	dwarf2.c	FUNCTION_68	IF_36	IF_37
0x4005954	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4608	dwarf2.c	FUNCTION_68	ELSE_2
0x4005959	        0x48034828	             add rcx, qword [rax + 0x28]	      4608	dwarf2.c	FUNCTION_68	ELSE_2
0x400595d	      0x48894c2470	             mov qword [rsp + 0x70], rcx	      4608	dwarf2.c	FUNCTION_68	ELSE_2
0x4005962	      0xe954faffff	                           jmp 0x40053bb	      4608	dwarf2.c	FUNCTION_68	ELSE_2
0x4005967	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      4569	dwarf2.c	FUNCTION_68	ELSE_1	CALL_4
0x400596d	     0xf84990b0000	                            je 0x400650c	      4569	dwarf2.c	FUNCTION_68	ELSE_1	CALL_4
0x4005973	    0x48837c246000	               cmp qword [rsp + 0x60], 0	      4569	dwarf2.c	FUNCTION_68	ELSE_1	CALL_4
0x4005979	     0xf848d0b0000	                            je 0x400650c	      4569	dwarf2.c	FUNCTION_68	ELSE_1	CALL_4
0x400597f	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	      4585	dwarf2.c	FUNCTION_68	ELSE_1	IF_5
0x4005984	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      4585	dwarf2.c	FUNCTION_68	ELSE_1	IF_5
0x4005989	          0x4885d2	                           test rdx, rdx	      4585	dwarf2.c	FUNCTION_68	ELSE_1	IF_5
0x400598c	     0xf8407faffff	                            je 0x4005399	      4585	dwarf2.c	FUNCTION_68	ELSE_1	IF_5
0x4005992	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      4585	dwarf2.c	FUNCTION_68	ELSE_1	IF_5
0x4005997	        0xf6462010	           test byte [rsi + 0x20], 0x10 	      4585	dwarf2.c	FUNCTION_68	ELSE_1	IF_5
0x400599b	     0xf85f8f9ffff	                           jne 0x4005399	      4585	dwarf2.c	FUNCTION_68	ELSE_1	IF_5
0x40059a1	          0x488b02	                    mov rax, qword [rdx]	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x40059a4	          0x4885c0	                           test rax, rax	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x40059a7	     0xf84c90c0000	                            je 0x4006676	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x40059ad	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x40059b2	          0x4889f7	                            mov rdi, rsi	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x40059b5	            0xeb19	                           jmp 0x40059d0	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x40059b7	    0x660f1f840000	                    nop word [rax + rax]	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x40059c0	        0x4883c208	                              add rdx, 8	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x40059c4	          0x488b02	                    mov rax, qword [rdx]	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x40059c7	          0x4885c0	                           test rax, rax	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x40059ca	     0xf84950a0000	                            je 0x4006465	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x40059d0	          0x483b08	                    cmp rcx, qword [rax]	      4590	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40059d3	            0x75eb	                           jne 0x40059c0	      4590	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40059d5	        0x483b7820	            cmp rdi, qword [rax + 0x20] 	      4591	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40059d9	            0x75e5	                           jne 0x40059c0	      4591	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40059db	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      4592	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40059e0	        0x483b7010	            cmp rsi, qword [rax + 0x10] 	      4592	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40059e4	            0x75da	                           jne 0x40059c0	      4592	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40059e6	          0x8b7018	            mov esi, dword [rax + 0x18] 	      4593	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40059e9	    0xf7c600010000	                         test esi, 0x100	      4593	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40059ef	            0x75cf	                           jne 0x40059c0	      4593	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x40059f1	          0x83e602	                              and esi, 2	      4599	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6	IF_7
0x40059f4	     0xf85520c0000	                           jne 0x400664c	      4599	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6	IF_7
0x40059fa	      0x4889442420	             mov qword [rsp + 0x20], rax	      4599	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6	IF_7
0x40059ff	    0xc78424a00000	               mov dword [rsp + 0xa0], 1	      4596	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x4005a0a	            0xebb4	                           jmp 0x40059c0	      4596	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x4005a0c	         0xf1f4000	                         nop dword [rax]	      4596	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x4005a10	          0x4885c0	                           test rax, rax	      4734	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26
0x4005a13	     0xf849a0c0000	                            je 0x40066b3	      4734	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26
0x4005a19	          0x4989c4	                            mov r12, rax	      4734	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_5	IF_26
0x4005a1c	      0x4983461804	               add qword [r14 + 0x18], 4	      4755	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7
0x4005a21	        0x8b442458	            mov eax, dword [rsp + 0x58] 	      4755	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7
0x4005a25	        0x498b5618	            mov rdx, qword [r14 + 0x18] 	      4755	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7
0x4005a29	        0x498b4e20	            mov rcx, qword [r14 + 0x20] 	      4755	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7
0x4005a2d	        0x89442428	             mov dword [rsp + 0x28], eax	      4755	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7
0x4005a31	        0x4a8d0422	                    lea rax, [rdx + r12]	      4762	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_29
0x4005a35	          0x4839c8	                            cmp rax, rcx	      4762	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_29
0x4005a38	    0x488984249000	             mov qword [rsp + 0x90], rax	      4762	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_29
0x4005a40	     0xf8794faffff	                            ja 0x40054da	      4762	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_29
0x4005a46	        0x4c8d6a02	                      lea r13, [rdx + 2]	       604	dwarf2.c	FUNCTION_8	IF_1
0x4005a4a	          0x4c39e8	                            cmp rax, r13	       604	dwarf2.c	FUNCTION_8	IF_1
0x4005a4d	     0xf8215faffff	                            jb 0x4005468	       604	dwarf2.c	FUNCTION_8	IF_1
0x4005a53	        0x498b4630	            mov rax, qword [r14 + 0x30] 	      3352	dwarf2.c	FUNCTION_46
0x4005a57	          0x4889d6	                            mov rsi, rdx	      3352	dwarf2.c	FUNCTION_46
0x4005a5a	      0x4889542430	             mov qword [rsp + 0x30], rdx	      3352	dwarf2.c	FUNCTION_46
0x4005a5f	        0x4c8d7808	                      lea r15, [rax + 8]	      3352	dwarf2.c	FUNCTION_46
0x4005a63	      0x4889442478	             mov qword [rsp + 0x78], rax	      3352	dwarf2.c	FUNCTION_46
0x4005a68	          0x4c89ff	                            mov rdi, r15	      3352	dwarf2.c	FUNCTION_46
0x4005a6b	      0xe8c0adffff	     call sym.read_2_bytes.isra.2.part.3	      3352	dwarf2.c	FUNCTION_46
0x4005a70	    0x898424a40000	             mov dword [rsp + 0xa4], eax	      3352	dwarf2.c	FUNCTION_46
0x4005a77	          0x83e802	                              sub eax, 2	      3358	dwarf2.c	FUNCTION_46	IF_1
0x4005a7a	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      3358	dwarf2.c	FUNCTION_46	IF_1
0x4005a7f	          0x83f803	                              cmp eax, 3	      3358	dwarf2.c	FUNCTION_46	IF_1
0x4005a82	     0xf87010c0000	                            ja 0x4006689	      3358	dwarf2.c	FUNCTION_46	IF_1
0x4005a88	    0x83bc24a40000	               cmp dword [rsp + 0xa4], 5	      3374	dwarf2.c	FUNCTION_46	IF_3
0x4005a90	      0xbb01000000	                              mov ebx, 1	      3375	dwarf2.c	FUNCTION_46	IF_3
0x4005a95	    0xc78424880000	     mov dword [rsp + 0x88], 0xffffffff 	      3342	dwarf2.c	FUNCTION_46
0x4005aa0	            0x7531	                           jne 0x4005ad3	      3374	dwarf2.c	FUNCTION_46	IF_3
0x4005aa2	        0x488d4203	                      lea rax, [rdx + 3]	       588	dwarf2.c	FUNCTION_6	IF_1
0x4005aa6	            0x31db	                            xor ebx, ebx	       589	dwarf2.c	FUNCTION_6	IF_1
0x4005aa8	    0x483984249000	            cmp qword [rsp + 0x90], rax 	       588	dwarf2.c	FUNCTION_6	IF_1
0x4005ab0	     0xf8392090000	                           jae 0x4006448	       588	dwarf2.c	FUNCTION_6	IF_1
0x4005ab6	        0x4c8d6a04	                      lea r13, [rdx + 4]	       588	dwarf2.c	FUNCTION_6	IF_1
0x4005aba	    0x4c39ac249000	            cmp qword [rsp + 0x90], r13 	       588	dwarf2.c	FUNCTION_6	IF_1
0x4005ac2	     0xf8370090000	                           jae 0x4006438	       588	dwarf2.c	FUNCTION_6	IF_1
0x4005ac8	    0xc78424880000	               mov dword [rsp + 0x88], 0	       589	dwarf2.c	FUNCTION_6	IF_1
0x4005ad3	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      3385	dwarf2.c	FUNCTION_46	CALL_7
0x4005ad7	          0x83e804	                              sub eax, 4	      3385	dwarf2.c	FUNCTION_46	CALL_7
0x4005ada	          0x83e0fb	                     and eax, 0xfffffffb	      3385	dwarf2.c	FUNCTION_46	CALL_7
0x4005add	     0xf856e090000	                           jne 0x4006451	      3385	dwarf2.c	FUNCTION_46	CALL_7
0x4005ae3	      0x837c242804	               cmp dword [rsp + 0x28], 4	      3386	dwarf2.c	FUNCTION_46	IF_4
0x4005ae8	     0xf84ae090000	                            je 0x400649c	      3386	dwarf2.c	FUNCTION_46	IF_4
0x4005aee	        0x498d4508	                      lea rax, [r13 + 8]	       620	dwarf2.c	FUNCTION_10	IF_1
0x4005af2	          0x4531d2	                          xor r10d, r10d	       621	dwarf2.c	FUNCTION_10	IF_1
0x4005af5	    0x483984249000	            cmp qword [rsp + 0x90], rax 	       620	dwarf2.c	FUNCTION_10	IF_1
0x4005afd	     0xf83f6090000	                           jae 0x40064f9	       620	dwarf2.c	FUNCTION_10	IF_1
0x4005b03	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      3390	dwarf2.c	FUNCTION_46
0x4005b07	    0x83bc24a40000	               cmp dword [rsp + 0xa4], 5	      3392	dwarf2.c	FUNCTION_46	IF_5
0x4005b0f	      0x498d740500	                    lea rsi, [r13 + rax]	      3390	dwarf2.c	FUNCTION_46
0x4005b14	    0x4889b424a800	             mov qword [rsp + 0xa8], rsi	      3390	dwarf2.c	FUNCTION_46
0x4005b1c	            0x7456	                            je 0x4005b74	      3392	dwarf2.c	FUNCTION_46	IF_5
0x4005b1e	        0x488d5601	                      lea rdx, [rsi + 1]	       588	dwarf2.c	FUNCTION_6	IF_1
0x4005b22	    0x483994249000	            cmp qword [rsp + 0x90], rdx 	       588	dwarf2.c	FUNCTION_6	IF_1
0x4005b2a	            0x7336	                           jae 0x4005b62	       588	dwarf2.c	FUNCTION_6	IF_1
0x4005b2c	          0x83fb02	                              cmp ebx, 2	      3398	dwarf2.c	FUNCTION_46	IF_6
0x4005b2f	     0xf843a090000	                            je 0x400646f	      3398	dwarf2.c	FUNCTION_46	IF_6
0x4005b35	    0xc78424880000	               mov dword [rsp + 0x88], 0	       589	dwarf2.c	FUNCTION_6	IF_1
0x4005b40	    0x8bb424880000	            mov esi, dword [rsp + 0x88] 	      3421	dwarf2.c	FUNCTION_46	IF_8	CALL_14
0x4005b47	      0xbf00000000	                              mov edi, 0	      3421	dwarf2.c	FUNCTION_46	IF_8	CALL_14
0x4005b4c	            0x31c0	                            xor eax, eax	      3421	dwarf2.c	FUNCTION_46	IF_8	CALL_14
0x4005b4e	      0xe800000000	                          call 0x4005b53	      3421	dwarf2.c	FUNCTION_46	IF_8	CALL_14
0x4005b53	      0xbf11000000	                           mov edi, 0x11	      3424	dwarf2.c	FUNCTION_46	IF_8	CALL_15
0x4005b58	      0xe800000000	                          call 0x4005b5d	      3424	dwarf2.c	FUNCTION_46	IF_8	CALL_15
0x4005b5d	      0xe906f9ffff	                           jmp 0x4005468	      3424	dwarf2.c	FUNCTION_46	IF_8	CALL_15
0x4005b62	           0xfb636	                   movzx esi, byte [rsi]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4005b65	    0x48899424a800	             mov qword [rsp + 0xa8], rdx	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4005b6d	    0x89b424880000	             mov dword [rsp + 0x88], esi	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4005b74	          0x83fb02	                              cmp ebx, 2	      3398	dwarf2.c	FUNCTION_46	IF_6
0x4005b77	     0xf8405090000	                            je 0x4006482	      3398	dwarf2.c	FUNCTION_46	IF_6
0x4005b7d	    0x83bc24880000	               cmp dword [rsp + 0x88], 8	      3407	dwarf2.c	FUNCTION_46	IF_7
0x4005b85	     0xf87830a0000	                            ja 0x400660e	      3407	dwarf2.c	FUNCTION_46	IF_7
0x4005b8b	    0x8bb424880000	            mov esi, dword [rsp + 0x88] 	      3419	dwarf2.c	FUNCTION_46	IF_8
0x4005b92	            0x89f0	                            mov eax, esi	      3419	dwarf2.c	FUNCTION_46	IF_8
0x4005b94	          0x83e802	                              sub eax, 2	      3419	dwarf2.c	FUNCTION_46	IF_8
0x4005b97	          0x83e0fd	                     and eax, 0xfffffffd	      3419	dwarf2.c	FUNCTION_46	IF_8
0x4005b9a	            0x7405	                            je 0x4005ba1	      3419	dwarf2.c	FUNCTION_46	IF_8
0x4005b9c	          0x83fe08	                              cmp esi, 8	      3419	dwarf2.c	FUNCTION_46	IF_8
0x4005b9f	            0x759f	                           jne 0x4005b40	      3419	dwarf2.c	FUNCTION_46	IF_8
0x4005ba1	      0x4c8b7c2478	            mov r15, qword [rsp + 0x78] 	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x4005ba6	        0x498b5678	            mov rdx, qword [r14 + 0x78] 	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x4005baa	    0x4d8d86800000	                    lea r8, [r14 + 0x80]	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x4005bb1	        0x498b7610	            mov rsi, qword [r14 + 0x10] 	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x4005bb5	    0x4c8b8c24b800	              mov r9, qword [rsp + 0xb8]	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x4005bbd	          0x4c89d1	                            mov rcx, r10	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x4005bc0	      0x4c89542430	             mov qword [rsp + 0x30], r10	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x4005bc5	          0x4c89ff	                            mov rdi, r15	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x4005bc8	      0xe873a4ffff	                   call sym.read_section	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x4005bcd	            0x85c0	                           test eax, eax	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x4005bcf	     0xf8493f8ffff	                            je 0x4005468	       954	dwarf2.c	ELSE_1	FUNCTION_19	IF_1	CALL_1
0x4005bd5	      0x4c8b542430	            mov r10, qword [rsp + 0x30] 	       959	dwarf2.c	ELSE_1	FUNCTION_19	IF_2
0x4005bda	    0x4d3b96880000	            cmp r10, qword [r14 + 0x88] 	       959	dwarf2.c	ELSE_1	FUNCTION_19	IF_2
0x4005be1	     0xf8381f8ffff	                           jae 0x4005468	       959	dwarf2.c	ELSE_1	FUNCTION_19	IF_2
0x4005be7	      0xbec8030000	                          mov esi, 0x3c8	       963	dwarf2.c	ELSE_1	FUNCTION_19	CALL_2
0x4005bec	          0x4c89ff	                            mov rdi, r15	       963	dwarf2.c	ELSE_1	FUNCTION_19	CALL_2
0x4005bef	      0xe800000000	                          call 0x4005bf4	       963	dwarf2.c	ELSE_1	FUNCTION_19	CALL_2
0x4005bf4	          0x4885c0	                           test rax, rax	       964	dwarf2.c	ELSE_1	FUNCTION_19	IF_3
0x4005bf7	    0x48898424b000	             mov qword [rsp + 0xb0], rax	       963	dwarf2.c	ELSE_1	FUNCTION_19	CALL_2
0x4005bff	     0xf8463f8ffff	                            je 0x4005468	       964	dwarf2.c	ELSE_1	FUNCTION_19	IF_3
0x4005c05	    0x4d8bae800000	            mov r13, qword [r14 + 0x80] 	       967	dwarf2.c	ELSE_1	FUNCTION_19
0x4005c0c	      0x4c8b542430	            mov r10, qword [rsp + 0x30] 	       967	dwarf2.c	ELSE_1	FUNCTION_19
0x4005c11	    0x488d9424f000	                   lea rdx, [rsp + 0xf0]	       969	dwarf2.c	ELSE_1	FUNCTION_19	CALL_3
0x4005c19	            0x31c9	                            xor ecx, ecx	       969	dwarf2.c	ELSE_1	FUNCTION_19	CALL_3
0x4005c1b	          0x4c89ff	                            mov rdi, r15	       969	dwarf2.c	ELSE_1	FUNCTION_19	CALL_3
0x4005c1e	      0x4b8d5c1500	                    lea rbx, [r13 + r10]	       967	dwarf2.c	ELSE_1	FUNCTION_19
0x4005c23	    0x4d03ae880000	             add r13, qword [r14 + 0x88]	       968	dwarf2.c	ELSE_1	FUNCTION_19
0x4005c2a	          0x4889de	                            mov rsi, rbx	       969	dwarf2.c	ELSE_1	FUNCTION_19	CALL_3
0x4005c2d	          0x4d89e8	                             mov r8, r13	       969	dwarf2.c	ELSE_1	FUNCTION_19	CALL_3
0x4005c30	      0xe800000000	                          call 0x4005c35	       969	dwarf2.c	ELSE_1	FUNCTION_19	CALL_3
0x4005c35	    0x8b9424f00000	            mov edx, dword [rsp + 0xf0] 	       971	dwarf2.c	ELSE_1	FUNCTION_19
0x4005c3c	    0x898424800000	             mov dword [rsp + 0x80], eax	       969	dwarf2.c	ELSE_1	FUNCTION_19	CALL_3
0x4005c43	          0x4801d3	                            add rbx, rdx	       971	dwarf2.c	ELSE_1	FUNCTION_19
0x4005c46	            0x85c0	                           test eax, eax	       974	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005c48	     0xf844f020000	                            je 0x4005e9d	       974	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005c4e	    0x4c89a424c000	             mov qword [rsp + 0xc0], r12	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005c56	    0x4c89b4249800	             mov qword [rsp + 0x98], r14	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005c5e	    0x4889ac24c800	             mov qword [rsp + 0xc8], rbp	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005c66	      0x4c8b7c2478	            mov r15, qword [rsp + 0x78] 	       977	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_4
0x4005c6b	      0xbe20000000	                           mov esi, 0x20	       977	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_4
0x4005c70	          0x4c89ff	                            mov rdi, r15	       977	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_4
0x4005c73	      0xe800000000	                          call 0x4005c78	       977	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_4
0x4005c78	          0x4885c0	                           test rax, rax	       978	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_4
0x4005c7b	          0x4889c5	                            mov rbp, rax	       977	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_4
0x4005c7e	     0xf847d090000	                            je 0x4006601	       978	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_4
0x4005c84	    0x8b8424800000	            mov eax, dword [rsp + 0x80] 	       982	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005c8b	    0x488d9424f000	                   lea rdx, [rsp + 0xf0]	       984	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_5
0x4005c93	            0x31c9	                            xor ecx, ecx	       984	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_5
0x4005c95	          0x4889de	                            mov rsi, rbx	       984	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_5
0x4005c98	          0x4d89e8	                             mov r8, r13	       984	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_5
0x4005c9b	          0x4c89ff	                            mov rdi, r15	       984	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_5
0x4005c9e	          0x894500	                    mov dword [rbp], eax	       982	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005ca1	      0xe800000000	                          call 0x4005ca6	       984	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_5
0x4005ca6	          0x894504	                mov dword [rbp + 4], eax	       983	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005ca9	    0x8b8424f00000	            mov eax, dword [rsp + 0xf0] 	       986	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005cb0	            0x31d2	                            xor edx, edx	       588	dwarf2.c	FUNCTION_6	IF_1
0x4005cb2	          0x4801d8	                            add rax, rbx	       986	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005cb5	        0x488d5801	                      lea rbx, [rax + 1]	       588	dwarf2.c	FUNCTION_6	IF_1
0x4005cb9	          0x4939dd	                            cmp r13, rbx	       588	dwarf2.c	FUNCTION_6	IF_1
0x4005cbc	            0x7203	                            jb 0x4005cc1	       588	dwarf2.c	FUNCTION_6	IF_1
0x4005cbe	           0xfb610	                   movzx edx, byte [rax]	       588	dwarf2.c	FUNCTION_6	IF_1
0x4005cc1	          0x895508	                mov dword [rbp + 8], edx	       987	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_6
0x4005cc4	      0x4c8b642478	            mov r12, qword [rsp + 0x78] 	       987	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_6
0x4005cc9	            0xeb24	                           jmp 0x4005cef	       987	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_6
0x4005ccb	       0xf1f440000	                   nop dword [rax + rax]	       987	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_6
0x4005cd0	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	       987	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_6
0x4005cd4	            0x89c8	                            mov eax, ecx	      1039	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4005cd6	          0x83c101	                              add ecx, 1	      1045	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4005cd9	        0x48c1e004	                              shl rax, 4	      1039	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4005cdd	        0x488d0406	                    lea rax, [rsi + rax]	      1039	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4005ce1	          0x448938	                   mov dword [rax], r15d	      1040	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4005ce4	        0x44897004	               mov dword [rax + 4], r14d	      1042	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4005ce8	        0x4c894008	                 mov qword [rax + 8], r8	      1044	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4005cec	          0x894d0c	              mov dword [rbp + 0xc], ecx	      1045	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4005cef	    0x488d9424f000	                   lea rdx, [rsp + 0xf0]	       996	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_7
0x4005cf7	            0x31c9	                            xor ecx, ecx	       996	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_7
0x4005cf9	          0x4889de	                            mov rsi, rbx	       996	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_7
0x4005cfc	          0x4d89e8	                             mov r8, r13	       996	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_7
0x4005cff	          0x4c89e7	                            mov rdi, r12	       996	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_7
0x4005d02	      0xe800000000	                          call 0x4005d07	       996	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_7
0x4005d07	          0x4989c7	                            mov r15, rax	       996	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_7
0x4005d0a	    0x8b8424f00000	            mov eax, dword [rsp + 0xf0] 	       998	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4005d11	    0x488d9424f000	                   lea rdx, [rsp + 0xf0]	       999	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_8
0x4005d19	          0x4d89e8	                             mov r8, r13	       999	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_8
0x4005d1c	            0x31c9	                            xor ecx, ecx	       999	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_8
0x4005d1e	          0x4c89e7	                            mov rdi, r12	       999	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_8
0x4005d21	          0x4801c3	                            add rbx, rax	       998	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4005d24	          0x4889de	                            mov rsi, rbx	       999	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_8
0x4005d27	      0xe800000000	                          call 0x4005d2c	       999	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_8
0x4005d2c	          0x4989c6	                            mov r14, rax	       999	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	CALL_8
0x4005d2f	    0x8b8424f00000	            mov eax, dword [rsp + 0xf0] 	      1001	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4005d36	    0x49c7c0ffffff	              mov r8, 0xffffffffffffffff	       994	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4005d3d	          0x4801c3	                            add rbx, rax	      1001	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1
0x4005d40	        0x4183fe21	                          cmp r14d, 0x21	      1002	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5
0x4005d44	            0x744a	                            je 0x4005d90	      1002	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5
0x4005d46	          0x4585ff	                         test r15d, r15d	      1010	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_6
0x4005d49	            0x7472	                            je 0x4005dbd	      1010	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_6
0x4005d4b	          0x8b4d0c	              mov ecx, dword [rbp + 0xc]	      1013	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x4005d4e	          0xf6c103	                              test cl, 3	      1013	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x4005d51	     0xf8579ffffff	                           jne 0x4005cd0	      1013	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x4005d57	          0x8d7104	                      lea esi, [rcx + 4]	      1017	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x4005d5a	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	      1019	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	CALL_10
0x4005d5e	      0x4c89442430	              mov qword [rsp + 0x30], r8	      1019	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	CALL_10
0x4005d63	        0x48c1e604	                              shl rsi, 4	      1019	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	CALL_10
0x4005d67	      0xe800000000	                          call 0x4005d6c	      1019	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	CALL_10
0x4005d6c	          0x4885c0	                           test rax, rax	      1020	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8
0x4005d6f	      0x4c8b442430	              mov r8, qword [rsp + 0x30]	      1020	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8
0x4005d74	     0xf8427060000	                            je 0x40063a1	      1020	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8
0x4005d7a	        0x48894510	            mov qword [rbp + 0x10], rax 	      1036	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x4005d7e	          0x8b4d0c	              mov ecx, dword [rbp + 0xc]	      1036	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x4005d81	          0x4889c6	                            mov rsi, rax	      1036	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x4005d84	      0xe94bffffff	                           jmp 0x4005cd4	      1036	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x4005d89	     0xf1f80000000	                         nop dword [rax]	      1036	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7
0x4005d90	    0x488d9424f000	                   lea rdx, [rsp + 0xf0]	      1004	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5	CALL_9
0x4005d98	          0x4d89e8	                             mov r8, r13	      1004	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5	CALL_9
0x4005d9b	          0x4889de	                            mov rsi, rbx	      1004	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5	CALL_9
0x4005d9e	      0xb901000000	                              mov ecx, 1	      1004	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5	CALL_9
0x4005da3	          0x4c89e7	                            mov rdi, r12	      1004	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5	CALL_9
0x4005da6	      0xe800000000	                          call 0x4005dab	      1004	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5	CALL_9
0x4005dab	          0x4989c0	                             mov r8, rax	      1004	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5	CALL_9
0x4005dae	    0x8b8424f00000	            mov eax, dword [rsp + 0xf0] 	      1007	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5
0x4005db5	          0x4801c3	                            add rbx, rax	      1007	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_5
0x4005db8	          0x4585ff	                         test r15d, r15d	      1010	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_6
0x4005dbb	            0x758e	                           jne 0x4005d4b	      1010	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_6
0x4005dbd	    0x8bb424800000	            mov esi, dword [rsp + 0x80] 	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005dc4	      0xb8bf56cf0e	                      mov eax, 0xecf56bf	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005dc9	    0x4c8bb424b000	            mov r14, qword [rsp + 0xb0] 	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005dd1	            0xf7e6	                                 mul esi	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005dd3	            0x89f0	                            mov eax, esi	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005dd5	          0x4189f7	                           mov r15d, esi	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005dd8	    0x488bb4249800	            mov rsi, qword [rsp + 0x98] 	      1059	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_9
0x4005de0	            0x29d0	                            sub eax, edx	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005de2	            0xd1e8	                              shr eax, 1	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005de4	             0x1d0	                            add eax, edx	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005de6	          0xc1e806	                              shr eax, 6	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005de9	          0x6bc079	                     imul eax, eax, 0x79	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005dec	          0x4129c7	                           sub r15d, eax	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005def	        0x4b8d04fe	                  lea rax, [r14 + r15*8]	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005df3	          0x488b10	                    mov rdx, qword [rax]	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005df6	        0x48895518	            mov qword [rbp + 0x18], rdx 	      1049	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005dfa	          0x488928	                    mov qword [rax], rbp	      1050	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005dfd	            0x89d8	                            mov eax, ebx	      1059	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_9
0x4005dff	    0x2b8680000000	             sub eax, dword [rsi + 0x80]	      1059	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_9
0x4005e05	    0x483b86880000	            cmp rax, qword [rsi + 0x88] 	      1059	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_9
0x4005e0c	            0x7377	                           jae 0x4005e85	      1059	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	IF_9
0x4005e0e	      0x488b7c2478	            mov rdi, qword [rsp + 0x78] 	      1062	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_12
0x4005e13	    0x488d9424f000	                   lea rdx, [rsp + 0xf0]	      1062	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_12
0x4005e1b	            0x31c9	                            xor ecx, ecx	      1062	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_12
0x4005e1d	          0x4889de	                            mov rsi, rbx	      1062	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_12
0x4005e20	          0x4d89e8	                             mov r8, r13	      1062	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_12
0x4005e23	      0xe800000000	                          call 0x4005e28	      1062	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_12
0x4005e28	          0x4889c1	                            mov rcx, rax	      1062	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_12
0x4005e2b	    0x898424800000	             mov dword [rsp + 0x80], eax	      1062	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	CALL_12
0x4005e32	    0x8b8424f00000	            mov eax, dword [rsp + 0xf0] 	      1064	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005e39	            0x89ce	                            mov esi, ecx	       925	dwarf2.c	FUNCTION_18
0x4005e3b	          0x4801c3	                            add rbx, rax	      1064	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005e3e	      0xb8bf56cf0e	                      mov eax, 0xecf56bf	       925	dwarf2.c	FUNCTION_18
0x4005e43	            0xf7e1	                                 mul ecx	       925	dwarf2.c	FUNCTION_18
0x4005e45	            0x89c8	                            mov eax, ecx	       925	dwarf2.c	FUNCTION_18
0x4005e47	            0x29d0	                            sub eax, edx	       925	dwarf2.c	FUNCTION_18
0x4005e49	            0xd1e8	                              shr eax, 1	       925	dwarf2.c	FUNCTION_18
0x4005e4b	             0x1d0	                            add eax, edx	       925	dwarf2.c	FUNCTION_18
0x4005e4d	          0xc1e806	                              shr eax, 6	       925	dwarf2.c	FUNCTION_18
0x4005e50	          0x6bc079	                     imul eax, eax, 0x79	       925	dwarf2.c	FUNCTION_18
0x4005e53	            0x29c6	                            sub esi, eax	       925	dwarf2.c	FUNCTION_18
0x4005e55	          0x4889f0	                            mov rax, rsi	       925	dwarf2.c	FUNCTION_18
0x4005e58	        0x498b04c6	            mov rax, qword [r14 + rax*8]	       925	dwarf2.c	FUNCTION_18
0x4005e5c	          0x4885c0	                           test rax, rax	       927	dwarf2.c	FUNCTION_18	WHILE_1
0x4005e5f	            0x741c	                            je 0x4005e7d	       927	dwarf2.c	FUNCTION_18	WHILE_1
0x4005e61	            0x3908	                    cmp dword [rax], ecx	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x4005e63	            0x7420	                            je 0x4005e85	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x4005e65	    0x8b9424800000	            mov edx, dword [rsp + 0x80] 	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x4005e6c	            0xeb06	                           jmp 0x4005e74	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x4005e6e	            0x6690	                                     nop	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x4005e70	            0x3b10	                    cmp edx, dword [rax]	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x4005e72	            0x7411	                            je 0x4005e85	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x4005e74	        0x488b4018	            mov rax, qword [rax + 0x18] 	       932	dwarf2.c	FUNCTION_18	WHILE_1	ELSE_1
0x4005e78	          0x4885c0	                           test rax, rax	       927	dwarf2.c	FUNCTION_18	WHILE_1
0x4005e7b	            0x75f3	                           jne 0x4005e70	       927	dwarf2.c	FUNCTION_18	WHILE_1
0x4005e7d	            0x85c9	                           test ecx, ecx	       974	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005e7f	     0xf85e1fdffff	                           jne 0x4005c66	       974	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005e85	    0x4c8ba424c000	            mov r12, qword [rsp + 0xc0] 	       974	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005e8d	    0x4c8bb4249800	            mov r14, qword [rsp + 0x98] 	       974	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005e95	    0x488bac24c800	            mov rbp, qword [rsp + 0xc8] 	       974	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1
0x4005e9d	    0x488b9c24a800	            mov rbx, qword [rsp + 0xa8] 	      3433	dwarf2.c	FUNCTION_46	CALL_17
0x4005ea5	    0x4c8b84249000	              mov r8, qword [rsp + 0x90]	      3433	dwarf2.c	FUNCTION_46	CALL_17
0x4005ead	    0x488d9424e800	                   lea rdx, [rsp + 0xe8]	      3433	dwarf2.c	FUNCTION_46	CALL_17
0x4005eb5	      0x488b7c2478	            mov rdi, qword [rsp + 0x78] 	      3433	dwarf2.c	FUNCTION_46	CALL_17
0x4005eba	            0x31c9	                            xor ecx, ecx	      3433	dwarf2.c	FUNCTION_46	CALL_17
0x4005ebc	          0x4889de	                            mov rsi, rbx	      3433	dwarf2.c	FUNCTION_46	CALL_17
0x4005ebf	      0xe800000000	                          call 0x4005ec4	      3433	dwarf2.c	FUNCTION_46	CALL_17
0x4005ec4	    0x448b8424e800	            mov r8d, dword [rsp + 0xe8] 	      3435	dwarf2.c	FUNCTION_46
0x4005ecc	          0x4889c1	                            mov rcx, rax	      3433	dwarf2.c	FUNCTION_46	CALL_17
0x4005ecf	          0x4189c5	                           mov r13d, eax	      3433	dwarf2.c	FUNCTION_46	CALL_17
0x4005ed2	          0x4901d8	                             add r8, rbx	      3435	dwarf2.c	FUNCTION_46
0x4005ed5	            0x85c9	                           test ecx, ecx	      3436	dwarf2.c	FUNCTION_46	IF_10
0x4005ed7	     0xf848bf5ffff	                            je 0x4005468	      3436	dwarf2.c	FUNCTION_46	IF_10
0x4005edd	            0x89c8	                            mov eax, ecx	       925	dwarf2.c	FUNCTION_18
0x4005edf	      0xbabf56cf0e	                      mov edx, 0xecf56bf	       925	dwarf2.c	FUNCTION_18
0x4005ee4	            0x89ce	                            mov esi, ecx	       925	dwarf2.c	FUNCTION_18
0x4005ee6	            0xf7e2	                                 mul edx	       925	dwarf2.c	FUNCTION_18
0x4005ee8	            0x89c8	                            mov eax, ecx	       925	dwarf2.c	FUNCTION_18
0x4005eea	            0x29d0	                            sub eax, edx	       925	dwarf2.c	FUNCTION_18
0x4005eec	            0xd1e8	                              shr eax, 1	       925	dwarf2.c	FUNCTION_18
0x4005eee	             0x1d0	                            add eax, edx	       925	dwarf2.c	FUNCTION_18
0x4005ef0	          0xc1e806	                              shr eax, 6	       925	dwarf2.c	FUNCTION_18
0x4005ef3	          0x6bc079	                     imul eax, eax, 0x79	       925	dwarf2.c	FUNCTION_18
0x4005ef6	            0x29c6	                            sub esi, eax	       925	dwarf2.c	FUNCTION_18
0x4005ef8	          0x4889f0	                            mov rax, rsi	       925	dwarf2.c	FUNCTION_18
0x4005efb	    0x488bb424b000	            mov rsi, qword [rsp + 0xb0] 	       925	dwarf2.c	FUNCTION_18
0x4005f03	        0x488b1cc6	            mov rbx, qword [rsi + rax*8]	       925	dwarf2.c	FUNCTION_18
0x4005f07	          0x4885db	                           test rbx, rbx	       927	dwarf2.c	FUNCTION_18	WHILE_1
0x4005f0a	            0x741a	                            je 0x4005f26	       927	dwarf2.c	FUNCTION_18	WHILE_1
0x4005f0c	            0x390b	                    cmp dword [rbx], ecx	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x4005f0e	            0x750d	                           jne 0x4005f1d	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x4005f10	            0xeb44	                           jmp 0x4005f56	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x4005f12	    0x660f1f440000	                    nop word [rax + rax]	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x4005f18	          0x443b2b	                   cmp r13d, dword [rbx]	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x4005f1b	            0x7439	                            je 0x4005f56	       929	dwarf2.c	FUNCTION_18	WHILE_1	IF_1
0x4005f1d	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	       932	dwarf2.c	FUNCTION_18	WHILE_1	ELSE_1
0x4005f21	          0x4885db	                           test rbx, rbx	       927	dwarf2.c	FUNCTION_18	WHILE_1
0x4005f24	            0x75f2	                           jne 0x4005f18	       927	dwarf2.c	FUNCTION_18	WHILE_1
0x4005f26	      0xbe00000000	                              mov esi, 0	      3448	dwarf2.c	FUNCTION_46	IF_11	CALL_20
0x4005f2b	      0xba05000000	                              mov edx, 5	      3448	dwarf2.c	FUNCTION_46	IF_11	CALL_20
0x4005f30	      0xbf00000000	                              mov edi, 0	      3448	dwarf2.c	FUNCTION_46	IF_11	CALL_20
0x4005f35	      0xe800000000	                          call 0x4005f3a	      3448	dwarf2.c	FUNCTION_46	IF_11	CALL_20
0x4005f3a	          0x4489ee	                           mov esi, r13d	      3448	dwarf2.c	FUNCTION_46	IF_11	CALL_20
0x4005f3d	          0x4889c7	                            mov rdi, rax	      3448	dwarf2.c	FUNCTION_46	IF_11	CALL_20
0x4005f40	            0x31c0	                            xor eax, eax	      3448	dwarf2.c	FUNCTION_46	IF_11	CALL_20
0x4005f42	      0xe800000000	                          call 0x4005f47	      3448	dwarf2.c	FUNCTION_46	IF_11	CALL_20
0x4005f47	      0xbf11000000	                           mov edi, 0x11	      3450	dwarf2.c	FUNCTION_46	IF_11	CALL_21
0x4005f4c	      0xe800000000	                          call 0x4005f51	      3450	dwarf2.c	FUNCTION_46	IF_11	CALL_21
0x4005f51	      0xe912f5ffff	                           jmp 0x4005468	      3450	dwarf2.c	FUNCTION_46	IF_11	CALL_21
0x4005f56	      0x488b7c2478	            mov rdi, qword [rsp + 0x78] 	      3455	dwarf2.c	FUNCTION_46	CALL_22
0x4005f5b	      0xbec0000000	                           mov esi, 0xc0	      3455	dwarf2.c	FUNCTION_46	CALL_22
0x4005f60	      0x4c89442430	              mov qword [rsp + 0x30], r8	      3455	dwarf2.c	FUNCTION_46	CALL_22
0x4005f65	      0xe800000000	                          call 0x4005f6a	      3455	dwarf2.c	FUNCTION_46	CALL_22
0x4005f6a	          0x4885c0	                           test rax, rax	      3456	dwarf2.c	FUNCTION_46	IF_12
0x4005f6d	          0x4989c5	                            mov r13, rax	      3455	dwarf2.c	FUNCTION_46	CALL_22
0x4005f70	      0x4c8b442430	              mov r8, qword [rsp + 0x30]	      3456	dwarf2.c	FUNCTION_46	IF_12
0x4005f75	     0xf84edf4ffff	                            je 0x4005468	      3456	dwarf2.c	FUNCTION_46	IF_12
0x4005f7b	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      3458	dwarf2.c	FUNCTION_46
0x4005f80	        0x49896d58	             mov qword [r13 + 0x58], rbp	      3465	dwarf2.c	FUNCTION_46
0x4005f84	    0x4d89b5a00000	             mov qword [r13 + 0xa0], r14	      3464	dwarf2.c	FUNCTION_46
0x4005f8b	        0x49894510	             mov qword [r13 + 0x10], rax	      3458	dwarf2.c	FUNCTION_46
0x4005f8f	    0x8b8424a40000	            mov eax, dword [rsp + 0xa4] 	      3459	dwarf2.c	FUNCTION_46
0x4005f96	    0x418985a80000	             mov dword [r13 + 0xa8], eax	      3459	dwarf2.c	FUNCTION_46
0x4005f9d	     0xfb684248800	           movzx eax, byte [rsp + 0x88] 	      3460	dwarf2.c	FUNCTION_46
0x4005fa5	    0x418885ac0000	               mov byte [r13 + 0xac], al	      3460	dwarf2.c	FUNCTION_46
0x4005fac	       0xfb6442428	           movzx eax, byte [rsp + 0x28] 	      3461	dwarf2.c	FUNCTION_46
0x4005fb1	    0x418885ad0000	               mov byte [r13 + 0xad], al	      3461	dwarf2.c	FUNCTION_46
0x4005fb8	    0x488b8424b000	            mov rax, qword [rsp + 0xb0] 	      3462	dwarf2.c	FUNCTION_46
0x4005fc0	          0x8b6b0c	              mov ebp, dword [rbx + 0xc]	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x4005fc3	        0x49894538	             mov qword [r13 + 0x38], rax	      3462	dwarf2.c	FUNCTION_46
0x4005fc7	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	      3463	dwarf2.c	FUNCTION_46
0x4005fcf	            0x85ed	                           test ebp, ebp	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x4005fd1	        0x49894570	             mov qword [r13 + 0x70], rax	      3463	dwarf2.c	FUNCTION_46
0x4005fd5	     0xf8441010000	                            je 0x400611c	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x4005fdb	        0x498d7518	                   lea rsi, [r13 + 0x18]	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4005fdf	            0x31ed	                            xor ebp, ebp	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x4005fe1	    0x4c89a4249000	             mov qword [rsp + 0x90], r12	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4005fe9	          0x4531ff	                          xor r15d, r15d	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x4005fec	          0x4189ec	                           mov r12d, ebp	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4005fef	    0x48c744242800	               mov qword [rsp + 0x28], 0	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x4005ff8	    0xc74424300000	               mov dword [rsp + 0x30], 0	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x4006000	    0x4889b4248800	             mov qword [rsp + 0x88], rsi	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4006008	          0x4889c5	                            mov rbp, rax	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x400600b	      0x4c89742478	             mov qword [rsp + 0x78], r14	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4006010	            0xeb48	                           jmp 0x400605a	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4006012	    0x660f1f440000	                    nop word [rax + rax]	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4006018	          0x83f810	                           cmp eax, 0x10	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x400601b	     0xf84ca010000	                            je 0x40061eb	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4006021	     0xf87a1010000	                            ja 0x40061c8	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4006027	          0x83f803	                              cmp eax, 3	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x400602a	            0x7524	                           jne 0x4006050	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x400602c	    0x8b8424f40000	            mov eax, dword [rsp + 0xf4] 	      3483	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_14	CALL_24
0x4006033	          0x83f81f	                           cmp eax, 0x1f	      1077	dwarf2.c	FUNCTION_20
0x4006036	     0xf86e6010000	                           jbe 0x4006222	      1077	dwarf2.c	FUNCTION_20
0x400603c	      0x3d211f0000	                         cmp eax, 0x1f21	      1078	dwarf2.c	FUNCTION_20
0x4006041	     0xf84ea010000	                            je 0x4006231	      1078	dwarf2.c	FUNCTION_20
0x4006047	    0x660f1f840000	                    nop word [rax + rax]	      1078	dwarf2.c	FUNCTION_20
0x4006050	        0x4183c401	                             add r12d, 1	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x4006054	        0x443b630c	            cmp r12d, dword [rbx + 0xc] 	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x4006058	            0x7375	                           jae 0x40060cf	      3467	dwarf2.c	FUNCTION_46	FOR_1
0x400605a	          0x4489e0	                           mov eax, r12d	      3469	dwarf2.c	FUNCTION_46	FOR_1	CALL_23
0x400605d	    0x488dbc24f000	                   lea rdi, [rsp + 0xf0]	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4006065	          0x4989e9	                             mov r9, rbp	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4006068	        0x48c1e004	                              shl rax, 4	      3469	dwarf2.c	FUNCTION_46	FOR_1	CALL_23
0x400606c	        0x48034310	             add rax, qword [rbx + 0x10]	      3469	dwarf2.c	FUNCTION_46	FOR_1	CALL_23
0x4006070	          0x4c89e9	                            mov rcx, r13	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4006073	            0x8b10	                    mov edx, dword [rax]	      1285	dwarf2.c	FUNCTION_22
0x4006075	          0x8b7004	                mov esi, dword [rax + 4]	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4006078	    0x899424f00000	             mov dword [rsp + 0xf0], edx	      1285	dwarf2.c	FUNCTION_22
0x400607f	        0x488b5008	                mov rdx, qword [rax + 8]	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4006083	      0xe828afffff	           call sym.read_attribute_value	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x4006088	          0x4885c0	                           test rax, rax	      3470	dwarf2.c	FUNCTION_46	FOR_1	IF_13
0x400608b	          0x4989c0	                             mov r8, rax	      1286	dwarf2.c	FUNCTION_22	CALL_1
0x400608e	     0xf84de010000	                            je 0x4006272	      3470	dwarf2.c	FUNCTION_46	FOR_1	IF_13
0x4006094	    0x8b8424f00000	            mov eax, dword [rsp + 0xf0] 	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x400609b	          0x83f812	                           cmp eax, 0x12	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x400609e	     0xf8460010000	                            je 0x4006204	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40060a4	     0xf866effffff	                           jbe 0x4006018	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40060aa	          0x83f81b	                           cmp eax, 0x1b	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40060ad	     0xf84c9010000	                            je 0x400627c	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40060b3	          0x83f855	                           cmp eax, 0x55	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40060b6	     0xf8486010000	                            je 0x4006242	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40060bc	          0x83f813	                           cmp eax, 0x13	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40060bf	            0x758f	                           jne 0x4006050	      3475	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40060c1	    0x488b8424f800	            mov rax, qword [rsp + 0xf8] 	      3532	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40060c9	        0x41894540	             mov dword [r13 + 0x40], eax	      3532	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40060cd	            0xeb81	                           jmp 0x4006050	      3532	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40060cf	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      3540	dwarf2.c	FUNCTION_46	IF_20
0x40060d4	      0x448b5c2430	           mov r11d, dword [rsp + 0x30] 	      3540	dwarf2.c	FUNCTION_46	IF_20
0x40060d9	    0x4c8ba4249000	            mov r12, qword [rsp + 0x90] 	      3540	dwarf2.c	FUNCTION_46	IF_20
0x40060e1	      0x4c8b742478	            mov r14, qword [rsp + 0x78] 	      3540	dwarf2.c	FUNCTION_46	IF_20
0x40060e6	          0x4c01f8	                            add rax, r15	      3540	dwarf2.c	FUNCTION_46	IF_20
0x40060e9	          0x4585db	                         test r11d, r11d	      3540	dwarf2.c	FUNCTION_46	IF_20
0x40060ec	        0x4c0f45f8	                         cmovne r15, rax	      3540	dwarf2.c	FUNCTION_46	IF_20
0x40060f0	          0x4d85ff	                           test r15, r15	      3541	dwarf2.c	FUNCTION_46	IF_21
0x40060f3	            0x7427	                            je 0x400611c	      3541	dwarf2.c	FUNCTION_46	IF_21
0x40060f5	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      3543	dwarf2.c	FUNCTION_46	IF_21	IF_22	CALL_30
0x40060fa	        0x498d7518	                   lea rsi, [r13 + 0x18]	      3543	dwarf2.c	FUNCTION_46	IF_21	IF_22	CALL_30
0x40060fe	        0x498d7d10	                   lea rdi, [r13 + 0x10]	      3543	dwarf2.c	FUNCTION_46	IF_21	IF_22	CALL_30
0x4006102	          0x4c89f9	                            mov rcx, r15	      3543	dwarf2.c	FUNCTION_46	IF_21	IF_22	CALL_30
0x4006105	      0x4c89442430	              mov qword [rsp + 0x30], r8	      3543	dwarf2.c	FUNCTION_46	IF_21	IF_22	CALL_30
0x400610a	      0xe871acffff	             call sym.arange_add.isra.23	      3543	dwarf2.c	FUNCTION_46	IF_21	IF_22	CALL_30
0x400610f	            0x85c0	                           test eax, eax	      3543	dwarf2.c	FUNCTION_46	IF_21	IF_22	CALL_30
0x4006111	      0x4c8b442430	              mov r8, qword [rsp + 0x30]	      3543	dwarf2.c	FUNCTION_46	IF_21	IF_22	CALL_30
0x4006116	     0xf844cf3ffff	                            je 0x4005468	      3543	dwarf2.c	FUNCTION_46	IF_21	IF_22	CALL_30
0x400611c	        0x4d036618	             add r12, qword [r14 + 0x18]	      4774	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_31
0x4006120	        0x4d894568	              mov qword [r13 + 0x68], r8	      3547	dwarf2.c	FUNCTION_46
0x4006124	     0xf82ba040000	                            jb 0x40065e4	      4774	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_31
0x400612a	          0x498b06	                    mov rax, qword [r14]	      4783	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_32
0x400612d	        0x4d896618	             mov qword [r14 + 0x18], r12	      4781	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_8
0x4006131	          0x4885c0	                           test rax, rax	      4783	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_32
0x4006134	     0xf848a030000	                            je 0x40064c4	      4783	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_32
0x400613a	        0x4c896808	                mov qword [rax + 8], r13	      4784	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_32
0x400613e	    0x448b9424a000	           mov r10d, dword [rsp + 0xa0] 	      4796	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33
0x4006146	        0x49894500	                    mov qword [r13], rax	      4788	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28
0x400614a	          0x4d892e	                    mov qword [r14], r13	      4789	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28
0x400614d	          0x4585d2	                         test r10d, r10d	      4796	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33
0x4006150	     0xf84c6010000	                            je 0x400631c	      4796	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33
0x4006156	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x400615b	        0xf6401808	               test byte [rax + 0x18], 8	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x400615f	            0x740b	                            je 0x400616c	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4006161	      0x49837d2800	               cmp qword [r13 + 0x28], 0	      4798	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33
0x4006166	     0xf8597020000	                           jne 0x4006403	      4798	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33
0x400616c	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4006171	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4006176	          0x4d89f1	                             mov r9, r14	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4006179	      0x488b542470	            mov rdx, qword [rsp + 0x70] 	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x400617e	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4006183	          0x4c89ef	                            mov rdi, r13	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4006186	      0xe8c5dcffff	            call sym.comp_unit_find_line	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x400618b	            0x85c0	                           test eax, eax	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x400618d	           0xf95c0	                                setne al	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4006190	           0xfb6c0	                           movzx eax, al	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4006193	        0x8944245c	             mov dword [rsp + 0x5c], eax	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4006197	        0x498b6e18	            mov rbp, qword [r14 + 0x18] 	      4814	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x400619b	        0x498b5638	            mov rdx, qword [r14 + 0x38] 	      4815	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x400619f	          0x4889e8	                            mov rax, rbp	      4814	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x40061a2	        0x492b4640	             sub rax, qword [r14 + 0x40]	      4814	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x40061a6	        0x483b4238	            cmp rax, qword [rdx + 0x38] 	      4814	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x40061aa	     0xf841d030000	                            je 0x40064cd	      4814	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x40061b0	        0x8b4c245c	            mov ecx, dword [rsp + 0x5c] 	      4822	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_35
0x40061b4	            0x85c9	                           test ecx, ecx	      4822	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_35
0x40061b6	     0xf841bf5ffff	                            je 0x40056d7	      4822	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_35
0x40061bc	      0xe977f4ffff	                           jmp 0x4005638	      4822	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_35
0x40061c1	     0xf1f80000000	                         nop dword [rax]	      4822	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_35
0x40061c8	        0x837b0411	               cmp dword [rbx + 4], 0x11	      3492	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_15
0x40061cc	    0x488b8424f800	            mov rax, qword [rsp + 0xf8] 	      3488	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40061d4	      0x4889442428	             mov qword [rsp + 0x28], rax	      3488	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40061d9	     0xf8571feffff	                           jne 0x4006050	      3492	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_15
0x40061df	    0x498985b00000	             mov qword [r13 + 0xb0], rax	      3493	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_15
0x40061e6	      0xe965feffff	                           jmp 0x4006050	      3493	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_15
0x40061eb	    0x41c745500100	               mov dword [r13 + 0x50], 1	      3478	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40061f3	    0x488b8424f800	            mov rax, qword [rsp + 0xf8] 	      3479	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40061fb	        0x49894560	             mov qword [r13 + 0x60], rax	      3479	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40061ff	      0xe94cfeffff	                           jmp 0x4006050	      3479	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4006204	            0x31c0	                            xor eax, eax	      3498	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4006206	    0x83bc24f40000	               cmp dword [rsp + 0xf4], 1	      3498	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x400620e	    0x4c8bbc24f800	            mov r15, qword [rsp + 0xf8] 	      3497	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4006216	           0xf95c0	                                setne al	      3498	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4006219	        0x89442430	             mov dword [rsp + 0x30], eax	      3498	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x400621d	      0xe92efeffff	                           jmp 0x4006050	      3498	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x4006222	      0xbe00410080	                     mov esi, 0x80004100	      1078	dwarf2.c	FUNCTION_20
0x4006227	        0x480fa3c6	                             bt rsi, rax	      1078	dwarf2.c	FUNCTION_20
0x400622b	     0xf831ffeffff	                           jae 0x4006050	      1078	dwarf2.c	FUNCTION_20
0x4006231	    0x488b8424f800	            mov rax, qword [rsp + 0xf8] 	      3484	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_14
0x4006239	        0x49894530	             mov qword [r13 + 0x30], rax	      3484	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_14
0x400623d	      0xe90efeffff	                           jmp 0x4006050	      3484	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_14
0x4006242	    0x488b9424f800	            mov rdx, qword [rsp + 0xf8] 	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x400624a	    0x488bb4248800	            mov rsi, qword [rsp + 0x88] 	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4006252	          0x4c89ef	                            mov rdi, r13	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4006255	    0x4c8984248000	              mov qword [rsp + 0x80], r8	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x400625d	      0xe8deb6ffff	                 call sym.read_rangelist	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4006262	            0x85c0	                           test eax, eax	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4006264	    0x4c8b84248000	              mov r8, qword [rsp + 0x80]	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x400626c	     0xf85defdffff	                           jne 0x4006050	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4006272	      0x4c8b742478	            mov r14, qword [rsp + 0x78] 	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x4006277	      0xe9ecf1ffff	                           jmp 0x4005468	      3502	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_16	CALL_25
0x400627c	    0x8b8424f40000	            mov eax, dword [rsp + 0xf4] 	      3511	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_26
0x4006283	          0x83f81f	                           cmp eax, 0x1f	      1077	dwarf2.c	FUNCTION_20
0x4006286	            0x7641	                           jbe 0x40062c9	      1077	dwarf2.c	FUNCTION_20
0x4006288	      0x3d211f0000	                         cmp eax, 0x1f21	      1078	dwarf2.c	FUNCTION_20
0x400628d	            0x7445	                            je 0x40062d4	      1078	dwarf2.c	FUNCTION_20
0x400628f	      0xba05000000	                              mov edx, 5	      3514	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_28
0x4006294	      0xbe00000000	                              mov esi, 0	      3514	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_28
0x4006299	      0xbf00000000	                              mov edi, 0	      3514	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_28
0x400629e	    0x4c8984248000	              mov qword [rsp + 0x80], r8	      3514	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_28
0x40062a6	          0x4531f6	                          xor r14d, r14d	      3513	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_27
0x40062a9	      0xe800000000	                          call 0x40062ae	      3514	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_28
0x40062ae	          0x4889c7	                            mov rdi, rax	      3513	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_27
0x40062b1	            0x31c0	                            xor eax, eax	      3513	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_27
0x40062b3	      0xe800000000	                          call 0x40062b8	      3513	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_27
0x40062b8	    0x4c8b84248000	              mov r8, qword [rsp + 0x80]	      3513	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_17	CALL_27
0x40062c0	        0x4d897548	             mov qword [r13 + 0x48], r14	      3527	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40062c4	      0xe987fdffff	                           jmp 0x4006050	      3527	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40062c9	      0xbe00410080	                     mov esi, 0x80004100	      1078	dwarf2.c	FUNCTION_20
0x40062ce	        0x480fa3c6	                             bt rsi, rax	      1078	dwarf2.c	FUNCTION_20
0x40062d2	            0x73bb	                           jae 0x400628f	      1078	dwarf2.c	FUNCTION_20
0x40062d4	    0x4c8bb424f800	            mov r14, qword [rsp + 0xf8] 	      3508	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1
0x40062dc	          0x4d85f6	                           test r14, r14	      3518	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18
0x40062df	            0x74df	                            je 0x40062c0	      3518	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18
0x40062e1	      0xbe3a000000	                           mov esi, 0x3a	      3522	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	CALL_29
0x40062e6	          0x4c89f7	                            mov rdi, r14	      3522	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	CALL_29
0x40062e9	    0x4c8984248000	              mov qword [rsp + 0x80], r8	      3522	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	CALL_29
0x40062f1	      0xe800000000	                          call 0x40062f6	      3522	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	CALL_29
0x40062f6	          0x4885c0	                           test rax, rax	      3524	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x40062f9	    0x4c8b84248000	              mov r8, qword [rsp + 0x80]	      3524	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4006301	            0x74bd	                            je 0x40062c0	      3524	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4006303	          0x4939c6	                            cmp r14, rax	      3524	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4006306	            0x74b8	                            je 0x40062c0	      3524	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4006308	        0x8078ff2e	                cmp byte [rax - 1], 0x2e	      3524	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x400630c	            0x75b2	                           jne 0x40062c0	      3524	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x400630e	        0x8078012f	                cmp byte [rax + 1], 0x2f	      3525	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4006312	        0x488d4801	                      lea rcx, [rax + 1]	      3525	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x4006316	        0x4c0f44f1	                          cmove r14, rcx	      3525	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x400631a	            0xeba4	                           jmp 0x40062c0	      3525	dwarf2.c	FUNCTION_46	FOR_1	SWITCH_1	IF_18	IF_19
0x400631c	      0x49837d2800	               cmp qword [r13 + 0x28], 0	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4006321	            0x743d	                            je 0x4006360	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4006323	        0x458b4544	            mov r8d, dword [r13 + 0x44] 	      3562	dwarf2.c	FUNCTION_47	IF_1
0x4006327	    0xc744245c0000	               mov dword [rsp + 0x5c], 0	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x400632f	          0x4585c0	                           test r8d, r8d	      3562	dwarf2.c	FUNCTION_47	IF_1
0x4006332	     0xf855ffeffff	                           jne 0x4006197	      3562	dwarf2.c	FUNCTION_47	IF_1
0x4006338	      0x488b742470	            mov rsi, qword [rsp + 0x70] 	      3562	dwarf2.c	FUNCTION_47	IF_1
0x400633d	          0x4c89ef	                            mov rdi, r13	      3562	dwarf2.c	FUNCTION_47	IF_1
0x4006340	      0xe8bba5ffff	call sym.comp_unit_contains_address.part.13	      3562	dwarf2.c	FUNCTION_47	IF_1
0x4006345	            0x85c0	                           test eax, eax	      4806	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_19
0x4006347	            0x7517	                           jne 0x4006360	      4806	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_19
0x4006349	    0x8b8424a00000	            mov eax, dword [rsp + 0xa0] 	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4006350	        0x8944245c	             mov dword [rsp + 0x5c], eax	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4006354	      0xe93efeffff	                           jmp 0x4006197	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4006359	     0xf1f80000000	                         nop dword [rax]	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4006360	        0x4883ec08	                              sub rsp, 8	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4006364	          0x4c89ef	                            mov rdi, r13	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4006367	            0x4156	                                push r14	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4006369	      0x4c8b4c2448	              mov r9, qword [rsp + 0x48]	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x400636e	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4006373	      0x488b542478	            mov rdx, qword [rsp + 0x78] 	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4006378	    0x488bb4248000	            mov rsi, qword [rsp + 0x80] 	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4006380	    0x488d8c24f000	                   lea rcx, [rsp + 0xf0]	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x4006388	      0xe823dfffff	    call sym.comp_unit_find_nearest_line	      4807	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_10	CALL_20
0x400638d	              0x5e	                                 pop rsi	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x400638e	              0x5f	                                 pop rdi	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x400638f	          0x4885c0	                           test rax, rax	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4006392	           0xf95c0	                                setne al	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4006395	           0xfb6c0	                           movzx eax, al	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x4006398	        0x8944245c	             mov dword [rsp + 0x5c], eax	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x400639c	      0xe9f6fdffff	                           jmp 0x4006197	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x40063a1	    0x488b9c24b000	            mov rbx, qword [rsp + 0xb0] 	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x40063a9	    0x4c8bb4249800	            mov r14, qword [rsp + 0x98] 	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x40063b1	    0x488dabc80300	                  lea rbp, [rbx + 0x3c8]	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x40063b8	     0xf1f84000000	                   nop dword [rax + rax]	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x40063c0	          0x4c8b23	                    mov r12, qword [rbx]	      1026	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2
0x40063c3	          0x4d85e4	                           test r12, r12	      1028	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2	WHILE_2
0x40063c6	            0x741c	                            je 0x40063e4	      1028	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2	WHILE_2
0x40063c8	     0xf1f84000000	                   nop dword [rax + rax]	      1028	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2	WHILE_2
0x40063d0	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	      1030	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2	WHILE_2	CALL_11
0x40063d5	      0xe800000000	                          call 0x40063da	      1030	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2	WHILE_2	CALL_11
0x40063da	      0x4d8b642418	            mov r12, qword [r12 + 0x18] 	      1031	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2	WHILE_2
0x40063df	          0x4d85e4	                           test r12, r12	      1028	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2	WHILE_2
0x40063e2	            0x75ec	                           jne 0x40063d0	      1028	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2	WHILE_2
0x40063e4	        0x4883c308	                              add rbx, 8	      1028	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2	WHILE_2
0x40063e8	          0x4839eb	                            cmp rbx, rbp	      1024	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2
0x40063eb	            0x75d3	                           jne 0x40063c0	      1024	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2
0x40063ed	      0xe976f0ffff	                           jmp 0x4005468	      1024	dwarf2.c	ELSE_1	FUNCTION_19	WHILE_1	FOR_1	IF_7	IF_8	FOR_2
0x40063f2	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      4843	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x40063f7	          0x488b00	                    mov rax, qword [rax]	      4843	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x40063fa	        0x48894130	             mov qword [rcx + 0x30], rax	      4843	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x40063fe	      0xe945f5ffff	                           jmp 0x4005948	      4843	dwarf2.c	FUNCTION_68	IF_36	IF_37	IF_39
0x4006403	        0x458b4d44	            mov r9d, dword [r13 + 0x44] 	      3562	dwarf2.c	FUNCTION_47	IF_1
0x4006407	    0xc744245c0000	               mov dword [rsp + 0x5c], 0	      4800	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_18
0x400640f	          0x4585c9	                           test r9d, r9d	      3562	dwarf2.c	FUNCTION_47	IF_1
0x4006412	     0xf857ffdffff	                           jne 0x4006197	      3562	dwarf2.c	FUNCTION_47	IF_1
0x4006418	      0x488b742470	            mov rsi, qword [rsp + 0x70] 	      3562	dwarf2.c	FUNCTION_47	IF_1
0x400641d	          0x4c89ef	                            mov rdi, r13	      3562	dwarf2.c	FUNCTION_47	IF_1
0x4006420	      0xe8dba4ffff	call sym.comp_unit_contains_address.part.13	      3562	dwarf2.c	FUNCTION_47	IF_1
0x4006425	            0x85c0	                           test eax, eax	      4799	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_17
0x4006427	     0xf853ffdffff	                           jne 0x400616c	      4799	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_17
0x400642d	      0xe965fdffff	                           jmp 0x4006197	      4799	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_17
0x4006432	    0x660f1f440000	                    nop word [rax + rax]	      4799	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_33	CALL_17
0x4006438	         0xfb64203	               movzx eax, byte [rdx + 3]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x400643c	    0x898424880000	             mov dword [rsp + 0x88], eax	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4006443	      0xe98bf6ffff	                           jmp 0x4005ad3	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4006448	         0xfb65a02	               movzx ebx, byte [rdx + 2]	       590	dwarf2.c	FUNCTION_6	CALL_1
0x400644c	      0xe965f6ffff	                           jmp 0x4005ab6	       590	dwarf2.c	FUNCTION_6	CALL_1
0x4006451	      0xbe390d0000	                          mov esi, 0xd39	      3385	dwarf2.c	FUNCTION_46	CALL_7
0x4006456	      0xbf00000000	                              mov edi, 0	      3385	dwarf2.c	FUNCTION_46	CALL_7
0x400645b	      0xe800000000	                          call 0x4006460	      3385	dwarf2.c	FUNCTION_46	CALL_7
0x4006460	      0xe989f6ffff	                           jmp 0x4005aee	      3385	dwarf2.c	FUNCTION_46	CALL_7
0x4006465	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      3385	dwarf2.c	FUNCTION_46	CALL_7
0x400646a	      0xe92aefffff	                           jmp 0x4005399	      3385	dwarf2.c	FUNCTION_46	CALL_7
0x400646f	    0x48899424a800	             mov qword [rsp + 0xa8], rdx	      3398	dwarf2.c	FUNCTION_46	IF_6
0x4006477	    0xc78424880000	               mov dword [rsp + 0x88], 0	       589	dwarf2.c	FUNCTION_6	IF_1
0x4006482	    0x488bb424a800	            mov rsi, qword [rsp + 0xa8] 	      3404	dwarf2.c	FUNCTION_46	IF_6
0x400648a	      0x488d440608	                lea rax, [rsi + rax + 8]	      3404	dwarf2.c	FUNCTION_46	IF_6
0x400648f	    0x48898424a800	             mov qword [rsp + 0xa8], rax	      3404	dwarf2.c	FUNCTION_46	IF_6
0x4006497	      0xe9e1f6ffff	                           jmp 0x4005b7d	      3404	dwarf2.c	FUNCTION_46	IF_6
0x400649c	        0x498d4504	                      lea rax, [r13 + 4]	       612	dwarf2.c	FUNCTION_9	IF_1
0x40064a0	          0x4531d2	                          xor r10d, r10d	       612	dwarf2.c	FUNCTION_9	IF_1
0x40064a3	    0x483984249000	            cmp qword [rsp + 0x90], rax 	       612	dwarf2.c	FUNCTION_9	IF_1
0x40064ab	     0xf8252f6ffff	                            jb 0x4005b03	       612	dwarf2.c	FUNCTION_9	IF_1
0x40064b1	          0x4c89ee	                            mov rsi, r13	       612	dwarf2.c	FUNCTION_9	IF_1
0x40064b4	          0x4c89ff	                            mov rdi, r15	       612	dwarf2.c	FUNCTION_9	IF_1
0x40064b7	      0xe894a3ffff	     call sym.read_4_bytes.isra.4.part.5	       612	dwarf2.c	FUNCTION_9	IF_1
0x40064bc	          0x4189c2	                           mov r10d, eax	       612	dwarf2.c	FUNCTION_9	IF_1
0x40064bf	      0xe93ff6ffff	                           jmp 0x4005b03	       612	dwarf2.c	FUNCTION_9	IF_1
0x40064c4	        0x4d896e08	                mov qword [r14 + 8], r13	      4786	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_9
0x40064c8	      0xe971fcffff	                           jmp 0x400613e	      4786	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	ELSE_9
0x40064cd	        0x498b7e30	            mov rdi, qword [r14 + 0x30] 	      4817	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34	CALL_21
0x40064d1	      0x488b742450	            mov rsi, qword [rsp + 0x50] 	      4817	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34	CALL_21
0x40064d6	      0xe805a8ffff	                call sym.find_debug_info	      4817	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34	CALL_21
0x40064db	        0x498b6e18	            mov rbp, qword [r14 + 0x18] 	      4819	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x40064df	        0x49894638	             mov qword [r14 + 0x38], rax	      4817	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34	CALL_21
0x40064e3	        0x49896e40	             mov qword [r14 + 0x40], rbp	      4819	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x40064e7	      0xe9c4fcffff	                           jmp 0x40061b0	      4819	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_34
0x40064ec	    0xc744245c0000	               mov dword [rsp + 0x5c], 0	      4543	dwarf2.c	FUNCTION_68
0x40064f4	      0xe932f1ffff	                           jmp 0x400562b	      4543	dwarf2.c	FUNCTION_68
0x40064f9	          0x4c89ee	                            mov rsi, r13	      4543	dwarf2.c	FUNCTION_68
0x40064fc	          0x4c89ff	                            mov rdi, r15	      4543	dwarf2.c	FUNCTION_68
0x40064ff	      0xe86ca3ffff	     call sym.read_8_bytes.isra.6.part.7	      4543	dwarf2.c	FUNCTION_68
0x4006504	          0x4989c2	                            mov r10, rax	      4543	dwarf2.c	FUNCTION_68
0x4006507	      0xe9f7f5ffff	                           jmp 0x4005b03	      4543	dwarf2.c	FUNCTION_68
0x400650c	      0xbed9110000	                         mov esi, 0x11d9	      4569	dwarf2.c	FUNCTION_68	ELSE_1	CALL_4
0x4006511	      0xbf00000000	                              mov edi, 0	      4569	dwarf2.c	FUNCTION_68	ELSE_1	CALL_4
0x4006516	      0xe800000000	                          call 0x400651b	      4569	dwarf2.c	FUNCTION_68	ELSE_1	CALL_4
0x400651b	      0xe95ff4ffff	                           jmp 0x400597f	      4569	dwarf2.c	FUNCTION_68	ELSE_1	CALL_4
0x4006520	        0x488b7008	                mov rsi, qword [rax + 8]	       508	dwarf2.c	FUNCTION_4	CALL_1
0x4006524	    0x498bbef80000	            mov rdi, qword [r14 + 0xf8] 	       508	dwarf2.c	FUNCTION_4	CALL_1
0x400652b	            0x31c9	                            xor ecx, ecx	       508	dwarf2.c	FUNCTION_4	CALL_1
0x400652d	            0x31d2	                            xor edx, edx	       508	dwarf2.c	FUNCTION_4	CALL_1
0x400652f	        0x488b5820	            mov rbx, qword [rax + 0x20] 	       508	dwarf2.c	FUNCTION_4	CALL_1
0x4006533	      0xe800000000	                          call 0x4006538	       508	dwarf2.c	FUNCTION_4	CALL_1
0x4006538	          0x4885c0	                           test rax, rax	       510	dwarf2.c	FUNCTION_4
0x400653b	     0xf8433f1ffff	                            je 0x4005674	       510	dwarf2.c	FUNCTION_4
0x4006541	        0x488b7818	            mov rdi, qword [rax + 0x18] 	       510	dwarf2.c	FUNCTION_4
0x4006545	          0x4885ff	                           test rdi, rdi	      4043	dwarf2.c	FUNCTION_58	FOR_1	CALL_3
0x4006548	     0xf8426f1ffff	                            je 0x4005674	      4043	dwarf2.c	FUNCTION_58	FOR_1	CALL_3
0x400654e	      0x4c8b442470	              mov r8, qword [rsp + 0x70]	      4043	dwarf2.c	FUNCTION_58	FOR_1	CALL_3
0x4006553	          0x4531d2	                          xor r10d, r10d	      4043	dwarf2.c	FUNCTION_58	FOR_1	CALL_3
0x4006556	          0x4531c9	                            xor r9d, r9d	      4043	dwarf2.c	FUNCTION_58	FOR_1	CALL_3
0x4006559	        0x4c8b5f08	                mov r11, qword [rdi + 8]	      4047	dwarf2.c	FUNCTION_58	FOR_1
0x400655d	          0x4c89d8	                            mov rax, r11	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x4006560	        0x4883c038	                           add rax, 0x38	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x4006564	            0x744d	                            je 0x40065b3	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x4006566	        0x498b4b50	            mov rcx, qword [r11 + 0x50] 	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x400656a	          0x4885c9	                           test rcx, rcx	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x400656d	        0x400f94c6	                                sete sil	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x4006571	          0x4839cb	                            cmp rbx, rcx	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x4006574	           0xf94c2	                                 sete dl	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x4006577	             0x9f2	                             or edx, esi	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x4006579	            0xeb0d	                           jmp 0x4006588	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x400657b	       0xf1f440000	                   nop dword [rax + rax]	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x4006580	          0x488b00	                    mov rax, qword [rax]	      4050	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x4006583	          0x4885c0	                           test rax, rax	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x4006586	            0x742b	                            je 0x40065b3	      4048	dwarf2.c	FUNCTION_58	FOR_1	FOR_2
0x4006588	            0x84d2	                             test dl, dl	      4052	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x400658a	            0x74f4	                            je 0x4006580	      4052	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x400658c	        0x488b4808	                mov rcx, qword [rax + 8]	      4053	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x4006590	          0x4939c8	                             cmp r8, rcx	      4053	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x4006593	            0x72eb	                            jb 0x4006580	      4053	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x4006595	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      4054	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x4006599	          0x4939f0	                             cmp r8, rsi	      4054	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x400659c	            0x73e2	                           jae 0x4006580	      4054	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x400659e	          0x4829ce	                            sub rsi, rcx	      4055	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x40065a1	          0x4d85c9	                             test r9, r9	      4055	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x40065a4	            0x7405	                            je 0x40065ab	      4055	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x40065a6	          0x4c39d6	                            cmp rsi, r10	      4056	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x40065a9	            0x73d5	                           jae 0x4006580	      4056	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x40065ab	          0x4989f2	                            mov r10, rsi	      4056	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x40065ae	          0x4d89d9	                             mov r9, r11	      4056	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x40065b1	            0xebcd	                           jmp 0x4006580	      4056	dwarf2.c	FUNCTION_58	FOR_1	FOR_2	IF_1
0x40065b3	          0x488b3f	                    mov rdi, qword [rdi]	      4045	dwarf2.c	FUNCTION_58	FOR_1
0x40065b6	          0x4885ff	                           test rdi, rdi	      4043	dwarf2.c	FUNCTION_58	FOR_1	CALL_3
0x40065b9	            0x759e	                           jne 0x4006559	      4043	dwarf2.c	FUNCTION_58	FOR_1	CALL_3
0x40065bb	          0x4d85c9	                             test r9, r9	      4064	dwarf2.c	FUNCTION_58	IF_2
0x40065be	     0xf84b0f0ffff	                            je 0x4005674	      4064	dwarf2.c	FUNCTION_58	IF_2
0x40065c4	        0x498b4118	              mov rax, qword [r9 + 0x18]	      4067	dwarf2.c	FUNCTION_58	IF_2
0x40065c8	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	      4067	dwarf2.c	FUNCTION_58	IF_2
0x40065cd	        0x49895950	              mov qword [r9 + 0x50], rbx	      4066	dwarf2.c	FUNCTION_58	IF_2
0x40065d1	          0x488906	                    mov qword [rsi], rax	      4067	dwarf2.c	FUNCTION_58	IF_2
0x40065d4	        0x418b4124	              mov eax, dword [r9 + 0x24]	      4068	dwarf2.c	FUNCTION_58	IF_2
0x40065d8	      0x488b742408	                mov rsi, qword [rsp + 8]	      4068	dwarf2.c	FUNCTION_58	IF_2
0x40065dd	            0x8906	                    mov dword [rsi], eax	      4068	dwarf2.c	FUNCTION_58	IF_2
0x40065df	      0xe954f0ffff	                           jmp 0x4005638	      4068	dwarf2.c	FUNCTION_58	IF_2
0x40065e4	    0xc744245c0000	               mov dword [rsp + 0x5c], 0	      4777	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_31
0x40065ec	      0xe977eeffff	                           jmp 0x4005468	      4777	dwarf2.c	FUNCTION_68	WHILE_1	ELSE_7	IF_28	IF_31
0x40065f1	    0x41c786100100	              mov dword [r14 + 0x110], 2	      4219	dwarf2.c	FUNCTION_62	IF_2
0x40065fc	      0xe9f9edffff	                           jmp 0x40053fa	      4219	dwarf2.c	FUNCTION_62	IF_2
0x4006601	    0x4c8bb4249800	            mov r14, qword [rsp + 0x98] 	      4219	dwarf2.c	FUNCTION_62	IF_2
0x4006609	      0xe95aeeffff	                           jmp 0x4005468	      4219	dwarf2.c	FUNCTION_62	IF_2
0x400660e	      0xba05000000	                              mov edx, 5	      3411	dwarf2.c	FUNCTION_46	IF_7	CALL_12
0x4006613	      0xbe00000000	                              mov esi, 0	      3411	dwarf2.c	FUNCTION_46	IF_7	CALL_12
0x4006618	      0xbf00000000	                              mov edi, 0	      3411	dwarf2.c	FUNCTION_46	IF_7	CALL_12
0x400661d	      0xe800000000	                          call 0x4006622	      3411	dwarf2.c	FUNCTION_46	IF_7	CALL_12
0x4006622	    0x8bb424880000	            mov esi, dword [rsp + 0x88] 	      3409	dwarf2.c	FUNCTION_46	IF_7	CALL_11
0x4006629	          0x4889c7	                            mov rdi, rax	      3409	dwarf2.c	FUNCTION_46	IF_7	CALL_11
0x400662c	      0xba08000000	                              mov edx, 8	      3409	dwarf2.c	FUNCTION_46	IF_7	CALL_11
0x4006631	            0x31c0	                            xor eax, eax	      3409	dwarf2.c	FUNCTION_46	IF_7	CALL_11
0x4006633	      0xe800000000	                          call 0x4006638	      3409	dwarf2.c	FUNCTION_46	IF_7	CALL_11
0x4006638	      0xbf11000000	                           mov edi, 0x11	      3415	dwarf2.c	FUNCTION_46	IF_7	CALL_13
0x400663d	      0xe800000000	                          call 0x4006642	      3415	dwarf2.c	FUNCTION_46	IF_7	CALL_13
0x4006642	      0xe921eeffff	                           jmp 0x4005468	      3415	dwarf2.c	FUNCTION_46	IF_7	CALL_13
0x4006647	      0xe800000000	                          call 0x400664c	      4854	dwarf2.c	FUNCTION_68
0x400664c	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      4854	dwarf2.c	FUNCTION_68
0x4006651	      0x4889442420	             mov qword [rsp + 0x20], rax	      4854	dwarf2.c	FUNCTION_68
0x4006656	    0xc78424a00000	               mov dword [rsp + 0xa0], 1	      4596	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x4006661	      0xe933edffff	                           jmp 0x4005399	      4596	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x4006666	          0x4989c4	                            mov r12, rax	      4596	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x4006669	    0xc74424280800	               mov dword [rsp + 0x28], 8	      4596	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x4006671	      0xe9bbf3ffff	                           jmp 0x4005a31	      4596	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1	IF_6
0x4006676	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x400667b	    0x48c744242000	               mov qword [rsp + 0x20], 0	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x4006684	      0xe910edffff	                           jmp 0x4005399	      4589	dwarf2.c	FUNCTION_68	ELSE_1	IF_5	FOR_1
0x4006689	    0x8b9c24a40000	            mov ebx, dword [rsp + 0xa4] 	      3364	dwarf2.c	FUNCTION_46	IF_1	IF_2
0x4006690	            0x85db	                           test ebx, ebx	      3364	dwarf2.c	FUNCTION_46	IF_1	IF_2
0x4006692	     0xf84d0edffff	                            je 0x4005468	      3364	dwarf2.c	FUNCTION_46	IF_1	IF_2
0x4006698	      0xbe00000000	                              mov esi, 0	      3367	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_3
0x400669d	      0xba05000000	                              mov edx, 5	      3367	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_3
0x40066a2	      0xbf00000000	                              mov edi, 0	      3367	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_3
0x40066a7	      0xe800000000	                          call 0x40066ac	      3367	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_3
0x40066ac	            0x89de	                            mov esi, ebx	      3366	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x40066ae	      0xe98af8ffff	                           jmp 0x4005f3d	      3366	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x40066b3	        0x498b5618	            mov rdx, qword [r14 + 0x18] 	      3366	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x40066b7	        0x498b4630	            mov rax, qword [r14 + 0x30] 	      3366	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x40066bb	        0x498b4e20	            mov rcx, qword [r14 + 0x20] 	      3366	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x40066bf	        0x488d7204	                      lea rsi, [rdx + 4]	      3366	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x40066c3	        0x488d7808	                      lea rdi, [rax + 8]	      3366	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x40066c7	      0xe93cf0ffff	                           jmp 0x4005708	      3366	dwarf2.c	FUNCTION_46	IF_1	IF_2	CALL_2
line_info_add_file_name	FOR,0:CALL,1:WHILE,0:ELSE,0:IF,2:functions,0:SWITCH,0:DO,0	49
0x4000210	            0x4154	                                push r12	      1860	dwarf2.c	FUNCTION_33
0x4000212	              0x55	                                push rbp	      1860	dwarf2.c	FUNCTION_33
0x4000213	          0x4989f4	                            mov r12, rsi	      1860	dwarf2.c	FUNCTION_33
0x4000216	              0x53	                                push rbx	      1860	dwarf2.c	FUNCTION_33
0x4000217	            0x89d5	                            mov ebp, edx	      1860	dwarf2.c	FUNCTION_33
0x4000219	      0xbacdcccccc	                     mov edx, 0xcccccccd	      1861	dwarf2.c	FUNCTION_33	IF_1
0x400021e	          0x4889fb	                            mov rbx, rdi	      1860	dwarf2.c	FUNCTION_33
0x4000221	        0x4883ec10	                           sub rsp, 0x10	      1860	dwarf2.c	FUNCTION_33
0x4000225	          0x8b7708	                mov esi, dword [rdi + 8]	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4000228	            0x89f0	                            mov eax, esi	      1861	dwarf2.c	FUNCTION_33	IF_1
0x400022a	            0xf7e2	                                 mul edx	      1861	dwarf2.c	FUNCTION_33	IF_1
0x400022c	          0xc1ea02	                              shr edx, 2	      1861	dwarf2.c	FUNCTION_33	IF_1
0x400022f	          0x8d0492	                  lea eax, [rdx + rdx*4]	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4000232	            0x39c6	                            cmp esi, eax	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4000234	            0x7432	                            je 0x4000268	      1861	dwarf2.c	FUNCTION_33	IF_1
0x4000236	        0x488b4728	            mov rax, qword [rdi + 0x28] 	      1861	dwarf2.c	FUNCTION_33	IF_1
0x400023a	            0x89f2	                            mov edx, esi	      1875	dwarf2.c	FUNCTION_33
0x400023c	          0x83c601	                              add esi, 1	      1879	dwarf2.c	FUNCTION_33
0x400023f	        0x488d1452	                  lea rdx, [rdx + rdx*2]	      1875	dwarf2.c	FUNCTION_33
0x4000243	        0x488d04d0	                  lea rax, [rax + rdx*8]	      1875	dwarf2.c	FUNCTION_33
0x4000247	          0x4c8920	                    mov qword [rax], r12	      1875	dwarf2.c	FUNCTION_33
0x400024a	          0x896808	                mov dword [rax + 8], ebp	      1876	dwarf2.c	FUNCTION_33
0x400024d	          0x89480c	              mov dword [rax + 0xc], ecx	      1877	dwarf2.c	FUNCTION_33
0x4000250	        0x44894010	             mov dword [rax + 0x10], r8d	      1878	dwarf2.c	FUNCTION_33
0x4000254	      0xb801000000	                              mov eax, 1	      1880	dwarf2.c	FUNCTION_33
0x4000259	          0x897308	                mov dword [rbx + 8], esi	      1879	dwarf2.c	FUNCTION_33
0x400025c	        0x4883c410	                           add rsp, 0x10	      1881	dwarf2.c	FUNCTION_33
0x4000260	              0x5b	                                 pop rbx	      1881	dwarf2.c	FUNCTION_33
0x4000261	              0x5d	                                 pop rbp	      1881	dwarf2.c	FUNCTION_33
0x4000262	            0x415c	                                 pop r12	      1881	dwarf2.c	FUNCTION_33
0x4000264	              0xc3	                                     ret	      1881	dwarf2.c	FUNCTION_33
0x4000265	           0xf1f00	                         nop dword [rax]	      1881	dwarf2.c	FUNCTION_33
0x4000268	          0x8d4605	                      lea eax, [rsi + 5]	      1866	dwarf2.c	FUNCTION_33	IF_1
0x400026b	        0x488b7f28	            mov rdi, qword [rdi + 0x28] 	      1869	dwarf2.c	FUNCTION_33	IF_1	CALL_1
0x400026f	      0x448944240c	              mov dword [rsp + 0xc], r8d	      1869	dwarf2.c	FUNCTION_33	IF_1	CALL_1
0x4000274	        0x894c2408	                mov dword [rsp + 8], ecx	      1869	dwarf2.c	FUNCTION_33	IF_1	CALL_1
0x4000278	        0x488d3440	                  lea rsi, [rax + rax*2]	      1869	dwarf2.c	FUNCTION_33	IF_1	CALL_1
0x400027c	        0x48c1e603	                              shl rsi, 3	      1869	dwarf2.c	FUNCTION_33	IF_1	CALL_1
0x4000280	      0xe800000000	                          call 0x4000285	      1869	dwarf2.c	FUNCTION_33	IF_1	CALL_1
0x4000285	          0x4885c0	                           test rax, rax	      1870	dwarf2.c	FUNCTION_33	IF_1	IF_2
0x4000288	            0x7416	                            je 0x40002a0	      1870	dwarf2.c	FUNCTION_33	IF_1	IF_2
0x400028a	        0x48894328	             mov qword [rbx + 0x28], rax	      1872	dwarf2.c	FUNCTION_33	IF_1
0x400028e	          0x8b7308	                mov esi, dword [rbx + 8]	      1872	dwarf2.c	FUNCTION_33	IF_1
0x4000291	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      1872	dwarf2.c	FUNCTION_33	IF_1
0x4000296	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      1872	dwarf2.c	FUNCTION_33	IF_1
0x400029a	            0xeb9e	                           jmp 0x400023a	      1872	dwarf2.c	FUNCTION_33	IF_1
0x400029c	         0xf1f4000	                         nop dword [rax]	      1872	dwarf2.c	FUNCTION_33	IF_1
0x40002a0	            0x31c0	                            xor eax, eax	      1871	dwarf2.c	FUNCTION_33	IF_1	IF_2
0x40002a2	            0xebb8	                           jmp 0x400025c	      1871	dwarf2.c	FUNCTION_33	IF_1	IF_2
_bfd_dwarf2_find_symbol_bias	FOR,3:CALL,3:WHILE,0:ELSE,0:IF,6:functions,0:SWITCH,0:DO,0	94
0x40047a0	            0x4157	                                push r15	      4460	dwarf2.c	FUNCTION_67
0x40047a2	            0x4156	                                push r14	      4460	dwarf2.c	FUNCTION_67
0x40047a4	            0x4155	                                push r13	      4460	dwarf2.c	FUNCTION_67
0x40047a6	            0x4154	                                push r12	      4460	dwarf2.c	FUNCTION_67
0x40047a8	              0x55	                                push rbp	      4460	dwarf2.c	FUNCTION_67
0x40047a9	              0x53	                                push rbx	      4460	dwarf2.c	FUNCTION_67
0x40047aa	        0x4883ec28	                           sub rsp, 0x28	      4460	dwarf2.c	FUNCTION_67
0x40047ae	          0x488b06	                    mov rax, qword [rsi]	      4464	dwarf2.c	FUNCTION_67
0x40047b1	          0x4885c0	                           test rax, rax	      4466	dwarf2.c	FUNCTION_67	IF_1
0x40047b4	      0x4889442418	             mov qword [rsp + 0x18], rax	      4464	dwarf2.c	FUNCTION_67
0x40047b9	     0xf84a4000000	                            je 0x4004863	      4466	dwarf2.c	FUNCTION_67	IF_1
0x40047bf	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4469	dwarf2.c	FUNCTION_67	FOR_1
0x40047c4	      0x48897c2408	                mov qword [rsp + 8], rdi	      4469	dwarf2.c	FUNCTION_67	FOR_1
0x40047c9	          0x488b00	                    mov rax, qword [rax]	      4469	dwarf2.c	FUNCTION_67	FOR_1
0x40047cc	          0x4885c0	                           test rax, rax	      4469	dwarf2.c	FUNCTION_67	FOR_1
0x40047cf	      0x4889442410	             mov qword [rsp + 0x10], rax	      4469	dwarf2.c	FUNCTION_67	FOR_1
0x40047d4	     0xf8489000000	                            je 0x4004863	      4469	dwarf2.c	FUNCTION_67	FOR_1
0x40047da	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4473	dwarf2.c	FUNCTION_67	FOR_1	IF_2
0x40047df	    0x488b98800000	            mov rbx, qword [rax + 0x80] 	      4473	dwarf2.c	FUNCTION_67	FOR_1	IF_2
0x40047e6	          0x4885db	                           test rbx, rbx	      4473	dwarf2.c	FUNCTION_67	FOR_1	IF_2
0x40047e9	     0xf84a3000000	                            je 0x4004892	      4473	dwarf2.c	FUNCTION_67	FOR_1	IF_2
0x40047ef	              0x90	                                     nop	      4473	dwarf2.c	FUNCTION_67	FOR_1	IF_2
0x40047f0	        0x488b6b30	            mov rbp, qword [rbx + 0x30] 	      4482	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5
0x40047f4	          0x4885ed	                           test rbp, rbp	      4482	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5
0x40047f7	            0x744c	                            je 0x4004845	      4482	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5
0x40047f9	        0x4c8b6340	            mov r12, qword [rbx + 0x40] 	      4482	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5
0x40047fd	          0x4d85e4	                           test r12, r12	      4482	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5
0x4004800	            0x7443	                            je 0x4004845	      4482	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5
0x4004802	      0x488b442408	                mov rax, qword [rsp + 8]	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x4004807	          0x4c8b38	                    mov r15, qword [rax]	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x400480a	          0x4d85ff	                           test r15, r15	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x400480d	            0x7436	                            je 0x4004845	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x400480f	          0x4989c5	                            mov r13, rax	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x4004812	    0x660f1f440000	                    nop word [rax + rax]	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x4004818	      0x41f6471808	               test byte [r15 + 0x18], 8	      4492	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x400481d	            0x7419	                            je 0x4004838	      4492	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x400481f	        0x4d8b7720	            mov r14, qword [r15 + 0x20] 	      4493	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x4004823	          0x4d85f6	                           test r14, r14	      4493	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x4004826	            0x7410	                            je 0x4004838	      4493	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x4004828	        0x498b7f08	                mov rdi, qword [r15 + 8]	      4494	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6	CALL_3
0x400482c	          0x4889ee	                            mov rsi, rbp	      4494	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6	CALL_3
0x400482f	      0xe800000000	                          call 0x4004834	      4494	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6	CALL_3
0x4004834	            0x85c0	                           test eax, eax	      4494	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6	CALL_3
0x4004836	            0x7440	                            je 0x4004878	      4494	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6	CALL_3
0x4004838	        0x4983c508	                              add r13, 8	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x400483c	        0x4d8b7d00	                    mov r15, qword [r13]	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x4004840	          0x4d85ff	                           test r15, r15	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x4004843	            0x75d3	                           jne 0x4004818	      4488	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3
0x4004845	          0x488b1b	                    mov rbx, qword [rbx]	      4481	dwarf2.c	FUNCTION_67	FOR_1	FOR_2
0x4004848	          0x4885db	                           test rbx, rbx	      4481	dwarf2.c	FUNCTION_67	FOR_1	FOR_2
0x400484b	            0x75a3	                           jne 0x40047f0	      4481	dwarf2.c	FUNCTION_67	FOR_1	FOR_2
0x400484d	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4469	dwarf2.c	FUNCTION_67	FOR_1
0x4004852	          0x488b00	                    mov rax, qword [rax]	      4469	dwarf2.c	FUNCTION_67	FOR_1
0x4004855	          0x4885c0	                           test rax, rax	      4469	dwarf2.c	FUNCTION_67	FOR_1
0x4004858	      0x4889442410	             mov qword [rsp + 0x10], rax	      4469	dwarf2.c	FUNCTION_67	FOR_1
0x400485d	     0xf8577ffffff	                           jne 0x40047da	      4469	dwarf2.c	FUNCTION_67	FOR_1
0x4004863	        0x4883c428	                           add rsp, 0x28	      4502	dwarf2.c	FUNCTION_67
0x4004867	            0x31c0	                            xor eax, eax	      4467	dwarf2.c	FUNCTION_67	IF_1
0x4004869	              0x5b	                                 pop rbx	      4502	dwarf2.c	FUNCTION_67
0x400486a	              0x5d	                                 pop rbp	      4502	dwarf2.c	FUNCTION_67
0x400486b	            0x415c	                                 pop r12	      4502	dwarf2.c	FUNCTION_67
0x400486d	            0x415d	                                 pop r13	      4502	dwarf2.c	FUNCTION_67
0x400486f	            0x415e	                                 pop r14	      4502	dwarf2.c	FUNCTION_67
0x4004871	            0x415f	                                 pop r15	      4502	dwarf2.c	FUNCTION_67
0x4004873	              0xc3	                                     ret	      4502	dwarf2.c	FUNCTION_67
0x4004874	         0xf1f4000	                         nop dword [rax]	      4502	dwarf2.c	FUNCTION_67
0x4004878	          0x4c89e0	                            mov rax, r12	      4495	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x400487b	        0x492b4628	             sub rax, qword [r14 + 0x28]	      4495	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x400487f	        0x492b4710	             sub rax, qword [r15 + 0x10]	      4495	dwarf2.c	FUNCTION_67	FOR_1	FOR_2	IF_5	FOR_3	IF_6
0x4004883	        0x4883c428	                           add rsp, 0x28	      4502	dwarf2.c	FUNCTION_67
0x4004887	              0x5b	                                 pop rbx	      4502	dwarf2.c	FUNCTION_67
0x4004888	              0x5d	                                 pop rbp	      4502	dwarf2.c	FUNCTION_67
0x4004889	            0x415c	                                 pop r12	      4502	dwarf2.c	FUNCTION_67
0x400488b	            0x415d	                                 pop r13	      4502	dwarf2.c	FUNCTION_67
0x400488d	            0x415e	                                 pop r14	      4502	dwarf2.c	FUNCTION_67
0x400488f	            0x415f	                                 pop r15	      4502	dwarf2.c	FUNCTION_67
0x4004891	              0xc3	                                     ret	      4502	dwarf2.c	FUNCTION_67
0x4004892	      0x4883787800	               cmp qword [rax + 0x78], 0	      4475	dwarf2.c	FUNCTION_67	FOR_1	IF_2	IF_3
0x4004897	            0x7421	                            je 0x40048ba	      4475	dwarf2.c	FUNCTION_67	FOR_1	IF_2	IF_3
0x4004899	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4478	dwarf2.c	FUNCTION_67	FOR_1	IF_2	CALL_2
0x400489e	      0xe8fdecffff	          call sym.scan_unit_for_symbols	      4478	dwarf2.c	FUNCTION_67	FOR_1	IF_2	CALL_2
0x40048a3	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4481	dwarf2.c	FUNCTION_67	FOR_1	FOR_2
0x40048a8	    0x488b98800000	            mov rbx, qword [rax + 0x80] 	      4481	dwarf2.c	FUNCTION_67	FOR_1	FOR_2
0x40048af	          0x4885db	                           test rbx, rbx	      4481	dwarf2.c	FUNCTION_67	FOR_1	FOR_2
0x40048b2	     0xf8538ffffff	                           jne 0x40047f0	      4481	dwarf2.c	FUNCTION_67	FOR_1	FOR_2
0x40048b8	            0xeb93	                           jmp 0x400484d	      4481	dwarf2.c	FUNCTION_67	FOR_1	FOR_2
0x40048ba	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      4476	dwarf2.c	FUNCTION_67	FOR_1	IF_2	CALL_1
0x40048bf	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      4476	dwarf2.c	FUNCTION_67	FOR_1	IF_2	CALL_1
0x40048c4	          0x4889df	                            mov rdi, rbx	      4476	dwarf2.c	FUNCTION_67	FOR_1	IF_2	CALL_1
0x40048c7	      0xe8e4d5ffff	               call sym.decode_line_info	      4476	dwarf2.c	FUNCTION_67	FOR_1	IF_2	CALL_1
0x40048cc	          0x4885c0	                           test rax, rax	      4477	dwarf2.c	FUNCTION_67	FOR_1	IF_2	IF_4
0x40048cf	        0x48894378	             mov qword [rbx + 0x78], rax	      4476	dwarf2.c	FUNCTION_67	FOR_1	IF_2	CALL_1
0x40048d3	            0x74ce	                            je 0x40048a3	      4477	dwarf2.c	FUNCTION_67	FOR_1	IF_2	IF_4
0x40048d5	            0xebc2	                           jmp 0x4004899	      4477	dwarf2.c	FUNCTION_67	FOR_1	IF_2	IF_4
read_section	FOR,0:CALL,12:WHILE,0:ELSE,0:IF,7:functions,0:SWITCH,0:DO,0	137
0x4000040	            0x4157	                                push r15	       526	dwarf2.c	FUNCTION_5
0x4000042	            0x4156	                                push r14	       526	dwarf2.c	FUNCTION_5
0x4000044	            0x4155	                                push r13	       526	dwarf2.c	FUNCTION_5
0x4000046	            0x4154	                                push r12	       526	dwarf2.c	FUNCTION_5
0x4000048	              0x55	                                push rbp	       526	dwarf2.c	FUNCTION_5
0x4000049	              0x53	                                push rbx	       526	dwarf2.c	FUNCTION_5
0x400004a	          0x4889cb	                            mov rbx, rcx	       526	dwarf2.c	FUNCTION_5
0x400004d	        0x4883ec18	                           sub rsp, 0x18	       526	dwarf2.c	FUNCTION_5
0x4000051	        0x49833800	                       cmp qword [r8], 0	       532	dwarf2.c	FUNCTION_5	IF_1
0x4000055	          0x4c8b2e	                    mov r13, qword [rsi]	       528	dwarf2.c	FUNCTION_5
0x4000058	            0x746e	                            je 0x40000c8	       532	dwarf2.c	FUNCTION_5	IF_1
0x400005a	          0x4885db	                           test rbx, rbx	       569	dwarf2.c	FUNCTION_5	IF_7
0x400005d	      0xb801000000	                              mov eax, 1	       580	dwarf2.c	FUNCTION_5
0x4000062	            0x7408	                            je 0x400006c	       569	dwarf2.c	FUNCTION_5	IF_7
0x4000064	          0x498b29	                     mov rbp, qword [r9]	       569	dwarf2.c	FUNCTION_5	IF_7
0x4000067	          0x4839eb	                            cmp rbx, rbp	       569	dwarf2.c	FUNCTION_5	IF_7
0x400006a	            0x7314	                           jae 0x4000080	       569	dwarf2.c	FUNCTION_5	IF_7
0x400006c	        0x4883c418	                           add rsp, 0x18	       581	dwarf2.c	FUNCTION_5
0x4000070	              0x5b	                                 pop rbx	       581	dwarf2.c	FUNCTION_5
0x4000071	              0x5d	                                 pop rbp	       581	dwarf2.c	FUNCTION_5
0x4000072	            0x415c	                                 pop r12	       581	dwarf2.c	FUNCTION_5
0x4000074	            0x415d	                                 pop r13	       581	dwarf2.c	FUNCTION_5
0x4000076	            0x415e	                                 pop r14	       581	dwarf2.c	FUNCTION_5
0x4000078	            0x415f	                                 pop r15	       581	dwarf2.c	FUNCTION_5
0x400007a	              0xc3	                                     ret	       581	dwarf2.c	FUNCTION_5
0x400007b	       0xf1f440000	                   nop dword [rax + rax]	       581	dwarf2.c	FUNCTION_5
0x4000080	      0xba05000000	                              mov edx, 5	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x4000085	      0xbe00000000	                              mov esi, 0	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x400008a	      0xbf00000000	                              mov edi, 0	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x400008f	      0xe800000000	                          call 0x4000094	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x4000094	          0x4889e9	                            mov rcx, rbp	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x4000097	          0x4c89ea	                            mov rdx, r13	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x400009a	          0x4889de	                            mov rsi, rbx	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x400009d	          0x4889c7	                            mov rdi, rax	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x40000a0	            0x31c0	                            xor eax, eax	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x40000a2	      0xe800000000	                          call 0x40000a7	       572	dwarf2.c	FUNCTION_5	IF_7	CALL_11
0x40000a7	      0xbf11000000	                           mov edi, 0x11	       576	dwarf2.c	FUNCTION_5	IF_7	CALL_12
0x40000ac	      0xe800000000	                          call 0x40000b1	       576	dwarf2.c	FUNCTION_5	IF_7	CALL_12
0x40000b1	        0x4883c418	                           add rsp, 0x18	       581	dwarf2.c	FUNCTION_5
0x40000b5	            0x31c0	                            xor eax, eax	       577	dwarf2.c	FUNCTION_5	IF_7
0x40000b7	              0x5b	                                 pop rbx	       581	dwarf2.c	FUNCTION_5
0x40000b8	              0x5d	                                 pop rbp	       581	dwarf2.c	FUNCTION_5
0x40000b9	            0x415c	                                 pop r12	       581	dwarf2.c	FUNCTION_5
0x40000bb	            0x415d	                                 pop r13	       581	dwarf2.c	FUNCTION_5
0x40000bd	            0x415e	                                 pop r14	       581	dwarf2.c	FUNCTION_5
0x40000bf	            0x415f	                                 pop r15	       581	dwarf2.c	FUNCTION_5
0x40000c1	              0xc3	                                     ret	       581	dwarf2.c	FUNCTION_5
0x40000c2	    0x660f1f440000	                    nop word [rax + rax]	       581	dwarf2.c	FUNCTION_5
0x40000c8	          0x4989f4	                            mov r12, rsi	       581	dwarf2.c	FUNCTION_5
0x40000cb	          0x4c89ee	                            mov rsi, r13	       534	dwarf2.c	FUNCTION_5	IF_1	CALL_1
0x40000ce	      0x4c894c2408	                 mov qword [rsp + 8], r9	       534	dwarf2.c	FUNCTION_5	IF_1	CALL_1
0x40000d3	        0x48891424	                    mov qword [rsp], rdx	       534	dwarf2.c	FUNCTION_5	IF_1	CALL_1
0x40000d7	          0x4989fe	                            mov r14, rdi	       534	dwarf2.c	FUNCTION_5	IF_1	CALL_1
0x40000da	          0x4c89c5	                             mov rbp, r8	       534	dwarf2.c	FUNCTION_5	IF_1	CALL_1
0x40000dd	      0xe800000000	                          call 0x40000e2	       534	dwarf2.c	FUNCTION_5	IF_1	CALL_1
0x40000e2	          0x4885c0	                           test rax, rax	       535	dwarf2.c	FUNCTION_5	IF_1	IF_2
0x40000e5	          0x4989c7	                            mov r15, rax	       534	dwarf2.c	FUNCTION_5	IF_1	CALL_1
0x40000e8	        0x488b1424	                    mov rdx, qword [rsp]	       535	dwarf2.c	FUNCTION_5	IF_1	IF_2
0x40000ec	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       535	dwarf2.c	FUNCTION_5	IF_1	IF_2
0x40000f1	     0xf84a9000000	                            je 0x40001a0	       535	dwarf2.c	FUNCTION_5	IF_1	IF_2
0x40000f7	        0x498b7f40	            mov rdi, qword [r15 + 0x40] 	       549	dwarf2.c	FUNCTION_5	IF_1
0x40000fb	          0x4885ff	                           test rdi, rdi	       549	dwarf2.c	FUNCTION_5	IF_1
0x40000fe	            0x7460	                            je 0x4000160	       549	dwarf2.c	FUNCTION_5	IF_1
0x4000100	          0x498939	                     mov qword [r9], rdi	       549	dwarf2.c	FUNCTION_5	IF_1
0x4000103	        0x4883c701	                              add rdi, 1	       552	dwarf2.c	FUNCTION_5	IF_1	CALL_6
0x4000107	      0x4889542408	                mov qword [rsp + 8], rdx	       552	dwarf2.c	FUNCTION_5	IF_1	CALL_6
0x400010c	        0x4c890c24	                     mov qword [rsp], r9	       549	dwarf2.c	FUNCTION_5	IF_1
0x4000110	      0xe800000000	                          call 0x4000115	       552	dwarf2.c	FUNCTION_5	IF_1	CALL_6
0x4000115	          0x4885c0	                           test rax, rax	       553	dwarf2.c	FUNCTION_5	IF_1	IF_5
0x4000118	          0x4989c4	                            mov r12, rax	       552	dwarf2.c	FUNCTION_5	IF_1	CALL_6
0x400011b	     0xf84e8000000	                            je 0x4000209	       553	dwarf2.c	FUNCTION_5	IF_1	IF_5
0x4000121	      0x488b542408	                mov rdx, qword [rsp + 8]	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x4000126	        0x4c8b0c24	                     mov r9, qword [rsp]	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x400012a	          0x4885d2	                           test rdx, rdx	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x400012d	            0x7437	                            je 0x4000166	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x400012f	          0x4889d1	                            mov rcx, rdx	       556	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_7
0x4000132	          0x4c89fe	                            mov rsi, r15	       556	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_7
0x4000135	          0x4889c2	                            mov rdx, rax	       556	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_7
0x4000138	          0x4c89f7	                            mov rdi, r14	       556	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_7
0x400013b	      0xe800000000	                          call 0x4000140	       556	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_7
0x4000140	        0x4c8b0c24	                     mov r9, qword [rsp]	       556	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_7
0x4000144	          0x4885c0	                           test rax, rax	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x4000147	           0xf94c0	                                 sete al	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x400014a	            0x84c0	                             test al, al	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x400014c	            0x7542	                           jne 0x4000190	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x400014e	          0x498b01	                     mov rax, qword [r9]	       563	dwarf2.c	FUNCTION_5	IF_1
0x4000151	      0x41c6040400	                 mov byte [r12 + rax], 0	       563	dwarf2.c	FUNCTION_5	IF_1
0x4000156	        0x4c896500	                    mov qword [rbp], r12	       564	dwarf2.c	FUNCTION_5	IF_1
0x400015a	      0xe9fbfeffff	                           jmp 0x400005a	       564	dwarf2.c	FUNCTION_5	IF_1
0x400015f	              0x90	                                     nop	       564	dwarf2.c	FUNCTION_5	IF_1
0x4000160	        0x498b7f38	            mov rdi, qword [r15 + 0x38] 	       549	dwarf2.c	FUNCTION_5	IF_1
0x4000164	            0xeb9a	                           jmp 0x4000100	       549	dwarf2.c	FUNCTION_5	IF_1
0x4000166	          0x4d8b01	                      mov r8, qword [r9]	       558	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_8
0x4000169	            0x31c9	                            xor ecx, ecx	       558	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_8
0x400016b	          0x4889c2	                            mov rdx, rax	       558	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_8
0x400016e	          0x4c89fe	                            mov rsi, r15	       558	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_8
0x4000171	          0x4c89f7	                            mov rdi, r14	       558	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_8
0x4000174	        0x4c890c24	                     mov qword [rsp], r9	       558	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_8
0x4000178	      0xe800000000	                          call 0x400017d	       558	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_8
0x400017d	            0x85c0	                           test eax, eax	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x400017f	        0x4c8b0c24	                     mov r9, qword [rsp]	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x4000183	           0xf94c0	                                 sete al	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x4000186	            0xebc2	                           jmp 0x400014a	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x4000188	     0xf1f84000000	                   nop dword [rax + rax]	       555	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x4000190	          0x4c89e7	                            mov rdi, r12	       560	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_9
0x4000193	      0xe800000000	                          call 0x4000198	       560	dwarf2.c	FUNCTION_5	IF_1	IF_6	CALL_9
0x4000198	            0x31c0	                            xor eax, eax	       561	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x400019a	      0xe9cdfeffff	                           jmp 0x400006c	       561	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x400019f	              0x90	                                     nop	       561	dwarf2.c	FUNCTION_5	IF_1	IF_6
0x40001a0	      0x4d8b6c2408	                mov r13, qword [r12 + 8]	       537	dwarf2.c	FUNCTION_5	IF_1	IF_2
0x40001a5	          0x4d85ed	                           test r13, r13	       538	dwarf2.c	FUNCTION_5	IF_1	IF_2	IF_3
0x40001a8	            0x7429	                            je 0x40001d3	       538	dwarf2.c	FUNCTION_5	IF_1	IF_2	IF_3
0x40001aa	          0x4c89ee	                            mov rsi, r13	       539	dwarf2.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x40001ad	          0x4c89f7	                            mov rdi, r14	       539	dwarf2.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x40001b0	      0x4c894c2408	                 mov qword [rsp + 8], r9	       539	dwarf2.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x40001b5	        0x48891424	                    mov qword [rsp], rdx	       539	dwarf2.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x40001b9	      0xe800000000	                          call 0x40001be	       539	dwarf2.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x40001be	          0x4885c0	                           test rax, rax	       541	dwarf2.c	FUNCTION_5	IF_1	IF_4
0x40001c1	          0x4989c7	                            mov r15, rax	       539	dwarf2.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x40001c4	        0x488b1424	                    mov rdx, qword [rsp]	       541	dwarf2.c	FUNCTION_5	IF_1	IF_4
0x40001c8	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       541	dwarf2.c	FUNCTION_5	IF_1	IF_4
0x40001cd	     0xf8524ffffff	                           jne 0x40000f7	       541	dwarf2.c	FUNCTION_5	IF_1	IF_4
0x40001d3	        0x498b1c24	                    mov rbx, qword [r12]	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x40001d7	      0xba05000000	                              mov edx, 5	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x40001dc	      0xbe00000000	                              mov esi, 0	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x40001e1	      0xbf00000000	                              mov edi, 0	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x40001e6	      0xe800000000	                          call 0x40001eb	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x40001eb	          0x4889de	                            mov rsi, rbx	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x40001ee	          0x4889c7	                            mov rdi, rax	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x40001f1	            0x31c0	                            xor eax, eax	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x40001f3	      0xe800000000	                          call 0x40001f8	       543	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_4
0x40001f8	      0xbf11000000	                           mov edi, 0x11	       545	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_5
0x40001fd	      0xe800000000	                          call 0x4000202	       545	dwarf2.c	FUNCTION_5	IF_1	IF_4	CALL_5
0x4000202	            0x31c0	                            xor eax, eax	       546	dwarf2.c	FUNCTION_5	IF_1	IF_4
0x4000204	      0xe963feffff	                           jmp 0x400006c	       546	dwarf2.c	FUNCTION_5	IF_1	IF_4
0x4000209	            0x31c0	                            xor eax, eax	       554	dwarf2.c	FUNCTION_5	IF_1	IF_5
0x400020b	      0xe95cfeffff	                           jmp 0x400006c	       554	dwarf2.c	FUNCTION_5	IF_1	IF_5
_bfd_dwarf2_cleanup_debug_info	FOR,2:CALL,21:WHILE,3:ELSE,0:IF,20:functions,0:SWITCH,0:DO,0	152
0x4004930	            0x4157	                                push r15	      4885	dwarf2.c	FUNCTION_70
0x4004932	            0x4156	                                push r14	      4885	dwarf2.c	FUNCTION_70
0x4004934	            0x4155	                                push r13	      4885	dwarf2.c	FUNCTION_70
0x4004936	            0x4154	                                push r12	      4885	dwarf2.c	FUNCTION_70
0x4004938	              0x55	                                push rbp	      4885	dwarf2.c	FUNCTION_70
0x4004939	              0x53	                                push rbx	      4885	dwarf2.c	FUNCTION_70
0x400493a	        0x4883ec18	                           sub rsp, 0x18	      4885	dwarf2.c	FUNCTION_70
0x400493e	          0x4885ff	                           test rdi, rdi	      4889	dwarf2.c	FUNCTION_70	IF_1
0x4004941	          0x4c8b36	                    mov r14, qword [rsi]	      4886	dwarf2.c	FUNCTION_70
0x4004944	     0xf8420020000	                            je 0x4004b6a	      4889	dwarf2.c	FUNCTION_70	IF_1
0x400494a	          0x4d85f6	                           test r14, r14	      4889	dwarf2.c	FUNCTION_70	IF_1
0x400494d	     0xf8417020000	                            je 0x4004b6a	      4889	dwarf2.c	FUNCTION_70	IF_1
0x4004953	          0x498b06	                    mov rax, qword [r14]	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x4004956	          0x4885c0	                           test rax, rax	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x4004959	      0x4889442408	                mov qword [rsp + 8], rax	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x400495e	     0xf8411010000	                            je 0x4004a75	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x4004964	      0x488b442408	                mov rax, qword [rsp + 8]	      4895	dwarf2.c	FUNCTION_70	FOR_1
0x4004969	        0x488b5838	            mov rbx, qword [rax + 0x38] 	      4895	dwarf2.c	FUNCTION_70	FOR_1
0x400496d	    0x4c8ba0800000	            mov r12, qword [rax + 0x80] 	      4895	dwarf2.c	FUNCTION_70	FOR_1
0x4004974	    0x4c8ba8980000	            mov r13, qword [rax + 0x98] 	      4896	dwarf2.c	FUNCTION_70	FOR_1
0x400497b	    0x488dabc80300	                  lea rbp, [rbx + 0x3c8]	      4896	dwarf2.c	FUNCTION_70	FOR_1
0x4004982	    0x660f1f440000	                    nop word [rax + rax]	      4896	dwarf2.c	FUNCTION_70	FOR_1
0x4004988	          0x4c8b3b	                    mov r15, qword [rbx]	      4901	dwarf2.c	FUNCTION_70	FOR_1	FOR_2
0x400498b	          0x4d85ff	                           test r15, r15	      4903	dwarf2.c	FUNCTION_70	FOR_1	FOR_2	WHILE_1
0x400498e	            0x7412	                            je 0x40049a2	      4903	dwarf2.c	FUNCTION_70	FOR_1	FOR_2	WHILE_1
0x4004990	        0x498b7f10	            mov rdi, qword [r15 + 0x10] 	      4905	dwarf2.c	FUNCTION_70	FOR_1	FOR_2	WHILE_1	CALL_1
0x4004994	      0xe800000000	                          call 0x4004999	      4905	dwarf2.c	FUNCTION_70	FOR_1	FOR_2	WHILE_1	CALL_1
0x4004999	        0x4d8b7f18	            mov r15, qword [r15 + 0x18] 	      4906	dwarf2.c	FUNCTION_70	FOR_1	FOR_2	WHILE_1
0x400499d	          0x4d85ff	                           test r15, r15	      4903	dwarf2.c	FUNCTION_70	FOR_1	FOR_2	WHILE_1
0x40049a0	            0x75ee	                           jne 0x4004990	      4903	dwarf2.c	FUNCTION_70	FOR_1	FOR_2	WHILE_1
0x40049a2	        0x4883c308	                              add rbx, 8	      4903	dwarf2.c	FUNCTION_70	FOR_1	FOR_2	WHILE_1
0x40049a6	          0x4839dd	                            cmp rbp, rbx	      4899	dwarf2.c	FUNCTION_70	FOR_1	FOR_2
0x40049a9	            0x75dd	                           jne 0x4004988	      4899	dwarf2.c	FUNCTION_70	FOR_1	FOR_2
0x40049ab	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      4910	dwarf2.c	FUNCTION_70	FOR_1	IF_2
0x40049b0	        0x488b4378	            mov rax, qword [rbx + 0x78] 	      4910	dwarf2.c	FUNCTION_70	FOR_1	IF_2
0x40049b4	          0x4885c0	                           test rax, rax	      4910	dwarf2.c	FUNCTION_70	FOR_1	IF_2
0x40049b7	            0x7453	                            je 0x4004a0c	      4910	dwarf2.c	FUNCTION_70	FOR_1	IF_2
0x40049b9	        0x488b7820	            mov rdi, qword [rax + 0x20] 	      4912	dwarf2.c	FUNCTION_70	FOR_1	IF_2	CALL_2
0x40049bd	      0xe800000000	                          call 0x40049c2	      4912	dwarf2.c	FUNCTION_70	FOR_1	IF_2	CALL_2
0x40049c2	        0x488b4378	            mov rax, qword [rbx + 0x78] 	      4913	dwarf2.c	FUNCTION_70	FOR_1	IF_2	CALL_3
0x40049c6	        0x488b7828	            mov rdi, qword [rax + 0x28] 	      4913	dwarf2.c	FUNCTION_70	FOR_1	IF_2	CALL_3
0x40049ca	      0xe800000000	                          call 0x40049cf	      4913	dwarf2.c	FUNCTION_70	FOR_1	IF_2	CALL_3
0x40049cf	            0xeb3b	                           jmp 0x4004a0c	      4913	dwarf2.c	FUNCTION_70	FOR_1	IF_2	CALL_3
0x40049d1	     0xf1f80000000	                         nop dword [rax]	      4913	dwarf2.c	FUNCTION_70	FOR_1	IF_2	CALL_3
0x40049d8	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	      4918	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_3
0x40049dd	          0x4885ff	                           test rdi, rdi	      4918	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_3
0x40049e0	            0x740e	                            je 0x40049f0	      4918	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_3
0x40049e2	      0xe800000000	                          call 0x40049e7	      4920	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_3	CALL_4
0x40049e7	    0x49c744241800	               mov qword [r12 + 0x18], 0	      4921	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_3
0x40049f0	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	      4924	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_4
0x40049f5	          0x4885ff	                           test rdi, rdi	      4924	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_4
0x40049f8	            0x740e	                            je 0x4004a08	      4924	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_4
0x40049fa	      0xe800000000	                          call 0x40049ff	      4926	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_4	CALL_5
0x40049ff	    0x49c744241000	               mov qword [r12 + 0x10], 0	      4927	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2	IF_4
0x4004a08	        0x4d8b2424	                    mov r12, qword [r12]	      4929	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2
0x4004a0c	          0x4d85e4	                           test r12, r12	      4916	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2
0x4004a0f	            0x75c7	                           jne 0x40049d8	      4916	dwarf2.c	FUNCTION_70	FOR_1	WHILE_2
0x4004a11	      0x488b442408	                mov rax, qword [rsp + 8]	      4932	dwarf2.c	FUNCTION_70	FOR_1	IF_5
0x4004a16	    0x488bb8880000	            mov rdi, qword [rax + 0x88] 	      4932	dwarf2.c	FUNCTION_70	FOR_1	IF_5
0x4004a1d	          0x4885ff	                           test rdi, rdi	      4932	dwarf2.c	FUNCTION_70	FOR_1	IF_5
0x4004a20	            0x7438	                            je 0x4004a5a	      4932	dwarf2.c	FUNCTION_70	FOR_1	IF_5
0x4004a22	      0xe800000000	                          call 0x4004a27	      4934	dwarf2.c	FUNCTION_70	FOR_1	IF_5	CALL_6
0x4004a27	      0x488b442408	                mov rax, qword [rsp + 8]	      4935	dwarf2.c	FUNCTION_70	FOR_1	IF_5
0x4004a2c	    0x48c780880000	               mov qword [rax + 0x88], 0	      4935	dwarf2.c	FUNCTION_70	FOR_1	IF_5
0x4004a37	            0xeb21	                           jmp 0x4004a5a	      4935	dwarf2.c	FUNCTION_70	FOR_1	IF_5
0x4004a39	     0xf1f80000000	                         nop dword [rax]	      4935	dwarf2.c	FUNCTION_70	FOR_1	IF_5
0x4004a40	        0x498b7d08	                mov rdi, qword [r13 + 8]	      4940	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3	IF_6
0x4004a44	          0x4885ff	                           test rdi, rdi	      4940	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3	IF_6
0x4004a47	            0x740d	                            je 0x4004a56	      4940	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3	IF_6
0x4004a49	      0xe800000000	                          call 0x4004a4e	      4942	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3	IF_6	CALL_7
0x4004a4e	    0x49c745080000	                  mov qword [r13 + 8], 0	      4943	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3	IF_6
0x4004a56	        0x4d8b6d00	                    mov r13, qword [r13]	      4946	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3
0x4004a5a	          0x4d85ed	                           test r13, r13	      4938	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3
0x4004a5d	            0x75e1	                           jne 0x4004a40	      4938	dwarf2.c	FUNCTION_70	FOR_1	WHILE_3
0x4004a5f	      0x488b442408	                mov rax, qword [rsp + 8]	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x4004a64	          0x488b00	                    mov rax, qword [rax]	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x4004a67	          0x4885c0	                           test rax, rax	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x4004a6a	      0x4889442408	                mov qword [rsp + 8], rax	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x4004a6f	     0xf85effeffff	                           jne 0x4004964	      4892	dwarf2.c	FUNCTION_70	FOR_1
0x4004a75	    0x498bbef80000	            mov rdi, qword [r14 + 0xf8] 	      4950	dwarf2.c	FUNCTION_70	IF_7
0x4004a7c	          0x4885ff	                           test rdi, rdi	      4950	dwarf2.c	FUNCTION_70	IF_7
0x4004a7f	            0x7405	                            je 0x4004a86	      4950	dwarf2.c	FUNCTION_70	IF_7
0x4004a81	      0xe800000000	                          call 0x4004a86	      4951	dwarf2.c	FUNCTION_70	CALL_8
0x4004a86	    0x498bbe000100	           mov rdi, qword [r14 + 0x100] 	      4952	dwarf2.c	FUNCTION_70	IF_8
0x4004a8d	          0x4885ff	                           test rdi, rdi	      4952	dwarf2.c	FUNCTION_70	IF_8
0x4004a90	            0x7405	                            je 0x4004a97	      4952	dwarf2.c	FUNCTION_70	IF_8
0x4004a92	      0xe800000000	                          call 0x4004a97	      4953	dwarf2.c	FUNCTION_70	CALL_9
0x4004a97	    0x498bbe800000	            mov rdi, qword [r14 + 0x80] 	      4954	dwarf2.c	FUNCTION_70	IF_9
0x4004a9e	          0x4885ff	                           test rdi, rdi	      4954	dwarf2.c	FUNCTION_70	IF_9
0x4004aa1	            0x7405	                            je 0x4004aa8	      4954	dwarf2.c	FUNCTION_70	IF_9
0x4004aa3	      0xe800000000	                          call 0x4004aa8	      4955	dwarf2.c	FUNCTION_70	CALL_10
0x4004aa8	    0x498bbe900000	            mov rdi, qword [r14 + 0x90] 	      4956	dwarf2.c	FUNCTION_70	IF_10
0x4004aaf	          0x4885ff	                           test rdi, rdi	      4956	dwarf2.c	FUNCTION_70	IF_10
0x4004ab2	            0x7405	                            je 0x4004ab9	      4956	dwarf2.c	FUNCTION_70	IF_10
0x4004ab4	      0xe800000000	                          call 0x4004ab9	      4957	dwarf2.c	FUNCTION_70	CALL_11
0x4004ab9	    0x498bbea00000	            mov rdi, qword [r14 + 0xa0] 	      4958	dwarf2.c	FUNCTION_70	IF_11
0x4004ac0	          0x4885ff	                           test rdi, rdi	      4958	dwarf2.c	FUNCTION_70	IF_11
0x4004ac3	            0x7405	                            je 0x4004aca	      4958	dwarf2.c	FUNCTION_70	IF_11
0x4004ac5	      0xe800000000	                          call 0x4004aca	      4959	dwarf2.c	FUNCTION_70	CALL_12
0x4004aca	    0x498bbeb00000	            mov rdi, qword [r14 + 0xb0] 	      4960	dwarf2.c	FUNCTION_70	IF_12
0x4004ad1	          0x4885ff	                           test rdi, rdi	      4960	dwarf2.c	FUNCTION_70	IF_12
0x4004ad4	            0x7405	                            je 0x4004adb	      4960	dwarf2.c	FUNCTION_70	IF_12
0x4004ad6	      0xe800000000	                          call 0x4004adb	      4961	dwarf2.c	FUNCTION_70	CALL_13
0x4004adb	    0x498bbec00000	            mov rdi, qword [r14 + 0xc0] 	      4962	dwarf2.c	FUNCTION_70	IF_13
0x4004ae2	          0x4885ff	                           test rdi, rdi	      4962	dwarf2.c	FUNCTION_70	IF_13
0x4004ae5	            0x7405	                            je 0x4004aec	      4962	dwarf2.c	FUNCTION_70	IF_13
0x4004ae7	      0xe800000000	                          call 0x4004aec	      4963	dwarf2.c	FUNCTION_70	CALL_14
0x4004aec	        0x498b7e70	            mov rdi, qword [r14 + 0x70] 	      4964	dwarf2.c	FUNCTION_70	IF_14
0x4004af0	          0x4885ff	                           test rdi, rdi	      4964	dwarf2.c	FUNCTION_70	IF_14
0x4004af3	            0x7405	                            je 0x4004afa	      4964	dwarf2.c	FUNCTION_70	IF_14
0x4004af5	      0xe800000000	                          call 0x4004afa	      4965	dwarf2.c	FUNCTION_70	CALL_15
0x4004afa	    0x418b86140100	           mov eax, dword [r14 + 0x114] 	      4966	dwarf2.c	FUNCTION_70	IF_15
0x4004b01	            0x85c0	                           test eax, eax	      4966	dwarf2.c	FUNCTION_70	IF_15
0x4004b03	            0x755a	                           jne 0x4004b5f	      4966	dwarf2.c	FUNCTION_70	IF_15
0x4004b05	        0x498b7e50	            mov rdi, qword [r14 + 0x50] 	      4968	dwarf2.c	FUNCTION_70	IF_16
0x4004b09	          0x4885ff	                           test rdi, rdi	      4968	dwarf2.c	FUNCTION_70	IF_16
0x4004b0c	            0x7405	                            je 0x4004b13	      4968	dwarf2.c	FUNCTION_70	IF_16
0x4004b0e	      0xe800000000	                          call 0x4004b13	      4969	dwarf2.c	FUNCTION_70	CALL_17
0x4004b13	        0x498b7e60	            mov rdi, qword [r14 + 0x60] 	      4970	dwarf2.c	FUNCTION_70	IF_17
0x4004b17	          0x4885ff	                           test rdi, rdi	      4970	dwarf2.c	FUNCTION_70	IF_17
0x4004b1a	            0x7405	                            je 0x4004b21	      4970	dwarf2.c	FUNCTION_70	IF_17
0x4004b1c	      0xe800000000	                          call 0x4004b21	      4971	dwarf2.c	FUNCTION_70	CALL_18
0x4004b21	    0x498bbed80000	            mov rdi, qword [r14 + 0xd8] 	      4972	dwarf2.c	FUNCTION_70	IF_18
0x4004b28	          0x4885ff	                           test rdi, rdi	      4972	dwarf2.c	FUNCTION_70	IF_18
0x4004b2b	            0x7405	                            je 0x4004b32	      4972	dwarf2.c	FUNCTION_70	IF_18
0x4004b2d	      0xe800000000	                          call 0x4004b32	      4973	dwarf2.c	FUNCTION_70	CALL_19
0x4004b32	    0x498bbee80000	            mov rdi, qword [r14 + 0xe8] 	      4974	dwarf2.c	FUNCTION_70	IF_19
0x4004b39	          0x4885ff	                           test rdi, rdi	      4974	dwarf2.c	FUNCTION_70	IF_19
0x4004b3c	            0x7405	                            je 0x4004b43	      4974	dwarf2.c	FUNCTION_70	IF_19
0x4004b3e	      0xe800000000	                          call 0x4004b43	      4975	dwarf2.c	FUNCTION_70	CALL_20
0x4004b43	        0x498b7e48	            mov rdi, qword [r14 + 0x48] 	      4976	dwarf2.c	FUNCTION_70	IF_20
0x4004b47	          0x4885ff	                           test rdi, rdi	      4976	dwarf2.c	FUNCTION_70	IF_20
0x4004b4a	            0x741e	                            je 0x4004b6a	      4976	dwarf2.c	FUNCTION_70	IF_20
0x4004b4c	        0x4883c418	                           add rsp, 0x18	      4978	dwarf2.c	FUNCTION_70
0x4004b50	              0x5b	                                 pop rbx	      4978	dwarf2.c	FUNCTION_70
0x4004b51	              0x5d	                                 pop rbp	      4978	dwarf2.c	FUNCTION_70
0x4004b52	            0x415c	                                 pop r12	      4978	dwarf2.c	FUNCTION_70
0x4004b54	            0x415d	                                 pop r13	      4978	dwarf2.c	FUNCTION_70
0x4004b56	            0x415e	                                 pop r14	      4978	dwarf2.c	FUNCTION_70
0x4004b58	            0x415f	                                 pop r15	      4978	dwarf2.c	FUNCTION_70
0x4004b5a	      0xe900000000	                           jmp 0x4004b5f	      4977	dwarf2.c	FUNCTION_70	CALL_21
0x4004b5f	        0x498b7e30	            mov rdi, qword [r14 + 0x30] 	      4967	dwarf2.c	FUNCTION_70	CALL_16
0x4004b63	      0xe800000000	                          call 0x4004b68	      4967	dwarf2.c	FUNCTION_70	CALL_16
0x4004b68	            0xeb9b	                           jmp 0x4004b05	      4967	dwarf2.c	FUNCTION_70	CALL_16
0x4004b6a	        0x4883c418	                           add rsp, 0x18	      4978	dwarf2.c	FUNCTION_70
0x4004b6e	              0x5b	                                 pop rbx	      4978	dwarf2.c	FUNCTION_70
0x4004b6f	              0x5d	                                 pop rbp	      4978	dwarf2.c	FUNCTION_70
0x4004b70	            0x415c	                                 pop r12	      4978	dwarf2.c	FUNCTION_70
0x4004b72	            0x415d	                                 pop r13	      4978	dwarf2.c	FUNCTION_70
0x4004b74	            0x415e	                                 pop r14	      4978	dwarf2.c	FUNCTION_70
0x4004b76	            0x415f	                                 pop r15	      4978	dwarf2.c	FUNCTION_70
0x4004b78	              0xc3	                                     ret	      4978	dwarf2.c	FUNCTION_70
