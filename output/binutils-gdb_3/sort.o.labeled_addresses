sort_pointers	ELSE,1:IF,2:FOR,5:CALL,2:functions,0:SWITCH,0:WHILE,0:DO,0	92
0x4000040	            0x4156	                                push r14	        48	sort.c	FUNCTION_1
0x4000042	            0x4155	                                push r13	        48	sort.c	FUNCTION_1
0x4000044	          0x4531d2	                          xor r10d, r10d	        48	sort.c	FUNCTION_1
0x4000047	            0x4154	                                push r12	        48	sort.c	FUNCTION_1
0x4000049	              0x55	                                push rbp	        48	sort.c	FUNCTION_1
0x400004a	              0x53	                                push rbx	        48	sort.c	FUNCTION_1
0x400004b	    0x4881ec200400	                          sub rsp, 0x420	        48	sort.c	FUNCTION_1
0x4000052	    0x64488b042528	                mov rax, qword fs:[0x28]	        48	sort.c	FUNCTION_1
0x400005b	    0x488984241804	            mov qword [rsp + 0x418], rax	        48	sort.c	FUNCTION_1
0x4000063	            0x31c0	                            xor eax, eax	        48	sort.c	FUNCTION_1
0x4000065	           0xf1f00	                         nop dword [rax]	        48	sort.c	FUNCTION_1
0x4000068	        0x49c1e208	                              shl r10, 8	        77	sort.c	FUNCTION_1	FOR_1
0x400006c	          0x4901c2	                            add r10, rax	        77	sort.c	FUNCTION_1	FOR_1
0x400006f	        0x4883c001	                              add rax, 1	        74	sort.c	FUNCTION_1	FOR_1
0x4000073	        0x4883f808	                              cmp rax, 8	        74	sort.c	FUNCTION_1	FOR_1
0x4000077	            0x75ef	                           jne 0x4000068	        74	sort.c	FUNCTION_1	FOR_1
0x4000079	    0x41bd08000000	                             mov r13d, 8	        74	sort.c	FUNCTION_1	FOR_1
0x400007f	    0x4c8d24fd0000	                        lea r12, [rdi*8]	        74	sort.c	FUNCTION_1	FOR_1
0x4000087	    0x41bb08000000	                             mov r11d, 8	        79	sort.c	FUNCTION_1
0x400008d	      0x488d5c2410	                   lea rbx, [rsp + 0x10]	        79	sort.c	FUNCTION_1
0x4000092	          0x4d89e9	                             mov r9, r13	        79	sort.c	FUNCTION_1
0x4000095	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_7	CALL_6
0x4000097	          0x4d29d9	                             sub r9, r11	        90	string3.h	FUNCTION_7	CALL_6
0x400009a	          0x4584d2	                         test r10b, r10b	        93	sort.c	FUNCTION_1	FOR_2	IF_2
0x400009d	      0x498d6c24f8	                      lea rbp, [r12 - 8]	        93	sort.c	FUNCTION_1	FOR_2	IF_2
0x40000a2	    0x4c8d83000400	                   lea r8, [rbx + 0x400]	       118	sort.c	FUNCTION_1	FOR_2	FOR_4
0x40000a9	     0xf85b2000000	                           jne 0x4000161	        93	sort.c	FUNCTION_1	FOR_2	IF_2
0x40000af	      0x4c895c2408	                mov qword [rsp + 8], r11	        94	sort.c	FUNCTION_1	FOR_2	IF_2
0x40000b4	          0x4d89d9	                             mov r9, r11	        94	sort.c	FUNCTION_1	FOR_2	IF_2
0x40000b7	      0xb980000000	                           mov ecx, 0x80	        90	string3.h	FUNCTION_7	CALL_6
0x40000bc	          0x4889df	                            mov rdi, rbx	        90	string3.h	FUNCTION_7	CALL_6
0x40000bf	        0x4f8d340c	                     lea r14, [r12 + r9]	       106	sort.c	FUNCTION_1	FOR_2
0x40000c3	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_7	CALL_6
0x40000c6	        0x4a8d0c0e	                     lea rcx, [rsi + r9]	       105	sort.c	FUNCTION_1	FOR_2
0x40000ca	          0x4901f6	                            add r14, rsi	       106	sort.c	FUNCTION_1	FOR_2
0x40000cd	          0x4c39f1	                            cmp rcx, r14	       111	sort.c	FUNCTION_1	FOR_2	FOR_3
0x40000d0	     0xf83b8000000	                           jae 0x400018e	       111	sort.c	FUNCTION_1	FOR_2	FOR_3
0x40000d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       111	sort.c	FUNCTION_1	FOR_2	FOR_3
0x40000e0	           0xfb639	                   movzx edi, byte [rcx]	       114	sort.c	FUNCTION_1	FOR_2	FOR_3
0x40000e3	        0x4883c108	                              add rcx, 8	       113	sort.c	FUNCTION_1	FOR_2	FOR_3
0x40000e7	      0x8344bc1001	       add dword [rsp + rdi*4 + 0x10], 1	       114	sort.c	FUNCTION_1	FOR_2	FOR_3
0x40000ec	          0x4939ce	                            cmp r14, rcx	       111	sort.c	FUNCTION_1	FOR_2	FOR_3
0x40000ef	            0x77ef	                            ja 0x40000e0	       111	sort.c	FUNCTION_1	FOR_2	FOR_3
0x40000f1	      0x448b742414	           mov r14d, dword [rsp + 0x14] 	       111	sort.c	FUNCTION_1	FOR_2	FOR_3
0x40000f6	        0x8b7c2410	            mov edi, dword [rsp + 0x10] 	       111	sort.c	FUNCTION_1	FOR_2	FOR_3
0x40000fa	        0x488d4b04	                      lea rcx, [rbx + 4]	       111	sort.c	FUNCTION_1	FOR_2	FOR_3
0x40000fe	            0xeb06	                           jmp 0x4000106	       111	sort.c	FUNCTION_1	FOR_2	FOR_3
0x4000100	          0x448b31	                   mov r14d, dword [rcx]	       111	sort.c	FUNCTION_1	FOR_2	FOR_3
0x4000103	          0x8b79fc	                mov edi, dword [rcx - 4]	       111	sort.c	FUNCTION_1	FOR_2	FOR_3
0x4000106	          0x4401f7	                           add edi, r14d	       119	sort.c	FUNCTION_1	FOR_2	FOR_4
0x4000109	        0x4883c104	                              add rcx, 4	       118	sort.c	FUNCTION_1	FOR_2	FOR_4
0x400010d	          0x8979fc	                mov dword [rcx - 4], edi	       119	sort.c	FUNCTION_1	FOR_2	FOR_4
0x4000110	          0x4c39c1	                             cmp rcx, r8	       118	sort.c	FUNCTION_1	FOR_2	FOR_4
0x4000113	            0x75eb	                           jne 0x4000100	       118	sort.c	FUNCTION_1	FOR_2	FOR_4
0x4000115	          0x4889f7	                            mov rdi, rsi	       122	sort.c	FUNCTION_1	FOR_2	FOR_5
0x4000118	          0x4801ef	                            add rdi, rbp	       122	sort.c	FUNCTION_1	FOR_2	FOR_5
0x400011b	            0x7226	                            jb 0x4000143	       122	sort.c	FUNCTION_1	FOR_2	FOR_5
0x400011d	           0xf1f00	                         nop dword [rax]	       122	sort.c	FUNCTION_1	FOR_2	FOR_5
0x4000120	      0x460fb6340f	             movzx r14d, byte [rdi + r9]	       123	sort.c	FUNCTION_1	FOR_2	FOR_5
0x4000125	        0x4883ef08	                              sub rdi, 8	       122	sort.c	FUNCTION_1	FOR_2	FOR_5
0x4000129	      0x428b4cb410	    mov ecx, dword [rsp + r14*4 + 0x10] 	       123	sort.c	FUNCTION_1	FOR_2	FOR_5
0x400012e	          0x83e901	                              sub ecx, 1	       123	sort.c	FUNCTION_1	FOR_2	FOR_5
0x4000131	      0x42894cb410	     mov dword [rsp + r14*4 + 0x10], ecx	       123	sort.c	FUNCTION_1	FOR_2	FOR_5
0x4000136	        0x4c8b7708	                mov r14, qword [rdi + 8]	       123	sort.c	FUNCTION_1	FOR_2	FOR_5
0x400013a	          0x4839f7	                            cmp rdi, rsi	       122	sort.c	FUNCTION_1	FOR_2	FOR_5
0x400013d	        0x4c8934ca	            mov qword [rdx + rcx*8], r14	       123	sort.c	FUNCTION_1	FOR_2	FOR_5
0x4000141	            0x73dd	                           jae 0x4000120	       122	sort.c	FUNCTION_1	FOR_2	FOR_5
0x4000143	        0x4983eb01	                              sub r11, 1	        83	sort.c	FUNCTION_1	FOR_2
0x4000147	          0x4889d1	                            mov rcx, rdx	        83	sort.c	FUNCTION_1	FOR_2
0x400014a	          0x4889f2	                            mov rdx, rsi	        83	sort.c	FUNCTION_1	FOR_2
0x400014d	            0x741c	                            je 0x400016b	        83	sort.c	FUNCTION_1	FOR_2
0x400014f	          0x4d89e9	                             mov r9, r13	        83	sort.c	FUNCTION_1	FOR_2
0x4000152	          0x4889ce	                            mov rsi, rcx	        83	sort.c	FUNCTION_1	FOR_2
0x4000155	          0x4d29d9	                             sub r9, r11	        83	sort.c	FUNCTION_1	FOR_2
0x4000158	          0x4584d2	                         test r10b, r10b	        93	sort.c	FUNCTION_1	FOR_2	IF_2
0x400015b	     0xf844effffff	                            je 0x40000af	        93	sort.c	FUNCTION_1	FOR_2	IF_2
0x4000161	      0x4c894c2408	                 mov qword [rsp + 8], r9	        96	sort.c	FUNCTION_1	FOR_2	ELSE_1
0x4000166	      0xe94cffffff	                           jmp 0x40000b7	        96	sort.c	FUNCTION_1	FOR_2	ELSE_1
0x400016b	    0x488b84241804	           mov rax, qword [rsp + 0x418] 	       131	sort.c	FUNCTION_1
0x4000173	    0x644833042528	                xor rax, qword fs:[0x28]	       131	sort.c	FUNCTION_1
0x400017c	            0x751a	                           jne 0x4000198	       131	sort.c	FUNCTION_1
0x400017e	    0x4881c4200400	                          add rsp, 0x420	       131	sort.c	FUNCTION_1
0x4000185	              0x5b	                                 pop rbx	       131	sort.c	FUNCTION_1
0x4000186	              0x5d	                                 pop rbp	       131	sort.c	FUNCTION_1
0x4000187	            0x415c	                                 pop r12	       131	sort.c	FUNCTION_1
0x4000189	            0x415d	                                 pop r13	       131	sort.c	FUNCTION_1
0x400018b	            0x415e	                                 pop r14	       131	sort.c	FUNCTION_1
0x400018d	              0xc3	                                     ret	       131	sort.c	FUNCTION_1
0x400018e	            0x31ff	                            xor edi, edi	       111	sort.c	FUNCTION_1	FOR_2	FOR_3
0x4000190	          0x4531f6	                          xor r14d, r14d	       111	sort.c	FUNCTION_1	FOR_2	FOR_3
0x4000193	      0xe962ffffff	                           jmp 0x40000fa	       111	sort.c	FUNCTION_1	FOR_2	FOR_3
0x4000198	      0xe800000000	         call section_end..text.unlikely	       131	sort.c	FUNCTION_1
