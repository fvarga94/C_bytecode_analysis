substitute_type	SWITCH,0:WHILE,0:IF,4:FOR,0:ELSE,0:functions,0:CALL,16:DO,0	108
0x4000f00	            0x4156	                                push r14	       416	prdbg.c	FUNCTION_7
0x4000f02	            0x4155	                                push r13	       416	prdbg.c	FUNCTION_7
0x4000f04	            0x4154	                                push r12	       416	prdbg.c	FUNCTION_7
0x4000f06	              0x55	                                push rbp	       416	prdbg.c	FUNCTION_7
0x4000f07	              0x53	                                push rbx	       416	prdbg.c	FUNCTION_7
0x4000f08	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       419	prdbg.c	FUNCTION_7	CALL_1
0x4000f0c	          0x4885c0	                           test rax, rax	       419	prdbg.c	FUNCTION_7	CALL_1
0x4000f0f	     0xf844b010000	                            je 0x4001060	       419	prdbg.c	FUNCTION_7	CALL_1
0x4000f15	        0x4c8b6008	                mov r12, qword [rax + 8]	       421	prdbg.c	FUNCTION_7	CALL_2
0x4000f19	          0x4889fd	                            mov rbp, rdi	       421	prdbg.c	FUNCTION_7	CALL_2
0x4000f1c	          0x4989f5	                            mov r13, rsi	       421	prdbg.c	FUNCTION_7	CALL_2
0x4000f1f	      0xbe7c000000	                           mov esi, 0x7c	       421	prdbg.c	FUNCTION_7	CALL_2
0x4000f24	          0x4c89e7	                            mov rdi, r12	       421	prdbg.c	FUNCTION_7	CALL_2
0x4000f27	      0xe800000000	                          call 0x4000f2c	       421	prdbg.c	FUNCTION_7	CALL_2
0x4000f2c	          0x4885c0	                           test rax, rax	       422	prdbg.c	FUNCTION_7	IF_1
0x4000f2f	          0x4889c3	                            mov rbx, rax	       421	prdbg.c	FUNCTION_7	CALL_2
0x4000f32	            0x747c	                            je 0x4000fb0	       422	prdbg.c	FUNCTION_7	IF_1
0x4000f34	          0x4c89e7	                            mov rdi, r12	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x4000f37	      0xe800000000	                          call 0x4000f3c	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x4000f3c	          0x4c89ef	                            mov rdi, r13	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x4000f3f	          0x4989c4	                            mov r12, rax	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x4000f42	      0xe800000000	                          call 0x4000f47	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x4000f47	        0x498d3c04	                    lea rdi, [r12 + rax]	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x4000f4b	      0xe800000000	                          call 0x4000f50	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x4000f50	        0x4c8b7510	            mov r14, qword [rbp + 0x10] 	       428	prdbg.c	FUNCTION_7	IF_1	CALL_6
0x4000f54	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_84	CALL_3
0x4000f57	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_84	CALL_3
0x4000f5a	          0x4989c4	                            mov r12, rax	       426	prdbg.c	FUNCTION_7	IF_1	CALL_5
0x4000f5d	        0x498b7608	                mov rsi, qword [r14 + 8]	       428	prdbg.c	FUNCTION_7	IF_1	CALL_6
0x4000f61	          0x4829f2	                            sub rdx, rsi	        53	string3.h	FUNCTION_84	CALL_3
0x4000f64	      0xe800000000	                          call 0x4000f69	        53	string3.h	FUNCTION_84	CALL_3
0x4000f69	          0x4889df	                            mov rdi, rbx	       110	string3.h	FUNCTION_90	CALL_3
0x4000f6c	        0x492b7e08	                sub rdi, qword [r14 + 8]	       110	string3.h	FUNCTION_90	CALL_3
0x4000f70	          0x4c89ee	                            mov rsi, r13	       110	string3.h	FUNCTION_90	CALL_3
0x4000f73	          0x4c01e7	                            add rdi, r12	       110	string3.h	FUNCTION_90	CALL_3
0x4000f76	      0xe800000000	                          call 0x4000f7b	       110	string3.h	FUNCTION_90	CALL_3
0x4000f7b	        0x488d7301	                      lea rsi, [rbx + 1]	       148	string3.h	FUNCTION_94	CALL_3
0x4000f7f	          0x4c89e7	                            mov rdi, r12	       148	string3.h	FUNCTION_94	CALL_3
0x4000f82	      0xe800000000	                          call 0x4000f87	       148	string3.h	FUNCTION_94	CALL_3
0x4000f87	        0x498b7e08	                mov rdi, qword [r14 + 8]	       432	prdbg.c	FUNCTION_7	IF_1	CALL_9
0x4000f8b	      0xe800000000	                          call 0x4000f90	       432	prdbg.c	FUNCTION_7	IF_1	CALL_9
0x4000f90	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       433	prdbg.c	FUNCTION_7	IF_1
0x4000f94	        0x4c896008	                mov qword [rax + 8], r12	       433	prdbg.c	FUNCTION_7	IF_1
0x4000f98	      0xb801000000	                              mov eax, 1	       435	prdbg.c	FUNCTION_7	IF_1
0x4000f9d	              0x5b	                                 pop rbx	       452	prdbg.c	FUNCTION_7
0x4000f9e	              0x5d	                                 pop rbp	       452	prdbg.c	FUNCTION_7
0x4000f9f	            0x415c	                                 pop r12	       452	prdbg.c	FUNCTION_7
0x4000fa1	            0x415d	                                 pop r13	       452	prdbg.c	FUNCTION_7
0x4000fa3	            0x415e	                                 pop r14	       452	prdbg.c	FUNCTION_7
0x4000fa5	              0xc3	                                     ret	       452	prdbg.c	FUNCTION_7
0x4000fa6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       452	prdbg.c	FUNCTION_7
0x4000fb0	      0xbe7c000000	                           mov esi, 0x7c	       438	prdbg.c	FUNCTION_7	IF_2	CALL_10
0x4000fb5	          0x4c89ef	                            mov rdi, r13	       438	prdbg.c	FUNCTION_7	IF_2	CALL_10
0x4000fb8	      0xe800000000	                          call 0x4000fbd	       438	prdbg.c	FUNCTION_7	IF_2	CALL_10
0x4000fbd	          0x4885c0	                           test rax, rax	       438	prdbg.c	FUNCTION_7	IF_2	CALL_10
0x4000fc0	            0x7447	                            je 0x4001009	       438	prdbg.c	FUNCTION_7	IF_2	CALL_10
0x4000fc2	      0xbe7b000000	                           mov esi, 0x7b	       439	prdbg.c	FUNCTION_7	IF_2	CALL_11
0x4000fc7	          0x4c89e7	                            mov rdi, r12	       439	prdbg.c	FUNCTION_7	IF_2	CALL_11
0x4000fca	      0xe800000000	                          call 0x4000fcf	       439	prdbg.c	FUNCTION_7	IF_2	CALL_11
0x4000fcf	          0x4885c0	                           test rax, rax	       439	prdbg.c	FUNCTION_7	IF_2	CALL_11
0x4000fd2	            0x7474	                            je 0x4001048	       439	prdbg.c	FUNCTION_7	IF_2	CALL_11
0x4000fd4	        0x488d5d10	                   lea rbx, [rbp + 0x10]	       439	prdbg.c	FUNCTION_7	IF_2	CALL_11
0x4000fd8	      0xbe00000000	                              mov esi, 0	       442	prdbg.c	FUNCTION_7	IF_2	IF_3	CALL_13
0x4000fdd	          0x4889df	                            mov rdi, rbx	       442	prdbg.c	FUNCTION_7	IF_2	IF_3	CALL_13
0x4000fe0	      0xe8ebfdffff	           call sym.prepend_type.isra.12	       442	prdbg.c	FUNCTION_7	IF_2	IF_3	CALL_13
0x4000fe5	            0x85c0	                           test eax, eax	       442	prdbg.c	FUNCTION_7	IF_2	IF_3	CALL_13
0x4000fe7	            0x750f	                           jne 0x4000ff8	       442	prdbg.c	FUNCTION_7	IF_2	IF_3	CALL_13
0x4000fe9	              0x5b	                                 pop rbx	       452	prdbg.c	FUNCTION_7
0x4000fea	            0x31c0	                            xor eax, eax	       444	prdbg.c	FUNCTION_7	IF_2	IF_3
0x4000fec	              0x5d	                                 pop rbp	       452	prdbg.c	FUNCTION_7
0x4000fed	            0x415c	                                 pop r12	       452	prdbg.c	FUNCTION_7
0x4000fef	            0x415d	                                 pop r13	       452	prdbg.c	FUNCTION_7
0x4000ff1	            0x415e	                                 pop r14	       452	prdbg.c	FUNCTION_7
0x4000ff3	              0xc3	                                     ret	       452	prdbg.c	FUNCTION_7
0x4000ff4	         0xf1f4000	                         nop dword [rax]	       452	prdbg.c	FUNCTION_7
0x4000ff8	      0xbe00000000	                              mov esi, 0	       443	prdbg.c	FUNCTION_7	IF_2	IF_3	CALL_14
0x4000ffd	          0x4889df	                            mov rdi, rbx	       443	prdbg.c	FUNCTION_7	IF_2	IF_3	CALL_14
0x4001000	      0xe86bfeffff	            call sym.append_type.isra.14	       443	prdbg.c	FUNCTION_7	IF_2	IF_3	CALL_14
0x4001005	            0x85c0	                           test eax, eax	       443	prdbg.c	FUNCTION_7	IF_2	IF_3	CALL_14
0x4001007	            0x74e0	                            je 0x4000fe9	       443	prdbg.c	FUNCTION_7	IF_2	IF_3	CALL_14
0x4001009	      0x41807d0000	                       cmp byte [r13], 0	       447	prdbg.c	FUNCTION_7	IF_4
0x400100e	      0xb801000000	                              mov eax, 1	       448	prdbg.c	FUNCTION_7	IF_4
0x4001013	            0x7488	                            je 0x4000f9d	       447	prdbg.c	FUNCTION_7	IF_4
0x4001015	        0x4883c510	                           add rbp, 0x10	       447	prdbg.c	FUNCTION_7	IF_4
0x4001019	      0xbe00000000	                              mov esi, 0	       450	prdbg.c	FUNCTION_7	CALL_15
0x400101e	          0x4889ef	                            mov rdi, rbp	       450	prdbg.c	FUNCTION_7	CALL_15
0x4001021	      0xe84afeffff	            call sym.append_type.isra.14	       450	prdbg.c	FUNCTION_7	CALL_15
0x4001026	            0x85c0	                           test eax, eax	       451	prdbg.c	FUNCTION_7	CALL_16
0x4001028	            0x74bf	                            je 0x4000fe9	       451	prdbg.c	FUNCTION_7	CALL_16
0x400102a	          0x4c89ee	                            mov rsi, r13	       451	prdbg.c	FUNCTION_7	CALL_16
0x400102d	          0x4889ef	                            mov rdi, rbp	       451	prdbg.c	FUNCTION_7	CALL_16
0x4001030	      0xe83bfeffff	            call sym.append_type.isra.14	       451	prdbg.c	FUNCTION_7	CALL_16
0x4001035	            0x85c0	                           test eax, eax	       435	prdbg.c	FUNCTION_7	IF_1
0x4001037	           0xf95c0	                                setne al	       435	prdbg.c	FUNCTION_7	IF_1
0x400103a	           0xfb6c0	                           movzx eax, al	       435	prdbg.c	FUNCTION_7	IF_1
0x400103d	      0xe95bffffff	                           jmp 0x4000f9d	       435	prdbg.c	FUNCTION_7	IF_1
0x4001042	    0x660f1f440000	                    nop word [rax + rax]	       435	prdbg.c	FUNCTION_7	IF_1
0x4001048	      0xbe28000000	                           mov esi, 0x28	       440	prdbg.c	FUNCTION_7	IF_2	CALL_12
0x400104d	          0x4c89e7	                            mov rdi, r12	       440	prdbg.c	FUNCTION_7	IF_2	CALL_12
0x4001050	      0xe800000000	                          call 0x4001055	       440	prdbg.c	FUNCTION_7	IF_2	CALL_12
0x4001055	          0x4885c0	                           test rax, rax	       440	prdbg.c	FUNCTION_7	IF_2	CALL_12
0x4001058	     0xf8576ffffff	                           jne 0x4000fd4	       440	prdbg.c	FUNCTION_7	IF_2	CALL_12
0x400105e	            0xeba9	                           jmp 0x4001009	       440	prdbg.c	FUNCTION_7	IF_2	CALL_12
0x4001060	      0xb900000000	                              mov ecx, 0	       419	prdbg.c	FUNCTION_7	CALL_1
0x4001065	      0xbaa3010000	                          mov edx, 0x1a3	       419	prdbg.c	FUNCTION_7	CALL_1
0x400106a	      0xbe00000000	                              mov esi, 0	       419	prdbg.c	FUNCTION_7	CALL_1
0x400106f	      0xbf00000000	                              mov edi, 0	       419	prdbg.c	FUNCTION_7	CALL_1
0x4001074	      0xe800000000	                          call 0x4001079	       419	prdbg.c	FUNCTION_7	CALL_1
pr_float_constant	SWITCH,0:WHILE,0:IF,0:FOR,0:ELSE,0:functions,0:CALL,1:DO,0	31
0x4000090	            0x4154	                                push r12	      1713	prdbg.c	FUNCTION_47
0x4000092	              0x55	                                push rbp	      1713	prdbg.c	FUNCTION_47
0x4000093	          0x4989f4	                            mov r12, rsi	      1713	prdbg.c	FUNCTION_47
0x4000096	              0x53	                                push rbx	      1713	prdbg.c	FUNCTION_47
0x4000097	          0x4889fd	                            mov rbp, rdi	      1713	prdbg.c	FUNCTION_47
0x400009a	        0x4883ec10	                           sub rsp, 0x10	      1713	prdbg.c	FUNCTION_47
0x400009e	          0x8b4708	                mov eax, dword [rdi + 8]	       327	prdbg.c	FUNCTION_2	FOR_1
0x40000a1	    0xf20f11442408	             movsd qword [rsp + 8], xmm0	      1713	prdbg.c	FUNCTION_47
0x40000a7	            0x85c0	                           test eax, eax	       327	prdbg.c	FUNCTION_2	FOR_1
0x40000a9	            0x741b	                            je 0x40000c6	       327	prdbg.c	FUNCTION_2	FOR_1
0x40000ab	            0x31db	                            xor ebx, ebx	       327	prdbg.c	FUNCTION_2	FOR_1
0x40000ad	           0xf1f00	                         nop dword [rax]	       327	prdbg.c	FUNCTION_2	FOR_1
0x40000b0	        0x488b7500	                    mov rsi, qword [rbp]	       328	prdbg.c	FUNCTION_2	CALL_1
0x40000b4	      0xbf20000000	                           mov edi, 0x20	       328	prdbg.c	FUNCTION_2	CALL_1
0x40000b9	          0x83c301	                              add ebx, 1	       327	prdbg.c	FUNCTION_2	FOR_1
0x40000bc	      0xe800000000	                          call 0x40000c1	       328	prdbg.c	FUNCTION_2	CALL_1
0x40000c1	          0x3b5d08	                cmp ebx, dword [rbp + 8]	       327	prdbg.c	FUNCTION_2	FOR_1
0x40000c4	            0x72ea	                            jb 0x40000b0	       327	prdbg.c	FUNCTION_2	FOR_1
0x40000c6	        0x488b7d00	                    mov rdi, qword [rbp]	        97	stdio2.h	CALL_96
0x40000ca	    0xf20f10442408	            movsd xmm0, qword [rsp + 8] 	        97	stdio2.h	CALL_96
0x40000d0	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_96
0x40000d3	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_96
0x40000d8	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_96
0x40000dd	      0xb801000000	                              mov eax, 1	        97	stdio2.h	CALL_96
0x40000e2	      0xe800000000	                          call 0x40000e7	        97	stdio2.h	CALL_96
0x40000e7	        0x4883c410	                           add rsp, 0x10	      1719	prdbg.c	FUNCTION_47
0x40000eb	      0xb801000000	                              mov eax, 1	      1719	prdbg.c	FUNCTION_47
0x40000f0	              0x5b	                                 pop rbx	      1719	prdbg.c	FUNCTION_47
0x40000f1	              0x5d	                                 pop rbp	      1719	prdbg.c	FUNCTION_47
0x40000f2	            0x415c	                                 pop r12	      1719	prdbg.c	FUNCTION_47
0x40000f4	              0xc3	                                     ret	      1719	prdbg.c	FUNCTION_47
tg_typed_constant	SWITCH,0:WHILE,0:IF,1:FOR,0:ELSE,0:functions,0:CALL,4:DO,0	65
0x4000780	            0x4156	                                push r14	      2569	prdbg.c	FUNCTION_76
0x4000782	            0x4155	                                push r13	      2569	prdbg.c	FUNCTION_76
0x4000784	          0x4989d6	                            mov r14, rdx	      2569	prdbg.c	FUNCTION_76
0x4000787	            0x4154	                                push r12	      2569	prdbg.c	FUNCTION_76
0x4000789	              0x55	                                push rbp	      2569	prdbg.c	FUNCTION_76
0x400078a	          0x4889fd	                            mov rbp, rdi	      2569	prdbg.c	FUNCTION_76
0x400078d	              0x53	                                push rbx	      2569	prdbg.c	FUNCTION_76
0x400078e	        0x4883c710	                           add rdi, 0x10	      2569	prdbg.c	FUNCTION_76
0x4000792	          0x4989f5	                            mov r13, rsi	      2569	prdbg.c	FUNCTION_76
0x4000795	        0x4883ec20	                           sub rsp, 0x20	      2569	prdbg.c	FUNCTION_76
0x4000799	    0x64488b042528	                mov rax, qword fs:[0x28]	      2569	prdbg.c	FUNCTION_76
0x40007a2	      0x4889442418	             mov qword [rsp + 0x18], rax	      2569	prdbg.c	FUNCTION_76
0x40007a7	            0x31c0	                            xor eax, eax	      2569	prdbg.c	FUNCTION_76
0x40007a9	      0xe832feffff	                call sym.pop_type.isra.3	      2574	prdbg.c	FUNCTION_76	CALL_1
0x40007ae	          0x4885c0	                           test rax, rax	      2575	prdbg.c	FUNCTION_76	IF_1
0x40007b1	     0xf8499000000	                            je 0x4000850	      2575	prdbg.c	FUNCTION_76	IF_1
0x40007b7	          0x8b4d08	                mov ecx, dword [rbp + 8]	       327	prdbg.c	FUNCTION_2	FOR_1
0x40007ba	            0x31db	                            xor ebx, ebx	       327	prdbg.c	FUNCTION_2	FOR_1
0x40007bc	          0x4989c4	                            mov r12, rax	       327	prdbg.c	FUNCTION_2	FOR_1
0x40007bf	            0x85c9	                           test ecx, ecx	       327	prdbg.c	FUNCTION_2	FOR_1
0x40007c1	            0x741b	                            je 0x40007de	       327	prdbg.c	FUNCTION_2	FOR_1
0x40007c3	       0xf1f440000	                   nop dword [rax + rax]	       327	prdbg.c	FUNCTION_2	FOR_1
0x40007c8	        0x488b7500	                    mov rsi, qword [rbp]	       328	prdbg.c	FUNCTION_2	CALL_1
0x40007cc	      0xbf20000000	                           mov edi, 0x20	       328	prdbg.c	FUNCTION_2	CALL_1
0x40007d1	          0x83c301	                              add ebx, 1	       327	prdbg.c	FUNCTION_2	FOR_1
0x40007d4	      0xe800000000	                          call 0x40007d9	       328	prdbg.c	FUNCTION_2	CALL_1
0x40007d9	          0x3b5d08	                cmp ebx, dword [rbp + 8]	       327	prdbg.c	FUNCTION_2	FOR_1
0x40007dc	            0x72ea	                            jb 0x40007c8	       327	prdbg.c	FUNCTION_2	FOR_1
0x40007de	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_96	CALL_1
0x40007e1	          0x4d89f0	                             mov r8, r14	        33	stdio2.h	FUNCTION_96	CALL_1
0x40007e4	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_96	CALL_1
0x40007e9	      0xba16000000	                           mov edx, 0x16	        33	stdio2.h	FUNCTION_96	CALL_1
0x40007ee	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_96	CALL_1
0x40007f3	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_96	CALL_1
0x40007f5	      0xe800000000	                          call 0x40007fa	        33	stdio2.h	FUNCTION_96	CALL_1
0x40007fa	          0x4889e3	                            mov rbx, rsp	        33	stdio2.h	FUNCTION_96	CALL_1
0x40007fd	        0x4883ec08	                              sub rsp, 8	        97	stdio2.h	CALL_96
0x4000801	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_96
0x4000806	              0x53	                                push rbx	        97	stdio2.h	CALL_96
0x4000807	        0x4c8b4520	              mov r8, qword [rbp + 0x20]	        97	stdio2.h	CALL_96
0x400080b	          0x4d89e1	                             mov r9, r12	        97	stdio2.h	CALL_96
0x400080e	        0x488b7d00	                    mov rdi, qword [rbp]	        97	stdio2.h	CALL_96
0x4000812	          0x4c89e9	                            mov rcx, r13	        97	stdio2.h	CALL_96
0x4000815	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_96
0x400081a	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_96
0x400081c	      0xe800000000	                          call 0x4000821	        97	stdio2.h	CALL_96
0x4000821	          0x4c89e7	                            mov rdi, r12	      2583	prdbg.c	FUNCTION_76	CALL_4
0x4000824	      0xe800000000	                          call 0x4000829	      2583	prdbg.c	FUNCTION_76	CALL_4
0x4000829	              0x58	                                 pop rax	      2585	prdbg.c	FUNCTION_76
0x400082a	              0x5a	                                 pop rdx	      2585	prdbg.c	FUNCTION_76
0x400082b	      0xb801000000	                              mov eax, 1	      2585	prdbg.c	FUNCTION_76
0x4000830	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2586	prdbg.c	FUNCTION_76
0x4000835	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2586	prdbg.c	FUNCTION_76
0x400083e	            0x7514	                           jne 0x4000854	      2586	prdbg.c	FUNCTION_76
0x4000840	        0x4883c420	                           add rsp, 0x20	      2586	prdbg.c	FUNCTION_76
0x4000844	              0x5b	                                 pop rbx	      2586	prdbg.c	FUNCTION_76
0x4000845	              0x5d	                                 pop rbp	      2586	prdbg.c	FUNCTION_76
0x4000846	            0x415c	                                 pop r12	      2586	prdbg.c	FUNCTION_76
0x4000848	            0x415d	                                 pop r13	      2586	prdbg.c	FUNCTION_76
0x400084a	            0x415e	                                 pop r14	      2586	prdbg.c	FUNCTION_76
0x400084c	              0xc3	                                     ret	      2586	prdbg.c	FUNCTION_76
0x400084d	           0xf1f00	                         nop dword [rax]	      2586	prdbg.c	FUNCTION_76
0x4000850	            0x31c0	                            xor eax, eax	      2576	prdbg.c	FUNCTION_76	IF_1
0x4000852	            0xebdc	                           jmp 0x4000830	      2576	prdbg.c	FUNCTION_76	IF_1
0x4000854	      0xe800000000	                          call 0x4000859	      2586	prdbg.c	FUNCTION_76
tg_end_class_type	SWITCH,0:WHILE,0:IF,1:FOR,0:ELSE,0:functions,0:CALL,3:DO,0	35
0x4000ca0	              0x53	                                push rbx	      2437	prdbg.c	FUNCTION_70
0x4000ca1	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      2441	prdbg.c	FUNCTION_70
0x4000ca5	          0x4889fb	                            mov rbx, rdi	      2437	prdbg.c	FUNCTION_70
0x4000ca8	        0x4c8b4720	              mov r8, qword [rdi + 0x20]	        97	stdio2.h	CALL_96
0x4000cac	          0x488b3f	                    mov rdi, qword [rdi]	        97	stdio2.h	CALL_96
0x4000caf	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_96
0x4000cb4	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_96
0x4000cb9	        0x488b4808	                mov rcx, qword [rax + 8]	        97	stdio2.h	CALL_96
0x4000cbd	        0x4c8b4820	              mov r9, qword [rax + 0x20]	        97	stdio2.h	CALL_96
0x4000cc1	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_96
0x4000cc3	      0xe800000000	                          call 0x4000cc8	        97	stdio2.h	CALL_96
0x4000cc8	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2442	prdbg.c	FUNCTION_70	IF_1
0x4000ccc	          0x8b5030	            mov edx, dword [rax + 0x30] 	      2442	prdbg.c	FUNCTION_70	IF_1
0x4000ccf	            0x85d2	                           test edx, edx	      2442	prdbg.c	FUNCTION_70	IF_1
0x4000cd1	            0x751d	                           jne 0x4000cf0	      2442	prdbg.c	FUNCTION_70	IF_1
0x4000cd3	          0x488b33	                    mov rsi, qword [rbx]	      2447	prdbg.c	FUNCTION_70	CALL_2
0x4000cd6	      0xbf0a000000	                            mov edi, 0xa	      2447	prdbg.c	FUNCTION_70	CALL_2
0x4000cdb	      0xe800000000	                          call 0x4000ce0	      2447	prdbg.c	FUNCTION_70	CALL_2
0x4000ce0	      0x48837b1000	               cmp qword [rbx + 0x10], 0	      2103	prdbg.c	FUNCTION_64	CALL_1
0x4000ce5	            0x7430	                            je 0x4000d17	      2103	prdbg.c	FUNCTION_64	CALL_1
0x4000ce7	      0xb801000000	                              mov eax, 1	      2450	prdbg.c	FUNCTION_70
0x4000cec	              0x5b	                                 pop rbx	      2450	prdbg.c	FUNCTION_70
0x4000ced	              0xc3	                                     ret	      2450	prdbg.c	FUNCTION_70
0x4000cee	            0x6690	                                     nop	      2450	prdbg.c	FUNCTION_70
0x4000cf0	        0x488b4828	            mov rcx, qword [rax + 0x28] 	        97	stdio2.h	CALL_96
0x4000cf4	          0x488b3b	                    mov rdi, qword [rbx]	        97	stdio2.h	CALL_96
0x4000cf7	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_96
0x4000cfc	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_96
0x4000d01	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_96
0x4000d03	      0xe800000000	                          call 0x4000d08	        97	stdio2.h	CALL_96
0x4000d08	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2445	prdbg.c	FUNCTION_70	IF_1	CALL_1
0x4000d0c	        0x488b7828	            mov rdi, qword [rax + 0x28] 	      2445	prdbg.c	FUNCTION_70	IF_1	CALL_1
0x4000d10	      0xe800000000	                          call 0x4000d15	      2445	prdbg.c	FUNCTION_70	IF_1	CALL_1
0x4000d15	            0xebbc	                           jmp 0x4000cd3	      2445	prdbg.c	FUNCTION_70	IF_1	CALL_1
0x4000d17	      0xe800000000	                          call 0x4000d1c	      2445	prdbg.c	FUNCTION_70	IF_1	CALL_1
pr_start_struct_type	SWITCH,0:WHILE,0:IF,13:FOR,0:ELSE,1:functions,0:CALL,10:DO,0	150
0x40031d0	            0x4156	                                push r14	      1043	prdbg.c	FUNCTION_30
0x40031d2	            0x4155	                                push r13	      1043	prdbg.c	FUNCTION_30
0x40031d4	          0x4189d6	                           mov r14d, edx	      1043	prdbg.c	FUNCTION_30
0x40031d7	            0x4154	                                push r12	      1043	prdbg.c	FUNCTION_30
0x40031d9	              0x55	                                push rbp	      1043	prdbg.c	FUNCTION_30
0x40031da	        0x488d6f10	                   lea rbp, [rdi + 0x10]	      1043	prdbg.c	FUNCTION_30
0x40031de	              0x53	                                push rbx	      1043	prdbg.c	FUNCTION_30
0x40031df	          0x4989f4	                            mov r12, rsi	      1043	prdbg.c	FUNCTION_30
0x40031e2	      0xbe00000000	                              mov esi, 0	      1048	prdbg.c	FUNCTION_30	IF_1	CALL_1
0x40031e7	          0x4889fb	                            mov rbx, rdi	      1043	prdbg.c	FUNCTION_30
0x40031ea	          0x4589c5	                           mov r13d, r8d	      1043	prdbg.c	FUNCTION_30
0x40031ed	        0x4883ec30	                           sub rsp, 0x30	      1043	prdbg.c	FUNCTION_30
0x40031f1	        0x83470802	                  add dword [rdi + 8], 2	      1046	prdbg.c	FUNCTION_30
0x40031f5	          0x4889ef	                            mov rdi, rbp	      1048	prdbg.c	FUNCTION_30	IF_1	CALL_1
0x40031f8	    0x64488b042528	                mov rax, qword fs:[0x28]	      1043	prdbg.c	FUNCTION_30
0x4003201	      0x4889442428	             mov qword [rsp + 0x28], rax	      1043	prdbg.c	FUNCTION_30
0x4003206	            0x31c0	                            xor eax, eax	      1043	prdbg.c	FUNCTION_30
0x4003208	            0x85c9	                           test ecx, ecx	      1048	prdbg.c	FUNCTION_30	IF_1	CALL_1
0x400320a	      0xb800000000	                              mov eax, 0	      1048	prdbg.c	FUNCTION_30	IF_1	CALL_1
0x400320f	        0x480f45f0	                         cmovne rsi, rax	      1048	prdbg.c	FUNCTION_30	IF_1	CALL_1
0x4003213	      0xe8c8faffff	              call sym.push_type.isra.30	      1048	prdbg.c	FUNCTION_30	IF_1	CALL_1
0x4003218	            0x85c0	                           test eax, eax	      1048	prdbg.c	FUNCTION_30	IF_1	CALL_1
0x400321a	            0x7429	                            je 0x4003245	      1048	prdbg.c	FUNCTION_30	IF_1	CALL_1
0x400321c	          0x4d85e4	                           test r12, r12	      1050	prdbg.c	FUNCTION_30	IF_2
0x400321f	     0xf84ab000000	                            je 0x40032d0	      1050	prdbg.c	FUNCTION_30	IF_2
0x4003225	          0x4c89e6	                            mov rsi, r12	      1052	prdbg.c	FUNCTION_30	IF_2	IF_3	CALL_2
0x4003228	          0x4889ef	                            mov rdi, rbp	      1052	prdbg.c	FUNCTION_30	IF_2	IF_3	CALL_2
0x400322b	      0xe840dcffff	            call sym.append_type.isra.14	      1052	prdbg.c	FUNCTION_30	IF_2	IF_3	CALL_2
0x4003230	            0x85c0	                           test eax, eax	      1052	prdbg.c	FUNCTION_30	IF_2	IF_3	CALL_2
0x4003232	            0x7411	                            je 0x4003245	      1052	prdbg.c	FUNCTION_30	IF_2	IF_3	CALL_2
0x4003234	      0xbe00000000	                              mov esi, 0	      1064	prdbg.c	FUNCTION_30	IF_5	CALL_4
0x4003239	          0x4889ef	                            mov rdi, rbp	      1064	prdbg.c	FUNCTION_30	IF_5	CALL_4
0x400323c	      0xe82fdcffff	            call sym.append_type.isra.14	      1064	prdbg.c	FUNCTION_30	IF_5	CALL_4
0x4003241	            0x85c0	                           test eax, eax	      1064	prdbg.c	FUNCTION_30	IF_5	CALL_4
0x4003243	            0x752b	                           jne 0x4003270	      1064	prdbg.c	FUNCTION_30	IF_5	CALL_4
0x4003245	            0x31c0	                            xor eax, eax	      1071	prdbg.c	FUNCTION_30	IF_6	IF_7
0x4003247	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      1094	prdbg.c	FUNCTION_30
0x400324c	    0x644833142528	                xor rdx, qword fs:[0x28]	      1094	prdbg.c	FUNCTION_30
0x4003255	     0xf8557010000	                           jne 0x40033b2	      1094	prdbg.c	FUNCTION_30
0x400325b	        0x4883c430	                           add rsp, 0x30	      1094	prdbg.c	FUNCTION_30
0x400325f	              0x5b	                                 pop rbx	      1094	prdbg.c	FUNCTION_30
0x4003260	              0x5d	                                 pop rbp	      1094	prdbg.c	FUNCTION_30
0x4003261	            0x415c	                                 pop r12	      1094	prdbg.c	FUNCTION_30
0x4003263	            0x415d	                                 pop r13	      1094	prdbg.c	FUNCTION_30
0x4003265	            0x415e	                                 pop r14	      1094	prdbg.c	FUNCTION_30
0x4003267	              0xc3	                                     ret	      1094	prdbg.c	FUNCTION_30
0x4003268	     0xf1f84000000	                   nop dword [rax + rax]	      1094	prdbg.c	FUNCTION_30
0x4003270	      0xbe00000000	                              mov esi, 0	      1070	prdbg.c	FUNCTION_30	IF_6	IF_7	CALL_5
0x4003275	          0x4889ef	                            mov rdi, rbp	      1070	prdbg.c	FUNCTION_30	IF_6	IF_7	CALL_5
0x4003278	      0xe8f3dbffff	            call sym.append_type.isra.14	      1070	prdbg.c	FUNCTION_30	IF_6	IF_7	CALL_5
0x400327d	            0x85c0	                           test eax, eax	      1070	prdbg.c	FUNCTION_30	IF_6	IF_7	CALL_5
0x400327f	            0x74c4	                            je 0x4003245	      1070	prdbg.c	FUNCTION_30	IF_6	IF_7	CALL_5
0x4003281	          0x4585ed	                         test r13d, r13d	      1073	prdbg.c	FUNCTION_30	IF_6	IF_8
0x4003284	          0x4989e4	                            mov r12, rsp	        33	stdio2.h	FUNCTION_96	CALL_1
0x4003287	     0xf85e3000000	                           jne 0x4003370	      1073	prdbg.c	FUNCTION_30	IF_6	IF_8
0x400328d	          0x4589f0	                           mov r8d, r14d	        33	stdio2.h	FUNCTION_96	CALL_1
0x4003290	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_96	CALL_1
0x4003295	      0xba1e000000	                           mov edx, 0x1e	        33	stdio2.h	FUNCTION_96	CALL_1
0x400329a	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_96	CALL_1
0x400329f	          0x4c89e7	                            mov rdi, r12	        33	stdio2.h	FUNCTION_96	CALL_1
0x40032a2	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_96	CALL_1
0x40032a4	      0xe800000000	                          call 0x40032a9	        33	stdio2.h	FUNCTION_96	CALL_1
0x40032a9	          0x4c89e6	                            mov rsi, r12	      1082	prdbg.c	FUNCTION_30	IF_6	IF_10	IF_11	CALL_7
0x40032ac	          0x4889ef	                            mov rdi, rbp	      1082	prdbg.c	FUNCTION_30	IF_6	IF_10	IF_11	CALL_7
0x40032af	      0xe8bcdbffff	            call sym.append_type.isra.14	      1082	prdbg.c	FUNCTION_30	IF_6	IF_10	IF_11	CALL_7
0x40032b4	            0x85c0	                           test eax, eax	      1082	prdbg.c	FUNCTION_30	IF_6	IF_10	IF_11	CALL_7
0x40032b6	            0x748d	                            je 0x4003245	      1082	prdbg.c	FUNCTION_30	IF_6	IF_10	IF_11	CALL_7
0x40032b8	      0xbe00000000	                              mov esi, 0	      1085	prdbg.c	FUNCTION_30	IF_6	IF_12	CALL_8
0x40032bd	          0x4889ef	                            mov rdi, rbp	      1085	prdbg.c	FUNCTION_30	IF_6	IF_12	CALL_8
0x40032c0	      0xe8abdbffff	            call sym.append_type.isra.14	      1085	prdbg.c	FUNCTION_30	IF_6	IF_12	CALL_8
0x40032c5	            0x85c0	                           test eax, eax	      1085	prdbg.c	FUNCTION_30	IF_6	IF_12	CALL_8
0x40032c7	            0x7554	                           jne 0x400331d	      1085	prdbg.c	FUNCTION_30	IF_6	IF_12	CALL_8
0x40032c9	      0xe977ffffff	                           jmp 0x4003245	      1085	prdbg.c	FUNCTION_30	IF_6	IF_12	CALL_8
0x40032ce	            0x6690	                                     nop	      1085	prdbg.c	FUNCTION_30	IF_6	IF_12	CALL_8
0x40032d0	          0x4589f0	                           mov r8d, r14d	        33	stdio2.h	FUNCTION_96	CALL_1
0x40032d3	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_96	CALL_1
0x40032d8	      0xba14000000	                           mov edx, 0x14	        33	stdio2.h	FUNCTION_96	CALL_1
0x40032dd	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_96	CALL_1
0x40032e2	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_96	CALL_1
0x40032e5	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_96	CALL_1
0x40032e7	      0xe800000000	                          call 0x40032ec	        33	stdio2.h	FUNCTION_96	CALL_1
0x40032ec	          0x4889e6	                            mov rsi, rsp	      1060	prdbg.c	FUNCTION_30	ELSE_1	IF_4	CALL_3
0x40032ef	          0x4889ef	                            mov rdi, rbp	      1060	prdbg.c	FUNCTION_30	ELSE_1	IF_4	CALL_3
0x40032f2	      0xe879dbffff	            call sym.append_type.isra.14	      1060	prdbg.c	FUNCTION_30	ELSE_1	IF_4	CALL_3
0x40032f7	            0x85c0	                           test eax, eax	      1060	prdbg.c	FUNCTION_30	ELSE_1	IF_4	CALL_3
0x40032f9	     0xf8448ffffff	                            je 0x4003247	      1060	prdbg.c	FUNCTION_30	ELSE_1	IF_4	CALL_3
0x40032ff	      0xbe00000000	                              mov esi, 0	      1064	prdbg.c	FUNCTION_30	IF_5	CALL_4
0x4003304	          0x4889ef	                            mov rdi, rbp	      1064	prdbg.c	FUNCTION_30	IF_5	CALL_4
0x4003307	      0xe864dbffff	            call sym.append_type.isra.14	      1064	prdbg.c	FUNCTION_30	IF_5	CALL_4
0x400330c	            0x85c0	                           test eax, eax	      1064	prdbg.c	FUNCTION_30	IF_5	CALL_4
0x400330e	     0xf8431ffffff	                            je 0x4003245	      1064	prdbg.c	FUNCTION_30	IF_5	CALL_4
0x4003314	          0x4585ed	                         test r13d, r13d	      1066	prdbg.c	FUNCTION_30	IF_6
0x4003317	     0xf859a000000	                           jne 0x40033b7	      1066	prdbg.c	FUNCTION_30	IF_6
0x400331d	      0xbe00000000	                              mov esi, 0	      1088	prdbg.c	FUNCTION_30	IF_13	CALL_9
0x4003322	          0x4889ef	                            mov rdi, rbp	      1088	prdbg.c	FUNCTION_30	IF_13	CALL_9
0x4003325	      0xe846dbffff	            call sym.append_type.isra.14	      1088	prdbg.c	FUNCTION_30	IF_13	CALL_9
0x400332a	            0x85c0	                           test eax, eax	      1088	prdbg.c	FUNCTION_30	IF_13	CALL_9
0x400332c	     0xf8413ffffff	                            je 0x4003245	      1088	prdbg.c	FUNCTION_30	IF_13	CALL_9
0x4003332	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1091	prdbg.c	FUNCTION_30
0x4003336	          0x4531e4	                          xor r12d, r12d	       461	prdbg.c	FUNCTION_8	FOR_1
0x4003339	    0xc74010000000	               mov dword [rax + 0x10], 0	      1091	prdbg.c	FUNCTION_30
0x4003340	          0x8b4308	                mov eax, dword [rbx + 8]	       461	prdbg.c	FUNCTION_8	FOR_1
0x4003343	            0x85c0	                           test eax, eax	       461	prdbg.c	FUNCTION_8	FOR_1
0x4003345	            0x7513	                           jne 0x400335a	       461	prdbg.c	FUNCTION_8	FOR_1
0x4003347	            0xeb5f	                           jmp 0x40033a8	       461	prdbg.c	FUNCTION_8	FOR_1
0x4003349	     0xf1f80000000	                         nop dword [rax]	       461	prdbg.c	FUNCTION_8	FOR_1
0x4003350	        0x4183c401	                             add r12d, 1	       461	prdbg.c	FUNCTION_8	FOR_1
0x4003354	        0x443b6308	               cmp r12d, dword [rbx + 8]	       461	prdbg.c	FUNCTION_8	FOR_1
0x4003358	            0x734e	                           jae 0x40033a8	       461	prdbg.c	FUNCTION_8	FOR_1
0x400335a	      0xbe00000000	                              mov esi, 0	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x400335f	          0x4889ef	                            mov rdi, rbp	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4003362	      0xe809dbffff	            call sym.append_type.isra.14	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4003367	            0x85c0	                           test eax, eax	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4003369	            0x75e5	                           jne 0x4003350	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x400336b	      0xe9d5feffff	                           jmp 0x4003245	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4003370	          0x4589e8	                           mov r8d, r13d	        33	stdio2.h	FUNCTION_96	CALL_1
0x4003373	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_96	CALL_1
0x4003378	      0xba1e000000	                           mov edx, 0x1e	        33	stdio2.h	FUNCTION_96	CALL_1
0x400337d	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_96	CALL_1
0x4003382	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_96	CALL_1
0x4003385	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_96	CALL_1
0x4003387	      0xe800000000	                          call 0x400338c	        33	stdio2.h	FUNCTION_96	CALL_1
0x400338c	          0x4889e6	                            mov rsi, rsp	      1076	prdbg.c	FUNCTION_30	IF_6	IF_8	IF_9	CALL_6
0x400338f	          0x4889ef	                            mov rdi, rbp	      1076	prdbg.c	FUNCTION_30	IF_6	IF_8	IF_9	CALL_6
0x4003392	      0xe8d9daffff	            call sym.append_type.isra.14	      1076	prdbg.c	FUNCTION_30	IF_6	IF_8	IF_9	CALL_6
0x4003397	            0x85c0	                           test eax, eax	      1076	prdbg.c	FUNCTION_30	IF_6	IF_8	IF_9	CALL_6
0x4003399	     0xf84a6feffff	                            je 0x4003245	      1076	prdbg.c	FUNCTION_30	IF_6	IF_8	IF_9	CALL_6
0x400339f	      0xe9e9feffff	                           jmp 0x400328d	      1076	prdbg.c	FUNCTION_30	IF_6	IF_8	IF_9	CALL_6
0x40033a4	         0xf1f4000	                         nop dword [rax]	      1076	prdbg.c	FUNCTION_30	IF_6	IF_8	IF_9	CALL_6
0x40033a8	      0xb801000000	                              mov eax, 1	       467	prdbg.c	FUNCTION_8
0x40033ad	      0xe995feffff	                           jmp 0x4003247	       467	prdbg.c	FUNCTION_8
0x40033b2	      0xe800000000	                          call 0x40033b7	      1094	prdbg.c	FUNCTION_30
0x40033b7	      0xbe00000000	                              mov esi, 0	      1070	prdbg.c	FUNCTION_30	IF_6	IF_7	CALL_5
0x40033bc	          0x4889ef	                            mov rdi, rbp	      1070	prdbg.c	FUNCTION_30	IF_6	IF_7	CALL_5
0x40033bf	      0xe8acdaffff	            call sym.append_type.isra.14	      1070	prdbg.c	FUNCTION_30	IF_6	IF_7	CALL_5
0x40033c4	            0x85c0	                           test eax, eax	      1070	prdbg.c	FUNCTION_30	IF_6	IF_7	CALL_5
0x40033c6	     0xf8479feffff	                            je 0x4003245	      1070	prdbg.c	FUNCTION_30	IF_6	IF_7	CALL_5
0x40033cc	          0x4589e8	                           mov r8d, r13d	        33	stdio2.h	FUNCTION_96	CALL_1
0x40033cf	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_96	CALL_1
0x40033d4	      0xba1e000000	                           mov edx, 0x1e	        33	stdio2.h	FUNCTION_96	CALL_1
0x40033d9	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_96	CALL_1
0x40033de	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_96	CALL_1
0x40033e1	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_96	CALL_1
0x40033e3	      0xe800000000	                          call 0x40033e8	        33	stdio2.h	FUNCTION_96	CALL_1
0x40033e8	          0x4889e6	                            mov rsi, rsp	      1076	prdbg.c	FUNCTION_30	IF_6	IF_8	IF_9	CALL_6
0x40033eb	          0x4889ef	                            mov rdi, rbp	      1076	prdbg.c	FUNCTION_30	IF_6	IF_8	IF_9	CALL_6
0x40033ee	      0xe87ddaffff	            call sym.append_type.isra.14	      1076	prdbg.c	FUNCTION_30	IF_6	IF_8	IF_9	CALL_6
0x40033f3	            0x85c0	                           test eax, eax	      1076	prdbg.c	FUNCTION_30	IF_6	IF_8	IF_9	CALL_6
0x40033f5	     0xf85bdfeffff	                           jne 0x40032b8	      1076	prdbg.c	FUNCTION_30	IF_6	IF_8	IF_9	CALL_6
0x40033fb	      0xe945feffff	                           jmp 0x4003245	      1076	prdbg.c	FUNCTION_30	IF_6	IF_8	IF_9	CALL_6
pr_void_type	SWITCH,0:WHILE,0:IF,0:FOR,0:ELSE,0:functions,0:CALL,1:DO,0	3
0x4003690	        0x4883c710	                           add rdi, 0x10	       572	prdbg.c	FUNCTION_14
0x4003694	      0xbe00000000	                              mov esi, 0	       575	prdbg.c	FUNCTION_14	CALL_1
0x4003699	      0xe942f6ffff	               jmp sym.push_type.isra.30	       575	prdbg.c	FUNCTION_14	CALL_1
pr_end_class_type	SWITCH,0:WHILE,0:IF,0:FOR,0:ELSE,0:functions,0:CALL,1:DO,0	1
0x4000dc0	      0xe95bffffff	              jmp sym.pr_end_struct_type	      1584	prdbg.c	FUNCTION_41	CALL_1
pr_array_type	SWITCH,0:WHILE,0:IF,8:FOR,0:ELSE,2:functions,0:CALL,9:DO,0	117
0x4004030	            0x4157	                                push r15	       827	prdbg.c	FUNCTION_24
0x4004032	            0x4156	                                push r14	       827	prdbg.c	FUNCTION_24
0x4004034	          0x4989f7	                            mov r15, rsi	       827	prdbg.c	FUNCTION_24
0x4004037	            0x4155	                                push r13	       827	prdbg.c	FUNCTION_24
0x4004039	        0x4c8d6f10	                   lea r13, [rdi + 0x10]	       827	prdbg.c	FUNCTION_24
0x400403d	            0x4154	                                push r12	       827	prdbg.c	FUNCTION_24
0x400403f	              0x55	                                push rbp	       827	prdbg.c	FUNCTION_24
0x4004040	              0x53	                                push rbx	       827	prdbg.c	FUNCTION_24
0x4004041	          0x4889fd	                            mov rbp, rdi	       827	prdbg.c	FUNCTION_24
0x4004044	          0x4c89ef	                            mov rdi, r13	       832	prdbg.c	FUNCTION_24	CALL_1
0x4004047	          0x4989d4	                            mov r12, rdx	       827	prdbg.c	FUNCTION_24
0x400404a	          0x4189ce	                           mov r14d, ecx	       827	prdbg.c	FUNCTION_24
0x400404d	    0x4881ec880000	                           sub rsp, 0x88	       827	prdbg.c	FUNCTION_24
0x4004054	    0x64488b042528	                mov rax, qword fs:[0x28]	       827	prdbg.c	FUNCTION_24
0x400405d	      0x4889442478	             mov qword [rsp + 0x78], rax	       827	prdbg.c	FUNCTION_24
0x4004062	            0x31c0	                            xor eax, eax	       827	prdbg.c	FUNCTION_24
0x4004064	      0xe877c5ffff	                call sym.pop_type.isra.3	       832	prdbg.c	FUNCTION_24	CALL_1
0x4004069	          0x4885c0	                           test rax, rax	       833	prdbg.c	FUNCTION_24	IF_1
0x400406c	     0xf8486000000	                            je 0x40040f8	       833	prdbg.c	FUNCTION_24	IF_1
0x4004072	          0x4d85ff	                           test r15, r15	       836	prdbg.c	FUNCTION_24	IF_2
0x4004075	          0x4889c3	                            mov rbx, rax	       836	prdbg.c	FUNCTION_24	IF_2
0x4004078	     0xf85da000000	                           jne 0x4004158	       836	prdbg.c	FUNCTION_24	IF_2
0x400407e	        0x4983fcff	             cmp r12, 0xffffffffffffffff	       838	prdbg.c	FUNCTION_24	IF_2	IF_3
0x4004082	     0xf8438010000	                            je 0x40041c0	       838	prdbg.c	FUNCTION_24	IF_2	IF_3
0x4004088	      0x4d8d442401	                       lea r8, [r12 + 1]	        33	stdio2.h	FUNCTION_96	CALL_1
0x400408d	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	        33	stdio2.h	FUNCTION_96	CALL_1
0x4004092	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_96	CALL_1
0x4004097	      0xba16000000	                           mov edx, 0x16	        33	stdio2.h	FUNCTION_96	CALL_1
0x400409c	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_96	CALL_1
0x40040a1	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_96	CALL_1
0x40040a3	      0x4c8d642440	                   lea r12, [rsp + 0x40]	        33	stdio2.h	FUNCTION_96	CALL_1
0x40040a8	      0xe800000000	                          call 0x40040ad	        33	stdio2.h	FUNCTION_96	CALL_1
0x40040ad	      0x4c8d442420	                    lea r8, [rsp + 0x20]	        33	stdio2.h	FUNCTION_96	CALL_1
0x40040b2	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_96	CALL_1
0x40040b7	      0xba32000000	                           mov edx, 0x32	        33	stdio2.h	FUNCTION_96	CALL_1
0x40040bc	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_96	CALL_1
0x40040c1	          0x4c89e7	                            mov rdi, r12	        33	stdio2.h	FUNCTION_96	CALL_1
0x40040c4	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_96	CALL_1
0x40040c6	      0xe800000000	                          call 0x40040cb	        33	stdio2.h	FUNCTION_96	CALL_1
0x40040cb	          0x4c89e6	                            mov rsi, r12	       853	prdbg.c	FUNCTION_24	IF_4	CALL_5
0x40040ce	          0x4889ef	                            mov rdi, rbp	       853	prdbg.c	FUNCTION_24	IF_4	CALL_5
0x40040d1	      0xe82aceffff	                call sym.substitute_type	       853	prdbg.c	FUNCTION_24	IF_4	CALL_5
0x40040d6	            0x85c0	                           test eax, eax	       853	prdbg.c	FUNCTION_24	IF_4	CALL_5
0x40040d8	            0x741e	                            je 0x40040f8	       853	prdbg.c	FUNCTION_24	IF_4	CALL_5
0x40040da	          0x803b69	                    cmp byte [rbx], 0x69	       856	prdbg.c	FUNCTION_24	IF_5	CALL_6
0x40040dd	            0x7441	                            je 0x4004120	       856	prdbg.c	FUNCTION_24	IF_5	CALL_6
0x40040df	      0xbe00000000	                              mov esi, 0	       858	prdbg.c	FUNCTION_24	IF_5	IF_6	CALL_7
0x40040e4	          0x4c89ef	                            mov rdi, r13	       858	prdbg.c	FUNCTION_24	IF_5	IF_6	CALL_7
0x40040e7	      0xe884cdffff	            call sym.append_type.isra.14	       858	prdbg.c	FUNCTION_24	IF_5	IF_6	CALL_7
0x40040ec	            0x85c0	                           test eax, eax	       858	prdbg.c	FUNCTION_24	IF_5	IF_6	CALL_7
0x40040ee	     0xf85e4000000	                           jne 0x40041d8	       858	prdbg.c	FUNCTION_24	IF_5	IF_6	CALL_7
0x40040f4	         0xf1f4000	                         nop dword [rax]	       858	prdbg.c	FUNCTION_24	IF_5	IF_6	CALL_7
0x40040f8	            0x31c0	                            xor eax, eax	       834	prdbg.c	FUNCTION_24	IF_1
0x40040fa	      0x488b542478	            mov rdx, qword [rsp + 0x78] 	       870	prdbg.c	FUNCTION_24
0x40040ff	    0x644833142528	                xor rdx, qword fs:[0x28]	       870	prdbg.c	FUNCTION_24
0x4004108	     0xf85e2000000	                           jne 0x40041f0	       870	prdbg.c	FUNCTION_24
0x400410e	    0x4881c4880000	                           add rsp, 0x88	       870	prdbg.c	FUNCTION_24
0x4004115	              0x5b	                                 pop rbx	       870	prdbg.c	FUNCTION_24
0x4004116	              0x5d	                                 pop rbp	       870	prdbg.c	FUNCTION_24
0x4004117	            0x415c	                                 pop r12	       870	prdbg.c	FUNCTION_24
0x4004119	            0x415d	                                 pop r13	       870	prdbg.c	FUNCTION_24
0x400411b	            0x415e	                                 pop r14	       870	prdbg.c	FUNCTION_24
0x400411d	            0x415f	                                 pop r15	       870	prdbg.c	FUNCTION_24
0x400411f	              0xc3	                                     ret	       870	prdbg.c	FUNCTION_24
0x4004120	        0x807b016e	                cmp byte [rbx + 1], 0x6e	       856	prdbg.c	FUNCTION_24	IF_5	CALL_6
0x4004124	            0x75b9	                           jne 0x40040df	       856	prdbg.c	FUNCTION_24	IF_5	CALL_6
0x4004126	        0x807b0274	                cmp byte [rbx + 2], 0x74	       856	prdbg.c	FUNCTION_24	IF_5	CALL_6
0x400412a	            0x75b3	                           jne 0x40040df	       856	prdbg.c	FUNCTION_24	IF_5	CALL_6
0x400412c	        0x807b0300	                   cmp byte [rbx + 3], 0	       856	prdbg.c	FUNCTION_24	IF_5	CALL_6
0x4004130	            0x75ad	                           jne 0x40040df	       856	prdbg.c	FUNCTION_24	IF_5	CALL_6
0x4004132	          0x4585f6	                         test r14d, r14d	       863	prdbg.c	FUNCTION_24	IF_7
0x4004135	      0xb801000000	                              mov eax, 1	       869	prdbg.c	FUNCTION_24
0x400413a	            0x74be	                            je 0x40040fa	       863	prdbg.c	FUNCTION_24	IF_7
0x400413c	      0xbe00000000	                              mov esi, 0	       865	prdbg.c	FUNCTION_24	IF_7	IF_8	CALL_9
0x4004141	          0x4c89ef	                            mov rdi, r13	       865	prdbg.c	FUNCTION_24	IF_7	IF_8	CALL_9
0x4004144	      0xe827cdffff	            call sym.append_type.isra.14	       865	prdbg.c	FUNCTION_24	IF_7	IF_8	CALL_9
0x4004149	            0x85c0	                           test eax, eax	       834	prdbg.c	FUNCTION_24	IF_1
0x400414b	           0xf95c0	                                setne al	       834	prdbg.c	FUNCTION_24	IF_1
0x400414e	           0xfb6c0	                           movzx eax, al	       834	prdbg.c	FUNCTION_24	IF_1
0x4004151	            0xeba7	                           jmp 0x40040fa	       834	prdbg.c	FUNCTION_24	IF_1
0x4004153	       0xf1f440000	                   nop dword [rax + rax]	       834	prdbg.c	FUNCTION_24	IF_1
0x4004158	          0x4d89f8	                             mov r8, r15	        33	stdio2.h	FUNCTION_96	CALL_1
0x400415b	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_96	CALL_1
0x400415e	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_96	CALL_1
0x4004163	      0xba16000000	                           mov edx, 0x16	        33	stdio2.h	FUNCTION_96	CALL_1
0x4004168	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_96	CALL_1
0x400416d	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_96	CALL_1
0x400416f	      0xe800000000	                          call 0x4004174	        33	stdio2.h	FUNCTION_96	CALL_1
0x4004174	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	        33	stdio2.h	FUNCTION_96	CALL_1
0x4004179	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_96	CALL_1
0x400417c	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_96	CALL_1
0x4004181	      0xba16000000	                           mov edx, 0x16	        33	stdio2.h	FUNCTION_96	CALL_1
0x4004186	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_96	CALL_1
0x400418b	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_96	CALL_1
0x400418d	      0x4c8d642440	                   lea r12, [rsp + 0x40]	        33	stdio2.h	FUNCTION_96	CALL_1
0x4004192	      0xe800000000	                          call 0x4004197	        33	stdio2.h	FUNCTION_96	CALL_1
0x4004197	      0x4c8d4c2420	                    lea r9, [rsp + 0x20]	        33	stdio2.h	FUNCTION_96	CALL_1
0x400419c	          0x4989e0	                             mov r8, rsp	        33	stdio2.h	FUNCTION_96	CALL_1
0x400419f	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_96	CALL_1
0x40041a4	      0xba32000000	                           mov edx, 0x32	        33	stdio2.h	FUNCTION_96	CALL_1
0x40041a9	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_96	CALL_1
0x40041ae	          0x4c89e7	                            mov rdi, r12	        33	stdio2.h	FUNCTION_96	CALL_1
0x40041b1	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_96	CALL_1
0x40041b3	      0xe800000000	                          call 0x40041b8	        33	stdio2.h	FUNCTION_96	CALL_1
0x40041b8	      0xe90effffff	                           jmp 0x40040cb	        33	stdio2.h	FUNCTION_96	CALL_1
0x40041bd	           0xf1f00	                         nop dword [rax]	        33	stdio2.h	FUNCTION_96	CALL_1
0x40041c0	    0xc74424407c5b	       mov dword [rsp + 0x40], 0x5d5b7c 	        33	stdio2.h	FUNCTION_96	CALL_1
0x40041c8	      0x4c8d642440	                   lea r12, [rsp + 0x40]	        33	stdio2.h	FUNCTION_96	CALL_1
0x40041cd	      0xe9f9feffff	                           jmp 0x40040cb	        33	stdio2.h	FUNCTION_96	CALL_1
0x40041d2	    0x660f1f440000	                    nop word [rax + rax]	        33	stdio2.h	FUNCTION_96	CALL_1
0x40041d8	          0x4889de	                            mov rsi, rbx	       859	prdbg.c	FUNCTION_24	IF_5	IF_6	CALL_8
0x40041db	          0x4c89ef	                            mov rdi, r13	       859	prdbg.c	FUNCTION_24	IF_5	IF_6	CALL_8
0x40041de	      0xe88dccffff	            call sym.append_type.isra.14	       859	prdbg.c	FUNCTION_24	IF_5	IF_6	CALL_8
0x40041e3	            0x85c0	                           test eax, eax	       859	prdbg.c	FUNCTION_24	IF_5	IF_6	CALL_8
0x40041e5	     0xf8547ffffff	                           jne 0x4004132	       859	prdbg.c	FUNCTION_24	IF_5	IF_6	CALL_8
0x40041eb	      0xe908ffffff	                           jmp 0x40040f8	       859	prdbg.c	FUNCTION_24	IF_5	IF_6	CALL_8
0x40041f0	      0xe800000000	                          call 0x40041f5	       870	prdbg.c	FUNCTION_24
tg_end_block	SWITCH,0:WHILE,0:IF,0:FOR,0:ELSE,0:functions,0:CALL,0:DO,0	2
0x4000080	      0xb801000000	                              mov eax, 1	      2810	prdbg.c	FUNCTION_82
0x4000085	              0xc3	                                     ret	      2810	prdbg.c	FUNCTION_82
tg_class_baseclass	SWITCH,1:WHILE,0:IF,9:FOR,0:ELSE,0:functions,0:CALL,10:DO,0	86
0x4003a50	            0x4155	                                push r13	      2229	prdbg.c	FUNCTION_67
0x4003a52	            0x4154	                                push r12	      2229	prdbg.c	FUNCTION_67
0x4003a54	              0x55	                                push rbp	      2229	prdbg.c	FUNCTION_67
0x4003a55	              0x53	                                push rbx	      2229	prdbg.c	FUNCTION_67
0x4003a56	        0x4883ec08	                              sub rsp, 8	      2229	prdbg.c	FUNCTION_67
0x4003a5a	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      2234	prdbg.c	FUNCTION_67	CALL_1
0x4003a5e	          0x4885c0	                           test rax, rax	      2234	prdbg.c	FUNCTION_67	CALL_1
0x4003a61	     0xf84fb000000	                            je 0x4003b62	      2234	prdbg.c	FUNCTION_67	CALL_1
0x4003a67	        0x48833800	                      cmp qword [rax], 0	      2234	prdbg.c	FUNCTION_67	CALL_1
0x4003a6b	     0xf84f1000000	                            je 0x4003b62	      2234	prdbg.c	FUNCTION_67	CALL_1
0x4003a71	        0x488d5f10	                   lea rbx, [rdi + 0x10]	      2234	prdbg.c	FUNCTION_67	CALL_1
0x4003a75	          0x4889fd	                            mov rbp, rdi	      2234	prdbg.c	FUNCTION_67	CALL_1
0x4003a78	          0x4189d5	                           mov r13d, edx	      2234	prdbg.c	FUNCTION_67	CALL_1
0x4003a7b	          0x4189cc	                           mov r12d, ecx	      2234	prdbg.c	FUNCTION_67	CALL_1
0x4003a7e	          0x4889df	                            mov rdi, rbx	      2236	prdbg.c	FUNCTION_67	CALL_2
0x4003a81	      0xe85acbffff	                call sym.pop_type.isra.3	      2236	prdbg.c	FUNCTION_67	CALL_2
0x4003a86	          0x4885c0	                           test rax, rax	      2237	prdbg.c	FUNCTION_67	IF_1
0x4003a89	            0x7458	                            je 0x4003ae3	      2237	prdbg.c	FUNCTION_67	IF_1
0x4003a8b	          0x4889c6	                            mov rsi, rax	      2240	prdbg.c	FUNCTION_67	IF_2	CALL_3
0x4003a8e	      0xbf00000000	                              mov edi, 0	      2240	prdbg.c	FUNCTION_67	IF_2	CALL_3
0x4003a93	      0xb906000000	                              mov ecx, 6	      2240	prdbg.c	FUNCTION_67	IF_2	CALL_3
0x4003a98	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2240	prdbg.c	FUNCTION_67	IF_2	CALL_3
0x4003a9a	        0x488d5006	                      lea rdx, [rax + 6]	      2241	prdbg.c	FUNCTION_67	IF_2
0x4003a9e	          0x4889df	                            mov rdi, rbx	      2245	prdbg.c	FUNCTION_67	IF_3	CALL_4
0x4003aa1	        0x400f97c6	                                seta sil	      2240	prdbg.c	FUNCTION_67	IF_2	CALL_3
0x4003aa5	           0xf92c1	                                 setb cl	      2240	prdbg.c	FUNCTION_67	IF_2	CALL_3
0x4003aa8	          0x4038ce	                             cmp sil, cl	      2241	prdbg.c	FUNCTION_67	IF_2
0x4003aab	        0x480f44c2	                          cmove rax, rdx	      2241	prdbg.c	FUNCTION_67	IF_2
0x4003aaf	          0x4889c6	                            mov rsi, rax	      2245	prdbg.c	FUNCTION_67	IF_3	CALL_4
0x4003ab2	      0xe829f2ffff	              call sym.push_type.isra.30	      2245	prdbg.c	FUNCTION_67	IF_3	CALL_4
0x4003ab7	            0x85c0	                           test eax, eax	      2245	prdbg.c	FUNCTION_67	IF_3	CALL_4
0x4003ab9	            0x7428	                            je 0x4003ae3	      2245	prdbg.c	FUNCTION_67	IF_3	CALL_4
0x4003abb	          0x4585ed	                         test r13d, r13d	      2248	prdbg.c	FUNCTION_67	IF_4
0x4003abe	     0xf8584000000	                           jne 0x4003b48	      2248	prdbg.c	FUNCTION_67	IF_4
0x4003ac4	        0x4183fc02	                             cmp r12d, 2	      2248	prdbg.c	FUNCTION_67	IF_4
0x4003ac8	      0xbe00000000	                              mov esi, 0	      2229	prdbg.c	FUNCTION_67
0x4003acd	            0x7708	                            ja 0x4003ad7	      2229	prdbg.c	FUNCTION_67
0x4003acf	    0x4a8b34e50000	                  mov rsi, qword [r12*8]	      2229	prdbg.c	FUNCTION_67
0x4003ad7	          0x4889df	                            mov rdi, rbx	      2270	prdbg.c	FUNCTION_67	IF_6	CALL_6
0x4003ada	      0xe8f1d2ffff	           call sym.prepend_type.isra.12	      2270	prdbg.c	FUNCTION_67	IF_6	CALL_6
0x4003adf	            0x85c0	                           test eax, eax	      2270	prdbg.c	FUNCTION_67	IF_6	CALL_6
0x4003ae1	            0x750d	                           jne 0x4003af0	      2270	prdbg.c	FUNCTION_67	IF_6	CALL_6
0x4003ae3	            0x31c0	                            xor eax, eax	      2238	prdbg.c	FUNCTION_67	IF_1
0x4003ae5	        0x4883c408	                              add rsp, 8	      2287	prdbg.c	FUNCTION_67
0x4003ae9	              0x5b	                                 pop rbx	      2287	prdbg.c	FUNCTION_67
0x4003aea	              0x5d	                                 pop rbp	      2287	prdbg.c	FUNCTION_67
0x4003aeb	            0x415c	                                 pop r12	      2287	prdbg.c	FUNCTION_67
0x4003aed	            0x415d	                                 pop r13	      2287	prdbg.c	FUNCTION_67
0x4003aef	              0xc3	                                     ret	      2287	prdbg.c	FUNCTION_67
0x4003af0	          0x4889df	                            mov rdi, rbx	      2273	prdbg.c	FUNCTION_67	CALL_7
0x4003af3	      0xe8e8caffff	                call sym.pop_type.isra.3	      2273	prdbg.c	FUNCTION_67	CALL_7
0x4003af8	          0x4885c0	                           test rax, rax	      2274	prdbg.c	FUNCTION_67	IF_7
0x4003afb	          0x4989c4	                            mov r12, rax	      2273	prdbg.c	FUNCTION_67	CALL_7
0x4003afe	            0x74e3	                            je 0x4003ae3	      2274	prdbg.c	FUNCTION_67	IF_7
0x4003b00	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      2277	prdbg.c	FUNCTION_67	IF_8	CALL_8
0x4003b04	          0x8b4030	            mov eax, dword [rax + 0x30] 	      2277	prdbg.c	FUNCTION_67	IF_8	CALL_8
0x4003b07	            0x85c0	                           test eax, eax	      2277	prdbg.c	FUNCTION_67	IF_8	CALL_8
0x4003b09	            0x7411	                            je 0x4003b1c	      2277	prdbg.c	FUNCTION_67	IF_8	CALL_8
0x4003b0b	      0xbe00000000	                              mov esi, 0	      2277	prdbg.c	FUNCTION_67	IF_8	CALL_8
0x4003b10	          0x4889df	                            mov rdi, rbx	      2277	prdbg.c	FUNCTION_67	IF_8	CALL_8
0x4003b13	      0xe898eeffff	          call sym.append_parent.isra.26	      2277	prdbg.c	FUNCTION_67	IF_8	CALL_8
0x4003b18	            0x85c0	                           test eax, eax	      2277	prdbg.c	FUNCTION_67	IF_8	CALL_8
0x4003b1a	            0x74c7	                            je 0x4003ae3	      2277	prdbg.c	FUNCTION_67	IF_8	CALL_8
0x4003b1c	          0x4c89e6	                            mov rsi, r12	      2280	prdbg.c	FUNCTION_67	IF_9	CALL_9
0x4003b1f	          0x4889df	                            mov rdi, rbx	      2280	prdbg.c	FUNCTION_67	IF_9	CALL_9
0x4003b22	      0xe889eeffff	          call sym.append_parent.isra.26	      2280	prdbg.c	FUNCTION_67	IF_9	CALL_9
0x4003b27	            0x85c0	                           test eax, eax	      2280	prdbg.c	FUNCTION_67	IF_9	CALL_9
0x4003b29	            0x74b8	                            je 0x4003ae3	      2280	prdbg.c	FUNCTION_67	IF_9	CALL_9
0x4003b2b	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      2282	prdbg.c	FUNCTION_67
0x4003b2f	          0x4c89e7	                            mov rdi, r12	      2284	prdbg.c	FUNCTION_67	CALL_10
0x4003b32	        0x83403001	               add dword [rax + 0x30], 1	      2282	prdbg.c	FUNCTION_67
0x4003b36	      0xe800000000	                          call 0x4003b3b	      2284	prdbg.c	FUNCTION_67	CALL_10
0x4003b3b	      0xb801000000	                              mov eax, 1	      2286	prdbg.c	FUNCTION_67
0x4003b40	            0xeba3	                           jmp 0x4003ae5	      2286	prdbg.c	FUNCTION_67
0x4003b42	    0x660f1f440000	                    nop word [rax + rax]	      2286	prdbg.c	FUNCTION_67
0x4003b48	      0xbe00000000	                              mov esi, 0	      2250	prdbg.c	FUNCTION_67	IF_4	IF_5	CALL_5
0x4003b4d	          0x4889df	                            mov rdi, rbx	      2250	prdbg.c	FUNCTION_67	IF_4	IF_5	CALL_5
0x4003b50	      0xe87bd2ffff	           call sym.prepend_type.isra.12	      2250	prdbg.c	FUNCTION_67	IF_4	IF_5	CALL_5
0x4003b55	            0x85c0	                           test eax, eax	      2250	prdbg.c	FUNCTION_67	IF_4	IF_5	CALL_5
0x4003b57	     0xf8567ffffff	                           jne 0x4003ac4	      2250	prdbg.c	FUNCTION_67	IF_4	IF_5	CALL_5
0x4003b5d	      0xe981ffffff	                           jmp 0x4003ae3	      2250	prdbg.c	FUNCTION_67	IF_4	IF_5	CALL_5
0x4003b62	      0xb900000000	                              mov ecx, 0	      2234	prdbg.c	FUNCTION_67	CALL_1
0x4003b67	      0xbaba080000	                          mov edx, 0x8ba	      2234	prdbg.c	FUNCTION_67	CALL_1
0x4003b6c	      0xbe00000000	                              mov esi, 0	      2234	prdbg.c	FUNCTION_67	CALL_1
0x4003b71	      0xbf00000000	                              mov edi, 0	      2234	prdbg.c	FUNCTION_67	CALL_1
0x4003b76	      0xe800000000	                          call 0x4003b7b	      2234	prdbg.c	FUNCTION_67	CALL_1
pr_end_function	SWITCH,0:WHILE,0:IF,0:FOR,0:ELSE,0:functions,0:CALL,0:DO,0	2
0x4000060	      0xb801000000	                              mov eax, 1	      1907	prdbg.c	FUNCTION_55
0x4000065	              0xc3	                                     ret	      1907	prdbg.c	FUNCTION_55
pr_typedef_type	SWITCH,0:WHILE,0:IF,0:FOR,0:ELSE,0:functions,0:CALL,1:DO,0	2
0x4002ec0	        0x4883c710	                           add rdi, 0x10	      1591	prdbg.c	FUNCTION_42
0x4002ec4	      0xe917feffff	               jmp sym.push_type.isra.30	      1594	prdbg.c	FUNCTION_42	CALL_1
tg_class_static_method_variant	SWITCH,0:WHILE,0:IF,8:FOR,0:ELSE,0:functions,0:CALL,17:DO,0	129
0x4001e80	            0x4155	                                push r13	      2375	prdbg.c	FUNCTION_69
0x4001e82	            0x4154	                                push r12	      2375	prdbg.c	FUNCTION_69
0x4001e84	              0x55	                                push rbp	      2375	prdbg.c	FUNCTION_69
0x4001e85	              0x53	                                push rbx	      2375	prdbg.c	FUNCTION_69
0x4001e86	        0x4883ec18	                           sub rsp, 0x18	      2375	prdbg.c	FUNCTION_69
0x4001e8a	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      2380	prdbg.c	FUNCTION_69	CALL_1
0x4001e8e	          0x4885c0	                           test rax, rax	      2380	prdbg.c	FUNCTION_69	CALL_1
0x4001e91	     0xf8486010000	                            je 0x400201d	      2380	prdbg.c	FUNCTION_69	CALL_1
0x4001e97	          0x488b00	                    mov rax, qword [rax]	      2381	prdbg.c	FUNCTION_69	CALL_2
0x4001e9a	          0x4885c0	                           test rax, rax	      2381	prdbg.c	FUNCTION_69	CALL_2
0x4001e9d	     0xf84ac010000	                            je 0x400204f	      2381	prdbg.c	FUNCTION_69	CALL_2
0x4001ea3	      0x4883781800	               cmp qword [rax + 0x18], 0	      2382	prdbg.c	FUNCTION_69	CALL_3
0x4001ea8	     0xf8488010000	                            je 0x4002036	      2382	prdbg.c	FUNCTION_69	CALL_3
0x4001eae	          0x4585c0	                           test r8d, r8d	      2385	prdbg.c	FUNCTION_69	IF_1
0x4001eb1	          0x4889fb	                            mov rbx, rdi	      2385	prdbg.c	FUNCTION_69	IF_1
0x4001eb4	          0x4189d4	                           mov r12d, edx	      2385	prdbg.c	FUNCTION_69	IF_1
0x4001eb7	     0xf85e3000000	                           jne 0x4001fa0	      2385	prdbg.c	FUNCTION_69	IF_1
0x4001ebd	        0x488d6f10	                   lea rbp, [rdi + 0x10]	      2385	prdbg.c	FUNCTION_69	IF_1
0x4001ec1	            0x85c9	                           test ecx, ecx	      2390	prdbg.c	FUNCTION_69	IF_3
0x4001ec3	            0x7411	                            je 0x4001ed6	      2390	prdbg.c	FUNCTION_69	IF_3
0x4001ec5	      0xbe00000000	                              mov esi, 0	      2392	prdbg.c	FUNCTION_69	IF_3	IF_4	CALL_5
0x4001eca	          0x4889ef	                            mov rdi, rbp	      2392	prdbg.c	FUNCTION_69	IF_3	IF_4	CALL_5
0x4001ecd	      0xe89eefffff	            call sym.append_type.isra.14	      2392	prdbg.c	FUNCTION_69	IF_3	IF_4	CALL_5
0x4001ed2	            0x85c0	                           test eax, eax	      2392	prdbg.c	FUNCTION_69	IF_3	IF_4	CALL_5
0x4001ed4	            0x7411	                            je 0x4001ee7	      2392	prdbg.c	FUNCTION_69	IF_3	IF_4	CALL_5
0x4001ed6	      0xbe00000000	                              mov esi, 0	      2397	prdbg.c	FUNCTION_69	IF_5	CALL_6
0x4001edb	          0x4889ef	                            mov rdi, rbp	      2397	prdbg.c	FUNCTION_69	IF_5	CALL_6
0x4001ede	      0xe8edeeffff	           call sym.prepend_type.isra.12	      2397	prdbg.c	FUNCTION_69	IF_5	CALL_6
0x4001ee3	            0x85c0	                           test eax, eax	      2397	prdbg.c	FUNCTION_69	IF_5	CALL_6
0x4001ee5	            0x7511	                           jne 0x4001ef8	      2397	prdbg.c	FUNCTION_69	IF_5	CALL_6
0x4001ee7	            0x31c0	                            xor eax, eax	      2413	prdbg.c	FUNCTION_69	IF_7
0x4001ee9	        0x4883c418	                           add rsp, 0x18	      2431	prdbg.c	FUNCTION_69
0x4001eed	              0x5b	                                 pop rbx	      2431	prdbg.c	FUNCTION_69
0x4001eee	              0x5d	                                 pop rbp	      2431	prdbg.c	FUNCTION_69
0x4001eef	            0x415c	                                 pop r12	      2431	prdbg.c	FUNCTION_69
0x4001ef1	            0x415d	                                 pop r13	      2431	prdbg.c	FUNCTION_69
0x4001ef3	              0xc3	                                     ret	      2431	prdbg.c	FUNCTION_69
0x4001ef4	         0xf1f4000	                         nop dword [rax]	      2431	prdbg.c	FUNCTION_69
0x4001ef8	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2400	prdbg.c	FUNCTION_69	CALL_7
0x4001efc	          0x488b00	                    mov rax, qword [rax]	      2400	prdbg.c	FUNCTION_69	CALL_7
0x4001eff	        0x488b7818	            mov rdi, qword [rax + 0x18] 	      2400	prdbg.c	FUNCTION_69	CALL_7
0x4001f03	      0xe800000000	                          call 0x4001f08	      2400	prdbg.c	FUNCTION_69	CALL_7
0x4001f08	          0x4989c5	                            mov r13, rax	      2400	prdbg.c	FUNCTION_69	CALL_7
0x4001f0b	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2402	prdbg.c	FUNCTION_69	IF_6	CALL_8
0x4001f0f	          0x4889df	                            mov rdi, rbx	      2402	prdbg.c	FUNCTION_69	IF_6	CALL_8
0x4001f12	          0x488b00	                    mov rax, qword [rax]	      2402	prdbg.c	FUNCTION_69	IF_6	CALL_8
0x4001f15	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      2402	prdbg.c	FUNCTION_69	IF_6	CALL_8
0x4001f19	      0xe8e2efffff	                call sym.substitute_type	      2402	prdbg.c	FUNCTION_69	IF_6	CALL_8
0x4001f1e	            0x85c0	                           test eax, eax	      2402	prdbg.c	FUNCTION_69	IF_6	CALL_8
0x4001f20	     0xf84aa000000	                            je 0x4001fd0	      2402	prdbg.c	FUNCTION_69	IF_6	CALL_8
0x4001f26	          0x4889ef	                            mov rdi, rbp	      2409	prdbg.c	FUNCTION_69	CALL_10
0x4001f29	      0xe8b2e6ffff	                call sym.pop_type.isra.3	      2409	prdbg.c	FUNCTION_69	CALL_10
0x4001f2e	          0x4885c0	                           test rax, rax	      2410	prdbg.c	FUNCTION_69	IF_7
0x4001f31	          0x4889c5	                            mov rbp, rax	      2409	prdbg.c	FUNCTION_69	CALL_10
0x4001f34	     0xf84d6000000	                            je 0x4002010	      2410	prdbg.c	FUNCTION_69	IF_7
0x4001f3a	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      2417	prdbg.c	FUNCTION_69	IF_8	CALL_12
0x4001f3e	          0x4489e6	                           mov esi, r12d	      2417	prdbg.c	FUNCTION_69	IF_8	CALL_12
0x4001f41	      0xe83aecffff	       call sym.tg_fix_visibility.isra.8	      2417	prdbg.c	FUNCTION_69	IF_8	CALL_12
0x4001f46	            0x85c0	                           test eax, eax	      2417	prdbg.c	FUNCTION_69	IF_8	CALL_12
0x4001f48	     0xf84a2000000	                            je 0x4001ff0	      2417	prdbg.c	FUNCTION_69	IF_8	CALL_12
0x4001f4e	          0x4489e7	                           mov edi, r12d	      2424	prdbg.c	FUNCTION_69
0x4001f51	      0xe87ae3ffff	                call sym.visibility_name	      2424	prdbg.c	FUNCTION_69
0x4001f56	              0x50	                                push rax	        97	stdio2.h	CALL_96
0x4001f57	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2424	prdbg.c	FUNCTION_69
0x4001f5b	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_96
0x4001f60	          0x4989e9	                             mov r9, rbp	        97	stdio2.h	CALL_96
0x4001f63	          0x4c89e9	                            mov rcx, r13	        97	stdio2.h	CALL_96
0x4001f66	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_96
0x4001f6b	          0xff7008	                    push qword [rax + 8]	        97	stdio2.h	CALL_96
0x4001f6e	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	        97	stdio2.h	CALL_96
0x4001f72	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_96
0x4001f74	          0x488b3b	                    mov rdi, qword [rbx]	        97	stdio2.h	CALL_96
0x4001f77	      0xe800000000	                          call 0x4001f7c	        97	stdio2.h	CALL_96
0x4001f7c	          0x4889ef	                            mov rdi, rbp	      2427	prdbg.c	FUNCTION_69	CALL_16
0x4001f7f	      0xe800000000	                          call 0x4001f84	      2427	prdbg.c	FUNCTION_69	CALL_16
0x4001f84	          0x4c89ef	                            mov rdi, r13	      2428	prdbg.c	FUNCTION_69	CALL_17
0x4001f87	      0xe800000000	                          call 0x4001f8c	      2428	prdbg.c	FUNCTION_69	CALL_17
0x4001f8c	              0x58	                                 pop rax	      2430	prdbg.c	FUNCTION_69
0x4001f8d	      0xb801000000	                              mov eax, 1	      2430	prdbg.c	FUNCTION_69
0x4001f92	              0x5a	                                 pop rdx	      2430	prdbg.c	FUNCTION_69
0x4001f93	      0xe951ffffff	                           jmp 0x4001ee9	      2430	prdbg.c	FUNCTION_69
0x4001f98	     0xf1f84000000	                   nop dword [rax + rax]	      2430	prdbg.c	FUNCTION_69
0x4001fa0	        0x488d6f10	                   lea rbp, [rdi + 0x10]	      2430	prdbg.c	FUNCTION_69
0x4001fa4	      0xbe00000000	                              mov esi, 0	      2387	prdbg.c	FUNCTION_69	IF_1	IF_2	CALL_4
0x4001fa9	        0x894c240c	              mov dword [rsp + 0xc], ecx	      2387	prdbg.c	FUNCTION_69	IF_1	IF_2	CALL_4
0x4001fad	          0x4889ef	                            mov rdi, rbp	      2387	prdbg.c	FUNCTION_69	IF_1	IF_2	CALL_4
0x4001fb0	      0xe8bbeeffff	            call sym.append_type.isra.14	      2387	prdbg.c	FUNCTION_69	IF_1	IF_2	CALL_4
0x4001fb5	            0x85c0	                           test eax, eax	      2387	prdbg.c	FUNCTION_69	IF_1	IF_2	CALL_4
0x4001fb7	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      2387	prdbg.c	FUNCTION_69	IF_1	IF_2	CALL_4
0x4001fbb	     0xf8500ffffff	                           jne 0x4001ec1	      2387	prdbg.c	FUNCTION_69	IF_1	IF_2	CALL_4
0x4001fc1	      0xe921ffffff	                           jmp 0x4001ee7	      2387	prdbg.c	FUNCTION_69	IF_1	IF_2	CALL_4
0x4001fc6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2387	prdbg.c	FUNCTION_69	IF_1	IF_2	CALL_4
0x4001fd0	          0x4c89ef	                            mov rdi, r13	      2404	prdbg.c	FUNCTION_69	IF_6	CALL_9
0x4001fd3	        0x8944240c	              mov dword [rsp + 0xc], eax	      2404	prdbg.c	FUNCTION_69	IF_6	CALL_9
0x4001fd7	      0xe800000000	                          call 0x4001fdc	      2404	prdbg.c	FUNCTION_69	IF_6	CALL_9
0x4001fdc	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      2405	prdbg.c	FUNCTION_69	IF_6
0x4001fe0	        0x4883c418	                           add rsp, 0x18	      2431	prdbg.c	FUNCTION_69
0x4001fe4	              0x5b	                                 pop rbx	      2431	prdbg.c	FUNCTION_69
0x4001fe5	              0x5d	                                 pop rbp	      2431	prdbg.c	FUNCTION_69
0x4001fe6	            0x415c	                                 pop r12	      2431	prdbg.c	FUNCTION_69
0x4001fe8	            0x415d	                                 pop r13	      2431	prdbg.c	FUNCTION_69
0x4001fea	              0xc3	                                     ret	      2431	prdbg.c	FUNCTION_69
0x4001feb	       0xf1f440000	                   nop dword [rax + rax]	      2431	prdbg.c	FUNCTION_69
0x4001ff0	          0x4889ef	                            mov rdi, rbp	      2419	prdbg.c	FUNCTION_69	IF_8	CALL_13
0x4001ff3	        0x8944240c	              mov dword [rsp + 0xc], eax	      2419	prdbg.c	FUNCTION_69	IF_8	CALL_13
0x4001ff7	      0xe800000000	                          call 0x4001ffc	      2419	prdbg.c	FUNCTION_69	IF_8	CALL_13
0x4001ffc	          0x4c89ef	                            mov rdi, r13	      2420	prdbg.c	FUNCTION_69	IF_8	CALL_14
0x4001fff	      0xe800000000	                          call 0x4002004	      2420	prdbg.c	FUNCTION_69	IF_8	CALL_14
0x4002004	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      2421	prdbg.c	FUNCTION_69	IF_8
0x4002008	      0xe9dcfeffff	                           jmp 0x4001ee9	      2421	prdbg.c	FUNCTION_69	IF_8
0x400200d	           0xf1f00	                         nop dword [rax]	      2421	prdbg.c	FUNCTION_69	IF_8
0x4002010	          0x4c89ef	                            mov rdi, r13	      2412	prdbg.c	FUNCTION_69	IF_7	CALL_11
0x4002013	      0xe800000000	                          call 0x4002018	      2412	prdbg.c	FUNCTION_69	IF_7	CALL_11
0x4002018	      0xe9cafeffff	                           jmp 0x4001ee7	      2412	prdbg.c	FUNCTION_69	IF_7	CALL_11
0x400201d	      0xb900000000	                              mov ecx, 0	      2380	prdbg.c	FUNCTION_69	CALL_1
0x4002022	      0xba4c090000	                          mov edx, 0x94c	      2380	prdbg.c	FUNCTION_69	CALL_1
0x4002027	      0xbe00000000	                              mov esi, 0	      2380	prdbg.c	FUNCTION_69	CALL_1
0x400202c	      0xbf00000000	                              mov edi, 0	      2380	prdbg.c	FUNCTION_69	CALL_1
0x4002031	      0xe800000000	                          call 0x4002036	      2380	prdbg.c	FUNCTION_69	CALL_1
0x4002036	      0xb900000000	                              mov ecx, 0	      2382	prdbg.c	FUNCTION_69	CALL_3
0x400203b	      0xba4e090000	                          mov edx, 0x94e	      2382	prdbg.c	FUNCTION_69	CALL_3
0x4002040	      0xbe00000000	                              mov esi, 0	      2382	prdbg.c	FUNCTION_69	CALL_3
0x4002045	      0xbf00000000	                              mov edi, 0	      2382	prdbg.c	FUNCTION_69	CALL_3
0x400204a	      0xe800000000	                          call 0x400204f	      2382	prdbg.c	FUNCTION_69	CALL_3
0x400204f	      0xb900000000	                              mov ecx, 0	      2381	prdbg.c	FUNCTION_69	CALL_2
0x4002054	      0xba4d090000	                          mov edx, 0x94d	      2381	prdbg.c	FUNCTION_69	CALL_2
0x4002059	      0xbe00000000	                              mov esi, 0	      2381	prdbg.c	FUNCTION_69	CALL_2
0x400205e	      0xbf00000000	                              mov edi, 0	      2381	prdbg.c	FUNCTION_69	CALL_2
0x4002063	      0xe800000000	                          call 0x4002068	      2381	prdbg.c	FUNCTION_69	CALL_2
tg_tag_type	SWITCH,1:WHILE,0:IF,3:FOR,0:ELSE,1:functions,0:CALL,3:DO,0	60
0x40036b0	            0x4154	                                push r12	      2457	prdbg.c	FUNCTION_71
0x40036b2	              0x55	                                push rbp	      2457	prdbg.c	FUNCTION_71
0x40036b3	          0x83e907	                              sub ecx, 7	      2462	prdbg.c	FUNCTION_71	SWITCH_1
0x40036b6	              0x53	                                push rbx	      2457	prdbg.c	FUNCTION_71
0x40036b7	        0x4883ec20	                           sub rsp, 0x20	      2457	prdbg.c	FUNCTION_71
0x40036bb	    0x64488b042528	                mov rax, qword fs:[0x28]	      2457	prdbg.c	FUNCTION_71
0x40036c4	      0x4889442418	             mov qword [rsp + 0x18], rax	      2457	prdbg.c	FUNCTION_71
0x40036c9	            0x31c0	                            xor eax, eax	      2457	prdbg.c	FUNCTION_71
0x40036cb	          0x83f904	                              cmp ecx, 4	      2462	prdbg.c	FUNCTION_71	SWITCH_1
0x40036ce	     0xf879c000000	                            ja 0x4003770	      2462	prdbg.c	FUNCTION_71	SWITCH_1
0x40036d4	          0x4989f4	                            mov r12, rsi	      2462	prdbg.c	FUNCTION_71	SWITCH_1
0x40036d7	            0x89d5	                            mov ebp, edx	      2462	prdbg.c	FUNCTION_71	SWITCH_1
0x40036d9	    0xff24cd000000	                       jmp qword [rcx*8]	      2462	prdbg.c	FUNCTION_71	SWITCH_1
0x40036e0	      0xbe00000000	                              mov esi, 0	      2471	prdbg.c	FUNCTION_71	SWITCH_1
0x40036e5	        0x488d5f10	                   lea rbx, [rdi + 0x10]	      2471	prdbg.c	FUNCTION_71	SWITCH_1
0x40036e9	          0x4889df	                            mov rdi, rbx	      2484	prdbg.c	FUNCTION_71	IF_1	CALL_2
0x40036ec	      0xe8eff5ffff	              call sym.push_type.isra.30	      2484	prdbg.c	FUNCTION_71	IF_1	CALL_2
0x40036f1	            0x85c0	                           test eax, eax	      2484	prdbg.c	FUNCTION_71	IF_1	CALL_2
0x40036f3	            0x7418	                            je 0x400370d	      2484	prdbg.c	FUNCTION_71	IF_1	CALL_2
0x40036f5	          0x4d85e4	                           test r12, r12	      2486	prdbg.c	FUNCTION_71	IF_2
0x40036f8	            0x747e	                            je 0x4003778	      2486	prdbg.c	FUNCTION_71	IF_2
0x40036fa	          0x4c89e6	                            mov rsi, r12	      2494	prdbg.c	FUNCTION_71	IF_3	CALL_3
0x40036fd	          0x4889df	                            mov rdi, rbx	      2494	prdbg.c	FUNCTION_71	IF_3	CALL_3
0x4003700	      0xe86bd7ffff	            call sym.append_type.isra.14	      2494	prdbg.c	FUNCTION_71	IF_3	CALL_3
0x4003705	            0x85c0	                           test eax, eax	      2497	prdbg.c	FUNCTION_71
0x4003707	           0xf95c0	                                setne al	      2497	prdbg.c	FUNCTION_71
0x400370a	           0xfb6c0	                           movzx eax, al	      2497	prdbg.c	FUNCTION_71
0x400370d	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      2498	prdbg.c	FUNCTION_71
0x4003712	    0x644833142528	                xor rdx, qword fs:[0x28]	      2498	prdbg.c	FUNCTION_71
0x400371b	            0x757f	                           jne 0x400379c	      2498	prdbg.c	FUNCTION_71
0x400371d	        0x4883c420	                           add rsp, 0x20	      2498	prdbg.c	FUNCTION_71
0x4003721	              0x5b	                                 pop rbx	      2498	prdbg.c	FUNCTION_71
0x4003722	              0x5d	                                 pop rbp	      2498	prdbg.c	FUNCTION_71
0x4003723	            0x415c	                                 pop r12	      2498	prdbg.c	FUNCTION_71
0x4003725	              0xc3	                                     ret	      2498	prdbg.c	FUNCTION_71
0x4003726	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2498	prdbg.c	FUNCTION_71
0x4003730	      0xbe00000000	                              mov esi, 0	      2477	prdbg.c	FUNCTION_71	SWITCH_1
0x4003735	            0xebae	                           jmp 0x40036e5	      2478	prdbg.c	FUNCTION_71	SWITCH_1
0x4003737	    0x660f1f840000	                    nop word [rax + rax]	      2478	prdbg.c	FUNCTION_71	SWITCH_1
0x4003740	      0xbe00000000	                              mov esi, 0	      2465	prdbg.c	FUNCTION_71	SWITCH_1
0x4003745	            0xeb9e	                           jmp 0x40036e5	      2465	prdbg.c	FUNCTION_71	SWITCH_1
0x4003747	    0x660f1f840000	                    nop word [rax + rax]	      2465	prdbg.c	FUNCTION_71	SWITCH_1
0x4003750	      0xbe00000000	                              mov esi, 0	      2468	prdbg.c	FUNCTION_71	SWITCH_1
0x4003755	            0xeb8e	                           jmp 0x40036e5	      2468	prdbg.c	FUNCTION_71	SWITCH_1
0x4003757	    0x660f1f840000	                    nop word [rax + rax]	      2468	prdbg.c	FUNCTION_71	SWITCH_1
0x4003760	      0xbe00000000	                              mov esi, 0	      2474	prdbg.c	FUNCTION_71	SWITCH_1
0x4003765	      0xe97bffffff	                           jmp 0x40036e5	      2475	prdbg.c	FUNCTION_71	SWITCH_1
0x400376a	    0x660f1f440000	                    nop word [rax + rax]	      2475	prdbg.c	FUNCTION_71	SWITCH_1
0x4003770	      0xe800000000	                          call 0x4003775	      2480	prdbg.c	FUNCTION_71	SWITCH_1	CALL_1
0x4003775	           0xf1f00	                         nop dword [rax]	      2480	prdbg.c	FUNCTION_71	SWITCH_1	CALL_1
0x4003778	          0x4189e8	                            mov r8d, ebp	        33	stdio2.h	FUNCTION_96	CALL_1
0x400377b	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_96	CALL_1
0x4003780	      0xba14000000	                           mov edx, 0x14	        33	stdio2.h	FUNCTION_96	CALL_1
0x4003785	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_96	CALL_1
0x400378a	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_96	CALL_1
0x400378d	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_96	CALL_1
0x400378f	      0xe800000000	                          call 0x4003794	        33	stdio2.h	FUNCTION_96	CALL_1
0x4003794	          0x4989e4	                            mov r12, rsp	      2491	prdbg.c	FUNCTION_71	ELSE_1
0x4003797	      0xe95effffff	                           jmp 0x40036fa	      2491	prdbg.c	FUNCTION_71	ELSE_1
0x400379c	      0xe800000000	                          call 0x40037a1	      2498	prdbg.c	FUNCTION_71
pr_fix_visibility	SWITCH,1:WHILE,0:IF,2:FOR,0:ELSE,0:functions,0:CALL,7:DO,0	93
0x4001760	            0x4155	                                push r13	      1100	prdbg.c	FUNCTION_31
0x4001762	            0x4154	                                push r12	      1100	prdbg.c	FUNCTION_31
0x4001764	              0x55	                                push rbp	      1100	prdbg.c	FUNCTION_31
0x4001765	              0x53	                                push rbx	      1100	prdbg.c	FUNCTION_31
0x4001766	        0x4883ec08	                              sub rsp, 8	      1100	prdbg.c	FUNCTION_31
0x400176a	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      1105	prdbg.c	FUNCTION_31	CALL_1
0x400176e	          0x4885c0	                           test rax, rax	      1105	prdbg.c	FUNCTION_31	CALL_1
0x4001771	     0xf84fb000000	                            je 0x4001872	      1105	prdbg.c	FUNCTION_31	CALL_1
0x4001777	          0x397010	            cmp dword [rax + 0x10], esi 	      1107	prdbg.c	FUNCTION_31	IF_1
0x400177a	          0x4189f4	                           mov r12d, esi	      1107	prdbg.c	FUNCTION_31	IF_1
0x400177d	            0x7471	                            je 0x40017f0	      1107	prdbg.c	FUNCTION_31	IF_1
0x400177f	          0x83fe01	                              cmp esi, 1	      1110	prdbg.c	FUNCTION_31	SWITCH_1
0x4001782	          0x4889fd	                            mov rbp, rdi	      1110	prdbg.c	FUNCTION_31	SWITCH_1
0x4001785	     0xf84dd000000	                            je 0x4001868	      1110	prdbg.c	FUNCTION_31	SWITCH_1
0x400178b	     0xf82b7000000	                            jb 0x4001848	      1110	prdbg.c	FUNCTION_31	SWITCH_1
0x4001791	          0x83fe02	                              cmp esi, 2	      1110	prdbg.c	FUNCTION_31	SWITCH_1
0x4001794	     0xf84be000000	                            je 0x4001858	      1110	prdbg.c	FUNCTION_31	SWITCH_1
0x400179a	          0x83fe03	                              cmp esi, 3	      1110	prdbg.c	FUNCTION_31	SWITCH_1
0x400179d	            0x7561	                           jne 0x4001800	      1110	prdbg.c	FUNCTION_31	SWITCH_1
0x400179f	      0xbb00000000	                              mov ebx, 0	      1122	prdbg.c	FUNCTION_31	SWITCH_1
0x40017a4	        0x4c8b6808	                mov r13, qword [rax + 8]	      1132	prdbg.c	FUNCTION_31
0x40017a8	          0x4c89ef	                            mov rdi, r13	      1133	prdbg.c	FUNCTION_31	CALL_3
0x40017ab	      0xe800000000	                          call 0x40017b0	      1133	prdbg.c	FUNCTION_31	CALL_3
0x40017b0	          0x8d78ff	                      lea edi, [rax - 1]	      1134	prdbg.c	FUNCTION_31	CALL_4
0x40017b3	          0x4c01ef	                            add rdi, r13	      1134	prdbg.c	FUNCTION_31	CALL_4
0x40017b6	          0x803f20	                    cmp byte [rdi], 0x20	      1134	prdbg.c	FUNCTION_31	CALL_4
0x40017b9	     0xf85cc000000	                           jne 0x400188b	      1134	prdbg.c	FUNCTION_31	CALL_4
0x40017bf	        0x4c8d6d10	                   lea r13, [rbp + 0x10]	      1134	prdbg.c	FUNCTION_31	CALL_4
0x40017c3	          0xc60700	                       mov byte [rdi], 0	      1135	prdbg.c	FUNCTION_31
0x40017c6	          0x4889de	                            mov rsi, rbx	      1137	prdbg.c	FUNCTION_31	IF_2	CALL_5
0x40017c9	          0x4c89ef	                            mov rdi, r13	      1137	prdbg.c	FUNCTION_31	IF_2	CALL_5
0x40017cc	      0xe89ff6ffff	            call sym.append_type.isra.14	      1137	prdbg.c	FUNCTION_31	IF_2	CALL_5
0x40017d1	            0x85c0	                           test eax, eax	      1137	prdbg.c	FUNCTION_31	IF_2	CALL_5
0x40017d3	            0x7533	                           jne 0x4001808	      1137	prdbg.c	FUNCTION_31	IF_2	CALL_5
0x40017d5	            0x31c0	                            xor eax, eax	      1140	prdbg.c	FUNCTION_31	IF_2
0x40017d7	        0x4883c408	                              add rsp, 8	      1145	prdbg.c	FUNCTION_31
0x40017db	              0x5b	                                 pop rbx	      1145	prdbg.c	FUNCTION_31
0x40017dc	              0x5d	                                 pop rbp	      1145	prdbg.c	FUNCTION_31
0x40017dd	            0x415c	                                 pop r12	      1145	prdbg.c	FUNCTION_31
0x40017df	            0x415d	                                 pop r13	      1145	prdbg.c	FUNCTION_31
0x40017e1	              0xc3	                                     ret	      1145	prdbg.c	FUNCTION_31
0x40017e2	    0x660f1f440000	                    nop word [rax + rax]	      1145	prdbg.c	FUNCTION_31
0x40017e8	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1142	prdbg.c	FUNCTION_31
0x40017ec	        0x44896010	            mov dword [rax + 0x10], r12d	      1142	prdbg.c	FUNCTION_31
0x40017f0	        0x4883c408	                              add rsp, 8	      1145	prdbg.c	FUNCTION_31
0x40017f4	      0xb801000000	                              mov eax, 1	      1144	prdbg.c	FUNCTION_31
0x40017f9	              0x5b	                                 pop rbx	      1145	prdbg.c	FUNCTION_31
0x40017fa	              0x5d	                                 pop rbp	      1145	prdbg.c	FUNCTION_31
0x40017fb	            0x415c	                                 pop r12	      1145	prdbg.c	FUNCTION_31
0x40017fd	            0x415d	                                 pop r13	      1145	prdbg.c	FUNCTION_31
0x40017ff	              0xc3	                                     ret	      1145	prdbg.c	FUNCTION_31
0x4001800	      0xe800000000	                          call 0x4001805	      1125	prdbg.c	FUNCTION_31	SWITCH_1	CALL_2
0x4001805	           0xf1f00	                         nop dword [rax]	      1125	prdbg.c	FUNCTION_31	SWITCH_1	CALL_2
0x4001808	      0xbe00000000	                              mov esi, 0	      1138	prdbg.c	FUNCTION_31	IF_2	CALL_6
0x400180d	          0x4c89ef	                            mov rdi, r13	      1138	prdbg.c	FUNCTION_31	IF_2	CALL_6
0x4001810	      0xe85bf6ffff	            call sym.append_type.isra.14	      1138	prdbg.c	FUNCTION_31	IF_2	CALL_6
0x4001815	            0x85c0	                           test eax, eax	      1138	prdbg.c	FUNCTION_31	IF_2	CALL_6
0x4001817	            0x74bc	                            je 0x40017d5	      1138	prdbg.c	FUNCTION_31	IF_2	CALL_6
0x4001819	          0x8b4508	                mov eax, dword [rbp + 8]	       461	prdbg.c	FUNCTION_8	FOR_1
0x400181c	            0x85c0	                           test eax, eax	       461	prdbg.c	FUNCTION_8	FOR_1
0x400181e	            0x74c8	                            je 0x40017e8	       461	prdbg.c	FUNCTION_8	FOR_1
0x4001820	            0x31db	                            xor ebx, ebx	       461	prdbg.c	FUNCTION_8	FOR_1
0x4001822	            0xeb0c	                           jmp 0x4001830	       461	prdbg.c	FUNCTION_8	FOR_1
0x4001824	         0xf1f4000	                         nop dword [rax]	       461	prdbg.c	FUNCTION_8	FOR_1
0x4001828	          0x83c301	                              add ebx, 1	       461	prdbg.c	FUNCTION_8	FOR_1
0x400182b	          0x3b5d08	                cmp ebx, dword [rbp + 8]	       461	prdbg.c	FUNCTION_8	FOR_1
0x400182e	            0x73b8	                           jae 0x40017e8	       461	prdbg.c	FUNCTION_8	FOR_1
0x4001830	      0xbe00000000	                              mov esi, 0	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4001835	          0x4c89ef	                            mov rdi, r13	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4001838	      0xe833f6ffff	            call sym.append_type.isra.14	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x400183d	            0x85c0	                           test eax, eax	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x400183f	            0x75e7	                           jne 0x4001828	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4001841	            0x31c0	                            xor eax, eax	      1140	prdbg.c	FUNCTION_31	IF_2
0x4001843	            0xeb92	                           jmp 0x40017d7	      1140	prdbg.c	FUNCTION_31	IF_2
0x4001845	           0xf1f00	                         nop dword [rax]	      1140	prdbg.c	FUNCTION_31	IF_2
0x4001848	      0xbb00000000	                              mov ebx, 0	      1113	prdbg.c	FUNCTION_31	SWITCH_1
0x400184d	      0xe952ffffff	                           jmp 0x40017a4	      1113	prdbg.c	FUNCTION_31	SWITCH_1
0x4001852	    0x660f1f440000	                    nop word [rax + rax]	      1113	prdbg.c	FUNCTION_31	SWITCH_1
0x4001858	      0xbb00000000	                              mov ebx, 0	      1116	prdbg.c	FUNCTION_31	SWITCH_1
0x400185d	      0xe942ffffff	                           jmp 0x40017a4	      1116	prdbg.c	FUNCTION_31	SWITCH_1
0x4001862	    0x660f1f440000	                    nop word [rax + rax]	      1116	prdbg.c	FUNCTION_31	SWITCH_1
0x4001868	      0xbb00000000	                              mov ebx, 0	      1119	prdbg.c	FUNCTION_31	SWITCH_1
0x400186d	      0xe932ffffff	                           jmp 0x40017a4	      1119	prdbg.c	FUNCTION_31	SWITCH_1
0x4001872	      0xb900000000	                              mov ecx, 0	      1105	prdbg.c	FUNCTION_31	CALL_1
0x4001877	      0xba51040000	                          mov edx, 0x451	      1105	prdbg.c	FUNCTION_31	CALL_1
0x400187c	      0xbe00000000	                              mov esi, 0	      1105	prdbg.c	FUNCTION_31	CALL_1
0x4001881	      0xbf00000000	                              mov edi, 0	      1105	prdbg.c	FUNCTION_31	CALL_1
0x4001886	      0xe800000000	                          call 0x400188b	      1105	prdbg.c	FUNCTION_31	CALL_1
0x400188b	      0xb900000000	                              mov ecx, 0	      1134	prdbg.c	FUNCTION_31	CALL_4
0x4001890	      0xba6e040000	                          mov edx, 0x46e	      1134	prdbg.c	FUNCTION_31	CALL_4
0x4001895	      0xbe00000000	                              mov esi, 0	      1134	prdbg.c	FUNCTION_31	CALL_4
0x400189a	      0xbf00000000	                              mov edi, 0	      1134	prdbg.c	FUNCTION_31	CALL_4
0x400189f	      0xe800000000	                          call 0x40018a4	      1134	prdbg.c	FUNCTION_31	CALL_4
pr_empty_type	SWITCH,0:WHILE,0:IF,0:FOR,0:ELSE,0:functions,0:CALL,1:DO,0	3
0x40036a0	        0x4883c710	                           add rdi, 0x10	       562	prdbg.c	FUNCTION_13
0x40036a4	      0xbe00000000	                              mov esi, 0	       565	prdbg.c	FUNCTION_13	CALL_1
0x40036a9	      0xe932f6ffff	               jmp sym.push_type.isra.30	       565	prdbg.c	FUNCTION_13	CALL_1
pr_volatile_type	SWITCH,0:WHILE,0:IF,0:FOR,0:ELSE,0:functions,0:CALL,1:DO,0	2
0x4001080	      0xbe00000000	                              mov esi, 0	      1035	prdbg.c	FUNCTION_29	CALL_1
0x4001085	      0xe976feffff	                 jmp sym.substitute_type	      1035	prdbg.c	FUNCTION_29	CALL_1
pr_class_static_method_variant	SWITCH,0:WHILE,0:IF,8:FOR,0:ELSE,0:functions,0:CALL,14:DO,0	119
0x40018b0	            0x4156	                                push r14	      1523	prdbg.c	FUNCTION_39
0x40018b2	            0x4155	                                push r13	      1523	prdbg.c	FUNCTION_39
0x40018b4	            0x4154	                                push r12	      1523	prdbg.c	FUNCTION_39
0x40018b6	              0x55	                                push rbp	      1523	prdbg.c	FUNCTION_39
0x40018b7	              0x53	                                push rbx	      1523	prdbg.c	FUNCTION_39
0x40018b8	        0x4883ec10	                           sub rsp, 0x10	      1523	prdbg.c	FUNCTION_39
0x40018bc	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      1527	prdbg.c	FUNCTION_39	CALL_1
0x40018c0	          0x4885c0	                           test rax, rax	      1527	prdbg.c	FUNCTION_39	CALL_1
0x40018c3	     0xf8447010000	                            je 0x4001a10	      1527	prdbg.c	FUNCTION_39	CALL_1
0x40018c9	          0x488b00	                    mov rax, qword [rax]	      1528	prdbg.c	FUNCTION_39	CALL_2
0x40018cc	          0x4885c0	                           test rax, rax	      1528	prdbg.c	FUNCTION_39	CALL_2
0x40018cf	     0xf846d010000	                            je 0x4001a42	      1528	prdbg.c	FUNCTION_39	CALL_2
0x40018d5	      0x4883781800	               cmp qword [rax + 0x18], 0	      1529	prdbg.c	FUNCTION_39	CALL_3
0x40018da	     0xf8449010000	                            je 0x4001a29	      1529	prdbg.c	FUNCTION_39	CALL_3
0x40018e0	          0x4585c0	                           test r8d, r8d	      1532	prdbg.c	FUNCTION_39	IF_1
0x40018e3	          0x4889fb	                            mov rbx, rdi	      1532	prdbg.c	FUNCTION_39	IF_1
0x40018e6	          0x4989f5	                            mov r13, rsi	      1532	prdbg.c	FUNCTION_39	IF_1
0x40018e9	          0x4189d4	                           mov r12d, edx	      1532	prdbg.c	FUNCTION_39	IF_1
0x40018ec	     0xf85ee000000	                           jne 0x40019e0	      1532	prdbg.c	FUNCTION_39	IF_1
0x40018f2	        0x488d6f10	                   lea rbp, [rdi + 0x10]	      1532	prdbg.c	FUNCTION_39	IF_1
0x40018f6	            0x85c9	                           test ecx, ecx	      1537	prdbg.c	FUNCTION_39	IF_3
0x40018f8	            0x7411	                            je 0x400190b	      1537	prdbg.c	FUNCTION_39	IF_3
0x40018fa	      0xbe00000000	                              mov esi, 0	      1539	prdbg.c	FUNCTION_39	IF_3	IF_4	CALL_5
0x40018ff	          0x4889ef	                            mov rdi, rbp	      1539	prdbg.c	FUNCTION_39	IF_3	IF_4	CALL_5
0x4001902	      0xe869f5ffff	            call sym.append_type.isra.14	      1539	prdbg.c	FUNCTION_39	IF_3	IF_4	CALL_5
0x4001907	            0x85c0	                           test eax, eax	      1539	prdbg.c	FUNCTION_39	IF_3	IF_4	CALL_5
0x4001909	            0x7411	                            je 0x400191c	      1539	prdbg.c	FUNCTION_39	IF_3	IF_4	CALL_5
0x400190b	      0xbe00000000	                              mov esi, 0	      1544	prdbg.c	FUNCTION_39	IF_5	CALL_6
0x4001910	          0x4889ef	                            mov rdi, rbp	      1544	prdbg.c	FUNCTION_39	IF_5	CALL_6
0x4001913	      0xe8b8f4ffff	           call sym.prepend_type.isra.12	      1544	prdbg.c	FUNCTION_39	IF_5	CALL_6
0x4001918	            0x85c0	                           test eax, eax	      1544	prdbg.c	FUNCTION_39	IF_5	CALL_6
0x400191a	            0x7514	                           jne 0x4001930	      1544	prdbg.c	FUNCTION_39	IF_5	CALL_6
0x400191c	            0x31c0	                            xor eax, eax	      1535	prdbg.c	FUNCTION_39	IF_1	IF_2
0x400191e	        0x4883c410	                           add rsp, 0x10	      1566	prdbg.c	FUNCTION_39
0x4001922	              0x5b	                                 pop rbx	      1566	prdbg.c	FUNCTION_39
0x4001923	              0x5d	                                 pop rbp	      1566	prdbg.c	FUNCTION_39
0x4001924	            0x415c	                                 pop r12	      1566	prdbg.c	FUNCTION_39
0x4001926	            0x415d	                                 pop r13	      1566	prdbg.c	FUNCTION_39
0x4001928	            0x415e	                                 pop r14	      1566	prdbg.c	FUNCTION_39
0x400192a	              0xc3	                                     ret	      1566	prdbg.c	FUNCTION_39
0x400192b	       0xf1f440000	                   nop dword [rax + rax]	      1566	prdbg.c	FUNCTION_39
0x4001930	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1548	prdbg.c	FUNCTION_39	IF_6	CALL_7
0x4001934	          0x4889df	                            mov rdi, rbx	      1548	prdbg.c	FUNCTION_39	IF_6	CALL_7
0x4001937	          0x488b00	                    mov rax, qword [rax]	      1548	prdbg.c	FUNCTION_39	IF_6	CALL_7
0x400193a	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      1548	prdbg.c	FUNCTION_39	IF_6	CALL_7
0x400193e	      0xe8bdf5ffff	                call sym.substitute_type	      1548	prdbg.c	FUNCTION_39	IF_6	CALL_7
0x4001943	            0x85c0	                           test eax, eax	      1548	prdbg.c	FUNCTION_39	IF_6	CALL_7
0x4001945	            0x74d5	                            je 0x400191c	      1548	prdbg.c	FUNCTION_39	IF_6	CALL_7
0x4001947	          0x4889ef	                            mov rdi, rbp	      1552	prdbg.c	FUNCTION_39	CALL_8
0x400194a	      0xe891ecffff	                call sym.pop_type.isra.3	      1552	prdbg.c	FUNCTION_39	CALL_8
0x400194f	          0x4885c0	                           test rax, rax	      1553	prdbg.c	FUNCTION_39	IF_7
0x4001952	          0x4989c6	                            mov r14, rax	      1552	prdbg.c	FUNCTION_39	CALL_8
0x4001955	            0x74c5	                            je 0x400191c	      1553	prdbg.c	FUNCTION_39	IF_7
0x4001957	          0x4489e6	                           mov esi, r12d	      1558	prdbg.c	FUNCTION_39	IF_8	CALL_9
0x400195a	          0x4889df	                            mov rdi, rbx	      1558	prdbg.c	FUNCTION_39	IF_8	CALL_9
0x400195d	      0xe8fefdffff	              call sym.pr_fix_visibility	      1558	prdbg.c	FUNCTION_39	IF_8	CALL_9
0x4001962	            0x85c0	                           test eax, eax	      1558	prdbg.c	FUNCTION_39	IF_8	CALL_9
0x4001964	            0x74b6	                            je 0x400191c	      1558	prdbg.c	FUNCTION_39	IF_8	CALL_9
0x4001966	          0x4c89f6	                            mov rsi, r14	      1561	prdbg.c	FUNCTION_39	CALL_10
0x4001969	          0x4889ef	                            mov rdi, rbp	      1561	prdbg.c	FUNCTION_39	CALL_10
0x400196c	      0xe8fff4ffff	            call sym.append_type.isra.14	      1561	prdbg.c	FUNCTION_39	CALL_10
0x4001971	            0x85c0	                           test eax, eax	      1565	prdbg.c	FUNCTION_39	CALL_14
0x4001973	            0x74a7	                            je 0x400191c	      1565	prdbg.c	FUNCTION_39	CALL_14
0x4001975	      0xbe00000000	                              mov esi, 0	      1562	prdbg.c	FUNCTION_39	CALL_11
0x400197a	          0x4889ef	                            mov rdi, rbp	      1562	prdbg.c	FUNCTION_39	CALL_11
0x400197d	      0xe8eef4ffff	            call sym.append_type.isra.14	      1562	prdbg.c	FUNCTION_39	CALL_11
0x4001982	            0x85c0	                           test eax, eax	      1562	prdbg.c	FUNCTION_39	CALL_11
0x4001984	            0x7496	                            je 0x400191c	      1562	prdbg.c	FUNCTION_39	CALL_11
0x4001986	          0x4c89ee	                            mov rsi, r13	      1563	prdbg.c	FUNCTION_39	CALL_12
0x4001989	          0x4889ef	                            mov rdi, rbp	      1563	prdbg.c	FUNCTION_39	CALL_12
0x400198c	      0xe8dff4ffff	            call sym.append_type.isra.14	      1563	prdbg.c	FUNCTION_39	CALL_12
0x4001991	            0x85c0	                           test eax, eax	      1563	prdbg.c	FUNCTION_39	CALL_12
0x4001993	            0x7487	                            je 0x400191c	      1563	prdbg.c	FUNCTION_39	CALL_12
0x4001995	      0xbe00000000	                              mov esi, 0	      1564	prdbg.c	FUNCTION_39	CALL_13
0x400199a	          0x4889ef	                            mov rdi, rbp	      1564	prdbg.c	FUNCTION_39	CALL_13
0x400199d	      0xe8cef4ffff	            call sym.append_type.isra.14	      1564	prdbg.c	FUNCTION_39	CALL_13
0x40019a2	            0x85c0	                           test eax, eax	      1564	prdbg.c	FUNCTION_39	CALL_13
0x40019a4	     0xf8472ffffff	                            je 0x400191c	      1564	prdbg.c	FUNCTION_39	CALL_13
0x40019aa	          0x8b4308	                mov eax, dword [rbx + 8]	       461	prdbg.c	FUNCTION_8	FOR_1
0x40019ad	          0x4531e4	                          xor r12d, r12d	       461	prdbg.c	FUNCTION_8	FOR_1
0x40019b0	            0x85c0	                           test eax, eax	       461	prdbg.c	FUNCTION_8	FOR_1
0x40019b2	            0x7516	                           jne 0x40019ca	       461	prdbg.c	FUNCTION_8	FOR_1
0x40019b4	            0xeb50	                           jmp 0x4001a06	       461	prdbg.c	FUNCTION_8	FOR_1
0x40019b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       461	prdbg.c	FUNCTION_8	FOR_1
0x40019c0	        0x4183c401	                             add r12d, 1	       461	prdbg.c	FUNCTION_8	FOR_1
0x40019c4	        0x443b6308	               cmp r12d, dword [rbx + 8]	       461	prdbg.c	FUNCTION_8	FOR_1
0x40019c8	            0x733c	                           jae 0x4001a06	       461	prdbg.c	FUNCTION_8	FOR_1
0x40019ca	      0xbe00000000	                              mov esi, 0	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x40019cf	          0x4889ef	                            mov rdi, rbp	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x40019d2	      0xe899f4ffff	            call sym.append_type.isra.14	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x40019d7	            0x85c0	                           test eax, eax	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x40019d9	            0x75e5	                           jne 0x40019c0	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x40019db	      0xe93cffffff	                           jmp 0x400191c	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x40019e0	        0x488d6f10	                   lea rbp, [rdi + 0x10]	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x40019e4	      0xbe00000000	                              mov esi, 0	      1534	prdbg.c	FUNCTION_39	IF_1	IF_2	CALL_4
0x40019e9	        0x894c240c	              mov dword [rsp + 0xc], ecx	      1534	prdbg.c	FUNCTION_39	IF_1	IF_2	CALL_4
0x40019ed	          0x4889ef	                            mov rdi, rbp	      1534	prdbg.c	FUNCTION_39	IF_1	IF_2	CALL_4
0x40019f0	      0xe87bf4ffff	            call sym.append_type.isra.14	      1534	prdbg.c	FUNCTION_39	IF_1	IF_2	CALL_4
0x40019f5	            0x85c0	                           test eax, eax	      1534	prdbg.c	FUNCTION_39	IF_1	IF_2	CALL_4
0x40019f7	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      1534	prdbg.c	FUNCTION_39	IF_1	IF_2	CALL_4
0x40019fb	     0xf85f5feffff	                           jne 0x40018f6	      1534	prdbg.c	FUNCTION_39	IF_1	IF_2	CALL_4
0x4001a01	      0xe916ffffff	                           jmp 0x400191c	      1534	prdbg.c	FUNCTION_39	IF_1	IF_2	CALL_4
0x4001a06	      0xb801000000	                              mov eax, 1	      1565	prdbg.c	FUNCTION_39	CALL_14
0x4001a0b	      0xe90effffff	                           jmp 0x400191e	      1565	prdbg.c	FUNCTION_39	CALL_14
0x4001a10	      0xb900000000	                              mov ecx, 0	      1527	prdbg.c	FUNCTION_39	CALL_1
0x4001a15	      0xbaf7050000	                          mov edx, 0x5f7	      1527	prdbg.c	FUNCTION_39	CALL_1
0x4001a1a	      0xbe00000000	                              mov esi, 0	      1527	prdbg.c	FUNCTION_39	CALL_1
0x4001a1f	      0xbf00000000	                              mov edi, 0	      1527	prdbg.c	FUNCTION_39	CALL_1
0x4001a24	      0xe800000000	                          call 0x4001a29	      1527	prdbg.c	FUNCTION_39	CALL_1
0x4001a29	      0xb900000000	                              mov ecx, 0	      1529	prdbg.c	FUNCTION_39	CALL_3
0x4001a2e	      0xbaf9050000	                          mov edx, 0x5f9	      1529	prdbg.c	FUNCTION_39	CALL_3
0x4001a33	      0xbe00000000	                              mov esi, 0	      1529	prdbg.c	FUNCTION_39	CALL_3
0x4001a38	      0xbf00000000	                              mov edi, 0	      1529	prdbg.c	FUNCTION_39	CALL_3
0x4001a3d	      0xe800000000	                          call 0x4001a42	      1529	prdbg.c	FUNCTION_39	CALL_3
0x4001a42	      0xb900000000	                              mov ecx, 0	      1528	prdbg.c	FUNCTION_39	CALL_2
0x4001a47	      0xbaf8050000	                          mov edx, 0x5f8	      1528	prdbg.c	FUNCTION_39	CALL_2
0x4001a4c	      0xbe00000000	                              mov esi, 0	      1528	prdbg.c	FUNCTION_39	CALL_2
0x4001a51	      0xbf00000000	                              mov edi, 0	      1528	prdbg.c	FUNCTION_39	CALL_2
0x4001a56	      0xe800000000	                          call 0x4001a5b	      1528	prdbg.c	FUNCTION_39	CALL_2
tg_typdef	SWITCH,0:WHILE,0:IF,1:FOR,0:ELSE,0:functions,0:CALL,2:DO,0	25
0x4000890	            0x4154	                                push r12	      2504	prdbg.c	FUNCTION_72
0x4000892	              0x55	                                push rbp	      2504	prdbg.c	FUNCTION_72
0x4000893	          0x4889fd	                            mov rbp, rdi	      2504	prdbg.c	FUNCTION_72
0x4000896	              0x53	                                push rbx	      2504	prdbg.c	FUNCTION_72
0x4000897	        0x4883c710	                           add rdi, 0x10	      2504	prdbg.c	FUNCTION_72
0x400089b	          0x4989f4	                            mov r12, rsi	      2504	prdbg.c	FUNCTION_72
0x400089e	      0xe83dfdffff	                call sym.pop_type.isra.3	      2508	prdbg.c	FUNCTION_72	CALL_1
0x40008a3	          0x4889c3	                            mov rbx, rax	      2508	prdbg.c	FUNCTION_72	CALL_1
0x40008a6	            0x31c0	                            xor eax, eax	      2510	prdbg.c	FUNCTION_72	IF_1
0x40008a8	          0x4885db	                           test rbx, rbx	      2509	prdbg.c	FUNCTION_72	IF_1
0x40008ab	            0x742a	                            je 0x40008d7	      2509	prdbg.c	FUNCTION_72	IF_1
0x40008ad	        0x4c8b4520	              mov r8, qword [rbp + 0x20]	        97	stdio2.h	CALL_96
0x40008b1	        0x488b7d00	                    mov rdi, qword [rbp]	        97	stdio2.h	CALL_96
0x40008b5	          0x4989d9	                             mov r9, rbx	        97	stdio2.h	CALL_96
0x40008b8	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_96
0x40008bb	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_96
0x40008c0	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_96
0x40008c5	      0xe800000000	                          call 0x40008ca	        97	stdio2.h	CALL_96
0x40008ca	          0x4889df	                            mov rdi, rbx	      2515	prdbg.c	FUNCTION_72	CALL_2
0x40008cd	      0xe800000000	                          call 0x40008d2	      2515	prdbg.c	FUNCTION_72	CALL_2
0x40008d2	      0xb801000000	                              mov eax, 1	      2517	prdbg.c	FUNCTION_72
0x40008d7	              0x5b	                                 pop rbx	      2518	prdbg.c	FUNCTION_72
0x40008d8	              0x5d	                                 pop rbp	      2518	prdbg.c	FUNCTION_72
0x40008d9	            0x415c	                                 pop r12	      2518	prdbg.c	FUNCTION_72
0x40008db	              0xc3	                                     ret	      2518	prdbg.c	FUNCTION_72
pr_method_type	SWITCH,0:WHILE,0:IF,16:FOR,2:ELSE,5:functions,0:CALL,25:DO,0	206
0x4001450	            0x4157	                                push r15	       920	prdbg.c	FUNCTION_27
0x4001452	            0x4156	                                push r14	       920	prdbg.c	FUNCTION_27
0x4001454	            0x4155	                                push r13	       920	prdbg.c	FUNCTION_27
0x4001456	            0x4154	                                push r12	       920	prdbg.c	FUNCTION_27
0x4001458	          0x4989fd	                            mov r13, rdi	       920	prdbg.c	FUNCTION_27
0x400145b	              0x55	                                push rbp	       920	prdbg.c	FUNCTION_27
0x400145c	              0x53	                                push rbx	       920	prdbg.c	FUNCTION_27
0x400145d	          0x4189d4	                           mov r12d, edx	       920	prdbg.c	FUNCTION_27
0x4001460	      0xbd0a000000	                            mov ebp, 0xa	       920	prdbg.c	FUNCTION_27
0x4001465	        0x4883ec28	                           sub rsp, 0x28	       920	prdbg.c	FUNCTION_27
0x4001469	            0x85f6	                           test esi, esi	       929	prdbg.c	FUNCTION_27	IF_1
0x400146b	        0x8974241c	             mov dword [rsp + 0x1c], esi	       920	prdbg.c	FUNCTION_27
0x400146f	        0x894c2418	             mov dword [rsp + 0x18], ecx	       920	prdbg.c	FUNCTION_27
0x4001473	    0x48c744241000	               mov qword [rsp + 0x10], 0	       930	prdbg.c	FUNCTION_27	IF_1
0x400147c	     0xf8586010000	                           jne 0x4001608	       929	prdbg.c	FUNCTION_27	IF_1
0x4001482	          0x4585e4	                         test r12d, r12d	       948	prdbg.c	FUNCTION_27	IF_6
0x4001485	     0xf8e85000000	                           jle 0x4001510	       948	prdbg.c	FUNCTION_27	IF_6
0x400148b	          0x4963dc	                        movsxd rbx, r12d	       957	prdbg.c	FUNCTION_27	ELSE_3	CALL_8
0x400148e	        0x4d8d7510	                   lea r14, [r13 + 0x10]	       957	prdbg.c	FUNCTION_27	ELSE_3	CALL_8
0x4001492	        0x48c1e303	                              shl rbx, 3	       957	prdbg.c	FUNCTION_27	ELSE_3	CALL_8
0x4001496	          0x4889df	                            mov rdi, rbx	       957	prdbg.c	FUNCTION_27	ELSE_3	CALL_8
0x4001499	      0xe800000000	                          call 0x400149e	       957	prdbg.c	FUNCTION_27	ELSE_3	CALL_8
0x400149e	          0x4889c1	                            mov rcx, rax	       957	prdbg.c	FUNCTION_27	ELSE_3	CALL_8
0x40014a1	      0x4889442408	                mov qword [rsp + 8], rax	       957	prdbg.c	FUNCTION_27	ELSE_3	CALL_8
0x40014a6	      0x488d5c18f8	                lea rbx, [rax + rbx - 8]	       957	prdbg.c	FUNCTION_27	ELSE_3	CALL_8
0x40014ab	      0x418d4424ff	                      lea eax, [r12 - 1]	       957	prdbg.c	FUNCTION_27	ELSE_3	CALL_8
0x40014b0	          0x4863d0	                         movsxd rdx, eax	       957	prdbg.c	FUNCTION_27	ELSE_3	CALL_8
0x40014b3	            0x89c0	                            mov eax, eax	       957	prdbg.c	FUNCTION_27	ELSE_3	CALL_8
0x40014b5	          0x4829c2	                            sub rdx, rax	       957	prdbg.c	FUNCTION_27	ELSE_3	CALL_8
0x40014b8	      0x4c8d7cd1f8	              lea r15, [rcx + rdx*8 - 8]	       957	prdbg.c	FUNCTION_27	ELSE_3	CALL_8
0x40014bd	           0xf1f00	                         nop dword [rax]	       957	prdbg.c	FUNCTION_27	ELSE_3	CALL_8
0x40014c0	      0xbe00000000	                              mov esi, 0	       960	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_7	CALL_9
0x40014c5	          0x4c89ef	                            mov rdi, r13	       960	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_7	CALL_9
0x40014c8	      0xe833faffff	                call sym.substitute_type	       960	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_7	CALL_9
0x40014cd	            0x85c0	                           test eax, eax	       960	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_7	CALL_9
0x40014cf	     0xf84e3010000	                            je 0x40016b8	       960	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_7	CALL_9
0x40014d5	          0x4c89f7	                            mov rdi, r14	       965	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_11
0x40014d8	      0xe803f1ffff	                call sym.pop_type.isra.3	       965	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_11
0x40014dd	          0x4885c0	                           test rax, rax	       966	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_8
0x40014e0	          0x488903	                    mov qword [rbx], rax	       965	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_11
0x40014e3	     0xf84f7010000	                            je 0x40016e0	       966	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_8
0x40014e9	          0x4889c7	                            mov rdi, rax	       971	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_13
0x40014ec	        0x4883eb08	                              sub rbx, 8	       971	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_13
0x40014f0	      0xe800000000	                          call 0x40014f5	       971	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_13
0x40014f5	          0x4c39fb	                            cmp rbx, r15	       958	prdbg.c	FUNCTION_27	ELSE_3	FOR_1
0x40014f8	        0x8d6c0502	                lea ebp, [rbp + rax + 2]	       971	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	CALL_13
0x40014fc	            0x75c2	                           jne 0x40014c0	       958	prdbg.c	FUNCTION_27	ELSE_3	FOR_1
0x40014fe	      0x448b5c2418	           mov r11d, dword [rsp + 0x18] 	       974	prdbg.c	FUNCTION_27	ELSE_3	IF_9
0x4001503	          0x8d4505	                      lea eax, [rbp + 5]	       974	prdbg.c	FUNCTION_27	ELSE_3	IF_9
0x4001506	          0x4585db	                         test r11d, r11d	       974	prdbg.c	FUNCTION_27	ELSE_3	IF_9
0x4001509	           0xf45e8	                         cmovne ebp, eax	       974	prdbg.c	FUNCTION_27	ELSE_3	IF_9
0x400150c	            0xeb0e	                           jmp 0x400151c	       974	prdbg.c	FUNCTION_27	ELSE_3	IF_9
0x400150e	            0x6690	                                     nop	       974	prdbg.c	FUNCTION_27	ELSE_3	IF_9
0x4001510	          0x83c50f	                            add ebp, 0xf	       951	prdbg.c	FUNCTION_27	IF_6
0x4001513	    0x48c744240800	                  mov qword [rsp + 8], 0	       950	prdbg.c	FUNCTION_27	IF_6
0x400151c	            0x89ef	                            mov edi, ebp	       979	prdbg.c	FUNCTION_27	CALL_14
0x400151e	      0xe800000000	                          call 0x4001523	       979	prdbg.c	FUNCTION_27	CALL_14
0x4001523	      0x448b54241c	           mov r10d, dword [rsp + 0x1c] 	       980	prdbg.c	FUNCTION_27	IF_10
0x4001528	          0x4889c3	                            mov rbx, rax	       979	prdbg.c	FUNCTION_27	CALL_14
0x400152b	          0x4585d2	                         test r10d, r10d	       980	prdbg.c	FUNCTION_27	IF_10
0x400152e	     0xf856c010000	                           jne 0x40016a0	       980	prdbg.c	FUNCTION_27	IF_10
0x4001534	          0xc60000	                       mov byte [rax], 0	       981	prdbg.c	FUNCTION_27	IF_10
0x4001537	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_94	CALL_3
0x400153a	      0xe800000000	                          call 0x400153f	       148	string3.h	FUNCTION_94	CALL_3
0x400153f	        0x488d1403	                    lea rdx, [rbx + rax]	       148	string3.h	FUNCTION_94	CALL_3
0x4001543	    0x41b928000000	                           mov r9d, 0x28	       148	string3.h	FUNCTION_94	CALL_3
0x4001549	          0x4585e4	                         test r12d, r12d	       986	prdbg.c	FUNCTION_27	IF_11
0x400154c	    0xc7023a3a7c20	            mov dword [rdx], 0x207c3a3a 	       148	string3.h	FUNCTION_94	CALL_3
0x4001552	      0x6644894a04	                 mov word [rdx + 4], r9w	       148	string3.h	FUNCTION_94	CALL_3
0x4001557	     0xf88c3010000	                            js 0x4001720	       986	prdbg.c	FUNCTION_27	IF_11
0x400155d	     0xf84f0010000	                            je 0x4001753	       992	prdbg.c	FUNCTION_27	ELSE_5	FOR_2
0x4001563	      0x488b6c2408	                mov rbp, qword [rsp + 8]	       992	prdbg.c	FUNCTION_27	ELSE_5	FOR_2
0x4001568	          0x4531f6	                          xor r14d, r14d	       992	prdbg.c	FUNCTION_27	ELSE_5	FOR_2
0x400156b	            0xeb13	                           jmp 0x4001580	       992	prdbg.c	FUNCTION_27	ELSE_5	FOR_2
0x400156d	           0xf1f00	                         nop dword [rax]	       992	prdbg.c	FUNCTION_27	ELSE_5	FOR_2
0x4001570	      0xbf2c200000	                         mov edi, 0x202c	       148	string3.h	FUNCTION_94	CALL_3
0x4001575	        0xc6400200	                   mov byte [rax + 2], 0	       148	string3.h	FUNCTION_94	CALL_3
0x4001579	        0x4883c508	                              add rbp, 8	       148	string3.h	FUNCTION_94	CALL_3
0x400157d	          0x668938	                      mov word [rax], di	       148	string3.h	FUNCTION_94	CALL_3
0x4001580	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_94	CALL_3
0x4001583	        0x4183c601	                             add r14d, 1	       992	prdbg.c	FUNCTION_27	ELSE_5	FOR_2
0x4001587	      0xe800000000	                          call 0x400158c	       992	prdbg.c	FUNCTION_27	ELSE_5	FOR_2
0x400158c	        0x488b7500	                    mov rsi, qword [rbp]	       148	string3.h	FUNCTION_94	CALL_3
0x4001590	        0x488d3c03	                    lea rdi, [rbx + rax]	       148	string3.h	FUNCTION_94	CALL_3
0x4001594	      0xe800000000	                          call 0x4001599	       148	string3.h	FUNCTION_94	CALL_3
0x4001599	          0x4539f4	                          cmp r12d, r14d	       992	prdbg.c	FUNCTION_27	ELSE_5	FOR_2
0x400159c	            0x75d2	                           jne 0x4001570	       992	prdbg.c	FUNCTION_27	ELSE_5	FOR_2
0x400159e	        0x8b542418	            mov edx, dword [rsp + 0x18] 	       998	prdbg.c	FUNCTION_27	ELSE_5	IF_13
0x40015a2	            0x85d2	                           test edx, edx	       998	prdbg.c	FUNCTION_27	ELSE_5	IF_13
0x40015a4	     0xf8546010000	                           jne 0x40016f0	       998	prdbg.c	FUNCTION_27	ELSE_5	IF_13
0x40015aa	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1005	prdbg.c	FUNCTION_27	ELSE_5	CALL_22
0x40015af	      0xe800000000	                          call 0x40015b4	      1005	prdbg.c	FUNCTION_27	ELSE_5	CALL_22
0x40015b4	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_94	CALL_3
0x40015b7	      0xe800000000	                          call 0x40015bc	       148	string3.h	FUNCTION_94	CALL_3
0x40015bc	      0xb929000000	                           mov ecx, 0x29	       148	string3.h	FUNCTION_94	CALL_3
0x40015c1	          0x4889de	                            mov rsi, rbx	      1010	prdbg.c	FUNCTION_27	IF_16	CALL_24
0x40015c4	          0x4c89ef	                            mov rdi, r13	      1010	prdbg.c	FUNCTION_27	IF_16	CALL_24
0x40015c7	        0x66890c03	                mov word [rbx + rax], cx	       148	string3.h	FUNCTION_94	CALL_3
0x40015cb	      0xe830f9ffff	                call sym.substitute_type	      1010	prdbg.c	FUNCTION_27	IF_16	CALL_24
0x40015d0	            0x85c0	                           test eax, eax	      1010	prdbg.c	FUNCTION_27	IF_16	CALL_24
0x40015d2	            0x7514	                           jne 0x40015e8	      1010	prdbg.c	FUNCTION_27	IF_16	CALL_24
0x40015d4	        0x4883c428	                           add rsp, 0x28	      1016	prdbg.c	FUNCTION_27
0x40015d8	            0x31c0	                            xor eax, eax	       969	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_8
0x40015da	              0x5b	                                 pop rbx	      1016	prdbg.c	FUNCTION_27
0x40015db	              0x5d	                                 pop rbp	      1016	prdbg.c	FUNCTION_27
0x40015dc	            0x415c	                                 pop r12	      1016	prdbg.c	FUNCTION_27
0x40015de	            0x415d	                                 pop r13	      1016	prdbg.c	FUNCTION_27
0x40015e0	            0x415e	                                 pop r14	      1016	prdbg.c	FUNCTION_27
0x40015e2	            0x415f	                                 pop r15	      1016	prdbg.c	FUNCTION_27
0x40015e4	              0xc3	                                     ret	      1016	prdbg.c	FUNCTION_27
0x40015e5	           0xf1f00	                         nop dword [rax]	      1016	prdbg.c	FUNCTION_27
0x40015e8	          0x4889df	                            mov rdi, rbx	      1013	prdbg.c	FUNCTION_27	CALL_25
0x40015eb	      0xe800000000	                          call 0x40015f0	      1013	prdbg.c	FUNCTION_27	CALL_25
0x40015f0	        0x4883c428	                           add rsp, 0x28	      1016	prdbg.c	FUNCTION_27
0x40015f4	      0xb801000000	                              mov eax, 1	      1015	prdbg.c	FUNCTION_27
0x40015f9	              0x5b	                                 pop rbx	      1016	prdbg.c	FUNCTION_27
0x40015fa	              0x5d	                                 pop rbp	      1016	prdbg.c	FUNCTION_27
0x40015fb	            0x415c	                                 pop r12	      1016	prdbg.c	FUNCTION_27
0x40015fd	            0x415d	                                 pop r13	      1016	prdbg.c	FUNCTION_27
0x40015ff	            0x415e	                                 pop r14	      1016	prdbg.c	FUNCTION_27
0x4001601	            0x415f	                                 pop r15	      1016	prdbg.c	FUNCTION_27
0x4001603	              0xc3	                                     ret	      1016	prdbg.c	FUNCTION_27
0x4001604	         0xf1f4000	                         nop dword [rax]	      1016	prdbg.c	FUNCTION_27
0x4001608	      0xbe00000000	                              mov esi, 0	       933	prdbg.c	FUNCTION_27	ELSE_1	IF_2	CALL_1
0x400160d	      0xe8eef8ffff	                call sym.substitute_type	       933	prdbg.c	FUNCTION_27	ELSE_1	IF_2	CALL_1
0x4001612	            0x85c0	                           test eax, eax	       933	prdbg.c	FUNCTION_27	ELSE_1	IF_2	CALL_1
0x4001614	            0x74be	                            je 0x40015d4	       933	prdbg.c	FUNCTION_27	ELSE_1	IF_2	CALL_1
0x4001616	        0x498d7d10	                   lea rdi, [r13 + 0x10]	       933	prdbg.c	FUNCTION_27	ELSE_1	IF_2	CALL_1
0x400161a	      0xe8c1efffff	                call sym.pop_type.isra.3	       935	prdbg.c	FUNCTION_27	ELSE_1	CALL_2
0x400161f	          0x4885c0	                           test rax, rax	       936	prdbg.c	FUNCTION_27	ELSE_1	IF_3
0x4001622	          0x4889c6	                            mov rsi, rax	       935	prdbg.c	FUNCTION_27	ELSE_1	CALL_2
0x4001625	            0x74ad	                            je 0x40015d4	       936	prdbg.c	FUNCTION_27	ELSE_1	IF_3
0x4001627	      0xbf00000000	                              mov edi, 0	       938	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_3
0x400162c	      0xb906000000	                              mov ecx, 6	       938	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_3
0x4001631	      0x4889442410	             mov qword [rsp + 0x10], rax	       938	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_3
0x4001636	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       938	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_3
0x4001638	            0x751a	                           jne 0x4001654	       938	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_3
0x400163a	        0x488d5806	                      lea rbx, [rax + 6]	       939	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_4
0x400163e	      0xbe20000000	                           mov esi, 0x20	       939	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_4
0x4001643	          0x4889df	                            mov rdi, rbx	       939	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_4
0x4001646	      0xe800000000	                          call 0x400164b	       939	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_4
0x400164b	          0x4885c0	                           test rax, rax	       939	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_4
0x400164e	     0xf84f5000000	                            je 0x4001749	       939	prdbg.c	FUNCTION_27	ELSE_1	IF_4	CALL_4
0x4001654	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       941	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_5
0x4001659	      0xbf00000000	                              mov edi, 0	       941	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_5
0x400165e	      0xb90c000000	                            mov ecx, 0xc	       941	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_5
0x4001663	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       941	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_5
0x4001665	            0x7522	                           jne 0x4001689	       941	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_5
0x4001667	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	       942	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_6
0x400166c	      0xbe20000000	                           mov esi, 0x20	       942	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_6
0x4001671	        0x498d5f0c	                    lea rbx, [r15 + 0xc]	       942	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_6
0x4001675	          0x4889df	                            mov rdi, rbx	       942	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_6
0x4001678	      0xe800000000	                          call 0x400167d	       942	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_6
0x400167d	          0x4885c0	                           test rax, rax	       942	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_6
0x4001680	        0x490f45df	                         cmovne rbx, r15	       942	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_6
0x4001684	      0x48895c2410	             mov qword [rsp + 0x10], rbx	       942	prdbg.c	FUNCTION_27	ELSE_1	ELSE_2	IF_5	CALL_6
0x4001689	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       945	prdbg.c	FUNCTION_27	ELSE_1	CALL_7
0x400168e	      0xe800000000	                          call 0x4001693	       945	prdbg.c	FUNCTION_27	ELSE_1	CALL_7
0x4001693	          0x8d680a	                    lea ebp, [rax + 0xa]	       945	prdbg.c	FUNCTION_27	ELSE_1	CALL_7
0x4001696	      0xe9e7fdffff	                           jmp 0x4001482	       945	prdbg.c	FUNCTION_27	ELSE_1	CALL_7
0x400169b	       0xf1f440000	                   nop dword [rax + rax]	       945	prdbg.c	FUNCTION_27	ELSE_1	CALL_7
0x40016a0	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       110	string3.h	FUNCTION_90	CALL_3
0x40016a5	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_90	CALL_3
0x40016a8	      0xe800000000	                          call 0x40016ad	       110	string3.h	FUNCTION_90	CALL_3
0x40016ad	      0xe985feffff	                           jmp 0x4001537	       110	string3.h	FUNCTION_90	CALL_3
0x40016b2	    0x660f1f440000	                    nop word [rax + rax]	       110	string3.h	FUNCTION_90	CALL_3
0x40016b8	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       962	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_7	CALL_10
0x40016bd	        0x89442418	             mov dword [rsp + 0x18], eax	       962	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_7	CALL_10
0x40016c1	      0xe800000000	                          call 0x40016c6	       962	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_7	CALL_10
0x40016c6	        0x8b442418	            mov eax, dword [rsp + 0x18] 	       963	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_7
0x40016ca	        0x4883c428	                           add rsp, 0x28	      1016	prdbg.c	FUNCTION_27
0x40016ce	              0x5b	                                 pop rbx	      1016	prdbg.c	FUNCTION_27
0x40016cf	              0x5d	                                 pop rbp	      1016	prdbg.c	FUNCTION_27
0x40016d0	            0x415c	                                 pop r12	      1016	prdbg.c	FUNCTION_27
0x40016d2	            0x415d	                                 pop r13	      1016	prdbg.c	FUNCTION_27
0x40016d4	            0x415e	                                 pop r14	      1016	prdbg.c	FUNCTION_27
0x40016d6	            0x415f	                                 pop r15	      1016	prdbg.c	FUNCTION_27
0x40016d8	              0xc3	                                     ret	      1016	prdbg.c	FUNCTION_27
0x40016d9	     0xf1f80000000	                         nop dword [rax]	      1016	prdbg.c	FUNCTION_27
0x40016e0	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       968	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_8	CALL_12
0x40016e5	      0xe800000000	                          call 0x40016ea	       968	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_8	CALL_12
0x40016ea	      0xe9e5feffff	                           jmp 0x40015d4	       968	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_8	CALL_12
0x40016ef	              0x90	                                     nop	       968	prdbg.c	FUNCTION_27	ELSE_3	FOR_1	IF_8	CALL_12
0x40016f0	      0xbe2c200000	                         mov esi, 0x202c	       148	string3.h	FUNCTION_94	CALL_3
0x40016f5	        0xc6400200	                   mov byte [rax + 2], 0	       148	string3.h	FUNCTION_94	CALL_3
0x40016f9	          0x668930	                      mov word [rax], si	       148	string3.h	FUNCTION_94	CALL_3
0x40016fc	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_94	CALL_3
0x40016ff	      0xe800000000	                          call 0x4001704	       148	string3.h	FUNCTION_94	CALL_3
0x4001704	          0x4585e4	                         test r12d, r12d	      1004	prdbg.c	FUNCTION_27	ELSE_5	IF_15
0x4001707	    0xc704032e2e2e	        mov dword [rbx + rax], 0x2e2e2e 	       148	string3.h	FUNCTION_94	CALL_3
0x400170e	     0xf84a0feffff	                            je 0x40015b4	      1004	prdbg.c	FUNCTION_27	ELSE_5	IF_15
0x4001714	      0xe991feffff	                           jmp 0x40015aa	      1004	prdbg.c	FUNCTION_27	ELSE_5	IF_15
0x4001719	     0xf1f80000000	                         nop dword [rax]	      1004	prdbg.c	FUNCTION_27	ELSE_5	IF_15
0x4001720	      0x488d440305	                lea rax, [rbx + rax + 5]	       148	string3.h	FUNCTION_94	CALL_3
0x4001725	    0x48b92f2a2075	          movabs rcx, 0x6f6e6b6e75202a2f	       148	string3.h	FUNCTION_94	CALL_3
0x400172f	    0x41b82f000000	                           mov r8d, 0x2f	       148	string3.h	FUNCTION_94	CALL_3
0x4001735	          0x488908	                    mov qword [rax], rcx	       148	string3.h	FUNCTION_94	CALL_3
0x4001738	    0xc74008776e20	        mov dword [rax + 8], 0x2a206e77 	       148	string3.h	FUNCTION_94	CALL_3
0x400173f	      0x664489400c	               mov word [rax + 0xc], r8w	       148	string3.h	FUNCTION_94	CALL_3
0x4001744	      0xe96bfeffff	                           jmp 0x40015b4	       148	string3.h	FUNCTION_94	CALL_3
0x4001749	      0x48895c2410	             mov qword [rsp + 0x10], rbx	       148	string3.h	FUNCTION_94	CALL_3
0x400174e	      0xe936ffffff	                           jmp 0x4001689	       148	string3.h	FUNCTION_94	CALL_3
0x4001753	        0x8b442418	            mov eax, dword [rsp + 0x18] 	       998	prdbg.c	FUNCTION_27	ELSE_5	IF_13
0x4001757	            0x85c0	                           test eax, eax	       998	prdbg.c	FUNCTION_27	ELSE_5	IF_13
0x4001759	            0x75a1	                           jne 0x40016fc	       998	prdbg.c	FUNCTION_27	ELSE_5	IF_13
0x400175b	      0xe954feffff	                           jmp 0x40015b4	       998	prdbg.c	FUNCTION_27	ELSE_5	IF_13
tg_start_struct_type	SWITCH,0:WHILE,0:IF,2:FOR,0:ELSE,1:functions,0:CALL,2:DO,0	72
0x4003940	            0x4155	                                push r13	      2027	prdbg.c	FUNCTION_61
0x4003942	            0x4154	                                push r12	      2027	prdbg.c	FUNCTION_61
0x4003944	          0x4189cd	                           mov r13d, ecx	      2027	prdbg.c	FUNCTION_61
0x4003947	              0x55	                                push rbp	      2027	prdbg.c	FUNCTION_61
0x4003948	              0x53	                                push rbx	      2027	prdbg.c	FUNCTION_61
0x4003949	          0x4889fd	                            mov rbp, rdi	      2027	prdbg.c	FUNCTION_61
0x400394c	          0x4889f3	                            mov rbx, rsi	      2027	prdbg.c	FUNCTION_61
0x400394f	        0x4883ec28	                           sub rsp, 0x28	      2027	prdbg.c	FUNCTION_61
0x4003953	    0x64488b042528	                mov rax, qword fs:[0x28]	      2027	prdbg.c	FUNCTION_61
0x400395c	      0x4889442418	             mov qword [rsp + 0x18], rax	      2027	prdbg.c	FUNCTION_61
0x4003961	            0x31c0	                            xor eax, eax	      2027	prdbg.c	FUNCTION_61
0x4003963	          0x4885f6	                           test rsi, rsi	      2032	prdbg.c	FUNCTION_61	IF_1
0x4003966	     0xf84b4000000	                            je 0x4003a20	      2032	prdbg.c	FUNCTION_61	IF_1
0x400396c	        0x4c8d6510	                   lea r12, [rbp + 0x10]	      2032	prdbg.c	FUNCTION_61	IF_1
0x4003970	          0x4889de	                            mov rsi, rbx	      2040	prdbg.c	FUNCTION_61	IF_2	CALL_1
0x4003973	          0x4c89e7	                            mov rdi, r12	      2040	prdbg.c	FUNCTION_61	IF_2	CALL_1
0x4003976	      0xe865f3ffff	              call sym.push_type.isra.30	      2040	prdbg.c	FUNCTION_61	IF_2	CALL_1
0x400397b	            0x85c0	                           test eax, eax	      2040	prdbg.c	FUNCTION_61	IF_2	CALL_1
0x400397d	            0x746a	                            je 0x40039e9	      2040	prdbg.c	FUNCTION_61	IF_2	CALL_1
0x400397f	          0x4585ed	                         test r13d, r13d	      2043	prdbg.c	FUNCTION_61
0x4003982	      0xb900000000	                              mov ecx, 0	      2043	prdbg.c	FUNCTION_61
0x4003987	      0xb800000000	                              mov eax, 0	      2043	prdbg.c	FUNCTION_61
0x400398c	        0x480f44c1	                          cmove rax, rcx	      2043	prdbg.c	FUNCTION_61
0x4003990	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      2043	prdbg.c	FUNCTION_61
0x4003994	        0x4c8b4520	              mov r8, qword [rbp + 0x20]	        97	stdio2.h	CALL_96
0x4003998	        0x440fbe08	                   movsx r9d, byte [rax]	        97	stdio2.h	CALL_96
0x400399c	        0x488b7d00	                    mov rdi, qword [rbp]	        97	stdio2.h	CALL_96
0x40039a0	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_96
0x40039a3	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_96
0x40039a8	            0x31db	                            xor ebx, ebx	       461	prdbg.c	FUNCTION_8	FOR_1
0x40039aa	        0x48894220	             mov qword [rdx + 0x20], rax	      2043	prdbg.c	FUNCTION_61
0x40039ae	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_96
0x40039b0	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_96
0x40039b5	      0xe800000000	                          call 0x40039ba	        97	stdio2.h	CALL_96
0x40039ba	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      2048	prdbg.c	FUNCTION_61
0x40039be	    0xc74010000000	               mov dword [rax + 0x10], 0	      2048	prdbg.c	FUNCTION_61
0x40039c5	          0x8b4508	                mov eax, dword [rbp + 8]	       461	prdbg.c	FUNCTION_8	FOR_1
0x40039c8	            0x85c0	                           test eax, eax	       461	prdbg.c	FUNCTION_8	FOR_1
0x40039ca	            0x750c	                           jne 0x40039d8	       461	prdbg.c	FUNCTION_8	FOR_1
0x40039cc	            0xeb42	                           jmp 0x4003a10	       461	prdbg.c	FUNCTION_8	FOR_1
0x40039ce	            0x6690	                                     nop	       461	prdbg.c	FUNCTION_8	FOR_1
0x40039d0	          0x83c301	                              add ebx, 1	       461	prdbg.c	FUNCTION_8	FOR_1
0x40039d3	          0x3b5d08	                cmp ebx, dword [rbp + 8]	       461	prdbg.c	FUNCTION_8	FOR_1
0x40039d6	            0x7338	                           jae 0x4003a10	       461	prdbg.c	FUNCTION_8	FOR_1
0x40039d8	      0xbe00000000	                              mov esi, 0	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x40039dd	          0x4c89e7	                            mov rdi, r12	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x40039e0	      0xe88bd4ffff	            call sym.append_type.isra.14	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x40039e5	            0x85c0	                           test eax, eax	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x40039e7	            0x75e7	                           jne 0x40039d0	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x40039e9	            0x31c0	                            xor eax, eax	      2041	prdbg.c	FUNCTION_61	IF_2
0x40039eb	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2051	prdbg.c	FUNCTION_61
0x40039f0	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2051	prdbg.c	FUNCTION_61
0x40039f9	            0x7547	                           jne 0x4003a42	      2051	prdbg.c	FUNCTION_61
0x40039fb	        0x4883c428	                           add rsp, 0x28	      2051	prdbg.c	FUNCTION_61
0x40039ff	              0x5b	                                 pop rbx	      2051	prdbg.c	FUNCTION_61
0x4003a00	              0x5d	                                 pop rbp	      2051	prdbg.c	FUNCTION_61
0x4003a01	            0x415c	                                 pop r12	      2051	prdbg.c	FUNCTION_61
0x4003a03	            0x415d	                                 pop r13	      2051	prdbg.c	FUNCTION_61
0x4003a05	              0xc3	                                     ret	      2051	prdbg.c	FUNCTION_61
0x4003a06	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2051	prdbg.c	FUNCTION_61
0x4003a10	      0xb801000000	                              mov eax, 1	       467	prdbg.c	FUNCTION_8
0x4003a15	            0xebd4	                           jmp 0x40039eb	       467	prdbg.c	FUNCTION_8
0x4003a17	    0x660f1f840000	                    nop word [rax + rax]	       467	prdbg.c	FUNCTION_8
0x4003a20	          0x4189d0	                            mov r8d, edx	        33	stdio2.h	FUNCTION_96	CALL_1
0x4003a23	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_96	CALL_1
0x4003a28	      0xba14000000	                           mov edx, 0x14	        33	stdio2.h	FUNCTION_96	CALL_1
0x4003a2d	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_96	CALL_1
0x4003a32	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_96	CALL_1
0x4003a35	          0x4889e3	                            mov rbx, rsp	      2036	prdbg.c	FUNCTION_61	ELSE_1
0x4003a38	      0xe800000000	                          call 0x4003a3d	        33	stdio2.h	FUNCTION_96	CALL_1
0x4003a3d	      0xe92affffff	                           jmp 0x400396c	        33	stdio2.h	FUNCTION_96	CALL_1
0x4003a42	      0xe800000000	                          call 0x4003a47	      2051	prdbg.c	FUNCTION_61
pr_bool_type	SWITCH,0:WHILE,0:IF,0:FOR,0:ELSE,0:functions,0:CALL,1:DO,0	22
0x40035b0	              0x53	                                push rbx	       624	prdbg.c	FUNCTION_18
0x40035b1	    0x448d04f50000	                        lea r8d, [rsi*8]	        33	stdio2.h	FUNCTION_96	CALL_1
0x40035b9	      0xba28000000	                           mov edx, 0x28	        33	stdio2.h	FUNCTION_96	CALL_1
0x40035be	          0x4889fb	                            mov rbx, rdi	       624	prdbg.c	FUNCTION_18
0x40035c1	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_96	CALL_1
0x40035c6	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_96	CALL_1
0x40035cb	        0x4883ec30	                           sub rsp, 0x30	       624	prdbg.c	FUNCTION_18
0x40035cf	    0x64488b042528	                mov rax, qword fs:[0x28]	       624	prdbg.c	FUNCTION_18
0x40035d8	      0x4889442428	             mov qword [rsp + 0x28], rax	       624	prdbg.c	FUNCTION_18
0x40035dd	            0x31c0	                            xor eax, eax	       624	prdbg.c	FUNCTION_18
0x40035df	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_96	CALL_1
0x40035e2	      0xe800000000	                          call 0x40035e7	        33	stdio2.h	FUNCTION_96	CALL_1
0x40035e7	        0x488d7b10	                   lea rdi, [rbx + 0x10]	        33	stdio2.h	FUNCTION_96	CALL_1
0x40035eb	          0x4889e6	                            mov rsi, rsp	       630	prdbg.c	FUNCTION_18	CALL_1
0x40035ee	      0xe8edf6ffff	              call sym.push_type.isra.30	       630	prdbg.c	FUNCTION_18	CALL_1
0x40035f3	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       631	prdbg.c	FUNCTION_18
0x40035f8	    0x644833142528	                xor rdx, qword fs:[0x28]	       631	prdbg.c	FUNCTION_18
0x4003601	            0x7506	                           jne 0x4003609	       631	prdbg.c	FUNCTION_18
0x4003603	        0x4883c430	                           add rsp, 0x30	       631	prdbg.c	FUNCTION_18
0x4003607	              0x5b	                                 pop rbx	       631	prdbg.c	FUNCTION_18
0x4003608	              0xc3	                                     ret	       631	prdbg.c	FUNCTION_18
0x4003609	      0xe800000000	                          call 0x400360e	       631	prdbg.c	FUNCTION_18
tg_tag	SWITCH,0:WHILE,0:IF,1:FOR,0:ELSE,0:functions,0:CALL,2:DO,0	11
0x4000860	        0x4883c710	                           add rdi, 0x10	      2525	prdbg.c	FUNCTION_73
0x4000864	        0x4883ec08	                              sub rsp, 8	      2525	prdbg.c	FUNCTION_73
0x4000868	      0xe873fdffff	                call sym.pop_type.isra.3	      2529	prdbg.c	FUNCTION_73	CALL_1
0x400086d	          0x4889c7	                            mov rdi, rax	      2529	prdbg.c	FUNCTION_73	CALL_1
0x4000870	            0x31c0	                            xor eax, eax	      2529	prdbg.c	FUNCTION_73	CALL_1
0x4000872	          0x4885ff	                           test rdi, rdi	      2530	prdbg.c	FUNCTION_73	IF_1
0x4000875	            0x740a	                            je 0x4000881	      2530	prdbg.c	FUNCTION_73	IF_1
0x4000877	      0xe800000000	                          call 0x400087c	      2532	prdbg.c	FUNCTION_73	CALL_2
0x400087c	      0xb801000000	                              mov eax, 1	      2534	prdbg.c	FUNCTION_73
0x4000881	        0x4883c408	                              add rsp, 8	      2535	prdbg.c	FUNCTION_73
0x4000885	              0xc3	                                     ret	      2535	prdbg.c	FUNCTION_73
pr_end_block	SWITCH,0:WHILE,0:IF,0:FOR,0:ELSE,0:functions,0:CALL,2:DO,0	38
0x4000430	            0x4154	                                push r12	      1888	prdbg.c	FUNCTION_54
0x4000432	              0x55	                                push rbp	      1888	prdbg.c	FUNCTION_54
0x4000433	          0x4989f4	                            mov r12, rsi	      1888	prdbg.c	FUNCTION_54
0x4000436	              0x53	                                push rbx	      1888	prdbg.c	FUNCTION_54
0x4000437	          0x4889fd	                            mov rbp, rdi	      1888	prdbg.c	FUNCTION_54
0x400043a	        0x4883ec20	                           sub rsp, 0x20	      1888	prdbg.c	FUNCTION_54
0x400043e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1888	prdbg.c	FUNCTION_54
0x4000447	      0x4889442418	             mov qword [rsp + 0x18], rax	      1888	prdbg.c	FUNCTION_54
0x400044c	            0x31c0	                            xor eax, eax	      1888	prdbg.c	FUNCTION_54
0x400044e	        0x836f0802	                  sub dword [rdi + 8], 2	       327	prdbg.c	FUNCTION_2	FOR_1
0x4000452	            0x7422	                            je 0x4000476	       327	prdbg.c	FUNCTION_2	FOR_1
0x4000454	            0x31db	                            xor ebx, ebx	       327	prdbg.c	FUNCTION_2	FOR_1
0x4000456	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       327	prdbg.c	FUNCTION_2	FOR_1
0x4000460	        0x488b7500	                    mov rsi, qword [rbp]	       328	prdbg.c	FUNCTION_2	CALL_1
0x4000464	      0xbf20000000	                           mov edi, 0x20	       328	prdbg.c	FUNCTION_2	CALL_1
0x4000469	          0x83c301	                              add ebx, 1	       327	prdbg.c	FUNCTION_2	FOR_1
0x400046c	      0xe800000000	                          call 0x4000471	       328	prdbg.c	FUNCTION_2	CALL_1
0x4000471	          0x3b5d08	                cmp ebx, dword [rbp + 8]	       327	prdbg.c	FUNCTION_2	FOR_1
0x4000474	            0x72ea	                            jb 0x4000460	       327	prdbg.c	FUNCTION_2	FOR_1
0x4000476	          0x4889e6	                            mov rsi, rsp	       327	prdbg.c	FUNCTION_2	FOR_1
0x4000479	          0x4c89e7	                            mov rdi, r12	       327	prdbg.c	FUNCTION_2	FOR_1
0x400047c	      0xe8effeffff	               call sym.print_vma.part.0	       327	prdbg.c	FUNCTION_2	FOR_1
0x4000481	        0x488b7d00	                    mov rdi, qword [rbp]	        97	stdio2.h	CALL_96
0x4000485	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_96
0x400048a	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_96
0x400048c	          0x4889e1	                            mov rcx, rsp	        97	stdio2.h	CALL_96
0x400048f	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_96
0x4000494	      0xe800000000	                          call 0x4000499	        97	stdio2.h	CALL_96
0x4000499	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1899	prdbg.c	FUNCTION_54
0x400049e	    0x644833142528	                xor rdx, qword fs:[0x28]	      1899	prdbg.c	FUNCTION_54
0x40004a7	      0xb801000000	                              mov eax, 1	      1899	prdbg.c	FUNCTION_54
0x40004ac	            0x7509	                           jne 0x40004b7	      1899	prdbg.c	FUNCTION_54
0x40004ae	        0x4883c420	                           add rsp, 0x20	      1899	prdbg.c	FUNCTION_54
0x40004b2	              0x5b	                                 pop rbx	      1899	prdbg.c	FUNCTION_54
0x40004b3	              0x5d	                                 pop rbp	      1899	prdbg.c	FUNCTION_54
0x40004b4	            0x415c	                                 pop r12	      1899	prdbg.c	FUNCTION_54
0x40004b6	              0xc3	                                     ret	      1899	prdbg.c	FUNCTION_54
0x40004b7	      0xe800000000	                          call 0x40004bc	      1899	prdbg.c	FUNCTION_54
pr_int_type	SWITCH,0:WHILE,0:IF,0:FOR,0:ELSE,0:functions,0:CALL,1:DO,0	27
0x4003610	              0x53	                                push rbx	       582	prdbg.c	FUNCTION_15
0x4003611	    0x448d0cf50000	                        lea r9d, [rsi*8]	        33	stdio2.h	FUNCTION_96	CALL_1
0x4003619	    0x41b800000000	                              mov r8d, 0	       586	prdbg.c	FUNCTION_15
0x400361f	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_96	CALL_1
0x4003624	          0x4889fb	                            mov rbx, rdi	       582	prdbg.c	FUNCTION_15
0x4003627	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_96	CALL_1
0x400362c	        0x4883ec30	                           sub rsp, 0x30	       582	prdbg.c	FUNCTION_15
0x4003630	    0x64488b042528	                mov rax, qword fs:[0x28]	       582	prdbg.c	FUNCTION_15
0x4003639	      0x4889442428	             mov qword [rsp + 0x28], rax	       582	prdbg.c	FUNCTION_15
0x400363e	            0x31c0	                            xor eax, eax	       582	prdbg.c	FUNCTION_15
0x4003640	            0x85d2	                           test edx, edx	       586	prdbg.c	FUNCTION_15
0x4003642	      0xb800000000	                              mov eax, 0	       586	prdbg.c	FUNCTION_15
0x4003647	      0xba28000000	                           mov edx, 0x28	        33	stdio2.h	FUNCTION_96	CALL_1
0x400364c	        0x4c0f45c0	                          cmovne r8, rax	       586	prdbg.c	FUNCTION_15
0x4003650	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_96	CALL_1
0x4003653	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_96	CALL_1
0x4003655	      0xe800000000	                          call 0x400365a	        33	stdio2.h	FUNCTION_96	CALL_1
0x400365a	        0x488d7b10	                   lea rdi, [rbx + 0x10]	        33	stdio2.h	FUNCTION_96	CALL_1
0x400365e	          0x4889e6	                            mov rsi, rsp	       587	prdbg.c	FUNCTION_15	CALL_1
0x4003661	      0xe87af6ffff	              call sym.push_type.isra.30	       587	prdbg.c	FUNCTION_15	CALL_1
0x4003666	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       588	prdbg.c	FUNCTION_15
0x400366b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       588	prdbg.c	FUNCTION_15
0x4003674	            0x7506	                           jne 0x400367c	       588	prdbg.c	FUNCTION_15
0x4003676	        0x4883c430	                           add rsp, 0x30	       588	prdbg.c	FUNCTION_15
0x400367a	              0x5b	                                 pop rbx	       588	prdbg.c	FUNCTION_15
0x400367b	              0xc3	                                     ret	       588	prdbg.c	FUNCTION_15
0x400367c	      0xe800000000	                          call 0x4003681	       588	prdbg.c	FUNCTION_15
pr_tag_type	SWITCH,1:WHILE,0:IF,5:FOR,0:ELSE,1:functions,0:CALL,4:DO,0	89
0x4002d60	            0x4155	                                push r13	      1602	prdbg.c	FUNCTION_43
0x4002d62	            0x4154	                                push r12	      1602	prdbg.c	FUNCTION_43
0x4002d64	              0x55	                                push rbp	      1602	prdbg.c	FUNCTION_43
0x4002d65	              0x53	                                push rbx	      1602	prdbg.c	FUNCTION_43
0x4002d66	        0x4883ec28	                           sub rsp, 0x28	      1602	prdbg.c	FUNCTION_43
0x4002d6a	    0x64488b042528	                mov rax, qword fs:[0x28]	      1602	prdbg.c	FUNCTION_43
0x4002d73	      0x4889442418	             mov qword [rsp + 0x18], rax	      1602	prdbg.c	FUNCTION_43
0x4002d78	            0x31c0	                            xor eax, eax	      1602	prdbg.c	FUNCTION_43
0x4002d7a	          0x8d41f9	                      lea eax, [rcx - 7]	      1607	prdbg.c	FUNCTION_43	SWITCH_1
0x4002d7d	          0x83f804	                              cmp eax, 4	      1607	prdbg.c	FUNCTION_43	SWITCH_1
0x4002d80	     0xf87f2000000	                            ja 0x4002e78	      1607	prdbg.c	FUNCTION_43	SWITCH_1
0x4002d86	          0x4889f5	                            mov rbp, rsi	      1607	prdbg.c	FUNCTION_43	SWITCH_1
0x4002d89	          0x4189d4	                           mov r12d, edx	      1607	prdbg.c	FUNCTION_43	SWITCH_1
0x4002d8c	          0x4189cd	                           mov r13d, ecx	      1607	prdbg.c	FUNCTION_43	SWITCH_1
0x4002d8f	    0xff24c5000000	                       jmp qword [rax*8]	      1607	prdbg.c	FUNCTION_43	SWITCH_1
0x4002d96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1607	prdbg.c	FUNCTION_43	SWITCH_1
0x4002da0	      0xbe00000000	                              mov esi, 0	      1616	prdbg.c	FUNCTION_43	SWITCH_1
0x4002da5	        0x488d5f10	                   lea rbx, [rdi + 0x10]	      1616	prdbg.c	FUNCTION_43	SWITCH_1
0x4002da9	          0x4889df	                            mov rdi, rbx	      1629	prdbg.c	FUNCTION_43	IF_1	CALL_2
0x4002dac	      0xe82fffffff	              call sym.push_type.isra.30	      1629	prdbg.c	FUNCTION_43	IF_1	CALL_2
0x4002db1	            0x85c0	                           test eax, eax	      1629	prdbg.c	FUNCTION_43	IF_1	CALL_2
0x4002db3	            0x744b	                            je 0x4002e00	      1629	prdbg.c	FUNCTION_43	IF_1	CALL_2
0x4002db5	          0x4885ed	                           test rbp, rbp	      1631	prdbg.c	FUNCTION_43	IF_2
0x4002db8	     0xf84c2000000	                            je 0x4002e80	      1631	prdbg.c	FUNCTION_43	IF_2
0x4002dbe	          0x4889ee	                            mov rsi, rbp	      1639	prdbg.c	FUNCTION_43	IF_3	CALL_3
0x4002dc1	          0x4889df	                            mov rdi, rbx	      1639	prdbg.c	FUNCTION_43	IF_3	CALL_3
0x4002dc4	      0xe8a7e0ffff	            call sym.append_type.isra.14	      1639	prdbg.c	FUNCTION_43	IF_3	CALL_3
0x4002dc9	            0x85c0	                           test eax, eax	      1639	prdbg.c	FUNCTION_43	IF_3	CALL_3
0x4002dcb	            0x7433	                            je 0x4002e00	      1639	prdbg.c	FUNCTION_43	IF_3	CALL_3
0x4002dcd	        0x4183fd0b	                           cmp r13d, 0xb	      1641	prdbg.c	FUNCTION_43	IF_4
0x4002dd1	      0xb801000000	                              mov eax, 1	      1648	prdbg.c	FUNCTION_43
0x4002dd6	            0x7568	                           jne 0x4002e40	      1641	prdbg.c	FUNCTION_43	IF_4
0x4002dd8	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1649	prdbg.c	FUNCTION_43
0x4002ddd	    0x644833142528	                xor rdx, qword fs:[0x28]	      1649	prdbg.c	FUNCTION_43
0x4002de6	     0xf85cd000000	                           jne 0x4002eb9	      1649	prdbg.c	FUNCTION_43
0x4002dec	        0x4883c428	                           add rsp, 0x28	      1649	prdbg.c	FUNCTION_43
0x4002df0	              0x5b	                                 pop rbx	      1649	prdbg.c	FUNCTION_43
0x4002df1	              0x5d	                                 pop rbp	      1649	prdbg.c	FUNCTION_43
0x4002df2	            0x415c	                                 pop r12	      1649	prdbg.c	FUNCTION_43
0x4002df4	            0x415d	                                 pop r13	      1649	prdbg.c	FUNCTION_43
0x4002df6	              0xc3	                                     ret	      1649	prdbg.c	FUNCTION_43
0x4002df7	    0x660f1f840000	                    nop word [rax + rax]	      1649	prdbg.c	FUNCTION_43
0x4002e00	            0x31c0	                            xor eax, eax	      1630	prdbg.c	FUNCTION_43	IF_1
0x4002e02	            0xebd4	                           jmp 0x4002dd8	      1630	prdbg.c	FUNCTION_43	IF_1
0x4002e04	         0xf1f4000	                         nop dword [rax]	      1630	prdbg.c	FUNCTION_43	IF_1
0x4002e08	      0xbe00000000	                              mov esi, 0	      1622	prdbg.c	FUNCTION_43	SWITCH_1
0x4002e0d	            0xeb96	                           jmp 0x4002da5	      1623	prdbg.c	FUNCTION_43	SWITCH_1
0x4002e0f	              0x90	                                     nop	      1623	prdbg.c	FUNCTION_43	SWITCH_1
0x4002e10	      0xbe00000000	                              mov esi, 0	      1610	prdbg.c	FUNCTION_43	SWITCH_1
0x4002e15	            0xeb8e	                           jmp 0x4002da5	      1610	prdbg.c	FUNCTION_43	SWITCH_1
0x4002e17	    0x660f1f840000	                    nop word [rax + rax]	      1610	prdbg.c	FUNCTION_43	SWITCH_1
0x4002e20	      0xbe00000000	                              mov esi, 0	      1613	prdbg.c	FUNCTION_43	SWITCH_1
0x4002e25	      0xe97bffffff	                           jmp 0x4002da5	      1613	prdbg.c	FUNCTION_43	SWITCH_1
0x4002e2a	    0x660f1f440000	                    nop word [rax + rax]	      1613	prdbg.c	FUNCTION_43	SWITCH_1
0x4002e30	      0xbe00000000	                              mov esi, 0	      1619	prdbg.c	FUNCTION_43	SWITCH_1
0x4002e35	      0xe96bffffff	                           jmp 0x4002da5	      1620	prdbg.c	FUNCTION_43	SWITCH_1
0x4002e3a	    0x660f1f440000	                    nop word [rax + rax]	      1620	prdbg.c	FUNCTION_43	SWITCH_1
0x4002e40	          0x4589e0	                           mov r8d, r12d	        33	stdio2.h	FUNCTION_96	CALL_1
0x4002e43	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_96	CALL_1
0x4002e48	      0xba16000000	                           mov edx, 0x16	        33	stdio2.h	FUNCTION_96	CALL_1
0x4002e4d	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_96	CALL_1
0x4002e52	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_96	CALL_1
0x4002e55	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_96	CALL_1
0x4002e57	      0xe800000000	                          call 0x4002e5c	        33	stdio2.h	FUNCTION_96	CALL_1
0x4002e5c	          0x4889e6	                            mov rsi, rsp	      1644	prdbg.c	FUNCTION_43	IF_4	IF_5	CALL_4
0x4002e5f	          0x4889df	                            mov rdi, rbx	      1644	prdbg.c	FUNCTION_43	IF_4	IF_5	CALL_4
0x4002e62	      0xe809e0ffff	            call sym.append_type.isra.14	      1644	prdbg.c	FUNCTION_43	IF_4	IF_5	CALL_4
0x4002e67	            0x85c0	                           test eax, eax	      1648	prdbg.c	FUNCTION_43
0x4002e69	           0xf95c0	                                setne al	      1648	prdbg.c	FUNCTION_43
0x4002e6c	           0xfb6c0	                           movzx eax, al	      1648	prdbg.c	FUNCTION_43
0x4002e6f	      0xe964ffffff	                           jmp 0x4002dd8	      1648	prdbg.c	FUNCTION_43
0x4002e74	         0xf1f4000	                         nop dword [rax]	      1648	prdbg.c	FUNCTION_43
0x4002e78	      0xe800000000	                          call 0x4002e7d	      1625	prdbg.c	FUNCTION_43	SWITCH_1	CALL_1
0x4002e7d	           0xf1f00	                         nop dword [rax]	      1625	prdbg.c	FUNCTION_43	SWITCH_1	CALL_1
0x4002e80	          0x4589e0	                           mov r8d, r12d	        33	stdio2.h	FUNCTION_96	CALL_1
0x4002e83	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_96	CALL_1
0x4002e88	      0xba16000000	                           mov edx, 0x16	        33	stdio2.h	FUNCTION_96	CALL_1
0x4002e8d	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_96	CALL_1
0x4002e92	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_96	CALL_1
0x4002e95	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_96	CALL_1
0x4002e97	      0xe800000000	                          call 0x4002e9c	        33	stdio2.h	FUNCTION_96	CALL_1
0x4002e9c	          0x4889e6	                            mov rsi, rsp	      1639	prdbg.c	FUNCTION_43	IF_3	CALL_3
0x4002e9f	          0x4889df	                            mov rdi, rbx	      1639	prdbg.c	FUNCTION_43	IF_3	CALL_3
0x4002ea2	      0xe8c9dfffff	            call sym.append_type.isra.14	      1639	prdbg.c	FUNCTION_43	IF_3	CALL_3
0x4002ea7	            0x85c0	                           test eax, eax	      1639	prdbg.c	FUNCTION_43	IF_3	CALL_3
0x4002ea9	     0xf8451ffffff	                            je 0x4002e00	      1639	prdbg.c	FUNCTION_43	IF_3	CALL_3
0x4002eaf	      0xb801000000	                              mov eax, 1	      1648	prdbg.c	FUNCTION_43
0x4002eb4	      0xe91fffffff	                           jmp 0x4002dd8	      1648	prdbg.c	FUNCTION_43
0x4002eb9	      0xe800000000	                          call 0x4002ebe	      1649	prdbg.c	FUNCTION_43
pr_int_constant	SWITCH,0:WHILE,0:IF,0:FOR,0:ELSE,0:functions,0:CALL,2:DO,0	47
0x4000100	            0x4155	                                push r13	      1699	prdbg.c	FUNCTION_46
0x4000102	            0x4154	                                push r12	      1699	prdbg.c	FUNCTION_46
0x4000104	          0x4989d5	                            mov r13, rdx	      1699	prdbg.c	FUNCTION_46
0x4000107	              0x55	                                push rbp	      1699	prdbg.c	FUNCTION_46
0x4000108	              0x53	                                push rbx	      1699	prdbg.c	FUNCTION_46
0x4000109	            0x31db	                            xor ebx, ebx	      1699	prdbg.c	FUNCTION_46
0x400010b	          0x4889fd	                            mov rbp, rdi	      1699	prdbg.c	FUNCTION_46
0x400010e	          0x4989f4	                            mov r12, rsi	      1699	prdbg.c	FUNCTION_46
0x4000111	        0x4883ec28	                           sub rsp, 0x28	      1699	prdbg.c	FUNCTION_46
0x4000115	    0x64488b042528	                mov rax, qword fs:[0x28]	      1699	prdbg.c	FUNCTION_46
0x400011e	      0x4889442418	             mov qword [rsp + 0x18], rax	      1699	prdbg.c	FUNCTION_46
0x4000123	            0x31c0	                            xor eax, eax	      1699	prdbg.c	FUNCTION_46
0x4000125	          0x8b4708	                mov eax, dword [rdi + 8]	       327	prdbg.c	FUNCTION_2	FOR_1
0x4000128	            0x85c0	                           test eax, eax	       327	prdbg.c	FUNCTION_2	FOR_1
0x400012a	            0x741a	                            je 0x4000146	       327	prdbg.c	FUNCTION_2	FOR_1
0x400012c	         0xf1f4000	                         nop dword [rax]	       327	prdbg.c	FUNCTION_2	FOR_1
0x4000130	        0x488b7500	                    mov rsi, qword [rbp]	       328	prdbg.c	FUNCTION_2	CALL_1
0x4000134	      0xbf20000000	                           mov edi, 0x20	       328	prdbg.c	FUNCTION_2	CALL_1
0x4000139	          0x83c301	                              add ebx, 1	       327	prdbg.c	FUNCTION_2	FOR_1
0x400013c	      0xe800000000	                          call 0x4000141	       328	prdbg.c	FUNCTION_2	CALL_1
0x4000141	          0x3b5d08	                cmp ebx, dword [rbp + 8]	       327	prdbg.c	FUNCTION_2	FOR_1
0x4000144	            0x72ea	                            jb 0x4000130	       327	prdbg.c	FUNCTION_2	FOR_1
0x4000146	          0x4d89e8	                             mov r8, r13	        33	stdio2.h	FUNCTION_96	CALL_1
0x4000149	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_96	CALL_1
0x400014e	      0xba16000000	                           mov edx, 0x16	        33	stdio2.h	FUNCTION_96	CALL_1
0x4000153	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_96	CALL_1
0x4000158	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_96	CALL_1
0x400015b	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_96	CALL_1
0x400015d	      0xe800000000	                          call 0x4000162	        33	stdio2.h	FUNCTION_96	CALL_1
0x4000162	        0x488b7d00	                    mov rdi, qword [rbp]	        97	stdio2.h	CALL_96
0x4000166	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_96
0x4000169	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_96
0x400016b	          0x4989e0	                             mov r8, rsp	        97	stdio2.h	CALL_96
0x400016e	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_96
0x4000173	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_96
0x4000178	      0xe800000000	                          call 0x400017d	        97	stdio2.h	CALL_96
0x400017d	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1707	prdbg.c	FUNCTION_46
0x4000182	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1707	prdbg.c	FUNCTION_46
0x400018b	      0xb801000000	                              mov eax, 1	      1707	prdbg.c	FUNCTION_46
0x4000190	            0x750b	                           jne 0x400019d	      1707	prdbg.c	FUNCTION_46
0x4000192	        0x4883c428	                           add rsp, 0x28	      1707	prdbg.c	FUNCTION_46
0x4000196	              0x5b	                                 pop rbx	      1707	prdbg.c	FUNCTION_46
0x4000197	              0x5d	                                 pop rbp	      1707	prdbg.c	FUNCTION_46
0x4000198	            0x415c	                                 pop r12	      1707	prdbg.c	FUNCTION_46
0x400019a	            0x415d	                                 pop r13	      1707	prdbg.c	FUNCTION_46
0x400019c	              0xc3	                                     ret	      1707	prdbg.c	FUNCTION_46
0x400019d	      0xe800000000	                          call 0x40001a2	      1707	prdbg.c	FUNCTION_46
print_debugging_info	SWITCH,0:WHILE,0:IF,1:FOR,0:ELSE,0:functions,0:CALL,6:DO,0	56
0x40043f0	              0x55	                                push rbp	       296	prdbg.c	FUNCTION_1
0x40043f1	              0x53	                                push rbx	       296	prdbg.c	FUNCTION_1
0x40043f2	          0x4889f5	                            mov rbp, rsi	       296	prdbg.c	FUNCTION_1
0x40043f5	        0x4883ec58	                           sub rsp, 0x58	       296	prdbg.c	FUNCTION_1
0x40043f9	    0x64488b042528	                mov rax, qword fs:[0x28]	       296	prdbg.c	FUNCTION_1
0x4004402	      0x4889442448	             mov qword [rsp + 0x48], rax	       296	prdbg.c	FUNCTION_1
0x4004407	            0x31c0	                            xor eax, eax	       296	prdbg.c	FUNCTION_1
0x4004409	          0x4585c9	                           test r9d, r9d	       308	prdbg.c	FUNCTION_1	IF_1
0x400440c	        0x48893c24	                    mov qword [rsp], rdi	       299	prdbg.c	FUNCTION_1
0x4004410	    0xc74424080000	                  mov dword [rsp + 8], 0	       300	prdbg.c	FUNCTION_1
0x4004418	    0x48c744241000	               mov qword [rsp + 0x10], 0	       301	prdbg.c	FUNCTION_1
0x4004421	    0xc74424180000	               mov dword [rsp + 0x18], 0	       302	prdbg.c	FUNCTION_1
0x4004429	    0x48c744242000	               mov qword [rsp + 0x20], 0	       303	prdbg.c	FUNCTION_1
0x4004432	      0x4889542428	             mov qword [rsp + 0x28], rdx	       304	prdbg.c	FUNCTION_1
0x4004437	      0x48894c2430	             mov qword [rsp + 0x30], rcx	       305	prdbg.c	FUNCTION_1
0x400443c	      0x4c89442438	              mov qword [rsp + 0x38], r8	       306	prdbg.c	FUNCTION_1
0x4004441	            0x752d	                           jne 0x4004470	       308	prdbg.c	FUNCTION_1	IF_1
0x4004443	          0x4889e2	                            mov rdx, rsp	       317	prdbg.c	FUNCTION_1	CALL_6
0x4004446	      0xbe00000000	                              mov esi, 0	       317	prdbg.c	FUNCTION_1	CALL_6
0x400444b	          0x4889ef	                            mov rdi, rbp	       317	prdbg.c	FUNCTION_1	CALL_6
0x400444e	      0xe800000000	                          call 0x4004453	       317	prdbg.c	FUNCTION_1	CALL_6
0x4004453	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	       318	prdbg.c	FUNCTION_1
0x4004458	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       318	prdbg.c	FUNCTION_1
0x4004461	     0xf857d000000	                           jne 0x40044e4	       318	prdbg.c	FUNCTION_1
0x4004467	        0x4883c458	                           add rsp, 0x58	       318	prdbg.c	FUNCTION_1
0x400446b	              0x5b	                                 pop rbx	       318	prdbg.c	FUNCTION_1
0x400446c	              0x5d	                                 pop rbp	       318	prdbg.c	FUNCTION_1
0x400446d	              0xc3	                                     ret	       318	prdbg.c	FUNCTION_1
0x400446e	            0x6690	                                     nop	       318	prdbg.c	FUNCTION_1
0x4004470	          0x4889fb	                            mov rbx, rdi	       318	prdbg.c	FUNCTION_1
0x4004473	          0x4889f9	                            mov rcx, rdi	       310	prdbg.c	FUNCTION_1	IF_1	CALL_1
0x4004476	      0xba26000000	                           mov edx, 0x26	       310	prdbg.c	FUNCTION_1	IF_1	CALL_1
0x400447b	      0xbe01000000	                              mov esi, 1	       310	prdbg.c	FUNCTION_1	IF_1	CALL_1
0x4004480	      0xbf00000000	                              mov edi, 0	       310	prdbg.c	FUNCTION_1	IF_1	CALL_1
0x4004485	      0xe800000000	                          call 0x400448a	       310	prdbg.c	FUNCTION_1	IF_1	CALL_1
0x400448a	          0x4889d9	                            mov rcx, rbx	       311	prdbg.c	FUNCTION_1	IF_1	CALL_2
0x400448d	      0xba2b000000	                           mov edx, 0x2b	       311	prdbg.c	FUNCTION_1	IF_1	CALL_2
0x4004492	      0xbe01000000	                              mov esi, 1	       311	prdbg.c	FUNCTION_1	IF_1	CALL_2
0x4004497	      0xbf00000000	                              mov edi, 0	       311	prdbg.c	FUNCTION_1	IF_1	CALL_2
0x400449c	      0xe800000000	                          call 0x40044a1	       311	prdbg.c	FUNCTION_1	IF_1	CALL_2
0x40044a1	          0x4889d9	                            mov rcx, rbx	       312	prdbg.c	FUNCTION_1	IF_1	CALL_3
0x40044a4	      0xba48000000	                           mov edx, 0x48	       312	prdbg.c	FUNCTION_1	IF_1	CALL_3
0x40044a9	      0xbe01000000	                              mov esi, 1	       312	prdbg.c	FUNCTION_1	IF_1	CALL_3
0x40044ae	      0xbf00000000	                              mov edi, 0	       312	prdbg.c	FUNCTION_1	IF_1	CALL_3
0x40044b3	      0xe800000000	                          call 0x40044b8	       312	prdbg.c	FUNCTION_1	IF_1	CALL_3
0x40044b8	          0x4889d9	                            mov rcx, rbx	       313	prdbg.c	FUNCTION_1	IF_1	CALL_4
0x40044bb	      0xba2f000000	                           mov edx, 0x2f	       313	prdbg.c	FUNCTION_1	IF_1	CALL_4
0x40044c0	      0xbe01000000	                              mov esi, 1	       313	prdbg.c	FUNCTION_1	IF_1	CALL_4
0x40044c5	      0xbf00000000	                              mov edi, 0	       313	prdbg.c	FUNCTION_1	IF_1	CALL_4
0x40044ca	      0xe800000000	                          call 0x40044cf	       313	prdbg.c	FUNCTION_1	IF_1	CALL_4
0x40044cf	          0x4889e2	                            mov rdx, rsp	       317	prdbg.c	FUNCTION_1	CALL_6
0x40044d2	      0xbe00000000	                              mov esi, 0	       317	prdbg.c	FUNCTION_1	CALL_6
0x40044d7	          0x4889ef	                            mov rdi, rbp	       317	prdbg.c	FUNCTION_1	CALL_6
0x40044da	      0xe800000000	                          call 0x40044df	       317	prdbg.c	FUNCTION_1	CALL_6
0x40044df	      0xe96fffffff	                           jmp 0x4004453	       317	prdbg.c	FUNCTION_1	CALL_6
0x40044e4	      0xe800000000	                  call section_end..data	       318	prdbg.c	FUNCTION_1
tg_struct_field	SWITCH,0:WHILE,0:IF,3:FOR,0:ELSE,0:functions,0:CALL,3:DO,0	53
0x4000be0	            0x4156	                                push r14	      2076	prdbg.c	FUNCTION_63
0x4000be2	            0x4155	                                push r13	      2076	prdbg.c	FUNCTION_63
0x4000be4	          0x4989f6	                            mov r14, rsi	      2076	prdbg.c	FUNCTION_63
0x4000be7	            0x4154	                                push r12	      2076	prdbg.c	FUNCTION_63
0x4000be9	              0x55	                                push rbp	      2076	prdbg.c	FUNCTION_63
0x4000bea	          0x4589c5	                           mov r13d, r8d	      2076	prdbg.c	FUNCTION_63
0x4000bed	              0x53	                                push rbx	      2076	prdbg.c	FUNCTION_63
0x4000bee	          0x4889fb	                            mov rbx, rdi	      2076	prdbg.c	FUNCTION_63
0x4000bf1	        0x4883c710	                           add rdi, 0x10	      2076	prdbg.c	FUNCTION_63
0x4000bf5	      0xe8e6f9ffff	                call sym.pop_type.isra.3	      2080	prdbg.c	FUNCTION_63	CALL_1
0x4000bfa	          0x4885c0	                           test rax, rax	      2081	prdbg.c	FUNCTION_63	IF_1
0x4000bfd	            0x7469	                            je 0x4000c68	      2081	prdbg.c	FUNCTION_63	IF_1
0x4000bff	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      2084	prdbg.c	FUNCTION_63	IF_2	CALL_2
0x4000c03	          0x4489ee	                           mov esi, r13d	      2084	prdbg.c	FUNCTION_63	IF_2	CALL_2
0x4000c06	          0x4889c5	                            mov rbp, rax	      2084	prdbg.c	FUNCTION_63	IF_2	CALL_2
0x4000c09	      0xe872ffffff	       call sym.tg_fix_visibility.isra.8	      2084	prdbg.c	FUNCTION_63	IF_2	CALL_2
0x4000c0e	            0x85c0	                           test eax, eax	      2084	prdbg.c	FUNCTION_63	IF_2	CALL_2
0x4000c10	            0x7456	                            je 0x4000c68	      2084	prdbg.c	FUNCTION_63	IF_2	CALL_2
0x4000c12	        0x41803e00	                       cmp byte [r14], 0	      2088	prdbg.c	FUNCTION_63	IF_3
0x4000c16	    0x41bc01000000	                             mov r12d, 1	      2089	prdbg.c	FUNCTION_63	IF_3
0x4000c1c	            0x744d	                            je 0x4000c6b	      2088	prdbg.c	FUNCTION_63	IF_3
0x4000c1e	          0x4489ef	                           mov edi, r13d	      2091	prdbg.c	FUNCTION_63
0x4000c21	      0xe8aaf6ffff	                call sym.visibility_name	      2091	prdbg.c	FUNCTION_63
0x4000c26	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      2092	prdbg.c	FUNCTION_63
0x4000c2a	        0x4883ec08	                              sub rsp, 8	        97	stdio2.h	CALL_96
0x4000c2e	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	        97	stdio2.h	CALL_96
0x4000c32	          0x488b3b	                    mov rdi, qword [rbx]	        97	stdio2.h	CALL_96
0x4000c35	              0x50	                                push rax	        97	stdio2.h	CALL_96
0x4000c36	          0x4989e9	                             mov r9, rbp	        97	stdio2.h	CALL_96
0x4000c39	          0x4c89f1	                            mov rcx, r14	        97	stdio2.h	CALL_96
0x4000c3c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_96
0x4000c41	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_96
0x4000c43	          0xff7208	                    push qword [rdx + 8]	        97	stdio2.h	CALL_96
0x4000c46	          0xff7220	                 push qword [rdx + 0x20]	        97	stdio2.h	CALL_96
0x4000c49	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_96
0x4000c4e	      0xe800000000	                          call 0x4000c53	        97	stdio2.h	CALL_96
0x4000c53	        0x4883c420	                           add rsp, 0x20	      2095	prdbg.c	FUNCTION_63
0x4000c57	          0x4489e0	                           mov eax, r12d	      2096	prdbg.c	FUNCTION_63
0x4000c5a	              0x5b	                                 pop rbx	      2096	prdbg.c	FUNCTION_63
0x4000c5b	              0x5d	                                 pop rbp	      2096	prdbg.c	FUNCTION_63
0x4000c5c	            0x415c	                                 pop r12	      2096	prdbg.c	FUNCTION_63
0x4000c5e	            0x415d	                                 pop r13	      2096	prdbg.c	FUNCTION_63
0x4000c60	            0x415e	                                 pop r14	      2096	prdbg.c	FUNCTION_63
0x4000c62	              0xc3	                                     ret	      2096	prdbg.c	FUNCTION_63
0x4000c63	       0xf1f440000	                   nop dword [rax + rax]	      2096	prdbg.c	FUNCTION_63
0x4000c68	          0x4531e4	                          xor r12d, r12d	      2082	prdbg.c	FUNCTION_63	IF_1
0x4000c6b	              0x5b	                                 pop rbx	      2096	prdbg.c	FUNCTION_63
0x4000c6c	          0x4489e0	                           mov eax, r12d	      2096	prdbg.c	FUNCTION_63
0x4000c6f	              0x5d	                                 pop rbp	      2096	prdbg.c	FUNCTION_63
0x4000c70	            0x415c	                                 pop r12	      2096	prdbg.c	FUNCTION_63
0x4000c72	            0x415d	                                 pop r13	      2096	prdbg.c	FUNCTION_63
0x4000c74	            0x415e	                                 pop r14	      2096	prdbg.c	FUNCTION_63
0x4000c76	              0xc3	                                     ret	      2096	prdbg.c	FUNCTION_63
pr_typed_constant	SWITCH,0:WHILE,0:IF,1:FOR,0:ELSE,0:functions,0:CALL,4:DO,0	60
0x4000620	            0x4156	                                push r14	      1725	prdbg.c	FUNCTION_48
0x4000622	            0x4155	                                push r13	      1725	prdbg.c	FUNCTION_48
0x4000624	          0x4989d6	                            mov r14, rdx	      1725	prdbg.c	FUNCTION_48
0x4000627	            0x4154	                                push r12	      1725	prdbg.c	FUNCTION_48
0x4000629	              0x55	                                push rbp	      1725	prdbg.c	FUNCTION_48
0x400062a	          0x4889fd	                            mov rbp, rdi	      1725	prdbg.c	FUNCTION_48
0x400062d	              0x53	                                push rbx	      1725	prdbg.c	FUNCTION_48
0x400062e	        0x4883c710	                           add rdi, 0x10	      1725	prdbg.c	FUNCTION_48
0x4000632	          0x4989f5	                            mov r13, rsi	      1725	prdbg.c	FUNCTION_48
0x4000635	        0x4883ec20	                           sub rsp, 0x20	      1725	prdbg.c	FUNCTION_48
0x4000639	    0x64488b042528	                mov rax, qword fs:[0x28]	      1725	prdbg.c	FUNCTION_48
0x4000642	      0x4889442418	             mov qword [rsp + 0x18], rax	      1725	prdbg.c	FUNCTION_48
0x4000647	            0x31c0	                            xor eax, eax	      1725	prdbg.c	FUNCTION_48
0x4000649	      0xe892ffffff	                call sym.pop_type.isra.3	      1730	prdbg.c	FUNCTION_48	CALL_1
0x400064e	          0x4885c0	                           test rax, rax	      1731	prdbg.c	FUNCTION_48	IF_1
0x4000651	     0xf8491000000	                            je 0x40006e8	      1731	prdbg.c	FUNCTION_48	IF_1
0x4000657	          0x4989c4	                            mov r12, rax	      1731	prdbg.c	FUNCTION_48	IF_1
0x400065a	          0x8b4508	                mov eax, dword [rbp + 8]	       327	prdbg.c	FUNCTION_2	FOR_1
0x400065d	            0x31db	                            xor ebx, ebx	       327	prdbg.c	FUNCTION_2	FOR_1
0x400065f	            0x85c0	                           test eax, eax	       327	prdbg.c	FUNCTION_2	FOR_1
0x4000661	            0x741b	                            je 0x400067e	       327	prdbg.c	FUNCTION_2	FOR_1
0x4000663	       0xf1f440000	                   nop dword [rax + rax]	       327	prdbg.c	FUNCTION_2	FOR_1
0x4000668	        0x488b7500	                    mov rsi, qword [rbp]	       328	prdbg.c	FUNCTION_2	CALL_1
0x400066c	      0xbf20000000	                           mov edi, 0x20	       328	prdbg.c	FUNCTION_2	CALL_1
0x4000671	          0x83c301	                              add ebx, 1	       327	prdbg.c	FUNCTION_2	FOR_1
0x4000674	      0xe800000000	                          call 0x4000679	       328	prdbg.c	FUNCTION_2	CALL_1
0x4000679	          0x3b5d08	                cmp ebx, dword [rbp + 8]	       327	prdbg.c	FUNCTION_2	FOR_1
0x400067c	            0x72ea	                            jb 0x4000668	       327	prdbg.c	FUNCTION_2	FOR_1
0x400067e	          0x4d89f0	                             mov r8, r14	        33	stdio2.h	FUNCTION_96	CALL_1
0x4000681	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_96	CALL_1
0x4000686	      0xba16000000	                           mov edx, 0x16	        33	stdio2.h	FUNCTION_96	CALL_1
0x400068b	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_96	CALL_1
0x4000690	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_96	CALL_1
0x4000693	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_96	CALL_1
0x4000695	      0xe800000000	                          call 0x400069a	        33	stdio2.h	FUNCTION_96	CALL_1
0x400069a	        0x488b7d00	                    mov rdi, qword [rbp]	        97	stdio2.h	CALL_96
0x400069e	          0x4989e1	                             mov r9, rsp	        97	stdio2.h	CALL_96
0x40006a1	          0x4d89e8	                             mov r8, r13	        97	stdio2.h	CALL_96
0x40006a4	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_96
0x40006a7	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_96
0x40006ac	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_96
0x40006b1	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_96
0x40006b3	      0xe800000000	                          call 0x40006b8	        97	stdio2.h	CALL_96
0x40006b8	          0x4c89e7	                            mov rdi, r12	      1738	prdbg.c	FUNCTION_48	CALL_4
0x40006bb	      0xe800000000	                          call 0x40006c0	      1738	prdbg.c	FUNCTION_48	CALL_4
0x40006c0	      0xb801000000	                              mov eax, 1	      1740	prdbg.c	FUNCTION_48
0x40006c5	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1741	prdbg.c	FUNCTION_48
0x40006ca	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1741	prdbg.c	FUNCTION_48
0x40006d3	            0x7517	                           jne 0x40006ec	      1741	prdbg.c	FUNCTION_48
0x40006d5	        0x4883c420	                           add rsp, 0x20	      1741	prdbg.c	FUNCTION_48
0x40006d9	              0x5b	                                 pop rbx	      1741	prdbg.c	FUNCTION_48
0x40006da	              0x5d	                                 pop rbp	      1741	prdbg.c	FUNCTION_48
0x40006db	            0x415c	                                 pop r12	      1741	prdbg.c	FUNCTION_48
0x40006dd	            0x415d	                                 pop r13	      1741	prdbg.c	FUNCTION_48
0x40006df	            0x415e	                                 pop r14	      1741	prdbg.c	FUNCTION_48
0x40006e1	              0xc3	                                     ret	      1741	prdbg.c	FUNCTION_48
0x40006e2	    0x660f1f440000	                    nop word [rax + rax]	      1741	prdbg.c	FUNCTION_48
0x40006e8	            0x31c0	                            xor eax, eax	      1732	prdbg.c	FUNCTION_48	IF_1
0x40006ea	            0xebd9	                           jmp 0x40006c5	      1732	prdbg.c	FUNCTION_48	IF_1
0x40006ec	      0xe800000000	                          call 0x40006f1	      1741	prdbg.c	FUNCTION_48
visibility_name	SWITCH,1:WHILE,0:IF,0:FOR,0:ELSE,0:functions,0:CALL,1:DO,0	21
0x40002d0	          0x83ff01	                              cmp edi, 1	      2819	prdbg.c	FUNCTION_83	SWITCH_1
0x40002d3	            0x744b	                            je 0x4000320	      2819	prdbg.c	FUNCTION_83	SWITCH_1
0x40002d5	            0x7239	                            jb 0x4000310	      2819	prdbg.c	FUNCTION_83	SWITCH_1
0x40002d7	          0x83ff02	                              cmp edi, 2	      2819	prdbg.c	FUNCTION_83	SWITCH_1
0x40002da	            0x7414	                            je 0x40002f0	      2819	prdbg.c	FUNCTION_83	SWITCH_1
0x40002dc	          0x83ff03	                              cmp edi, 3	      2819	prdbg.c	FUNCTION_83	SWITCH_1
0x40002df	            0x741f	                            je 0x4000300	      2819	prdbg.c	FUNCTION_83	SWITCH_1
0x40002e1	        0x4883ec08	                              sub rsp, 8	      2816	prdbg.c	FUNCTION_83
0x40002e5	      0xe800000000	                          call 0x40002ea	      2834	prdbg.c	FUNCTION_83	SWITCH_1	CALL_1
0x40002ea	    0x660f1f440000	                    nop word [rax + rax]	      2834	prdbg.c	FUNCTION_83	SWITCH_1	CALL_1
0x40002f0	      0xb800000000	                              mov eax, 0	      2825	prdbg.c	FUNCTION_83	SWITCH_1
0x40002f5	              0xc3	                                     ret	      2825	prdbg.c	FUNCTION_83	SWITCH_1
0x40002f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2825	prdbg.c	FUNCTION_83	SWITCH_1
0x4000300	      0xb800000000	                              mov eax, 0	      2831	prdbg.c	FUNCTION_83	SWITCH_1
0x4000305	              0xc3	                                     ret	      2832	prdbg.c	FUNCTION_83	SWITCH_1
0x4000306	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2832	prdbg.c	FUNCTION_83	SWITCH_1
0x4000310	      0xb800000000	                              mov eax, 0	      2822	prdbg.c	FUNCTION_83	SWITCH_1
0x4000315	              0xc3	                                     ret	      2822	prdbg.c	FUNCTION_83	SWITCH_1
0x4000316	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2822	prdbg.c	FUNCTION_83	SWITCH_1
0x4000320	      0xb800000000	                              mov eax, 0	      2828	prdbg.c	FUNCTION_83	SWITCH_1
0x4000325	              0xc3	                                     ret	      2838	prdbg.c	FUNCTION_83
tg_start_class_type	SWITCH,0:WHILE,0:IF,10:FOR,0:ELSE,2:functions,0:CALL,6:DO,0	100
0x40037b0	            0x4156	                                push r14	      2114	prdbg.c	FUNCTION_65
0x40037b2	            0x4155	                                push r13	      2114	prdbg.c	FUNCTION_65
0x40037b4	          0x4589ce	                           mov r14d, r9d	      2114	prdbg.c	FUNCTION_65
0x40037b7	            0x4154	                                push r12	      2114	prdbg.c	FUNCTION_65
0x40037b9	              0x55	                                push rbp	      2114	prdbg.c	FUNCTION_65
0x40037ba	          0x4189cc	                           mov r12d, ecx	      2114	prdbg.c	FUNCTION_65
0x40037bd	              0x53	                                push rbx	      2114	prdbg.c	FUNCTION_65
0x40037be	          0x4889fb	                            mov rbx, rdi	      2114	prdbg.c	FUNCTION_65
0x40037c1	        0x4883ec30	                           sub rsp, 0x30	      2114	prdbg.c	FUNCTION_65
0x40037c5	        0x83470802	                  add dword [rdi + 8], 2	      2119	prdbg.c	FUNCTION_65
0x40037c9	    0x64488b042528	                mov rax, qword fs:[0x28]	      2114	prdbg.c	FUNCTION_65
0x40037d2	      0x4889442428	             mov qword [rsp + 0x28], rax	      2114	prdbg.c	FUNCTION_65
0x40037d7	            0x31c0	                            xor eax, eax	      2114	prdbg.c	FUNCTION_65
0x40037d9	          0x4585c9	                           test r9d, r9d	      2121	prdbg.c	FUNCTION_65	IF_1
0x40037dc	            0x740c	                            je 0x40037ea	      2121	prdbg.c	FUNCTION_65	IF_1
0x40037de	        0x8b4c2460	            mov ecx, dword [rsp + 0x60] 	      2121	prdbg.c	FUNCTION_65	IF_1
0x40037e2	            0x85c9	                           test ecx, ecx	      2121	prdbg.c	FUNCTION_65	IF_1
0x40037e4	     0xf84be000000	                            je 0x40038a8	      2121	prdbg.c	FUNCTION_65	IF_1
0x40037ea	        0x488d6b10	                   lea rbp, [rbx + 0x10]	      2121	prdbg.c	FUNCTION_65	IF_1
0x40037ee	          0x4531ed	                          xor r13d, r13d	      2116	prdbg.c	FUNCTION_65
0x40037f1	          0x4885f6	                           test rsi, rsi	      2128	prdbg.c	FUNCTION_65	IF_3
0x40037f4	     0xf84de000000	                            je 0x40038d8	      2128	prdbg.c	FUNCTION_65	IF_3
0x40037fa	          0x4889ef	                            mov rdi, rbp	      2138	prdbg.c	FUNCTION_65	IF_4	CALL_2
0x40037fd	      0xe8def4ffff	              call sym.push_type.isra.30	      2138	prdbg.c	FUNCTION_65	IF_4	CALL_2
0x4003802	            0x85c0	                           test eax, eax	      2138	prdbg.c	FUNCTION_65	IF_4	CALL_2
0x4003804	            0x747a	                            je 0x4003880	      2138	prdbg.c	FUNCTION_65	IF_4	CALL_2
0x4003806	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2141	prdbg.c	FUNCTION_65
0x400380a	          0x4585e4	                         test r12d, r12d	      2141	prdbg.c	FUNCTION_65
0x400380d	      0xb900000000	                              mov ecx, 0	      2141	prdbg.c	FUNCTION_65
0x4003812	      0xba00000000	                              mov edx, 0	      2141	prdbg.c	FUNCTION_65
0x4003817	        0x480f45d1	                         cmovne rdx, rcx	      2141	prdbg.c	FUNCTION_65
0x400381b	          0x4585f6	                         test r14d, r14d	      2147	prdbg.c	FUNCTION_65	IF_5	IF_6
0x400381e	        0x48895020	             mov qword [rax + 0x20], rdx	      2141	prdbg.c	FUNCTION_65
0x4003822	    0x48c740280000	               mov qword [rax + 0x28], 0	      2142	prdbg.c	FUNCTION_65
0x400382a	    0xc74030000000	               mov dword [rax + 0x30], 0	      2143	prdbg.c	FUNCTION_65
0x4003831	            0x7515	                           jne 0x4003848	      2147	prdbg.c	FUNCTION_65	IF_5	IF_6
0x4003833	    0xc74010020000	               mov dword [rax + 0x10], 2	      2165	prdbg.c	FUNCTION_65
0x400383a	      0xb801000000	                              mov eax, 1	      2167	prdbg.c	FUNCTION_65
0x400383f	            0xeb41	                           jmp 0x4003882	      2167	prdbg.c	FUNCTION_65
0x4003841	     0xf1f80000000	                         nop dword [rax]	      2167	prdbg.c	FUNCTION_65
0x4003848	      0xbe00000000	                              mov esi, 0	      2149	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_7	CALL_3
0x400384d	          0x4889ef	                            mov rdi, rbp	      2149	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_7	CALL_3
0x4003850	      0xe81bd6ffff	            call sym.append_type.isra.14	      2149	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_7	CALL_3
0x4003855	            0x85c0	                           test eax, eax	      2149	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_7	CALL_3
0x4003857	            0x7427	                            je 0x4003880	      2149	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_7	CALL_3
0x4003859	        0x8b442460	            mov eax, dword [rsp + 0x60] 	      2151	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_8
0x400385d	            0x85c0	                           test eax, eax	      2151	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_8
0x400385f	     0xf849b000000	                            je 0x4003900	      2151	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_8
0x4003865	      0xbe00000000	                              mov esi, 0	      2153	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_8	IF_9	CALL_4
0x400386a	          0x4889ef	                            mov rdi, rbp	      2153	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_8	IF_9	CALL_4
0x400386d	      0xe8fed5ffff	            call sym.append_type.isra.14	      2153	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_8	IF_9	CALL_4
0x4003872	            0x85c0	                           test eax, eax	      2153	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_8	IF_9	CALL_4
0x4003874	     0xf85ae000000	                           jne 0x4003928	      2153	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_8	IF_9	CALL_4
0x400387a	    0x660f1f440000	                    nop word [rax + rax]	      2153	prdbg.c	FUNCTION_65	IF_5	IF_6	IF_8	IF_9	CALL_4
0x4003880	            0x31c0	                            xor eax, eax	      2125	prdbg.c	FUNCTION_65	IF_1	IF_2
0x4003882	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      2168	prdbg.c	FUNCTION_65
0x4003887	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2168	prdbg.c	FUNCTION_65
0x4003890	     0xf859b000000	                           jne 0x4003931	      2168	prdbg.c	FUNCTION_65
0x4003896	        0x4883c430	                           add rsp, 0x30	      2168	prdbg.c	FUNCTION_65
0x400389a	              0x5b	                                 pop rbx	      2168	prdbg.c	FUNCTION_65
0x400389b	              0x5d	                                 pop rbp	      2168	prdbg.c	FUNCTION_65
0x400389c	            0x415c	                                 pop r12	      2168	prdbg.c	FUNCTION_65
0x400389e	            0x415d	                                 pop r13	      2168	prdbg.c	FUNCTION_65
0x40038a0	            0x415e	                                 pop r14	      2168	prdbg.c	FUNCTION_65
0x40038a2	              0xc3	                                     ret	      2168	prdbg.c	FUNCTION_65
0x40038a3	       0xf1f440000	                   nop dword [rax + rax]	      2168	prdbg.c	FUNCTION_65
0x40038a8	        0x488d6f10	                   lea rbp, [rdi + 0x10]	      2168	prdbg.c	FUNCTION_65
0x40038ac	        0x8954240c	              mov dword [rsp + 0xc], edx	      2168	prdbg.c	FUNCTION_65
0x40038b0	        0x48893424	                    mov qword [rsp], rsi	      2168	prdbg.c	FUNCTION_65
0x40038b4	          0x4889ef	                            mov rdi, rbp	      2123	prdbg.c	FUNCTION_65	IF_1	CALL_1
0x40038b7	      0xe824cdffff	                call sym.pop_type.isra.3	      2123	prdbg.c	FUNCTION_65	IF_1	CALL_1
0x40038bc	          0x4885c0	                           test rax, rax	      2124	prdbg.c	FUNCTION_65	IF_1	IF_2
0x40038bf	          0x4989c5	                            mov r13, rax	      2123	prdbg.c	FUNCTION_65	IF_1	CALL_1
0x40038c2	        0x488b3424	                    mov rsi, qword [rsp]	      2124	prdbg.c	FUNCTION_65	IF_1	IF_2
0x40038c6	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      2124	prdbg.c	FUNCTION_65	IF_1	IF_2
0x40038ca	     0xf8521ffffff	                           jne 0x40037f1	      2124	prdbg.c	FUNCTION_65	IF_1	IF_2
0x40038d0	            0xebae	                           jmp 0x4003880	      2124	prdbg.c	FUNCTION_65	IF_1	IF_2
0x40038d2	    0x660f1f440000	                    nop word [rax + rax]	      2124	prdbg.c	FUNCTION_65	IF_1	IF_2
0x40038d8	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        33	stdio2.h	FUNCTION_96	CALL_1
0x40038dd	          0x4189d0	                            mov r8d, edx	        33	stdio2.h	FUNCTION_96	CALL_1
0x40038e0	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_96	CALL_1
0x40038e5	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_96	CALL_1
0x40038ea	      0xba14000000	                           mov edx, 0x14	        33	stdio2.h	FUNCTION_96	CALL_1
0x40038ef	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_96	CALL_1
0x40038f1	      0xe800000000	                          call 0x40038f6	        33	stdio2.h	FUNCTION_96	CALL_1
0x40038f6	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2135	prdbg.c	FUNCTION_65	ELSE_1
0x40038fb	      0xe9fafeffff	                           jmp 0x40037fa	      2135	prdbg.c	FUNCTION_65	ELSE_1
0x4003900	          0x4c89ee	                            mov rsi, r13	      2158	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10	CALL_5
0x4003903	          0x4889ef	                            mov rdi, rbp	      2158	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10	CALL_5
0x4003906	      0xe865d5ffff	            call sym.append_type.isra.14	      2158	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10	CALL_5
0x400390b	            0x85c0	                           test eax, eax	      2158	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10	CALL_5
0x400390d	     0xf846dffffff	                            je 0x4003880	      2158	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10	CALL_5
0x4003913	      0xbe00000000	                              mov esi, 0	      2159	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10	CALL_6
0x4003918	          0x4889ef	                            mov rdi, rbp	      2159	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10	CALL_6
0x400391b	      0xe850d5ffff	            call sym.append_type.isra.14	      2159	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10	CALL_6
0x4003920	            0x85c0	                           test eax, eax	      2159	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10	CALL_6
0x4003922	     0xf8458ffffff	                            je 0x4003880	      2159	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10	CALL_6
0x4003928	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2159	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10	CALL_6
0x400392c	      0xe902ffffff	                           jmp 0x4003833	      2159	prdbg.c	FUNCTION_65	IF_5	IF_6	ELSE_2	IF_10	CALL_6
0x4003931	      0xe800000000	                          call 0x4003936	      2168	prdbg.c	FUNCTION_65
pr_const_type	SWITCH,0:WHILE,0:IF,0:FOR,0:ELSE,0:functions,0:CALL,1:DO,0	2
0x4001090	      0xbe00000000	                              mov esi, 0	      1025	prdbg.c	FUNCTION_28	CALL_1
0x4001095	      0xe966feffff	                 jmp sym.substitute_type	      1025	prdbg.c	FUNCTION_28	CALL_1
pr_function_type	SWITCH,0:WHILE,0:IF,10:FOR,2:ELSE,2:functions,0:CALL,18:DO,0	154
0x40010a0	            0x4157	                                push r15	       711	prdbg.c	FUNCTION_21
0x40010a2	            0x4156	                                push r14	       711	prdbg.c	FUNCTION_21
0x40010a4	            0x4155	                                push r13	       711	prdbg.c	FUNCTION_21
0x40010a6	            0x4154	                                push r12	       711	prdbg.c	FUNCTION_21
0x40010a8	              0x55	                                push rbp	       711	prdbg.c	FUNCTION_21
0x40010a9	              0x53	                                push rbx	       711	prdbg.c	FUNCTION_21
0x40010aa	        0x4883ec18	                           sub rsp, 0x18	       711	prdbg.c	FUNCTION_21
0x40010ae	      0x48837f1000	               cmp qword [rdi + 0x10], 0	       717	prdbg.c	FUNCTION_21	CALL_1
0x40010b3	        0x8954240c	              mov dword [rsp + 0xc], edx	       711	prdbg.c	FUNCTION_21
0x40010b7	     0xf8402020000	                            je 0x40012bf	       717	prdbg.c	FUNCTION_21	CALL_1
0x40010bd	            0x85f6	                           test esi, esi	       721	prdbg.c	FUNCTION_21	IF_1
0x40010bf	          0x4989fc	                            mov r12, rdi	       721	prdbg.c	FUNCTION_21	IF_1
0x40010c2	          0x4189f6	                           mov r14d, esi	       721	prdbg.c	FUNCTION_21	IF_1
0x40010c5	     0xf8e5d010000	                           jle 0x4001228	       721	prdbg.c	FUNCTION_21	IF_1
0x40010cb	          0x4863de	                         movsxd rbx, esi	       730	prdbg.c	FUNCTION_21	ELSE_1	CALL_2
0x40010ce	      0x4d8d6c2410	                   lea r13, [r12 + 0x10]	       730	prdbg.c	FUNCTION_21	ELSE_1	CALL_2
0x40010d3	      0xbd0a000000	                            mov ebp, 0xa	       719	prdbg.c	FUNCTION_21
0x40010d8	        0x48c1e303	                              shl rbx, 3	       730	prdbg.c	FUNCTION_21	ELSE_1	CALL_2
0x40010dc	          0x4889df	                            mov rdi, rbx	       730	prdbg.c	FUNCTION_21	ELSE_1	CALL_2
0x40010df	      0xe800000000	                          call 0x40010e4	       730	prdbg.c	FUNCTION_21	ELSE_1	CALL_2
0x40010e4	          0x4889c1	                            mov rcx, rax	       730	prdbg.c	FUNCTION_21	ELSE_1	CALL_2
0x40010e7	        0x48890424	                    mov qword [rsp], rax	       730	prdbg.c	FUNCTION_21	ELSE_1	CALL_2
0x40010eb	      0x488d5c18f8	                lea rbx, [rax + rbx - 8]	       730	prdbg.c	FUNCTION_21	ELSE_1	CALL_2
0x40010f0	        0x418d46ff	                      lea eax, [r14 - 1]	       730	prdbg.c	FUNCTION_21	ELSE_1	CALL_2
0x40010f4	          0x4863d0	                         movsxd rdx, eax	       730	prdbg.c	FUNCTION_21	ELSE_1	CALL_2
0x40010f7	            0x89c0	                            mov eax, eax	       730	prdbg.c	FUNCTION_21	ELSE_1	CALL_2
0x40010f9	          0x4829c2	                            sub rdx, rax	       730	prdbg.c	FUNCTION_21	ELSE_1	CALL_2
0x40010fc	      0x4c8d7cd1f8	              lea r15, [rcx + rdx*8 - 8]	       730	prdbg.c	FUNCTION_21	ELSE_1	CALL_2
0x4001101	     0xf1f80000000	                         nop dword [rax]	       730	prdbg.c	FUNCTION_21	ELSE_1	CALL_2
0x4001108	      0xbe00000000	                              mov esi, 0	       733	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_2	CALL_3
0x400110d	          0x4c89e7	                            mov rdi, r12	       733	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_2	CALL_3
0x4001110	      0xe8ebfdffff	                call sym.substitute_type	       733	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_2	CALL_3
0x4001115	            0x85c0	                           test eax, eax	       733	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_2	CALL_3
0x4001117	     0xf8443010000	                            je 0x4001260	       733	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_2	CALL_3
0x400111d	          0x4c89ef	                            mov rdi, r13	       738	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_5
0x4001120	      0xe8bbf4ffff	                call sym.pop_type.isra.3	       738	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_5
0x4001125	          0x4885c0	                           test rax, rax	       739	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_3
0x4001128	          0x488903	                    mov qword [rbx], rax	       738	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_5
0x400112b	     0xf844f010000	                            je 0x4001280	       739	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_3
0x4001131	          0x4889c7	                            mov rdi, rax	       744	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_7
0x4001134	        0x4883eb08	                              sub rbx, 8	       744	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_7
0x4001138	      0xe800000000	                          call 0x400113d	       744	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_7
0x400113d	          0x4c39fb	                            cmp rbx, r15	       731	prdbg.c	FUNCTION_21	ELSE_1	FOR_1
0x4001140	        0x8d6c0502	                lea ebp, [rbp + rax + 2]	       744	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	CALL_7
0x4001144	            0x75c2	                           jne 0x4001108	       731	prdbg.c	FUNCTION_21	ELSE_1	FOR_1
0x4001146	      0x448b5c240c	            mov r11d, dword [rsp + 0xc] 	       747	prdbg.c	FUNCTION_21	ELSE_1	IF_4
0x400114b	          0x8d4505	                      lea eax, [rbp + 5]	       747	prdbg.c	FUNCTION_21	ELSE_1	IF_4
0x400114e	          0x4585db	                         test r11d, r11d	       747	prdbg.c	FUNCTION_21	ELSE_1	IF_4
0x4001151	           0xf45e8	                         cmovne ebp, eax	       747	prdbg.c	FUNCTION_21	ELSE_1	IF_4
0x4001154	          0x4531ed	                          xor r13d, r13d	        53	string3.h	FUNCTION_84	CALL_3
0x4001157	            0x89ef	                            mov edi, ebp	       752	prdbg.c	FUNCTION_21	CALL_8
0x4001159	      0xbd28000000	                           mov ebp, 0x28	        53	string3.h	FUNCTION_84	CALL_3
0x400115e	      0xe800000000	                          call 0x4001163	       752	prdbg.c	FUNCTION_21	CALL_8
0x4001163	        0x66896804	                  mov word [rax + 4], bp	        53	string3.h	FUNCTION_84	CALL_3
0x4001167	          0x4889c3	                            mov rbx, rax	       752	prdbg.c	FUNCTION_21	CALL_8
0x400116a	    0xc700287c2920	            mov dword [rax], 0x20297c28 	        53	string3.h	FUNCTION_84	CALL_3
0x4001170	        0x488b2c24	                    mov rbp, qword [rsp]	        53	string3.h	FUNCTION_84	CALL_3
0x4001174	            0xeb1c	                           jmp 0x4001192	        53	string3.h	FUNCTION_84	CALL_3
0x4001176	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        53	string3.h	FUNCTION_84	CALL_3
0x4001180	    0x41b82c200000	                         mov r8d, 0x202c	       148	string3.h	FUNCTION_94	CALL_3
0x4001186	        0xc6400200	                   mov byte [rax + 2], 0	       148	string3.h	FUNCTION_94	CALL_3
0x400118a	        0x4883c508	                              add rbp, 8	       148	string3.h	FUNCTION_94	CALL_3
0x400118e	        0x66448900	                     mov word [rax], r8w	       148	string3.h	FUNCTION_94	CALL_3
0x4001192	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_94	CALL_3
0x4001195	        0x4183c501	                             add r13d, 1	       761	prdbg.c	FUNCTION_21	ELSE_2	FOR_2
0x4001199	      0xe800000000	                          call 0x400119e	       761	prdbg.c	FUNCTION_21	ELSE_2	FOR_2
0x400119e	        0x488b7500	                    mov rsi, qword [rbp]	       148	string3.h	FUNCTION_94	CALL_3
0x40011a2	        0x488d3c03	                    lea rdi, [rbx + rax]	       148	string3.h	FUNCTION_94	CALL_3
0x40011a6	      0xe800000000	                          call 0x40011ab	       148	string3.h	FUNCTION_94	CALL_3
0x40011ab	          0x4539ee	                          cmp r14d, r13d	       761	prdbg.c	FUNCTION_21	ELSE_2	FOR_2
0x40011ae	            0x75d0	                           jne 0x4001180	       761	prdbg.c	FUNCTION_21	ELSE_2	FOR_2
0x40011b0	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	       767	prdbg.c	FUNCTION_21	ELSE_2	IF_7
0x40011b4	            0x85c9	                           test ecx, ecx	       767	prdbg.c	FUNCTION_21	ELSE_2	IF_7
0x40011b6	            0x7460	                            je 0x4001218	       767	prdbg.c	FUNCTION_21	ELSE_2	IF_7
0x40011b8	      0xba2c200000	                         mov edx, 0x202c	       148	string3.h	FUNCTION_94	CALL_3
0x40011bd	        0xc6400200	                   mov byte [rax + 2], 0	       148	string3.h	FUNCTION_94	CALL_3
0x40011c1	          0x668910	                      mov word [rax], dx	       148	string3.h	FUNCTION_94	CALL_3
0x40011c4	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_94	CALL_3
0x40011c7	      0xe800000000	                          call 0x40011cc	       148	string3.h	FUNCTION_94	CALL_3
0x40011cc	          0x4585f6	                         test r14d, r14d	       773	prdbg.c	FUNCTION_21	ELSE_2	IF_9
0x40011cf	    0xc704032e2e2e	        mov dword [rbx + rax], 0x2e2e2e 	       148	string3.h	FUNCTION_94	CALL_3
0x40011d6	            0x7540	                           jne 0x4001218	       773	prdbg.c	FUNCTION_21	ELSE_2	IF_9
0x40011d8	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_94	CALL_3
0x40011db	      0xe800000000	                          call 0x40011e0	       148	string3.h	FUNCTION_94	CALL_3
0x40011e0	      0xbe29000000	                           mov esi, 0x29	       148	string3.h	FUNCTION_94	CALL_3
0x40011e5	          0x4c89e7	                            mov rdi, r12	       779	prdbg.c	FUNCTION_21	IF_10	CALL_17
0x40011e8	        0x66893403	                mov word [rbx + rax], si	       148	string3.h	FUNCTION_94	CALL_3
0x40011ec	          0x4889de	                            mov rsi, rbx	       779	prdbg.c	FUNCTION_21	IF_10	CALL_17
0x40011ef	      0xe80cfdffff	                call sym.substitute_type	       779	prdbg.c	FUNCTION_21	IF_10	CALL_17
0x40011f4	            0x85c0	                           test eax, eax	       779	prdbg.c	FUNCTION_21	IF_10	CALL_17
0x40011f6	            0x740d	                            je 0x4001205	       779	prdbg.c	FUNCTION_21	IF_10	CALL_17
0x40011f8	          0x4889df	                            mov rdi, rbx	       782	prdbg.c	FUNCTION_21	CALL_18
0x40011fb	      0xe800000000	                          call 0x4001200	       782	prdbg.c	FUNCTION_21	CALL_18
0x4001200	      0xb801000000	                              mov eax, 1	       784	prdbg.c	FUNCTION_21
0x4001205	        0x4883c418	                           add rsp, 0x18	       785	prdbg.c	FUNCTION_21
0x4001209	              0x5b	                                 pop rbx	       785	prdbg.c	FUNCTION_21
0x400120a	              0x5d	                                 pop rbp	       785	prdbg.c	FUNCTION_21
0x400120b	            0x415c	                                 pop r12	       785	prdbg.c	FUNCTION_21
0x400120d	            0x415d	                                 pop r13	       785	prdbg.c	FUNCTION_21
0x400120f	            0x415e	                                 pop r14	       785	prdbg.c	FUNCTION_21
0x4001211	            0x415f	                                 pop r15	       785	prdbg.c	FUNCTION_21
0x4001213	              0xc3	                                     ret	       785	prdbg.c	FUNCTION_21
0x4001214	         0xf1f4000	                         nop dword [rax]	       785	prdbg.c	FUNCTION_21
0x4001218	        0x488b3c24	                    mov rdi, qword [rsp]	       774	prdbg.c	FUNCTION_21	ELSE_2	CALL_15
0x400121c	      0xe800000000	                          call 0x4001221	       774	prdbg.c	FUNCTION_21	ELSE_2	CALL_15
0x4001221	            0xebb5	                           jmp 0x40011d8	       774	prdbg.c	FUNCTION_21	ELSE_2	CALL_15
0x4001223	       0xf1f440000	                   nop dword [rax + rax]	       774	prdbg.c	FUNCTION_21	ELSE_2	CALL_15
0x4001228	      0xbf19000000	                           mov edi, 0x19	       752	prdbg.c	FUNCTION_21	CALL_8
0x400122d	      0xe800000000	                          call 0x4001232	       752	prdbg.c	FUNCTION_21	CALL_8
0x4001232	    0x41ba28000000	                          mov r10d, 0x28	        53	string3.h	FUNCTION_84	CALL_3
0x4001238	          0x4585f6	                         test r14d, r14d	       755	prdbg.c	FUNCTION_21	IF_5
0x400123b	          0x4889c3	                            mov rbx, rax	       752	prdbg.c	FUNCTION_21	CALL_8
0x400123e	    0xc700287c2920	            mov dword [rax], 0x20297c28 	        53	string3.h	FUNCTION_84	CALL_3
0x4001244	      0x6644895004	                mov word [rax + 4], r10w	        53	string3.h	FUNCTION_84	CALL_3
0x4001249	            0x754f	                           jne 0x400129a	       755	prdbg.c	FUNCTION_21	IF_5
0x400124b	        0x8b7c240c	              mov edi, dword [rsp + 0xc]	       767	prdbg.c	FUNCTION_21	ELSE_2	IF_7
0x400124f	            0x85ff	                           test edi, edi	       767	prdbg.c	FUNCTION_21	ELSE_2	IF_7
0x4001251	            0x7485	                            je 0x40011d8	       767	prdbg.c	FUNCTION_21	ELSE_2	IF_7
0x4001253	    0x48c704240000	                      mov qword [rsp], 0	       723	prdbg.c	FUNCTION_21	IF_1
0x400125b	      0xe964ffffff	                           jmp 0x40011c4	       723	prdbg.c	FUNCTION_21	IF_1
0x4001260	        0x488b3c24	                    mov rdi, qword [rsp]	       735	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_2	CALL_4
0x4001264	        0x8944240c	              mov dword [rsp + 0xc], eax	       735	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_2	CALL_4
0x4001268	      0xe800000000	                          call 0x400126d	       735	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_2	CALL_4
0x400126d	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       736	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_2
0x4001271	        0x4883c418	                           add rsp, 0x18	       785	prdbg.c	FUNCTION_21
0x4001275	              0x5b	                                 pop rbx	       785	prdbg.c	FUNCTION_21
0x4001276	              0x5d	                                 pop rbp	       785	prdbg.c	FUNCTION_21
0x4001277	            0x415c	                                 pop r12	       785	prdbg.c	FUNCTION_21
0x4001279	            0x415d	                                 pop r13	       785	prdbg.c	FUNCTION_21
0x400127b	            0x415e	                                 pop r14	       785	prdbg.c	FUNCTION_21
0x400127d	            0x415f	                                 pop r15	       785	prdbg.c	FUNCTION_21
0x400127f	              0xc3	                                     ret	       785	prdbg.c	FUNCTION_21
0x4001280	        0x488b3c24	                    mov rdi, qword [rsp]	       741	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_3	CALL_6
0x4001284	      0xe800000000	                          call 0x4001289	       741	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_3	CALL_6
0x4001289	        0x4883c418	                           add rsp, 0x18	       785	prdbg.c	FUNCTION_21
0x400128d	            0x31c0	                            xor eax, eax	       742	prdbg.c	FUNCTION_21	ELSE_1	FOR_1	IF_3
0x400128f	              0x5b	                                 pop rbx	       785	prdbg.c	FUNCTION_21
0x4001290	              0x5d	                                 pop rbp	       785	prdbg.c	FUNCTION_21
0x4001291	            0x415c	                                 pop r12	       785	prdbg.c	FUNCTION_21
0x4001293	            0x415d	                                 pop r13	       785	prdbg.c	FUNCTION_21
0x4001295	            0x415e	                                 pop r14	       785	prdbg.c	FUNCTION_21
0x4001297	            0x415f	                                 pop r15	       785	prdbg.c	FUNCTION_21
0x4001299	              0xc3	                                     ret	       785	prdbg.c	FUNCTION_21
0x400129a	    0x48ba2f2a2075	          movabs rdx, 0x6f6e6b6e75202a2f	       148	string3.h	FUNCTION_94	CALL_3
0x40012a4	    0x41b92f000000	                           mov r9d, 0x2f	       148	string3.h	FUNCTION_94	CALL_3
0x40012aa	    0xc7400d776e20	      mov dword [rax + 0xd], 0x2a206e77 	       148	string3.h	FUNCTION_94	CALL_3
0x40012b1	        0x48895005	                mov qword [rax + 5], rdx	       148	string3.h	FUNCTION_94	CALL_3
0x40012b5	      0x6644894811	              mov word [rax + 0x11], r9w	       148	string3.h	FUNCTION_94	CALL_3
0x40012ba	      0xe919ffffff	                           jmp 0x40011d8	       148	string3.h	FUNCTION_94	CALL_3
0x40012bf	      0xb900000000	                              mov ecx, 0	       717	prdbg.c	FUNCTION_21	CALL_1
0x40012c4	      0xbacd020000	                          mov edx, 0x2cd	       717	prdbg.c	FUNCTION_21	CALL_1
0x40012c9	      0xbe00000000	                              mov esi, 0	       717	prdbg.c	FUNCTION_21	CALL_1
0x40012ce	      0xbf00000000	                              mov edi, 0	       717	prdbg.c	FUNCTION_21	CALL_1
0x40012d3	      0xe800000000	                          call 0x40012d8	       717	prdbg.c	FUNCTION_21	CALL_1
pr_tag	SWITCH,0:WHILE,0:IF,1:FOR,0:ELSE,0:functions,0:CALL,3:DO,0	39
0x4000700	            0x4154	                                push r12	      1679	prdbg.c	FUNCTION_45
0x4000702	              0x55	                                push rbp	      1679	prdbg.c	FUNCTION_45
0x4000703	          0x4889fd	                            mov rbp, rdi	      1679	prdbg.c	FUNCTION_45
0x4000706	              0x53	                                push rbx	      1679	prdbg.c	FUNCTION_45
0x4000707	        0x4883c710	                           add rdi, 0x10	      1679	prdbg.c	FUNCTION_45
0x400070b	      0xe8d0feffff	                call sym.pop_type.isra.3	      1683	prdbg.c	FUNCTION_45	CALL_1
0x4000710	          0x4885c0	                           test rax, rax	      1684	prdbg.c	FUNCTION_45	IF_1
0x4000713	            0x745b	                            je 0x4000770	      1684	prdbg.c	FUNCTION_45	IF_1
0x4000715	          0x4989c4	                            mov r12, rax	      1684	prdbg.c	FUNCTION_45	IF_1
0x4000718	          0x8b4508	                mov eax, dword [rbp + 8]	       327	prdbg.c	FUNCTION_2	FOR_1
0x400071b	            0x31db	                            xor ebx, ebx	       327	prdbg.c	FUNCTION_2	FOR_1
0x400071d	            0x85c0	                           test eax, eax	       327	prdbg.c	FUNCTION_2	FOR_1
0x400071f	            0x741d	                            je 0x400073e	       327	prdbg.c	FUNCTION_2	FOR_1
0x4000721	     0xf1f80000000	                         nop dword [rax]	       327	prdbg.c	FUNCTION_2	FOR_1
0x4000728	        0x488b7500	                    mov rsi, qword [rbp]	       328	prdbg.c	FUNCTION_2	CALL_1
0x400072c	      0xbf20000000	                           mov edi, 0x20	       328	prdbg.c	FUNCTION_2	CALL_1
0x4000731	          0x83c301	                              add ebx, 1	       327	prdbg.c	FUNCTION_2	FOR_1
0x4000734	      0xe800000000	                          call 0x4000739	       328	prdbg.c	FUNCTION_2	CALL_1
0x4000739	          0x3b5d08	                cmp ebx, dword [rbp + 8]	       327	prdbg.c	FUNCTION_2	FOR_1
0x400073c	            0x72ea	                            jb 0x4000728	       327	prdbg.c	FUNCTION_2	FOR_1
0x400073e	        0x488b7d00	                    mov rdi, qword [rbp]	        97	stdio2.h	CALL_96
0x4000742	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_96
0x4000745	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_96
0x400074a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_96
0x400074f	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_96
0x4000751	      0xe800000000	                          call 0x4000756	        97	stdio2.h	CALL_96
0x4000756	          0x4c89e7	                            mov rdi, r12	      1690	prdbg.c	FUNCTION_45	CALL_3
0x4000759	      0xe800000000	                          call 0x400075e	      1690	prdbg.c	FUNCTION_45	CALL_3
0x400075e	              0x5b	                                 pop rbx	      1693	prdbg.c	FUNCTION_45
0x400075f	      0xb801000000	                              mov eax, 1	      1692	prdbg.c	FUNCTION_45
0x4000764	              0x5d	                                 pop rbp	      1693	prdbg.c	FUNCTION_45
0x4000765	            0x415c	                                 pop r12	      1693	prdbg.c	FUNCTION_45
0x4000767	              0xc3	                                     ret	      1693	prdbg.c	FUNCTION_45
0x4000768	     0xf1f84000000	                   nop dword [rax + rax]	      1693	prdbg.c	FUNCTION_45
0x4000770	              0x5b	                                 pop rbx	      1693	prdbg.c	FUNCTION_45
0x4000771	            0x31c0	                            xor eax, eax	      1685	prdbg.c	FUNCTION_45	IF_1
0x4000773	              0x5d	                                 pop rbp	      1693	prdbg.c	FUNCTION_45
0x4000774	            0x415c	                                 pop r12	      1693	prdbg.c	FUNCTION_45
0x4000776	              0xc3	                                     ret	      1693	prdbg.c	FUNCTION_45
pr_class_end_method	SWITCH,0:WHILE,0:IF,0:FOR,0:ELSE,0:functions,0:CALL,0:DO,0	4
0x4000040	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      1575	prdbg.c	FUNCTION_40
0x4000044	    0x48c740180000	               mov qword [rax + 0x18], 0	      1575	prdbg.c	FUNCTION_40
0x400004c	      0xb801000000	                              mov eax, 1	      1577	prdbg.c	FUNCTION_40
0x4000051	              0xc3	                                     ret	      1577	prdbg.c	FUNCTION_40
tg_lineno	SWITCH,0:WHILE,0:IF,0:FOR,0:ELSE,0:functions,0:CALL,0:DO,0	2
0x4000070	      0xb801000000	                              mov eax, 1	      2802	prdbg.c	FUNCTION_81
0x4000075	              0xc3	                                     ret	      2802	prdbg.c	FUNCTION_81
tg_int_constant	SWITCH,0:WHILE,0:IF,0:FOR,0:ELSE,0:functions,0:CALL,2:DO,0	48
0x4000220	            0x4155	                                push r13	      2541	prdbg.c	FUNCTION_74
0x4000222	            0x4154	                                push r12	      2541	prdbg.c	FUNCTION_74
0x4000224	          0x4989d5	                            mov r13, rdx	      2541	prdbg.c	FUNCTION_74
0x4000227	              0x55	                                push rbp	      2541	prdbg.c	FUNCTION_74
0x4000228	              0x53	                                push rbx	      2541	prdbg.c	FUNCTION_74
0x4000229	            0x31db	                            xor ebx, ebx	      2541	prdbg.c	FUNCTION_74
0x400022b	          0x4889fd	                            mov rbp, rdi	      2541	prdbg.c	FUNCTION_74
0x400022e	          0x4989f4	                            mov r12, rsi	      2541	prdbg.c	FUNCTION_74
0x4000231	        0x4883ec28	                           sub rsp, 0x28	      2541	prdbg.c	FUNCTION_74
0x4000235	    0x64488b042528	                mov rax, qword fs:[0x28]	      2541	prdbg.c	FUNCTION_74
0x400023e	      0x4889442418	             mov qword [rsp + 0x18], rax	      2541	prdbg.c	FUNCTION_74
0x4000243	            0x31c0	                            xor eax, eax	      2541	prdbg.c	FUNCTION_74
0x4000245	          0x8b4708	                mov eax, dword [rdi + 8]	       327	prdbg.c	FUNCTION_2	FOR_1
0x4000248	            0x85c0	                           test eax, eax	       327	prdbg.c	FUNCTION_2	FOR_1
0x400024a	            0x741a	                            je 0x4000266	       327	prdbg.c	FUNCTION_2	FOR_1
0x400024c	         0xf1f4000	                         nop dword [rax]	       327	prdbg.c	FUNCTION_2	FOR_1
0x4000250	        0x488b7500	                    mov rsi, qword [rbp]	       328	prdbg.c	FUNCTION_2	CALL_1
0x4000254	      0xbf20000000	                           mov edi, 0x20	       328	prdbg.c	FUNCTION_2	CALL_1
0x4000259	          0x83c301	                              add ebx, 1	       327	prdbg.c	FUNCTION_2	FOR_1
0x400025c	      0xe800000000	                          call 0x4000261	       328	prdbg.c	FUNCTION_2	CALL_1
0x4000261	          0x3b5d08	                cmp ebx, dword [rbp + 8]	       327	prdbg.c	FUNCTION_2	FOR_1
0x4000264	            0x72ea	                            jb 0x4000250	       327	prdbg.c	FUNCTION_2	FOR_1
0x4000266	          0x4d89e8	                             mov r8, r13	        33	stdio2.h	FUNCTION_96	CALL_1
0x4000269	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_96	CALL_1
0x400026e	      0xba16000000	                           mov edx, 0x16	        33	stdio2.h	FUNCTION_96	CALL_1
0x4000273	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_96	CALL_1
0x4000278	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_96	CALL_1
0x400027b	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_96	CALL_1
0x400027d	      0xe800000000	                          call 0x4000282	        33	stdio2.h	FUNCTION_96	CALL_1
0x4000282	        0x4c8b4520	              mov r8, qword [rbp + 0x20]	        97	stdio2.h	CALL_96
0x4000286	        0x488b7d00	                    mov rdi, qword [rbp]	        97	stdio2.h	CALL_96
0x400028a	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_96
0x400028d	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_96
0x400028f	          0x4989e1	                             mov r9, rsp	        97	stdio2.h	CALL_96
0x4000292	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_96
0x4000297	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_96
0x400029c	      0xe800000000	                          call 0x40002a1	        97	stdio2.h	CALL_96
0x40002a1	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2550	prdbg.c	FUNCTION_74
0x40002a6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2550	prdbg.c	FUNCTION_74
0x40002af	      0xb801000000	                              mov eax, 1	      2550	prdbg.c	FUNCTION_74
0x40002b4	            0x750b	                           jne 0x40002c1	      2550	prdbg.c	FUNCTION_74
0x40002b6	        0x4883c428	                           add rsp, 0x28	      2550	prdbg.c	FUNCTION_74
0x40002ba	              0x5b	                                 pop rbx	      2550	prdbg.c	FUNCTION_74
0x40002bb	              0x5d	                                 pop rbp	      2550	prdbg.c	FUNCTION_74
0x40002bc	            0x415c	                                 pop r12	      2550	prdbg.c	FUNCTION_74
0x40002be	            0x415d	                                 pop r13	      2550	prdbg.c	FUNCTION_74
0x40002c0	              0xc3	                                     ret	      2550	prdbg.c	FUNCTION_74
0x40002c1	      0xe800000000	                          call 0x40002c6	      2550	prdbg.c	FUNCTION_74
tg_class_static_member	SWITCH,0:WHILE,0:IF,5:FOR,0:ELSE,0:functions,0:CALL,15:DO,0	109
0x40012e0	            0x4156	                                push r14	      2176	prdbg.c	FUNCTION_66
0x40012e2	            0x4155	                                push r13	      2176	prdbg.c	FUNCTION_66
0x40012e4	            0x4154	                                push r12	      2176	prdbg.c	FUNCTION_66
0x40012e6	              0x55	                                push rbp	      2176	prdbg.c	FUNCTION_66
0x40012e7	          0x4189cc	                           mov r12d, ecx	      2176	prdbg.c	FUNCTION_66
0x40012ea	              0x53	                                push rbx	      2176	prdbg.c	FUNCTION_66
0x40012eb	          0x4889fb	                            mov rbx, rdi	      2176	prdbg.c	FUNCTION_66
0x40012ee	          0x4889f7	                            mov rdi, rsi	      2182	prdbg.c	FUNCTION_66	CALL_1
0x40012f1	          0x4889f5	                            mov rbp, rsi	      2176	prdbg.c	FUNCTION_66
0x40012f4	        0x4883ec10	                           sub rsp, 0x10	      2176	prdbg.c	FUNCTION_66
0x40012f8	      0xe800000000	                          call 0x40012fd	      2182	prdbg.c	FUNCTION_66	CALL_1
0x40012fd	          0x4989c5	                            mov r13, rax	      2182	prdbg.c	FUNCTION_66	CALL_1
0x4001300	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2183	prdbg.c	FUNCTION_66	CALL_2
0x4001304	          0x488b00	                    mov rax, qword [rax]	      2183	prdbg.c	FUNCTION_66	CALL_2
0x4001307	        0x488b7808	                mov rdi, qword [rax + 8]	      2183	prdbg.c	FUNCTION_66	CALL_2
0x400130b	      0xe800000000	                          call 0x4001310	      2183	prdbg.c	FUNCTION_66	CALL_2
0x4001310	      0x418d7c0503	                lea edi, [r13 + rax + 3]	      2184	prdbg.c	FUNCTION_66	CALL_3
0x4001315	          0x4863ff	                         movsxd rdi, edi	      2184	prdbg.c	FUNCTION_66	CALL_3
0x4001318	      0xe800000000	                          call 0x400131d	      2184	prdbg.c	FUNCTION_66	CALL_3
0x400131d	          0x4989c5	                            mov r13, rax	      2184	prdbg.c	FUNCTION_66	CALL_3
0x4001320	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2187	prdbg.c	FUNCTION_66
0x4001324	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_96	CALL_1
0x4001327	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_96	CALL_1
0x400132c	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_96	CALL_1
0x4001333	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_96	CALL_1
0x4001338	          0x4c89ef	                            mov rdi, r13	        33	stdio2.h	FUNCTION_96	CALL_1
0x400133b	          0x488b00	                    mov rax, qword [rax]	      2187	prdbg.c	FUNCTION_66
0x400133e	        0x4c8b4008	                 mov r8, qword [rax + 8]	        33	stdio2.h	FUNCTION_96	CALL_1
0x4001342	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_96	CALL_1
0x4001344	      0xe800000000	                          call 0x4001349	        33	stdio2.h	FUNCTION_96	CALL_1
0x4001349	          0x4c89ee	                            mov rsi, r13	      2189	prdbg.c	FUNCTION_66	IF_2	CALL_4
0x400134c	          0x4889df	                            mov rdi, rbx	      2189	prdbg.c	FUNCTION_66	IF_2	CALL_4
0x400134f	      0xe8acfbffff	                call sym.substitute_type	      2189	prdbg.c	FUNCTION_66	IF_2	CALL_4
0x4001354	            0x85c0	                           test eax, eax	      2189	prdbg.c	FUNCTION_66	IF_2	CALL_4
0x4001356	     0xf8494000000	                            je 0x40013f0	      2189	prdbg.c	FUNCTION_66	IF_2	CALL_4
0x400135c	        0x4c8d7310	                   lea r14, [rbx + 0x10]	      2189	prdbg.c	FUNCTION_66	IF_2	CALL_4
0x4001360	      0xbe00000000	                              mov esi, 0	      2195	prdbg.c	FUNCTION_66	IF_3	CALL_6
0x4001365	          0x4c89f7	                            mov rdi, r14	      2195	prdbg.c	FUNCTION_66	IF_3	CALL_6
0x4001368	      0xe863faffff	           call sym.prepend_type.isra.12	      2195	prdbg.c	FUNCTION_66	IF_3	CALL_6
0x400136d	            0x85c0	                           test eax, eax	      2195	prdbg.c	FUNCTION_66	IF_3	CALL_6
0x400136f	            0x747f	                            je 0x40013f0	      2195	prdbg.c	FUNCTION_66	IF_3	CALL_6
0x4001371	          0x4c89f7	                            mov rdi, r14	      2201	prdbg.c	FUNCTION_66	CALL_8
0x4001374	      0xe867f2ffff	                call sym.pop_type.isra.3	      2201	prdbg.c	FUNCTION_66	CALL_8
0x4001379	          0x4885c0	                           test rax, rax	      2202	prdbg.c	FUNCTION_66	IF_4
0x400137c	          0x4989c6	                            mov r14, rax	      2201	prdbg.c	FUNCTION_66	CALL_8
0x400137f	     0xf84b3000000	                            je 0x4001438	      2202	prdbg.c	FUNCTION_66	IF_4
0x4001385	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      2208	prdbg.c	FUNCTION_66	IF_5	CALL_10
0x4001389	          0x4489e6	                           mov esi, r12d	      2208	prdbg.c	FUNCTION_66	IF_5	CALL_10
0x400138c	      0xe8eff7ffff	       call sym.tg_fix_visibility.isra.8	      2208	prdbg.c	FUNCTION_66	IF_5	CALL_10
0x4001391	            0x85c0	                           test eax, eax	      2208	prdbg.c	FUNCTION_66	IF_5	CALL_10
0x4001393	            0x747b	                            je 0x4001410	      2208	prdbg.c	FUNCTION_66	IF_5	CALL_10
0x4001395	          0x4489e7	                           mov edi, r12d	      2215	prdbg.c	FUNCTION_66
0x4001398	      0xe833efffff	                call sym.visibility_name	      2215	prdbg.c	FUNCTION_66
0x400139d	              0x50	                                push rax	        97	stdio2.h	CALL_96
0x400139e	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2215	prdbg.c	FUNCTION_66
0x40013a2	          0x4d89f1	                             mov r9, r14	        97	stdio2.h	CALL_96
0x40013a5	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	        97	stdio2.h	CALL_96
0x40013a9	          0x488b3b	                    mov rdi, qword [rbx]	        97	stdio2.h	CALL_96
0x40013ac	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_96
0x40013af	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_96
0x40013b4	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_96
0x40013b9	          0xff7008	                    push qword [rax + 8]	        97	stdio2.h	CALL_96
0x40013bc	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_96
0x40013be	      0xe800000000	                          call 0x40013c3	        97	stdio2.h	CALL_96
0x40013c3	          0x4c89f7	                            mov rdi, r14	      2218	prdbg.c	FUNCTION_66	CALL_14
0x40013c6	      0xe800000000	                          call 0x40013cb	      2218	prdbg.c	FUNCTION_66	CALL_14
0x40013cb	          0x4c89ef	                            mov rdi, r13	      2219	prdbg.c	FUNCTION_66	CALL_15
0x40013ce	      0xe800000000	                          call 0x40013d3	      2219	prdbg.c	FUNCTION_66	CALL_15
0x40013d3	              0x58	                                 pop rax	      2221	prdbg.c	FUNCTION_66
0x40013d4	              0x5a	                                 pop rdx	      2221	prdbg.c	FUNCTION_66
0x40013d5	      0xb801000000	                              mov eax, 1	      2221	prdbg.c	FUNCTION_66
0x40013da	        0x4883c410	                           add rsp, 0x10	      2222	prdbg.c	FUNCTION_66
0x40013de	              0x5b	                                 pop rbx	      2222	prdbg.c	FUNCTION_66
0x40013df	              0x5d	                                 pop rbp	      2222	prdbg.c	FUNCTION_66
0x40013e0	            0x415c	                                 pop r12	      2222	prdbg.c	FUNCTION_66
0x40013e2	            0x415d	                                 pop r13	      2222	prdbg.c	FUNCTION_66
0x40013e4	            0x415e	                                 pop r14	      2222	prdbg.c	FUNCTION_66
0x40013e6	              0xc3	                                     ret	      2222	prdbg.c	FUNCTION_66
0x40013e7	    0x660f1f840000	                    nop word [rax + rax]	      2222	prdbg.c	FUNCTION_66
0x40013f0	          0x4c89ef	                            mov rdi, r13	      2197	prdbg.c	FUNCTION_66	IF_3	CALL_7
0x40013f3	        0x8944240c	              mov dword [rsp + 0xc], eax	      2197	prdbg.c	FUNCTION_66	IF_3	CALL_7
0x40013f7	      0xe800000000	                          call 0x40013fc	      2197	prdbg.c	FUNCTION_66	IF_3	CALL_7
0x40013fc	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      2198	prdbg.c	FUNCTION_66	IF_3
0x4001400	        0x4883c410	                           add rsp, 0x10	      2222	prdbg.c	FUNCTION_66
0x4001404	              0x5b	                                 pop rbx	      2222	prdbg.c	FUNCTION_66
0x4001405	              0x5d	                                 pop rbp	      2222	prdbg.c	FUNCTION_66
0x4001406	            0x415c	                                 pop r12	      2222	prdbg.c	FUNCTION_66
0x4001408	            0x415d	                                 pop r13	      2222	prdbg.c	FUNCTION_66
0x400140a	            0x415e	                                 pop r14	      2222	prdbg.c	FUNCTION_66
0x400140c	              0xc3	                                     ret	      2222	prdbg.c	FUNCTION_66
0x400140d	           0xf1f00	                         nop dword [rax]	      2222	prdbg.c	FUNCTION_66
0x4001410	          0x4c89f7	                            mov rdi, r14	      2210	prdbg.c	FUNCTION_66	IF_5	CALL_11
0x4001413	        0x8944240c	              mov dword [rsp + 0xc], eax	      2210	prdbg.c	FUNCTION_66	IF_5	CALL_11
0x4001417	      0xe800000000	                          call 0x400141c	      2210	prdbg.c	FUNCTION_66	IF_5	CALL_11
0x400141c	          0x4c89ef	                            mov rdi, r13	      2211	prdbg.c	FUNCTION_66	IF_5	CALL_12
0x400141f	      0xe800000000	                          call 0x4001424	      2211	prdbg.c	FUNCTION_66	IF_5	CALL_12
0x4001424	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      2212	prdbg.c	FUNCTION_66	IF_5
0x4001428	        0x4883c410	                           add rsp, 0x10	      2222	prdbg.c	FUNCTION_66
0x400142c	              0x5b	                                 pop rbx	      2222	prdbg.c	FUNCTION_66
0x400142d	              0x5d	                                 pop rbp	      2222	prdbg.c	FUNCTION_66
0x400142e	            0x415c	                                 pop r12	      2222	prdbg.c	FUNCTION_66
0x4001430	            0x415d	                                 pop r13	      2222	prdbg.c	FUNCTION_66
0x4001432	            0x415e	                                 pop r14	      2222	prdbg.c	FUNCTION_66
0x4001434	              0xc3	                                     ret	      2222	prdbg.c	FUNCTION_66
0x4001435	           0xf1f00	                         nop dword [rax]	      2222	prdbg.c	FUNCTION_66
0x4001438	          0x4c89ef	                            mov rdi, r13	      2204	prdbg.c	FUNCTION_66	IF_4	CALL_9
0x400143b	      0xe800000000	                          call 0x4001440	      2204	prdbg.c	FUNCTION_66	IF_4	CALL_9
0x4001440	            0x31c0	                            xor eax, eax	      2205	prdbg.c	FUNCTION_66	IF_4
0x4001442	            0xebbc	                           jmp 0x4001400	      2205	prdbg.c	FUNCTION_66	IF_4
tg_class_method_variant	SWITCH,0:WHILE,0:IF,9:FOR,0:ELSE,1:functions,0:CALL,19:DO,0	160
0x4002070	            0x4157	                                push r15	      2297	prdbg.c	FUNCTION_68
0x4002072	            0x4156	                                push r14	      2297	prdbg.c	FUNCTION_68
0x4002074	            0x4155	                                push r13	      2297	prdbg.c	FUNCTION_68
0x4002076	            0x4154	                                push r12	      2297	prdbg.c	FUNCTION_68
0x4002078	              0x55	                                push rbp	      2297	prdbg.c	FUNCTION_68
0x4002079	              0x53	                                push rbx	      2297	prdbg.c	FUNCTION_68
0x400207a	        0x4883ec18	                           sub rsp, 0x18	      2297	prdbg.c	FUNCTION_68
0x400207e	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      2303	prdbg.c	FUNCTION_68	CALL_1
0x4002082	      0x448b642450	           mov r12d, dword [rsp + 0x50] 	      2297	prdbg.c	FUNCTION_68
0x4002087	          0x4885c0	                           test rax, rax	      2303	prdbg.c	FUNCTION_68	CALL_1
0x400208a	     0xf8400020000	                            je 0x4002290	      2303	prdbg.c	FUNCTION_68	CALL_1
0x4002090	        0x48833800	                      cmp qword [rax], 0	      2304	prdbg.c	FUNCTION_68	CALL_2
0x4002094	     0xf84dd010000	                            je 0x4002277	      2304	prdbg.c	FUNCTION_68	CALL_2
0x400209a	          0x4585c0	                           test r8d, r8d	      2307	prdbg.c	FUNCTION_68	IF_1
0x400209d	          0x4889fb	                            mov rbx, rdi	      2307	prdbg.c	FUNCTION_68	IF_1
0x40020a0	          0x4189d5	                           mov r13d, edx	      2307	prdbg.c	FUNCTION_68	IF_1
0x40020a3	     0xf8517010000	                           jne 0x40021c0	      2307	prdbg.c	FUNCTION_68	IF_1
0x40020a9	            0x85c9	                           test ecx, ecx	      2312	prdbg.c	FUNCTION_68	IF_3
0x40020ab	     0xf853f010000	                           jne 0x40021f0	      2312	prdbg.c	FUNCTION_68	IF_3
0x40020b1	          0x4585e4	                         test r12d, r12d	      2318	prdbg.c	FUNCTION_68	CALL_5
0x40020b4	     0xf85c6000000	                           jne 0x4002180	      2318	prdbg.c	FUNCTION_68	CALL_5
0x40020ba	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2318	prdbg.c	FUNCTION_68	CALL_5
0x40020be	          0x488b00	                    mov rax, qword [rax]	      2318	prdbg.c	FUNCTION_68	CALL_5
0x40020c1	        0x488b7818	            mov rdi, qword [rax + 0x18] 	      2318	prdbg.c	FUNCTION_68	CALL_5
0x40020c5	      0xe800000000	                          call 0x40020ca	      2318	prdbg.c	FUNCTION_68	CALL_5
0x40020ca	          0x4889df	                            mov rdi, rbx	      2322	prdbg.c	FUNCTION_68	IF_5	CALL_6
0x40020cd	          0x4889c6	                            mov rsi, rax	      2322	prdbg.c	FUNCTION_68	IF_5	CALL_6
0x40020d0	          0x4889c5	                            mov rbp, rax	      2318	prdbg.c	FUNCTION_68	CALL_5
0x40020d3	      0xe828eeffff	                call sym.substitute_type	      2322	prdbg.c	FUNCTION_68	IF_5	CALL_6
0x40020d8	            0x85c0	                           test eax, eax	      2322	prdbg.c	FUNCTION_68	IF_5	CALL_6
0x40020da	     0xf84b8000000	                            je 0x4002198	      2322	prdbg.c	FUNCTION_68	IF_5	CALL_6
0x40020e0	        0x4c8d7b10	                   lea r15, [rbx + 0x10]	      2322	prdbg.c	FUNCTION_68	IF_5	CALL_6
0x40020e4	          0x4c89ff	                            mov rdi, r15	      2329	prdbg.c	FUNCTION_68	CALL_8
0x40020e7	      0xe8f4e4ffff	                call sym.pop_type.isra.3	      2329	prdbg.c	FUNCTION_68	CALL_8
0x40020ec	          0x4885c0	                           test rax, rax	      2330	prdbg.c	FUNCTION_68	IF_6
0x40020ef	          0x4989c6	                            mov r14, rax	      2329	prdbg.c	FUNCTION_68	CALL_8
0x40020f2	     0xf8470010000	                            je 0x4002268	      2330	prdbg.c	FUNCTION_68	IF_6
0x40020f8	          0x4585e4	                         test r12d, r12d	      2337	prdbg.c	FUNCTION_68	IF_7
0x40020fb	     0xf840f010000	                            je 0x4002210	      2337	prdbg.c	FUNCTION_68	IF_7
0x4002101	          0x4c89ff	                            mov rdi, r15	      2341	prdbg.c	FUNCTION_68	ELSE_1	CALL_10
0x4002104	      0xe8d7e4ffff	                call sym.pop_type.isra.3	      2341	prdbg.c	FUNCTION_68	ELSE_1	CALL_10
0x4002109	          0x4885c0	                           test rax, rax	      2342	prdbg.c	FUNCTION_68	ELSE_1	IF_8
0x400210c	          0x4989c4	                            mov r12, rax	      2341	prdbg.c	FUNCTION_68	ELSE_1	CALL_10
0x400210f	     0xf844b010000	                            je 0x4002260	      2342	prdbg.c	FUNCTION_68	ELSE_1	IF_8
0x4002115	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      2351	prdbg.c	FUNCTION_68	IF_9	CALL_13
0x4002119	          0x4489ee	                           mov esi, r13d	      2351	prdbg.c	FUNCTION_68	IF_9	CALL_13
0x400211c	      0xe85feaffff	       call sym.tg_fix_visibility.isra.8	      2351	prdbg.c	FUNCTION_68	IF_9	CALL_13
0x4002121	            0x85c0	                           test eax, eax	      2351	prdbg.c	FUNCTION_68	IF_9	CALL_13
0x4002123	     0xf84fe000000	                            je 0x4002227	      2351	prdbg.c	FUNCTION_68	IF_9	CALL_13
0x4002129	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2359	prdbg.c	FUNCTION_68
0x400212d	        0x4883ec08	                              sub rsp, 8	        97	stdio2.h	CALL_96
0x4002131	          0x4d89f1	                             mov r9, r14	        97	stdio2.h	CALL_96
0x4002134	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_96
0x4002137	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_96
0x400213c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_96
0x4002141	          0xff7008	                    push qword [rax + 8]	        97	stdio2.h	CALL_96
0x4002144	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	        97	stdio2.h	CALL_96
0x4002148	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_96
0x400214a	          0x488b3b	                    mov rdi, qword [rbx]	        97	stdio2.h	CALL_96
0x400214d	      0xe800000000	                          call 0x4002152	        97	stdio2.h	CALL_96
0x4002152	          0x4c89f7	                            mov rdi, r14	      2361	prdbg.c	FUNCTION_68	CALL_17
0x4002155	      0xe800000000	                          call 0x400215a	      2361	prdbg.c	FUNCTION_68	CALL_17
0x400215a	          0x4889ef	                            mov rdi, rbp	      2362	prdbg.c	FUNCTION_68	CALL_18
0x400215d	      0xe800000000	                          call 0x4002162	      2362	prdbg.c	FUNCTION_68	CALL_18
0x4002162	          0x4c89e7	                            mov rdi, r12	      2363	prdbg.c	FUNCTION_68	CALL_19
0x4002165	      0xe800000000	                          call 0x400216a	      2363	prdbg.c	FUNCTION_68	CALL_19
0x400216a	              0x58	                                 pop rax	      2365	prdbg.c	FUNCTION_68
0x400216b	              0x5a	                                 pop rdx	      2365	prdbg.c	FUNCTION_68
0x400216c	      0xb801000000	                              mov eax, 1	      2365	prdbg.c	FUNCTION_68
0x4002171	        0x4883c418	                           add rsp, 0x18	      2366	prdbg.c	FUNCTION_68
0x4002175	              0x5b	                                 pop rbx	      2366	prdbg.c	FUNCTION_68
0x4002176	              0x5d	                                 pop rbp	      2366	prdbg.c	FUNCTION_68
0x4002177	            0x415c	                                 pop r12	      2366	prdbg.c	FUNCTION_68
0x4002179	            0x415d	                                 pop r13	      2366	prdbg.c	FUNCTION_68
0x400217b	            0x415e	                                 pop r14	      2366	prdbg.c	FUNCTION_68
0x400217d	            0x415f	                                 pop r15	      2366	prdbg.c	FUNCTION_68
0x400217f	              0xc3	                                     ret	      2366	prdbg.c	FUNCTION_68
0x4002180	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2318	prdbg.c	FUNCTION_68	CALL_5
0x4002184	          0x488b00	                    mov rax, qword [rax]	      2318	prdbg.c	FUNCTION_68	CALL_5
0x4002187	          0x488b00	                    mov rax, qword [rax]	      2318	prdbg.c	FUNCTION_68	CALL_5
0x400218a	        0x488b7818	            mov rdi, qword [rax + 0x18] 	      2318	prdbg.c	FUNCTION_68	CALL_5
0x400218e	      0xe932ffffff	                           jmp 0x40020c5	      2318	prdbg.c	FUNCTION_68	CALL_5
0x4002193	       0xf1f440000	                   nop dword [rax + rax]	      2318	prdbg.c	FUNCTION_68	CALL_5
0x4002198	          0x4889ef	                            mov rdi, rbp	      2324	prdbg.c	FUNCTION_68	IF_5	CALL_7
0x400219b	        0x8944240c	              mov dword [rsp + 0xc], eax	      2324	prdbg.c	FUNCTION_68	IF_5	CALL_7
0x400219f	      0xe800000000	                          call 0x40021a4	      2324	prdbg.c	FUNCTION_68	IF_5	CALL_7
0x40021a4	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      2325	prdbg.c	FUNCTION_68	IF_5
0x40021a8	        0x4883c418	                           add rsp, 0x18	      2366	prdbg.c	FUNCTION_68
0x40021ac	              0x5b	                                 pop rbx	      2366	prdbg.c	FUNCTION_68
0x40021ad	              0x5d	                                 pop rbp	      2366	prdbg.c	FUNCTION_68
0x40021ae	            0x415c	                                 pop r12	      2366	prdbg.c	FUNCTION_68
0x40021b0	            0x415d	                                 pop r13	      2366	prdbg.c	FUNCTION_68
0x40021b2	            0x415e	                                 pop r14	      2366	prdbg.c	FUNCTION_68
0x40021b4	            0x415f	                                 pop r15	      2366	prdbg.c	FUNCTION_68
0x40021b6	              0xc3	                                     ret	      2366	prdbg.c	FUNCTION_68
0x40021b7	    0x660f1f840000	                    nop word [rax + rax]	      2366	prdbg.c	FUNCTION_68
0x40021c0	        0x488d7f10	                   lea rdi, [rdi + 0x10]	      2366	prdbg.c	FUNCTION_68
0x40021c4	      0xbe00000000	                              mov esi, 0	      2309	prdbg.c	FUNCTION_68	IF_1	IF_2	CALL_3
0x40021c9	        0x894c240c	              mov dword [rsp + 0xc], ecx	      2309	prdbg.c	FUNCTION_68	IF_1	IF_2	CALL_3
0x40021cd	      0xe89eecffff	            call sym.append_type.isra.14	      2309	prdbg.c	FUNCTION_68	IF_1	IF_2	CALL_3
0x40021d2	            0x85c0	                           test eax, eax	      2309	prdbg.c	FUNCTION_68	IF_1	IF_2	CALL_3
0x40021d4	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      2309	prdbg.c	FUNCTION_68	IF_1	IF_2	CALL_3
0x40021d8	     0xf85cbfeffff	                           jne 0x40020a9	      2309	prdbg.c	FUNCTION_68	IF_1	IF_2	CALL_3
0x40021de	            0x31c0	                            xor eax, eax	      2346	prdbg.c	FUNCTION_68	ELSE_1	IF_8
0x40021e0	        0x4883c418	                           add rsp, 0x18	      2366	prdbg.c	FUNCTION_68
0x40021e4	              0x5b	                                 pop rbx	      2366	prdbg.c	FUNCTION_68
0x40021e5	              0x5d	                                 pop rbp	      2366	prdbg.c	FUNCTION_68
0x40021e6	            0x415c	                                 pop r12	      2366	prdbg.c	FUNCTION_68
0x40021e8	            0x415d	                                 pop r13	      2366	prdbg.c	FUNCTION_68
0x40021ea	            0x415e	                                 pop r14	      2366	prdbg.c	FUNCTION_68
0x40021ec	            0x415f	                                 pop r15	      2366	prdbg.c	FUNCTION_68
0x40021ee	              0xc3	                                     ret	      2366	prdbg.c	FUNCTION_68
0x40021ef	              0x90	                                     nop	      2366	prdbg.c	FUNCTION_68
0x40021f0	        0x488d7b10	                   lea rdi, [rbx + 0x10]	      2366	prdbg.c	FUNCTION_68
0x40021f4	      0xbe00000000	                              mov esi, 0	      2314	prdbg.c	FUNCTION_68	IF_3	IF_4	CALL_4
0x40021f9	      0xe872ecffff	            call sym.append_type.isra.14	      2314	prdbg.c	FUNCTION_68	IF_3	IF_4	CALL_4
0x40021fe	            0x85c0	                           test eax, eax	      2314	prdbg.c	FUNCTION_68	IF_3	IF_4	CALL_4
0x4002200	     0xf85abfeffff	                           jne 0x40020b1	      2314	prdbg.c	FUNCTION_68	IF_3	IF_4	CALL_4
0x4002206	            0x31c0	                            xor eax, eax	      2346	prdbg.c	FUNCTION_68	ELSE_1	IF_8
0x4002208	            0xebd6	                           jmp 0x40021e0	      2346	prdbg.c	FUNCTION_68	ELSE_1	IF_8
0x400220a	    0x660f1f440000	                    nop word [rax + rax]	      2346	prdbg.c	FUNCTION_68	ELSE_1	IF_8
0x4002210	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      2351	prdbg.c	FUNCTION_68	IF_9	CALL_13
0x4002214	          0x4489ee	                           mov esi, r13d	      2351	prdbg.c	FUNCTION_68	IF_9	CALL_13
0x4002217	          0x4531e4	                          xor r12d, r12d	      2338	prdbg.c	FUNCTION_68	IF_7
0x400221a	      0xe861e9ffff	       call sym.tg_fix_visibility.isra.8	      2351	prdbg.c	FUNCTION_68	IF_9	CALL_13
0x400221f	            0x85c0	                           test eax, eax	      2351	prdbg.c	FUNCTION_68	IF_9	CALL_13
0x4002221	     0xf8502ffffff	                           jne 0x4002129	      2351	prdbg.c	FUNCTION_68	IF_9	CALL_13
0x4002227	          0x4c89f7	                            mov rdi, r14	      2353	prdbg.c	FUNCTION_68	IF_9	CALL_14
0x400222a	        0x8944240c	              mov dword [rsp + 0xc], eax	      2353	prdbg.c	FUNCTION_68	IF_9	CALL_14
0x400222e	      0xe800000000	                          call 0x4002233	      2353	prdbg.c	FUNCTION_68	IF_9	CALL_14
0x4002233	          0x4889ef	                            mov rdi, rbp	      2354	prdbg.c	FUNCTION_68	IF_9	CALL_15
0x4002236	      0xe800000000	                          call 0x400223b	      2354	prdbg.c	FUNCTION_68	IF_9	CALL_15
0x400223b	          0x4c89e7	                            mov rdi, r12	      2355	prdbg.c	FUNCTION_68	IF_9	CALL_16
0x400223e	      0xe800000000	                          call 0x4002243	      2355	prdbg.c	FUNCTION_68	IF_9	CALL_16
0x4002243	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      2356	prdbg.c	FUNCTION_68	IF_9
0x4002247	        0x4883c418	                           add rsp, 0x18	      2366	prdbg.c	FUNCTION_68
0x400224b	              0x5b	                                 pop rbx	      2366	prdbg.c	FUNCTION_68
0x400224c	              0x5d	                                 pop rbp	      2366	prdbg.c	FUNCTION_68
0x400224d	            0x415c	                                 pop r12	      2366	prdbg.c	FUNCTION_68
0x400224f	            0x415d	                                 pop r13	      2366	prdbg.c	FUNCTION_68
0x4002251	            0x415e	                                 pop r14	      2366	prdbg.c	FUNCTION_68
0x4002253	            0x415f	                                 pop r15	      2366	prdbg.c	FUNCTION_68
0x4002255	              0xc3	                                     ret	      2366	prdbg.c	FUNCTION_68
0x4002256	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2366	prdbg.c	FUNCTION_68
0x4002260	          0x4c89f7	                            mov rdi, r14	      2344	prdbg.c	FUNCTION_68	ELSE_1	IF_8	CALL_11
0x4002263	      0xe800000000	                          call 0x4002268	      2344	prdbg.c	FUNCTION_68	ELSE_1	IF_8	CALL_11
0x4002268	          0x4889ef	                            mov rdi, rbp	      2345	prdbg.c	FUNCTION_68	ELSE_1	IF_8	CALL_12
0x400226b	      0xe800000000	                          call 0x4002270	      2345	prdbg.c	FUNCTION_68	ELSE_1	IF_8	CALL_12
0x4002270	            0x31c0	                            xor eax, eax	      2346	prdbg.c	FUNCTION_68	ELSE_1	IF_8
0x4002272	      0xe969ffffff	                           jmp 0x40021e0	      2346	prdbg.c	FUNCTION_68	ELSE_1	IF_8
0x4002277	      0xb900000000	                              mov ecx, 0	      2304	prdbg.c	FUNCTION_68	CALL_2
0x400227c	      0xba00090000	                          mov edx, 0x900	      2304	prdbg.c	FUNCTION_68	CALL_2
0x4002281	      0xbe00000000	                              mov esi, 0	      2304	prdbg.c	FUNCTION_68	CALL_2
0x4002286	      0xbf00000000	                              mov edi, 0	      2304	prdbg.c	FUNCTION_68	CALL_2
0x400228b	      0xe800000000	                          call 0x4002290	      2304	prdbg.c	FUNCTION_68	CALL_2
0x4002290	      0xb900000000	                              mov ecx, 0	      2303	prdbg.c	FUNCTION_68	CALL_1
0x4002295	      0xbaff080000	                          mov edx, 0x8ff	      2303	prdbg.c	FUNCTION_68	CALL_1
0x400229a	      0xbe00000000	                              mov esi, 0	      2303	prdbg.c	FUNCTION_68	CALL_1
0x400229f	      0xbf00000000	                              mov edi, 0	      2303	prdbg.c	FUNCTION_68	CALL_1
0x40022a4	      0xe800000000	                          call 0x40022a9	      2303	prdbg.c	FUNCTION_68	CALL_1
tg_start_function	SWITCH,0:WHILE,0:IF,7:FOR,0:ELSE,2:functions,0:CALL,6:DO,0	81
0x4001d40	            0x85d2	                           test edx, edx	      2657	prdbg.c	FUNCTION_78	IF_1
0x4001d42	            0x4154	                                push r12	      2653	prdbg.c	FUNCTION_78
0x4001d44	              0x55	                                push rbp	      2653	prdbg.c	FUNCTION_78
0x4001d45	          0x4889f5	                            mov rbp, rsi	      2653	prdbg.c	FUNCTION_78
0x4001d48	              0x53	                                push rbx	      2653	prdbg.c	FUNCTION_78
0x4001d49	          0x4889fb	                            mov rbx, rdi	      2653	prdbg.c	FUNCTION_78
0x4001d4c	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      2658	prdbg.c	FUNCTION_78	IF_1
0x4001d50	     0xf85ba000000	                           jne 0x4001e10	      2657	prdbg.c	FUNCTION_78	IF_1
0x4001d56	    0x48c740200000	               mov qword [rax + 0x20], 0	      2658	prdbg.c	FUNCTION_78	IF_1
0x4001d5e	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      2663	prdbg.c	FUNCTION_78	IF_2
0x4001d62	          0x4885c0	                           test rax, rax	      2663	prdbg.c	FUNCTION_78	IF_2
0x4001d65	     0xf84ba000000	                            je 0x4001e25	      2663	prdbg.c	FUNCTION_78	IF_2
0x4001d6b	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      2664	prdbg.c	FUNCTION_78	CALL_1
0x4001d6f	      0xba03000000	                              mov edx, 3	      2664	prdbg.c	FUNCTION_78	CALL_1
0x4001d74	          0x4889ee	                            mov rsi, rbp	      2664	prdbg.c	FUNCTION_78	CALL_1
0x4001d77	            0xffd0	                                call rax	      2664	prdbg.c	FUNCTION_78	CALL_1
0x4001d79	          0x4885c0	                           test rax, rax	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x4001d7c	          0x4989c4	                            mov r12, rax	      2664	prdbg.c	FUNCTION_78	CALL_1
0x4001d7f	     0xf84a0000000	                            je 0x4001e25	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x4001d85	          0x4889c6	                            mov rsi, rax	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x4001d88	          0x4889df	                            mov rdi, rbx	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x4001d8b	      0xe870f1ffff	                call sym.substitute_type	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x4001d90	            0x85c0	                           test eax, eax	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x4001d92	     0xf84c2000000	                            je 0x4001e5a	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x4001d98	        0x488b6b10	            mov rbp, qword [rbx + 0x10] 	      2669	prdbg.c	FUNCTION_78
0x4001d9c	      0xbe00000000	                              mov esi, 0	      2673	prdbg.c	FUNCTION_78	IF_4	CALL_3
0x4001da1	          0x4c89e7	                            mov rdi, r12	      2673	prdbg.c	FUNCTION_78	IF_4	CALL_3
0x4001da4	    0x48c745180000	               mov qword [rbp + 0x18], 0	      2669	prdbg.c	FUNCTION_78
0x4001dac	      0xe800000000	                          call 0x4001db1	      2673	prdbg.c	FUNCTION_78	IF_4	CALL_3
0x4001db1	          0x4885c0	                           test rax, rax	      2674	prdbg.c	FUNCTION_78	IF_4	IF_5
0x4001db4	     0xf84ae000000	                            je 0x4001e68	      2674	prdbg.c	FUNCTION_78	IF_4	IF_5
0x4001dba	        0x4c896518	            mov qword [rbp + 0x18], r12 	      2676	prdbg.c	FUNCTION_78	IF_4	IF_5
0x4001dbe	        0x488d6802	                      lea rbp, [rax + 2]	      2678	prdbg.c	FUNCTION_78	IF_4	IF_5
0x4001dc2	          0xc60000	                       mov byte [rax], 0	      2677	prdbg.c	FUNCTION_78	IF_4	IF_5
0x4001dc5	      0xbe28000000	                           mov esi, 0x28	      2685	prdbg.c	FUNCTION_78	IF_4	CALL_4
0x4001dca	          0x4889ef	                            mov rdi, rbp	      2685	prdbg.c	FUNCTION_78	IF_4	CALL_4
0x4001dcd	      0xe800000000	                          call 0x4001dd2	      2685	prdbg.c	FUNCTION_78	IF_4	CALL_4
0x4001dd2	          0x4885c0	                           test rax, rax	      2686	prdbg.c	FUNCTION_78	IF_4	IF_6
0x4001dd5	            0x7403	                            je 0x4001dda	      2686	prdbg.c	FUNCTION_78	IF_4	IF_6
0x4001dd7	          0xc60000	                       mov byte [rax], 0	      2687	prdbg.c	FUNCTION_78	IF_4	IF_6
0x4001dda	        0x4c8b6310	            mov r12, qword [rbx + 0x10] 	      2687	prdbg.c	FUNCTION_78	IF_4	IF_6
0x4001dde	          0x4889ef	                            mov rdi, rbp	      2691	prdbg.c	FUNCTION_78	CALL_5
0x4001de1	      0xe800000000	                          call 0x4001de6	      2691	prdbg.c	FUNCTION_78	CALL_5
0x4001de6	      0x4989442428	             mov qword [r12 + 0x28], rax	      2691	prdbg.c	FUNCTION_78	CALL_5
0x4001deb	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2693	prdbg.c	FUNCTION_78	IF_7	CALL_6
0x4001def	      0x4883781800	               cmp qword [rax + 0x18], 0	      2693	prdbg.c	FUNCTION_78	IF_7	CALL_6
0x4001df4	            0x7452	                            je 0x4001e48	      2693	prdbg.c	FUNCTION_78	IF_7	CALL_6
0x4001df6	    0xc74318010000	               mov dword [rbx + 0x18], 1	      2696	prdbg.c	FUNCTION_78
0x4001dfd	      0xb801000000	                              mov eax, 1	      2698	prdbg.c	FUNCTION_78
0x4001e02	              0x5b	                                 pop rbx	      2699	prdbg.c	FUNCTION_78
0x4001e03	              0x5d	                                 pop rbp	      2699	prdbg.c	FUNCTION_78
0x4001e04	            0x415c	                                 pop r12	      2699	prdbg.c	FUNCTION_78
0x4001e06	              0xc3	                                     ret	      2699	prdbg.c	FUNCTION_78
0x4001e07	    0x660f1f840000	                    nop word [rax + rax]	      2699	prdbg.c	FUNCTION_78
0x4001e10	    0x48c740200000	               mov qword [rax + 0x20], 0	      2660	prdbg.c	FUNCTION_78	ELSE_1
0x4001e18	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      2663	prdbg.c	FUNCTION_78	IF_2
0x4001e1c	          0x4885c0	                           test rax, rax	      2663	prdbg.c	FUNCTION_78	IF_2
0x4001e1f	     0xf8546ffffff	                           jne 0x4001d6b	      2663	prdbg.c	FUNCTION_78	IF_2
0x4001e25	          0x4889ee	                            mov rsi, rbp	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x4001e28	          0x4889df	                            mov rdi, rbx	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x4001e2b	      0xe8d0f0ffff	                call sym.substitute_type	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x4001e30	            0x85c0	                           test eax, eax	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x4001e32	            0x7426	                            je 0x4001e5a	      2666	prdbg.c	FUNCTION_78	IF_3	CALL_2
0x4001e34	        0x4c8b6310	            mov r12, qword [rbx + 0x10] 	      2669	prdbg.c	FUNCTION_78
0x4001e38	    0x49c744241800	               mov qword [r12 + 0x18], 0	      2669	prdbg.c	FUNCTION_78
0x4001e41	            0xeb9b	                           jmp 0x4001dde	      2669	prdbg.c	FUNCTION_78
0x4001e43	       0xf1f440000	                   nop dword [rax + rax]	      2669	prdbg.c	FUNCTION_78
0x4001e48	        0x488d7b10	                   lea rdi, [rbx + 0x10]	      2669	prdbg.c	FUNCTION_78
0x4001e4c	      0xbe00000000	                              mov esi, 0	      2693	prdbg.c	FUNCTION_78	IF_7	CALL_6
0x4001e51	      0xe81af0ffff	            call sym.append_type.isra.14	      2693	prdbg.c	FUNCTION_78	IF_7	CALL_6
0x4001e56	            0x85c0	                           test eax, eax	      2693	prdbg.c	FUNCTION_78	IF_7	CALL_6
0x4001e58	            0x759c	                           jne 0x4001df6	      2693	prdbg.c	FUNCTION_78	IF_7	CALL_6
0x4001e5a	              0x5b	                                 pop rbx	      2699	prdbg.c	FUNCTION_78
0x4001e5b	            0x31c0	                            xor eax, eax	      2694	prdbg.c	FUNCTION_78	IF_7
0x4001e5d	              0x5d	                                 pop rbp	      2699	prdbg.c	FUNCTION_78
0x4001e5e	            0x415c	                                 pop r12	      2699	prdbg.c	FUNCTION_78
0x4001e60	              0xc3	                                     ret	      2699	prdbg.c	FUNCTION_78
0x4001e61	     0xf1f80000000	                         nop dword [rax]	      2699	prdbg.c	FUNCTION_78
0x4001e68	    0x48c745180000	               mov qword [rbp + 0x18], 0	      2682	prdbg.c	FUNCTION_78	IF_4	ELSE_2
0x4001e70	          0x4c89e5	                            mov rbp, r12	      2682	prdbg.c	FUNCTION_78	IF_4	ELSE_2
0x4001e73	      0xe94dffffff	                           jmp 0x4001dc5	      2682	prdbg.c	FUNCTION_78	IF_4	ELSE_2
pr_class_method_variant	SWITCH,0:WHILE,0:IF,14:FOR,0:ELSE,1:functions,0:CALL,20:DO,0	186
0x4001a60	            0x4157	                                push r15	      1444	prdbg.c	FUNCTION_38
0x4001a62	            0x4156	                                push r14	      1444	prdbg.c	FUNCTION_38
0x4001a64	            0x4155	                                push r13	      1444	prdbg.c	FUNCTION_38
0x4001a66	            0x4154	                                push r12	      1444	prdbg.c	FUNCTION_38
0x4001a68	              0x55	                                push rbp	      1444	prdbg.c	FUNCTION_38
0x4001a69	              0x53	                                push rbx	      1444	prdbg.c	FUNCTION_38
0x4001a6a	        0x4883ec38	                           sub rsp, 0x38	      1444	prdbg.c	FUNCTION_38
0x4001a6e	    0x64488b042528	                mov rax, qword fs:[0x28]	      1444	prdbg.c	FUNCTION_38
0x4001a77	      0x4889442428	             mov qword [rsp + 0x28], rax	      1444	prdbg.c	FUNCTION_38
0x4001a7c	            0x31c0	                            xor eax, eax	      1444	prdbg.c	FUNCTION_38
0x4001a7e	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      1449	prdbg.c	FUNCTION_38	CALL_1
0x4001a82	          0x4885c0	                           test rax, rax	      1449	prdbg.c	FUNCTION_38	CALL_1
0x4001a85	     0xf8467020000	                            je 0x4001cf2	      1449	prdbg.c	FUNCTION_38	CALL_1
0x4001a8b	        0x48833800	                      cmp qword [rax], 0	      1450	prdbg.c	FUNCTION_38	CALL_2
0x4001a8f	     0xf847b020000	                            je 0x4001d10	      1450	prdbg.c	FUNCTION_38	CALL_2
0x4001a95	          0x4585c0	                           test r8d, r8d	      1453	prdbg.c	FUNCTION_38	IF_1
0x4001a98	          0x4989ff	                            mov r15, rdi	      1453	prdbg.c	FUNCTION_38	IF_1
0x4001a9b	          0x4889f5	                            mov rbp, rsi	      1453	prdbg.c	FUNCTION_38	IF_1
0x4001a9e	            0x89d3	                            mov ebx, edx	      1453	prdbg.c	FUNCTION_38	IF_1
0x4001aa0	          0x4d89cc	                             mov r12, r9	      1453	prdbg.c	FUNCTION_38	IF_1
0x4001aa3	     0xf85af010000	                           jne 0x4001c58	      1453	prdbg.c	FUNCTION_38	IF_1
0x4001aa9	            0x85c9	                           test ecx, ecx	      1458	prdbg.c	FUNCTION_38	IF_3
0x4001aab	     0xf85cf010000	                           jne 0x4001c80	      1458	prdbg.c	FUNCTION_38	IF_3
0x4001ab1	        0x8b742470	            mov esi, dword [rsp + 0x70] 	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x4001ab5	            0x85f6	                           test esi, esi	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x4001ab7	            0x753f	                           jne 0x4001af8	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x4001ab9	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      1468	prdbg.c	FUNCTION_38	IF_5
0x4001abd	          0x4c89ff	                            mov rdi, r15	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x4001ac0	          0x488b00	                    mov rax, qword [rax]	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x4001ac3	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x4001ac7	      0xe834f4ffff	                call sym.substitute_type	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x4001acc	            0x85c0	                           test eax, eax	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x4001ace	            0x7542	                           jne 0x4001b12	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x4001ad0	            0x31c0	                            xor eax, eax	      1505	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13
0x4001ad2	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      1515	prdbg.c	FUNCTION_38
0x4001ad7	    0x644833142528	                xor rdx, qword fs:[0x28]	      1515	prdbg.c	FUNCTION_38
0x4001ae0	     0xf8525020000	                           jne 0x4001d0b	      1515	prdbg.c	FUNCTION_38
0x4001ae6	        0x4883c438	                           add rsp, 0x38	      1515	prdbg.c	FUNCTION_38
0x4001aea	              0x5b	                                 pop rbx	      1515	prdbg.c	FUNCTION_38
0x4001aeb	              0x5d	                                 pop rbp	      1515	prdbg.c	FUNCTION_38
0x4001aec	            0x415c	                                 pop r12	      1515	prdbg.c	FUNCTION_38
0x4001aee	            0x415d	                                 pop r13	      1515	prdbg.c	FUNCTION_38
0x4001af0	            0x415e	                                 pop r14	      1515	prdbg.c	FUNCTION_38
0x4001af2	            0x415f	                                 pop r15	      1515	prdbg.c	FUNCTION_38
0x4001af4	              0xc3	                                     ret	      1515	prdbg.c	FUNCTION_38
0x4001af5	           0xf1f00	                         nop dword [rax]	      1515	prdbg.c	FUNCTION_38
0x4001af8	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      1467	prdbg.c	FUNCTION_38	IF_5
0x4001afc	          0x4c89ff	                            mov rdi, r15	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x4001aff	          0x488b00	                    mov rax, qword [rax]	      1467	prdbg.c	FUNCTION_38	IF_5
0x4001b02	          0x488b00	                    mov rax, qword [rax]	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x4001b05	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x4001b09	      0xe8f2f3ffff	                call sym.substitute_type	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x4001b0e	            0x85c0	                           test eax, eax	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x4001b10	            0x74be	                            je 0x4001ad0	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x4001b12	        0x4d8d6f10	                   lea r13, [r15 + 0x10]	      1465	prdbg.c	FUNCTION_38	IF_5	CALL_5
0x4001b16	          0x4c89ef	                            mov rdi, r13	      1472	prdbg.c	FUNCTION_38	CALL_6
0x4001b19	      0xe8c2eaffff	                call sym.pop_type.isra.3	      1472	prdbg.c	FUNCTION_38	CALL_6
0x4001b1e	          0x4885c0	                           test rax, rax	      1473	prdbg.c	FUNCTION_38	IF_6
0x4001b21	          0x4989c6	                            mov r14, rax	      1472	prdbg.c	FUNCTION_38	CALL_6
0x4001b24	            0x74aa	                            je 0x4001ad0	      1473	prdbg.c	FUNCTION_38	IF_6
0x4001b26	        0x8b4c2470	            mov ecx, dword [rsp + 0x70] 	      1477	prdbg.c	FUNCTION_38	IF_7
0x4001b2a	            0x85c9	                           test ecx, ecx	      1477	prdbg.c	FUNCTION_38	IF_7
0x4001b2c	     0xf846e010000	                            je 0x4001ca0	      1477	prdbg.c	FUNCTION_38	IF_7
0x4001b32	          0x4c89ef	                            mov rdi, r13	      1481	prdbg.c	FUNCTION_38	ELSE_1	CALL_7
0x4001b35	      0xe8a6eaffff	                call sym.pop_type.isra.3	      1481	prdbg.c	FUNCTION_38	ELSE_1	CALL_7
0x4001b3a	          0x4885c0	                           test rax, rax	      1482	prdbg.c	FUNCTION_38	ELSE_1	IF_8
0x4001b3d	      0x4889442408	                mov qword [rsp + 8], rax	      1481	prdbg.c	FUNCTION_38	ELSE_1	CALL_7
0x4001b42	            0x748c	                            je 0x4001ad0	      1482	prdbg.c	FUNCTION_38	ELSE_1	IF_8
0x4001b44	            0x89de	                            mov esi, ebx	      1488	prdbg.c	FUNCTION_38	IF_9	CALL_8
0x4001b46	          0x4c89ff	                            mov rdi, r15	      1488	prdbg.c	FUNCTION_38	IF_9	CALL_8
0x4001b49	      0xe812fcffff	              call sym.pr_fix_visibility	      1488	prdbg.c	FUNCTION_38	IF_9	CALL_8
0x4001b4e	            0x85c0	                           test eax, eax	      1488	prdbg.c	FUNCTION_38	IF_9	CALL_8
0x4001b50	     0xf847affffff	                            je 0x4001ad0	      1488	prdbg.c	FUNCTION_38	IF_9	CALL_8
0x4001b56	          0x4c89f6	                            mov rsi, r14	      1491	prdbg.c	FUNCTION_38	IF_10	CALL_9
0x4001b59	          0x4c89ef	                            mov rdi, r13	      1491	prdbg.c	FUNCTION_38	IF_10	CALL_9
0x4001b5c	      0xe80ff3ffff	            call sym.append_type.isra.14	      1491	prdbg.c	FUNCTION_38	IF_10	CALL_9
0x4001b61	            0x85c0	                           test eax, eax	      1491	prdbg.c	FUNCTION_38	IF_10	CALL_9
0x4001b63	     0xf8467ffffff	                            je 0x4001ad0	      1491	prdbg.c	FUNCTION_38	IF_10	CALL_9
0x4001b69	      0xbe00000000	                              mov esi, 0	      1492	prdbg.c	FUNCTION_38	IF_10	CALL_10
0x4001b6e	          0x4c89ef	                            mov rdi, r13	      1492	prdbg.c	FUNCTION_38	IF_10	CALL_10
0x4001b71	      0xe8faf2ffff	            call sym.append_type.isra.14	      1492	prdbg.c	FUNCTION_38	IF_10	CALL_10
0x4001b76	            0x85c0	                           test eax, eax	      1492	prdbg.c	FUNCTION_38	IF_10	CALL_10
0x4001b78	     0xf8452ffffff	                            je 0x4001ad0	      1492	prdbg.c	FUNCTION_38	IF_10	CALL_10
0x4001b7e	          0x4889ee	                            mov rsi, rbp	      1493	prdbg.c	FUNCTION_38	IF_10	CALL_11
0x4001b81	          0x4c89ef	                            mov rdi, r13	      1493	prdbg.c	FUNCTION_38	IF_10	CALL_11
0x4001b84	      0xe8e7f2ffff	            call sym.append_type.isra.14	      1493	prdbg.c	FUNCTION_38	IF_10	CALL_11
0x4001b89	            0x85c0	                           test eax, eax	      1493	prdbg.c	FUNCTION_38	IF_10	CALL_11
0x4001b8b	     0xf843fffffff	                            je 0x4001ad0	      1493	prdbg.c	FUNCTION_38	IF_10	CALL_11
0x4001b91	      0xbe00000000	                              mov esi, 0	      1494	prdbg.c	FUNCTION_38	IF_10	CALL_12
0x4001b96	          0x4c89ef	                            mov rdi, r13	      1494	prdbg.c	FUNCTION_38	IF_10	CALL_12
0x4001b99	      0xe8d2f2ffff	            call sym.append_type.isra.14	      1494	prdbg.c	FUNCTION_38	IF_10	CALL_12
0x4001b9e	            0x85c0	                           test eax, eax	      1494	prdbg.c	FUNCTION_38	IF_10	CALL_12
0x4001ba0	     0xf842affffff	                            je 0x4001ad0	      1494	prdbg.c	FUNCTION_38	IF_10	CALL_12
0x4001ba6	        0x8b542470	            mov edx, dword [rsp + 0x70] 	      1496	prdbg.c	FUNCTION_38	IF_11
0x4001baa	            0x85d2	                           test edx, edx	      1496	prdbg.c	FUNCTION_38	IF_11
0x4001bac	            0x7505	                           jne 0x4001bb3	      1496	prdbg.c	FUNCTION_38	IF_11
0x4001bae	          0x4d85e4	                           test r12, r12	      1496	prdbg.c	FUNCTION_38	IF_11
0x4001bb1	            0x7454	                            je 0x4001c07	      1496	prdbg.c	FUNCTION_38	IF_11
0x4001bb3	        0x8b442470	            mov eax, dword [rsp + 0x70] 	      1500	prdbg.c	FUNCTION_38	IF_11	IF_12
0x4001bb7	            0x85c0	                           test eax, eax	      1500	prdbg.c	FUNCTION_38	IF_11	IF_12
0x4001bb9	     0xf85ef000000	                           jne 0x4001cae	      1500	prdbg.c	FUNCTION_38	IF_11	IF_12
0x4001bbf	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        33	stdio2.h	FUNCTION_96	CALL_1
0x4001bc4	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_96	CALL_1
0x4001bc7	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_96	CALL_1
0x4001bcc	      0xba16000000	                           mov edx, 0x16	        33	stdio2.h	FUNCTION_96	CALL_1
0x4001bd1	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_96	CALL_1
0x4001bd6	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_96	CALL_1
0x4001bd8	      0xe800000000	                          call 0x4001bdd	        33	stdio2.h	FUNCTION_96	CALL_1
0x4001bdd	      0xbe00000000	                              mov esi, 0	      1508	prdbg.c	FUNCTION_38	IF_11	IF_14	CALL_17
0x4001be2	          0x4c89ef	                            mov rdi, r13	      1508	prdbg.c	FUNCTION_38	IF_11	IF_14	CALL_17
0x4001be5	      0xe886f2ffff	            call sym.append_type.isra.14	      1508	prdbg.c	FUNCTION_38	IF_11	IF_14	CALL_17
0x4001bea	            0x85c0	                           test eax, eax	      1508	prdbg.c	FUNCTION_38	IF_11	IF_14	CALL_17
0x4001bec	     0xf84defeffff	                            je 0x4001ad0	      1508	prdbg.c	FUNCTION_38	IF_11	IF_14	CALL_17
0x4001bf2	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1509	prdbg.c	FUNCTION_38	IF_11	IF_14	CALL_18
0x4001bf7	          0x4c89ef	                            mov rdi, r13	      1509	prdbg.c	FUNCTION_38	IF_11	IF_14	CALL_18
0x4001bfa	      0xe871f2ffff	            call sym.append_type.isra.14	      1509	prdbg.c	FUNCTION_38	IF_11	IF_14	CALL_18
0x4001bff	            0x85c0	                           test eax, eax	      1509	prdbg.c	FUNCTION_38	IF_11	IF_14	CALL_18
0x4001c01	     0xf84c9feffff	                            je 0x4001ad0	      1509	prdbg.c	FUNCTION_38	IF_11	IF_14	CALL_18
0x4001c07	      0xbe00000000	                              mov esi, 0	      1513	prdbg.c	FUNCTION_38	CALL_19
0x4001c0c	          0x4c89ef	                            mov rdi, r13	      1513	prdbg.c	FUNCTION_38	CALL_19
0x4001c0f	      0xe85cf2ffff	            call sym.append_type.isra.14	      1513	prdbg.c	FUNCTION_38	CALL_19
0x4001c14	            0x85c0	                           test eax, eax	      1514	prdbg.c	FUNCTION_38	CALL_20
0x4001c16	     0xf84b4feffff	                            je 0x4001ad0	      1514	prdbg.c	FUNCTION_38	CALL_20
0x4001c1c	            0x31db	                            xor ebx, ebx	       461	prdbg.c	FUNCTION_8	FOR_1
0x4001c1e	      0x41837f0800	                  cmp dword [r15 + 8], 0	       461	prdbg.c	FUNCTION_8	FOR_1
0x4001c23	            0x7518	                           jne 0x4001c3d	       461	prdbg.c	FUNCTION_8	FOR_1
0x4001c25	      0xe9ff000000	                           jmp 0x4001d29	       461	prdbg.c	FUNCTION_8	FOR_1
0x4001c2a	    0x660f1f440000	                    nop word [rax + rax]	       461	prdbg.c	FUNCTION_8	FOR_1
0x4001c30	          0x83c301	                              add ebx, 1	       461	prdbg.c	FUNCTION_8	FOR_1
0x4001c33	        0x413b5f08	                cmp ebx, dword [r15 + 8]	       461	prdbg.c	FUNCTION_8	FOR_1
0x4001c37	     0xf83ec000000	                           jae 0x4001d29	       461	prdbg.c	FUNCTION_8	FOR_1
0x4001c3d	      0xbe00000000	                              mov esi, 0	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4001c42	          0x4c89ef	                            mov rdi, r13	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4001c45	      0xe826f2ffff	            call sym.append_type.isra.14	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4001c4a	            0x85c0	                           test eax, eax	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4001c4c	            0x75e2	                           jne 0x4001c30	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4001c4e	      0xe97dfeffff	                           jmp 0x4001ad0	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4001c53	       0xf1f440000	                   nop dword [rax + rax]	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4001c58	        0x488d7f10	                   lea rdi, [rdi + 0x10]	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4001c5c	      0xbe00000000	                              mov esi, 0	      1455	prdbg.c	FUNCTION_38	IF_1	IF_2	CALL_3
0x4001c61	        0x894c2408	                mov dword [rsp + 8], ecx	      1455	prdbg.c	FUNCTION_38	IF_1	IF_2	CALL_3
0x4001c65	      0xe806f2ffff	            call sym.append_type.isra.14	      1455	prdbg.c	FUNCTION_38	IF_1	IF_2	CALL_3
0x4001c6a	            0x85c0	                           test eax, eax	      1455	prdbg.c	FUNCTION_38	IF_1	IF_2	CALL_3
0x4001c6c	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      1455	prdbg.c	FUNCTION_38	IF_1	IF_2	CALL_3
0x4001c70	     0xf845afeffff	                            je 0x4001ad0	      1455	prdbg.c	FUNCTION_38	IF_1	IF_2	CALL_3
0x4001c76	            0x85c9	                           test ecx, ecx	      1458	prdbg.c	FUNCTION_38	IF_3
0x4001c78	     0xf8433feffff	                            je 0x4001ab1	      1458	prdbg.c	FUNCTION_38	IF_3
0x4001c7e	            0x6690	                                     nop	      1458	prdbg.c	FUNCTION_38	IF_3
0x4001c80	        0x498d7f10	                   lea rdi, [r15 + 0x10]	      1458	prdbg.c	FUNCTION_38	IF_3
0x4001c84	      0xbe00000000	                              mov esi, 0	      1460	prdbg.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x4001c89	      0xe8e2f1ffff	            call sym.append_type.isra.14	      1460	prdbg.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x4001c8e	            0x85c0	                           test eax, eax	      1460	prdbg.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x4001c90	     0xf851bfeffff	                           jne 0x4001ab1	      1460	prdbg.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x4001c96	      0xe935feffff	                           jmp 0x4001ad0	      1460	prdbg.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x4001c9b	       0xf1f440000	                   nop dword [rax + rax]	      1460	prdbg.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x4001ca0	    0x48c744240800	                  mov qword [rsp + 8], 0	      1478	prdbg.c	FUNCTION_38	IF_7
0x4001ca9	      0xe996feffff	                           jmp 0x4001b44	      1478	prdbg.c	FUNCTION_38	IF_7
0x4001cae	      0xbe00000000	                              mov esi, 0	      1502	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_13
0x4001cb3	          0x4c89ef	                            mov rdi, r13	      1502	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_13
0x4001cb6	      0xe8b5f1ffff	            call sym.append_type.isra.14	      1502	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_13
0x4001cbb	            0x85c0	                           test eax, eax	      1502	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_13
0x4001cbd	     0xf840dfeffff	                            je 0x4001ad0	      1502	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_13
0x4001cc3	      0x488b742408	                mov rsi, qword [rsp + 8]	      1503	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_14
0x4001cc8	          0x4c89ef	                            mov rdi, r13	      1503	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_14
0x4001ccb	      0xe8a0f1ffff	            call sym.append_type.isra.14	      1503	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_14
0x4001cd0	            0x85c0	                           test eax, eax	      1503	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_14
0x4001cd2	     0xf84f8fdffff	                            je 0x4001ad0	      1503	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_14
0x4001cd8	      0xbe00000000	                              mov esi, 0	      1504	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_15
0x4001cdd	          0x4c89ef	                            mov rdi, r13	      1504	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_15
0x4001ce0	      0xe88bf1ffff	            call sym.append_type.isra.14	      1504	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_15
0x4001ce5	            0x85c0	                           test eax, eax	      1504	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_15
0x4001ce7	     0xf85d2feffff	                           jne 0x4001bbf	      1504	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_15
0x4001ced	      0xe9defdffff	                           jmp 0x4001ad0	      1504	prdbg.c	FUNCTION_38	IF_11	IF_12	IF_13	CALL_15
0x4001cf2	      0xb900000000	                              mov ecx, 0	      1449	prdbg.c	FUNCTION_38	CALL_1
0x4001cf7	      0xbaa9050000	                          mov edx, 0x5a9	      1449	prdbg.c	FUNCTION_38	CALL_1
0x4001cfc	      0xbe00000000	                              mov esi, 0	      1449	prdbg.c	FUNCTION_38	CALL_1
0x4001d01	      0xbf00000000	                              mov edi, 0	      1449	prdbg.c	FUNCTION_38	CALL_1
0x4001d06	      0xe800000000	                          call 0x4001d0b	      1449	prdbg.c	FUNCTION_38	CALL_1
0x4001d0b	      0xe800000000	                          call 0x4001d10	      1515	prdbg.c	FUNCTION_38
0x4001d10	      0xb900000000	                              mov ecx, 0	      1450	prdbg.c	FUNCTION_38	CALL_2
0x4001d15	      0xbaaa050000	                          mov edx, 0x5aa	      1450	prdbg.c	FUNCTION_38	CALL_2
0x4001d1a	      0xbe00000000	                              mov esi, 0	      1450	prdbg.c	FUNCTION_38	CALL_2
0x4001d1f	      0xbf00000000	                              mov edi, 0	      1450	prdbg.c	FUNCTION_38	CALL_2
0x4001d24	      0xe800000000	                          call 0x4001d29	      1450	prdbg.c	FUNCTION_38	CALL_2
0x4001d29	      0xb801000000	                              mov eax, 1	      1514	prdbg.c	FUNCTION_38	CALL_20
0x4001d2e	      0xe99ffdffff	                           jmp 0x4001ad2	      1514	prdbg.c	FUNCTION_38	CALL_20
pr_lineno	SWITCH,0:WHILE,0:IF,0:FOR,0:ELSE,0:functions,0:CALL,2:DO,0	47
0x4000390	            0x4156	                                push r14	      1873	prdbg.c	FUNCTION_53
0x4000392	            0x4155	                                push r13	      1873	prdbg.c	FUNCTION_53
0x4000394	          0x4989ce	                            mov r14, rcx	      1873	prdbg.c	FUNCTION_53
0x4000397	            0x4154	                                push r12	      1873	prdbg.c	FUNCTION_53
0x4000399	              0x55	                                push rbp	      1873	prdbg.c	FUNCTION_53
0x400039a	          0x4989f4	                            mov r12, rsi	      1873	prdbg.c	FUNCTION_53
0x400039d	              0x53	                                push rbx	      1873	prdbg.c	FUNCTION_53
0x400039e	            0x31db	                            xor ebx, ebx	      1873	prdbg.c	FUNCTION_53
0x40003a0	          0x4889fd	                            mov rbp, rdi	      1873	prdbg.c	FUNCTION_53
0x40003a3	          0x4989d5	                            mov r13, rdx	      1873	prdbg.c	FUNCTION_53
0x40003a6	        0x4883ec20	                           sub rsp, 0x20	      1873	prdbg.c	FUNCTION_53
0x40003aa	    0x64488b042528	                mov rax, qword fs:[0x28]	      1873	prdbg.c	FUNCTION_53
0x40003b3	      0x4889442418	             mov qword [rsp + 0x18], rax	      1873	prdbg.c	FUNCTION_53
0x40003b8	            0x31c0	                            xor eax, eax	      1873	prdbg.c	FUNCTION_53
0x40003ba	          0x8b4708	                mov eax, dword [rdi + 8]	       327	prdbg.c	FUNCTION_2	FOR_1
0x40003bd	            0x85c0	                           test eax, eax	       327	prdbg.c	FUNCTION_2	FOR_1
0x40003bf	            0x741d	                            je 0x40003de	       327	prdbg.c	FUNCTION_2	FOR_1
0x40003c1	     0xf1f80000000	                         nop dword [rax]	       327	prdbg.c	FUNCTION_2	FOR_1
0x40003c8	        0x488b7500	                    mov rsi, qword [rbp]	       328	prdbg.c	FUNCTION_2	CALL_1
0x40003cc	      0xbf20000000	                           mov edi, 0x20	       328	prdbg.c	FUNCTION_2	CALL_1
0x40003d1	          0x83c301	                              add ebx, 1	       327	prdbg.c	FUNCTION_2	FOR_1
0x40003d4	      0xe800000000	                          call 0x40003d9	       328	prdbg.c	FUNCTION_2	CALL_1
0x40003d9	          0x3b5d08	                cmp ebx, dword [rbp + 8]	       327	prdbg.c	FUNCTION_2	FOR_1
0x40003dc	            0x72ea	                            jb 0x40003c8	       327	prdbg.c	FUNCTION_2	FOR_1
0x40003de	          0x4889e6	                            mov rsi, rsp	       327	prdbg.c	FUNCTION_2	FOR_1
0x40003e1	          0x4c89f7	                            mov rdi, r14	       327	prdbg.c	FUNCTION_2	FOR_1
0x40003e4	      0xe887ffffff	               call sym.print_vma.part.0	       327	prdbg.c	FUNCTION_2	FOR_1
0x40003e9	        0x488b7d00	                    mov rdi, qword [rbp]	        97	stdio2.h	CALL_96
0x40003ed	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_96
0x40003f2	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_96
0x40003f4	          0x4989e1	                             mov r9, rsp	        97	stdio2.h	CALL_96
0x40003f7	          0x4d89e8	                             mov r8, r13	        97	stdio2.h	CALL_96
0x40003fa	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_96
0x40003fd	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_96
0x4000402	      0xe800000000	                          call 0x4000407	        97	stdio2.h	CALL_96
0x4000407	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1882	prdbg.c	FUNCTION_53
0x400040c	    0x644833142528	                xor rdx, qword fs:[0x28]	      1882	prdbg.c	FUNCTION_53
0x4000415	      0xb801000000	                              mov eax, 1	      1882	prdbg.c	FUNCTION_53
0x400041a	            0x750d	                           jne 0x4000429	      1882	prdbg.c	FUNCTION_53
0x400041c	        0x4883c420	                           add rsp, 0x20	      1882	prdbg.c	FUNCTION_53
0x4000420	              0x5b	                                 pop rbx	      1882	prdbg.c	FUNCTION_53
0x4000421	              0x5d	                                 pop rbp	      1882	prdbg.c	FUNCTION_53
0x4000422	            0x415c	                                 pop r12	      1882	prdbg.c	FUNCTION_53
0x4000424	            0x415d	                                 pop r13	      1882	prdbg.c	FUNCTION_53
0x4000426	            0x415e	                                 pop r14	      1882	prdbg.c	FUNCTION_53
0x4000428	              0xc3	                                     ret	      1882	prdbg.c	FUNCTION_53
0x4000429	      0xe800000000	                          call 0x400042e	      1882	prdbg.c	FUNCTION_53
tg_variable	SWITCH,1:WHILE,0:IF,6:FOR,0:ELSE,1:functions,0:CALL,5:DO,0	129
0x40008e0	            0x4156	                                push r14	      2593	prdbg.c	FUNCTION_77
0x40008e2	            0x4155	                                push r13	      2593	prdbg.c	FUNCTION_77
0x40008e4	          0x4989f6	                            mov r14, rsi	      2593	prdbg.c	FUNCTION_77
0x40008e7	            0x4154	                                push r12	      2593	prdbg.c	FUNCTION_77
0x40008e9	              0x55	                                push rbp	      2593	prdbg.c	FUNCTION_77
0x40008ea	          0x4189d5	                           mov r13d, edx	      2593	prdbg.c	FUNCTION_77
0x40008ed	              0x53	                                push rbx	      2593	prdbg.c	FUNCTION_77
0x40008ee	          0x4889fb	                            mov rbx, rdi	      2593	prdbg.c	FUNCTION_77
0x40008f1	        0x4883c710	                           add rdi, 0x10	      2593	prdbg.c	FUNCTION_77
0x40008f5	      0xe8e6fcffff	                call sym.pop_type.isra.3	      2597	prdbg.c	FUNCTION_77	CALL_1
0x40008fa	          0x4885c0	                           test rax, rax	      2598	prdbg.c	FUNCTION_77	IF_1
0x40008fd	     0xf848d010000	                            je 0x4000a90	      2598	prdbg.c	FUNCTION_77	IF_1
0x4000903	          0x4989c4	                            mov r12, rax	      2598	prdbg.c	FUNCTION_77	IF_1
0x4000906	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      2602	prdbg.c	FUNCTION_77	IF_2
0x400090a	          0x4885c0	                           test rax, rax	      2602	prdbg.c	FUNCTION_77	IF_2
0x400090d	     0xf84fd000000	                            je 0x4000a10	      2602	prdbg.c	FUNCTION_77	IF_2
0x4000913	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      2603	prdbg.c	FUNCTION_77	CALL_2
0x4000917	      0xba03000000	                              mov edx, 3	      2603	prdbg.c	FUNCTION_77	CALL_2
0x400091c	          0x4c89f6	                            mov rsi, r14	      2603	prdbg.c	FUNCTION_77	CALL_2
0x400091f	            0xffd0	                                call rax	      2603	prdbg.c	FUNCTION_77	CALL_2
0x4000921	          0x4885c0	                           test rax, rax	      2606	prdbg.c	FUNCTION_77	IF_3
0x4000924	          0x4889c5	                            mov rbp, rax	      2603	prdbg.c	FUNCTION_77	CALL_2
0x4000927	     0xf84e3000000	                            je 0x4000a10	      2606	prdbg.c	FUNCTION_77	IF_3
0x400092d	      0xbe00000000	                              mov esi, 0	      2609	prdbg.c	FUNCTION_77	IF_3	CALL_3
0x4000932	          0x4889c7	                            mov rdi, rax	      2609	prdbg.c	FUNCTION_77	IF_3	CALL_3
0x4000935	      0xe800000000	                          call 0x400093a	      2609	prdbg.c	FUNCTION_77	IF_3	CALL_3
0x400093a	          0x4885c0	                           test rax, rax	      2610	prdbg.c	FUNCTION_77	IF_3	IF_4
0x400093d	     0xf840d010000	                            je 0x4000a50	      2610	prdbg.c	FUNCTION_77	IF_3	IF_4
0x4000943	          0xc60000	                       mov byte [rax], 0	      2612	prdbg.c	FUNCTION_77	IF_3	IF_4
0x4000946	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	        97	stdio2.h	CALL_96
0x400094a	        0x488d4802	                      lea rcx, [rax + 2]	        97	stdio2.h	CALL_96
0x400094e	          0x488b3b	                    mov rdi, qword [rbx]	        97	stdio2.h	CALL_96
0x4000951	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_96
0x4000953	          0x4d89e1	                             mov r9, r12	        97	stdio2.h	CALL_96
0x4000956	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_96
0x400095b	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_96
0x4000960	      0xe800000000	                          call 0x4000965	        97	stdio2.h	CALL_96
0x4000965	        0x4183fd02	                             cmp r13d, 2	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4000969	     0xf8231010000	                            jb 0x4000aa0	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x400096f	        0x4183fd03	                             cmp r13d, 3	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4000973	          0x4989ee	                            mov r14, rbp	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4000976	            0x7678	                           jbe 0x40009f0	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4000978	        0x4183fd05	                             cmp r13d, 5	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x400097c	     0xf851e010000	                           jne 0x4000aa0	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4000982	          0x488b0b	                    mov rcx, qword [rbx]	        97	stdio2.h	CALL_96
0x4000985	      0xba0a000000	                            mov edx, 0xa	        97	stdio2.h	CALL_96
0x400098a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_96
0x400098f	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_96
0x4000994	      0xe800000000	                          call 0x4000999	        97	stdio2.h	CALL_96
0x4000999	          0x4d85f6	                           test r14, r14	      2636	prdbg.c	FUNCTION_77	IF_5
0x400099c	            0x7417	                            je 0x40009b5	      2636	prdbg.c	FUNCTION_77	IF_5
0x400099e	          0x488b3b	                    mov rdi, qword [rbx]	        97	stdio2.h	CALL_96
0x40009a1	          0x4c89f1	                            mov rcx, r14	        97	stdio2.h	CALL_96
0x40009a4	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_96
0x40009a9	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_96
0x40009ae	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_96
0x40009b0	      0xe800000000	                          call 0x40009b5	        97	stdio2.h	CALL_96
0x40009b5	          0x4885ed	                           test rbp, rbp	      2639	prdbg.c	FUNCTION_77	IF_6
0x40009b8	            0x7408	                            je 0x40009c2	      2639	prdbg.c	FUNCTION_77	IF_6
0x40009ba	          0x4889ef	                            mov rdi, rbp	      2640	prdbg.c	FUNCTION_77	CALL_4
0x40009bd	      0xe800000000	                          call 0x40009c2	      2640	prdbg.c	FUNCTION_77	CALL_4
0x40009c2	          0x488b33	                    mov rsi, qword [rbx]	        97	stdio2.h	CALL_96
0x40009c5	      0xbf0a000000	                            mov edi, 0xa	        97	stdio2.h	CALL_96
0x40009ca	      0xe800000000	                          call 0x40009cf	        97	stdio2.h	CALL_96
0x40009cf	          0x4c89e7	                            mov rdi, r12	      2644	prdbg.c	FUNCTION_77	CALL_5
0x40009d2	      0xe800000000	                          call 0x40009d7	      2644	prdbg.c	FUNCTION_77	CALL_5
0x40009d7	              0x5b	                                 pop rbx	      2647	prdbg.c	FUNCTION_77
0x40009d8	      0xb801000000	                              mov eax, 1	      2646	prdbg.c	FUNCTION_77
0x40009dd	              0x5d	                                 pop rbp	      2647	prdbg.c	FUNCTION_77
0x40009de	            0x415c	                                 pop r12	      2647	prdbg.c	FUNCTION_77
0x40009e0	            0x415d	                                 pop r13	      2647	prdbg.c	FUNCTION_77
0x40009e2	            0x415e	                                 pop r14	      2647	prdbg.c	FUNCTION_77
0x40009e4	              0xc3	                                     ret	      2647	prdbg.c	FUNCTION_77
0x40009e5	          0x4531f6	                          xor r14d, r14d	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x40009e8	            0x31ed	                            xor ebp, ebp	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x40009ea	    0x660f1f440000	                    nop word [rax + rax]	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x40009f0	          0x488b0b	                    mov rcx, qword [rbx]	        97	stdio2.h	CALL_96
0x40009f3	      0xba06000000	                              mov edx, 6	        97	stdio2.h	CALL_96
0x40009f8	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_96
0x40009fd	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_96
0x4000a02	      0xe800000000	                          call 0x4000a07	        97	stdio2.h	CALL_96
0x4000a07	            0xeb90	                           jmp 0x4000999	        97	stdio2.h	CALL_96
0x4000a09	     0xf1f80000000	                         nop dword [rax]	        97	stdio2.h	CALL_96
0x4000a10	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	        97	stdio2.h	CALL_96
0x4000a14	          0x488b3b	                    mov rdi, qword [rbx]	        97	stdio2.h	CALL_96
0x4000a17	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_96
0x4000a19	          0x4d89e1	                             mov r9, r12	        97	stdio2.h	CALL_96
0x4000a1c	          0x4c89f1	                            mov rcx, r14	        97	stdio2.h	CALL_96
0x4000a1f	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_96
0x4000a24	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_96
0x4000a29	      0xe800000000	                          call 0x4000a2e	        97	stdio2.h	CALL_96
0x4000a2e	        0x4183fd02	                             cmp r13d, 2	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4000a32	            0x728e	                            jb 0x40009c2	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4000a34	        0x4183fd03	                             cmp r13d, 3	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4000a38	            0x76ab	                           jbe 0x40009e5	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4000a3a	        0x4183fd05	                             cmp r13d, 5	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4000a3e	            0x7582	                           jne 0x40009c2	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4000a40	          0x4531f6	                          xor r14d, r14d	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4000a43	            0x31ed	                            xor ebp, ebp	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4000a45	      0xe938ffffff	                           jmp 0x4000982	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4000a4a	    0x660f1f440000	                    nop word [rax + rax]	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4000a50	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	        97	stdio2.h	CALL_96
0x4000a54	          0x488b3b	                    mov rdi, qword [rbx]	        97	stdio2.h	CALL_96
0x4000a57	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_96
0x4000a59	          0x4d89e1	                             mov r9, r12	        97	stdio2.h	CALL_96
0x4000a5c	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_96
0x4000a5f	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_96
0x4000a64	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_96
0x4000a69	      0xe800000000	                          call 0x4000a6e	        97	stdio2.h	CALL_96
0x4000a6e	        0x4183fd02	                             cmp r13d, 2	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4000a72	     0xf8242ffffff	                            jb 0x40009ba	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4000a78	        0x4183fd03	                             cmp r13d, 3	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4000a7c	            0x762a	                           jbe 0x4000aa8	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4000a7e	        0x4183fd05	                             cmp r13d, 5	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4000a82	     0xf8532ffffff	                           jne 0x40009ba	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4000a88	          0x4531f6	                          xor r14d, r14d	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4000a8b	      0xe9f2feffff	                           jmp 0x4000982	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4000a90	              0x5b	                                 pop rbx	      2647	prdbg.c	FUNCTION_77
0x4000a91	            0x31c0	                            xor eax, eax	      2599	prdbg.c	FUNCTION_77	IF_1
0x4000a93	              0x5d	                                 pop rbp	      2647	prdbg.c	FUNCTION_77
0x4000a94	            0x415c	                                 pop r12	      2647	prdbg.c	FUNCTION_77
0x4000a96	            0x415d	                                 pop r13	      2647	prdbg.c	FUNCTION_77
0x4000a98	            0x415e	                                 pop r14	      2647	prdbg.c	FUNCTION_77
0x4000a9a	              0xc3	                                     ret	      2647	prdbg.c	FUNCTION_77
0x4000a9b	       0xf1f440000	                   nop dword [rax + rax]	      2647	prdbg.c	FUNCTION_77
0x4000aa0	          0x4989ee	                            mov r14, rbp	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4000aa3	      0xe9f6feffff	                           jmp 0x400099e	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4000aa8	          0x4531f6	                          xor r14d, r14d	      2623	prdbg.c	FUNCTION_77	SWITCH_1
0x4000aab	      0xe940ffffff	                           jmp 0x40009f0	      2623	prdbg.c	FUNCTION_77	SWITCH_1
tg_float_constant	SWITCH,0:WHILE,0:IF,0:FOR,0:ELSE,0:functions,0:CALL,1:DO,0	32
0x40001b0	            0x4154	                                push r12	      2556	prdbg.c	FUNCTION_75
0x40001b2	              0x55	                                push rbp	      2556	prdbg.c	FUNCTION_75
0x40001b3	          0x4989f4	                            mov r12, rsi	      2556	prdbg.c	FUNCTION_75
0x40001b6	              0x53	                                push rbx	      2556	prdbg.c	FUNCTION_75
0x40001b7	          0x4889fd	                            mov rbp, rdi	      2556	prdbg.c	FUNCTION_75
0x40001ba	        0x4883ec10	                           sub rsp, 0x10	      2556	prdbg.c	FUNCTION_75
0x40001be	          0x8b4708	                mov eax, dword [rdi + 8]	       327	prdbg.c	FUNCTION_2	FOR_1
0x40001c1	    0xf20f11442408	             movsd qword [rsp + 8], xmm0	      2556	prdbg.c	FUNCTION_75
0x40001c7	            0x85c0	                           test eax, eax	       327	prdbg.c	FUNCTION_2	FOR_1
0x40001c9	            0x741b	                            je 0x40001e6	       327	prdbg.c	FUNCTION_2	FOR_1
0x40001cb	            0x31db	                            xor ebx, ebx	       327	prdbg.c	FUNCTION_2	FOR_1
0x40001cd	           0xf1f00	                         nop dword [rax]	       327	prdbg.c	FUNCTION_2	FOR_1
0x40001d0	        0x488b7500	                    mov rsi, qword [rbp]	       328	prdbg.c	FUNCTION_2	CALL_1
0x40001d4	      0xbf20000000	                           mov edi, 0x20	       328	prdbg.c	FUNCTION_2	CALL_1
0x40001d9	          0x83c301	                              add ebx, 1	       327	prdbg.c	FUNCTION_2	FOR_1
0x40001dc	      0xe800000000	                          call 0x40001e1	       328	prdbg.c	FUNCTION_2	CALL_1
0x40001e1	          0x3b5d08	                cmp ebx, dword [rbp + 8]	       327	prdbg.c	FUNCTION_2	FOR_1
0x40001e4	            0x72ea	                            jb 0x40001d0	       327	prdbg.c	FUNCTION_2	FOR_1
0x40001e6	        0x4c8b4520	              mov r8, qword [rbp + 0x20]	        97	stdio2.h	CALL_96
0x40001ea	        0x488b7d00	                    mov rdi, qword [rbp]	        97	stdio2.h	CALL_96
0x40001ee	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_96
0x40001f1	    0xf20f10442408	            movsd xmm0, qword [rsp + 8] 	        97	stdio2.h	CALL_96
0x40001f7	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_96
0x40001fc	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_96
0x4000201	      0xb801000000	                              mov eax, 1	        97	stdio2.h	CALL_96
0x4000206	      0xe800000000	                          call 0x400020b	        97	stdio2.h	CALL_96
0x400020b	        0x4883c410	                           add rsp, 0x10	      2563	prdbg.c	FUNCTION_75
0x400020f	      0xb801000000	                              mov eax, 1	      2563	prdbg.c	FUNCTION_75
0x4000214	              0x5b	                                 pop rbx	      2563	prdbg.c	FUNCTION_75
0x4000215	              0x5d	                                 pop rbp	      2563	prdbg.c	FUNCTION_75
0x4000216	            0x415c	                                 pop r12	      2563	prdbg.c	FUNCTION_75
0x4000218	              0xc3	                                     ret	      2563	prdbg.c	FUNCTION_75
pr_enum_type	SWITCH,0:WHILE,0:IF,11:FOR,1:ELSE,1:functions,0:CALL,11:DO,0	116
0x4003400	            0x4157	                                push r15	       638	prdbg.c	FUNCTION_19
0x4003402	            0x4156	                                push r14	       638	prdbg.c	FUNCTION_19
0x4003404	          0x4989cf	                            mov r15, rcx	       638	prdbg.c	FUNCTION_19
0x4003407	            0x4155	                                push r13	       638	prdbg.c	FUNCTION_19
0x4003409	            0x4154	                                push r12	       638	prdbg.c	FUNCTION_19
0x400340b	          0x4989d6	                            mov r14, rdx	       638	prdbg.c	FUNCTION_19
0x400340e	              0x55	                                push rbp	       638	prdbg.c	FUNCTION_19
0x400340f	        0x488d6f10	                   lea rbp, [rdi + 0x10]	       638	prdbg.c	FUNCTION_19
0x4003413	              0x53	                                push rbx	       638	prdbg.c	FUNCTION_19
0x4003414	          0x4889f3	                            mov rbx, rsi	       638	prdbg.c	FUNCTION_19
0x4003417	      0xbe00000000	                              mov esi, 0	       643	prdbg.c	FUNCTION_19	IF_1	CALL_1
0x400341c	        0x4883ec38	                           sub rsp, 0x38	       638	prdbg.c	FUNCTION_19
0x4003420	          0x4889ef	                            mov rdi, rbp	       643	prdbg.c	FUNCTION_19	IF_1	CALL_1
0x4003423	    0x64488b042528	                mov rax, qword fs:[0x28]	       638	prdbg.c	FUNCTION_19
0x400342c	      0x4889442428	             mov qword [rsp + 0x28], rax	       638	prdbg.c	FUNCTION_19
0x4003431	            0x31c0	                            xor eax, eax	       638	prdbg.c	FUNCTION_19
0x4003433	      0xe8a8f8ffff	              call sym.push_type.isra.30	       643	prdbg.c	FUNCTION_19	IF_1	CALL_1
0x4003438	            0x85c0	                           test eax, eax	       643	prdbg.c	FUNCTION_19	IF_1	CALL_1
0x400343a	            0x7414	                            je 0x4003450	       643	prdbg.c	FUNCTION_19	IF_1	CALL_1
0x400343c	          0x4885db	                           test rbx, rbx	       645	prdbg.c	FUNCTION_19	IF_2
0x400343f	            0x7448	                            je 0x4003489	       645	prdbg.c	FUNCTION_19	IF_2
0x4003441	          0x4889de	                            mov rsi, rbx	       647	prdbg.c	FUNCTION_19	IF_2	IF_3	CALL_2
0x4003444	          0x4889ef	                            mov rdi, rbp	       647	prdbg.c	FUNCTION_19	IF_2	IF_3	CALL_2
0x4003447	      0xe824daffff	            call sym.append_type.isra.14	       647	prdbg.c	FUNCTION_19	IF_2	IF_3	CALL_2
0x400344c	            0x85c0	                           test eax, eax	       647	prdbg.c	FUNCTION_19	IF_2	IF_3	CALL_2
0x400344e	            0x7528	                           jne 0x4003478	       647	prdbg.c	FUNCTION_19	IF_2	IF_3	CALL_2
0x4003450	            0x31c0	                            xor eax, eax	       680	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11
0x4003452	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       689	prdbg.c	FUNCTION_19
0x4003457	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       689	prdbg.c	FUNCTION_19
0x4003460	     0xf853c010000	                           jne 0x40035a2	       689	prdbg.c	FUNCTION_19
0x4003466	        0x4883c438	                           add rsp, 0x38	       689	prdbg.c	FUNCTION_19
0x400346a	              0x5b	                                 pop rbx	       689	prdbg.c	FUNCTION_19
0x400346b	              0x5d	                                 pop rbp	       689	prdbg.c	FUNCTION_19
0x400346c	            0x415c	                                 pop r12	       689	prdbg.c	FUNCTION_19
0x400346e	            0x415d	                                 pop r13	       689	prdbg.c	FUNCTION_19
0x4003470	            0x415e	                                 pop r14	       689	prdbg.c	FUNCTION_19
0x4003472	            0x415f	                                 pop r15	       689	prdbg.c	FUNCTION_19
0x4003474	              0xc3	                                     ret	       689	prdbg.c	FUNCTION_19
0x4003475	           0xf1f00	                         nop dword [rax]	       689	prdbg.c	FUNCTION_19
0x4003478	      0xbe00000000	                              mov esi, 0	       648	prdbg.c	FUNCTION_19	IF_2	IF_3	CALL_3
0x400347d	          0x4889ef	                            mov rdi, rbp	       648	prdbg.c	FUNCTION_19	IF_2	IF_3	CALL_3
0x4003480	      0xe8ebd9ffff	            call sym.append_type.isra.14	       648	prdbg.c	FUNCTION_19	IF_2	IF_3	CALL_3
0x4003485	            0x85c0	                           test eax, eax	       648	prdbg.c	FUNCTION_19	IF_2	IF_3	CALL_3
0x4003487	            0x74c7	                            je 0x4003450	       648	prdbg.c	FUNCTION_19	IF_2	IF_3	CALL_3
0x4003489	      0xbe00000000	                              mov esi, 0	       651	prdbg.c	FUNCTION_19	IF_4	CALL_4
0x400348e	          0x4889ef	                            mov rdi, rbp	       651	prdbg.c	FUNCTION_19	IF_4	CALL_4
0x4003491	      0xe8dad9ffff	            call sym.append_type.isra.14	       651	prdbg.c	FUNCTION_19	IF_4	CALL_4
0x4003496	            0x85c0	                           test eax, eax	       651	prdbg.c	FUNCTION_19	IF_4	CALL_4
0x4003498	            0x74b6	                            je 0x4003450	       651	prdbg.c	FUNCTION_19	IF_4	CALL_4
0x400349a	          0x4d85f6	                           test r14, r14	       654	prdbg.c	FUNCTION_19	IF_5
0x400349d	     0xf84d8000000	                            je 0x400357b	       654	prdbg.c	FUNCTION_19	IF_5
0x40034a3	          0x498b36	                    mov rsi, qword [r14]	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x40034a6	          0x4885f6	                           test rsi, rsi	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x40034a9	     0xf84e1000000	                            je 0x4003590	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x40034af	            0x31db	                            xor ebx, ebx	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x40034b1	          0x4531ed	                          xor r13d, r13d	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x40034b4	          0x4531e4	                          xor r12d, r12d	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x40034b7	    0x660f1f840000	                    nop word [rax + rax]	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x40034c0	          0x4889ef	                            mov rdi, rbp	       670	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_9	CALL_7
0x40034c3	      0xe8a8d9ffff	            call sym.append_type.isra.14	       670	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_9	CALL_7
0x40034c8	            0x85c0	                           test eax, eax	       670	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_9	CALL_7
0x40034ca	            0x7484	                            je 0x4003450	       670	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_9	CALL_7
0x40034cc	          0x4c01fb	                            add rbx, r15	       673	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10
0x40034cf	          0x4c8b03	                     mov r8, qword [rbx]	       673	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10
0x40034d2	          0x4d39e8	                             cmp r8, r13	       673	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10
0x40034d5	            0x7448	                            je 0x400351f	       673	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10
0x40034d7	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        33	stdio2.h	FUNCTION_96	CALL_1
0x40034dc	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_96	CALL_1
0x40034e1	      0xba16000000	                           mov edx, 0x16	        33	stdio2.h	FUNCTION_96	CALL_1
0x40034e6	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_96	CALL_1
0x40034eb	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_96	CALL_1
0x40034ed	      0xe800000000	                          call 0x40034f2	        33	stdio2.h	FUNCTION_96	CALL_1
0x40034f2	      0xbe00000000	                              mov esi, 0	       678	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11	CALL_9
0x40034f7	          0x4889ef	                            mov rdi, rbp	       678	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11	CALL_9
0x40034fa	      0xe871d9ffff	            call sym.append_type.isra.14	       678	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11	CALL_9
0x40034ff	            0x85c0	                           test eax, eax	       678	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11	CALL_9
0x4003501	     0xf8449ffffff	                            je 0x4003450	       678	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11	CALL_9
0x4003507	      0x488d742410	                   lea rsi, [rsp + 0x10]	       679	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11	CALL_10
0x400350c	          0x4889ef	                            mov rdi, rbp	       679	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11	CALL_10
0x400350f	      0xe85cd9ffff	            call sym.append_type.isra.14	       679	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11	CALL_10
0x4003514	            0x85c0	                           test eax, eax	       679	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11	CALL_10
0x4003516	     0xf8434ffffff	                            je 0x4003450	       679	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10	IF_11	CALL_10
0x400351c	          0x4c8b2b	                    mov r13, qword [rbx]	       681	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_10
0x400351f	      0x418d5c2401	                      lea ebx, [r12 + 1]	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x4003524	        0x4983c501	                              add r13, 1	       684	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x4003528	          0x4989dc	                            mov r12, rbx	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x400352b	        0x48c1e303	                              shl rbx, 3	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x400352f	        0x498d141e	                    lea rdx, [r14 + rbx]	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x4003533	          0x488b32	                    mov rsi, qword [rdx]	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x4003536	          0x4885f6	                           test rsi, rsi	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x4003539	            0x7455	                            je 0x4003590	       662	prdbg.c	FUNCTION_19	ELSE_1	FOR_1
0x400353b	          0x4585e4	                         test r12d, r12d	       664	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_7
0x400353e	      0x4889542408	                mov qword [rsp + 8], rdx	       664	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_7
0x4003543	     0xf8477ffffff	                            je 0x40034c0	       664	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_7
0x4003549	      0xbe00000000	                              mov esi, 0	       666	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_7	IF_8	CALL_6
0x400354e	          0x4889ef	                            mov rdi, rbp	       666	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_7	IF_8	CALL_6
0x4003551	      0xe81ad9ffff	            call sym.append_type.isra.14	       666	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_7	IF_8	CALL_6
0x4003556	            0x85c0	                           test eax, eax	       666	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_7	IF_8	CALL_6
0x4003558	     0xf84f2feffff	                            je 0x4003450	       666	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_7	IF_8	CALL_6
0x400355e	      0x488b542408	                mov rdx, qword [rsp + 8]	       666	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_7	IF_8	CALL_6
0x4003563	          0x4889ef	                            mov rdi, rbp	       670	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_9	CALL_7
0x4003566	          0x488b32	                    mov rsi, qword [rdx]	       670	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_9	CALL_7
0x4003569	      0xe802d9ffff	            call sym.append_type.isra.14	       670	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_9	CALL_7
0x400356e	            0x85c0	                           test eax, eax	       670	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_9	CALL_7
0x4003570	     0xf8556ffffff	                           jne 0x40034cc	       670	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_9	CALL_7
0x4003576	      0xe9d5feffff	                           jmp 0x4003450	       670	prdbg.c	FUNCTION_19	ELSE_1	FOR_1	IF_9	CALL_7
0x400357b	      0xbe00000000	                              mov esi, 0	       656	prdbg.c	FUNCTION_19	IF_5	IF_6	CALL_5
0x4003580	          0x4889ef	                            mov rdi, rbp	       656	prdbg.c	FUNCTION_19	IF_5	IF_6	CALL_5
0x4003583	      0xe8e8d8ffff	            call sym.append_type.isra.14	       656	prdbg.c	FUNCTION_19	IF_5	IF_6	CALL_5
0x4003588	            0x85c0	                           test eax, eax	       656	prdbg.c	FUNCTION_19	IF_5	IF_6	CALL_5
0x400358a	     0xf84c0feffff	                            je 0x4003450	       656	prdbg.c	FUNCTION_19	IF_5	IF_6	CALL_5
0x4003590	      0xbe00000000	                              mov esi, 0	       688	prdbg.c	FUNCTION_19	CALL_11
0x4003595	          0x4889ef	                            mov rdi, rbp	       688	prdbg.c	FUNCTION_19	CALL_11
0x4003598	      0xe8d3d8ffff	            call sym.append_type.isra.14	       688	prdbg.c	FUNCTION_19	CALL_11
0x400359d	      0xe9b0feffff	                           jmp 0x4003452	       688	prdbg.c	FUNCTION_19	CALL_11
0x40035a2	      0xe800000000	                          call 0x40035a7	       689	prdbg.c	FUNCTION_19
pr_start_class_type	SWITCH,0:WHILE,0:IF,19:FOR,0:ELSE,2:functions,0:CALL,16:DO,0	191
0x4002ed0	            0x4157	                                push r15	      1218	prdbg.c	FUNCTION_34
0x4002ed2	            0x4156	                                push r14	      1218	prdbg.c	FUNCTION_34
0x4002ed4	          0x4589c7	                           mov r15d, r8d	      1218	prdbg.c	FUNCTION_34
0x4002ed7	            0x4155	                                push r13	      1218	prdbg.c	FUNCTION_34
0x4002ed9	            0x4154	                                push r12	      1218	prdbg.c	FUNCTION_34
0x4002edb	          0x4989f4	                            mov r12, rsi	      1218	prdbg.c	FUNCTION_34
0x4002ede	              0x55	                                push rbp	      1218	prdbg.c	FUNCTION_34
0x4002edf	              0x53	                                push rbx	      1218	prdbg.c	FUNCTION_34
0x4002ee0	          0x4589cd	                           mov r13d, r9d	      1218	prdbg.c	FUNCTION_34
0x4002ee3	          0x4889fb	                            mov rbx, rdi	      1218	prdbg.c	FUNCTION_34
0x4002ee6	        0x4883ec48	                           sub rsp, 0x48	      1218	prdbg.c	FUNCTION_34
0x4002eea	        0x83470802	                  add dword [rdi + 8], 2	      1222	prdbg.c	FUNCTION_34
0x4002eee	    0x8bb424800000	            mov esi, dword [rsp + 0x80] 	      1224	prdbg.c	FUNCTION_34	IF_1
0x4002ef5	        0x89542408	                mov dword [rsp + 8], edx	      1218	prdbg.c	FUNCTION_34
0x4002ef9	    0x64488b042528	                mov rax, qword fs:[0x28]	      1218	prdbg.c	FUNCTION_34
0x4002f02	      0x4889442438	             mov qword [rsp + 0x38], rax	      1218	prdbg.c	FUNCTION_34
0x4002f07	            0x31c0	                            xor eax, eax	      1218	prdbg.c	FUNCTION_34
0x4002f09	          0x4585c9	                           test r9d, r9d	      1224	prdbg.c	FUNCTION_34	IF_1
0x4002f0c	        0x410f95c6	                              setne r14b	      1224	prdbg.c	FUNCTION_34	IF_1
0x4002f10	            0x85f6	                           test esi, esi	      1224	prdbg.c	FUNCTION_34	IF_1
0x4002f12	            0x7509	                           jne 0x4002f1d	      1224	prdbg.c	FUNCTION_34	IF_1
0x4002f14	          0x4584f6	                         test r14b, r14b	      1224	prdbg.c	FUNCTION_34	IF_1
0x4002f17	     0xf85fb000000	                           jne 0x4003018	      1224	prdbg.c	FUNCTION_34	IF_1
0x4002f1d	        0x488d6b10	                   lea rbp, [rbx + 0x10]	      1224	prdbg.c	FUNCTION_34	IF_1
0x4002f21	    0x48c704240000	                      mov qword [rsp], 0	      1220	prdbg.c	FUNCTION_34
0x4002f29	            0x85c9	                           test ecx, ecx	      1231	prdbg.c	FUNCTION_34	IF_3	CALL_2
0x4002f2b	      0xb800000000	                              mov eax, 0	      1231	prdbg.c	FUNCTION_34	IF_3	CALL_2
0x4002f30	      0xbe00000000	                              mov esi, 0	      1231	prdbg.c	FUNCTION_34	IF_3	CALL_2
0x4002f35	        0x480f44f0	                          cmove rsi, rax	      1231	prdbg.c	FUNCTION_34	IF_3	CALL_2
0x4002f39	          0x4889ef	                            mov rdi, rbp	      1231	prdbg.c	FUNCTION_34	IF_3	CALL_2
0x4002f3c	      0xe89ffdffff	              call sym.push_type.isra.30	      1231	prdbg.c	FUNCTION_34	IF_3	CALL_2
0x4002f41	            0x85c0	                           test eax, eax	      1231	prdbg.c	FUNCTION_34	IF_3	CALL_2
0x4002f43	     0xf84a7000000	                            je 0x4002ff0	      1231	prdbg.c	FUNCTION_34	IF_3	CALL_2
0x4002f49	          0x4d85e4	                           test r12, r12	      1233	prdbg.c	FUNCTION_34	IF_4
0x4002f4c	     0xf846e010000	                            je 0x40030c0	      1233	prdbg.c	FUNCTION_34	IF_4
0x4002f52	          0x4c89e6	                            mov rsi, r12	      1235	prdbg.c	FUNCTION_34	IF_4	IF_5	CALL_3
0x4002f55	          0x4889ef	                            mov rdi, rbp	      1235	prdbg.c	FUNCTION_34	IF_4	IF_5	CALL_3
0x4002f58	      0xe813dfffff	            call sym.append_type.isra.14	      1235	prdbg.c	FUNCTION_34	IF_4	IF_5	CALL_3
0x4002f5d	            0x85c0	                           test eax, eax	      1235	prdbg.c	FUNCTION_34	IF_4	IF_5	CALL_3
0x4002f5f	     0xf848b000000	                            je 0x4002ff0	      1235	prdbg.c	FUNCTION_34	IF_4	IF_5	CALL_3
0x4002f65	      0xbe00000000	                              mov esi, 0	      1247	prdbg.c	FUNCTION_34	IF_7	CALL_5
0x4002f6a	          0x4889ef	                            mov rdi, rbp	      1247	prdbg.c	FUNCTION_34	IF_7	CALL_5
0x4002f6d	      0xe8fedeffff	            call sym.append_type.isra.14	      1247	prdbg.c	FUNCTION_34	IF_7	CALL_5
0x4002f72	            0x85c0	                           test eax, eax	      1247	prdbg.c	FUNCTION_34	IF_7	CALL_5
0x4002f74	            0x747a	                            je 0x4002ff0	      1247	prdbg.c	FUNCTION_34	IF_7	CALL_5
0x4002f76	          0x4585ff	                         test r15d, r15d	      1249	prdbg.c	FUNCTION_34	IF_8
0x4002f79	     0xf85c1000000	                           jne 0x4003040	      1249	prdbg.c	FUNCTION_34	IF_8
0x4002f7f	          0x4584f6	                         test r14b, r14b	      1249	prdbg.c	FUNCTION_34	IF_8
0x4002f82	     0xf85b8000000	                           jne 0x4003040	      1249	prdbg.c	FUNCTION_34	IF_8
0x4002f88	    0x8b8c24800000	            mov ecx, dword [rsp + 0x80] 	      1249	prdbg.c	FUNCTION_34	IF_8
0x4002f8f	            0x85c9	                           test ecx, ecx	      1249	prdbg.c	FUNCTION_34	IF_8
0x4002f91	     0xf85a9000000	                           jne 0x4003040	      1249	prdbg.c	FUNCTION_34	IF_8
0x4002f97	          0x4d85e4	                           test r12, r12	      1249	prdbg.c	FUNCTION_34	IF_8
0x4002f9a	     0xf85a0000000	                           jne 0x4003040	      1249	prdbg.c	FUNCTION_34	IF_8
0x4002fa0	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1294	prdbg.c	FUNCTION_34
0x4002fa4	      0xbe00000000	                              mov esi, 0	      1296	prdbg.c	FUNCTION_34	CALL_15
0x4002fa9	          0x4889ef	                            mov rdi, rbp	      1296	prdbg.c	FUNCTION_34	CALL_15
0x4002fac	    0xc74010020000	               mov dword [rax + 0x10], 2	      1294	prdbg.c	FUNCTION_34
0x4002fb3	      0xe8b8deffff	            call sym.append_type.isra.14	      1296	prdbg.c	FUNCTION_34	CALL_15
0x4002fb8	            0x85c0	                           test eax, eax	      1297	prdbg.c	FUNCTION_34	CALL_16
0x4002fba	            0x7434	                            je 0x4002ff0	      1297	prdbg.c	FUNCTION_34	CALL_16
0x4002fbc	          0x8b4308	                mov eax, dword [rbx + 8]	       461	prdbg.c	FUNCTION_8	FOR_1
0x4002fbf	          0x4531e4	                          xor r12d, r12d	       461	prdbg.c	FUNCTION_8	FOR_1
0x4002fc2	            0x85c0	                           test eax, eax	       461	prdbg.c	FUNCTION_8	FOR_1
0x4002fc4	            0x7518	                           jne 0x4002fde	       461	prdbg.c	FUNCTION_8	FOR_1
0x4002fc6	      0xe975010000	                           jmp 0x4003140	       461	prdbg.c	FUNCTION_8	FOR_1
0x4002fcb	       0xf1f440000	                   nop dword [rax + rax]	       461	prdbg.c	FUNCTION_8	FOR_1
0x4002fd0	        0x4183c401	                             add r12d, 1	       461	prdbg.c	FUNCTION_8	FOR_1
0x4002fd4	        0x443b6308	               cmp r12d, dword [rbx + 8]	       461	prdbg.c	FUNCTION_8	FOR_1
0x4002fd8	     0xf8362010000	                           jae 0x4003140	       461	prdbg.c	FUNCTION_8	FOR_1
0x4002fde	      0xbe00000000	                              mov esi, 0	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4002fe3	          0x4889ef	                            mov rdi, rbp	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4002fe6	      0xe885deffff	            call sym.append_type.isra.14	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4002feb	            0x85c0	                           test eax, eax	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4002fed	            0x75e1	                           jne 0x4002fd0	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4002fef	              0x90	                                     nop	       463	prdbg.c	FUNCTION_8	FOR_1	IF_1	CALL_1
0x4002ff0	            0x31c0	                            xor eax, eax	      1261	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11
0x4002ff2	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      1298	prdbg.c	FUNCTION_34
0x4002ff7	    0x644833142528	                xor rdx, qword fs:[0x28]	      1298	prdbg.c	FUNCTION_34
0x4003000	     0xf85c5010000	                           jne 0x40031cb	      1298	prdbg.c	FUNCTION_34
0x4003006	        0x4883c448	                           add rsp, 0x48	      1298	prdbg.c	FUNCTION_34
0x400300a	              0x5b	                                 pop rbx	      1298	prdbg.c	FUNCTION_34
0x400300b	              0x5d	                                 pop rbp	      1298	prdbg.c	FUNCTION_34
0x400300c	            0x415c	                                 pop r12	      1298	prdbg.c	FUNCTION_34
0x400300e	            0x415d	                                 pop r13	      1298	prdbg.c	FUNCTION_34
0x4003010	            0x415e	                                 pop r14	      1298	prdbg.c	FUNCTION_34
0x4003012	            0x415f	                                 pop r15	      1298	prdbg.c	FUNCTION_34
0x4003014	              0xc3	                                     ret	      1298	prdbg.c	FUNCTION_34
0x4003015	           0xf1f00	                         nop dword [rax]	      1298	prdbg.c	FUNCTION_34
0x4003018	        0x488d6f10	                   lea rbp, [rdi + 0x10]	      1298	prdbg.c	FUNCTION_34
0x400301c	        0x894c240c	              mov dword [rsp + 0xc], ecx	      1298	prdbg.c	FUNCTION_34
0x4003020	          0x4889ef	                            mov rdi, rbp	      1226	prdbg.c	FUNCTION_34	IF_1	CALL_1
0x4003023	      0xe8b8d5ffff	                call sym.pop_type.isra.3	      1226	prdbg.c	FUNCTION_34	IF_1	CALL_1
0x4003028	          0x4885c0	                           test rax, rax	      1227	prdbg.c	FUNCTION_34	IF_1	IF_2
0x400302b	        0x48890424	                    mov qword [rsp], rax	      1226	prdbg.c	FUNCTION_34	IF_1	CALL_1
0x400302f	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      1227	prdbg.c	FUNCTION_34	IF_1	IF_2
0x4003033	     0xf85f0feffff	                           jne 0x4002f29	      1227	prdbg.c	FUNCTION_34	IF_1	IF_2
0x4003039	            0xebb5	                           jmp 0x4002ff0	      1227	prdbg.c	FUNCTION_34	IF_1	IF_2
0x400303b	       0xf1f440000	                   nop dword [rax + rax]	      1227	prdbg.c	FUNCTION_34	IF_1	IF_2
0x4003040	      0xbe00000000	                              mov esi, 0	      1251	prdbg.c	FUNCTION_34	IF_8	IF_9	CALL_6
0x4003045	          0x4889ef	                            mov rdi, rbp	      1251	prdbg.c	FUNCTION_34	IF_8	IF_9	CALL_6
0x4003048	      0xe823deffff	            call sym.append_type.isra.14	      1251	prdbg.c	FUNCTION_34	IF_8	IF_9	CALL_6
0x400304d	            0x85c0	                           test eax, eax	      1251	prdbg.c	FUNCTION_34	IF_8	IF_9	CALL_6
0x400304f	            0x749f	                            je 0x4002ff0	      1251	prdbg.c	FUNCTION_34	IF_8	IF_9	CALL_6
0x4003051	          0x4585ff	                         test r15d, r15d	      1254	prdbg.c	FUNCTION_34	IF_8	IF_10
0x4003054	     0xf85f6000000	                           jne 0x4003150	      1254	prdbg.c	FUNCTION_34	IF_8	IF_10
0x400305a	          0x4585ed	                         test r13d, r13d	      1264	prdbg.c	FUNCTION_34	IF_8	IF_12
0x400305d	     0xf859d000000	                           jne 0x4003100	      1264	prdbg.c	FUNCTION_34	IF_8	IF_12
0x4003063	          0x4d85e4	                           test r12, r12	      1281	prdbg.c	FUNCTION_34	IF_8	IF_17
0x4003066	            0x7435	                            je 0x400309d	      1281	prdbg.c	FUNCTION_34	IF_8	IF_17
0x4003068	      0x448b442408	                mov r8d, dword [rsp + 8]	        33	stdio2.h	FUNCTION_96	CALL_1
0x400306d	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        33	stdio2.h	FUNCTION_96	CALL_1
0x4003072	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_96	CALL_1
0x4003077	      0xba1e000000	                           mov edx, 0x1e	        33	stdio2.h	FUNCTION_96	CALL_1
0x400307c	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_96	CALL_1
0x4003081	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_96	CALL_1
0x4003083	      0xe800000000	                          call 0x4003088	        33	stdio2.h	FUNCTION_96	CALL_1
0x4003088	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1286	prdbg.c	FUNCTION_34	IF_8	IF_17	IF_18	CALL_13
0x400308d	          0x4889ef	                            mov rdi, rbp	      1286	prdbg.c	FUNCTION_34	IF_8	IF_17	IF_18	CALL_13
0x4003090	      0xe8dbddffff	            call sym.append_type.isra.14	      1286	prdbg.c	FUNCTION_34	IF_8	IF_17	IF_18	CALL_13
0x4003095	            0x85c0	                           test eax, eax	      1286	prdbg.c	FUNCTION_34	IF_8	IF_17	IF_18	CALL_13
0x4003097	     0xf8455ffffff	                            je 0x4002ff2	      1286	prdbg.c	FUNCTION_34	IF_8	IF_17	IF_18	CALL_13
0x400309d	      0xbe00000000	                              mov esi, 0	      1290	prdbg.c	FUNCTION_34	IF_8	IF_19	CALL_14
0x40030a2	          0x4889ef	                            mov rdi, rbp	      1290	prdbg.c	FUNCTION_34	IF_8	IF_19	CALL_14
0x40030a5	      0xe8c6ddffff	            call sym.append_type.isra.14	      1290	prdbg.c	FUNCTION_34	IF_8	IF_19	CALL_14
0x40030aa	            0x85c0	                           test eax, eax	      1290	prdbg.c	FUNCTION_34	IF_8	IF_19	CALL_14
0x40030ac	     0xf85eefeffff	                           jne 0x4002fa0	      1290	prdbg.c	FUNCTION_34	IF_8	IF_19	CALL_14
0x40030b2	      0xe939ffffff	                           jmp 0x4002ff0	      1290	prdbg.c	FUNCTION_34	IF_8	IF_19	CALL_14
0x40030b7	    0x660f1f840000	                    nop word [rax + rax]	      1290	prdbg.c	FUNCTION_34	IF_8	IF_19	CALL_14
0x40030c0	      0x448b442408	                mov r8d, dword [rsp + 8]	        33	stdio2.h	FUNCTION_96	CALL_1
0x40030c5	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        33	stdio2.h	FUNCTION_96	CALL_1
0x40030ca	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_96	CALL_1
0x40030cf	      0xba14000000	                           mov edx, 0x14	        33	stdio2.h	FUNCTION_96	CALL_1
0x40030d4	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_96	CALL_1
0x40030d9	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_96	CALL_1
0x40030db	      0xe800000000	                          call 0x40030e0	        33	stdio2.h	FUNCTION_96	CALL_1
0x40030e0	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1243	prdbg.c	FUNCTION_34	ELSE_1	IF_6	CALL_4
0x40030e5	          0x4889ef	                            mov rdi, rbp	      1243	prdbg.c	FUNCTION_34	ELSE_1	IF_6	CALL_4
0x40030e8	      0xe883ddffff	            call sym.append_type.isra.14	      1243	prdbg.c	FUNCTION_34	ELSE_1	IF_6	CALL_4
0x40030ed	            0x85c0	                           test eax, eax	      1243	prdbg.c	FUNCTION_34	ELSE_1	IF_6	CALL_4
0x40030ef	     0xf8570feffff	                           jne 0x4002f65	      1243	prdbg.c	FUNCTION_34	ELSE_1	IF_6	CALL_4
0x40030f5	      0xe9f8feffff	                           jmp 0x4002ff2	      1243	prdbg.c	FUNCTION_34	ELSE_1	IF_6	CALL_4
0x40030fa	    0x660f1f440000	                    nop word [rax + rax]	      1243	prdbg.c	FUNCTION_34	ELSE_1	IF_6	CALL_4
0x4003100	      0xbe00000000	                              mov esi, 0	      1266	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_13	CALL_9
0x4003105	          0x4889ef	                            mov rdi, rbp	      1266	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_13	CALL_9
0x4003108	      0xe863ddffff	            call sym.append_type.isra.14	      1266	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_13	CALL_9
0x400310d	            0x85c0	                           test eax, eax	      1266	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_13	CALL_9
0x400310f	     0xf84dbfeffff	                            je 0x4002ff0	      1266	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_13	CALL_9
0x4003115	    0x8b9424800000	            mov edx, dword [rsp + 0x80] 	      1268	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_14
0x400311c	            0x85d2	                           test edx, edx	      1268	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_14
0x400311e	            0x747d	                            je 0x400319d	      1268	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_14
0x4003120	      0xbe00000000	                              mov esi, 0	      1270	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_14	IF_15	CALL_10
0x4003125	          0x4889ef	                            mov rdi, rbp	      1270	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_14	IF_15	CALL_10
0x4003128	      0xe843ddffff	            call sym.append_type.isra.14	      1270	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_14	IF_15	CALL_10
0x400312d	            0x85c0	                           test eax, eax	      1270	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_14	IF_15	CALL_10
0x400312f	     0xf852effffff	                           jne 0x4003063	      1270	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_14	IF_15	CALL_10
0x4003135	      0xe9b6feffff	                           jmp 0x4002ff0	      1270	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_14	IF_15	CALL_10
0x400313a	    0x660f1f440000	                    nop word [rax + rax]	      1270	prdbg.c	FUNCTION_34	IF_8	IF_12	IF_14	IF_15	CALL_10
0x4003140	      0xb801000000	                              mov eax, 1	      1297	prdbg.c	FUNCTION_34	CALL_16
0x4003145	      0xe9a8feffff	                           jmp 0x4002ff2	      1297	prdbg.c	FUNCTION_34	CALL_16
0x400314a	    0x660f1f440000	                    nop word [rax + rax]	      1297	prdbg.c	FUNCTION_34	CALL_16
0x4003150	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        33	stdio2.h	FUNCTION_96	CALL_1
0x4003155	          0x4589f8	                           mov r8d, r15d	        33	stdio2.h	FUNCTION_96	CALL_1
0x4003158	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_96	CALL_1
0x400315d	      0xba14000000	                           mov edx, 0x14	        33	stdio2.h	FUNCTION_96	CALL_1
0x4003162	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_96	CALL_1
0x4003167	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_96	CALL_1
0x4003169	      0xe800000000	                          call 0x400316e	        33	stdio2.h	FUNCTION_96	CALL_1
0x400316e	      0xbe00000000	                              mov esi, 0	      1259	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11	CALL_7
0x4003173	          0x4889ef	                            mov rdi, rbp	      1259	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11	CALL_7
0x4003176	      0xe8f5dcffff	            call sym.append_type.isra.14	      1259	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11	CALL_7
0x400317b	            0x85c0	                           test eax, eax	      1259	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11	CALL_7
0x400317d	     0xf846dfeffff	                            je 0x4002ff0	      1259	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11	CALL_7
0x4003183	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1260	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11	CALL_8
0x4003188	          0x4889ef	                            mov rdi, rbp	      1260	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11	CALL_8
0x400318b	      0xe8e0dcffff	            call sym.append_type.isra.14	      1260	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11	CALL_8
0x4003190	            0x85c0	                           test eax, eax	      1260	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11	CALL_8
0x4003192	     0xf85c2feffff	                           jne 0x400305a	      1260	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11	CALL_8
0x4003198	      0xe953feffff	                           jmp 0x4002ff0	      1260	prdbg.c	FUNCTION_34	IF_8	IF_10	IF_11	CALL_8
0x400319d	        0x488b3424	                    mov rsi, qword [rsp]	      1275	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16	CALL_11
0x40031a1	          0x4889ef	                            mov rdi, rbp	      1275	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16	CALL_11
0x40031a4	      0xe8c7dcffff	            call sym.append_type.isra.14	      1275	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16	CALL_11
0x40031a9	            0x85c0	                           test eax, eax	      1275	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16	CALL_11
0x40031ab	     0xf843ffeffff	                            je 0x4002ff0	      1275	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16	CALL_11
0x40031b1	      0xbe00000000	                              mov esi, 0	      1276	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16	CALL_12
0x40031b6	          0x4889ef	                            mov rdi, rbp	      1276	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16	CALL_12
0x40031b9	      0xe8b2dcffff	            call sym.append_type.isra.14	      1276	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16	CALL_12
0x40031be	            0x85c0	                           test eax, eax	      1276	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16	CALL_12
0x40031c0	     0xf859dfeffff	                           jne 0x4003063	      1276	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16	CALL_12
0x40031c6	      0xe925feffff	                           jmp 0x4002ff0	      1276	prdbg.c	FUNCTION_34	IF_8	IF_12	ELSE_2	IF_16	CALL_12
0x40031cb	      0xe800000000	           call sym.pr_start_struct_type	      1298	prdbg.c	FUNCTION_34
pr_start_block	SWITCH,0:WHILE,0:IF,1:FOR,0:ELSE,0:functions,0:CALL,2:DO,0	49
0x40004c0	            0x4154	                                push r12	      1850	prdbg.c	FUNCTION_52
0x40004c2	              0x55	                                push rbp	      1850	prdbg.c	FUNCTION_52
0x40004c3	          0x4989f4	                            mov r12, rsi	      1850	prdbg.c	FUNCTION_52
0x40004c6	              0x53	                                push rbx	      1850	prdbg.c	FUNCTION_52
0x40004c7	          0x4889fd	                            mov rbp, rdi	      1850	prdbg.c	FUNCTION_52
0x40004ca	        0x4883ec20	                           sub rsp, 0x20	      1850	prdbg.c	FUNCTION_52
0x40004ce	          0x8b5718	            mov edx, dword [rdi + 0x18] 	      1854	prdbg.c	FUNCTION_52	IF_1
0x40004d1	    0x64488b042528	                mov rax, qword fs:[0x28]	      1850	prdbg.c	FUNCTION_52
0x40004da	      0x4889442418	             mov qword [rsp + 0x18], rax	      1850	prdbg.c	FUNCTION_52
0x40004df	            0x31c0	                            xor eax, eax	      1850	prdbg.c	FUNCTION_52
0x40004e1	            0x85d2	                           test edx, edx	      1854	prdbg.c	FUNCTION_52	IF_1
0x40004e3	            0x7e1e	                           jle 0x4000503	      1854	prdbg.c	FUNCTION_52	IF_1
0x40004e5	          0x488b0f	                    mov rcx, qword [rdi]	        97	stdio2.h	CALL_96
0x40004e8	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_96
0x40004ed	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_96
0x40004f2	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_96
0x40004f7	      0xe800000000	                          call 0x40004fc	        97	stdio2.h	CALL_96
0x40004fc	    0xc74518000000	               mov dword [rbp + 0x18], 0	      1857	prdbg.c	FUNCTION_52	IF_1
0x4000503	          0x8b4508	                mov eax, dword [rbp + 8]	       327	prdbg.c	FUNCTION_2	FOR_1
0x4000506	            0x31db	                            xor ebx, ebx	       327	prdbg.c	FUNCTION_2	FOR_1
0x4000508	            0x85c0	                           test eax, eax	       327	prdbg.c	FUNCTION_2	FOR_1
0x400050a	            0x741a	                            je 0x4000526	       327	prdbg.c	FUNCTION_2	FOR_1
0x400050c	         0xf1f4000	                         nop dword [rax]	       327	prdbg.c	FUNCTION_2	FOR_1
0x4000510	        0x488b7500	                    mov rsi, qword [rbp]	       328	prdbg.c	FUNCTION_2	CALL_1
0x4000514	      0xbf20000000	                           mov edi, 0x20	       328	prdbg.c	FUNCTION_2	CALL_1
0x4000519	          0x83c301	                              add ebx, 1	       327	prdbg.c	FUNCTION_2	FOR_1
0x400051c	      0xe800000000	                          call 0x4000521	       328	prdbg.c	FUNCTION_2	CALL_1
0x4000521	          0x3b5d08	                cmp ebx, dword [rbp + 8]	       327	prdbg.c	FUNCTION_2	FOR_1
0x4000524	            0x72ea	                            jb 0x4000510	       327	prdbg.c	FUNCTION_2	FOR_1
0x4000526	          0x4889e6	                            mov rsi, rsp	       327	prdbg.c	FUNCTION_2	FOR_1
0x4000529	          0x4c89e7	                            mov rdi, r12	       327	prdbg.c	FUNCTION_2	FOR_1
0x400052c	      0xe83ffeffff	               call sym.print_vma.part.0	       327	prdbg.c	FUNCTION_2	FOR_1
0x4000531	        0x488b7d00	                    mov rdi, qword [rbp]	        97	stdio2.h	CALL_96
0x4000535	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_96
0x400053a	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_96
0x400053c	          0x4889e1	                            mov rcx, rsp	        97	stdio2.h	CALL_96
0x400053f	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_96
0x4000544	      0xe800000000	                          call 0x4000549	        97	stdio2.h	CALL_96
0x4000549	        0x83450802	                  add dword [rbp + 8], 2	      1864	prdbg.c	FUNCTION_52
0x400054d	      0xb801000000	                              mov eax, 1	      1867	prdbg.c	FUNCTION_52
0x4000552	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1867	prdbg.c	FUNCTION_52
0x4000557	    0x644833142528	                xor rdx, qword fs:[0x28]	      1867	prdbg.c	FUNCTION_52
0x4000560	            0x7509	                           jne 0x400056b	      1867	prdbg.c	FUNCTION_52
0x4000562	        0x4883c420	                           add rsp, 0x20	      1867	prdbg.c	FUNCTION_52
0x4000566	              0x5b	                                 pop rbx	      1867	prdbg.c	FUNCTION_52
0x4000567	              0x5d	                                 pop rbp	      1867	prdbg.c	FUNCTION_52
0x4000568	            0x415c	                                 pop r12	      1867	prdbg.c	FUNCTION_52
0x400056a	              0xc3	                                     ret	      1867	prdbg.c	FUNCTION_52
0x400056b	      0xe800000000	        call sym.find_address_in_section	      1867	prdbg.c	FUNCTION_52
tg_start_source	SWITCH,0:WHILE,0:IF,0:FOR,0:ELSE,0:functions,0:CALL,2:DO,0	15
0x4000330	              0x55	                                push rbp	      1977	prdbg.c	FUNCTION_59
0x4000331	              0x53	                                push rbx	      1977	prdbg.c	FUNCTION_59
0x4000332	          0x4889fb	                            mov rbx, rdi	      1977	prdbg.c	FUNCTION_59
0x4000335	          0x4889f5	                            mov rbp, rsi	      1977	prdbg.c	FUNCTION_59
0x4000338	        0x4883ec08	                              sub rsp, 8	      1977	prdbg.c	FUNCTION_59
0x400033c	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	      1980	prdbg.c	FUNCTION_59	CALL_1
0x4000340	      0xe800000000	                          call 0x4000345	      1980	prdbg.c	FUNCTION_59	CALL_1
0x4000345	          0x4889ef	                            mov rdi, rbp	      1982	prdbg.c	FUNCTION_59	CALL_2
0x4000348	      0xe800000000	                          call 0x400034d	      1982	prdbg.c	FUNCTION_59	CALL_2
0x400034d	        0x48894320	             mov qword [rbx + 0x20], rax	      1982	prdbg.c	FUNCTION_59	CALL_2
0x4000351	        0x4883c408	                              add rsp, 8	      1985	prdbg.c	FUNCTION_59
0x4000355	      0xb801000000	                              mov eax, 1	      1985	prdbg.c	FUNCTION_59
0x400035a	              0x5b	                                 pop rbx	      1985	prdbg.c	FUNCTION_59
0x400035b	              0x5d	                                 pop rbp	      1985	prdbg.c	FUNCTION_59
0x400035c	              0xc3	                                     ret	      1985	prdbg.c	FUNCTION_59
