info_msg	FOR,0:IF,0:CALL,3:functions,0:ELSE,0:SWITCH,0:WHILE,0:DO,0	36
0x4000e10	    0x4881ecd80000	                           sub rsp, 0xd8	       609	ldmisc.c	FUNCTION_2
0x4000e17	            0x84c0	                             test al, al	       609	ldmisc.c	FUNCTION_2
0x4000e19	      0x4889742428	             mov qword [rsp + 0x28], rsi	       609	ldmisc.c	FUNCTION_2
0x4000e1e	      0x4889542430	             mov qword [rsp + 0x30], rdx	       609	ldmisc.c	FUNCTION_2
0x4000e23	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       609	ldmisc.c	FUNCTION_2
0x4000e28	      0x4c89442440	              mov qword [rsp + 0x40], r8	       609	ldmisc.c	FUNCTION_2
0x4000e2d	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       609	ldmisc.c	FUNCTION_2
0x4000e32	            0x7437	                            je 0x4000e6b	       609	ldmisc.c	FUNCTION_2
0x4000e34	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       609	ldmisc.c	FUNCTION_2
0x4000e39	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       609	ldmisc.c	FUNCTION_2
0x4000e3e	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       609	ldmisc.c	FUNCTION_2
0x4000e43	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       609	ldmisc.c	FUNCTION_2
0x4000e4b	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       609	ldmisc.c	FUNCTION_2
0x4000e53	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       609	ldmisc.c	FUNCTION_2
0x4000e5b	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       609	ldmisc.c	FUNCTION_2
0x4000e63	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       609	ldmisc.c	FUNCTION_2
0x4000e6b	    0x64488b042528	                mov rax, qword fs:[0x28]	       609	ldmisc.c	FUNCTION_2
0x4000e74	      0x4889442418	             mov qword [rsp + 0x18], rax	       609	ldmisc.c	FUNCTION_2
0x4000e79	            0x31c0	                            xor eax, eax	       609	ldmisc.c	FUNCTION_2
0x4000e7b	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       612	ldmisc.c	FUNCTION_2	CALL_1
0x4000e83	          0x4889fe	                            mov rsi, rdi	       613	ldmisc.c	FUNCTION_2	CALL_2
0x4000e86	            0x31c9	                            xor ecx, ecx	       613	ldmisc.c	FUNCTION_2	CALL_2
0x4000e88	          0x4889e2	                            mov rdx, rsp	       613	ldmisc.c	FUNCTION_2	CALL_2
0x4000e8b	    0x488b3d000000	            mov rdi, qword [0x04000e92] 	       613	ldmisc.c	FUNCTION_2	CALL_2
0x4000e92	      0x4889442408	                mov qword [rsp + 8], rax	       612	ldmisc.c	FUNCTION_2	CALL_1
0x4000e97	      0x488d442420	                   lea rax, [rsp + 0x20]	       612	ldmisc.c	FUNCTION_2	CALL_1
0x4000e9c	    0xc70424080000	                      mov dword [rsp], 8	       612	ldmisc.c	FUNCTION_2	CALL_1
0x4000ea3	    0xc74424043000	               mov dword [rsp + 4], 0x30	       612	ldmisc.c	FUNCTION_2	CALL_1
0x4000eab	      0x4889442410	             mov qword [rsp + 0x10], rax	       612	ldmisc.c	FUNCTION_2	CALL_1
0x4000eb0	      0xe800000000	                          call 0x4000eb5	       613	ldmisc.c	FUNCTION_2	CALL_2
0x4000eb5	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       615	ldmisc.c	FUNCTION_2
0x4000eba	    0x644833042528	                xor rax, qword fs:[0x28]	       615	ldmisc.c	FUNCTION_2
0x4000ec3	            0x7508	                           jne 0x4000ecd	       615	ldmisc.c	FUNCTION_2
0x4000ec5	    0x4881c4d80000	                           add rsp, 0xd8	       615	ldmisc.c	FUNCTION_2
0x4000ecc	              0xc3	                                     ret	       615	ldmisc.c	FUNCTION_2
0x4000ecd	      0xe800000000	                          call 0x4000ed2	       615	ldmisc.c	FUNCTION_2
ld_abort	FOR,0:IF,1:CALL,7:functions,0:ELSE,1:SWITCH,0:WHILE,0:DO,0	37
0x4000080	          0x4885d2	                           test rdx, rdx	       697	ldmisc.c	FUNCTION_9	IF_1
0x4000083	            0x4154	                                push r12	       696	ldmisc.c	FUNCTION_9
0x4000085	          0x4189f4	                           mov r12d, esi	       696	ldmisc.c	FUNCTION_9
0x4000088	              0x55	                                push rbp	       696	ldmisc.c	FUNCTION_9
0x4000089	          0x4889fd	                            mov rbp, rdi	       696	ldmisc.c	FUNCTION_9
0x400008c	              0x53	                                push rbx	       696	ldmisc.c	FUNCTION_9
0x400008d	            0x744c	                            je 0x40000db	       697	ldmisc.c	FUNCTION_9	IF_1
0x400008f	          0x4889d3	                            mov rbx, rdx	       697	ldmisc.c	FUNCTION_9	IF_1
0x4000092	      0xbe00000000	                              mov esi, 0	       698	ldmisc.c	FUNCTION_9	IF_1	CALL_2
0x4000097	      0xba05000000	                              mov edx, 5	       698	ldmisc.c	FUNCTION_9	IF_1	CALL_2
0x400009c	            0x31ff	                            xor edi, edi	       698	ldmisc.c	FUNCTION_9	IF_1	CALL_2
0x400009e	      0xe800000000	                          call 0x40000a3	       698	ldmisc.c	FUNCTION_9	IF_1	CALL_2
0x40000a3	          0x4889d9	                            mov rcx, rbx	       698	ldmisc.c	FUNCTION_9	IF_1	CALL_2
0x40000a6	          0x4889c7	                            mov rdi, rax	       698	ldmisc.c	FUNCTION_9	IF_1	CALL_2
0x40000a9	          0x4489e2	                           mov edx, r12d	       698	ldmisc.c	FUNCTION_9	IF_1	CALL_2
0x40000ac	          0x4889ee	                            mov rsi, rbp	       698	ldmisc.c	FUNCTION_9	IF_1	CALL_2
0x40000af	            0x31c0	                            xor eax, eax	       698	ldmisc.c	FUNCTION_9	IF_1	CALL_2
0x40000b1	      0xe800000000	                          call 0x40000b6	       698	ldmisc.c	FUNCTION_9	IF_1	CALL_2
0x40000b6	      0xba05000000	                              mov edx, 5	       703	ldmisc.c	FUNCTION_9	CALL_6
0x40000bb	      0xbe00000000	                              mov esi, 0	       703	ldmisc.c	FUNCTION_9	CALL_6
0x40000c0	            0x31ff	                            xor edi, edi	       703	ldmisc.c	FUNCTION_9	CALL_6
0x40000c2	      0xe800000000	                          call 0x40000c7	       703	ldmisc.c	FUNCTION_9	CALL_6
0x40000c7	          0x4889c7	                            mov rdi, rax	       703	ldmisc.c	FUNCTION_9	CALL_6
0x40000ca	            0x31c0	                            xor eax, eax	       703	ldmisc.c	FUNCTION_9	CALL_6
0x40000cc	      0xe800000000	                          call 0x40000d1	       703	ldmisc.c	FUNCTION_9	CALL_6
0x40000d1	      0xbf01000000	                              mov edi, 1	       704	ldmisc.c	FUNCTION_9	CALL_7
0x40000d6	      0xe800000000	                          call 0x40000db	       704	ldmisc.c	FUNCTION_9	CALL_7
0x40000db	            0x31ff	                            xor edi, edi	       701	ldmisc.c	FUNCTION_9	ELSE_1	CALL_4
0x40000dd	      0xba05000000	                              mov edx, 5	       701	ldmisc.c	FUNCTION_9	ELSE_1	CALL_4
0x40000e2	      0xbe00000000	                              mov esi, 0	       701	ldmisc.c	FUNCTION_9	ELSE_1	CALL_4
0x40000e7	      0xe800000000	                          call 0x40000ec	       701	ldmisc.c	FUNCTION_9	ELSE_1	CALL_4
0x40000ec	          0x4489e2	                           mov edx, r12d	       701	ldmisc.c	FUNCTION_9	ELSE_1	CALL_4
0x40000ef	          0x4889c7	                            mov rdi, rax	       701	ldmisc.c	FUNCTION_9	ELSE_1	CALL_4
0x40000f2	          0x4889ee	                            mov rsi, rbp	       701	ldmisc.c	FUNCTION_9	ELSE_1	CALL_4
0x40000f5	            0x31c0	                            xor eax, eax	       701	ldmisc.c	FUNCTION_9	ELSE_1	CALL_4
0x40000f7	      0xe800000000	                          call 0x40000fc	       701	ldmisc.c	FUNCTION_9	ELSE_1	CALL_4
0x40000fc	            0xebb8	                           jmp 0x40000b6	       701	ldmisc.c	FUNCTION_9	ELSE_1	CALL_4
minfo	FOR,0:IF,2:CALL,7:functions,0:ELSE,1:SWITCH,0:WHILE,0:DO,0	93
0x4001010	    0x4881ecd80000	                           sub rsp, 0xd8	       641	ldmisc.c	FUNCTION_5
0x4001017	            0x84c0	                             test al, al	       641	ldmisc.c	FUNCTION_5
0x4001019	      0x4889742428	             mov qword [rsp + 0x28], rsi	       641	ldmisc.c	FUNCTION_5
0x400101e	      0x4889542430	             mov qword [rsp + 0x30], rdx	       641	ldmisc.c	FUNCTION_5
0x4001023	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       641	ldmisc.c	FUNCTION_5
0x4001028	      0x4c89442440	              mov qword [rsp + 0x40], r8	       641	ldmisc.c	FUNCTION_5
0x400102d	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       641	ldmisc.c	FUNCTION_5
0x4001032	            0x7437	                            je 0x400106b	       641	ldmisc.c	FUNCTION_5
0x4001034	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       641	ldmisc.c	FUNCTION_5
0x4001039	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       641	ldmisc.c	FUNCTION_5
0x400103e	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       641	ldmisc.c	FUNCTION_5
0x4001043	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       641	ldmisc.c	FUNCTION_5
0x400104b	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       641	ldmisc.c	FUNCTION_5
0x4001053	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       641	ldmisc.c	FUNCTION_5
0x400105b	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       641	ldmisc.c	FUNCTION_5
0x4001063	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       641	ldmisc.c	FUNCTION_5
0x400106b	    0x64488b042528	                mov rax, qword fs:[0x28]	       641	ldmisc.c	FUNCTION_5
0x4001074	      0x4889442418	             mov qword [rsp + 0x18], rax	       641	ldmisc.c	FUNCTION_5
0x4001079	            0x31c0	                            xor eax, eax	       641	ldmisc.c	FUNCTION_5
0x400107b	    0x48833d000000	               cmp qword [0x04001083], 0	       642	ldmisc.c	FUNCTION_5	IF_1
0x4001083	            0x743f	                            je 0x40010c4	       642	ldmisc.c	FUNCTION_5	IF_1
0x4001085	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       646	ldmisc.c	FUNCTION_5	IF_1	CALL_1
0x400108d	          0x803f25	                    cmp byte [rdi], 0x25	       647	ldmisc.c	FUNCTION_5	IF_1	IF_2
0x4001090	    0xc70424080000	                      mov dword [rsp], 8	       646	ldmisc.c	FUNCTION_5	IF_1	CALL_1
0x4001097	    0xc74424043000	               mov dword [rsp + 4], 0x30	       646	ldmisc.c	FUNCTION_5	IF_1	CALL_1
0x400109f	      0x4889442408	                mov qword [rsp + 8], rax	       646	ldmisc.c	FUNCTION_5	IF_1	CALL_1
0x40010a4	      0x488d442420	                   lea rax, [rsp + 0x20]	       646	ldmisc.c	FUNCTION_5	IF_1	CALL_1
0x40010a9	      0x4889442410	             mov qword [rsp + 0x10], rax	       646	ldmisc.c	FUNCTION_5	IF_1	CALL_1
0x40010ae	            0x7430	                            je 0x40010e0	       647	ldmisc.c	FUNCTION_5	IF_1	IF_2
0x40010b0	          0x4889fe	                            mov rsi, rdi	       662	ldmisc.c	FUNCTION_5	IF_1	CALL_6
0x40010b3	    0x488b3d000000	            mov rdi, qword [0x040010ba] 	       662	ldmisc.c	FUNCTION_5	IF_1	CALL_6
0x40010ba	            0x31c9	                            xor ecx, ecx	       662	ldmisc.c	FUNCTION_5	IF_1	CALL_6
0x40010bc	          0x4889e2	                            mov rdx, rsp	       662	ldmisc.c	FUNCTION_5	IF_1	CALL_6
0x40010bf	      0xe800000000	                          call 0x40010c4	       662	ldmisc.c	FUNCTION_5	IF_1	CALL_6
0x40010c4	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       665	ldmisc.c	FUNCTION_5
0x40010c9	    0x644833042528	                xor rax, qword fs:[0x28]	       665	ldmisc.c	FUNCTION_5
0x40010d2	     0xf85be000000	                           jne 0x4001196	       665	ldmisc.c	FUNCTION_5
0x40010d8	    0x4881c4d80000	                           add rsp, 0xd8	       665	ldmisc.c	FUNCTION_5
0x40010df	              0xc3	                                     ret	       665	ldmisc.c	FUNCTION_5
0x40010e0	        0x807f0121	                cmp byte [rdi + 1], 0x21	       647	ldmisc.c	FUNCTION_5	IF_1	IF_2
0x40010e4	            0x75ca	                           jne 0x40010b0	       647	ldmisc.c	FUNCTION_5	IF_1	IF_2
0x40010e6	        0x807f0200	                   cmp byte [rdi + 2], 0	       647	ldmisc.c	FUNCTION_5	IF_1	IF_2
0x40010ea	            0x75c4	                           jne 0x40010b0	       647	ldmisc.c	FUNCTION_5	IF_1	IF_2
0x40010ec	      0xbf20000000	                           mov edi, 0x20	       652	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x40010f1	      0xe800000000	                          call 0x40010f6	       652	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_2
0x40010f6	          0x8b0c24	                    mov ecx, dword [rsp]	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x40010f9	    0x48c700000000	                      mov qword [rax], 0	       654	ldmisc.c	FUNCTION_5	IF_1	IF_2
0x4001100	          0x83f92f	                           cmp ecx, 0x2f	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x4001103	            0x775b	                            ja 0x4001160	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x4001105	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x400110a	          0x8d7108	                      lea esi, [rcx + 8]	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x400110d	            0x89cf	                            mov edi, ecx	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x400110f	          0x893424	                    mov dword [rsp], esi	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x4001112	          0x83fe2f	                           cmp esi, 0x2f	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x4001115	        0x488b3c3a	              mov rdi, qword [rdx + rdi]	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x4001119	        0x48897808	                mov qword [rax + 8], rdi	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x400111d	     0xf877f000000	                            ja 0x40011a2	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x4001123	            0x89f7	                            mov edi, esi	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x4001125	          0x8d7110	                   lea esi, [rcx + 0x10]	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x4001128	          0x893424	                    mov dword [rsp], esi	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x400112b	        0x488b3c3a	              mov rdi, qword [rdx + rdi]	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x400112f	          0x83fe2f	                           cmp esi, 0x2f	       657	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_5
0x4001132	        0x48897810	             mov qword [rax + 0x10], rdi	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x4001136	            0x7763	                            ja 0x400119b	       657	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_5
0x4001138	          0x83c118	                           add ecx, 0x18	       657	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_5
0x400113b	          0x4801f2	                            add rdx, rsi	       657	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_5
0x400113e	          0x890c24	                    mov dword [rsp], ecx	       657	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_5
0x4001141	          0x488b12	                    mov rdx, qword [rdx]	       657	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_5
0x4001144	        0x48895018	             mov qword [rax + 0x18], rdx	       657	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_5
0x4001148	    0x488b15000000	            mov rdx, qword [0x0400114f] 	       658	ldmisc.c	FUNCTION_5	IF_1	IF_2
0x400114f	          0x488902	                    mov qword [rdx], rax	       658	ldmisc.c	FUNCTION_5	IF_1	IF_2
0x4001152	    0x488905000000	            mov qword [0x04001159], rax 	       659	ldmisc.c	FUNCTION_5	IF_1	IF_2
0x4001159	      0xe966ffffff	                           jmp 0x40010c4	       648	ldmisc.c	FUNCTION_5	IF_1	IF_2
0x400115e	            0x6690	                                     nop	       648	ldmisc.c	FUNCTION_5	IF_1	IF_2
0x4001160	      0x488b542408	                mov rdx, qword [rsp + 8]	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x4001165	          0x4889d1	                            mov rcx, rdx	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x4001168	        0x4883c208	                              add rdx, 8	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x400116c	      0x4889542408	                mov qword [rsp + 8], rdx	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x4001171	          0x488b09	                    mov rcx, qword [rcx]	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x4001174	        0x48894808	                mov qword [rax + 8], rcx	       655	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x4001178	          0x4889d1	                            mov rcx, rdx	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x400117b	        0x4883c208	                              add rdx, 8	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x400117f	      0x4889542408	                mov qword [rsp + 8], rdx	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x4001184	          0x488b09	                    mov rcx, qword [rcx]	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x4001187	        0x48894810	             mov qword [rax + 0x10], rcx	       656	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x400118b	        0x488d4a08	                      lea rcx, [rdx + 8]	       657	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_5
0x400118f	      0x48894c2408	                mov qword [rsp + 8], rcx	       657	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_5
0x4001194	            0xebab	                           jmp 0x4001141	       657	ldmisc.c	FUNCTION_5	IF_1	IF_2	CALL_5
0x4001196	      0xe800000000	                          call 0x400119b	       665	ldmisc.c	FUNCTION_5
0x400119b	      0x488b542408	                mov rdx, qword [rsp + 8]	       665	ldmisc.c	FUNCTION_5
0x40011a0	            0xebe9	                           jmp 0x400118b	       665	ldmisc.c	FUNCTION_5
0x40011a2	      0x488b542408	                mov rdx, qword [rsp + 8]	       665	ldmisc.c	FUNCTION_5
0x40011a7	            0xebcf	                           jmp 0x4001178	       665	ldmisc.c	FUNCTION_5
print_space	FOR,0:IF,0:CALL,0:functions,0:ELSE,0:SWITCH,0:WHILE,0:DO,0	3
0x4000040	    0x488b35000000	            mov rsi, qword [0x04000047] 	        97	stdio2.h	CALL_9
0x4000047	      0xbf20000000	                           mov edi, 0x20	        97	stdio2.h	CALL_9
0x400004c	      0xe900000000	                           jmp 0x4000051	        97	stdio2.h	CALL_9
print_nl	FOR,0:IF,0:CALL,0:functions,0:ELSE,0:SWITCH,0:WHILE,0:DO,0	3
0x4000060	    0x488b35000000	            mov rsi, qword [0x04000067] 	        97	stdio2.h	CALL_9
0x4000067	      0xbf0a000000	                            mov edi, 0xa	        97	stdio2.h	CALL_9
0x400006c	      0xe900000000	                           jmp 0x4000071	        97	stdio2.h	CALL_9
info_assert	FOR,0:IF,0:CALL,2:functions,0:ELSE,0:SWITCH,0:WHILE,0:DO,0	17
0x4000fd0	              0x55	                                push rbp	       633	ldmisc.c	FUNCTION_4
0x4000fd1	              0x53	                                push rbx	       633	ldmisc.c	FUNCTION_4
0x4000fd2	            0x89f5	                            mov ebp, esi	       633	ldmisc.c	FUNCTION_4
0x4000fd4	          0x4889fb	                            mov rbx, rdi	       633	ldmisc.c	FUNCTION_4
0x4000fd7	      0xba05000000	                              mov edx, 5	       634	ldmisc.c	FUNCTION_4	CALL_2
0x4000fdc	      0xbe00000000	                              mov esi, 0	       634	ldmisc.c	FUNCTION_4	CALL_2
0x4000fe1	        0x4883ec08	                              sub rsp, 8	       633	ldmisc.c	FUNCTION_4
0x4000fe5	            0x31ff	                            xor edi, edi	       634	ldmisc.c	FUNCTION_4	CALL_2
0x4000fe7	      0xe800000000	                          call 0x4000fec	       634	ldmisc.c	FUNCTION_4	CALL_2
0x4000fec	        0x4883c408	                              add rsp, 8	       635	ldmisc.c	FUNCTION_4
0x4000ff0	            0x89ea	                            mov edx, ebp	       634	ldmisc.c	FUNCTION_4	CALL_2
0x4000ff2	          0x4889de	                            mov rsi, rbx	       634	ldmisc.c	FUNCTION_4	CALL_2
0x4000ff5	              0x5b	                                 pop rbx	       635	ldmisc.c	FUNCTION_4
0x4000ff6	              0x5d	                                 pop rbp	       635	ldmisc.c	FUNCTION_4
0x4000ff7	          0x4889c7	                            mov rdi, rax	       634	ldmisc.c	FUNCTION_4	CALL_2
0x4000ffa	            0x31c0	                            xor eax, eax	       634	ldmisc.c	FUNCTION_4	CALL_2
0x4000ffc	      0xe9dffeffff	                           jmp sym.einfo	       634	ldmisc.c	FUNCTION_4	CALL_2
einfo	FOR,0:IF,0:CALL,5:functions,0:ELSE,0:SWITCH,0:WHILE,0:DO,0	43
0x4000ee0	              0x53	                                push rbx	       621	ldmisc.c	FUNCTION_3
0x4000ee1	          0x4889fb	                            mov rbx, rdi	       621	ldmisc.c	FUNCTION_3
0x4000ee4	    0x4881ecd00000	                           sub rsp, 0xd0	       621	ldmisc.c	FUNCTION_3
0x4000eeb	            0x84c0	                             test al, al	       621	ldmisc.c	FUNCTION_3
0x4000eed	      0x4889742428	             mov qword [rsp + 0x28], rsi	       621	ldmisc.c	FUNCTION_3
0x4000ef2	      0x4889542430	             mov qword [rsp + 0x30], rdx	       621	ldmisc.c	FUNCTION_3
0x4000ef7	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       621	ldmisc.c	FUNCTION_3
0x4000efc	      0x4c89442440	              mov qword [rsp + 0x40], r8	       621	ldmisc.c	FUNCTION_3
0x4000f01	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       621	ldmisc.c	FUNCTION_3
0x4000f06	            0x7437	                            je 0x4000f3f	       621	ldmisc.c	FUNCTION_3
0x4000f08	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       621	ldmisc.c	FUNCTION_3
0x4000f0d	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       621	ldmisc.c	FUNCTION_3
0x4000f12	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       621	ldmisc.c	FUNCTION_3
0x4000f17	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       621	ldmisc.c	FUNCTION_3
0x4000f1f	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       621	ldmisc.c	FUNCTION_3
0x4000f27	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       621	ldmisc.c	FUNCTION_3
0x4000f2f	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       621	ldmisc.c	FUNCTION_3
0x4000f37	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       621	ldmisc.c	FUNCTION_3
0x4000f3f	    0x64488b042528	                mov rax, qword fs:[0x28]	       621	ldmisc.c	FUNCTION_3
0x4000f48	      0x4889442418	             mov qword [rsp + 0x18], rax	       621	ldmisc.c	FUNCTION_3
0x4000f4d	            0x31c0	                            xor eax, eax	       621	ldmisc.c	FUNCTION_3
0x4000f4f	    0x488b3d000000	            mov rdi, qword [0x04000f56] 	       624	ldmisc.c	FUNCTION_3	CALL_1
0x4000f56	      0xe800000000	                          call 0x4000f5b	       624	ldmisc.c	FUNCTION_3	CALL_1
0x4000f5b	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       625	ldmisc.c	FUNCTION_3	CALL_2
0x4000f63	    0x488b3d000000	            mov rdi, qword [0x04000f6a] 	       626	ldmisc.c	FUNCTION_3	CALL_3
0x4000f6a	      0xb901000000	                              mov ecx, 1	       626	ldmisc.c	FUNCTION_3	CALL_3
0x4000f6f	          0x4889e2	                            mov rdx, rsp	       626	ldmisc.c	FUNCTION_3	CALL_3
0x4000f72	          0x4889de	                            mov rsi, rbx	       626	ldmisc.c	FUNCTION_3	CALL_3
0x4000f75	    0xc70424080000	                      mov dword [rsp], 8	       625	ldmisc.c	FUNCTION_3	CALL_2
0x4000f7c	      0x4889442408	                mov qword [rsp + 8], rax	       625	ldmisc.c	FUNCTION_3	CALL_2
0x4000f81	      0x488d442420	                   lea rax, [rsp + 0x20]	       625	ldmisc.c	FUNCTION_3	CALL_2
0x4000f86	    0xc74424043000	               mov dword [rsp + 4], 0x30	       625	ldmisc.c	FUNCTION_3	CALL_2
0x4000f8e	      0x4889442410	             mov qword [rsp + 0x10], rax	       625	ldmisc.c	FUNCTION_3	CALL_2
0x4000f93	      0xe800000000	                          call 0x4000f98	       626	ldmisc.c	FUNCTION_3	CALL_3
0x4000f98	    0x488b3d000000	            mov rdi, qword [0x04000f9f] 	       628	ldmisc.c	FUNCTION_3	CALL_5
0x4000f9f	      0xe800000000	                          call 0x4000fa4	       628	ldmisc.c	FUNCTION_3	CALL_5
0x4000fa4	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       629	ldmisc.c	FUNCTION_3
0x4000fa9	    0x644833042528	                xor rax, qword fs:[0x28]	       629	ldmisc.c	FUNCTION_3
0x4000fb2	            0x7509	                           jne 0x4000fbd	       629	ldmisc.c	FUNCTION_3
0x4000fb4	    0x4881c4d00000	                           add rsp, 0xd0	       629	ldmisc.c	FUNCTION_3
0x4000fbb	              0x5b	                                 pop rbx	       629	ldmisc.c	FUNCTION_3
0x4000fbc	              0xc3	                                     ret	       629	ldmisc.c	FUNCTION_3
0x4000fbd	      0xe800000000	                          call 0x4000fc2	       629	ldmisc.c	FUNCTION_3
lfinfo	FOR,0:IF,0:CALL,3:functions,0:ELSE,0:SWITCH,0:WHILE,0:DO,0	33
0x40011b0	    0x4881ecd80000	                           sub rsp, 0xd8	       669	ldmisc.c	FUNCTION_6
0x40011b7	            0x84c0	                             test al, al	       669	ldmisc.c	FUNCTION_6
0x40011b9	      0x4889542430	             mov qword [rsp + 0x30], rdx	       669	ldmisc.c	FUNCTION_6
0x40011be	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       669	ldmisc.c	FUNCTION_6
0x40011c3	      0x4c89442440	              mov qword [rsp + 0x40], r8	       669	ldmisc.c	FUNCTION_6
0x40011c8	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       669	ldmisc.c	FUNCTION_6
0x40011cd	            0x7437	                            je 0x4001206	       669	ldmisc.c	FUNCTION_6
0x40011cf	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       669	ldmisc.c	FUNCTION_6
0x40011d4	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       669	ldmisc.c	FUNCTION_6
0x40011d9	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       669	ldmisc.c	FUNCTION_6
0x40011de	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       669	ldmisc.c	FUNCTION_6
0x40011e6	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       669	ldmisc.c	FUNCTION_6
0x40011ee	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       669	ldmisc.c	FUNCTION_6
0x40011f6	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       669	ldmisc.c	FUNCTION_6
0x40011fe	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       669	ldmisc.c	FUNCTION_6
0x4001206	    0x64488b042528	                mov rax, qword fs:[0x28]	       669	ldmisc.c	FUNCTION_6
0x400120f	      0x4889442418	             mov qword [rsp + 0x18], rax	       669	ldmisc.c	FUNCTION_6
0x4001214	            0x31c0	                            xor eax, eax	       669	ldmisc.c	FUNCTION_6
0x4001216	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       672	ldmisc.c	FUNCTION_6	CALL_1
0x400121e	            0x31c9	                            xor ecx, ecx	       673	ldmisc.c	FUNCTION_6	CALL_2
0x4001220	          0x4889e2	                            mov rdx, rsp	       673	ldmisc.c	FUNCTION_6	CALL_2
0x4001223	      0x4889442408	                mov qword [rsp + 8], rax	       672	ldmisc.c	FUNCTION_6	CALL_1
0x4001228	      0x488d442420	                   lea rax, [rsp + 0x20]	       672	ldmisc.c	FUNCTION_6	CALL_1
0x400122d	    0xc70424100000	                   mov dword [rsp], 0x10	       672	ldmisc.c	FUNCTION_6	CALL_1
0x4001234	    0xc74424043000	               mov dword [rsp + 4], 0x30	       672	ldmisc.c	FUNCTION_6	CALL_1
0x400123c	      0x4889442410	             mov qword [rsp + 0x10], rax	       672	ldmisc.c	FUNCTION_6	CALL_1
0x4001241	      0xe800000000	                          call 0x4001246	       673	ldmisc.c	FUNCTION_6	CALL_2
0x4001246	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       675	ldmisc.c	FUNCTION_6
0x400124b	    0x644833042528	                xor rax, qword fs:[0x28]	       675	ldmisc.c	FUNCTION_6
0x4001254	            0x7508	                           jne 0x400125e	       675	ldmisc.c	FUNCTION_6
0x4001256	    0x4881c4d80000	                           add rsp, 0xd8	       675	ldmisc.c	FUNCTION_6
0x400125d	              0xc3	                                     ret	       675	ldmisc.c	FUNCTION_6
0x400125e	      0xe800000000	                  call section_end..data	       675	ldmisc.c	FUNCTION_6
vfinfo	FOR,3:IF,49:CALL,56:functions,0:ELSE,15:SWITCH,3:WHILE,6:DO,0	821
0x4000100	            0x4157	                                push r15	        70	ldmisc.c	FUNCTION_1
0x4000102	            0x4156	                                push r14	        70	ldmisc.c	FUNCTION_1
0x4000104	          0x4989fe	                            mov r14, rdi	        70	ldmisc.c	FUNCTION_1
0x4000107	            0x4155	                                push r13	        70	ldmisc.c	FUNCTION_1
0x4000109	            0x4154	                                push r12	        70	ldmisc.c	FUNCTION_1
0x400010b	          0x4889f7	                            mov rdi, rsi	        70	ldmisc.c	FUNCTION_1
0x400010e	              0x55	                                push rbp	        70	ldmisc.c	FUNCTION_1
0x400010f	              0x53	                                push rbx	        70	ldmisc.c	FUNCTION_1
0x4000110	    0x4881ecc80100	                          sub rsp, 0x1c8	        70	ldmisc.c	FUNCTION_1
0x4000117	      0x4c8d442470	                    lea r8, [rsp + 0x70]	        70	ldmisc.c	FUNCTION_1
0x400011c	        0x894c2404	                mov dword [rsp + 4], ecx	        70	ldmisc.c	FUNCTION_1
0x4000120	    0x64488b042528	                mov rax, qword fs:[0x28]	        70	ldmisc.c	FUNCTION_1
0x4000129	    0x48898424b801	            mov qword [rsp + 0x1b8], rax	        70	ldmisc.c	FUNCTION_1
0x4000131	            0x31c0	                            xor eax, eax	        70	ldmisc.c	FUNCTION_1
0x4000133	    0x498d88d80000	                    lea rcx, [r8 + 0xd8]	        70	ldmisc.c	FUNCTION_1
0x400013a	          0x4c89c0	                             mov rax, r8	        70	ldmisc.c	FUNCTION_1
0x400013d	           0xf1f00	                         nop dword [rax]	        70	ldmisc.c	FUNCTION_1
0x4000140	    0xc70000000000	                      mov dword [rax], 0	        99	ldmisc.c	FUNCTION_1	FOR_1
0x4000146	        0x4883c018	                           add rax, 0x18	        99	ldmisc.c	FUNCTION_1	FOR_1
0x400014a	          0x4839c8	                            cmp rax, rcx	        98	ldmisc.c	FUNCTION_1	FOR_1
0x400014d	            0x75f1	                           jne 0x4000140	        98	ldmisc.c	FUNCTION_1	FOR_1
0x400014f	           0xfb637	                   movzx esi, byte [rdi]	        98	ldmisc.c	FUNCTION_1	FOR_1
0x4000152	          0x4889f8	                            mov rax, rdi	        98	ldmisc.c	FUNCTION_1	FOR_1
0x4000155	          0x4531c9	                            xor r9d, r9d	        98	ldmisc.c	FUNCTION_1	FOR_1
0x4000158	      0xbd03010e00	                        mov ebp, 0xe0103	       138	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_3
0x400015d	            0x89f1	                            mov ecx, esi	       138	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_3
0x400015f	            0x84c9	                             test cl, cl	       103	ldmisc.c	FUNCTION_1	WHILE_1
0x4000161	            0x7435	                            je 0x4000198	       103	ldmisc.c	FUNCTION_1	WHILE_1
0x4000163	       0xf1f440000	                   nop dword [rax + rax]	       103	ldmisc.c	FUNCTION_1	WHILE_1
0x4000168	          0x80f925	                            cmp cl, 0x25	       105	ldmisc.c	FUNCTION_1	WHILE_1	WHILE_2
0x400016b	            0x750f	                           jne 0x400017c	       105	ldmisc.c	FUNCTION_1	WHILE_1	WHILE_2
0x400016d	      0xe9b8010000	                           jmp 0x400032a	       105	ldmisc.c	FUNCTION_1	WHILE_1	WHILE_2
0x4000172	    0x660f1f440000	                    nop word [rax + rax]	       105	ldmisc.c	FUNCTION_1	WHILE_1	WHILE_2
0x4000178	            0x84c9	                             test cl, cl	       105	ldmisc.c	FUNCTION_1	WHILE_1	WHILE_2
0x400017a	            0x740c	                            je 0x4000188	       105	ldmisc.c	FUNCTION_1	WHILE_1	WHILE_2
0x400017c	        0x4883c001	                              add rax, 1	       106	ldmisc.c	FUNCTION_1	WHILE_1	WHILE_2
0x4000180	           0xfb608	                   movzx ecx, byte [rax]	       105	ldmisc.c	FUNCTION_1	WHILE_1	WHILE_2
0x4000183	          0x80f925	                            cmp cl, 0x25	       105	ldmisc.c	FUNCTION_1	WHILE_1	WHILE_2
0x4000186	            0x75f0	                           jne 0x4000178	       105	ldmisc.c	FUNCTION_1	WHILE_1	WHILE_2
0x4000188	          0x80f925	                            cmp cl, 0x25	       108	ldmisc.c	FUNCTION_1	WHILE_1	IF_1
0x400018b	     0xf8499010000	                            je 0x400032a	       108	ldmisc.c	FUNCTION_1	WHILE_1	IF_1
0x4000191	           0xfb608	                   movzx ecx, byte [rax]	       108	ldmisc.c	FUNCTION_1	WHILE_1	IF_1
0x4000194	            0x84c9	                             test cl, cl	       103	ldmisc.c	FUNCTION_1	WHILE_1
0x4000196	            0x75d0	                           jne 0x4000168	       103	ldmisc.c	FUNCTION_1	WHILE_1
0x4000198	          0x4585c9	                           test r9d, r9d	       176	ldmisc.c	FUNCTION_1	FOR_2
0x400019b	            0x744b	                            je 0x40001e8	       176	ldmisc.c	FUNCTION_1	FOR_2
0x400019d	        0x418d41ff	                       lea eax, [r9 - 1]	       176	ldmisc.c	FUNCTION_1	FOR_2
0x40001a1	      0x488d444003	              lea rax, [rax + rax*2 + 3]	       176	ldmisc.c	FUNCTION_1	FOR_2
0x40001a6	      0x488d74c470	          lea rsi, [rsp + rax*8 + 0x70] 	       176	ldmisc.c	FUNCTION_1	FOR_2
0x40001ab	        0x41833805	                       cmp dword [r8], 5	       178	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2
0x40001af	     0xf8750010000	                            ja 0x4000305	       178	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2
0x40001b5	          0x418b00	                     mov eax, dword [r8]	       178	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2
0x40001b8	    0xff24c5000000	                       jmp qword [rax*8]	       178	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2
0x40001bf	              0x90	                                     nop	       178	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2
0x40001c0	            0x8b02	                    mov eax, dword [rdx]	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x40001c2	          0x83f82f	                           cmp eax, 0x2f	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x40001c5	     0xf874e010000	                            ja 0x4000319	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x40001cb	            0x89c1	                            mov ecx, eax	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x40001cd	        0x48034a10	             add rcx, qword [rdx + 0x10]	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x40001d1	          0x83c008	                              add eax, 8	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x40001d4	            0x8902	                    mov dword [rdx], eax	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x40001d6	          0x488b01	                    mov rax, qword [rcx]	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x40001d9	          0x498900	                     mov qword [r8], rax	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x40001dc	        0x4983c018	                            add r8, 0x18	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x40001e0	          0x4c39c6	                             cmp rsi, r8	       176	ldmisc.c	FUNCTION_1	FOR_2
0x40001e3	            0x75c6	                           jne 0x40001ab	       176	ldmisc.c	FUNCTION_1	FOR_2
0x40001e5	           0xfb637	                   movzx esi, byte [rdi]	       176	ldmisc.c	FUNCTION_1	FOR_2
0x40001e8	            0x89f0	                            mov eax, esi	       176	ldmisc.c	FUNCTION_1	FOR_2
0x40001ea	          0x4531ed	                          xor r13d, r13d	       294	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40001ed	    0xc74424280000	               mov dword [rsp + 0x28], 0	       294	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40001f5	            0x84c0	                             test al, al	       203	ldmisc.c	FUNCTION_1	WHILE_3
0x40001f7	            0x7455	                            je 0x400024e	       203	ldmisc.c	FUNCTION_1	WHILE_3
0x40001f9	     0xf1f80000000	                         nop dword [rax]	       203	ldmisc.c	FUNCTION_1	WHILE_3
0x4000200	            0x3c25	                            cmp al, 0x25	       206	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000202	          0x4889fb	                            mov rbx, rdi	       206	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000205	          0x4989ff	                            mov r15, rdi	       206	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000208	            0x750d	                           jne 0x4000217	       206	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x400020a	      0xe9b4010000	                           jmp 0x40003c3	       206	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x400020f	              0x90	                                     nop	       206	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000210	            0x84c0	                             test al, al	       206	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000212	            0x740f	                            je 0x4000223	       206	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000214	          0x4c89fb	                            mov rbx, r15	       206	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000217	         0xfb64301	               movzx eax, byte [rbx + 1]	       206	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x400021b	        0x4c8d7b01	                      lea r15, [rbx + 1]	       207	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x400021f	            0x3c25	                            cmp al, 0x25	       206	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000221	            0x75ed	                           jne 0x4000210	       206	ldmisc.c	FUNCTION_1	WHILE_3	WHILE_4
0x4000223	          0x4c39ff	                            cmp rdi, r15	       208	ldmisc.c	FUNCTION_1	WHILE_3	IF_7
0x4000226	            0x7417	                            je 0x400023f	       208	ldmisc.c	FUNCTION_1	WHILE_3	IF_7
0x4000228	          0x4c89fa	                            mov rdx, r15	       209	ldmisc.c	FUNCTION_1	WHILE_3	IF_7	IF_8	CALL_11
0x400022b	          0x4c89f1	                            mov rcx, r14	       209	ldmisc.c	FUNCTION_1	WHILE_3	IF_7	IF_8	CALL_11
0x400022e	      0xbe01000000	                              mov esi, 1	       209	ldmisc.c	FUNCTION_1	WHILE_3	IF_7	IF_8	CALL_11
0x4000233	          0x4829fa	                            sub rdx, rdi	       209	ldmisc.c	FUNCTION_1	WHILE_3	IF_7	IF_8	CALL_11
0x4000236	      0xe800000000	                          call 0x400023b	       209	ldmisc.c	FUNCTION_1	WHILE_3	IF_7	IF_8	CALL_11
0x400023b	         0xfb64301	               movzx eax, byte [rbx + 1]	       209	ldmisc.c	FUNCTION_1	WHILE_3	IF_7	IF_8	CALL_11
0x400023f	            0x3c25	                            cmp al, 0x25	       214	ldmisc.c	FUNCTION_1	WHILE_3	IF_9
0x4000241	     0xf847c010000	                            je 0x40003c3	       214	ldmisc.c	FUNCTION_1	WHILE_3	IF_9
0x4000247	            0x84c0	                             test al, al	       203	ldmisc.c	FUNCTION_1	WHILE_3
0x4000249	          0x4c89ff	                            mov rdi, r15	       294	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x400024c	            0x75b2	                           jne 0x4000200	       203	ldmisc.c	FUNCTION_1	WHILE_3
0x400024e	        0x8b4c2404	                mov ecx, dword [rsp + 4]	       595	ldmisc.c	FUNCTION_1	IF_48
0x4000252	            0x85c9	                           test ecx, ecx	       595	ldmisc.c	FUNCTION_1	IF_48
0x4000254	     0xf85b0010000	                           jne 0x400040a	       595	ldmisc.c	FUNCTION_1	IF_48
0x400025a	        0x8b442428	            mov eax, dword [rsp + 0x28] 	       598	ldmisc.c	FUNCTION_1	IF_49
0x400025e	            0x85c0	                           test eax, eax	       598	ldmisc.c	FUNCTION_1	IF_49
0x4000260	     0xf855b070000	                           jne 0x40009c1	       598	ldmisc.c	FUNCTION_1	IF_49
0x4000266	    0x488b8424b801	           mov rax, qword [rsp + 0x1b8] 	       600	ldmisc.c	FUNCTION_1
0x400026e	    0x644833042528	                xor rax, qword fs:[0x28]	       600	ldmisc.c	FUNCTION_1
0x4000277	     0xf854e070000	                           jne 0x40009cb	       600	ldmisc.c	FUNCTION_1
0x400027d	    0x4881c4c80100	                          add rsp, 0x1c8	       600	ldmisc.c	FUNCTION_1
0x4000284	              0x5b	                                 pop rbx	       600	ldmisc.c	FUNCTION_1
0x4000285	              0x5d	                                 pop rbp	       600	ldmisc.c	FUNCTION_1
0x4000286	            0x415c	                                 pop r12	       600	ldmisc.c	FUNCTION_1
0x4000288	            0x415d	                                 pop r13	       600	ldmisc.c	FUNCTION_1
0x400028a	            0x415e	                                 pop r14	       600	ldmisc.c	FUNCTION_1
0x400028c	            0x415f	                                 pop r15	       600	ldmisc.c	FUNCTION_1
0x400028e	              0xc3	                                     ret	       600	ldmisc.c	FUNCTION_1
0x400028f	            0x8b0a	                    mov ecx, dword [rdx]	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x4000291	          0x83f92f	                           cmp ecx, 0x2f	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x4000294	     0xf87d2000000	                            ja 0x400036c	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x400029a	        0x488b4210	            mov rax, qword [rdx + 0x10] 	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x400029e	        0x448d4908	                      lea r9d, [rcx + 8]	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x40002a2	          0x4189ca	                           mov r10d, ecx	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x40002a5	          0x44890a	                    mov dword [rdx], r9d	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x40002a8	        0x4183f92f	                           cmp r9d, 0x2f	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x40002ac	        0x4e8b1410	              mov r10, qword [rax + r10]	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x40002b0	          0x4d8910	                     mov qword [r8], r10	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x40002b3	     0xf8717070000	                            ja 0x40009d0	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x40002b9	          0x4589ca	                           mov r10d, r9d	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x40002bc	        0x448d4910	                   lea r9d, [rcx + 0x10]	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x40002c0	          0x44890a	                    mov dword [rdx], r9d	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x40002c3	        0x4e8b1410	              mov r10, qword [rax + r10]	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x40002c7	        0x4183f92f	                           cmp r9d, 0x2f	       195	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_9
0x40002cb	        0x4d895008	                 mov qword [r8 + 8], r10	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x40002cf	     0xf8791060000	                            ja 0x4000966	       195	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_9
0x40002d5	          0x83c118	                           add ecx, 0x18	       195	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_9
0x40002d8	          0x4c01c8	                             add rax, r9	       195	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_9
0x40002db	            0x890a	                    mov dword [rdx], ecx	       195	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_9
0x40002dd	          0x488b00	                    mov rax, qword [rax]	       195	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_9
0x40002e0	        0x49894010	              mov qword [r8 + 0x10], rax	       195	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_9
0x40002e4	      0xe9f3feffff	                           jmp 0x40001dc	       196	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2
0x40002e9	            0x8b02	                    mov eax, dword [rdx]	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x40002eb	          0x83f82f	                           cmp eax, 0x2f	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x40002ee	            0x776e	                            ja 0x400035e	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x40002f0	            0x89c1	                            mov ecx, eax	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x40002f2	        0x48034a10	             add rcx, qword [rdx + 0x10]	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x40002f6	          0x83c008	                              add eax, 8	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x40002f9	            0x8902	                    mov dword [rdx], eax	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x40002fb	            0x8b01	                    mov eax, dword [rcx]	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x40002fd	          0x418900	                     mov dword [r8], eax	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x4000300	      0xe9d7feffff	                           jmp 0x40001dc	       182	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2
0x4000305	      0xba00000000	                              mov edx, 0	       198	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_10
0x400030a	      0xbec6000000	                           mov esi, 0xc6	       198	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_10
0x400030f	      0xbf00000000	                              mov edi, 0	       198	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_10
0x4000314	      0xe800000000	                          call 0x4000319	       198	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_10
0x4000319	        0x488b4a08	                mov rcx, qword [rdx + 8]	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x400031d	        0x488d4108	                      lea rax, [rcx + 8]	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x4000321	        0x48894208	                mov qword [rdx + 8], rax	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x4000325	      0xe9acfeffff	                           jmp 0x40001d6	       190	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_6
0x400032a	         0xfb64801	               movzx ecx, byte [rax + 1]	       113	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2	CALL_1
0x400032e	        0x4c8d5801	                      lea r11, [rax + 1]	       110	ldmisc.c	FUNCTION_1	WHILE_1	IF_1
0x4000332	          0x80f930	                            cmp cl, 0x30	       113	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2	CALL_1
0x4000335	            0x747e	                            je 0x40003b5	       113	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2	CALL_1
0x4000337	           0xfb6d9	                           movzx ebx, cl	       113	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2	CALL_1
0x400033a	        0x440fbee1	                          movsx r12d, cl	       113	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2	CALL_1
0x400033e	          0x4589ca	                           mov r10d, r9d	       113	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2	CALL_1
0x4000341	    0xf6841b000000	                test byte [rbx + rbx], 4	       113	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2	CALL_1
0x4000349	            0x7555	                           jne 0x40003a0	       113	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2	CALL_1
0x400034b	          0x80f976	                            cmp cl, 0x76	       120	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x400034e	        0x498d4301	                      lea rax, [r11 + 1]	       120	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x4000352	            0x7765	                            ja 0x40003b9	       120	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x4000354	           0xfb6d9	                           movzx ebx, cl	       120	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x4000357	    0xff24dd000000	                       jmp qword [rbx*8]	       120	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x400035e	        0x488b4a08	                mov rcx, qword [rdx + 8]	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x4000362	        0x488d4108	                      lea rax, [rcx + 8]	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x4000366	        0x48894208	                mov qword [rdx + 8], rax	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x400036a	            0xeb8f	                           jmp 0x40002fb	       181	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_3
0x400036c	        0x488b4208	                mov rax, qword [rdx + 8]	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x4000370	          0x4889c1	                            mov rcx, rax	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x4000373	        0x4883c008	                              add rax, 8	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x4000377	        0x48894208	                mov qword [rdx + 8], rax	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x400037b	          0x488b09	                    mov rcx, qword [rcx]	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x400037e	          0x498908	                     mov qword [r8], rcx	       193	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_7
0x4000381	          0x4889c1	                            mov rcx, rax	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x4000384	        0x4883c008	                              add rax, 8	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x4000388	        0x48894208	                mov qword [rdx + 8], rax	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x400038c	          0x488b09	                    mov rcx, qword [rcx]	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x400038f	        0x49894808	                 mov qword [r8 + 8], rcx	       194	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_8
0x4000393	        0x488d4808	                      lea rcx, [rax + 8]	       195	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_9
0x4000397	        0x48894a08	                mov qword [rdx + 8], rcx	       195	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_9
0x400039b	      0xe93dffffff	                           jmp 0x40002dd	       195	ldmisc.c	FUNCTION_1	FOR_2	SWITCH_2	CALL_9
0x40003a0	        0x80780224	                cmp byte [rax + 2], 0x24	       113	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2	CALL_1
0x40003a4	            0x75a5	                           jne 0x400034b	       113	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2	CALL_1
0x40003a6	      0x458d5424cf	                  lea r10d, [r12 - 0x31]	       115	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2
0x40003ab	        0x4c8d5803	                      lea r11, [rax + 3]	       116	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2
0x40003af	         0xfb64803	               movzx ecx, byte [rax + 3]	       116	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2
0x40003b3	            0xeb96	                           jmp 0x400034b	       116	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_2
0x40003b5	        0x4883c002	                              add rax, 2	       120	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x40003b9	      0x410fb64b01	               movzx ecx, byte [r11 + 1]	       120	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x40003be	      0xe99cfdffff	                           jmp 0x400015f	       120	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x40003c3	      0x410fb65701	               movzx edx, byte [r15 + 1]	       219	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10	CALL_12
0x40003c8	        0x498d5f01	                      lea rbx, [r15 + 1]	       216	ldmisc.c	FUNCTION_1	WHILE_3	IF_9
0x40003cc	          0x80fa30	                            cmp dl, 0x30	       219	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10	CALL_12
0x40003cf	     0xf842e050000	                            je 0x4000903	       219	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10	CALL_12
0x40003d5	           0xfb6ca	                           movzx ecx, dl	       219	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10	CALL_12
0x40003d8	           0xfbef2	                           movsx esi, dl	       219	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10	CALL_12
0x40003db	          0x4489e8	                           mov eax, r13d	       218	ldmisc.c	FUNCTION_1	WHILE_3	IF_9
0x40003de	    0xf68409000000	                test byte [rcx + rcx], 4	       219	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10	CALL_12
0x40003e6	            0x740b	                            je 0x40003f3	       219	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10	CALL_12
0x40003e8	      0x41807f0224	                cmp byte [r15 + 2], 0x24	       219	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10	CALL_12
0x40003ed	     0xf84ae000000	                            je 0x40004a1	       219	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10	CALL_12
0x40003f3	          0x80fa76	                            cmp dl, 0x76	       225	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40003f6	        0x4c8d7b01	                      lea r15, [rbx + 1]	       225	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40003fa	     0xf8716040000	                            ja 0x4000816	       225	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000400	           0xfb6ca	                           movzx ecx, dl	       225	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000403	    0xff24cd000000	                       jmp qword [rcx*8]	       225	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x400040a	    0x8b1500000000	            mov edx, dword [0x04000410] 	       595	ldmisc.c	FUNCTION_1	IF_48
0x4000410	            0x85d2	                           test edx, edx	       595	ldmisc.c	FUNCTION_1	IF_48
0x4000412	     0xf8442feffff	                            je 0x400025a	       595	ldmisc.c	FUNCTION_1	IF_48
0x4000418	    0xc70500000000	               mov dword [0x04000422], 0	       596	ldmisc.c	FUNCTION_1	IF_48
0x4000422	      0xe933feffff	                           jmp 0x400025a	       596	ldmisc.c	FUNCTION_1	IF_48
0x4000427	      0xb904000000	                              mov ecx, 4	       129	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x400042c	        0x4183fa08	                             cmp r10d, 8	       168	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_5	IF_6
0x4000430	     0xf8777050000	                            ja 0x40009ad	       168	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_5	IF_6
0x4000436	        0x4f8d1452	                  lea r10, [r10 + r10*2]	       170	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_5
0x400043a	        0x4183c101	                              add r9d, 1	       171	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_5
0x400043e	      0x42894cd470	     mov dword [rsp + r10*8 + 0x70], ecx	       170	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_5
0x4000443	      0xe949fdffff	                           jmp 0x4000191	       170	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_5
0x4000448	      0xb901000000	                              mov ecx, 1	       152	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x400044d	            0xebdd	                           jmp 0x400042c	       153	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x400044f	      0x410fb64b01	               movzx ecx, byte [r11 + 1]	       156	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_4
0x4000454	          0x80f964	                            cmp cl, 0x64	       156	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_4
0x4000457	            0x7409	                            je 0x4000462	       156	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_4
0x4000459	          0x80f975	                            cmp cl, 0x75	       156	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_4
0x400045c	     0xf85fdfcffff	                           jne 0x400015f	       156	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_4
0x4000462	        0x498d4302	                      lea rax, [r11 + 2]	       158	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_4
0x4000466	      0xb902000000	                              mov ecx, 2	       159	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_4
0x400046b	            0xebbf	                           jmp 0x400042c	       159	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_4
0x400046d	      0x410fb65b01	               movzx ebx, byte [r11 + 1]	       137	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_3
0x4000472	      0xb903000000	                              mov ecx, 3	       140	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x4000477	          0x83eb41	                           sub ebx, 0x41	       137	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_3
0x400047a	          0x80fb13	                            cmp bl, 0x13	       137	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_3
0x400047d	            0x77ad	                            ja 0x400042c	       137	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_3
0x400047f	        0x480fa3dd	                             bt rbp, rbx	       138	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_3
0x4000483	            0x73a7	                           jae 0x400042c	       138	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_3
0x4000485	        0x498d4302	                      lea rax, [r11 + 2]	       139	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_3
0x4000489	            0xeba1	                           jmp 0x400042c	       139	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1	IF_3
0x400048b	          0x4c89d8	                            mov rax, r11	       120	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x400048e	      0xe9ccfcffff	                           jmp 0x400015f	       120	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x4000493	      0xb905000000	                              mov ecx, 5	       147	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x4000498	            0xeb92	                           jmp 0x400042c	       147	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x400049a	      0xb903000000	                              mov ecx, 3	       133	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x400049f	            0xeb8b	                           jmp 0x400042c	       133	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	SWITCH_1
0x40004a1	          0x8d46cf	                   lea eax, [rsi - 0x31]	       221	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10
0x40004a4	        0x498d5f03	                      lea rbx, [r15 + 3]	       222	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10
0x40004a8	      0x410fb65703	               movzx edx, byte [r15 + 3]	       222	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10
0x40004ad	      0xe941ffffff	                           jmp 0x40003f3	       222	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	IF_10
0x40004b2	          0x4989df	                            mov r15, rbx	       225	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40004b5	          0x4c89f6	                            mov rsi, r14	       233	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_13
0x40004b8	      0xbf25000000	                           mov edi, 0x25	       233	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_13
0x40004bd	      0xe800000000	                          call 0x40004c2	       233	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_13
0x40004c2	        0x410fb607	                   movzx eax, byte [r15]	       233	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_13
0x40004c6	      0xe97cfdffff	                           jmp 0x4000247	       234	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40004cb	        0x488d0440	                  lea rax, [rax + rax*2]	       255	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40004cf	    0x488dbc245001	                  lea rdi, [rsp + 0x150]	        33	stdio2.h	FUNCTION_10	CALL_1
0x40004d7	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_10	CALL_1
0x40004dc	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_10	CALL_1
0x40004e1	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_10	CALL_1
0x40004e6	        0x4183c501	                             add r13d, 1	       256	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40004ea	      0x4c8b44c470	     mov r8, qword [rsp + rax*8 + 0x70] 	        33	stdio2.h	FUNCTION_10	CALL_1
0x40004ef	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_10	CALL_1
0x40004f1	      0xe800000000	                          call 0x40004f6	        33	stdio2.h	FUNCTION_10	CALL_1
0x40004f6	     0xfb684245001	          movzx eax, byte [rsp + 0x150] 	       258	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_5
0x40004fe	    0x488dbc245001	                  lea rdi, [rsp + 0x150]	       258	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_5
0x4000506	            0x3c30	                            cmp al, 0x30	       258	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_5
0x4000508	            0x750b	                           jne 0x4000515	       258	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_5
0x400050a	        0x4883c701	                              add rdi, 1	       259	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_5
0x400050e	           0xfb607	                   movzx eax, byte [rdi]	       258	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_5
0x4000511	            0x3c30	                            cmp al, 0x30	       258	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_5
0x4000513	            0x74f5	                            je 0x400050a	       258	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_5
0x4000515	            0x3c01	                               cmp al, 1	       261	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_11
0x4000517	          0x4c89f6	                            mov rsi, r14	       262	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_16
0x400051a	        0x4883df00	                              sbb rdi, 0	       261	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_11
0x400051e	      0xe800000000	                          call 0x4000523	       262	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_16
0x4000523	         0xfb64301	               movzx eax, byte [rbx + 1]	       262	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_16
0x4000527	      0xe91bfdffff	                           jmp 0x4000247	       264	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x400052c	    0x488b3d000000	            mov rdi, qword [0x04000533] 	        97	stdio2.h	CALL_9
0x4000533	          0x4c89f6	                            mov rsi, r14	        97	stdio2.h	CALL_9
0x4000536	      0xe800000000	                          call 0x400053b	        97	stdio2.h	CALL_9
0x400053b	         0xfb64301	               movzx eax, byte [rbx + 1]	        97	stdio2.h	CALL_9
0x400053f	      0xe903fdffff	                           jmp 0x4000247	        97	stdio2.h	CALL_9
0x4000544	         0xfb64301	               movzx eax, byte [rbx + 1]	        97	stdio2.h	CALL_9
0x4000548	    0xc74424280100	               mov dword [rsp + 0x28], 1	       294	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000550	      0xe9f2fcffff	                           jmp 0x4000247	       294	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000555	      0xe800000000	                          call 0x400055a	       304	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_21
0x400055a	            0x89c7	                            mov edi, eax	       304	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_21
0x400055c	      0xe800000000	                          call 0x4000561	       304	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_21
0x4000561	          0x4c89f6	                            mov rsi, r14	        97	stdio2.h	CALL_9
0x4000564	          0x4889c7	                            mov rdi, rax	        97	stdio2.h	CALL_9
0x4000567	      0xe800000000	                          call 0x400056c	        97	stdio2.h	CALL_9
0x400056c	         0xfb64301	               movzx eax, byte [rbx + 1]	        97	stdio2.h	CALL_9
0x4000570	      0xe9d2fcffff	                           jmp 0x4000247	        97	stdio2.h	CALL_9
0x4000575	        0x488d0440	                  lea rax, [rax + rax*2]	       327	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000579	        0x4183c501	                             add r13d, 1	       330	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x400057d	        0x48c1e003	                              shl rax, 3	       327	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000581	      0x488b6c0470	      mov rbp, qword [rsp + rax + 0x70] 	       327	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000586	      0x488b740478	      mov rsi, qword [rsp + rax + 0x78] 	       328	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x400058b	    0x488b84048000	      mov rax, qword [rsp + rax + 0x80] 	       329	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000593	          0x4885ed	                           test rbp, rbp	       332	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13
0x4000596	      0x4889742410	             mov qword [rsp + 0x10], rsi	       328	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x400059b	      0x4889442418	             mov qword [rsp + 0x18], rax	       329	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40005a0	     0xf840a010000	                            je 0x40006b0	       332	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13
0x40005a6	          0x4889ef	                            mov rdi, rbp	       334	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	IF_14	CALL_22
0x40005a9	      0xe800000000	                          call 0x40005ae	       334	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	IF_14	CALL_22
0x40005ae	            0x85c0	                           test eax, eax	       334	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	IF_14	CALL_22
0x40005b0	     0xf8456030000	                            je 0x400090c	       334	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	IF_14	CALL_22
0x40005b6	    0x488bb5b00000	            mov rsi, qword [rbp + 0xb0] 	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x40005bd	        0x488b4508	                mov rax, qword [rbp + 8]	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x40005c1	          0x4889ef	                            mov rdi, rbp	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x40005c4	            0x6a00	                                  push 0	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x40005c6	      0x488d54243c	                   lea rdx, [rsp + 0x3c]	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x40005cb	              0x52	                                push rdx	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x40005cc	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x40005d1	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x40005d6	      0x4c8d4c2450	                    lea r9, [rsp + 0x50]	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x40005db	      0x4c8d442448	                    lea r8, [rsp + 0x48]	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x40005e0	    0xff9038020000	                call qword [rax + 0x238]	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x40005e6	            0x85c0	                           test eax, eax	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x40005e8	              0x5f	                                 pop rdi	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x40005e9	            0x4158	                                  pop r8	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x40005eb	     0xf84bf000000	                            je 0x40006b0	       350	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_26
0x40005f1	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	       354	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x40005f6	          0x4885d2	                           test rdx, rdx	       354	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x40005f9	      0x4889542408	                mov qword [rsp + 8], rdx	       354	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x40005fe	            0x7415	                            je 0x4000615	       354	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x4000600	           0xfb60b	                   movzx ecx, byte [rbx]	       355	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x4000603	          0x80f943	                            cmp cl, 0x43	       355	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x4000606	     0xf84e2050000	                            je 0x4000bee	       355	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x400060c	          0x80f948	                            cmp cl, 0x48	       355	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x400060f	     0xf84d9050000	                            je 0x4000bee	       355	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x4000615	          0x4889ea	                            mov rdx, rbp	       390	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_35
0x4000618	      0xbe00000000	                              mov esi, 0	       390	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_35
0x400061d	          0x4c89f7	                            mov rdi, r14	       390	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_35
0x4000620	            0x31c0	                            xor eax, eax	       390	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_35
0x4000622	    0x41bc01000000	                             mov r12d, 1	       348	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000628	      0xe800000000	                          call 0x400062d	       390	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_35
0x400062d	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       392	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_21
0x4000632	          0x4885c9	                           test rcx, rcx	       392	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_21
0x4000635	     0xf84f4020000	                            je 0x400092f	       392	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_21
0x400063b	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000640	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x4000642	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000647	          0x4c89f7	                            mov rdi, r14	        97	stdio2.h	CALL_9
0x400064a	            0x31ed	                            xor ebp, ebp	       395	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15
0x400064c	      0xe800000000	                          call 0x4000651	        97	stdio2.h	CALL_9
0x4000651	           0xfb603	                   movzx eax, byte [rbx]	       395	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15
0x4000654	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	       396	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_22
0x4000659	            0x3c48	                            cmp al, 0x48	       395	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15
0x400065b	        0x400f95c5	                               setne bpl	       395	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15
0x400065f	          0x4885d2	                           test rdx, rdx	       396	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_22
0x4000662	            0x7408	                            je 0x400066c	       396	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_22
0x4000664	            0x3c47	                            cmp al, 0x47	       396	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_22
0x4000666	     0xf84e6020000	                            je 0x4000952	       396	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_22
0x400066c	    0x48837c243800	               cmp qword [rsp + 0x38], 0	       398	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	ELSE_2	IF_23
0x4000672	            0x7454	                            je 0x40006c8	       398	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	ELSE_2	IF_23
0x4000674	        0x8b4c2434	            mov ecx, dword [rsp + 0x34] 	       398	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	ELSE_2	IF_23
0x4000678	            0x85c9	                           test ecx, ecx	       398	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	ELSE_2	IF_23
0x400067a	            0x744c	                            je 0x40006c8	       398	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	ELSE_2	IF_23
0x400067c	            0x3c48	                            cmp al, 0x48	       399	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	ELSE_2	IF_23
0x400067e	    0x41b800000000	                              mov r8d, 0	        97	stdio2.h	CALL_9
0x4000684	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_9
0x4000689	        0x4c0f44c0	                           cmove r8, rax	        97	stdio2.h	CALL_9
0x400068d	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000692	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000697	          0x4c89f7	                            mov rdi, r14	        97	stdio2.h	CALL_9
0x400069a	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x400069c	      0xe800000000	                          call 0x40006a1	        97	stdio2.h	CALL_9
0x40006a1	            0x85ed	                           test ebp, ebp	       408	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_24
0x40006a3	            0x753c	                           jne 0x40006e1	       408	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_24
0x40006a5	            0xeb21	                           jmp 0x40006c8	       408	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_24
0x40006a7	    0x660f1f840000	                    nop word [rax + rax]	       408	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_24
0x40006b0	          0x4889ea	                            mov rdx, rbp	       405	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_4	CALL_37
0x40006b3	      0xbe00000000	                              mov esi, 0	       405	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_4	CALL_37
0x40006b8	          0x4c89f7	                            mov rdi, r14	       405	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_4	CALL_37
0x40006bb	            0x31c0	                            xor eax, eax	       405	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_4	CALL_37
0x40006bd	    0x41bc01000000	                             mov r12d, 1	       348	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40006c3	      0xe800000000	                          call 0x40006c8	       405	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_4	CALL_37
0x40006c8	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       409	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_38
0x40006cd	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       409	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_38
0x40006d2	      0xbe00000000	                              mov esi, 0	       409	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_38
0x40006d7	          0x4c89f7	                            mov rdi, r14	       409	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_38
0x40006da	            0x31c0	                            xor eax, eax	       409	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_38
0x40006dc	      0xe800000000	                          call 0x40006e1	       409	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_38
0x40006e1	          0x4585e4	                         test r12d, r12d	       411	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25
0x40006e4	            0x7443	                            je 0x4000729	       411	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25
0x40006e6	    0x488b3d000000	            mov rdi, qword [0x040006ed] 	       414	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25	IF_26
0x40006ed	    0x48c705000000	               mov qword [0x040006f8], 0	       413	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25
0x40006f8	          0x4885ff	                           test rdi, rdi	       414	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25	IF_26
0x40006fb	            0x7410	                            je 0x400070d	       414	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25	IF_26
0x40006fd	      0xe800000000	                          call 0x4000702	       416	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25	IF_26	CALL_39
0x4000702	    0x48c705000000	               mov qword [0x0400070d], 0	       417	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25	IF_26
0x400070d	    0x488b3d000000	            mov rdi, qword [0x04000714] 	       419	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25	IF_27
0x4000714	          0x4885ff	                           test rdi, rdi	       419	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25	IF_27
0x4000717	            0x7410	                            je 0x4000729	       419	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25	IF_27
0x4000719	      0xe800000000	                          call 0x400071e	       421	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25	IF_27	CALL_40
0x400071e	    0x48c705000000	               mov qword [0x04000729], 0	       422	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25	IF_27
0x4000729	         0xfb64301	               movzx eax, byte [rbx + 1]	       422	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25	IF_27
0x400072d	      0xe915fbffff	                           jmp 0x4000247	       422	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_25	IF_27
0x4000732	        0x488d0440	                  lea rax, [rax + rax*2]	       567	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000736	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x400073b	        0x8b4cc470	    mov ecx, dword [rsp + rax*8 + 0x70] 	        97	stdio2.h	CALL_9
0x400073f	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000744	          0x4c89f7	                            mov rdi, r14	        97	stdio2.h	CALL_9
0x4000747	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x4000749	      0xe800000000	                          call 0x400074e	        97	stdio2.h	CALL_9
0x400074e	        0x4183c501	                             add r13d, 1	       568	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000752	         0xfb64301	               movzx eax, byte [rbx + 1]	       568	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000756	      0xe9ecfaffff	                           jmp 0x4000247	       569	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x400075b	        0x488d0440	                  lea rax, [rax + rax*2]	       555	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x400075f	          0x4c89f6	                            mov rsi, r14	        97	stdio2.h	CALL_9
0x4000762	        0x4183c501	                             add r13d, 1	       556	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000766	      0x488b7cc470	    mov rdi, qword [rsp + rax*8 + 0x70] 	        97	stdio2.h	CALL_9
0x400076b	      0xe800000000	                          call 0x4000770	        97	stdio2.h	CALL_9
0x4000770	         0xfb64301	               movzx eax, byte [rbx + 1]	        97	stdio2.h	CALL_9
0x4000774	      0xe9cefaffff	                           jmp 0x4000247	       557	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000779	         0xfb65301	               movzx edx, byte [rbx + 1]	       429	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28
0x400077d	          0x80fa41	                            cmp dl, 0x41	       429	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28
0x4000780	     0xf8474050000	                            je 0x4000cfa	       429	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28
0x4000786	          0x80fa42	                            cmp dl, 0x42	       455	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32
0x4000789	     0xf84b8030000	                            je 0x4000b47	       455	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32
0x400078f	          0x80fa49	                            cmp dl, 0x49	       471	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35
0x4000792	     0xf84cf020000	                            je 0x4000a67	       471	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35
0x4000798	          0x80fa52	                            cmp dl, 0x52	       489	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38
0x400079b	        0x488d0440	                  lea rax, [rax + rax*2]	       492	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38
0x400079f	     0xf846c020000	                            je 0x4000a11	       489	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38
0x40007a5	          0x80fa53	                            cmp dl, 0x53	       501	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39
0x40007a8	     0xf842b020000	                            je 0x40009d9	       501	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39
0x40007ae	          0x80fa54	                            cmp dl, 0x54	       518	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42
0x40007b1	     0xf8511040000	                           jne 0x4000bc8	       518	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42
0x40007b7	      0x488b6cc470	    mov rbp, qword [rsp + rax*8 + 0x70] 	       521	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42
0x40007bc	        0x4183c501	                             add r13d, 1	       524	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42
0x40007c0	        0x4c8d7b02	                      lea r15, [rbx + 2]	       523	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42
0x40007c4	          0x4885ed	                           test rbp, rbp	       525	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	IF_43
0x40007c7	            0x740a	                            je 0x40007d3	       525	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	IF_43
0x40007c9	        0x807d0000	                       cmp byte [rbp], 0	       525	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	IF_43
0x40007cd	     0xf852a030000	                           jne 0x4000afd	       525	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	IF_43
0x40007d3	      0xba05000000	                              mov edx, 5	       527	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	IF_43	CALL_53
0x40007d8	      0xbe00000000	                              mov esi, 0	       527	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	IF_43	CALL_53
0x40007dd	            0x31ff	                            xor edi, edi	       527	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	IF_43	CALL_53
0x40007df	      0xe800000000	                          call 0x40007e4	       527	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	IF_43	CALL_53
0x40007e4	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x40007e9	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_9
0x40007ec	          0x4c89f7	                            mov rdi, r14	        97	stdio2.h	CALL_9
0x40007ef	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x40007f1	      0xe800000000	                          call 0x40007f6	        97	stdio2.h	CALL_9
0x40007f6	         0xfb64302	               movzx eax, byte [rbx + 2]	        97	stdio2.h	CALL_9
0x40007fa	      0xe948faffff	                           jmp 0x4000247	        97	stdio2.h	CALL_9
0x40007ff	              0x90	                                     nop	        97	stdio2.h	CALL_9
0x4000800	         0xfb64b01	               movzx ecx, byte [rbx + 1]	       572	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_46
0x4000804	          0x80f964	                            cmp cl, 0x64	       572	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_46
0x4000807	     0xf8490010000	                            je 0x400099d	       572	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_46
0x400080d	          0x80f975	                            cmp cl, 0x75	       579	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_15	IF_47
0x4000810	     0xf8459010000	                            je 0x400096f	       579	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_15	IF_47
0x4000816	           0xfbeca	                           movsx ecx, dl	        97	stdio2.h	CALL_9
0x4000819	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x400081e	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000823	          0x4c89f7	                            mov rdi, r14	        97	stdio2.h	CALL_9
0x4000826	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x4000828	      0xe800000000	                          call 0x400082d	        97	stdio2.h	CALL_9
0x400082d	      0xe9f7feffff	                           jmp 0x4000729	        97	stdio2.h	CALL_9
0x4000832	        0x488d0440	                  lea rax, [rax + rax*2]	       561	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000836	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x400083b	        0x8b4cc470	    mov ecx, dword [rsp + rax*8 + 0x70] 	        97	stdio2.h	CALL_9
0x400083f	      0xe9fbfeffff	                           jmp 0x400073f	        97	stdio2.h	CALL_9
0x4000844	    0xc70500000000	               mov dword [0x0400084e], 0	       238	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x400084e	         0xfb64301	               movzx eax, byte [rbx + 1]	       238	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000852	      0xe9f0f9ffff	                           jmp 0x4000247	       239	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000857	        0x488d0440	                  lea rax, [rax + rax*2]	       275	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x400085b	    0x488dbc245001	                  lea rdi, [rsp + 0x150]	        33	stdio2.h	FUNCTION_10	CALL_1
0x4000863	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_10	CALL_1
0x4000868	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_10	CALL_1
0x400086d	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_10	CALL_1
0x4000872	        0x4183c501	                             add r13d, 1	       276	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000876	      0x4c8b44c470	     mov r8, qword [rsp + rax*8 + 0x70] 	        33	stdio2.h	FUNCTION_10	CALL_1
0x400087b	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_10	CALL_1
0x400087d	    0x488dac245001	                  lea rbp, [rsp + 0x150]	       278	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	FOR_3
0x4000885	      0xe800000000	                          call 0x400088a	        33	stdio2.h	FUNCTION_10	CALL_1
0x400088a	     0xfb684245001	          movzx eax, byte [rsp + 0x150] 	       278	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	FOR_3
0x4000892	            0x3c30	                            cmp al, 0x30	       278	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	FOR_3
0x4000894	            0x750c	                           jne 0x40008a2	       278	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	FOR_3
0x4000896	        0x4883c501	                              add rbp, 1	       278	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	FOR_3
0x400089a	         0xfb64500	                   movzx eax, byte [rbp]	       278	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	FOR_3
0x400089e	            0x3c30	                            cmp al, 0x30	       278	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	FOR_3
0x40008a0	            0x74f4	                            je 0x4000896	       278	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	FOR_3
0x40008a2	            0x3c01	                               cmp al, 1	       281	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_12
0x40008a4	        0x4883dd00	                              sbb rbp, 0	       281	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_12
0x40008a8	          0x4889ef	                            mov rdi, rbp	       282	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_18
0x40008ab	      0xe800000000	                          call 0x40008b0	       282	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_18
0x40008b0	          0x83f807	                              cmp eax, 7	       283	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_6
0x40008b3	          0x4189c4	                           mov r12d, eax	       282	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	CALL_18
0x40008b6	            0x7f17	                            jg 0x40008cf	       283	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_6
0x40008b8	          0x4c89f6	                            mov rsi, r14	       285	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_6	CALL_19
0x40008bb	      0xbf20000000	                           mov edi, 0x20	       285	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_6	CALL_19
0x40008c0	        0x4183c401	                             add r12d, 1	       286	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_6
0x40008c4	      0xe800000000	                          call 0x40008c9	       285	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_6	CALL_19
0x40008c9	        0x4183fc08	                             cmp r12d, 8	       283	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_6
0x40008cd	            0x75e9	                           jne 0x40008b8	       283	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	WHILE_6
0x40008cf	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_9
0x40008d2	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x40008d7	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x40008dc	          0x4c89f7	                            mov rdi, r14	        97	stdio2.h	CALL_9
0x40008df	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x40008e1	      0xe800000000	                          call 0x40008e6	        97	stdio2.h	CALL_9
0x40008e6	         0xfb64301	               movzx eax, byte [rbx + 1]	        97	stdio2.h	CALL_9
0x40008ea	      0xe958f9ffff	                           jmp 0x4000247	       290	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40008ef	        0x488d0440	                  lea rax, [rax + rax*2]	       244	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40008f3	        0x4183c501	                             add r13d, 1	       245	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x40008f7	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x40008fc	      0x488b4cc470	    mov rcx, qword [rsp + rax*8 + 0x70] 	        97	stdio2.h	CALL_9
0x4000901	            0xebd4	                           jmp 0x40008d7	        97	stdio2.h	CALL_9
0x4000903	        0x4983c702	                              add r15, 2	       225	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x4000907	      0xe90affffff	                           jmp 0x4000816	       225	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3
0x400090c	            0x31ff	                            xor edi, edi	       335	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	CALL_24
0x400090e	      0xba05000000	                              mov edx, 5	       335	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	CALL_24
0x4000913	      0xbe00000000	                              mov esi, 0	       335	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	CALL_24
0x4000918	      0xe800000000	                          call 0x400091d	       335	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	CALL_24
0x400091d	          0x4889ee	                            mov rsi, rbp	       335	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	CALL_24
0x4000920	          0x4889c7	                            mov rdi, rax	       335	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	CALL_24
0x4000923	            0x31c0	                            xor eax, eax	       335	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	CALL_24
0x4000925	      0xe800000000	                          call 0x400092a	       335	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	CALL_24
0x400092a	      0xe987fcffff	                           jmp 0x40005b6	       335	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	CALL_24
0x400092f	           0xfb60b	                   movzx ecx, byte [rbx]	       335	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	CALL_24
0x4000932	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	       335	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_13	CALL_24
0x4000937	            0x31ed	                            xor ebp, ebp	       395	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15
0x4000939	          0x80f948	                            cmp cl, 0x48	       395	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15
0x400093c	        0x400f95c5	                               setne bpl	       395	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15
0x4000940	          0x80f947	                            cmp cl, 0x47	       396	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_22
0x4000943	     0xf857ffdffff	                           jne 0x40006c8	       396	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_22
0x4000949	          0x4885d2	                           test rdx, rdx	       396	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_22
0x400094c	     0xf8476fdffff	                            je 0x40006c8	       396	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_22
0x4000952	      0xbe00000000	                              mov esi, 0	       397	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_36
0x4000957	          0x4c89f7	                            mov rdi, r14	       397	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_36
0x400095a	            0x31c0	                            xor eax, eax	       397	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_36
0x400095c	      0xe800000000	                          call 0x4000961	       397	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_36
0x4000961	      0xe93bfdffff	                           jmp 0x40006a1	       397	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_36
0x4000966	        0x488b4208	                mov rax, qword [rdx + 8]	       397	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_36
0x400096a	      0xe924faffff	                           jmp 0x4000393	       397	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	CALL_36
0x400096f	        0x488d0440	                  lea rax, [rax + rax*2]	       581	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_15	IF_47
0x4000973	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000978	      0x488b4cc470	    mov rcx, qword [rsp + rax*8 + 0x70] 	        97	stdio2.h	CALL_9
0x400097d	        0x4c8d7b02	                      lea r15, [rbx + 2]	       583	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_15	IF_47
0x4000981	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000986	          0x4c89f7	                            mov rdi, r14	        97	stdio2.h	CALL_9
0x4000989	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x400098b	        0x4183c501	                             add r13d, 1	       582	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_15	IF_47
0x400098f	      0xe800000000	                          call 0x4000994	        97	stdio2.h	CALL_9
0x4000994	         0xfb64302	               movzx eax, byte [rbx + 2]	        97	stdio2.h	CALL_9
0x4000998	      0xe9aaf8ffff	                           jmp 0x4000247	       584	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_15	IF_47
0x400099d	        0x488d0440	                  lea rax, [rax + rax*2]	       574	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_46
0x40009a1	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x40009a6	      0x488b4cc470	    mov rcx, qword [rsp + rax*8 + 0x70] 	        97	stdio2.h	CALL_9
0x40009ab	            0xebd0	                           jmp 0x400097d	        97	stdio2.h	CALL_9
0x40009ad	      0xba00000000	                              mov edx, 0	       169	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_5	CALL_2
0x40009b2	      0xbea9000000	                           mov esi, 0xa9	       169	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_5	CALL_2
0x40009b7	      0xbf00000000	                              mov edi, 0	       169	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_5	CALL_2
0x40009bc	      0xe800000000	                          call 0x40009c1	       169	ldmisc.c	FUNCTION_1	WHILE_1	IF_1	IF_5	CALL_2
0x40009c1	      0xbf01000000	                              mov edi, 1	       599	ldmisc.c	FUNCTION_1	CALL_56
0x40009c6	      0xe800000000	                          call 0x40009cb	       599	ldmisc.c	FUNCTION_1	CALL_56
0x40009cb	      0xe800000000	                          call 0x40009d0	       600	ldmisc.c	FUNCTION_1
0x40009d0	        0x488b4208	                mov rax, qword [rdx + 8]	       600	ldmisc.c	FUNCTION_1
0x40009d4	      0xe9a8f9ffff	                           jmp 0x4000381	       600	ldmisc.c	FUNCTION_1
0x40009d9	      0x488b54c470	    mov rdx, qword [rsp + rax*8 + 0x70] 	       505	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39
0x40009de	        0x4183c501	                             add r13d, 1	       508	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39
0x40009e2	        0x4c8d7b02	                      lea r15, [rbx + 2]	       507	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39
0x40009e6	          0x4885d2	                           test rdx, rdx	       509	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39	IF_40
0x40009e9	            0x7461	                            je 0x4000a4c	       509	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39	IF_40
0x40009eb	        0x488b4208	                mov rax, qword [rdx + 8]	       509	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39	IF_40
0x40009ef	          0x4885c0	                           test rax, rax	       515	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39	IF_41
0x40009f2	            0x74a0	                            je 0x4000994	       515	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39	IF_41
0x40009f4	        0x448b4204	                mov r8d, dword [rdx + 4]	        97	stdio2.h	CALL_9
0x40009f8	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_9
0x40009fb	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000a00	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000a05	          0x4c89f7	                            mov rdi, r14	        97	stdio2.h	CALL_9
0x4000a08	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x4000a0a	      0xe800000000	                          call 0x4000a0f	        97	stdio2.h	CALL_9
0x4000a0f	            0xeb83	                           jmp 0x4000994	        97	stdio2.h	CALL_9
0x4000a11	      0x488b44c470	    mov rax, qword [rsp + rax*8 + 0x70] 	       492	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38
0x4000a16	          0x4c89f7	                            mov rdi, r14	       496	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38	CALL_51
0x4000a19	        0x4c8d7b02	                      lea r15, [rbx + 2]	       494	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38
0x4000a1d	        0x4183c501	                             add r13d, 1	       495	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38
0x4000a21	        0x488b7018	            mov rsi, qword [rax + 0x18] 	       496	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38	CALL_51
0x4000a25	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       496	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38	CALL_51
0x4000a29	          0x488b00	                    mov rax, qword [rax]	       497	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38
0x4000a2c	        0x4c8b4628	              mov r8, qword [rsi + 0x28]	       496	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38	CALL_51
0x4000a30	      0xbe00000000	                              mov esi, 0	       496	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38	CALL_51
0x4000a35	          0x488b00	                    mov rax, qword [rax]	       496	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38	CALL_51
0x4000a38	        0x488b5008	                mov rdx, qword [rax + 8]	       496	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38	CALL_51
0x4000a3c	            0x31c0	                            xor eax, eax	       496	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38	CALL_51
0x4000a3e	      0xe800000000	                          call 0x4000a43	       496	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38	CALL_51
0x4000a43	         0xfb64302	               movzx eax, byte [rbx + 2]	       496	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38	CALL_51
0x4000a47	      0xe9fbf7ffff	                           jmp 0x4000247	       496	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_10	IF_38	CALL_51
0x4000a4c	      0xe800000000	                          call 0x4000a51	       512	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39	IF_40	CALL_52
0x4000a51	    0x8b1500000000	            mov edx, dword [0x04000a57] 	       513	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39	IF_40
0x4000a57	      0x4889442448	             mov qword [rsp + 0x48], rax	       512	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39	IF_40	CALL_52
0x4000a5c	        0x89542444	             mov dword [rsp + 0x44], edx	       513	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39	IF_40
0x4000a60	      0x488d542440	                   lea rdx, [rsp + 0x40]	       511	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39	IF_40
0x4000a65	            0xeb88	                           jmp 0x40009ef	       511	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_11	IF_39	IF_40
0x4000a67	        0x488d0440	                  lea rax, [rax + rax*2]	       477	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35
0x4000a6b	        0x4183c501	                             add r13d, 1	       478	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35
0x4000a6f	        0x4c8d7b02	                      lea r15, [rbx + 2]	       476	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35
0x4000a73	      0x488b6cc470	    mov rbp, qword [rsp + rax*8 + 0x70] 	       477	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35
0x4000a78	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       479	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_36
0x4000a7c	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       479	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_36
0x4000a83	          0x4885c0	                           test rax, rax	       479	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_36
0x4000a86	            0x741d	                            je 0x4000aa5	       479	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_36
0x4000a88	        0xf6404801	               test byte [rax + 0x48], 1	       480	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_36	CALL_47
0x4000a8c	            0x7517	                           jne 0x4000aa5	       480	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_36	CALL_47
0x4000a8e	          0x488b08	                    mov rcx, qword [rax]	        97	stdio2.h	CALL_9
0x4000a91	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000a96	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000a9b	          0x4c89f7	                            mov rdi, r14	        97	stdio2.h	CALL_9
0x4000a9e	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x4000aa0	      0xe800000000	                          call 0x4000aa5	        97	stdio2.h	CALL_9
0x4000aa5	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	        97	stdio2.h	CALL_9
0x4000aa9	          0x4c89f6	                            mov rsi, r14	        97	stdio2.h	CALL_9
0x4000aac	      0xe800000000	                          call 0x4000ab1	        97	stdio2.h	CALL_9
0x4000ab1	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       484	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_37
0x4000ab5	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       484	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_37
0x4000abc	          0x4885c0	                           test rax, rax	       484	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_37
0x4000abf	            0x740a	                            je 0x4000acb	       484	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_37
0x4000ac1	        0xf6404801	               test byte [rax + 0x48], 1	       485	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_37	CALL_49
0x4000ac5	     0xf84c9feffff	                            je 0x4000994	       485	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_37	CALL_49
0x4000acb	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	       486	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_37	CALL_50
0x4000acf	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	       486	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_37	CALL_50
0x4000ad3	      0xe800000000	                          call 0x4000ad8	       486	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_37	CALL_50
0x4000ad8	            0x85c0	                           test eax, eax	       486	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_37	CALL_50
0x4000ada	     0xf84b4feffff	                            je 0x4000994	       486	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_9	IF_35	IF_37	CALL_50
0x4000ae0	        0x488b4d10	            mov rcx, qword [rbp + 0x10] 	        97	stdio2.h	CALL_9
0x4000ae4	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000ae9	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000aee	          0x4c89f7	                            mov rdi, r14	        97	stdio2.h	CALL_9
0x4000af1	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x4000af3	      0xe800000000	                          call 0x4000af8	        97	stdio2.h	CALL_9
0x4000af8	      0xe997feffff	                           jmp 0x4000994	        97	stdio2.h	CALL_9
0x4000afd	    0x8b3500000000	            mov esi, dword [0x04000b03] 	       530	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44
0x4000b03	            0x85f6	                           test esi, esi	       530	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44
0x4000b05	     0xf8491020000	                            je 0x4000d9c	       530	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44
0x4000b0b	    0x488b3d000000	            mov rdi, qword [0x04000b12] 	       534	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44	CALL_54
0x4000b12	      0xba03000000	                              mov edx, 3	       534	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44	CALL_54
0x4000b17	          0x4889ee	                            mov rsi, rbp	       534	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44	CALL_54
0x4000b1a	      0xe800000000	                          call 0x4000b1f	       534	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44	CALL_54
0x4000b1f	          0x4885c0	                           test rax, rax	       536	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44	IF_45
0x4000b22	          0x4989c4	                            mov r12, rax	       534	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44	CALL_54
0x4000b25	     0xf8471020000	                            je 0x4000d9c	       536	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44	IF_45
0x4000b2b	          0x4c89f6	                            mov rsi, r14	        97	stdio2.h	CALL_9
0x4000b2e	          0x4889c7	                            mov rdi, rax	        97	stdio2.h	CALL_9
0x4000b31	      0xe800000000	                          call 0x4000b36	        97	stdio2.h	CALL_9
0x4000b36	          0x4c89e7	                            mov rdi, r12	       539	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44	IF_45	CALL_55
0x4000b39	      0xe800000000	                          call 0x4000b3e	       539	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44	IF_45	CALL_55
0x4000b3e	         0xfb64302	               movzx eax, byte [rbx + 2]	       539	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44	IF_45	CALL_55
0x4000b42	      0xe900f7ffff	                           jmp 0x4000247	       540	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_12	IF_42	ELSE_13	IF_44	IF_45
0x4000b47	        0x488d0440	                  lea rax, [rax + rax*2]	       458	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32
0x4000b4b	        0x4183c501	                             add r13d, 1	       461	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32
0x4000b4f	        0x4c8d7b02	                      lea r15, [rbx + 2]	       460	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32
0x4000b53	      0x488b44c470	    mov rax, qword [rsp + rax*8 + 0x70] 	       458	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32
0x4000b58	          0x4885c0	                           test rax, rax	       462	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32	IF_33
0x4000b5b	            0x7426	                            je 0x4000b83	       462	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32	IF_33
0x4000b5d	    0x488b90d00000	            mov rdx, qword [rax + 0xd0] 	       464	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32	ELSE_7	IF_34
0x4000b64	          0x4885d2	                           test rdx, rdx	       464	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32	ELSE_7	IF_34
0x4000b67	            0x7406	                            je 0x4000b6f	       464	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32	ELSE_7	IF_34
0x4000b69	        0xf6424801	               test byte [rdx + 0x48], 1	       465	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32	ELSE_7	IF_34	CALL_46
0x4000b6d	            0x7436	                            je 0x4000ba5	       465	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_6	IF_32	ELSE_7	IF_34	CALL_46
0x4000b6f	          0x488b38	                    mov rdi, qword [rax]	        97	stdio2.h	CALL_9
0x4000b72	          0x4c89f6	                            mov rsi, r14	        97	stdio2.h	CALL_9
0x4000b75	      0xe800000000	                          call 0x4000b7a	        97	stdio2.h	CALL_9
0x4000b7a	         0xfb64302	               movzx eax, byte [rbx + 2]	        97	stdio2.h	CALL_9
0x4000b7e	      0xe9c4f6ffff	                           jmp 0x4000247	        97	stdio2.h	CALL_9
0x4000b83	    0x488b0d000000	            mov rcx, qword [0x04000b8a] 	        97	stdio2.h	CALL_9
0x4000b8a	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000b8f	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000b94	          0x4c89f7	                            mov rdi, r14	        97	stdio2.h	CALL_9
0x4000b97	      0xe800000000	                          call 0x4000b9c	        97	stdio2.h	CALL_9
0x4000b9c	         0xfb64302	               movzx eax, byte [rbx + 2]	        97	stdio2.h	CALL_9
0x4000ba0	      0xe9a2f6ffff	                           jmp 0x4000247	        97	stdio2.h	CALL_9
0x4000ba5	          0x4c8b00	                     mov r8, qword [rax]	        97	stdio2.h	CALL_9
0x4000ba8	          0x488b0a	                    mov rcx, qword [rdx]	        97	stdio2.h	CALL_9
0x4000bab	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000bb0	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000bb5	          0x4c89f7	                            mov rdi, r14	        97	stdio2.h	CALL_9
0x4000bb8	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x4000bba	      0xe800000000	                          call 0x4000bbf	        97	stdio2.h	CALL_9
0x4000bbf	         0xfb64302	               movzx eax, byte [rbx + 2]	        97	stdio2.h	CALL_9
0x4000bc3	      0xe97ff6ffff	                           jmp 0x4000247	        97	stdio2.h	CALL_9
0x4000bc8	      0x488b4cc470	    mov rcx, qword [rsp + rax*8 + 0x70] 	        97	stdio2.h	CALL_9
0x4000bcd	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000bd2	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000bd7	          0x4c89f7	                            mov rdi, r14	        97	stdio2.h	CALL_9
0x4000bda	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x4000bdc	        0x4183c501	                             add r13d, 1	       549	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	ELSE_14
0x4000be0	      0xe800000000	                          call 0x4000be5	        97	stdio2.h	CALL_9
0x4000be5	         0xfb64301	               movzx eax, byte [rbx + 1]	        97	stdio2.h	CALL_9
0x4000be9	      0xe959f6ffff	                           jmp 0x4000247	        97	stdio2.h	CALL_9
0x4000bee	    0x488b35000000	            mov rsi, qword [0x04000bf5] 	       366	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000bf5	          0x4885f6	                           test rsi, rsi	       366	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000bf8	            0x7415	                            je 0x4000c0f	       366	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000bfa	    0x488b05000000	            mov rax, qword [0x04000c01] 	       367	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000c01	          0x4885c0	                           test rax, rax	       368	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000c04	            0x7409	                            je 0x4000c0f	       368	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000c06	          0x4839f5	                            cmp rbp, rsi	       368	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000c09	     0xf8489000000	                            je 0x4000c98	       368	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000c0f	            0x31ff	                            xor edi, edi	       374	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_30
0x4000c11	      0xba05000000	                              mov edx, 5	       374	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_30
0x4000c16	      0xbe00000000	                              mov esi, 0	       374	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_30
0x4000c1b	      0xe800000000	                          call 0x4000c20	       374	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_30
0x4000c20	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       374	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_30
0x4000c25	          0x4889c6	                            mov rsi, rax	       374	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_30
0x4000c28	          0x4c89f7	                            mov rdi, r14	       374	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_30
0x4000c2b	            0x31c0	                            xor eax, eax	       374	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_30
0x4000c2d	          0x4889ea	                            mov rdx, rbp	       374	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_30
0x4000c30	      0xe800000000	                          call 0x4000c35	       374	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_30
0x4000c35	    0x488b3d000000	            mov rdi, qword [0x04000c3c] 	       378	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	IF_18
0x4000c3c	    0x48892d000000	            mov qword [0x04000c43], rbp 	       377	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000c43	          0x4885ff	                           test rdi, rdi	       378	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	IF_18
0x4000c46	            0x7405	                            je 0x4000c4d	       378	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	IF_18
0x4000c48	      0xe800000000	                          call 0x4000c4d	       379	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_31
0x4000c4d	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	       381	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	IF_19
0x4000c52	    0x48c705000000	               mov qword [0x04000c5d], 0	       380	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000c5d	          0x4885ff	                           test rdi, rdi	       381	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	IF_19
0x4000c60	            0x740c	                            je 0x4000c6e	       381	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	IF_19
0x4000c62	      0xe800000000	                          call 0x4000c67	       382	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_32
0x4000c67	    0x488905000000	            mov qword [0x04000c6e], rax 	       382	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_32
0x4000c6e	    0x488b3d000000	            mov rdi, qword [0x04000c75] 	       383	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	IF_20
0x4000c75	          0x4885ff	                           test rdi, rdi	       383	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	IF_20
0x4000c78	            0x7405	                            je 0x4000c7f	       383	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	IF_20
0x4000c7a	      0xe800000000	                          call 0x4000c7f	       384	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_33
0x4000c7f	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	       385	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_34
0x4000c84	          0x4531e4	                          xor r12d, r12d	       387	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x4000c87	      0xe800000000	                          call 0x4000c8c	       385	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_34
0x4000c8c	    0x488905000000	            mov qword [0x04000c93], rax 	       385	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_34
0x4000c93	      0xe995f9ffff	                           jmp 0x400062d	       385	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_34
0x4000c98	    0x488b3d000000	            mov rdi, qword [0x04000c9f] 	       369	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000c9f	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	       369	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000ca4	          0x4885ff	                           test rdi, rdi	       369	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000ca7	        0x410f94c1	                                sete r9b	       369	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000cab	          0x4885f6	                           test rsi, rsi	       369	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000cae	        0x410f94c0	                                sete r8b	       369	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000cb2	          0x4538c1	                            cmp r9b, r8b	       369	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000cb5	     0xf8554ffffff	                           jne 0x4000c0f	       369	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000cbb	          0x4885f6	                           test rsi, rsi	       370	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000cbe	     0xf84ec000000	                            je 0x4000db0	       370	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17
0x4000cc4	      0xe800000000	                          call 0x4000cc9	       371	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_27
0x4000cc9	            0x85c0	                           test eax, eax	       371	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_27
0x4000ccb	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       371	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_27
0x4000cd0	      0x4889442408	                mov qword [rsp + 8], rax	       371	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_27
0x4000cd5	     0xf8534ffffff	                           jne 0x4000c0f	       371	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_27
0x4000cdb	    0x488b3d000000	            mov rdi, qword [0x04000ce2] 	       372	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_28
0x4000ce2	          0x4889c6	                            mov rsi, rax	       372	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_28
0x4000ce5	          0x4531e4	                          xor r12d, r12d	       387	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x4000ce8	      0xe800000000	                          call 0x4000ced	       372	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_28
0x4000ced	            0x85c0	                           test eax, eax	       372	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_28
0x4000cef	     0xf8438f9ffff	                            je 0x400062d	       372	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_28
0x4000cf5	      0xe915ffffff	                           jmp 0x4000c0f	       372	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_28
0x4000cfa	        0x488d0440	                  lea rax, [rax + rax*2]	       438	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28
0x4000cfe	          0x4c89f6	                            mov rsi, r14	        97	stdio2.h	CALL_9
0x4000d01	        0x4183c501	                             add r13d, 1	       439	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28
0x4000d05	        0x4c8d7b02	                      lea r15, [rbx + 2]	       437	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28
0x4000d09	      0x488b6cc470	    mov rbp, qword [rsp + rax*8 + 0x70] 	       438	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28
0x4000d0e	    0x4c8ba5f00000	            mov r12, qword [rbp + 0xf0] 	       440	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28
0x4000d15	        0x488b7d00	                    mov rdi, qword [rbp]	        97	stdio2.h	CALL_9
0x4000d19	      0xe800000000	                          call 0x4000d1e	        97	stdio2.h	CALL_9
0x4000d1e	          0x4d85e4	                           test r12, r12	       442	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_29
0x4000d21	     0xf846dfcffff	                            je 0x4000994	       442	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_29
0x4000d27	      0x498b442408	                mov rax, qword [r12 + 8]	       443	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_29	CALL_41
0x4000d2c	          0x8b4008	                mov eax, dword [rax + 8]	       443	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_29	CALL_41
0x4000d2f	          0x83f805	                              cmp eax, 5	       443	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_29	CALL_41
0x4000d32	     0xf84a6000000	                            je 0x4000dde	       443	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_29	CALL_41
0x4000d38	          0x83f802	                              cmp eax, 2	       448	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_44
0x4000d3b	     0xf8553fcffff	                           jne 0x4000994	       448	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_44
0x4000d41	    0x488b85f00000	            mov rax, qword [rbp + 0xf0] 	       449	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_45
0x4000d48	        0x488b4008	                mov rax, qword [rax + 8]	       449	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_45
0x4000d4c	        0x83780802	                  cmp dword [rax + 8], 2	       449	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_45
0x4000d50	     0xf853efcffff	                           jne 0x4000994	       449	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_45
0x4000d56	    0x488b85e00000	            mov rax, qword [rbp + 0xe0] 	       449	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_45
0x4000d5d	          0x4885c0	                           test rax, rax	       449	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_45
0x4000d60	     0xf842efcffff	                            je 0x4000994	       449	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_45
0x4000d66	        0x488b4040	            mov rax, qword [rax + 0x40] 	       449	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_45
0x4000d6a	          0x4885c0	                           test rax, rax	       449	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_45
0x4000d6d	     0xf8421fcffff	                            je 0x4000994	       449	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30	CALL_45
0x4000d73	          0x488b08	                    mov rcx, qword [rax]	       451	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	ELSE_5	IF_30
0x4000d76	          0x4885c9	                           test rcx, rcx	       452	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_31
0x4000d79	     0xf8415fcffff	                            je 0x4000994	       452	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_31
0x4000d7f	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_9
0x4000d84	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_9
0x4000d89	          0x4c89f7	                            mov rdi, r14	        97	stdio2.h	CALL_9
0x4000d8c	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_9
0x4000d8e	      0xe800000000	                          call 0x4000d93	        97	stdio2.h	CALL_9
0x4000d93	         0xfb64302	               movzx eax, byte [rbx + 2]	        97	stdio2.h	CALL_9
0x4000d97	      0xe9abf4ffff	                           jmp 0x4000247	        97	stdio2.h	CALL_9
0x4000d9c	          0x4c89f6	                            mov rsi, r14	        97	stdio2.h	CALL_9
0x4000d9f	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_9
0x4000da2	      0xe800000000	                          call 0x4000da7	        97	stdio2.h	CALL_9
0x4000da7	         0xfb64302	               movzx eax, byte [rbx + 2]	        97	stdio2.h	CALL_9
0x4000dab	      0xe997f4ffff	                           jmp 0x4000247	        97	stdio2.h	CALL_9
0x4000db0	          0x4889d6	                            mov rsi, rdx	       372	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_28
0x4000db3	          0x4889c7	                            mov rdi, rax	       372	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_28
0x4000db6	        0x884c242f	               mov byte [rsp + 0x2f], cl	       372	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_28
0x4000dba	      0x4889542420	             mov qword [rsp + 0x20], rdx	       372	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_28
0x4000dbf	      0xe800000000	                          call 0x4000dc4	       372	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_28
0x4000dc4	            0x85c0	                           test eax, eax	       372	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_28
0x4000dc6	     0xf8543feffff	                           jne 0x4000c0f	       372	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16	IF_17	CALL_28
0x4000dcc	          0x4531e4	                          xor r12d, r12d	       387	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x4000dcf	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       387	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x4000dd4	       0xfb64c242f	           movzx ecx, byte [rsp + 0x2f] 	       387	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x4000dd9	      0xe959fbffff	                           jmp 0x4000937	       387	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_15	IF_16
0x4000dde	    0x488b85e00000	            mov rax, qword [rbp + 0xe0] 	       444	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_29	CALL_42
0x4000de5	    0x4883b8c00000	               cmp qword [rax + 0xc0], 0	       444	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_29	CALL_42
0x4000ded	     0xf84a1fbffff	                            je 0x4000994	       444	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_29	CALL_42
0x4000df3	        0xf6452302	               test byte [rbp + 0x23], 2	       445	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_29
0x4000df7	     0xf8597fbffff	                           jne 0x4000994	       445	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	IF_29
0x4000dfd	    0x488b88b00000	            mov rcx, qword [rax + 0xb0] 	       446	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	CALL_43
0x4000e04	      0xe96dffffff	                           jmp 0x4000d76	       446	ldmisc.c	FUNCTION_1	WHILE_3	IF_9	SWITCH_3	IF_28	CALL_43
