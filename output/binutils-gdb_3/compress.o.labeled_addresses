bfd_is_section_compressed_with_header	FOR,0:CALL,8:ELSE,4:WHILE,0:SWITCH,0:IF,7:DO,0:functions,0	109
0x4000400	            0x4157	                                push r15	       381	compress.c	FUNCTION_5
0x4000402	            0x4156	                                push r14	       381	compress.c	FUNCTION_5
0x4000404	          0x4989cf	                            mov r15, rcx	       381	compress.c	FUNCTION_5
0x4000407	            0x4155	                                push r13	       381	compress.c	FUNCTION_5
0x4000409	            0x4154	                                push r12	       381	compress.c	FUNCTION_5
0x400040b	          0x4989fe	                            mov r14, rdi	       381	compress.c	FUNCTION_5
0x400040e	              0x55	                                push rbp	       381	compress.c	FUNCTION_5
0x400040f	              0x53	                                push rbx	       381	compress.c	FUNCTION_5
0x4000410	          0x4889f5	                            mov rbp, rsi	       381	compress.c	FUNCTION_5
0x4000413	          0x4989d4	                            mov r12, rdx	       381	compress.c	FUNCTION_5
0x4000416	        0x4883ec38	                           sub rsp, 0x38	       381	compress.c	FUNCTION_5
0x400041a	         0xfb65e24	           movzx ebx, byte [rsi + 0x24] 	       385	compress.c	FUNCTION_5
0x400041e	    0x64488b042528	                mov rax, qword fs:[0x28]	       381	compress.c	FUNCTION_5
0x4000427	      0x4889442428	             mov qword [rsp + 0x28], rax	       381	compress.c	FUNCTION_5
0x400042c	            0x31c0	                            xor eax, eax	       381	compress.c	FUNCTION_5
0x400042e	      0xe800000000	                          call 0x4000433	       388	compress.c	FUNCTION_5	CALL_1
0x4000433	          0xc0eb04	                               shr bl, 4	       385	compress.c	FUNCTION_5
0x4000436	          0x83e303	                              and ebx, 3	       385	compress.c	FUNCTION_5
0x4000439	          0x83f818	                           cmp eax, 0x18	       389	compress.c	FUNCTION_5	IF_1
0x400043c	     0xf8f39010000	                            jg 0x400057b	       389	compress.c	FUNCTION_5	IF_1
0x4000442	            0x85c0	                           test eax, eax	       391	compress.c	FUNCTION_5
0x4000444	          0x4189c5	                           mov r13d, eax	       391	compress.c	FUNCTION_5
0x4000447	     0xf848b000000	                            je 0x40004d8	       391	compress.c	FUNCTION_5
0x400044d	        0x806524cf	             and byte [rbp + 0x24], 0xcf	       394	compress.c	FUNCTION_5
0x4000451	      0x488d542410	                   lea rdx, [rsp + 0x10]	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x4000456	            0x31c9	                            xor ecx, ecx	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x4000458	          0x4c63c0	                          movsxd r8, eax	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x400045b	          0x4889ee	                            mov rsi, rbp	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x400045e	          0x4c89f7	                            mov rdi, r14	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x4000461	      0xe800000000	                          call 0x4000466	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x4000466	            0x85c0	                           test eax, eax	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x4000468	     0xf84fa000000	                            je 0x4000568	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x400046e	        0x488b4538	            mov rax, qword [rbp + 0x38] 	       409	compress.c	FUNCTION_5	ELSE_1	ELSE_2
0x4000472	      0x488d742410	                   lea rsi, [rsp + 0x10]	       414	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6	CALL_5
0x4000477	          0x4889ea	                            mov rdx, rbp	       414	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6	CALL_5
0x400047a	          0x4c89f9	                            mov rcx, r15	       414	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6	CALL_5
0x400047d	          0x4c89f7	                            mov rdi, r14	       414	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6	CALL_5
0x4000480	          0x498907	                    mov qword [r15], rax	       409	compress.c	FUNCTION_5	ELSE_1	ELSE_2
0x4000483	      0xe800000000	                          call 0x4000488	       414	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6	CALL_5
0x4000488	            0x89c2	                            mov edx, eax	       414	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6	CALL_5
0x400048a	      0xb801000000	                              mov eax, 1	       414	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6	CALL_5
0x400048f	            0x85d2	                           test edx, edx	       414	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6	CALL_5
0x4000491	      0xbaffffffff	                     mov edx, 0xffffffff	       414	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6	CALL_5
0x4000496	        0x440f44ea	                         cmove r13d, edx	       414	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	IF_5	IF_6	CALL_5
0x400049a	         0xfb65524	           movzx edx, byte [rbp + 0x24] 	       430	compress.c	FUNCTION_5
0x400049e	          0x83e303	                              and ebx, 3	       430	compress.c	FUNCTION_5
0x40004a1	          0xc1e304	                              shl ebx, 4	       430	compress.c	FUNCTION_5
0x40004a4	          0x83e2cf	                     and edx, 0xffffffcf	       430	compress.c	FUNCTION_5
0x40004a7	             0x9d3	                             or ebx, edx	       430	compress.c	FUNCTION_5
0x40004a9	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       433	compress.c	FUNCTION_5
0x40004ae	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       433	compress.c	FUNCTION_5
0x40004b7	          0x885d24	               mov byte [rbp + 0x24], bl	       430	compress.c	FUNCTION_5
0x40004ba	        0x45892c24	                   mov dword [r12], r13d	       431	compress.c	FUNCTION_5
0x40004be	     0xf85b2000000	                           jne 0x4000576	       433	compress.c	FUNCTION_5
0x40004c4	        0x4883c438	                           add rsp, 0x38	       433	compress.c	FUNCTION_5
0x40004c8	              0x5b	                                 pop rbx	       433	compress.c	FUNCTION_5
0x40004c9	              0x5d	                                 pop rbp	       433	compress.c	FUNCTION_5
0x40004ca	            0x415c	                                 pop r12	       433	compress.c	FUNCTION_5
0x40004cc	            0x415d	                                 pop r13	       433	compress.c	FUNCTION_5
0x40004ce	            0x415e	                                 pop r14	       433	compress.c	FUNCTION_5
0x40004d0	            0x415f	                                 pop r15	       433	compress.c	FUNCTION_5
0x40004d2	              0xc3	                                     ret	       433	compress.c	FUNCTION_5
0x40004d3	       0xf1f440000	                   nop dword [rax + rax]	       433	compress.c	FUNCTION_5
0x40004d8	        0x806524cf	             and byte [rbp + 0x24], 0xcf	       394	compress.c	FUNCTION_5
0x40004dc	      0x4c8d4c2410	                    lea r9, [rsp + 0x10]	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x40004e1	            0x31c9	                            xor ecx, ecx	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x40004e3	    0x41b80c000000	                            mov r8d, 0xc	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x40004e9	          0x4889ee	                            mov rsi, rbp	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x40004ec	          0x4c89f7	                            mov rdi, r14	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x40004ef	          0x4c89ca	                             mov rdx, r9	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x40004f2	      0x4c894c2408	                 mov qword [rsp + 8], r9	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x40004f7	      0xe800000000	                          call 0x40004fc	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x40004fc	            0x85c0	                           test eax, eax	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x40004fe	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x4000503	            0x7463	                            je 0x4000568	       397	compress.c	FUNCTION_5	IF_2	CALL_3
0x4000505	      0xb904000000	                              mov ecx, 4	       402	compress.c	FUNCTION_5	IF_2	CALL_4
0x400050a	      0xbf00000000	                              mov edi, 0	       402	compress.c	FUNCTION_5	IF_2	CALL_4
0x400050f	          0x4c89ce	                             mov rsi, r9	       402	compress.c	FUNCTION_5	IF_2	CALL_4
0x4000512	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       402	compress.c	FUNCTION_5	IF_2	CALL_4
0x4000514	        0x488b4d38	            mov rcx, qword [rbp + 0x38] 	       409	compress.c	FUNCTION_5	ELSE_1	ELSE_2
0x4000518	           0xf97c2	                                 seta dl	       402	compress.c	FUNCTION_5	IF_2	CALL_4
0x400051b	           0xf92c0	                                 setb al	       402	compress.c	FUNCTION_5	IF_2	CALL_4
0x400051e	            0x38c2	                              cmp dl, al	       410	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4
0x4000520	          0x49890f	                    mov qword [r15], rcx	       409	compress.c	FUNCTION_5	ELSE_1	ELSE_2
0x4000523	            0x754a	                           jne 0x400056f	       410	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4
0x4000525	        0x488b7500	                    mov rsi, qword [rbp]	       422	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_6
0x4000529	      0xbf00000000	                              mov edi, 0	       422	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_6
0x400052e	      0xb90b000000	                            mov ecx, 0xb	       422	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_6
0x4000533	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       422	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_6
0x4000535	            0x7515	                           jne 0x400054c	       422	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_6
0x4000537	       0xfb6542414	           movzx edx, byte [rsp + 0x14] 	       423	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_7
0x400053c	            0x31c0	                            xor eax, eax	       423	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_7
0x400053e	    0xf68412000000	            test byte [rdx + rdx], 0x10 	       423	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_7
0x4000546	     0xf854effffff	                           jne 0x400049a	       423	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	ELSE_3	IF_7	CALL_7
0x400054c	        0x498d7904	                       lea rdi, [r9 + 4]	       426	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	CALL_8
0x4000550	      0xe800000000	                          call 0x4000555	       426	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	CALL_8
0x4000555	          0x498907	                    mov qword [r15], rax	       426	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	CALL_8
0x4000558	      0xb801000000	                              mov eax, 1	       426	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	CALL_8
0x400055d	      0xe938ffffff	                           jmp 0x400049a	       426	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	CALL_8
0x4000562	    0x660f1f440000	                    nop word [rax + rax]	       426	compress.c	FUNCTION_5	ELSE_1	ELSE_2	IF_4	CALL_8
0x4000568	        0x488b4538	            mov rax, qword [rbp + 0x38] 	       409	compress.c	FUNCTION_5	ELSE_1	ELSE_2
0x400056c	          0x498907	                    mov qword [r15], rax	       409	compress.c	FUNCTION_5	ELSE_1	ELSE_2
0x400056f	            0x31c0	                            xor eax, eax	       409	compress.c	FUNCTION_5	ELSE_1	ELSE_2
0x4000571	      0xe924ffffff	                           jmp 0x400049a	       409	compress.c	FUNCTION_5	ELSE_1	ELSE_2
0x4000576	      0xe800000000	                          call 0x400057b	       433	compress.c	FUNCTION_5
0x400057b	      0xba00000000	                              mov edx, 0	       390	compress.c	FUNCTION_5	CALL_2
0x4000580	      0xbe86010000	                          mov esi, 0x186	       390	compress.c	FUNCTION_5	CALL_2
0x4000585	      0xbf00000000	                              mov edi, 0	       390	compress.c	FUNCTION_5	CALL_2
0x400058a	      0xe800000000	                          call 0x400058f	       390	compress.c	FUNCTION_5	CALL_2
decompress_contents	FOR,0:CALL,6:ELSE,0:WHILE,1:SWITCH,0:IF,2:DO,0:functions,0	75
0x4000040	            0x4155	                                push r13	        34	compress.c	FUNCTION_1
0x4000042	            0x4154	                                push r12	        34	compress.c	FUNCTION_1
0x4000044	          0x4989f8	                             mov r8, rdi	        34	compress.c	FUNCTION_1
0x4000047	              0x55	                                push rbp	        34	compress.c	FUNCTION_1
0x4000048	              0x53	                                push rbx	        34	compress.c	FUNCTION_1
0x4000049	          0x4989cc	                            mov r12, rcx	        34	compress.c	FUNCTION_1
0x400004c	      0xb90e000000	                            mov ecx, 0xe	        90	string3.h	FUNCTION_13	CALL_6
0x4000051	          0x4989d5	                            mov r13, rdx	        34	compress.c	FUNCTION_1
0x4000054	      0xba70000000	                           mov edx, 0x70	        51	compress.c	FUNCTION_1	CALL_3
0x4000059	    0x4881ec880000	                           sub rsp, 0x88	        34	compress.c	FUNCTION_1
0x4000060	    0x64488b042528	                mov rax, qword fs:[0x28]	        34	compress.c	FUNCTION_1
0x4000069	      0x4889442478	             mov qword [rsp + 0x78], rax	        34	compress.c	FUNCTION_1
0x400006e	            0x31c0	                            xor eax, eax	        34	compress.c	FUNCTION_1
0x4000070	          0x4889e7	                            mov rdi, rsp	        90	string3.h	FUNCTION_13	CALL_6
0x4000073	          0x4889e5	                            mov rbp, rsp	        90	string3.h	FUNCTION_13	CALL_6
0x4000076	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_13	CALL_6
0x4000079	        0x89742408	                mov dword [rsp + 8], esi	        46	compress.c	FUNCTION_1
0x400007d	          0x4889e7	                            mov rdi, rsp	        51	compress.c	FUNCTION_1	CALL_3
0x4000080	      0xbe00000000	                              mov esi, 0	        51	compress.c	FUNCTION_1	CALL_3
0x4000085	        0x4c890424	                     mov qword [rsp], r8	        47	compress.c	FUNCTION_1
0x4000089	      0x4489642420	            mov dword [rsp + 0x20], r12d	        48	compress.c	FUNCTION_1
0x400008e	      0xe800000000	                          call 0x4000093	        51	compress.c	FUNCTION_1	CALL_3
0x4000093	        0x8b4c2408	                mov ecx, dword [rsp + 8]	        52	compress.c	FUNCTION_1	WHILE_1
0x4000097	            0x89c3	                            mov ebx, eax	        51	compress.c	FUNCTION_1	CALL_3
0x4000099	            0x85c9	                           test ecx, ecx	        52	compress.c	FUNCTION_1	WHILE_1
0x400009b	            0x7456	                            je 0x40000f3	        52	compress.c	FUNCTION_1	WHILE_1
0x400009d	            0x85db	                           test ebx, ebx	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x400009f	        0x8b442420	            mov eax, dword [rsp + 0x20] 	        52	compress.c	FUNCTION_1	WHILE_1
0x40000a3	            0x754e	                           jne 0x40000f3	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x40000a5	            0x85c0	                           test eax, eax	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x40000a7	            0x7525	                           jne 0x40000ce	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x40000a9	            0xeb48	                           jmp 0x40000f3	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x40000ab	       0xf1f440000	                   nop dword [rax + rax]	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x40000b0	          0x4889ef	                            mov rdi, rbp	        61	compress.c	FUNCTION_1	WHILE_1	CALL_5
0x40000b3	      0xe800000000	                          call 0x40000b8	        61	compress.c	FUNCTION_1	WHILE_1	CALL_5
0x40000b8	        0x8b542408	                mov edx, dword [rsp + 8]	        52	compress.c	FUNCTION_1	WHILE_1
0x40000bc	            0x89c3	                            mov ebx, eax	        61	compress.c	FUNCTION_1	WHILE_1	CALL_5
0x40000be	            0x85d2	                           test edx, edx	        52	compress.c	FUNCTION_1	WHILE_1
0x40000c0	            0x7431	                            je 0x40000f3	        52	compress.c	FUNCTION_1	WHILE_1
0x40000c2	        0x8b442420	            mov eax, dword [rsp + 0x20] 	        52	compress.c	FUNCTION_1	WHILE_1
0x40000c6	            0x85c0	                           test eax, eax	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x40000c8	            0x7429	                            je 0x40000f3	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x40000ca	            0x85db	                           test ebx, ebx	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x40000cc	            0x7525	                           jne 0x40000f3	        54	compress.c	FUNCTION_1	WHILE_1	IF_1
0x40000ce	          0x4c89e1	                            mov rcx, r12	        56	compress.c	FUNCTION_1	WHILE_1
0x40000d1	      0xbe04000000	                              mov esi, 4	        58	compress.c	FUNCTION_1	WHILE_1	CALL_4
0x40000d6	          0x4889ef	                            mov rdi, rbp	        58	compress.c	FUNCTION_1	WHILE_1	CALL_4
0x40000d9	          0x4829c1	                            sub rcx, rax	        56	compress.c	FUNCTION_1	WHILE_1
0x40000dc	          0x4889c8	                            mov rax, rcx	        56	compress.c	FUNCTION_1	WHILE_1
0x40000df	          0x4c01e8	                            add rax, r13	        56	compress.c	FUNCTION_1	WHILE_1
0x40000e2	      0x4889442418	             mov qword [rsp + 0x18], rax	        56	compress.c	FUNCTION_1	WHILE_1
0x40000e7	      0xe800000000	                          call 0x40000ec	        58	compress.c	FUNCTION_1	WHILE_1	CALL_4
0x40000ec	          0x83f801	                              cmp eax, 1	        59	compress.c	FUNCTION_1	WHILE_1	IF_2
0x40000ef	            0x89c3	                            mov ebx, eax	        58	compress.c	FUNCTION_1	WHILE_1	CALL_4
0x40000f1	            0x74bd	                            je 0x40000b0	        59	compress.c	FUNCTION_1	WHILE_1	IF_2
0x40000f3	          0x4889ef	                            mov rdi, rbp	        63	compress.c	FUNCTION_1	CALL_6
0x40000f6	      0xe800000000	                          call 0x40000fb	        63	compress.c	FUNCTION_1	CALL_6
0x40000fb	            0x31d2	                            xor edx, edx	        64	compress.c	FUNCTION_1
0x40000fd	             0x9c3	                             or ebx, eax	        64	compress.c	FUNCTION_1
0x40000ff	            0x750b	                           jne 0x400010c	        64	compress.c	FUNCTION_1
0x4000101	        0x8b442420	            mov eax, dword [rsp + 0x20] 	        64	compress.c	FUNCTION_1
0x4000105	            0x31d2	                            xor edx, edx	        64	compress.c	FUNCTION_1
0x4000107	            0x85c0	                           test eax, eax	        64	compress.c	FUNCTION_1
0x4000109	           0xf94c2	                                 sete dl	        64	compress.c	FUNCTION_1
0x400010c	            0x89d0	                            mov eax, edx	        65	compress.c	FUNCTION_1
0x400010e	      0x488b542478	            mov rdx, qword [rsp + 0x78] 	        65	compress.c	FUNCTION_1
0x4000113	    0x644833142528	                xor rdx, qword fs:[0x28]	        65	compress.c	FUNCTION_1
0x400011c	            0x750e	                           jne 0x400012c	        65	compress.c	FUNCTION_1
0x400011e	    0x4881c4880000	                           add rsp, 0x88	        65	compress.c	FUNCTION_1
0x4000125	              0x5b	                                 pop rbx	        65	compress.c	FUNCTION_1
0x4000126	              0x5d	                                 pop rbp	        65	compress.c	FUNCTION_1
0x4000127	            0x415c	                                 pop r12	        65	compress.c	FUNCTION_1
0x4000129	            0x415d	                                 pop r13	        65	compress.c	FUNCTION_1
0x400012b	              0xc3	                                     ret	        65	compress.c	FUNCTION_1
0x400012c	      0xe800000000	                          call 0x4000131	        65	compress.c	FUNCTION_1
bfd_get_full_section_contents	FOR,0:CALL,18:ELSE,1:WHILE,0:SWITCH,1:IF,18:DO,0:functions,0	176
0x4000140	            0x4157	                                push r15	       224	compress.c	FUNCTION_3
0x4000142	            0x4156	                                push r14	       224	compress.c	FUNCTION_3
0x4000144	            0x4155	                                push r13	       224	compress.c	FUNCTION_3
0x4000146	            0x4154	                                push r12	       224	compress.c	FUNCTION_3
0x4000148	              0x55	                                push rbp	       224	compress.c	FUNCTION_3
0x4000149	              0x53	                                push rbx	       224	compress.c	FUNCTION_3
0x400014a	        0x4883ec18	                           sub rsp, 0x18	       224	compress.c	FUNCTION_3
0x400014e	         0xfb64744	           movzx eax, byte [rdi + 0x44] 	       233	compress.c	FUNCTION_3	IF_1
0x4000152	          0x83e018	                           and eax, 0x18	       233	compress.c	FUNCTION_3	IF_1
0x4000155	            0x3c10	                            cmp al, 0x10	       233	compress.c	FUNCTION_3	IF_1
0x4000157	     0xf840b010000	                            je 0x4000268	       233	compress.c	FUNCTION_3	IF_1
0x400015d	        0x4c8b6e40	            mov r13, qword [rsi + 0x40] 	       233	compress.c	FUNCTION_3	IF_1
0x4000161	          0x4d85ed	                           test r13, r13	       233	compress.c	FUNCTION_3	IF_1
0x4000164	     0xf84fe000000	                            je 0x4000268	       233	compress.c	FUNCTION_3	IF_1
0x400016a	         0xfb64624	           movzx eax, byte [rsi + 0x24] 	       243	compress.c	FUNCTION_3	SWITCH_1
0x400016e	          0x4989d4	                            mov r12, rdx	       243	compress.c	FUNCTION_3	SWITCH_1
0x4000171	          0x4889f3	                            mov rbx, rsi	       243	compress.c	FUNCTION_3	SWITCH_1
0x4000174	          0x4889fd	                            mov rbp, rdi	       243	compress.c	FUNCTION_3	SWITCH_1
0x4000177	          0x4c8b32	                    mov r14, qword [rdx]	       226	compress.c	FUNCTION_3
0x400017a	          0xc0e804	                               shr al, 4	       243	compress.c	FUNCTION_3	SWITCH_1
0x400017d	          0x83e003	                              and eax, 3	       243	compress.c	FUNCTION_3	SWITCH_1
0x4000180	            0x3c01	                               cmp al, 1	       243	compress.c	FUNCTION_3	SWITCH_1
0x4000182	     0xf8428010000	                            je 0x40002b0	       243	compress.c	FUNCTION_3	SWITCH_1
0x4000188	     0xf8252010000	                            jb 0x40002e0	       243	compress.c	FUNCTION_3	SWITCH_1
0x400018e	            0x3c02	                               cmp al, 2	       243	compress.c	FUNCTION_3	SWITCH_1
0x4000190	     0xf8502010000	                           jne 0x4000298	       243	compress.c	FUNCTION_3	SWITCH_1
0x4000196	        0x488b7e48	            mov rdi, qword [rsi + 0x48] 	       272	compress.c	FUNCTION_3	SWITCH_1	CALL_7
0x400019a	      0xe800000000	                          call 0x400019f	       272	compress.c	FUNCTION_3	SWITCH_1	CALL_7
0x400019f	          0x4885c0	                           test rax, rax	       273	compress.c	FUNCTION_3	SWITCH_1	IF_8
0x40001a2	          0x4989c7	                            mov r15, rax	       272	compress.c	FUNCTION_3	SWITCH_1	CALL_7
0x40001a5	     0xf8485010000	                            je 0x4000330	       273	compress.c	FUNCTION_3	SWITCH_1	IF_8
0x40001ab	        0x4c8b4348	              mov r8, qword [rbx + 0x48]	       281	compress.c	FUNCTION_3	SWITCH_1
0x40001af	        0x806324cf	             and byte [rbx + 0x24], 0xcf	       282	compress.c	FUNCTION_3	SWITCH_1
0x40001b3	            0x31c9	                            xor ecx, ecx	       283	compress.c	FUNCTION_3	SWITCH_1	CALL_8
0x40001b5	        0x4c8b5340	            mov r10, qword [rbx + 0x40] 	       275	compress.c	FUNCTION_3	SWITCH_1
0x40001b9	        0x4c8b4b38	              mov r9, qword [rbx + 0x38]	       276	compress.c	FUNCTION_3	SWITCH_1
0x40001bd	          0x4889c2	                            mov rdx, rax	       283	compress.c	FUNCTION_3	SWITCH_1	CALL_8
0x40001c0	    0x48c743400000	               mov qword [rbx + 0x40], 0	       280	compress.c	FUNCTION_3	SWITCH_1
0x40001c8	          0x4889de	                            mov rsi, rbx	       283	compress.c	FUNCTION_3	SWITCH_1	CALL_8
0x40001cb	          0x4889ef	                            mov rdi, rbp	       283	compress.c	FUNCTION_3	SWITCH_1	CALL_8
0x40001ce	        0x4c894338	              mov qword [rbx + 0x38], r8	       281	compress.c	FUNCTION_3	SWITCH_1
0x40001d2	      0x4c89542408	                mov qword [rsp + 8], r10	       275	compress.c	FUNCTION_3	SWITCH_1
0x40001d7	        0x4c890c24	                     mov qword [rsp], r9	       276	compress.c	FUNCTION_3	SWITCH_1
0x40001db	      0xe800000000	                          call 0x40001e0	       283	compress.c	FUNCTION_3	SWITCH_1	CALL_8
0x40001e0	         0xfb65324	           movzx edx, byte [rbx + 0x24] 	       288	compress.c	FUNCTION_3	SWITCH_1
0x40001e4	      0x4c8b542408	                mov r10, qword [rsp + 8]	       286	compress.c	FUNCTION_3	SWITCH_1
0x40001e9	        0x4c8b0c24	                     mov r9, qword [rsp]	       287	compress.c	FUNCTION_3	SWITCH_1
0x40001ed	        0x4c895340	             mov qword [rbx + 0x40], r10	       286	compress.c	FUNCTION_3	SWITCH_1
0x40001f1	          0x83e2cf	                     and edx, 0xffffffcf	       288	compress.c	FUNCTION_3	SWITCH_1
0x40001f4	        0x4c894b38	              mov qword [rbx + 0x38], r9	       287	compress.c	FUNCTION_3	SWITCH_1
0x40001f8	          0x83ca20	                            or edx, 0x20	       288	compress.c	FUNCTION_3	SWITCH_1
0x40001fb	            0x85c0	                           test eax, eax	       289	compress.c	FUNCTION_3	SWITCH_1	IF_9
0x40001fd	          0x885324	               mov byte [rbx + 0x24], dl	       288	compress.c	FUNCTION_3	SWITCH_1
0x4000200	            0x7456	                            je 0x4000258	       289	compress.c	FUNCTION_3	SWITCH_1	IF_9
0x4000202	          0x4d85f6	                           test r14, r14	       292	compress.c	FUNCTION_3	SWITCH_1	IF_10
0x4000205	     0xf84a5010000	                            je 0x40003b0	       292	compress.c	FUNCTION_3	SWITCH_1	IF_10
0x400020b	          0x4889de	                            mov rsi, rbx	       297	compress.c	FUNCTION_3	SWITCH_1	CALL_10
0x400020e	          0x4889ef	                            mov rdi, rbp	       297	compress.c	FUNCTION_3	SWITCH_1	CALL_10
0x4000211	      0xe800000000	                          call 0x4000216	       297	compress.c	FUNCTION_3	SWITCH_1	CALL_10
0x4000216	        0x488b7348	            mov rsi, qword [rbx + 0x48] 	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x400021a	            0x85c0	                           test eax, eax	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x400021c	            0x89c2	                            mov edx, eax	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x400021e	      0xbf0c000000	                            mov edi, 0xc	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x4000223	          0x4c89e9	                            mov rcx, r13	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x4000226	        0x480f45fa	                         cmovne rdi, rdx	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x400022a	          0x4c89f2	                            mov rdx, r14	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x400022d	          0x4829fe	                            sub rsi, rdi	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x4000230	          0x4c01ff	                            add rdi, r15	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x4000233	      0xe808feffff	            call sym.decompress_contents	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x4000238	            0x85c0	                           test eax, eax	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x400023a	     0xf85d8000000	                           jne 0x4000318	       302	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_11
0x4000240	      0xbf11000000	                           mov edi, 0x11	       305	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_12
0x4000245	      0xe800000000	                          call 0x400024a	       305	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_12
0x400024a	        0x4d393424	                    cmp qword [r12], r14	       306	compress.c	FUNCTION_3	SWITCH_1	IF_13	IF_14
0x400024e	            0x7408	                            je 0x4000258	       306	compress.c	FUNCTION_3	SWITCH_1	IF_13	IF_14
0x4000250	          0x4c89f7	                            mov rdi, r14	       307	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_13
0x4000253	      0xe800000000	                          call 0x4000258	       307	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_13
0x4000258	          0x4c89ff	                            mov rdi, r15	       309	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_14
0x400025b	            0x31db	                            xor ebx, ebx	       310	compress.c	FUNCTION_3	SWITCH_1	IF_13
0x400025d	      0xe800000000	                          call 0x4000262	       309	compress.c	FUNCTION_3	SWITCH_1	IF_13	CALL_14
0x4000262	            0xeb1d	                           jmp 0x4000281	       310	compress.c	FUNCTION_3	SWITCH_1	IF_13
0x4000264	         0xf1f4000	                         nop dword [rax]	       310	compress.c	FUNCTION_3	SWITCH_1	IF_13
0x4000268	        0x4c8b6e38	            mov r13, qword [rsi + 0x38] 	       236	compress.c	FUNCTION_3	ELSE_1
0x400026c	          0x4d85ed	                           test r13, r13	       237	compress.c	FUNCTION_3	ELSE_1	IF_2
0x400026f	     0xf85f5feffff	                           jne 0x400016a	       237	compress.c	FUNCTION_3	ELSE_1	IF_2
0x4000275	    0x48c702000000	                      mov qword [rdx], 0	       239	compress.c	FUNCTION_3	ELSE_1	IF_2
0x400027c	      0xbb01000000	                              mov ebx, 1	       240	compress.c	FUNCTION_3	ELSE_1	IF_2
0x4000281	        0x4883c418	                           add rsp, 0x18	       335	compress.c	FUNCTION_3
0x4000285	            0x89d8	                            mov eax, ebx	       335	compress.c	FUNCTION_3
0x4000287	              0x5b	                                 pop rbx	       335	compress.c	FUNCTION_3
0x4000288	              0x5d	                                 pop rbp	       335	compress.c	FUNCTION_3
0x4000289	            0x415c	                                 pop r12	       335	compress.c	FUNCTION_3
0x400028b	            0x415d	                                 pop r13	       335	compress.c	FUNCTION_3
0x400028d	            0x415e	                                 pop r14	       335	compress.c	FUNCTION_3
0x400028f	            0x415f	                                 pop r15	       335	compress.c	FUNCTION_3
0x4000291	              0xc3	                                     ret	       335	compress.c	FUNCTION_3
0x4000292	    0x660f1f440000	                    nop word [rax + rax]	       335	compress.c	FUNCTION_3
0x4000298	      0xba00000000	                              mov edx, 0	       333	compress.c	FUNCTION_3	SWITCH_1	CALL_18
0x400029d	      0xbe4d010000	                          mov esi, 0x14d	       333	compress.c	FUNCTION_3	SWITCH_1	CALL_18
0x40002a2	      0xbf00000000	                              mov edi, 0	       333	compress.c	FUNCTION_3	SWITCH_1	CALL_18
0x40002a7	      0xe800000000	                          call 0x40002ac	       333	compress.c	FUNCTION_3	SWITCH_1	CALL_18
0x40002ac	         0xf1f4000	                         nop dword [rax]	       333	compress.c	FUNCTION_3	SWITCH_1	CALL_18
0x40002b0	    0x488bb6b00000	            mov rsi, qword [rsi + 0xb0] 	       318	compress.c	FUNCTION_3	SWITCH_1	IF_15
0x40002b7	          0x4885f6	                           test rsi, rsi	       318	compress.c	FUNCTION_3	SWITCH_1	IF_15
0x40002ba	            0x7474	                            je 0x4000330	       318	compress.c	FUNCTION_3	SWITCH_1	IF_15
0x40002bc	          0x4d85f6	                           test r14, r14	       320	compress.c	FUNCTION_3	SWITCH_1	IF_16
0x40002bf	     0xf84cb000000	                            je 0x4000390	       320	compress.c	FUNCTION_3	SWITCH_1	IF_16
0x40002c5	          0x4c39f6	                            cmp rsi, r14	       328	compress.c	FUNCTION_3	SWITCH_1	IF_18
0x40002c8	      0xbb01000000	                              mov ebx, 1	       330	compress.c	FUNCTION_3	SWITCH_1
0x40002cd	            0x74b2	                            je 0x4000281	       328	compress.c	FUNCTION_3	SWITCH_1	IF_18
0x40002cf	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_10	CALL_3
0x40002d2	          0x4c89f7	                            mov rdi, r14	        53	string3.h	FUNCTION_10	CALL_3
0x40002d5	      0xe800000000	                          call 0x40002da	        53	string3.h	FUNCTION_10	CALL_3
0x40002da	            0xeba5	                           jmp 0x4000281	        53	string3.h	FUNCTION_10	CALL_3
0x40002dc	         0xf1f4000	                         nop dword [rax]	        53	string3.h	FUNCTION_10	CALL_3
0x40002e0	          0x4d85f6	                           test r14, r14	       246	compress.c	FUNCTION_3	SWITCH_1	IF_3
0x40002e3	            0x745b	                            je 0x4000340	       246	compress.c	FUNCTION_3	SWITCH_1	IF_3
0x40002e5	            0x31c9	                            xor ecx, ecx	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x40002e7	          0x4889de	                            mov rsi, rbx	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x40002ea	          0x4d89e8	                             mov r8, r13	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x40002ed	          0x4c89f2	                            mov rdx, r14	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x40002f0	          0x4889ef	                            mov rdi, rbp	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x40002f3	      0xe800000000	                          call 0x40002f8	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x40002f8	            0x85c0	                           test eax, eax	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x40002fa	            0x89c3	                            mov ebx, eax	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x40002fc	            0x7522	                           jne 0x4000320	       261	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_5
0x40002fe	        0x4d3b3424	                    cmp r14, qword [r12]	       263	compress.c	FUNCTION_3	SWITCH_1	IF_6	IF_7
0x4000302	            0x742c	                            je 0x4000330	       263	compress.c	FUNCTION_3	SWITCH_1	IF_6	IF_7
0x4000304	          0x4c89f7	                            mov rdi, r14	       264	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_6
0x4000307	      0xe800000000	                          call 0x400030c	       264	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_6
0x400030c	      0xe970ffffff	                           jmp 0x4000281	       264	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_6
0x4000311	     0xf1f80000000	                         nop dword [rax]	       264	compress.c	FUNCTION_3	SWITCH_1	IF_6	CALL_6
0x4000318	          0x4c89ff	                            mov rdi, r15	       313	compress.c	FUNCTION_3	SWITCH_1	CALL_15
0x400031b	      0xe800000000	                          call 0x4000320	       313	compress.c	FUNCTION_3	SWITCH_1	CALL_15
0x4000320	        0x4d893424	                    mov qword [r12], r14	       314	compress.c	FUNCTION_3	SWITCH_1
0x4000324	      0xbb01000000	                              mov ebx, 1	       315	compress.c	FUNCTION_3	SWITCH_1
0x4000329	      0xe953ffffff	                           jmp 0x4000281	       315	compress.c	FUNCTION_3	SWITCH_1
0x400032e	            0x6690	                                     nop	       315	compress.c	FUNCTION_3	SWITCH_1
0x4000330	            0x31db	                            xor ebx, ebx	       257	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4
0x4000332	      0xe94affffff	                           jmp 0x4000281	       257	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4
0x4000337	    0x660f1f840000	                    nop word [rax + rax]	       257	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4
0x4000340	          0x4c89ef	                            mov rdi, r13	       248	compress.c	FUNCTION_3	SWITCH_1	IF_3	CALL_1
0x4000343	      0xe800000000	                          call 0x4000348	       248	compress.c	FUNCTION_3	SWITCH_1	IF_3	CALL_1
0x4000348	          0x4885c0	                           test rax, rax	       249	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4
0x400034b	          0x4989c6	                            mov r14, rax	       248	compress.c	FUNCTION_3	SWITCH_1	IF_3	CALL_1
0x400034e	            0x7595	                           jne 0x40002e5	       249	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4
0x4000350	      0xe800000000	                          call 0x4000355	       252	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_2
0x4000355	          0x83f806	                              cmp eax, 6	       252	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_2
0x4000358	            0x75d6	                           jne 0x4000330	       252	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_2
0x400035a	      0xba05000000	                              mov edx, 5	       255	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_4
0x400035f	      0xbe00000000	                              mov esi, 0	       255	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_4
0x4000364	      0xbf00000000	                              mov edi, 0	       255	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_4
0x4000369	      0xe800000000	                          call 0x400036e	       255	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_4
0x400036e	          0x4889da	                            mov rdx, rbx	       253	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x4000371	          0x4889c7	                            mov rdi, rax	       253	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x4000374	          0x4c89e9	                            mov rcx, r13	       253	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x4000377	          0x4889ee	                            mov rsi, rbp	       253	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x400037a	            0x31c0	                            xor eax, eax	       253	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x400037c	            0x31db	                            xor ebx, ebx	       257	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4
0x400037e	      0xe800000000	                          call 0x4000383	       253	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x4000383	      0xe9f9feffff	                           jmp 0x4000281	       253	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x4000388	     0xf1f84000000	                   nop dword [rax + rax]	       253	compress.c	FUNCTION_3	SWITCH_1	IF_3	IF_4	IF_5	CALL_3
0x4000390	          0x4c89ef	                            mov rdi, r13	       322	compress.c	FUNCTION_3	SWITCH_1	IF_16	CALL_16
0x4000393	      0xe800000000	                          call 0x4000398	       322	compress.c	FUNCTION_3	SWITCH_1	IF_16	CALL_16
0x4000398	          0x4885c0	                           test rax, rax	       323	compress.c	FUNCTION_3	SWITCH_1	IF_16	IF_17
0x400039b	          0x4989c6	                            mov r14, rax	       322	compress.c	FUNCTION_3	SWITCH_1	IF_16	CALL_16
0x400039e	            0x7490	                            je 0x4000330	       323	compress.c	FUNCTION_3	SWITCH_1	IF_16	IF_17
0x40003a0	        0x49890424	                    mov qword [r12], rax	       325	compress.c	FUNCTION_3	SWITCH_1	IF_16
0x40003a4	    0x488bb3b00000	            mov rsi, qword [rbx + 0xb0] 	       325	compress.c	FUNCTION_3	SWITCH_1	IF_16
0x40003ab	      0xe915ffffff	                           jmp 0x40002c5	       325	compress.c	FUNCTION_3	SWITCH_1	IF_16
0x40003b0	          0x4c89ef	                            mov rdi, r13	       293	compress.c	FUNCTION_3	SWITCH_1	CALL_9
0x40003b3	      0xe800000000	                          call 0x40003b8	       293	compress.c	FUNCTION_3	SWITCH_1	CALL_9
0x40003b8	          0x4885c0	                           test rax, rax	       294	compress.c	FUNCTION_3	SWITCH_1	IF_11
0x40003bb	          0x4989c6	                            mov r14, rax	       293	compress.c	FUNCTION_3	SWITCH_1	CALL_9
0x40003be	     0xf8494feffff	                            je 0x4000258	       294	compress.c	FUNCTION_3	SWITCH_1	IF_11
0x40003c4	      0xe942feffff	                           jmp 0x400020b	       294	compress.c	FUNCTION_3	SWITCH_1	IF_11
bfd_cache_section_contents	FOR,0:CALL,0:ELSE,0:WHILE,0:SWITCH,0:IF,1:DO,0:functions,0	11
0x40003d0	         0xfb64724	           movzx eax, byte [rdi + 0x24] 	       353	compress.c	FUNCTION_4	IF_1
0x40003d4	            0x89c2	                            mov edx, eax	       353	compress.c	FUNCTION_4	IF_1
0x40003d6	          0x83e230	                           and edx, 0x30	       353	compress.c	FUNCTION_4	IF_1
0x40003d9	          0x80fa20	                            cmp dl, 0x20	       353	compress.c	FUNCTION_4	IF_1
0x40003dc	            0x7509	                           jne 0x40003e7	       353	compress.c	FUNCTION_4	IF_1
0x40003de	          0x83e0cf	                     and eax, 0xffffffcf	       354	compress.c	FUNCTION_4	IF_1
0x40003e1	          0x83c810	                            or eax, 0x10	       354	compress.c	FUNCTION_4	IF_1
0x40003e4	          0x884724	               mov byte [rdi + 0x24], al	       354	compress.c	FUNCTION_4	IF_1
0x40003e7	    0x4889b7b00000	             mov qword [rdi + 0xb0], rsi	       355	compress.c	FUNCTION_4
0x40003ee	    0x814f20004000	           or dword [rdi + 0x20], 0x4000	       356	compress.c	FUNCTION_4
0x40003f5	              0xc3	                                     ret	       356	compress.c	FUNCTION_4
bfd_compress_section	FOR,0:CALL,2:ELSE,0:WHILE,0:SWITCH,0:IF,1:DO,0:functions,0	27
0x4000a40	        0x4883ec08	                              sub rsp, 8	       592	compress.c	FUNCTION_9
0x4000a44	         0xfb64744	           movzx eax, byte [rdi + 0x44] 	       596	compress.c	FUNCTION_9	IF_1
0x4000a48	          0x83e018	                           and eax, 0x18	       596	compress.c	FUNCTION_9	IF_1
0x4000a4b	            0x3c10	                            cmp al, 0x10	       596	compress.c	FUNCTION_9	IF_1
0x4000a4d	            0x7518	                           jne 0x4000a67	       596	compress.c	FUNCTION_9	IF_1
0x4000a4f	        0x488b4e38	            mov rcx, qword [rsi + 0x38] 	       593	compress.c	FUNCTION_9
0x4000a53	          0x4885c9	                           test rcx, rcx	       598	compress.c	FUNCTION_9	IF_1
0x4000a56	            0x740f	                            je 0x4000a67	       598	compress.c	FUNCTION_9	IF_1
0x4000a58	          0x4885d2	                           test rdx, rdx	       598	compress.c	FUNCTION_9	IF_1
0x4000a5b	            0x740a	                            je 0x4000a67	       598	compress.c	FUNCTION_9	IF_1
0x4000a5d	    0x4883beb00000	               cmp qword [rsi + 0xb0], 0	       599	compress.c	FUNCTION_9	IF_1
0x4000a65	            0x7419	                            je 0x4000a80	       599	compress.c	FUNCTION_9	IF_1
0x4000a67	      0xbf05000000	                              mov edi, 5	       603	compress.c	FUNCTION_9	IF_1	CALL_1
0x4000a6c	      0xe800000000	                          call 0x4000a71	       603	compress.c	FUNCTION_9	IF_1	CALL_1
0x4000a71	            0x31c0	                            xor eax, eax	       604	compress.c	FUNCTION_9	IF_1
0x4000a73	        0x4883c408	                              add rsp, 8	       610	compress.c	FUNCTION_9
0x4000a77	              0xc3	                                     ret	       610	compress.c	FUNCTION_9
0x4000a78	     0xf1f84000000	                   nop dword [rax + rax]	       610	compress.c	FUNCTION_9
0x4000a80	      0x48837e4800	               cmp qword [rsi + 0x48], 0	       600	compress.c	FUNCTION_9	IF_1
0x4000a85	            0x75e0	                           jne 0x4000a67	       600	compress.c	FUNCTION_9	IF_1
0x4000a87	        0xf6462430	           test byte [rsi + 0x24], 0x30 	       601	compress.c	FUNCTION_9	IF_1
0x4000a8b	            0x75da	                           jne 0x4000a67	       601	compress.c	FUNCTION_9	IF_1
0x4000a8d	      0xe8fefaffff	  call sym.bfd_compress_section_contents	       608	compress.c	FUNCTION_9	CALL_2
0x4000a92	          0x4885c0	                           test rax, rax	       608	compress.c	FUNCTION_9	CALL_2
0x4000a95	           0xf95c0	                                setne al	       608	compress.c	FUNCTION_9	CALL_2
0x4000a98	           0xfb6c0	                           movzx eax, al	       608	compress.c	FUNCTION_9	CALL_2
0x4000a9b	            0xebd6	                           jmp 0x4000a73	       608	compress.c	FUNCTION_9	CALL_2
bfd_compress_section_contents	FOR,0:CALL,17:ELSE,6:WHILE,0:SWITCH,0:IF,11:DO,0:functions,0	164
0x4000590	            0x4157	                                push r15	        79	compress.c	FUNCTION_2
0x4000592	            0x4156	                                push r14	        79	compress.c	FUNCTION_2
0x4000594	          0x4989d7	                            mov r15, rdx	        79	compress.c	FUNCTION_2
0x4000597	            0x4155	                                push r13	        79	compress.c	FUNCTION_2
0x4000599	            0x4154	                                push r12	        79	compress.c	FUNCTION_2
0x400059b	          0x4989fc	                            mov r12, rdi	        79	compress.c	FUNCTION_2
0x400059e	              0x55	                                push rbp	        79	compress.c	FUNCTION_2
0x400059f	              0x53	                                push rbx	        79	compress.c	FUNCTION_2
0x40005a0	          0x4889f3	                            mov rbx, rsi	        79	compress.c	FUNCTION_2
0x40005a3	            0x31f6	                            xor esi, esi	        87	compress.c	FUNCTION_2	CALL_1
0x40005a5	          0x4889cd	                            mov rbp, rcx	        79	compress.c	FUNCTION_2
0x40005a8	        0x4883ec38	                           sub rsp, 0x38	        79	compress.c	FUNCTION_2
0x40005ac	    0x64488b042528	                mov rax, qword fs:[0x28]	        79	compress.c	FUNCTION_2
0x40005b5	      0x4889442428	             mov qword [rsp + 0x28], rax	        79	compress.c	FUNCTION_2
0x40005ba	            0x31c0	                            xor eax, eax	        79	compress.c	FUNCTION_2
0x40005bc	      0xe800000000	                          call 0x40005c1	        87	compress.c	FUNCTION_2	CALL_1
0x40005c1	      0x488d542414	                   lea rdx, [rsp + 0x14]	        88	compress.c	FUNCTION_2
0x40005c6	      0x488d4c2420	                   lea rcx, [rsp + 0x20]	        88	compress.c	FUNCTION_2
0x40005cb	          0x4c63e8	                         movsxd r13, eax	        87	compress.c	FUNCTION_2	CALL_1
0x40005ce	          0x4889de	                            mov rsi, rbx	        88	compress.c	FUNCTION_2
0x40005d1	          0x4c89e7	                            mov rdi, r12	        88	compress.c	FUNCTION_2
0x40005d4	      0xe800000000	                          call 0x40005d9	        88	compress.c	FUNCTION_2
0x40005d9	          0x4585ed	                         test r13d, r13d	        96	compress.c	FUNCTION_2	IF_1
0x40005dc	      0xba0c000000	                            mov edx, 0xc	        96	compress.c	FUNCTION_2	IF_1
0x40005e1	        0x4c0f44ea	                          cmove r13, rdx	        96	compress.c	FUNCTION_2	IF_1
0x40005e5	            0x85c0	                           test eax, eax	        98	compress.c	FUNCTION_2	IF_2
0x40005e7	     0xf842b010000	                            je 0x4000718	        98	compress.c	FUNCTION_2	IF_2
0x40005ed	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       101	compress.c	FUNCTION_2	IF_2	IF_3
0x40005f1	            0x85c0	                           test eax, eax	       101	compress.c	FUNCTION_2	IF_2	IF_3
0x40005f3	     0xf88f8010000	                            js 0x40007f1	       101	compress.c	FUNCTION_2	IF_2	IF_3
0x40005f9	            0x89e9	                            mov ecx, ebp	       118	compress.c	FUNCTION_2	IF_2	ELSE_1
0x40005fb	            0x29c1	                            sub ecx, eax	       118	compress.c	FUNCTION_2	IF_2	ELSE_1
0x40005fd	            0x85c0	                           test eax, eax	       106	compress.c	FUNCTION_2	IF_2	IF_4
0x40005ff	        0x894c240c	              mov dword [rsp + 0xc], ecx	       118	compress.c	FUNCTION_2	IF_2	ELSE_1
0x4000603	            0x750f	                           jne 0x4000614	       106	compress.c	FUNCTION_2	IF_2	IF_4
0x4000605	          0x8d45f4	                    lea eax, [rbp - 0xc]	       113	compress.c	FUNCTION_2	IF_2	IF_4
0x4000608	    0xc74424140c00	            mov dword [rsp + 0x14], 0xc 	       112	compress.c	FUNCTION_2	IF_2	IF_4
0x4000610	        0x8944240c	              mov dword [rsp + 0xc], eax	       113	compress.c	FUNCTION_2	IF_2	IF_4
0x4000614	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       122	compress.c	FUNCTION_2	IF_2
0x4000618	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	       128	compress.c	FUNCTION_2	IF_5
0x400061d	        0x428d3428	                    lea esi, [rax + r13]	       122	compress.c	FUNCTION_2	IF_2
0x4000621	          0x4863f6	                         movsxd rsi, esi	       122	compress.c	FUNCTION_2	IF_2
0x4000624	          0x4c39f6	                            cmp rsi, r14	       128	compress.c	FUNCTION_2	IF_5
0x4000627	      0x4889742418	             mov qword [rsp + 0x18], rsi	       122	compress.c	FUNCTION_2	IF_2
0x400062c	     0xf878e000000	                            ja 0x40006c0	       128	compress.c	FUNCTION_2	IF_5
0x4000632	          0x4c89e7	                            mov rdi, r12	       138	compress.c	FUNCTION_2	CALL_5
0x4000635	      0xe800000000	                          call 0x400063a	       138	compress.c	FUNCTION_2	CALL_5
0x400063a	          0x4885c0	                           test rax, rax	       139	compress.c	FUNCTION_2	IF_6
0x400063d	          0x4989c6	                            mov r14, rax	       138	compress.c	FUNCTION_2	CALL_5
0x4000640	     0xf84cb000000	                            je 0x4000711	       139	compress.c	FUNCTION_2	IF_6
0x4000646	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       144	compress.c	FUNCTION_2	IF_7
0x400064b	          0x4889da	                            mov rdx, rbx	       162	compress.c	FUNCTION_2	IF_7	ELSE_4	CALL_10
0x400064e	          0x4c89f6	                            mov rsi, r14	       162	compress.c	FUNCTION_2	IF_7	ELSE_4	CALL_10
0x4000651	          0x4c89e7	                            mov rdi, r12	       162	compress.c	FUNCTION_2	IF_7	ELSE_4	CALL_10
0x4000654	        0x48894338	             mov qword [rbx + 0x38], rax	       144	compress.c	FUNCTION_2	IF_7
0x4000658	      0xe800000000	                          call 0x400065d	       162	compress.c	FUNCTION_2	IF_7	ELSE_4	CALL_10
0x400065d	      0x4863742414	         movsxd rsi, dword [rsp + 0x14] 	        59	string3.h	FUNCTION_11	CALL_3
0x4000662	      0x486354240c	          movsxd rdx, dword [rsp + 0xc] 	        59	string3.h	FUNCTION_11	CALL_3
0x4000667	          0x4963fd	                        movsxd rdi, r13d	        59	string3.h	FUNCTION_11	CALL_3
0x400066a	          0x4c01f7	                            add rdi, r14	        59	string3.h	FUNCTION_11	CALL_3
0x400066d	          0x4c01fe	                            add rsi, r15	        59	string3.h	FUNCTION_11	CALL_3
0x4000670	      0xe800000000	                          call 0x4000675	        59	string3.h	FUNCTION_11	CALL_3
0x4000675	          0x4c89ff	                            mov rdi, r15	       196	compress.c	FUNCTION_2	CALL_17
0x4000678	      0xe800000000	                          call 0x400067d	       196	compress.c	FUNCTION_2	CALL_17
0x400067d	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       198	compress.c	FUNCTION_2
0x4000682	    0x4c89b3b00000	             mov qword [rbx + 0xb0], r14	       197	compress.c	FUNCTION_2
0x4000689	        0x48894338	             mov qword [rbx + 0x38], rax	       198	compress.c	FUNCTION_2
0x400068d	         0xfb64324	           movzx eax, byte [rbx + 0x24] 	       199	compress.c	FUNCTION_2
0x4000691	          0x83e0cf	                     and eax, 0xffffffcf	       199	compress.c	FUNCTION_2
0x4000694	          0x83c810	                            or eax, 0x10	       199	compress.c	FUNCTION_2
0x4000697	          0x884324	               mov byte [rbx + 0x24], al	       199	compress.c	FUNCTION_2
0x400069a	          0x4889e8	                            mov rax, rbp	       201	compress.c	FUNCTION_2
0x400069d	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	       202	compress.c	FUNCTION_2
0x40006a2	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       202	compress.c	FUNCTION_2
0x40006ab	     0xf853b010000	                           jne 0x40007ec	       202	compress.c	FUNCTION_2
0x40006b1	        0x4883c438	                           add rsp, 0x38	       202	compress.c	FUNCTION_2
0x40006b5	              0x5b	                                 pop rbx	       202	compress.c	FUNCTION_2
0x40006b6	              0x5d	                                 pop rbp	       202	compress.c	FUNCTION_2
0x40006b7	            0x415c	                                 pop r12	       202	compress.c	FUNCTION_2
0x40006b9	            0x415d	                                 pop r13	       202	compress.c	FUNCTION_2
0x40006bb	            0x415e	                                 pop r14	       202	compress.c	FUNCTION_2
0x40006bd	            0x415f	                                 pop r15	       202	compress.c	FUNCTION_2
0x40006bf	              0xc3	                                     ret	       202	compress.c	FUNCTION_2
0x40006c0	          0x4c89f6	                            mov rsi, r14	       138	compress.c	FUNCTION_2	CALL_5
0x40006c3	          0x4c89e7	                            mov rdi, r12	       138	compress.c	FUNCTION_2	CALL_5
0x40006c6	      0xe800000000	                          call 0x40006cb	       138	compress.c	FUNCTION_2	CALL_5
0x40006cb	          0x4885c0	                           test rax, rax	       139	compress.c	FUNCTION_2	IF_6
0x40006ce	          0x4889c5	                            mov rbp, rax	       138	compress.c	FUNCTION_2	CALL_5
0x40006d1	            0x743e	                            je 0x4000711	       139	compress.c	FUNCTION_2	IF_6
0x40006d3	      0x48637c2414	         movsxd rdi, dword [rsp + 0x14] 	       147	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_6
0x40006d8	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       144	compress.c	FUNCTION_2	IF_7
0x40006dd	          0x4c89f1	                            mov rcx, r14	       147	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_6
0x40006e0	      0x486374240c	          movsxd rsi, dword [rsp + 0xc] 	       147	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_6
0x40006e5	          0x4889ea	                            mov rdx, rbp	       147	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_6
0x40006e8	        0x48894338	             mov qword [rbx + 0x38], rax	       144	compress.c	FUNCTION_2	IF_7
0x40006ec	          0x4c01ff	                            add rdi, r15	       147	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_6
0x40006ef	      0xe84cf9ffff	            call sym.decompress_contents	       147	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_6
0x40006f4	            0x85c0	                           test eax, eax	       147	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_6
0x40006f6	     0xf8584000000	                           jne 0x4000780	       147	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_6
0x40006fc	      0xbf11000000	                           mov edi, 0x11	       151	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_7
0x4000701	      0xe800000000	                          call 0x4000706	       151	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_7
0x4000706	          0x4889ee	                            mov rsi, rbp	       152	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_8
0x4000709	          0x4c89e7	                            mov rdi, r12	       152	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_8
0x400070c	      0xe800000000	                          call 0x4000711	       152	compress.c	FUNCTION_2	IF_7	IF_8	IF_9	CALL_8
0x4000711	            0x31c0	                            xor eax, eax	       153	compress.c	FUNCTION_2	IF_7	IF_8	IF_9
0x4000713	            0xeb88	                           jmp 0x400069d	       153	compress.c	FUNCTION_2	IF_7	IF_8	IF_9
0x4000715	           0xf1f00	                         nop dword [rax]	       153	compress.c	FUNCTION_2	IF_7	IF_8	IF_9
0x4000718	          0x4889ef	                            mov rdi, rbp	       125	compress.c	FUNCTION_2	CALL_4
0x400071b	      0xe800000000	                          call 0x4000720	       125	compress.c	FUNCTION_2	CALL_4
0x4000720	      0x498d740500	                    lea rsi, [r13 + rax]	       125	compress.c	FUNCTION_2	CALL_4
0x4000725	          0x4c89e7	                            mov rdi, r12	       138	compress.c	FUNCTION_2	CALL_5
0x4000728	      0x4889742418	             mov qword [rsp + 0x18], rsi	       125	compress.c	FUNCTION_2	CALL_4
0x400072d	      0xe800000000	                          call 0x4000732	       138	compress.c	FUNCTION_2	CALL_5
0x4000732	          0x4885c0	                           test rax, rax	       139	compress.c	FUNCTION_2	IF_6
0x4000735	          0x4989c6	                            mov r14, rax	       138	compress.c	FUNCTION_2	CALL_5
0x4000738	            0x74d7	                            je 0x4000711	       139	compress.c	FUNCTION_2	IF_6
0x400073a	        0x4a8d3c28	                    lea rdi, [rax + r13]	       170	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_12
0x400073e	      0x488d742418	                   lea rsi, [rsp + 0x18]	       170	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_12
0x4000743	          0x4889e9	                            mov rcx, rbp	       170	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_12
0x4000746	          0x4c89fa	                            mov rdx, r15	       170	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_12
0x4000749	      0xe800000000	                          call 0x400074e	       170	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_12
0x400074e	            0x85c0	                           test eax, eax	       170	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_12
0x4000750	            0x757e	                           jne 0x40007d0	       170	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_12
0x4000752	          0x4d89e8	                             mov r8, r13	       180	compress.c	FUNCTION_2	ELSE_5
0x4000755	      0x4c03442418	              add r8, qword [rsp + 0x18]	       180	compress.c	FUNCTION_2	ELSE_5
0x400075a	          0x4c39c5	                             cmp rbp, r8	       183	compress.c	FUNCTION_2	ELSE_5	IF_11
0x400075d	      0x4c89442418	              mov qword [rsp + 0x18], r8	       180	compress.c	FUNCTION_2	ELSE_5
0x4000762	            0x764c	                           jbe 0x40007b0	       183	compress.c	FUNCTION_2	ELSE_5	IF_11
0x4000764	          0x4889da	                            mov rdx, rbx	       184	compress.c	FUNCTION_2	ELSE_5	CALL_15
0x4000767	          0x4c89f6	                            mov rsi, r14	       184	compress.c	FUNCTION_2	ELSE_5	CALL_15
0x400076a	          0x4c89e7	                            mov rdi, r12	       184	compress.c	FUNCTION_2	ELSE_5	CALL_15
0x400076d	      0xe800000000	                          call 0x4000772	       184	compress.c	FUNCTION_2	ELSE_5	CALL_15
0x4000772	      0xe9fefeffff	                           jmp 0x4000675	       184	compress.c	FUNCTION_2	ELSE_5	CALL_15
0x4000777	    0x660f1f840000	                    nop word [rax + rax]	       184	compress.c	FUNCTION_2	ELSE_5	CALL_15
0x4000780	          0x4c89ff	                            mov rdi, r15	       155	compress.c	FUNCTION_2	IF_7	IF_8	CALL_9
0x4000783	      0xe800000000	                          call 0x4000788	       155	compress.c	FUNCTION_2	IF_7	IF_8	CALL_9
0x4000788	         0xfb64324	           movzx eax, byte [rbx + 0x24] 	       157	compress.c	FUNCTION_2	IF_7	IF_8
0x400078c	    0x4889abb00000	             mov qword [rbx + 0xb0], rbp	       156	compress.c	FUNCTION_2	IF_7	IF_8
0x4000793	          0x83e0cf	                     and eax, 0xffffffcf	       157	compress.c	FUNCTION_2	IF_7	IF_8
0x4000796	          0x83c810	                            or eax, 0x10	       157	compress.c	FUNCTION_2	IF_7	IF_8
0x4000799	          0x884324	               mov byte [rbx + 0x24], al	       157	compress.c	FUNCTION_2	IF_7	IF_8
0x400079c	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       158	compress.c	FUNCTION_2	IF_7	IF_8
0x40007a1	      0xe9f7feffff	                           jmp 0x400069d	       158	compress.c	FUNCTION_2	IF_7	IF_8
0x40007a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       158	compress.c	FUNCTION_2	IF_7	IF_8
0x40007b0	          0x4c89f6	                            mov rsi, r14	       189	compress.c	FUNCTION_2	ELSE_5	ELSE_6	CALL_16
0x40007b3	          0x4c89e7	                            mov rdi, r12	       189	compress.c	FUNCTION_2	ELSE_5	ELSE_6	CALL_16
0x40007b6	      0xe800000000	                          call 0x40007bb	       189	compress.c	FUNCTION_2	ELSE_5	ELSE_6	CALL_16
0x40007bb	    0x4c89bbb00000	             mov qword [rbx + 0xb0], r15	       190	compress.c	FUNCTION_2	ELSE_5	ELSE_6
0x40007c2	        0x806324cf	             and byte [rbx + 0x24], 0xcf	       191	compress.c	FUNCTION_2	ELSE_5	ELSE_6
0x40007c6	          0x4889e8	                            mov rax, rbp	       192	compress.c	FUNCTION_2	ELSE_5	ELSE_6
0x40007c9	      0xe9cffeffff	                           jmp 0x400069d	       192	compress.c	FUNCTION_2	ELSE_5	ELSE_6
0x40007ce	            0x6690	                                     nop	       192	compress.c	FUNCTION_2	ELSE_5	ELSE_6
0x40007d0	          0x4c89f6	                            mov rsi, r14	       175	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_13
0x40007d3	          0x4c89e7	                            mov rdi, r12	       175	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_13
0x40007d6	      0xe800000000	                          call 0x40007db	       175	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_13
0x40007db	      0xbf11000000	                           mov edi, 0x11	       176	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_14
0x40007e0	      0xe800000000	                          call 0x40007e5	       176	compress.c	FUNCTION_2	ELSE_5	IF_10	CALL_14
0x40007e5	            0x31c0	                            xor eax, eax	       177	compress.c	FUNCTION_2	ELSE_5	IF_10
0x40007e7	      0xe9b1feffff	                           jmp 0x400069d	       177	compress.c	FUNCTION_2	ELSE_5	IF_10
0x40007ec	      0xe800000000	                          call 0x40007f1	       202	compress.c	FUNCTION_2
0x40007f1	      0xba00000000	                              mov edx, 0	       102	compress.c	FUNCTION_2	IF_2	CALL_3
0x40007f6	      0xbe66000000	                           mov esi, 0x66	       102	compress.c	FUNCTION_2	IF_2	CALL_3
0x40007fb	      0xbf00000000	                              mov edi, 0	       102	compress.c	FUNCTION_2	IF_2	CALL_3
0x4000800	      0xe800000000	                          call 0x4000805	       102	compress.c	FUNCTION_2	IF_2	CALL_3
bfd_init_section_decompress_status	FOR,0:CALL,9:ELSE,1:WHILE,0:SWITCH,0:IF,5:DO,0:functions,0	81
0x4000870	            0x4155	                                push r13	       478	compress.c	FUNCTION_7
0x4000872	            0x4154	                                push r12	       478	compress.c	FUNCTION_7
0x4000874	          0x4989fc	                            mov r12, rdi	       478	compress.c	FUNCTION_7
0x4000877	              0x55	                                push rbp	       478	compress.c	FUNCTION_7
0x4000878	              0x53	                                push rbx	       478	compress.c	FUNCTION_7
0x4000879	          0x4889f3	                            mov rbx, rsi	       478	compress.c	FUNCTION_7
0x400087c	        0x4883ec38	                           sub rsp, 0x38	       478	compress.c	FUNCTION_7
0x4000880	    0x64488b042528	                mov rax, qword fs:[0x28]	       478	compress.c	FUNCTION_7
0x4000889	      0x4889442428	             mov qword [rsp + 0x28], rax	       478	compress.c	FUNCTION_7
0x400088e	            0x31c0	                            xor eax, eax	       478	compress.c	FUNCTION_7
0x4000890	      0xe800000000	                          call 0x4000895	       484	compress.c	FUNCTION_7	CALL_1
0x4000895	          0x4863e8	                         movsxd rbp, eax	       484	compress.c	FUNCTION_7	CALL_1
0x4000898	          0x83fd18	                           cmp ebp, 0x18	       485	compress.c	FUNCTION_7	IF_1
0x400089b	     0xf8fe5000000	                            jg 0x4000986	       485	compress.c	FUNCTION_7	IF_1
0x40008a1	            0x85ed	                           test ebp, ebp	       487	compress.c	FUNCTION_7
0x40008a3	    0x41b80c000000	                            mov r8d, 0xc	       487	compress.c	FUNCTION_7
0x40008a9	        0x4c0f45c5	                          cmovne r8, rbp	       487	compress.c	FUNCTION_7
0x40008ad	      0x48837b4000	               cmp qword [rbx + 0x40], 0	       490	compress.c	FUNCTION_7	IF_2
0x40008b2	            0x750a	                           jne 0x40008be	       490	compress.c	FUNCTION_7	IF_2
0x40008b4	    0x4883bbb00000	               cmp qword [rbx + 0xb0], 0	       491	compress.c	FUNCTION_7	IF_2
0x40008bc	            0x7432	                            je 0x40008f0	       491	compress.c	FUNCTION_7	IF_2
0x40008be	      0xbf05000000	                              mov edi, 5	       495	compress.c	FUNCTION_7	IF_2	CALL_4
0x40008c3	      0xe800000000	                          call 0x40008c8	       495	compress.c	FUNCTION_7	IF_2	CALL_4
0x40008c8	            0x31c0	                            xor eax, eax	       496	compress.c	FUNCTION_7	IF_2
0x40008ca	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       522	compress.c	FUNCTION_7
0x40008cf	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       522	compress.c	FUNCTION_7
0x40008d8	     0xf85bc000000	                           jne 0x400099a	       522	compress.c	FUNCTION_7
0x40008de	        0x4883c438	                           add rsp, 0x38	       522	compress.c	FUNCTION_7
0x40008e2	              0x5b	                                 pop rbx	       522	compress.c	FUNCTION_7
0x40008e3	              0x5d	                                 pop rbp	       522	compress.c	FUNCTION_7
0x40008e4	            0x415c	                                 pop r12	       522	compress.c	FUNCTION_7
0x40008e6	            0x415d	                                 pop r13	       522	compress.c	FUNCTION_7
0x40008e8	              0xc3	                                     ret	       522	compress.c	FUNCTION_7
0x40008e9	     0xf1f80000000	                         nop dword [rax]	       522	compress.c	FUNCTION_7
0x40008f0	        0xf6432430	           test byte [rbx + 0x24], 0x30 	       492	compress.c	FUNCTION_7	IF_2
0x40008f4	            0x75c8	                           jne 0x40008be	       492	compress.c	FUNCTION_7	IF_2
0x40008f6	      0x4c8d6c2410	                   lea r13, [rsp + 0x10]	       493	compress.c	FUNCTION_7	IF_2	CALL_3
0x40008fb	            0x31c9	                            xor ecx, ecx	       493	compress.c	FUNCTION_7	IF_2	CALL_3
0x40008fd	          0x4889de	                            mov rsi, rbx	       493	compress.c	FUNCTION_7	IF_2	CALL_3
0x4000900	          0x4c89e7	                            mov rdi, r12	       493	compress.c	FUNCTION_7	IF_2	CALL_3
0x4000903	          0x4c89ea	                            mov rdx, r13	       493	compress.c	FUNCTION_7	IF_2	CALL_3
0x4000906	      0xe800000000	                          call 0x400090b	       493	compress.c	FUNCTION_7	IF_2	CALL_3
0x400090b	            0x85c0	                           test eax, eax	       493	compress.c	FUNCTION_7	IF_2	CALL_3
0x400090d	            0x74af	                            je 0x40008be	       493	compress.c	FUNCTION_7	IF_2	CALL_3
0x400090f	            0x85ed	                           test ebp, ebp	       499	compress.c	FUNCTION_7	IF_3
0x4000911	            0x7555	                           jne 0x4000968	       499	compress.c	FUNCTION_7	IF_3
0x4000913	      0xbf00000000	                              mov edi, 0	       503	compress.c	FUNCTION_7	IF_3	IF_4	CALL_5
0x4000918	      0xb904000000	                              mov ecx, 4	       503	compress.c	FUNCTION_7	IF_3	IF_4	CALL_5
0x400091d	          0x4c89ee	                            mov rsi, r13	       503	compress.c	FUNCTION_7	IF_3	IF_4	CALL_5
0x4000920	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       503	compress.c	FUNCTION_7	IF_3	IF_4	CALL_5
0x4000922	            0x752c	                           jne 0x4000950	       503	compress.c	FUNCTION_7	IF_3	IF_4	CALL_5
0x4000924	        0x498d7d04	                      lea rdi, [r13 + 4]	       508	compress.c	FUNCTION_7	IF_3	CALL_7
0x4000928	      0xe800000000	                          call 0x400092d	       508	compress.c	FUNCTION_7	IF_3	CALL_7
0x400092d	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	       517	compress.c	FUNCTION_7
0x4000931	        0x48894338	             mov qword [rbx + 0x38], rax	       518	compress.c	FUNCTION_7
0x4000935	         0xfb64324	           movzx eax, byte [rbx + 0x24] 	       519	compress.c	FUNCTION_7
0x4000939	        0x48895348	             mov qword [rbx + 0x48], rdx	       517	compress.c	FUNCTION_7
0x400093d	          0x83e0cf	                     and eax, 0xffffffcf	       519	compress.c	FUNCTION_7
0x4000940	          0x83c820	                            or eax, 0x20	       519	compress.c	FUNCTION_7
0x4000943	          0x884324	               mov byte [rbx + 0x24], al	       519	compress.c	FUNCTION_7
0x4000946	      0xb801000000	                              mov eax, 1	       521	compress.c	FUNCTION_7
0x400094b	      0xe97affffff	                           jmp 0x40008ca	       521	compress.c	FUNCTION_7
0x4000950	      0xbf03000000	                              mov edi, 3	       505	compress.c	FUNCTION_7	IF_3	IF_4	CALL_6
0x4000955	      0xe800000000	                          call 0x400095a	       505	compress.c	FUNCTION_7	IF_3	IF_4	CALL_6
0x400095a	            0x31c0	                            xor eax, eax	       506	compress.c	FUNCTION_7	IF_3	IF_4
0x400095c	      0xe969ffffff	                           jmp 0x40008ca	       506	compress.c	FUNCTION_7	IF_3	IF_4
0x4000961	     0xf1f80000000	                         nop dword [rax]	       506	compress.c	FUNCTION_7	IF_3	IF_4
0x4000968	      0x488d4c2408	                      lea rcx, [rsp + 8]	       510	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_8
0x400096d	          0x4889da	                            mov rdx, rbx	       510	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_8
0x4000970	          0x4c89ee	                            mov rsi, r13	       510	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_8
0x4000973	          0x4c89e7	                            mov rdi, r12	       510	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_8
0x4000976	      0xe800000000	                          call 0x400097b	       510	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_8
0x400097b	            0x85c0	                           test eax, eax	       510	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_8
0x400097d	            0x74d1	                            je 0x4000950	       510	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_8
0x400097f	      0x488b442408	                mov rax, qword [rsp + 8]	       510	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_8
0x4000984	            0xeba7	                           jmp 0x400092d	       510	compress.c	FUNCTION_7	ELSE_1	IF_5	CALL_8
0x4000986	      0xba00000000	                              mov edx, 0	       486	compress.c	FUNCTION_7	CALL_2
0x400098b	      0xbee6010000	                          mov esi, 0x1e6	       486	compress.c	FUNCTION_7	CALL_2
0x4000990	      0xbf00000000	                              mov edi, 0	       486	compress.c	FUNCTION_7	CALL_2
0x4000995	      0xe800000000	                          call 0x400099a	       486	compress.c	FUNCTION_7	CALL_2
0x400099a	      0xe800000000	                          call 0x400099f	       522	compress.c	FUNCTION_7
bfd_is_section_compressed	FOR,0:CALL,1:ELSE,0:WHILE,0:SWITCH,0:IF,0:DO,0:functions,0	22
0x4000810	        0x4883ec28	                           sub rsp, 0x28	       449	compress.c	FUNCTION_6
0x4000814	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	       452	compress.c	FUNCTION_6	CALL_1
0x4000819	      0x488d54240c	                    lea rdx, [rsp + 0xc]	       452	compress.c	FUNCTION_6	CALL_1
0x400081e	    0x64488b042528	                mov rax, qword fs:[0x28]	       449	compress.c	FUNCTION_6
0x4000827	      0x4889442418	             mov qword [rsp + 0x18], rax	       449	compress.c	FUNCTION_6
0x400082c	            0x31c0	                            xor eax, eax	       449	compress.c	FUNCTION_6
0x400082e	      0xe800000000	                          call 0x4000833	       452	compress.c	FUNCTION_6	CALL_1
0x4000833	            0x85c0	                           test eax, eax	       456	compress.c	FUNCTION_6
0x4000835	            0x7415	                            je 0x400084c	       456	compress.c	FUNCTION_6
0x4000837	        0x8b54240c	              mov edx, dword [rsp + 0xc]	       455	compress.c	FUNCTION_6
0x400083b	            0x31c0	                            xor eax, eax	       456	compress.c	FUNCTION_6
0x400083d	            0x85d2	                           test edx, edx	       455	compress.c	FUNCTION_6
0x400083f	            0x780b	                            js 0x400084c	       455	compress.c	FUNCTION_6
0x4000841	            0x31c0	                            xor eax, eax	       456	compress.c	FUNCTION_6
0x4000843	    0x48837c241000	               cmp qword [rsp + 0x10], 0	       456	compress.c	FUNCTION_6
0x4000849	           0xf95c0	                                setne al	       456	compress.c	FUNCTION_6
0x400084c	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       457	compress.c	FUNCTION_6
0x4000851	    0x644833142528	                xor rdx, qword fs:[0x28]	       457	compress.c	FUNCTION_6
0x400085a	            0x7505	                           jne 0x4000861	       457	compress.c	FUNCTION_6
0x400085c	        0x4883c428	                           add rsp, 0x28	       457	compress.c	FUNCTION_6
0x4000860	              0xc3	                                     ret	       457	compress.c	FUNCTION_6
0x4000861	      0xe800000000	                          call 0x4000866	       457	compress.c	FUNCTION_6
bfd_init_section_compress_status	FOR,0:CALL,4:ELSE,0:WHILE,0:SWITCH,0:IF,3:DO,0:functions,0	55
0x40009a0	            0x4155	                                push r13	       542	compress.c	FUNCTION_8
0x40009a2	            0x4154	                                push r12	       542	compress.c	FUNCTION_8
0x40009a4	              0x55	                                push rbp	       542	compress.c	FUNCTION_8
0x40009a5	              0x53	                                push rbx	       542	compress.c	FUNCTION_8
0x40009a6	        0x4883ec08	                              sub rsp, 8	       542	compress.c	FUNCTION_8
0x40009aa	         0xfb64744	           movzx eax, byte [rdi + 0x44] 	       547	compress.c	FUNCTION_8	IF_1
0x40009ae	          0x83e018	                           and eax, 0x18	       547	compress.c	FUNCTION_8	IF_1
0x40009b1	            0x3c08	                               cmp al, 8	       547	compress.c	FUNCTION_8	IF_1
0x40009b3	            0x7523	                           jne 0x40009d8	       547	compress.c	FUNCTION_8	IF_1
0x40009b5	        0x4c8b6638	            mov r12, qword [rsi + 0x38] 	       548	compress.c	FUNCTION_8	IF_1
0x40009b9	          0x4889f3	                            mov rbx, rsi	       548	compress.c	FUNCTION_8	IF_1
0x40009bc	          0x4d85e4	                           test r12, r12	       548	compress.c	FUNCTION_8	IF_1
0x40009bf	            0x7417	                            je 0x40009d8	       548	compress.c	FUNCTION_8	IF_1
0x40009c1	      0x48837e4000	               cmp qword [rsi + 0x40], 0	       549	compress.c	FUNCTION_8	IF_1
0x40009c6	            0x7510	                           jne 0x40009d8	       549	compress.c	FUNCTION_8	IF_1
0x40009c8	    0x4883beb00000	               cmp qword [rsi + 0xb0], 0	       550	compress.c	FUNCTION_8	IF_1
0x40009d0	            0x741e	                            je 0x40009f0	       550	compress.c	FUNCTION_8	IF_1
0x40009d2	    0x660f1f440000	                    nop word [rax + rax]	       550	compress.c	FUNCTION_8	IF_1
0x40009d8	      0xbf05000000	                              mov edi, 5	       553	compress.c	FUNCTION_8	IF_1	CALL_1
0x40009dd	      0xe800000000	                          call 0x40009e2	       553	compress.c	FUNCTION_8	IF_1	CALL_1
0x40009e2	            0x31c0	                            xor eax, eax	       554	compress.c	FUNCTION_8	IF_1
0x40009e4	        0x4883c408	                              add rsp, 8	       572	compress.c	FUNCTION_8
0x40009e8	              0x5b	                                 pop rbx	       572	compress.c	FUNCTION_8
0x40009e9	              0x5d	                                 pop rbp	       572	compress.c	FUNCTION_8
0x40009ea	            0x415c	                                 pop r12	       572	compress.c	FUNCTION_8
0x40009ec	            0x415d	                                 pop r13	       572	compress.c	FUNCTION_8
0x40009ee	              0xc3	                                     ret	       572	compress.c	FUNCTION_8
0x40009ef	              0x90	                                     nop	       572	compress.c	FUNCTION_8
0x40009f0	        0xf6462430	           test byte [rsi + 0x24], 0x30 	       551	compress.c	FUNCTION_8	IF_1
0x40009f4	            0x75e2	                           jne 0x40009d8	       551	compress.c	FUNCTION_8	IF_1
0x40009f6	          0x4889fd	                            mov rbp, rdi	       551	compress.c	FUNCTION_8	IF_1
0x40009f9	          0x4c89e7	                            mov rdi, r12	       559	compress.c	FUNCTION_8	CALL_2
0x40009fc	      0xe800000000	                          call 0x4000a01	       559	compress.c	FUNCTION_8	CALL_2
0x4000a01	          0x4885c0	                           test rax, rax	       561	compress.c	FUNCTION_8	IF_2
0x4000a04	          0x4989c5	                            mov r13, rax	       559	compress.c	FUNCTION_8	CALL_2
0x4000a07	            0x7417	                            je 0x4000a20	       561	compress.c	FUNCTION_8	IF_2
0x4000a09	            0x31c9	                            xor ecx, ecx	       564	compress.c	FUNCTION_8	IF_3	CALL_3
0x4000a0b	          0x4d89e0	                             mov r8, r12	       564	compress.c	FUNCTION_8	IF_3	CALL_3
0x4000a0e	          0x4889c2	                            mov rdx, rax	       564	compress.c	FUNCTION_8	IF_3	CALL_3
0x4000a11	          0x4889de	                            mov rsi, rbx	       564	compress.c	FUNCTION_8	IF_3	CALL_3
0x4000a14	          0x4889ef	                            mov rdi, rbp	       564	compress.c	FUNCTION_8	IF_3	CALL_3
0x4000a17	      0xe800000000	                          call 0x4000a1c	       564	compress.c	FUNCTION_8	IF_3	CALL_3
0x4000a1c	            0x85c0	                           test eax, eax	       564	compress.c	FUNCTION_8	IF_3	CALL_3
0x4000a1e	            0x7504	                           jne 0x4000a24	       564	compress.c	FUNCTION_8	IF_3	CALL_3
0x4000a20	            0x31c0	                            xor eax, eax	       562	compress.c	FUNCTION_8	IF_2
0x4000a22	            0xebc0	                           jmp 0x40009e4	       562	compress.c	FUNCTION_8	IF_2
0x4000a24	          0x4c89e1	                            mov rcx, r12	       568	compress.c	FUNCTION_8	CALL_4
0x4000a27	          0x4c89ea	                            mov rdx, r13	       568	compress.c	FUNCTION_8	CALL_4
0x4000a2a	          0x4889de	                            mov rsi, rbx	       568	compress.c	FUNCTION_8	CALL_4
0x4000a2d	          0x4889ef	                            mov rdi, rbp	       568	compress.c	FUNCTION_8	CALL_4
0x4000a30	      0xe85bfbffff	  call sym.bfd_compress_section_contents	       568	compress.c	FUNCTION_8	CALL_4
0x4000a35	          0x4885c0	                           test rax, rax	       571	compress.c	FUNCTION_8
0x4000a38	           0xf95c0	                                setne al	       571	compress.c	FUNCTION_8
0x4000a3b	           0xfb6c0	                           movzx eax, al	       571	compress.c	FUNCTION_8
0x4000a3e	            0xeba4	                           jmp 0x40009e4	       571	compress.c	FUNCTION_8
