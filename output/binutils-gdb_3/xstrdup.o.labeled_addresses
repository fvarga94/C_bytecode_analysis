xstrdup	SWITCH,0:IF,0:WHILE,0:CALL,3:ELSE,0:functions,0:FOR,0:DO,0	15
0x4000040	              0x55	                                push rbp	        32	xstrdup.c	FUNCTION_1
0x4000041	              0x53	                                push rbx	        32	xstrdup.c	FUNCTION_1
0x4000042	          0x4889fd	                            mov rbp, rdi	        32	xstrdup.c	FUNCTION_1
0x4000045	        0x4883ec08	                              sub rsp, 8	        32	xstrdup.c	FUNCTION_1
0x4000049	      0xe800000000	                          call 0x400004e	        33	xstrdup.c	FUNCTION_1	CALL_1
0x400004e	        0x488d5801	                      lea rbx, [rax + 1]	        33	xstrdup.c	FUNCTION_1	CALL_1
0x4000052	          0x4889df	                            mov rdi, rbx	        34	xstrdup.c	FUNCTION_1	CALL_2
0x4000055	      0xe800000000	                          call 0x400005a	        34	xstrdup.c	FUNCTION_1	CALL_2
0x400005a	        0x4883c408	                              add rsp, 8	        36	xstrdup.c	FUNCTION_1
0x400005e	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_2	CALL_3
0x4000061	          0x4889ee	                            mov rsi, rbp	        53	string3.h	FUNCTION_2	CALL_3
0x4000064	              0x5b	                                 pop rbx	        36	xstrdup.c	FUNCTION_1
0x4000065	              0x5d	                                 pop rbp	        36	xstrdup.c	FUNCTION_1
0x4000066	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_2	CALL_3
0x4000069	      0xe900000000	          jmp section_end..text.unlikely	        53	string3.h	FUNCTION_2	CALL_3
