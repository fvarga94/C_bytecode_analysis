_bfd_add_merge_section	CALL,6:WHILE,0:functions,0:SWITCH,0:DO,0:IF,13:ELSE,1:FOR,1	177
0x4000490	            0x4157	                                push r15	       363	merge.c	FUNCTION_6
0x4000492	            0x4156	                                push r14	       363	merge.c	FUNCTION_6
0x4000494	            0x4155	                                push r13	       363	merge.c	FUNCTION_6
0x4000496	            0x4154	                                push r12	       363	merge.c	FUNCTION_6
0x4000498	              0x55	                                push rbp	       363	merge.c	FUNCTION_6
0x4000499	              0x53	                                push rbx	       363	merge.c	FUNCTION_6
0x400049a	        0x4883ec28	                           sub rsp, 0x28	       363	merge.c	FUNCTION_6
0x400049e	    0x64488b042528	                mov rax, qword fs:[0x28]	       363	merge.c	FUNCTION_6
0x40004a7	      0x4889442418	             mov qword [rsp + 0x18], rax	       363	merge.c	FUNCTION_6
0x40004ac	            0x31c0	                            xor eax, eax	       363	merge.c	FUNCTION_6
0x40004ae	        0xf6474508	               test byte [rdi + 0x45], 8	       370	merge.c	FUNCTION_6	IF_1
0x40004b2	     0xf8590020000	                           jne 0x4000748	       370	merge.c	FUNCTION_6	IF_1
0x40004b8	          0x4889d5	                            mov rbp, rdx	       370	merge.c	FUNCTION_6	IF_1
0x40004bb	          0x8b5220	            mov edx, dword [rdx + 0x20] 	       371	merge.c	FUNCTION_6	IF_1
0x40004be	    0xf7c200008000	                      test edx, 0x800000	       371	merge.c	FUNCTION_6	IF_1
0x40004c4	     0xf847e020000	                            je 0x4000748	       371	merge.c	FUNCTION_6	IF_1
0x40004ca	          0x4989f6	                            mov r14, rsi	       371	merge.c	FUNCTION_6	IF_1
0x40004cd	        0x488b7538	            mov rsi, qword [rbp + 0x38] 	       374	merge.c	FUNCTION_6	IF_2
0x40004d1	          0x4885f6	                           test rsi, rsi	       374	merge.c	FUNCTION_6	IF_2
0x40004d4	     0xf8456010000	                            je 0x4000630	       374	merge.c	FUNCTION_6	IF_2
0x40004da	          0xf6c680	                           test dh, 0x80	       375	merge.c	FUNCTION_6	IF_2
0x40004dd	     0xf854d010000	                           jne 0x4000630	       375	merge.c	FUNCTION_6	IF_2
0x40004e3	    0x448b85c40000	            mov r8d, dword [rbp + 0xc4] 	       376	merge.c	FUNCTION_6	IF_2
0x40004ea	          0x4585c0	                           test r8d, r8d	       376	merge.c	FUNCTION_6	IF_2
0x40004ed	     0xf843d010000	                            je 0x4000630	       376	merge.c	FUNCTION_6	IF_2
0x40004f3	          0xf6c204	                              test dl, 4	       379	merge.c	FUNCTION_6	IF_3
0x40004f6	     0xf8534010000	                           jne 0x4000630	       379	merge.c	FUNCTION_6	IF_3
0x40004fc	          0x4989cd	                            mov r13, rcx	       379	merge.c	FUNCTION_6	IF_3
0x40004ff	          0x8b4d70	            mov ecx, dword [rbp + 0x70] 	       385	merge.c	FUNCTION_6
0x4000502	          0x4489c0	                            mov eax, r8d	       386	merge.c	FUNCTION_6	IF_4
0x4000505	          0x4989fc	                            mov r12, rdi	       386	merge.c	FUNCTION_6	IF_4
0x4000508	            0xd3e8	                             shr eax, cl	       386	merge.c	FUNCTION_6	IF_4
0x400050a	            0x85c0	                           test eax, eax	       386	merge.c	FUNCTION_6	IF_4
0x400050c	            0x7519	                           jne 0x4000527	       386	merge.c	FUNCTION_6	IF_4
0x400050e	        0x418d40ff	                       lea eax, [r8 - 1]	       387	merge.c	FUNCTION_6	IF_4
0x4000512	          0x4485c0	                           test eax, r8d	       387	merge.c	FUNCTION_6	IF_4
0x4000515	     0xf8515010000	                           jne 0x4000630	       387	merge.c	FUNCTION_6	IF_4
0x400051b	    0xf7c200000001	                     test edx, 0x1000000	       388	merge.c	FUNCTION_6	IF_4
0x4000521	     0xf8409010000	                            je 0x4000630	       388	merge.c	FUNCTION_6	IF_4
0x4000527	      0xb801000000	                              mov eax, 1	       389	merge.c	FUNCTION_6	IF_4
0x400052c	            0xd3e0	                             shl eax, cl	       389	merge.c	FUNCTION_6	IF_4
0x400052e	          0x4139c0	                            cmp r8d, eax	       389	merge.c	FUNCTION_6	IF_4
0x4000531	     0xf87e9000000	                            ja 0x4000620	       389	merge.c	FUNCTION_6	IF_4
0x4000537	          0x498b1e	                    mov rbx, qword [r14]	       401	merge.c	FUNCTION_6	FOR_1
0x400053a	          0x4885db	                           test rbx, rbx	       401	merge.c	FUNCTION_6	FOR_1
0x400053d	            0x7515	                           jne 0x4000554	       401	merge.c	FUNCTION_6	FOR_1
0x400053f	      0xe91c010000	                           jmp 0x4000660	       401	merge.c	FUNCTION_6	FOR_1
0x4000544	         0xf1f4000	                         nop dword [rax]	       401	merge.c	FUNCTION_6	FOR_1
0x4000548	          0x488b1b	                    mov rbx, qword [rbx]	       401	merge.c	FUNCTION_6	FOR_1
0x400054b	          0x4885db	                           test rbx, rbx	       401	merge.c	FUNCTION_6	FOR_1
0x400054e	     0xf840c010000	                            je 0x4000660	       401	merge.c	FUNCTION_6	FOR_1
0x4000554	        0x488b4308	                mov rax, qword [rbx + 8]	       402	merge.c	FUNCTION_6	FOR_1	IF_5
0x4000558	          0x4885c0	                           test rax, rax	       402	merge.c	FUNCTION_6	FOR_1	IF_5
0x400055b	            0x74eb	                            je 0x4000548	       402	merge.c	FUNCTION_6	FOR_1	IF_5
0x400055d	        0x488b4008	                mov rax, qword [rax + 8]	       403	merge.c	FUNCTION_6	FOR_1	IF_5
0x4000561	          0x8b7820	            mov edi, dword [rax + 0x20] 	       403	merge.c	FUNCTION_6	FOR_1	IF_5
0x4000564	            0x31d7	                            xor edi, edx	       403	merge.c	FUNCTION_6	FOR_1	IF_5
0x4000566	    0x81e700008001	                      and edi, 0x1800000	       403	merge.c	FUNCTION_6	FOR_1	IF_5
0x400056c	            0x75da	                           jne 0x4000548	       403	merge.c	FUNCTION_6	FOR_1	IF_5
0x400056e	    0x443b80c40000	            cmp r8d, dword [rax + 0xc4] 	       404	merge.c	FUNCTION_6	FOR_1	IF_5
0x4000575	            0x75d1	                           jne 0x4000548	       404	merge.c	FUNCTION_6	FOR_1	IF_5
0x4000577	          0x3b4870	            cmp ecx, dword [rax + 0x70] 	       405	merge.c	FUNCTION_6	FOR_1	IF_5
0x400057a	            0x75cc	                           jne 0x4000548	       405	merge.c	FUNCTION_6	FOR_1	IF_5
0x400057c	        0x488b7d68	            mov rdi, qword [rbp + 0x68] 	       406	merge.c	FUNCTION_6	FOR_1	IF_5
0x4000580	        0x48397868	            cmp qword [rax + 0x68], rdi 	       406	merge.c	FUNCTION_6	FOR_1	IF_5
0x4000584	            0x75c2	                           jne 0x4000548	       406	merge.c	FUNCTION_6	FOR_1	IF_5
0x4000586	        0x4883c62f	                           add rsi, 0x2f	       426	merge.c	FUNCTION_6
0x400058a	    0x81e200000001	                      and edx, 0x1000000	       427	merge.c	FUNCTION_6	IF_9
0x4000590	     0xf856a010000	                           jne 0x4000700	       427	merge.c	FUNCTION_6	IF_9
0x4000596	          0x4c89e7	                            mov rdi, r12	       432	merge.c	FUNCTION_6	CALL_4
0x4000599	      0xe800000000	                          call 0x400059e	       432	merge.c	FUNCTION_6	CALL_4
0x400059e	          0x4885c0	                           test rax, rax	       433	merge.c	FUNCTION_6	IF_10
0x40005a1	        0x49894500	                    mov qword [r13], rax	       432	merge.c	FUNCTION_6	CALL_4
0x40005a5	            0x7465	                            je 0x400060c	       433	merge.c	FUNCTION_6	IF_10
0x40005a7	        0x488b5308	                mov rdx, qword [rbx + 8]	       437	merge.c	FUNCTION_6	IF_11
0x40005ab	          0x4885d2	                           test rdx, rdx	       437	merge.c	FUNCTION_6	IF_11
0x40005ae	     0xf848c010000	                            je 0x4000740	       437	merge.c	FUNCTION_6	IF_11
0x40005b4	          0x488b0a	                    mov rcx, qword [rdx]	       439	merge.c	FUNCTION_6	IF_11
0x40005b7	          0x488908	                    mov qword [rax], rcx	       439	merge.c	FUNCTION_6	IF_11
0x40005ba	          0x488902	                    mov qword [rdx], rax	       440	merge.c	FUNCTION_6	IF_11
0x40005bd	        0xf6452301	               test byte [rbp + 0x23], 1	       451	merge.c	FUNCTION_6	IF_12
0x40005c1	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       447	merge.c	FUNCTION_6
0x40005c5	        0x488b4d38	            mov rcx, qword [rbp + 0x38] 	       450	merge.c	FUNCTION_6
0x40005c9	        0x48894308	                mov qword [rbx + 8], rax	       444	merge.c	FUNCTION_6
0x40005cd	        0x488d5828	                   lea rbx, [rax + 0x28]	       452	merge.c	FUNCTION_6	CALL_5
0x40005d1	        0x48896808	                mov qword [rax + 8], rbp	       445	merge.c	FUNCTION_6
0x40005d5	        0x4c896810	             mov qword [rax + 0x10], r13	       446	merge.c	FUNCTION_6
0x40005d9	        0x48895018	             mov qword [rax + 0x18], rdx	       447	merge.c	FUNCTION_6
0x40005dd	    0x48c740200000	               mov qword [rax + 0x20], 0	       448	merge.c	FUNCTION_6
0x40005e5	        0x48894d40	            mov qword [rbp + 0x40], rcx 	       450	merge.c	FUNCTION_6
0x40005e9	     0xf8521010000	                           jne 0x4000710	       451	merge.c	FUNCTION_6	IF_12
0x40005ef	    0x488bbdf00000	            mov rdi, qword [rbp + 0xf0] 	       454	merge.c	FUNCTION_6	IF_13	CALL_6
0x40005f6	      0x488d542410	                   lea rdx, [rsp + 0x10]	       454	merge.c	FUNCTION_6	IF_13	CALL_6
0x40005fb	          0x4889ee	                            mov rsi, rbp	       454	merge.c	FUNCTION_6	IF_13	CALL_6
0x40005fe	      0x48895c2410	             mov qword [rsp + 0x10], rbx	       453	merge.c	FUNCTION_6
0x4000603	      0xe800000000	                          call 0x4000608	       454	merge.c	FUNCTION_6	IF_13	CALL_6
0x4000608	            0x85c0	                           test eax, eax	       454	merge.c	FUNCTION_6	IF_13	CALL_6
0x400060a	            0x7524	                           jne 0x4000630	       454	merge.c	FUNCTION_6	IF_13	CALL_6
0x400060c	    0x49c745000000	                      mov qword [r13], 0	       460	merge.c	FUNCTION_6
0x4000614	            0x31c0	                            xor eax, eax	       461	merge.c	FUNCTION_6
0x4000616	            0xeb1d	                           jmp 0x4000635	       461	merge.c	FUNCTION_6
0x4000618	     0xf1f84000000	                   nop dword [rax + rax]	       461	merge.c	FUNCTION_6
0x4000620	          0x83e801	                              sub eax, 1	       390	merge.c	FUNCTION_6	IF_4
0x4000623	          0x4485c0	                           test eax, r8d	       390	merge.c	FUNCTION_6	IF_4
0x4000626	     0xf840bffffff	                            je 0x4000537	       390	merge.c	FUNCTION_6	IF_4
0x400062c	         0xf1f4000	                         nop dword [rax]	       390	merge.c	FUNCTION_6	IF_4
0x4000630	      0xb801000000	                              mov eax, 1	       377	merge.c	FUNCTION_6	IF_2
0x4000635	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       462	merge.c	FUNCTION_6
0x400063a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       462	merge.c	FUNCTION_6
0x4000643	     0xf8513010000	                           jne 0x400075c	       462	merge.c	FUNCTION_6
0x4000649	        0x4883c428	                           add rsp, 0x28	       462	merge.c	FUNCTION_6
0x400064d	              0x5b	                                 pop rbx	       462	merge.c	FUNCTION_6
0x400064e	              0x5d	                                 pop rbp	       462	merge.c	FUNCTION_6
0x400064f	            0x415c	                                 pop r12	       462	merge.c	FUNCTION_6
0x4000651	            0x415d	                                 pop r13	       462	merge.c	FUNCTION_6
0x4000653	            0x415e	                                 pop r14	       462	merge.c	FUNCTION_6
0x4000655	            0x415f	                                 pop r15	       462	merge.c	FUNCTION_6
0x4000657	              0xc3	                                     ret	       462	merge.c	FUNCTION_6
0x4000658	     0xf1f84000000	                   nop dword [rax + rax]	       462	merge.c	FUNCTION_6
0x4000660	      0xbe18000000	                           mov esi, 0x18	       412	merge.c	FUNCTION_6	IF_6
0x4000665	          0x4c89e7	                            mov rdi, r12	       412	merge.c	FUNCTION_6	IF_6
0x4000668	      0xe800000000	                          call 0x400066d	       412	merge.c	FUNCTION_6	IF_6
0x400066d	          0x4885c0	                           test rax, rax	       414	merge.c	FUNCTION_6	IF_6	IF_7
0x4000670	          0x4889c3	                            mov rbx, rax	       412	merge.c	FUNCTION_6	IF_6
0x4000673	            0x7497	                            je 0x400060c	       414	merge.c	FUNCTION_6	IF_6	IF_7
0x4000675	          0x498b06	                    mov rax, qword [r14]	       416	merge.c	FUNCTION_6	IF_6
0x4000678	      0xbf48000000	                           mov edi, 0x48	       239	merge.c	FUNCTION_3	CALL_1
0x400067d	    0x48c743080000	                  mov qword [rbx + 8], 0	       417	merge.c	FUNCTION_6	IF_6
0x4000685	    0x448bbdc40000	           mov r15d, dword [rbp + 0xc4] 	       419	merge.c	FUNCTION_6	IF_6	CALL_3
0x400068c	          0x488903	                    mov qword [rbx], rax	       416	merge.c	FUNCTION_6	IF_6
0x400068f	          0x8b4520	            mov eax, dword [rbp + 0x20] 	       419	merge.c	FUNCTION_6	IF_6	CALL_3
0x4000692	          0x49891e	                    mov qword [r14], rbx	       418	merge.c	FUNCTION_6	IF_6
0x4000695	      0x2500000001	                      and eax, 0x1000000	       419	merge.c	FUNCTION_6	IF_6	CALL_3
0x400069a	        0x8944240c	              mov dword [rsp + 0xc], eax	       419	merge.c	FUNCTION_6	IF_6	CALL_3
0x400069e	      0xe800000000	                          call 0x40006a3	       239	merge.c	FUNCTION_3	CALL_1
0x40006a3	          0x4885c0	                           test rax, rax	       240	merge.c	FUNCTION_3	IF_1
0x40006a6	          0x4989c6	                            mov r14, rax	       239	merge.c	FUNCTION_3	CALL_1
0x40006a9	     0xf847f000000	                            je 0x400072e	       240	merge.c	FUNCTION_3	IF_1
0x40006af	      0xb93b410000	                         mov ecx, 0x413b	       243	merge.c	FUNCTION_3	IF_2	CALL_2
0x40006b4	      0xba38000000	                           mov edx, 0x38	       243	merge.c	FUNCTION_3	IF_2	CALL_2
0x40006b9	      0xbe00000000	                              mov esi, 0	       243	merge.c	FUNCTION_3	IF_2	CALL_2
0x40006be	          0x4889c7	                            mov rdi, rax	       243	merge.c	FUNCTION_3	IF_2	CALL_2
0x40006c1	      0xe800000000	                          call 0x40006c6	       243	merge.c	FUNCTION_3	IF_2	CALL_2
0x40006c6	            0x85c0	                           test eax, eax	       243	merge.c	FUNCTION_3	IF_2	CALL_2
0x40006c8	            0x745c	                            je 0x4000726	       243	merge.c	FUNCTION_3	IF_2	CALL_2
0x40006ca	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       254	merge.c	FUNCTION_3
0x40006ce	    0x49c746280000	               mov qword [r14 + 0x28], 0	       250	merge.c	FUNCTION_3
0x40006d6	    0x49c746300000	               mov qword [r14 + 0x30], 0	       251	merge.c	FUNCTION_3
0x40006de	    0x49c746380000	               mov qword [r14 + 0x38], 0	       252	merge.c	FUNCTION_3
0x40006e6	        0x45897e40	            mov dword [r14 + 0x40], r15d	       253	merge.c	FUNCTION_3
0x40006ea	        0x488b7538	            mov rsi, qword [rbp + 0x38] 	       253	merge.c	FUNCTION_3
0x40006ee	        0x41894644	             mov dword [r14 + 0x44], eax	       254	merge.c	FUNCTION_3
0x40006f2	          0x8b5520	            mov edx, dword [rbp + 0x20] 	       254	merge.c	FUNCTION_3
0x40006f5	        0x4c897310	             mov qword [rbx + 0x10], r14	       419	merge.c	FUNCTION_6	IF_6	CALL_3
0x40006f9	      0xe988feffff	                           jmp 0x4000586	       419	merge.c	FUNCTION_6	IF_6	CALL_3
0x40006fe	            0x6690	                                     nop	       419	merge.c	FUNCTION_6	IF_6	CALL_3
0x4000700	    0x8b85c4000000	            mov eax, dword [rbp + 0xc4] 	       431	merge.c	FUNCTION_6	IF_9
0x4000706	          0x4801c6	                            add rsi, rax	       431	merge.c	FUNCTION_6	IF_9
0x4000709	      0xe988feffff	                           jmp 0x4000596	       431	merge.c	FUNCTION_6	IF_9
0x400070e	            0x6690	                                     nop	       431	merge.c	FUNCTION_6	IF_9
0x4000710	    0x8b95c4000000	            mov edx, dword [rbp + 0xc4] 	        90	string3.h	FUNCTION_19	CALL_6
0x4000716	        0x488d3c0b	                    lea rdi, [rbx + rcx]	        90	string3.h	FUNCTION_19	CALL_6
0x400071a	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_19	CALL_6
0x400071c	      0xe800000000	                          call 0x4000721	        90	string3.h	FUNCTION_19	CALL_6
0x4000721	      0xe9c9feffff	                           jmp 0x40005ef	        90	string3.h	FUNCTION_19	CALL_6
0x4000726	          0x4c89f7	                            mov rdi, r14	       246	merge.c	FUNCTION_3	IF_2	CALL_3
0x4000729	      0xe800000000	                          call 0x400072e	       246	merge.c	FUNCTION_3	IF_2	CALL_3
0x400072e	    0x48c743100000	               mov qword [rbx + 0x10], 0	       419	merge.c	FUNCTION_6	IF_6	CALL_3
0x4000736	      0xe9d1feffff	                           jmp 0x400060c	       419	merge.c	FUNCTION_6	IF_6	CALL_3
0x400073b	       0xf1f440000	                   nop dword [rax + rax]	       419	merge.c	FUNCTION_6	IF_6	CALL_3
0x4000740	          0x488900	                    mov qword [rax], rax	       443	merge.c	FUNCTION_6	ELSE_1
0x4000743	      0xe975feffff	                           jmp 0x40005bd	       443	merge.c	FUNCTION_6	ELSE_1
0x4000748	      0xba00000000	                              mov edx, 0	       372	merge.c	FUNCTION_6	CALL_1
0x400074d	      0xbe74010000	                          mov esi, 0x174	       372	merge.c	FUNCTION_6	CALL_1
0x4000752	      0xbf00000000	                              mov edi, 0	       372	merge.c	FUNCTION_6	CALL_1
0x4000757	      0xe800000000	                          call 0x400075c	       372	merge.c	FUNCTION_6	CALL_1
0x400075c	      0xe800000000	                          call 0x4000761	       462	merge.c	FUNCTION_6
_bfd_merged_section_offset	CALL,6:WHILE,2:functions,0:SWITCH,0:DO,0:IF,11:ELSE,2:FOR,1	161
0x4000f80	            0x4157	                                push r15	       852	merge.c	FUNCTION_14
0x4000f82	            0x4156	                                push r14	       852	merge.c	FUNCTION_14
0x4000f84	            0x4155	                                push r13	       852	merge.c	FUNCTION_14
0x4000f86	            0x4154	                                push r12	       852	merge.c	FUNCTION_14
0x4000f88	              0x55	                                push rbp	       852	merge.c	FUNCTION_14
0x4000f89	              0x53	                                push rbx	       852	merge.c	FUNCTION_14
0x4000f8a	        0x4883ec08	                              sub rsp, 8	       852	merge.c	FUNCTION_14
0x4000f8e	          0x4885d2	                           test rdx, rdx	       860	merge.c	FUNCTION_14	IF_1
0x4000f91	          0x4c8b36	                    mov r14, qword [rsi]	       856	merge.c	FUNCTION_14
0x4000f94	     0xf847f010000	                            je 0x4001119	       860	merge.c	FUNCTION_14	IF_1
0x4000f9a	        0x493b4e40	            cmp rcx, qword [r14 + 0x40] 	       863	merge.c	FUNCTION_14	IF_2
0x4000f9e	          0x4889cb	                            mov rbx, rcx	       863	merge.c	FUNCTION_14	IF_2
0x4000fa1	          0x4889d5	                            mov rbp, rdx	       863	merge.c	FUNCTION_14	IF_2
0x4000fa4	          0x4989f4	                            mov r12, rsi	       863	merge.c	FUNCTION_14	IF_2
0x4000fa7	            0x7227	                            jb 0x4000fd0	       863	merge.c	FUNCTION_14	IF_2
0x4000fa9	     0xf873a010000	                            ja 0x40010e9	       865	merge.c	FUNCTION_14	IF_2	IF_3
0x4000faf	      0x48837d2000	               cmp qword [rbp + 0x20], 0	       870	merge.c	FUNCTION_14	IF_2
0x4000fb4	     0xf8471010000	                            je 0x400112b	       870	merge.c	FUNCTION_14	IF_2
0x4000fba	        0x498b4638	            mov rax, qword [r14 + 0x38] 	       870	merge.c	FUNCTION_14	IF_2
0x4000fbe	        0x4883c408	                              add rsp, 8	       922	merge.c	FUNCTION_14
0x4000fc2	              0x5b	                                 pop rbx	       922	merge.c	FUNCTION_14
0x4000fc3	              0x5d	                                 pop rbp	       922	merge.c	FUNCTION_14
0x4000fc4	            0x415c	                                 pop r12	       922	merge.c	FUNCTION_14
0x4000fc6	            0x415d	                                 pop r13	       922	merge.c	FUNCTION_14
0x4000fc8	            0x415e	                                 pop r14	       922	merge.c	FUNCTION_14
0x4000fca	            0x415f	                                 pop r15	       922	merge.c	FUNCTION_14
0x4000fcc	              0xc3	                                     ret	       922	merge.c	FUNCTION_14
0x4000fcd	           0xf1f00	                         nop dword [rax]	       922	merge.c	FUNCTION_14
0x4000fd0	        0x488b7a18	            mov rdi, qword [rdx + 0x18] 	       873	merge.c	FUNCTION_14	IF_4
0x4000fd4	          0x8b4f44	            mov ecx, dword [rdi + 0x44] 	       873	merge.c	FUNCTION_14	IF_4
0x4000fd7	            0x85c9	                           test ecx, ecx	       873	merge.c	FUNCTION_14	IF_4
0x4000fd9	            0x7475	                            je 0x4001050	       873	merge.c	FUNCTION_14	IF_4
0x4000fdb	    0x458b8ec40000	            mov r9d, dword [r14 + 0xc4] 	       875	merge.c	FUNCTION_14	IF_4	IF_5
0x4000fe2	        0x4c8d6a28	                   lea r13, [rdx + 0x28]	       877	merge.c	FUNCTION_14	IF_4	IF_5
0x4000fe6	        0x4183f901	                              cmp r9d, 1	       875	merge.c	FUNCTION_14	IF_4	IF_5
0x4000fea	     0xf84bb000000	                            je 0x40010ab	       875	merge.c	FUNCTION_14	IF_4	IF_5
0x4000ff0	          0x4489c9	                            mov ecx, r9d	       884	merge.c	FUNCTION_14	IF_4	ELSE_1
0x4000ff3	            0x31d2	                            xor edx, edx	       885	merge.c	FUNCTION_14	IF_4	ELSE_1
0x4000ff5	          0x4889d8	                            mov rax, rbx	       885	merge.c	FUNCTION_14	IF_4	ELSE_1
0x4000ff8	          0x48f7f1	                                 div rcx	       885	merge.c	FUNCTION_14	IF_4	ELSE_1
0x4000ffb	        0x480fafc1	                           imul rax, rcx	       885	merge.c	FUNCTION_14	IF_4	ELSE_1
0x4000fff	          0x4989c2	                            mov r10, rax	       885	merge.c	FUNCTION_14	IF_4	ELSE_1
0x4001002	          0x4929ca	                            sub r10, rcx	       885	merge.c	FUNCTION_14	IF_4	ELSE_1
0x4001005	          0x4d01ea	                            add r10, r13	       886	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2
0x4001008	            0x723d	                            jb 0x4001047	       886	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2
0x400100a	    0x660f1f440000	                    nop word [rax + rax]	       886	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2
0x4001010	          0x4585c9	                           test r9d, r9d	       890	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1
0x4001013	            0x7432	                            je 0x4001047	       890	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1
0x4001015	            0x31c0	                            xor eax, eax	       891	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1	IF_6
0x4001017	        0x41803a00	                       cmp byte [r10], 0	       891	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1	IF_6
0x400101b	        0x4d8d4201	                       lea r8, [r10 + 1]	       891	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1	IF_6
0x400101f	            0x741e	                            je 0x400103f	       891	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1	IF_6
0x4001021	      0xe9b2000000	                           jmp 0x40010d8	       891	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1	IF_6
0x4001026	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       891	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1	IF_6
0x4001030	        0x4983c001	                               add r8, 1	       891	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1	IF_6
0x4001034	      0x418078ff00	                    cmp byte [r8 - 1], 0	       891	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1	IF_6
0x4001039	     0xf8599000000	                           jne 0x40010d8	       891	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1	IF_6
0x400103f	          0x83c001	                              add eax, 1	       890	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1
0x4001042	          0x4139c1	                            cmp r9d, eax	       890	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1
0x4001045	            0x75e9	                           jne 0x4001030	       890	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1
0x4001047	        0x4d8d3c0a	                    lea r15, [r10 + rcx]	       897	merge.c	FUNCTION_14	IF_4	ELSE_1
0x400104b	            0xeb1f	                           jmp 0x400106c	       897	merge.c	FUNCTION_14	IF_4	ELSE_1
0x400104d	           0xf1f00	                         nop dword [rax]	       897	merge.c	FUNCTION_14	IF_4	ELSE_1
0x4001050	    0x418b8ec40000	            mov ecx, dword [r14 + 0xc4] 	       902	merge.c	FUNCTION_14	ELSE_2
0x4001057	        0x4c8d6a28	                   lea r13, [rdx + 0x28]	       902	merge.c	FUNCTION_14	ELSE_2
0x400105b	          0x4889d8	                            mov rax, rbx	       902	merge.c	FUNCTION_14	ELSE_2
0x400105e	            0x31d2	                            xor edx, edx	       902	merge.c	FUNCTION_14	ELSE_2
0x4001060	          0x48f7f1	                                 div rcx	       902	merge.c	FUNCTION_14	ELSE_2
0x4001063	        0x480fafc8	                           imul rcx, rax	       902	merge.c	FUNCTION_14	ELSE_2
0x4001067	      0x4d8d7c0d00	                    lea r15, [r13 + rcx]	       902	merge.c	FUNCTION_14	ELSE_2
0x400106c	            0x31c9	                            xor ecx, ecx	       904	merge.c	FUNCTION_14	CALL_3
0x400106e	            0x31d2	                            xor edx, edx	       904	merge.c	FUNCTION_14	CALL_3
0x4001070	          0x4c89fe	                            mov rsi, r15	       904	merge.c	FUNCTION_14	CALL_3
0x4001073	      0xe848f1ffff	          call sym.sec_merge_hash_lookup	       904	merge.c	FUNCTION_14	CALL_3
0x4001078	          0x4885c0	                           test rax, rax	       905	merge.c	FUNCTION_14	IF_8
0x400107b	          0x4889c6	                            mov rsi, rax	       904	merge.c	FUNCTION_14	CALL_3
0x400107e	     0xf84ae000000	                            je 0x4001132	       905	merge.c	FUNCTION_14	IF_8
0x4001084	        0x488b4628	            mov rax, qword [rsi + 0x28] 	       920	merge.c	FUNCTION_14
0x4001088	        0x488b4008	                mov rax, qword [rax + 8]	       920	merge.c	FUNCTION_14
0x400108c	        0x49890424	                    mov qword [r12], rax	       920	merge.c	FUNCTION_14
0x4001090	      0x498d441d00	                    lea rax, [r13 + rbx]	       921	merge.c	FUNCTION_14
0x4001095	          0x4c29f8	                            sub rax, r15	       921	merge.c	FUNCTION_14
0x4001098	        0x48034620	             add rax, qword [rsi + 0x20]	       921	merge.c	FUNCTION_14
0x400109c	        0x4883c408	                              add rsp, 8	       922	merge.c	FUNCTION_14
0x40010a0	              0x5b	                                 pop rbx	       922	merge.c	FUNCTION_14
0x40010a1	              0x5d	                                 pop rbp	       922	merge.c	FUNCTION_14
0x40010a2	            0x415c	                                 pop r12	       922	merge.c	FUNCTION_14
0x40010a4	            0x415d	                                 pop r13	       922	merge.c	FUNCTION_14
0x40010a6	            0x415e	                                 pop r14	       922	merge.c	FUNCTION_14
0x40010a8	            0x415f	                                 pop r15	       922	merge.c	FUNCTION_14
0x40010aa	              0xc3	                                     ret	       922	merge.c	FUNCTION_14
0x40010ab	      0x498d441dff	                lea rax, [r13 + rbx - 1]	       877	merge.c	FUNCTION_14	IF_4	IF_5
0x40010b0	          0x4939c5	                            cmp r13, rax	       878	merge.c	FUNCTION_14	IF_4	IF_5	WHILE_1
0x40010b3	            0x7614	                           jbe 0x40010c9	       878	merge.c	FUNCTION_14	IF_4	IF_5	WHILE_1
0x40010b5	            0xeb17	                           jmp 0x40010ce	       878	merge.c	FUNCTION_14	IF_4	IF_5	WHILE_1
0x40010b7	    0x660f1f840000	                    nop word [rax + rax]	       878	merge.c	FUNCTION_14	IF_4	IF_5	WHILE_1
0x40010c0	        0x4883e801	                              sub rax, 1	       879	merge.c	FUNCTION_14	IF_4	IF_5	WHILE_1
0x40010c4	          0x4939c5	                            cmp r13, rax	       878	merge.c	FUNCTION_14	IF_4	IF_5	WHILE_1
0x40010c7	            0x7705	                            ja 0x40010ce	       878	merge.c	FUNCTION_14	IF_4	IF_5	WHILE_1
0x40010c9	          0x803800	                       cmp byte [rax], 0	       878	merge.c	FUNCTION_14	IF_4	IF_5	WHILE_1
0x40010cc	            0x75f2	                           jne 0x40010c0	       878	merge.c	FUNCTION_14	IF_4	IF_5	WHILE_1
0x40010ce	        0x4c8d7801	                      lea r15, [rax + 1]	       880	merge.c	FUNCTION_14	IF_4	IF_5
0x40010d2	            0xeb98	                           jmp 0x400106c	       880	merge.c	FUNCTION_14	IF_4	IF_5
0x40010d4	         0xf1f4000	                         nop dword [rax]	       880	merge.c	FUNCTION_14	IF_4	IF_5
0x40010d8	          0x4929ca	                            sub r10, rcx	       880	merge.c	FUNCTION_14	IF_4	IF_5
0x40010db	          0x4d39d5	                            cmp r13, r10	       886	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2
0x40010de	     0xf862cffffff	                           jbe 0x4001010	       886	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2
0x40010e4	      0xe95effffff	                           jmp 0x4001047	       886	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2
0x40010e9	    0x4d8ba6f00000	            mov r12, qword [r14 + 0xf0] 	       866	merge.c	FUNCTION_14	IF_2	IF_3	CALL_1
0x40010f0	      0xba05000000	                              mov edx, 5	       868	merge.c	FUNCTION_14	IF_2	IF_3	CALL_2
0x40010f5	      0xbe00000000	                              mov esi, 0	       868	merge.c	FUNCTION_14	IF_2	IF_3	CALL_2
0x40010fa	      0xbf00000000	                              mov edi, 0	       868	merge.c	FUNCTION_14	IF_2	IF_3	CALL_2
0x40010ff	      0xe800000000	                          call 0x4001104	       868	merge.c	FUNCTION_14	IF_2	IF_3	CALL_2
0x4001104	          0x4889da	                            mov rdx, rbx	       866	merge.c	FUNCTION_14	IF_2	IF_3	CALL_1
0x4001107	          0x4889c7	                            mov rdi, rax	       866	merge.c	FUNCTION_14	IF_2	IF_3	CALL_1
0x400110a	          0x4c89e6	                            mov rsi, r12	       866	merge.c	FUNCTION_14	IF_2	IF_3	CALL_1
0x400110d	            0x31c0	                            xor eax, eax	       866	merge.c	FUNCTION_14	IF_2	IF_3	CALL_1
0x400110f	      0xe800000000	                          call 0x4001114	       866	merge.c	FUNCTION_14	IF_2	IF_3	CALL_1
0x4001114	      0xe996feffff	                           jmp 0x4000faf	       866	merge.c	FUNCTION_14	IF_2	IF_3	CALL_1
0x4001119	        0x4883c408	                              add rsp, 8	       922	merge.c	FUNCTION_14
0x400111d	          0x4889c8	                            mov rax, rcx	       922	merge.c	FUNCTION_14
0x4001120	              0x5b	                                 pop rbx	       922	merge.c	FUNCTION_14
0x4001121	              0x5d	                                 pop rbp	       922	merge.c	FUNCTION_14
0x4001122	            0x415c	                                 pop r12	       922	merge.c	FUNCTION_14
0x4001124	            0x415d	                                 pop r13	       922	merge.c	FUNCTION_14
0x4001126	            0x415e	                                 pop r14	       922	merge.c	FUNCTION_14
0x4001128	            0x415f	                                 pop r15	       922	merge.c	FUNCTION_14
0x400112a	              0xc3	                                     ret	       922	merge.c	FUNCTION_14
0x400112b	            0x31c0	                            xor eax, eax	       870	merge.c	FUNCTION_14	IF_2
0x400112d	      0xe98cfeffff	                           jmp 0x4000fbe	       870	merge.c	FUNCTION_14	IF_2
0x4001132	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       907	merge.c	FUNCTION_14	IF_8	IF_9
0x4001136	          0x8b5044	            mov edx, dword [rax + 0x44] 	       907	merge.c	FUNCTION_14	IF_8	IF_9
0x4001139	            0x85d2	                           test edx, edx	       907	merge.c	FUNCTION_14	IF_8	IF_9
0x400113b	            0x7436	                            je 0x4001173	       907	merge.c	FUNCTION_14	IF_8	IF_9
0x400113d	        0x41803f00	                       cmp byte [r15], 0	       911	merge.c	FUNCTION_14	IF_8	IF_10
0x4001141	            0x7558	                           jne 0x400119b	       911	merge.c	FUNCTION_14	IF_8	IF_10
0x4001143	        0x488b7030	            mov rsi, qword [rax + 0x30] 	       913	merge.c	FUNCTION_14	IF_8	IF_11
0x4001147	          0x4885f6	                           test rsi, rsi	       913	merge.c	FUNCTION_14	IF_8	IF_11
0x400114a	            0x743b	                            je 0x4001187	       913	merge.c	FUNCTION_14	IF_8	IF_11
0x400114c	    0x418b8ec40000	            mov ecx, dword [r14 + 0xc4] 	       916	merge.c	FUNCTION_14	IF_8
0x4001153	          0x4889d8	                            mov rax, rbx	       916	merge.c	FUNCTION_14	IF_8
0x4001156	            0x31d2	                            xor edx, edx	       916	merge.c	FUNCTION_14	IF_8
0x4001158	          0x48f7f1	                                 div rcx	       916	merge.c	FUNCTION_14	IF_8
0x400115b	        0x4883c001	                              add rax, 1	       916	merge.c	FUNCTION_14	IF_8
0x400115f	        0x480fafc8	                           imul rcx, rax	       916	merge.c	FUNCTION_14	IF_8
0x4001163	          0x8b4618	            mov eax, dword [rsi + 0x18] 	       916	merge.c	FUNCTION_14	IF_8
0x4001166	          0x4829c1	                            sub rcx, rax	       916	merge.c	FUNCTION_14	IF_8
0x4001169	      0x4d8d7c0d00	                    lea r15, [r13 + rcx]	       916	merge.c	FUNCTION_14	IF_8
0x400116e	      0xe911ffffff	                           jmp 0x4001084	       916	merge.c	FUNCTION_14	IF_8
0x4001173	      0xba00000000	                              mov edx, 0	       908	merge.c	FUNCTION_14	IF_8	CALL_4
0x4001178	      0xbe8c030000	                          mov esi, 0x38c	       908	merge.c	FUNCTION_14	IF_8	CALL_4
0x400117d	      0xbf00000000	                              mov edi, 0	       908	merge.c	FUNCTION_14	IF_8	CALL_4
0x4001182	      0xe800000000	                          call 0x4001187	       908	merge.c	FUNCTION_14	IF_8	CALL_4
0x4001187	      0xba00000000	                              mov edx, 0	       914	merge.c	FUNCTION_14	IF_8	CALL_6
0x400118c	      0xbe92030000	                          mov esi, 0x392	       914	merge.c	FUNCTION_14	IF_8	CALL_6
0x4001191	      0xbf00000000	                              mov edi, 0	       914	merge.c	FUNCTION_14	IF_8	CALL_6
0x4001196	      0xe800000000	                          call 0x400119b	       914	merge.c	FUNCTION_14	IF_8	CALL_6
0x400119b	      0xba00000000	                              mov edx, 0	       912	merge.c	FUNCTION_14	IF_8	CALL_5
0x40011a0	      0xbe90030000	                          mov esi, 0x390	       912	merge.c	FUNCTION_14	IF_8	CALL_5
0x40011a5	      0xbf00000000	                              mov edi, 0	       912	merge.c	FUNCTION_14	IF_8	CALL_5
0x40011aa	      0xe800000000	                          call 0x40011af	       912	merge.c	FUNCTION_14	IF_8	CALL_5
sec_merge_hash_newfunc	CALL,2:WHILE,0:functions,0:SWITCH,0:DO,0:IF,3:ELSE,0:FOR,0	30
0x4000150	              0x53	                                push rbx	       107	merge.c	FUNCTION_1
0x4000151	          0x4889f3	                            mov rbx, rsi	       107	merge.c	FUNCTION_1
0x4000154	        0x4883ec10	                           sub rsp, 0x10	       107	merge.c	FUNCTION_1
0x4000158	          0x4885ff	                           test rdi, rdi	       110	merge.c	FUNCTION_1	IF_1
0x400015b	            0x743b	                            je 0x4000198	       110	merge.c	FUNCTION_1	IF_1
0x400015d	          0x4889de	                            mov rsi, rbx	       117	merge.c	FUNCTION_1	CALL_2
0x4000160	      0xe800000000	                          call 0x4000165	       117	merge.c	FUNCTION_1	CALL_2
0x4000165	          0x4885c0	                           test rax, rax	       119	merge.c	FUNCTION_1	IF_3
0x4000168	            0x7426	                            je 0x4000190	       119	merge.c	FUNCTION_1	IF_3
0x400016a	    0x48c740200000	               mov qword [rax + 0x20], 0	       124	merge.c	FUNCTION_1	IF_3
0x4000172	    0xc7401c000000	               mov dword [rax + 0x1c], 0	       125	merge.c	FUNCTION_1	IF_3
0x4000179	    0x48c740280000	               mov qword [rax + 0x28], 0	       126	merge.c	FUNCTION_1	IF_3
0x4000181	    0x48c740300000	               mov qword [rax + 0x30], 0	       127	merge.c	FUNCTION_1	IF_3
0x4000189	        0x4883c410	                           add rsp, 0x10	       131	merge.c	FUNCTION_1
0x400018d	              0x5b	                                 pop rbx	       131	merge.c	FUNCTION_1
0x400018e	              0xc3	                                     ret	       131	merge.c	FUNCTION_1
0x400018f	              0x90	                                     nop	       131	merge.c	FUNCTION_1
0x4000190	            0x31c0	                            xor eax, eax	       131	merge.c	FUNCTION_1
0x4000192	            0xebf5	                           jmp 0x4000189	       131	merge.c	FUNCTION_1
0x4000194	         0xf1f4000	                         nop dword [rax]	       131	merge.c	FUNCTION_1
0x4000198	          0x4889df	                            mov rdi, rbx	       111	merge.c	FUNCTION_1	IF_1
0x400019b	      0xbe38000000	                           mov esi, 0x38	       111	merge.c	FUNCTION_1	IF_1
0x40001a0	      0x4889542408	                mov qword [rsp + 8], rdx	       111	merge.c	FUNCTION_1	IF_1
0x40001a5	      0xe800000000	                          call 0x40001aa	       111	merge.c	FUNCTION_1	IF_1
0x40001aa	          0x4889c7	                            mov rdi, rax	       111	merge.c	FUNCTION_1	IF_1
0x40001ad	            0x31c0	                            xor eax, eax	       114	merge.c	FUNCTION_1	IF_2
0x40001af	      0x488b542408	                mov rdx, qword [rsp + 8]	       113	merge.c	FUNCTION_1	IF_2
0x40001b4	          0x4885ff	                           test rdi, rdi	       113	merge.c	FUNCTION_1	IF_2
0x40001b7	            0x74d0	                            je 0x4000189	       113	merge.c	FUNCTION_1	IF_2
0x40001b9	            0xeba2	                           jmp 0x400015d	       113	merge.c	FUNCTION_1	IF_2
sec_merge_add	CALL,1:WHILE,0:functions,0:SWITCH,0:DO,0:IF,3:ELSE,1:FOR,0	35
0x4000410	              0x55	                                push rbp	       265	merge.c	FUNCTION_4
0x4000411	              0x53	                                push rbx	       265	merge.c	FUNCTION_4
0x4000412	          0x4889cd	                            mov rbp, rcx	       265	merge.c	FUNCTION_4
0x4000415	      0xb901000000	                              mov ecx, 1	       268	merge.c	FUNCTION_4	CALL_1
0x400041a	          0x4889fb	                            mov rbx, rdi	       265	merge.c	FUNCTION_4
0x400041d	        0x4883ec08	                              sub rsp, 8	       265	merge.c	FUNCTION_4
0x4000421	      0xe89afdffff	          call sym.sec_merge_hash_lookup	       268	merge.c	FUNCTION_4	CALL_1
0x4000426	          0x4885c0	                           test rax, rax	       269	merge.c	FUNCTION_4	IF_1
0x4000429	            0x7455	                            je 0x4000480	       269	merge.c	FUNCTION_4	IF_1
0x400042b	      0x4883782800	               cmp qword [rax + 0x28], 0	       272	merge.c	FUNCTION_4	IF_2
0x4000430	          0x4889c2	                            mov rdx, rax	       272	merge.c	FUNCTION_4	IF_2
0x4000433	            0x740b	                            je 0x4000440	       272	merge.c	FUNCTION_4	IF_2
0x4000435	        0x4883c408	                              add rsp, 8	       284	merge.c	FUNCTION_4	ELSE_1
0x4000439	              0x5b	                                 pop rbx	       284	merge.c	FUNCTION_4	ELSE_1
0x400043a	              0x5d	                                 pop rbp	       284	merge.c	FUNCTION_4	ELSE_1
0x400043b	              0xc3	                                     ret	       284	merge.c	FUNCTION_4	ELSE_1
0x400043c	         0xf1f4000	                         nop dword [rax]	       284	merge.c	FUNCTION_4	ELSE_1
0x4000440	      0x4883432801	               add qword [rbx + 0x28], 1	       274	merge.c	FUNCTION_4	IF_2
0x4000445	      0x48837b3000	               cmp qword [rbx + 0x30], 0	       276	merge.c	FUNCTION_4	IF_2	IF_3
0x400044a	        0x48896828	             mov qword [rax + 0x28], rbp	       275	merge.c	FUNCTION_4	IF_2
0x400044e	            0x7420	                            je 0x4000470	       276	merge.c	FUNCTION_4	IF_2	IF_3
0x4000450	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       279	merge.c	FUNCTION_4	IF_2	ELSE_1
0x4000454	        0x48895030	             mov qword [rax + 0x30], rdx	       279	merge.c	FUNCTION_4	IF_2	ELSE_1
0x4000458	        0x48895338	             mov qword [rbx + 0x38], rdx	       280	merge.c	FUNCTION_4	IF_2	ELSE_1
0x400045c	        0x4883c408	                              add rsp, 8	       284	merge.c	FUNCTION_4	ELSE_1
0x4000460	          0x4889d0	                            mov rax, rdx	       280	merge.c	FUNCTION_4	IF_2	ELSE_1
0x4000463	              0x5b	                                 pop rbx	       284	merge.c	FUNCTION_4	ELSE_1
0x4000464	              0x5d	                                 pop rbp	       284	merge.c	FUNCTION_4	ELSE_1
0x4000465	              0xc3	                                     ret	       284	merge.c	FUNCTION_4	ELSE_1
0x4000466	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       284	merge.c	FUNCTION_4	ELSE_1
0x4000470	        0x48894330	             mov qword [rbx + 0x30], rax	       277	merge.c	FUNCTION_4	IF_2	IF_3
0x4000474	            0xebe2	                           jmp 0x4000458	       277	merge.c	FUNCTION_4	IF_2	IF_3
0x4000476	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       277	merge.c	FUNCTION_4	IF_2	IF_3
0x4000480	            0x31c0	                            xor eax, eax	       270	merge.c	FUNCTION_4	IF_1
0x4000482	            0xebb1	                           jmp 0x4000435	       270	merge.c	FUNCTION_4	IF_1
strrevcmp	CALL,0:WHILE,1:functions,0:SWITCH,0:DO,0:IF,1:ELSE,0:FOR,0	37
0x4000040	          0x488b0f	                    mov rcx, qword [rdi]	       551	merge.c	FUNCTION_8
0x4000043	          0x488b16	                    mov rdx, qword [rsi]	       552	merge.c	FUNCTION_8
0x4000046	          0x8b7118	            mov esi, dword [rcx + 0x18] 	       553	merge.c	FUNCTION_8
0x4000049	        0x448b5218	           mov r10d, dword [rdx + 0x18] 	       554	merge.c	FUNCTION_8
0x400004d	        0x488b4908	                mov rcx, qword [rcx + 8]	       555	merge.c	FUNCTION_8
0x4000051	        0x488b5208	                mov rdx, qword [rdx + 8]	       556	merge.c	FUNCTION_8
0x4000055	      0x4c8d4431ff	                 lea r8, [rcx + rsi - 1]	       555	merge.c	FUNCTION_8
0x400005a	          0x4489d1	                           mov ecx, r10d	       556	merge.c	FUNCTION_8
0x400005d	          0x4439d6	                           cmp esi, r10d	       557	merge.c	FUNCTION_8
0x4000060	      0x4c8d4c0aff	                 lea r9, [rdx + rcx - 1]	       556	merge.c	FUNCTION_8
0x4000065	          0x4489d2	                           mov edx, r10d	       557	merge.c	FUNCTION_8
0x4000068	          0x4889f0	                            mov rax, rsi	       553	merge.c	FUNCTION_8
0x400006b	           0xf46d6	                         cmovbe edx, esi	       557	merge.c	FUNCTION_8
0x400006e	            0x85d2	                           test edx, edx	       559	merge.c	FUNCTION_8	WHILE_1
0x4000070	            0x7437	                            je 0x40000a9	       559	merge.c	FUNCTION_8	WHILE_1
0x4000072	        0x410fb630	                    movzx esi, byte [r8]	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x4000076	        0x410fb609	                    movzx ecx, byte [r9]	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x400007a	          0x4038f1	                             cmp cl, sil	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x400007d	            0x7531	                           jne 0x40000b0	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x400007f	          0x8d7aff	                      lea edi, [rdx - 1]	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x4000082	            0x31d2	                            xor edx, edx	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x4000084	          0x48f7df	                                 neg rdi	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x4000087	            0xeb1b	                           jmp 0x40000a4	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x4000089	     0xf1f80000000	                         nop dword [rax]	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x4000090	    0x410fb67410ff	          movzx esi, byte [r8 + rdx - 1]	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x4000096	        0x4883ea01	                              sub rdx, 1	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x400009a	      0x410fb60c11	              movzx ecx, byte [r9 + rdx]	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x400009f	          0x4038ce	                             cmp sil, cl	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x40000a2	            0x750c	                           jne 0x40000b0	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x40000a4	          0x4839fa	                            cmp rdx, rdi	       559	merge.c	FUNCTION_8	WHILE_1
0x40000a7	            0x75e7	                           jne 0x4000090	       559	merge.c	FUNCTION_8	WHILE_1
0x40000a9	          0x4429d0	                           sub eax, r10d	       567	merge.c	FUNCTION_8
0x40000ac	              0xc3	                                     ret	       568	merge.c	FUNCTION_8
0x40000ad	           0xf1f00	                         nop dword [rax]	       568	merge.c	FUNCTION_8
0x40000b0	        0x400fb6c6	                          movzx eax, sil	       562	merge.c	FUNCTION_8	WHILE_1	IF_1
0x40000b4	            0x29c8	                            sub eax, ecx	       562	merge.c	FUNCTION_8	WHILE_1	IF_1
0x40000b6	              0xc3	                                     ret	       562	merge.c	FUNCTION_8	WHILE_1	IF_1
sec_merge_hash_lookup	CALL,2:WHILE,1:functions,0:SWITCH,0:DO,0:IF,9:ELSE,2:FOR,5	181
0x40001c0	            0x4157	                                push r15	       138	merge.c	FUNCTION_2
0x40001c2	            0x4156	                                push r14	       138	merge.c	FUNCTION_2
0x40001c4	            0x4155	                                push r13	       138	merge.c	FUNCTION_2
0x40001c6	            0x4154	                                push r12	       138	merge.c	FUNCTION_2
0x40001c8	          0x4989f5	                            mov r13, rsi	       138	merge.c	FUNCTION_2
0x40001cb	              0x55	                                push rbp	       138	merge.c	FUNCTION_2
0x40001cc	              0x53	                                push rbx	       138	merge.c	FUNCTION_2
0x40001cd	          0x4989fc	                            mov r12, rdi	       138	merge.c	FUNCTION_2
0x40001d0	        0x4883ec18	                           sub rsp, 0x18	       138	merge.c	FUNCTION_2
0x40001d4	        0x894c2408	                mov dword [rsp + 8], ecx	       138	merge.c	FUNCTION_2
0x40001d8	          0x8b4f44	            mov ecx, dword [rdi + 0x44] 	       149	merge.c	FUNCTION_2	IF_1
0x40001db	        0x8954240c	              mov dword [rsp + 0xc], edx	       138	merge.c	FUNCTION_2
0x40001df	            0x85c9	                           test ecx, ecx	       149	merge.c	FUNCTION_2	IF_1
0x40001e1	     0xf85e9000000	                           jne 0x40002d0	       149	merge.c	FUNCTION_2	IF_1
0x40001e7	          0x8b6f40	            mov ebp, dword [rdi + 0x40] 	       186	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x40001ea	          0x4531f6	                          xor r14d, r14d	       186	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x40001ed	            0x85ed	                           test ebp, ebp	       186	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x40001ef	            0x7430	                            je 0x4000221	       186	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x40001f1	          0x8d45ff	                      lea eax, [rbp - 1]	       186	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x40001f4	          0x4c89ea	                            mov rdx, r13	       186	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x40001f7	          0x4531f6	                          xor r14d, r14d	       186	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x40001fa	      0x488d740601	                lea rsi, [rsi + rax + 1]	       186	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x40001ff	              0x90	                                     nop	       186	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x4000200	        0x4883c201	                              add rdx, 1	       188	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x4000204	         0xfb642ff	               movzx eax, byte [rdx - 1]	       188	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x4000208	            0x89c1	                            mov ecx, eax	       189	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x400020a	          0xc1e111	                           shl ecx, 0x11	       189	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x400020d	             0x1c8	                            add eax, ecx	       189	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x400020f	          0x4901c6	                            add r14, rax	       189	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x4000212	          0x4c89f0	                            mov rax, r14	       190	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x4000215	        0x48c1e802	                              shr rax, 2	       190	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x4000219	          0x4931c6	                            xor r14, rax	       190	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x400021c	          0x4839f2	                            cmp rdx, rsi	       186	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x400021f	            0x75df	                           jne 0x4000200	       186	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x4000221	      0x418b4c2418	            mov ecx, dword [r12 + 0x18] 	       196	merge.c	FUNCTION_2	FOR_5
0x4000226	            0x31d2	                            xor edx, edx	       196	merge.c	FUNCTION_2	FOR_5
0x4000228	          0x4c89f0	                            mov rax, r14	       196	merge.c	FUNCTION_2	FOR_5
0x400022b	          0x48f7f1	                                 div rcx	       196	merge.c	FUNCTION_2	FOR_5
0x400022e	        0x498b0424	                    mov rax, qword [r12]	       196	merge.c	FUNCTION_2	FOR_5
0x4000232	        0x488b1cd0	            mov rbx, qword [rax + rdx*8]	       196	merge.c	FUNCTION_2	FOR_5
0x4000236	          0x4885db	                           test rbx, rbx	       196	merge.c	FUNCTION_2	FOR_5
0x4000239	            0x7455	                            je 0x4000290	       196	merge.c	FUNCTION_2	FOR_5
0x400023b	          0x4189ef	                           mov r15d, ebp	       202	merge.c	FUNCTION_2	FOR_5	IF_5	CALL_1
0x400023e	            0xeb08	                           jmp 0x4000248	       202	merge.c	FUNCTION_2	FOR_5	IF_5	CALL_1
0x4000240	          0x488b1b	                    mov rbx, qword [rbx]	       198	merge.c	FUNCTION_2	FOR_5
0x4000243	          0x4885db	                           test rbx, rbx	       196	merge.c	FUNCTION_2	FOR_5
0x4000246	            0x7448	                            je 0x4000290	       196	merge.c	FUNCTION_2	FOR_5
0x4000248	        0x4c3b7310	            cmp r14, qword [rbx + 0x10] 	       200	merge.c	FUNCTION_2	FOR_5	IF_5
0x400024c	            0x75f2	                           jne 0x4000240	       200	merge.c	FUNCTION_2	FOR_5	IF_5
0x400024e	          0x3b6b18	            cmp ebp, dword [rbx + 0x18] 	       201	merge.c	FUNCTION_2	FOR_5	IF_5
0x4000251	            0x75ed	                           jne 0x4000240	       201	merge.c	FUNCTION_2	FOR_5	IF_5
0x4000253	        0x488b7b08	                mov rdi, qword [rbx + 8]	       202	merge.c	FUNCTION_2	FOR_5	IF_5	CALL_1
0x4000257	          0x4c89fa	                            mov rdx, r15	       202	merge.c	FUNCTION_2	FOR_5	IF_5	CALL_1
0x400025a	          0x4c89ee	                            mov rsi, r13	       202	merge.c	FUNCTION_2	FOR_5	IF_5	CALL_1
0x400025d	      0xe800000000	                          call 0x4000262	       202	merge.c	FUNCTION_2	FOR_5	IF_5	CALL_1
0x4000262	            0x85c0	                           test eax, eax	       202	merge.c	FUNCTION_2	FOR_5	IF_5	CALL_1
0x4000264	            0x75da	                           jne 0x4000240	       202	merge.c	FUNCTION_2	FOR_5	IF_5	CALL_1
0x4000266	        0x8b7c240c	              mov edi, dword [rsp + 0xc]	       206	merge.c	FUNCTION_2	FOR_5	IF_5	IF_6
0x400026a	          0x397b1c	            cmp dword [rbx + 0x1c], edi 	       206	merge.c	FUNCTION_2	FOR_5	IF_5	IF_6
0x400026d	          0x4889d8	                            mov rax, rbx	       206	merge.c	FUNCTION_2	FOR_5	IF_5	IF_6
0x4000270	            0x734b	                           jae 0x40002bd	       206	merge.c	FUNCTION_2	FOR_5	IF_5	IF_6
0x4000272	        0x8b542408	                mov edx, dword [rsp + 8]	       208	merge.c	FUNCTION_2	FOR_5	IF_5	IF_6	IF_7
0x4000276	            0x31c0	                            xor eax, eax	       221	merge.c	FUNCTION_2	IF_8
0x4000278	            0x85d2	                           test edx, edx	       208	merge.c	FUNCTION_2	FOR_5	IF_5	IF_6	IF_7
0x400027a	            0x7441	                            je 0x40002bd	       208	merge.c	FUNCTION_2	FOR_5	IF_5	IF_6	IF_7
0x400027c	    0xc74318000000	               mov dword [rbx + 0x18], 0	       211	merge.c	FUNCTION_2	FOR_5	IF_5	IF_6	IF_7
0x4000283	    0xc7431c000000	               mov dword [rbx + 0x1c], 0	       212	merge.c	FUNCTION_2	FOR_5	IF_5	IF_6	IF_7
0x400028a	            0xeb10	                           jmp 0x400029c	       212	merge.c	FUNCTION_2	FOR_5	IF_5	IF_6	IF_7
0x400028c	         0xf1f4000	                         nop dword [rax]	       212	merge.c	FUNCTION_2	FOR_5	IF_5	IF_6	IF_7
0x4000290	        0x8b442408	                mov eax, dword [rsp + 8]	       220	merge.c	FUNCTION_2	IF_8
0x4000294	            0x85c0	                           test eax, eax	       220	merge.c	FUNCTION_2	IF_8
0x4000296	     0xf84f3000000	                            je 0x400038f	       220	merge.c	FUNCTION_2	IF_8
0x400029c	          0x4c89f2	                            mov rdx, r14	       223	merge.c	FUNCTION_2
0x400029f	          0x4c89ee	                            mov rsi, r13	       223	merge.c	FUNCTION_2
0x40002a2	          0x4c89e7	                            mov rdi, r12	       223	merge.c	FUNCTION_2
0x40002a5	      0xe800000000	                          call 0x40002aa	       223	merge.c	FUNCTION_2
0x40002aa	          0x4885c0	                           test rax, rax	       225	merge.c	FUNCTION_2	IF_9
0x40002ad	     0xf84dc000000	                            je 0x400038f	       225	merge.c	FUNCTION_2	IF_9
0x40002b3	        0x8b7c240c	              mov edi, dword [rsp + 0xc]	       228	merge.c	FUNCTION_2
0x40002b7	          0x896818	             mov dword [rax + 0x18], ebp	       227	merge.c	FUNCTION_2
0x40002ba	          0x89781c	             mov dword [rax + 0x1c], edi	       228	merge.c	FUNCTION_2
0x40002bd	        0x4883c418	                           add rsp, 0x18	       230	merge.c	FUNCTION_2
0x40002c1	              0x5b	                                 pop rbx	       230	merge.c	FUNCTION_2
0x40002c2	              0x5d	                                 pop rbp	       230	merge.c	FUNCTION_2
0x40002c3	            0x415c	                                 pop r12	       230	merge.c	FUNCTION_2
0x40002c5	            0x415d	                                 pop r13	       230	merge.c	FUNCTION_2
0x40002c7	            0x415e	                                 pop r14	       230	merge.c	FUNCTION_2
0x40002c9	            0x415f	                                 pop r15	       230	merge.c	FUNCTION_2
0x40002cb	              0xc3	                                     ret	       230	merge.c	FUNCTION_2
0x40002cc	         0xf1f4000	                         nop dword [rax]	       230	merge.c	FUNCTION_2
0x40002d0	          0x8b7f40	            mov edi, dword [rdi + 0x40] 	       151	merge.c	FUNCTION_2	IF_1	IF_2
0x40002d3	          0x83ff01	                              cmp edi, 1	       151	merge.c	FUNCTION_2	IF_1	IF_2
0x40002d6	     0xf84c4000000	                            je 0x40003a0	       151	merge.c	FUNCTION_2	IF_1	IF_2
0x40002dc	        0x448d57ff	                     lea r10d, [rdi - 1]	       151	merge.c	FUNCTION_2	IF_1	IF_2
0x40002e0	          0x4531c9	                            xor r9d, r9d	       151	merge.c	FUNCTION_2	IF_1	IF_2
0x40002e3	            0x31c0	                            xor eax, eax	       151	merge.c	FUNCTION_2	IF_1	IF_2
0x40002e5	        0x4983c201	                              add r10, 1	       151	merge.c	FUNCTION_2	IF_1	IF_2
0x40002e9	     0xf1f80000000	                         nop dword [rax]	       151	merge.c	FUNCTION_2	IF_1	IF_2
0x40002f0	            0x85ff	                           test edi, edi	       165	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2
0x40002f2	            0x7430	                            je 0x4000324	       165	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2
0x40002f4	           0xfb616	                   movzx edx, byte [rsi]	       166	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2	IF_3
0x40002f7	        0x488d4e01	                      lea rcx, [rsi + 1]	       166	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2	IF_3
0x40002fb	          0x4531c0	                            xor r8d, r8d	       166	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2	IF_3
0x40002fe	          0x4989cb	                            mov r11, rcx	       166	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2	IF_3
0x4000301	            0x84d2	                             test dl, dl	       166	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2	IF_3
0x4000303	            0x7416	                            je 0x400031b	       166	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2	IF_3
0x4000305	            0xeb49	                           jmp 0x4000350	       166	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2	IF_3
0x4000307	    0x660f1f840000	                    nop word [rax + rax]	       166	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2	IF_3
0x4000310	        0x4983c301	                              add r11, 1	       166	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2	IF_3
0x4000314	      0x41807bff00	                   cmp byte [r11 - 1], 0	       166	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2	IF_3
0x4000319	            0x7535	                           jne 0x4000350	       166	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2	IF_3
0x400031b	        0x4183c001	                              add r8d, 1	       165	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2
0x400031f	          0x4439c7	                            cmp edi, r8d	       165	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2
0x4000322	            0x75ec	                           jne 0x4000310	       165	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2
0x4000324	          0x4489ca	                            mov edx, r9d	       178	merge.c	FUNCTION_2	IF_1	ELSE_1
0x4000327	          0xc1e211	                           shl edx, 0x11	       178	merge.c	FUNCTION_2	IF_1	ELSE_1
0x400032a	        0x468d340a	                    lea r14d, [rdx + r9]	       178	merge.c	FUNCTION_2	IF_1	ELSE_1
0x400032e	        0x440fafcf	                           imul r9d, edi	       179	merge.c	FUNCTION_2	IF_1	ELSE_1
0x4000332	          0x4c01f0	                            add rax, r14	       178	merge.c	FUNCTION_2	IF_1	ELSE_1
0x4000335	          0x4989c6	                            mov r14, rax	       178	merge.c	FUNCTION_2	IF_1	ELSE_1
0x4000338	        0x49c1ee02	                              shr r14, 2	       178	merge.c	FUNCTION_2	IF_1	ELSE_1
0x400033c	          0x4931c6	                            xor r14, rax	       179	merge.c	FUNCTION_2	IF_1	ELSE_1
0x400033f	        0x418d2c39	                     lea ebp, [r9 + rdi]	       182	merge.c	FUNCTION_2	IF_1
0x4000343	      0xe9d9feffff	                           jmp 0x4000221	       182	merge.c	FUNCTION_2	IF_1
0x4000348	     0xf1f84000000	                   nop dword [rax + rax]	       182	merge.c	FUNCTION_2	IF_1
0x4000350	        0x4e8d0416	                     lea r8, [rsi + r10]	       182	merge.c	FUNCTION_2	IF_1
0x4000354	            0xeb11	                           jmp 0x4000367	       182	merge.c	FUNCTION_2	IF_1
0x4000356	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       182	merge.c	FUNCTION_2	IF_1
0x4000360	           0xfb611	                   movzx edx, byte [rcx]	       182	merge.c	FUNCTION_2	IF_1
0x4000363	        0x4883c101	                              add rcx, 1	       182	merge.c	FUNCTION_2	IF_1
0x4000367	          0x4189d3	                           mov r11d, edx	       173	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_3
0x400036a	          0x4889ce	                            mov rsi, rcx	       172	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_3
0x400036d	        0x41c1e311	                          shl r11d, 0x11	       173	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_3
0x4000371	          0x4401da	                           add edx, r11d	       173	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_3
0x4000374	          0x4801d0	                            add rax, rdx	       173	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_3
0x4000377	          0x4889c2	                            mov rdx, rax	       174	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_3
0x400037a	        0x48c1ea02	                              shr rdx, 2	       174	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_3
0x400037e	          0x4831d0	                            xor rax, rdx	       174	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_3
0x4000381	          0x4c39c1	                             cmp rcx, r8	       170	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_3
0x4000384	            0x75da	                           jne 0x4000360	       170	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_3
0x4000386	        0x4183c101	                              add r9d, 1	       176	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1
0x400038a	      0xe961ffffff	                           jmp 0x40002f0	       177	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1
0x400038f	        0x4883c418	                           add rsp, 0x18	       230	merge.c	FUNCTION_2
0x4000393	            0x31c0	                            xor eax, eax	       226	merge.c	FUNCTION_2	IF_9
0x4000395	              0x5b	                                 pop rbx	       230	merge.c	FUNCTION_2
0x4000396	              0x5d	                                 pop rbp	       230	merge.c	FUNCTION_2
0x4000397	            0x415c	                                 pop r12	       230	merge.c	FUNCTION_2
0x4000399	            0x415d	                                 pop r13	       230	merge.c	FUNCTION_2
0x400039b	            0x415e	                                 pop r14	       230	merge.c	FUNCTION_2
0x400039d	            0x415f	                                 pop r15	       230	merge.c	FUNCTION_2
0x400039f	              0xc3	                                     ret	       230	merge.c	FUNCTION_2
0x40003a0	      0x410fb64500	                   movzx eax, byte [r13]	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003a5	        0x488d7601	                      lea rsi, [rsi + 1]	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003a9	            0x85c0	                           test eax, eax	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003ab	            0x744a	                            je 0x40003f7	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003ad	          0x4531c9	                            xor r9d, r9d	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003b0	            0x31c9	                            xor ecx, ecx	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003b2	    0x660f1f440000	                    nop word [rax + rax]	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003b8	            0x89c2	                            mov edx, eax	       155	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003ba	        0x4183c101	                              add r9d, 1	       157	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003be	        0x4883c601	                              add rsi, 1	       157	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003c2	          0xc1e211	                           shl edx, 0x11	       155	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003c5	             0x1d0	                            add eax, edx	       155	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003c7	          0x4801c8	                            add rax, rcx	       155	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003ca	          0x4889c1	                            mov rcx, rax	       156	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003cd	        0x48c1e902	                              shr rcx, 2	       156	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003d1	          0x4831c1	                            xor rcx, rax	       156	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003d4	         0xfb646ff	               movzx eax, byte [rsi - 1]	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003d8	            0x85c0	                           test eax, eax	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003da	            0x75dc	                           jne 0x40003b8	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003dc	          0x4489c8	                            mov eax, r9d	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003df	          0xc1e011	                           shl eax, 0x11	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003e2	          0x4401c8	                            add eax, r9d	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003e5	          0x4801c8	                            add rax, rcx	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003e8	          0x4989c6	                            mov r14, rax	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003eb	        0x49c1ee02	                              shr r14, 2	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003ef	          0x4931c6	                            xor r14, rax	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003f2	      0xe948ffffff	                           jmp 0x400033f	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003f7	          0x4531f6	                          xor r14d, r14d	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003fa	          0x4531c9	                            xor r9d, r9d	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40003fd	      0xe93dffffff	                           jmp 0x400033f	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
_bfd_write_merged_section	CALL,4:WHILE,0:functions,0:SWITCH,0:DO,0:IF,6:ELSE,1:FOR,0	163
0x4000d10	          0x4885d2	                           test rdx, rdx	       813	merge.c	FUNCTION_13	IF_1
0x4000d13	     0xf8420020000	                            je 0x4000f39	       813	merge.c	FUNCTION_13	IF_1
0x4000d19	        0x4c8b4220	              mov r8, qword [rdx + 0x20]	       816	merge.c	FUNCTION_13	IF_2
0x4000d1d	          0x4d85c0	                             test r8, r8	       816	merge.c	FUNCTION_13	IF_2
0x4000d20	     0xf8416020000	                            je 0x4000f3c	       816	merge.c	FUNCTION_13	IF_2
0x4000d26	            0x4157	                                push r15	       805	merge.c	FUNCTION_13
0x4000d28	            0x4156	                                push r14	       805	merge.c	FUNCTION_13
0x4000d2a	            0x4155	                                push r13	       805	merge.c	FUNCTION_13
0x4000d2c	            0x4154	                                push r12	       805	merge.c	FUNCTION_13
0x4000d2e	              0x55	                                push rbp	       805	merge.c	FUNCTION_13
0x4000d2f	              0x53	                                push rbx	       805	merge.c	FUNCTION_13
0x4000d30	          0x4889d3	                            mov rbx, rdx	       805	merge.c	FUNCTION_13
0x4000d33	          0x4889f5	                            mov rbp, rsi	       805	merge.c	FUNCTION_13
0x4000d36	        0x4883ec28	                           sub rsp, 0x28	       805	merge.c	FUNCTION_13
0x4000d3a	        0x488b4668	            mov rax, qword [rsi + 0x68] 	       820	merge.c	FUNCTION_13	CALL_1
0x4000d3e	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       820	merge.c	FUNCTION_13	CALL_1
0x4000d43	    0x488b90e00000	            mov rdx, qword [rax + 0xe0] 	       820	merge.c	FUNCTION_13	CALL_1
0x4000d4a	      0x48837a18ff	cmp qword [rdx + 0x18], 0xffffffffffffffff	       821	merge.c	FUNCTION_13	IF_3
0x4000d4f	     0xf842b010000	                            je 0x4000e80	       821	merge.c	FUNCTION_13	IF_3
0x4000d55	        0x488b7660	            mov rsi, qword [rsi + 0x60] 	       834	merge.c	FUNCTION_13	ELSE_1	IF_5	CALL_3
0x4000d59	    0x4803b0900000	             add rsi, qword [rax + 0x90]	       834	merge.c	FUNCTION_13	ELSE_1	IF_5	CALL_3
0x4000d60	            0x31d2	                            xor edx, edx	       834	merge.c	FUNCTION_13	ELSE_1	IF_5	CALL_3
0x4000d62	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       834	merge.c	FUNCTION_13	ELSE_1	IF_5	CALL_3
0x4000d67	      0xe800000000	                          call 0x4000d6c	       834	merge.c	FUNCTION_13	ELSE_1	IF_5	CALL_3
0x4000d6c	            0x85c0	                           test eax, eax	       834	merge.c	FUNCTION_13	ELSE_1	IF_5	CALL_3
0x4000d6e	     0xf85f3000000	                           jne 0x4000e67	       834	merge.c	FUNCTION_13	ELSE_1	IF_5	CALL_3
0x4000d74	        0x4c8b7b20	            mov r15, qword [rbx + 0x20] 	       834	merge.c	FUNCTION_13	ELSE_1	IF_5	CALL_3
0x4000d78	          0x4531e4	                          xor r12d, r12d	       832	merge.c	FUNCTION_13	ELSE_1
0x4000d7b	        0x4d8b6f28	            mov r13, qword [r15 + 0x28] 	       290	merge.c	ELSE_1	FUNCTION_5
0x4000d7f	        0x488b6d60	            mov rbp, qword [rbp + 0x60] 	       838	merge.c	FUNCTION_13	IF_6	CALL_4
0x4000d83	    0x48c704241000	                   mov qword [rsp], 0x10	       299	merge.c	ELSE_1	FUNCTION_5
0x4000d8b	        0x498b4508	                mov rax, qword [r13 + 8]	       291	merge.c	ELSE_1	FUNCTION_5
0x4000d8f	      0x4889442418	             mov qword [rsp + 0x18], rax	       291	merge.c	ELSE_1	FUNCTION_5
0x4000d94	        0x488b4068	            mov rax, qword [rax + 0x68] 	       294	merge.c	ELSE_1	FUNCTION_5
0x4000d98	          0x8b4870	            mov ecx, dword [rax + 0x70] 	       294	merge.c	ELSE_1	FUNCTION_5
0x4000d9b	            0x85c9	                           test ecx, ecx	       299	merge.c	ELSE_1	FUNCTION_5
0x4000d9d	            0x740d	                            je 0x4000dac	       299	merge.c	ELSE_1	FUNCTION_5
0x4000d9f	    0x41be01000000	                             mov r14d, 1	       299	merge.c	ELSE_1	FUNCTION_5
0x4000da5	          0x49d3e6	                             shl r14, cl	       299	merge.c	ELSE_1	FUNCTION_5
0x4000da8	        0x4c893424	                    mov qword [rsp], r14	       299	merge.c	ELSE_1	FUNCTION_5
0x4000dac	        0x488b3c24	                    mov rdi, qword [rsp]	       301	merge.c	ELSE_1	FUNCTION_5	CALL_1
0x4000db0	      0xe800000000	                          call 0x4000db5	       301	merge.c	ELSE_1	FUNCTION_5	CALL_1
0x4000db5	          0x4885c0	                           test rax, rax	       302	merge.c	ELSE_1	FUNCTION_5	IF_1
0x4000db8	      0x4889442408	                mov qword [rsp + 8], rax	       301	merge.c	ELSE_1	FUNCTION_5	CALL_1
0x4000dbd	     0xf84a4000000	                            je 0x4000e67	       302	merge.c	ELSE_1	FUNCTION_5	IF_1
0x4000dc3	            0x31db	                            xor ebx, ebx	       302	merge.c	ELSE_1	FUNCTION_5	IF_1
0x4000dc5	            0xeb2b	                           jmp 0x4000df2	       302	merge.c	ELSE_1	FUNCTION_5	IF_1
0x4000dc7	    0x660f1f840000	                    nop word [rax + rax]	       302	merge.c	ELSE_1	FUNCTION_5	IF_1
0x4000dd0	        0x498d3c2c	                    lea rdi, [r12 + rbp]	        53	string3.h	FUNCTION_16	CALL_3
0x4000dd4	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_16	CALL_3
0x4000dd7	          0x4889c6	                            mov rsi, rax	        53	string3.h	FUNCTION_16	CALL_3
0x4000dda	          0x4c01f5	                            add rbp, r14	       330	merge.c	FUNCTION_5	FOR_1	ELSE_1	IF_5
0x4000ddd	      0xe800000000	                          call 0x4000de2	        53	string3.h	FUNCTION_16	CALL_3
0x4000de2	        0x4d8b7f30	            mov r15, qword [r15 + 0x30] 	       305	merge.c	ELSE_1	FUNCTION_5	FOR_1
0x4000de6	          0x4c01f3	                            add rbx, r14	       335	merge.c	FUNCTION_5	FOR_1	ELSE_1
0x4000de9	          0x4d85ff	                           test r15, r15	       305	merge.c	ELSE_1	FUNCTION_5	FOR_1
0x4000dec	     0xf84e6000000	                            je 0x4000ed8	       305	merge.c	ELSE_1	FUNCTION_5	FOR_1
0x4000df2	        0x4d3b6f28	            cmp r13, qword [r15 + 0x28] 	       305	merge.c	ELSE_1	FUNCTION_5	FOR_1
0x4000df6	     0xf85dc000000	                           jne 0x4000ed8	       305	merge.c	ELSE_1	FUNCTION_5	FOR_1
0x4000dfc	        0x418b471c	            mov eax, dword [r15 + 0x1c] 	       310	merge.c	ELSE_1	FUNCTION_5	FOR_1
0x4000e00	          0x8d48ff	                      lea ecx, [rax - 1]	       310	merge.c	ELSE_1	FUNCTION_5	FOR_1
0x4000e03	          0x4889d8	                            mov rax, rbx	       310	merge.c	ELSE_1	FUNCTION_5	FOR_1
0x4000e06	          0x48f7d8	                                 neg rax	       310	merge.c	ELSE_1	FUNCTION_5	FOR_1
0x4000e09	          0x4821c1	                            and rcx, rax	       311	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2
0x4000e0c	          0x4989ce	                            mov r14, rcx	       311	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2
0x4000e0f	            0x742a	                            je 0x4000e3b	       311	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2
0x4000e11	        0x48390c24	                    cmp qword [rsp], rcx	       313	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2	CALL_2
0x4000e15	     0xf8285000000	                            jb 0x4000ea0	       313	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2	CALL_2
0x4000e1b	          0x4d85e4	                           test r12, r12	       314	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2	IF_3
0x4000e1e	     0xf8494000000	                            je 0x4000eb8	       314	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2	IF_3
0x4000e24	      0x488b742408	                mov rsi, qword [rsp + 8]	        53	string3.h	FUNCTION_16	CALL_3
0x4000e29	        0x498d3c2c	                    lea rdi, [r12 + rbp]	        53	string3.h	FUNCTION_16	CALL_3
0x4000e2d	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_16	CALL_3
0x4000e30	          0x4c01f5	                            add rbp, r14	       317	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2	IF_3
0x4000e33	      0xe800000000	                          call 0x4000e38	        53	string3.h	FUNCTION_16	CALL_3
0x4000e38	          0x4c01f3	                            add rbx, r14	       321	merge.c	FUNCTION_5	FOR_1	IF_2	ELSE_1
0x4000e3b	          0x4d85e4	                           test r12, r12	       327	merge.c	FUNCTION_5	FOR_1	ELSE_1	IF_5
0x4000e3e	        0x498b4708	                mov rax, qword [r15 + 8]	       324	merge.c	FUNCTION_5	FOR_1	ELSE_1
0x4000e42	        0x458b7718	           mov r14d, dword [r15 + 0x18] 	       325	merge.c	FUNCTION_5	FOR_1	ELSE_1
0x4000e46	            0x7588	                           jne 0x4000dd0	       327	merge.c	FUNCTION_5	FOR_1	ELSE_1	IF_5
0x4000e48	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       332	merge.c	FUNCTION_5	FOR_1	ELSE_1	ELSE_2	IF_6	CALL_6
0x4000e4d	          0x4c89f6	                            mov rsi, r14	       332	merge.c	FUNCTION_5	FOR_1	ELSE_1	ELSE_2	IF_6	CALL_6
0x4000e50	          0x4889c7	                            mov rdi, rax	       332	merge.c	FUNCTION_5	FOR_1	ELSE_1	ELSE_2	IF_6	CALL_6
0x4000e53	      0xe800000000	                          call 0x4000e58	       332	merge.c	FUNCTION_5	FOR_1	ELSE_1	ELSE_2	IF_6	CALL_6
0x4000e58	          0x4939c6	                            cmp r14, rax	       332	merge.c	FUNCTION_5	FOR_1	ELSE_1	ELSE_2	IF_6	CALL_6
0x4000e5b	            0x7485	                            je 0x4000de2	       332	merge.c	FUNCTION_5	FOR_1	ELSE_1	ELSE_2	IF_6	CALL_6
0x4000e5d	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       353	merge.c	FUNCTION_5	ELSE_1	CALL_11
0x4000e62	      0xe800000000	                          call 0x4000e67	       353	merge.c	FUNCTION_5	ELSE_1	CALL_11
0x4000e67	        0x4883c428	                           add rsp, 0x28	       843	merge.c	FUNCTION_13
0x4000e6b	            0x31c0	                            xor eax, eax	       840	merge.c	FUNCTION_13	IF_6
0x4000e6d	              0x5b	                                 pop rbx	       843	merge.c	FUNCTION_13
0x4000e6e	              0x5d	                                 pop rbp	       843	merge.c	FUNCTION_13
0x4000e6f	            0x415c	                                 pop r12	       843	merge.c	FUNCTION_13
0x4000e71	            0x415d	                                 pop r13	       843	merge.c	FUNCTION_13
0x4000e73	            0x415e	                                 pop r14	       843	merge.c	FUNCTION_13
0x4000e75	            0x415f	                                 pop r15	       843	merge.c	FUNCTION_13
0x4000e77	              0xc3	                                     ret	       843	merge.c	FUNCTION_13
0x4000e78	     0xf1f84000000	                   nop dword [rax + rax]	       843	merge.c	FUNCTION_13
0x4000e80	        0xf6402308	               test byte [rax + 0x23], 8	       827	merge.c	FUNCTION_13	IF_3	IF_4
0x4000e84	        0x4c8b6248	            mov r12, qword [rdx + 0x48] 	       825	merge.c	FUNCTION_13	IF_3
0x4000e88	     0xf84d1000000	                            je 0x4000f5f	       827	merge.c	FUNCTION_13	IF_3	IF_4
0x4000e8e	          0x4d85e4	                           test r12, r12	       827	merge.c	FUNCTION_13	IF_3	IF_4
0x4000e91	     0xf84c8000000	                            je 0x4000f5f	       827	merge.c	FUNCTION_13	IF_3	IF_4
0x4000e97	          0x4d89c7	                             mov r15, r8	       827	merge.c	FUNCTION_13	IF_3	IF_4
0x4000e9a	      0xe9dcfeffff	                           jmp 0x4000d7b	       827	merge.c	FUNCTION_13	IF_3	IF_4
0x4000e9f	              0x90	                                     nop	       827	merge.c	FUNCTION_13	IF_3	IF_4
0x4000ea0	      0xbe39010000	                          mov esi, 0x139	       313	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2	CALL_2
0x4000ea5	      0xbf00000000	                              mov edi, 0	       313	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2	CALL_2
0x4000eaa	      0xe800000000	                          call 0x4000eaf	       313	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2	CALL_2
0x4000eaf	          0x4d85e4	                           test r12, r12	       314	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2	IF_3
0x4000eb2	     0xf856cffffff	                           jne 0x4000e24	       314	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2	IF_3
0x4000eb8	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       319	merge.c	FUNCTION_5	FOR_1	IF_2	IF_4	CALL_4
0x4000ebd	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       319	merge.c	FUNCTION_5	FOR_1	IF_2	IF_4	CALL_4
0x4000ec2	          0x4c89f6	                            mov rsi, r14	       319	merge.c	FUNCTION_5	FOR_1	IF_2	IF_4	CALL_4
0x4000ec5	      0xe800000000	                          call 0x4000eca	       319	merge.c	FUNCTION_5	FOR_1	IF_2	IF_4	CALL_4
0x4000eca	          0x4939c6	                            cmp r14, rax	       319	merge.c	FUNCTION_5	FOR_1	IF_2	IF_4	CALL_4
0x4000ecd	     0xf8465ffffff	                            je 0x4000e38	       319	merge.c	FUNCTION_5	FOR_1	IF_2	IF_4	CALL_4
0x4000ed3	            0xeb88	                           jmp 0x4000e5d	       319	merge.c	FUNCTION_5	FOR_1	IF_2	IF_4	CALL_4
0x4000ed5	           0xf1f00	                         nop dword [rax]	       319	merge.c	FUNCTION_5	FOR_1	IF_2	IF_4	CALL_4
0x4000ed8	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       339	merge.c	FUNCTION_5	ELSE_1
0x4000edd	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       339	merge.c	FUNCTION_5	ELSE_1
0x4000ee1	          0x4829da	                            sub rdx, rbx	       340	merge.c	FUNCTION_5	ELSE_1	IF_7
0x4000ee4	          0x4889d3	                            mov rbx, rdx	       340	merge.c	FUNCTION_5	ELSE_1	IF_7
0x4000ee7	            0x741c	                            je 0x4000f05	       340	merge.c	FUNCTION_5	ELSE_1	IF_7
0x4000ee9	        0x48391424	                    cmp qword [rsp], rdx	       342	merge.c	FUNCTION_5	ELSE_1	IF_7	CALL_7
0x4000eed	            0x7239	                            jb 0x4000f28	       342	merge.c	FUNCTION_5	ELSE_1	IF_7	CALL_7
0x4000eef	          0x4d85e4	                           test r12, r12	       343	merge.c	FUNCTION_5	ELSE_1	IF_7	IF_8
0x4000ef2	            0x744e	                            je 0x4000f42	       343	merge.c	FUNCTION_5	ELSE_1	IF_7	IF_8
0x4000ef4	      0x488b742408	                mov rsi, qword [rsp + 8]	        53	string3.h	FUNCTION_16	CALL_3
0x4000ef9	        0x498d3c2c	                    lea rdi, [r12 + rbp]	        53	string3.h	FUNCTION_16	CALL_3
0x4000efd	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_16	CALL_3
0x4000f00	      0xe800000000	                          call 0x4000f05	        53	string3.h	FUNCTION_16	CALL_3
0x4000f05	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       349	merge.c	FUNCTION_5	ELSE_1	CALL_10
0x4000f0a	      0xe800000000	                          call 0x4000f0f	       349	merge.c	FUNCTION_5	ELSE_1	CALL_10
0x4000f0f	        0x4883c428	                           add rsp, 0x28	       843	merge.c	FUNCTION_13
0x4000f13	      0xb801000000	                              mov eax, 1	       842	merge.c	FUNCTION_13
0x4000f18	              0x5b	                                 pop rbx	       843	merge.c	FUNCTION_13
0x4000f19	              0x5d	                                 pop rbp	       843	merge.c	FUNCTION_13
0x4000f1a	            0x415c	                                 pop r12	       843	merge.c	FUNCTION_13
0x4000f1c	            0x415d	                                 pop r13	       843	merge.c	FUNCTION_13
0x4000f1e	            0x415e	                                 pop r14	       843	merge.c	FUNCTION_13
0x4000f20	            0x415f	                                 pop r15	       843	merge.c	FUNCTION_13
0x4000f22	              0xc3	                                     ret	       843	merge.c	FUNCTION_13
0x4000f23	       0xf1f440000	                   nop dword [rax + rax]	       843	merge.c	FUNCTION_13
0x4000f28	      0xbe56010000	                          mov esi, 0x156	       342	merge.c	FUNCTION_5	ELSE_1	IF_7	CALL_7
0x4000f2d	      0xbf00000000	                              mov edi, 0	       342	merge.c	FUNCTION_5	ELSE_1	IF_7	CALL_7
0x4000f32	      0xe800000000	                          call 0x4000f37	       342	merge.c	FUNCTION_5	ELSE_1	IF_7	CALL_7
0x4000f37	            0xebb6	                           jmp 0x4000eef	       342	merge.c	FUNCTION_5	ELSE_1	IF_7	CALL_7
0x4000f39	            0x31c0	                            xor eax, eax	       840	merge.c	FUNCTION_13	IF_6
0x4000f3b	              0xc3	                                     ret	       843	merge.c	FUNCTION_13
0x4000f3c	      0xb801000000	                              mov eax, 1	       817	merge.c	FUNCTION_13	IF_2
0x4000f41	              0xc3	                                     ret	       817	merge.c	FUNCTION_13	IF_2
0x4000f42	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       345	merge.c	FUNCTION_5	ELSE_1	IF_7	ELSE_3	IF_9	CALL_9
0x4000f47	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       345	merge.c	FUNCTION_5	ELSE_1	IF_7	ELSE_3	IF_9	CALL_9
0x4000f4c	          0x4889de	                            mov rsi, rbx	       345	merge.c	FUNCTION_5	ELSE_1	IF_7	ELSE_3	IF_9	CALL_9
0x4000f4f	      0xe800000000	                          call 0x4000f54	       345	merge.c	FUNCTION_5	ELSE_1	IF_7	ELSE_3	IF_9	CALL_9
0x4000f54	          0x4839c3	                            cmp rbx, rax	       345	merge.c	FUNCTION_5	ELSE_1	IF_7	ELSE_3	IF_9	CALL_9
0x4000f57	     0xf8500ffffff	                           jne 0x4000e5d	       345	merge.c	FUNCTION_5	ELSE_1	IF_7	ELSE_3	IF_9	CALL_9
0x4000f5d	            0xeba6	                           jmp 0x4000f05	       345	merge.c	FUNCTION_5	ELSE_1	IF_7	ELSE_3	IF_9	CALL_9
0x4000f5f	      0xba00000000	                              mov edx, 0	       828	merge.c	FUNCTION_13	IF_3	CALL_2
0x4000f64	      0xbe3c030000	                          mov esi, 0x33c	       828	merge.c	FUNCTION_13	IF_3	CALL_2
0x4000f69	      0xbf00000000	                              mov edi, 0	       828	merge.c	FUNCTION_13	IF_3	CALL_2
0x4000f6e	      0xe800000000	                          call 0x4000f73	       828	merge.c	FUNCTION_13	IF_3	CALL_2
_bfd_merge_sections	CALL,2:WHILE,0:functions,0:SWITCH,0:DO,0:IF,11:ELSE,2:FOR,4	405
0x4000770	            0x4157	                                push r15	       728	merge.c	FUNCTION_12
0x4000772	            0x4156	                                push r14	       728	merge.c	FUNCTION_12
0x4000774	          0x4989d7	                            mov r15, rdx	       728	merge.c	FUNCTION_12
0x4000777	            0x4155	                                push r13	       728	merge.c	FUNCTION_12
0x4000779	            0x4154	                                push r12	       728	merge.c	FUNCTION_12
0x400077b	              0x55	                                push rbp	       728	merge.c	FUNCTION_12
0x400077c	              0x53	                                push rbx	       728	merge.c	FUNCTION_12
0x400077d	        0x4883ec38	                           sub rsp, 0x38	       728	merge.c	FUNCTION_12
0x4000781	          0x4885d2	                           test rdx, rdx	       731	merge.c	FUNCTION_12	FOR_1
0x4000784	      0x48897c2428	             mov qword [rsp + 0x28], rdi	       728	merge.c	FUNCTION_12
0x4000789	      0x48894c2420	             mov qword [rsp + 0x20], rcx	       728	merge.c	FUNCTION_12
0x400078e	     0xf8422030000	                            je 0x4000ab6	       731	merge.c	FUNCTION_12	FOR_1
0x4000794	        0x498b4708	                mov rax, qword [r15 + 8]	       735	merge.c	FUNCTION_12	FOR_1	IF_1
0x4000798	          0x4885c0	                           test rax, rax	       735	merge.c	FUNCTION_12	FOR_1	IF_1
0x400079b	     0xf8409030000	                            je 0x4000aaa	       735	merge.c	FUNCTION_12	FOR_1	IF_1
0x40007a1	          0x4c8b20	                    mov r12, qword [rax]	       740	merge.c	FUNCTION_12	FOR_1
0x40007a4	          0x4d85e4	                           test r12, r12	       744	merge.c	FUNCTION_12	FOR_1	FOR_2
0x40007a7	        0x4d896708	                mov qword [r15 + 8], r12	       740	merge.c	FUNCTION_12	FOR_1
0x40007ab	    0x48c700000000	                      mov qword [rax], 0	       741	merge.c	FUNCTION_12	FOR_1
0x40007b2	            0x753b	                           jne 0x40007ef	       744	merge.c	FUNCTION_12	FOR_1	FOR_2
0x40007b4	      0xe9c6010000	                           jmp 0x400097f	       744	merge.c	FUNCTION_12	FOR_1	FOR_2
0x40007b9	     0xf1f80000000	                         nop dword [rax]	       744	merge.c	FUNCTION_12	FOR_1	FOR_2
0x40007c0	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       747	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2
0x40007c5	    0x48c700000000	                      mov qword [rax], 0	       747	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2
0x40007cc	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       748	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2	IF_3
0x40007d1	          0x4885c0	                           test rax, rax	       748	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2	IF_3
0x40007d4	            0x740c	                            je 0x40007e2	       748	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2	IF_3
0x40007d6	      0x498b742408	                mov rsi, qword [r12 + 8]	       749	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2	IF_3
0x40007db	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       749	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2	IF_3
0x40007e0	            0xffd0	                                call rax	       749	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2	IF_3
0x40007e2	        0x4d8b2424	                    mov r12, qword [r12]	       744	merge.c	FUNCTION_12	FOR_1	FOR_2
0x40007e6	          0x4d85e4	                           test r12, r12	       744	merge.c	FUNCTION_12	FOR_1	FOR_2
0x40007e9	     0xf8490010000	                            je 0x400097f	       744	merge.c	FUNCTION_12	FOR_1	FOR_2
0x40007ef	      0x498b442408	                mov rax, qword [r12 + 8]	       745	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2
0x40007f4	      0x4889442408	                mov qword [rsp + 8], rax	       745	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2
0x40007f9	          0x8b4020	            mov eax, dword [rax + 0x20] 	       745	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2
0x40007fc	          0xf6c480	                           test ah, 0x80	       745	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2
0x40007ff	            0x75bf	                           jne 0x40007c0	       745	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2
0x4000801	      0x488b742408	                mov rsi, qword [rsp + 8]	       477	merge.c	FUNCTION_7
0x4000806	      0x498d5c2428	                   lea rbx, [r12 + 0x28]	       477	merge.c	FUNCTION_7
0x400080b	          0x4989de	                            mov r14, rbx	       477	merge.c	FUNCTION_7
0x400080e	        0x4c037638	             add r14, qword [rsi + 0x38]	       477	merge.c	FUNCTION_7
0x4000812	      0xa900000001	                     test eax, 0x1000000	       480	merge.c	FUNCTION_7	IF_1
0x4000817	            0x756b	                           jne 0x4000884	       480	merge.c	FUNCTION_7	IF_1
0x4000819	          0x4c39f3	                            cmp rbx, r14	       532	merge.c	FUNCTION_7	ELSE_2	FOR_3
0x400081c	      0x488b6c2408	                mov rbp, qword [rsp + 8]	       532	merge.c	FUNCTION_7	ELSE_2	FOR_3
0x4000821	            0x7213	                            jb 0x4000836	       532	merge.c	FUNCTION_7	ELSE_2	FOR_3
0x4000823	            0xebbd	                           jmp 0x40007e2	       532	merge.c	FUNCTION_7	ELSE_2	FOR_3
0x4000825	           0xf1f00	                         nop dword [rax]	       532	merge.c	FUNCTION_7	ELSE_2	FOR_3
0x4000828	    0x8b85c4000000	            mov eax, dword [rbp + 0xc4] 	       532	merge.c	FUNCTION_7	ELSE_2	FOR_3
0x400082e	          0x4801c3	                            add rbx, rax	       532	merge.c	FUNCTION_7	ELSE_2	FOR_3
0x4000831	          0x4939de	                            cmp r14, rbx	       532	merge.c	FUNCTION_7	ELSE_2	FOR_3
0x4000834	            0x76ac	                           jbe 0x40007e2	       532	merge.c	FUNCTION_7	ELSE_2	FOR_3
0x4000836	        0x498b7f10	            mov rdi, qword [r15 + 0x10] 	       534	merge.c	FUNCTION_7	ELSE_2	FOR_3	CALL_4
0x400083a	          0x4c89e1	                            mov rcx, r12	       534	merge.c	FUNCTION_7	ELSE_2	FOR_3	CALL_4
0x400083d	      0xba01000000	                              mov edx, 1	       534	merge.c	FUNCTION_7	ELSE_2	FOR_3	CALL_4
0x4000842	          0x4889de	                            mov rsi, rbx	       534	merge.c	FUNCTION_7	ELSE_2	FOR_3	CALL_4
0x4000845	      0xe8c6fbffff	                  call sym.sec_merge_add	       534	merge.c	FUNCTION_7	ELSE_2	FOR_3	CALL_4
0x400084a	          0x4885c0	                           test rax, rax	       535	merge.c	FUNCTION_7	ELSE_2	FOR_3	IF_11
0x400084d	            0x75d9	                           jne 0x4000828	       535	merge.c	FUNCTION_7	ELSE_2	FOR_3	IF_11
0x400084f	        0x498b4708	                mov rax, qword [r15 + 8]	       543	merge.c	FUNCTION_7	FOR_4
0x4000853	          0x4885c0	                           test rax, rax	       543	merge.c	FUNCTION_7	FOR_4
0x4000856	            0x741b	                            je 0x4000873	       543	merge.c	FUNCTION_7	FOR_4
0x4000858	     0xf1f84000000	                   nop dword [rax + rax]	       543	merge.c	FUNCTION_7	FOR_4
0x4000860	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       544	merge.c	FUNCTION_7	FOR_4
0x4000864	    0x48c702000000	                      mov qword [rdx], 0	       544	merge.c	FUNCTION_7	FOR_4
0x400086b	          0x488b00	                    mov rax, qword [rax]	       543	merge.c	FUNCTION_7	FOR_4
0x400086e	          0x4885c0	                           test rax, rax	       543	merge.c	FUNCTION_7	FOR_4
0x4000871	            0x75ed	                           jne 0x4000860	       543	merge.c	FUNCTION_7	FOR_4
0x4000873	        0x4883c438	                           add rsp, 0x38	       799	merge.c	FUNCTION_12
0x4000877	            0x31c0	                            xor eax, eax	       752	merge.c	FUNCTION_12	FOR_1	ELSE_1	IF_4
0x4000879	              0x5b	                                 pop rbx	       799	merge.c	FUNCTION_12
0x400087a	              0x5d	                                 pop rbp	       799	merge.c	FUNCTION_12
0x400087b	            0x415c	                                 pop r12	       799	merge.c	FUNCTION_12
0x400087d	            0x415d	                                 pop r13	       799	merge.c	FUNCTION_12
0x400087f	            0x415e	                                 pop r14	       799	merge.c	FUNCTION_12
0x4000881	            0x415f	                                 pop r15	       799	merge.c	FUNCTION_12
0x4000883	              0xc3	                                     ret	       799	merge.c	FUNCTION_12
0x4000884	          0x4c39f3	                            cmp rbx, r14	       482	merge.c	FUNCTION_7	IF_1	FOR_1
0x4000887	     0xf8355ffffff	                           jae 0x40007e2	       482	merge.c	FUNCTION_7	IF_1	FOR_1
0x400088d	      0x488b442408	                mov rax, qword [rsp + 8]	       479	merge.c	FUNCTION_7
0x4000892	        0x4c892424	                    mov qword [rsp], r12	       500	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5	CALL_2
0x4000896	          0x4889dd	                            mov rbp, rbx	       500	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5	CALL_2
0x4000899	          0x4d89fc	                            mov r12, r15	       500	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5	CALL_2
0x400089c	          0x4531ed	                          xor r13d, r13d	       479	merge.c	FUNCTION_7
0x400089f	          0x4d89f7	                            mov r15, r14	       500	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5	CALL_2
0x40008a2	          0x8b4870	            mov ecx, dword [rax + 0x70] 	       479	merge.c	FUNCTION_7
0x40008a5	      0xb801000000	                              mov eax, 1	       479	merge.c	FUNCTION_7
0x40008aa	          0x48d3e0	                             shl rax, cl	       479	merge.c	FUNCTION_7
0x40008ad	        0x4c8d40ff	                       lea r8, [rax - 1]	       479	merge.c	FUNCTION_7
0x40008b1	      0x4889442418	             mov qword [rsp + 0x18], rax	       479	merge.c	FUNCTION_7
0x40008b6	        0x418d4001	                       lea eax, [r8 + 1]	       500	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5	CALL_2
0x40008ba	          0x4d89c6	                             mov r14, r8	       500	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5	CALL_2
0x40008bd	        0x89442414	             mov dword [rsp + 0x14], eax	       500	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5	CALL_2
0x40008c1	          0x4889d8	                            mov rax, rbx	       484	merge.c	FUNCTION_7	IF_1	FOR_1
0x40008c4	          0x4829e8	                            sub rax, rbp	       484	merge.c	FUNCTION_7	IF_1	FOR_1
0x40008c7	        0x488d50ff	                      lea rdx, [rax - 1]	       485	merge.c	FUNCTION_7	IF_1	FOR_1
0x40008cb	          0x4831d0	                            xor rax, rdx	       485	merge.c	FUNCTION_7	IF_1	FOR_1
0x40008ce	        0x488d5001	                      lea rdx, [rax + 1]	       485	merge.c	FUNCTION_7	IF_1	FOR_1
0x40008d2	          0x48d1ea	                              shr rdx, 1	       486	merge.c	FUNCTION_7	IF_1	FOR_1	IF_2
0x40008d5	     0xf8449010000	                            je 0x4000a24	       486	merge.c	FUNCTION_7	IF_1	FOR_1	IF_2
0x40008db	          0x4939d6	                            cmp r14, rdx	       486	merge.c	FUNCTION_7	IF_1	FOR_1	IF_2
0x40008de	     0xf8240010000	                            jb 0x4000a24	       486	merge.c	FUNCTION_7	IF_1	FOR_1	IF_2
0x40008e4	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	       488	merge.c	FUNCTION_7	IF_1	FOR_1	CALL_1
0x40008e9	        0x488b0c24	                    mov rcx, qword [rsp]	       488	merge.c	FUNCTION_7	IF_1	FOR_1	CALL_1
0x40008ed	          0x4889de	                            mov rsi, rbx	       488	merge.c	FUNCTION_7	IF_1	FOR_1	CALL_1
0x40008f0	      0xe81bfbffff	                  call sym.sec_merge_add	       488	merge.c	FUNCTION_7	IF_1	FOR_1	CALL_1
0x40008f5	          0x4885c0	                           test rax, rax	       490	merge.c	FUNCTION_7	IF_1	FOR_1	IF_3
0x40008f8	     0xf84a4010000	                            je 0x4000aa2	       490	merge.c	FUNCTION_7	IF_1	FOR_1	IF_3
0x40008fe	          0x8b4018	            mov eax, dword [rax + 0x18] 	       492	merge.c	FUNCTION_7	IF_1	FOR_1
0x4000901	          0x4801c3	                            add rbx, rax	       492	merge.c	FUNCTION_7	IF_1	FOR_1
0x4000904	      0x488b442408	                mov rax, qword [rsp + 8]	       493	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4
0x4000909	    0x8b88c4000000	            mov ecx, dword [rax + 0xc4] 	       493	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4
0x400090f	          0x83f901	                              cmp ecx, 1	       493	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4
0x4000912	     0xf8430010000	                            je 0x4000a48	       493	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4
0x4000918	          0x4939df	                            cmp r15, rbx	       510	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2
0x400091b	            0x764e	                           jbe 0x400096b	       510	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2
0x400091d	           0xf1f00	                         nop dword [rax]	       510	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2
0x4000920	            0x85c9	                           test ecx, ecx	       512	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2
0x4000922	            0x7429	                            je 0x400094d	       512	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2
0x4000924	          0x803b00	                       cmp byte [rbx], 0	       513	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2	IF_7
0x4000927	     0xf8503010000	                           jne 0x4000a30	       513	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2	IF_7
0x400092d	        0x488d5301	                      lea rdx, [rbx + 1]	       513	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2	IF_7
0x4000931	            0x31c0	                            xor eax, eax	       513	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2	IF_7
0x4000933	            0xeb11	                           jmp 0x4000946	       513	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2	IF_7
0x4000935	           0xf1f00	                         nop dword [rax]	       513	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2	IF_7
0x4000938	        0x4883c201	                              add rdx, 1	       513	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2	IF_7
0x400093c	        0x807aff00	                   cmp byte [rdx - 1], 0	       513	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2	IF_7
0x4000940	     0xf85ea000000	                           jne 0x4000a30	       513	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2	IF_7
0x4000946	          0x83c001	                              add eax, 1	       512	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2
0x4000949	            0x39c8	                            cmp eax, ecx	       512	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2
0x400094b	            0x75eb	                           jne 0x4000938	       512	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2
0x400094d	          0x4585ed	                         test r13d, r13d	       517	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9
0x4000950	            0x750f	                           jne 0x4000961	       517	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9
0x4000952	          0x4889d8	                            mov rax, rbx	       517	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9
0x4000955	          0x4829e8	                            sub rax, rbp	       517	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9
0x4000958	          0x4c85f0	                           test rax, r14	       517	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9
0x400095b	     0xf848f000000	                            je 0x40009f0	       517	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9
0x4000961	            0x89c8	                            mov eax, ecx	       525	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2
0x4000963	          0x4801c3	                            add rbx, rax	       525	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2
0x4000966	          0x4939df	                            cmp r15, rbx	       510	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2
0x4000969	            0x77b5	                            ja 0x4000920	       510	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2
0x400096b	          0x4d89e7	                            mov r15, r12	       510	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2
0x400096e	        0x4c8b2424	                    mov r12, qword [rsp]	       510	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2
0x4000972	        0x4d8b2424	                    mov r12, qword [r12]	       744	merge.c	FUNCTION_12	FOR_1	FOR_2
0x4000976	          0x4d85e4	                           test r12, r12	       744	merge.c	FUNCTION_12	FOR_1	FOR_2
0x4000979	     0xf8570feffff	                           jne 0x40007ef	       744	merge.c	FUNCTION_12	FOR_1	FOR_2
0x400097f	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       757	merge.c	FUNCTION_12	FOR_1	IF_6
0x4000983	        0x488b4a30	            mov rcx, qword [rdx + 0x30] 	       757	merge.c	FUNCTION_12	FOR_1	IF_6
0x4000987	          0x4885c9	                           test rcx, rcx	       757	merge.c	FUNCTION_12	FOR_1	IF_6
0x400098a	     0xf841a010000	                            je 0x4000aaa	       757	merge.c	FUNCTION_12	FOR_1	IF_6
0x4000990	          0x8b7244	            mov esi, dword [rdx + 0x44] 	       760	merge.c	FUNCTION_12	FOR_1	IF_7
0x4000993	            0x31c0	                            xor eax, eax	       760	merge.c	FUNCTION_12	FOR_1	IF_7
0x4000995	            0x31ff	                            xor edi, edi	       760	merge.c	FUNCTION_12	FOR_1	IF_7
0x4000997	            0x85f6	                           test esi, esi	       760	merge.c	FUNCTION_12	FOR_1	IF_7
0x4000999	            0x742d	                            je 0x40009c8	       760	merge.c	FUNCTION_12	FOR_1	IF_7
0x400099b	      0xe95c010000	                           jmp 0x4000afc	       760	merge.c	FUNCTION_12	FOR_1	IF_7
0x40009a0	          0x8b511c	            mov edx, dword [rcx + 0x1c] 	       782	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3
0x40009a3	          0x4889f7	                            mov rdi, rsi	       782	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3
0x40009a6	      0x488d4410ff	                lea rax, [rax + rdx - 1]	       782	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3
0x40009ab	          0x48f7da	                                 neg rdx	       782	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3
0x40009ae	          0x4821d0	                            and rax, rdx	       782	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3
0x40009b1	          0x8b5118	            mov edx, dword [rcx + 0x18] 	       785	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3
0x40009b4	        0x48894120	             mov qword [rcx + 0x20], rax	       784	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3
0x40009b8	        0x488b4930	            mov rcx, qword [rcx + 0x30] 	       773	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3
0x40009bc	          0x4801d0	                            add rax, rdx	       785	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3
0x40009bf	          0x4885c9	                           test rcx, rcx	       773	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3
0x40009c2	     0xf8402010000	                            je 0x4000aca	       773	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3
0x40009c8	        0x488b7128	            mov rsi, qword [rcx + 0x28] 	       775	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3	IF_9
0x40009cc	      0x48837e2000	               cmp qword [rsi + 0x20], 0	       775	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3	IF_9
0x40009d1	            0x75cd	                           jne 0x40009a0	       775	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3	IF_9
0x40009d3	          0x4885ff	                           test rdi, rdi	       777	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3	IF_9	IF_10
0x40009d6	            0x7408	                            je 0x40009e0	       777	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3	IF_9	IF_10
0x40009d8	        0x488b5708	                mov rdx, qword [rdi + 8]	       778	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3	IF_9	IF_10
0x40009dc	        0x48894238	             mov qword [rdx + 0x38], rax	       778	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3	IF_9	IF_10
0x40009e0	        0x48894e20	             mov qword [rsi + 0x20], rcx	       779	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3	IF_9
0x40009e4	            0x31c0	                            xor eax, eax	       780	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3	IF_9
0x40009e6	            0xebb8	                           jmp 0x40009a0	       780	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3	IF_9
0x40009e8	     0xf1f84000000	                   nop dword [rax + rax]	       780	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3	IF_9
0x40009f0	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	       520	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9	CALL_3
0x40009f5	        0x488b0c24	                    mov rcx, qword [rsp]	       520	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9	CALL_3
0x40009f9	          0x4889de	                            mov rsi, rbx	       520	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9	CALL_3
0x40009fc	        0x8b542414	            mov edx, dword [rsp + 0x14] 	       520	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9	CALL_3
0x4000a00	      0xe80bfaffff	                  call sym.sec_merge_add	       520	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9	CALL_3
0x4000a05	          0x4885c0	                           test rax, rax	       522	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9	IF_10
0x4000a08	     0xf8494000000	                            je 0x4000aa2	       522	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9	IF_10
0x4000a0e	      0x488b442408	                mov rax, qword [rsp + 8]	       522	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9	IF_10
0x4000a13	    0x41bd01000000	                             mov r13d, 1	       519	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9
0x4000a19	    0x8b88c4000000	            mov ecx, dword [rax + 0xc4] 	       519	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9
0x4000a1f	      0xe93dffffff	                           jmp 0x4000961	       519	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9
0x4000a24	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       487	merge.c	FUNCTION_7	IF_1	FOR_1	IF_2
0x4000a29	      0xe9b6feffff	                           jmp 0x40008e4	       487	merge.c	FUNCTION_7	IF_1	FOR_1	IF_2
0x4000a2e	            0x6690	                                     nop	       487	merge.c	FUNCTION_7	IF_1	FOR_1	IF_2
0x4000a30	          0x4939df	                            cmp r15, rbx	       482	merge.c	FUNCTION_7	IF_1	FOR_1
0x4000a33	     0xf8788feffff	                            ja 0x40008c1	       482	merge.c	FUNCTION_7	IF_1	FOR_1
0x4000a39	          0x4d89e7	                            mov r15, r12	       482	merge.c	FUNCTION_7	IF_1	FOR_1
0x4000a3c	        0x4c8b2424	                    mov r12, qword [rsp]	       482	merge.c	FUNCTION_7	IF_1	FOR_1
0x4000a40	      0xe92dffffff	                           jmp 0x4000972	       482	merge.c	FUNCTION_7	IF_1	FOR_1
0x4000a45	           0xf1f00	                         nop dword [rax]	       482	merge.c	FUNCTION_7	IF_1	FOR_1
0x4000a48	          0x4939df	                            cmp r15, rbx	       495	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1
0x4000a4b	            0x7718	                            ja 0x4000a65	       495	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1
0x4000a4d	      0xe919ffffff	                           jmp 0x400096b	       495	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1
0x4000a52	    0x660f1f440000	                    nop word [rax + rax]	       495	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1
0x4000a58	        0x4883c301	                              add rbx, 1	       505	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1
0x4000a5c	          0x4939df	                            cmp r15, rbx	       495	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1
0x4000a5f	     0xf8406ffffff	                            je 0x400096b	       495	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1
0x4000a65	          0x803b00	                       cmp byte [rbx], 0	       495	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1
0x4000a68	     0xf8553feffff	                           jne 0x40008c1	       495	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1
0x4000a6e	          0x4585ed	                         test r13d, r13d	       497	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5
0x4000a71	            0x75e5	                           jne 0x4000a58	       497	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5
0x4000a73	          0x4889d8	                            mov rax, rbx	       497	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5
0x4000a76	          0x4829e8	                            sub rax, rbp	       497	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5
0x4000a79	          0x4c85f0	                           test rax, r14	       497	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5
0x4000a7c	            0x75da	                           jne 0x4000a58	       497	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5
0x4000a7e	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	       500	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5	CALL_2
0x4000a83	        0x488b0c24	                    mov rcx, qword [rsp]	       500	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5	CALL_2
0x4000a87	      0xbe00000000	                              mov esi, 0	       500	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5	CALL_2
0x4000a8c	        0x8b542414	            mov edx, dword [rsp + 0x14] 	       500	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5	CALL_2
0x4000a90	      0xe87bf9ffff	                  call sym.sec_merge_add	       500	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5	CALL_2
0x4000a95	          0x4885c0	                           test rax, rax	       502	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5	IF_6
0x4000a98	            0x7408	                            je 0x4000aa2	       502	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5	IF_6
0x4000a9a	    0x41bd01000000	                             mov r13d, 1	       499	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5
0x4000aa0	            0xebb6	                           jmp 0x4000a58	       499	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5
0x4000aa2	          0x4d89e7	                            mov r15, r12	       499	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5
0x4000aa5	      0xe9a5fdffff	                           jmp 0x400084f	       499	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5
0x4000aaa	          0x4d8b3f	                    mov r15, qword [r15]	       731	merge.c	FUNCTION_12	FOR_1
0x4000aad	          0x4d85ff	                           test r15, r15	       731	merge.c	FUNCTION_12	FOR_1
0x4000ab0	     0xf85defcffff	                           jne 0x4000794	       731	merge.c	FUNCTION_12	FOR_1
0x4000ab6	        0x4883c438	                           add rsp, 0x38	       799	merge.c	FUNCTION_12
0x4000aba	      0xb801000000	                              mov eax, 1	       798	merge.c	FUNCTION_12
0x4000abf	              0x5b	                                 pop rbx	       799	merge.c	FUNCTION_12
0x4000ac0	              0x5d	                                 pop rbp	       799	merge.c	FUNCTION_12
0x4000ac1	            0x415c	                                 pop r12	       799	merge.c	FUNCTION_12
0x4000ac3	            0x415d	                                 pop r13	       799	merge.c	FUNCTION_12
0x4000ac5	            0x415e	                                 pop r14	       799	merge.c	FUNCTION_12
0x4000ac7	            0x415f	                                 pop r15	       799	merge.c	FUNCTION_12
0x4000ac9	              0xc3	                                     ret	       799	merge.c	FUNCTION_12
0x4000aca	        0x488b5608	                mov rdx, qword [rsi + 8]	       788	merge.c	FUNCTION_12	FOR_1	ELSE_2
0x4000ace	        0x48894238	             mov qword [rdx + 0x38], rax	       788	merge.c	FUNCTION_12	FOR_1	ELSE_2
0x4000ad2	        0x498b4708	                mov rax, qword [r15 + 8]	       793	merge.c	FUNCTION_12	FOR_1	FOR_4
0x4000ad6	          0x4885c0	                           test rax, rax	       793	merge.c	FUNCTION_12	FOR_1	FOR_4
0x4000ad9	            0x750d	                           jne 0x4000ae8	       793	merge.c	FUNCTION_12	FOR_1	FOR_4
0x4000adb	            0xebcd	                           jmp 0x4000aaa	       793	merge.c	FUNCTION_12	FOR_1	FOR_4
0x4000add	           0xf1f00	                         nop dword [rax]	       793	merge.c	FUNCTION_12	FOR_1	FOR_4
0x4000ae0	          0x488b00	                    mov rax, qword [rax]	       793	merge.c	FUNCTION_12	FOR_1	FOR_4
0x4000ae3	          0x4885c0	                           test rax, rax	       793	merge.c	FUNCTION_12	FOR_1	FOR_4
0x4000ae6	            0x74c2	                            je 0x4000aaa	       793	merge.c	FUNCTION_12	FOR_1	FOR_4
0x4000ae8	      0x4883782000	               cmp qword [rax + 0x20], 0	       794	merge.c	FUNCTION_12	FOR_1	FOR_4	IF_11
0x4000aed	            0x75f1	                           jne 0x4000ae0	       794	merge.c	FUNCTION_12	FOR_1	FOR_4	IF_11
0x4000aef	        0x488b5008	                mov rdx, qword [rax + 8]	       795	merge.c	FUNCTION_12	FOR_1	FOR_4	IF_11
0x4000af3	    0x814a20008020	         or dword [rdx + 0x20], 0x208000	       795	merge.c	FUNCTION_12	FOR_1	FOR_4	IF_11
0x4000afa	            0xebe4	                           jmp 0x4000ae0	       795	merge.c	FUNCTION_12	FOR_1	FOR_4	IF_11
0x4000afc	        0x488b7a28	            mov rdi, qword [rdx + 0x28] 	       624	merge.c	FUNCTION_11	CALL_1
0x4000b00	        0x48c1e703	                              shl rdi, 3	       624	merge.c	FUNCTION_11	CALL_1
0x4000b04	      0xe800000000	                          call 0x4000b09	       624	merge.c	FUNCTION_11	CALL_1
0x4000b09	          0x4885c0	                           test rax, rax	       625	merge.c	FUNCTION_11	IF_1
0x4000b0c	          0x4989c4	                            mov r12, rax	       624	merge.c	FUNCTION_11	CALL_1
0x4000b0f	     0xf845efdffff	                            je 0x4000873	       625	merge.c	FUNCTION_11	IF_1
0x4000b15	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       628	merge.c	FUNCTION_11	FOR_1
0x4000b19	        0x488b4230	            mov rax, qword [rdx + 0x30] 	       628	merge.c	FUNCTION_11	FOR_1
0x4000b1d	          0x4885c0	                           test rax, rax	       628	merge.c	FUNCTION_11	FOR_1
0x4000b20	     0xf84f0000000	                            je 0x4000c16	       628	merge.c	FUNCTION_11	FOR_1
0x4000b26	          0x4c89e1	                            mov rcx, r12	       628	merge.c	FUNCTION_11	FOR_1
0x4000b29	            0x31ff	                            xor edi, edi	       628	merge.c	FUNCTION_11	FOR_1
0x4000b2b	            0xeb06	                           jmp 0x4000b33	       628	merge.c	FUNCTION_11	FOR_1
0x4000b2d	           0xf1f00	                         nop dword [rax]	       628	merge.c	FUNCTION_11	FOR_1
0x4000b30	          0x4889d9	                            mov rcx, rbx	       628	merge.c	FUNCTION_11	FOR_1
0x4000b33	          0x8b701c	            mov esi, dword [rax + 0x1c] 	       629	merge.c	FUNCTION_11	FOR_1	IF_2
0x4000b36	          0x4889cb	                            mov rbx, rcx	       629	merge.c	FUNCTION_11	FOR_1	IF_2
0x4000b39	            0x85f6	                           test esi, esi	       629	merge.c	FUNCTION_11	FOR_1	IF_2
0x4000b3b	            0x741f	                            je 0x4000b5c	       629	merge.c	FUNCTION_11	FOR_1	IF_2
0x4000b3d	          0x488901	                    mov qword [rcx], rax	       631	merge.c	FUNCTION_11	FOR_1	IF_2
0x4000b40	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       633	merge.c	FUNCTION_11	FOR_1	IF_2
0x4000b44	        0x4883c308	                              add rbx, 8	       631	merge.c	FUNCTION_11	FOR_1	IF_2
0x4000b48	          0x8b4a40	            mov ecx, dword [rdx + 0x40] 	       633	merge.c	FUNCTION_11	FOR_1	IF_2
0x4000b4b	          0x294818	             sub dword [rax + 0x18], ecx	       633	merge.c	FUNCTION_11	FOR_1	IF_2
0x4000b4e	            0x39fe	                            cmp esi, edi	       634	merge.c	FUNCTION_11	FOR_1	IF_2	IF_3
0x4000b50	            0x740a	                            je 0x4000b5c	       634	merge.c	FUNCTION_11	FOR_1	IF_2	IF_3
0x4000b52	            0x85ff	                           test edi, edi	       639	merge.c	FUNCTION_11	FOR_1	IF_2	IF_3	ELSE_1
0x4000b54	      0xbfffffffff	                     mov edi, 0xffffffff	       639	merge.c	FUNCTION_11	FOR_1	IF_2	IF_3	ELSE_1
0x4000b59	           0xf44fe	                          cmove edi, esi	       639	merge.c	FUNCTION_11	FOR_1	IF_2	IF_3	ELSE_1
0x4000b5c	        0x488b4030	            mov rax, qword [rax + 0x30] 	       628	merge.c	FUNCTION_11	FOR_1
0x4000b60	          0x4885c0	                           test rax, rax	       628	merge.c	FUNCTION_11	FOR_1
0x4000b63	            0x75cb	                           jne 0x4000b30	       628	merge.c	FUNCTION_11	FOR_1
0x4000b65	          0x4889de	                            mov rsi, rbx	       643	merge.c	FUNCTION_11
0x4000b68	          0x4c29e6	                            sub rsi, r12	       643	merge.c	FUNCTION_11
0x4000b6b	        0x48c1fe03	                              sar rsi, 3	       643	merge.c	FUNCTION_11
0x4000b6f	          0x4885f6	                           test rsi, rsi	       644	merge.c	FUNCTION_11	IF_5
0x4000b72	        0x48897228	             mov qword [rdx + 0x28], rsi	       643	merge.c	FUNCTION_11
0x4000b76	     0xf84a2000000	                            je 0x4000c1e	       644	merge.c	FUNCTION_11	IF_5
0x4000b7c	          0x83ffff	             cmp edi, 0xffffffffffffffff	       646	merge.c	FUNCTION_11	IF_5	CALL_2
0x4000b7f	      0xb900000000	                              mov ecx, 0	       646	merge.c	FUNCTION_11	IF_5	CALL_2
0x4000b84	            0x740c	                            je 0x4000b92	       646	merge.c	FUNCTION_11	IF_5	CALL_2
0x4000b86	          0x397a40	            cmp dword [rdx + 0x40], edi 	       646	merge.c	FUNCTION_11	IF_5	CALL_2
0x4000b89	      0xb800000000	                              mov eax, 0	       646	merge.c	FUNCTION_11	IF_5	CALL_2
0x4000b8e	        0x480f42c8	                          cmovb rcx, rax	       646	merge.c	FUNCTION_11	IF_5	CALL_2
0x4000b92	      0xba08000000	                              mov edx, 8	       646	merge.c	FUNCTION_11	IF_5	CALL_2
0x4000b97	          0x4c89e7	                            mov rdi, r12	       646	merge.c	FUNCTION_11	IF_5	CALL_2
0x4000b9a	        0x4c8d6bf8	                      lea r13, [rbx - 8]	       652	merge.c	FUNCTION_11	IF_5
0x4000b9e	      0xe800000000	                          call 0x4000ba3	       646	merge.c	FUNCTION_11	IF_5	CALL_2
0x4000ba3	        0x498b4710	            mov rax, qword [r15 + 0x10] 	       653	merge.c	FUNCTION_11	IF_5
0x4000ba7	        0x488b5bf8	                mov rbx, qword [rbx - 8]	       652	merge.c	FUNCTION_11	IF_5
0x4000bab	        0x4983ed08	                              sub r13, 8	       654	merge.c	FUNCTION_11	IF_5	WHILE_1
0x4000baf	        0x448b7040	           mov r14d, dword [rax + 0x40] 	       653	merge.c	FUNCTION_11	IF_5
0x4000bb3	        0x44017318	            add dword [rbx + 0x18], r14d	       653	merge.c	FUNCTION_11	IF_5
0x4000bb7	          0x4d39ec	                            cmp r12, r13	       654	merge.c	FUNCTION_11	IF_5	WHILE_1
0x4000bba	            0x7762	                            ja 0x4000c1e	       654	merge.c	FUNCTION_11	IF_5	WHILE_1
0x4000bbc	        0x498b6d00	                    mov rbp, qword [r13]	       656	merge.c	FUNCTION_11	IF_5	WHILE_1
0x4000bc0	          0x4489f2	                           mov edx, r14d	       658	merge.c	FUNCTION_11	IF_5	WHILE_1
0x4000bc3	          0x8b4d1c	            mov ecx, dword [rbp + 0x1c] 	       659	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000bc6	           0x35518	             add edx, dword [rbp + 0x18]	       658	merge.c	FUNCTION_11	IF_5	WHILE_1
0x4000bc9	          0x394b1c	            cmp dword [rbx + 0x1c], ecx 	       659	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000bcc	          0x895518	            mov dword [rbp + 0x18], edx 	       658	merge.c	FUNCTION_11	IF_5	WHILE_1
0x4000bcf	            0x7237	                            jb 0x4000c08	       659	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000bd1	        0x448b4318	            mov r8d, dword [rbx + 0x18] 	       660	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000bd5	          0x83e901	                              sub ecx, 1	       660	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000bd8	          0x4489c0	                            mov eax, r8d	       660	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000bdb	            0x29d0	                            sub eax, edx	       660	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000bdd	            0x85c1	                           test ecx, eax	       660	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000bdf	            0x7527	                           jne 0x4000c08	       660	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000be1	          0x4439c2	                            cmp edx, r8d	       603	merge.c	FUNCTION_10	IF_1
0x4000be4	        0x488b7b08	                mov rdi, qword [rbx + 8]	       603	merge.c	FUNCTION_10	IF_1
0x4000be8	        0x488b7508	                mov rsi, qword [rbp + 8]	       603	merge.c	FUNCTION_10	IF_1
0x4000bec	            0x731a	                           jae 0x4000c08	       603	merge.c	FUNCTION_10	IF_1
0x4000bee	          0x4801c7	                            add rdi, rax	       608	merge.c	FUNCTION_10	CALL_1
0x4000bf1	      0xe800000000	                          call 0x4000bf6	       608	merge.c	FUNCTION_10	CALL_1
0x4000bf6	            0x85c0	                           test eax, eax	       661	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6	CALL_3
0x4000bf8	            0x750e	                           jne 0x4000c08	       661	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6	CALL_3
0x4000bfa	        0x48895d20	            mov qword [rbp + 0x20], rbx 	       663	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000bfe	    0xc7451c000000	               mov dword [rbp + 0x1c], 0	       664	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000c05	          0x4889dd	                            mov rbp, rbx	       664	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000c08	        0x4983ed08	                              sub r13, 8	       654	merge.c	FUNCTION_11	IF_5	WHILE_1
0x4000c0c	          0x4889eb	                            mov rbx, rbp	       664	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000c0f	          0x4d39ec	                            cmp r12, r13	       654	merge.c	FUNCTION_11	IF_5	WHILE_1
0x4000c12	            0x76a8	                           jbe 0x4000bbc	       654	merge.c	FUNCTION_11	IF_5	WHILE_1
0x4000c14	            0xeb08	                           jmp 0x4000c1e	       654	merge.c	FUNCTION_11	IF_5	WHILE_1
0x4000c16	    0x48c742280000	               mov qword [rdx + 0x28], 0	       643	merge.c	FUNCTION_11
0x4000c1e	          0x4c89e7	                            mov rdi, r12	       671	merge.c	FUNCTION_11	CALL_4
0x4000c21	      0xe800000000	                          call 0x4000c26	       671	merge.c	FUNCTION_11	CALL_4
0x4000c26	        0x498b7710	            mov rsi, qword [r15 + 0x10] 	       675	merge.c	FUNCTION_11
0x4000c2a	            0x31c0	                            xor eax, eax	       674	merge.c	FUNCTION_11
0x4000c2c	        0x488b4e30	            mov rcx, qword [rsi + 0x30] 	       675	merge.c	FUNCTION_11
0x4000c30	        0x488b7928	            mov rdi, qword [rcx + 0x28] 	       675	merge.c	FUNCTION_11
0x4000c34	            0xeb1e	                           jmp 0x4000c54	       675	merge.c	FUNCTION_11
0x4000c36	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       675	merge.c	FUNCTION_11
0x4000c40	        0x488b5128	            mov rdx, qword [rcx + 0x28] 	       678	merge.c	FUNCTION_11	FOR_2	IF_7
0x4000c44	          0x4839fa	                            cmp rdx, rdi	       678	merge.c	FUNCTION_11	FOR_2	IF_7
0x4000c47	            0x7408	                            je 0x4000c51	       678	merge.c	FUNCTION_11	FOR_2	IF_7
0x4000c49	        0x488b7f08	                mov rdi, qword [rdi + 8]	       680	merge.c	FUNCTION_11	FOR_2	IF_7
0x4000c4d	        0x48894738	             mov qword [rdi + 0x38], rax	       680	merge.c	FUNCTION_11	FOR_2	IF_7
0x4000c51	          0x4889d7	                            mov rdi, rdx	       678	merge.c	FUNCTION_11	FOR_2	IF_7
0x4000c54	          0x8b511c	            mov edx, dword [rcx + 0x1c] 	       683	merge.c	FUNCTION_11	FOR_2	IF_8
0x4000c57	            0x85d2	                           test edx, edx	       683	merge.c	FUNCTION_11	FOR_2	IF_8
0x4000c59	            0x7422	                            je 0x4000c7d	       683	merge.c	FUNCTION_11	FOR_2	IF_8
0x4000c5b	      0x48837f2000	               cmp qword [rdi + 0x20], 0	       685	merge.c	FUNCTION_11	FOR_2	IF_8	IF_9
0x4000c60	            0x7506	                           jne 0x4000c68	       685	merge.c	FUNCTION_11	FOR_2	IF_8	IF_9
0x4000c62	        0x48894f20	             mov qword [rdi + 0x20], rcx	       687	merge.c	FUNCTION_11	FOR_2	IF_8	IF_9
0x4000c66	            0x31c0	                            xor eax, eax	       688	merge.c	FUNCTION_11	FOR_2	IF_8	IF_9
0x4000c68	      0x488d4402ff	                lea rax, [rdx + rax - 1]	       690	merge.c	FUNCTION_11	FOR_2	IF_8
0x4000c6d	          0x48f7da	                                 neg rdx	       690	merge.c	FUNCTION_11	FOR_2	IF_8
0x4000c70	          0x4821d0	                            and rax, rdx	       690	merge.c	FUNCTION_11	FOR_2	IF_8
0x4000c73	          0x8b5118	            mov edx, dword [rcx + 0x18] 	       692	merge.c	FUNCTION_11	FOR_2	IF_8
0x4000c76	        0x48894120	             mov qword [rcx + 0x20], rax	       691	merge.c	FUNCTION_11	FOR_2	IF_8
0x4000c7a	          0x4801d0	                            add rax, rdx	       692	merge.c	FUNCTION_11	FOR_2	IF_8
0x4000c7d	        0x488b4930	            mov rcx, qword [rcx + 0x30] 	       676	merge.c	FUNCTION_11	FOR_2
0x4000c81	          0x4885c9	                           test rcx, rcx	       676	merge.c	FUNCTION_11	FOR_2
0x4000c84	            0x75ba	                           jne 0x4000c40	       676	merge.c	FUNCTION_11	FOR_2
0x4000c86	        0x488b7f08	                mov rdi, qword [rdi + 8]	       695	merge.c	FUNCTION_11
0x4000c8a	          0x8b4f70	            mov ecx, dword [rdi + 0x70] 	       696	merge.c	FUNCTION_11	IF_10
0x4000c8d	        0x48894738	             mov qword [rdi + 0x38], rax	       695	merge.c	FUNCTION_11
0x4000c91	            0x85c9	                           test ecx, ecx	       696	merge.c	FUNCTION_11	IF_10
0x4000c93	            0x7417	                            je 0x4000cac	       696	merge.c	FUNCTION_11	IF_10
0x4000c95	      0xba01000000	                              mov edx, 1	       698	merge.c	FUNCTION_11	IF_10
0x4000c9a	          0x48d3e2	                             shl rdx, cl	       698	merge.c	FUNCTION_11	IF_10
0x4000c9d	      0x488d4402ff	                lea rax, [rdx + rax - 1]	       699	merge.c	FUNCTION_11	IF_10
0x4000ca2	          0x48f7da	                                 neg rdx	       699	merge.c	FUNCTION_11	IF_10
0x4000ca5	          0x4821d0	                            and rax, rdx	       699	merge.c	FUNCTION_11	IF_10
0x4000ca8	        0x48894738	             mov qword [rdi + 0x38], rax	       699	merge.c	FUNCTION_11	IF_10
0x4000cac	        0x488b4630	            mov rax, qword [rsi + 0x30] 	       704	merge.c	FUNCTION_11	FOR_3
0x4000cb0	        0x488d7e30	                   lea rdi, [rsi + 0x30]	       704	merge.c	FUNCTION_11	FOR_3
0x4000cb4	          0x4885c0	                           test rax, rax	       704	merge.c	FUNCTION_11	FOR_3
0x4000cb7	            0x7516	                           jne 0x4000ccf	       704	merge.c	FUNCTION_11	FOR_3
0x4000cb9	      0xe914feffff	                           jmp 0x4000ad2	       704	merge.c	FUNCTION_11	FOR_3
0x4000cbe	        0x488d7830	                   lea rdi, [rax + 0x30]	       706	merge.c	FUNCTION_11	FOR_3	IF_11
0x4000cc2	        0x488b4030	            mov rax, qword [rax + 0x30] 	       704	merge.c	FUNCTION_11	FOR_3
0x4000cc6	          0x4885c0	                           test rax, rax	       704	merge.c	FUNCTION_11	FOR_3
0x4000cc9	     0xf8403feffff	                            je 0x4000ad2	       704	merge.c	FUNCTION_11	FOR_3
0x4000ccf	          0x8b501c	            mov edx, dword [rax + 0x1c] 	       705	merge.c	FUNCTION_11	FOR_3	IF_11
0x4000cd2	            0x85d2	                           test edx, edx	       705	merge.c	FUNCTION_11	FOR_3	IF_11
0x4000cd4	            0x75e8	                           jne 0x4000cbe	       705	merge.c	FUNCTION_11	FOR_3	IF_11
0x4000cd6	          0x8b7018	            mov esi, dword [rax + 0x18] 	       710	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000cd9	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       709	merge.c	FUNCTION_11	ELSE_3
0x4000cdd	            0x85f6	                           test esi, esi	       710	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000cdf	          0x488917	                    mov qword [rdi], rdx	       709	merge.c	FUNCTION_11	ELSE_3
0x4000ce2	            0x74de	                            je 0x4000cc2	       710	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000ce4	        0x488b4820	            mov rcx, qword [rax + 0x20] 	       712	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000ce8	        0x488b5128	            mov rdx, qword [rcx + 0x28] 	       712	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000cec	        0x48895028	             mov qword [rax + 0x28], rdx	       712	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000cf0	          0x8b511c	            mov edx, dword [rcx + 0x1c] 	       713	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000cf3	          0x89501c	             mov dword [rax + 0x1c], edx	       713	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000cf6	          0x8b5118	            mov edx, dword [rcx + 0x18] 	       714	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000cf9	            0x29f2	                            sub edx, esi	       714	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000cfb	        0x48035120	             add rdx, qword [rcx + 0x20]	       714	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000cff	        0x48895020	             mov qword [rax + 0x20], rdx	       714	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000d03	            0xebbd	                           jmp 0x4000cc2	       714	merge.c	FUNCTION_11	ELSE_3	IF_12
_bfd_merge_sections_free	CALL,2:WHILE,0:functions,0:SWITCH,0:DO,0:IF,0:ELSE,0:FOR,1	14
0x40011b0	          0x4885ff	                           test rdi, rdi	       931	merge.c	FUNCTION_15	FOR_1
0x40011b3	            0x7426	                            je 0x40011db	       931	merge.c	FUNCTION_15	FOR_1
0x40011b5	              0x53	                                push rbx	       928	merge.c	FUNCTION_15
0x40011b6	          0x4889fb	                            mov rbx, rdi	       928	merge.c	FUNCTION_15
0x40011b9	     0xf1f80000000	                         nop dword [rax]	       928	merge.c	FUNCTION_15
0x40011c0	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       933	merge.c	FUNCTION_15	FOR_1	CALL_1
0x40011c4	      0xe800000000	                          call 0x40011c9	       933	merge.c	FUNCTION_15	FOR_1	CALL_1
0x40011c9	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       934	merge.c	FUNCTION_15	FOR_1	CALL_2
0x40011cd	      0xe800000000	                          call 0x40011d2	       934	merge.c	FUNCTION_15	FOR_1	CALL_2
0x40011d2	          0x488b1b	                    mov rbx, qword [rbx]	       931	merge.c	FUNCTION_15	FOR_1
0x40011d5	          0x4885db	                           test rbx, rbx	       931	merge.c	FUNCTION_15	FOR_1
0x40011d8	            0x75e6	                           jne 0x40011c0	       931	merge.c	FUNCTION_15	FOR_1
0x40011da	              0x5b	                                 pop rbx	       936	merge.c	FUNCTION_15
0x40011db	            0xf3c3	                                     ret	       936	merge.c	FUNCTION_15
strrevcmp_align	CALL,0:WHILE,1:functions,0:SWITCH,0:DO,0:IF,2:ELSE,0:FOR,0	46
0x40000c0	          0x488b0f	                    mov rcx, qword [rdi]	       576	merge.c	FUNCTION_9
0x40000c3	          0x488b36	                    mov rsi, qword [rsi]	       577	merge.c	FUNCTION_9
0x40000c6	          0x8b411c	            mov eax, dword [rcx + 0x1c] 	       583	merge.c	FUNCTION_9
0x40000c9	        0x448b5118	           mov r10d, dword [rcx + 0x18] 	       578	merge.c	FUNCTION_9
0x40000cd	        0x448b4e18	            mov r9d, dword [rsi + 0x18] 	       579	merge.c	FUNCTION_9
0x40000d1	          0x8d50ff	                      lea edx, [rax - 1]	       583	merge.c	FUNCTION_9
0x40000d4	          0x4489d0	                           mov eax, r10d	       583	merge.c	FUNCTION_9
0x40000d7	            0x21d0	                            and eax, edx	       583	merge.c	FUNCTION_9
0x40000d9	          0x4421ca	                            and edx, r9d	       583	merge.c	FUNCTION_9
0x40000dc	            0x29d0	                            sub eax, edx	       583	merge.c	FUNCTION_9
0x40000de	            0x85c0	                           test eax, eax	       585	merge.c	FUNCTION_9	IF_1
0x40000e0	            0x755b	                           jne 0x400013d	       585	merge.c	FUNCTION_9	IF_1
0x40000e2	          0x4539ca	                           cmp r10d, r9d	       582	merge.c	FUNCTION_9
0x40000e5	          0x4589cb	                           mov r11d, r9d	       582	merge.c	FUNCTION_9
0x40000e8	        0x450f46da	                       cmovbe r11d, r10d	       582	merge.c	FUNCTION_9
0x40000ec	          0x4585db	                         test r11d, r11d	       588	merge.c	FUNCTION_9	WHILE_1
0x40000ef	            0x7446	                            je 0x4000137	       588	merge.c	FUNCTION_9	WHILE_1
0x40000f1	        0x488b5108	                mov rdx, qword [rcx + 8]	       580	merge.c	FUNCTION_9
0x40000f5	          0x4489d0	                           mov eax, r10d	       580	merge.c	FUNCTION_9
0x40000f8	      0x488d7c02ff	                lea rdi, [rdx + rax - 1]	       580	merge.c	FUNCTION_9
0x40000fd	        0x488b5608	                mov rdx, qword [rsi + 8]	       581	merge.c	FUNCTION_9
0x4000101	          0x4489c8	                            mov eax, r9d	       581	merge.c	FUNCTION_9
0x4000104	      0x4c8d4402ff	                 lea r8, [rdx + rax - 1]	       581	merge.c	FUNCTION_9
0x4000109	           0xfb617	                   movzx edx, byte [rdi]	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x400010c	        0x410fb608	                    movzx ecx, byte [r8]	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x4000110	            0x38d1	                              cmp cl, dl	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x4000112	            0x752c	                           jne 0x4000140	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x4000114	        0x418d73ff	                      lea esi, [r11 - 1]	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x4000118	            0x31c0	                            xor eax, eax	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x400011a	          0x48f7de	                                 neg rsi	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x400011d	            0xeb13	                           jmp 0x4000132	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x400011f	              0x90	                                     nop	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x4000120	       0xfb65407ff	         movzx edx, byte [rdi + rax - 1]	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x4000125	        0x4883e801	                              sub rax, 1	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x4000129	      0x410fb60c00	              movzx ecx, byte [r8 + rax]	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x400012e	            0x38ca	                              cmp dl, cl	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x4000130	            0x750e	                           jne 0x4000140	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x4000132	          0x4839c6	                            cmp rsi, rax	       588	merge.c	FUNCTION_9	WHILE_1
0x4000135	            0x75e9	                           jne 0x4000120	       588	merge.c	FUNCTION_9	WHILE_1
0x4000137	          0x4489d0	                           mov eax, r10d	       596	merge.c	FUNCTION_9
0x400013a	          0x4429c8	                            sub eax, r9d	       596	merge.c	FUNCTION_9
0x400013d	            0xf3c3	                                     ret	       597	merge.c	FUNCTION_9
0x400013f	              0x90	                                     nop	       597	merge.c	FUNCTION_9
0x4000140	           0xfb6c2	                           movzx eax, dl	       591	merge.c	FUNCTION_9	WHILE_1	IF_2
0x4000143	            0x29c8	                            sub eax, ecx	       591	merge.c	FUNCTION_9	WHILE_1	IF_2
0x4000145	              0xc3	                                     ret	       591	merge.c	FUNCTION_9	WHILE_1	IF_2
