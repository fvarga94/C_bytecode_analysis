d_make_name	CALL,1:FOR,0:IF,1:ELSE,0:WHILE,0:DO,0:functions,0:SWITCH,0	22
0x4000630	          0x8b4f28	            mov ecx, dword [rdi + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4000633	          0x3b4f2c	            cmp ecx, dword [rdi + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4000636	            0x7d40	                           jge 0x4000678	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4000638	          0x4863c1	                         movsxd rax, ecx	       935	cp-demangle.c	FUNCTION_3
0x400063b	          0x83c101	                              add ecx, 1	       937	cp-demangle.c	FUNCTION_3
0x400063e	          0x4885f6	                           test rsi, rsi	       861	cp-demangle.c	IF_1
0x4000641	        0x4c8d0440	                   lea r8, [rax + rax*2]	       935	cp-demangle.c	FUNCTION_3
0x4000645	        0x488b4720	            mov rax, qword [rdi + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x4000649	        0x4a8d04c0	                   lea rax, [rax + r8*8]	       935	cp-demangle.c	FUNCTION_3
0x400064d	    0xc74004000000	                  mov dword [rax + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x4000654	          0x894f28	             mov dword [rdi + 0x28], ecx	       937	cp-demangle.c	FUNCTION_3
0x4000657	            0x741f	                            je 0x4000678	       861	cp-demangle.c	IF_1
0x4000659	            0x85d2	                           test edx, edx	       861	cp-demangle.c	IF_1
0x400065b	            0x741b	                            je 0x4000678	       861	cp-demangle.c	IF_1
0x400065d	    0xc74004000000	                  mov dword [rax + 4], 0	       863	cp-demangle.c	
0x4000664	    0xc70000000000	                      mov dword [rax], 0	       864	cp-demangle.c	
0x400066a	        0x48897008	                mov qword [rax + 8], rsi	       865	cp-demangle.c	
0x400066e	          0x895010	             mov dword [rax + 0x10], edx	       866	cp-demangle.c	
0x4000671	              0xc3	                                     ret	      1070	cp-demangle.c	FUNCTION_6
0x4000672	    0x660f1f440000	                    nop word [rax + rax]	      1070	cp-demangle.c	FUNCTION_6
0x4000678	            0x31c0	                            xor eax, eax	      1068	cp-demangle.c	FUNCTION_6	IF_1
0x400067a	              0xc3	                                     ret	      1068	cp-demangle.c	FUNCTION_6	IF_1
d_substitution	CALL,9:FOR,1:IF,14:ELSE,4:WHILE,0:DO,1:functions,0:SWITCH,0	157
0x40007c0	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      3840	cp-demangle.c	FUNCTION_60	IF_1	CALL_1
0x40007c4	          0x803853	                    cmp byte [rax], 0x53	      3840	cp-demangle.c	FUNCTION_60	IF_1	CALL_1
0x40007c7	            0x7407	                            je 0x40007d0	      3840	cp-demangle.c	FUNCTION_60	IF_1	CALL_1
0x40007c9	            0x31c0	                            xor eax, eax	      3841	cp-demangle.c	FUNCTION_60	IF_1
0x40007cb	              0xc3	                                     ret	      3931	cp-demangle.c	FUNCTION_60
0x40007cc	         0xf1f4000	                         nop dword [rax]	      3931	cp-demangle.c	FUNCTION_60
0x40007d0	        0x488d5001	                      lea rdx, [rax + 1]	      3840	cp-demangle.c	FUNCTION_60	IF_1	CALL_1
0x40007d4	        0x48895718	             mov qword [rdi + 0x18], rdx	      3840	cp-demangle.c	FUNCTION_60	IF_1	CALL_1
0x40007d8	        0x80780100	                   cmp byte [rax + 1], 0	      3843	cp-demangle.c	FUNCTION_60	CALL_2
0x40007dc	     0xf847e000000	                            je 0x4000860	      3843	cp-demangle.c	FUNCTION_60	CALL_2
0x40007e2	        0x488d5002	                      lea rdx, [rax + 2]	      3843	cp-demangle.c	FUNCTION_60	CALL_2
0x40007e6	        0x48895718	             mov qword [rdi + 0x18], rdx	      3843	cp-demangle.c	FUNCTION_60	CALL_2
0x40007ea	         0xfbe4001	               movsx eax, byte [rax + 1]	      3843	cp-demangle.c	FUNCTION_60	CALL_2
0x40007ee	          0x8d50d0	                   lea edx, [rax - 0x30]	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x40007f1	          0x80fa09	                               cmp dl, 9	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x40007f4	            0x7608	                           jbe 0x40007fe	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x40007f6	            0x3c5f	                            cmp al, 0x5f	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x40007f8	     0xf85c7010000	                           jne 0x40009c5	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x40007fe	            0x31d2	                            xor edx, edx	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x4000800	            0x3c5f	                            cmp al, 0x5f	      3849	cp-demangle.c	FUNCTION_60	IF_2	IF_3
0x4000802	     0xf8470010000	                            je 0x4000978	      3849	cp-demangle.c	FUNCTION_60	IF_2	IF_3
0x4000808	          0x8d48d0	                   lea ecx, [rax - 0x30]	      3855	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x400080b	          0x80f909	                               cmp cl, 9	      3855	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x400080e	            0x7735	                            ja 0x4000845	      3855	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x4000810	          0x8d0cd2	                  lea ecx, [rdx + rdx*8]	      3856	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x4000813	        0x8d4c88d0	           lea ecx, [rax + rcx*4 - 0x30]	      3856	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x4000817	            0x39ca	                            cmp edx, ecx	      3861	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_6
0x4000819	            0x77ae	                            ja 0x40007c9	      3861	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_6
0x400081b	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x400081f	          0x803800	                       cmp byte [rax], 0	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x4000822	     0xf8428010000	                            je 0x4000950	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x4000828	        0x488d5001	                      lea rdx, [rax + 1]	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x400082c	        0x48895718	             mov qword [rdi + 0x18], rdx	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x4000830	           0xfbe00	                   movsx eax, byte [rax]	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x4000833	            0x3c5f	                            cmp al, 0x5f	      3866	cp-demangle.c	FUNCTION_60	IF_2	IF_3
0x4000835	     0xf8425010000	                            je 0x4000960	      3866	cp-demangle.c	FUNCTION_60	IF_2	IF_3
0x400083b	            0x89ca	                            mov edx, ecx	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x400083d	          0x8d48d0	                   lea ecx, [rax - 0x30]	      3855	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x4000840	          0x80f909	                               cmp cl, 9	      3855	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x4000843	            0x76cb	                           jbe 0x4000810	      3855	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	IF_4
0x4000845	          0x8d48bf	                   lea ecx, [rax - 0x41]	      3857	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_1	IF_5
0x4000848	          0x80f919	                            cmp cl, 0x19	      3857	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_1	IF_5
0x400084b	     0xf8778ffffff	                            ja 0x40007c9	      3857	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_1	IF_5
0x4000851	          0x8d0cd2	                  lea ecx, [rdx + rdx*8]	      3858	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_1	IF_5
0x4000854	        0x8d4c88c9	           lea ecx, [rax + rcx*4 - 0x37]	      3858	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_1	IF_5
0x4000858	            0xebbd	                           jmp 0x4000817	      3858	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_1	IF_5
0x400085a	    0x660f1f440000	                    nop word [rax + rax]	      3858	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	ELSE_1	IF_5
0x4000860	            0x31c0	                            xor eax, eax	      3843	cp-demangle.c	FUNCTION_60	CALL_2
0x4000862	          0x8b5710	            mov edx, dword [rdi + 0x10] 	      3882	cp-demangle.c	FUNCTION_60	ELSE_3
0x4000865	          0x4531c0	                            xor r8d, r8d	      3882	cp-demangle.c	FUNCTION_60	ELSE_3
0x4000868	          0x83e208	                              and edx, 8	      3882	cp-demangle.c	FUNCTION_60	ELSE_3
0x400086b	        0x410f95c0	                               setne r8b	      3882	cp-demangle.c	FUNCTION_60	ELSE_3
0x400086f	            0x751a	                           jne 0x400088b	      3883	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8
0x4000871	            0x85f6	                           test esi, esi	      3883	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8
0x4000873	            0x7416	                            je 0x400088b	      3883	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8
0x4000875	        0x488b5718	            mov rdx, qword [rdi + 0x18] 	      3887	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8	CALL_4
0x4000879	           0xfb612	                   movzx edx, byte [rdx]	      3888	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8	IF_9
0x400087c	          0x83ea43	                           sub edx, 0x43	      3888	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8	IF_9
0x400087f	          0x80fa01	                               cmp dl, 1	      3889	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8	IF_9
0x4000882	      0xba01000000	                              mov edx, 1	      3889	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8	IF_9
0x4000887	        0x440f46c2	                         cmovbe r8d, edx	      3889	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8	IF_9
0x400088b	      0xb974000000	                           mov ecx, 0x74	      3889	cp-demangle.c	FUNCTION_60	ELSE_3	IF_8	IF_9
0x4000890	      0xba00000000	                              mov edx, 0	      3894	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1
0x4000895	            0xeb1d	                           jmp 0x40008b4	      3894	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1
0x4000897	    0x660f1f840000	                    nop word [rax + rax]	      3894	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1
0x40008a0	        0x4883c238	                           add rdx, 0x38	      3894	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1
0x40008a4	    0x4881fa000000	                              cmp rdx, 0	      3894	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1
0x40008ab	     0xf8418ffffff	                            je 0x40007c9	      3894	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1
0x40008b1	           0xfb60a	                   movzx ecx, byte [rdx]	      3894	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1
0x40008b4	            0x38c1	                              cmp cl, al	      3896	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x40008b6	            0x75e8	                           jne 0x40008a0	      3896	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x40008b8	        0x4c8b4a28	              mov r9, qword [rdx + 0x28]	      3902	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_11
0x40008bc	          0x4d85c9	                             test r9, r9	      3902	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_11
0x40008bf	     0xf84e4000000	                            je 0x40009a9	      3902	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_11
0x40008c5	          0x8b4f28	            mov ecx, dword [rdi + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x40008c8	          0x8b772c	            mov esi, dword [rdi + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x40008cb	            0x31c0	                            xor eax, eax	       934	cp-demangle.c	FUNCTION_3	IF_1
0x40008cd	        0x448b5230	           mov r10d, dword [rdx + 0x30] 	      3903	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_11	CALL_5
0x40008d1	            0x39f1	                            cmp ecx, esi	       933	cp-demangle.c	FUNCTION_3	IF_1
0x40008d3	            0x7d2a	                           jge 0x40008ff	       933	cp-demangle.c	FUNCTION_3	IF_1
0x40008d5	          0x4863c1	                         movsxd rax, ecx	       935	cp-demangle.c	FUNCTION_3
0x40008d8	          0x83c101	                              add ecx, 1	       937	cp-demangle.c	FUNCTION_3
0x40008db	        0x4c8d1c40	                  lea r11, [rax + rax*2]	       935	cp-demangle.c	FUNCTION_3
0x40008df	        0x488b4720	            mov rax, qword [rdi + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x40008e3	        0x4a8d04d8	                  lea rax, [rax + r11*8]	       935	cp-demangle.c	FUNCTION_3
0x40008e7	    0xc74004000000	                  mov dword [rax + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x40008ee	          0x894f28	             mov dword [rdi + 0x28], ecx	       937	cp-demangle.c	FUNCTION_3
0x40008f1	    0xc70018000000	                   mov dword [rax], 0x18	      1205	cp-demangle.c	FUNCTION_15	IF_1
0x40008f7	        0x4c894808	                 mov qword [rax + 8], r9	      1206	cp-demangle.c	FUNCTION_15	IF_1
0x40008fb	        0x44895010	            mov dword [rax + 0x10], r10d	      1207	cp-demangle.c	FUNCTION_15	IF_1
0x40008ff	        0x48894740	             mov qword [rdi + 0x40], rax	      3903	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_11	CALL_5
0x4000903	          0x4585c0	                           test r8d, r8d	      3905	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_12
0x4000906	     0xf84a8000000	                            je 0x40009b4	      3905	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_12
0x400090c	        0x4c8b4218	              mov r8, qword [rdx + 0x18]	      3907	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_12
0x4000910	          0x8b5220	            mov edx, dword [rdx + 0x20] 	      3908	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_12
0x4000913	           0x15748	             add dword [rdi + 0x48], edx	      3915	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10
0x4000916	            0x31c0	                            xor eax, eax	       934	cp-demangle.c	FUNCTION_3	IF_1
0x4000918	            0x39f1	                            cmp ecx, esi	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400091a	            0x7d29	                           jge 0x4000945	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400091c	          0x4863c1	                         movsxd rax, ecx	       935	cp-demangle.c	FUNCTION_3
0x400091f	          0x83c101	                              add ecx, 1	       937	cp-demangle.c	FUNCTION_3
0x4000922	        0x488d3440	                  lea rsi, [rax + rax*2]	       935	cp-demangle.c	FUNCTION_3
0x4000926	        0x488b4720	            mov rax, qword [rdi + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x400092a	        0x488d04f0	                  lea rax, [rax + rsi*8]	       935	cp-demangle.c	FUNCTION_3
0x400092e	    0xc74004000000	                  mov dword [rax + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x4000935	          0x894f28	             mov dword [rdi + 0x28], ecx	       937	cp-demangle.c	FUNCTION_3
0x4000938	    0xc70018000000	                   mov dword [rax], 0x18	      1205	cp-demangle.c	FUNCTION_15	IF_1
0x400093e	        0x4c894008	                 mov qword [rax + 8], r8	      1206	cp-demangle.c	FUNCTION_15	IF_1
0x4000942	          0x895010	             mov dword [rax + 0x10], edx	      1207	cp-demangle.c	FUNCTION_15	IF_1
0x4000945	        0x488b5718	            mov rdx, qword [rdi + 0x18] 	      3917	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	CALL_7
0x4000949	          0x803a42	                    cmp byte [rdx], 0x42	      3917	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	CALL_7
0x400094c	            0x742e	                            je 0x400097c	      3917	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	CALL_7
0x400094e	              0xc3	                                     ret	      3931	cp-demangle.c	FUNCTION_60
0x400094f	              0x90	                                     nop	      3931	cp-demangle.c	FUNCTION_60
0x4000950	            0x31c0	                            xor eax, eax	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x4000952	            0x89ca	                            mov edx, ecx	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x4000954	      0xe9e4feffff	                           jmp 0x400083d	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x4000959	     0xf1f80000000	                         nop dword [rax]	      3864	cp-demangle.c	FUNCTION_60	IF_2	IF_3	DO_1	CALL_3
0x4000960	          0x83c101	                              add ecx, 1	      3868	cp-demangle.c	FUNCTION_60	IF_2	IF_3
0x4000963	          0x3b4f38	            cmp ecx, dword [rdi + 0x38] 	      3871	cp-demangle.c	FUNCTION_60	IF_2	IF_7
0x4000966	     0xf835dfeffff	                           jae 0x40007c9	      3871	cp-demangle.c	FUNCTION_60	IF_2	IF_7
0x400096c	        0x488b4730	            mov rax, qword [rdi + 0x30] 	      3874	cp-demangle.c	FUNCTION_60	IF_2
0x4000970	        0x488b04c8	            mov rax, qword [rax + rcx*8]	      3874	cp-demangle.c	FUNCTION_60	IF_2
0x4000974	              0xc3	                                     ret	      3874	cp-demangle.c	FUNCTION_60	IF_2
0x4000975	           0xf1f00	                         nop dword [rax]	      3874	cp-demangle.c	FUNCTION_60	IF_2
0x4000978	            0x31c9	                            xor ecx, ecx	      3848	cp-demangle.c	FUNCTION_60	IF_2
0x400097a	            0xebe7	                           jmp 0x4000963	      3848	cp-demangle.c	FUNCTION_60	IF_2
0x400097c	              0x53	                                push rbx	      3837	cp-demangle.c	FUNCTION_60
0x400097d	          0x4889c6	                            mov rsi, rax	      3921	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	CALL_8
0x4000980	          0x4889fb	                            mov rbx, rdi	      3921	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	CALL_8
0x4000983	      0xe8d8fdffff	                     call sym.d_abi_tags	      3921	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	IF_13	CALL_8
0x4000988	          0x4885c0	                           test rax, rax	      3782	cp-demangle.c	FUNCTION_59	IF_1
0x400098b	            0x7433	                            je 0x40009c0	      3782	cp-demangle.c	FUNCTION_59	IF_1
0x400098d	          0x8b5338	            mov edx, dword [rbx + 0x38] 	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x4000990	          0x3b533c	            cmp edx, dword [rbx + 0x3c] 	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x4000993	            0x7d2b	                           jge 0x40009c0	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x4000995	        0x488b4b30	            mov rcx, qword [rbx + 0x30] 	      3786	cp-demangle.c	FUNCTION_59
0x4000999	          0x4863f2	                         movsxd rsi, edx	      3786	cp-demangle.c	FUNCTION_59
0x400099c	          0x83c201	                              add edx, 1	      3787	cp-demangle.c	FUNCTION_59
0x400099f	        0x488904f1	            mov qword [rcx + rsi*8], rax	      3786	cp-demangle.c	FUNCTION_59
0x40009a3	          0x895338	             mov dword [rbx + 0x38], edx	      3787	cp-demangle.c	FUNCTION_59
0x40009a6	              0x5b	                                 pop rbx	      3931	cp-demangle.c	FUNCTION_60
0x40009a7	            0xf3c3	                                     ret	      3931	cp-demangle.c	FUNCTION_60
0x40009a9	          0x8b772c	            mov esi, dword [rdi + 0x2c] 	      3931	cp-demangle.c	FUNCTION_60
0x40009ac	          0x8b4f28	            mov ecx, dword [rdi + 0x28] 	      3931	cp-demangle.c	FUNCTION_60
0x40009af	      0xe94fffffff	                           jmp 0x4000903	      3931	cp-demangle.c	FUNCTION_60
0x40009b4	        0x4c8b4208	                 mov r8, qword [rdx + 8]	      3912	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	ELSE_4
0x40009b8	          0x8b5210	            mov edx, dword [rdx + 0x10] 	      3913	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	ELSE_4
0x40009bb	      0xe953ffffff	                           jmp 0x4000913	      3913	cp-demangle.c	FUNCTION_60	ELSE_3	FOR_1	IF_10	ELSE_4
0x40009c0	            0x31c0	                            xor eax, eax	      3841	cp-demangle.c	FUNCTION_60	IF_1
0x40009c2	              0x5b	                                 pop rbx	      3931	cp-demangle.c	FUNCTION_60
0x40009c3	            0xebe2	                           jmp 0x40009a7	      3931	cp-demangle.c	FUNCTION_60
0x40009c5	          0x8d48bf	                   lea ecx, [rax - 0x41]	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x40009c8	            0x31d2	                            xor edx, edx	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x40009ca	          0x80f919	                            cmp cl, 0x19	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x40009cd	     0xf8635feffff	                           jbe 0x4000808	      3844	cp-demangle.c	FUNCTION_60	IF_2
0x40009d3	      0xe98afeffff	                           jmp 0x4000862	      3844	cp-demangle.c	FUNCTION_60	IF_2
d_print_mod	CALL,30:FOR,0:IF,4:ELSE,0:WHILE,0:DO,0:functions,0:SWITCH,1	480
0x4004e00	            0x8b02	                    mov eax, dword [rdx]	      5876	cp-demangle.c	FUNCTION_90	SWITCH_1
0x4004e02	          0x83e803	                              sub eax, 3	      5876	cp-demangle.c	FUNCTION_90	SWITCH_1
0x4004e05	          0x83f84c	                           cmp eax, 0x4c	      5876	cp-demangle.c	FUNCTION_90	SWITCH_1
0x4004e08	     0xf8732080000	                            ja 0x4005640	      5876	cp-demangle.c	FUNCTION_90	SWITCH_1
0x4004e0e	            0x4157	                                push r15	      5875	cp-demangle.c	FUNCTION_90
0x4004e10	            0x4156	                                push r14	      5875	cp-demangle.c	FUNCTION_90
0x4004e12	            0x4155	                                push r13	      5875	cp-demangle.c	FUNCTION_90
0x4004e14	            0x4154	                                push r12	      5875	cp-demangle.c	FUNCTION_90
0x4004e16	          0x4189f5	                           mov r13d, esi	      5875	cp-demangle.c	FUNCTION_90
0x4004e19	              0x55	                                push rbp	      5875	cp-demangle.c	FUNCTION_90
0x4004e1a	              0x53	                                push rbx	      5875	cp-demangle.c	FUNCTION_90
0x4004e1b	          0x4989d4	                            mov r12, rdx	      5875	cp-demangle.c	FUNCTION_90
0x4004e1e	          0x4889fb	                            mov rbx, rdi	      5875	cp-demangle.c	FUNCTION_90
0x4004e21	        0x4883ec08	                              sub rsp, 8	      5875	cp-demangle.c	FUNCTION_90
0x4004e25	    0xff24c5000000	                       jmp qword [rax*8]	      5876	cp-demangle.c	FUNCTION_90	SWITCH_1
0x4004e2c	         0xf1f4000	                         nop dword [rax]	      5876	cp-demangle.c	FUNCTION_90	SWITCH_1
0x4004e30	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      5876	cp-demangle.c	FUNCTION_90	SWITCH_1
0x4004e37	      0xbd00000000	                              mov ebp, 0	      5876	cp-demangle.c	FUNCTION_90	SWITCH_1
0x4004e3c	    0x41bf00000000	                             mov r15d, 0	      5876	cp-demangle.c	FUNCTION_90	SWITCH_1
0x4004e42	            0xeb2a	                           jmp 0x4004e6e	      5876	cp-demangle.c	FUNCTION_90	SWITCH_1
0x4004e44	         0xf1f4000	                         nop dword [rax]	      5876	cp-demangle.c	FUNCTION_90	SWITCH_1
0x4004e48	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004e4b	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004e4f	        0x4883c501	                              add rbp, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004e53	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4004e5a	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4004e5e	          0x4939ef	                            cmp r15, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004e61	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4004e68	     0xf849a060000	                            je 0x4005508	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004e6e	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004e74	      0x440fb67500	                  movzx r14d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4004e79	            0x75cd	                           jne 0x4004e48	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004e7b	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004e82	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004e89	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004e8e	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004e91	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004e97	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004e9f	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4004ea4	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4004ea6	            0xeba7	                           jmp 0x4004e4f	      4224	cp-demangle.c	FUNCTION_71
0x4004ea8	     0xf1f84000000	                   nop dword [rax + rax]	      4224	cp-demangle.c	FUNCTION_71
0x4004eb0	        0x488b5208	                mov rdx, qword [rdx + 8]	      5946	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_26
0x4004eb4	        0x4883c408	                              add rsp, 8	      5960	cp-demangle.c	FUNCTION_90
0x4004eb8	              0x5b	                                 pop rbx	      5960	cp-demangle.c	FUNCTION_90
0x4004eb9	              0x5d	                                 pop rbp	      5960	cp-demangle.c	FUNCTION_90
0x4004eba	            0x415c	                                 pop r12	      5960	cp-demangle.c	FUNCTION_90
0x4004ebc	            0x415d	                                 pop r13	      5960	cp-demangle.c	FUNCTION_90
0x4004ebe	            0x415e	                                 pop r14	      5960	cp-demangle.c	FUNCTION_90
0x4004ec0	            0x415f	                                 pop r15	      5960	cp-demangle.c	FUNCTION_90
0x4004ec2	      0xe989feffff	                    jmp sym.d_print_comp	      5957	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_30
0x4004ec7	    0x660f1f840000	                    nop word [rax + rax]	      5957	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_30
0x4004ed0	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      5957	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_30
0x4004ed7	      0xbd00000000	                              mov ebp, 0	      5957	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_30
0x4004edc	    0x41bd00000000	                             mov r13d, 0	      5957	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_30
0x4004ee2	            0xeb2a	                           jmp 0x4004f0e	      5957	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_30
0x4004ee4	         0xf1f4000	                         nop dword [rax]	      5957	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_30
0x4004ee8	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004eeb	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004eef	        0x4883c501	                              add rbp, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004ef3	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4004efa	        0x44882413	              mov byte [rbx + rdx], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4004efe	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004f01	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4004f08	     0xf8443020000	                            je 0x4005151	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004f0e	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004f14	      0x440fb66500	                  movzx r12d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4004f19	            0x75cd	                           jne 0x4004ee8	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004f1b	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004f22	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004f29	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004f2e	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004f31	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004f37	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004f3f	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4004f44	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4004f46	            0xeba7	                           jmp 0x4004eef	      4224	cp-demangle.c	FUNCTION_71
0x4004f48	     0xf1f84000000	                   nop dword [rax + rax]	      4224	cp-demangle.c	FUNCTION_71
0x4004f50	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x4004f57	      0xbd00000000	                              mov ebp, 0	      4224	cp-demangle.c	FUNCTION_71
0x4004f5c	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x4004f62	            0xeb2a	                           jmp 0x4004f8e	      4224	cp-demangle.c	FUNCTION_71
0x4004f64	         0xf1f4000	                         nop dword [rax]	      4224	cp-demangle.c	FUNCTION_71
0x4004f68	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004f6b	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004f6f	        0x4883c501	                              add rbp, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004f73	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4004f7a	        0x44882413	              mov byte [rbx + rdx], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4004f7e	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004f81	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4004f88	     0xf84c3010000	                            je 0x4005151	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4004f8e	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004f94	      0x440fb66500	                  movzx r12d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4004f99	            0x75cd	                           jne 0x4004f68	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004f9b	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004fa2	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004fa9	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004fae	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004fb1	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004fb7	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004fbf	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4004fc4	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4004fc6	            0xeba7	                           jmp 0x4004f6f	      4224	cp-demangle.c	FUNCTION_71
0x4004fc8	     0xf1f84000000	                   nop dword [rax + rax]	      4224	cp-demangle.c	FUNCTION_71
0x4004fd0	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x4004fd7	      0xbd00000000	                              mov ebp, 0	      4224	cp-demangle.c	FUNCTION_71
0x4004fdc	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x4004fe2	            0xeb2a	                           jmp 0x400500e	      4224	cp-demangle.c	FUNCTION_71
0x4004fe4	         0xf1f4000	                         nop dword [rax]	      4224	cp-demangle.c	FUNCTION_71
0x4004fe8	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004feb	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004fef	        0x4883c501	                              add rbp, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004ff3	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4004ffa	        0x44882413	              mov byte [rbx + rdx], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4004ffe	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005001	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4005008	     0xf8443010000	                            je 0x4005151	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400500e	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005014	      0x440fb66500	                  movzx r12d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4005019	            0x75cd	                           jne 0x4004fe8	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400501b	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005022	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005029	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400502e	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005031	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005037	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400503f	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4005044	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4005046	            0xeba7	                           jmp 0x4004fef	      4224	cp-demangle.c	FUNCTION_71
0x4005048	     0xf1f84000000	                   nop dword [rax + rax]	      4224	cp-demangle.c	FUNCTION_71
0x4005050	    0x488b97000100	           mov rdx, qword [rdi + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005057	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400505e	     0xf847d050000	                            je 0x40055e1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005064	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005068	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x400506f	        0xc6041320	              mov byte [rbx + rdx], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4005073	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x400507a	      0xe9b0000000	                           jmp 0x400512f	      4236	cp-demangle.c	FUNCTION_72
0x400507f	              0x90	                                     nop	      4236	cp-demangle.c	FUNCTION_72
0x4005080	    0x488b97000100	           mov rdx, qword [rdi + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005087	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400508e	     0xf8420050000	                            je 0x40055b4	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005094	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005098	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x400509f	        0xc6041320	              mov byte [rbx + rdx], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x40050a3	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x40050aa	      0xe9b8000000	                           jmp 0x4005167	      4236	cp-demangle.c	FUNCTION_72
0x40050af	              0x90	                                     nop	      4236	cp-demangle.c	FUNCTION_72
0x40050b0	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40050b7	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40050bd	     0xf84c4040000	                            je 0x4005587	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40050c3	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40050c7	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40050ce	          0x4489ee	                           mov esi, r13d	      5913	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_14
0x40050d1	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x40050d5	          0x4889df	                            mov rdi, rbx	      5913	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_14
0x40050d8	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x40050df	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      5913	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_14
0x40050e4	      0xe9cbfdffff	                           jmp 0x4004eb4	      5913	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_14
0x40050e9	     0xf1f80000000	                         nop dword [rax]	      5913	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_14
0x40050f0	        0x4183e504	                             and r13d, 4	      5917	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_3
0x40050f4	            0x755b	                           jne 0x4005151	      5917	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_3
0x40050f6	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40050fd	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005103	     0xf84a7050000	                            je 0x40056b0	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005109	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400510d	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4005114	        0xc604032a	              mov byte [rbx + rax], 0x2a	      4235	cp-demangle.c	FUNCTION_72
0x4005118	    0xc68308010000	           mov byte [rbx + 0x108], 0x2a 	      4236	cp-demangle.c	FUNCTION_72
0x400511f	            0xeb30	                           jmp 0x4005151	      4236	cp-demangle.c	FUNCTION_72
0x4005121	     0xf1f80000000	                         nop dword [rax]	      4236	cp-demangle.c	FUNCTION_72
0x4005128	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4236	cp-demangle.c	FUNCTION_72
0x400512f	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005135	     0xf840d050000	                            je 0x4005648	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400513b	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400513f	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4005146	        0xc6040326	              mov byte [rbx + rax], 0x26	      4235	cp-demangle.c	FUNCTION_72
0x400514a	    0xc68308010000	           mov byte [rbx + 0x108], 0x26 	      4236	cp-demangle.c	FUNCTION_72
0x4005151	        0x4883c408	                              add rsp, 8	      5960	cp-demangle.c	FUNCTION_90
0x4005155	              0x5b	                                 pop rbx	      5960	cp-demangle.c	FUNCTION_90
0x4005156	              0x5d	                                 pop rbp	      5960	cp-demangle.c	FUNCTION_90
0x4005157	            0x415c	                                 pop r12	      5960	cp-demangle.c	FUNCTION_90
0x4005159	            0x415d	                                 pop r13	      5960	cp-demangle.c	FUNCTION_90
0x400515b	            0x415e	                                 pop r14	      5960	cp-demangle.c	FUNCTION_90
0x400515d	            0x415f	                                 pop r15	      5960	cp-demangle.c	FUNCTION_90
0x400515f	              0xc3	                                     ret	      5960	cp-demangle.c	FUNCTION_90
0x4005160	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      5960	cp-demangle.c	FUNCTION_90
0x4005167	      0xbd00000000	                              mov ebp, 0	      5960	cp-demangle.c	FUNCTION_90
0x400516c	    0x41bd00000000	                             mov r13d, 0	      5960	cp-demangle.c	FUNCTION_90
0x4005172	            0xeb26	                           jmp 0x400519a	      5960	cp-demangle.c	FUNCTION_90
0x4005174	         0xf1f4000	                         nop dword [rax]	      5960	cp-demangle.c	FUNCTION_90
0x4005178	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400517b	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400517f	        0x4883c501	                              add rbp, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005183	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x400518a	        0x44882413	              mov byte [rbx + rdx], r12b	      4235	cp-demangle.c	FUNCTION_72
0x400518e	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005191	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4005198	            0x74b7	                            je 0x4005151	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400519a	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40051a0	      0x440fb66500	                  movzx r12d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40051a5	            0x75d1	                           jne 0x4005178	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40051a7	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40051ae	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40051b5	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40051ba	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40051bd	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40051c3	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40051cb	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x40051d0	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x40051d2	            0xebab	                           jmp 0x400517f	      4224	cp-demangle.c	FUNCTION_71
0x40051d4	         0xf1f4000	                         nop dword [rax]	      4224	cp-demangle.c	FUNCTION_71
0x40051d8	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x40051df	      0xbd00000000	                              mov ebp, 0	      4224	cp-demangle.c	FUNCTION_71
0x40051e4	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x40051ea	            0xeb2a	                           jmp 0x4005216	      4224	cp-demangle.c	FUNCTION_71
0x40051ec	         0xf1f4000	                         nop dword [rax]	      4224	cp-demangle.c	FUNCTION_71
0x40051f0	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40051f3	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40051f7	        0x4883c501	                              add rbp, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40051fb	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4005202	        0x44882413	              mov byte [rbx + rdx], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4005206	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005209	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4005210	     0xf843bffffff	                            je 0x4005151	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005216	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400521c	      0x440fb66500	                  movzx r12d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4005221	            0x75cd	                           jne 0x40051f0	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005223	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400522a	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005231	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005236	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005239	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400523f	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005247	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x400524c	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x400524e	            0xeba7	                           jmp 0x40051f7	      4224	cp-demangle.c	FUNCTION_71
0x4005250	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x4005257	      0xbd00000000	                              mov ebp, 0	      4224	cp-demangle.c	FUNCTION_71
0x400525c	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x4005262	            0xeb2a	                           jmp 0x400528e	      4224	cp-demangle.c	FUNCTION_71
0x4005264	         0xf1f4000	                         nop dword [rax]	      4224	cp-demangle.c	FUNCTION_71
0x4005268	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400526b	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400526f	        0x4883c501	                              add rbp, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005273	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x400527a	        0x44882413	              mov byte [rbx + rdx], r12b	      4235	cp-demangle.c	FUNCTION_72
0x400527e	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005281	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4005288	     0xf84c3feffff	                            je 0x4005151	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400528e	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005294	      0x440fb66500	                  movzx r12d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4005299	            0x75cd	                           jne 0x4005268	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400529b	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40052a2	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40052a9	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40052ae	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40052b1	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40052b7	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40052bf	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x40052c4	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x40052c6	            0xeba7	                           jmp 0x400526f	      4224	cp-demangle.c	FUNCTION_71
0x40052c8	     0xf1f84000000	                   nop dword [rax + rax]	      4224	cp-demangle.c	FUNCTION_71
0x40052d0	    0x80bf08010000	           cmp byte [rdi + 0x108], 0x28 	      5940	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_4	CALL_22
0x40052d7	            0x7429	                            je 0x4005302	      5940	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_4	CALL_22
0x40052d9	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40052e0	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40052e6	     0xf84f1030000	                            je 0x40056dd	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40052ec	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40052f0	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40052f7	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x40052fb	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4005302	      0x498b542408	                mov rdx, qword [r12 + 8]	      5942	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_24
0x4005307	          0x4489ee	                           mov esi, r13d	      5942	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_24
0x400530a	          0x4889df	                            mov rdi, rbx	      5942	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_24
0x400530d	      0xbd00000000	                              mov ebp, 0	      5942	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_24
0x4005312	    0x41bd00000000	                             mov r13d, 0	      5942	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_24
0x4005318	      0xe833faffff	                   call sym.d_print_comp	      5942	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_24
0x400531d	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      5942	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_24
0x4005324	            0xeb30	                           jmp 0x4005356	      5942	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_24
0x4005326	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5942	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_24
0x4005330	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005333	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005337	        0x4883c501	                              add rbp, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400533b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4005342	        0x44882413	              mov byte [rbx + rdx], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4005346	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005349	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4005350	     0xf84fbfdffff	                            je 0x4005151	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005356	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400535c	      0x440fb66500	                  movzx r12d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4005361	            0x75cd	                           jne 0x4005330	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005363	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400536a	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005371	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005376	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005379	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400537f	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005387	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x400538c	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x400538e	            0xeba7	                           jmp 0x4005337	      4224	cp-demangle.c	FUNCTION_71
0x4005390	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x4005397	      0xbd00000000	                              mov ebp, 0	      4224	cp-demangle.c	FUNCTION_71
0x400539c	    0x41bf00000000	                             mov r15d, 0	      4224	cp-demangle.c	FUNCTION_71
0x40053a2	            0xeb2a	                           jmp 0x40053ce	      4224	cp-demangle.c	FUNCTION_71
0x40053a4	         0xf1f4000	                         nop dword [rax]	      4224	cp-demangle.c	FUNCTION_71
0x40053a8	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40053ab	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40053af	        0x4883c501	                              add rbp, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40053b3	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40053ba	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x40053be	          0x4939ef	                            cmp r15, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40053c1	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x40053c8	     0xf84b2010000	                            je 0x4005580	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40053ce	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40053d4	      0x440fb67500	                  movzx r14d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40053d9	            0x75cd	                           jne 0x40053a8	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40053db	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40053e2	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40053e9	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40053ee	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40053f1	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40053f7	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40053ff	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4005404	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4005406	            0xeba7	                           jmp 0x40053af	      4224	cp-demangle.c	FUNCTION_71
0x4005408	     0xf1f84000000	                   nop dword [rax + rax]	      4224	cp-demangle.c	FUNCTION_71
0x4005410	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x4005417	      0xbd00000000	                              mov ebp, 0	      4224	cp-demangle.c	FUNCTION_71
0x400541c	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x4005422	            0xeb2a	                           jmp 0x400544e	      4224	cp-demangle.c	FUNCTION_71
0x4005424	         0xf1f4000	                         nop dword [rax]	      4224	cp-demangle.c	FUNCTION_71
0x4005428	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400542b	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400542f	        0x4883c501	                              add rbp, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005433	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x400543a	        0x44882413	              mov byte [rbx + rdx], r12b	      4235	cp-demangle.c	FUNCTION_72
0x400543e	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005441	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4005448	     0xf8403fdffff	                            je 0x4005151	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400544e	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005454	      0x440fb66500	                  movzx r12d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4005459	            0x75cd	                           jne 0x4005428	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400545b	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005462	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005469	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400546e	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005471	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005477	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400547f	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4005484	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4005486	            0xeba7	                           jmp 0x400542f	      4224	cp-demangle.c	FUNCTION_71
0x4005488	     0xf1f84000000	                   nop dword [rax + rax]	      4224	cp-demangle.c	FUNCTION_71
0x4005490	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x4005497	      0xbd00000000	                              mov ebp, 0	      4224	cp-demangle.c	FUNCTION_71
0x400549c	    0x41bf00000000	                             mov r15d, 0	      4224	cp-demangle.c	FUNCTION_71
0x40054a2	            0xeb26	                           jmp 0x40054ca	      4224	cp-demangle.c	FUNCTION_71
0x40054a4	         0xf1f4000	                         nop dword [rax]	      4224	cp-demangle.c	FUNCTION_71
0x40054a8	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40054ab	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40054af	        0x4883c501	                              add rbp, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40054b3	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40054ba	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x40054be	          0x4939ef	                            cmp r15, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40054c1	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x40054c8	            0x743e	                            je 0x4005508	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40054ca	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40054d0	      0x440fb67500	                  movzx r14d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40054d5	            0x75d1	                           jne 0x40054a8	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40054d7	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40054de	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40054e5	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40054ea	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40054ed	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40054f3	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40054fb	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4005500	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4005502	            0xebab	                           jmp 0x40054af	      4224	cp-demangle.c	FUNCTION_71
0x4005504	         0xf1f4000	                         nop dword [rax]	      4224	cp-demangle.c	FUNCTION_71
0x4005508	    0x49837c241000	               cmp qword [r12 + 0x10], 0	      5904	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2
0x400550e	     0xf843dfcffff	                            je 0x4005151	      5904	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2
0x4005514	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400551a	     0xf8460010000	                            je 0x4005680	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005520	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005524	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400552b	        0xc6040328	              mov byte [rbx + rax], 0x28	      4235	cp-demangle.c	FUNCTION_72
0x400552f	    0xc68308010000	           mov byte [rbx + 0x108], 0x28 	      4236	cp-demangle.c	FUNCTION_72
0x4005536	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      5907	cp-demangle.c	FUNCTION_90	SWITCH_1	IF_2	CALL_11
0x400553b	          0x4489ee	                           mov esi, r13d	      5950	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_28
0x400553e	          0x4889df	                            mov rdi, rbx	      5950	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_28
0x4005541	      0xe80af8ffff	                   call sym.d_print_comp	      5950	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_28
0x4005546	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400554d	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005553	     0xf84b7000000	                            je 0x4005610	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005559	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400555d	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4005564	        0xc6040329	              mov byte [rbx + rax], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x4005568	    0xc68308010000	           mov byte [rbx + 0x108], 0x29 	      4236	cp-demangle.c	FUNCTION_72
0x400556f	        0x4883c408	                              add rsp, 8	      5960	cp-demangle.c	FUNCTION_90
0x4005573	              0x5b	                                 pop rbx	      5960	cp-demangle.c	FUNCTION_90
0x4005574	              0x5d	                                 pop rbp	      5960	cp-demangle.c	FUNCTION_90
0x4005575	            0x415c	                                 pop r12	      5960	cp-demangle.c	FUNCTION_90
0x4005577	            0x415d	                                 pop r13	      5960	cp-demangle.c	FUNCTION_90
0x4005579	            0x415e	                                 pop r14	      5960	cp-demangle.c	FUNCTION_90
0x400557b	            0x415f	                                 pop r15	      5960	cp-demangle.c	FUNCTION_90
0x400557d	              0xc3	                                     ret	      5960	cp-demangle.c	FUNCTION_90
0x400557e	            0x6690	                                     nop	      5960	cp-demangle.c	FUNCTION_90
0x4005580	      0x498b542408	                mov rdx, qword [r12 + 8]	      5950	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_28
0x4005585	            0xebb4	                           jmp 0x400553b	      5950	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_28
0x4005587	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400558e	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005595	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400559a	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40055a0	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40055a8	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x40055ad	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x40055af	      0xe913fbffff	                           jmp 0x40050c7	      4224	cp-demangle.c	FUNCTION_71
0x40055b4	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40055bb	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40055c2	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40055c7	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40055cd	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40055d5	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x40055da	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x40055dc	      0xe9b7faffff	                           jmp 0x4005098	      4224	cp-demangle.c	FUNCTION_71
0x40055e1	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40055e8	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40055ef	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40055f4	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40055fa	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005602	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4005607	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4005609	      0xe95afaffff	                           jmp 0x4005068	      4224	cp-demangle.c	FUNCTION_71
0x400560e	            0x6690	                                     nop	      4224	cp-demangle.c	FUNCTION_71
0x4005610	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005617	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400561e	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005623	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005626	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400562c	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005634	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4005639	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x400563b	      0xe91dffffff	                           jmp 0x400555d	      4224	cp-demangle.c	FUNCTION_71
0x4005640	      0xe90bf7ffff	                    jmp sym.d_print_comp	      5957	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_30
0x4005645	           0xf1f00	                         nop dword [rax]	      5957	cp-demangle.c	FUNCTION_90	SWITCH_1	CALL_30
0x4005648	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400564f	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005656	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400565b	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400565e	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005664	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400566c	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4005671	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4005673	      0xe9c7faffff	                           jmp 0x400513f	      4224	cp-demangle.c	FUNCTION_71
0x4005678	     0xf1f84000000	                   nop dword [rax + rax]	      4224	cp-demangle.c	FUNCTION_71
0x4005680	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005687	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400568e	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005693	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005696	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400569c	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40056a4	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x40056a9	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x40056ab	      0xe974feffff	                           jmp 0x4005524	      4224	cp-demangle.c	FUNCTION_71
0x40056b0	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40056b7	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40056be	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40056c3	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40056c9	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40056d1	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x40056d6	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x40056d8	      0xe930faffff	                           jmp 0x400510d	      4224	cp-demangle.c	FUNCTION_71
0x40056dd	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40056e4	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40056eb	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40056f0	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40056f6	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40056fe	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4005703	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4005705	      0xe9e6fbffff	                           jmp 0x40052f0	      4224	cp-demangle.c	FUNCTION_71
d_ref_qualifier	CALL,3:FOR,0:IF,2:ELSE,1:WHILE,0:DO,0:functions,0:SWITCH,0	25
0x40000b0	        0x488b4f18	            mov rcx, qword [rdi + 0x18] 	      2819	cp-demangle.c	FUNCTION_36	CALL_1
0x40000b4	          0x4889f2	                            mov rdx, rsi	      2815	cp-demangle.c	FUNCTION_36
0x40000b7	        0x440fb601	                   movzx r8d, byte [rcx]	      2819	cp-demangle.c	FUNCTION_36	CALL_1
0x40000bb	        0x4180f852	                           cmp r8b, 0x52	      2820	cp-demangle.c	FUNCTION_36	IF_1
0x40000bf	            0x740f	                            je 0x40000d0	      2820	cp-demangle.c	FUNCTION_36	IF_1
0x40000c1	        0x4180f84f	                           cmp r8b, 0x4f	      2820	cp-demangle.c	FUNCTION_36	IF_1
0x40000c5	            0x7409	                            je 0x40000d0	      2820	cp-demangle.c	FUNCTION_36	IF_1
0x40000c7	          0x4889f0	                            mov rax, rsi	      2839	cp-demangle.c	FUNCTION_36
0x40000ca	              0xc3	                                     ret	      2839	cp-demangle.c	FUNCTION_36
0x40000cb	       0xf1f440000	                   nop dword [rax + rax]	      2839	cp-demangle.c	FUNCTION_36
0x40000d0	        0x4180f852	                           cmp r8b, 0x52	      2823	cp-demangle.c	FUNCTION_36	IF_1	IF_2
0x40000d4	            0x741a	                            je 0x40000f0	      2823	cp-demangle.c	FUNCTION_36	IF_1	IF_2
0x40000d6	        0x83474803	               add dword [rdi + 0x48], 3	      2831	cp-demangle.c	FUNCTION_36	IF_1	ELSE_1
0x40000da	        0x4883c101	                              add rcx, 1	      2833	cp-demangle.c	FUNCTION_36	IF_1	CALL_2
0x40000de	      0xbe20000000	                           mov esi, 0x20	      2830	cp-demangle.c	FUNCTION_36	IF_1	ELSE_1
0x40000e3	        0x48894f18	             mov qword [rdi + 0x18], rcx	      2833	cp-demangle.c	FUNCTION_36	IF_1	CALL_2
0x40000e7	            0x31c9	                            xor ecx, ecx	      2835	cp-demangle.c	FUNCTION_36	IF_1	CALL_3
0x40000e9	      0xe952ffffff	                     jmp sym.d_make_comp	      2835	cp-demangle.c	FUNCTION_36	IF_1	CALL_3
0x40000ee	            0x6690	                                     nop	      2835	cp-demangle.c	FUNCTION_36	IF_1	CALL_3
0x40000f0	        0x83474802	               add dword [rdi + 0x48], 2	      2826	cp-demangle.c	FUNCTION_36	IF_1	IF_2
0x40000f4	        0x4883c101	                              add rcx, 1	      2833	cp-demangle.c	FUNCTION_36	IF_1	CALL_2
0x40000f8	      0xbe1f000000	                           mov esi, 0x1f	      2825	cp-demangle.c	FUNCTION_36	IF_1	IF_2
0x40000fd	        0x48894f18	             mov qword [rdi + 0x18], rcx	      2833	cp-demangle.c	FUNCTION_36	IF_1	CALL_2
0x4000101	            0x31c9	                            xor ecx, ecx	      2835	cp-demangle.c	FUNCTION_36	IF_1	CALL_3
0x4000103	      0xe938ffffff	                     jmp sym.d_make_comp	      2835	cp-demangle.c	FUNCTION_36	IF_1	CALL_3
cplus_demangle_v3_callback	CALL,1:FOR,0:IF,0:ELSE,0:WHILE,0:DO,0:functions,0:SWITCH,0	1
0x400a2e0	      0xe9fbfaffff	             jmp sym.d_demangle_callback	      6463	cp-demangle.c	FUNCTION_101	CALL_1
d_abi_tags	CALL,4:FOR,0:IF,0:ELSE,0:WHILE,1:DO,0:functions,0:SWITCH,0	29
0x4000760	            0x4154	                                push r12	      1366	cp-demangle.c	ELSE_4	FUNCTION_19
0x4000762	              0x55	                                push rbp	      1366	cp-demangle.c	ELSE_4	FUNCTION_19
0x4000763	          0x4889f5	                            mov rbp, rsi	      1366	cp-demangle.c	ELSE_4	FUNCTION_19
0x4000766	              0x53	                                push rbx	      1366	cp-demangle.c	ELSE_4	FUNCTION_19
0x4000767	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      1373	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_1
0x400076b	          0x4889fb	                            mov rbx, rdi	      1366	cp-demangle.c	ELSE_4	FUNCTION_19
0x400076e	        0x4c8b6740	            mov r12, qword [rdi + 0x40] 	      1371	cp-demangle.c	ELSE_4	FUNCTION_19
0x4000772	          0x803842	                    cmp byte [rax], 0x42	      1373	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_1
0x4000775	            0x7538	                           jne 0x40007af	      1373	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_1
0x4000777	    0x660f1f840000	                    nop word [rax + rax]	      1373	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_1
0x4000780	        0x4883c001	                              add rax, 1	      1377	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_2
0x4000784	          0x4889df	                            mov rdi, rbx	      1378	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_3
0x4000787	        0x48894318	             mov qword [rbx + 0x18], rax	      1377	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_2
0x400078b	      0xe8f0feffff	                  call sym.d_source_name	      1378	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_3
0x4000790	          0x4889ea	                            mov rdx, rbp	      1379	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_4
0x4000793	          0x4889c1	                            mov rcx, rax	      1379	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_4
0x4000796	      0xbe4b000000	                           mov esi, 0x4b	      1379	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_4
0x400079b	          0x4889df	                            mov rdi, rbx	      1379	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_4
0x400079e	      0xe89df8ffff	                    call sym.d_make_comp	      1379	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_4
0x40007a3	          0x4889c5	                            mov rbp, rax	      1379	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_4
0x40007a6	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1373	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_1
0x40007aa	          0x803842	                    cmp byte [rax], 0x42	      1373	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_1
0x40007ad	            0x74d1	                            je 0x4000780	      1373	cp-demangle.c	ELSE_4	FUNCTION_19	WHILE_1	CALL_1
0x40007af	        0x4c896340	             mov qword [rbx + 0x40], r12	      1382	cp-demangle.c	ELSE_4	FUNCTION_19
0x40007b3	          0x4889e8	                            mov rax, rbp	      1385	cp-demangle.c	ELSE_4	FUNCTION_19
0x40007b6	              0x5b	                                 pop rbx	      1385	cp-demangle.c	ELSE_4	FUNCTION_19
0x40007b7	              0x5d	                                 pop rbp	      1385	cp-demangle.c	ELSE_4	FUNCTION_19
0x40007b8	            0x415c	                                 pop r12	      1385	cp-demangle.c	ELSE_4	FUNCTION_19
0x40007ba	              0xc3	                                     ret	      1385	cp-demangle.c	ELSE_4	FUNCTION_19
d_cv_qualifiers	CALL,10:FOR,0:IF,13:ELSE,6:WHILE,2:DO,0:functions,0:SWITCH,1	160
0x40088d0	            0x4157	                                push r15	      2708	cp-demangle.c	FUNCTION_35
0x40088d2	            0x4156	                                push r14	      2708	cp-demangle.c	FUNCTION_35
0x40088d4	          0x4989ff	                            mov r15, rdi	      2708	cp-demangle.c	FUNCTION_35
0x40088d7	            0x4155	                                push r13	      2708	cp-demangle.c	FUNCTION_35
0x40088d9	            0x4154	                                push r12	      2708	cp-demangle.c	FUNCTION_35
0x40088db	              0x55	                                push rbp	      2708	cp-demangle.c	FUNCTION_35
0x40088dc	              0x53	                                push rbx	      2708	cp-demangle.c	FUNCTION_35
0x40088dd	          0x4889f5	                            mov rbp, rsi	      2708	cp-demangle.c	FUNCTION_35
0x40088e0	          0x4889eb	                            mov rbx, rbp	      2714	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_2
0x40088e3	        0x4883ec18	                           sub rsp, 0x18	      2708	cp-demangle.c	FUNCTION_35
0x40088e7	          0x83fa01	                              cmp edx, 1	      2708	cp-demangle.c	FUNCTION_35
0x40088ea	        0x488b7718	            mov rsi, qword [rdi + 0x18] 	      2713	cp-demangle.c	FUNCTION_35	CALL_1
0x40088ee	          0x4519e4	                          sbb r12d, r12d	      2713	cp-demangle.c	FUNCTION_35	CALL_1
0x40088f1	        0x89542408	                mov dword [rsp + 8], edx	      2708	cp-demangle.c	FUNCTION_35
0x40088f5	        0x4183e4fd	                    and r12d, 0xfffffffd	      2708	cp-demangle.c	FUNCTION_35
0x40088f9	        0x4183c41c	                          add r12d, 0x1c	      2708	cp-demangle.c	FUNCTION_35
0x40088fd	          0x83fa01	                              cmp edx, 1	      2708	cp-demangle.c	FUNCTION_35
0x4008900	        0x440fb60e	                   movzx r9d, byte [rsi]	      2713	cp-demangle.c	FUNCTION_35	CALL_1
0x4008904	          0x4519ed	                          sbb r13d, r13d	      2713	cp-demangle.c	FUNCTION_35	CALL_1
0x4008907	        0x4183e5fd	                    and r13d, 0xfffffffd	      2713	cp-demangle.c	FUNCTION_35	CALL_1
0x400890b	        0x4183c51d	                          add r13d, 0x1d	      2713	cp-demangle.c	FUNCTION_35	CALL_1
0x400890f	          0x83fa01	                              cmp edx, 1	      2713	cp-demangle.c	FUNCTION_35	CALL_1
0x4008912	          0x4519f6	                          sbb r14d, r14d	      2713	cp-demangle.c	FUNCTION_35	CALL_1
0x4008915	        0x4183e6fd	                    and r14d, 0xfffffffd	      2713	cp-demangle.c	FUNCTION_35	CALL_1
0x4008919	        0x4183c61e	                          add r14d, 0x1e	      2713	cp-demangle.c	FUNCTION_35	CALL_1
0x400891d	            0xeb5f	                           jmp 0x400897e	      2714	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_2
0x400891f	              0x90	                                     nop	      2714	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_2
0x4008920	        0x4180f956	                           cmp r9b, 0x56	      2727	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_1	IF_2
0x4008924	     0xf84ae000000	                            je 0x40089d8	      2727	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_1	IF_2
0x400892a	        0x4180f94b	                           cmp r9b, 0x4b	      2734	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_2	IF_3
0x400892e	     0xf84bc000000	                            je 0x40089f0	      2734	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_2	IF_3
0x4008934	        0x807e0100	                   cmp byte [rsi + 1], 0	      2743	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	CALL_4
0x4008938	     0xf8484000000	                            je 0x40089c2	      2743	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	CALL_4
0x400893e	        0x488d4602	                      lea rax, [rsi + 2]	      2743	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	CALL_4
0x4008942	        0x49894718	             mov qword [r15 + 0x18], rax	      2743	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	CALL_4
0x4008946	         0xfb64601	               movzx eax, byte [rsi + 1]	      2743	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	CALL_4
0x400894a	            0x3c78	                            cmp al, 0x78	      2744	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	IF_4
0x400894c	            0x7562	                           jne 0x40089b0	      2744	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	IF_4
0x400894e	      0x4183474811	            add dword [r15 + 0x48], 0x11	      2747	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	IF_4
0x4008953	            0x31c9	                            xor ecx, ecx	      2717	cp-demangle.c	FUNCTION_35	WHILE_1
0x4008955	      0xbe4c000000	                           mov esi, 0x4c	      2746	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	IF_4
0x400895a	    0x660f1f440000	                    nop word [rax + rax]	      2746	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	IF_4
0x4008960	            0x31d2	                            xor edx, edx	      2777	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_9
0x4008962	          0x4c89ff	                            mov rdi, r15	      2777	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_9
0x4008965	      0xe8d676ffff	                    call sym.d_make_comp	      2777	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_9
0x400896a	          0x4885c0	                           test rax, rax	      2778	cp-demangle.c	FUNCTION_35	WHILE_1	IF_12
0x400896d	          0x488903	                    mov qword [rbx], rax	      2777	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_9
0x4008970	            0x7450	                            je 0x40089c2	      2778	cp-demangle.c	FUNCTION_35	WHILE_1	IF_12
0x4008972	        0x498b7718	            mov rsi, qword [r15 + 0x18] 	      2782	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_10
0x4008976	        0x488d5808	                      lea rbx, [rax + 8]	      2780	cp-demangle.c	FUNCTION_35	WHILE_1
0x400897a	        0x440fb60e	                   movzx r9d, byte [rsi]	      2782	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_10
0x400897e	          0x4889f7	                            mov rdi, rsi	      2714	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_2
0x4008981	      0xe80a7bffff	       call sym.next_is_type_qual.isra.2	      2714	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_2
0x4008986	            0x85c0	                           test eax, eax	      2714	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_2
0x4008988	     0xf840a010000	                            je 0x4008a98	      2714	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_2
0x400898e	        0x488d4601	                      lea rax, [rsi + 1]	      2719	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_3
0x4008992	        0x4180f972	                           cmp r9b, 0x72	      2720	cp-demangle.c	FUNCTION_35	WHILE_1	IF_1
0x4008996	        0x49894718	             mov qword [r15 + 0x18], rax	      2719	cp-demangle.c	FUNCTION_35	WHILE_1	CALL_3
0x400899a	            0x7584	                           jne 0x4008920	      2720	cp-demangle.c	FUNCTION_35	WHILE_1	IF_1
0x400899c	      0x4183474809	               add dword [r15 + 0x48], 9	      2725	cp-demangle.c	FUNCTION_35	WHILE_1	IF_1
0x40089a1	          0x4489e6	                           mov esi, r12d	      2722	cp-demangle.c	FUNCTION_35	WHILE_1	IF_1
0x40089a4	            0x31c9	                            xor ecx, ecx	      2717	cp-demangle.c	FUNCTION_35	WHILE_1
0x40089a6	            0xebb8	                           jmp 0x4008960	      2717	cp-demangle.c	FUNCTION_35	WHILE_1
0x40089a8	     0xf1f84000000	                   nop dword [rax + rax]	      2717	cp-demangle.c	FUNCTION_35	WHILE_1
0x40089b0	            0x89c2	                            mov edx, eax	      2749	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5
0x40089b2	          0x83e2df	                     and edx, 0xffffffdf	      2749	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5
0x40089b5	          0x80fa4f	                            cmp dl, 0x4f	      2749	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5
0x40089b8	            0x7446	                            je 0x4008a00	      2749	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5
0x40089ba	            0x3c77	                            cmp al, 0x77	      2763	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9
0x40089bc	     0xf8499000000	                            je 0x4008a5b	      2763	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9
0x40089c2	        0x4883c418	                           add rsp, 0x18	      2808	cp-demangle.c	FUNCTION_35
0x40089c6	            0x31c0	                            xor eax, eax	      2774	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_6
0x40089c8	              0x5b	                                 pop rbx	      2808	cp-demangle.c	FUNCTION_35
0x40089c9	              0x5d	                                 pop rbp	      2808	cp-demangle.c	FUNCTION_35
0x40089ca	            0x415c	                                 pop r12	      2808	cp-demangle.c	FUNCTION_35
0x40089cc	            0x415d	                                 pop r13	      2808	cp-demangle.c	FUNCTION_35
0x40089ce	            0x415e	                                 pop r14	      2808	cp-demangle.c	FUNCTION_35
0x40089d0	            0x415f	                                 pop r15	      2808	cp-demangle.c	FUNCTION_35
0x40089d2	              0xc3	                                     ret	      2808	cp-demangle.c	FUNCTION_35
0x40089d3	       0xf1f440000	                   nop dword [rax + rax]	      2808	cp-demangle.c	FUNCTION_35
0x40089d8	      0x4183474809	               add dword [r15 + 0x48], 9	      2732	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_1	IF_2
0x40089dd	          0x4489ee	                           mov esi, r13d	      2729	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_1	IF_2
0x40089e0	            0x31c9	                            xor ecx, ecx	      2717	cp-demangle.c	FUNCTION_35	WHILE_1
0x40089e2	      0xe979ffffff	                           jmp 0x4008960	      2717	cp-demangle.c	FUNCTION_35	WHILE_1
0x40089e7	    0x660f1f840000	                    nop word [rax + rax]	      2717	cp-demangle.c	FUNCTION_35	WHILE_1
0x40089f0	      0x4183474806	               add dword [r15 + 0x48], 6	      2739	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_2	IF_3
0x40089f5	          0x4489f6	                           mov esi, r14d	      2736	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_2	IF_3
0x40089f8	            0x31c9	                            xor ecx, ecx	      2717	cp-demangle.c	FUNCTION_35	WHILE_1
0x40089fa	      0xe961ffffff	                           jmp 0x4008960	      2717	cp-demangle.c	FUNCTION_35	WHILE_1
0x40089ff	              0x90	                                     nop	      2717	cp-demangle.c	FUNCTION_35	WHILE_1
0x4008a00	      0x4183474809	               add dword [r15 + 0x48], 9	      2753	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5
0x4008a05	            0x31c9	                            xor ecx, ecx	      2717	cp-demangle.c	FUNCTION_35	WHILE_1
0x4008a07	            0x3c4f	                            cmp al, 0x4f	      2754	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6
0x4008a09	      0xbe4e000000	                           mov esi, 0x4e	      2752	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5
0x4008a0e	     0xf854cffffff	                           jne 0x4008960	      2754	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6
0x4008a14	        0x418b574c	            mov edx, dword [r15 + 0x4c] 	      3505	cp-demangle.c	FUNCTION_52
0x4008a18	          0x4c89ff	                            mov rdi, r15	      3508	cp-demangle.c	FUNCTION_52	CALL_1
0x4008a1b	    0x41c7474c0100	               mov dword [r15 + 0x4c], 1	      3507	cp-demangle.c	FUNCTION_52
0x4008a23	        0x8954240c	              mov dword [rsp + 0xc], edx	      3505	cp-demangle.c	FUNCTION_52
0x4008a27	      0xe804f8ffff	                 call sym.d_expression_1	      3508	cp-demangle.c	FUNCTION_52	CALL_1
0x4008a2c	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      3509	cp-demangle.c	FUNCTION_52
0x4008a30	          0x4885c0	                           test rax, rax	      2757	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_7
0x4008a33	          0x4889c1	                            mov rcx, rax	      3508	cp-demangle.c	FUNCTION_52	CALL_1
0x4008a36	        0x4189574c	             mov dword [r15 + 0x4c], edx	      3509	cp-demangle.c	FUNCTION_52
0x4008a3a	            0x7486	                            je 0x40089c2	      2757	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_7
0x4008a3c	        0x498b4718	            mov rax, qword [r15 + 0x18] 	      2759	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8	CALL_6
0x4008a40	          0x803845	                    cmp byte [rax], 0x45	      2759	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8	CALL_6
0x4008a43	     0xf8579ffffff	                           jne 0x40089c2	      2759	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8	CALL_6
0x4008a49	        0x4883c001	                              add rax, 1	      2759	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8	CALL_6
0x4008a4d	      0xbe4e000000	                           mov esi, 0x4e	      2752	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5
0x4008a52	        0x49894718	             mov qword [r15 + 0x18], rax	      2759	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8	CALL_6
0x4008a56	      0xe905ffffff	                           jmp 0x4008960	      2759	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_4	IF_5	IF_6	IF_8	CALL_6
0x4008a5b	      0x4183474806	               add dword [r15 + 0x48], 6	      2766	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9
0x4008a60	          0x4c89ff	                            mov rdi, r15	      2767	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	CALL_7
0x4008a63	      0xe8e8e8ffff	                     call sym.d_parmlist	      2767	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	CALL_7
0x4008a68	          0x4885c0	                           test rax, rax	      2768	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_10
0x4008a6b	          0x4889c1	                            mov rcx, rax	      2767	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	CALL_7
0x4008a6e	     0xf844effffff	                            je 0x40089c2	      2768	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_10
0x4008a74	        0x498b4718	            mov rax, qword [r15 + 0x18] 	      2770	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11	CALL_8
0x4008a78	          0x803845	                    cmp byte [rax], 0x45	      2770	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11	CALL_8
0x4008a7b	     0xf8541ffffff	                           jne 0x40089c2	      2770	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11	CALL_8
0x4008a81	        0x4883c001	                              add rax, 1	      2770	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11	CALL_8
0x4008a85	      0xbe4f000000	                           mov esi, 0x4f	      2765	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9
0x4008a8a	        0x49894718	             mov qword [r15 + 0x18], rax	      2770	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11	CALL_8
0x4008a8e	      0xe9cdfeffff	                           jmp 0x4008960	      2770	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11	CALL_8
0x4008a93	       0xf1f440000	                   nop dword [rax + rax]	      2770	cp-demangle.c	FUNCTION_35	WHILE_1	ELSE_3	ELSE_5	IF_9	IF_11	CALL_8
0x4008a98	        0x8b442408	                mov eax, dword [rsp + 8]	      2785	cp-demangle.c	FUNCTION_35	IF_13
0x4008a9c	            0x85c0	                           test eax, eax	      2785	cp-demangle.c	FUNCTION_35	IF_13
0x4008a9e	            0x7550	                           jne 0x4008af0	      2785	cp-demangle.c	FUNCTION_35	IF_13
0x4008aa0	        0x4180f946	                           cmp r9b, 0x46	      2785	cp-demangle.c	FUNCTION_35	IF_13
0x4008aa4	            0x741f	                            je 0x4008ac5	      2785	cp-demangle.c	FUNCTION_35	IF_13
0x4008aa6	            0xeb48	                           jmp 0x4008af0	      2785	cp-demangle.c	FUNCTION_35	IF_13
0x4008aa8	     0xf1f84000000	                   nop dword [rax + rax]	      2785	cp-demangle.c	FUNCTION_35	IF_13
0x4008ab0	          0x83f81b	                           cmp eax, 0x1b	      2789	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4008ab3	            0x742b	                            je 0x4008ae0	      2789	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4008ab5	          0x83f819	                           cmp eax, 0x19	      2789	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4008ab8	            0x7507	                           jne 0x4008ac1	      2789	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4008aba	    0xc745001c0000	                   mov dword [rbp], 0x1c	      2792	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4008ac1	        0x4883c508	                              add rbp, 8	      2803	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2
0x4008ac5	          0x4839eb	                            cmp rbx, rbp	      2787	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2
0x4008ac8	            0x7426	                            je 0x4008af0	      2787	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2
0x4008aca	        0x488b6d00	                    mov rbp, qword [rbp]	      2789	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4008ace	          0x8b4500	                    mov eax, dword [rbp]	      2789	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4008ad1	          0x83f81a	                           cmp eax, 0x1a	      2789	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4008ad4	            0x75da	                           jne 0x4008ab0	      2789	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4008ad6	    0xc745001d0000	                   mov dword [rbp], 0x1d	      2795	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4008add	            0xebe2	                           jmp 0x4008ac1	      2796	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4008adf	              0x90	                                     nop	      2796	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4008ae0	    0xc745001e0000	                   mov dword [rbp], 0x1e	      2798	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4008ae7	            0xebd8	                           jmp 0x4008ac1	      2799	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4008ae9	     0xf1f80000000	                         nop dword [rax]	      2799	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2	SWITCH_1
0x4008af0	        0x4883c418	                           add rsp, 0x18	      2808	cp-demangle.c	FUNCTION_35
0x4008af4	          0x4889d8	                            mov rax, rbx	      2787	cp-demangle.c	FUNCTION_35	IF_13	WHILE_2
0x4008af7	              0x5b	                                 pop rbx	      2808	cp-demangle.c	FUNCTION_35
0x4008af8	              0x5d	                                 pop rbp	      2808	cp-demangle.c	FUNCTION_35
0x4008af9	            0x415c	                                 pop r12	      2808	cp-demangle.c	FUNCTION_35
0x4008afb	            0x415d	                                 pop r13	      2808	cp-demangle.c	FUNCTION_35
0x4008afd	            0x415e	                                 pop r14	      2808	cp-demangle.c	FUNCTION_35
0x4008aff	            0x415f	                                 pop r15	      2808	cp-demangle.c	FUNCTION_35
0x4008b01	              0xc3	                                     ret	      2808	cp-demangle.c	FUNCTION_35
d_template_param	CALL,3:FOR,0:IF,2:ELSE,0:WHILE,0:DO,0:functions,0:SWITCH,0	33
0x4000390	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      3092	cp-demangle.c	FUNCTION_45	IF_1	CALL_1
0x4000394	          0x803854	                    cmp byte [rax], 0x54	      3092	cp-demangle.c	FUNCTION_45	IF_1	CALL_1
0x4000397	            0x7407	                            je 0x40003a0	      3092	cp-demangle.c	FUNCTION_45	IF_1	CALL_1
0x4000399	            0x31c0	                            xor eax, eax	      3093	cp-demangle.c	FUNCTION_45	IF_1
0x400039b	              0xc3	                                     ret	      3100	cp-demangle.c	FUNCTION_45
0x400039c	         0xf1f4000	                         nop dword [rax]	      3100	cp-demangle.c	FUNCTION_45
0x40003a0	        0x4883c001	                              add rax, 1	      3092	cp-demangle.c	FUNCTION_45	IF_1	CALL_1
0x40003a4	              0x53	                                push rbx	      3089	cp-demangle.c	FUNCTION_45
0x40003a5	          0x4889fb	                            mov rbx, rdi	      3089	cp-demangle.c	FUNCTION_45
0x40003a8	        0x48894718	             mov qword [rdi + 0x18], rax	      3092	cp-demangle.c	FUNCTION_45	IF_1	CALL_1
0x40003ac	      0xe88fffffff	               call sym.d_compact_number	      3095	cp-demangle.c	FUNCTION_45	CALL_2
0x40003b1	            0x85c0	                           test eax, eax	      3096	cp-demangle.c	FUNCTION_45	IF_2
0x40003b3	            0x7808	                            js 0x40003bd	      3096	cp-demangle.c	FUNCTION_45	IF_2
0x40003b5	          0x8b4b28	            mov ecx, dword [rbx + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x40003b8	          0x3b4b2c	            cmp ecx, dword [rbx + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x40003bb	            0x7c0b	                            jl 0x40003c8	       933	cp-demangle.c	FUNCTION_3	IF_1
0x40003bd	            0x31c0	                            xor eax, eax	      3093	cp-demangle.c	FUNCTION_45	IF_1
0x40003bf	              0x5b	                                 pop rbx	      3100	cp-demangle.c	FUNCTION_45
0x40003c0	              0xc3	                                     ret	      3100	cp-demangle.c	FUNCTION_45
0x40003c1	     0xf1f80000000	                         nop dword [rax]	      3100	cp-demangle.c	FUNCTION_45
0x40003c8	          0x4863d1	                         movsxd rdx, ecx	       935	cp-demangle.c	FUNCTION_3
0x40003cb	            0x4898	                                    cdqe	      1174	cp-demangle.c	FUNCTION_13	IF_1
0x40003cd	          0x83c101	                              add ecx, 1	       937	cp-demangle.c	FUNCTION_3
0x40003d0	        0x488d3452	                  lea rsi, [rdx + rdx*2]	       935	cp-demangle.c	FUNCTION_3
0x40003d4	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x40003d8	        0x488d14f2	                  lea rdx, [rdx + rsi*8]	       935	cp-demangle.c	FUNCTION_3
0x40003dc	    0xc74204000000	                  mov dword [rdx + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x40003e3	          0x894b28	             mov dword [rbx + 0x28], ecx	       937	cp-demangle.c	FUNCTION_3
0x40003e6	        0x48894208	                mov qword [rdx + 8], rax	      1174	cp-demangle.c	FUNCTION_13	IF_1
0x40003ea	    0xc70205000000	                      mov dword [rdx], 5	      1173	cp-demangle.c	FUNCTION_13	IF_1
0x40003f0	          0x4889d0	                            mov rax, rdx	      1174	cp-demangle.c	FUNCTION_13	IF_1
0x40003f3	              0x5b	                                 pop rbx	      3100	cp-demangle.c	FUNCTION_45
0x40003f4	              0xc3	                                     ret	      3100	cp-demangle.c	FUNCTION_45
is_gnu_v3_mangled_ctor	CALL,1:FOR,0:IF,1:ELSE,0:WHILE,0:DO,0:functions,0:SWITCH,0	17
0x400a340	        0x4883ec18	                           sub rsp, 0x18	      6572	cp-demangle.c	FUNCTION_105
0x400a344	      0x488d542404	                      lea rdx, [rsp + 4]	      6576	cp-demangle.c	FUNCTION_105	IF_1	CALL_1
0x400a349	          0x4889e6	                            mov rsi, rsp	      6576	cp-demangle.c	FUNCTION_105	IF_1	CALL_1
0x400a34c	    0x64488b042528	                mov rax, qword fs:[0x28]	      6572	cp-demangle.c	FUNCTION_105
0x400a355	      0x4889442408	                mov qword [rsp + 8], rax	      6572	cp-demangle.c	FUNCTION_105
0x400a35a	            0x31c0	                            xor eax, eax	      6572	cp-demangle.c	FUNCTION_105
0x400a35c	      0xe8cff7ffff	                call sym.is_ctor_or_dtor	      6576	cp-demangle.c	FUNCTION_105	IF_1	CALL_1
0x400a361	            0x31d2	                            xor edx, edx	      6577	cp-demangle.c	FUNCTION_105	IF_1
0x400a363	            0x85c0	                           test eax, eax	      6578	cp-demangle.c	FUNCTION_105
0x400a365	         0xf451424	                 cmovne edx, dword [rsp]	      6578	cp-demangle.c	FUNCTION_105
0x400a369	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      6579	cp-demangle.c	FUNCTION_105
0x400a36e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6579	cp-demangle.c	FUNCTION_105
0x400a377	            0x7507	                           jne 0x400a380	      6579	cp-demangle.c	FUNCTION_105
0x400a379	            0x89d0	                            mov eax, edx	      6579	cp-demangle.c	FUNCTION_105
0x400a37b	        0x4883c418	                           add rsp, 0x18	      6579	cp-demangle.c	FUNCTION_105
0x400a37f	              0xc3	                                     ret	      6579	cp-demangle.c	FUNCTION_105
0x400a380	      0xe800000000	                          call 0x400a385	      6579	cp-demangle.c	FUNCTION_105
d_demangle	CALL,3:FOR,0:IF,1:ELSE,0:WHILE,0:DO,0:functions,0:SWITCH,0	34
0x400a080	              0x53	                                push rbx	      6293	cp-demangle.c	FUNCTION_97
0x400a081	          0x4889d3	                            mov rbx, rdx	      6293	cp-demangle.c	FUNCTION_97
0x400a084	      0xba00000000	                              mov edx, 0	      6299	cp-demangle.c	FUNCTION_97	CALL_2
0x400a089	        0x4883ec30	                           sub rsp, 0x30	      6293	cp-demangle.c	FUNCTION_97
0x400a08d	          0x4889e1	                            mov rcx, rsp	      6299	cp-demangle.c	FUNCTION_97	CALL_2
0x400a090	    0x48c704240000	                      mov qword [rsp], 0	      3956	cp-demangle.c	FUNCTION_63
0x400a098	    0x48c744240800	                  mov qword [rsp + 8], 0	      3957	cp-demangle.c	FUNCTION_63
0x400a0a1	    0x64488b042528	                mov rax, qword fs:[0x28]	      6293	cp-demangle.c	FUNCTION_97
0x400a0aa	      0x4889442428	             mov qword [rsp + 0x28], rax	      6293	cp-demangle.c	FUNCTION_97
0x400a0af	            0x31c0	                            xor eax, eax	      6293	cp-demangle.c	FUNCTION_97
0x400a0b1	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3958	cp-demangle.c	FUNCTION_63
0x400a0ba	    0xc74424180000	               mov dword [rsp + 0x18], 0	      3959	cp-demangle.c	FUNCTION_63
0x400a0c2	      0xe819fdffff	            call sym.d_demangle_callback	      6299	cp-demangle.c	FUNCTION_97	CALL_2
0x400a0c7	            0x85c0	                           test eax, eax	      6301	cp-demangle.c	FUNCTION_97	IF_1
0x400a0c9	            0x7435	                            je 0x400a100	      6301	cp-demangle.c	FUNCTION_97	IF_1
0x400a0cb	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      6308	cp-demangle.c	FUNCTION_97
0x400a0cf	      0xb801000000	                              mov eax, 1	      6308	cp-demangle.c	FUNCTION_97
0x400a0d4	            0x85d2	                           test edx, edx	      6308	cp-demangle.c	FUNCTION_97
0x400a0d6	    0x480f44442410	           cmove rax, qword [rsp + 0x10]	      6308	cp-demangle.c	FUNCTION_97
0x400a0dc	          0x488903	                    mov qword [rbx], rax	      6308	cp-demangle.c	FUNCTION_97
0x400a0df	        0x488b0424	                    mov rax, qword [rsp]	      6309	cp-demangle.c	FUNCTION_97
0x400a0e3	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      6310	cp-demangle.c	FUNCTION_97
0x400a0e8	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6310	cp-demangle.c	FUNCTION_97
0x400a0f1	            0x7521	                           jne 0x400a114	      6310	cp-demangle.c	FUNCTION_97
0x400a0f3	        0x4883c430	                           add rsp, 0x30	      6310	cp-demangle.c	FUNCTION_97
0x400a0f7	              0x5b	                                 pop rbx	      6310	cp-demangle.c	FUNCTION_97
0x400a0f8	              0xc3	                                     ret	      6310	cp-demangle.c	FUNCTION_97
0x400a0f9	     0xf1f80000000	                         nop dword [rax]	      6310	cp-demangle.c	FUNCTION_97
0x400a100	        0x488b3c24	                    mov rdi, qword [rsp]	      6303	cp-demangle.c	FUNCTION_97	IF_1	CALL_3
0x400a104	      0xe800000000	                          call 0x400a109	      6303	cp-demangle.c	FUNCTION_97	IF_1	CALL_3
0x400a109	    0x48c703000000	                      mov qword [rbx], 0	      6304	cp-demangle.c	FUNCTION_97	IF_1
0x400a110	            0x31c0	                            xor eax, eax	      6305	cp-demangle.c	FUNCTION_97	IF_1
0x400a112	            0xebcf	                           jmp 0x400a0e3	      6305	cp-demangle.c	FUNCTION_97	IF_1
0x400a114	      0xe800000000	                          call 0x400a119	      6310	cp-demangle.c	FUNCTION_97
d_function_type	CALL,6:FOR,0:IF,3:ELSE,0:WHILE,0:DO,0:functions,0:SWITCH,0	32
0x4007990	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      2848	cp-demangle.c	FUNCTION_37	IF_1	CALL_1
0x4007994	          0x803846	                    cmp byte [rax], 0x46	      2848	cp-demangle.c	FUNCTION_37	IF_1	CALL_1
0x4007997	            0x7407	                            je 0x40079a0	      2848	cp-demangle.c	FUNCTION_37	IF_1	CALL_1
0x4007999	            0x31c0	                            xor eax, eax	      2849	cp-demangle.c	FUNCTION_37	IF_1
0x400799b	              0xc3	                                     ret	      2862	cp-demangle.c	FUNCTION_37
0x400799c	         0xf1f4000	                         nop dword [rax]	      2862	cp-demangle.c	FUNCTION_37
0x40079a0	        0x488d5001	                      lea rdx, [rax + 1]	      2848	cp-demangle.c	FUNCTION_37	IF_1	CALL_1
0x40079a4	              0x53	                                push rbx	      2845	cp-demangle.c	FUNCTION_37
0x40079a5	        0x48895718	             mov qword [rdi + 0x18], rdx	      2848	cp-demangle.c	FUNCTION_37	IF_1	CALL_1
0x40079a9	        0x80780159	                cmp byte [rax + 1], 0x59	      2850	cp-demangle.c	FUNCTION_37	IF_2	CALL_2
0x40079ad	            0x7429	                            je 0x40079d8	      2850	cp-demangle.c	FUNCTION_37	IF_2	CALL_2
0x40079af	          0x4889fb	                            mov rbx, rdi	      2850	cp-demangle.c	FUNCTION_37	IF_2	CALL_2
0x40079b2	      0xbe01000000	                              mov esi, 1	      2856	cp-demangle.c	FUNCTION_37	CALL_4
0x40079b7	      0xe864ffffff	           call sym.d_bare_function_type	      2856	cp-demangle.c	FUNCTION_37	CALL_4
0x40079bc	          0x4889df	                            mov rdi, rbx	      2857	cp-demangle.c	FUNCTION_37	CALL_5
0x40079bf	          0x4889c6	                            mov rsi, rax	      2857	cp-demangle.c	FUNCTION_37	CALL_5
0x40079c2	      0xe8e986ffff	                call sym.d_ref_qualifier	      2857	cp-demangle.c	FUNCTION_37	CALL_5
0x40079c7	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      2859	cp-demangle.c	FUNCTION_37	IF_3	CALL_6
0x40079cb	          0x803a45	                    cmp byte [rdx], 0x45	      2859	cp-demangle.c	FUNCTION_37	IF_3	CALL_6
0x40079ce	            0x7418	                            je 0x40079e8	      2859	cp-demangle.c	FUNCTION_37	IF_3	CALL_6
0x40079d0	            0x31c0	                            xor eax, eax	      2849	cp-demangle.c	FUNCTION_37	IF_1
0x40079d2	              0x5b	                                 pop rbx	      2862	cp-demangle.c	FUNCTION_37
0x40079d3	              0xc3	                                     ret	      2862	cp-demangle.c	FUNCTION_37
0x40079d4	         0xf1f4000	                         nop dword [rax]	      2862	cp-demangle.c	FUNCTION_37
0x40079d8	        0x4883c002	                              add rax, 2	      2854	cp-demangle.c	FUNCTION_37	IF_2	CALL_3
0x40079dc	        0x48894718	             mov qword [rdi + 0x18], rax	      2854	cp-demangle.c	FUNCTION_37	IF_2	CALL_3
0x40079e0	            0xebcd	                           jmp 0x40079af	      2854	cp-demangle.c	FUNCTION_37	IF_2	CALL_3
0x40079e2	    0x660f1f440000	                    nop word [rax + rax]	      2854	cp-demangle.c	FUNCTION_37	IF_2	CALL_3
0x40079e8	        0x4883c201	                              add rdx, 1	      2859	cp-demangle.c	FUNCTION_37	IF_3	CALL_6
0x40079ec	        0x48895318	             mov qword [rbx + 0x18], rdx	      2859	cp-demangle.c	FUNCTION_37	IF_3	CALL_6
0x40079f0	              0x5b	                                 pop rbx	      2862	cp-demangle.c	FUNCTION_37
0x40079f1	              0xc3	                                     ret	      2862	cp-demangle.c	FUNCTION_37
d_source_name	CALL,2:FOR,0:IF,1:ELSE,0:WHILE,0:DO,0:functions,0:SWITCH,0	67
0x4000680	            0x4154	                                push r12	      1669	cp-demangle.c	FUNCTION_24
0x4000682	              0x55	                                push rbp	      1669	cp-demangle.c	FUNCTION_24
0x4000683	              0x53	                                push rbx	      1669	cp-demangle.c	FUNCTION_24
0x4000684	          0x4889fb	                            mov rbx, rdi	      1669	cp-demangle.c	FUNCTION_24
0x4000687	        0x4883c718	                           add rdi, 0x18	      1669	cp-demangle.c	FUNCTION_24
0x400068b	      0xe8b0fbffff	                call sym.d_number.isra.0	      1673	cp-demangle.c	FUNCTION_24	CALL_1
0x4000690	            0x85c0	                           test eax, eax	      1674	cp-demangle.c	FUNCTION_24	IF_1
0x4000692	     0xf8eb0000000	                           jle 0x4000748	      1674	cp-demangle.c	FUNCTION_24	IF_1
0x4000698	        0x4c8b6318	            mov r12, qword [rbx + 0x18] 	      1737	cp-demangle.c	FUNCTION_27	CALL_1
0x400069c	        0x488b5308	                mov rdx, qword [rbx + 8]	      1739	cp-demangle.c	FUNCTION_27	IF_1
0x40006a0	            0x89c5	                            mov ebp, eax	      1739	cp-demangle.c	FUNCTION_27	IF_1
0x40006a2	            0x4898	                                    cdqe	      1739	cp-demangle.c	FUNCTION_27	IF_1
0x40006a4	          0x4c29e2	                            sub rdx, r12	      1739	cp-demangle.c	FUNCTION_27	IF_1
0x40006a7	          0x4839c2	                            cmp rdx, rax	      1739	cp-demangle.c	FUNCTION_27	IF_1
0x40006aa	     0xf8ca0000000	                            jl 0x4000750	      1739	cp-demangle.c	FUNCTION_27	IF_1
0x40006b0	          0x4c01e0	                            add rax, r12	      1742	cp-demangle.c	FUNCTION_27	CALL_2
0x40006b3	        0xf6431004	               test byte [rbx + 0x10], 4	      1747	cp-demangle.c	FUNCTION_27	IF_2
0x40006b7	        0x48894318	             mov qword [rbx + 0x18], rax	      1742	cp-demangle.c	FUNCTION_27	CALL_2
0x40006bb	            0x7533	                           jne 0x40006f0	      1747	cp-demangle.c	FUNCTION_27	IF_2
0x40006bd	          0x83fd09	                              cmp ebp, 9	      1754	cp-demangle.c	FUNCTION_27	IF_3
0x40006c0	            0x7e16	                           jle 0x40006d8	      1754	cp-demangle.c	FUNCTION_27	IF_3
0x40006c2	      0xba08000000	                              mov edx, 8	      1755	cp-demangle.c	FUNCTION_27	IF_3	CALL_5
0x40006c7	      0xbe00000000	                              mov esi, 0	      1755	cp-demangle.c	FUNCTION_27	IF_3	CALL_5
0x40006cc	          0x4c89e7	                            mov rdi, r12	      1755	cp-demangle.c	FUNCTION_27	IF_3	CALL_5
0x40006cf	      0xe800000000	                          call 0x40006d4	      1755	cp-demangle.c	FUNCTION_27	IF_3	CALL_5
0x40006d4	            0x85c0	                           test eax, eax	      1755	cp-demangle.c	FUNCTION_27	IF_3	CALL_5
0x40006d6	            0x7428	                            je 0x4000700	      1755	cp-demangle.c	FUNCTION_27	IF_3	CALL_5
0x40006d8	            0x89ea	                            mov edx, ebp	      1770	cp-demangle.c	FUNCTION_27	CALL_7
0x40006da	          0x4c89e6	                            mov rsi, r12	      1770	cp-demangle.c	FUNCTION_27	CALL_7
0x40006dd	          0x4889df	                            mov rdi, rbx	      1770	cp-demangle.c	FUNCTION_27	CALL_7
0x40006e0	      0xe84bffffff	                    call sym.d_make_name	      1770	cp-demangle.c	FUNCTION_27	CALL_7
0x40006e5	        0x48894340	             mov qword [rbx + 0x40], rax	      1677	cp-demangle.c	FUNCTION_24
0x40006e9	              0x5b	                                 pop rbx	      1679	cp-demangle.c	FUNCTION_24
0x40006ea	              0x5d	                                 pop rbp	      1679	cp-demangle.c	FUNCTION_24
0x40006eb	            0x415c	                                 pop r12	      1679	cp-demangle.c	FUNCTION_24
0x40006ed	              0xc3	                                     ret	      1679	cp-demangle.c	FUNCTION_24
0x40006ee	            0x6690	                                     nop	      1679	cp-demangle.c	FUNCTION_24
0x40006f0	          0x803824	                    cmp byte [rax], 0x24	      1748	cp-demangle.c	FUNCTION_27	IF_2	CALL_3
0x40006f3	            0x75c8	                           jne 0x40006bd	      1748	cp-demangle.c	FUNCTION_27	IF_2	CALL_3
0x40006f5	        0x4883c001	                              add rax, 1	      1749	cp-demangle.c	FUNCTION_27	CALL_4
0x40006f9	        0x48894318	             mov qword [rbx + 0x18], rax	      1749	cp-demangle.c	FUNCTION_27	CALL_4
0x40006fd	            0xebbe	                           jmp 0x40006bd	      1749	cp-demangle.c	FUNCTION_27	CALL_4
0x40006ff	              0x90	                                     nop	      1749	cp-demangle.c	FUNCTION_27	CALL_4
0x4000700	    0x410fb6442408	               movzx eax, byte [r12 + 8]	      1761	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x4000706	          0x83e824	                           sub eax, 0x24	      1761	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x4000709	            0x3c3b	                            cmp al, 0x3b	      1761	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x400070b	            0x77cb	                            ja 0x40006d8	      1761	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x400070d	    0x48ba01040000	          movabs rdx, 0x800000000000401 	      1761	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x4000717	        0x480fa3c2	                             bt rdx, rax	      1761	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x400071b	            0x73bb	                           jae 0x40006d8	      1761	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x400071d	    0x41807c24094e	                cmp byte [r12 + 9], 0x4e	      1762	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x4000723	            0x75b3	                           jne 0x40006d8	      1762	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x4000725	          0x8b4348	            mov eax, dword [rbx + 0x48] 	      1764	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x4000728	      0xba15000000	                           mov edx, 0x15	      1765	cp-demangle.c	FUNCTION_27	IF_3	IF_4	CALL_6
0x400072d	      0xbe00000000	                              mov esi, 0	      1765	cp-demangle.c	FUNCTION_27	IF_3	IF_4	CALL_6
0x4000732	          0x4889df	                            mov rdi, rbx	      1765	cp-demangle.c	FUNCTION_27	IF_3	IF_4	CALL_6
0x4000735	          0x83c016	                           add eax, 0x16	      1764	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x4000738	            0x29e8	                            sub eax, ebp	      1764	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x400073a	          0x894348	             mov dword [rbx + 0x48], eax	      1764	cp-demangle.c	FUNCTION_27	IF_3	IF_4
0x400073d	      0xe8eefeffff	                    call sym.d_make_name	      1765	cp-demangle.c	FUNCTION_27	IF_3	IF_4	CALL_6
0x4000742	            0xeba1	                           jmp 0x40006e5	      1765	cp-demangle.c	FUNCTION_27	IF_3	IF_4	CALL_6
0x4000744	         0xf1f4000	                         nop dword [rax]	      1765	cp-demangle.c	FUNCTION_27	IF_3	IF_4	CALL_6
0x4000748	            0x31c0	                            xor eax, eax	      1675	cp-demangle.c	FUNCTION_24	IF_1
0x400074a	            0xeb9d	                           jmp 0x40006e9	      1675	cp-demangle.c	FUNCTION_24	IF_1
0x400074c	         0xf1f4000	                         nop dword [rax]	      1675	cp-demangle.c	FUNCTION_24	IF_1
0x4000750	            0x31c0	                            xor eax, eax	      1740	cp-demangle.c	FUNCTION_27	IF_1
0x4000752	            0xeb91	                           jmp 0x40006e5	      1740	cp-demangle.c	FUNCTION_27	IF_1
d_print_comp	CALL,2:FOR,0:IF,1:ELSE,0:WHILE,0:DO,0:functions,0:SWITCH,0	41
0x4004d50	              0x55	                                push rbp	      5713	cp-demangle.c	FUNCTION_87
0x4004d51	              0x53	                                push rbx	      5713	cp-demangle.c	FUNCTION_87
0x4004d52	          0x4889fd	                            mov rbp, rdi	      5713	cp-demangle.c	FUNCTION_87
0x4004d55	        0x4883ec28	                           sub rsp, 0x28	      5713	cp-demangle.c	FUNCTION_87
0x4004d59	    0x64488b042528	                mov rax, qword fs:[0x28]	      5713	cp-demangle.c	FUNCTION_87
0x4004d62	      0x4889442418	             mov qword [rsp + 0x18], rax	      5713	cp-demangle.c	FUNCTION_87
0x4004d67	            0x31c0	                            xor eax, eax	      5713	cp-demangle.c	FUNCTION_87
0x4004d69	          0x4885d2	                           test rdx, rdx	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004d6c	            0x740b	                            je 0x4004d79	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004d6e	          0x8b4204	                mov eax, dword [rdx + 4]	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004d71	          0x4889d3	                            mov rbx, rdx	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004d74	          0x83f801	                              cmp eax, 1	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004d77	            0x7e27	                           jle 0x4004da0	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004d79	    0xc78530010000	              mov dword [rbp + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4004d83	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5733	cp-demangle.c	FUNCTION_87
0x4004d88	    0x644833042528	                xor rax, qword fs:[0x28]	      5733	cp-demangle.c	FUNCTION_87
0x4004d91	            0x7562	                           jne 0x4004df5	      5733	cp-demangle.c	FUNCTION_87
0x4004d93	        0x4883c428	                           add rsp, 0x28	      5733	cp-demangle.c	FUNCTION_87
0x4004d97	              0x5b	                                 pop rbx	      5733	cp-demangle.c	FUNCTION_87
0x4004d98	              0x5d	                                 pop rbp	      5733	cp-demangle.c	FUNCTION_87
0x4004d99	              0xc3	                                     ret	      5733	cp-demangle.c	FUNCTION_87
0x4004d9a	    0x660f1f440000	                    nop word [rax + rax]	      5733	cp-demangle.c	FUNCTION_87
0x4004da0	    0x8b9734010000	           mov edx, dword [rdi + 0x134] 	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004da6	    0x81fa00040000	                          cmp edx, 0x400	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004dac	            0x7fcb	                            jg 0x4004d79	      5715	cp-demangle.c	FUNCTION_87	IF_1
0x4004dae	          0x83c001	                              add eax, 1	      5721	cp-demangle.c	FUNCTION_87
0x4004db1	          0x83c201	                              add edx, 1	      5722	cp-demangle.c	FUNCTION_87
0x4004db4	        0x48891c24	                    mov qword [rsp], rbx	      5724	cp-demangle.c	FUNCTION_87
0x4004db8	          0x894304	                mov dword [rbx + 4], eax	      5721	cp-demangle.c	FUNCTION_87
0x4004dbb	    0x488b87480100	           mov rax, qword [rdi + 0x148] 	      5725	cp-demangle.c	FUNCTION_87
0x4004dc2	    0x899734010000	            mov dword [rdi + 0x134], edx	      5722	cp-demangle.c	FUNCTION_87
0x4004dc8	    0x4889a7480100	            mov qword [rdi + 0x148], rsp	      5726	cp-demangle.c	FUNCTION_87
0x4004dcf	          0x4889da	                            mov rdx, rbx	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004dd2	      0x4889442408	                mov qword [rsp + 8], rax	      5725	cp-demangle.c	FUNCTION_87
0x4004dd7	      0xe804beffff	             call sym.d_print_comp_inner	      5728	cp-demangle.c	FUNCTION_87	CALL_2
0x4004ddc	      0x488b442408	                mov rax, qword [rsp + 8]	      5730	cp-demangle.c	FUNCTION_87
0x4004de1	    0x488985480100	           mov qword [rbp + 0x148], rax 	      5730	cp-demangle.c	FUNCTION_87
0x4004de8	        0x836b0401	                  sub dword [rbx + 4], 1	      5731	cp-demangle.c	FUNCTION_87
0x4004dec	    0x83ad34010000	              sub dword [rbp + 0x134], 1	      5732	cp-demangle.c	FUNCTION_87
0x4004df3	            0xeb8e	                           jmp 0x4004d83	      5732	cp-demangle.c	FUNCTION_87
0x4004df5	      0xe800000000	                          call 0x4004dfa	      5733	cp-demangle.c	FUNCTION_87
d_unqualified_name	CALL,17:FOR,0:IF,11:ELSE,5:WHILE,0:DO,0:functions,0:SWITCH,1	320
0x4007450	            0x4154	                                push r12	      1611	cp-demangle.c	FUNCTION_23
0x4007452	              0x55	                                push rbp	      1611	cp-demangle.c	FUNCTION_23
0x4007453	              0x53	                                push rbx	      1611	cp-demangle.c	FUNCTION_23
0x4007454	        0x488b4f18	            mov rcx, qword [rdi + 0x18] 	      1615	cp-demangle.c	FUNCTION_23	CALL_1
0x4007458	          0x4889fb	                            mov rbx, rdi	      1611	cp-demangle.c	FUNCTION_23
0x400745b	           0xfb601	                   movzx eax, byte [rcx]	      1615	cp-demangle.c	FUNCTION_23	CALL_1
0x400745e	          0x8d50d0	                   lea edx, [rax - 0x30]	      1616	cp-demangle.c	FUNCTION_23	IF_1
0x4007461	          0x80fa09	                               cmp dl, 9	      1616	cp-demangle.c	FUNCTION_23	IF_1
0x4007464	     0xf86e6000000	                           jbe 0x4007550	      1616	cp-demangle.c	FUNCTION_23	IF_1
0x400746a	          0x8d509f	                   lea edx, [rax - 0x61]	      1618	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2
0x400746d	          0x80fa19	                            cmp dl, 0x19	      1618	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2
0x4007470	            0x773e	                            ja 0x40074b0	      1618	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2
0x4007472	            0x3c6f	                            cmp al, 0x6f	      1620	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_3	CALL_3
0x4007474	     0xf84f6010000	                            je 0x4007670	      1620	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_3	CALL_3
0x400747a	          0x4889df	                            mov rdi, rbx	      1622	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	CALL_5
0x400747d	      0xe82efdffff	                call sym.d_operator_name	      1622	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	CALL_5
0x4007482	          0x4885c0	                           test rax, rax	      1623	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x4007485	          0x4889c5	                            mov rbp, rax	      1622	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	CALL_5
0x4007488	            0x7409	                            je 0x4007493	      1623	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x400748a	          0x833831	                   cmp dword [rax], 0x31	      1623	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x400748d	     0xf84fd010000	                            je 0x4007690	      1623	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x4007493	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1623	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x4007497	           0xfb610	                   movzx edx, byte [rax]	      1623	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x400749a	          0x80fa42	                            cmp dl, 0x42	      1660	cp-demangle.c	FUNCTION_23	IF_11	CALL_16
0x400749d	          0x4889e8	                            mov rax, rbp	      1660	cp-demangle.c	FUNCTION_23	IF_11	CALL_16
0x40074a0	     0xf84c5000000	                            je 0x400756b	      1660	cp-demangle.c	FUNCTION_23	IF_11	CALL_16
0x40074a6	              0x5b	                                 pop rbx	      1663	cp-demangle.c	FUNCTION_23
0x40074a7	              0x5d	                                 pop rbp	      1663	cp-demangle.c	FUNCTION_23
0x40074a8	            0x415c	                                 pop r12	      1663	cp-demangle.c	FUNCTION_23
0x40074aa	              0xc3	                                     ret	      1663	cp-demangle.c	FUNCTION_23
0x40074ab	       0xf1f440000	                   nop dword [rax + rax]	      1663	cp-demangle.c	FUNCTION_23
0x40074b0	          0x8d50bd	                   lea edx, [rax - 0x43]	      1631	cp-demangle.c	FUNCTION_23	ELSE_2	IF_6
0x40074b3	          0x80fa01	                               cmp dl, 1	      1631	cp-demangle.c	FUNCTION_23	ELSE_2	IF_6
0x40074b6	     0xf862c020000	                           jbe 0x40076e8	      1631	cp-demangle.c	FUNCTION_23	ELSE_2	IF_6
0x40074bc	            0x3c4c	                            cmp al, 0x4c	      1633	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7
0x40074be	     0xf847c010000	                            je 0x4007640	      1633	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7
0x40074c4	            0x3c55	                            cmp al, 0x55	      1643	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10
0x40074c6	     0xf8599010000	                           jne 0x4007665	      1643	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10
0x40074cc	         0xfb64101	               movzx eax, byte [rcx + 1]	      1645	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1	CALL_13
0x40074d0	            0x3c6c	                            cmp al, 0x6c	      1645	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1	CALL_13
0x40074d2	     0xf84a8000000	                            je 0x4007580	      1645	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1	CALL_13
0x40074d8	            0x3c74	                            cmp al, 0x74	      1645	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1	CALL_13
0x40074da	     0xf8585010000	                           jne 0x4007665	      1645	cp-demangle.c	FUNCTION_23	ELSE_4	IF_10	SWITCH_1	CALL_13
0x40074e0	        0x488d4101	                      lea rax, [rcx + 1]	      3728	cp-demangle.c	FUNCTION_57	IF_1	CALL_1
0x40074e4	            0x31ed	                            xor ebp, ebp	      3731	cp-demangle.c	FUNCTION_57	IF_2
0x40074e6	        0x48894718	             mov qword [rdi + 0x18], rax	      3728	cp-demangle.c	FUNCTION_57	IF_1	CALL_1
0x40074ea	         0xfb65101	               movzx edx, byte [rcx + 1]	      3730	cp-demangle.c	FUNCTION_57	IF_2	CALL_2
0x40074ee	          0x80fa74	                            cmp dl, 0x74	      3730	cp-demangle.c	FUNCTION_57	IF_2	CALL_2
0x40074f1	            0x75a7	                           jne 0x400749a	      3730	cp-demangle.c	FUNCTION_57	IF_2	CALL_2
0x40074f3	        0x4883c102	                              add rcx, 2	      3730	cp-demangle.c	FUNCTION_57	IF_2	CALL_2
0x40074f7	        0x48894f18	             mov qword [rdi + 0x18], rcx	      3730	cp-demangle.c	FUNCTION_57	IF_2	CALL_2
0x40074fb	      0xe8408effff	               call sym.d_compact_number	      3733	cp-demangle.c	FUNCTION_57	CALL_3
0x4007500	            0x85c0	                           test eax, eax	      3734	cp-demangle.c	FUNCTION_57	IF_3
0x4007502	            0x788f	                            js 0x4007493	      3734	cp-demangle.c	FUNCTION_57	IF_3
0x4007504	          0x8b5328	            mov edx, dword [rbx + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4007507	          0x3b532c	            cmp edx, dword [rbx + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400750a	            0x7d35	                           jge 0x4007541	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400750c	          0x4863ca	                         movsxd rcx, edx	       935	cp-demangle.c	FUNCTION_3
0x400750f	            0x4898	                                    cdqe	      3741	cp-demangle.c	FUNCTION_57	IF_4
0x4007511	          0x83c201	                              add edx, 1	       937	cp-demangle.c	FUNCTION_3
0x4007514	        0x488d3449	                  lea rsi, [rcx + rcx*2]	       935	cp-demangle.c	FUNCTION_3
0x4007518	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x400751c	        0x488d2cf1	                  lea rbp, [rcx + rsi*8]	       935	cp-demangle.c	FUNCTION_3
0x4007520	    0xc74504000000	                  mov dword [rbp + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x4007527	          0x895328	             mov dword [rbx + 0x28], edx	       937	cp-demangle.c	FUNCTION_3
0x400752a	        0x48894508	                mov qword [rbp + 8], rax	      3741	cp-demangle.c	FUNCTION_57	IF_4
0x400752e	          0x8b4338	            mov eax, dword [rbx + 0x38] 	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x4007531	          0x3b433c	            cmp eax, dword [rbx + 0x3c] 	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x4007534	    0xc74500470000	                   mov dword [rbp], 0x47	      3740	cp-demangle.c	FUNCTION_57	IF_4
0x400753b	     0xf8cd9000000	                            jl 0x400761a	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x4007541	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x4007545	            0x31ed	                            xor ebp, ebp	      3745	cp-demangle.c	FUNCTION_57	IF_5
0x4007547	           0xfb610	                   movzx edx, byte [rax]	      3745	cp-demangle.c	FUNCTION_57	IF_5
0x400754a	      0xe94bffffff	                           jmp 0x400749a	      3745	cp-demangle.c	FUNCTION_57	IF_5
0x400754f	              0x90	                                     nop	      3745	cp-demangle.c	FUNCTION_57	IF_5
0x4007550	      0xe82b91ffff	                  call sym.d_source_name	      1617	cp-demangle.c	FUNCTION_23	CALL_2
0x4007555	          0x4889c5	                            mov rbp, rax	      1617	cp-demangle.c	FUNCTION_23	CALL_2
0x4007558	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1617	cp-demangle.c	FUNCTION_23	CALL_2
0x400755c	           0xfb610	                   movzx edx, byte [rax]	      1617	cp-demangle.c	FUNCTION_23	CALL_2
0x400755f	          0x4889e8	                            mov rax, rbp	      1617	cp-demangle.c	FUNCTION_23	CALL_2
0x4007562	          0x80fa42	                            cmp dl, 0x42	      1660	cp-demangle.c	FUNCTION_23	IF_11	CALL_16
0x4007565	     0xf853bffffff	                           jne 0x40074a6	      1660	cp-demangle.c	FUNCTION_23	IF_11	CALL_16
0x400756b	          0x4889ee	                            mov rsi, rbp	      1661	cp-demangle.c	FUNCTION_23	CALL_17
0x400756e	          0x4889df	                            mov rdi, rbx	      1661	cp-demangle.c	FUNCTION_23	CALL_17
0x4007571	              0x5b	                                 pop rbx	      1663	cp-demangle.c	FUNCTION_23
0x4007572	              0x5d	                                 pop rbp	      1663	cp-demangle.c	FUNCTION_23
0x4007573	            0x415c	                                 pop r12	      1663	cp-demangle.c	FUNCTION_23
0x4007575	      0xe9e691ffff	                      jmp sym.d_abi_tags	      1661	cp-demangle.c	FUNCTION_23	CALL_17
0x400757a	    0x660f1f440000	                    nop word [rax + rax]	      1661	cp-demangle.c	FUNCTION_23	CALL_17
0x4007580	        0x488d4101	                      lea rax, [rcx + 1]	      3690	cp-demangle.c	ELSE_1	FUNCTION_56	IF_1	CALL_1
0x4007584	            0x31ed	                            xor ebp, ebp	      3693	cp-demangle.c	ELSE_1	FUNCTION_56	IF_2
0x4007586	        0x48894718	             mov qword [rdi + 0x18], rax	      3690	cp-demangle.c	ELSE_1	FUNCTION_56	IF_1	CALL_1
0x400758a	         0xfb65101	               movzx edx, byte [rcx + 1]	      3692	cp-demangle.c	ELSE_1	FUNCTION_56	IF_2	CALL_2
0x400758e	          0x80fa6c	                            cmp dl, 0x6c	      3692	cp-demangle.c	ELSE_1	FUNCTION_56	IF_2	CALL_2
0x4007591	     0xf8503ffffff	                           jne 0x400749a	      3692	cp-demangle.c	ELSE_1	FUNCTION_56	IF_2	CALL_2
0x4007597	        0x4883c102	                              add rcx, 2	      3692	cp-demangle.c	ELSE_1	FUNCTION_56	IF_2	CALL_2
0x400759b	        0x48894f18	             mov qword [rdi + 0x18], rcx	      3692	cp-demangle.c	ELSE_1	FUNCTION_56	IF_2	CALL_2
0x400759f	      0xe8acfdffff	                     call sym.d_parmlist	      3695	cp-demangle.c	ELSE_1	FUNCTION_56	CALL_3
0x40075a4	          0x4989c4	                            mov r12, rax	      3695	cp-demangle.c	ELSE_1	FUNCTION_56	CALL_3
0x40075a7	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      3695	cp-demangle.c	ELSE_1	FUNCTION_56	CALL_3
0x40075ab	          0x4d85e4	                           test r12, r12	      3696	cp-demangle.c	ELSE_1	FUNCTION_56	IF_3
0x40075ae	           0xfb610	                   movzx edx, byte [rax]	      3696	cp-demangle.c	ELSE_1	FUNCTION_56	IF_3
0x40075b1	     0xf84e3feffff	                            je 0x400749a	      3696	cp-demangle.c	ELSE_1	FUNCTION_56	IF_3
0x40075b7	          0x80fa45	                            cmp dl, 0x45	      3699	cp-demangle.c	ELSE_1	FUNCTION_56	IF_4	CALL_4
0x40075ba	     0xf85dafeffff	                           jne 0x400749a	      3699	cp-demangle.c	ELSE_1	FUNCTION_56	IF_4	CALL_4
0x40075c0	        0x4883c001	                              add rax, 1	      3699	cp-demangle.c	ELSE_1	FUNCTION_56	IF_4	CALL_4
0x40075c4	          0x4889df	                            mov rdi, rbx	      3702	cp-demangle.c	ELSE_1	FUNCTION_56	CALL_5
0x40075c7	        0x48894318	             mov qword [rbx + 0x18], rax	      3699	cp-demangle.c	ELSE_1	FUNCTION_56	IF_4	CALL_4
0x40075cb	      0xe8708dffff	               call sym.d_compact_number	      3702	cp-demangle.c	ELSE_1	FUNCTION_56	CALL_5
0x40075d0	            0x85c0	                           test eax, eax	      3703	cp-demangle.c	ELSE_1	FUNCTION_56	IF_5
0x40075d2	     0xf8869ffffff	                            js 0x4007541	      3703	cp-demangle.c	ELSE_1	FUNCTION_56	IF_5
0x40075d8	          0x8b5328	            mov edx, dword [rbx + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x40075db	          0x3b532c	            cmp edx, dword [rbx + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x40075de	     0xf8d5dffffff	                           jge 0x4007541	       933	cp-demangle.c	FUNCTION_3	IF_1
0x40075e4	          0x4863ca	                         movsxd rcx, edx	       935	cp-demangle.c	FUNCTION_3
0x40075e7	          0x83c201	                              add edx, 1	       937	cp-demangle.c	FUNCTION_3
0x40075ea	        0x488d3449	                  lea rsi, [rcx + rcx*2]	       935	cp-demangle.c	FUNCTION_3
0x40075ee	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x40075f2	        0x488d2cf1	                  lea rbp, [rcx + rsi*8]	       935	cp-demangle.c	FUNCTION_3
0x40075f6	    0xc74504000000	                  mov dword [rbp + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x40075fd	          0x895328	             mov dword [rbx + 0x28], edx	       937	cp-demangle.c	FUNCTION_3
0x4007600	        0x4c896508	                mov qword [rbp + 8], r12	      3710	cp-demangle.c	ELSE_1	FUNCTION_56	IF_6
0x4007604	          0x894510	            mov dword [rbp + 0x10], eax 	      3711	cp-demangle.c	ELSE_1	FUNCTION_56	IF_6
0x4007607	          0x8b4338	            mov eax, dword [rbx + 0x38] 	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x400760a	          0x3b433c	            cmp eax, dword [rbx + 0x3c] 	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x400760d	    0xc74500450000	                   mov dword [rbp], 0x45	      3709	cp-demangle.c	ELSE_1	FUNCTION_56	IF_6
0x4007614	     0xf8d27ffffff	                           jge 0x4007541	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x400761a	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      3786	cp-demangle.c	FUNCTION_59
0x400761e	          0x4863c8	                         movsxd rcx, eax	      3786	cp-demangle.c	FUNCTION_59
0x4007621	          0x83c001	                              add eax, 1	      3787	cp-demangle.c	FUNCTION_59
0x4007624	        0x48892cca	            mov qword [rdx + rcx*8], rbp	      3786	cp-demangle.c	FUNCTION_59
0x4007628	          0x894338	             mov dword [rbx + 0x38], eax	      3787	cp-demangle.c	FUNCTION_59
0x400762b	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      3787	cp-demangle.c	FUNCTION_59
0x400762f	           0xfb610	                   movzx edx, byte [rax]	      3787	cp-demangle.c	FUNCTION_59
0x4007632	      0xe963feffff	                           jmp 0x400749a	      3787	cp-demangle.c	FUNCTION_59
0x4007637	    0x660f1f840000	                    nop word [rax + rax]	      3787	cp-demangle.c	FUNCTION_59
0x4007640	        0x4883c101	                              add rcx, 1	      1635	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	CALL_10
0x4007644	        0x48894f18	             mov qword [rdi + 0x18], rcx	      1635	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	CALL_10
0x4007648	      0xe83390ffff	                  call sym.d_source_name	      1637	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	CALL_11
0x400764d	          0x4885c0	                           test rax, rax	      1638	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	IF_8
0x4007650	          0x4889c5	                            mov rbp, rax	      1637	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	CALL_11
0x4007653	            0x7410	                            je 0x4007665	      1638	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	IF_8
0x4007655	          0x4889df	                            mov rdi, rbx	      1640	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	IF_9	CALL_12
0x4007658	      0xe8838effff	                call sym.d_discriminator	      1640	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	IF_9	CALL_12
0x400765d	            0x85c0	                           test eax, eax	      1640	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	IF_9	CALL_12
0x400765f	     0xf852efeffff	                           jne 0x4007493	      1640	cp-demangle.c	FUNCTION_23	ELSE_3	IF_7	IF_9	CALL_12
0x4007665	              0x5b	                                 pop rbx	      1663	cp-demangle.c	FUNCTION_23
0x4007666	            0x31c0	                            xor eax, eax	      2280	cp-demangle.c	FUNCTION_33	SWITCH_1
0x4007668	              0x5d	                                 pop rbp	      1663	cp-demangle.c	FUNCTION_23
0x4007669	            0x415c	                                 pop r12	      1663	cp-demangle.c	FUNCTION_23
0x400766b	              0xc3	                                     ret	      1663	cp-demangle.c	FUNCTION_23
0x400766c	         0xf1f4000	                         nop dword [rax]	      1663	cp-demangle.c	FUNCTION_23
0x4007670	        0x8079016e	                cmp byte [rcx + 1], 0x6e	      1620	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_3	CALL_3
0x4007674	     0xf8500feffff	                           jne 0x400747a	      1620	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_3	CALL_3
0x400767a	        0x4883c102	                              add rcx, 2	      1621	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	CALL_4
0x400767e	        0x48894f18	             mov qword [rdi + 0x18], rcx	      1621	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	CALL_4
0x4007682	      0xe9f3fdffff	                           jmp 0x400747a	      1621	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	CALL_4
0x4007687	    0x660f1f840000	                    nop word [rax + rax]	      1621	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	CALL_4
0x4007690	        0x488b5008	                mov rdx, qword [rax + 8]	      1625	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x4007694	          0x8b4210	            mov eax, dword [rdx + 0x10] 	      1625	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x4007697	           0x34348	             add eax, dword [rbx + 0x48]	      1625	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x400769a	          0x83c007	                              add eax, 7	      1625	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x400769d	          0x894348	             mov dword [rbx + 0x48], eax	      1625	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4
0x40076a0	          0x488b02	                    mov rax, qword [rdx]	      1626	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_6
0x40076a3	          0x80386c	                    cmp byte [rax], 0x6c	      1626	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_6
0x40076a6	     0xf85e7fdffff	                           jne 0x4007493	      1626	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_6
0x40076ac	        0x80780169	                cmp byte [rax + 1], 0x69	      1626	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_6
0x40076b0	     0xf85ddfdffff	                           jne 0x4007493	      1626	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_6
0x40076b6	        0x80780200	                   cmp byte [rax + 2], 0	      1626	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_6
0x40076ba	     0xf85d3fdffff	                           jne 0x4007493	      1626	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_6
0x40076c0	          0x4889df	                            mov rdi, rbx	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x40076c3	      0xe8b88fffff	                  call sym.d_source_name	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x40076c8	          0x4889ea	                            mov rdx, rbp	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x40076cb	          0x4889c1	                            mov rcx, rax	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x40076ce	      0xbe36000000	                           mov esi, 0x36	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x40076d3	          0x4889df	                            mov rdi, rbx	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x40076d6	      0xe86589ffff	                    call sym.d_make_comp	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x40076db	          0x4889c5	                            mov rbp, rax	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x40076de	      0xe9b0fdffff	                           jmp 0x4007493	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x40076e3	       0xf1f440000	                   nop dword [rax + rax]	      1627	cp-demangle.c	FUNCTION_23	ELSE_1	IF_2	IF_4	IF_5	CALL_7
0x40076e8	        0x488b7740	            mov rsi, qword [rdi + 0x40] 	      2201	cp-demangle.c	FUNCTION_33	IF_1
0x40076ec	          0x4885f6	                           test rsi, rsi	      2201	cp-demangle.c	FUNCTION_33	IF_1
0x40076ef	            0x7413	                            je 0x4007704	      2201	cp-demangle.c	FUNCTION_33	IF_1
0x40076f1	            0x8b16	                    mov edx, dword [rsi]	      2203	cp-demangle.c	FUNCTION_33	IF_1	IF_2
0x40076f3	            0x85d2	                           test edx, edx	      2203	cp-demangle.c	FUNCTION_33	IF_1	IF_2
0x40076f5	     0xf84ad000000	                            je 0x40077a8	      2203	cp-demangle.c	FUNCTION_33	IF_1	IF_2
0x40076fb	          0x83fa18	                           cmp edx, 0x18	      2205	cp-demangle.c	FUNCTION_33	IF_1	ELSE_1	IF_3
0x40076fe	     0xf84a4000000	                            je 0x40077a8	      2205	cp-demangle.c	FUNCTION_33	IF_1	ELSE_1	IF_3
0x4007704	            0x3c43	                            cmp al, 0x43	      2208	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_1
0x4007706	     0xf84c4000000	                            je 0x40077d0	      2208	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_1
0x400770c	            0x3c44	                            cmp al, 0x44	      2208	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_1
0x400770e	     0xf8551ffffff	                           jne 0x4007665	      2208	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_1
0x4007714	         0xfb64101	               movzx eax, byte [rcx + 1]	      2254	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3	CALL_7
0x4007718	          0x83e830	                           sub eax, 0x30	      2254	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3	CALL_7
0x400771b	            0x3c05	                               cmp al, 5	      2254	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3	CALL_7
0x400771d	     0xf8742ffffff	                            ja 0x4007665	      2254	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3	CALL_7
0x4007723	           0xfb6c0	                           movzx eax, al	      2254	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3	CALL_7
0x4007726	    0xff24c5000000	                       jmp qword [rax*8]	      2254	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3	CALL_7
0x400772d	      0xbf02000000	                              mov edi, 2	      2260	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x4007732	        0x488d4102	                      lea rax, [rcx + 2]	      2275	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_8
0x4007736	        0x48894318	             mov qword [rbx + 0x18], rax	      2275	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_8
0x400773a	          0x8b4328	            mov eax, dword [rbx + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400773d	          0x3b432c	            cmp eax, dword [rbx + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4007740	     0xf8d42010000	                           jge 0x4007888	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4007746	          0x4863d0	                         movsxd rdx, eax	       935	cp-demangle.c	FUNCTION_3
0x4007749	          0x83c001	                              add eax, 1	       937	cp-demangle.c	FUNCTION_3
0x400774c	          0x4885f6	                           test rsi, rsi	       914	cp-demangle.c	IF_4
0x400774f	        0x4c8d0452	                   lea r8, [rdx + rdx*2]	       935	cp-demangle.c	FUNCTION_3
0x4007753	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x4007757	        0x4a8d2cc2	                   lea rbp, [rdx + r8*8]	       935	cp-demangle.c	FUNCTION_3
0x400775b	    0xc74504000000	                  mov dword [rbp + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x4007762	          0x894328	             mov dword [rbx + 0x28], eax	       937	cp-demangle.c	FUNCTION_3
0x4007765	     0xf841d010000	                            je 0x4007888	       914	cp-demangle.c	IF_4
0x400776b	    0xc74504000000	                  mov dword [rbp + 4], 0	       919	cp-demangle.c	
0x4007772	    0xc74500080000	                      mov dword [rbp], 8	       920	cp-demangle.c	
0x4007779	          0x897d08	                mov dword [rbp + 8], edi	       921	cp-demangle.c	
0x400777c	        0x48897510	            mov qword [rbp + 0x10], rsi 	       922	cp-demangle.c	
0x4007780	         0xfb65102	               movzx edx, byte [rcx + 2]	       922	cp-demangle.c	
0x4007784	      0xe911fdffff	                           jmp 0x400749a	       922	cp-demangle.c	
0x4007789	      0xbf01000000	                              mov edi, 1	      2257	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x400778e	            0xeba2	                           jmp 0x4007732	      2257	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x4007790	      0xbf05000000	                              mov edi, 5	      2270	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x4007795	            0xeb9b	                           jmp 0x4007732	      2270	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x4007797	      0xbf04000000	                              mov edi, 4	      2267	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x400779c	            0xeb94	                           jmp 0x4007732	      2267	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x400779e	      0xbf03000000	                              mov edi, 3	      2263	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x40077a3	            0xeb8d	                           jmp 0x4007732	      2263	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x40077a5	           0xf1f00	                         nop dword [rax]	      2263	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_3
0x40077a8	          0x8b4610	            mov eax, dword [rsi + 0x10] 	      2206	cp-demangle.c	FUNCTION_33	IF_1	ELSE_1	IF_3
0x40077ab	           0x14348	             add dword [rbx + 0x48], eax	      2206	cp-demangle.c	FUNCTION_33	IF_1	ELSE_1	IF_3
0x40077ae	           0xfb611	                   movzx edx, byte [rcx]	      2206	cp-demangle.c	FUNCTION_33	IF_1	ELSE_1	IF_3
0x40077b1	          0x80fa43	                            cmp dl, 0x43	      2208	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_1
0x40077b4	            0x741a	                            je 0x40077d0	      2208	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_1
0x40077b6	            0x31ed	                            xor ebp, ebp	      2280	cp-demangle.c	FUNCTION_33	SWITCH_1
0x40077b8	          0x80fa44	                            cmp dl, 0x44	      2208	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_1
0x40077bb	     0xf85d9fcffff	                           jne 0x400749a	      2208	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_1
0x40077c1	      0xe94effffff	                           jmp 0x4007714	      2208	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_1
0x40077c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2208	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_1
0x40077d0	         0xfb64101	               movzx eax, byte [rcx + 1]	      2215	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4	CALL_2
0x40077d4	            0x3c49	                            cmp al, 0x49	      2215	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4	CALL_2
0x40077d6	     0xf84da000000	                            je 0x40078b6	      2215	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4	CALL_2
0x40077dc	          0x83e831	                           sub eax, 0x31	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x40077df	            0x3c04	                               cmp al, 4	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x40077e1	     0xf877efeffff	                            ja 0x4007665	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x40077e7	           0xfb6c0	                           movzx eax, al	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x40077ea	    0xff24c5000000	                       jmp qword [rax*8]	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x40077f1	            0x31c0	                            xor eax, eax	      2213	cp-demangle.c	FUNCTION_33	SWITCH_1
0x40077f3	    0x41bc04000000	                             mov r12d, 4	      2233	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x40077f9	        0x4883c102	                              add rcx, 2	      2242	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_5
0x40077fd	            0x85c0	                           test eax, eax	      2244	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_5
0x40077ff	        0x48894b18	             mov qword [rbx + 0x18], rcx	      2242	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_5
0x4007803	     0xf8598000000	                           jne 0x40078a1	      2244	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_5
0x4007809	          0x8b4328	            mov eax, dword [rbx + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400780c	          0x3b432c	            cmp eax, dword [rbx + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400780f	            0x7d6d	                           jge 0x400787e	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4007811	          0x4863d0	                         movsxd rdx, eax	       935	cp-demangle.c	FUNCTION_3
0x4007814	          0x83c001	                              add eax, 1	       937	cp-demangle.c	FUNCTION_3
0x4007817	          0x4885f6	                           test rsi, rsi	       894	cp-demangle.c	IF_3
0x400781a	        0x488d3c52	                  lea rdi, [rdx + rdx*2]	       935	cp-demangle.c	FUNCTION_3
0x400781e	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x4007822	        0x488d2cfa	                  lea rbp, [rdx + rdi*8]	       935	cp-demangle.c	FUNCTION_3
0x4007826	    0xc74504000000	                  mov dword [rbp + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x400782d	          0x894328	             mov dword [rbx + 0x28], eax	       937	cp-demangle.c	FUNCTION_3
0x4007830	            0x744c	                            je 0x400787e	       894	cp-demangle.c	IF_3
0x4007832	    0xc74504000000	                  mov dword [rbp + 4], 0	       899	cp-demangle.c	
0x4007839	    0xc74500070000	                      mov dword [rbp], 7	       900	cp-demangle.c	
0x4007840	        0x44896508	               mov dword [rbp + 8], r12d	       901	cp-demangle.c	
0x4007844	        0x48897510	            mov qword [rbp + 0x10], rsi 	       902	cp-demangle.c	
0x4007848	           0xfb611	                   movzx edx, byte [rcx]	       902	cp-demangle.c	
0x400784b	      0xe94afcffff	                           jmp 0x400749a	       902	cp-demangle.c	
0x4007850	            0x31c0	                            xor eax, eax	      2213	cp-demangle.c	FUNCTION_33	SWITCH_1
0x4007852	    0x41bc03000000	                             mov r12d, 3	      2230	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x4007858	            0xeb9f	                           jmp 0x40077f9	      2230	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x400785a	            0x31c0	                            xor eax, eax	      2213	cp-demangle.c	FUNCTION_33	SWITCH_1
0x400785c	    0x41bc02000000	                             mov r12d, 2	      2227	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x4007862	            0xeb95	                           jmp 0x40077f9	      2227	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x4007864	            0x31c0	                            xor eax, eax	      2213	cp-demangle.c	FUNCTION_33	SWITCH_1
0x4007866	    0x41bc05000000	                             mov r12d, 5	      2236	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x400786c	            0xeb8b	                           jmp 0x40077f9	      2236	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x400786e	        0x4883c102	                              add rcx, 2	      2242	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_5
0x4007872	    0x41bc01000000	                             mov r12d, 1	      2224	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x4007878	        0x48894b18	             mov qword [rbx + 0x18], rcx	      2242	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_5
0x400787c	            0xeb8b	                           jmp 0x4007809	      2242	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_5
0x400787e	           0xfb611	                   movzx edx, byte [rcx]	      2242	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_5
0x4007881	            0x31ed	                            xor ebp, ebp	      1145	cp-demangle.c	FUNCTION_11	IF_1
0x4007883	      0xe912fcffff	                           jmp 0x400749a	      1145	cp-demangle.c	FUNCTION_11	IF_1
0x4007888	         0xfb65102	               movzx edx, byte [rcx + 2]	      1145	cp-demangle.c	FUNCTION_11	IF_1
0x400788c	            0x31ed	                            xor ebp, ebp	      1159	cp-demangle.c	FUNCTION_12	IF_1
0x400788e	      0xe907fcffff	                           jmp 0x400749a	      1159	cp-demangle.c	FUNCTION_12	IF_1
0x4007893	        0x4883c103	                              add rcx, 3	      2242	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_5
0x4007897	    0x41bc01000000	                             mov r12d, 1	      2224	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x400789d	        0x48894b18	             mov qword [rbx + 0x18], rcx	      2242	cp-demangle.c	FUNCTION_33	SWITCH_1	CALL_5
0x40078a1	          0x4889df	                            mov rdi, rbx	      2245	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_5
0x40078a4	      0xe800000000	                          call 0x40078a9	      2245	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_5
0x40078a9	        0x488b7340	            mov rsi, qword [rbx + 0x40] 	      2245	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_5
0x40078ad	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	      2245	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_5
0x40078b1	      0xe953ffffff	                           jmp 0x4007809	      2245	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_5
0x40078b6	        0x488d5101	                      lea rdx, [rcx + 1]	      2218	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4	CALL_3
0x40078ba	        0x48895318	             mov qword [rbx + 0x18], rdx	      2218	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4	CALL_3
0x40078be	         0xfb64102	               movzx eax, byte [rcx + 2]	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x40078c2	          0x83e831	                           sub eax, 0x31	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x40078c5	            0x3c04	                               cmp al, 4	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x40078c7	            0x773e	                            ja 0x4007907	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x40078c9	           0xfb6c0	                           movzx eax, al	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x40078cc	    0xff24c5000000	                       jmp qword [rax*8]	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x40078d3	          0x4889d1	                            mov rcx, rdx	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x40078d6	      0xb801000000	                              mov eax, 1	      2217	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4
0x40078db	      0xe913ffffff	                           jmp 0x40077f3	      2217	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4
0x40078e0	          0x4889d1	                            mov rcx, rdx	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x40078e3	      0xb801000000	                              mov eax, 1	      2217	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4
0x40078e8	      0xe965ffffff	                           jmp 0x4007852	      2217	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4
0x40078ed	          0x4889d1	                            mov rcx, rdx	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x40078f0	      0xb801000000	                              mov eax, 1	      2217	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4
0x40078f5	      0xe962ffffff	                           jmp 0x400785c	      2217	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4
0x40078fa	          0x4889d1	                            mov rcx, rdx	      2221	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2	CALL_4
0x40078fd	      0xb801000000	                              mov eax, 1	      2217	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4
0x4007902	      0xe95fffffff	                           jmp 0x4007866	      2217	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4
0x4007907	         0xfb65101	               movzx edx, byte [rcx + 1]	      2217	cp-demangle.c	FUNCTION_33	SWITCH_1	IF_4
0x400790b	            0x31ed	                            xor ebp, ebp	      2239	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
0x400790d	      0xe988fbffff	                           jmp 0x400749a	      2239	cp-demangle.c	FUNCTION_33	SWITCH_1	SWITCH_2
d_demangle_callback	CALL,12:FOR,0:IF,4:ELSE,2:WHILE,0:DO,0:functions,0:SWITCH,1	162
0x4009de0	              0x55	                                push rbp	      6201	cp-demangle.c	FUNCTION_96
0x4009de1	          0x4889e5	                            mov rbp, rsp	      6201	cp-demangle.c	FUNCTION_96
0x4009de4	            0x4157	                                push r15	      6201	cp-demangle.c	FUNCTION_96
0x4009de6	            0x4156	                                push r14	      6201	cp-demangle.c	FUNCTION_96
0x4009de8	            0x4155	                                push r13	      6201	cp-demangle.c	FUNCTION_96
0x4009dea	            0x4154	                                push r12	      6201	cp-demangle.c	FUNCTION_96
0x4009dec	          0x4189f7	                           mov r15d, esi	      6201	cp-demangle.c	FUNCTION_96
0x4009def	              0x53	                                push rbx	      6201	cp-demangle.c	FUNCTION_96
0x4009df0	          0x4989d5	                            mov r13, rdx	      6201	cp-demangle.c	FUNCTION_96
0x4009df3	          0x4889fb	                            mov rbx, rdi	      6201	cp-demangle.c	FUNCTION_96
0x4009df6	          0x4989ce	                            mov r14, rcx	      6201	cp-demangle.c	FUNCTION_96
0x4009df9	        0x4883ec78	                           sub rsp, 0x78	      6201	cp-demangle.c	FUNCTION_96
0x4009dfd	    0x64488b042528	                mov rax, qword fs:[0x28]	      6201	cp-demangle.c	FUNCTION_96
0x4009e06	        0x488945c8	             mov qword [rbp - 0x38], rax	      6201	cp-demangle.c	FUNCTION_96
0x4009e0a	            0x31c0	                            xor eax, eax	      6201	cp-demangle.c	FUNCTION_96
0x4009e0c	          0x803f5f	                    cmp byte [rdi], 0x5f	      6214	cp-demangle.c	FUNCTION_96	IF_1
0x4009e0f	     0xf84db010000	                            je 0x4009ff0	      6214	cp-demangle.c	FUNCTION_96	IF_1
0x4009e15	      0xbf00000000	                              mov edi, 0	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x4009e1a	      0xb908000000	                              mov ecx, 8	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x4009e1f	          0x4889de	                            mov rsi, rbx	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x4009e22	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x4009e24	            0x7532	                           jne 0x4009e58	      6216	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2	CALL_1
0x4009e26	         0xfb64308	               movzx eax, byte [rbx + 8]	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009e2a	          0x83e824	                           sub eax, 0x24	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009e2d	            0x3c3b	                            cmp al, 0x3b	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009e2f	            0x7727	                            ja 0x4009e58	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009e31	    0x48ba01040000	          movabs rdx, 0x800000000000401 	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009e3b	        0x480fa3c2	                             bt rdx, rax	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009e3f	            0x7317	                           jae 0x4009e58	      6217	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009e41	         0xfb64309	               movzx eax, byte [rbx + 9]	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009e45	            0x3c44	                            cmp al, 0x44	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009e47	     0xf84bb010000	                            je 0x400a008	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009e4d	            0x3c49	                            cmp al, 0x49	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009e4f	     0xf84b3010000	                            je 0x400a008	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009e55	           0xf1f00	                         nop dword [rax]	      6218	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x4009e58	          0x4489f8	                           mov eax, r15d	      6223	cp-demangle.c	FUNCTION_96	ELSE_2	IF_3
0x4009e5b	          0x83e010	                           and eax, 0x10	      6223	cp-demangle.c	FUNCTION_96	ELSE_2	IF_3
0x4009e5e	     0xf8462010000	                            je 0x4009fc6	      6223	cp-demangle.c	FUNCTION_96	ELSE_2	IF_3
0x4009e64	          0x4531e4	                          xor r12d, r12d	      6225	cp-demangle.c	FUNCTION_96	ELSE_2
0x4009e67	          0x4889df	                            mov rdi, rbx	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x4009e6a	      0xe800000000	                          call 0x4009e6f	      6228	cp-demangle.c	FUNCTION_96	CALL_2
0x4009e6f	        0x488d1403	                    lea rdx, [rbx + rax]	      6170	cp-demangle.c	
0x4009e73	          0x8945ac	             mov dword [rbp - 0x54], eax	      6183	cp-demangle.c	
0x4009e76	    0x4889a568ffff	             mov qword [rbp - 0x98], rsp	      6230	cp-demangle.c	FUNCTION_96
0x4009e7d	    0x48899d70ffff	             mov qword [rbp - 0x90], rbx	      6169	cp-demangle.c	
0x4009e84	        0x44897d80	            mov dword [rbp - 0x80], r15d	      6171	cp-demangle.c	
0x4009e88	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	      6170	cp-demangle.c	
0x4009e8f	          0x8d1400	                    lea edx, [rax + rax]	      6178	cp-demangle.c	
0x4009e92	            0x4898	                                    cdqe	      6233	cp-demangle.c	FUNCTION_96
0x4009e94	    0x488d04c51600	                 lea rax, [rax*8 + 0x16]	      6233	cp-demangle.c	FUNCTION_96
0x4009e9c	        0x48895d88	             mov qword [rbp - 0x78], rbx	      6173	cp-demangle.c	
0x4009ea0	    0xc74598000000	               mov dword [rbp - 0x68], 0	      6179	cp-demangle.c	
0x4009ea7	          0x89559c	             mov dword [rbp - 0x64], edx	      6178	cp-demangle.c	
0x4009eaa	          0x4863d2	                         movsxd rdx, edx	      6232	cp-demangle.c	FUNCTION_96
0x4009ead	    0xc745a8000000	               mov dword [rbp - 0x58], 0	      6184	cp-demangle.c	
0x4009eb4	        0x488d1452	                  lea rdx, [rdx + rdx*2]	      6232	cp-demangle.c	FUNCTION_96
0x4009eb8	        0x4883e0f0	             and rax, 0xfffffffffffffff0	      6233	cp-demangle.c	FUNCTION_96
0x4009ebc	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      6186	cp-demangle.c	
0x4009ec4	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      6188	cp-demangle.c	
0x4009ecb	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      6189	cp-demangle.c	
0x4009ed2	    0x488d14d51000	                 lea rdx, [rdx*8 + 0x10]	      6232	cp-demangle.c	FUNCTION_96
0x4009eda	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      6190	cp-demangle.c	
0x4009ee1	          0x4829d4	                            sub rsp, rdx	      6232	cp-demangle.c	FUNCTION_96
0x4009ee4	          0x4889e2	                            mov rdx, rsp	      6232	cp-demangle.c	FUNCTION_96
0x4009ee7	          0x4829c4	                            sub rsp, rax	      6233	cp-demangle.c	FUNCTION_96
0x4009eea	        0x4183fc01	                             cmp r12d, 1	      6242	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4009eee	        0x48895590	             mov qword [rbp - 0x70], rdx	      6235	cp-demangle.c	FUNCTION_96
0x4009ef2	        0x488965a0	             mov qword [rbp - 0x60], rsp	      6236	cp-demangle.c	FUNCTION_96
0x4009ef6	     0xf8484000000	                            je 0x4009f80	      6242	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4009efc	     0xf8226010000	                            jb 0x400a028	      6242	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4009f02	        0x4183fc03	                             cmp r12d, 3	      6242	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4009f06	     0xf871c010000	                            ja 0x400a028	      6242	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4009f0c	        0x807b0b5f	              cmp byte [rbx + 0xb], 0x5f	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4009f10	        0x488d730b	                    lea rsi, [rbx + 0xb]	      6252	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_3
0x4009f14	        0x48897588	             mov qword [rbp - 0x78], rsi	      6252	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_3
0x4009f18	            0x750a	                           jne 0x4009f24	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4009f1a	        0x807b0c5a	              cmp byte [rbx + 0xc], 0x5a	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4009f1e	     0xf842c010000	                            je 0x400a050	      1053	cp-demangle.c	FUNCTION_5	IF_1	CALL_2
0x4009f24	          0x4889f7	                            mov rdi, rsi	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x4009f27	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x4009f2e	    0x488d9d70ffff	                   lea rbx, [rbp - 0x90]	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x4009f35	      0xe800000000	                          call 0x4009f3a	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x4009f3a	    0x488bb560ffff	             mov rsi, qword [rbp - 0xa0]	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x4009f41	            0x89c2	                            mov edx, eax	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x4009f43	          0x4889df	                            mov rdi, rbx	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x4009f46	      0xe8e566ffff	                    call sym.d_make_name	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x4009f4b	          0x4889c2	                            mov rdx, rax	      1054	cp-demangle.c	FUNCTION_5	CALL_4
0x4009f4e	            0x31f6	                            xor esi, esi	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4009f50	        0x4183fc02	                             cmp r12d, 2	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4009f54	          0x4889df	                            mov rdi, rbx	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4009f57	        0x400f95c6	                               setne sil	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4009f5b	            0x31c9	                            xor ecx, ecx	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4009f5d	          0x83c643	                           add esi, 0x43	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4009f60	      0xe8db60ffff	                    call sym.d_make_comp	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4009f65	        0x4c8b6588	             mov r12, qword [rbp - 0x78]	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4009f69	          0x4889c3	                            mov rbx, rax	      6253	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_4
0x4009f6c	          0x4c89e7	                            mov rdi, r12	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4009f6f	      0xe800000000	                          call 0x4009f74	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4009f74	          0x4c01e0	                            add rax, r12	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4009f77	        0x48894588	             mov qword [rbp - 0x78], rax	      6259	cp-demangle.c	FUNCTION_96	SWITCH_1	CALL_9
0x4009f7b	            0xeb17	                           jmp 0x4009f94	      6260	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4009f7d	           0xf1f00	                         nop dword [rax]	      6260	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4009f80	    0x488dbd70ffff	                   lea rdi, [rbp - 0x90]	      6248	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4009f87	      0xbe01000000	                              mov esi, 1	      6248	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4009f8c	      0xe800000000	                          call 0x4009f91	      6248	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4009f91	          0x4889c3	                            mov rbx, rax	      6248	cp-demangle.c	FUNCTION_96	SWITCH_1
0x4009f94	        0x41f6c701	                            test r15b, 1	      6269	cp-demangle.c	FUNCTION_96	IF_4	CALL_11
0x4009f98	            0x740b	                            je 0x4009fa5	      6269	cp-demangle.c	FUNCTION_96	IF_4	CALL_11
0x4009f9a	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      6269	cp-demangle.c	FUNCTION_96	IF_4	CALL_11
0x4009f9e	            0x31c0	                            xor eax, eax	      6278	cp-demangle.c	FUNCTION_96
0x4009fa0	          0x803a00	                       cmp byte [rdx], 0	      6269	cp-demangle.c	FUNCTION_96	IF_4	CALL_11
0x4009fa3	            0x751a	                           jne 0x4009fbf	      6269	cp-demangle.c	FUNCTION_96	IF_4	CALL_11
0x4009fa5	          0x4885db	                           test rbx, rbx	      6278	cp-demangle.c	FUNCTION_96
0x4009fa8	     0xf8492000000	                            je 0x400a040	      6278	cp-demangle.c	FUNCTION_96
0x4009fae	          0x4c89f1	                            mov rcx, r14	      6278	cp-demangle.c	FUNCTION_96
0x4009fb1	          0x4c89ea	                            mov rdx, r13	      6278	cp-demangle.c	FUNCTION_96
0x4009fb4	          0x4889de	                            mov rsi, rbx	      6278	cp-demangle.c	FUNCTION_96
0x4009fb7	          0x4489ff	                           mov edi, r15d	      6278	cp-demangle.c	FUNCTION_96
0x4009fba	      0xe800000000	                          call 0x4009fbf	      6278	cp-demangle.c	FUNCTION_96
0x4009fbf	    0x488ba568ffff	             mov rsp, qword [rbp - 0x98]	      6278	cp-demangle.c	FUNCTION_96
0x4009fc6	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      6282	cp-demangle.c	FUNCTION_96
0x4009fca	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6282	cp-demangle.c	FUNCTION_96
0x4009fd3	     0xf8598000000	                           jne 0x400a071	      6282	cp-demangle.c	FUNCTION_96
0x4009fd9	        0x488d65d8	                   lea rsp, [rbp - 0x28]	      6282	cp-demangle.c	FUNCTION_96
0x4009fdd	              0x5b	                                 pop rbx	      6282	cp-demangle.c	FUNCTION_96
0x4009fde	            0x415c	                                 pop r12	      6282	cp-demangle.c	FUNCTION_96
0x4009fe0	            0x415d	                                 pop r13	      6282	cp-demangle.c	FUNCTION_96
0x4009fe2	            0x415e	                                 pop r14	      6282	cp-demangle.c	FUNCTION_96
0x4009fe4	            0x415f	                                 pop r15	      6282	cp-demangle.c	FUNCTION_96
0x4009fe6	              0x5d	                                 pop rbp	      6282	cp-demangle.c	FUNCTION_96
0x4009fe7	              0xc3	                                     ret	      6282	cp-demangle.c	FUNCTION_96
0x4009fe8	     0xf1f84000000	                   nop dword [rax + rax]	      6282	cp-demangle.c	FUNCTION_96
0x4009ff0	        0x807f015a	                cmp byte [rdi + 1], 0x5a	      6214	cp-demangle.c	FUNCTION_96	IF_1
0x4009ff4	     0xf851bfeffff	                           jne 0x4009e15	      6214	cp-demangle.c	FUNCTION_96	IF_1
0x4009ffa	    0x41bc01000000	                             mov r12d, 1	      6215	cp-demangle.c	FUNCTION_96	IF_1
0x400a000	      0xe962feffff	                           jmp 0x4009e67	      6215	cp-demangle.c	FUNCTION_96	IF_1
0x400a005	           0xf1f00	                         nop dword [rax]	      6215	cp-demangle.c	FUNCTION_96	IF_1
0x400a008	        0x807b0a5f	              cmp byte [rbx + 0xa], 0x5f	      6219	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x400a00c	     0xf8546feffff	                           jne 0x4009e58	      6219	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x400a012	          0x4531e4	                          xor r12d, r12d	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x400a015	            0x3c49	                            cmp al, 0x49	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x400a017	        0x410f95c4	                              setne r12b	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x400a01b	        0x4183c402	                             add r12d, 2	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x400a01f	      0xe943feffff	                           jmp 0x4009e67	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x400a024	         0xf1f4000	                         nop dword [rax]	      6220	cp-demangle.c	FUNCTION_96	ELSE_1	IF_2
0x400a028	    0x488dbd70ffff	                   lea rdi, [rbp - 0x90]	      6245	cp-demangle.c	FUNCTION_96	SWITCH_1
0x400a02f	      0xe800000000	                          call 0x400a034	      6245	cp-demangle.c	FUNCTION_96	SWITCH_1
0x400a034	          0x4889c3	                            mov rbx, rax	      6245	cp-demangle.c	FUNCTION_96	SWITCH_1
0x400a037	      0xe958ffffff	                           jmp 0x4009f94	      6246	cp-demangle.c	FUNCTION_96	SWITCH_1
0x400a03c	         0xf1f4000	                         nop dword [rax]	      6246	cp-demangle.c	FUNCTION_96	SWITCH_1
0x400a040	            0x31c0	                            xor eax, eax	      6278	cp-demangle.c	FUNCTION_96
0x400a042	      0xe978ffffff	                           jmp 0x4009fbf	      6278	cp-demangle.c	FUNCTION_96
0x400a047	    0x660f1f840000	                    nop word [rax + rax]	      6278	cp-demangle.c	FUNCTION_96
0x400a050	        0x4883c30d	                            add rbx, 0xd	      1055	cp-demangle.c	FUNCTION_5	CALL_5
0x400a054	            0x31f6	                            xor esi, esi	      1056	cp-demangle.c	FUNCTION_5	CALL_6
0x400a056	        0x48895d88	             mov qword [rbp - 0x78], rbx	      1055	cp-demangle.c	FUNCTION_5	CALL_5
0x400a05a	    0x488d9d70ffff	                   lea rbx, [rbp - 0x90]	      1056	cp-demangle.c	FUNCTION_5	CALL_6
0x400a061	          0x4889df	                            mov rdi, rbx	      1056	cp-demangle.c	FUNCTION_5	CALL_6
0x400a064	      0xe8b7f1ffff	                     call sym.d_encoding	      1056	cp-demangle.c	FUNCTION_5	CALL_6
0x400a069	          0x4889c2	                            mov rdx, rax	      1056	cp-demangle.c	FUNCTION_5	CALL_6
0x400a06c	      0xe9ddfeffff	                           jmp 0x4009f4e	      1056	cp-demangle.c	FUNCTION_5	CALL_6
0x400a071	      0xe800000000	                          call 0x400a076	      6282	cp-demangle.c	FUNCTION_96
java_demangle_v3_callback	CALL,1:FOR,0:IF,0:ELSE,0:WHILE,0:DO,0:functions,0:SWITCH,0	4
0x400a330	          0x4889d1	                            mov rcx, rdx	      6484	cp-demangle.c	FUNCTION_103	CALL_1
0x400a333	          0x4889f2	                            mov rdx, rsi	      6484	cp-demangle.c	FUNCTION_103	CALL_1
0x400a336	      0xbe25000000	                           mov esi, 0x25	      6484	cp-demangle.c	FUNCTION_103	CALL_1
0x400a33b	      0xe9a0faffff	             jmp sym.d_demangle_callback	      6484	cp-demangle.c	FUNCTION_103	CALL_1
d_print_comp_inner	CALL,237:FOR,3:IF,91:ELSE,17:WHILE,5:DO,0:functions,0:SWITCH,4	3512
0x4000be0	            0x4157	                                push r15	      4623	cp-demangle.c	FUNCTION_86
0x4000be2	            0x4156	                                push r14	      4623	cp-demangle.c	FUNCTION_86
0x4000be4	            0x4155	                                push r13	      4623	cp-demangle.c	FUNCTION_86
0x4000be6	            0x4154	                                push r12	      4623	cp-demangle.c	FUNCTION_86
0x4000be8	              0x55	                                push rbp	      4623	cp-demangle.c	FUNCTION_86
0x4000be9	              0x53	                                push rbx	      4623	cp-demangle.c	FUNCTION_86
0x4000bea	          0x4889fb	                            mov rbx, rdi	      4623	cp-demangle.c	FUNCTION_86
0x4000bed	    0x4881ece80000	                           sub rsp, 0xe8	      4623	cp-demangle.c	FUNCTION_86
0x4000bf4	    0x64488b042528	                mov rax, qword fs:[0x28]	      4623	cp-demangle.c	FUNCTION_86
0x4000bfd	    0x48898424d800	             mov qword [rsp + 0xd8], rax	      4623	cp-demangle.c	FUNCTION_86
0x4000c05	            0x31c0	                            xor eax, eax	      4623	cp-demangle.c	FUNCTION_86
0x4000c07	          0x4885d2	                           test rdx, rdx	      4635	cp-demangle.c	FUNCTION_86	IF_1
0x4000c0a	     0xf84a8010000	                            je 0x4000db8	      4635	cp-demangle.c	FUNCTION_86	IF_1
0x4000c10	    0x8b8730010000	           mov eax, dword [rdi + 0x130] 	      4640	cp-demangle.c	FUNCTION_86	IF_2	CALL_2
0x4000c16	            0x85c0	                           test eax, eax	      4640	cp-demangle.c	FUNCTION_86	IF_2	CALL_2
0x4000c18	     0xf853a010000	                           jne 0x4000d58	      4640	cp-demangle.c	FUNCTION_86	IF_2	CALL_2
0x4000c1e	            0x8b02	                    mov eax, dword [rdx]	      4643	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4000c20	          0x4989d4	                            mov r12, rdx	      4643	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4000c23	          0x83f84f	                           cmp eax, 0x4f	      4643	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4000c26	     0xf87dc1c0000	                            ja 0x4002908	      4643	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4000c2c	            0x89c2	                            mov edx, eax	      4643	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4000c2e	            0x89f5	                            mov ebp, esi	      4643	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4000c30	    0xff24d5000000	                       jmp qword [rdx*8]	      4643	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4000c37	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      5408	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_68
0x4000c3c	          0x833838	                   cmp dword [rax], 0x38	      5408	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_68
0x4000c3f	     0xf8573010000	                           jne 0x4000db8	      5408	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_68
0x4000c45	      0x498b542408	                mov rdx, qword [r12 + 8]	      5414	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_150
0x4000c4a	        0x488b4208	                mov rax, qword [rdx + 8]	      3237	cp-demangle.c	FUNCTION_50
0x4000c4e	          0x488b00	                    mov rax, qword [rax]	      3237	cp-demangle.c	FUNCTION_50
0x4000c51	        0x80780163	                cmp byte [rax + 1], 0x63	      3239	cp-demangle.c	FUNCTION_50
0x4000c55	     0xf847e360000	                            je 0x40042d9	      3239	cp-demangle.c	FUNCTION_50
0x4000c5b	      0x498d4c2410	                   lea rcx, [r12 + 0x10]	      3239	cp-demangle.c	FUNCTION_50
0x4000c60	            0x89ee	                            mov esi, ebp	      5425	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_70	CALL_157
0x4000c62	          0x4889df	                            mov rdi, rbx	      5425	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_70	CALL_157
0x4000c65	      0xe8d6560000	call sym.d_maybe_print_fold_expression.isra.15	      5425	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_70	CALL_157
0x4000c6a	            0x85c0	                           test eax, eax	      5425	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_70	CALL_157
0x4000c6c	     0xf85e6000000	                           jne 0x4000d58	      5425	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_70	CALL_157
0x4000c72	      0x498b442408	                mov rax, qword [r12 + 8]	      5431	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x4000c77	          0x833831	                   cmp dword [rax], 0x31	      5431	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x4000c7a	     0xf84083b0000	                            je 0x4004788	      5431	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x4000c80	        0x488b4008	                mov rax, qword [rax + 8]	      5436	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_159
0x4000c84	          0x488b00	                    mov rax, qword [rax]	      5436	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_159
0x4000c87	          0x803863	                    cmp byte [rax], 0x63	      5436	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_159
0x4000c8a	     0xf8534370000	                           jne 0x40043c4	      5436	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_159
0x4000c90	        0x8078016c	                cmp byte [rax + 1], 0x6c	      5436	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_159
0x4000c94	     0xf852a370000	                           jne 0x40043c4	      5436	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_159
0x4000c9a	        0x80780200	                   cmp byte [rax + 2], 0	      5436	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_159
0x4000c9e	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      5437	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72
0x4000ca3	            0x750d	                           jne 0x4000cb2	      5436	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_159
0x4000ca5	        0x488b4208	                mov rax, qword [rdx + 8]	      5437	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72
0x4000ca9	          0x833803	                      cmp dword [rax], 3	      5437	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72
0x4000cac	     0xf84503d0000	                            je 0x4004a02	      5437	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72
0x4000cb2	        0x488b5208	                mov rdx, qword [rdx + 8]	      5450	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_162
0x4000cb6	            0x89ee	                            mov esi, ebp	      5450	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_162
0x4000cb8	          0x4889df	                            mov rdi, rbx	      5450	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_162
0x4000cbb	      0xe880550000	                call sym.d_print_subexpr	      5450	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_162
0x4000cc0	      0x498b542408	                mov rdx, qword [r12 + 8]	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x4000cc5	        0x488b4208	                mov rax, qword [rdx + 8]	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x4000cc9	          0x488b00	                    mov rax, qword [rax]	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x4000ccc	           0xfb608	                   movzx ecx, byte [rax]	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x4000ccf	          0x83f969	                           cmp ecx, 0x69	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x4000cd2	     0xf845c390000	                            je 0x4004634	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x4000cd8	          0x83f963	                           cmp ecx, 0x63	      5459	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	IF_75	CALL_167
0x4000cdb	     0xf855d390000	                           jne 0x400463e	      5459	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	IF_75	CALL_167
0x4000ce1	        0x8078016c	                cmp byte [rax + 1], 0x6c	      5459	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	IF_75	CALL_167
0x4000ce5	     0xf8553390000	                           jne 0x400463e	      5459	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	IF_75	CALL_167
0x4000ceb	        0x80780200	                   cmp byte [rax + 2], 0	      5459	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	IF_75	CALL_167
0x4000cef	     0xf8549390000	                           jne 0x400463e	      5459	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	IF_75	CALL_167
0x4000cf5	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      5461	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_169
0x4000cfa	            0x89ee	                            mov esi, ebp	      5461	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_169
0x4000cfc	          0x4889df	                            mov rdi, rbx	      5461	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_169
0x4000cff	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5461	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_169
0x4000d03	      0xe838550000	                call sym.d_print_subexpr	      5461	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_169
0x4000d08	      0x498b442408	                mov rax, qword [r12 + 8]	      5464	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x4000d0d	          0x833831	                   cmp dword [rax], 0x31	      5464	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x4000d10	            0x7546	                           jne 0x4000d58	      5464	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x4000d12	        0x488b4008	                mov rax, qword [rax + 8]	      5465	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x4000d16	        0x83781001	               cmp dword [rax + 0x10], 1	      5465	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x4000d1a	            0x753c	                           jne 0x4000d58	      5465	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x4000d1c	        0x488b4008	                mov rax, qword [rax + 8]	      5466	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x4000d20	          0x80383e	                    cmp byte [rax], 0x3e	      5466	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x4000d23	            0x7533	                           jne 0x4000d58	      5466	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_76
0x4000d25	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000d30	     0xf84da3e0000	                            je 0x4004c10	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000d36	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4000d3d	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4000d41	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4000d48	        0xc6040329	              mov byte [rbx + rax], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x4000d4c	    0xc68308010000	           mov byte [rbx + 0x108], 0x29 	      4236	cp-demangle.c	FUNCTION_72
0x4000d53	       0xf1f440000	                   nop dword [rax + rax]	      4236	cp-demangle.c	FUNCTION_72
0x4000d58	    0x488b8424d800	            mov rax, qword [rsp + 0xd8] 	      5708	cp-demangle.c	FUNCTION_86
0x4000d60	    0x644833042528	                xor rax, qword fs:[0x28]	      5708	cp-demangle.c	FUNCTION_86
0x4000d69	     0xf85143a0000	                           jne 0x4004783	      5708	cp-demangle.c	FUNCTION_86
0x4000d6f	    0x4881c4e80000	                           add rsp, 0xe8	      5708	cp-demangle.c	FUNCTION_86
0x4000d76	              0x5b	                                 pop rbx	      5708	cp-demangle.c	FUNCTION_86
0x4000d77	              0x5d	                                 pop rbp	      5708	cp-demangle.c	FUNCTION_86
0x4000d78	            0x415c	                                 pop r12	      5708	cp-demangle.c	FUNCTION_86
0x4000d7a	            0x415d	                                 pop r13	      5708	cp-demangle.c	FUNCTION_86
0x4000d7c	            0x415e	                                 pop r14	      5708	cp-demangle.c	FUNCTION_86
0x4000d7e	            0x415f	                                 pop r15	      5708	cp-demangle.c	FUNCTION_86
0x4000d80	              0xc3	                                     ret	      5708	cp-demangle.c	FUNCTION_86
0x4000d81	        0x488b5708	                mov rdx, qword [rdi + 8]	      5049	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	IF_29
0x4000d85	        0x488d7008	                      lea rsi, [rax + 8]	      5049	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	IF_29
0x4000d89	    0x4c8bab200100	           mov r13, qword [rbx + 0x120] 	      5048	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	IF_29
0x4000d90	          0x4889df	                            mov rdi, rbx	      5054	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	CALL_88
0x4000d93	    0x41be01000000	                             mov r14d, 1	      5050	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	IF_29
0x4000d99	    0x488993200100	            mov qword [rbx + 0x120], rdx	      5049	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	IF_29
0x4000da0	      0xe8abf7ffff	call sym.d_lookup_template_argument.isra.8	      5054	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	CALL_88
0x4000da5	          0x4885c0	                           test rax, rax	      5055	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_30
0x4000da8	     0xf8578330000	                           jne 0x4004126	      5055	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_30
0x4000dae	    0x4c89ab200100	            mov qword [rbx + 0x120], r13	      5061	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_31	IF_32
0x4000db5	           0xf1f00	                         nop dword [rax]	      5061	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_31	IF_32
0x4000db8	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4000dc2	            0xeb94	                           jmp 0x4000d58	      4207	cp-demangle.c	FUNCTION_69
0x4000dc4	      0x498b542408	                mov rdx, qword [r12 + 8]	      5698	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_233
0x4000dc9	    0x41bd00000000	                             mov r13d, 0	      5698	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_233
0x4000dcf	    0x41bf00000000	                             mov r15d, 0	      5698	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_233
0x4000dd5	      0xe8763f0000	                   call sym.d_print_comp	      5698	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_233
0x4000dda	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      5698	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_233
0x4000de1	            0xeb2b	                           jmp 0x4000e0e	      5698	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_233
0x4000de3	       0xf1f440000	                   nop dword [rax + rax]	      5698	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_233
0x4000de8	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000deb	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000def	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000df3	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4000dfa	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4000dfe	          0x4d39ef	                            cmp r15, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4000e01	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4000e08	     0xf844f1e0000	                            je 0x4002c5d	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4000e0e	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000e14	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4000e19	            0x75cd	                           jne 0x4000de8	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000e1b	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000e22	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4000e29	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000e2e	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000e31	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000e37	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4000e3f	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4000e44	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4000e46	            0xeba7	                           jmp 0x4000def	      4224	cp-demangle.c	FUNCTION_71
0x4000e48	      0x498b542408	                mov rdx, qword [r12 + 8]	      4653	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_5
0x4000e4d	    0x41bd00000000	                             mov r13d, 0	      4653	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_5
0x4000e53	    0x41bf00000000	                             mov r15d, 0	      4653	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_5
0x4000e59	      0xe8f23e0000	                   call sym.d_print_comp	      4653	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_5
0x4000e5e	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4653	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_5
0x4000e65	            0xeb2f	                           jmp 0x4000e96	      4653	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_5
0x4000e67	    0x660f1f840000	                    nop word [rax + rax]	      4653	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_5
0x4000e70	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000e73	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000e77	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000e7b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4000e82	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4000e86	          0x4d39ef	                            cmp r15, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4000e89	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4000e90	     0xf848a1d0000	                            je 0x4002c20	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4000e96	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000e9c	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4000ea1	            0x75cd	                           jne 0x4000e70	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000ea3	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000eaa	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4000eb1	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000eb6	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000eb9	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000ebf	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4000ec7	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4000ecc	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4000ece	            0xeba7	                           jmp 0x4000e77	      4224	cp-demangle.c	FUNCTION_71
0x4000ed0	      0x498b742408	                mov rsi, qword [r12 + 8]	      5632	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_211
0x4000ed5	      0xe8e6f6ffff	                    call sym.d_find_pack	      5632	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_211
0x4000eda	          0x4885c0	                           test rax, rax	      5633	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_89
0x4000edd	    0xc74424080000	                  mov dword [rsp + 8], 0	      5633	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_89
0x4000ee5	     0xf8462370000	                            je 0x400464d	      5633	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_89
0x4000eeb	       0xf1f440000	                   nop dword [rax + rax]	      5633	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_89
0x4000ef0	          0x83382f	                   cmp dword [rax], 0x2f	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x4000ef3	     0xf85b9210000	                           jne 0x40030b2	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x4000ef9	      0x4883780800	                  cmp qword [rax + 8], 0	      4446	cp-demangle.c	FUNCTION_80	WHILE_1
0x4000efe	     0xf84ae210000	                            je 0x40030b2	      4446	cp-demangle.c	FUNCTION_80	WHILE_1
0x4000f04	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4449	cp-demangle.c	FUNCTION_80	WHILE_1
0x4000f08	      0x8344240801	                  add dword [rsp + 8], 1	      4448	cp-demangle.c	FUNCTION_80	WHILE_1
0x4000f0d	          0x4885c0	                           test rax, rax	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x4000f10	            0x75de	                           jne 0x4000ef0	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x4000f12	      0x498b442408	                mov rax, qword [r12 + 8]	      5644	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4000f17	        0x48890424	                    mov qword [rsp], rax	      5644	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4000f1b	        0x8b442408	                mov eax, dword [rsp + 8]	      5644	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4000f1f	          0x4531e4	                          xor r12d, r12d	      5644	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4000f22	    0x41bf00000000	                             mov r15d, 0	      5644	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4000f28	          0x83e801	                              sub eax, 1	      5644	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4000f2b	        0x8944240c	              mov dword [rsp + 0xc], eax	      5644	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4000f2f	              0x90	                                     nop	      5644	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4000f30	        0x488b1424	                    mov rdx, qword [rsp]	      5648	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	CALL_215
0x4000f34	    0x4489a33c0100	           mov dword [rbx + 0x13c], r12d	      5647	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3
0x4000f3b	            0x89ee	                            mov esi, ebp	      5648	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	CALL_215
0x4000f3d	          0x4889df	                            mov rdi, rbx	      5648	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	CALL_215
0x4000f40	      0xe80b3e0000	                   call sym.d_print_comp	      5648	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	CALL_215
0x4000f45	      0x443964240c	            cmp dword [rsp + 0xc], r12d 	      5649	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	IF_90
0x4000f4a	     0xf8ed0190000	                           jle 0x4002920	      5649	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	IF_90
0x4000f50	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      5649	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	IF_90
0x4000f57	    0x41be00000000	                             mov r14d, 0	      5649	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	IF_90
0x4000f5d	            0xeb27	                           jmp 0x4000f86	      5649	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	IF_90
0x4000f5f	              0x90	                                     nop	      5649	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3	IF_90
0x4000f60	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000f63	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000f67	        0x4983c601	                              add r14, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000f6b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4000f72	        0x44882c13	              mov byte [rbx + rdx], r13b	      4235	cp-demangle.c	FUNCTION_72
0x4000f76	          0x4d39f7	                            cmp r15, r14	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4000f79	    0x4488ab080100	            mov byte [rbx + 0x108], r13b	      4236	cp-demangle.c	FUNCTION_72
0x4000f80	     0xf849a190000	                            je 0x4002920	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4000f86	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000f8c	        0x450fb62e	                  movzx r13d, byte [r14]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4000f90	            0x75ce	                           jne 0x4000f60	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000f92	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000f99	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4000fa0	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000fa5	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000fa8	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4000fae	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4000fb6	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4000fbb	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4000fbd	            0xeba8	                           jmp 0x4000f67	      4224	cp-demangle.c	FUNCTION_71
0x4000fbf	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x4000fc6	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x4000fcc	    0x41bf00000000	                             mov r15d, 0	      4224	cp-demangle.c	FUNCTION_71
0x4000fd2	            0xeb2a	                           jmp 0x4000ffe	      4224	cp-demangle.c	FUNCTION_71
0x4000fd4	         0xf1f4000	                         nop dword [rax]	      4224	cp-demangle.c	FUNCTION_71
0x4000fd8	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000fdb	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000fdf	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4000fe3	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4000fea	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4000fee	          0x4d39ef	                            cmp r15, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4000ff1	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4000ff8	     0xf84971e0000	                            je 0x4002e95	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4000ffe	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001004	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4001009	            0x75cd	                           jne 0x4000fd8	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400100b	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001012	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4001019	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400101e	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001021	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001027	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400102f	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4001034	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4001036	            0xeba7	                           jmp 0x4000fdf	      4224	cp-demangle.c	FUNCTION_71
0x4001038	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x400103f	      0xbd00000000	                              mov ebp, 0	      4224	cp-demangle.c	FUNCTION_71
0x4001044	    0x41be00000000	                             mov r14d, 0	      4224	cp-demangle.c	FUNCTION_71
0x400104a	            0xeb2a	                           jmp 0x4001076	      4224	cp-demangle.c	FUNCTION_71
0x400104c	         0xf1f4000	                         nop dword [rax]	      4224	cp-demangle.c	FUNCTION_71
0x4001050	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001053	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001057	        0x4883c501	                              add rbp, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400105b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4001062	        0x44882c13	              mov byte [rbx + rdx], r13b	      4235	cp-demangle.c	FUNCTION_72
0x4001066	          0x4939ee	                            cmp r14, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001069	    0x4488ab080100	            mov byte [rbx + 0x108], r13b	      4236	cp-demangle.c	FUNCTION_72
0x4001070	     0xf84241c0000	                            je 0x4002c9a	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001076	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400107c	      0x440fb66d00	                  movzx r13d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4001081	            0x75cd	                           jne 0x4001050	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001083	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400108a	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4001091	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001096	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001099	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400109f	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40010a7	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x40010ac	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x40010ae	            0xeba7	                           jmp 0x4001057	      4224	cp-demangle.c	FUNCTION_71
0x40010b0	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x40010b7	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x40010bd	    0x41bf00000000	                             mov r15d, 0	      4224	cp-demangle.c	FUNCTION_71
0x40010c3	            0xeb29	                           jmp 0x40010ee	      4224	cp-demangle.c	FUNCTION_71
0x40010c5	           0xf1f00	                         nop dword [rax]	      4224	cp-demangle.c	FUNCTION_71
0x40010c8	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40010cb	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40010cf	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40010d3	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40010da	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x40010de	          0x4d39ef	                            cmp r15, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40010e1	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x40010e8	     0xf84cf1d0000	                            je 0x4002ebd	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40010ee	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40010f4	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40010f9	            0x75cd	                           jne 0x40010c8	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40010fb	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001102	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4001109	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400110e	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001111	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001117	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400111f	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4001124	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4001126	            0xeba7	                           jmp 0x40010cf	      4224	cp-demangle.c	FUNCTION_71
0x4001128	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x400112f	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x4001135	    0x41bf00000000	                             mov r15d, 0	      4224	cp-demangle.c	FUNCTION_71
0x400113b	            0xeb29	                           jmp 0x4001166	      4224	cp-demangle.c	FUNCTION_71
0x400113d	           0xf1f00	                         nop dword [rax]	      4224	cp-demangle.c	FUNCTION_71
0x4001140	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001143	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001147	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400114b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4001152	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4001156	          0x4d39ef	                            cmp r15, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001159	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4001160	     0xf84431d0000	                            je 0x4002ea9	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001166	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400116c	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4001171	            0x75cd	                           jne 0x4001140	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001173	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400117a	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4001181	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001186	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001189	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400118f	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4001197	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x400119c	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x400119e	            0xeba7	                           jmp 0x4001147	      4224	cp-demangle.c	FUNCTION_71
0x40011a0	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x40011a7	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x40011ad	    0x41bf00000000	                             mov r15d, 0	      4224	cp-demangle.c	FUNCTION_71
0x40011b3	            0xeb29	                           jmp 0x40011de	      4224	cp-demangle.c	FUNCTION_71
0x40011b5	           0xf1f00	                         nop dword [rax]	      4224	cp-demangle.c	FUNCTION_71
0x40011b8	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40011bb	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40011bf	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40011c3	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40011ca	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x40011ce	          0x4d39ef	                            cmp r15, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40011d1	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x40011d8	     0xf84071c0000	                            je 0x4002de5	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40011de	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40011e4	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40011e9	            0x75cd	                           jne 0x40011b8	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40011eb	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40011f2	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40011f9	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40011fe	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001201	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001207	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400120f	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4001214	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4001216	            0xeba7	                           jmp 0x40011bf	      4224	cp-demangle.c	FUNCTION_71
0x4001218	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x400121f	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x4001225	    0x41bf00000000	                             mov r15d, 0	      4224	cp-demangle.c	FUNCTION_71
0x400122b	            0xeb29	                           jmp 0x4001256	      4224	cp-demangle.c	FUNCTION_71
0x400122d	           0xf1f00	                         nop dword [rax]	      4224	cp-demangle.c	FUNCTION_71
0x4001230	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001233	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001237	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400123b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4001242	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4001246	          0x4d39ef	                            cmp r15, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001249	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4001250	     0xf84521b0000	                            je 0x4002da8	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001256	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400125c	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4001261	            0x75cd	                           jne 0x4001230	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001263	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400126a	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4001271	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001276	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001279	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400127f	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4001287	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x400128c	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x400128e	            0xeba7	                           jmp 0x4001237	      4224	cp-demangle.c	FUNCTION_71
0x4001290	    0x488dac24b000	                   lea rbp, [rsp + 0xb0]	        33	stdio2.h	FUNCTION_109	CALL_1
0x4001298	      0x458b442408	                mov r8d, dword [r12 + 8]	        33	stdio2.h	FUNCTION_109	CALL_1
0x400129d	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_109	CALL_1
0x40012a2	      0xba19000000	                           mov edx, 0x19	        33	stdio2.h	FUNCTION_109	CALL_1
0x40012a7	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_109	CALL_1
0x40012ac	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_109	CALL_1
0x40012ae	          0x4889ef	                            mov rdi, rbp	        33	stdio2.h	FUNCTION_109	CALL_1
0x40012b1	          0x4989ee	                            mov r14, rbp	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40012b4	      0xe800000000	                          call 0x40012b9	        33	stdio2.h	FUNCTION_109	CALL_1
0x40012b9	          0x418b16	                    mov edx, dword [r14]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40012bc	        0x4983c604	                              add r14, 4	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40012c0	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40012c6	            0xf7d2	                                 not edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40012c8	            0x21d0	                            and eax, edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40012ca	      0x2580808080	                     and eax, 0x80808080	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40012cf	            0x74e8	                            je 0x40012b9	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40012d1	            0x89c2	                            mov edx, eax	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40012d3	          0xc1ea10	                           shr edx, 0x10	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40012d6	      0xa980800000	                        test eax, 0x8080	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40012db	           0xf44c2	                          cmove eax, edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40012de	        0x498d5602	                      lea rdx, [r14 + 2]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40012e2	            0x89c1	                            mov ecx, eax	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40012e4	        0x4c0f44f2	                          cmove r14, rdx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40012e8	              0xc1	                              add cl, al	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40012ea	        0x4983de03	                              sbb r14, 3	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40012ee	          0x4929ee	                            sub r14, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40012f1	     0xf8461faffff	                            je 0x4000d58	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40012f7	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40012fe	          0x4531e4	                          xor r12d, r12d	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001301	            0xeb2b	                           jmp 0x400132e	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001303	       0xf1f440000	                   nop dword [rax + rax]	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001308	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400130b	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400130f	        0x4983c401	                              add r12, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001313	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x400131a	        0x44882c13	              mov byte [rbx + rdx], r13b	      4235	cp-demangle.c	FUNCTION_72
0x400131e	          0x4d39e6	                            cmp r14, r12	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001321	    0x4488ab080100	            mov byte [rbx + 0x108], r13b	      4236	cp-demangle.c	FUNCTION_72
0x4001328	     0xf842afaffff	                            je 0x4000d58	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400132e	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001334	    0x460fb66c2500	            movzx r13d, byte [rbp + r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x400133a	            0x75cc	                           jne 0x4001308	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400133c	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001343	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400134a	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400134f	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001352	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001358	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4001360	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4001365	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4001367	            0xeba6	                           jmp 0x400130f	      4224	cp-demangle.c	FUNCTION_71
0x4001369	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x4001370	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x4001376	    0x41bf00000000	                             mov r15d, 0	      4224	cp-demangle.c	FUNCTION_71
0x400137c	            0xeb28	                           jmp 0x40013a6	      4224	cp-demangle.c	FUNCTION_71
0x400137e	            0x6690	                                     nop	      4224	cp-demangle.c	FUNCTION_71
0x4001380	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001383	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001387	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400138b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4001392	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4001396	          0x4d39ef	                            cmp r15, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001399	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x40013a0	     0xf843a160000	                            je 0x40029e0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40013a6	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40013ac	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40013b1	            0x75cd	                           jne 0x4001380	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40013b3	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40013ba	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40013c1	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40013c6	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40013c9	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40013cf	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40013d7	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x40013dc	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x40013de	            0xeba7	                           jmp 0x4001387	      4224	cp-demangle.c	FUNCTION_71
0x40013e0	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40013e7	      0x418b6c2408	                mov ebp, dword [r12 + 8]	      5619	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_207
0x40013ec	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40013f2	     0xf84d9290000	                            je 0x4003dd1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40013f8	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40013fc	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001403	        0x40882c03	               mov byte [rbx + rax], bpl	      4235	cp-demangle.c	FUNCTION_72
0x4001407	    0x4088ab080100	             mov byte [rbx + 0x108], bpl	      4236	cp-demangle.c	FUNCTION_72
0x400140e	      0xe945f9ffff	                           jmp 0x4000d58	      4236	cp-demangle.c	FUNCTION_72
0x4001413	      0x498b542408	                mov rdx, qword [r12 + 8]	      5614	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_205
0x4001418	      0xe833390000	                   call sym.d_print_comp	      5614	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_205
0x400141d	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      5615	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_206
0x4001422	            0x89ee	                            mov esi, ebp	      5615	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_206
0x4001424	          0x4889df	                            mov rdi, rbx	      5615	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_206
0x4001427	      0xe824390000	                   call sym.d_print_comp	      5615	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_206
0x400142c	      0xe927f9ffff	                           jmp 0x4000d58	      5616	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001431	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      5616	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001438	    0x41bd00000000	                             mov r13d, 0	      5616	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400143e	    0x41bf00000000	                             mov r15d, 0	      5616	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001444	            0xeb30	                           jmp 0x4001476	      5616	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001446	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5616	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001450	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001453	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001457	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400145b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4001462	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4001466	          0x4d39ef	                            cmp r15, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001469	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4001470	     0xf8496170000	                            je 0x4002c0c	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001476	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400147c	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4001481	            0x75cd	                           jne 0x4001450	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001483	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400148a	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4001491	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001496	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001499	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400149f	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40014a7	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x40014ac	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x40014ae	            0xeba7	                           jmp 0x4001457	      4224	cp-demangle.c	FUNCTION_71
0x40014b0	      0x498b542408	                mov rdx, qword [r12 + 8]	      5527	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82
0x40014b5	          0x4531ed	                          xor r13d, r13d	      5526	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40014b8	          0x833a27	                   cmp dword [rdx], 0x27	      5527	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82
0x40014bb	     0xf846b230000	                            je 0x400382c	      5527	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82
0x40014c1	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40014c8	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40014ce	     0xf84a52d0000	                            je 0x4004279	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40014d4	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40014d8	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40014df	        0xc6040328	              mov byte [rbx + rax], 0x28	      4235	cp-demangle.c	FUNCTION_72
0x40014e3	            0x89ee	                            mov esi, ebp	      5592	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_196
0x40014e5	    0xc68308010000	           mov byte [rbx + 0x108], 0x28 	      4236	cp-demangle.c	FUNCTION_72
0x40014ec	      0x498b542408	                mov rdx, qword [r12 + 8]	      5592	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_196
0x40014f1	          0x4889df	                            mov rdi, rbx	      5592	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_196
0x40014f4	      0xe857380000	                   call sym.d_print_comp	      5592	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_196
0x40014f9	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001500	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001506	     0xf84ac2c0000	                            je 0x40041b8	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400150c	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4001510	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001517	        0xc6040329	              mov byte [rbx + rax], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x400151b	    0xc68308010000	           mov byte [rbx + 0x108], 0x29 	      4236	cp-demangle.c	FUNCTION_72
0x4001522	      0x41833c243d	                   cmp dword [r12], 0x3d	      5594	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_86
0x4001527	     0xf8478270000	                            je 0x4003ca5	      5594	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_86
0x400152d	        0x4183fd08	                             cmp r13d, 8	      5596	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_87
0x4001531	     0xf84ad260000	                            je 0x4003be4	      5596	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_87
0x4001537	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x400153c	            0x89ee	                            mov esi, ebp	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x400153e	          0x4889df	                            mov rdi, rbx	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x4001541	      0xe80a380000	                   call sym.d_print_comp	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x4001546	      0xe90df8ffff	                           jmp 0x4000d58	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x400154b	    0xc78730010000	              mov dword [rdi + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4001555	      0xe9fef7ffff	                           jmp 0x4000d58	      4207	cp-demangle.c	FUNCTION_69
0x400155a	      0x4d8b742408	                mov r14, qword [r12 + 8]	      5343	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400155f	      0x4d8b642410	            mov r12, qword [r12 + 0x10] 	      5344	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001564	          0x418b06	                    mov eax, dword [r14]	      5347	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59
0x4001567	          0x83f831	                           cmp eax, 0x31	      5347	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59
0x400156a	     0xf8430230000	                            je 0x40038a0	      5347	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59
0x4001570	          0x83f833	                           cmp eax, 0x33	      5384	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_65
0x4001573	     0xf85cb360000	                           jne 0x4004c44	      5384	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_65
0x4001579	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001580	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001586	     0xf84cf310000	                            je 0x400475b	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400158c	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4001590	            0x89ee	                            mov esi, ebp	      6113	cp-demangle.c	FUNCTION_94	CALL_1
0x4001592	          0x4889df	                            mov rdi, rbx	      6113	cp-demangle.c	FUNCTION_94	CALL_1
0x4001595	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400159c	        0xc6040328	              mov byte [rbx + rax], 0x28	      4235	cp-demangle.c	FUNCTION_72
0x40015a0	    0xc68308010000	           mov byte [rbx + 0x108], 0x28 	      4236	cp-demangle.c	FUNCTION_72
0x40015a7	        0x498b5608	                mov rdx, qword [r14 + 8]	      6113	cp-demangle.c	FUNCTION_94	CALL_1
0x40015ab	      0xe8a0370000	                   call sym.d_print_comp	      6113	cp-demangle.c	FUNCTION_94	CALL_1
0x40015b0	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40015b7	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40015bd	     0xf846d310000	                            je 0x4004730	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40015c3	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40015c7	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40015ce	        0xc6040329	              mov byte [rbx + rax], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x40015d2	    0xc68308010000	           mov byte [rbx + 0x108], 0x29 	      4236	cp-demangle.c	FUNCTION_72
0x40015d9	          0x4c89e2	                            mov rdx, r12	      5403	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_148
0x40015dc	            0x89ee	                            mov esi, ebp	      5403	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_148
0x40015de	          0x4889df	                            mov rdi, rbx	      5403	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_148
0x40015e1	      0xe85a4c0000	                call sym.d_print_subexpr	      5403	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_148
0x40015e6	      0xe96df7ffff	                           jmp 0x4000d58	      5403	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_148
0x40015eb	      0x498b542408	                mov rdx, qword [r12 + 8]	      5338	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_127
0x40015f0	      0xe89b4b0000	                call sym.d_print_expr_op	      5338	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_127
0x40015f5	      0xe95ef7ffff	                           jmp 0x4000d58	      5339	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40015fa	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      5339	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001601	    0x41bd00000000	                             mov r13d, 0	      5339	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001607	    0x41bf00000000	                             mov r15d, 0	      5339	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400160d	            0xeb27	                           jmp 0x4001636	      5339	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400160f	              0x90	                                     nop	      5339	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001610	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001613	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001617	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400161b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4001622	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4001626	          0x4d39ef	                            cmp r15, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001629	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4001630	     0xf84c3170000	                            je 0x4002df9	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001636	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400163c	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4001641	            0x75cd	                           jne 0x4001610	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001643	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400164a	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4001651	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001656	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001659	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400165f	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4001667	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x400166c	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x400166e	            0xeba7	                           jmp 0x4001617	      4224	cp-demangle.c	FUNCTION_71
0x4001670	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x4001677	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x400167d	    0x41bf00000000	                             mov r15d, 0	      4224	cp-demangle.c	FUNCTION_71
0x4001683	            0xeb29	                           jmp 0x40016ae	      4224	cp-demangle.c	FUNCTION_71
0x4001685	           0xf1f00	                         nop dword [rax]	      4224	cp-demangle.c	FUNCTION_71
0x4001688	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400168b	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400168f	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001693	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x400169a	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x400169e	          0x4d39ef	                            cmp r15, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40016a1	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x40016a8	     0xf84ab170000	                            je 0x4002e59	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40016ae	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40016b4	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40016b9	            0x75cd	                           jne 0x4001688	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40016bb	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40016c2	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40016c9	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40016ce	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40016d1	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40016d7	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40016df	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x40016e4	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x40016e6	            0xeba7	                           jmp 0x400168f	      4224	cp-demangle.c	FUNCTION_71
0x40016e8	      0x4d8b742408	                mov r14, qword [r12 + 8]	      5313	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40016ed	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      5313	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40016f4	      0xbd00000000	                              mov ebp, 0	      5313	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40016f9	        0x458b6e10	           mov r13d, dword [r14 + 0x10] 	      5314	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40016fd	            0xeb2b	                           jmp 0x400172a	      5314	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40016ff	              0x90	                                     nop	      5314	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001700	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001703	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001707	        0x4883c501	                              add rbp, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400170b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4001712	        0x44882413	              mov byte [rbx + rdx], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4001716	    0x4881fd000000	                              cmp rbp, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400171d	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4001724	     0xf84de130000	                            je 0x4002b08	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400172a	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001730	      0x440fb66500	                  movzx r12d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4001735	            0x75c9	                           jne 0x4001700	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001737	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400173e	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4001745	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400174a	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400174d	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001753	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400175b	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4001760	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4001762	            0xeba3	                           jmp 0x4001707	      4224	cp-demangle.c	FUNCTION_71
0x4001764	      0x498b542408	                mov rdx, qword [r12 + 8]	      5300	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001769	      0x4d8b642410	            mov r12, qword [r12 + 0x10] 	      5301	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400176e	          0x4885d2	                           test rdx, rdx	      5303	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_56
0x4001771	            0x7405	                            je 0x4001778	      5303	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_56
0x4001773	      0xe8d8350000	                   call sym.d_print_comp	      5304	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_116
0x4001778	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400177f	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001785	     0xf8494280000	                            je 0x400401f	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400178b	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400178f	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001796	            0x89ee	                            mov esi, ebp	      5306	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_118
0x4001798	        0xc604037b	              mov byte [rbx + rax], 0x7b	      4235	cp-demangle.c	FUNCTION_72
0x400179c	          0x4c89e2	                            mov rdx, r12	      5306	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_118
0x400179f	    0xc68308010000	           mov byte [rbx + 0x108], 0x7b 	      4236	cp-demangle.c	FUNCTION_72
0x40017a6	          0x4889df	                            mov rdi, rbx	      5306	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_118
0x40017a9	      0xe8a2350000	                   call sym.d_print_comp	      5306	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_118
0x40017ae	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40017b5	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40017bb	     0xf84a2250000	                            je 0x4003d63	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40017c1	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40017c5	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40017cc	        0xc604037d	              mov byte [rbx + rax], 0x7d	      4235	cp-demangle.c	FUNCTION_72
0x40017d0	    0xc68308010000	           mov byte [rbx + 0x108], 0x7d 	      4236	cp-demangle.c	FUNCTION_72
0x40017d7	      0xe97cf5ffff	                           jmp 0x4000d58	      4236	cp-demangle.c	FUNCTION_72
0x40017dc	      0x498b542408	                mov rdx, qword [r12 + 8]	      5277	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_52
0x40017e1	          0x4885d2	                           test rdx, rdx	      5277	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_52
0x40017e4	            0x7405	                            je 0x40017eb	      5277	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_52
0x40017e6	      0xe865350000	                   call sym.d_print_comp	      5278	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_112
0x40017eb	    0x49837c241000	               cmp qword [r12 + 0x10], 0	      5279	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53
0x40017f1	     0xf8461f5ffff	                            je 0x4000d58	      5279	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53
0x40017f7	    0x4c8bab000100	           mov r13, qword [rbx + 0x100] 	      5285	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_54
0x40017fe	    0x4981fdfd0000	                           cmp r13, 0xfd	      5285	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_54
0x4001805	     0xf873f240000	                            ja 0x4003c4a	      5285	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_54
0x400180b	    0x41be00000000	                             mov r14d, 0	      5285	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_54
0x4001811	            0xeb2f	                           jmp 0x4001842	      5285	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_54
0x4001813	       0xf1f440000	                   nop dword [rax + rax]	      5285	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_54
0x4001818	          0x4c89e8	                            mov rax, r13	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400181b	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400181f	        0x4983c601	                              add r14, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001823	    0x4c89ab000100	            mov qword [rbx + 0x100], r13	      4235	cp-demangle.c	FUNCTION_72
0x400182a	        0x44883c03	              mov byte [rbx + rax], r15b	      4235	cp-demangle.c	FUNCTION_72
0x400182e	    0x4981fe000000	                              cmp r14, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001835	    0x4488bb080100	            mov byte [rbx + 0x108], r15b	      4236	cp-demangle.c	FUNCTION_72
0x400183c	     0xf8402180000	                            je 0x4003044	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001842	    0x4981fdff0000	                           cmp r13, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001849	        0x450fb63e	                  movzx r15d, byte [r14]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x400184d	            0x75c9	                           jne 0x4001818	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400184f	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4001856	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400185d	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001862	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001865	    0x41bd01000000	                             mov r13d, 1	      4224	cp-demangle.c	FUNCTION_71
0x400186b	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001871	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4001879	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x400187b	            0xeba2	                           jmp 0x400181f	      4224	cp-demangle.c	FUNCTION_71
0x400187d	    0x6641837c2412	                cmp word [r12 + 0x12], 0	      5260	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_49
0x4001884	     0xf85861e0000	                           jne 0x4003710	      5260	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_49
0x400188a	      0x498b542408	                mov rdx, qword [r12 + 8]	      5263	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_50
0x400188f	    0x48817a080000	                  cmp qword [rdx + 8], 0	      5263	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_50
0x4001897	     0xf84c41d0000	                            je 0x4003661	      5263	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_50
0x400189d	            0x89ee	                            mov esi, ebp	      5266	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_50	CALL_108
0x400189f	          0x4889df	                            mov rdi, rbx	      5266	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_50	CALL_108
0x40018a2	      0xe8a9340000	                   call sym.d_print_comp	      5266	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_50	CALL_108
0x40018a7	    0x488b93000100	           mov rdx, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40018ae	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40018b5	     0xf844e2b0000	                            je 0x4004409	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40018bb	        0x488d4201	                      lea rax, [rdx + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40018bf	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40018c6	        0xc6041320	              mov byte [rbx + rdx], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x40018ca	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x40018d1	    0x6641837c2410	                cmp word [r12 + 0x10], 0	      5269	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_51
0x40018d8	     0xf844f1a0000	                            je 0x400332d	      5269	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_51
0x40018de	      0xbd00000000	                              mov ebp, 0	      5269	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_51
0x40018e3	            0xeb2d	                           jmp 0x4001912	      5269	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_51
0x40018e5	           0xf1f00	                         nop dword [rax]	      5269	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_51
0x40018e8	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40018eb	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40018ef	        0x4883c501	                              add rbp, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40018f3	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40018fa	        0x44882413	              mov byte [rbx + rdx], r12b	      4235	cp-demangle.c	FUNCTION_72
0x40018fe	    0x4881fd000000	                              cmp rbp, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001905	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x400190c	     0xf8446f4ffff	                            je 0x4000d58	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001912	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001918	      0x440fb66500	                  movzx r12d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x400191d	            0x75c9	                           jne 0x40018e8	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400191f	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001926	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400192d	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001932	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001935	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400193b	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4001943	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4001948	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x400194a	            0xeba3	                           jmp 0x40018ef	      4224	cp-demangle.c	FUNCTION_71
0x400194c	    0x488b87280100	           mov rax, qword [rdi + 0x128] 	      5241	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001953	      0x4c89642418	             mov qword [rsp + 0x18], r12	      5243	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001958	    0xc74424200000	               mov dword [rsp + 0x20], 0	      5244	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001960	      0x4889442410	             mov qword [rsp + 0x10], rax	      5241	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001965	      0x488d442410	                   lea rax, [rsp + 0x10]	      5242	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400196a	    0x488987280100	            mov qword [rdi + 0x128], rax	      5242	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001971	    0x488b87200100	           mov rax, qword [rdi + 0x120] 	      5245	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001978	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      5247	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_105
0x400197d	      0x4889442428	             mov qword [rsp + 0x28], rax	      5245	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001982	      0xe8c9330000	                   call sym.d_print_comp	      5247	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_105
0x4001987	        0x8b7c2420	            mov edi, dword [rsp + 0x20] 	      5251	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_48
0x400198b	            0x85ff	                           test edi, edi	      5251	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_48
0x400198d	            0x750d	                           jne 0x400199c	      5251	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_48
0x400198f	          0x4c89e2	                            mov rdx, r12	      5252	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_106
0x4001992	            0x89ee	                            mov esi, ebp	      5252	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_106
0x4001994	          0x4889df	                            mov rdi, rbx	      5252	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_106
0x4001997	      0xe864340000	                    call sym.d_print_mod	      5252	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_106
0x400199c	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5254	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40019a1	    0x488983280100	            mov qword [rbx + 0x128], rax	      5254	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40019a8	      0xe9abf3ffff	                           jmp 0x4000d58	      5254	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40019ad	          0x83e504	                              and ebp, 4	      5113	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_38
0x40019b0	      0x498b442408	                mov rax, qword [r12 + 8]	      5115	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_38
0x40019b5	     0xf8509180000	                           jne 0x40031c4	      5113	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_38
0x40019bb	        0x4c636808	            movsxd r13, dword [rax + 8] 	      5114	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_38	CALL_93
0x40019bf	          0x4c8b30	                    mov r14, qword [rax]	      5114	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_38	CALL_93
0x40019c2	          0x4d85ed	                           test r13, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40019c5	     0xf848df3ffff	                            je 0x4000d58	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40019cb	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40019d2	            0x31ed	                            xor ebp, ebp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40019d4	            0xeb30	                           jmp 0x4001a06	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40019d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40019e0	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40019e3	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40019e7	        0x4883c501	                              add rbp, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40019eb	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40019f2	        0x44882413	              mov byte [rbx + rdx], r12b	      4235	cp-demangle.c	FUNCTION_72
0x40019f6	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40019f9	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4001a00	     0xf8452f3ffff	                            je 0x4000d58	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001a06	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001a0c	      0x450fb6242e	            movzx r12d, byte [r14 + rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4001a11	            0x75cd	                           jne 0x40019e0	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001a13	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001a1a	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4001a21	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001a26	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001a29	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001a2f	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4001a37	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4001a3c	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4001a3e	            0xeba7	                           jmp 0x40019e7	      4224	cp-demangle.c	FUNCTION_71
0x4001a40	    0x448bb7380100	          mov r14d, dword [rdi + 0x138] 	      5010	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25
0x4001a47	      0x498b442408	                mov rax, qword [r12 + 8]	      5009	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001a4c	          0x4585f6	                         test r14d, r14d	      5010	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25
0x4001a4f	            0x8b10	                    mov edx, dword [rax]	      5011	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25
0x4001a51	    0x41be00000000	                             mov r14d, 0	      4633	cp-demangle.c	FUNCTION_86
0x4001a57	            0x7509	                           jne 0x4001a62	      5010	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25
0x4001a59	          0x83fa05	                              cmp edx, 5	      5011	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25
0x4001a5c	     0xf84ed250000	                            je 0x400404f	      5011	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25
0x4001a62	          0x83fa23	                           cmp edx, 0x23	      5070	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_33
0x4001a65	     0xf8440190000	                            je 0x40033ab	      5070	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_33
0x4001a6b	        0x41391424	                    cmp dword [r12], edx	      5071	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_33
0x4001a6f	     0xf8436190000	                            je 0x40033ab	      5071	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_33
0x4001a75	          0x83fa24	                           cmp edx, 0x24	      5073	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_6	IF_34
0x4001a78	     0xf841c250000	                            je 0x4003f9a	      5073	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_6	IF_34
0x4001a7e	    0x488b93280100	           mov rdx, qword [rbx + 0x128] 	      5073	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_6	IF_34
0x4001a85	           0xf1f00	                         nop dword [rax]	      5073	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_6	IF_34
0x4001a88	      0x488d442410	                   lea rax, [rsp + 0x10]	      5089	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001a8d	      0x4889542410	             mov qword [rsp + 0x10], rdx	      5088	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001a92	      0x4c89642418	             mov qword [rsp + 0x18], r12	      5090	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001a97	    0xc74424200000	               mov dword [rsp + 0x20], 0	      5091	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001a9f	    0x488983280100	            mov qword [rbx + 0x128], rax	      5089	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001aa6	    0x488b83200100	           mov rax, qword [rbx + 0x120] 	      5092	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001aad	      0x4889442428	             mov qword [rsp + 0x28], rax	      5092	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001ab2	      0x498b542408	                mov rdx, qword [r12 + 8]	      5095	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_35
0x4001ab7	            0x89ee	                            mov esi, ebp	      5097	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_91
0x4001ab9	          0x4889df	                            mov rdi, rbx	      5097	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_91
0x4001abc	      0xe88f320000	                   call sym.d_print_comp	      5097	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_91
0x4001ac1	      0x448b5c2420	           mov r11d, dword [rsp + 0x20] 	      5101	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_36
0x4001ac6	          0x4585db	                         test r11d, r11d	      5101	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_36
0x4001ac9	     0xf84d1150000	                            je 0x40030a0	      5101	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_36
0x4001acf	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5104	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001ad4	          0x4585f6	                         test r14d, r14d	      5106	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_37
0x4001ad7	    0x488983280100	            mov qword [rbx + 0x128], rax	      5104	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001ade	     0xf8474f2ffff	                            je 0x4000d58	      5106	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_37
0x4001ae4	    0x4c89ab200100	            mov qword [rbx + 0x120], r13	      5107	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_37
0x4001aeb	      0xe968f2ffff	                           jmp 0x4000d58	      5107	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_37
0x4001af0	    0x488b97280100	           mov rdx, qword [rdi + 0x128] 	      5107	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_37
0x4001af7	          0x4531f6	                          xor r14d, r14d	      4633	cp-demangle.c	FUNCTION_86
0x4001afa	            0xeb8c	                           jmp 0x4001a88	      4633	cp-demangle.c	FUNCTION_86
0x4001afc	    0x488bbf280100	           mov rdi, qword [rdi + 0x128] 	      4987	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1
0x4001b03	          0x4885ff	                           test rdi, rdi	      4987	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1
0x4001b06	     0xf847b2d0000	                            je 0x4004887	      4987	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1
0x4001b0c	          0x4889fa	                            mov rdx, rdi	      4987	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1
0x4001b0f	              0x90	                                     nop	      4987	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1
0x4001b10	        0x448b7a10	           mov r15d, dword [rdx + 0x10] 	      4989	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22
0x4001b14	          0x4585ff	                         test r15d, r15d	      4989	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22
0x4001b17	            0x7516	                           jne 0x4001b2f	      4989	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22
0x4001b19	        0x488b4a08	                mov rcx, qword [rdx + 8]	      4991	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_23
0x4001b1d	            0x8b09	                    mov ecx, dword [rcx]	      4991	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_23
0x4001b1f	          0x8d71e7	                   lea esi, [rcx - 0x19]	      4991	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_23
0x4001b22	          0x83fe02	                              cmp esi, 2	      4991	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_23
0x4001b25	            0x7710	                            ja 0x4001b37	      4991	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_23
0x4001b27	            0x39c8	                            cmp eax, ecx	      4995	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24
0x4001b29	     0xf8462210000	                            je 0x4003c91	      4995	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24
0x4001b2f	          0x488b12	                    mov rdx, qword [rdx]	      4987	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1
0x4001b32	          0x4885d2	                           test rdx, rdx	      4987	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1
0x4001b35	            0x75d9	                           jne 0x4001b10	      4987	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1
0x4001b37	          0x4889fa	                            mov rdx, rdi	      4987	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1
0x4001b3a	          0x4531f6	                          xor r14d, r14d	      4633	cp-demangle.c	FUNCTION_86
0x4001b3d	      0xe946ffffff	                           jmp 0x4001a88	      4633	cp-demangle.c	FUNCTION_86
0x4001b42	    0xc78730010000	              mov dword [rdi + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4001b4c	      0xe907f2ffff	                           jmp 0x4000d58	      4207	cp-demangle.c	FUNCTION_69
0x4001b51	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4207	cp-demangle.c	FUNCTION_69
0x4001b58	    0x41bd00000000	                             mov r13d, 0	      4207	cp-demangle.c	FUNCTION_69
0x4001b5e	            0xeb2a	                           jmp 0x4001b8a	      4207	cp-demangle.c	FUNCTION_69
0x4001b60	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001b63	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001b67	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001b6b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4001b72	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4001b76	    0x4981fd000000	                              cmp r13, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001b7d	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4001b84	     0xf845a100000	                            je 0x4002be4	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001b8a	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001b90	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4001b95	            0x75c9	                           jne 0x4001b60	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001b97	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001b9e	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4001ba5	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001baa	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001bad	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001bb3	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4001bbb	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4001bc0	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4001bc2	            0xeba3	                           jmp 0x4001b67	      4224	cp-demangle.c	FUNCTION_71
0x4001bc4	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x4001bcb	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x4001bd1	            0xeb2f	                           jmp 0x4001c02	      4224	cp-demangle.c	FUNCTION_71
0x4001bd3	       0xf1f440000	                   nop dword [rax + rax]	      4224	cp-demangle.c	FUNCTION_71
0x4001bd8	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001bdb	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001bdf	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001be3	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4001bea	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4001bee	    0x4981fd000000	                              cmp r13, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001bf5	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4001bfc	     0xf84ce0f0000	                            je 0x4002bd0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001c02	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001c08	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4001c0d	            0x75c9	                           jne 0x4001bd8	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001c0f	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001c16	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4001c1d	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001c22	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001c25	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001c2b	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4001c33	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4001c38	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4001c3a	            0xeba3	                           jmp 0x4001bdf	      4224	cp-demangle.c	FUNCTION_71
0x4001c3c	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x4001c43	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x4001c49	            0xeb2f	                           jmp 0x4001c7a	      4224	cp-demangle.c	FUNCTION_71
0x4001c4b	       0xf1f440000	                   nop dword [rax + rax]	      4224	cp-demangle.c	FUNCTION_71
0x4001c50	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001c53	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001c57	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001c5b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4001c62	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4001c66	    0x4981fd000000	                              cmp r13, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001c6d	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4001c74	     0xf847e0f0000	                            je 0x4002bf8	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001c7a	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001c80	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4001c85	            0x75c9	                           jne 0x4001c50	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001c87	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001c8e	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4001c95	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001c9a	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001c9d	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001ca3	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4001cab	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4001cb0	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4001cb2	            0xeba3	                           jmp 0x4001c57	      4224	cp-demangle.c	FUNCTION_71
0x4001cb4	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      5477	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_77
0x4001cb9	          0x83383a	                   cmp dword [rax], 0x3a	      5477	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_77
0x4001cbc	     0xf85f6f0ffff	                           jne 0x4000db8	      5477	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_77
0x4001cc2	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5478	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_77
0x4001cc6	          0x83383b	                   cmp dword [rax], 0x3b	      5478	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_77
0x4001cc9	     0xf85e9f0ffff	                           jne 0x4000db8	      5478	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_77
0x4001ccf	      0x498b542408	                mov rdx, qword [r12 + 8]	      5483	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_78	CALL_173
0x4001cd4	      0x498d4c2410	                   lea rcx, [r12 + 0x10]	      5483	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_78	CALL_173
0x4001cd9	      0xe862460000	call sym.d_maybe_print_fold_expression.isra.15	      5483	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_78	CALL_173
0x4001cde	            0x85c0	                           test eax, eax	      5483	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_78	CALL_173
0x4001ce0	     0xf8572f0ffff	                           jne 0x4000d58	      5483	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_78	CALL_173
0x4001ce6	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      5487	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001ceb	      0x4d8b7c2408	                mov r15, qword [r12 + 8]	      5486	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001cf0	        0x4c8b6808	                mov r13, qword [rax + 8]	      5487	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001cf4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5488	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001cf8	        0x4c8b7008	                mov r14, qword [rax + 8]	      5488	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001cfc	        0x4c8b6010	            mov r12, qword [rax + 0x10] 	      5489	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001d00	        0x498b4708	                mov rax, qword [r15 + 8]	      5491	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_174
0x4001d04	          0x488b00	                    mov rax, qword [rax]	      5491	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_174
0x4001d07	          0x803871	                    cmp byte [rax], 0x71	      5491	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_174
0x4001d0a	     0xf85ac2b0000	                           jne 0x40048bc	      5491	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_174
0x4001d10	        0x80780175	                cmp byte [rax + 1], 0x75	      5491	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_174
0x4001d14	     0xf85a22b0000	                           jne 0x40048bc	      5491	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_174
0x4001d1a	        0x80780200	                   cmp byte [rax + 2], 0	      5491	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_174
0x4001d1e	     0xf85982b0000	                           jne 0x40048bc	      5491	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_174
0x4001d24	          0x4c89ea	                            mov rdx, r13	      5493	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_175
0x4001d27	            0x89ee	                            mov esi, ebp	      5493	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_175
0x4001d29	          0x4889df	                            mov rdi, rbx	      5493	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_175
0x4001d2c	      0xe80f450000	                call sym.d_print_subexpr	      5493	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_175
0x4001d31	          0x4c89fa	                            mov rdx, r15	      5494	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_176
0x4001d34	            0x89ee	                            mov esi, ebp	      5494	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_176
0x4001d36	          0x4889df	                            mov rdi, rbx	      5494	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_176
0x4001d39	      0xe852440000	                call sym.d_print_expr_op	      5494	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_176
0x4001d3e	          0x4c89f2	                            mov rdx, r14	      5495	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_177
0x4001d41	            0x89ee	                            mov esi, ebp	      5495	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_177
0x4001d43	          0x4889df	                            mov rdi, rbx	      5495	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_177
0x4001d46	      0xe8f5440000	                call sym.d_print_subexpr	      5495	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_177
0x4001d4b	          0x4889df	                            mov rdi, rbx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4001d4e	      0xba03000000	                              mov edx, 3	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4001d53	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4001d58	      0xe843e4ffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4001d5d	          0x4c89e2	                            mov rdx, r12	      5497	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_179
0x4001d60	            0x89ee	                            mov esi, ebp	      5497	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_179
0x4001d62	          0x4889df	                            mov rdi, rbx	      5497	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_179
0x4001d65	      0xe8d6440000	                call sym.d_print_subexpr	      5497	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_179
0x4001d6a	      0xe9e9efffff	                           jmp 0x4000d58	      5497	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_179
0x4001d6f	              0x90	                                     nop	      5497	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_79	CALL_179
0x4001d70	      0x4d636c2410	         movsxd r13, dword [r12 + 0x10] 	      4974	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_83
0x4001d75	      0x4d8b742408	                mov r14, qword [r12 + 8]	      4974	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_83
0x4001d7a	          0x4d85ed	                           test r13, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001d7d	     0xf84d5efffff	                            je 0x4000d58	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001d83	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001d8a	            0x31ed	                            xor ebp, ebp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001d8c	            0xeb28	                           jmp 0x4001db6	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001d8e	            0x6690	                                     nop	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001d90	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001d93	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001d97	        0x4883c501	                              add rbp, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001d9b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4001da2	        0x44882413	              mov byte [rbx + rdx], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4001da6	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001da9	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4001db0	     0xf84a2efffff	                            je 0x4000d58	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001db6	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001dbc	      0x450fb6242e	            movzx r12d, byte [r14 + rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4001dc1	            0x75cd	                           jne 0x4001d90	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001dc3	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001dca	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4001dd1	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001dd6	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001dd9	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001ddf	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4001de7	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4001dec	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4001dee	            0xeba7	                           jmp 0x4001d97	      4224	cp-demangle.c	FUNCTION_71
0x4001df0	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001df7	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001dfd	     0xf84331f0000	                            je 0x4003d36	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001e03	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001e07	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001e0e	        0xc604037e	              mov byte [rbx + rax], 0x7e	      4235	cp-demangle.c	FUNCTION_72
0x4001e12	            0x89ee	                            mov esi, ebp	      4881	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_44
0x4001e14	    0xc68308010000	           mov byte [rbx + 0x108], 0x7e 	      4236	cp-demangle.c	FUNCTION_72
0x4001e1b	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      4881	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_44
0x4001e20	          0x4889df	                            mov rdi, rbx	      4881	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_44
0x4001e23	      0xe8282f0000	                   call sym.d_print_comp	      4881	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_44
0x4001e28	      0xe92befffff	                           jmp 0x4000d58	      4882	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001e2d	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      4876	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_42
0x4001e32	      0xe8192f0000	                   call sym.d_print_comp	      4876	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_42
0x4001e37	      0xe91cefffff	                           jmp 0x4000d58	      4877	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001e3c	      0x4d8b742408	                mov r14, qword [r12 + 8]	      5657	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001e41	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      5657	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001e48	      0xbd00000000	                              mov ebp, 0	      5657	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001e4d	    0x41bd00000000	                             mov r13d, 0	      5657	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001e53	          0x4d85f6	                           test r14, r14	      5658	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_91
0x4001e56	            0x752e	                           jne 0x4001e86	      5658	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_91
0x4001e58	      0xe943160000	                           jmp 0x40034a0	      5658	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_91
0x4001e5d	           0xf1f00	                         nop dword [rax]	      5658	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_91
0x4001e60	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001e63	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001e67	        0x4883c501	                              add rbp, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001e6b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4001e72	        0x44882413	              mov byte [rbx + rdx], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4001e76	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001e79	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4001e80	     0xf8446120000	                            je 0x40030cc	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4001e86	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001e8c	      0x440fb66500	                  movzx r12d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4001e91	            0x75cd	                           jne 0x4001e60	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001e93	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001e9a	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4001ea1	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001ea6	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001ea9	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4001eaf	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4001eb7	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4001ebc	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4001ebe	            0xeba7	                           jmp 0x4001e67	      4224	cp-demangle.c	FUNCTION_71
0x4001ec0	    0x8b8738010000	           mov eax, dword [rdi + 0x138] 	      4839	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_19
0x4001ec6	            0x85c0	                           test eax, eax	      4839	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_19
0x4001ec8	     0xf8546160000	                           jne 0x4003514	      4839	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_19
0x4001ece	      0x498d742408	                      lea rsi, [r12 + 8]	      4839	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_19
0x4001ed3	      0xe878e6ffff	call sym.d_lookup_template_argument.isra.8	      4850	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_38
0x4001ed8	          0x4885c0	                           test rax, rax	      4852	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	IF_20
0x4001edb	     0xf84d7eeffff	                            je 0x4000db8	      4852	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	IF_20
0x4001ee1	          0x83382f	                   cmp dword [rax], 0x2f	      4852	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	IF_20
0x4001ee4	     0xf84f6200000	                            je 0x4003fe0	      4852	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	IF_20
0x4001eea	    0x4c8ba3200100	           mov r12, qword [rbx + 0x120] 	      4866	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4
0x4001ef1	            0x89ee	                            mov esi, ebp	      4869	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_41
0x4001ef3	          0x4889df	                            mov rdi, rbx	      4869	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_41
0x4001ef6	        0x498b1424	                    mov rdx, qword [r12]	      4867	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4
0x4001efa	    0x488993200100	            mov qword [rbx + 0x120], rdx	      4867	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4
0x4001f01	          0x4889c2	                            mov rdx, rax	      4869	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_41
0x4001f04	      0xe8472e0000	                   call sym.d_print_comp	      4869	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_41
0x4001f09	    0x4c89a3200100	            mov qword [rbx + 0x120], r12	      4871	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4
0x4001f10	      0xe943eeffff	                           jmp 0x4000d58	      4871	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4
0x4001f15	        0x40f6c604	                             test sil, 4	      4807	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16
0x4001f19	    0x4c8baf700100	           mov r13, qword [rdi + 0x170] 	      4795	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001f20	    0x4c8bb7280100	           mov r14, qword [rdi + 0x128] 	      4802	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001f27	    0x4c89a7700100	            mov qword [rdi + 0x170], r12	      4796	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001f2e	    0x48c787280100	              mov qword [rdi + 0x128], 0	      4803	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001f39	      0x498b542408	                mov rdx, qword [r12 + 8]	      4805	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001f3e	            0x7410	                            je 0x4001f50	      4807	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16
0x4001f40	            0x8b02	                    mov eax, dword [rdx]	      4808	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16
0x4001f42	            0x85c0	                           test eax, eax	      4808	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16
0x4001f44	            0x750a	                           jne 0x4001f50	      4808	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16
0x4001f46	        0x837a1006	               cmp dword [rdx + 0x10], 6	      4809	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16
0x4001f4a	     0xf8438240000	                            je 0x4004388	      4809	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16
0x4001f50	            0x89ee	                            mov esi, ebp	      4820	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_28
0x4001f52	          0x4889df	                            mov rdi, rbx	      4820	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_28
0x4001f55	      0xe8f62d0000	                   call sym.d_print_comp	      4820	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_28
0x4001f5a	    0x80bb08010000	           cmp byte [rbx + 0x108], 0x3c 	      4821	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	IF_17	CALL_29
0x4001f61	     0xf844e1c0000	                            je 0x4003bb5	      4821	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	IF_17	CALL_29
0x4001f67	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4821	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	IF_17	CALL_29
0x4001f6e	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001f74	     0xf848c220000	                            je 0x4004206	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001f7a	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001f7e	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001f85	        0xc604033c	              mov byte [rbx + rax], 0x3c	      4235	cp-demangle.c	FUNCTION_72
0x4001f89	            0x89ee	                            mov esi, ebp	      4824	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_32
0x4001f8b	    0xc68308010000	           mov byte [rbx + 0x108], 0x3c 	      4236	cp-demangle.c	FUNCTION_72
0x4001f92	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      4824	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_32
0x4001f97	          0x4889df	                            mov rdi, rbx	      4824	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_32
0x4001f9a	      0xe8b12d0000	                   call sym.d_print_comp	      4824	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	CALL_32
0x4001f9f	    0x80bb08010000	           cmp byte [rbx + 0x108], 0x3e 	      4827	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	IF_18	CALL_33
0x4001fa6	     0xf84da1b0000	                            je 0x4003b86	      4827	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	IF_18	CALL_33
0x4001fac	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4827	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_3	IF_18	CALL_33
0x4001fb3	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001fb9	     0xf848a220000	                            je 0x4004249	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001fbf	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4001fc3	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4001fca	        0xc604033e	              mov byte [rbx + rax], 0x3e	      4235	cp-demangle.c	FUNCTION_72
0x4001fce	    0xc68308010000	           mov byte [rbx + 0x108], 0x3e 	      4236	cp-demangle.c	FUNCTION_72
0x4001fd5	    0x4c89b3280100	            mov qword [rbx + 0x128], r14	      4832	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001fdc	    0x4c89ab700100	            mov qword [rbx + 0x170], r13	      4833	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001fe3	      0xe970edffff	                           jmp 0x4000d58	      4835	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001fe8	    0x4c8bbf280100	           mov r15, qword [rdi + 0x128] 	      4690	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001fef	    0x48c787280100	              mov qword [rdi + 0x128], 0	      4691	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001ffa	      0x4d8b6c2408	                mov r13, qword [r12 + 8]	      4693	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4001fff	          0x4d85ed	                           test r13, r13	      4694	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4002002	     0xf8489100000	                            je 0x4003091	      4694	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4002008	        0x418b5500	                    mov edx, dword [r13]	      4709	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_7	CALL_17
0x400200c	      0x488d742430	                   lea rsi, [rsp + 0x30]	      4703	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4002011	    0x48c744243000	               mov qword [rsp + 0x30], 0	      4702	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x400201a	      0x4c896c2438	             mov qword [rsp + 0x38], r13	      4704	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x400201f	    0xc74424400000	               mov dword [rsp + 0x40], 0	      4705	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4002027	    0x4889b7280100	            mov qword [rdi + 0x128], rsi	      4703	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x400202e	    0x488bbf200100	           mov rdi, qword [rdi + 0x120] 	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4002035	          0x8d42e4	                   lea eax, [rdx - 0x1c]	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4002038	          0x83f833	                           cmp eax, 0x33	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x400203b	      0x48897c2448	             mov qword [rsp + 0x48], rdi	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4002040	     0xf8774130000	                            ja 0x40033ba	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4002046	    0x49b81f000000	              movabs r8, 0xd00000000001f	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4002050	    0x41be01000000	                             mov r14d, 1	      4707	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4002056	        0x490fa3c0	                              bt r8, rax	      4707	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x400205a	     0xf82ad1d0000	                            jb 0x4003e0d	      4707	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4002060	          0x83fa04	                              cmp edx, 4	      4758	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_13
0x4002063	            0x7516	                           jne 0x400207b	      4758	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_13
0x4002065	      0x488d442410	                   lea rax, [rsp + 0x10]	      4761	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_13
0x400206a	      0x48897c2410	             mov qword [rsp + 0x10], rdi	      4760	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_13
0x400206f	      0x4c896c2418	             mov qword [rsp + 0x18], r13	      4762	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_13
0x4002074	    0x488983200100	            mov qword [rbx + 0x120], rax	      4761	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_13
0x400207b	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      4765	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_22
0x4002080	            0x89ee	                            mov esi, ebp	      4765	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_22
0x4002082	          0x4889df	                            mov rdi, rbx	      4765	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_22
0x4002085	      0xe8c62c0000	                   call sym.d_print_comp	      4765	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_22
0x400208a	      0x41837d0004	                      cmp dword [r13], 4	      4767	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_14
0x400208f	     0xf8409260000	                            je 0x400469e	      4767	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_14
0x4002095	        0x458d66ff	                     lea r12d, [r14 - 1]	      4774	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3
0x4002099	          0x4c89e0	                            mov rax, r12	      4775	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15
0x400209c	          0x4d89e6	                            mov r14, r12	      4774	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3
0x400209f	        0x48c1e005	                              shl rax, 5	      4775	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15
0x40020a3	        0x8b440440	      mov eax, dword [rsp + rax + 0x40] 	      4775	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15
0x40020a7	            0x85c0	                           test eax, eax	      4775	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15
0x40020a9	            0x753c	                           jne 0x40020e7	      4775	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15
0x40020ab	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40020b2	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40020b8	     0xf84f1250000	                            je 0x40046af	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40020be	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40020c2	        0x49c1e405	                              shl r12, 5	      4778	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15	CALL_24
0x40020c6	            0x89ee	                            mov esi, ebp	      4778	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15	CALL_24
0x40020c8	          0x4889df	                            mov rdi, rbx	      4778	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15	CALL_24
0x40020cb	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40020d2	      0x4a8b542438	      mov rdx, qword [rsp + r12 + 0x38] 	      4778	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15	CALL_24
0x40020d7	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x40020db	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x40020e2	      0xe8192d0000	                    call sym.d_print_mod	      4778	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3	IF_15	CALL_24
0x40020e7	          0x4585f6	                         test r14d, r14d	      4772	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3
0x40020ea	            0x75a9	                           jne 0x4002095	      4772	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_3
0x40020ec	    0x4c89bb280100	            mov qword [rbx + 0x128], r15	      4782	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40020f3	      0xe960ecffff	                           jmp 0x4000d58	      4784	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40020f8	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4784	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40020ff	    0x41bd00000000	                             mov r13d, 0	      4784	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002105	            0xeb33	                           jmp 0x400213a	      4784	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002107	    0x660f1f840000	                    nop word [rax + rax]	      4784	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002110	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002113	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002117	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400211b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4002122	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4002126	    0x4981fd000000	                              cmp r13, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400212d	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4002134	     0xf840e080000	                            je 0x4002948	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400213a	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002140	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4002145	            0x75c9	                           jne 0x4002110	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002147	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400214e	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4002155	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400215a	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400215d	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002163	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400216b	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4002170	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4002172	            0xeba3	                           jmp 0x4002117	      4224	cp-demangle.c	FUNCTION_71
0x4002174	      0x498b542408	                mov rdx, qword [r12 + 8]	      4661	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_9
0x4002179	      0xe8d22b0000	                   call sym.d_print_comp	      4661	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_9
0x400217e	        0x40f6c504	                             test bpl, 4	      4662	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_4
0x4002182	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4662	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_4
0x4002189	     0xf8411150000	                            je 0x40036a0	      4662	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_4
0x400218f	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002195	     0xf843e220000	                            je 0x40043d9	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400219b	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400219f	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40021a6	        0xc604032e	              mov byte [rbx + rax], 0x2e	      4235	cp-demangle.c	FUNCTION_72
0x40021aa	    0xc68308010000	           mov byte [rbx + 0x108], 0x2e 	      4236	cp-demangle.c	FUNCTION_72
0x40021b1	      0x4d8b642410	            mov r12, qword [r12 + 0x10] 	      4667	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40021b6	      0x41833c2446	                   cmp dword [r12], 0x46	      4668	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5
0x40021bb	     0xf84d21b0000	                            je 0x4003d93	      4668	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5
0x40021c1	          0x4c89e2	                            mov rdx, r12	      4675	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_15
0x40021c4	            0x89ee	                            mov esi, ebp	      4675	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_15
0x40021c6	          0x4889df	                            mov rdi, rbx	      4675	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_15
0x40021c9	      0xe8822b0000	                   call sym.d_print_comp	      4675	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_15
0x40021ce	      0xe985ebffff	                           jmp 0x4000d58	      4677	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40021d3	          0x83e504	                              and ebp, 4	      4646	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_3
0x40021d6	     0xf8564100000	                           jne 0x4003240	      4646	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_3
0x40021dc	      0x4d636c2410	         movsxd r13, dword [r12 + 0x10] 	      4647	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_3
0x40021e1	      0x4d8b742408	                mov r14, qword [r12 + 8]	      4647	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_3
0x40021e6	          0x4d85ed	                           test r13, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40021e9	     0xf8469ebffff	                            je 0x4000d58	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40021ef	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40021f6	            0x31ed	                            xor ebp, ebp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40021f8	            0xeb2c	                           jmp 0x4002226	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40021fa	    0x660f1f440000	                    nop word [rax + rax]	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002200	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002203	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002207	        0x4883c501	                              add rbp, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400220b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4002212	        0x44882413	              mov byte [rbx + rdx], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4002216	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002219	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4002220	     0xf8432ebffff	                            je 0x4000d58	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002226	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400222c	      0x450fb6242e	            movzx r12d, byte [r14 + rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4002231	            0x75cd	                           jne 0x4002200	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002233	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400223a	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4002241	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002246	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002249	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400224f	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4002257	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x400225c	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x400225e	            0xeba7	                           jmp 0x4002207	      4224	cp-demangle.c	FUNCTION_71
0x4002260	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x4002267	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x400226d	            0xeb2b	                           jmp 0x400229a	      4224	cp-demangle.c	FUNCTION_71
0x400226f	              0x90	                                     nop	      4224	cp-demangle.c	FUNCTION_71
0x4002270	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002273	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002277	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400227b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4002282	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4002286	    0x4981fd000000	                              cmp r13, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400228d	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4002294	     0xf84d30b0000	                            je 0x4002e6d	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400229a	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40022a0	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40022a5	            0x75c9	                           jne 0x4002270	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40022a7	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40022ae	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40022b5	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40022ba	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40022bd	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40022c3	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40022cb	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x40022d0	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x40022d2	            0xeba3	                           jmp 0x4002277	      4224	cp-demangle.c	FUNCTION_71
0x40022d4	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x40022db	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x40022e1	            0xeb2f	                           jmp 0x4002312	      4224	cp-demangle.c	FUNCTION_71
0x40022e3	       0xf1f440000	                   nop dword [rax + rax]	      4224	cp-demangle.c	FUNCTION_71
0x40022e8	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40022eb	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40022ef	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40022f3	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40022fa	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x40022fe	    0x4981fd000000	                              cmp r13, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002305	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x400230c	     0xf84820a0000	                            je 0x4002d94	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002312	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002318	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x400231d	            0x75c9	                           jne 0x40022e8	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400231f	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002326	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400232d	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002332	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002335	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400233b	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4002343	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4002348	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x400234a	            0xeba3	                           jmp 0x40022ef	      4224	cp-demangle.c	FUNCTION_71
0x400234c	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x4002353	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x4002359	            0xeb2f	                           jmp 0x400238a	      4224	cp-demangle.c	FUNCTION_71
0x400235b	       0xf1f440000	                   nop dword [rax + rax]	      4224	cp-demangle.c	FUNCTION_71
0x4002360	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002363	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002367	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400236b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4002372	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4002376	    0x4981fd000000	                              cmp r13, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400237d	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4002384	     0xf84f70a0000	                            je 0x4002e81	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400238a	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002390	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4002395	            0x75c9	                           jne 0x4002360	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002397	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400239e	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40023a5	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40023aa	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40023ad	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40023b3	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40023bb	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x40023c0	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x40023c2	            0xeba3	                           jmp 0x4002367	      4224	cp-demangle.c	FUNCTION_71
0x40023c4	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x40023cb	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x40023d1	            0xeb2f	                           jmp 0x4002402	      4224	cp-demangle.c	FUNCTION_71
0x40023d3	       0xf1f440000	                   nop dword [rax + rax]	      4224	cp-demangle.c	FUNCTION_71
0x40023d8	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40023db	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40023df	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40023e3	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40023ea	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x40023ee	    0x4981fd000000	                              cmp r13, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40023f5	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x40023fc	     0xf845a050000	                            je 0x400295c	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002402	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002408	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x400240d	            0x75c9	                           jne 0x40023d8	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400240f	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002416	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400241d	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002422	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002425	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400242b	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4002433	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4002438	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x400243a	            0xeba3	                           jmp 0x40023df	      4224	cp-demangle.c	FUNCTION_71
0x400243c	        0x40f6c620	                          test sil, 0x20	      5127	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39
0x4002440	     0xf8527120000	                           jne 0x400366d	      5127	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39
0x4002446	    0x49837c240800	                  cmp qword [r12 + 8], 0	      5133	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40
0x400244c	     0xf847c1f0000	                            je 0x40043ce	      5133	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40
0x4002452	          0x4189ed	                           mov r13d, ebp	      5133	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40
0x4002455	        0x4183e59f	                    and r13d, 0xffffff9f	      5133	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40
0x4002459	          0x83e540	                           and ebp, 0x40	      5136	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x400245c	     0xf84aa1a0000	                            je 0x4003f0c	      5136	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x4002462	    0x488b8b280100	           mov rcx, qword [rbx + 0x128] 	      5163	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_44	CALL_100
0x4002469	      0x498d542410	                   lea rdx, [r12 + 0x10]	      5163	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_44	CALL_100
0x400246e	          0x4489ee	                           mov esi, r13d	      5163	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_44	CALL_100
0x4002471	          0x4889df	                            mov rdi, rbx	      5163	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_44	CALL_100
0x4002474	      0xe8073a0000	  call sym.d_print_function_type.isra.11	      5163	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_44	CALL_100
0x4002479	      0xe9dae8ffff	                           jmp 0x4000d58	      5163	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_44	CALL_100
0x400247e	      0x498b542408	                mov rdx, qword [r12 + 8]	      5122	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_95
0x4002483	      0xe8c8280000	                   call sym.d_print_comp	      5122	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_95
0x4002488	      0xe9cbe8ffff	                           jmp 0x4000d58	      5123	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400248d	    0x488b8f280100	           mov rcx, qword [rdi + 0x128] 	      5185	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002494	    0x488b87200100	           mov rax, qword [rdi + 0x120] 	      5191	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400249b	      0x488d742430	                   lea rsi, [rsp + 0x30]	      5188	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40024a0	      0x4c89642438	             mov qword [rsp + 0x38], r12	      5189	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40024a5	    0xc74424400000	               mov dword [rsp + 0x40], 0	      5190	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40024ad	    0x4889b7280100	            mov qword [rdi + 0x128], rsi	      5188	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40024b4	          0x4989ce	                            mov r14, rcx	      5185	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40024b7	      0x48894c2430	             mov qword [rsp + 0x30], rcx	      5187	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40024bc	      0x4889442448	             mov qword [rsp + 0x48], rax	      5191	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40024c1	          0x4d85f6	                           test r14, r14	      5195	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40024c4	          0x4889f1	                            mov rcx, rsi	      5188	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40024c7	     0xf84e0200000	                            je 0x40045ad	      5195	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40024cd	        0x498b4608	                mov rax, qword [r14 + 8]	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40024d1	            0x8b00	                    mov eax, dword [rax]	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40024d3	          0x83e819	                           sub eax, 0x19	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40024d6	          0x83f802	                              cmp eax, 2	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40024d9	     0xf87ce200000	                            ja 0x40045ad	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40024df	          0x4c89f0	                            mov rax, r14	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40024e2	    0x41bd01000000	                             mov r13d, 1	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40024e8	            0xeb14	                           jmp 0x40024fe	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40024ea	    0x660f1f440000	                    nop word [rax + rax]	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40024f0	        0x488b5008	                mov rdx, qword [rax + 8]	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40024f4	            0x8b12	                    mov edx, dword [rdx]	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40024f6	          0x83ea19	                           sub edx, 0x19	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40024f9	          0x83fa02	                              cmp edx, 2	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40024fc	            0x7760	                            ja 0x400255e	      5196	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x40024fe	        0x448b4810	            mov r9d, dword [rax + 0x10] 	      5200	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4002502	          0x4585c9	                           test r9d, r9d	      5200	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4002505	            0x754f	                           jne 0x4002556	      5200	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4002507	        0x4183fd03	                             cmp r13d, 3	      5202	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45	IF_46
0x400250b	     0xf87ed180000	                            ja 0x4003dfe	      5202	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45	IF_46
0x4002511	          0x488b38	                    mov rdi, qword [rax]	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4002514	          0x4489ea	                           mov edx, r13d	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4002517	        0x4183c501	                             add r13d, 1	      5212	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x400251b	        0x48c1e205	                              shl rdx, 5	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x400251f	      0x48897c1430	       mov qword [rsp + rdx + 0x30], rdi	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4002524	        0x488b7808	                mov rdi, qword [rax + 8]	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4002528	      0x48897c1438	       mov qword [rsp + rdx + 0x38], rdi	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x400252d	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4002531	      0x48897c1440	       mov qword [rsp + rdx + 0x40], rdi	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4002536	        0x488b7818	            mov rdi, qword [rax + 0x18] 	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x400253a	      0x48894c1430	       mov qword [rsp + rdx + 0x30], rcx	      5209	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x400253f	        0x488d0c16	                    lea rcx, [rsi + rdx]	      5210	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4002543	      0x48897c1448	       mov qword [rsp + rdx + 0x48], rdi	      5208	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4002548	    0x48898b280100	            mov qword [rbx + 0x128], rcx	      5210	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x400254f	    0xc74010010000	               mov dword [rax + 0x10], 1	      5211	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4	IF_45
0x4002556	          0x488b00	                    mov rax, qword [rax]	      5215	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x4002559	          0x4885c0	                           test rax, rax	      5195	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x400255c	            0x7592	                           jne 0x40024f0	      5195	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_4
0x400255e	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      5218	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_102
0x4002563	            0x89ee	                            mov esi, ebp	      5218	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_102
0x4002565	          0x4889df	                            mov rdi, rbx	      5218	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_102
0x4002568	      0xe8e3270000	                   call sym.d_print_comp	      5218	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_102
0x400256d	      0x448b442440	            mov r8d, dword [rsp + 0x40] 	      5222	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_47
0x4002572	    0x4c89b3280100	            mov qword [rbx + 0x128], r14	      5220	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002579	          0x4585c0	                           test r8d, r8d	      5222	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_47
0x400257c	            0x7424	                            je 0x40025a2	      5222	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_47
0x400257e	      0xe9d5e7ffff	                           jmp 0x4000d58	      5222	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_47
0x4002583	       0xf1f440000	                   nop dword [rax + rax]	      5222	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_47
0x4002588	        0x418d45ff	                      lea eax, [r13 - 1]	      5227	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5
0x400258c	            0x89ee	                            mov esi, ebp	      5228	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5	CALL_103
0x400258e	          0x4889df	                            mov rdi, rbx	      5228	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5	CALL_103
0x4002591	          0x4989c5	                            mov r13, rax	      5227	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5
0x4002594	        0x48c1e005	                              shl rax, 5	      5228	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5	CALL_103
0x4002598	      0x488b540438	      mov rdx, qword [rsp + rax + 0x38] 	      5228	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5	CALL_103
0x400259d	      0xe85e280000	                    call sym.d_print_mod	      5228	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5	CALL_103
0x40025a2	        0x4183fd01	                             cmp r13d, 1	      5225	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5
0x40025a6	            0x75e0	                           jne 0x4002588	      5225	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_5
0x40025a8	    0x488b8b280100	           mov rcx, qword [rbx + 0x128] 	      5231	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_104
0x40025af	      0x498d542408	                      lea rdx, [r12 + 8]	      5231	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_104
0x40025b4	            0x89ee	                            mov esi, ebp	      5231	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_104
0x40025b6	          0x4889df	                            mov rdi, rbx	      5231	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_104
0x40025b9	      0xe8f2350000	     call sym.d_print_array_type.isra.10	      5231	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_104
0x40025be	      0xe995e7ffff	                           jmp 0x4000d58	      5233	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40025c3	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      5233	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40025ca	    0x41bd00000000	                             mov r13d, 0	      5233	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40025d0	            0xeb30	                           jmp 0x4002602	      5233	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40025d2	    0x660f1f440000	                    nop word [rax + rax]	      5233	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40025d8	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40025db	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40025df	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40025e3	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40025ea	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x40025ee	    0x4981fd000000	                              cmp r13, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40025f5	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x40025fc	     0xf84de040000	                            je 0x4002ae0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002602	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002608	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x400260d	            0x75c9	                           jne 0x40025d8	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400260f	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002616	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400261d	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002622	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002625	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400262b	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4002633	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4002638	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x400263a	            0xeba3	                           jmp 0x40025df	      4224	cp-demangle.c	FUNCTION_71
0x400263c	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x4002643	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x4002649	            0xeb2f	                           jmp 0x400267a	      4224	cp-demangle.c	FUNCTION_71
0x400264b	       0xf1f440000	                   nop dword [rax + rax]	      4224	cp-demangle.c	FUNCTION_71
0x4002650	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002653	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002657	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400265b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4002662	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4002666	    0x4981fd000000	                              cmp r13, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400266d	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4002674	     0xf84de030000	                            je 0x4002a58	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400267a	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002680	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4002685	            0x75c9	                           jne 0x4002650	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002687	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400268e	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4002695	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400269a	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400269d	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40026a3	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40026ab	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x40026b0	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x40026b2	            0xeba3	                           jmp 0x4002657	      4224	cp-demangle.c	FUNCTION_71
0x40026b4	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x40026bb	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x40026c1	            0xeb2f	                           jmp 0x40026f2	      4224	cp-demangle.c	FUNCTION_71
0x40026c3	       0xf1f440000	                   nop dword [rax + rax]	      4224	cp-demangle.c	FUNCTION_71
0x40026c8	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40026cb	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40026cf	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40026d3	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40026da	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x40026de	    0x4981fd000000	                              cmp r13, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40026e5	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x40026ec	     0xf8452030000	                            je 0x4002a44	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40026f2	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40026f8	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40026fd	            0x75c9	                           jne 0x40026c8	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40026ff	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002706	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400270d	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002712	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002715	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400271b	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4002723	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4002728	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x400272a	            0xeba3	                           jmp 0x40026cf	      4224	cp-demangle.c	FUNCTION_71
0x400272c	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x4002733	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x4002739	            0xeb2f	                           jmp 0x400276a	      4224	cp-demangle.c	FUNCTION_71
0x400273b	       0xf1f440000	                   nop dword [rax + rax]	      4224	cp-demangle.c	FUNCTION_71
0x4002740	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002743	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002747	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400274b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4002752	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4002756	    0x4981fd000000	                              cmp r13, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400275d	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4002764	     0xf84c6020000	                            je 0x4002a30	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400276a	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002770	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4002775	            0x75c9	                           jne 0x4002740	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002777	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400277e	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4002785	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400278a	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400278d	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002793	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400279b	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x40027a0	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x40027a2	            0xeba3	                           jmp 0x4002747	      4224	cp-demangle.c	FUNCTION_71
0x40027a4	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x40027ab	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x40027b1	            0xeb2f	                           jmp 0x40027e2	      4224	cp-demangle.c	FUNCTION_71
0x40027b3	       0xf1f440000	                   nop dword [rax + rax]	      4224	cp-demangle.c	FUNCTION_71
0x40027b8	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40027bb	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40027bf	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40027c3	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40027ca	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x40027ce	    0x4981fd000000	                              cmp r13, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40027d5	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x40027dc	     0xf843a020000	                            je 0x4002a1c	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40027e2	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40027e8	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40027ed	            0x75c9	                           jne 0x40027b8	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40027ef	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40027f6	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40027fd	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002802	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002805	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400280b	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4002813	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4002818	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x400281a	            0xeba3	                           jmp 0x40027bf	      4224	cp-demangle.c	FUNCTION_71
0x400281c	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x4002823	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x4002829	            0xeb2f	                           jmp 0x400285a	      4224	cp-demangle.c	FUNCTION_71
0x400282b	       0xf1f440000	                   nop dword [rax + rax]	      4224	cp-demangle.c	FUNCTION_71
0x4002830	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002833	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002837	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400283b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4002842	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4002846	    0x4981fd000000	                              cmp r13, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400284d	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4002854	     0xf84ae010000	                            je 0x4002a08	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400285a	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002860	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4002865	            0x75c9	                           jne 0x4002830	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002867	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400286e	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4002875	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400287a	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400287d	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002883	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400288b	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4002890	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4002892	            0xeba3	                           jmp 0x4002837	      4224	cp-demangle.c	FUNCTION_71
0x4002894	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x400289b	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x40028a1	            0xeb2b	                           jmp 0x40028ce	      4224	cp-demangle.c	FUNCTION_71
0x40028a3	       0xf1f440000	                   nop dword [rax + rax]	      4224	cp-demangle.c	FUNCTION_71
0x40028a8	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40028ab	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40028af	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40028b3	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40028ba	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x40028be	    0x4981fd000000	                              cmp r13, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40028c5	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x40028cc	            0x7466	                            je 0x4002934	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40028ce	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40028d4	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40028d9	            0x75cd	                           jne 0x40028a8	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40028db	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40028e2	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40028e9	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40028ee	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40028f1	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40028f7	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40028ff	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4002904	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4002906	            0xeba7	                           jmp 0x40028af	      4224	cp-demangle.c	FUNCTION_71
0x4002908	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4002912	      0xe941e4ffff	                           jmp 0x4000d58	      4207	cp-demangle.c	FUNCTION_69
0x4002917	    0x660f1f840000	                    nop word [rax + rax]	      4207	cp-demangle.c	FUNCTION_69
0x4002920	        0x4183c401	                             add r12d, 1	      5645	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3
0x4002924	      0x443b642408	               cmp r12d, dword [rsp + 8]	      5645	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3
0x4002929	     0xf8501e6ffff	                           jne 0x4000f30	      5645	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3
0x400292f	      0xe924e4ffff	                           jmp 0x4000d58	      5645	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3
0x4002934	      0x498b542408	                mov rdx, qword [r12 + 8]	      4938	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_68
0x4002939	            0x89ee	                            mov esi, ebp	      4938	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_68
0x400293b	          0x4889df	                            mov rdi, rbx	      4938	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_68
0x400293e	      0xe80d240000	                   call sym.d_print_comp	      4938	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_68
0x4002943	      0xe910e4ffff	                           jmp 0x4000d58	      4939	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002948	      0x498b542408	                mov rdx, qword [r12 + 8]	      4903	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_54
0x400294d	            0x89ee	                            mov esi, ebp	      4903	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_54
0x400294f	          0x4889df	                            mov rdi, rbx	      4903	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_54
0x4002952	      0xe8f9230000	                   call sym.d_print_comp	      4903	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_54
0x4002957	      0xe9fce3ffff	                           jmp 0x4000d58	      4904	cp-demangle.c	FUNCTION_86	SWITCH_1
0x400295c	      0x498b542408	                mov rdx, qword [r12 + 8]	      4896	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_50
0x4002961	            0x89ee	                            mov esi, ebp	      4896	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_50
0x4002963	          0x4889df	                            mov rdi, rbx	      4896	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_50
0x4002966	    0x41bd00000000	                             mov r13d, 0	      4896	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_50
0x400296c	      0xe8df230000	                   call sym.d_print_comp	      4896	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_50
0x4002971	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4896	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_50
0x4002978	            0xeb2c	                           jmp 0x40029a6	      4896	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_50
0x400297a	    0x660f1f440000	                    nop word [rax + rax]	      4896	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_50
0x4002980	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002983	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002987	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400298b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4002992	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4002996	    0x4981fd000000	                              cmp r13, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400299d	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x40029a4	            0x744e	                            je 0x40029f4	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40029a6	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40029ac	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40029b1	            0x75cd	                           jne 0x4002980	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40029b3	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40029ba	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40029c1	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40029c6	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40029c9	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40029cf	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40029d7	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x40029dc	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x40029de	            0xeba7	                           jmp 0x4002987	      4224	cp-demangle.c	FUNCTION_71
0x40029e0	      0x498b542408	                mov rdx, qword [r12 + 8]	      4965	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_80
0x40029e5	            0x89ee	                            mov esi, ebp	      4965	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_80
0x40029e7	          0x4889df	                            mov rdi, rbx	      4965	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_80
0x40029ea	      0xe861230000	                   call sym.d_print_comp	      4965	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_80
0x40029ef	      0xe964e3ffff	                           jmp 0x4000d58	      4966	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40029f4	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      4898	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_52
0x40029f9	            0x89ee	                            mov esi, ebp	      4898	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_52
0x40029fb	          0x4889df	                            mov rdi, rbx	      4898	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_52
0x40029fe	      0xe84d230000	                   call sym.d_print_comp	      4898	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_52
0x4002a03	      0xe950e3ffff	                           jmp 0x4000d58	      4899	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002a08	      0x498b542408	                mov rdx, qword [r12 + 8]	      4928	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_64
0x4002a0d	            0x89ee	                            mov esi, ebp	      4928	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_64
0x4002a0f	          0x4889df	                            mov rdi, rbx	      4928	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_64
0x4002a12	      0xe839230000	                   call sym.d_print_comp	      4928	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_64
0x4002a17	      0xe93ce3ffff	                           jmp 0x4000d58	      4929	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002a1c	      0x498b542408	                mov rdx, qword [r12 + 8]	      4933	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_66
0x4002a21	            0x89ee	                            mov esi, ebp	      4933	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_66
0x4002a23	          0x4889df	                            mov rdi, rbx	      4933	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_66
0x4002a26	      0xe825230000	                   call sym.d_print_comp	      4933	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_66
0x4002a2b	      0xe928e3ffff	                           jmp 0x4000d58	      4934	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002a30	      0x498b542408	                mov rdx, qword [r12 + 8]	      4960	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_78
0x4002a35	            0x89ee	                            mov esi, ebp	      4960	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_78
0x4002a37	          0x4889df	                            mov rdi, rbx	      4960	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_78
0x4002a3a	      0xe811230000	                   call sym.d_print_comp	      4960	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_78
0x4002a3f	      0xe914e3ffff	                           jmp 0x4000d58	      4961	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002a44	      0x498b542408	                mov rdx, qword [r12 + 8]	      4948	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_72
0x4002a49	            0x89ee	                            mov esi, ebp	      4948	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_72
0x4002a4b	          0x4889df	                            mov rdi, rbx	      4948	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_72
0x4002a4e	      0xe8fd220000	                   call sym.d_print_comp	      4948	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_72
0x4002a53	      0xe900e3ffff	                           jmp 0x4000d58	      4949	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002a58	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      4953	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_74
0x4002a5d	            0x89ee	                            mov esi, ebp	      4953	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_74
0x4002a5f	          0x4889df	                            mov rdi, rbx	      4953	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_74
0x4002a62	    0x41bd00000000	                             mov r13d, 0	      4953	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_74
0x4002a68	      0xe8e3220000	                   call sym.d_print_comp	      4953	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_74
0x4002a6d	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4953	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_74
0x4002a74	            0xeb30	                           jmp 0x4002aa6	      4953	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_74
0x4002a76	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4953	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_74
0x4002a80	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002a83	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002a87	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002a8b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4002a92	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4002a96	    0x4981fd000000	                              cmp r13, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002a9d	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4002aa4	            0x744e	                            je 0x4002af4	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002aa6	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002aac	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4002ab1	            0x75cd	                           jne 0x4002a80	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002ab3	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002aba	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4002ac1	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002ac6	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002ac9	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002acf	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4002ad7	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4002adc	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4002ade	            0xeba7	                           jmp 0x4002a87	      4224	cp-demangle.c	FUNCTION_71
0x4002ae0	      0x498b542408	                mov rdx, qword [r12 + 8]	      4943	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_70
0x4002ae5	            0x89ee	                            mov esi, ebp	      4943	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_70
0x4002ae7	          0x4889df	                            mov rdi, rbx	      4943	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_70
0x4002aea	      0xe861220000	                   call sym.d_print_comp	      4943	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_70
0x4002aef	      0xe964e2ffff	                           jmp 0x4000d58	      4944	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002af4	      0x498b542408	                mov rdx, qword [r12 + 8]	      4955	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_76
0x4002af9	            0x89ee	                            mov esi, ebp	      4955	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_76
0x4002afb	          0x4889df	                            mov rdi, rbx	      4955	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_76
0x4002afe	      0xe84d220000	                   call sym.d_print_comp	      4955	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_76
0x4002b03	      0xe950e2ffff	                           jmp 0x4000d58	      4956	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002b08	        0x498b6e08	                mov rbp, qword [r14 + 8]	      5318	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_57
0x4002b0c	         0xfb64d00	                   movzx ecx, byte [rbp]	      5318	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_57
0x4002b10	          0x8d519f	                   lea edx, [rcx - 0x61]	      5318	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_57
0x4002b13	          0x80fa19	                            cmp dl, 0x19	      5318	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_57
0x4002b16	            0x7726	                            ja 0x4002b3e	      5318	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_57
0x4002b18	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002b1e	     0xf84af1a0000	                            je 0x40045d3	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002b24	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4002b28	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002b2f	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4002b33	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4002b3a	        0x498b6e08	                mov rbp, qword [r14 + 8]	      4236	cp-demangle.c	FUNCTION_72
0x4002b3e	          0x4963d5	                        movsxd rdx, r13d	      5321	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_58
0x4002b41	      0x807c15ff20	         cmp byte [rbp + rdx - 1], 0x20 	      5321	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_58
0x4002b46	            0x7507	                           jne 0x4002b4f	      5321	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_58
0x4002b48	        0x4183ed01	                             sub r13d, 1	      5321	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_58
0x4002b4c	          0x4963d5	                        movsxd rdx, r13d	      5321	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_58
0x4002b4f	          0x4885d2	                           test rdx, rdx	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002b52	     0xf8400e2ffff	                            je 0x4000d58	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002b58	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002b5f	      0x4c8d6c1500	                    lea r13, [rbp + rdx]	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002b64	            0xeb30	                           jmp 0x4002b96	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002b66	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002b70	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002b73	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002b77	        0x4883c501	                              add rbp, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002b7b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4002b82	        0x44882413	              mov byte [rbx + rdx], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4002b86	          0x4c39ed	                            cmp rbp, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002b89	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4002b90	     0xf84c2e1ffff	                            je 0x4000d58	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002b96	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002b9c	      0x440fb66500	                  movzx r12d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4002ba1	            0x75cd	                           jne 0x4002b70	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002ba3	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002baa	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4002bb1	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002bb6	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002bb9	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002bbf	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4002bc7	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4002bcc	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4002bce	            0xeba7	                           jmp 0x4002b77	      4224	cp-demangle.c	FUNCTION_71
0x4002bd0	      0x498b542408	                mov rdx, qword [r12 + 8]	      4913	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_58
0x4002bd5	            0x89ee	                            mov esi, ebp	      4913	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_58
0x4002bd7	          0x4889df	                            mov rdi, rbx	      4913	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_58
0x4002bda	      0xe871210000	                   call sym.d_print_comp	      4913	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_58
0x4002bdf	      0xe974e1ffff	                           jmp 0x4000d58	      4914	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002be4	      0x498b542408	                mov rdx, qword [r12 + 8]	      4923	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_62
0x4002be9	            0x89ee	                            mov esi, ebp	      4923	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_62
0x4002beb	          0x4889df	                            mov rdi, rbx	      4923	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_62
0x4002bee	      0xe85d210000	                   call sym.d_print_comp	      4923	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_62
0x4002bf3	      0xe960e1ffff	                           jmp 0x4000d58	      4924	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002bf8	      0x498b542408	                mov rdx, qword [r12 + 8]	      4908	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_56
0x4002bfd	            0x89ee	                            mov esi, ebp	      4908	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_56
0x4002bff	          0x4889df	                            mov rdi, rbx	      4908	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_56
0x4002c02	      0xe849210000	                   call sym.d_print_comp	      4908	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_56
0x4002c07	      0xe94ce1ffff	                           jmp 0x4000d58	      4909	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002c0c	      0x498b542408	                mov rdx, qword [r12 + 8]	      5610	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_204
0x4002c11	            0x89ee	                            mov esi, ebp	      5610	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_204
0x4002c13	          0x4889df	                            mov rdi, rbx	      5610	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_204
0x4002c16	      0xe835210000	                   call sym.d_print_comp	      5610	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_204
0x4002c1b	      0xe938e1ffff	                           jmp 0x4000d58	      5611	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002c20	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      4655	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_7
0x4002c25	            0x89ee	                            mov esi, ebp	      4655	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_7
0x4002c27	          0x4889df	                            mov rdi, rbx	      4655	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_7
0x4002c2a	      0xe821210000	                   call sym.d_print_comp	      4655	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_7
0x4002c2f	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002c36	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002c3c	     0xf843a120000	                            je 0x4003e7c	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002c42	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002c46	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002c4d	        0xc604035d	              mov byte [rbx + rax], 0x5d	      4235	cp-demangle.c	FUNCTION_72
0x4002c51	    0xc68308010000	           mov byte [rbx + 0x108], 0x5d 	      4236	cp-demangle.c	FUNCTION_72
0x4002c58	      0xe9fbe0ffff	                           jmp 0x4000d58	      4236	cp-demangle.c	FUNCTION_72
0x4002c5d	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      5700	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_235
0x4002c62	            0x89ee	                            mov esi, ebp	      5700	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_235
0x4002c64	          0x4889df	                            mov rdi, rbx	      5700	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_235
0x4002c67	      0xe8e4200000	                   call sym.d_print_comp	      5700	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_235
0x4002c6c	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002c73	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002c79	     0xf8487100000	                            je 0x4003d06	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002c7f	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002c83	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002c8a	        0xc604035d	              mov byte [rbx + rax], 0x5d	      4235	cp-demangle.c	FUNCTION_72
0x4002c8e	    0xc68308010000	           mov byte [rbx + 0x108], 0x5d 	      4236	cp-demangle.c	FUNCTION_72
0x4002c95	      0xe9bee0ffff	                           jmp 0x4000d58	      4236	cp-demangle.c	FUNCTION_72
0x4002c9a	      0x498b442408	                mov rax, qword [r12 + 8]	        33	stdio2.h	FUNCTION_109	CALL_1
0x4002c9f	    0x488dac24b000	                   lea rbp, [rsp + 0xb0]	        33	stdio2.h	FUNCTION_109	CALL_1
0x4002ca7	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_109	CALL_1
0x4002cac	      0xba19000000	                           mov edx, 0x19	        33	stdio2.h	FUNCTION_109	CALL_1
0x4002cb1	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_109	CALL_1
0x4002cb6	          0x4889ef	                            mov rdi, rbp	        33	stdio2.h	FUNCTION_109	CALL_1
0x4002cb9	          0x4989ee	                            mov r14, rbp	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002cbc	        0x448d4001	                      lea r8d, [rax + 1]	        33	stdio2.h	FUNCTION_109	CALL_1
0x4002cc0	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_109	CALL_1
0x4002cc2	      0xe800000000	                          call 0x4002cc7	        33	stdio2.h	FUNCTION_109	CALL_1
0x4002cc7	          0x418b16	                    mov edx, dword [r14]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002cca	        0x4983c604	                              add r14, 4	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002cce	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002cd4	            0xf7d2	                                 not edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002cd6	            0x21d0	                            and eax, edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002cd8	      0x2580808080	                     and eax, 0x80808080	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002cdd	            0x74e8	                            je 0x4002cc7	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002cdf	            0x89c2	                            mov edx, eax	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002ce1	          0xc1ea10	                           shr edx, 0x10	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002ce4	      0xa980800000	                        test eax, 0x8080	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002ce9	           0xf44c2	                          cmove eax, edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002cec	        0x498d5602	                      lea rdx, [r14 + 2]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002cf0	            0x89c1	                            mov ecx, eax	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002cf2	        0x4c0f44f2	                          cmove r14, rdx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002cf6	              0xc1	                              add cl, al	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002cf8	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002cff	        0x4983de03	                              sbb r14, 3	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002d03	          0x4929ee	                            sub r14, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002d06	            0x7465	                            je 0x4002d6d	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002d08	          0x4531e4	                          xor r12d, r12d	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002d0b	            0xeb25	                           jmp 0x4002d32	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002d0d	           0xf1f00	                         nop dword [rax]	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002d10	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002d13	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002d17	        0x4983c401	                              add r12, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002d1b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4002d22	        0x44882c13	              mov byte [rbx + rdx], r13b	      4235	cp-demangle.c	FUNCTION_72
0x4002d26	          0x4d39e6	                            cmp r14, r12	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002d29	    0x4488ab080100	            mov byte [rbx + 0x108], r13b	      4236	cp-demangle.c	FUNCTION_72
0x4002d30	            0x743b	                            je 0x4002d6d	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002d32	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002d38	    0x460fb66c2500	            movzx r13d, byte [rbp + r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4002d3e	            0x75d0	                           jne 0x4002d10	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002d40	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002d47	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4002d4e	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002d53	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002d56	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002d5c	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4002d64	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4002d69	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4002d6b	            0xebaa	                           jmp 0x4002d17	      4224	cp-demangle.c	FUNCTION_71
0x4002d6d	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002d73	     0xf845d0f0000	                            je 0x4003cd6	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002d79	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002d7d	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002d84	        0xc604037d	              mov byte [rbx + rax], 0x7d	      4235	cp-demangle.c	FUNCTION_72
0x4002d88	    0xc68308010000	           mov byte [rbx + 0x108], 0x7d 	      4236	cp-demangle.c	FUNCTION_72
0x4002d8f	      0xe9c4dfffff	                           jmp 0x4000d58	      4236	cp-demangle.c	FUNCTION_72
0x4002d94	      0x498b542408	                mov rdx, qword [r12 + 8]	      4891	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_48
0x4002d99	            0x89ee	                            mov esi, ebp	      4891	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_48
0x4002d9b	          0x4889df	                            mov rdi, rbx	      4891	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_48
0x4002d9e	      0xe8ad1f0000	                   call sym.d_print_comp	      4891	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_48
0x4002da3	      0xe9b0dfffff	                           jmp 0x4000d58	      4892	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002da8	      0x498b542408	                mov rdx, qword [r12 + 8]	      5624	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_209
0x4002dad	            0x89ee	                            mov esi, ebp	      5624	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_209
0x4002daf	          0x4889df	                            mov rdi, rbx	      5624	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_209
0x4002db2	      0xe8991f0000	                   call sym.d_print_comp	      5624	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_209
0x4002db7	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002dbe	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002dc4	     0xf84e2100000	                            je 0x4003eac	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002dca	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002dce	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4002dd5	        0xc6040329	              mov byte [rbx + rax], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x4002dd9	    0xc68308010000	           mov byte [rbx + 0x108], 0x29 	      4236	cp-demangle.c	FUNCTION_72
0x4002de0	      0xe973dfffff	                           jmp 0x4000d58	      4236	cp-demangle.c	FUNCTION_72
0x4002de5	      0x498b542408	                mov rdx, qword [r12 + 8]	      5671	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_222
0x4002dea	            0x89ee	                            mov esi, ebp	      5671	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_222
0x4002dec	          0x4889df	                            mov rdi, rbx	      5671	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_222
0x4002def	      0xe85c1f0000	                   call sym.d_print_comp	      5671	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_222
0x4002df4	      0xe95fdfffff	                           jmp 0x4000d58	      5672	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002df9	    0x488b83700100	           mov rax, qword [rbx + 0x170] 	      6126	cp-demangle.c	FUNCTION_95	IF_1
0x4002e00	          0x4885c0	                           test rax, rax	      6126	cp-demangle.c	FUNCTION_95	IF_1
0x4002e03	            0x741d	                            je 0x4002e22	      6126	cp-demangle.c	FUNCTION_95	IF_1
0x4002e05	    0x488b93200100	           mov rdx, qword [rbx + 0x120] 	      6128	cp-demangle.c	FUNCTION_95	IF_1
0x4002e0c	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      6129	cp-demangle.c	FUNCTION_95	IF_1
0x4002e11	      0x4889442418	             mov qword [rsp + 0x18], rax	      6130	cp-demangle.c	FUNCTION_95	IF_1
0x4002e16	    0x48898b200100	            mov qword [rbx + 0x120], rcx	      6129	cp-demangle.c	FUNCTION_95	IF_1
0x4002e1d	      0x4889542410	             mov qword [rsp + 0x10], rdx	      6128	cp-demangle.c	FUNCTION_95	IF_1
0x4002e22	      0x498b542408	                mov rdx, qword [r12 + 8]	      6133	cp-demangle.c	FUNCTION_95	IF_2
0x4002e27	          0x833a04	                      cmp dword [rdx], 4	      6133	cp-demangle.c	FUNCTION_95	IF_2
0x4002e2a	     0xf8454090000	                            je 0x4003784	      6133	cp-demangle.c	FUNCTION_95	IF_2
0x4002e30	            0x89ee	                            mov esi, ebp	      6135	cp-demangle.c	FUNCTION_95	IF_2	CALL_1
0x4002e32	          0x4889df	                            mov rdi, rbx	      6135	cp-demangle.c	FUNCTION_95	IF_2	CALL_1
0x4002e35	      0xe8161f0000	                   call sym.d_print_comp	      6135	cp-demangle.c	FUNCTION_95	IF_2	CALL_1
0x4002e3a	    0x4883bb700100	              cmp qword [rbx + 0x170], 0	      6136	cp-demangle.c	FUNCTION_95	IF_2	IF_3
0x4002e42	     0xf8410dfffff	                            je 0x4000d58	      6136	cp-demangle.c	FUNCTION_95	IF_2	IF_3
0x4002e48	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      6137	cp-demangle.c	FUNCTION_95	IF_2	IF_3
0x4002e4d	    0x488983200100	            mov qword [rbx + 0x120], rax	      6137	cp-demangle.c	FUNCTION_95	IF_2	IF_3
0x4002e54	      0xe9ffdeffff	                           jmp 0x4000d58	      6137	cp-demangle.c	FUNCTION_95	IF_2	IF_3
0x4002e59	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      5329	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_124
0x4002e5e	            0x89ee	                            mov esi, ebp	      5329	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_124
0x4002e60	          0x4889df	                            mov rdi, rbx	      5329	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_124
0x4002e63	      0xe8e81e0000	                   call sym.d_print_comp	      5329	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_124
0x4002e68	      0xe9ebdeffff	                           jmp 0x4000d58	      5330	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002e6d	      0x498b542408	                mov rdx, qword [r12 + 8]	      4918	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_60
0x4002e72	            0x89ee	                            mov esi, ebp	      4918	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_60
0x4002e74	          0x4889df	                            mov rdi, rbx	      4918	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_60
0x4002e77	      0xe8d41e0000	                   call sym.d_print_comp	      4918	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_60
0x4002e7c	      0xe9d7deffff	                           jmp 0x4000d58	      4919	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002e81	      0x498b542408	                mov rdx, qword [r12 + 8]	      4886	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_46
0x4002e86	            0x89ee	                            mov esi, ebp	      4886	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_46
0x4002e88	          0x4889df	                            mov rdi, rbx	      4886	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_46
0x4002e8b	      0xe8c01e0000	                   call sym.d_print_comp	      4886	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_46
0x4002e90	      0xe9c3deffff	                           jmp 0x4000d58	      4887	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002e95	      0x498b542408	                mov rdx, qword [r12 + 8]	      4970	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_82
0x4002e9a	            0x89ee	                            mov esi, ebp	      4970	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_82
0x4002e9c	          0x4889df	                            mov rdi, rbx	      4970	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_82
0x4002e9f	      0xe8ac1e0000	                   call sym.d_print_comp	      4970	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_82
0x4002ea4	      0xe9afdeffff	                           jmp 0x4000d58	      4971	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002ea9	      0x498b542408	                mov rdx, qword [r12 + 8]	      5676	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_224
0x4002eae	            0x89ee	                            mov esi, ebp	      5676	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_224
0x4002eb0	          0x4889df	                            mov rdi, rbx	      5676	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_224
0x4002eb3	      0xe8981e0000	                   call sym.d_print_comp	      5676	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_224
0x4002eb8	      0xe99bdeffff	                           jmp 0x4000d58	      5677	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002ebd	    0x838338010000	              add dword [rbx + 0x138], 1	      5683	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002ec4	            0x89ee	                            mov esi, ebp	      5684	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_226
0x4002ec6	          0x4889df	                            mov rdi, rbx	      5684	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_226
0x4002ec9	      0x498b542408	                mov rdx, qword [r12 + 8]	      5684	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_226
0x4002ece	      0xbd00000000	                              mov ebp, 0	      5684	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_226
0x4002ed3	    0x41be00000000	                             mov r14d, 0	      5684	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_226
0x4002ed9	      0xe8721e0000	                   call sym.d_print_comp	      5684	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_226
0x4002ede	    0x83ab38010000	              sub dword [rbx + 0x138], 1	      5685	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002ee5	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      5685	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002eec	            0xeb24	                           jmp 0x4002f12	      5685	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002eee	            0x6690	                                     nop	      5685	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4002ef0	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002ef3	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002ef7	        0x4883c501	                              add rbp, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002efb	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4002f02	        0x44882c13	              mov byte [rbx + rdx], r13b	      4235	cp-demangle.c	FUNCTION_72
0x4002f06	          0x4939ee	                            cmp r14, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002f09	    0x4488ab080100	            mov byte [rbx + 0x108], r13b	      4236	cp-demangle.c	FUNCTION_72
0x4002f10	            0x743a	                            je 0x4002f4c	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002f12	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002f18	      0x440fb66d00	                  movzx r13d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4002f1d	            0x75d1	                           jne 0x4002ef0	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002f1f	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002f26	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4002f2d	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002f32	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002f35	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002f3b	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4002f43	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4002f48	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4002f4a	            0xebab	                           jmp 0x4002ef7	      4224	cp-demangle.c	FUNCTION_71
0x4002f4c	      0x418b442410	            mov eax, dword [r12 + 0x10] 	        33	stdio2.h	FUNCTION_109	CALL_1
0x4002f51	    0x488dac24b000	                   lea rbp, [rsp + 0xb0]	        33	stdio2.h	FUNCTION_109	CALL_1
0x4002f59	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_109	CALL_1
0x4002f5e	      0xba19000000	                           mov edx, 0x19	        33	stdio2.h	FUNCTION_109	CALL_1
0x4002f63	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_109	CALL_1
0x4002f68	          0x4889ef	                            mov rdi, rbp	        33	stdio2.h	FUNCTION_109	CALL_1
0x4002f6b	          0x4989ee	                            mov r14, rbp	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002f6e	        0x448d4001	                      lea r8d, [rax + 1]	        33	stdio2.h	FUNCTION_109	CALL_1
0x4002f72	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_109	CALL_1
0x4002f74	      0xe800000000	                          call 0x4002f79	        33	stdio2.h	FUNCTION_109	CALL_1
0x4002f79	          0x418b16	                    mov edx, dword [r14]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002f7c	        0x4983c604	                              add r14, 4	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002f80	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002f86	            0xf7d2	                                 not edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002f88	            0x21d0	                            and eax, edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002f8a	      0x2580808080	                     and eax, 0x80808080	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002f8f	            0x74e8	                            je 0x4002f79	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002f91	            0x89c2	                            mov edx, eax	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002f93	          0xc1ea10	                           shr edx, 0x10	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002f96	      0xa980800000	                        test eax, 0x8080	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002f9b	           0xf44c2	                          cmove eax, edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002f9e	        0x498d5602	                      lea rdx, [r14 + 2]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002fa2	            0x89c1	                            mov ecx, eax	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002fa4	        0x4c0f44f2	                          cmove r14, rdx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002fa8	              0xc1	                              add cl, al	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002faa	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002fb1	        0x4983de03	                              sbb r14, 3	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4002fb5	          0x4929ee	                            sub r14, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002fb8	            0x7463	                            je 0x400301d	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002fba	          0x4531e4	                          xor r12d, r12d	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002fbd	            0xeb23	                           jmp 0x4002fe2	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002fbf	              0x90	                                     nop	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002fc0	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002fc3	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002fc7	        0x4983c401	                              add r12, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002fcb	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4002fd2	        0x44882c13	              mov byte [rbx + rdx], r13b	      4235	cp-demangle.c	FUNCTION_72
0x4002fd6	          0x4d39e6	                            cmp r14, r12	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002fd9	    0x4488ab080100	            mov byte [rbx + 0x108], r13b	      4236	cp-demangle.c	FUNCTION_72
0x4002fe0	            0x743b	                            je 0x400301d	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4002fe2	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002fe8	    0x460fb66c2500	            movzx r13d, byte [rbp + r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4002fee	            0x75d0	                           jne 0x4002fc0	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4002ff0	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4002ff7	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4002ffe	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003003	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003006	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400300c	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003014	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4003019	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x400301b	            0xebaa	                           jmp 0x4002fc7	      4224	cp-demangle.c	FUNCTION_71
0x400301d	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003023	     0xf84b30e0000	                            je 0x4003edc	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003029	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400302d	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4003034	        0xc604037d	              mov byte [rbx + rax], 0x7d	      4235	cp-demangle.c	FUNCTION_72
0x4003038	    0xc68308010000	           mov byte [rbx + 0x108], 0x7d 	      4236	cp-demangle.c	FUNCTION_72
0x400303f	      0xe914ddffff	                           jmp 0x4000d58	      4236	cp-demangle.c	FUNCTION_72
0x4003044	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      5290	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	CALL_115
0x4003049	            0x89ee	                            mov esi, ebp	      5290	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	CALL_115
0x400304b	          0x4889df	                            mov rdi, rbx	      5290	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	CALL_115
0x400304e	    0x4c8bb3400100	           mov r14, qword [rbx + 0x140] 	      5289	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53
0x4003055	      0xe8f61c0000	                   call sym.d_print_comp	      5290	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	CALL_115
0x400305a	    0x4c3bb3400100	           cmp r14, qword [rbx + 0x140] 	      5293	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_55
0x4003061	     0xf85f1dcffff	                           jne 0x4000d58	      5293	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_55
0x4003067	    0x4c39ab000100	           cmp qword [rbx + 0x100], r13 	      5293	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_55
0x400306e	     0xf85e4dcffff	                           jne 0x4000d58	      5293	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_55
0x4003074	        0x4983ed02	                              sub r13, 2	      5294	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_55
0x4003078	    0x4c89ab000100	            mov qword [rbx + 0x100], r13	      5294	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_55
0x400307f	      0xe9d4dcffff	                           jmp 0x4000d58	      5294	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_53	IF_55
0x4003084	        0x4d8b6d08	                mov r13, qword [r13 + 8]	      4729	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	IF_10
0x4003088	          0x4d85ed	                           test r13, r13	      4730	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	IF_11
0x400308b	     0xf8547030000	                           jne 0x40033d8	      4730	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	IF_11
0x4003091	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x400309b	      0xe9b8dcffff	                           jmp 0x4000d58	      4207	cp-demangle.c	FUNCTION_69
0x40030a0	          0x4c89e2	                            mov rdx, r12	      5102	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_92
0x40030a3	            0x89ee	                            mov esi, ebp	      5102	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_92
0x40030a5	          0x4889df	                            mov rdi, rbx	      5102	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_92
0x40030a8	      0xe8531d0000	                    call sym.d_print_mod	      5102	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_92
0x40030ad	      0xe91deaffff	                           jmp 0x4001acf	      5102	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_92
0x40030b2	      0x498b442408	                mov rax, qword [r12 + 8]	      5644	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40030b7	        0x48890424	                    mov qword [rsp], rax	      5644	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40030bb	        0x8b442408	                mov eax, dword [rsp + 8]	      5645	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3
0x40030bf	            0x85c0	                           test eax, eax	      5645	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3
0x40030c1	     0xf8554deffff	                           jne 0x4000f1b	      5645	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3
0x40030c7	      0xe98cdcffff	                           jmp 0x4000d58	      5645	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_3
0x40030cc	    0x488dac24b000	                   lea rbp, [rsp + 0xb0]	        33	stdio2.h	FUNCTION_109	CALL_1
0x40030d4	          0x4589f0	                           mov r8d, r14d	        33	stdio2.h	FUNCTION_109	CALL_1
0x40030d7	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_109	CALL_1
0x40030dc	      0xba19000000	                           mov edx, 0x19	        33	stdio2.h	FUNCTION_109	CALL_1
0x40030e1	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_109	CALL_1
0x40030e6	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_109	CALL_1
0x40030e8	          0x4889ef	                            mov rdi, rbp	        33	stdio2.h	FUNCTION_109	CALL_1
0x40030eb	          0x4989ee	                            mov r14, rbp	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40030ee	      0xe800000000	                          call 0x40030f3	        33	stdio2.h	FUNCTION_109	CALL_1
0x40030f3	          0x418b16	                    mov edx, dword [r14]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40030f6	        0x4983c604	                              add r14, 4	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40030fa	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003100	            0xf7d2	                                 not edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003102	            0x21d0	                            and eax, edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003104	      0x2580808080	                     and eax, 0x80808080	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003109	            0x74e8	                            je 0x40030f3	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400310b	            0x89c2	                            mov edx, eax	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400310d	          0xc1ea10	                           shr edx, 0x10	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003110	      0xa980800000	                        test eax, 0x8080	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003115	           0xf44c2	                          cmove eax, edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003118	        0x498d5602	                      lea rdx, [r14 + 2]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400311c	            0x89c1	                            mov ecx, eax	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400311e	        0x4c0f44f2	                          cmove r14, rdx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003122	              0xc1	                              add cl, al	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003124	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400312b	        0x4983de03	                              sbb r14, 3	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400312f	          0x4929ee	                            sub r14, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003132	            0x7469	                            je 0x400319d	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003134	          0x4531e4	                          xor r12d, r12d	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003137	            0xeb29	                           jmp 0x4003162	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003139	     0xf1f80000000	                         nop dword [rax]	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003140	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003143	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003147	        0x4983c401	                              add r12, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400314b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4003152	        0x44882c13	              mov byte [rbx + rdx], r13b	      4235	cp-demangle.c	FUNCTION_72
0x4003156	          0x4d39e6	                            cmp r14, r12	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003159	    0x4488ab080100	            mov byte [rbx + 0x108], r13b	      4236	cp-demangle.c	FUNCTION_72
0x4003160	            0x743b	                            je 0x400319d	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003162	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003168	    0x460fb66c2500	            movzx r13d, byte [rbp + r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x400316e	            0x75d0	                           jne 0x4003140	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003170	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003177	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400317e	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003183	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003186	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400318c	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003194	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4003199	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x400319b	            0xebaa	                           jmp 0x4003147	      4224	cp-demangle.c	FUNCTION_71
0x400319d	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40031a3	     0xf8400110000	                            je 0x40042a9	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40031a9	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40031ad	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40031b4	        0xc604037d	              mov byte [rbx + rax], 0x7d	      4235	cp-demangle.c	FUNCTION_72
0x40031b8	    0xc68308010000	           mov byte [rbx + 0x108], 0x7d 	      4236	cp-demangle.c	FUNCTION_72
0x40031bf	      0xe994dbffff	                           jmp 0x4000d58	      4236	cp-demangle.c	FUNCTION_72
0x40031c4	        0x4c636818	         movsxd r13, dword [rax + 0x18] 	      5117	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_7	CALL_94
0x40031c8	        0x4c8b7010	            mov r14, qword [rax + 0x10] 	      5117	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_7	CALL_94
0x40031cc	          0x4d85ed	                           test r13, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40031cf	     0xf8483dbffff	                            je 0x4000d58	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40031d5	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40031dc	            0x31ed	                            xor ebp, ebp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40031de	            0xeb26	                           jmp 0x4003206	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40031e0	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40031e3	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40031e7	        0x4883c501	                              add rbp, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40031eb	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40031f2	        0x44882413	              mov byte [rbx + rdx], r12b	      4235	cp-demangle.c	FUNCTION_72
0x40031f6	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40031f9	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4003200	     0xf8452dbffff	                            je 0x4000d58	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003206	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400320c	      0x450fb6242e	            movzx r12d, byte [r14 + rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4003211	            0x75cd	                           jne 0x40031e0	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003213	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400321a	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003221	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003226	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003229	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400322f	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003237	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x400323c	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x400323e	            0xeba7	                           jmp 0x40031e7	      4224	cp-demangle.c	FUNCTION_71
0x4003240	      0x4d636c2410	         movsxd r13, dword [r12 + 0x10] 	      5746	cp-demangle.c	FUNCTION_88
0x4003245	      0x498b6c2408	                mov rbp, qword [r12 + 8]	      4649	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_4
0x400324a	          0x4901ed	                            add r13, rbp	      5746	cp-demangle.c	FUNCTION_88
0x400324d	          0x4c39ed	                            cmp rbp, r13	      5747	cp-demangle.c	FUNCTION_88	FOR_1
0x4003250	            0x7244	                            jb 0x4003296	      5747	cp-demangle.c	FUNCTION_88	FOR_1
0x4003252	      0xe901dbffff	                           jmp 0x4000d58	      5747	cp-demangle.c	FUNCTION_88	FOR_1
0x4003257	    0x660f1f840000	                    nop word [rax + rax]	      5747	cp-demangle.c	FUNCTION_88	FOR_1
0x4003260	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003267	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400326d	     0xf848a000000	                            je 0x40032fd	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003273	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003277	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400327e	        0x44882403	              mov byte [rbx + rax], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4003282	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4003289	        0x4883c501	                              add rbp, 1	      5747	cp-demangle.c	FUNCTION_88	FOR_1
0x400328d	          0x4939ed	                            cmp r13, rbp	      5747	cp-demangle.c	FUNCTION_88	FOR_1
0x4003290	     0xf86c2daffff	                           jbe 0x4000d58	      5747	cp-demangle.c	FUNCTION_88	FOR_1
0x4003296	          0x4c89e8	                            mov rax, r13	      5749	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x4003299	      0x440fb66500	                  movzx r12d, byte [rbp]	      5750	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x400329e	          0x4829e8	                            sub rax, rbp	      5749	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x40032a1	        0x4883f803	                              cmp rax, 3	      5749	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x40032a5	            0x7eb9	                           jle 0x4003260	      5749	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x40032a7	        0x4180fc5f	                          cmp r12b, 0x5f	      5750	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x40032ab	            0x75b3	                           jne 0x4003260	      5750	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x40032ad	        0x807d015f	                cmp byte [rbp + 1], 0x5f	      5751	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x40032b1	            0x75ad	                           jne 0x4003260	      5751	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x40032b3	        0x807d0255	                cmp byte [rbp + 2], 0x55	      5752	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x40032b7	            0x75a7	                           jne 0x4003260	      5752	cp-demangle.c	FUNCTION_88	FOR_1	IF_1
0x40032b9	        0x4c8d7503	                      lea r14, [rbp + 3]	      5758	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2
0x40032bd	          0x4d39f5	                            cmp r13, r14	      5758	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2
0x40032c0	            0x769e	                           jbe 0x4003260	      5758	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2
0x40032c2	            0x31c9	                            xor ecx, ecx	      5758	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2
0x40032c4	            0xeb1a	                           jmp 0x40032e0	      5758	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2
0x40032c6	          0x8d50d0	                   lea edx, [rax - 0x30]	      5763	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	IF_2
0x40032c9	        0x48c1e104	                              shl rcx, 4	      5771	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_3
0x40032cd	          0x4863c2	                         movsxd rax, edx	      5771	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_3
0x40032d0	        0x4983c601	                              add r14, 1	      5758	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2
0x40032d4	          0x4801c1	                            add rcx, rax	      5771	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_3
0x40032d7	          0x4d39f5	                            cmp r13, r14	      5758	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2
0x40032da	     0xf841e130000	                            je 0x40045fe	      5758	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2
0x40032e0	        0x410fbe06	                   movsx eax, byte [r14]	      5762	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	IF_2
0x40032e4	          0x8d50d0	                   lea edx, [rax - 0x30]	      5762	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	IF_2
0x40032e7	          0x80fa09	                               cmp dl, 9	      5762	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	IF_2
0x40032ea	            0x76da	                           jbe 0x40032c6	      5762	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	IF_2
0x40032ec	          0x8d50bf	                   lea edx, [rax - 0x41]	      5764	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_1	IF_3
0x40032ef	          0x80fa05	                               cmp dl, 5	      5764	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_1	IF_3
0x40032f2	     0xf8785090000	                            ja 0x4003c7d	      5764	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_1	IF_3
0x40032f8	          0x8d50c9	                   lea edx, [rax - 0x37]	      5765	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_1	IF_3
0x40032fb	            0xebcc	                           jmp 0x40032c9	      5765	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_1	IF_3
0x40032fd	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003304	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400330b	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003310	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003313	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003319	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003321	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4003326	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4003328	      0xe94affffff	                           jmp 0x4003277	      4224	cp-demangle.c	FUNCTION_71
0x400332d	      0xbd00000000	                              mov ebp, 0	      4224	cp-demangle.c	FUNCTION_71
0x4003332	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x4003338	            0xeb2c	                           jmp 0x4003366	      4224	cp-demangle.c	FUNCTION_71
0x400333a	    0x660f1f440000	                    nop word [rax + rax]	      4224	cp-demangle.c	FUNCTION_71
0x4003340	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003343	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003347	        0x4883c501	                              add rbp, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400334b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4003352	        0x44882413	              mov byte [rbx + rdx], r12b	      4235	cp-demangle.c	FUNCTION_72
0x4003356	          0x4939ed	                            cmp r13, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003359	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x4003360	     0xf84f2d9ffff	                            je 0x4000d58	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003366	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400336c	      0x440fb66500	                  movzx r12d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4003371	            0x75cd	                           jne 0x4003340	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003373	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400337a	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003381	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003386	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003389	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400338f	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003397	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x400339c	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x400339e	            0xeba7	                           jmp 0x4003347	      4224	cp-demangle.c	FUNCTION_71
0x40033a0	      0x41833c242f	                   cmp dword [r12], 0x2f	      5071	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_33
0x40033a5	     0xf85d3e6ffff	                           jne 0x4001a7e	      5071	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_33
0x40033ab	    0x488b93280100	           mov rdx, qword [rbx + 0x128] 	      5071	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_33
0x40033b2	          0x4989c4	                            mov r12, rax	      4633	cp-demangle.c	FUNCTION_86
0x40033b5	      0xe9cee6ffff	                           jmp 0x4001a88	      4633	cp-demangle.c	FUNCTION_86
0x40033ba	    0x41be01000000	                             mov r14d, 1	      4707	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x40033c0	          0x83fa02	                              cmp edx, 2	      4725	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9
0x40033c3	     0xf8597ecffff	                           jne 0x4002060	      4725	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9
0x40033c9	        0x4d8b6d10	            mov r13, qword [r13 + 0x10] 	      4727	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9
0x40033cd	      0x41837d0046	                   cmp dword [r13], 0x46	      4728	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	IF_10
0x40033d2	     0xf84acfcffff	                            je 0x4003084	      4728	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	IF_10
0x40033d8	        0x418b5500	                    mov edx, dword [r13]	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x40033dc	          0x8d42e4	                   lea eax, [rdx - 0x1c]	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x40033df	          0x83f833	                           cmp eax, 0x33	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x40033e2	     0xf8778ecffff	                            ja 0x4002060	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x40033e8	    0x49b81f000000	              movabs r8, 0xd00000000001f	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x40033f2	        0x490fa3c0	                              bt r8, rax	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x40033f6	     0xf837fecffff	                           jae 0x400207b	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x40033fc	        0x4183fe04	                             cmp r14d, 4	      4737	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	IF_12
0x4003400	     0xf848bfcffff	                            je 0x4003091	      4737	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	IF_12
0x4003406	    0x41b901000000	                              mov r9d, 1	      4737	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	IF_12
0x400340c	        0x418d46ff	                      lea eax, [r14 - 1]	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4003410	          0x4489f2	                           mov edx, r14d	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4003413	        0x4183c601	                             add r14d, 1	      4750	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4003417	        0x48c1e205	                              shl rdx, 5	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x400341b	        0x48c1e005	                              shl rax, 5	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x400341f	      0x488b4c0430	      mov rcx, qword [rsp + rax + 0x30] 	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4003424	      0x48894c1430	       mov qword [rsp + rdx + 0x30], rcx	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4003429	      0x488b4c0438	      mov rcx, qword [rsp + rax + 0x38] 	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x400342e	      0x48894c1438	       mov qword [rsp + rdx + 0x38], rcx	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4003433	      0x488b4c0440	      mov rcx, qword [rsp + rax + 0x40] 	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4003438	      0x48894c1440	       mov qword [rsp + rdx + 0x40], rcx	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x400343d	      0x488b4c0448	      mov rcx, qword [rsp + rax + 0x48] 	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4003442	      0x48894c1448	       mov qword [rsp + rdx + 0x48], rcx	      4743	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4003447	        0x488d0c06	                    lea rcx, [rsi + rax]	      4744	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x400344b	      0x48894c1430	       mov qword [rsp + rdx + 0x30], rcx	      4744	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4003450	          0x4801f2	                            add rdx, rsi	      4745	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4003453	      0x4c896c0438	       mov qword [rsp + rax + 0x38], r13	      4747	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4003458	    0x488993280100	            mov qword [rbx + 0x128], rdx	      4745	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x400345f	    0xc74404400000	         mov dword [rsp + rax + 0x40], 0	      4748	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4003467	      0x48897c0448	       mov qword [rsp + rax + 0x48], rdi	      4749	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x400346c	        0x4d8b6d08	                mov r13, qword [r13 + 8]	      4752	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2
0x4003470	        0x418b5500	                    mov edx, dword [r13]	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x4003474	          0x8d4ae4	                   lea ecx, [rdx - 0x1c]	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x4003477	          0x83f933	                           cmp ecx, 0x33	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x400347a	     0xf87e0ebffff	                            ja 0x4002060	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x4003480	          0x4c89c8	                             mov rax, r9	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x4003483	          0x48d3e0	                             shl rax, cl	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x4003486	          0x4c85c0	                            test rax, r8	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x4003489	     0xf84ecebffff	                            je 0x400207b	      4735	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	CALL_20
0x400348f	        0x4183fe04	                             cmp r14d, 4	      4737	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	IF_12
0x4003493	     0xf8573ffffff	                           jne 0x400340c	      4737	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	IF_12
0x4003499	      0xe9f3fbffff	                           jmp 0x4003091	      4737	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	IF_12
0x400349e	            0x6690	                                     nop	      4737	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	IF_12
0x40034a0	      0xbd00000000	                              mov ebp, 0	      4737	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	IF_12
0x40034a5	            0xeb33	                           jmp 0x40034da	      4737	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	IF_12
0x40034a7	    0x660f1f840000	                    nop word [rax + rax]	      4737	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_9	WHILE_2	IF_12
0x40034b0	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40034b3	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40034b7	        0x4883c501	                              add rbp, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40034bb	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40034c2	        0x44882413	              mov byte [rbx + rdx], r12b	      4235	cp-demangle.c	FUNCTION_72
0x40034c6	    0x4881fd000000	                              cmp rbp, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40034cd	    0x4488a3080100	            mov byte [rbx + 0x108], r12b	      4236	cp-demangle.c	FUNCTION_72
0x40034d4	     0xf847ed8ffff	                            je 0x4000d58	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40034da	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40034e0	      0x440fb66500	                  movzx r12d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40034e5	            0x75c9	                           jne 0x40034b0	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40034e7	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40034ee	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40034f5	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40034fa	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40034fd	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003503	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400350b	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4003510	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4003512	            0xeba3	                           jmp 0x40034b7	      4224	cp-demangle.c	FUNCTION_71
0x4003514	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x400351b	      0xbd00000000	                              mov ebp, 0	      4224	cp-demangle.c	FUNCTION_71
0x4003520	            0xeb2c	                           jmp 0x400354e	      4224	cp-demangle.c	FUNCTION_71
0x4003522	    0x660f1f440000	                    nop word [rax + rax]	      4224	cp-demangle.c	FUNCTION_71
0x4003528	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400352b	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400352f	        0x4883c501	                              add rbp, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003533	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x400353a	        0x44882c13	              mov byte [rbx + rdx], r13b	      4235	cp-demangle.c	FUNCTION_72
0x400353e	    0x4881fd000000	                              cmp rbp, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003545	    0x4488ab080100	            mov byte [rbx + 0x108], r13b	      4236	cp-demangle.c	FUNCTION_72
0x400354c	            0x743a	                            je 0x4003588	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400354e	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003554	      0x440fb66d00	                  movzx r13d, byte [rbp]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4003559	            0x75cd	                           jne 0x4003528	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400355b	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003562	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003569	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400356e	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003571	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003577	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400357f	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4003584	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4003586	            0xeba7	                           jmp 0x400352f	      4224	cp-demangle.c	FUNCTION_71
0x4003588	      0x498b442408	                mov rax, qword [r12 + 8]	        33	stdio2.h	FUNCTION_109	CALL_1
0x400358d	    0x488dac24b000	                   lea rbp, [rsp + 0xb0]	        33	stdio2.h	FUNCTION_109	CALL_1
0x4003595	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_109	CALL_1
0x400359a	      0xba19000000	                           mov edx, 0x19	        33	stdio2.h	FUNCTION_109	CALL_1
0x400359f	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_109	CALL_1
0x40035a4	          0x4889ef	                            mov rdi, rbp	        33	stdio2.h	FUNCTION_109	CALL_1
0x40035a7	          0x4989ee	                            mov r14, rbp	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40035aa	        0x448d4001	                      lea r8d, [rax + 1]	        33	stdio2.h	FUNCTION_109	CALL_1
0x40035ae	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_109	CALL_1
0x40035b0	      0xe800000000	                          call 0x40035b5	        33	stdio2.h	FUNCTION_109	CALL_1
0x40035b5	          0x418b16	                    mov edx, dword [r14]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40035b8	        0x4983c604	                              add r14, 4	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40035bc	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40035c2	            0xf7d2	                                 not edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40035c4	            0x21d0	                            and eax, edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40035c6	      0x2580808080	                     and eax, 0x80808080	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40035cb	            0x74e8	                            je 0x40035b5	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40035cd	            0x89c2	                            mov edx, eax	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40035cf	          0xc1ea10	                           shr edx, 0x10	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40035d2	      0xa980800000	                        test eax, 0x8080	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40035d7	           0xf44c2	                          cmove eax, edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40035da	        0x498d5602	                      lea rdx, [r14 + 2]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40035de	            0x89c1	                            mov ecx, eax	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40035e0	        0x4c0f44f2	                          cmove r14, rdx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40035e4	              0xc1	                              add cl, al	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40035e6	        0x4983de03	                              sbb r14, 3	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40035ea	          0x4929ee	                            sub r14, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40035ed	     0xf8465d7ffff	                            je 0x4000d58	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40035f3	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40035fa	          0x4531e4	                          xor r12d, r12d	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40035fd	            0xeb27	                           jmp 0x4003626	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40035ff	              0x90	                                     nop	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003600	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003603	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003607	        0x4983c401	                              add r12, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400360b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4003612	        0x44882c13	              mov byte [rbx + rdx], r13b	      4235	cp-demangle.c	FUNCTION_72
0x4003616	          0x4d39e6	                            cmp r14, r12	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003619	    0x4488ab080100	            mov byte [rbx + 0x108], r13b	      4236	cp-demangle.c	FUNCTION_72
0x4003620	     0xf8432d7ffff	                            je 0x4000d58	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003626	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400362c	    0x460fb66c2500	            movzx r13d, byte [rbp + r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4003632	            0x75cc	                           jne 0x4003600	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003634	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400363b	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003642	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003647	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400364a	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003650	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003658	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x400365d	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x400365f	            0xeba6	                           jmp 0x4003607	      4224	cp-demangle.c	FUNCTION_71
0x4003661	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x4003668	      0xe964e2ffff	                           jmp 0x40018d1	      4224	cp-demangle.c	FUNCTION_71
0x400366d	    0x488b8f280100	           mov rcx, qword [rdi + 0x128] 	      5128	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39	CALL_96
0x4003674	          0x83e59f	                     and ebp, 0xffffff9f	      5128	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39	CALL_96
0x4003677	      0x498d542410	                   lea rdx, [r12 + 0x10]	      5128	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39	CALL_96
0x400367c	            0x89ee	                            mov esi, ebp	      5128	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39	CALL_96
0x400367e	      0xe8fd270000	  call sym.d_print_function_type.isra.11	      5128	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_39	CALL_96
0x4003683	      0x498b542408	                mov rdx, qword [r12 + 8]	      5133	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40
0x4003688	          0x4885d2	                           test rdx, rdx	      5133	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40
0x400368b	     0xf84c7d6ffff	                            je 0x4000d58	      5133	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40
0x4003691	            0x89ee	                            mov esi, ebp	      5134	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40	CALL_97
0x4003693	          0x4889df	                            mov rdi, rbx	      5134	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40	CALL_97
0x4003696	      0xe8b5160000	                   call sym.d_print_comp	      5134	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40	CALL_97
0x400369b	      0xe9b8d6ffff	                           jmp 0x4000d58	      5134	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40	CALL_97
0x40036a0	    0x41bd00000000	                             mov r13d, 0	      5134	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40	CALL_97
0x40036a6	    0x41bf00000000	                             mov r15d, 0	      5134	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40	CALL_97
0x40036ac	            0xeb28	                           jmp 0x40036d6	      5134	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40	CALL_97
0x40036ae	            0x6690	                                     nop	      5134	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_40	CALL_97
0x40036b0	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40036b3	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40036b7	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40036bb	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40036c2	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x40036c6	          0x4d39ef	                            cmp r15, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40036c9	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x40036d0	     0xf84dbeaffff	                            je 0x40021b1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40036d6	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40036dc	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40036e1	            0x75cd	                           jne 0x40036b0	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40036e3	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40036ea	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40036f1	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40036f6	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40036f9	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40036ff	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003707	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x400370c	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x400370e	            0xeba7	                           jmp 0x40036b7	      4224	cp-demangle.c	FUNCTION_71
0x4003710	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x4003717	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x400371d	            0xeb2b	                           jmp 0x400374a	      4224	cp-demangle.c	FUNCTION_71
0x400371f	              0x90	                                     nop	      4224	cp-demangle.c	FUNCTION_71
0x4003720	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003723	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003727	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400372b	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4003732	        0x44883413	              mov byte [rbx + rdx], r14b	      4235	cp-demangle.c	FUNCTION_72
0x4003736	    0x4981fd000000	                              cmp r13, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400373d	    0x4488b3080100	            mov byte [rbx + 0x108], r14b	      4236	cp-demangle.c	FUNCTION_72
0x4003744	     0xf8440e1ffff	                            je 0x400188a	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400374a	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003750	      0x450fb67500	                  movzx r14d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4003755	            0x75c9	                           jne 0x4003720	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003757	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400375e	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003765	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400376a	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400376d	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003773	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400377b	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4003780	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4003782	            0xeba3	                           jmp 0x4003727	      4224	cp-demangle.c	FUNCTION_71
0x4003784	        0x488b5208	                mov rdx, qword [rdx + 8]	      6141	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_2
0x4003788	            0x89ee	                            mov esi, ebp	      6141	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_2
0x400378a	          0x4889df	                            mov rdi, rbx	      6141	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_2
0x400378d	      0xe8be150000	                   call sym.d_print_comp	      6141	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_2
0x4003792	    0x4883bb700100	              cmp qword [rbx + 0x170], 0	      6146	cp-demangle.c	FUNCTION_95	ELSE_1	IF_4
0x400379a	            0x740c	                            je 0x40037a8	      6146	cp-demangle.c	FUNCTION_95	ELSE_1	IF_4
0x400379c	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      6147	cp-demangle.c	FUNCTION_95	ELSE_1	IF_4
0x40037a1	    0x488983200100	            mov qword [rbx + 0x120], rax	      6147	cp-demangle.c	FUNCTION_95	ELSE_1	IF_4
0x40037a8	    0x80bb08010000	           cmp byte [rbx + 0x108], 0x3c 	      6149	cp-demangle.c	FUNCTION_95	ELSE_1	IF_5	CALL_3
0x40037af	     0xf84c50d0000	                            je 0x400457a	      6149	cp-demangle.c	FUNCTION_95	ELSE_1	IF_5	CALL_3
0x40037b5	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40037bc	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40037c2	     0xf843d0f0000	                            je 0x4004705	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40037c8	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40037cc	            0x89ee	                            mov esi, ebp	      6152	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_6
0x40037ce	          0x4889df	                            mov rdi, rbx	      6152	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_6
0x40037d1	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40037d8	        0xc604033c	              mov byte [rbx + rax], 0x3c	      4235	cp-demangle.c	FUNCTION_72
0x40037dc	    0xc68308010000	           mov byte [rbx + 0x108], 0x3c 	      4236	cp-demangle.c	FUNCTION_72
0x40037e3	      0x498b442408	                mov rax, qword [r12 + 8]	      6152	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_6
0x40037e8	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      6152	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_6
0x40037ec	      0xe85f150000	                   call sym.d_print_comp	      6152	cp-demangle.c	FUNCTION_95	ELSE_1	CALL_6
0x40037f1	    0x80bb08010000	           cmp byte [rbx + 0x108], 0x3e 	      6155	cp-demangle.c	FUNCTION_95	ELSE_1	IF_6	CALL_7
0x40037f8	     0xf84490d0000	                            je 0x4004547	      6155	cp-demangle.c	FUNCTION_95	ELSE_1	IF_6	CALL_7
0x40037fe	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003805	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400380b	     0xf84c90e0000	                            je 0x40046da	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003811	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4003815	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400381c	        0xc604033e	              mov byte [rbx + rax], 0x3e	      4235	cp-demangle.c	FUNCTION_72
0x4003820	    0xc68308010000	           mov byte [rbx + 0x108], 0x3e 	      4236	cp-demangle.c	FUNCTION_72
0x4003827	      0xe92cd5ffff	                           jmp 0x4000d58	      4236	cp-demangle.c	FUNCTION_72
0x400382c	        0x488b5208	                mov rdx, qword [rdx + 8]	      5529	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82
0x4003830	        0x448b6a1c	           mov r13d, dword [rdx + 0x1c] 	      5529	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82
0x4003834	        0x4183fd01	                             cmp r13d, 1	      5530	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2
0x4003838	     0xf8283dcffff	                            jb 0x40014c1	      5530	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2
0x400383e	        0x4183fd06	                             cmp r13d, 6	      5530	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2
0x4003842	     0xf86f10b0000	                           jbe 0x4004439	      5530	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2
0x4003848	        0x4183fd07	                             cmp r13d, 7	      5530	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2
0x400384c	     0xf856fdcffff	                           jne 0x40014c1	      5530	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2
0x4003852	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      5568	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x4003857	            0x8b0a	                    mov ecx, dword [rdx]	      5568	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x4003859	            0x85c9	                           test ecx, ecx	      5568	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x400385b	     0xf8560dcffff	                           jne 0x40014c1	      5568	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x4003861	        0x837a1001	               cmp dword [rdx + 0x10], 1	      5570	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x4003865	     0xf8556dcffff	                           jne 0x40014c1	      5570	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x400386b	          0x83f83c	                           cmp eax, 0x3c	      5570	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x400386e	     0xf854ddcffff	                           jne 0x40014c1	      5570	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85
0x4003874	        0x488b4208	                mov rax, qword [rdx + 8]	      5572	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4
0x4003878	           0xfb600	                   movzx eax, byte [rax]	      5572	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4
0x400387b	            0x3c30	                            cmp al, 0x30	      5572	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4
0x400387d	     0xf844b140000	                            je 0x4004cce	      5572	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4
0x4003883	            0x3c31	                            cmp al, 0x31	      5572	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4
0x4003885	     0xf8536dcffff	                           jne 0x40014c1	      5572	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_85	SWITCH_4
0x400388b	      0xba04000000	                              mov edx, 4	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003890	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003895	      0xe806c9ffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400389a	      0xe9b9d4ffff	                           jmp 0x4000d58	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400389f	              0x90	                                     nop	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40038a0	        0x498b4608	                mov rax, qword [r14 + 8]	      5349	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59
0x40038a4	          0x4c8b28	                    mov r13, qword [rax]	      5349	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59
0x40038a7	      0x410fb64500	                   movzx eax, byte [r13]	      5350	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	CALL_128
0x40038ac	          0x83f861	                           cmp eax, 0x61	      5350	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	CALL_128
0x40038af	     0xf8518040000	                           jne 0x4003ccd	      5350	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	CALL_128
0x40038b5	      0x41807d0164	                cmp byte [r13 + 1], 0x64	      5350	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	CALL_128
0x40038ba	     0xf850d040000	                           jne 0x4003ccd	      5350	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	CALL_128
0x40038c0	      0x41807d0200	                   cmp byte [r13 + 2], 0	      5350	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	CALL_128
0x40038c5	        0x418b1424	                    mov edx, dword [r12]	      5354	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x40038c9	            0x7509	                           jne 0x40038d4	      5350	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	CALL_128
0x40038cb	          0x83fa03	                              cmp edx, 3	      5354	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x40038ce	     0xf84d1010000	                            je 0x4003aa5	      5354	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x40038d4	          0x83fa38	                           cmp edx, 0x38	      5359	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62
0x40038d7	     0xf8404110000	                            je 0x40049e1	      5359	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62
0x40038dd	          0x83f873	                           cmp eax, 0x73	      5370	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_131
0x40038e0	     0xf85d5010000	                           jne 0x4003abb	      5370	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_131
0x40038e6	      0x41807d015a	                cmp byte [r13 + 1], 0x5a	      5370	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_131
0x40038eb	     0xf8510010000	                           jne 0x4003a01	      5370	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_131
0x40038f1	      0x41807d0200	                   cmp byte [r13 + 2], 0	      5370	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_131
0x40038f6	     0xf85bf010000	                           jne 0x4003abb	      5370	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_131
0x40038fc	          0x4c89e6	                            mov rsi, r12	      5372	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_132
0x40038ff	          0x4889df	                            mov rdi, rbx	      5372	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_132
0x4003902	      0xe8b9ccffff	                    call sym.d_find_pack	      5372	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_63	CALL_132
0x4003907	          0x4531c0	                            xor r8d, r8d	      4446	cp-demangle.c	FUNCTION_80	WHILE_1
0x400390a	          0x4885c0	                           test rax, rax	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x400390d	            0x751d	                           jne 0x400392c	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x400390f	            0xeb20	                           jmp 0x4003931	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x4003911	     0xf1f80000000	                         nop dword [rax]	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x4003918	      0x4883780800	                  cmp qword [rax + 8], 0	      4446	cp-demangle.c	FUNCTION_80	WHILE_1
0x400391d	            0x7412	                            je 0x4003931	      4446	cp-demangle.c	FUNCTION_80	WHILE_1
0x400391f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4449	cp-demangle.c	FUNCTION_80	WHILE_1
0x4003923	        0x4183c001	                              add r8d, 1	      4448	cp-demangle.c	FUNCTION_80	WHILE_1
0x4003927	          0x4885c0	                           test rax, rax	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x400392a	            0x7405	                            je 0x4003931	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x400392c	          0x83382f	                   cmp dword [rax], 0x2f	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x400392f	            0x74e7	                            je 0x4003918	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x4003931	    0x488dac24b000	                   lea rbp, [rsp + 0xb0]	        33	stdio2.h	FUNCTION_109	CALL_1
0x4003939	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_109	CALL_1
0x400393e	      0xba19000000	                           mov edx, 0x19	        33	stdio2.h	FUNCTION_109	CALL_1
0x4003943	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_109	CALL_1
0x4003948	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_109	CALL_1
0x400394a	          0x4889ef	                            mov rdi, rbp	        33	stdio2.h	FUNCTION_109	CALL_1
0x400394d	          0x4989ee	                            mov r14, rbp	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003950	      0xe800000000	                          call 0x4003955	        33	stdio2.h	FUNCTION_109	CALL_1
0x4003955	          0x418b16	                    mov edx, dword [r14]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003958	        0x4983c604	                              add r14, 4	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400395c	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003962	            0xf7d2	                                 not edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003964	            0x21d0	                            and eax, edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003966	      0x2580808080	                     and eax, 0x80808080	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400396b	            0x74e8	                            je 0x4003955	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400396d	            0x89c2	                            mov edx, eax	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400396f	          0xc1ea10	                           shr edx, 0x10	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003972	      0xa980800000	                        test eax, 0x8080	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003977	           0xf44c2	                          cmove eax, edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400397a	        0x498d5602	                      lea rdx, [r14 + 2]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400397e	            0x89c1	                            mov ecx, eax	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003980	        0x4c0f44f2	                          cmove r14, rdx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003984	              0xc1	                              add cl, al	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003986	        0x4983de03	                              sbb r14, 3	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400398a	          0x4929ee	                            sub r14, rbp	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400398d	     0xf84c5d3ffff	                            je 0x4000d58	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4003993	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400399a	          0x4531e4	                          xor r12d, r12d	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400399d	            0xeb27	                           jmp 0x40039c6	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400399f	              0x90	                                     nop	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40039a0	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40039a3	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40039a7	        0x4983c401	                              add r12, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40039ab	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x40039b2	        0x44882c13	              mov byte [rbx + rdx], r13b	      4235	cp-demangle.c	FUNCTION_72
0x40039b6	          0x4d39e6	                            cmp r14, r12	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40039b9	    0x4488ab080100	            mov byte [rbx + 0x108], r13b	      4236	cp-demangle.c	FUNCTION_72
0x40039c0	     0xf8492d3ffff	                            je 0x4000d58	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40039c6	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40039cc	    0x460fb66c2500	            movzx r13d, byte [rbp + r12]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40039d2	            0x75cc	                           jne 0x40039a0	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40039d4	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40039db	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40039e2	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40039e7	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40039ea	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40039f0	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40039f8	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x40039fd	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x40039ff	            0xeba6	                           jmp 0x40039a7	      4224	cp-demangle.c	FUNCTION_71
0x4003a01	      0x41807d0150	                cmp byte [r13 + 1], 0x50	      5377	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_135
0x4003a06	     0xf85af000000	                           jne 0x4003abb	      5377	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_135
0x4003a0c	      0x41807d0200	                   cmp byte [r13 + 2], 0	      5377	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_135
0x4003a11	     0xf85a4000000	                           jne 0x4003abb	      5377	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_135
0x4003a17	          0x4d85e4	                           test r12, r12	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4003a1a	     0xf8416080000	                            je 0x4004236	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4003a20	          0x83fa2f	                           cmp edx, 0x2f	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4003a23	     0xf850d080000	                           jne 0x4004236	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4003a29	      0x498b442408	                mov rax, qword [r12 + 8]	      4464	cp-demangle.c	FUNCTION_81	FOR_1
0x4003a2e	          0x4531ff	                          xor r15d, r15d	      4465	cp-demangle.c	FUNCTION_81	FOR_1	IF_1
0x4003a31	          0x4885c0	                           test rax, rax	      4465	cp-demangle.c	FUNCTION_81	FOR_1	IF_1
0x4003a34	            0x7535	                           jne 0x4003a6b	      4465	cp-demangle.c	FUNCTION_81	FOR_1	IF_1
0x4003a36	      0xe9fe070000	                           jmp 0x4004239	      4465	cp-demangle.c	FUNCTION_81	FOR_1	IF_1
0x4003a3b	       0xf1f440000	                   nop dword [rax + rax]	      4465	cp-demangle.c	FUNCTION_81	FOR_1	IF_1
0x4003a40	        0x4183c701	                             add r15d, 1	      4473	cp-demangle.c	FUNCTION_81	FOR_1	ELSE_1
0x4003a44	      0x4d8b642410	            mov r12, qword [r12 + 0x10] 	      4462	cp-demangle.c	FUNCTION_81	FOR_1
0x4003a49	          0x4d85e4	                           test r12, r12	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4003a4c	     0xf84e7070000	                            je 0x4004239	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4003a52	      0x41833c242f	                   cmp dword [r12], 0x2f	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4003a57	     0xf85dc070000	                           jne 0x4004239	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4003a5d	      0x498b442408	                mov rax, qword [r12 + 8]	      4464	cp-demangle.c	FUNCTION_81	FOR_1
0x4003a62	          0x4885c0	                           test rax, rax	      4465	cp-demangle.c	FUNCTION_81	FOR_1	IF_1
0x4003a65	     0xf84ce070000	                            je 0x4004239	      4465	cp-demangle.c	FUNCTION_81	FOR_1	IF_1
0x4003a6b	          0x83384a	                   cmp dword [rax], 0x4a	      4467	cp-demangle.c	FUNCTION_81	FOR_1	IF_2
0x4003a6e	            0x75d0	                           jne 0x4003a40	      4467	cp-demangle.c	FUNCTION_81	FOR_1	IF_2
0x4003a70	        0x488b7008	                mov rsi, qword [rax + 8]	      4469	cp-demangle.c	FUNCTION_81	FOR_1	IF_2	CALL_1
0x4003a74	          0x4889df	                            mov rdi, rbx	      4469	cp-demangle.c	FUNCTION_81	FOR_1	IF_2	CALL_1
0x4003a77	      0xe844cbffff	                    call sym.d_find_pack	      4469	cp-demangle.c	FUNCTION_81	FOR_1	IF_2	CALL_1
0x4003a7c	            0x31d2	                            xor edx, edx	      4446	cp-demangle.c	FUNCTION_80	WHILE_1
0x4003a7e	          0x4885c0	                           test rax, rax	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x4003a81	            0x7518	                           jne 0x4003a9b	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x4003a83	            0xeb1b	                           jmp 0x4003aa0	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x4003a85	           0xf1f00	                         nop dword [rax]	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x4003a88	      0x4883780800	                  cmp qword [rax + 8], 0	      4446	cp-demangle.c	FUNCTION_80	WHILE_1
0x4003a8d	            0x7411	                            je 0x4003aa0	      4446	cp-demangle.c	FUNCTION_80	WHILE_1
0x4003a8f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4449	cp-demangle.c	FUNCTION_80	WHILE_1
0x4003a93	          0x83c201	                              add edx, 1	      4448	cp-demangle.c	FUNCTION_80	WHILE_1
0x4003a96	          0x4885c0	                           test rax, rax	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x4003a99	            0x7405	                            je 0x4003aa0	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x4003a9b	          0x83382f	                   cmp dword [rax], 0x2f	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x4003a9e	            0x74e8	                            je 0x4003a88	      4445	cp-demangle.c	FUNCTION_80	WHILE_1
0x4003aa0	          0x4101d7	                           add r15d, edx	      4470	cp-demangle.c	FUNCTION_81	FOR_1	IF_2	CALL_2
0x4003aa3	            0xeb9f	                           jmp 0x4003a44	      4470	cp-demangle.c	FUNCTION_81	FOR_1	IF_2	CALL_2
0x4003aa5	      0x498b442408	                mov rax, qword [r12 + 8]	      5355	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x4003aaa	          0x833801	                      cmp dword [rax], 1	      5355	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x4003aad	            0x750c	                           jne 0x4003abb	      5355	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x4003aaf	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      5356	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x4003ab4	          0x833a29	                   cmp dword [rdx], 0x29	      5356	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x4003ab7	        0x4c0f44e0	                          cmove r12, rax	      5356	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_60	IF_61
0x4003abb	          0x4c89f2	                            mov rdx, r14	      5385	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_138
0x4003abe	            0x89ee	                            mov esi, ebp	      5385	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_138
0x4003ac0	          0x4889df	                            mov rdi, rbx	      5385	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_138
0x4003ac3	      0xe8c8260000	                call sym.d_print_expr_op	      5385	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_138
0x4003ac8	          0x4d85ed	                           test r13, r13	      5392	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_66	CALL_142
0x4003acb	     0xf8408dbffff	                            je 0x40015d9	      5392	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_66	CALL_142
0x4003ad1	      0x410fb64500	                   movzx eax, byte [r13]	      5392	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_66	CALL_142
0x4003ad6	          0x83f867	                           cmp eax, 0x67	      5392	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_66	CALL_142
0x4003ad9	            0x7528	                           jne 0x4003b03	      5392	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_66	CALL_142
0x4003adb	      0x41807d0173	                cmp byte [r13 + 1], 0x73	      5392	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_66	CALL_142
0x4003ae0	     0xf85f3daffff	                           jne 0x40015d9	      5392	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_66	CALL_142
0x4003ae6	      0x41807d0200	                   cmp byte [r13 + 2], 0	      5392	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_66	CALL_142
0x4003aeb	     0xf85e8daffff	                           jne 0x40015d9	      5392	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_66	CALL_142
0x4003af1	          0x4c89e2	                            mov rdx, r12	      5394	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_143
0x4003af4	            0x89ee	                            mov esi, ebp	      5394	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_143
0x4003af6	          0x4889df	                            mov rdi, rbx	      5394	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_143
0x4003af9	      0xe852120000	                   call sym.d_print_comp	      5394	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_143
0x4003afe	      0xe955d2ffff	                           jmp 0x4000d58	      5394	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_143
0x4003b03	          0x83f873	                           cmp eax, 0x73	      5395	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_144
0x4003b06	     0xf85cddaffff	                           jne 0x40015d9	      5395	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_144
0x4003b0c	      0x41807d0174	                cmp byte [r13 + 1], 0x74	      5395	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_144
0x4003b11	     0xf85c2daffff	                           jne 0x40015d9	      5395	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_144
0x4003b17	      0x41807d0200	                   cmp byte [r13 + 2], 0	      5395	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_144
0x4003b1c	     0xf85b7daffff	                           jne 0x40015d9	      5395	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_144
0x4003b22	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003b29	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003b2f	     0xf843e0b0000	                            je 0x4004673	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003b35	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4003b39	            0x89ee	                            mov esi, ebp	      5399	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_146
0x4003b3b	          0x4889df	                            mov rdi, rbx	      5399	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_146
0x4003b3e	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4003b45	        0xc6040328	              mov byte [rbx + rax], 0x28	      4235	cp-demangle.c	FUNCTION_72
0x4003b49	          0x4c89e2	                            mov rdx, r12	      5399	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_146
0x4003b4c	    0xc68308010000	           mov byte [rbx + 0x108], 0x28 	      4236	cp-demangle.c	FUNCTION_72
0x4003b53	      0xe8f8110000	                   call sym.d_print_comp	      5399	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_12	IF_67	CALL_146
0x4003b58	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003b5f	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003b65	     0xf849e0a0000	                            je 0x4004609	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003b6b	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4003b6f	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4003b76	        0xc6040329	              mov byte [rbx + rax], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x4003b7a	    0xc68308010000	           mov byte [rbx + 0x108], 0x29 	      4236	cp-demangle.c	FUNCTION_72
0x4003b81	      0xe9d2d1ffff	                           jmp 0x4000d58	      4236	cp-demangle.c	FUNCTION_72
0x4003b86	    0x488b93000100	           mov rdx, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003b8d	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003b94	     0xf841c0e0000	                            je 0x40049b6	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003b9a	        0x488d4201	                      lea rax, [rdx + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4003b9e	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4003ba5	        0xc6041320	              mov byte [rbx + rdx], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4003ba9	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4003bb0	      0xe9fee3ffff	                           jmp 0x4001fb3	      4236	cp-demangle.c	FUNCTION_72
0x4003bb5	    0x488b93000100	           mov rdx, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003bbc	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003bc3	     0xf84930c0000	                            je 0x400485c	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003bc9	        0x488d4201	                      lea rax, [rdx + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4003bcd	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4003bd4	        0xc6041320	              mov byte [rbx + rdx], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4003bd8	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4003bdf	      0xe98ae3ffff	                           jmp 0x4001f6e	      4236	cp-demangle.c	FUNCTION_72
0x4003be4	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003beb	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003bf1	     0xf843a0c0000	                            je 0x4004831	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003bf7	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4003bfb	            0x89ee	                            mov esi, ebp	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x4003bfd	          0x4889df	                            mov rdi, rbx	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x4003c00	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4003c07	        0xc604035b	              mov byte [rbx + rax], 0x5b	      4235	cp-demangle.c	FUNCTION_72
0x4003c0b	    0xc68308010000	           mov byte [rbx + 0x108], 0x5b 	      4236	cp-demangle.c	FUNCTION_72
0x4003c12	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x4003c17	      0xe834110000	                   call sym.d_print_comp	      5598	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_200
0x4003c1c	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003c23	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003c29	     0xf84ed080000	                            je 0x400451c	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003c2f	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4003c33	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4003c3a	        0xc604035d	              mov byte [rbx + rax], 0x5d	      4235	cp-demangle.c	FUNCTION_72
0x4003c3e	    0xc68308010000	           mov byte [rbx + 0x108], 0x5d 	      4236	cp-demangle.c	FUNCTION_72
0x4003c45	      0xe90ed1ffff	                           jmp 0x4000d58	      4236	cp-demangle.c	FUNCTION_72
0x4003c4a	      0x42c6042b00	                 mov byte [rbx + r13], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003c4f	          0x4c89ee	                            mov rsi, r13	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003c52	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003c59	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003c5c	          0x4531ed	                          xor r13d, r13d	      4224	cp-demangle.c	FUNCTION_71
0x4003c5f	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003c65	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4003c70	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003c78	      0xe98edbffff	                           jmp 0x400180b	      4224	cp-demangle.c	FUNCTION_71
0x4003c7d	          0x8d509f	                   lea edx, [rax - 0x61]	      5766	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_2	IF_4
0x4003c80	          0x80fa05	                               cmp dl, 5	      5766	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_2	IF_4
0x4003c83	     0xf87660e0000	                            ja 0x4004aef	      5766	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_2	IF_4
0x4003c89	          0x8d50a9	                   lea edx, [rax - 0x57]	      5767	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_2	IF_4
0x4003c8c	      0xe938f6ffff	                           jmp 0x40032c9	      5767	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	FOR_2	ELSE_2	IF_4
0x4003c91	      0x498b542408	                mov rdx, qword [r12 + 8]	      4997	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24	CALL_84
0x4003c96	            0x89ee	                            mov esi, ebp	      4997	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24	CALL_84
0x4003c98	          0x4889df	                            mov rdi, rbx	      4997	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24	CALL_84
0x4003c9b	      0xe8b0100000	                   call sym.d_print_comp	      4997	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24	CALL_84
0x4003ca0	      0xe9b3d0ffff	                           jmp 0x4000d58	      4998	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1	IF_22	IF_24
0x4003ca5	    0x4881faff0000	                           cmp rdx, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003cac	     0xf84540b0000	                            je 0x4004806	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003cb2	        0x488d4201	                      lea rax, [rdx + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4003cb6	    0x488983000100	            mov qword [rbx + 0x100], rax	      4235	cp-demangle.c	FUNCTION_72
0x4003cbd	        0xc604132d	              mov byte [rbx + rdx], 0x2d	      4235	cp-demangle.c	FUNCTION_72
0x4003cc1	    0xc68308010000	           mov byte [rbx + 0x108], 0x2d 	      4236	cp-demangle.c	FUNCTION_72
0x4003cc8	      0xe960d8ffff	                           jmp 0x400152d	      4236	cp-demangle.c	FUNCTION_72
0x4003ccd	        0x418b1424	                    mov edx, dword [r12]	      4236	cp-demangle.c	FUNCTION_72
0x4003cd1	      0xe9fefbffff	                           jmp 0x40038d4	      4236	cp-demangle.c	FUNCTION_72
0x4003cd6	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003cdd	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003ce4	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003ce9	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003cec	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003cf2	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003cfa	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4003cff	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4003d01	      0xe977f0ffff	                           jmp 0x4002d7d	      4224	cp-demangle.c	FUNCTION_71
0x4003d06	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003d0d	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003d14	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003d19	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003d1c	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003d22	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003d2a	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4003d2f	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4003d31	      0xe94defffff	                           jmp 0x4002c83	      4224	cp-demangle.c	FUNCTION_71
0x4003d36	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003d3d	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003d44	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003d49	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003d4f	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003d57	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4003d5c	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4003d5e	      0xe9a4e0ffff	                           jmp 0x4001e07	      4224	cp-demangle.c	FUNCTION_71
0x4003d63	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003d6a	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003d71	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003d76	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003d79	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003d7f	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003d87	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4003d8c	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4003d8e	      0xe932daffff	                           jmp 0x40017c5	      4224	cp-demangle.c	FUNCTION_71
0x4003d93	      0xba0d000000	                            mov edx, 0xd	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003d98	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003d9d	          0x4889df	                            mov rdi, rbx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003da0	      0xe8fbc3ffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003da5	      0x418b442410	            mov eax, dword [r12 + 0x10] 	      4671	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5	CALL_13
0x4003daa	          0x4889df	                            mov rdi, rbx	      4671	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5	CALL_13
0x4003dad	          0x8d7001	                      lea esi, [rax + 1]	      4671	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5	CALL_13
0x4003db0	      0xe81bcdffff	                   call sym.d_append_num	      4671	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5	CALL_13
0x4003db5	      0xba03000000	                              mov edx, 3	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003dba	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003dbf	          0x4889df	                            mov rdi, rbx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003dc2	      0xe8d9c3ffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4003dc7	      0x4d8b642408	                mov r12, qword [r12 + 8]	      4673	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5
0x4003dcc	      0xe9f0e3ffff	                           jmp 0x40021c1	      4673	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_5
0x4003dd1	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003dd8	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003ddf	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003de4	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003dea	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003df2	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4003df7	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4003df9	      0xe9fed5ffff	                           jmp 0x40013fc	      4224	cp-demangle.c	FUNCTION_71
0x4003dfe	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4003e08	      0xe94bcfffff	                           jmp 0x4000d58	      4207	cp-demangle.c	FUNCTION_69
0x4003e0d	        0x488d4620	                   lea rax, [rsi + 0x20]	      4207	cp-demangle.c	FUNCTION_69
0x4003e11	    0x41be01000000	                             mov r14d, 1	      4709	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_7	CALL_17
0x4003e17	    0x41b901000000	                              mov r9d, 1	      4709	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_7	CALL_17
0x4003e1d	        0x4d8b6d08	                mov r13, qword [r13 + 8]	      4712	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4003e21	          0x4d85ed	                           test r13, r13	      4694	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4003e24	     0xf8467f2ffff	                            je 0x4003091	      4694	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4003e2a	        0x4183fe04	                             cmp r14d, 4	      4696	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_6
0x4003e2e	     0xf845df2ffff	                            je 0x4003091	      4696	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_6
0x4003e34	    0x488b93280100	           mov rdx, qword [rbx + 0x128] 	      4702	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4003e3b	        0x4183c601	                             add r14d, 1	      4707	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4003e3f	    0x488983280100	            mov qword [rbx + 0x128], rax	      4703	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4003e46	        0x4c896808	                mov qword [rax + 8], r13	      4704	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4003e4a	    0xc74010000000	               mov dword [rax + 0x10], 0	      4705	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4003e51	        0x48897818	             mov qword [rax + 0x18], rdi	      4706	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4003e55	          0x488910	                    mov qword [rax], rdx	      4702	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1
0x4003e58	        0x418b5500	                    mov edx, dword [r13]	      4709	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_7	CALL_17
0x4003e5c	          0x8d4ae4	                   lea ecx, [rdx - 0x1c]	      4709	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_7	CALL_17
0x4003e5f	          0x83f933	                           cmp ecx, 0x33	      4709	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_7	CALL_17
0x4003e62	     0xf8758f5ffff	                            ja 0x40033c0	      4709	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_7	CALL_17
0x4003e68	          0x4d89ca	                             mov r10, r9	      4709	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_7	CALL_17
0x4003e6b	        0x4883c020	                           add rax, 0x20	      4709	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_7	CALL_17
0x4003e6f	          0x49d3e2	                             shl r10, cl	      4709	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_7	CALL_17
0x4003e72	          0x4d85c2	                            test r10, r8	      4709	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_7	CALL_17
0x4003e75	            0x75a6	                           jne 0x4003e1d	      4709	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_7	CALL_17
0x4003e77	      0xe9e4e1ffff	                           jmp 0x4002060	      4709	cp-demangle.c	FUNCTION_86	SWITCH_1	WHILE_1	IF_7	CALL_17
0x4003e7c	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003e83	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003e8a	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003e8f	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003e92	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003e98	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003ea0	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4003ea2	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4003ea7	      0xe99aedffff	                           jmp 0x4002c46	      4224	cp-demangle.c	FUNCTION_71
0x4003eac	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003eb3	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003eba	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003ebf	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003ec2	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003ec8	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003ed0	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4003ed5	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4003ed7	      0xe9f2eeffff	                           jmp 0x4002dce	      4224	cp-demangle.c	FUNCTION_71
0x4003edc	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003ee3	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4003eea	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003eef	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003ef2	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4003ef8	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4003f00	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4003f05	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4003f07	      0xe921f1ffff	                           jmp 0x400302d	      4224	cp-demangle.c	FUNCTION_71
0x4003f0c	    0x488b83280100	           mov rax, qword [rbx + 0x128] 	      5142	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x4003f13	          0x4489ee	                           mov esi, r13d	      5148	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	CALL_98
0x4003f16	          0x4889df	                            mov rdi, rbx	      5148	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	CALL_98
0x4003f19	      0x4c89642418	             mov qword [rsp + 0x18], r12	      5144	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x4003f1e	    0xc74424200000	               mov dword [rsp + 0x20], 0	      5145	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x4003f26	      0x4889442410	             mov qword [rsp + 0x10], rax	      5142	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x4003f2b	      0x488d442410	                   lea rax, [rsp + 0x10]	      5143	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x4003f30	    0x488983280100	            mov qword [rbx + 0x128], rax	      5143	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x4003f37	    0x488b83200100	           mov rax, qword [rbx + 0x120] 	      5146	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x4003f3e	      0x498b542408	                mov rdx, qword [r12 + 8]	      5148	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	CALL_98
0x4003f43	      0x4889442428	             mov qword [rsp + 0x28], rax	      5146	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x4003f48	      0xe8030e0000	                   call sym.d_print_comp	      5148	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	CALL_98
0x4003f4d	      0x448b542420	           mov r10d, dword [rsp + 0x20] 	      5153	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	IF_42
0x4003f52	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5151	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x4003f57	          0x4585d2	                         test r10d, r10d	      5153	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	IF_42
0x4003f5a	    0x488983280100	            mov qword [rbx + 0x128], rax	      5151	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41
0x4003f61	     0xf85f1cdffff	                           jne 0x4000d58	      5153	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_8	IF_41	IF_42
0x4003f67	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003f72	     0xf84640c0000	                            je 0x4004bdc	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4003f78	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4003f7f	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4003f83	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4003f8a	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4003f8e	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4003f95	      0xe9c8e4ffff	                           jmp 0x4002462	      4236	cp-demangle.c	FUNCTION_72
0x4003f9a	        0x488b5008	                mov rdx, qword [rax + 8]	      5074	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_6	IF_34
0x4003f9e	    0x488b83280100	           mov rax, qword [rbx + 0x128] 	      5088	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003fa5	      0x4c89642418	             mov qword [rsp + 0x18], r12	      5090	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003faa	    0xc74424200000	               mov dword [rsp + 0x20], 0	      5091	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003fb2	      0x4889442410	             mov qword [rsp + 0x10], rax	      5088	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003fb7	      0x488d442410	                   lea rax, [rsp + 0x10]	      5089	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003fbc	          0x4885d2	                           test rdx, rdx	      5094	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_35
0x4003fbf	    0x488983280100	            mov qword [rbx + 0x128], rax	      5089	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003fc6	    0x488b83200100	           mov rax, qword [rbx + 0x120] 	      5092	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003fcd	      0x4889442428	             mov qword [rsp + 0x28], rax	      5092	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4003fd2	     0xf85dfdaffff	                           jne 0x4001ab7	      5094	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_35
0x4003fd8	      0xe9d5daffff	                           jmp 0x4001ab2	      5094	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_35
0x4003fdd	           0xf1f00	                         nop dword [rax]	      5094	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_35
0x4003fe0	    0x8b973c010000	           mov edx, dword [rdi + 0x13c] 	      4853	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	CALL_39
0x4003fe6	            0x85d2	                           test edx, edx	      4351	cp-demangle.c	FUNCTION_77	IF_1
0x4003fe8	            0x791f	                           jns 0x4004009	      4351	cp-demangle.c	FUNCTION_77	IF_1
0x4003fea	      0xe9fbdeffff	                           jmp 0x4001eea	      4351	cp-demangle.c	FUNCTION_77	IF_1
0x4003fef	              0x90	                                     nop	      4351	cp-demangle.c	FUNCTION_77	IF_1
0x4003ff0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4357	cp-demangle.c	FUNCTION_77	FOR_1
0x4003ff4	          0x83ea01	                              sub edx, 1	      4363	cp-demangle.c	FUNCTION_77	FOR_1
0x4003ff7	          0x4885c0	                           test rax, rax	      4355	cp-demangle.c	FUNCTION_77	FOR_1
0x4003ffa	     0xf84b8cdffff	                            je 0x4000db8	      4355	cp-demangle.c	FUNCTION_77	FOR_1
0x4004000	          0x83382f	                   cmp dword [rax], 0x2f	      4359	cp-demangle.c	FUNCTION_77	FOR_1	IF_2
0x4004003	     0xf85afcdffff	                           jne 0x4000db8	      4359	cp-demangle.c	FUNCTION_77	FOR_1	IF_2
0x4004009	            0x85d2	                           test edx, edx	      4361	cp-demangle.c	FUNCTION_77	FOR_1	IF_3
0x400400b	            0x75e3	                           jne 0x4003ff0	      4361	cp-demangle.c	FUNCTION_77	FOR_1	IF_3
0x400400d	        0x488b4008	                mov rax, qword [rax + 8]	      4368	cp-demangle.c	FUNCTION_77
0x4004011	          0x4885c0	                           test rax, rax	      4855	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	IF_21
0x4004014	     0xf849ecdffff	                            je 0x4000db8	      4855	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	IF_21
0x400401a	      0xe9cbdeffff	                           jmp 0x4001eea	      4855	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_4	IF_21
0x400401f	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004026	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400402d	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004032	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004035	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400403b	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004043	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4004048	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x400404a	      0xe940d7ffff	                           jmp 0x400178f	      4224	cp-demangle.c	FUNCTION_71
0x400404f	    0x448b83580100	           mov r8d, dword [rbx + 0x158] 	      4224	cp-demangle.c	FUNCTION_71
0x4004056	    0x488bbf500100	           mov rdi, qword [rdi + 0x150] 	      4224	cp-demangle.c	FUNCTION_71
0x400405d	          0x4585c0	                           test r8d, r8d	      4547	cp-demangle.c	FUNCTION_84	FOR_1
0x4004060	            0x7e34	                           jle 0x4004096	      4547	cp-demangle.c	FUNCTION_84	FOR_1
0x4004062	          0x483b07	                    cmp rax, qword [rdi]	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4004065	     0xf8409010000	                            je 0x4004174	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x400406b	        0x418d48ff	                       lea ecx, [r8 - 1]	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x400406f	        0x488d5710	                   lea rdx, [rdi + 0x10]	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4004073	        0x4883c101	                              add rcx, 1	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4004077	        0x48c1e104	                              shl rcx, 4	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x400407b	          0x4801f9	                            add rcx, rdi	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x400407e	            0xeb11	                           jmp 0x4004091	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4004080	          0x4889d6	                            mov rsi, rdx	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4004083	        0x4883c210	                           add rdx, 0x10	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4004087	        0x483b42f0	             cmp rax, qword [rdx - 0x10]	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x400408b	     0xf84e0000000	                            je 0x4004171	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4004091	          0x4839ca	                            cmp rdx, rcx	      4547	cp-demangle.c	FUNCTION_84	FOR_1
0x4004094	            0x75ea	                           jne 0x4004080	      4547	cp-demangle.c	FUNCTION_84	FOR_1
0x4004096	    0x443b835c0100	           cmp r8d, dword [rbx + 0x15c] 	      4507	cp-demangle.c	FUNCTION_83	IF_1
0x400409d	     0xf8d0e0c0000	                           jge 0x4004cb1	      4507	cp-demangle.c	FUNCTION_83	IF_1
0x40040a3	          0x4963d0	                         movsxd rdx, r8d	      4512	cp-demangle.c	FUNCTION_83
0x40040a6	        0x4183c001	                              add r8d, 1	      4513	cp-demangle.c	FUNCTION_83
0x40040aa	        0x48c1e204	                              shl rdx, 4	      4512	cp-demangle.c	FUNCTION_83
0x40040ae	    0x448983580100	            mov dword [rbx + 0x158], r8d	      4513	cp-demangle.c	FUNCTION_83
0x40040b5	          0x4801fa	                            add rdx, rdi	      4512	cp-demangle.c	FUNCTION_83
0x40040b8	    0x488bbb200100	           mov rdi, qword [rbx + 0x120] 	      4518	cp-demangle.c	FUNCTION_83	FOR_1
0x40040bf	          0x488902	                    mov qword [rdx], rax	      4515	cp-demangle.c	FUNCTION_83
0x40040c2	        0x4883c208	                              add rdx, 8	      4516	cp-demangle.c	FUNCTION_83
0x40040c6	            0xeb3a	                           jmp 0x4004102	      4516	cp-demangle.c	FUNCTION_83
0x40040c8	    0x8bb368010000	           mov esi, dword [rbx + 0x168] 	      4522	cp-demangle.c	FUNCTION_83	FOR_1	IF_2
0x40040ce	    0x3bb36c010000	           cmp esi, dword [rbx + 0x16c] 	      4522	cp-demangle.c	FUNCTION_83	FOR_1	IF_2
0x40040d4	     0xf8dd70b0000	                           jge 0x4004cb1	      4522	cp-demangle.c	FUNCTION_83	FOR_1	IF_2
0x40040da	          0x4863ce	                         movsxd rcx, esi	      4527	cp-demangle.c	FUNCTION_83	FOR_1
0x40040dd	          0x83c601	                              add esi, 1	      4528	cp-demangle.c	FUNCTION_83	FOR_1
0x40040e0	        0x48c1e104	                              shl rcx, 4	      4527	cp-demangle.c	FUNCTION_83	FOR_1
0x40040e4	    0x48038b600100	            add rcx, qword [rbx + 0x160]	      4527	cp-demangle.c	FUNCTION_83	FOR_1
0x40040eb	    0x89b368010000	            mov dword [rbx + 0x168], esi	      4528	cp-demangle.c	FUNCTION_83	FOR_1
0x40040f1	        0x488b7708	                mov rsi, qword [rdi + 8]	      4530	cp-demangle.c	FUNCTION_83	FOR_1
0x40040f5	        0x48897108	                mov qword [rcx + 8], rsi	      4530	cp-demangle.c	FUNCTION_83	FOR_1
0x40040f9	          0x48890a	                    mov qword [rdx], rcx	      4531	cp-demangle.c	FUNCTION_83	FOR_1
0x40040fc	          0x4889ca	                            mov rdx, rcx	      4532	cp-demangle.c	FUNCTION_83	FOR_1
0x40040ff	          0x488b3f	                    mov rdi, qword [rdi]	      4518	cp-demangle.c	FUNCTION_83	FOR_1
0x4004102	          0x4885ff	                           test rdi, rdi	      4518	cp-demangle.c	FUNCTION_83	FOR_1
0x4004105	            0x75c1	                           jne 0x40040c8	      4518	cp-demangle.c	FUNCTION_83	FOR_1
0x4004107	    0x48c702000000	                      mov qword [rdx], 0	      4535	cp-demangle.c	FUNCTION_83
0x400410e	        0x488d7008	                      lea rsi, [rax + 8]	      4535	cp-demangle.c	FUNCTION_83
0x4004112	          0x4889df	                            mov rdi, rbx	      5054	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	CALL_88
0x4004115	          0x4531f6	                          xor r14d, r14d	      5055	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_30
0x4004118	      0xe833c4ffff	call sym.d_lookup_template_argument.isra.8	      5054	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	CALL_88
0x400411d	          0x4885c0	                           test rax, rax	      5055	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_30
0x4004120	     0xf8492ccffff	                            je 0x4000db8	      5055	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_30
0x4004126	            0x8b10	                    mov edx, dword [rax]	      5055	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_30
0x4004128	          0x83fa2f	                           cmp edx, 0x2f	      5055	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_30
0x400412b	     0xf8531d9ffff	                           jne 0x4001a62	      5055	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_30
0x4004131	    0x8b933c010000	           mov edx, dword [rbx + 0x13c] 	      5056	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	CALL_89
0x4004137	            0x85d2	                           test edx, edx	      4351	cp-demangle.c	FUNCTION_77	IF_1
0x4004139	            0x791e	                           jns 0x4004159	      4351	cp-demangle.c	FUNCTION_77	IF_1
0x400413b	      0xe960f2ffff	                           jmp 0x40033a0	      4351	cp-demangle.c	FUNCTION_77	IF_1
0x4004140	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4357	cp-demangle.c	FUNCTION_77	FOR_1
0x4004144	          0x83ea01	                              sub edx, 1	      4363	cp-demangle.c	FUNCTION_77	FOR_1
0x4004147	          0x4885c0	                           test rax, rax	      4355	cp-demangle.c	FUNCTION_77	FOR_1
0x400414a	     0xf84700b0000	                            je 0x4004cc0	      4355	cp-demangle.c	FUNCTION_77	FOR_1
0x4004150	          0x83382f	                   cmp dword [rax], 0x2f	      4359	cp-demangle.c	FUNCTION_77	FOR_1	IF_2
0x4004153	     0xf85670b0000	                           jne 0x4004cc0	      4359	cp-demangle.c	FUNCTION_77	FOR_1	IF_2
0x4004159	            0x85d2	                           test edx, edx	      4361	cp-demangle.c	FUNCTION_77	FOR_1	IF_3
0x400415b	            0x75e3	                           jne 0x4004140	      4361	cp-demangle.c	FUNCTION_77	FOR_1	IF_3
0x400415d	        0x488b4008	                mov rax, qword [rax + 8]	      4368	cp-demangle.c	FUNCTION_77
0x4004161	          0x4885c0	                           test rax, rax	      5058	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_31
0x4004164	     0xf84560b0000	                            je 0x4004cc0	      5058	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_31
0x400416a	            0x8b10	                    mov edx, dword [rax]	      5058	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_31
0x400416c	      0xe9f1d8ffff	                           jmp 0x4001a62	      5058	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_31
0x4004171	          0x4889f7	                            mov rdi, rsi	      4548	cp-demangle.c	FUNCTION_84	FOR_1	IF_1
0x4004174	    0x488bb3480100	           mov rsi, qword [rbx + 0x148] 	      5034	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2
0x400417b	          0x4885f6	                           test rsi, rsi	      5034	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2
0x400417e	     0xf84fdcbffff	                            je 0x4000d81	      5034	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2
0x4004184	          0x483b06	                    cmp rax, qword [rsi]	      5037	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x4004187	            0x7485	                            je 0x400410e	      5037	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x4004189	          0x4889f2	                            mov rdx, rsi	      5037	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x400418c	        0x488b5208	                mov rdx, qword [rdx + 8]	      5035	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2
0x4004190	          0x4885d2	                           test rdx, rdx	      5034	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2
0x4004193	     0xf84e8cbffff	                            je 0x4000d81	      5034	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2
0x4004199	          0x488b0a	                    mov rcx, qword [rdx]	      5037	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x400419c	          0x4839c8	                            cmp rax, rcx	      5037	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x400419f	     0xf8469ffffff	                            je 0x400410e	      5037	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x40041a5	          0x4839d6	                            cmp rsi, rdx	      5039	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x40041a8	            0x74e2	                            je 0x400418c	      5039	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x40041aa	          0x4939cc	                            cmp r12, rcx	      5039	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x40041ad	            0x75dd	                           jne 0x400418c	      5039	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x40041af	      0xe95affffff	                           jmp 0x400410e	      5039	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x40041b4	         0xf1f4000	                         nop dword [rax]	      5039	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	ELSE_5	FOR_2	IF_28
0x40041b8	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40041bf	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40041c6	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40041cb	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40041ce	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40041d4	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40041dc	          0xc60329	                    mov byte [rbx], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x40041df	    0xc68308010000	           mov byte [rbx + 0x108], 0x29 	      4236	cp-demangle.c	FUNCTION_72
0x40041e6	      0x41833c243d	                   cmp dword [r12], 0x3d	      5594	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_86
0x40041eb	    0x48c783000100	              mov qword [rbx + 0x100], 1	      4235	cp-demangle.c	FUNCTION_72
0x40041f6	     0xf8531d3ffff	                           jne 0x400152d	      5594	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_86
0x40041fc	      0xba01000000	                              mov edx, 1	      5594	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_86
0x4004201	      0xe9acfaffff	                           jmp 0x4003cb2	      5594	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_86
0x4004206	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400420d	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004214	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004219	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400421c	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004222	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400422a	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x400422f	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4004231	      0xe948ddffff	                           jmp 0x4001f7e	      4224	cp-demangle.c	FUNCTION_71
0x4004236	          0x4531ff	                          xor r15d, r15d	      4461	cp-demangle.c	FUNCTION_81	FOR_1
0x4004239	          0x4489fe	                           mov esi, r15d	      5380	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_137
0x400423c	          0x4889df	                            mov rdi, rbx	      5380	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_137
0x400423f	      0xe88cc8ffff	                   call sym.d_append_num	      5380	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64	CALL_137
0x4004244	      0xe90fcbffff	                           jmp 0x4000d58	      5381	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_10	IF_64
0x4004249	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004250	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004257	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400425c	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400425f	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004265	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400426d	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4004272	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4004274	      0xe94addffff	                           jmp 0x4001fc3	      4224	cp-demangle.c	FUNCTION_71
0x4004279	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004280	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004287	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400428c	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400428f	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004295	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400429d	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x40042a2	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x40042a4	      0xe92fd2ffff	                           jmp 0x40014d8	      4224	cp-demangle.c	FUNCTION_71
0x40042a9	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40042b0	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40042b7	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40042bc	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40042bf	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40042c5	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40042cd	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x40042d2	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x40042d4	      0xe9d4eeffff	                           jmp 0x40031ad	      4224	cp-demangle.c	FUNCTION_71
0x40042d9	           0xfb600	                   movzx eax, byte [rax]	      3240	cp-demangle.c	FUNCTION_50
0x40042dc	          0x8d489d	                   lea ecx, [rax - 0x63]	      3240	cp-demangle.c	FUNCTION_50
0x40042df	          0x80f901	                               cmp cl, 1	      3240	cp-demangle.c	FUNCTION_50
0x40042e2	            0x760b	                           jbe 0x40042ef	      3240	cp-demangle.c	FUNCTION_50
0x40042e4	          0x83e872	                           sub eax, 0x72	      3240	cp-demangle.c	FUNCTION_50
0x40042e7	            0x3c01	                               cmp al, 1	      3240	cp-demangle.c	FUNCTION_50
0x40042e9	     0xf876cc9ffff	                            ja 0x4000c5b	      3240	cp-demangle.c	FUNCTION_50
0x40042ef	            0x89ee	                            mov esi, ebp	      5416	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_151
0x40042f1	          0x4889df	                            mov rdi, rbx	      5416	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_151
0x40042f4	      0xe8971e0000	                call sym.d_print_expr_op	      5416	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_151
0x40042f9	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004300	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004306	     0xf841c070000	                            je 0x4004a28	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400430c	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4004310	            0x89ee	                            mov esi, ebp	      5418	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_153
0x4004312	          0x4889df	                            mov rdi, rbx	      5418	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_153
0x4004315	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400431c	        0xc604033c	              mov byte [rbx + rax], 0x3c	      4235	cp-demangle.c	FUNCTION_72
0x4004320	    0xc68308010000	           mov byte [rbx + 0x108], 0x3c 	      4236	cp-demangle.c	FUNCTION_72
0x4004327	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      5418	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_153
0x400432c	        0x488b5008	                mov rdx, qword [rax + 8]	      5418	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_153
0x4004330	      0xe81b0a0000	                   call sym.d_print_comp	      5418	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_153
0x4004335	      0xba02000000	                              mov edx, 2	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400433a	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400433f	          0x4889df	                            mov rdi, rbx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4004342	      0xe859beffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4004347	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      5420	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_155
0x400434c	            0x89ee	                            mov esi, ebp	      5420	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_155
0x400434e	          0x4889df	                            mov rdi, rbx	      5420	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_155
0x4004351	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5420	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_155
0x4004355	      0xe8f6090000	                   call sym.d_print_comp	      5420	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_69	CALL_155
0x400435a	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004361	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004367	     0xf8424050000	                            je 0x4004891	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400436d	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4004371	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4004378	        0xc6040329	              mov byte [rbx + rax], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x400437c	    0xc68308010000	           mov byte [rbx + 0x108], 0x29 	      4236	cp-demangle.c	FUNCTION_72
0x4004383	      0xe9d0c9ffff	                           jmp 0x4000d58	      4236	cp-demangle.c	FUNCTION_72
0x4004388	        0x488b7208	                mov rsi, qword [rdx + 8]	      4810	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_25
0x400438c	      0xbf00000000	                              mov edi, 0	      4810	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_25
0x4004391	      0xb906000000	                              mov ecx, 6	      4810	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_25
0x4004396	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4810	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_25
0x4004398	     0xf85b2dbffff	                           jne 0x4001f50	      4810	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_25
0x400439e	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      4815	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_26
0x40043a3	            0x89ee	                            mov esi, ebp	      4815	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_26
0x40043a5	          0x4889df	                            mov rdi, rbx	      4815	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_26
0x40043a8	      0xe8a3090000	                   call sym.d_print_comp	      4815	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_16	CALL_26
0x40043ad	      0xba02000000	                              mov edx, 2	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40043b2	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40043b7	          0x4889df	                            mov rdi, rbx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40043ba	      0xe8e1bdffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40043bf	      0xe911dcffff	                           jmp 0x4001fd5	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40043c4	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40043c9	      0xe9e4c8ffff	                           jmp 0x4000cb2	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40043ce	          0x83e59f	                     and ebp, 0xffffff9f	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40043d1	          0x4189ed	                           mov r13d, ebp	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40043d4	      0xe989e0ffff	                           jmp 0x4002462	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40043d9	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40043e0	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40043e7	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40043ec	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40043ef	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40043f5	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40043fd	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4004402	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4004404	      0xe996ddffff	                           jmp 0x400219f	      4224	cp-demangle.c	FUNCTION_71
0x4004409	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004410	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004417	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400441c	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400441f	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004425	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400442d	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4004432	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4004434	      0xe986d4ffff	                           jmp 0x40018bf	      4224	cp-demangle.c	FUNCTION_71
0x4004439	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      5538	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83
0x400443e	            0x8b32	                    mov esi, dword [rdx]	      5538	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83
0x4004440	            0x85f6	                           test esi, esi	      5538	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83
0x4004442	     0xf8579d0ffff	                           jne 0x40014c1	      5538	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83
0x4004448	          0x83f83d	                           cmp eax, 0x3d	      5540	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	IF_84
0x400444b	     0xf841f070000	                            je 0x4004b70	      5540	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	IF_84
0x4004451	            0x89ee	                            mov esi, ebp	      5542	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	CALL_187
0x4004453	          0x4889df	                            mov rdi, rbx	      5542	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	CALL_187
0x4004456	        0x4183ed02	                             sub r13d, 2	      5543	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3
0x400445a	      0xe8f1080000	                   call sym.d_print_comp	      5542	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	CALL_187
0x400445f	        0x4183fd04	                             cmp r13d, 4	      5543	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3
0x4004463	     0xf87efc8ffff	                            ja 0x4000d58	      5543	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3
0x4004469	    0x42ff24ed0000	                       jmp qword [r13*8]	      5543	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_82	SWITCH_2	IF_83	SWITCH_3
0x4004471	      0xba02000000	                              mov edx, 2	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4004476	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400447b	          0x4889df	                            mov rdi, rbx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400447e	      0xe81dbdffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4004483	      0xe9d0c8ffff	                           jmp 0x4000d58	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4004488	      0xba02000000	                              mov edx, 2	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400448d	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4004492	          0x4889df	                            mov rdi, rbx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4004495	      0xe806bdffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400449a	      0xe9b9c8ffff	                           jmp 0x4000d58	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400449f	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40044aa	     0xf8432080000	                            je 0x4004ce2	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40044b0	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40044b7	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40044bb	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40044c2	        0xc604036c	              mov byte [rbx + rax], 0x6c	      4235	cp-demangle.c	FUNCTION_72
0x40044c6	    0xc68308010000	           mov byte [rbx + 0x108], 0x6c 	      4236	cp-demangle.c	FUNCTION_72
0x40044cd	      0xe986c8ffff	                           jmp 0x4000d58	      4236	cp-demangle.c	FUNCTION_72
0x40044d2	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40044dd	     0xf8433080000	                            je 0x4004d16	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40044e3	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40044ea	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40044ee	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40044f5	        0xc6040375	              mov byte [rbx + rax], 0x75	      4235	cp-demangle.c	FUNCTION_72
0x40044f9	    0xc68308010000	           mov byte [rbx + 0x108], 0x75 	      4236	cp-demangle.c	FUNCTION_72
0x4004500	      0xe953c8ffff	                           jmp 0x4000d58	      4236	cp-demangle.c	FUNCTION_72
0x4004505	      0xba03000000	                              mov edx, 3	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400450a	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400450f	          0x4889df	                            mov rdi, rbx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4004512	      0xe889bcffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4004517	      0xe93cc8ffff	                           jmp 0x4000d58	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400451c	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004523	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400452a	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400452f	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004532	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004538	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004540	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4004542	      0xe9e8f6ffff	                           jmp 0x4003c2f	      4224	cp-demangle.c	FUNCTION_71
0x4004547	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004552	     0xf8450060000	                            je 0x4004ba8	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004558	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x400455f	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4004563	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400456a	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x400456e	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4004575	      0xe984f2ffff	                           jmp 0x40037fe	      4236	cp-demangle.c	FUNCTION_72
0x400457a	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004585	     0xf8430050000	                            je 0x4004abb	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400458b	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4004592	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4004596	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400459d	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x40045a1	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x40045a8	      0xe908f2ffff	                           jmp 0x40037b5	      4236	cp-demangle.c	FUNCTION_72
0x40045ad	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      5218	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_102
0x40045b2	            0x89ee	                            mov esi, ebp	      5218	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_102
0x40045b4	          0x4889df	                            mov rdi, rbx	      5218	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_102
0x40045b7	      0xe894070000	                   call sym.d_print_comp	      5218	cp-demangle.c	FUNCTION_86	SWITCH_1	CALL_102
0x40045bc	      0x837c244000	               cmp dword [rsp + 0x40], 0	      5222	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_47
0x40045c1	    0x4c89b3280100	            mov qword [rbx + 0x128], r14	      5220	cp-demangle.c	FUNCTION_86	SWITCH_1
0x40045c8	     0xf84dadfffff	                            je 0x40025a8	      5222	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_47
0x40045ce	      0xe985c7ffff	                           jmp 0x4000d58	      5222	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_47
0x40045d3	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40045da	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40045e1	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40045e6	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40045e9	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40045ef	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40045f7	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x40045f9	      0xe926e5ffff	                           jmp 0x4002b24	      4224	cp-demangle.c	FUNCTION_71
0x40045fe	    0x41bc5f000000	                          mov r12d, 0x5f	      5775	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5
0x4004604	      0xe957ecffff	                           jmp 0x4003260	      5775	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5
0x4004609	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004610	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004617	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400461c	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400461f	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004625	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400462d	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x400462f	      0xe937f5ffff	                           jmp 0x4003b6b	      4224	cp-demangle.c	FUNCTION_71
0x4004634	        0x80780178	                cmp byte [rax + 1], 0x78	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x4004638	     0xf84fa020000	                            je 0x4004938	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x400463e	            0x89ee	                            mov esi, ebp	      5460	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_168
0x4004640	          0x4889df	                            mov rdi, rbx	      5460	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_168
0x4004643	      0xe8481b0000	                call sym.d_print_expr_op	      5460	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_168
0x4004648	      0xe9a8c6ffff	                           jmp 0x4000cf5	      5460	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_15	CALL_168
0x400464d	      0x498b542408	                mov rdx, qword [r12 + 8]	      5638	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_89	CALL_212
0x4004652	            0x89ee	                            mov esi, ebp	      5638	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_89	CALL_212
0x4004654	          0x4889df	                            mov rdi, rbx	      5638	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_89	CALL_212
0x4004657	      0xe8e41b0000	                call sym.d_print_subexpr	      5638	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_89	CALL_212
0x400465c	      0xba03000000	                              mov edx, 3	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4004661	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4004666	          0x4889df	                            mov rdi, rbx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4004669	      0xe832bbffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x400466e	      0xe9e5c6ffff	                           jmp 0x4000d58	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4004673	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400467a	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004681	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004686	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004689	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400468f	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004697	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4004699	      0xe997f4ffff	                           jmp 0x4003b35	      4224	cp-demangle.c	FUNCTION_71
0x400469e	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4768	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_14
0x40046a3	    0x488983200100	            mov qword [rbx + 0x120], rax	      4768	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_14
0x40046aa	      0xe9e6d9ffff	                           jmp 0x4002095	      4768	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_14
0x40046af	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40046b6	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40046bd	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40046c2	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40046c5	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40046cb	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40046d3	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x40046d5	      0xe9e4d9ffff	                           jmp 0x40020be	      4224	cp-demangle.c	FUNCTION_71
0x40046da	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40046e1	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40046e8	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40046ed	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40046f0	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40046f6	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40046fe	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4004700	      0xe90cf1ffff	                           jmp 0x4003811	      4224	cp-demangle.c	FUNCTION_71
0x4004705	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400470c	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004713	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004718	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400471b	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004721	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004729	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x400472b	      0xe998f0ffff	                           jmp 0x40037c8	      4224	cp-demangle.c	FUNCTION_71
0x4004730	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004737	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400473e	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004743	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004746	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400474c	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004754	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4004756	      0xe968ceffff	                           jmp 0x40015c3	      4224	cp-demangle.c	FUNCTION_71
0x400475b	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004762	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004769	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400476e	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004774	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400477c	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x400477e	      0xe909ceffff	                           jmp 0x400158c	      4224	cp-demangle.c	FUNCTION_71
0x4004783	      0xe800000000	                          call 0x4004788	      5708	cp-demangle.c	FUNCTION_86
0x4004788	        0x488b5008	                mov rdx, qword [rax + 8]	      5432	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x400478c	        0x837a1001	               cmp dword [rdx + 0x10], 1	      5432	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x4004790	     0xf85eac4ffff	                           jne 0x4000c80	      5432	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x4004796	        0x488b5208	                mov rdx, qword [rdx + 8]	      5433	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x400479a	          0x803a3e	                    cmp byte [rdx], 0x3e	      5433	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x400479d	     0xf85ddc4ffff	                           jne 0x4000c80	      5433	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_71
0x40047a3	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40047ae	            0x752f	                           jne 0x40047df	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40047b0	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40047b7	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40047be	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40047c3	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40047c6	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40047cc	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40047d4	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x40047df	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40047e6	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40047ea	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40047f1	        0xc6040328	              mov byte [rbx + rax], 0x28	      4235	cp-demangle.c	FUNCTION_72
0x40047f5	    0xc68308010000	           mov byte [rbx + 0x108], 0x28 	      4236	cp-demangle.c	FUNCTION_72
0x40047fc	      0x498b442408	                mov rax, qword [r12 + 8]	      4236	cp-demangle.c	FUNCTION_72
0x4004801	      0xe97ac4ffff	                           jmp 0x4000c80	      4236	cp-demangle.c	FUNCTION_72
0x4004806	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400480d	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004814	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004819	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400481c	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004822	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400482a	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x400482c	      0xe981f4ffff	                           jmp 0x4003cb2	      4224	cp-demangle.c	FUNCTION_71
0x4004831	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004838	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400483f	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004844	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004847	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400484d	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004855	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4004857	      0xe99bf3ffff	                           jmp 0x4003bf7	      4224	cp-demangle.c	FUNCTION_71
0x400485c	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004863	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400486a	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400486f	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004872	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004878	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004880	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4004882	      0xe942f3ffff	                           jmp 0x4003bc9	      4224	cp-demangle.c	FUNCTION_71
0x4004887	            0x31d2	                            xor edx, edx	      4987	cp-demangle.c	FUNCTION_86	SWITCH_1	FOR_1
0x4004889	          0x4531f6	                          xor r14d, r14d	      4633	cp-demangle.c	FUNCTION_86
0x400488c	      0xe9f7d1ffff	                           jmp 0x4001a88	      4633	cp-demangle.c	FUNCTION_86
0x4004891	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004898	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400489f	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40048a4	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40048a7	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40048ad	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40048b5	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x40048b7	      0xe9b1faffff	                           jmp 0x400436d	      4224	cp-demangle.c	FUNCTION_71
0x40048bc	      0xba04000000	                              mov edx, 4	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40048c1	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40048c6	          0x4889df	                            mov rdi, rbx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40048c9	      0xe8d2b8ffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x40048ce	      0x49837d0800	                  cmp qword [r13 + 8], 0	      5502	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_80
0x40048d3	            0x743b	                            je 0x4004910	      5502	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_80
0x40048d5	          0x4c89ea	                            mov rdx, r13	      5504	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_80	CALL_181
0x40048d8	            0x89ee	                            mov esi, ebp	      5504	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_80	CALL_181
0x40048da	          0x4889df	                            mov rdi, rbx	      5504	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_80	CALL_181
0x40048dd	      0xe85e190000	                call sym.d_print_subexpr	      5504	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_80	CALL_181
0x40048e2	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40048ed	     0xf848a030000	                            je 0x4004c7d	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40048f3	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x40048fa	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x40048fe	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4004905	        0xc6040320	              mov byte [rbx + rax], 0x20	      4235	cp-demangle.c	FUNCTION_72
0x4004909	    0xc68308010000	           mov byte [rbx + 0x108], 0x20 	      4236	cp-demangle.c	FUNCTION_72
0x4004910	          0x4c89f2	                            mov rdx, r14	      5507	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_183
0x4004913	            0x89ee	                            mov esi, ebp	      5507	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_183
0x4004915	          0x4889df	                            mov rdi, rbx	      5507	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_183
0x4004918	      0xe833040000	                   call sym.d_print_comp	      5507	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_183
0x400491d	          0x4d85e4	                           test r12, r12	      5508	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_81
0x4004920	     0xf8432c4ffff	                            je 0x4000d58	      5508	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	IF_81
0x4004926	          0x4c89e2	                            mov rdx, r12	      5509	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_184
0x4004929	            0x89ee	                            mov esi, ebp	      5509	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_184
0x400492b	          0x4889df	                            mov rdi, rbx	      5509	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_184
0x400492e	      0xe80d190000	                call sym.d_print_subexpr	      5509	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_184
0x4004933	      0xe920c4ffff	                           jmp 0x4000d58	      5509	cp-demangle.c	FUNCTION_86	SWITCH_1	ELSE_16	CALL_184
0x4004938	        0x80780200	                   cmp byte [rax + 2], 0	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x400493c	     0xf85fcfcffff	                           jne 0x400463e	      5451	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_163
0x4004942	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400494d	     0xf8434010000	                            je 0x4004a87	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004953	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x400495a	            0x89ee	                            mov esi, ebp	      5454	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_165
0x400495c	          0x4889df	                            mov rdi, rbx	      5454	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_165
0x400495f	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4004963	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400496a	        0xc604035b	              mov byte [rbx + rax], 0x5b	      4235	cp-demangle.c	FUNCTION_72
0x400496e	    0xc68308010000	           mov byte [rbx + 0x108], 0x5b 	      4236	cp-demangle.c	FUNCTION_72
0x4004975	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      5454	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_165
0x400497a	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5454	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_165
0x400497e	      0xe8cd030000	                   call sym.d_print_comp	      5454	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_74	CALL_165
0x4004983	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400498e	     0xf84bf000000	                            je 0x4004a53	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004994	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x400499b	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x400499f	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40049a6	        0xc604035d	              mov byte [rbx + rax], 0x5d	      4235	cp-demangle.c	FUNCTION_72
0x40049aa	    0xc68308010000	           mov byte [rbx + 0x108], 0x5d 	      4236	cp-demangle.c	FUNCTION_72
0x40049b1	      0xe952c3ffff	                           jmp 0x4000d08	      4236	cp-demangle.c	FUNCTION_72
0x40049b6	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40049bd	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40049c4	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40049c9	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40049cc	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40049d2	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40049da	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x40049dc	      0xe9b9f1ffff	                           jmp 0x4003b9a	      4224	cp-demangle.c	FUNCTION_71
0x40049e1	      0x498b542408	                mov rdx, qword [r12 + 8]	      5363	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_129
0x40049e6	            0x89ee	                            mov esi, ebp	      5363	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_129
0x40049e8	          0x4889df	                            mov rdi, rbx	      5363	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_129
0x40049eb	      0xe850180000	                call sym.d_print_subexpr	      5363	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_129
0x40049f0	          0x4c89f2	                            mov rdx, r14	      5364	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_130
0x40049f3	            0x89ee	                            mov esi, ebp	      5364	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_130
0x40049f5	          0x4889df	                            mov rdi, rbx	      5364	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_130
0x40049f8	      0xe893170000	                call sym.d_print_expr_op	      5364	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62	CALL_130
0x40049fd	      0xe956c3ffff	                           jmp 0x4000d58	      5365	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_59	IF_62
0x4004a02	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      5445	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	IF_73
0x4004a06	          0x833a29	                   cmp dword [rdx], 0x29	      5445	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	IF_73
0x4004a09	            0x740a	                            je 0x4004a15	      5445	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	IF_73
0x4004a0b	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4004a15	        0x488b5008	                mov rdx, qword [rax + 8]	      5447	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_161
0x4004a19	            0x89ee	                            mov esi, ebp	      5447	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_161
0x4004a1b	          0x4889df	                            mov rdi, rbx	      5447	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_161
0x4004a1e	      0xe81d180000	                call sym.d_print_subexpr	      5447	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72	CALL_161
0x4004a23	      0xe998c2ffff	                           jmp 0x4000cc0	      5438	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_72
0x4004a28	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004a2f	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004a36	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004a3b	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004a3e	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004a44	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004a4c	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4004a4e	      0xe9b9f8ffff	                           jmp 0x400430c	      4224	cp-demangle.c	FUNCTION_71
0x4004a53	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004a5a	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004a61	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004a66	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004a69	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004a6f	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4004a7a	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004a82	      0xe90dffffff	                           jmp 0x4004994	      4224	cp-demangle.c	FUNCTION_71
0x4004a87	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004a8e	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004a95	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004a9a	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004a9d	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004aa3	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4004aae	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004ab6	      0xe998feffff	                           jmp 0x4004953	      4224	cp-demangle.c	FUNCTION_71
0x4004abb	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004ac2	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004ac9	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004ace	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004ad1	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004ad7	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4004ae2	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004aea	      0xe99cfaffff	                           jmp 0x400458b	      4224	cp-demangle.c	FUNCTION_71
0x4004aef	          0x4d39f5	                            cmp r13, r14	      5775	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5
0x4004af2	     0xf8606fbffff	                           jbe 0x40045fe	      5775	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5
0x4004af8	    0x4881f9ff0000	                           cmp rcx, 0xff	      5775	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5
0x4004aff	     0xf87f9faffff	                            ja 0x40045fe	      5775	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5
0x4004b05	            0x3c5f	                            cmp al, 0x5f	      5775	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5
0x4004b07	     0xf85f1faffff	                           jne 0x40045fe	      5775	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5
0x4004b0d	    0x4881bb000100	          cmp qword [rbx + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004b18	            0x89cd	                            mov ebp, ecx	      5777	cp-demangle.c	FUNCTION_88	FOR_1	IF_1	ELSE_3	IF_5	CALL_1
0x4004b1a	            0x752f	                           jne 0x4004b4b	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004b1c	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004b23	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004b2a	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004b2f	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004b32	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004b38	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004b40	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4004b4b	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4004b52	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4004b56	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4004b5d	        0x40882c03	               mov byte [rbx + rax], bpl	      4235	cp-demangle.c	FUNCTION_72
0x4004b61	    0x4088ab080100	             mov byte [rbx + 0x108], bpl	      4236	cp-demangle.c	FUNCTION_72
0x4004b68	          0x4c89f5	                            mov rbp, r14	      4236	cp-demangle.c	FUNCTION_72
0x4004b6b	      0xe919e7ffff	                           jmp 0x4003289	      4236	cp-demangle.c	FUNCTION_72
0x4004b70	    0x4881bf000100	          cmp qword [rdi + 0x100], 0xff 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004b7b	     0xf84cb000000	                            je 0x4004c4c	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4004b81	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4235	cp-demangle.c	FUNCTION_72
0x4004b88	        0x488d5001	                      lea rdx, [rax + 1]	      4235	cp-demangle.c	FUNCTION_72
0x4004b8c	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x4004b93	        0xc604032d	              mov byte [rbx + rax], 0x2d	      4235	cp-demangle.c	FUNCTION_72
0x4004b97	    0xc68308010000	           mov byte [rbx + 0x108], 0x2d 	      4236	cp-demangle.c	FUNCTION_72
0x4004b9e	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      4236	cp-demangle.c	FUNCTION_72
0x4004ba3	      0xe9a9f8ffff	                           jmp 0x4004451	      4236	cp-demangle.c	FUNCTION_72
0x4004ba8	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004baf	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004bb6	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004bbb	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004bbe	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004bc4	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4004bcf	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004bd7	      0xe97cf9ffff	                           jmp 0x4004558	      4224	cp-demangle.c	FUNCTION_71
0x4004bdc	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004be3	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004bea	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004bef	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004bf2	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004bf8	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4004c03	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004c0b	      0xe968f3ffff	                           jmp 0x4003f78	      4224	cp-demangle.c	FUNCTION_71
0x4004c10	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004c17	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004c1e	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004c23	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004c26	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004c2c	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4004c37	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004c3f	      0xe9f2c0ffff	                           jmp 0x4000d36	      4224	cp-demangle.c	FUNCTION_71
0x4004c44	          0x4531ed	                          xor r13d, r13d	      5345	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4004c47	      0xe96feeffff	                           jmp 0x4003abb	      5345	cp-demangle.c	FUNCTION_86	SWITCH_1
0x4004c4c	    0xc687ff000000	                mov byte [rdi + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004c53	    0x488b97180100	           mov rdx, qword [rdi + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004c5a	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004c5f	    0xff9710010000	                call qword [rdi + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004c65	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4004c70	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004c78	      0xe904ffffff	                           jmp 0x4004b81	      4224	cp-demangle.c	FUNCTION_71
0x4004c7d	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004c84	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004c8b	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004c90	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004c93	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004c99	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4004ca4	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004cac	      0xe942fcffff	                           jmp 0x40048f3	      4224	cp-demangle.c	FUNCTION_71
0x4004cb1	    0xc78330010000	              mov dword [rbx + 0x130], 1	      4207	cp-demangle.c	FUNCTION_69
0x4004cbb	      0xe998c0ffff	                           jmp 0x4000d58	      4207	cp-demangle.c	FUNCTION_69
0x4004cc0	          0x4585f6	                         test r14d, r14d	      5060	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_31	IF_32
0x4004cc3	     0xf85e5c0ffff	                           jne 0x4000dae	      5060	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_31	IF_32
0x4004cc9	      0xe9eac0ffff	                           jmp 0x4000db8	      5060	cp-demangle.c	FUNCTION_86	SWITCH_1	IF_25	IF_31	IF_32
0x4004cce	      0xba05000000	                              mov edx, 5	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4004cd3	      0xbe00000000	                              mov esi, 0	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4004cd8	      0xe8c3b4ffff	                call sym.d_append_buffer	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4004cdd	      0xe976c0ffff	                           jmp 0x4000d58	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4004ce2	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004ce9	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004cf0	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004cf5	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004cf8	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004cfe	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4004d09	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004d11	      0xe99af7ffff	                           jmp 0x40044b0	      4224	cp-demangle.c	FUNCTION_71
0x4004d16	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4004d1d	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004d24	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004d29	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004d2c	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4004d32	    0x48c783000100	              mov qword [rbx + 0x100], 0	      4223	cp-demangle.c	FUNCTION_71
0x4004d3d	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4004d45	      0xe999f7ffff	                           jmp 0x40044e3	      4224	cp-demangle.c	FUNCTION_71
d_find_pack	CALL,6:FOR,0:IF,3:ELSE,0:WHILE,0:DO,0:functions,0:SWITCH,1	40
0x40005c0	          0x4885f6	                           test rsi, rsi	      4396	cp-demangle.c	FUNCTION_79	IF_1
0x40005c3	            0x7468	                            je 0x400062d	      4396	cp-demangle.c	FUNCTION_79	IF_1
0x40005c5	              0x55	                                push rbp	      4394	cp-demangle.c	FUNCTION_79
0x40005c6	              0x53	                                push rbx	      4394	cp-demangle.c	FUNCTION_79
0x40005c7	          0x4889fd	                            mov rbp, rdi	      4394	cp-demangle.c	FUNCTION_79
0x40005ca	          0x4889f3	                            mov rbx, rsi	      4394	cp-demangle.c	FUNCTION_79
0x40005cd	        0x4883ec08	                              sub rsp, 8	      4394	cp-demangle.c	FUNCTION_79
0x40005d1	          0x833b4b	                   cmp dword [rbx], 0x4b	      4399	cp-demangle.c	FUNCTION_79	SWITCH_1
0x40005d4	            0x770a	                            ja 0x40005e0	      4399	cp-demangle.c	FUNCTION_79	SWITCH_1
0x40005d6	            0x8b03	                    mov eax, dword [rbx]	      4399	cp-demangle.c	FUNCTION_79	SWITCH_1
0x40005d8	    0xff24c5000000	                       jmp qword [rax*8]	      4399	cp-demangle.c	FUNCTION_79	SWITCH_1
0x40005df	              0x90	                                     nop	      4399	cp-demangle.c	FUNCTION_79	SWITCH_1
0x40005e0	        0x488b7308	                mov rsi, qword [rbx + 8]	      4432	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_5
0x40005e4	          0x4889ef	                            mov rdi, rbp	      4432	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_5
0x40005e7	      0xe8d4ffffff	                    call sym.d_find_pack	      4432	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_5
0x40005ec	          0x4885c0	                           test rax, rax	      4433	cp-demangle.c	FUNCTION_79	SWITCH_1	IF_3
0x40005ef	            0x7511	                           jne 0x4000602	      4433	cp-demangle.c	FUNCTION_79	SWITCH_1	IF_3
0x40005f1	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      4435	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_6
0x40005f5	          0x4885db	                           test rbx, rbx	      4396	cp-demangle.c	FUNCTION_79	IF_1
0x40005f8	            0x75d7	                           jne 0x40005d1	      4396	cp-demangle.c	FUNCTION_79	IF_1
0x40005fa	    0x660f1f440000	                    nop word [rax + rax]	      4396	cp-demangle.c	FUNCTION_79	IF_1
0x4000600	            0x31c0	                            xor eax, eax	      4408	cp-demangle.c	FUNCTION_79	SWITCH_1
0x4000602	        0x4883c408	                              add rsp, 8	      4437	cp-demangle.c	FUNCTION_79
0x4000606	              0x5b	                                 pop rbx	      4437	cp-demangle.c	FUNCTION_79
0x4000607	              0x5d	                                 pop rbp	      4437	cp-demangle.c	FUNCTION_79
0x4000608	              0xc3	                                     ret	      4437	cp-demangle.c	FUNCTION_79
0x4000609	     0xf1f80000000	                         nop dword [rax]	      4437	cp-demangle.c	FUNCTION_79
0x4000610	        0x488d7308	                      lea rsi, [rbx + 8]	      4437	cp-demangle.c	FUNCTION_79
0x4000614	          0x4889ef	                            mov rdi, rbp	      4402	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_1
0x4000617	      0xe834ffffff	call sym.d_lookup_template_argument.isra.8	      4402	cp-demangle.c	FUNCTION_79	SWITCH_1	CALL_1
0x400061c	          0x4885c0	                           test rax, rax	      4403	cp-demangle.c	FUNCTION_79	SWITCH_1	IF_2
0x400061f	            0x74df	                            je 0x4000600	      4403	cp-demangle.c	FUNCTION_79	SWITCH_1	IF_2
0x4000621	          0x83382f	                   cmp dword [rax], 0x2f	      4403	cp-demangle.c	FUNCTION_79	SWITCH_1	IF_2
0x4000624	            0x75da	                           jne 0x4000600	      4403	cp-demangle.c	FUNCTION_79	SWITCH_1	IF_2
0x4000626	        0x4883c408	                              add rsp, 8	      4437	cp-demangle.c	FUNCTION_79
0x400062a	              0x5b	                                 pop rbx	      4437	cp-demangle.c	FUNCTION_79
0x400062b	              0x5d	                                 pop rbp	      4437	cp-demangle.c	FUNCTION_79
0x400062c	              0xc3	                                     ret	      4437	cp-demangle.c	FUNCTION_79
0x400062d	            0x31c0	                            xor eax, eax	      4397	cp-demangle.c	FUNCTION_79	IF_1
0x400062f	              0xc3	                                     ret	      4437	cp-demangle.c	FUNCTION_79
d_name	CALL,19:FOR,0:IF,6:ELSE,2:WHILE,0:DO,0:functions,0:SWITCH,1	364
0x4008ca0	            0x4157	                                push r15	      1401	cp-demangle.c	FUNCTION_20
0x4008ca2	            0x4156	                                push r14	      1401	cp-demangle.c	FUNCTION_20
0x4008ca4	          0x4989fe	                            mov r14, rdi	      1401	cp-demangle.c	FUNCTION_20
0x4008ca7	            0x4155	                                push r13	      1401	cp-demangle.c	FUNCTION_20
0x4008ca9	            0x4154	                                push r12	      1401	cp-demangle.c	FUNCTION_20
0x4008cab	              0x55	                                push rbp	      1401	cp-demangle.c	FUNCTION_20
0x4008cac	              0x53	                                push rbx	      1401	cp-demangle.c	FUNCTION_20
0x4008cad	        0x4883ec28	                           sub rsp, 0x28	      1401	cp-demangle.c	FUNCTION_20
0x4008cb1	    0x64488b042528	                mov rax, qword fs:[0x28]	      1401	cp-demangle.c	FUNCTION_20
0x4008cba	      0x4889442418	             mov qword [rsp + 0x18], rax	      1401	cp-demangle.c	FUNCTION_20
0x4008cbf	            0x31c0	                            xor eax, eax	      1401	cp-demangle.c	FUNCTION_20
0x4008cc1	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      1402	cp-demangle.c	FUNCTION_20	CALL_1
0x4008cc5	           0xfb610	                   movzx edx, byte [rax]	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4008cc8	          0x80fa53	                            cmp dl, 0x53	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4008ccb	     0xf84bf010000	                            je 0x4008e90	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4008cd1	            0x7e6d	                           jle 0x4008d40	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4008cd3	          0x80fa55	                            cmp dl, 0x55	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4008cd6	            0x7438	                            je 0x4008d10	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4008cd8	          0x80fa5a	                            cmp dl, 0x5a	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4008cdb	     0xf853f010000	                           jne 0x4008e20	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4008ce1	        0x4883c001	                              add rax, 1	      3587	cp-demangle.c	FUNCTION_54	IF_1	CALL_1
0x4008ce5	            0x31f6	                            xor esi, esi	      3590	cp-demangle.c	FUNCTION_54	CALL_2
0x4008ce7	        0x48894718	             mov qword [rdi + 0x18], rax	      3587	cp-demangle.c	FUNCTION_54	IF_1	CALL_1
0x4008ceb	      0xe830050000	                     call sym.d_encoding	      3590	cp-demangle.c	FUNCTION_54	CALL_2
0x4008cf0	          0x4885c0	                           test rax, rax	      3591	cp-demangle.c	FUNCTION_54	IF_2
0x4008cf3	          0x4889c5	                            mov rbp, rax	      3590	cp-demangle.c	FUNCTION_54	CALL_2
0x4008cf6	            0x740d	                            je 0x4008d05	      3591	cp-demangle.c	FUNCTION_54	IF_2
0x4008cf8	        0x498b4618	            mov rax, qword [r14 + 0x18] 	      3594	cp-demangle.c	FUNCTION_54	IF_3	CALL_3
0x4008cfc	          0x803845	                    cmp byte [rax], 0x45	      3594	cp-demangle.c	FUNCTION_54	IF_3	CALL_3
0x4008cff	     0xf845b020000	                            je 0x4008f60	      3594	cp-demangle.c	FUNCTION_54	IF_3	CALL_3
0x4008d05	            0x31c0	                            xor eax, eax	      1500	cp-demangle.c	FUNCTION_21	IF_3
0x4008d07	            0xeb0f	                           jmp 0x4008d18	      1500	cp-demangle.c	FUNCTION_21	IF_3
0x4008d09	     0xf1f80000000	                         nop dword [rax]	      1500	cp-demangle.c	FUNCTION_21	IF_3
0x4008d10	      0xe83be7ffff	             call sym.d_unqualified_name	      1414	cp-demangle.c	FUNCTION_20	SWITCH_1	CALL_4
0x4008d15	           0xf1f00	                         nop dword [rax]	      1414	cp-demangle.c	FUNCTION_20	SWITCH_1	CALL_4
0x4008d18	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1474	cp-demangle.c	FUNCTION_20
0x4008d1d	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1474	cp-demangle.c	FUNCTION_20
0x4008d26	     0xf8595040000	                           jne 0x40091c1	      1474	cp-demangle.c	FUNCTION_20
0x4008d2c	        0x4883c428	                           add rsp, 0x28	      1474	cp-demangle.c	FUNCTION_20
0x4008d30	              0x5b	                                 pop rbx	      1474	cp-demangle.c	FUNCTION_20
0x4008d31	              0x5d	                                 pop rbp	      1474	cp-demangle.c	FUNCTION_20
0x4008d32	            0x415c	                                 pop r12	      1474	cp-demangle.c	FUNCTION_20
0x4008d34	            0x415d	                                 pop r13	      1474	cp-demangle.c	FUNCTION_20
0x4008d36	            0x415e	                                 pop r14	      1474	cp-demangle.c	FUNCTION_20
0x4008d38	            0x415f	                                 pop r15	      1474	cp-demangle.c	FUNCTION_20
0x4008d3a	              0xc3	                                     ret	      1474	cp-demangle.c	FUNCTION_20
0x4008d3b	       0xf1f440000	                   nop dword [rax + rax]	      1474	cp-demangle.c	FUNCTION_20
0x4008d40	          0x80fa4e	                            cmp dl, 0x4e	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4008d43	     0xf85d7000000	                           jne 0x4008e20	      1405	cp-demangle.c	FUNCTION_20	SWITCH_1
0x4008d49	        0x4883c001	                              add rax, 1	      1487	cp-demangle.c	FUNCTION_21	IF_1	CALL_1
0x4008d4d	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1490	cp-demangle.c	FUNCTION_21	CALL_2
0x4008d52	      0xba01000000	                              mov edx, 1	      1490	cp-demangle.c	FUNCTION_21	CALL_2
0x4008d57	        0x48894718	             mov qword [rdi + 0x18], rax	      1487	cp-demangle.c	FUNCTION_21	IF_1	CALL_1
0x4008d5b	      0xe870fbffff	                call sym.d_cv_qualifiers	      1490	cp-demangle.c	FUNCTION_21	CALL_2
0x4008d60	          0x4885c0	                           test rax, rax	      1491	cp-demangle.c	FUNCTION_21	IF_2
0x4008d63	          0x4989c4	                            mov r12, rax	      1490	cp-demangle.c	FUNCTION_21	CALL_2
0x4008d66	            0x749d	                            je 0x4008d05	      1491	cp-demangle.c	FUNCTION_21	IF_2
0x4008d68	            0x31f6	                            xor esi, esi	      1496	cp-demangle.c	FUNCTION_21	CALL_3
0x4008d6a	          0x4c89f7	                            mov rdi, r14	      1496	cp-demangle.c	FUNCTION_21	CALL_3
0x4008d6d	          0x4531ff	                          xor r15d, r15d	      1529	cp-demangle.c	FUNCTION_22
0x4008d70	      0xe83b73ffff	                call sym.d_ref_qualifier	      1496	cp-demangle.c	FUNCTION_21	CALL_3
0x4008d75	        0x498b5618	            mov rdx, qword [r14 + 0x18] 	      1496	cp-demangle.c	FUNCTION_21	CALL_3
0x4008d79	          0x4989c5	                            mov r13, rax	      1496	cp-demangle.c	FUNCTION_21	CALL_3
0x4008d7c	    0x48bdff030810	                movabs rbp, 0x20100803ff	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4008d86	           0xfb61a	                   movzx ebx, byte [rdx]	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4008d89	     0xf1f80000000	                         nop dword [rax]	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4008d90	            0x84db	                             test bl, bl	      1538	cp-demangle.c	FUNCTION_22	WHILE_1	IF_1
0x4008d92	            0x747c	                            je 0x4008e10	      1538	cp-demangle.c	FUNCTION_22	WHILE_1	IF_1
0x4008d94	          0x80fb44	                            cmp bl, 0x44	      1546	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2
0x4008d97	     0xf84b3020000	                            je 0x4009050	      1546	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2
0x4008d9d	          0x8d4bd0	                   lea ecx, [rbx - 0x30]	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4008da0	      0xb801000000	                              mov eax, 1	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4008da5	          0x80f925	                            cmp cl, 0x25	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4008da8	            0x7710	                            ja 0x4008dba	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4008daa	          0x4889e8	                            mov rax, rbp	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4008dad	          0x48d3e8	                             shr rax, cl	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4008db0	          0x83e001	                              and eax, 1	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4008db3	        0x4883f001	                              xor rax, 1	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4008db7	          0x83e001	                              and eax, 1	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4008dba	          0x8d4b9f	                   lea ecx, [rbx - 0x61]	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4008dbd	          0x80f919	                            cmp cl, 0x19	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4008dc0	           0xf96c1	                                setbe cl	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4008dc3	            0x38c1	                              cmp cl, al	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4008dc5	     0xf830d020000	                           jae 0x4008fd8	      1556	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4008dcb	          0x80fb53	                            cmp bl, 0x53	      1562	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_3	IF_5
0x4008dce	     0xf84d4020000	                            je 0x40090a8	      1562	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_3	IF_5
0x4008dd4	          0x80fb49	                            cmp bl, 0x49	      1564	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_4	IF_6
0x4008dd7	     0xf84a3020000	                            je 0x4009080	      1564	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_4	IF_6
0x4008ddd	          0x80fb54	                            cmp bl, 0x54	      1571	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_5	IF_8
0x4008de0	     0xf84ea020000	                            je 0x40090d0	      1571	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_5	IF_8
0x4008de6	          0x80fb45	                            cmp bl, 0x45	      1573	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_6	IF_9
0x4008de9	     0xf84ee030000	                            je 0x40091dd	      1573	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_6	IF_9
0x4008def	          0x4d85ff	                           test r15, r15	      1580	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_7	IF_10	IF_11
0x4008df2	            0x741c	                            je 0x4008e10	      1580	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_7	IF_10	IF_11
0x4008df4	          0x80fb4d	                            cmp bl, 0x4d	      1580	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_7	IF_10	IF_11
0x4008df7	            0x7517	                           jne 0x4008e10	      1580	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_7	IF_10	IF_11
0x4008df9	        0x488d4201	                      lea rax, [rdx + 1]	      1582	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_7	IF_10	CALL_8
0x4008dfd	        0x49894618	             mov qword [r14 + 0x18], rax	      1582	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_7	IF_10	CALL_8
0x4008e01	         0xfb65a01	               movzx ebx, byte [rdx + 1]	      1582	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_7	IF_10	CALL_8
0x4008e05	          0x4889c2	                            mov rdx, rax	      1582	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_7	IF_10	CALL_8
0x4008e08	            0x84db	                             test bl, bl	      1538	cp-demangle.c	FUNCTION_22	WHILE_1	IF_1
0x4008e0a	            0x7588	                           jne 0x4008d94	      1538	cp-demangle.c	FUNCTION_22	WHILE_1	IF_1
0x4008e0c	         0xf1f4000	                         nop dword [rax]	      1538	cp-demangle.c	FUNCTION_22	WHILE_1	IF_1
0x4008e10	    0x49c704240000	                      mov qword [r12], 0	      1498	cp-demangle.c	FUNCTION_21	CALL_4
0x4008e18	            0x31c0	                            xor eax, eax	      1500	cp-demangle.c	FUNCTION_21	IF_3
0x4008e1a	      0xe9f9feffff	                           jmp 0x4008d18	      1500	cp-demangle.c	FUNCTION_21	IF_3
0x4008e1f	              0x90	                                     nop	      1500	cp-demangle.c	FUNCTION_21	IF_3
0x4008e20	          0x4c89f7	                            mov rdi, r14	      1461	cp-demangle.c	FUNCTION_20	SWITCH_1	CALL_15
0x4008e23	      0xe828e6ffff	             call sym.d_unqualified_name	      1461	cp-demangle.c	FUNCTION_20	SWITCH_1	CALL_15
0x4008e28	        0x498b4e18	            mov rcx, qword [r14 + 0x18] 	      1462	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_16
0x4008e2c	          0x4889c2	                            mov rdx, rax	      1461	cp-demangle.c	FUNCTION_20	SWITCH_1	CALL_15
0x4008e2f	          0x803949	                    cmp byte [rcx], 0x49	      1462	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_16
0x4008e32	     0xf85e0feffff	                           jne 0x4008d18	      1462	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_16
0x4008e38	          0x4885c0	                           test rax, rax	      3782	cp-demangle.c	FUNCTION_59	IF_1
0x4008e3b	     0xf84c4feffff	                            je 0x4008d05	      3782	cp-demangle.c	FUNCTION_59	IF_1
0x4008e41	        0x418b4638	            mov eax, dword [r14 + 0x38] 	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x4008e45	        0x413b463c	            cmp eax, dword [r14 + 0x3c] 	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x4008e49	     0xf8db6feffff	                           jge 0x4008d05	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x4008e4f	        0x498b4e30	            mov rcx, qword [r14 + 0x30] 	      3786	cp-demangle.c	FUNCTION_59
0x4008e53	          0x4863f0	                         movsxd rsi, eax	      3786	cp-demangle.c	FUNCTION_59
0x4008e56	          0x83c001	                              add eax, 1	      3787	cp-demangle.c	FUNCTION_59
0x4008e59	        0x488914f1	            mov qword [rcx + rsi*8], rdx	      3786	cp-demangle.c	FUNCTION_59
0x4008e5d	        0x498b7e18	            mov rdi, qword [r14 + 0x18] 	      3107	cp-demangle.c	FUNCTION_46	IF_1	CALL_1
0x4008e61	            0x31c9	                            xor ecx, ecx	      3109	cp-demangle.c	FUNCTION_46	IF_1
0x4008e63	        0x41894638	             mov dword [r14 + 0x38], eax	      3787	cp-demangle.c	FUNCTION_59
0x4008e67	           0xfb607	                   movzx eax, byte [rdi]	      3107	cp-demangle.c	FUNCTION_46	IF_1	CALL_1
0x4008e6a	          0x8d70b7	                   lea esi, [rax - 0x49]	      3107	cp-demangle.c	FUNCTION_46	IF_1	CALL_1
0x4008e6d	        0x4080fe01	                              cmp sil, 1	      3107	cp-demangle.c	FUNCTION_46	IF_1	CALL_1
0x4008e71	     0xf8628030000	                           jbe 0x400919f	      3107	cp-demangle.c	FUNCTION_46	IF_1	CALL_1
0x4008e77	      0xbe04000000	                              mov esi, 4	      1469	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_18
0x4008e7c	          0x4c89f7	                            mov rdi, r14	      1469	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_18
0x4008e7f	      0xe8bc71ffff	                    call sym.d_make_comp	      1469	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_18
0x4008e84	      0xe98ffeffff	                           jmp 0x4008d18	      1469	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_18
0x4008e89	     0xf1f80000000	                         nop dword [rax]	      1469	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_5	CALL_18
0x4008e90	        0x80780174	                cmp byte [rax + 1], 0x74	      1420	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_1	CALL_5
0x4008e94	            0x743a	                            je 0x4008ed0	      1420	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_1	CALL_5
0x4008e96	            0x31f6	                            xor esi, esi	      1422	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_1	CALL_6
0x4008e98	      0xe82379ffff	                 call sym.d_substitution	      1422	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_1	CALL_6
0x4008e9d	        0x498b4e18	            mov rcx, qword [r14 + 0x18] 	      1435	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_2	CALL_11
0x4008ea1	          0x4889c2	                            mov rdx, rax	      1422	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_1	CALL_6
0x4008ea4	          0x803949	                    cmp byte [rcx], 0x49	      1435	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_2	CALL_11
0x4008ea7	     0xf856bfeffff	                           jne 0x4008d18	      1435	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_2	CALL_11
0x4008ead	        0x4883c101	                              add rcx, 1	      3110	cp-demangle.c	FUNCTION_46	CALL_3
0x4008eb1	          0x4c89f7	                            mov rdi, r14	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x4008eb4	      0x4889542408	                mov qword [rsp + 8], rdx	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x4008eb9	        0x49894e18	             mov qword [r14 + 0x18], rcx	      3110	cp-demangle.c	FUNCTION_46	CALL_3
0x4008ebd	      0xe84efcffff	              call sym.d_template_args_1	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x4008ec2	      0x488b542408	                mov rdx, qword [rsp + 8]	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x4008ec7	          0x4889c1	                            mov rcx, rax	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x4008eca	            0xebab	                           jmp 0x4008e77	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x4008ecc	         0xf1f4000	                         nop dword [rax]	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x4008ed0	        0x4883c002	                              add rax, 2	      1427	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_7
0x4008ed4	        0x48894718	             mov qword [rdi + 0x18], rax	      1427	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_7
0x4008ed8	      0xe873e5ffff	             call sym.d_unqualified_name	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4008edd	      0xba03000000	                              mov edx, 3	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4008ee2	          0x4889c3	                            mov rbx, rax	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4008ee5	      0xbe00000000	                              mov esi, 0	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4008eea	          0x4c89f7	                            mov rdi, r14	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4008eed	      0xe83e77ffff	                    call sym.d_make_name	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4008ef2	          0x4889d9	                            mov rcx, rbx	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4008ef5	          0x4889c2	                            mov rdx, rax	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4008ef8	      0xbe01000000	                              mov esi, 1	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4008efd	          0x4c89f7	                            mov rdi, r14	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4008f00	      0xe83b71ffff	                    call sym.d_make_comp	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4008f05	        0x498b4e18	            mov rcx, qword [r14 + 0x18] 	      1435	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_2	CALL_11
0x4008f09	      0x4183464803	               add dword [r14 + 0x48], 3	      1431	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1
0x4008f0e	          0x4889c2	                            mov rdx, rax	      1428	cp-demangle.c	FUNCTION_20	SWITCH_1	ELSE_1	CALL_8
0x4008f11	          0x803949	                    cmp byte [rcx], 0x49	      1435	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_2	CALL_11
0x4008f14	     0xf85fefdffff	                           jne 0x4008d18	      1435	cp-demangle.c	FUNCTION_20	SWITCH_1	IF_2	CALL_11
0x4008f1a	          0x4885c0	                           test rax, rax	      3782	cp-demangle.c	FUNCTION_59	IF_1
0x4008f1d	     0xf84e2fdffff	                            je 0x4008d05	      3782	cp-demangle.c	FUNCTION_59	IF_1
0x4008f23	        0x418b4638	            mov eax, dword [r14 + 0x38] 	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x4008f27	        0x413b463c	            cmp eax, dword [r14 + 0x3c] 	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x4008f2b	     0xf8dd4fdffff	                           jge 0x4008d05	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x4008f31	        0x498b4e30	            mov rcx, qword [r14 + 0x30] 	      3786	cp-demangle.c	FUNCTION_59
0x4008f35	          0x4863f0	                         movsxd rsi, eax	      3786	cp-demangle.c	FUNCTION_59
0x4008f38	          0x83c001	                              add eax, 1	      3787	cp-demangle.c	FUNCTION_59
0x4008f3b	        0x488914f1	            mov qword [rcx + rsi*8], rdx	      3786	cp-demangle.c	FUNCTION_59
0x4008f3f	        0x498b4e18	            mov rcx, qword [r14 + 0x18] 	      3107	cp-demangle.c	FUNCTION_46	IF_1	CALL_1
0x4008f43	        0x41894638	             mov dword [r14 + 0x38], eax	      3787	cp-demangle.c	FUNCTION_59
0x4008f47	           0xfb601	                   movzx eax, byte [rcx]	      3107	cp-demangle.c	FUNCTION_46	IF_1	CALL_1
0x4008f4a	          0x83e849	                           sub eax, 0x49	      3107	cp-demangle.c	FUNCTION_46	IF_1	CALL_1
0x4008f4d	            0x3c01	                               cmp al, 1	      3107	cp-demangle.c	FUNCTION_46	IF_1	CALL_1
0x4008f4f	     0xf8658ffffff	                           jbe 0x4008ead	      3107	cp-demangle.c	FUNCTION_46	IF_1	CALL_1
0x4008f55	            0x31c9	                            xor ecx, ecx	      3109	cp-demangle.c	FUNCTION_46	IF_1
0x4008f57	      0xe91bffffff	                           jmp 0x4008e77	      3109	cp-demangle.c	FUNCTION_46	IF_1
0x4008f5c	         0xf1f4000	                         nop dword [rax]	      3109	cp-demangle.c	FUNCTION_46	IF_1
0x4008f60	        0x488d5001	                      lea rdx, [rax + 1]	      3594	cp-demangle.c	FUNCTION_54	IF_3	CALL_3
0x4008f64	        0x49895618	             mov qword [r14 + 0x18], rdx	      3594	cp-demangle.c	FUNCTION_54	IF_3	CALL_3
0x4008f68	         0xfb65001	               movzx edx, byte [rax + 1]	      3597	cp-demangle.c	FUNCTION_54	IF_4	CALL_4
0x4008f6c	          0x80fa73	                            cmp dl, 0x73	      3597	cp-demangle.c	FUNCTION_54	IF_4	CALL_4
0x4008f6f	     0xf84f8010000	                            je 0x400916d	      3597	cp-demangle.c	FUNCTION_54	IF_4	CALL_4
0x4008f75	          0x80fa64	                            cmp dl, 0x64	      3608	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	CALL_8
0x4008f78	     0xf8476010000	                            je 0x40090f4	      3608	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	CALL_8
0x4008f7e	          0x4c89f7	                            mov rdi, r14	      3617	cp-demangle.c	FUNCTION_54	ELSE_1	CALL_11
0x4008f81	      0xe81afdffff	                         call sym.d_name	      3617	cp-demangle.c	FUNCTION_54	ELSE_1	CALL_11
0x4008f86	          0x4885c0	                           test rax, rax	      3619	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x4008f89	          0x4889c3	                            mov rbx, rax	      3617	cp-demangle.c	FUNCTION_54	ELSE_1	CALL_11
0x4008f8c	            0x7422	                            je 0x4008fb0	      3619	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x4008f8e	            0x8b00	                    mov eax, dword [rax]	      3623	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x4008f90	          0x83e0fd	                     and eax, 0xfffffffd	      3623	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x4008f93	          0x83f845	                           cmp eax, 0x45	      3623	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x4008f96	            0x7418	                            je 0x4008fb0	      3623	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x4008f98	          0x4c89f7	                            mov rdi, r14	      3626	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8	IF_9	CALL_12
0x4008f9b	      0xe84075ffff	                call sym.d_discriminator	      3626	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8	IF_9	CALL_12
0x4008fa0	            0x85c0	                           test eax, eax	      3626	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8	IF_9	CALL_12
0x4008fa2	     0xf845dfdffff	                            je 0x4008d05	      3626	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8	IF_9	CALL_12
0x4008fa8	     0xf1f84000000	                   nop dword [rax + rax]	      3626	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8	IF_9	CALL_12
0x4008fb0	        0x837d0003	                      cmp dword [rbp], 3	      3637	cp-demangle.c	FUNCTION_54	IF_11
0x4008fb4	     0xf8420010000	                            je 0x40090da	      3637	cp-demangle.c	FUNCTION_54	IF_11
0x4008fba	          0x4889d9	                            mov rcx, rbx	      3641	cp-demangle.c	FUNCTION_54	CALL_14
0x4008fbd	          0x4889ea	                            mov rdx, rbp	      3641	cp-demangle.c	FUNCTION_54	CALL_14
0x4008fc0	      0xbe02000000	                              mov esi, 2	      3641	cp-demangle.c	FUNCTION_54	CALL_14
0x4008fc5	          0x4c89f7	                            mov rdi, r14	      3641	cp-demangle.c	FUNCTION_54	CALL_14
0x4008fc8	      0xe87370ffff	                    call sym.d_make_comp	      3641	cp-demangle.c	FUNCTION_54	CALL_14
0x4008fcd	      0xe946fdffff	                           jmp 0x4008d18	      3641	cp-demangle.c	FUNCTION_54	CALL_14
0x4008fd2	    0x660f1f440000	                    nop word [rax + rax]	      3641	cp-demangle.c	FUNCTION_54	CALL_14
0x4008fd8	          0x4c89f7	                            mov rdi, r14	      1561	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4008fdb	      0xe870e4ffff	             call sym.d_unqualified_name	      1561	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4008fe0	          0x4d85ff	                           test r15, r15	      1588	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x4008fe3	     0xf8487000000	                            je 0x4009070	      1588	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x4008fe9	      0xbe01000000	                              mov esi, 1	      1588	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x4008fee	          0x4c89fa	                            mov rdx, r15	      1591	cp-demangle.c	FUNCTION_22	WHILE_1	CALL_9
0x4008ff1	          0x4889c1	                            mov rcx, rax	      1591	cp-demangle.c	FUNCTION_22	WHILE_1	CALL_9
0x4008ff4	          0x4c89f7	                            mov rdi, r14	      1591	cp-demangle.c	FUNCTION_22	WHILE_1	CALL_9
0x4008ff7	      0xe84470ffff	                    call sym.d_make_comp	      1591	cp-demangle.c	FUNCTION_22	WHILE_1	CALL_9
0x4008ffc	          0x4989c7	                            mov r15, rax	      1591	cp-demangle.c	FUNCTION_22	WHILE_1	CALL_9
0x4008fff	          0x80fb53	                            cmp bl, 0x53	      1593	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	CALL_10
0x4009002	            0x7439	                            je 0x400903d	      1593	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	CALL_10
0x4009004	        0x498b5618	            mov rdx, qword [r14 + 0x18] 	      1593	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	CALL_10
0x4009008	           0xfb61a	                   movzx ebx, byte [rdx]	      1593	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	CALL_10
0x400900b	          0x80fb45	                            cmp bl, 0x45	      1593	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	CALL_10
0x400900e	     0xf8489fdffff	                            je 0x4008d9d	      1593	cp-demangle.c	FUNCTION_22	WHILE_1	IF_13	CALL_10
0x4009014	          0x4d85ff	                           test r15, r15	      3782	cp-demangle.c	FUNCTION_59	IF_1
0x4009017	     0xf84f3fdffff	                            je 0x4008e10	      3782	cp-demangle.c	FUNCTION_59	IF_1
0x400901d	        0x418b4638	            mov eax, dword [r14 + 0x38] 	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x4009021	        0x413b463c	            cmp eax, dword [r14 + 0x3c] 	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x4009025	     0xf8de5fdffff	                           jge 0x4008e10	      3784	cp-demangle.c	FUNCTION_59	IF_2
0x400902b	        0x498b5630	            mov rdx, qword [r14 + 0x30] 	      3786	cp-demangle.c	FUNCTION_59
0x400902f	          0x4863c8	                         movsxd rcx, eax	      3786	cp-demangle.c	FUNCTION_59
0x4009032	          0x83c001	                              add eax, 1	      3787	cp-demangle.c	FUNCTION_59
0x4009035	        0x4c893cca	            mov qword [rdx + rcx*8], r15	      3786	cp-demangle.c	FUNCTION_59
0x4009039	        0x41894638	             mov dword [r14 + 0x38], eax	      3787	cp-demangle.c	FUNCTION_59
0x400903d	        0x498b5618	            mov rdx, qword [r14 + 0x18] 	      3787	cp-demangle.c	FUNCTION_59
0x4009041	           0xfb61a	                   movzx ebx, byte [rdx]	      3787	cp-demangle.c	FUNCTION_59
0x4009044	      0xe947fdffff	                           jmp 0x4008d90	      3787	cp-demangle.c	FUNCTION_59
0x4009049	     0xf1f80000000	                         nop dword [rax]	      3787	cp-demangle.c	FUNCTION_59
0x4009050	         0xfb64201	               movzx eax, byte [rdx + 1]	      1549	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	IF_3
0x4009054	          0x4c89f7	                            mov rdi, r14	      1551	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	IF_3
0x4009057	          0x83e0df	                     and eax, 0xffffffdf	      1549	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	IF_3
0x400905a	            0x3c54	                            cmp al, 0x54	      1549	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	IF_3
0x400905c	            0x751a	                           jne 0x4009078	      1549	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	IF_3
0x400905e	      0xe800000000	                          call 0x4009063	      1551	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	IF_3
0x4009063	          0x4d85ff	                           test r15, r15	      1588	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x4009066	            0x7581	                           jne 0x4008fe9	      1588	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x4009068	          0x4989c7	                            mov r15, rax	      1588	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x400906b	            0xeb97	                           jmp 0x4009004	      1588	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x400906d	           0xf1f00	                         nop dword [rax]	      1588	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x4009070	          0x4989c7	                            mov r15, rax	      1561	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4009073	            0xeb8a	                           jmp 0x4008fff	      1561	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4009075	           0xf1f00	                         nop dword [rax]	      1561	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_2	IF_4
0x4009078	      0xe8d3e3ffff	             call sym.d_unqualified_name	      1554	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	CALL_3
0x400907d	            0xebe4	                           jmp 0x4009063	      1554	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	CALL_3
0x400907f	              0x90	                                     nop	      1554	cp-demangle.c	FUNCTION_22	WHILE_1	IF_2	CALL_3
0x4009080	          0x4d85ff	                           test r15, r15	      1566	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_4	IF_6	IF_7
0x4009083	     0xf8487fdffff	                            je 0x4008e10	      1566	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_4	IF_6	IF_7
0x4009089	        0x4883c201	                              add rdx, 1	      3110	cp-demangle.c	FUNCTION_46	CALL_3
0x400908d	          0x4c89f7	                            mov rdi, r14	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x4009090	        0x49895618	             mov qword [r14 + 0x18], rdx	      3110	cp-demangle.c	FUNCTION_46	CALL_3
0x4009094	      0xe877faffff	              call sym.d_template_args_1	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x4009099	      0xbe04000000	                              mov esi, 4	      1588	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x400909e	      0xe94bffffff	                           jmp 0x4008fee	      1588	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x40090a3	       0xf1f440000	                   nop dword [rax + rax]	      1588	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x40090a8	      0xbe01000000	                              mov esi, 1	      1563	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_3	IF_5
0x40090ad	          0x4c89f7	                            mov rdi, r14	      1563	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_3	IF_5
0x40090b0	      0xe80b77ffff	                 call sym.d_substitution	      1563	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_3	IF_5
0x40090b5	          0x4d85ff	                           test r15, r15	      1588	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x40090b8	     0xf852bffffff	                           jne 0x4008fe9	      1588	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x40090be	        0x498b5618	            mov rdx, qword [r14 + 0x18] 	      1588	cp-demangle.c	FUNCTION_22	WHILE_1	IF_12
0x40090c2	          0x4989c7	                            mov r15, rax	      1563	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_3	IF_5
0x40090c5	           0xfb61a	                   movzx ebx, byte [rdx]	      1563	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_3	IF_5
0x40090c8	      0xe9c3fcffff	                           jmp 0x4008d90	      1563	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_3	IF_5
0x40090cd	           0xf1f00	                         nop dword [rax]	      1563	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_3	IF_5
0x40090d0	          0x4c89f7	                            mov rdi, r14	      1572	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_5	IF_8
0x40090d3	      0xe8b872ffff	               call sym.d_template_param	      1572	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_5	IF_8
0x40090d8	            0xeb89	                           jmp 0x4009063	      1572	cp-demangle.c	FUNCTION_22	WHILE_1	ELSE_5	IF_8
0x40090da	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      3638	cp-demangle.c	FUNCTION_54	IF_11
0x40090de	          0x833829	                   cmp dword [rax], 0x29	      3638	cp-demangle.c	FUNCTION_54	IF_11
0x40090e1	     0xf85d3feffff	                           jne 0x4008fba	      3638	cp-demangle.c	FUNCTION_54	IF_11
0x40090e7	    0x48c740080000	                  mov qword [rax + 8], 0	      3639	cp-demangle.c	FUNCTION_54	IF_11
0x40090ef	      0xe9c6feffff	                           jmp 0x4008fba	      3639	cp-demangle.c	FUNCTION_54	IF_11
0x40090f4	        0x4883c002	                              add rax, 2	      3611	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	CALL_9
0x40090f8	          0x4c89f7	                            mov rdi, r14	      3612	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	CALL_10
0x40090fb	        0x49894618	             mov qword [r14 + 0x18], rax	      3611	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	CALL_9
0x40090ff	      0xe83c72ffff	               call sym.d_compact_number	      3612	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	CALL_10
0x4009104	            0x85c0	                           test eax, eax	      3613	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	IF_7
0x4009106	          0x4189c5	                           mov r13d, eax	      3612	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	CALL_10
0x4009109	     0xf88f6fbffff	                            js 0x4008d05	      3613	cp-demangle.c	FUNCTION_54	ELSE_1	IF_6	IF_7
0x400910f	          0x4c89f7	                            mov rdi, r14	      3617	cp-demangle.c	FUNCTION_54	ELSE_1	CALL_11
0x4009112	      0xe889fbffff	                         call sym.d_name	      3617	cp-demangle.c	FUNCTION_54	ELSE_1	CALL_11
0x4009117	          0x4885c0	                           test rax, rax	      3619	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x400911a	          0x4989c4	                            mov r12, rax	      3617	cp-demangle.c	FUNCTION_54	ELSE_1	CALL_11
0x400911d	            0x740e	                            je 0x400912d	      3619	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x400911f	            0x8b00	                    mov eax, dword [rax]	      3623	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x4009121	          0x83e0fd	                     and eax, 0xfffffffd	      3623	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x4009124	          0x83f845	                           cmp eax, 0x45	      3623	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x4009127	     0xf8599000000	                           jne 0x40091c6	      3623	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8
0x400912d	        0x418b4628	            mov eax, dword [r14 + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4009131	            0x31db	                            xor ebx, ebx	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4009133	        0x413b462c	            cmp eax, dword [r14 + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4009137	     0xf8d73feffff	                           jge 0x4008fb0	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400913d	          0x4863d0	                         movsxd rdx, eax	       935	cp-demangle.c	FUNCTION_3
0x4009140	          0x83c001	                              add eax, 1	       937	cp-demangle.c	FUNCTION_3
0x4009143	        0x488d0c52	                  lea rcx, [rdx + rdx*2]	       935	cp-demangle.c	FUNCTION_3
0x4009147	        0x498b5620	            mov rdx, qword [r14 + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x400914b	        0x488d1cca	                  lea rbx, [rdx + rcx*8]	       935	cp-demangle.c	FUNCTION_3
0x400914f	    0xc74304000000	                  mov dword [rbx + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x4009156	        0x41894628	             mov dword [r14 + 0x28], eax	       937	cp-demangle.c	FUNCTION_3
0x400915a	    0xc70346000000	                   mov dword [rbx], 0x46	      1128	cp-demangle.c	FUNCTION_10	IF_1
0x4009160	        0x44896b10	            mov dword [rbx + 0x10], r13d	      1129	cp-demangle.c	FUNCTION_10	IF_1
0x4009164	        0x4c896308	                mov qword [rbx + 8], r12	      1130	cp-demangle.c	FUNCTION_10	IF_1
0x4009168	      0xe943feffff	                           jmp 0x4008fb0	      1130	cp-demangle.c	FUNCTION_10	IF_1
0x400916d	        0x4883c002	                              add rax, 2	      3599	cp-demangle.c	FUNCTION_54	IF_4	CALL_5
0x4009171	          0x4c89f7	                            mov rdi, r14	      3600	cp-demangle.c	FUNCTION_54	IF_4	IF_5	CALL_6
0x4009174	        0x49894618	             mov qword [r14 + 0x18], rax	      3599	cp-demangle.c	FUNCTION_54	IF_4	CALL_5
0x4009178	      0xe86373ffff	                call sym.d_discriminator	      3600	cp-demangle.c	FUNCTION_54	IF_4	IF_5	CALL_6
0x400917d	            0x85c0	                           test eax, eax	      3600	cp-demangle.c	FUNCTION_54	IF_4	IF_5	CALL_6
0x400917f	     0xf8480fbffff	                            je 0x4008d05	      3600	cp-demangle.c	FUNCTION_54	IF_4	IF_5	CALL_6
0x4009185	      0xba0e000000	                            mov edx, 0xe	      3602	cp-demangle.c	FUNCTION_54	IF_4	CALL_7
0x400918a	      0xbe00000000	                              mov esi, 0	      3602	cp-demangle.c	FUNCTION_54	IF_4	CALL_7
0x400918f	          0x4c89f7	                            mov rdi, r14	      3602	cp-demangle.c	FUNCTION_54	IF_4	CALL_7
0x4009192	      0xe89974ffff	                    call sym.d_make_name	      3602	cp-demangle.c	FUNCTION_54	IF_4	CALL_7
0x4009197	          0x4889c3	                            mov rbx, rax	      3602	cp-demangle.c	FUNCTION_54	IF_4	CALL_7
0x400919a	      0xe911feffff	                           jmp 0x4008fb0	      3602	cp-demangle.c	FUNCTION_54	IF_4	CALL_7
0x400919f	        0x4883c701	                              add rdi, 1	      3110	cp-demangle.c	FUNCTION_46	CALL_3
0x40091a3	      0x4889542408	                mov qword [rsp + 8], rdx	      3110	cp-demangle.c	FUNCTION_46	CALL_3
0x40091a8	        0x49897e18	             mov qword [r14 + 0x18], rdi	      3110	cp-demangle.c	FUNCTION_46	CALL_3
0x40091ac	          0x4c89f7	                            mov rdi, r14	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x40091af	      0xe85cf9ffff	              call sym.d_template_args_1	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x40091b4	      0x488b542408	                mov rdx, qword [rsp + 8]	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x40091b9	          0x4889c1	                            mov rcx, rax	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x40091bc	      0xe9b6fcffff	                           jmp 0x4008e77	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x40091c1	      0xe800000000	                          call 0x40091c6	      1474	cp-demangle.c	FUNCTION_20
0x40091c6	          0x4c89f7	                            mov rdi, r14	      3626	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8	IF_9	CALL_12
0x40091c9	      0xe81273ffff	                call sym.d_discriminator	      3626	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8	IF_9	CALL_12
0x40091ce	            0x85c0	                           test eax, eax	      3626	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8	IF_9	CALL_12
0x40091d0	     0xf8557ffffff	                           jne 0x400912d	      3626	cp-demangle.c	FUNCTION_54	ELSE_1	IF_8	IF_9	CALL_12
0x40091d6	            0x31c0	                            xor eax, eax	      1500	cp-demangle.c	FUNCTION_21	IF_3
0x40091d8	      0xe93bfbffff	                           jmp 0x4008d18	      1500	cp-demangle.c	FUNCTION_21	IF_3
0x40091dd	          0x4d85ff	                           test r15, r15	      1499	cp-demangle.c	FUNCTION_21	IF_3
0x40091e0	        0x4d893c24	                    mov qword [r12], r15	      1498	cp-demangle.c	FUNCTION_21	CALL_4
0x40091e4	     0xf841bfbffff	                            je 0x4008d05	      1499	cp-demangle.c	FUNCTION_21	IF_3
0x40091ea	          0x4d85ed	                           test r13, r13	      1502	cp-demangle.c	FUNCTION_21	IF_4
0x40091ed	            0x740e	                            je 0x40091fd	      1502	cp-demangle.c	FUNCTION_21	IF_4
0x40091ef	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1504	cp-demangle.c	FUNCTION_21	IF_4
0x40091f4	      0x4c896c2410	             mov qword [rsp + 0x10], r13	      1505	cp-demangle.c	FUNCTION_21	IF_4
0x40091f9	        0x49894508	                mov qword [r13 + 8], rax	      1504	cp-demangle.c	FUNCTION_21	IF_4
0x40091fd	        0x498b4618	            mov rax, qword [r14 + 0x18] 	      1508	cp-demangle.c	FUNCTION_21	IF_5	CALL_5
0x4009201	          0x803845	                    cmp byte [rax], 0x45	      1508	cp-demangle.c	FUNCTION_21	IF_5	CALL_5
0x4009204	     0xf85fbfaffff	                           jne 0x4008d05	      1508	cp-demangle.c	FUNCTION_21	IF_5	CALL_5
0x400920a	        0x4883c001	                              add rax, 1	      1508	cp-demangle.c	FUNCTION_21	IF_5	CALL_5
0x400920e	        0x49894618	             mov qword [r14 + 0x18], rax	      1508	cp-demangle.c	FUNCTION_21	IF_5	CALL_5
0x4009212	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1511	cp-demangle.c	FUNCTION_21
0x4009217	      0xe9fcfaffff	                           jmp 0x4008d18	      1408	cp-demangle.c	FUNCTION_20	SWITCH_1	CALL_2
d_expr_primary	CALL,13:FOR,0:IF,7:ELSE,1:WHILE,1:DO,0:functions,0:SWITCH,0	82
0x4009a20	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      3523	cp-demangle.c	FUNCTION_53	IF_1	CALL_1
0x4009a24	          0x80384c	                    cmp byte [rax], 0x4c	      3523	cp-demangle.c	FUNCTION_53	IF_1	CALL_1
0x4009a27	            0x7407	                            je 0x4009a30	      3523	cp-demangle.c	FUNCTION_53	IF_1	CALL_1
0x4009a29	            0x31c0	                            xor eax, eax	      3524	cp-demangle.c	FUNCTION_53	IF_1
0x4009a2b	              0xc3	                                     ret	      3574	cp-demangle.c	FUNCTION_53
0x4009a2c	         0xf1f4000	                         nop dword [rax]	      3574	cp-demangle.c	FUNCTION_53
0x4009a30	        0x488d5001	                      lea rdx, [rax + 1]	      3523	cp-demangle.c	FUNCTION_53	IF_1	CALL_1
0x4009a34	              0x53	                                push rbx	      3520	cp-demangle.c	FUNCTION_53
0x4009a35	          0x4889fb	                            mov rbx, rdi	      3520	cp-demangle.c	FUNCTION_53
0x4009a38	        0x48895718	             mov qword [rdi + 0x18], rdx	      3523	cp-demangle.c	FUNCTION_53	IF_1	CALL_1
0x4009a3c	         0xfb64001	               movzx eax, byte [rax + 1]	      3525	cp-demangle.c	FUNCTION_53	IF_2	CALL_2
0x4009a40	            0x3c5f	                            cmp al, 0x5f	      3525	cp-demangle.c	FUNCTION_53	IF_2	CALL_2
0x4009a42	     0xf8480000000	                            je 0x4009ac8	      3525	cp-demangle.c	FUNCTION_53	IF_2	CALL_2
0x4009a48	            0x3c5a	                            cmp al, 0x5a	      3525	cp-demangle.c	FUNCTION_53	IF_2	CALL_2
0x4009a4a	            0x747c	                            je 0x4009ac8	      3525	cp-demangle.c	FUNCTION_53	IF_2	CALL_2
0x4009a4c	      0xe800000000	                          call 0x4009a51	      3535	cp-demangle.c	FUNCTION_53	ELSE_1
0x4009a51	          0x4885c0	                           test rax, rax	      3536	cp-demangle.c	FUNCTION_53	ELSE_1	IF_3
0x4009a54	          0x4989c1	                             mov r9, rax	      3535	cp-demangle.c	FUNCTION_53	ELSE_1
0x4009a57	            0x7466	                            je 0x4009abf	      3536	cp-demangle.c	FUNCTION_53	ELSE_1	IF_3
0x4009a59	          0x833827	                   cmp dword [rax], 0x27	      3541	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x4009a5c	     0xf84a6000000	                            je 0x4009b08	      3541	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x4009a62	        0x488b7318	            mov rsi, qword [rbx + 0x18] 	      3557	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5	CALL_4
0x4009a66	    0x41ba3c000000	                          mov r10d, 0x3c	      3556	cp-demangle.c	FUNCTION_53	ELSE_1
0x4009a6c	           0xfb606	                   movzx eax, byte [rsi]	      3557	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5	CALL_4
0x4009a6f	            0x3c6e	                            cmp al, 0x6e	      3557	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5	CALL_4
0x4009a71	            0x7475	                            je 0x4009ae8	      3557	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5	CALL_4
0x4009a73	            0x3c45	                            cmp al, 0x45	      3563	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_7
0x4009a75	     0xf84a7000000	                            je 0x4009b22	      3563	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_7
0x4009a7b	            0x84c0	                             test al, al	      3565	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	IF_6	CALL_8
0x4009a7d	        0x488d5601	                      lea rdx, [rsi + 1]	      3565	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	IF_6	CALL_8
0x4009a81	            0x750d	                           jne 0x4009a90	      3565	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	IF_6	CALL_8
0x4009a83	            0xeb3a	                           jmp 0x4009abf	      3565	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	IF_6	CALL_8
0x4009a85	           0xf1f00	                         nop dword [rax]	      3565	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	IF_6	CALL_8
0x4009a88	        0x4883c201	                              add rdx, 1	      3565	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	IF_6	CALL_8
0x4009a8c	            0x84c0	                             test al, al	      3565	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	IF_6	CALL_8
0x4009a8e	            0x742f	                            je 0x4009abf	      3565	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	IF_6	CALL_8
0x4009a90	        0x48895318	             mov qword [rbx + 0x18], rdx	      3567	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_9
0x4009a94	           0xfb602	                   movzx eax, byte [rdx]	      3563	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_7
0x4009a97	            0x3c45	                            cmp al, 0x45	      3563	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_7
0x4009a99	            0x75ed	                           jne 0x4009a88	      3563	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_7
0x4009a9b	            0x29f2	                            sub edx, esi	      3563	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_7
0x4009a9d	          0x4889df	                            mov rdi, rbx	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x4009aa0	      0xe88b6bffff	                    call sym.d_make_name	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x4009aa5	          0x4889df	                            mov rdi, rbx	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x4009aa8	          0x4c89ca	                             mov rdx, r9	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x4009aab	          0x4889c1	                            mov rcx, rax	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x4009aae	          0x4489d6	                           mov esi, r10d	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x4009ab1	      0xe88a65ffff	                    call sym.d_make_comp	      3569	cp-demangle.c	FUNCTION_53	ELSE_1	CALL_12
0x4009ab6	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      3571	cp-demangle.c	FUNCTION_53	IF_7	CALL_13
0x4009aba	          0x803a45	                    cmp byte [rdx], 0x45	      3571	cp-demangle.c	FUNCTION_53	IF_7	CALL_13
0x4009abd	            0x741c	                            je 0x4009adb	      3571	cp-demangle.c	FUNCTION_53	IF_7	CALL_13
0x4009abf	            0x31c0	                            xor eax, eax	      3524	cp-demangle.c	FUNCTION_53	IF_1
0x4009ac1	              0x5b	                                 pop rbx	      3574	cp-demangle.c	FUNCTION_53
0x4009ac2	              0xc3	                                     ret	      3574	cp-demangle.c	FUNCTION_53
0x4009ac3	       0xf1f440000	                   nop dword [rax + rax]	      3574	cp-demangle.c	FUNCTION_53
0x4009ac8	            0x31f6	                            xor esi, esi	      3528	cp-demangle.c	FUNCTION_53	IF_2
0x4009aca	          0x4889df	                            mov rdi, rbx	      3528	cp-demangle.c	FUNCTION_53	IF_2
0x4009acd	      0xe800000000	                          call 0x4009ad2	      3528	cp-demangle.c	FUNCTION_53	IF_2
0x4009ad2	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      3571	cp-demangle.c	FUNCTION_53	IF_7	CALL_13
0x4009ad6	          0x803a45	                    cmp byte [rdx], 0x45	      3571	cp-demangle.c	FUNCTION_53	IF_7	CALL_13
0x4009ad9	            0x75e4	                           jne 0x4009abf	      3571	cp-demangle.c	FUNCTION_53	IF_7	CALL_13
0x4009adb	        0x4883c201	                              add rdx, 1	      3571	cp-demangle.c	FUNCTION_53	IF_7	CALL_13
0x4009adf	        0x48895318	             mov qword [rbx + 0x18], rdx	      3571	cp-demangle.c	FUNCTION_53	IF_7	CALL_13
0x4009ae3	              0x5b	                                 pop rbx	      3574	cp-demangle.c	FUNCTION_53
0x4009ae4	              0xc3	                                     ret	      3574	cp-demangle.c	FUNCTION_53
0x4009ae5	           0xf1f00	                         nop dword [rax]	      3574	cp-demangle.c	FUNCTION_53
0x4009ae8	        0x488d5601	                      lea rdx, [rsi + 1]	      3560	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5	CALL_5
0x4009aec	    0x41ba3d000000	                          mov r10d, 0x3d	      3559	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5
0x4009af2	        0x48895318	             mov qword [rbx + 0x18], rdx	      3560	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5	CALL_5
0x4009af6	         0xfb64601	               movzx eax, byte [rsi + 1]	      3560	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5	CALL_5
0x4009afa	          0x4889d6	                            mov rsi, rdx	      3560	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5	CALL_5
0x4009afd	      0xe971ffffff	                           jmp 0x4009a73	      3560	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5	CALL_5
0x4009b02	    0x660f1f440000	                    nop word [rax + rax]	      3560	cp-demangle.c	FUNCTION_53	ELSE_1	IF_5	CALL_5
0x4009b08	        0x488b4008	                mov rax, qword [rax + 8]	      3542	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x4009b0c	          0x8b501c	            mov edx, dword [rax + 0x1c] 	      3542	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x4009b0f	            0x85d2	                           test edx, edx	      3542	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x4009b11	     0xf844bffffff	                            je 0x4009a62	      3542	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x4009b17	          0x8b4008	                mov eax, dword [rax + 8]	      3543	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x4009b1a	          0x294348	             sub dword [rbx + 0x48], eax	      3543	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x4009b1d	      0xe940ffffff	                           jmp 0x4009a62	      3543	cp-demangle.c	FUNCTION_53	ELSE_1	IF_4
0x4009b22	            0x31d2	                            xor edx, edx	      3563	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_7
0x4009b24	      0xe974ffffff	                           jmp 0x4009a9d	      3563	cp-demangle.c	FUNCTION_53	ELSE_1	WHILE_1	CALL_7
d_operator_name	CALL,7:FOR,0:IF,6:ELSE,4:WHILE,1:DO,0:functions,0:SWITCH,0	123
0x40071b0	              0x55	                                push rbp	      1856	cp-demangle.c	FUNCTION_28
0x40071b1	              0x53	                                push rbx	      1856	cp-demangle.c	FUNCTION_28
0x40071b2	        0x4883ec08	                              sub rsp, 8	      1856	cp-demangle.c	FUNCTION_28
0x40071b6	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x40071ba	          0x803800	                       cmp byte [rax], 0	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x40071bd	            0x7479	                            je 0x4007238	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x40071bf	        0x488d5001	                      lea rdx, [rax + 1]	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x40071c3	        0x48895718	             mov qword [rdi + 0x18], rdx	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x40071c7	        0x80780100	                   cmp byte [rax + 1], 0	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x40071cb	        0x440fb600	                   movzx r8d, byte [rax]	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x40071cf	     0xf846d010000	                            je 0x4007342	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x40071d5	        0x488d5002	                      lea rdx, [rax + 2]	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x40071d9	        0x4180f876	                           cmp r8b, 0x76	      1862	cp-demangle.c	FUNCTION_28	IF_1
0x40071dd	          0x4889fd	                            mov rbp, rdi	      1862	cp-demangle.c	FUNCTION_28	IF_1
0x40071e0	        0x48895718	             mov qword [rdi + 0x18], rdx	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x40071e4	         0xfb65801	               movzx ebx, byte [rax + 1]	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x40071e8	     0xf84e2000000	                            je 0x40072d0	      1862	cp-demangle.c	FUNCTION_28	IF_1
0x40071ee	        0x4180f863	                           cmp r8b, 0x63	      1864	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x40071f2	            0x7549	                           jne 0x400723d	      1864	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x40071f4	          0x80fb76	                            cmp bl, 0x76	      1864	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x40071f7	            0x7544	                           jne 0x400723d	      1864	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x40071f9	          0x8b574c	            mov edx, dword [rdi + 0x4c] 	      1870	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x40071fc	            0x31c0	                            xor eax, eax	      1870	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x40071fe	          0x8b5f50	            mov ebx, dword [rdi + 0x50] 	      1867	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x4007201	            0x85d2	                           test edx, edx	      1870	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x4007203	           0xf94c0	                                 sete al	      1870	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x4007206	          0x894750	             mov dword [rdi + 0x50], eax	      1870	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x4007209	      0xe800000000	                          call 0x400720e	      1871	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x400720e	          0x8b7550	            mov esi, dword [rbp + 0x50] 	      1872	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x4007211	            0x31c9	                            xor ecx, ecx	      1873	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_5
0x4007213	          0x4889c2	                            mov rdx, rax	      1873	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_5
0x4007216	            0x85f6	                           test esi, esi	      1872	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x4007218	     0xf8512010000	                           jne 0x4007330	      1872	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	IF_3
0x400721e	      0xbe33000000	                           mov esi, 0x33	      1875	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_6
0x4007223	          0x4889ef	                            mov rdi, rbp	      1875	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_6
0x4007226	      0xe8158effff	                    call sym.d_make_comp	      1875	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_6
0x400722b	          0x895d50	            mov dword [rbp + 0x50], ebx 	      1876	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2
0x400722e	        0x4883c408	                              add rsp, 8	      1908	cp-demangle.c	FUNCTION_28
0x4007232	              0x5b	                                 pop rbx	      1908	cp-demangle.c	FUNCTION_28
0x4007233	              0x5d	                                 pop rbp	      1908	cp-demangle.c	FUNCTION_28
0x4007234	              0xc3	                                     ret	      1908	cp-demangle.c	FUNCTION_28
0x4007235	           0xf1f00	                         nop dword [rax]	      1908	cp-demangle.c	FUNCTION_28
0x4007238	            0x31db	                            xor ebx, ebx	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x400723a	          0x4531c0	                            xor r8d, r8d	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x400723d	      0xbe43000000	                           mov esi, 0x43	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x4007242	            0x31d2	                            xor edx, edx	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x4007244	         0xf1f4000	                         nop dword [rax]	      1860	cp-demangle.c	FUNCTION_28	CALL_1
0x4007248	            0x89f0	                            mov eax, esi	      1894	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x400724a	            0x29d0	                            sub eax, edx	      1894	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x400724c	            0x89c1	                            mov ecx, eax	      1894	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x400724e	          0xc1e91f	                           shr ecx, 0x1f	      1894	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x4007251	             0x1c8	                            add eax, ecx	      1894	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x4007253	            0xd1f8	                              sar eax, 1	      1894	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x4007255	             0x1d0	                            add eax, edx	      1894	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x4007257	          0x4863c8	                         movsxd rcx, eax	      1895	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x400725a	        0x488d0c49	                  lea rcx, [rcx + rcx*2]	      1895	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x400725e	    0x4c8d0ccd0000	                         lea r9, [rcx*8]	      1895	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1
0x4007266	    0x488b0ccd0000	                  mov rcx, qword [rcx*8]	      1897	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_4
0x400726e	          0x443801	                     cmp byte [rcx], r8b	      1897	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_4
0x4007271	            0x7415	                            je 0x4007288	      1897	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_4
0x4007273	            0x7e53	                           jle 0x40072c8	      1900	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_5
0x4007275	            0x89c6	                            mov esi, eax	      1901	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_5
0x4007277	            0x39f2	                            cmp edx, esi	      1904	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_6
0x4007279	            0x75cd	                           jne 0x4007248	      1904	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_6
0x400727b	            0x31c0	                            xor eax, eax	      1117	cp-demangle.c	FUNCTION_9	IF_1
0x400727d	        0x4883c408	                              add rsp, 8	      1908	cp-demangle.c	FUNCTION_28
0x4007281	              0x5b	                                 pop rbx	      1908	cp-demangle.c	FUNCTION_28
0x4007282	              0x5d	                                 pop rbp	      1908	cp-demangle.c	FUNCTION_28
0x4007283	              0xc3	                                     ret	      1908	cp-demangle.c	FUNCTION_28
0x4007284	         0xf1f4000	                         nop dword [rax]	      1908	cp-demangle.c	FUNCTION_28
0x4007288	          0x385901	                  cmp byte [rcx + 1], bl	      1897	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_4
0x400728b	            0x75e6	                           jne 0x4007273	      1897	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	IF_4
0x400728d	          0x8b5728	            mov edx, dword [rdi + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4007290	          0x3b572c	            cmp edx, dword [rdi + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4007293	            0x7de6	                           jge 0x400727b	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4007295	          0x4863c2	                         movsxd rax, edx	       935	cp-demangle.c	FUNCTION_3
0x4007298	          0x83c201	                              add edx, 1	       937	cp-demangle.c	FUNCTION_3
0x400729b	        0x488d0c40	                  lea rcx, [rax + rax*2]	       935	cp-demangle.c	FUNCTION_3
0x400729f	        0x488b4720	            mov rax, qword [rdi + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x40072a3	        0x488d04c8	                  lea rax, [rax + rcx*8]	       935	cp-demangle.c	FUNCTION_3
0x40072a7	    0xc74004000000	                  mov dword [rax + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x40072ae	          0x895728	             mov dword [rdi + 0x28], edx	       937	cp-demangle.c	FUNCTION_3
0x40072b1	    0xc70031000000	                   mov dword [rax], 0x31	      1101	cp-demangle.c	FUNCTION_8	IF_1
0x40072b7	        0x4c894808	                 mov qword [rax + 8], r9	      1102	cp-demangle.c	FUNCTION_8	IF_1
0x40072bb	        0x4883c408	                              add rsp, 8	      1908	cp-demangle.c	FUNCTION_28
0x40072bf	              0x5b	                                 pop rbx	      1908	cp-demangle.c	FUNCTION_28
0x40072c0	              0x5d	                                 pop rbp	      1908	cp-demangle.c	FUNCTION_28
0x40072c1	              0xc3	                                     ret	      1908	cp-demangle.c	FUNCTION_28
0x40072c2	    0x660f1f440000	                    nop word [rax + rax]	      1908	cp-demangle.c	FUNCTION_28
0x40072c8	          0x8d5001	                      lea edx, [rax + 1]	      1903	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	ELSE_4
0x40072cb	            0xebaa	                           jmp 0x4007277	      1903	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	ELSE_4
0x40072cd	           0xf1f00	                         nop dword [rax]	      1903	cp-demangle.c	FUNCTION_28	ELSE_3	WHILE_1	ELSE_4
0x40072d0	          0x8d43d0	                   lea eax, [rbx - 0x30]	      1862	cp-demangle.c	FUNCTION_28	IF_1
0x40072d3	            0x3c09	                               cmp al, 9	      1862	cp-demangle.c	FUNCTION_28	IF_1
0x40072d5	     0xf8762ffffff	                            ja 0x400723d	      1862	cp-demangle.c	FUNCTION_28	IF_1
0x40072db	      0xe8a093ffff	                  call sym.d_source_name	      1863	cp-demangle.c	FUNCTION_28	CALL_4
0x40072e0	          0x8b4d28	            mov ecx, dword [rbp + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x40072e3	          0x3b4d2c	            cmp ecx, dword [rbp + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x40072e6	            0x7d93	                           jge 0x400727b	       933	cp-demangle.c	FUNCTION_3	IF_1
0x40072e8	          0x4863d1	                         movsxd rdx, ecx	       935	cp-demangle.c	FUNCTION_3
0x40072eb	          0x83c101	                              add ecx, 1	       937	cp-demangle.c	FUNCTION_3
0x40072ee	          0x4885c0	                           test rax, rax	       877	cp-demangle.c	IF_2
0x40072f1	        0x488d3452	                  lea rsi, [rdx + rdx*2]	       935	cp-demangle.c	FUNCTION_3
0x40072f5	        0x488b5520	            mov rdx, qword [rbp + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x40072f9	        0x488d14f2	                  lea rdx, [rdx + rsi*8]	       935	cp-demangle.c	FUNCTION_3
0x40072fd	    0xc74204000000	                  mov dword [rdx + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x4007304	          0x894d28	            mov dword [rbp + 0x28], ecx 	       937	cp-demangle.c	FUNCTION_3
0x4007307	     0xf846effffff	                            je 0x400727b	       877	cp-demangle.c	IF_2
0x400730d	           0xfbecb	                           movsx ecx, bl	       881	cp-demangle.c	
0x4007310	        0x48894210	             mov qword [rdx + 0x10], rax	       882	cp-demangle.c	
0x4007314	    0xc74204000000	                  mov dword [rdx + 4], 0	       879	cp-demangle.c	
0x400731b	          0x83e930	                           sub ecx, 0x30	       881	cp-demangle.c	
0x400731e	    0xc70232000000	                   mov dword [rdx], 0x32	       880	cp-demangle.c	
0x4007324	          0x4889d0	                            mov rax, rdx	       882	cp-demangle.c	
0x4007327	          0x894a08	                mov dword [rdx + 8], ecx	       881	cp-demangle.c	
0x400732a	      0xe94effffff	                           jmp 0x400727d	       881	cp-demangle.c	
0x400732f	              0x90	                                     nop	       881	cp-demangle.c	
0x4007330	      0xbe34000000	                           mov esi, 0x34	      1873	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_5
0x4007335	          0x4889ef	                            mov rdi, rbp	      1873	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_5
0x4007338	      0xe8038dffff	                    call sym.d_make_comp	      1873	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_5
0x400733d	      0xe9e9feffff	                           jmp 0x400722b	      1873	cp-demangle.c	FUNCTION_28	ELSE_1	IF_2	CALL_5
0x4007342	            0x31db	                            xor ebx, ebx	      1861	cp-demangle.c	FUNCTION_28	CALL_2
0x4007344	      0xe9f4feffff	                           jmp 0x400723d	      1861	cp-demangle.c	FUNCTION_28	CALL_2
d_bare_function_type	CALL,4:FOR,0:IF,4:ELSE,1:WHILE,0:DO,0:functions,0:SWITCH,0	35
0x4007920	              0x55	                                push rbp	      2916	cp-demangle.c	FUNCTION_39
0x4007921	              0x53	                                push rbx	      2916	cp-demangle.c	FUNCTION_39
0x4007922	          0x4889fb	                            mov rbx, rdi	      2916	cp-demangle.c	FUNCTION_39
0x4007925	        0x4883ec08	                              sub rsp, 8	      2916	cp-demangle.c	FUNCTION_39
0x4007929	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      2923	cp-demangle.c	FUNCTION_39	CALL_1
0x400792d	          0x80384a	                    cmp byte [rax], 0x4a	      2924	cp-demangle.c	FUNCTION_39	IF_1
0x4007930	            0x742e	                            je 0x4007960	      2924	cp-demangle.c	FUNCTION_39	IF_1
0x4007932	            0x31ed	                            xor ebp, ebp	      2937	cp-demangle.c	FUNCTION_39	ELSE_1
0x4007934	            0x85f6	                           test esi, esi	      2930	cp-demangle.c	FUNCTION_39	IF_2
0x4007936	            0x7530	                           jne 0x4007968	      2930	cp-demangle.c	FUNCTION_39	IF_2
0x4007938	          0x4889df	                            mov rdi, rbx	      2939	cp-demangle.c	FUNCTION_39	CALL_3
0x400793b	      0xe810faffff	                     call sym.d_parmlist	      2939	cp-demangle.c	FUNCTION_39	CALL_3
0x4007940	          0x4885c0	                           test rax, rax	      2940	cp-demangle.c	FUNCTION_39	IF_4
0x4007943	            0x7433	                            je 0x4007978	      2940	cp-demangle.c	FUNCTION_39	IF_4
0x4007945	        0x4883c408	                              add rsp, 8	      2945	cp-demangle.c	FUNCTION_39
0x4007949	          0x4889ea	                            mov rdx, rbp	      2943	cp-demangle.c	FUNCTION_39	CALL_4
0x400794c	          0x4889df	                            mov rdi, rbx	      2943	cp-demangle.c	FUNCTION_39	CALL_4
0x400794f	              0x5b	                                 pop rbx	      2945	cp-demangle.c	FUNCTION_39
0x4007950	              0x5d	                                 pop rbp	      2945	cp-demangle.c	FUNCTION_39
0x4007951	          0x4889c1	                            mov rcx, rax	      2943	cp-demangle.c	FUNCTION_39	CALL_4
0x4007954	      0xbe29000000	                           mov esi, 0x29	      2943	cp-demangle.c	FUNCTION_39	CALL_4
0x4007959	      0xe9e286ffff	                     jmp sym.d_make_comp	      2943	cp-demangle.c	FUNCTION_39	CALL_4
0x400795e	            0x6690	                                     nop	      2943	cp-demangle.c	FUNCTION_39	CALL_4
0x4007960	        0x4883c001	                              add rax, 1	      2926	cp-demangle.c	FUNCTION_39	IF_1	CALL_2
0x4007964	        0x48894718	             mov qword [rdi + 0x18], rax	      2926	cp-demangle.c	FUNCTION_39	IF_1	CALL_2
0x4007968	          0x4889df	                            mov rdi, rbx	      2932	cp-demangle.c	FUNCTION_39	IF_2
0x400796b	      0xe800000000	                          call 0x4007970	      2932	cp-demangle.c	FUNCTION_39	IF_2
0x4007970	          0x4885c0	                           test rax, rax	      2933	cp-demangle.c	FUNCTION_39	IF_2	IF_3
0x4007973	          0x4889c5	                            mov rbp, rax	      2932	cp-demangle.c	FUNCTION_39	IF_2
0x4007976	            0x75c0	                           jne 0x4007938	      2933	cp-demangle.c	FUNCTION_39	IF_2	IF_3
0x4007978	        0x4883c408	                              add rsp, 8	      2945	cp-demangle.c	FUNCTION_39
0x400797c	            0x31c0	                            xor eax, eax	      2945	cp-demangle.c	FUNCTION_39
0x400797e	              0x5b	                                 pop rbx	      2945	cp-demangle.c	FUNCTION_39
0x400797f	              0x5d	                                 pop rbp	      2945	cp-demangle.c	FUNCTION_39
0x4007980	              0xc3	                                     ret	      2945	cp-demangle.c	FUNCTION_39
d_parmlist	CALL,3:FOR,0:IF,6:ELSE,0:WHILE,1:DO,0:functions,0:SWITCH,0	75
0x4007350	              0x55	                                push rbp	      2868	cp-demangle.c	FUNCTION_38
0x4007351	              0x53	                                push rbx	      2868	cp-demangle.c	FUNCTION_38
0x4007352	        0x4883ec18	                           sub rsp, 0x18	      2868	cp-demangle.c	FUNCTION_38
0x4007356	        0x488b5718	            mov rdx, qword [rdi + 0x18] 	      2878	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_1
0x400735a	    0x64488b042528	                mov rax, qword fs:[0x28]	      2868	cp-demangle.c	FUNCTION_38
0x4007363	      0x4889442408	                mov qword [rsp + 8], rax	      2868	cp-demangle.c	FUNCTION_38
0x4007368	            0x31c0	                            xor eax, eax	      2868	cp-demangle.c	FUNCTION_38
0x400736a	    0x48c704240000	                      mov qword [rsp], 0	      2872	cp-demangle.c	FUNCTION_38
0x4007372	           0xfb602	                   movzx eax, byte [rdx]	      2878	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_1
0x4007375	            0x84c0	                             test al, al	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x4007377	        0x400f94c6	                                sete sil	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x400737b	            0x3c45	                            cmp al, 0x45	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x400737d	           0xf94c1	                                 sete cl	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x4007380	          0x4008ce	                              or sil, cl	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x4007383	            0x7568	                           jne 0x40073ed	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x4007385	            0x3c2e	                            cmp al, 0x2e	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x4007387	            0x7464	                            je 0x40073ed	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x4007389	          0x4889fb	                            mov rbx, rdi	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x400738c	          0x4889e5	                            mov rbp, rsp	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x400738f	            0xeb41	                           jmp 0x40073d2	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x4007391	     0xf1f80000000	                         nop dword [rax]	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x4007398	            0x31c9	                            xor ecx, ecx	      2888	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_3
0x400739a	          0x4889c2	                            mov rdx, rax	      2888	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_3
0x400739d	      0xbe2e000000	                           mov esi, 0x2e	      2888	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_3
0x40073a2	          0x4889df	                            mov rdi, rbx	      2888	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_3
0x40073a5	      0xe8968cffff	                    call sym.d_make_comp	      2888	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_3
0x40073aa	          0x4885c0	                           test rax, rax	      2889	cp-demangle.c	FUNCTION_38	WHILE_1	IF_4
0x40073ad	        0x48894500	                    mov qword [rbp], rax	      2888	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_3
0x40073b1	            0x743a	                            je 0x40073ed	      2889	cp-demangle.c	FUNCTION_38	WHILE_1	IF_4
0x40073b3	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      2878	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_1
0x40073b7	        0x488d6810	                   lea rbp, [rax + 0x10]	      2891	cp-demangle.c	FUNCTION_38	WHILE_1
0x40073bb	           0xfb602	                   movzx eax, byte [rdx]	      2878	cp-demangle.c	FUNCTION_38	WHILE_1	CALL_1
0x40073be	            0x84c0	                             test al, al	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x40073c0	        0x400f94c6	                                sete sil	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x40073c4	            0x3c45	                            cmp al, 0x45	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x40073c6	           0xf94c1	                                 sete cl	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x40073c9	          0x4008ce	                              or sil, cl	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x40073cc	            0x7542	                           jne 0x4007410	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x40073ce	            0x3c2e	                            cmp al, 0x2e	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x40073d0	            0x743e	                            je 0x4007410	      2879	cp-demangle.c	FUNCTION_38	WHILE_1	IF_1
0x40073d2	            0x3c52	                            cmp al, 0x52	      2881	cp-demangle.c	FUNCTION_38	WHILE_1	IF_2
0x40073d4	            0x7404	                            je 0x40073da	      2881	cp-demangle.c	FUNCTION_38	WHILE_1	IF_2
0x40073d6	            0x3c4f	                            cmp al, 0x4f	      2881	cp-demangle.c	FUNCTION_38	WHILE_1	IF_2
0x40073d8	            0x7506	                           jne 0x40073e0	      2881	cp-demangle.c	FUNCTION_38	WHILE_1	IF_2
0x40073da	        0x807a0145	                cmp byte [rdx + 1], 0x45	      2882	cp-demangle.c	FUNCTION_38	WHILE_1	IF_2	CALL_2
0x40073de	            0x7430	                            je 0x4007410	      2882	cp-demangle.c	FUNCTION_38	WHILE_1	IF_2	CALL_2
0x40073e0	          0x4889df	                            mov rdi, rbx	      2885	cp-demangle.c	FUNCTION_38	WHILE_1
0x40073e3	      0xe800000000	                          call 0x40073e8	      2885	cp-demangle.c	FUNCTION_38	WHILE_1
0x40073e8	          0x4885c0	                           test rax, rax	      2886	cp-demangle.c	FUNCTION_38	WHILE_1	IF_3
0x40073eb	            0x75ab	                           jne 0x4007398	      2886	cp-demangle.c	FUNCTION_38	WHILE_1	IF_3
0x40073ed	            0x31c0	                            xor eax, eax	      2898	cp-demangle.c	FUNCTION_38	IF_5
0x40073ef	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2910	cp-demangle.c	FUNCTION_38
0x40073f4	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      2910	cp-demangle.c	FUNCTION_38
0x40073fd	            0x7544	                           jne 0x4007443	      2910	cp-demangle.c	FUNCTION_38
0x40073ff	        0x4883c418	                           add rsp, 0x18	      2910	cp-demangle.c	FUNCTION_38
0x4007403	              0x5b	                                 pop rbx	      2910	cp-demangle.c	FUNCTION_38
0x4007404	              0x5d	                                 pop rbp	      2910	cp-demangle.c	FUNCTION_38
0x4007405	              0xc3	                                     ret	      2910	cp-demangle.c	FUNCTION_38
0x4007406	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2910	cp-demangle.c	FUNCTION_38
0x4007410	        0x488b0424	                    mov rax, qword [rsp]	      2897	cp-demangle.c	FUNCTION_38	IF_5
0x4007414	          0x4885c0	                           test rax, rax	      2897	cp-demangle.c	FUNCTION_38	IF_5
0x4007417	            0x74d4	                            je 0x40073ed	      2897	cp-demangle.c	FUNCTION_38	IF_5
0x4007419	      0x4883781000	               cmp qword [rax + 0x10], 0	      2901	cp-demangle.c	FUNCTION_38	IF_6
0x400741e	            0x75cf	                           jne 0x40073ef	      2901	cp-demangle.c	FUNCTION_38	IF_6
0x4007420	        0x488b5008	                mov rdx, qword [rax + 8]	      2902	cp-demangle.c	FUNCTION_38	IF_6
0x4007424	          0x833a27	                   cmp dword [rdx], 0x27	      2902	cp-demangle.c	FUNCTION_38	IF_6
0x4007427	            0x75c6	                           jne 0x40073ef	      2902	cp-demangle.c	FUNCTION_38	IF_6
0x4007429	        0x488b5208	                mov rdx, qword [rdx + 8]	      2903	cp-demangle.c	FUNCTION_38	IF_6
0x400742d	        0x837a1c09	               cmp dword [rdx + 0x1c], 9	      2903	cp-demangle.c	FUNCTION_38	IF_6
0x4007431	            0x75bc	                           jne 0x40073ef	      2903	cp-demangle.c	FUNCTION_38	IF_6
0x4007433	          0x8b5208	                mov edx, dword [rdx + 8]	      2905	cp-demangle.c	FUNCTION_38	IF_6
0x4007436	          0x295348	             sub dword [rbx + 0x48], edx	      2905	cp-demangle.c	FUNCTION_38	IF_6
0x4007439	    0x48c740080000	                  mov qword [rax + 8], 0	      2906	cp-demangle.c	FUNCTION_38	IF_6
0x4007441	            0xebac	                           jmp 0x40073ef	      2906	cp-demangle.c	FUNCTION_38	IF_6
0x4007443	      0xe800000000	                          call 0x4007448	      2910	cp-demangle.c	FUNCTION_38
d_exprlist	CALL,7:FOR,0:IF,4:ELSE,0:WHILE,1:DO,0:functions,0:SWITCH,0	513
0x4007a00	            0x4157	                                push r15	      3200	cp-demangle.c	FUNCTION_49
0x4007a02	            0x4156	                                push r14	      3200	cp-demangle.c	FUNCTION_49
0x4007a04	            0x4155	                                push r13	      3200	cp-demangle.c	FUNCTION_49
0x4007a06	            0x4154	                                push r12	      3200	cp-demangle.c	FUNCTION_49
0x4007a08	          0x4189f5	                           mov r13d, esi	      3200	cp-demangle.c	FUNCTION_49
0x4007a0b	              0x55	                                push rbp	      3200	cp-demangle.c	FUNCTION_49
0x4007a0c	              0x53	                                push rbx	      3200	cp-demangle.c	FUNCTION_49
0x4007a0d	          0x4889fb	                            mov rbx, rdi	      3200	cp-demangle.c	FUNCTION_49
0x4007a10	        0x4883ec28	                           sub rsp, 0x28	      3200	cp-demangle.c	FUNCTION_49
0x4007a14	    0x64488b042528	                mov rax, qword fs:[0x28]	      3200	cp-demangle.c	FUNCTION_49
0x4007a1d	      0x4889442418	             mov qword [rsp + 0x18], rax	      3200	cp-demangle.c	FUNCTION_49
0x4007a22	            0x31c0	                            xor eax, eax	      3200	cp-demangle.c	FUNCTION_49
0x4007a24	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      3204	cp-demangle.c	FUNCTION_49	IF_1	CALL_1
0x4007a28	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3201	cp-demangle.c	FUNCTION_49
0x4007a31	      0x488d6c2410	                   lea rbp, [rsp + 0x10]	      3201	cp-demangle.c	FUNCTION_49
0x4007a36	          0x403830	                     cmp byte [rax], sil	      3204	cp-demangle.c	FUNCTION_49	IF_1	CALL_1
0x4007a39	            0x756c	                           jne 0x4007aa7	      3204	cp-demangle.c	FUNCTION_49	IF_1	CALL_1
0x4007a3b	      0xe99c060000	                           jmp 0x40080dc	      3204	cp-demangle.c	FUNCTION_49	IF_1	CALL_1
0x4007a40	          0x80f966	                            cmp cl, 0x66	      3285	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_16
0x4007a43	     0xf8407010000	                            je 0x4007b50	      3285	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_16
0x4007a49	          0x8d51d0	                   lea edx, [rcx - 0x30]	      3305	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9
0x4007a4c	          0x80fa09	                               cmp dl, 9	      3305	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9
0x4007a4f	     0xf8743070000	                            ja 0x4008198	      3305	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9
0x4007a55	          0x4889df	                            mov rdi, rbx	      3316	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_24
0x4007a58	      0xe8f3f9ffff	             call sym.d_unqualified_name	      3316	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_24
0x4007a5d	          0x4885c0	                           test rax, rax	      3317	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_11
0x4007a60	     0xf84ba000000	                            je 0x4007b20	      3317	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_11
0x4007a66	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	      3319	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_25
0x4007a6a	          0x4889c2	                            mov rdx, rax	      3319	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_25
0x4007a6d	          0x803949	                    cmp byte [rcx], 0x49	      3319	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_25
0x4007a70	     0xf844a010000	                            je 0x4007bc0	      3319	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_25
0x4007a76	        0x4489634c	            mov dword [rbx + 0x4c], r12d	      3509	cp-demangle.c	FUNCTION_52
0x4007a7a	            0x31c9	                            xor ecx, ecx	      3216	cp-demangle.c	FUNCTION_49	WHILE_1	CALL_5
0x4007a7c	      0xbe2e000000	                           mov esi, 0x2e	      3216	cp-demangle.c	FUNCTION_49	WHILE_1	CALL_5
0x4007a81	          0x4889df	                            mov rdi, rbx	      3216	cp-demangle.c	FUNCTION_49	WHILE_1	CALL_5
0x4007a84	      0xe8b785ffff	                    call sym.d_make_comp	      3216	cp-demangle.c	FUNCTION_49	WHILE_1	CALL_5
0x4007a89	          0x4885c0	                           test rax, rax	      3217	cp-demangle.c	FUNCTION_49	WHILE_1	IF_3
0x4007a8c	        0x48894500	                    mov qword [rbp], rax	      3216	cp-demangle.c	FUNCTION_49	WHILE_1	CALL_5
0x4007a90	     0xf848e000000	                            je 0x4007b24	      3217	cp-demangle.c	FUNCTION_49	WHILE_1	IF_3
0x4007a96	        0x488d6810	                   lea rbp, [rax + 0x10]	      3219	cp-demangle.c	FUNCTION_49	WHILE_1
0x4007a9a	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      3221	cp-demangle.c	FUNCTION_49	WHILE_1	IF_4	CALL_6
0x4007a9e	          0x443a28	                    cmp r13b, byte [rax]	      3221	cp-demangle.c	FUNCTION_49	WHILE_1	IF_4	CALL_6
0x4007aa1	     0xf8471040000	                            je 0x4007f18	      3221	cp-demangle.c	FUNCTION_49	WHILE_1	IF_4	CALL_6
0x4007aa7	        0x448b634c	           mov r12d, dword [rbx + 0x4c] 	      3505	cp-demangle.c	FUNCTION_52
0x4007aab	    0xc7434c010000	               mov dword [rbx + 0x4c], 1	      3507	cp-demangle.c	FUNCTION_52
0x4007ab2	           0xfb608	                   movzx ecx, byte [rax]	      3259	cp-demangle.c	FUNCTION_51	CALL_1
0x4007ab5	          0x80f94c	                            cmp cl, 0x4c	      3260	cp-demangle.c	FUNCTION_51	IF_1
0x4007ab8	     0xf8472010000	                            je 0x4007c30	      3260	cp-demangle.c	FUNCTION_51	IF_1
0x4007abe	          0x80f954	                            cmp cl, 0x54	      3262	cp-demangle.c	FUNCTION_51	ELSE_1	IF_2
0x4007ac1	     0xf8479010000	                            je 0x4007c40	      3262	cp-demangle.c	FUNCTION_51	ELSE_1	IF_2
0x4007ac7	          0x80f973	                            cmp cl, 0x73	      3264	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_4
0x4007aca	     0xf8570ffffff	                           jne 0x4007a40	      3264	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_4
0x4007ad0	         0xfb65001	               movzx edx, byte [rax + 1]	      3264	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_4
0x4007ad4	          0x80fa72	                            cmp dl, 0x72	      3264	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_4
0x4007ad7	     0xf846b030000	                            je 0x4007e48	      3264	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_4
0x4007add	          0x80fa70	                            cmp dl, 0x70	      3279	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_12
0x4007ae0	     0xf844a040000	                            je 0x4007f30	      3279	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_12
0x4007ae6	          0x4889df	                            mov rdi, rbx	      3344	cp-demangle.c	FUNCTION_51	ELSE_10	CALL_33
0x4007ae9	      0xe8c2f6ffff	                call sym.d_operator_name	      3344	cp-demangle.c	FUNCTION_51	ELSE_10	CALL_33
0x4007aee	          0x4885c0	                           test rax, rax	      3345	cp-demangle.c	FUNCTION_51	ELSE_10	IF_16
0x4007af1	          0x4989c6	                            mov r14, rax	      3344	cp-demangle.c	FUNCTION_51	ELSE_10	CALL_33
0x4007af4	            0x742a	                            je 0x4007b20	      3345	cp-demangle.c	FUNCTION_51	ELSE_10	IF_16
0x4007af6	            0x8b00	                    mov eax, dword [rax]	      3348	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x4007af8	          0x83f831	                           cmp eax, 0x31	      3348	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x4007afb	     0xf844f010000	                            je 0x4007c50	      3348	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x4007b01	          0x83f832	                           cmp eax, 0x32	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4007b04	     0xf85f6000000	                           jne 0x4007c00	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4007b0a	        0x418b4608	                mov eax, dword [r14 + 8]	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4007b0e	          0x83f801	                              cmp eax, 1	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4007b11	     0xf8417060000	                            je 0x400812e	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4007b17	     0xf8e53020000	                           jle 0x4007d70	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4007b1d	           0xf1f00	                         nop dword [rax]	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4007b20	        0x4489634c	            mov dword [rbx + 0x4c], r12d	      3509	cp-demangle.c	FUNCTION_52
0x4007b24	            0x31c0	                            xor eax, eax	      3214	cp-demangle.c	FUNCTION_49	WHILE_1	IF_2
0x4007b26	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      3229	cp-demangle.c	FUNCTION_49
0x4007b2b	    0x644833342528	                xor rsi, qword fs:[0x28]	      3229	cp-demangle.c	FUNCTION_49
0x4007b34	     0xf857a060000	                           jne 0x40081b4	      3229	cp-demangle.c	FUNCTION_49
0x4007b3a	        0x4883c428	                           add rsp, 0x28	      3229	cp-demangle.c	FUNCTION_49
0x4007b3e	              0x5b	                                 pop rbx	      3229	cp-demangle.c	FUNCTION_49
0x4007b3f	              0x5d	                                 pop rbp	      3229	cp-demangle.c	FUNCTION_49
0x4007b40	            0x415c	                                 pop r12	      3229	cp-demangle.c	FUNCTION_49
0x4007b42	            0x415d	                                 pop r13	      3229	cp-demangle.c	FUNCTION_49
0x4007b44	            0x415e	                                 pop r14	      3229	cp-demangle.c	FUNCTION_49
0x4007b46	            0x415f	                                 pop r15	      3229	cp-demangle.c	FUNCTION_49
0x4007b48	              0xc3	                                     ret	      3229	cp-demangle.c	FUNCTION_49
0x4007b49	     0xf1f80000000	                         nop dword [rax]	      3229	cp-demangle.c	FUNCTION_49
0x4007b50	        0x80780170	                cmp byte [rax + 1], 0x70	      3285	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_16
0x4007b54	            0x7590	                           jne 0x4007ae6	      3285	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_16
0x4007b56	        0x488d5002	                      lea rdx, [rax + 2]	      3289	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_17
0x4007b5a	        0x48895318	             mov qword [rbx + 0x18], rdx	      3289	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	CALL_17
0x4007b5e	        0x80780254	                cmp byte [rax + 2], 0x54	      3290	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	IF_7	CALL_18
0x4007b62	     0xf84f0010000	                            je 0x4007d58	      3290	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	IF_7	CALL_18
0x4007b68	          0x4889df	                            mov rdi, rbx	      3298	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	ELSE_6	CALL_20
0x4007b6b	      0xe8d087ffff	               call sym.d_compact_number	      3298	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	ELSE_6	CALL_20
0x4007b70	            0x89c2	                            mov edx, eax	      3299	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	ELSE_6	IF_8
0x4007b72	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      3299	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	ELSE_6	IF_8
0x4007b78	    0x81faffffff7f	                     cmp edx, 0x7fffffff	      3299	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	ELSE_6	IF_8
0x4007b7e	            0x74a0	                            je 0x4007b20	      3299	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	ELSE_6	IF_8
0x4007b80	          0x83c001	                              add eax, 1	      3301	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	ELSE_6
0x4007b83	          0x8b4b28	            mov ecx, dword [rbx + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4007b86	          0x3b4b2c	            cmp ecx, dword [rbx + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4007b89	            0x7d95	                           jge 0x4007b20	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4007b8b	          0x4863d1	                         movsxd rdx, ecx	       935	cp-demangle.c	FUNCTION_3
0x4007b8e	            0x4898	                                    cdqe	      1190	cp-demangle.c	FUNCTION_14	IF_1
0x4007b90	          0x83c101	                              add ecx, 1	       937	cp-demangle.c	FUNCTION_3
0x4007b93	        0x488d3452	                  lea rsi, [rdx + rdx*2]	       935	cp-demangle.c	FUNCTION_3
0x4007b97	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x4007b9b	        0x488d14f2	                  lea rdx, [rdx + rsi*8]	       935	cp-demangle.c	FUNCTION_3
0x4007b9f	    0xc74204000000	                  mov dword [rdx + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x4007ba6	          0x894b28	             mov dword [rbx + 0x28], ecx	       937	cp-demangle.c	FUNCTION_3
0x4007ba9	    0xc70206000000	                      mov dword [rdx], 6	      1189	cp-demangle.c	FUNCTION_14	IF_1
0x4007baf	        0x48894208	                mov qword [rdx + 8], rax	      1190	cp-demangle.c	FUNCTION_14	IF_1
0x4007bb3	      0xe9befeffff	                           jmp 0x4007a76	      1190	cp-demangle.c	FUNCTION_14	IF_1
0x4007bb8	     0xf1f84000000	                   nop dword [rax + rax]	      1190	cp-demangle.c	FUNCTION_14	IF_1
0x4007bc0	        0x4883c101	                              add rcx, 1	      3110	cp-demangle.c	FUNCTION_46	CALL_3
0x4007bc4	          0x4889df	                            mov rdi, rbx	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x4007bc7	      0x4889442408	                mov qword [rsp + 8], rax	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x4007bcc	        0x48894b18	             mov qword [rbx + 0x18], rcx	      3110	cp-demangle.c	FUNCTION_46	CALL_3
0x4007bd0	      0xe83b0f0000	              call sym.d_template_args_1	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x4007bd5	      0x488b542408	                mov rdx, qword [rsp + 8]	      3320	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_26
0x4007bda	          0x4889c1	                            mov rcx, rax	      3320	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_26
0x4007bdd	      0xbe04000000	                              mov esi, 4	      3320	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_26
0x4007be2	          0x4889df	                            mov rdi, rbx	      3320	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_26
0x4007be5	      0xe85684ffff	                    call sym.d_make_comp	      3320	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_26
0x4007bea	          0x4889c2	                            mov rdx, rax	      3320	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	IF_12	CALL_26
0x4007bed	          0x4885d2	                           test rdx, rdx	      3213	cp-demangle.c	FUNCTION_49	WHILE_1	IF_2
0x4007bf0	        0x4489634c	            mov dword [rbx + 0x4c], r12d	      3509	cp-demangle.c	FUNCTION_52
0x4007bf4	     0xf8580feffff	                           jne 0x4007a7a	      3213	cp-demangle.c	FUNCTION_49	WHILE_1	IF_2
0x4007bfa	      0xe925ffffff	                           jmp 0x4007b24	      3213	cp-demangle.c	FUNCTION_49	WHILE_1	IF_2
0x4007bff	              0x90	                                     nop	      3213	cp-demangle.c	FUNCTION_49	WHILE_1	IF_2
0x4007c00	          0x83f833	                           cmp eax, 0x33	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4007c03	     0xf8517ffffff	                           jne 0x4007b20	      3357	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_1
0x4007c09	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      3388	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20	CALL_38
0x4007c0d	          0x80385f	                    cmp byte [rax], 0x5f	      3387	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20
0x4007c10	     0xf8518050000	                           jne 0x400812e	      3387	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20
0x4007c16	        0x4883c001	                              add rax, 1	      3388	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20	CALL_38
0x4007c1a	      0xbe45000000	                           mov esi, 0x45	      3389	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_39
0x4007c1f	          0x4889df	                            mov rdi, rbx	      3389	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_39
0x4007c22	        0x48894318	             mov qword [rbx + 0x18], rax	      3388	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20	CALL_38
0x4007c26	      0xe8d5fdffff	                     call sym.d_exprlist	      3389	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_39
0x4007c2b	      0xe9c8020000	                           jmp 0x4007ef8	      3389	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_39
0x4007c30	          0x4889df	                            mov rdi, rbx	      3261	cp-demangle.c	FUNCTION_51	CALL_2
0x4007c33	      0xe8e81d0000	                 call sym.d_expr_primary	      3261	cp-demangle.c	FUNCTION_51	CALL_2
0x4007c38	          0x4889c2	                            mov rdx, rax	      3261	cp-demangle.c	FUNCTION_51	CALL_2
0x4007c3b	            0xebb0	                           jmp 0x4007bed	      3261	cp-demangle.c	FUNCTION_51	CALL_2
0x4007c3d	           0xf1f00	                         nop dword [rax]	      3261	cp-demangle.c	FUNCTION_51	CALL_2
0x4007c40	          0x4889df	                            mov rdi, rbx	      3263	cp-demangle.c	FUNCTION_51	ELSE_1	IF_2
0x4007c43	      0xe84887ffff	               call sym.d_template_param	      3263	cp-demangle.c	FUNCTION_51	ELSE_1	IF_2
0x4007c48	          0x4889c2	                            mov rdx, rax	      3263	cp-demangle.c	FUNCTION_51	ELSE_1	IF_2
0x4007c4b	            0xeba0	                           jmp 0x4007bed	      3263	cp-demangle.c	FUNCTION_51	ELSE_1	IF_2
0x4007c4d	           0xf1f00	                         nop dword [rax]	      3263	cp-demangle.c	FUNCTION_51	ELSE_1	IF_2
0x4007c50	        0x498b4608	                mov rax, qword [r14 + 8]	      3350	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x4007c54	          0x8b7010	            mov esi, dword [rax + 0x10] 	      3351	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x4007c57	          0x488b10	                    mov rdx, qword [rax]	      3350	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x4007c5a	          0x8d4efe	                      lea ecx, [rsi - 2]	      3351	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x4007c5d	           0x14b48	             add dword [rbx + 0x48], ecx	      3351	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17
0x4007c60	          0x803a73	                    cmp byte [rdx], 0x73	      3352	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_34
0x4007c63	     0xf84c7000000	                            je 0x4007d30	      3352	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_34
0x4007c69	        0x498b4608	                mov rax, qword [r14 + 8]	      3352	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_34
0x4007c6d	          0x8b4014	            mov eax, dword [rax + 0x14] 	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4007c70	          0x83f801	                              cmp eax, 1	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4007c73	     0xf8437020000	                            je 0x4007eb0	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4007c79	     0xf8ef1000000	                           jle 0x4007d70	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4007c7f	          0x83f802	                              cmp eax, 2	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4007c82	     0xf8410010000	                            je 0x4007d98	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4007c88	          0x83f803	                              cmp eax, 3	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4007c8b	     0xf858ffeffff	                           jne 0x4007b20	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4007c91	          0x4885d2	                           test rdx, rdx	      3439	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_29
0x4007c94	     0xf8486feffff	                            je 0x4007b20	      3439	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_29
0x4007c9a	           0xfb602	                   movzx eax, byte [rdx]	      3441	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_59
0x4007c9d	            0x3c71	                            cmp al, 0x71	      3441	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_59
0x4007c9f	     0xf84bb020000	                            je 0x4007f60	      3441	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_59
0x4007ca5	            0x3c66	                            cmp al, 0x66	      3450	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32
0x4007ca7	     0xf8498040000	                            je 0x4008145	      3450	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32
0x4007cad	            0x3c6e	                            cmp al, 0x6e	      3459	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34
0x4007caf	     0xf856bfeffff	                           jne 0x4007b20	      3459	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34
0x4007cb5	         0xfb64201	               movzx eax, byte [rdx + 1]	      3462	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_35
0x4007cb9	            0x3c77	                            cmp al, 0x77	      3462	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_35
0x4007cbb	            0x7408	                            je 0x4007cc5	      3462	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_35
0x4007cbd	            0x3c61	                            cmp al, 0x61	      3462	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_35
0x4007cbf	     0xf855bfeffff	                           jne 0x4007b20	      3462	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_35
0x4007cc5	      0xbe5f000000	                           mov esi, 0x5f	      3464	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	CALL_66
0x4007cca	          0x4889df	                            mov rdi, rbx	      3464	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	CALL_66
0x4007ccd	      0xe82efdffff	                     call sym.d_exprlist	      3464	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	CALL_66
0x4007cd2	          0x4889df	                            mov rdi, rbx	      3465	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34
0x4007cd5	          0x4989c7	                            mov r15, rax	      3464	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	CALL_66
0x4007cd8	      0xe800000000	                          call 0x4007cdd	      3465	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34
0x4007cdd	          0x4889c2	                            mov rdx, rax	      3465	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34
0x4007ce0	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      3466	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36	CALL_67
0x4007ce4	           0xfb608	                   movzx ecx, byte [rax]	      3466	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36	CALL_67
0x4007ce7	          0x80f945	                            cmp cl, 0x45	      3466	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36	CALL_67
0x4007cea	     0xf8446040000	                            je 0x4008136	      3466	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36	CALL_67
0x4007cf0	          0x80f970	                            cmp cl, 0x70	      3471	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_69
0x4007cf3	     0xf8459040000	                            je 0x4008152	      3471	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_69
0x4007cf9	          0x80f969	                            cmp cl, 0x69	      3478	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38	CALL_73
0x4007cfc	      0x4889542408	                mov qword [rsp + 8], rdx	      3478	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38	CALL_73
0x4007d01	     0xf8519feffff	                           jne 0x4007b20	      3478	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38	CALL_73
0x4007d07	        0x8078016c	                cmp byte [rax + 1], 0x6c	      3479	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38	CALL_74
0x4007d0b	     0xf850ffeffff	                           jne 0x4007b20	      3479	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38	CALL_74
0x4007d11	          0x4889df	                            mov rdi, rbx	      3481	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38
0x4007d14	      0xe817050000	                 call sym.d_expression_1	      3481	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38
0x4007d19	      0x488b542408	                mov rdx, qword [rsp + 8]	      3481	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38
0x4007d1e	          0x4889c1	                            mov rcx, rax	      3481	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38
0x4007d21	      0xe97f020000	                           jmp 0x4007fa5	      3481	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38
0x4007d26	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3481	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_21	IF_38
0x4007d30	        0x807a0174	                cmp byte [rdx + 1], 0x74	      3352	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_34
0x4007d34	     0xf852fffffff	                           jne 0x4007c69	      3352	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_34
0x4007d3a	        0x807a0200	                   cmp byte [rdx + 2], 0	      3352	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_34
0x4007d3e	     0xf8529ffffff	                           jne 0x4007c6d	      3352	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_34
0x4007d44	          0x4889df	                            mov rdi, rbx	      3353	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_35
0x4007d47	      0xe800000000	                          call 0x4007d4c	      3353	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_35
0x4007d4c	      0xe9a7010000	                           jmp 0x4007ef8	      3353	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_35
0x4007d51	     0xf1f80000000	                         nop dword [rax]	      3353	cp-demangle.c	FUNCTION_51	ELSE_10	IF_17	IF_18	CALL_35
0x4007d58	        0x4883c003	                              add rax, 3	      3293	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	IF_7	CALL_19
0x4007d5c	        0x48894318	             mov qword [rbx + 0x18], rax	      3293	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	IF_7	CALL_19
0x4007d60	            0x31c0	                            xor eax, eax	      3294	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	IF_7
0x4007d62	      0xe91cfeffff	                           jmp 0x4007b83	      3294	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	IF_7
0x4007d67	    0x660f1f840000	                    nop word [rax + rax]	      3294	cp-demangle.c	FUNCTION_51	ELSE_5	IF_6	IF_7
0x4007d70	            0x85c0	                           test eax, eax	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4007d72	     0xf85a8fdffff	                           jne 0x4007b20	      3372	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2
0x4007d78	          0x4c89f2	                            mov rdx, r14	      3375	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_36
0x4007d7b	            0x31c9	                            xor ecx, ecx	      3375	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_36
0x4007d7d	      0xbe35000000	                           mov esi, 0x35	      3375	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_36
0x4007d82	          0x4889df	                            mov rdi, rbx	      3375	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_36
0x4007d85	      0xe8b682ffff	                    call sym.d_make_comp	      3375	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_36
0x4007d8a	          0x4889c2	                            mov rdx, rax	      3375	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_36
0x4007d8d	      0xe95bfeffff	                           jmp 0x4007bed	      3375	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_36
0x4007d92	    0x660f1f440000	                    nop word [rax + rax]	      3375	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_36
0x4007d98	          0x4885d2	                           test rdx, rdx	      3407	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_23
0x4007d9b	     0xf847ffdffff	                            je 0x4007b20	      3407	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_23
0x4007da1	        0x498b4608	                mov rax, qword [r14 + 8]	      3237	cp-demangle.c	FUNCTION_50
0x4007da5	          0x488b00	                    mov rax, qword [rax]	      3237	cp-demangle.c	FUNCTION_50
0x4007da8	        0x80780163	                cmp byte [rax + 1], 0x63	      3239	cp-demangle.c	FUNCTION_50
0x4007dac	     0xf84cf020000	                            je 0x4008081	      3239	cp-demangle.c	FUNCTION_50
0x4007db2	          0x803a66	                    cmp byte [rdx], 0x66	      3411	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_13	IF_25
0x4007db5	     0xf8459030000	                            je 0x4008114	      3411	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_13	IF_25
0x4007dbb	          0x4889df	                            mov rdi, rbx	      3415	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_47
0x4007dbe	      0x4889542408	                mov qword [rsp + 8], rdx	      3415	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_47
0x4007dc3	      0xe868040000	                 call sym.d_expression_1	      3415	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_47
0x4007dc8	      0x488b542408	                mov rdx, qword [rsp + 8]	      3415	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_47
0x4007dcd	          0x4989c7	                            mov r15, rax	      3415	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_47
0x4007dd0	           0xfb602	                   movzx eax, byte [rdx]	      3416	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_26	CALL_48
0x4007dd3	          0x83f863	                           cmp eax, 0x63	      3416	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_26	CALL_48
0x4007dd6	     0xf8404020000	                            je 0x4007fe0	      3416	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_26	CALL_48
0x4007ddc	          0x83f864	                           cmp eax, 0x64	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x4007ddf	     0xf859e030000	                           jne 0x4008183	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x4007de5	        0x807a0174	                cmp byte [rdx + 1], 0x74	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x4007de9	     0xf85fb010000	                           jne 0x4007fea	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x4007def	        0x807a0200	                   cmp byte [rdx + 2], 0	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x4007df3	     0xf85f1010000	                           jne 0x4007fea	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x4007df9	          0x4889df	                            mov rdi, rbx	      3420	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_52
0x4007dfc	      0xe84ff6ffff	             call sym.d_unqualified_name	      3420	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_52
0x4007e01	          0x4889c2	                            mov rdx, rax	      3420	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_52
0x4007e04	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      3421	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_53
0x4007e08	          0x803849	                    cmp byte [rax], 0x49	      3421	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_53
0x4007e0b	     0xf85e7010000	                           jne 0x4007ff8	      3421	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_53
0x4007e11	        0x4883c001	                              add rax, 1	      3110	cp-demangle.c	FUNCTION_46	CALL_3
0x4007e15	          0x4889df	                            mov rdi, rbx	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x4007e18	      0x4889542408	                mov qword [rsp + 8], rdx	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x4007e1d	        0x48894318	             mov qword [rbx + 0x18], rax	      3110	cp-demangle.c	FUNCTION_46	CALL_3
0x4007e21	      0xe8ea0c0000	              call sym.d_template_args_1	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x4007e26	      0x488b542408	                mov rdx, qword [rsp + 8]	      3422	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_54
0x4007e2b	          0x4889c1	                            mov rcx, rax	      3422	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_54
0x4007e2e	      0xbe04000000	                              mov esi, 4	      3422	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_54
0x4007e33	          0x4889df	                            mov rdi, rbx	      3422	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_54
0x4007e36	      0xe80582ffff	                    call sym.d_make_comp	      3422	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_54
0x4007e3b	          0x4889c2	                            mov rdx, rax	      3422	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_54
0x4007e3e	      0xe9b5010000	                           jmp 0x4007ff8	      3422	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_54
0x4007e43	       0xf1f440000	                   nop dword [rax + rax]	      3422	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	IF_28	CALL_54
0x4007e48	        0x4883c002	                              add rax, 2	      3269	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_5
0x4007e4c	          0x4889df	                            mov rdi, rbx	      3270	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3
0x4007e4f	        0x48894318	             mov qword [rbx + 0x18], rax	      3269	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_5
0x4007e53	      0xe800000000	                          call 0x4007e58	      3270	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3
0x4007e58	          0x4889df	                            mov rdi, rbx	      3271	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_6
0x4007e5b	          0x4989c6	                            mov r14, rax	      3270	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3
0x4007e5e	      0xe8edf5ffff	             call sym.d_unqualified_name	      3271	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_6
0x4007e63	          0x4989c7	                            mov r15, rax	      3271	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_6
0x4007e66	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      3272	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	IF_4	CALL_7
0x4007e6a	          0x4c89f9	                            mov rcx, r15	      3273	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	CALL_8
0x4007e6d	          0x803849	                    cmp byte [rax], 0x49	      3272	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	IF_4	CALL_7
0x4007e70	            0x7526	                           jne 0x4007e98	      3272	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	IF_4	CALL_7
0x4007e72	        0x4883c001	                              add rax, 1	      3110	cp-demangle.c	FUNCTION_46	CALL_3
0x4007e76	          0x4889df	                            mov rdi, rbx	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x4007e79	        0x48894318	             mov qword [rbx + 0x18], rax	      3110	cp-demangle.c	FUNCTION_46	CALL_3
0x4007e7d	      0xe88e0c0000	              call sym.d_template_args_1	      3112	cp-demangle.c	FUNCTION_46	CALL_4
0x4007e82	          0x4c89fa	                            mov rdx, r15	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x4007e85	          0x4889c1	                            mov rcx, rax	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x4007e88	      0xbe04000000	                              mov esi, 4	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x4007e8d	          0x4889df	                            mov rdi, rbx	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x4007e90	      0xe8ab81ffff	                    call sym.d_make_comp	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x4007e95	          0x4889c1	                            mov rcx, rax	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x4007e98	          0x4c89f2	                            mov rdx, r14	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x4007e9b	      0xbe01000000	                              mov esi, 1	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x4007ea0	          0x4889df	                            mov rdi, rbx	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x4007ea3	      0xe89881ffff	                    call sym.d_make_comp	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x4007ea8	          0x4889c2	                            mov rdx, rax	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x4007eab	      0xe93dfdffff	                           jmp 0x4007bed	      3275	cp-demangle.c	FUNCTION_51	ELSE_2	IF_3	ELSE_3	CALL_9
0x4007eb0	          0x4885d2	                           test rdx, rdx	      3382	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x4007eb3	     0xf8475020000	                            je 0x400812e	      3382	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x4007eb9	           0xfb602	                   movzx eax, byte [rdx]	      3382	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x4007ebc	            0x3c70	                            cmp al, 0x70	      3382	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x4007ebe	     0xf8494010000	                            je 0x4008058	      3382	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x4007ec4	            0x3c6d	                            cmp al, 0x6d	      3382	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x4007ec6	     0xf848c010000	                            je 0x4008058	      3382	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x4007ecc	          0x4531ff	                          xor r15d, r15d	      3387	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20
0x4007ecf	          0x803a73	                    cmp byte [rdx], 0x73	      3390	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21	CALL_40
0x4007ed2	     0xf8458010000	                            je 0x4008030	      3390	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21	CALL_40
0x4007ed8	          0x4889df	                            mov rdi, rbx	      3393	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_42
0x4007edb	      0xe850030000	                 call sym.d_expression_1	      3393	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_42
0x4007ee0	          0x4585ff	                         test r15d, r15d	      3395	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_22
0x4007ee3	            0x7413	                            je 0x4007ef8	      3395	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_22
0x4007ee5	          0x4889c1	                            mov rcx, rax	      3397	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_22	CALL_43
0x4007ee8	          0x4889c2	                            mov rdx, rax	      3397	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_22	CALL_43
0x4007eeb	      0xbe38000000	                           mov esi, 0x38	      3397	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_22	CALL_43
0x4007ef0	          0x4889df	                            mov rdi, rbx	      3397	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_22	CALL_43
0x4007ef3	      0xe84881ffff	                    call sym.d_make_comp	      3397	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_22	CALL_43
0x4007ef8	          0x4c89f2	                            mov rdx, r14	      3400	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_44
0x4007efb	          0x4889c1	                            mov rcx, rax	      3400	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_44
0x4007efe	      0xbe36000000	                           mov esi, 0x36	      3400	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_44
0x4007f03	          0x4889df	                            mov rdi, rbx	      3400	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_44
0x4007f06	      0xe83581ffff	                    call sym.d_make_comp	      3400	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_44
0x4007f0b	          0x4889c2	                            mov rdx, rax	      3400	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_44
0x4007f0e	      0xe9dafcffff	                           jmp 0x4007bed	      3400	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_44
0x4007f13	       0xf1f440000	                   nop dword [rax + rax]	      3400	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_44
0x4007f18	        0x4883c001	                              add rax, 1	      3223	cp-demangle.c	FUNCTION_49	WHILE_1	IF_4	CALL_7
0x4007f1c	        0x48894318	             mov qword [rbx + 0x18], rax	      3223	cp-demangle.c	FUNCTION_49	WHILE_1	IF_4	CALL_7
0x4007f20	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3228	cp-demangle.c	FUNCTION_49
0x4007f25	      0xe9fcfbffff	                           jmp 0x4007b26	      3228	cp-demangle.c	FUNCTION_49
0x4007f2a	    0x660f1f440000	                    nop word [rax + rax]	      3228	cp-demangle.c	FUNCTION_49
0x4007f30	        0x4883c002	                              add rax, 2	      3281	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_13
0x4007f34	          0x4889df	                            mov rdi, rbx	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x4007f37	        0x48894318	             mov qword [rbx + 0x18], rax	      3281	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_13
0x4007f3b	      0xe8f0020000	                 call sym.d_expression_1	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x4007f40	            0x31c9	                            xor ecx, ecx	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x4007f42	          0x4889c2	                            mov rdx, rax	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x4007f45	      0xbe4a000000	                           mov esi, 0x4a	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x4007f4a	          0x4889df	                            mov rdi, rbx	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x4007f4d	      0xe8ee80ffff	                    call sym.d_make_comp	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x4007f52	          0x4889c2	                            mov rdx, rax	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x4007f55	      0xe993fcffff	                           jmp 0x4007bed	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x4007f5a	    0x660f1f440000	                    nop word [rax + rax]	      3282	cp-demangle.c	FUNCTION_51	ELSE_4	IF_5	CALL_14
0x4007f60	        0x807a0175	                cmp byte [rdx + 1], 0x75	      3441	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_59
0x4007f64	     0xf85b6fbffff	                           jne 0x4007b20	      3441	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_59
0x4007f6a	        0x807a0200	                   cmp byte [rdx + 2], 0	      3441	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_59
0x4007f6e	     0xf85acfbffff	                           jne 0x4007b20	      3441	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_59
0x4007f74	          0x4889df	                            mov rdi, rbx	      3444	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_60
0x4007f77	      0xe8b4020000	                 call sym.d_expression_1	      3444	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_17	IF_30	CALL_60
0x4007f7c	          0x4889df	                            mov rdi, rbx	      3454	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_64
0x4007f7f	          0x4989c7	                            mov r15, rax	      3453	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_63
0x4007f82	      0xe8a9020000	                 call sym.d_expression_1	      3454	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_64
0x4007f87	          0x4889df	                            mov rdi, rbx	      3455	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_65
0x4007f8a	      0x4889442408	                mov qword [rsp + 8], rax	      3454	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_64
0x4007f8f	      0xe89c020000	                 call sym.d_expression_1	      3455	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_65
0x4007f94	          0x4885c0	                           test rax, rax	      3456	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	IF_33
0x4007f97	          0x4889c1	                            mov rcx, rax	      3455	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_65
0x4007f9a	      0x488b542408	                mov rdx, qword [rsp + 8]	      3456	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	IF_33
0x4007f9f	     0xf847bfbffff	                            je 0x4007b20	      3456	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	IF_33
0x4007fa5	      0xbe3b000000	                           mov esi, 0x3b	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x4007faa	          0x4889df	                            mov rdi, rbx	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x4007fad	      0xe88e80ffff	                    call sym.d_make_comp	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x4007fb2	          0x4c89fa	                            mov rdx, r15	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x4007fb5	          0x4889c1	                            mov rcx, rax	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x4007fb8	      0xbe3a000000	                           mov esi, 0x3a	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x4007fbd	          0x4889df	                            mov rdi, rbx	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x4007fc0	      0xe87b80ffff	                    call sym.d_make_comp	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x4007fc5	          0x4c89f2	                            mov rdx, r14	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x4007fc8	          0x4889c1	                            mov rcx, rax	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x4007fcb	      0xbe39000000	                           mov esi, 0x39	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x4007fd0	          0x4889df	                            mov rdi, rbx	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x4007fd3	      0xe86880ffff	                    call sym.d_make_comp	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x4007fd8	          0x4889c2	                            mov rdx, rax	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x4007fdb	      0xe90dfcffff	                           jmp 0x4007bed	      3487	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_76
0x4007fe0	        0x807a016c	                cmp byte [rdx + 1], 0x6c	      3416	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_26	CALL_48
0x4007fe4	     0xf84d3000000	                            je 0x40080bd	      3416	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_26	CALL_48
0x4007fea	          0x4889df	                            mov rdi, rbx	      3426	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_56
0x4007fed	      0xe83e020000	                 call sym.d_expression_1	      3426	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_56
0x4007ff2	          0x4889c2	                            mov rdx, rax	      3426	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_56
0x4007ff5	           0xf1f00	                         nop dword [rax]	      3426	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_56
0x4007ff8	          0x4889d1	                            mov rcx, rdx	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x4007ffb	      0xbe38000000	                           mov esi, 0x38	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x4008000	          0x4c89fa	                            mov rdx, r15	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x4008003	          0x4889df	                            mov rdi, rbx	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x4008006	      0xe83580ffff	                    call sym.d_make_comp	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x400800b	          0x4c89f2	                            mov rdx, r14	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x400800e	          0x4889c1	                            mov rcx, rax	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x4008011	      0xbe37000000	                           mov esi, 0x37	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x4008016	          0x4889df	                            mov rdi, rbx	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x4008019	      0xe82280ffff	                    call sym.d_make_comp	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x400801e	          0x4889c2	                            mov rdx, rax	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x4008021	      0xe9c7fbffff	                           jmp 0x4007bed	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x4008026	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3428	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_57
0x4008030	        0x807a0150	                cmp byte [rdx + 1], 0x50	      3390	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21	CALL_40
0x4008034	     0xf859efeffff	                           jne 0x4007ed8	      3390	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21	CALL_40
0x400803a	        0x807a0200	                   cmp byte [rdx + 2], 0	      3390	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21	CALL_40
0x400803e	     0xf8594feffff	                           jne 0x4007ed8	      3390	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21	CALL_40
0x4008044	          0x4889df	                            mov rdi, rbx	      3391	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21
0x4008047	      0xe8c40a0000	              call sym.d_template_args_1	      3391	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21
0x400804c	      0xe98ffeffff	                           jmp 0x4007ee0	      3391	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21
0x4008051	     0xf1f80000000	                         nop dword [rax]	      3391	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_11	IF_21
0x4008058	          0x3a4201	                  cmp al, byte [rdx + 1]	      3383	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x400805b	     0xf856bfeffff	                           jne 0x4007ecc	      3383	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_19
0x4008061	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      3385	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_37
0x4008065	    0x41bf01000000	                             mov r15d, 1	      3385	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_37
0x400806b	          0x80385f	                    cmp byte [rax], 0x5f	      3385	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_37
0x400806e	     0xf855bfeffff	                           jne 0x4007ecf	      3385	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_37
0x4008074	        0x4883c001	                              add rax, 1	      3385	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_37
0x4008078	        0x48894318	             mov qword [rbx + 0x18], rax	      3385	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_37
0x400807c	      0xe94bfeffff	                           jmp 0x4007ecc	      3385	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_37
0x4008081	           0xfb600	                   movzx eax, byte [rax]	      3240	cp-demangle.c	FUNCTION_50
0x4008084	          0x8d489d	                   lea ecx, [rax - 0x63]	      3240	cp-demangle.c	FUNCTION_50
0x4008087	          0x80f901	                               cmp cl, 1	      3240	cp-demangle.c	FUNCTION_50
0x400808a	            0x760b	                           jbe 0x4008097	      3240	cp-demangle.c	FUNCTION_50
0x400808c	          0x83e872	                           sub eax, 0x72	      3240	cp-demangle.c	FUNCTION_50
0x400808f	            0x3c01	                               cmp al, 1	      3240	cp-demangle.c	FUNCTION_50
0x4008091	     0xf871bfdffff	                            ja 0x4007db2	      3240	cp-demangle.c	FUNCTION_50
0x4008097	          0x4889df	                            mov rdi, rbx	      3410	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_24
0x400809a	      0x4889542408	                mov qword [rsp + 8], rdx	      3410	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_24
0x400809f	      0xe800000000	                          call 0x40080a4	      3410	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_24
0x40080a4	      0x488b542408	                mov rdx, qword [rsp + 8]	      3410	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_24
0x40080a9	          0x4989c7	                            mov r15, rax	      3410	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_24
0x40080ac	           0xfb602	                   movzx eax, byte [rdx]	      3416	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_26	CALL_48
0x40080af	          0x83f863	                           cmp eax, 0x63	      3416	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_26	CALL_48
0x40080b2	     0xf8524fdffff	                           jne 0x4007ddc	      3416	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_26	CALL_48
0x40080b8	      0xe923ffffff	                           jmp 0x4007fe0	      3416	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_26	CALL_48
0x40080bd	        0x807a0200	                   cmp byte [rdx + 2], 0	      3416	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_26	CALL_48
0x40080c1	     0xf8523ffffff	                           jne 0x4007fea	      3416	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_26	CALL_48
0x40080c7	      0xbe45000000	                           mov esi, 0x45	      3417	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_49
0x40080cc	          0x4889df	                            mov rdi, rbx	      3417	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_49
0x40080cf	      0xe82cf9ffff	                     call sym.d_exprlist	      3417	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_49
0x40080d4	          0x4889c2	                            mov rdx, rax	      3417	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_49
0x40080d7	      0xe91cffffff	                           jmp 0x4007ff8	      3417	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	CALL_49
0x40080dc	        0x4883c001	                              add rax, 1	      3206	cp-demangle.c	FUNCTION_49	IF_1	CALL_2
0x40080e0	        0x48894718	             mov qword [rdi + 0x18], rax	      3206	cp-demangle.c	FUNCTION_49	IF_1	CALL_2
0x40080e4	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      3207	cp-demangle.c	FUNCTION_49	IF_1	CALL_3
0x40080e9	    0x644833042528	                xor rax, qword fs:[0x28]	      3207	cp-demangle.c	FUNCTION_49	IF_1	CALL_3
0x40080f2	     0xf85bc000000	                           jne 0x40081b4	      3207	cp-demangle.c	FUNCTION_49	IF_1	CALL_3
0x40080f8	        0x4883c428	                           add rsp, 0x28	      3229	cp-demangle.c	FUNCTION_49
0x40080fc	            0x31c9	                            xor ecx, ecx	      3207	cp-demangle.c	FUNCTION_49	IF_1	CALL_3
0x40080fe	            0x31d2	                            xor edx, edx	      3207	cp-demangle.c	FUNCTION_49	IF_1	CALL_3
0x4008100	              0x5b	                                 pop rbx	      3229	cp-demangle.c	FUNCTION_49
0x4008101	              0x5d	                                 pop rbp	      3229	cp-demangle.c	FUNCTION_49
0x4008102	            0x415c	                                 pop r12	      3229	cp-demangle.c	FUNCTION_49
0x4008104	            0x415d	                                 pop r13	      3229	cp-demangle.c	FUNCTION_49
0x4008106	            0x415e	                                 pop r14	      3229	cp-demangle.c	FUNCTION_49
0x4008108	            0x415f	                                 pop r15	      3229	cp-demangle.c	FUNCTION_49
0x400810a	      0xbe2e000000	                           mov esi, 0x2e	      3207	cp-demangle.c	FUNCTION_49	IF_1	CALL_3
0x400810f	      0xe92c7fffff	                     jmp sym.d_make_comp	      3207	cp-demangle.c	FUNCTION_49	IF_1	CALL_3
0x4008114	          0x4889df	                            mov rdi, rbx	      3413	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_13	IF_25
0x4008117	      0x4889542408	                mov qword [rsp + 8], rdx	      3413	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_13	IF_25
0x400811c	      0xe88ff0ffff	                call sym.d_operator_name	      3413	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_13	IF_25
0x4008121	      0x488b542408	                mov rdx, qword [rsp + 8]	      3413	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_13	IF_25
0x4008126	          0x4989c7	                            mov r15, rax	      3413	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_13	IF_25
0x4008129	      0xe9a2fcffff	                           jmp 0x4007dd0	      3413	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_13	IF_25
0x400812e	          0x4531ff	                          xor r15d, r15d	      3387	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20
0x4008131	      0xe9a2fdffff	                           jmp 0x4007ed8	      3387	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	IF_20
0x4008136	        0x4883c001	                              add rax, 1	      3468	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36	CALL_68
0x400813a	            0x31c9	                            xor ecx, ecx	      3469	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36
0x400813c	        0x48894318	             mov qword [rbx + 0x18], rax	      3468	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36	CALL_68
0x4008140	      0xe960feffff	                           jmp 0x4007fa5	      3468	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	IF_36	CALL_68
0x4008145	          0x4889df	                            mov rdi, rbx	      3453	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_63
0x4008148	      0xe863f0ffff	                call sym.d_operator_name	      3453	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_63
0x400814d	      0xe92afeffff	                           jmp 0x4007f7c	      3453	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_18	IF_32	CALL_63
0x4008152	        0x80780169	                cmp byte [rax + 1], 0x69	      3472	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_70
0x4008156	     0xf85c4f9ffff	                           jne 0x4007b20	      3472	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_70
0x400815c	        0x4883c002	                              add rax, 2	      3475	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_71
0x4008160	      0xbe45000000	                           mov esi, 0x45	      3476	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_72
0x4008165	          0x4889df	                            mov rdi, rbx	      3476	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_72
0x4008168	        0x48894318	             mov qword [rbx + 0x18], rax	      3475	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_71
0x400816c	      0x4889542408	                mov qword [rsp + 8], rdx	      3475	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_71
0x4008171	      0xe88af8ffff	                     call sym.d_exprlist	      3476	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_72
0x4008176	      0x488b542408	                mov rdx, qword [rsp + 8]	      3476	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_72
0x400817b	          0x4889c1	                            mov rcx, rax	      3476	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_72
0x400817e	      0xe922feffff	                           jmp 0x4007fa5	      3476	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_19	IF_34	ELSE_20	IF_37	CALL_72
0x4008183	          0x83f870	                           cmp eax, 0x70	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x4008186	     0xf8459fcffff	                            je 0x4007de5	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x400818c	      0xe959feffff	                           jmp 0x4007fea	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x4008191	     0xf1f80000000	                         nop dword [rax]	      3418	cp-demangle.c	FUNCTION_51	ELSE_10	SWITCH_2	ELSE_15	IF_27	CALL_51
0x4008198	          0x80f96f	                            cmp cl, 0x6f	      3306	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_22
0x400819b	            0x751c	                           jne 0x40081b9	      3306	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_22
0x400819d	        0x8078016e	                cmp byte [rax + 1], 0x6e	      3306	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_22
0x40081a1	     0xf853ff9ffff	                           jne 0x4007ae6	      3306	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_22
0x40081a7	        0x4883c002	                              add rax, 2	      3314	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_23
0x40081ab	        0x48894318	             mov qword [rbx + 0x18], rax	      3314	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_23
0x40081af	      0xe9a1f8ffff	                           jmp 0x4007a55	      3314	cp-demangle.c	FUNCTION_51	ELSE_7	IF_9	CALL_23
0x40081b4	      0xe800000000	                          call 0x40081b9	      3229	cp-demangle.c	FUNCTION_49
0x40081b9	          0x80f969	                            cmp cl, 0x69	      3325	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13
0x40081bc	            0x7409	                            je 0x40081c7	      3325	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13
0x40081be	          0x80f974	                            cmp cl, 0x74	      3325	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13
0x40081c1	     0xf851ff9ffff	                           jne 0x4007ae6	      3325	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13
0x40081c7	        0x8078016c	                cmp byte [rax + 1], 0x6c	      3326	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_28
0x40081cb	     0xf8515f9ffff	                           jne 0x4007ae6	      3326	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_28
0x40081d1	          0x4531f6	                          xor r14d, r14d	      3329	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13
0x40081d4	          0x80f974	                            cmp cl, 0x74	      3330	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_14
0x40081d7	            0x7430	                            je 0x4008209	      3330	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_14
0x40081d9	        0x4883c002	                              add rax, 2	      3334	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_30
0x40081dd	      0xbe45000000	                           mov esi, 0x45	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x40081e2	          0x4889df	                            mov rdi, rbx	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x40081e5	        0x48894318	             mov qword [rbx + 0x18], rax	      3334	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_30
0x40081e9	      0xe812f8ffff	                     call sym.d_exprlist	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x40081ee	          0x4c89f2	                            mov rdx, r14	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x40081f1	          0x4889c1	                            mov rcx, rax	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x40081f4	      0xbe30000000	                           mov esi, 0x30	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x40081f9	          0x4889df	                            mov rdi, rbx	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x40081fc	      0xe83f7effff	                    call sym.d_make_comp	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x4008201	          0x4889c2	                            mov rdx, rax	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x4008204	      0xe9e4f9ffff	                           jmp 0x4007bed	      3335	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	CALL_31
0x4008209	          0x4889df	                            mov rdi, rbx	      3331	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_14
0x400820c	      0xe800000000	                          call 0x4008211	      3331	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_14
0x4008211	          0x4989c6	                            mov r14, rax	      3331	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_14
0x4008214	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      3332	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_15	CALL_29
0x4008218	        0x80780100	                   cmp byte [rax + 1], 0	      3332	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_15	CALL_29
0x400821c	     0xf84fef8ffff	                            je 0x4007b20	      3332	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_15	CALL_29
0x4008222	            0xebb5	                           jmp 0x40081d9	      3332	cp-demangle.c	FUNCTION_51	ELSE_8	ELSE_9	IF_13	IF_15	CALL_29
d_count_templates_scopes	CALL,8:FOR,0:IF,2:ELSE,0:WHILE,0:DO,0:functions,0:SWITCH,1	40
0x4000110	          0x4885d2	                           test rdx, rdx	      4038	cp-demangle.c	FUNCTION_67	IF_1
0x4000113	            0x747d	                            je 0x4000192	      4038	cp-demangle.c	FUNCTION_67	IF_1
0x4000115	            0x4154	                                push r12	      4037	cp-demangle.c	FUNCTION_67
0x4000117	          0x4989f4	                            mov r12, rsi	      4037	cp-demangle.c	FUNCTION_67
0x400011a	              0x55	                                push rbp	      4037	cp-demangle.c	FUNCTION_67
0x400011b	          0x4889fd	                            mov rbp, rdi	      4037	cp-demangle.c	FUNCTION_67
0x400011e	              0x53	                                push rbx	      4037	cp-demangle.c	FUNCTION_67
0x400011f	          0x4889d3	                            mov rbx, rdx	      4037	cp-demangle.c	FUNCTION_67
0x4000122	    0x660f1f440000	                    nop word [rax + rax]	      4037	cp-demangle.c	FUNCTION_67
0x4000128	          0x833b4f	                   cmp dword [rbx], 0x4f	      4041	cp-demangle.c	FUNCTION_67	SWITCH_1
0x400012b	            0x771c	                            ja 0x4000149	      4041	cp-demangle.c	FUNCTION_67	SWITCH_1
0x400012d	            0x8b03	                    mov eax, dword [rbx]	      4041	cp-demangle.c	FUNCTION_67	SWITCH_1
0x400012f	    0xff24c5000000	                       jmp qword [rax*8]	      4041	cp-demangle.c	FUNCTION_67	SWITCH_1
0x4000136	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4041	cp-demangle.c	FUNCTION_67	SWITCH_1
0x4000140	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      4143	cp-demangle.c	FUNCTION_67	SWITCH_1
0x4000144	          0x4885db	                           test rbx, rbx	      4038	cp-demangle.c	FUNCTION_67	IF_1
0x4000147	            0x75df	                           jne 0x4000128	      4038	cp-demangle.c	FUNCTION_67	IF_1
0x4000149	              0x5b	                                 pop rbx	      4163	cp-demangle.c	FUNCTION_67
0x400014a	              0x5d	                                 pop rbp	      4163	cp-demangle.c	FUNCTION_67
0x400014b	            0x415c	                                 pop r12	      4163	cp-demangle.c	FUNCTION_67
0x400014d	              0xc3	                                     ret	      4163	cp-demangle.c	FUNCTION_67
0x400014e	            0x6690	                                     nop	      4163	cp-demangle.c	FUNCTION_67
0x4000150	        0x488b5b08	                mov rbx, qword [rbx + 8]	      4160	cp-demangle.c	FUNCTION_67	SWITCH_1
0x4000154	            0xebee	                           jmp 0x4000144	      4161	cp-demangle.c	FUNCTION_67	SWITCH_1
0x4000156	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4161	cp-demangle.c	FUNCTION_67	SWITCH_1
0x4000160	        0x488b5308	                mov rdx, qword [rbx + 8]	      4060	cp-demangle.c	FUNCTION_67	SWITCH_1	IF_2
0x4000164	          0x833a05	                      cmp dword [rdx], 5	      4060	cp-demangle.c	FUNCTION_67	SWITCH_1	IF_2
0x4000167	            0x7509	                           jne 0x4000172	      4060	cp-demangle.c	FUNCTION_67	SWITCH_1	IF_2
0x4000169	      0x4183042401	                      add dword [r12], 1	      4061	cp-demangle.c	FUNCTION_67	SWITCH_1	IF_2
0x400016e	        0x488b5308	                mov rdx, qword [rbx + 8]	      4061	cp-demangle.c	FUNCTION_67	SWITCH_1	IF_2
0x4000172	          0x4c89e6	                            mov rsi, r12	      4125	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_1
0x4000175	          0x4889ef	                            mov rdi, rbp	      4125	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_1
0x4000178	      0xe893ffffff	       call sym.d_count_templates_scopes	      4125	cp-demangle.c	FUNCTION_67	SWITCH_1	CALL_1
0x400017d	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      4128	cp-demangle.c	FUNCTION_67	SWITCH_1
0x4000181	            0xebc1	                           jmp 0x4000144	      4129	cp-demangle.c	FUNCTION_67	SWITCH_1
0x4000183	       0xf1f440000	                   nop dword [rax + rax]	      4129	cp-demangle.c	FUNCTION_67	SWITCH_1
0x4000188	        0x83450001	                      add dword [rbp], 1	      4055	cp-demangle.c	FUNCTION_67	SWITCH_1
0x400018c	        0x488b5308	                mov rdx, qword [rbx + 8]	      4055	cp-demangle.c	FUNCTION_67	SWITCH_1
0x4000190	            0xebe0	                           jmp 0x4000172	      4056	cp-demangle.c	FUNCTION_67	SWITCH_1
0x4000192	            0xf3c3	                                     ret	      4056	cp-demangle.c	FUNCTION_67	SWITCH_1
d_compact_number	CALL,4:FOR,0:IF,3:ELSE,2:WHILE,0:DO,0:functions,0:SWITCH,0	26
0x4000340	              0x53	                                push rbx	      3069	cp-demangle.c	FUNCTION_44
0x4000341	        0x488b5718	            mov rdx, qword [rdi + 0x18] 	      3071	cp-demangle.c	FUNCTION_44	IF_1	CALL_1
0x4000345	          0x4889fb	                            mov rbx, rdi	      3069	cp-demangle.c	FUNCTION_44
0x4000348	           0xfb602	                   movzx eax, byte [rdx]	      3071	cp-demangle.c	FUNCTION_44	IF_1	CALL_1
0x400034b	            0x3c5f	                            cmp al, 0x5f	      3071	cp-demangle.c	FUNCTION_44	IF_1	CALL_1
0x400034d	            0x7429	                            je 0x4000378	      3071	cp-demangle.c	FUNCTION_44	IF_1	CALL_1
0x400034f	            0x3c6e	                            cmp al, 0x6e	      3073	cp-demangle.c	FUNCTION_44	ELSE_1	IF_2	CALL_2
0x4000351	            0x742d	                            je 0x4000380	      3073	cp-demangle.c	FUNCTION_44	ELSE_1	IF_2	CALL_2
0x4000353	        0x488d7f18	                   lea rdi, [rdi + 0x18]	      3073	cp-demangle.c	FUNCTION_44	ELSE_1	IF_2	CALL_2
0x4000357	      0xe8e4feffff	                call sym.d_number.isra.0	      3076	cp-demangle.c	FUNCTION_44	CALL_3
0x400035c	          0x83c001	                              add eax, 1	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x400035f	            0x781f	                            js 0x4000380	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x4000361	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x4000365	          0x803a5f	                    cmp byte [rdx], 0x5f	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x4000368	            0x7516	                           jne 0x4000380	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x400036a	        0x4883c201	                              add rdx, 1	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x400036e	        0x48895318	             mov qword [rbx + 0x18], rdx	      3078	cp-demangle.c	FUNCTION_44	IF_3	CALL_4
0x4000372	              0x5b	                                 pop rbx	      3081	cp-demangle.c	FUNCTION_44
0x4000373	              0xc3	                                     ret	      3081	cp-demangle.c	FUNCTION_44
0x4000374	         0xf1f4000	                         nop dword [rax]	      3081	cp-demangle.c	FUNCTION_44
0x4000378	            0x31c0	                            xor eax, eax	      3072	cp-demangle.c	FUNCTION_44	IF_1
0x400037a	            0xebee	                           jmp 0x400036a	      3072	cp-demangle.c	FUNCTION_44	IF_1
0x400037c	         0xf1f4000	                         nop dword [rax]	      3072	cp-demangle.c	FUNCTION_44	IF_1
0x4000380	      0xb8ffffffff	                     mov eax, 0xffffffff	      3074	cp-demangle.c	FUNCTION_44	ELSE_1	IF_2
0x4000385	              0x5b	                                 pop rbx	      3081	cp-demangle.c	FUNCTION_44
0x4000386	              0xc3	                                     ret	      3081	cp-demangle.c	FUNCTION_44
cplus_demangle_v3	CALL,1:FOR,0:IF,0:ELSE,0:WHILE,0:DO,0:functions,0:SWITCH,0	12
0x400a2a0	        0x4883ec18	                           sub rsp, 0x18	      6453	cp-demangle.c	FUNCTION_100
0x400a2a4	          0x4889e2	                            mov rdx, rsp	      6456	cp-demangle.c	FUNCTION_100	CALL_1
0x400a2a7	    0x64488b042528	                mov rax, qword fs:[0x28]	      6453	cp-demangle.c	FUNCTION_100
0x400a2b0	      0x4889442408	                mov qword [rsp + 8], rax	      6453	cp-demangle.c	FUNCTION_100
0x400a2b5	            0x31c0	                            xor eax, eax	      6453	cp-demangle.c	FUNCTION_100
0x400a2b7	      0xe8c4fdffff	                     call sym.d_demangle	      6456	cp-demangle.c	FUNCTION_100	CALL_1
0x400a2bc	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      6457	cp-demangle.c	FUNCTION_100
0x400a2c1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6457	cp-demangle.c	FUNCTION_100
0x400a2ca	            0x7505	                           jne 0x400a2d1	      6457	cp-demangle.c	FUNCTION_100
0x400a2cc	        0x4883c418	                           add rsp, 0x18	      6457	cp-demangle.c	FUNCTION_100
0x400a2d0	              0xc3	                                     ret	      6457	cp-demangle.c	FUNCTION_100
0x400a2d1	      0xe800000000	                          call 0x400a2d6	      6457	cp-demangle.c	FUNCTION_100
is_ctor_or_dtor	CALL,1:FOR,0:IF,0:ELSE,0:WHILE,1:DO,0:functions,0:SWITCH,1	77
0x4009b30	              0x55	                                push rbp	      6501	cp-demangle.c	FUNCTION_104
0x4009b31	          0x4889e5	                            mov rbp, rsp	      6501	cp-demangle.c	FUNCTION_104
0x4009b34	            0x4155	                                push r13	      6501	cp-demangle.c	FUNCTION_104
0x4009b36	            0x4154	                                push r12	      6501	cp-demangle.c	FUNCTION_104
0x4009b38	              0x53	                                push rbx	      6501	cp-demangle.c	FUNCTION_104
0x4009b39	          0x4989fd	                            mov r13, rdi	      6501	cp-demangle.c	FUNCTION_104
0x4009b3c	          0x4989f4	                            mov r12, rsi	      6501	cp-demangle.c	FUNCTION_104
0x4009b3f	          0x4889d3	                            mov rbx, rdx	      6501	cp-demangle.c	FUNCTION_104
0x4009b42	        0x4883ec68	                           sub rsp, 0x68	      6501	cp-demangle.c	FUNCTION_104
0x4009b46	    0xc70600000000	                      mov dword [rsi], 0	      6506	cp-demangle.c	FUNCTION_104
0x4009b4c	    0xc70200000000	                      mov dword [rdx], 0	      6507	cp-demangle.c	FUNCTION_104
0x4009b52	    0x64488b042528	                mov rax, qword fs:[0x28]	      6501	cp-demangle.c	FUNCTION_104
0x4009b5b	        0x488945d8	             mov qword [rbp - 0x28], rax	      6501	cp-demangle.c	FUNCTION_104
0x4009b5f	            0x31c0	                            xor eax, eax	      6501	cp-demangle.c	FUNCTION_104
0x4009b61	      0xe800000000	                          call 0x4009b66	      6509	cp-demangle.c	FUNCTION_104	CALL_1
0x4009b66	      0x498d540500	                    lea rdx, [r13 + rax]	      6170	cp-demangle.c	
0x4009b6b	          0x8945bc	             mov dword [rbp - 0x44], eax	      6183	cp-demangle.c	
0x4009b6e	        0x488d7d80	                   lea rdi, [rbp - 0x80]	      6523	cp-demangle.c	FUNCTION_104
0x4009b72	      0xbe01000000	                              mov esi, 1	      6523	cp-demangle.c	FUNCTION_104
0x4009b77	        0x4c896d80	             mov qword [rbp - 0x80], r13	      6169	cp-demangle.c	
0x4009b7b	    0xc74590004000	          mov dword [rbp - 0x70], 0x4000	      6171	cp-demangle.c	
0x4009b82	        0x48895588	             mov qword [rbp - 0x78], rdx	      6170	cp-demangle.c	
0x4009b86	          0x8d1400	                    lea edx, [rax + rax]	      6178	cp-demangle.c	
0x4009b89	            0x4898	                                    cdqe	      6514	cp-demangle.c	FUNCTION_104
0x4009b8b	    0x488d04c51600	                 lea rax, [rax*8 + 0x16]	      6514	cp-demangle.c	FUNCTION_104
0x4009b93	        0x4c896d98	             mov qword [rbp - 0x68], r13	      6173	cp-demangle.c	
0x4009b97	    0xc745a8000000	               mov dword [rbp - 0x58], 0	      6179	cp-demangle.c	
0x4009b9e	          0x8955ac	             mov dword [rbp - 0x54], edx	      6178	cp-demangle.c	
0x4009ba1	          0x4863d2	                         movsxd rdx, edx	      6513	cp-demangle.c	FUNCTION_104
0x4009ba4	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      6184	cp-demangle.c	
0x4009bab	        0x488d1452	                  lea rdx, [rdx + rdx*2]	      6513	cp-demangle.c	FUNCTION_104
0x4009baf	        0x4883e0f0	             and rax, 0xfffffffffffffff0	      6514	cp-demangle.c	FUNCTION_104
0x4009bb3	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      6186	cp-demangle.c	
0x4009bbb	    0xc745c8000000	               mov dword [rbp - 0x38], 0	      6188	cp-demangle.c	
0x4009bc2	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      6189	cp-demangle.c	
0x4009bc9	    0x488d14d51000	                 lea rdx, [rdx*8 + 0x10]	      6513	cp-demangle.c	FUNCTION_104
0x4009bd1	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      6190	cp-demangle.c	
0x4009bd8	          0x4829d4	                            sub rsp, rdx	      6513	cp-demangle.c	FUNCTION_104
0x4009bdb	          0x4889e2	                            mov rdx, rsp	      6513	cp-demangle.c	FUNCTION_104
0x4009bde	          0x4829c4	                            sub rsp, rax	      6514	cp-demangle.c	FUNCTION_104
0x4009be1	        0x488955a0	             mov qword [rbp - 0x60], rdx	      6516	cp-demangle.c	FUNCTION_104
0x4009be5	        0x488965b0	             mov qword [rbp - 0x50], rsp	      6517	cp-demangle.c	FUNCTION_104
0x4009be9	      0xe800000000	                          call 0x4009bee	      6523	cp-demangle.c	FUNCTION_104
0x4009bee	          0x4889c1	                            mov rcx, rax	      6523	cp-demangle.c	FUNCTION_104
0x4009bf1	            0x31c0	                            xor eax, eax	      6528	cp-demangle.c	FUNCTION_104
0x4009bf3	       0xf1f440000	                   nop dword [rax + rax]	      6528	cp-demangle.c	FUNCTION_104
0x4009bf8	          0x4885c9	                           test rcx, rcx	      6529	cp-demangle.c	FUNCTION_104	WHILE_1
0x4009bfb	            0x741d	                            je 0x4009c1a	      6529	cp-demangle.c	FUNCTION_104	WHILE_1
0x4009bfd	          0x833908	                      cmp dword [rcx], 8	      6531	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4009c00	            0x7718	                            ja 0x4009c1a	      6531	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4009c02	            0x8b31	                    mov esi, dword [rcx]	      6531	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4009c04	    0xff24f5000000	                       jmp qword [rsi*8]	      6531	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4009c0b	       0xf1f440000	                   nop dword [rax + rax]	      6531	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4009c10	          0x8b4108	                mov eax, dword [rcx + 8]	      6556	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4009c13	            0x8903	                    mov dword [rbx], eax	      6556	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4009c15	      0xb801000000	                              mov eax, 1	      6557	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4009c1a	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      6565	cp-demangle.c	FUNCTION_104
0x4009c1e	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      6565	cp-demangle.c	FUNCTION_104
0x4009c27	            0x753d	                           jne 0x4009c66	      6565	cp-demangle.c	FUNCTION_104
0x4009c29	        0x488d65e8	                   lea rsp, [rbp - 0x18]	      6565	cp-demangle.c	FUNCTION_104
0x4009c2d	              0x5b	                                 pop rbx	      6565	cp-demangle.c	FUNCTION_104
0x4009c2e	            0x415c	                                 pop r12	      6565	cp-demangle.c	FUNCTION_104
0x4009c30	            0x415d	                                 pop r13	      6565	cp-demangle.c	FUNCTION_104
0x4009c32	              0x5d	                                 pop rbp	      6565	cp-demangle.c	FUNCTION_104
0x4009c33	              0xc3	                                     ret	      6565	cp-demangle.c	FUNCTION_104
0x4009c34	         0xf1f4000	                         nop dword [rax]	      6565	cp-demangle.c	FUNCTION_104
0x4009c38	          0x8b4108	                mov eax, dword [rcx + 8]	      6551	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4009c3b	        0x41890424	                    mov dword [r12], eax	      6551	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4009c3f	      0xb801000000	                              mov eax, 1	      6552	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4009c44	            0xebd4	                           jmp 0x4009c1a	      6554	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4009c46	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6554	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4009c50	        0x488b4910	            mov rcx, qword [rcx + 0x10] 	      6548	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4009c54	            0xeba2	                           jmp 0x4009bf8	      6549	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4009c56	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6549	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4009c60	        0x488b4908	                mov rcx, qword [rcx + 8]	      6544	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4009c64	            0xeb92	                           jmp 0x4009bf8	      6545	cp-demangle.c	FUNCTION_104	WHILE_1	SWITCH_1
0x4009c66	      0xe800000000	                          call 0x4009c6b	      6565	cp-demangle.c	FUNCTION_104
d_number_component	CALL,2:FOR,0:IF,1:ELSE,0:WHILE,0:DO,0:functions,0:SWITCH,0	22
0x40002f0	          0x8b4728	            mov eax, dword [rdi + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x40002f3	          0x3b472c	            cmp eax, dword [rdi + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x40002f6	            0x7d38	                           jge 0x4000330	       933	cp-demangle.c	FUNCTION_3	IF_1
0x40002f8	          0x4863d0	                         movsxd rdx, eax	       935	cp-demangle.c	FUNCTION_3
0x40002fb	              0x53	                                push rbx	      1720	cp-demangle.c	FUNCTION_26
0x40002fc	          0x83c001	                              add eax, 1	       937	cp-demangle.c	FUNCTION_3
0x40002ff	        0x488d0c52	                  lea rcx, [rdx + rdx*2]	       935	cp-demangle.c	FUNCTION_3
0x4000303	        0x488b5720	            mov rdx, qword [rdi + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x4000307	        0x4883c718	                           add rdi, 0x18	       935	cp-demangle.c	FUNCTION_3
0x400030b	        0x488d1cca	                  lea rbx, [rdx + rcx*8]	       935	cp-demangle.c	FUNCTION_3
0x400030f	    0xc74304000000	                  mov dword [rbx + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x4000316	          0x894710	             mov dword [rdi + 0x10], eax	       937	cp-demangle.c	FUNCTION_3
0x4000319	    0xc70341000000	                   mov dword [rbx], 0x41	      1724	cp-demangle.c	FUNCTION_26	IF_1
0x400031f	      0xe81cffffff	                call sym.d_number.isra.0	      1725	cp-demangle.c	FUNCTION_26	IF_1	CALL_2
0x4000324	            0x4898	                                    cdqe	      1725	cp-demangle.c	FUNCTION_26	IF_1	CALL_2
0x4000326	        0x48894308	                mov qword [rbx + 8], rax	      1725	cp-demangle.c	FUNCTION_26	IF_1	CALL_2
0x400032a	          0x4889d8	                            mov rax, rbx	      1725	cp-demangle.c	FUNCTION_26	IF_1	CALL_2
0x400032d	              0x5b	                                 pop rbx	      1728	cp-demangle.c	FUNCTION_26
0x400032e	              0xc3	                                     ret	      1728	cp-demangle.c	FUNCTION_26
0x400032f	              0x90	                                     nop	      1728	cp-demangle.c	FUNCTION_26
0x4000330	            0x31c0	                            xor eax, eax	       934	cp-demangle.c	FUNCTION_3	IF_1
0x4000332	              0xc3	                                     ret	       934	cp-demangle.c	FUNCTION_3	IF_1
d_print_mod_list	CALL,15:FOR,0:IF,7:ELSE,3:WHILE,1:DO,0:functions,0:SWITCH,0	275
0x4005710	            0x4157	                                push r15	      5793	cp-demangle.c	FUNCTION_89
0x4005712	            0x4156	                                push r14	      5793	cp-demangle.c	FUNCTION_89
0x4005714	            0x4155	                                push r13	      5793	cp-demangle.c	FUNCTION_89
0x4005716	            0x4154	                                push r12	      5793	cp-demangle.c	FUNCTION_89
0x4005718	              0x55	                                push rbp	      5793	cp-demangle.c	FUNCTION_89
0x4005719	              0x53	                                push rbx	      5793	cp-demangle.c	FUNCTION_89
0x400571a	        0x4883ec48	                           sub rsp, 0x48	      5793	cp-demangle.c	FUNCTION_89
0x400571e	    0x64488b042528	                mov rax, qword fs:[0x28]	      5793	cp-demangle.c	FUNCTION_89
0x4005727	      0x4889442438	             mov qword [rsp + 0x38], rax	      5793	cp-demangle.c	FUNCTION_89
0x400572c	            0x31c0	                            xor eax, eax	      5793	cp-demangle.c	FUNCTION_89
0x400572e	          0x4885d2	                           test rdx, rdx	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x4005731	     0xf84e1000000	                            je 0x4005818	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x4005737	          0x4889fd	                            mov rbp, rdi	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400573a	    0x8bbf30010000	           mov edi, dword [rdi + 0x130] 	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x4005740	            0x85ff	                           test edi, edi	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x4005742	     0xf85d0000000	                           jne 0x4005818	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x4005748	          0x4189f6	                           mov r14d, esi	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400574b	          0x4889d3	                            mov rbx, rdx	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400574e	          0x4189cd	                           mov r13d, ecx	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x4005751	    0x49bf1f000000	            movabs r15, 0xd00000000001f 	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400575b	            0xeb67	                           jmp 0x40057c4	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x400575d	           0xf1f00	                         nop dword [rax]	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x4005760	        0x490fa3cf	                             bt r15, rcx	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x4005764	            0x724c	                            jb 0x40057b2	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x4005766	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x4005770	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	      5810	cp-demangle.c	FUNCTION_89
0x4005774	          0x83f829	                           cmp eax, 0x29	      5812	cp-demangle.c	FUNCTION_89	IF_3
0x4005777	    0xc74310010000	               mov dword [rbx + 0x10], 1	      5807	cp-demangle.c	FUNCTION_89
0x400577e	    0x4c8ba5200100	           mov r12, qword [rbp + 0x120] 	      5809	cp-demangle.c	FUNCTION_89
0x4005785	    0x48898d200100	           mov qword [rbp + 0x120], rcx 	      5810	cp-demangle.c	FUNCTION_89
0x400578c	     0xf84a9000000	                            je 0x400583b	      5812	cp-demangle.c	FUNCTION_89	IF_3
0x4005792	          0x83f82a	                           cmp eax, 0x2a	      5818	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4
0x4005795	            0x7465	                            je 0x40057fc	      5818	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4
0x4005797	          0x83f802	                              cmp eax, 2	      5824	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x400579a	     0xf84b6000000	                            je 0x4005856	      5824	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x40057a0	          0x4489f6	                           mov esi, r14d	      5863	cp-demangle.c	FUNCTION_89	CALL_14
0x40057a3	          0x4889ef	                            mov rdi, rbp	      5863	cp-demangle.c	FUNCTION_89	CALL_14
0x40057a6	      0xe855f6ffff	                    call sym.d_print_mod	      5863	cp-demangle.c	FUNCTION_89	CALL_14
0x40057ab	    0x4c89a5200100	           mov qword [rbp + 0x120], r12 	      5865	cp-demangle.c	FUNCTION_89
0x40057b2	          0x488b1b	                    mov rbx, qword [rbx]	      5867	cp-demangle.c	FUNCTION_89	CALL_15
0x40057b5	          0x4885db	                           test rbx, rbx	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x40057b8	            0x745e	                            je 0x4005818	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x40057ba	    0x8b9530010000	           mov edx, dword [rbp + 0x130] 	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x40057c0	            0x85d2	                           test edx, edx	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x40057c2	            0x7554	                           jne 0x4005818	      5796	cp-demangle.c	FUNCTION_89	IF_1	CALL_1
0x40057c4	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      5799	cp-demangle.c	FUNCTION_89	IF_2
0x40057c7	            0x85c0	                           test eax, eax	      5799	cp-demangle.c	FUNCTION_89	IF_2
0x40057c9	            0x75e7	                           jne 0x40057b2	      5799	cp-demangle.c	FUNCTION_89	IF_2
0x40057cb	        0x488b5308	                mov rdx, qword [rbx + 8]	      5801	cp-demangle.c	FUNCTION_89	IF_2	CALL_2
0x40057cf	          0x4585ed	                         test r13d, r13d	      5800	cp-demangle.c	FUNCTION_89	IF_2
0x40057d2	            0x8b02	                    mov eax, dword [rdx]	      5801	cp-demangle.c	FUNCTION_89	IF_2	CALL_2
0x40057d4	            0x759a	                           jne 0x4005770	      5800	cp-demangle.c	FUNCTION_89	IF_2
0x40057d6	          0x8d48e4	                   lea ecx, [rax - 0x1c]	      5800	cp-demangle.c	FUNCTION_89	IF_2
0x40057d9	          0x83f933	                           cmp ecx, 0x33	      5800	cp-demangle.c	FUNCTION_89	IF_2
0x40057dc	            0x7682	                           jbe 0x4005760	      5800	cp-demangle.c	FUNCTION_89	IF_2
0x40057de	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	      5810	cp-demangle.c	FUNCTION_89
0x40057e2	          0x83f82a	                           cmp eax, 0x2a	      5818	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4
0x40057e5	    0xc74310010000	               mov dword [rbx + 0x10], 1	      5807	cp-demangle.c	FUNCTION_89
0x40057ec	    0x4c8ba5200100	           mov r12, qword [rbp + 0x120] 	      5809	cp-demangle.c	FUNCTION_89
0x40057f3	    0x48898d200100	           mov qword [rbp + 0x120], rcx 	      5810	cp-demangle.c	FUNCTION_89
0x40057fa	            0x759b	                           jne 0x4005797	      5818	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4
0x40057fc	          0x488b0b	                    mov rcx, qword [rbx]	      5820	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4	CALL_5
0x40057ff	        0x4883c208	                              add rdx, 8	      5820	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4	CALL_5
0x4005803	          0x4489f6	                           mov esi, r14d	      5820	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4	CALL_5
0x4005806	          0x4889ef	                            mov rdi, rbp	      5820	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4	CALL_5
0x4005809	      0xe8a2030000	     call sym.d_print_array_type.isra.10	      5820	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4	CALL_5
0x400580e	    0x4c89a5200100	           mov qword [rbp + 0x120], r12 	      5821	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4
0x4005815	           0xf1f00	                         nop dword [rax]	      5821	cp-demangle.c	FUNCTION_89	ELSE_1	IF_4
0x4005818	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      5868	cp-demangle.c	FUNCTION_89
0x400581d	    0x644833042528	                xor rax, qword fs:[0x28]	      5868	cp-demangle.c	FUNCTION_89
0x4005826	     0xf8577030000	                           jne 0x4005ba3	      5868	cp-demangle.c	FUNCTION_89
0x400582c	        0x4883c448	                           add rsp, 0x48	      5868	cp-demangle.c	FUNCTION_89
0x4005830	              0x5b	                                 pop rbx	      5868	cp-demangle.c	FUNCTION_89
0x4005831	              0x5d	                                 pop rbp	      5868	cp-demangle.c	FUNCTION_89
0x4005832	            0x415c	                                 pop r12	      5868	cp-demangle.c	FUNCTION_89
0x4005834	            0x415d	                                 pop r13	      5868	cp-demangle.c	FUNCTION_89
0x4005836	            0x415e	                                 pop r14	      5868	cp-demangle.c	FUNCTION_89
0x4005838	            0x415f	                                 pop r15	      5868	cp-demangle.c	FUNCTION_89
0x400583a	              0xc3	                                     ret	      5868	cp-demangle.c	FUNCTION_89
0x400583b	          0x488b0b	                    mov rcx, qword [rbx]	      5814	cp-demangle.c	FUNCTION_89	IF_3	CALL_4
0x400583e	        0x4883c210	                           add rdx, 0x10	      5814	cp-demangle.c	FUNCTION_89	IF_3	CALL_4
0x4005842	          0x4489f6	                           mov esi, r14d	      5814	cp-demangle.c	FUNCTION_89	IF_3	CALL_4
0x4005845	          0x4889ef	                            mov rdi, rbp	      5814	cp-demangle.c	FUNCTION_89	IF_3	CALL_4
0x4005848	      0xe833060000	  call sym.d_print_function_type.isra.11	      5814	cp-demangle.c	FUNCTION_89	IF_3	CALL_4
0x400584d	    0x4c89a5200100	           mov qword [rbp + 0x120], r12 	      5815	cp-demangle.c	FUNCTION_89	IF_3
0x4005854	            0xebc2	                           jmp 0x4005818	      5816	cp-demangle.c	FUNCTION_89	IF_3
0x4005856	    0x4c8bad280100	           mov r13, qword [rbp + 0x128] 	      5834	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x400585d	    0x48c785280100	              mov qword [rbp + 0x128], 0	      5835	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x4005868	          0x4489f6	                           mov esi, r14d	      5836	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_6
0x400586b	        0x488b5208	                mov rdx, qword [rdx + 8]	      5836	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_6
0x400586f	          0x4889ef	                            mov rdi, rbp	      5836	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_6
0x4005872	      0xe8d9f4ffff	                   call sym.d_print_comp	      5836	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_6
0x4005877	        0x41f6c604	                            test r14b, 4	      5839	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_6
0x400587b	    0x4c89ad280100	           mov qword [rbp + 0x128], r13 	      5837	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x4005882	    0x488b85000100	           mov rax, qword [rbp + 0x100] 	      5837	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x4005889	     0xf848c000000	                            je 0x400591b	      5839	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_6
0x400588f	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005895	     0xf84d8020000	                            je 0x4005b73	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400589b	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400589f	    0x488995000100	           mov qword [rbp + 0x100], rdx 	      4235	cp-demangle.c	FUNCTION_72
0x40058a6	      0xc64405002e	              mov byte [rbp + rax], 0x2e	      4235	cp-demangle.c	FUNCTION_72
0x40058ab	    0xc68508010000	           mov byte [rbp + 0x108], 0x2e 	      4236	cp-demangle.c	FUNCTION_72
0x40058b2	        0x488b4308	                mov rax, qword [rbx + 8]	      5844	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x40058b6	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      5844	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x40058ba	            0x8b03	                    mov eax, dword [rbx]	      5846	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x40058bc	          0x83f846	                           cmp eax, 0x46	      5846	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x40058bf	     0xf84d4000000	                            je 0x4005999	      5846	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x40058c5	          0x83e81c	                           sub eax, 0x1c	      5846	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x40058c8	          0x83f833	                           cmp eax, 0x33	      5846	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x40058cb	            0x7734	                            ja 0x4005901	      5846	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x40058cd	    0x48ba1f000000	            movabs rdx, 0xd00000000001f 	      5846	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x40058d7	        0x480fa3c2	                             bt rdx, rax	      5846	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x40058db	            0x7324	                           jae 0x4005901	      5846	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x40058dd	      0xbe01000000	                              mov esi, 1	      5846	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x40058e2	    0x660f1f440000	                    nop word [rax + rax]	      5846	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x40058e8	        0x488b5b08	                mov rbx, qword [rbx + 8]	      5855	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	WHILE_1
0x40058ec	            0x8b03	                    mov eax, dword [rbx]	      5855	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	WHILE_1
0x40058ee	          0x8d48e4	                   lea ecx, [rax - 0x1c]	      5855	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	WHILE_1
0x40058f1	          0x83f933	                           cmp ecx, 0x33	      5855	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	WHILE_1
0x40058f4	            0x770b	                            ja 0x4005901	      5855	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	WHILE_1
0x40058f6	          0x4889f0	                            mov rax, rsi	      5855	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	WHILE_1
0x40058f9	          0x48d3e0	                             shl rax, cl	      5855	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	WHILE_1
0x40058fc	          0x4885d0	                           test rax, rdx	      5855	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	WHILE_1
0x40058ff	            0x75e7	                           jne 0x40058e8	      5855	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	WHILE_1
0x4005901	          0x4889da	                            mov rdx, rbx	      5857	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_13
0x4005904	          0x4489f6	                           mov esi, r14d	      5857	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_13
0x4005907	          0x4889ef	                            mov rdi, rbp	      5857	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_13
0x400590a	      0xe841f4ffff	                   call sym.d_print_comp	      5857	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	CALL_13
0x400590f	    0x4c89a5200100	           mov qword [rbp + 0x120], r12 	      5859	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x4005916	      0xe9fdfeffff	                           jmp 0x4005818	      5860	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x400591b	    0x41bd00000000	                             mov r13d, 0	      5860	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x4005921	      0xb900000000	                              mov ecx, 0	      5860	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x4005926	            0xeb2f	                           jmp 0x4005957	      5860	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x4005928	     0xf1f84000000	                   nop dword [rax + rax]	      5860	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5
0x4005930	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005933	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005937	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400593b	    0x488985000100	           mov qword [rbp + 0x100], rax 	      4235	cp-demangle.c	FUNCTION_72
0x4005942	      0x44887c1500	              mov byte [rbp + rdx], r15b	      4235	cp-demangle.c	FUNCTION_72
0x4005947	          0x4c39e9	                            cmp rcx, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x400594a	    0x4488bd080100	           mov byte [rbp + 0x108], r15b 	      4236	cp-demangle.c	FUNCTION_72
0x4005951	     0xf845bffffff	                            je 0x40058b2	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005957	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400595d	      0x450fb67d00	                  movzx r15d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4005962	            0x75cc	                           jne 0x4005930	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005964	        0x48890c24	                    mov qword [rsp], rcx	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005968	    0x488b95180100	           mov rdx, qword [rbp + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400596f	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005974	    0xc685ff000000	                mov byte [rbp + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400597b	          0x4889ef	                            mov rdi, rbp	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400597e	    0xff9510010000	                call qword [rbp + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005984	    0x488385400100	              add qword [rbp + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x400598c	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4005991	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4005993	        0x488b0c24	                    mov rcx, qword [rsp]	      4224	cp-demangle.c	FUNCTION_71
0x4005997	            0xeb9e	                           jmp 0x4005937	      4224	cp-demangle.c	FUNCTION_71
0x4005999	    0x488b85000100	           mov rax, qword [rbp + 0x100] 	      4224	cp-demangle.c	FUNCTION_71
0x40059a0	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x40059a6	      0xb900000000	                              mov ecx, 0	      4224	cp-demangle.c	FUNCTION_71
0x40059ab	            0xeb23	                           jmp 0x40059d0	      4224	cp-demangle.c	FUNCTION_71
0x40059ad	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40059b0	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40059b4	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40059b8	    0x488985000100	           mov qword [rbp + 0x100], rax 	      4235	cp-demangle.c	FUNCTION_72
0x40059bf	      0x44887c1500	              mov byte [rbp + rdx], r15b	      4235	cp-demangle.c	FUNCTION_72
0x40059c4	          0x4c39e9	                            cmp rcx, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40059c7	    0x4488bd080100	           mov byte [rbp + 0x108], r15b 	      4236	cp-demangle.c	FUNCTION_72
0x40059ce	            0x7442	                            je 0x4005a12	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x40059d0	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40059d6	      0x450fb67d00	                  movzx r15d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x40059db	            0x75d0	                           jne 0x40059ad	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40059dd	        0x48890c24	                    mov qword [rsp], rcx	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x40059e1	    0x488b95180100	           mov rdx, qword [rbp + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40059e8	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40059ed	    0xc685ff000000	                mov byte [rbp + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40059f4	          0x4889ef	                            mov rdi, rbp	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40059f7	    0xff9510010000	                call qword [rbp + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40059fd	    0x488385400100	              add qword [rbp + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005a05	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4005a0a	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4005a0c	        0x488b0c24	                    mov rcx, qword [rsp]	      4224	cp-demangle.c	FUNCTION_71
0x4005a10	            0xeba2	                           jmp 0x40059b4	      4224	cp-demangle.c	FUNCTION_71
0x4005a12	          0x8b4310	            mov eax, dword [rbx + 0x10] 	        33	stdio2.h	FUNCTION_109	CALL_1
0x4005a15	      0x4c8d4c2410	                    lea r9, [rsp + 0x10]	        33	stdio2.h	FUNCTION_109	CALL_1
0x4005a1a	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_109	CALL_1
0x4005a1f	      0xba19000000	                           mov edx, 0x19	        33	stdio2.h	FUNCTION_109	CALL_1
0x4005a24	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_109	CALL_1
0x4005a29	          0x4c89cf	                             mov rdi, r9	        33	stdio2.h	FUNCTION_109	CALL_1
0x4005a2c	        0x4c890c24	                     mov qword [rsp], r9	        33	stdio2.h	FUNCTION_109	CALL_1
0x4005a30	        0x448d4001	                      lea r8d, [rax + 1]	        33	stdio2.h	FUNCTION_109	CALL_1
0x4005a34	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_109	CALL_1
0x4005a36	      0xe800000000	                          call 0x4005a3b	        33	stdio2.h	FUNCTION_109	CALL_1
0x4005a3b	        0x4c8b0c24	                     mov r9, qword [rsp]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4005a3f	          0x4c89c9	                             mov rcx, r9	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4005a42	            0x8b11	                    mov edx, dword [rcx]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4005a44	        0x4883c104	                              add rcx, 4	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4005a48	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4005a4e	            0xf7d2	                                 not edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4005a50	            0x21d0	                            and eax, edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4005a52	      0x2580808080	                     and eax, 0x80808080	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4005a57	            0x74e9	                            je 0x4005a42	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4005a59	            0x89c2	                            mov edx, eax	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4005a5b	          0xc1ea10	                           shr edx, 0x10	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4005a5e	      0xa980800000	                        test eax, 0x8080	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4005a63	           0xf44c2	                          cmove eax, edx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4005a66	        0x488d5102	                      lea rdx, [rcx + 2]	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4005a6a	            0x89c7	                            mov edi, eax	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4005a6c	        0x480f44ca	                          cmove rcx, rdx	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4005a70	          0x4000c7	                             add dil, al	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4005a73	    0x488b85000100	           mov rax, qword [rbp + 0x100] 	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4005a7a	        0x4883d903	                              sbb rcx, 3	      4251	cp-demangle.c	FUNCTION_74	CALL_2
0x4005a7e	          0x4c29c9	                             sub rcx, r9	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005a81	            0x747c	                            je 0x4005aff	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005a83	          0x4531ed	                          xor r13d, r13d	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005a86	            0xeb2b	                           jmp 0x4005ab3	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005a88	     0xf1f84000000	                   nop dword [rax + rax]	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005a90	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005a93	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005a97	        0x4983c501	                              add r13, 1	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005a9b	    0x488985000100	           mov qword [rbp + 0x100], rax 	      4235	cp-demangle.c	FUNCTION_72
0x4005aa2	      0x44887c1500	              mov byte [rbp + rdx], r15b	      4235	cp-demangle.c	FUNCTION_72
0x4005aa7	          0x4c39e9	                            cmp rcx, r13	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005aaa	    0x4488bd080100	           mov byte [rbp + 0x108], r15b 	      4236	cp-demangle.c	FUNCTION_72
0x4005ab1	            0x744c	                            je 0x4005aff	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005ab3	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005ab9	      0x470fb63c29	             movzx r15d, byte [r9 + r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4005abe	            0x75d0	                           jne 0x4005a90	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005ac0	      0x4c894c2408	                 mov qword [rsp + 8], r9	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005ac5	        0x48890c24	                    mov qword [rsp], rcx	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005ac9	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005ace	    0x488b95180100	           mov rdx, qword [rbp + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005ad5	    0xc685ff000000	                mov byte [rbp + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005adc	          0x4889ef	                            mov rdi, rbp	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005adf	    0xff9510010000	                call qword [rbp + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005ae5	    0x488385400100	              add qword [rbp + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005aed	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4005af2	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4005af4	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      4224	cp-demangle.c	FUNCTION_71
0x4005af9	        0x488b0c24	                    mov rcx, qword [rsp]	      4224	cp-demangle.c	FUNCTION_71
0x4005afd	            0xeb98	                           jmp 0x4005a97	      4224	cp-demangle.c	FUNCTION_71
0x4005aff	    0x41bd00000000	                             mov r13d, 0	      4224	cp-demangle.c	FUNCTION_71
0x4005b05	            0xeb27	                           jmp 0x4005b2e	      4224	cp-demangle.c	FUNCTION_71
0x4005b07	          0x4889c2	                            mov rdx, rax	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005b0a	        0x4883c001	                              add rax, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005b0e	        0x4983c501	                              add r13, 1	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005b12	    0x488985000100	           mov qword [rbp + 0x100], rax 	      4235	cp-demangle.c	FUNCTION_72
0x4005b19	      0x44887c1500	              mov byte [rbp + rdx], r15b	      4235	cp-demangle.c	FUNCTION_72
0x4005b1e	    0x4981fd000000	                              cmp r13, 0	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005b25	    0x4488bd080100	           mov byte [rbp + 0x108], r15b 	      4236	cp-demangle.c	FUNCTION_72
0x4005b2c	            0x743a	                            je 0x4005b68	      4244	cp-demangle.c	FUNCTION_73	FOR_1
0x4005b2e	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005b34	      0x450fb67d00	                  movzx r15d, byte [r13]	      4245	cp-demangle.c	FUNCTION_73	CALL_1
0x4005b39	            0x75cc	                           jne 0x4005b07	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4005b3b	    0x488b95180100	           mov rdx, qword [rbp + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005b42	    0xc685ff000000	                mov byte [rbp + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005b49	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005b4e	          0x4889ef	                            mov rdi, rbp	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005b51	    0xff9510010000	                call qword [rbp + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005b57	    0x488385400100	              add qword [rbp + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005b5f	      0xb801000000	                              mov eax, 1	      4224	cp-demangle.c	FUNCTION_71
0x4005b64	            0x31d2	                            xor edx, edx	      4224	cp-demangle.c	FUNCTION_71
0x4005b66	            0xeba6	                           jmp 0x4005b0e	      4224	cp-demangle.c	FUNCTION_71
0x4005b68	        0x488b5b08	                mov rbx, qword [rbx + 8]	      5851	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x4005b6c	            0x8b03	                    mov eax, dword [rbx]	      5851	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x4005b6e	      0xe952fdffff	                           jmp 0x40058c5	      5851	cp-demangle.c	FUNCTION_89	ELSE_2	IF_5	IF_7
0x4005b73	    0x488b95180100	           mov rdx, qword [rbp + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005b7a	    0xc685ff000000	                mov byte [rbp + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x4005b81	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005b86	          0x4889ef	                            mov rdi, rbp	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005b89	    0xff9510010000	                call qword [rbp + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4005b8f	    0x488385400100	              add qword [rbp + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4005b97	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4005b9c	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4005b9e	      0xe9fcfcffff	                           jmp 0x400589f	      4224	cp-demangle.c	FUNCTION_71
0x4005ba3	      0xe800000000	                          call 0x4005ba8	      5868	cp-demangle.c	FUNCTION_89
java_demangle_v3	CALL,1:FOR,0:IF,0:ELSE,0:WHILE,0:DO,0:functions,0:SWITCH,0	13
0x400a2f0	        0x4883ec18	                           sub rsp, 0x18	      6474	cp-demangle.c	FUNCTION_102
0x400a2f4	      0xbe25000000	                           mov esi, 0x25	      6477	cp-demangle.c	FUNCTION_102	CALL_1
0x400a2f9	          0x4889e2	                            mov rdx, rsp	      6477	cp-demangle.c	FUNCTION_102	CALL_1
0x400a2fc	    0x64488b042528	                mov rax, qword fs:[0x28]	      6474	cp-demangle.c	FUNCTION_102
0x400a305	      0x4889442408	                mov qword [rsp + 8], rax	      6474	cp-demangle.c	FUNCTION_102
0x400a30a	            0x31c0	                            xor eax, eax	      6474	cp-demangle.c	FUNCTION_102
0x400a30c	      0xe86ffdffff	                     call sym.d_demangle	      6477	cp-demangle.c	FUNCTION_102	CALL_1
0x400a311	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      6478	cp-demangle.c	FUNCTION_102
0x400a316	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6478	cp-demangle.c	FUNCTION_102
0x400a31f	            0x7505	                           jne 0x400a326	      6478	cp-demangle.c	FUNCTION_102
0x400a321	        0x4883c418	                           add rsp, 0x18	      6478	cp-demangle.c	FUNCTION_102
0x400a325	              0xc3	                                     ret	      6478	cp-demangle.c	FUNCTION_102
0x400a326	      0xe800000000	                          call 0x400a32b	      6478	cp-demangle.c	FUNCTION_102
d_growable_string_callback_adapter	CALL,1:FOR,0:IF,0:ELSE,0:WHILE,0:DO,0:functions,0:SWITCH,0	66
0x40009e0	            0x4155	                                push r13	      4021	cp-demangle.c	FUNCTION_66
0x40009e2	            0x4154	                                push r12	      4021	cp-demangle.c	FUNCTION_66
0x40009e4	          0x4989fd	                            mov r13, rdi	      4021	cp-demangle.c	FUNCTION_66
0x40009e7	              0x55	                                push rbp	      4021	cp-demangle.c	FUNCTION_66
0x40009e8	              0x53	                                push rbx	      4021	cp-demangle.c	FUNCTION_66
0x40009e9	          0x4989f4	                            mov r12, rsi	      4021	cp-demangle.c	FUNCTION_66
0x40009ec	          0x4889d5	                            mov rbp, rdx	      4021	cp-demangle.c	FUNCTION_66
0x40009ef	        0x4883ec08	                              sub rsp, 8	      4021	cp-demangle.c	FUNCTION_66
0x40009f3	        0x488b4208	                mov rax, qword [rdx + 8]	      4005	cp-demangle.c	FUNCTION_65
0x40009f7	        0x488b5a10	            mov rbx, qword [rdx + 0x10] 	      4006	cp-demangle.c	FUNCTION_65	IF_1
0x40009fb	      0x488d440601	                lea rax, [rsi + rax + 1]	      4005	cp-demangle.c	FUNCTION_65
0x4000a00	          0x4839d8	                            cmp rax, rbx	      4006	cp-demangle.c	FUNCTION_65	IF_1
0x4000a03	            0x774b	                            ja 0x4000a50	      4006	cp-demangle.c	FUNCTION_65	IF_1
0x4000a05	          0x8b4518	            mov eax, dword [rbp + 0x18] 	      4009	cp-demangle.c	FUNCTION_65	IF_2
0x4000a08	            0x85c0	                           test eax, eax	      4009	cp-demangle.c	FUNCTION_65	IF_2
0x4000a0a	            0x7414	                            je 0x4000a20	      4009	cp-demangle.c	FUNCTION_65	IF_2
0x4000a0c	        0x4883c408	                              add rsp, 8	      4025	cp-demangle.c	FUNCTION_66
0x4000a10	              0x5b	                                 pop rbx	      4025	cp-demangle.c	FUNCTION_66
0x4000a11	              0x5d	                                 pop rbp	      4025	cp-demangle.c	FUNCTION_66
0x4000a12	            0x415c	                                 pop r12	      4025	cp-demangle.c	FUNCTION_66
0x4000a14	            0x415d	                                 pop r13	      4025	cp-demangle.c	FUNCTION_66
0x4000a16	              0xc3	                                     ret	      4025	cp-demangle.c	FUNCTION_66
0x4000a17	    0x660f1f840000	                    nop word [rax + rax]	      4025	cp-demangle.c	FUNCTION_66
0x4000a20	        0x488b7d08	                mov rdi, qword [rbp + 8]	        53	string3.h	FUNCTION_126	CALL_3
0x4000a24	        0x48037d00	                    add rdi, qword [rbp]	        53	string3.h	FUNCTION_126	CALL_3
0x4000a28	          0x4c89e2	                            mov rdx, r12	        53	string3.h	FUNCTION_126	CALL_3
0x4000a2b	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_126	CALL_3
0x4000a2e	      0xe800000000	                          call 0x4000a33	        53	string3.h	FUNCTION_126	CALL_3
0x4000a33	          0x4c89e0	                            mov rax, r12	      4013	cp-demangle.c	FUNCTION_65
0x4000a36	        0x48034500	                    add rax, qword [rbp]	      4013	cp-demangle.c	FUNCTION_65
0x4000a3a	        0x48034508	                add rax, qword [rbp + 8]	      4013	cp-demangle.c	FUNCTION_65
0x4000a3e	          0xc60000	                       mov byte [rax], 0	      4013	cp-demangle.c	FUNCTION_65
0x4000a41	        0x4c016508	                add qword [rbp + 8], r12	      4014	cp-demangle.c	FUNCTION_65
0x4000a45	        0x4883c408	                              add rsp, 8	      4025	cp-demangle.c	FUNCTION_66
0x4000a49	              0x5b	                                 pop rbx	      4025	cp-demangle.c	FUNCTION_66
0x4000a4a	              0x5d	                                 pop rbp	      4025	cp-demangle.c	FUNCTION_66
0x4000a4b	            0x415c	                                 pop r12	      4025	cp-demangle.c	FUNCTION_66
0x4000a4d	            0x415d	                                 pop r13	      4025	cp-demangle.c	FUNCTION_66
0x4000a4f	              0xc3	                                     ret	      4025	cp-demangle.c	FUNCTION_66
0x4000a50	          0x8b5218	            mov edx, dword [rdx + 0x18] 	      3973	cp-demangle.c	FUNCTION_64	IF_1
0x4000a53	            0x85d2	                           test edx, edx	      3973	cp-demangle.c	FUNCTION_64	IF_1
0x4000a55	            0x75b5	                           jne 0x4000a0c	      3973	cp-demangle.c	FUNCTION_64	IF_1
0x4000a57	          0x4885db	                           test rbx, rbx	      3979	cp-demangle.c	FUNCTION_64
0x4000a5a	            0x7514	                           jne 0x4000a70	      3979	cp-demangle.c	FUNCTION_64
0x4000a5c	        0x4883f802	                              cmp rax, 2	      3980	cp-demangle.c	FUNCTION_64	WHILE_1
0x4000a60	      0xbb02000000	                              mov ebx, 2	      3979	cp-demangle.c	FUNCTION_64
0x4000a65	            0x7611	                           jbe 0x4000a78	      3980	cp-demangle.c	FUNCTION_64	WHILE_1
0x4000a67	    0x660f1f840000	                    nop word [rax + rax]	      3980	cp-demangle.c	FUNCTION_64	WHILE_1
0x4000a70	          0x4801db	                            add rbx, rbx	      3981	cp-demangle.c	FUNCTION_64	WHILE_1
0x4000a73	          0x4839d8	                            cmp rax, rbx	      3980	cp-demangle.c	FUNCTION_64	WHILE_1
0x4000a76	            0x77f8	                            ja 0x4000a70	      3980	cp-demangle.c	FUNCTION_64	WHILE_1
0x4000a78	        0x488b7d00	                    mov rdi, qword [rbp]	      3983	cp-demangle.c	FUNCTION_64	CALL_1
0x4000a7c	          0x4889de	                            mov rsi, rbx	      3983	cp-demangle.c	FUNCTION_64	CALL_1
0x4000a7f	      0xe800000000	                          call 0x4000a84	      3983	cp-demangle.c	FUNCTION_64	CALL_1
0x4000a84	          0x4885c0	                           test rax, rax	      3984	cp-demangle.c	FUNCTION_64	IF_2
0x4000a87	            0x740d	                            je 0x4000a96	      3984	cp-demangle.c	FUNCTION_64	IF_2
0x4000a89	        0x48894500	                    mov qword [rbp], rax	      3993	cp-demangle.c	FUNCTION_64
0x4000a8d	        0x48895d10	            mov qword [rbp + 0x10], rbx 	      3994	cp-demangle.c	FUNCTION_64
0x4000a91	      0xe96fffffff	                           jmp 0x4000a05	      3994	cp-demangle.c	FUNCTION_64
0x4000a96	        0x488b7d00	                    mov rdi, qword [rbp]	      3986	cp-demangle.c	FUNCTION_64	IF_2	CALL_2
0x4000a9a	      0xe800000000	                          call 0x4000a9f	      3986	cp-demangle.c	FUNCTION_64	IF_2	CALL_2
0x4000a9f	    0x48c745000000	                      mov qword [rbp], 0	      3987	cp-demangle.c	FUNCTION_64	IF_2
0x4000aa7	    0x48c745080000	                  mov qword [rbp + 8], 0	      3988	cp-demangle.c	FUNCTION_64	IF_2
0x4000aaf	    0x48c745100000	               mov qword [rbp + 0x10], 0	      3989	cp-demangle.c	FUNCTION_64	IF_2
0x4000ab7	    0xc74518010000	               mov dword [rbp + 0x18], 1	      3990	cp-demangle.c	FUNCTION_64	IF_2
0x4000abe	      0xe949ffffff	                           jmp 0x4000a0c	      3990	cp-demangle.c	FUNCTION_64	IF_2
is_gnu_v3_mangled_dtor	CALL,1:FOR,0:IF,1:ELSE,0:WHILE,0:DO,0:functions,0:SWITCH,0	17
0x400a390	        0x4883ec18	                           sub rsp, 0x18	      6587	cp-demangle.c	FUNCTION_106
0x400a394	      0x488d542404	                      lea rdx, [rsp + 4]	      6591	cp-demangle.c	FUNCTION_106	IF_1	CALL_1
0x400a399	          0x4889e6	                            mov rsi, rsp	      6591	cp-demangle.c	FUNCTION_106	IF_1	CALL_1
0x400a39c	    0x64488b042528	                mov rax, qword fs:[0x28]	      6587	cp-demangle.c	FUNCTION_106
0x400a3a5	      0x4889442408	                mov qword [rsp + 8], rax	      6587	cp-demangle.c	FUNCTION_106
0x400a3aa	            0x31c0	                            xor eax, eax	      6587	cp-demangle.c	FUNCTION_106
0x400a3ac	      0xe87ff7ffff	                call sym.is_ctor_or_dtor	      6591	cp-demangle.c	FUNCTION_106	IF_1	CALL_1
0x400a3b1	            0x31d2	                            xor edx, edx	      6592	cp-demangle.c	FUNCTION_106	IF_1
0x400a3b3	            0x85c0	                           test eax, eax	      6593	cp-demangle.c	FUNCTION_106
0x400a3b5	       0xf45542404	             cmovne edx, dword [rsp + 4]	      6593	cp-demangle.c	FUNCTION_106
0x400a3ba	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      6594	cp-demangle.c	FUNCTION_106
0x400a3bf	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6594	cp-demangle.c	FUNCTION_106
0x400a3c8	            0x7507	                           jne 0x400a3d1	      6594	cp-demangle.c	FUNCTION_106
0x400a3ca	            0x89d0	                            mov eax, edx	      6594	cp-demangle.c	FUNCTION_106
0x400a3cc	        0x4883c418	                           add rsp, 0x18	      6594	cp-demangle.c	FUNCTION_106
0x400a3d0	              0xc3	                                     ret	      6594	cp-demangle.c	FUNCTION_106
0x400a3d1	      0xe800000000	         call section_end..text.unlikely	      6594	cp-demangle.c	FUNCTION_106
d_template_args_1	CALL,7:FOR,0:IF,4:ELSE,0:WHILE,1:DO,0:functions,0:SWITCH,0	96
0x4008b10	            0x4155	                                push r13	      3119	cp-demangle.c	FUNCTION_47
0x4008b12	            0x4154	                                push r12	      3119	cp-demangle.c	FUNCTION_47
0x4008b14	              0x55	                                push rbp	      3119	cp-demangle.c	FUNCTION_47
0x4008b15	              0x53	                                push rbx	      3119	cp-demangle.c	FUNCTION_47
0x4008b16	          0x4889fb	                            mov rbx, rdi	      3119	cp-demangle.c	FUNCTION_47
0x4008b19	        0x4883ec18	                           sub rsp, 0x18	      3119	cp-demangle.c	FUNCTION_47
0x4008b1d	        0x488b5718	            mov rdx, qword [rdi + 0x18] 	      3129	cp-demangle.c	FUNCTION_47	IF_1	CALL_1
0x4008b21	        0x4c8b6740	            mov r12, qword [rdi + 0x40] 	      3127	cp-demangle.c	FUNCTION_47
0x4008b25	    0x64488b042528	                mov rax, qword fs:[0x28]	      3119	cp-demangle.c	FUNCTION_47
0x4008b2e	      0x4889442408	                mov qword [rsp + 8], rax	      3119	cp-demangle.c	FUNCTION_47
0x4008b33	            0x31c0	                            xor eax, eax	      3119	cp-demangle.c	FUNCTION_47
0x4008b35	           0xfb602	                   movzx eax, byte [rdx]	      3129	cp-demangle.c	FUNCTION_47	IF_1	CALL_1
0x4008b38	            0x3c45	                            cmp al, 0x45	      3129	cp-demangle.c	FUNCTION_47	IF_1	CALL_1
0x4008b3a	     0xf84f2000000	                            je 0x4008c32	      3129	cp-demangle.c	FUNCTION_47	IF_1	CALL_1
0x4008b40	    0x48c704240000	                      mov qword [rsp], 0	      3136	cp-demangle.c	FUNCTION_47
0x4008b48	          0x4889e5	                            mov rbp, rsp	      3137	cp-demangle.c	FUNCTION_47
0x4008b4b	            0xeb49	                           jmp 0x4008b96	      3137	cp-demangle.c	FUNCTION_47
0x4008b4d	           0xf1f00	                         nop dword [rax]	      3137	cp-demangle.c	FUNCTION_47
0x4008b50	          0x83e849	                           sub eax, 0x49	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x4008b53	            0x3c01	                               cmp al, 1	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x4008b55	     0xf87a5000000	                            ja 0x4008c00	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x4008b5b	          0x4889df	                            mov rdi, rbx	      3188	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_6
0x4008b5e	      0xe80d010000	                call sym.d_template_args	      3188	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_6
0x4008b63	          0x4889c2	                            mov rdx, rax	      3188	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_6
0x4008b66	          0x4885d2	                           test rdx, rdx	      3143	cp-demangle.c	FUNCTION_47	WHILE_1	IF_2
0x4008b69	            0x745d	                            je 0x4008bc8	      3143	cp-demangle.c	FUNCTION_47	WHILE_1	IF_2
0x4008b6b	            0x31c9	                            xor ecx, ecx	      3146	cp-demangle.c	FUNCTION_47	WHILE_1	CALL_5
0x4008b6d	      0xbe2f000000	                           mov esi, 0x2f	      3146	cp-demangle.c	FUNCTION_47	WHILE_1	CALL_5
0x4008b72	          0x4889df	                            mov rdi, rbx	      3146	cp-demangle.c	FUNCTION_47	WHILE_1	CALL_5
0x4008b75	      0xe8c674ffff	                    call sym.d_make_comp	      3146	cp-demangle.c	FUNCTION_47	WHILE_1	CALL_5
0x4008b7a	          0x4885c0	                           test rax, rax	      3147	cp-demangle.c	FUNCTION_47	WHILE_1	IF_3
0x4008b7d	        0x48894500	                    mov qword [rbp], rax	      3146	cp-demangle.c	FUNCTION_47	WHILE_1	CALL_5
0x4008b81	            0x7445	                            je 0x4008bc8	      3147	cp-demangle.c	FUNCTION_47	WHILE_1	IF_3
0x4008b83	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      3151	cp-demangle.c	FUNCTION_47	WHILE_1	IF_4	CALL_6
0x4008b87	        0x488d6810	                   lea rbp, [rax + 0x10]	      3149	cp-demangle.c	FUNCTION_47	WHILE_1
0x4008b8b	           0xfb602	                   movzx eax, byte [rdx]	      3151	cp-demangle.c	FUNCTION_47	WHILE_1	IF_4	CALL_6
0x4008b8e	            0x3c45	                            cmp al, 0x45	      3151	cp-demangle.c	FUNCTION_47	WHILE_1	IF_4	CALL_6
0x4008b90	     0xf848a000000	                            je 0x4008c20	      3151	cp-demangle.c	FUNCTION_47	WHILE_1	IF_4	CALL_6
0x4008b96	            0x3c4c	                            cmp al, 0x4c	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x4008b98	            0x7476	                            je 0x4008c10	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x4008b9a	            0x7eb4	                           jle 0x4008b50	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x4008b9c	            0x3c58	                            cmp al, 0x58	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x4008b9e	            0x7560	                           jne 0x4008c00	      3173	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_1
0x4008ba0	        0x4883c201	                              add rdx, 1	      3176	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_2
0x4008ba4	        0x448b6b4c	           mov r13d, dword [rbx + 0x4c] 	      3505	cp-demangle.c	FUNCTION_52
0x4008ba8	          0x4889df	                            mov rdi, rbx	      3508	cp-demangle.c	FUNCTION_52	CALL_1
0x4008bab	        0x48895318	             mov qword [rbx + 0x18], rdx	      3176	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_2
0x4008baf	    0xc7434c010000	               mov dword [rbx + 0x4c], 1	      3507	cp-demangle.c	FUNCTION_52
0x4008bb6	      0xe875f6ffff	                 call sym.d_expression_1	      3508	cp-demangle.c	FUNCTION_52	CALL_1
0x4008bbb	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      3178	cp-demangle.c	FUNCTION_48	SWITCH_1	IF_1	CALL_4
0x4008bbf	        0x44896b4c	            mov dword [rbx + 0x4c], r13d	      3509	cp-demangle.c	FUNCTION_52
0x4008bc3	          0x803a45	                    cmp byte [rdx], 0x45	      3178	cp-demangle.c	FUNCTION_48	SWITCH_1	IF_1	CALL_4
0x4008bc6	            0x7428	                            je 0x4008bf0	      3178	cp-demangle.c	FUNCTION_48	SWITCH_1	IF_1	CALL_4
0x4008bc8	            0x31c0	                            xor eax, eax	      3144	cp-demangle.c	FUNCTION_47	WHILE_1	IF_2
0x4008bca	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3161	cp-demangle.c	FUNCTION_47
0x4008bcf	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3161	cp-demangle.c	FUNCTION_47
0x4008bd8	     0xf8584000000	                           jne 0x4008c62	      3161	cp-demangle.c	FUNCTION_47
0x4008bde	        0x4883c418	                           add rsp, 0x18	      3161	cp-demangle.c	FUNCTION_47
0x4008be2	              0x5b	                                 pop rbx	      3161	cp-demangle.c	FUNCTION_47
0x4008be3	              0x5d	                                 pop rbp	      3161	cp-demangle.c	FUNCTION_47
0x4008be4	            0x415c	                                 pop r12	      3161	cp-demangle.c	FUNCTION_47
0x4008be6	            0x415d	                                 pop r13	      3161	cp-demangle.c	FUNCTION_47
0x4008be8	              0xc3	                                     ret	      3161	cp-demangle.c	FUNCTION_47
0x4008be9	     0xf1f80000000	                         nop dword [rax]	      3161	cp-demangle.c	FUNCTION_47
0x4008bf0	        0x4883c201	                              add rdx, 1	      3178	cp-demangle.c	FUNCTION_48	SWITCH_1	IF_1	CALL_4
0x4008bf4	        0x48895318	             mov qword [rbx + 0x18], rdx	      3178	cp-demangle.c	FUNCTION_48	SWITCH_1	IF_1	CALL_4
0x4008bf8	          0x4889c2	                            mov rdx, rax	      3180	cp-demangle.c	FUNCTION_48	SWITCH_1
0x4008bfb	      0xe966ffffff	                           jmp 0x4008b66	      3180	cp-demangle.c	FUNCTION_48	SWITCH_1
0x4008c00	          0x4889df	                            mov rdi, rbx	      3191	cp-demangle.c	FUNCTION_48	SWITCH_1
0x4008c03	      0xe800000000	                          call 0x4008c08	      3191	cp-demangle.c	FUNCTION_48	SWITCH_1
0x4008c08	          0x4889c2	                            mov rdx, rax	      3191	cp-demangle.c	FUNCTION_48	SWITCH_1
0x4008c0b	      0xe956ffffff	                           jmp 0x4008b66	      3191	cp-demangle.c	FUNCTION_48	SWITCH_1
0x4008c10	          0x4889df	                            mov rdi, rbx	      3183	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_5
0x4008c13	      0xe8080e0000	                 call sym.d_expr_primary	      3183	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_5
0x4008c18	          0x4889c2	                            mov rdx, rax	      3183	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_5
0x4008c1b	      0xe946ffffff	                           jmp 0x4008b66	      3183	cp-demangle.c	FUNCTION_48	SWITCH_1	CALL_5
0x4008c20	        0x4883c201	                              add rdx, 1	      3153	cp-demangle.c	FUNCTION_47	WHILE_1	IF_4	CALL_7
0x4008c24	        0x4c896340	             mov qword [rbx + 0x40], r12	      3158	cp-demangle.c	FUNCTION_47
0x4008c28	        0x488b0424	                    mov rax, qword [rsp]	      3160	cp-demangle.c	FUNCTION_47
0x4008c2c	        0x48895318	             mov qword [rbx + 0x18], rdx	      3153	cp-demangle.c	FUNCTION_47	WHILE_1	IF_4	CALL_7
0x4008c30	            0xeb98	                           jmp 0x4008bca	      3160	cp-demangle.c	FUNCTION_47
0x4008c32	        0x4883c201	                              add rdx, 1	      3132	cp-demangle.c	FUNCTION_47	IF_1	CALL_2
0x4008c36	      0x488b442408	                mov rax, qword [rsp + 8]	      3133	cp-demangle.c	FUNCTION_47	IF_1	CALL_3
0x4008c3b	    0x644833042528	                xor rax, qword fs:[0x28]	      3133	cp-demangle.c	FUNCTION_47	IF_1	CALL_3
0x4008c44	        0x48895718	             mov qword [rdi + 0x18], rdx	      3132	cp-demangle.c	FUNCTION_47	IF_1	CALL_2
0x4008c48	            0x7518	                           jne 0x4008c62	      3133	cp-demangle.c	FUNCTION_47	IF_1	CALL_3
0x4008c4a	        0x4883c418	                           add rsp, 0x18	      3161	cp-demangle.c	FUNCTION_47
0x4008c4e	            0x31c9	                            xor ecx, ecx	      3133	cp-demangle.c	FUNCTION_47	IF_1	CALL_3
0x4008c50	            0x31d2	                            xor edx, edx	      3133	cp-demangle.c	FUNCTION_47	IF_1	CALL_3
0x4008c52	              0x5b	                                 pop rbx	      3161	cp-demangle.c	FUNCTION_47
0x4008c53	              0x5d	                                 pop rbp	      3161	cp-demangle.c	FUNCTION_47
0x4008c54	            0x415c	                                 pop r12	      3161	cp-demangle.c	FUNCTION_47
0x4008c56	            0x415d	                                 pop r13	      3161	cp-demangle.c	FUNCTION_47
0x4008c58	      0xbe2f000000	                           mov esi, 0x2f	      3133	cp-demangle.c	FUNCTION_47	IF_1	CALL_3
0x4008c5d	      0xe9de73ffff	                     jmp sym.d_make_comp	      3133	cp-demangle.c	FUNCTION_47	IF_1	CALL_3
0x4008c62	      0xe800000000	                          call 0x4008c67	      3161	cp-demangle.c	FUNCTION_47
d_print_subexpr	CALL,3:FOR,0:IF,3:ELSE,0:WHILE,0:DO,0:functions,0:SWITCH,0	59
0x4006240	            0x4154	                                push r12	      4484	cp-demangle.c	ELSE_1	FUNCTION_82
0x4006242	              0x55	                                push rbp	      4484	cp-demangle.c	ELSE_1	FUNCTION_82
0x4006243	              0x53	                                push rbx	      4484	cp-demangle.c	ELSE_1	FUNCTION_82
0x4006244	            0x8b02	                    mov eax, dword [rdx]	      4486	cp-demangle.c	ELSE_1	FUNCTION_82	IF_1
0x4006246	          0x83f830	                           cmp eax, 0x30	      4488	cp-demangle.c	ELSE_1	FUNCTION_82	IF_1
0x4006249	            0x766d	                           jbe 0x40062b8	      4488	cp-demangle.c	ELSE_1	FUNCTION_82	IF_1
0x400624b	    0x488b87000100	           mov rax, qword [rdi + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4006252	          0x4889d5	                            mov rbp, rdx	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4006255	          0x4189f4	                           mov r12d, esi	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4006258	          0x4889fb	                            mov rbx, rdi	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400625b	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4006261	            0x7475	                            je 0x40062d8	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4006263	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4006267	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x400626e	          0x4489e6	                           mov esi, r12d	      4493	cp-demangle.c	ELSE_1	FUNCTION_82	CALL_2
0x4006271	        0xc6040328	              mov byte [rbx + rax], 0x28	      4235	cp-demangle.c	FUNCTION_72
0x4006275	          0x4889ea	                            mov rdx, rbp	      4493	cp-demangle.c	ELSE_1	FUNCTION_82	CALL_2
0x4006278	    0xc68308010000	           mov byte [rbx + 0x108], 0x28 	      4236	cp-demangle.c	FUNCTION_72
0x400627f	          0x4889df	                            mov rdi, rbx	      4493	cp-demangle.c	ELSE_1	FUNCTION_82	CALL_2
0x4006282	      0xe8c9eaffff	                   call sym.d_print_comp	      4493	cp-demangle.c	ELSE_1	FUNCTION_82	CALL_2
0x4006287	    0x488b83000100	           mov rax, qword [rbx + 0x100] 	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400628e	    0x483dff000000	                           cmp rax, 0xff	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4006294	            0x747a	                            je 0x4006310	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x4006296	        0x488d5001	                      lea rdx, [rax + 1]	      4232	cp-demangle.c	FUNCTION_72	IF_1
0x400629a	    0x488993000100	            mov qword [rbx + 0x100], rdx	      4235	cp-demangle.c	FUNCTION_72
0x40062a1	        0xc6040329	              mov byte [rbx + rax], 0x29	      4235	cp-demangle.c	FUNCTION_72
0x40062a5	    0xc68308010000	           mov byte [rbx + 0x108], 0x29 	      4236	cp-demangle.c	FUNCTION_72
0x40062ac	              0x5b	                                 pop rbx	      4496	cp-demangle.c	ELSE_1	FUNCTION_82
0x40062ad	              0x5d	                                 pop rbp	      4496	cp-demangle.c	ELSE_1	FUNCTION_82
0x40062ae	            0x415c	                                 pop r12	      4496	cp-demangle.c	ELSE_1	FUNCTION_82
0x40062b0	              0xc3	                                     ret	      4496	cp-demangle.c	ELSE_1	FUNCTION_82
0x40062b1	     0xf1f80000000	                         nop dword [rax]	      4496	cp-demangle.c	ELSE_1	FUNCTION_82
0x40062b8	    0x48b943000000	            movabs rcx, 0x1000000000043 	      4489	cp-demangle.c	ELSE_1	FUNCTION_82	IF_1
0x40062c2	        0x480fa3c1	                             bt rcx, rax	      4489	cp-demangle.c	ELSE_1	FUNCTION_82	IF_1
0x40062c6	            0x7383	                           jae 0x400624b	      4489	cp-demangle.c	ELSE_1	FUNCTION_82	IF_1
0x40062c8	              0x5b	                                 pop rbx	      4496	cp-demangle.c	ELSE_1	FUNCTION_82
0x40062c9	              0x5d	                                 pop rbp	      4496	cp-demangle.c	ELSE_1	FUNCTION_82
0x40062ca	            0x415c	                                 pop r12	      4496	cp-demangle.c	ELSE_1	FUNCTION_82
0x40062cc	      0xe97feaffff	                    jmp sym.d_print_comp	      4493	cp-demangle.c	ELSE_1	FUNCTION_82	CALL_2
0x40062d1	     0xf1f80000000	                         nop dword [rax]	      4493	cp-demangle.c	ELSE_1	FUNCTION_82	CALL_2
0x40062d8	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40062df	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x40062e6	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40062eb	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40062ee	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x40062f4	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x40062fc	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4006301	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x4006303	      0xe95fffffff	                           jmp 0x4006267	      4224	cp-demangle.c	FUNCTION_71
0x4006308	     0xf1f84000000	                   nop dword [rax + rax]	      4224	cp-demangle.c	FUNCTION_71
0x4006310	    0x488b93180100	           mov rdx, qword [rbx + 0x118] 	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006317	    0xc683ff000000	                mov byte [rbx + 0xff], 0	      4221	cp-demangle.c	FUNCTION_71
0x400631e	      0xbeff000000	                           mov esi, 0xff	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006323	          0x4889df	                            mov rdi, rbx	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x4006326	    0xff9310010000	                call qword [rbx + 0x110]	      4222	cp-demangle.c	FUNCTION_71	CALL_1
0x400632c	    0x488383400100	              add qword [rbx + 0x140], 1	      4224	cp-demangle.c	FUNCTION_71
0x4006334	      0xba01000000	                              mov edx, 1	      4224	cp-demangle.c	FUNCTION_71
0x4006339	            0x31c0	                            xor eax, eax	      4224	cp-demangle.c	FUNCTION_71
0x400633b	      0xe95affffff	                           jmp 0x400629a	      4224	cp-demangle.c	FUNCTION_71
d_make_comp	CALL,1:FOR,0:IF,4:ELSE,0:WHILE,0:DO,0:functions,0:SWITCH,1	31
0x4000040	          0x83fe4f	                           cmp esi, 0x4f	       953	cp-demangle.c	FUNCTION_4	SWITCH_1
0x4000043	            0x775d	                            ja 0x40000a2	       953	cp-demangle.c	FUNCTION_4	SWITCH_1
0x4000045	            0x89f0	                            mov eax, esi	       953	cp-demangle.c	FUNCTION_4	SWITCH_1
0x4000047	    0xff24c5000000	                       jmp qword [rax*8]	       953	cp-demangle.c	FUNCTION_4	SWITCH_1
0x400004e	            0x6690	                                     nop	       953	cp-demangle.c	FUNCTION_4	SWITCH_1
0x4000050	          0x4885d2	                           test rdx, rdx	      1010	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_2
0x4000053	            0x744d	                            je 0x40000a2	      1010	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_2
0x4000055	        0x448b4728	            mov r8d, dword [rdi + 0x28] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4000059	            0x31c0	                            xor eax, eax	       975	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_1
0x400005b	        0x443b472c	            cmp r8d, dword [rdi + 0x2c] 	       933	cp-demangle.c	FUNCTION_3	IF_1
0x400005f	            0x7c07	                            jl 0x4000068	       933	cp-demangle.c	FUNCTION_3	IF_1
0x4000061	            0xf3c3	                                     ret	      1046	cp-demangle.c	FUNCTION_4
0x4000063	       0xf1f440000	                   nop dword [rax + rax]	      1046	cp-demangle.c	FUNCTION_4
0x4000068	          0x4963c0	                         movsxd rax, r8d	       935	cp-demangle.c	FUNCTION_3
0x400006b	        0x4183c001	                              add r8d, 1	       937	cp-demangle.c	FUNCTION_3
0x400006f	        0x4c8d0c40	                   lea r9, [rax + rax*2]	       935	cp-demangle.c	FUNCTION_3
0x4000073	        0x488b4720	            mov rax, qword [rdi + 0x20] 	       935	cp-demangle.c	FUNCTION_3
0x4000077	        0x4a8d04c8	                   lea rax, [rax + r9*8]	       935	cp-demangle.c	FUNCTION_3
0x400007b	    0xc74004000000	                  mov dword [rax + 4], 0	       936	cp-demangle.c	FUNCTION_3
0x4000082	        0x44894728	             mov dword [rdi + 0x28], r8d	       937	cp-demangle.c	FUNCTION_3
0x4000086	            0x8930	                    mov dword [rax], esi	      1041	cp-demangle.c	FUNCTION_4	IF_4
0x4000088	        0x48895008	                mov qword [rax + 8], rdx	      1042	cp-demangle.c	FUNCTION_4	IF_4
0x400008c	        0x48894810	             mov qword [rax + 0x10], rcx	      1043	cp-demangle.c	FUNCTION_4	IF_4
0x4000090	              0xc3	                                     ret	      1043	cp-demangle.c	FUNCTION_4	IF_4
0x4000091	     0xf1f80000000	                         nop dword [rax]	      1043	cp-demangle.c	FUNCTION_4	IF_4
0x4000098	          0x4885d2	                           test rdx, rdx	       974	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_1
0x400009b	            0x7405	                            je 0x40000a2	       974	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_1
0x400009d	          0x4885c9	                           test rcx, rcx	      1018	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_3
0x40000a0	            0x75b3	                           jne 0x4000055	      1018	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_3
0x40000a2	            0x31c0	                            xor eax, eax	       975	cp-demangle.c	FUNCTION_4	SWITCH_1	IF_1
0x40000a4	              0xc3	                                     ret	      1046	cp-demangle.c	FUNCTION_4
