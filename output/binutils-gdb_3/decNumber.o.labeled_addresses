decNumberClassToString	ELSE,0:DO,0:CALL,0:IF,10:functions,0:SWITCH,0:WHILE,0:FOR,0	50
0x4003280	          0x83ff08	                              cmp edi, 8	      3322	decNumber.c	FUNCTION_68	FUNCTION_51	IF_1
0x4003283	            0x745b	                            je 0x40032e0	      3322	decNumber.c	FUNCTION_68	FUNCTION_51	IF_1
0x4003285	          0x83ff03	                              cmp edi, 3	      3323	decNumber.c	FUNCTION_68	FUNCTION_51	IF_2
0x4003288	            0x7466	                            je 0x40032f0	      3323	decNumber.c	FUNCTION_68	FUNCTION_51	IF_2
0x400328a	          0x83ff06	                              cmp edi, 6	      3324	decNumber.c	FUNCTION_68	FUNCTION_51	IF_3
0x400328d	            0x7471	                            je 0x4003300	      3324	decNumber.c	FUNCTION_68	FUNCTION_51	IF_3
0x400328f	          0x83ff05	                              cmp edi, 5	      3325	decNumber.c	FUNCTION_68	FUNCTION_51	IF_4
0x4003292	            0x743c	                            je 0x40032d0	      3325	decNumber.c	FUNCTION_68	FUNCTION_51	IF_4
0x4003294	          0x83ff07	                              cmp edi, 7	      3326	decNumber.c	FUNCTION_68	FUNCTION_51	IF_5
0x4003297	            0x7477	                            je 0x4003310	      3326	decNumber.c	FUNCTION_68	FUNCTION_51	IF_5
0x4003299	          0x83ff04	                              cmp edi, 4	      3327	decNumber.c	FUNCTION_68	FUNCTION_51	IF_6
0x400329c	     0xf847e000000	                            je 0x4003320	      3327	decNumber.c	FUNCTION_68	FUNCTION_51	IF_6
0x40032a2	          0x83ff09	                              cmp edi, 9	      3328	decNumber.c	FUNCTION_68	FUNCTION_51	IF_7
0x40032a5	     0xf8485000000	                            je 0x4003330	      3328	decNumber.c	FUNCTION_68	FUNCTION_51	IF_7
0x40032ab	          0x83ff02	                              cmp edi, 2	      3329	decNumber.c	FUNCTION_68	FUNCTION_51	IF_8
0x40032ae	     0xf848c000000	                            je 0x4003340	      3329	decNumber.c	FUNCTION_68	FUNCTION_51	IF_8
0x40032b4	          0x83ff01	                              cmp edi, 1	      3330	decNumber.c	FUNCTION_68	FUNCTION_51	IF_9
0x40032b7	     0xf8493000000	                            je 0x4003350	      3330	decNumber.c	FUNCTION_68	FUNCTION_51	IF_9
0x40032bd	            0x85ff	                           test edi, edi	      3332	decNumber.c	FUNCTION_68	FUNCTION_51
0x40032bf	      0xba00000000	                              mov edx, 0	      3332	decNumber.c	FUNCTION_68	FUNCTION_51
0x40032c4	      0xb800000000	                              mov eax, 0	      3332	decNumber.c	FUNCTION_68	FUNCTION_51
0x40032c9	        0x480f45c2	                         cmovne rax, rdx	      3332	decNumber.c	FUNCTION_68	FUNCTION_51
0x40032cd	              0xc3	                                     ret	      3332	decNumber.c	FUNCTION_68	FUNCTION_51
0x40032ce	            0x6690	                                     nop	      3332	decNumber.c	FUNCTION_68	FUNCTION_51
0x40032d0	      0xb800000000	                              mov eax, 0	      3325	decNumber.c	FUNCTION_68	FUNCTION_51	IF_4
0x40032d5	              0xc3	                                     ret	      3325	decNumber.c	FUNCTION_68	FUNCTION_51	IF_4
0x40032d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3325	decNumber.c	FUNCTION_68	FUNCTION_51	IF_4
0x40032e0	      0xb800000000	                              mov eax, 0	      3322	decNumber.c	FUNCTION_68	FUNCTION_51	IF_1
0x40032e5	              0xc3	                                     ret	      3322	decNumber.c	FUNCTION_68	FUNCTION_51	IF_1
0x40032e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3322	decNumber.c	FUNCTION_68	FUNCTION_51	IF_1
0x40032f0	      0xb800000000	                              mov eax, 0	      3323	decNumber.c	FUNCTION_68	FUNCTION_51	IF_2
0x40032f5	              0xc3	                                     ret	      3323	decNumber.c	FUNCTION_68	FUNCTION_51	IF_2
0x40032f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3323	decNumber.c	FUNCTION_68	FUNCTION_51	IF_2
0x4003300	      0xb800000000	                              mov eax, 0	      3324	decNumber.c	FUNCTION_68	FUNCTION_51	IF_3
0x4003305	              0xc3	                                     ret	      3324	decNumber.c	FUNCTION_68	FUNCTION_51	IF_3
0x4003306	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3324	decNumber.c	FUNCTION_68	FUNCTION_51	IF_3
0x4003310	      0xb800000000	                              mov eax, 0	      3326	decNumber.c	FUNCTION_68	FUNCTION_51	IF_5
0x4003315	              0xc3	                                     ret	      3326	decNumber.c	FUNCTION_68	FUNCTION_51	IF_5
0x4003316	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3326	decNumber.c	FUNCTION_68	FUNCTION_51	IF_5
0x4003320	      0xb800000000	                              mov eax, 0	      3327	decNumber.c	FUNCTION_68	FUNCTION_51	IF_6
0x4003325	              0xc3	                                     ret	      3327	decNumber.c	FUNCTION_68	FUNCTION_51	IF_6
0x4003326	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3327	decNumber.c	FUNCTION_68	FUNCTION_51	IF_6
0x4003330	      0xb800000000	                              mov eax, 0	      3328	decNumber.c	FUNCTION_68	FUNCTION_51	IF_7
0x4003335	              0xc3	                                     ret	      3328	decNumber.c	FUNCTION_68	FUNCTION_51	IF_7
0x4003336	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3328	decNumber.c	FUNCTION_68	FUNCTION_51	IF_7
0x4003340	      0xb800000000	                              mov eax, 0	      3329	decNumber.c	FUNCTION_68	FUNCTION_51	IF_8
0x4003345	              0xc3	                                     ret	      3329	decNumber.c	FUNCTION_68	FUNCTION_51	IF_8
0x4003346	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3329	decNumber.c	FUNCTION_68	FUNCTION_51	IF_8
0x4003350	      0xb800000000	                              mov eax, 0	      3330	decNumber.c	FUNCTION_68	FUNCTION_51	IF_9
0x4003355	              0xc3	                                     ret	      3333	decNumber.c	FUNCTION_68	FUNCTION_51
decCompareOp	ELSE,20:DO,1:CALL,25:IF,39:functions,0:SWITCH,0:WHILE,0:FOR,0	286
0x4003610	            0x4157	                                push r15	      6000	decNumber.c	FUNCTION_2
0x4003612	            0x4156	                                push r14	      6000	decNumber.c	FUNCTION_2
0x4003614	          0x4589c7	                           mov r15d, r8d	      6000	decNumber.c	FUNCTION_2
0x4003617	            0x4155	                                push r13	      6000	decNumber.c	FUNCTION_2
0x4003619	            0x4154	                                push r12	      6000	decNumber.c	FUNCTION_2
0x400361b	          0x4989ce	                            mov r14, rcx	      6000	decNumber.c	FUNCTION_2
0x400361e	              0x55	                                push rbp	      6000	decNumber.c	FUNCTION_2
0x400361f	              0x53	                                push rbx	      6000	decNumber.c	FUNCTION_2
0x4003620	          0x4889f5	                            mov rbp, rsi	      6000	decNumber.c	FUNCTION_2
0x4003623	          0x4889fb	                            mov rbx, rdi	      6000	decNumber.c	FUNCTION_2
0x4003626	          0x4989d4	                            mov r12, rdx	      6000	decNumber.c	FUNCTION_2
0x4003629	          0x4d89cd	                             mov r13, r9	      6000	decNumber.c	FUNCTION_2
0x400362c	        0x4883ec28	                           sub rsp, 0x28	      6000	decNumber.c	FUNCTION_2
0x4003630	    0x64488b042528	                mov rax, qword fs:[0x28]	      6000	decNumber.c	FUNCTION_2
0x4003639	      0x4889442418	             mov qword [rsp + 0x18], rax	      6000	decNumber.c	FUNCTION_2
0x400363e	            0x31c0	                            xor eax, eax	      6000	decNumber.c	FUNCTION_2
0x4003640	        0x4180f804	                              cmp r8b, 4	      6031	decNumber.c	FUNCTION_2	DO_1	IF_7
0x4003644	     0xf8446010000	                            je 0x4003790	      6031	decNumber.c	FUNCTION_2	DO_1	IF_7
0x400364a	         0xfb64608	               movzx eax, byte [rsi + 8]	      6044	decNumber.c	FUNCTION_2	DO_1
0x400364e	         0xfb65208	               movzx edx, byte [rdx + 8]	      6044	decNumber.c	FUNCTION_2	DO_1
0x4003652	            0x89c1	                            mov ecx, eax	      6044	decNumber.c	FUNCTION_2	DO_1
0x4003654	             0x9d1	                             or ecx, edx	      6044	decNumber.c	FUNCTION_2	DO_1
0x4003656	          0xf6c130	                           test cl, 0x30	      6045	decNumber.c	FUNCTION_2	DO_1	IF_10
0x4003659	            0x7455	                            je 0x40036b0	      6045	decNumber.c	FUNCTION_2	DO_1	IF_10
0x400365b	        0x4180f801	                              cmp r8b, 1	      6046	decNumber.c	FUNCTION_2	DO_1	IF_10	IF_11
0x400365f	            0x7413	                            je 0x4003674	      6046	decNumber.c	FUNCTION_2	DO_1	IF_10	IF_11
0x4003661	        0x4180f806	                              cmp r8b, 6	      6047	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_1	IF_12
0x4003665	     0xf8465030000	                            je 0x40039d0	      6047	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_1	IF_12
0x400366b	          0x83e110	                           and ecx, 0x10	      6067	decNumber.c	FUNCTION_2	DO_1	IF_10	IF_19
0x400366e	     0xf84ec010000	                            je 0x4003860	      6067	decNumber.c	FUNCTION_2	DO_1	IF_10	IF_19
0x4003674	          0x4d89e8	                             mov r8, r13	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4003677	          0x4c89f1	                            mov rcx, r14	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x400367a	          0x4c89e2	                            mov rdx, r12	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x400367d	          0x4889ee	                            mov rsi, rbp	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4003680	          0x4889df	                            mov rdi, rbx	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4003683	      0xe868fdffff	                 call sym.decNaNs.isra.6	      6079	decNumber.c	FUNCTION_2	DO_1	IF_10	CALL_20
0x4003688	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      6149	decNumber.c	FUNCTION_2
0x400368d	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      6149	decNumber.c	FUNCTION_2
0x4003696	          0x4889d8	                            mov rax, rbx	      6149	decNumber.c	FUNCTION_2
0x4003699	     0xf85c3030000	                           jne 0x4003a62	      6149	decNumber.c	FUNCTION_2
0x400369f	        0x4883c428	                           add rsp, 0x28	      6149	decNumber.c	FUNCTION_2
0x40036a3	              0x5b	                                 pop rbx	      6149	decNumber.c	FUNCTION_2
0x40036a4	              0x5d	                                 pop rbp	      6149	decNumber.c	FUNCTION_2
0x40036a5	            0x415c	                                 pop r12	      6149	decNumber.c	FUNCTION_2
0x40036a7	            0x415d	                                 pop r13	      6149	decNumber.c	FUNCTION_2
0x40036a9	            0x415e	                                 pop r14	      6149	decNumber.c	FUNCTION_2
0x40036ab	            0x415f	                                 pop r15	      6149	decNumber.c	FUNCTION_2
0x40036ad	              0xc3	                                     ret	      6149	decNumber.c	FUNCTION_2
0x40036ae	            0x6690	                                     nop	      6149	decNumber.c	FUNCTION_2
0x40036b0	        0x418d40f9	                       lea eax, [r8 - 7]	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x40036b4	            0x3c01	                               cmp al, 1	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x40036b6	     0xf86cc020000	                           jbe 0x4003988	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x40036bc	            0x31d2	                            xor edx, edx	      6084	decNumber.c	FUNCTION_2	DO_1	CALL_22
0x40036be	          0x4c89e6	                            mov rsi, r12	      6084	decNumber.c	FUNCTION_2	DO_1	CALL_22
0x40036c1	          0x4889ef	                            mov rdi, rbp	      6084	decNumber.c	FUNCTION_2	DO_1	CALL_22
0x40036c4	      0x448944240c	              mov dword [rsp + 0xc], r8d	      6084	decNumber.c	FUNCTION_2	DO_1	CALL_22
0x40036c9	      0xe8d2e0ffff	                     call sym.decCompare	      6084	decNumber.c	FUNCTION_2	DO_1	CALL_22
0x40036ce	      0x3d00000080	                     cmp eax, 0x80000000	      6087	decNumber.c	FUNCTION_2	IF_23
0x40036d3	     0xf8477010000	                            je 0x4003850	      6087	decNumber.c	FUNCTION_2	IF_23
0x40036d9	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      6089	decNumber.c	FUNCTION_2	ELSE_11	IF_24
0x40036de	        0x4180f801	                              cmp r8b, 1	      6089	decNumber.c	FUNCTION_2	ELSE_11	IF_24
0x40036e2	            0x740a	                            je 0x40036ee	      6089	decNumber.c	FUNCTION_2	ELSE_11	IF_24
0x40036e4	        0x4180f806	                              cmp r8b, 6	      6089	decNumber.c	FUNCTION_2	ELSE_11	IF_24
0x40036e8	     0xf85d2020000	                           jne 0x40039c0	      6089	decNumber.c	FUNCTION_2	ELSE_11	IF_24
0x40036ee	        0x4180f804	                              cmp r8b, 4	      6089	decNumber.c	FUNCTION_2	ELSE_11	IF_24
0x40036f2	           0xf94c2	                                 sete dl	      6089	decNumber.c	FUNCTION_2	ELSE_11	IF_24
0x40036f5	            0x85c0	                           test eax, eax	      6090	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25
0x40036f7	            0x755f	                           jne 0x4003758	      6090	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25
0x40036f9	            0x84d2	                             test dl, dl	      6090	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25
0x40036fb	            0x745b	                            je 0x4003758	      6090	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25
0x40036fd	      0x418b442404	                mov eax, dword [r12 + 4]	      6093	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26
0x4003702	          0x394504	                cmp dword [rbp + 4], eax	      6093	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26
0x4003705	     0xf84f5010000	                            je 0x4003900	      6093	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26
0x400370b	           0xf9dc0	                                setge al	      6095	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	ELSE_12
0x400370e	        0x807d0800	                   cmp byte [rbp + 8], 0	      6096	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	CALL_23
0x4003712	           0xfb6c0	                           movzx eax, al	      6095	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	ELSE_12
0x4003715	        0x8d4400ff	                lea eax, [rax + rax - 1]	      6095	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	ELSE_12
0x4003719	            0x7835	                            js 0x4003750	      6096	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	CALL_23
0x400371b	      0xba01000000	                              mov edx, 1	      6101	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29
0x4003720	            0x85c0	                           test eax, eax	      6102	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29	IF_30
0x4003722	        0xc6430800	                   mov byte [rbx + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4003726	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400372d	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4003733	        0x6689530a	                mov word [rbx + 0xa], dx	      6101	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29
0x4003737	     0xf894bffffff	                           jns 0x4003688	      6102	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29	IF_30
0x400373d	        0xc6430880	                mov byte [rbx + 8], 0x80	      6102	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29	IF_30
0x4003741	      0xe942ffffff	                           jmp 0x4003688	      6102	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29	IF_30
0x4003746	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6102	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29	IF_30
0x4003750	            0xf7d8	                                 neg eax	      6096	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	CALL_23
0x4003752	    0x660f1f440000	                    nop word [rax + rax]	      6096	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_25	IF_26	CALL_23
0x4003758	            0x31c9	                            xor ecx, ecx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400375a	            0x85c0	                           test eax, eax	      6100	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29
0x400375c	        0xc6430800	                   mov byte [rbx + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4003760	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4003767	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400376d	        0x66894b0a	                mov word [rbx + 0xa], cx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4003771	     0xf8411ffffff	                            je 0x4003688	      6100	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29
0x4003777	      0xba01000000	                              mov edx, 1	      6101	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29
0x400377c	            0x85c0	                           test eax, eax	      6102	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29	IF_30
0x400377e	        0x6689530a	                mov word [rbx + 0xa], dx	      6101	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29
0x4003782	     0xf8900ffffff	                           jns 0x4003688	      6102	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29	IF_30
0x4003788	            0xebb3	                           jmp 0x400373d	      6102	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29	IF_30
0x400378a	    0x660f1f440000	                    nop word [rax + rax]	      6102	decNumber.c	FUNCTION_2	ELSE_11	IF_24	IF_29	IF_30
0x4003790	         0xfb65608	               movzx edx, byte [rsi + 8]	      6032	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8	CALL_5
0x4003794	    0x410fb64c2408	               movzx ecx, byte [r12 + 8]	      6032	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8	CALL_5
0x400379a	            0x84d2	                             test dl, dl	      6032	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8	CALL_5
0x400379c	            0x791a	                           jns 0x40037b8	      6032	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8	CALL_5
0x400379e	            0x84c9	                             test cl, cl	      6032	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8	CALL_5
0x40037a0	      0xb8ffffffff	                     mov eax, 0xffffffff	      6033	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8
0x40037a5	            0x7811	                            js 0x40037b8	      6032	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8	CALL_5
0x40037a7	      0xba01000000	                              mov edx, 1	      6032	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8	CALL_5
0x40037ac	      0xe944ffffff	                           jmp 0x40036f5	      6032	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8	CALL_5
0x40037b1	     0xf1f80000000	                         nop dword [rax]	      6032	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_8	CALL_5
0x40037b8	            0x84d2	                             test dl, dl	      6036	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_9	CALL_7
0x40037ba	            0x7809	                            js 0x40037c5	      6036	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_9	CALL_7
0x40037bc	            0x84c9	                             test cl, cl	      6036	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_9	CALL_7
0x40037be	      0xb801000000	                              mov eax, 1	      6037	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_9
0x40037c3	            0x78e2	                            js 0x40037a7	      6036	decNumber.c	FUNCTION_2	DO_1	IF_7	IF_9	CALL_7
0x40037c5	            0x89d0	                            mov eax, edx	      6045	decNumber.c	FUNCTION_2	DO_1	IF_10
0x40037c7	             0x9c8	                             or eax, ecx	      6045	decNumber.c	FUNCTION_2	DO_1	IF_10
0x40037c9	            0xa830	                           test al, 0x30	      6045	decNumber.c	FUNCTION_2	DO_1	IF_10
0x40037cb	     0xf84ebfeffff	                            je 0x40036bc	      6045	decNumber.c	FUNCTION_2	DO_1	IF_10
0x40037d1	          0xf6c230	                           test dl, 0x30	      6052	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_8
0x40037d4	     0xf8416020000	                            je 0x40039f0	      6052	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_8
0x40037da	          0xf6c130	                           test cl, 0x30	      6053	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_9
0x40037dd	     0xf8435020000	                            je 0x4003a18	      6053	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_9
0x40037e3	          0xf6c210	                           test dl, 0x10	      6055	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_11
0x40037e6	            0x7409	                            je 0x40037f1	      6055	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_11
0x40037e8	          0xf6c120	                           test cl, 0x20	      6055	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_11
0x40037eb	     0xf85ff010000	                           jne 0x40039f0	      6055	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_11
0x40037f1	          0xf6c220	                           test dl, 0x20	      6056	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_13
0x40037f4	            0x7409	                            je 0x40037ff	      6056	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_13
0x40037f6	          0x83e110	                           and ecx, 0x10	      6056	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_13
0x40037f9	     0xf8519020000	                           jne 0x4003a18	      6056	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_13
0x40037ff	        0x49630424	                 movsxd rax, dword [r12]	      6060	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_16
0x4003803	          0x83f831	                           cmp eax, 0x31	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4003806	     0xf8f3c020000	                            jg 0x4003a48	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400380c	     0xfb688000000	                   movzx ecx, byte [rax]	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4003813	        0x48634500	                 movsxd rax, dword [rbp]	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4003817	      0x4d8d4c240a	                     lea r9, [r12 + 0xa]	      6060	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_16
0x400381c	          0x83f831	                           cmp eax, 0x31	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400381f	     0xf8f09020000	                            jg 0x4003a2e	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4003825	     0xfb6b0000000	                   movzx esi, byte [rax]	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400382c	        0x488d7d0a	                    lea rdi, [rbp + 0xa]	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4003830	          0x4531c0	                            xor r8d, r8d	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4003833	          0x4c89ca	                             mov rdx, r9	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4003836	      0xe865ddffff	                 call sym.decUnitCompare	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x400383b	        0x807d0800	                   cmp byte [rbp + 8], 0	      6063	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_17
0x400383f	     0xf88b8010000	                            js 0x40039fd	      6063	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_17
0x4003845	      0x3d00000080	                     cmp eax, 0x80000000	      6087	decNumber.c	FUNCTION_2	IF_23
0x400384a	     0xf8557ffffff	                           jne 0x40037a7	      6087	decNumber.c	FUNCTION_2	IF_23
0x4003850	      0x41834d0010	                    or dword [r13], 0x10	      6087	decNumber.c	FUNCTION_2	IF_23
0x4003855	      0xe92efeffff	                           jmp 0x4003688	      6087	decNumber.c	FUNCTION_2	IF_23
0x400385a	    0x660f1f440000	                    nop word [rax + rax]	      6087	decNumber.c	FUNCTION_2	IF_23
0x4003860	            0xa830	                           test al, 0x30	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x4003862	     0xf8578010000	                           jne 0x40039e0	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x4003868	          0x83e020	                           and eax, 0x20	      6073	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	IF_21
0x400386b	    0x41bf02000000	                             mov r15d, 2	      6063	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_17
0x4003871	            0x3c01	                               cmp al, 1	      6074	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	ELSE_9
0x4003873	            0x19c0	                            sbb eax, eax	      6074	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	ELSE_9
0x4003875	          0x83e002	                              and eax, 2	      6074	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	ELSE_9
0x4003878	          0x83e801	                              sub eax, 1	      6074	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	ELSE_9
0x400387b	            0x85c0	                           test eax, eax	      6110	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x400387d	    0xc74424140000	               mov dword [rsp + 0x14], 0	      6107	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4003885	     0xf85d5000000	                           jne 0x4003960	      6110	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x400388b	         0xfb64508	               movzx eax, byte [rbp + 8]	      6112	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x400388f	    0x410fb6542408	               movzx edx, byte [r12 + 8]	      6113	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x4003895	            0x89c6	                            mov esi, eax	      6112	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x4003897	            0x89d7	                            mov edi, edx	      6121	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34
0x4003899	            0x89c1	                            mov ecx, eax	      6112	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x400389b	          0x83e680	                     and esi, 0xffffff80	      6112	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32
0x400389e	          0x83e780	                     and edi, 0xffffff80	      6121	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34
0x40038a1	          0x4038fe	                            cmp sil, dil	      6121	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34
0x40038a4	            0x747a	                            je 0x4003920	      6121	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34
0x40038a6	          0x4084f6	                           test sil, sil	      6122	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34	IF_35
0x40038a9	     0xf8591000000	                           jne 0x4003940	      6122	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_15	IF_34	IF_35
0x40038af	        0x4180ff08	                             cmp r15b, 8	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x40038b3	     0xf8493000000	                            je 0x400394c	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x40038b9	        0x4180ff03	                             cmp r15b, 3	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x40038bd	     0xf8489000000	                            je 0x400394c	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x40038c3	          0x884b08	                  mov byte [rbx + 8], cl	      6839	decNumber.c	FUNCTION_11
0x40038c6	          0x8b4504	                mov eax, dword [rbp + 4]	      6840	decNumber.c	FUNCTION_11
0x40038c9	        0x488d550a	                    lea rdx, [rbp + 0xa]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40038cd	          0x8b4d00	                    mov ecx, dword [rbp]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40038d0	      0x4c8d442414	                    lea r8, [rsp + 0x14]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40038d5	          0x4c89f6	                            mov rsi, r14	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40038d8	          0x4889df	                            mov rdi, rbx	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40038db	          0x4d89e9	                             mov r9, r13	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40038de	          0x894304	                mov dword [rbx + 4], eax	      6840	decNumber.c	FUNCTION_11
0x40038e1	      0xe8ead9ffff	             call sym.decSetCoeff.isra.3	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40038e6	      0x488d542414	                   lea rdx, [rsp + 0x14]	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x40038eb	          0x4c89e9	                            mov rcx, r13	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x40038ee	          0x4c89f6	                            mov rsi, r14	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x40038f1	          0x4889df	                            mov rdi, rbx	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x40038f4	      0xe867e5ffff	                    call sym.decFinalize	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x40038f9	      0xe98afdffff	                           jmp 0x4003688	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x40038fe	            0x6690	                                     nop	      6141	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4003900	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4003902	        0xc6430800	                   mov byte [rbx + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4003906	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400390d	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4003913	        0x6689430a	                mov word [rbx + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4003917	      0xe96cfdffff	                           jmp 0x4003688	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400391c	         0xf1f4000	                         nop dword [rax]	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4003920	          0x4084f6	                           test sil, sil	      6125	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36
0x4003923	      0x418b742404	                mov esi, dword [r12 + 4]	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x4003928	     0xf84f2000000	                            je 0x4003a20	      6125	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36
0x400392e	          0x397504	                cmp dword [rbp + 4], esi	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x4003931	     0xf8c78ffffff	                            jl 0x40038af	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x4003937	    0x660f1f840000	                    nop word [rax + rax]	      6126	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_16	ELSE_17	IF_36	IF_37
0x4003940	        0x4180ff08	                             cmp r15b, 8	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x4003944	            0x7434	                            je 0x400397a	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x4003946	        0x4180ff03	                             cmp r15b, 3	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x400394a	            0x742e	                            je 0x400397a	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x400394c	            0x89d1	                            mov ecx, edx	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x400394e	          0x4c89e5	                            mov rbp, r12	      6063	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_17
0x4003951	      0xe96dffffff	                           jmp 0x40038c3	      6063	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_17
0x4003956	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6063	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_17
0x4003960	        0x4180ff03	                             cmp r15b, 3	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x4003964	            0x7406	                            je 0x400396c	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x4003966	        0x4180ff08	                             cmp r15b, 8	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x400396a	            0x7502	                           jne 0x400396e	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x400396c	            0xf7d8	                                 neg eax	      6137	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_39
0x400396e	            0x85c0	                           test eax, eax	      6138	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4003970	     0xf8e92000000	                           jle 0x4003a08	      6138	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4003976	         0xfb64508	               movzx eax, byte [rbp + 8]	      6138	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x400397a	            0x89c1	                            mov ecx, eax	      6138	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x400397c	      0xe942ffffff	                           jmp 0x40038c3	      6138	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4003981	     0xf1f80000000	                         nop dword [rax]	      6138	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14
0x4003988	      0xba01000000	                              mov edx, 1	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x400398d	          0x4c89e6	                            mov rsi, r12	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x4003990	          0x4889ef	                            mov rdi, rbp	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x4003993	      0x448944240c	              mov dword [rsp + 0xc], r8d	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x4003998	      0xe803deffff	                     call sym.decCompare	      6083	decNumber.c	FUNCTION_2	DO_1	CALL_21
0x400399d	      0x3d00000080	                     cmp eax, 0x80000000	      6087	decNumber.c	FUNCTION_2	IF_23
0x40039a2	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      6087	decNumber.c	FUNCTION_2	IF_23
0x40039a7	     0xf84a3feffff	                            je 0x4003850	      6087	decNumber.c	FUNCTION_2	IF_23
0x40039ad	        0x4180f805	                              cmp r8b, 5	      6105	decNumber.c	FUNCTION_2	ELSE_11	IF_31
0x40039b1	     0xf85c4feffff	                           jne 0x400387b	      6105	decNumber.c	FUNCTION_2	ELSE_11	IF_31
0x40039b7	      0xe9ccfcffff	                           jmp 0x4003688	      6105	decNumber.c	FUNCTION_2	ELSE_11	IF_31
0x40039bc	         0xf1f4000	                         nop dword [rax]	      6105	decNumber.c	FUNCTION_2	ELSE_11	IF_31
0x40039c0	        0x4180f804	                              cmp r8b, 4	      6089	decNumber.c	FUNCTION_2	ELSE_11	IF_24
0x40039c4	            0x75e7	                           jne 0x40039ad	      6089	decNumber.c	FUNCTION_2	ELSE_11	IF_24
0x40039c6	      0xe9dcfdffff	                           jmp 0x40037a7	      6089	decNumber.c	FUNCTION_2	ELSE_11	IF_24
0x40039cb	       0xf1f440000	                   nop dword [rax + rax]	      6089	decNumber.c	FUNCTION_2	ELSE_11	IF_24
0x40039d0	    0x418109800000	               or dword [r9], 0x40000080	      6048	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_1	IF_12
0x40039d7	      0xe998fcffff	                           jmp 0x4003674	      6048	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_1	IF_12
0x40039dc	         0xf1f4000	                         nop dword [rax]	      6048	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_1	IF_12
0x40039e0	          0x83e230	                           and edx, 0x30	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x40039e3	     0xf858bfcffff	                           jne 0x4003674	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x40039e9	      0xe97afeffff	                           jmp 0x4003868	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x40039ee	            0x6690	                                     nop	      6070	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_8	IF_20	CALL_19
0x40039f0	      0xb8ffffffff	                     mov eax, 0xffffffff	      6055	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_11
0x40039f5	            0x84d2	                             test dl, dl	      6063	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_17
0x40039f7	     0xf89aafdffff	                           jns 0x40037a7	      6063	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_17
0x40039fd	            0xf7d8	                                 neg eax	      6063	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_17
0x40039ff	      0xe941feffff	                           jmp 0x4003845	      6063	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_17
0x4003a04	         0xf1f4000	                         nop dword [rax]	      6063	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_17
0x4003a08	    0x410fb6542408	               movzx edx, byte [r12 + 8]	      6063	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_17
0x4003a0e	      0xe939ffffff	                           jmp 0x400394c	      6063	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_17
0x4003a13	       0xf1f440000	                   nop dword [rax + rax]	      6063	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_17
0x4003a18	      0xb801000000	                              mov eax, 1	      6056	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_13
0x4003a1d	            0xebd6	                           jmp 0x40039f5	      6056	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_13
0x4003a1f	              0x90	                                     nop	      6056	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	CALL_13
0x4003a20	          0x397504	                cmp dword [rbp + 4], esi	      6131	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	IF_38
0x4003a23	     0xf8f86feffff	                            jg 0x40038af	      6131	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	IF_38
0x4003a29	      0xe912ffffff	                           jmp 0x4003940	      6131	decNumber.c	FUNCTION_2	ELSE_11	ELSE_14	IF_32	ELSE_19	IF_38
0x4003a2e	          0x8d7802	                      lea edi, [rax + 2]	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4003a31	      0xbe56555555	                     mov esi, 0x55555556	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4003a36	            0x89f8	                            mov eax, edi	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4003a38	            0xf7ee	                                imul esi	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4003a3a	            0x89f8	                            mov eax, edi	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4003a3c	          0xc1f81f	                           sar eax, 0x1f	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4003a3f	            0x89d6	                            mov esi, edx	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4003a41	            0x29c6	                            sub esi, eax	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4003a43	      0xe9e4fdffff	                           jmp 0x400382c	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4003a48	          0x8d7002	                      lea esi, [rax + 2]	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4003a4b	      0xba56555555	                     mov edx, 0x55555556	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4003a50	            0x89f0	                            mov eax, esi	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4003a52	            0xf7ea	                                imul edx	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4003a54	            0x89f0	                            mov eax, esi	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4003a56	          0xc1f81f	                           sar eax, 0x1f	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4003a59	            0x89d1	                            mov ecx, edx	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4003a5b	            0x29c1	                            sub ecx, eax	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4003a5d	      0xe9b1fdffff	                           jmp 0x4003813	      6059	decNumber.c	FUNCTION_2	DO_1	IF_10	ELSE_2	IF_13	ELSE_6	CALL_15
0x4003a62	      0xe800000000	                          call 0x4003a67	      6149	decNumber.c	FUNCTION_2
decNumberInvert	ELSE,1:DO,0:CALL,9:IF,6:functions,0:SWITCH,0:WHILE,0:FOR,2	119
0x4002b70	            0x4154	                                push r12	      1195	decNumber.c	FUNCTION_68	FUNCTION_19
0x4002b72	              0x55	                                push rbp	      1195	decNumber.c	FUNCTION_68	FUNCTION_19
0x4002b73	              0x53	                                push rbx	      1195	decNumber.c	FUNCTION_68	FUNCTION_19
0x4002b74	          0x8b4e04	                mov ecx, dword [rsi + 4]	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x4002b77	          0x4889fb	                            mov rbx, rdi	      1195	decNumber.c	FUNCTION_68	FUNCTION_19
0x4002b7a	          0x4889d7	                            mov rdi, rdx	      1195	decNumber.c	FUNCTION_68	FUNCTION_19
0x4002b7d	            0x85c9	                           test ecx, ecx	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x4002b7f	     0xf850b010000	                           jne 0x4002c90	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x4002b85	         0xfb64608	               movzx eax, byte [rsi + 8]	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x4002b89	            0xa870	                           test al, 0x70	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x4002b8b	     0xf85ff000000	                           jne 0x4002c90	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x4002b91	            0x84c0	                             test al, al	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x4002b93	     0xf88f7000000	                            js 0x4002c90	      1203	decNumber.c	FUNCTION_68	FUNCTION_19	IF_2	CALL_3
0x4002b99	          0x486306	                 movsxd rax, dword [rsi]	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4002b9c	        0x4c8d4e0a	                     lea r9, [rsi + 0xa]	      1208	decNumber.c	FUNCTION_68	FUNCTION_19
0x4002ba0	        0x4c8d530a	                    lea r10, [rbx + 0xa]	      1209	decNumber.c	FUNCTION_68	FUNCTION_19
0x4002ba4	          0x83f831	                           cmp eax, 0x31	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4002ba7	     0xf8e13010000	                           jle 0x4002cc0	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4002bad	          0x8d7002	                      lea esi, [rax + 2]	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4002bb0	      0xba56555555	                     mov edx, 0x55555556	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4002bb5	          0x448b27	                   mov r12d, dword [rdi]	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4002bb8	            0x89f0	                            mov eax, esi	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4002bba	            0xf7ea	                                imul edx	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4002bbc	            0x89f0	                            mov eax, esi	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4002bbe	          0xc1f81f	                           sar eax, 0x1f	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4002bc1	            0x29c2	                            sub edx, eax	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4002bc3	          0x4863d2	                         movsxd rdx, edx	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4002bc6	      0x4c8d5c12fe	                lea r11, [rdx + rdx - 2]	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4002bcb	          0x4d01cb	                             add r11, r9	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4002bce	        0x4183fc31	                          cmp r12d, 0x31	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4002bd2	     0xf8f04010000	                            jg 0x4002cdc	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4002bd8	          0x4963c4	                        movsxd rax, r12d	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4002bdb	     0xfb690000000	                   movzx edx, byte [rax]	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4002be2	      0x498d6c52fe	              lea rbp, [r10 + rdx*2 - 2]	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4002be7	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4002beb	          0x4129c4	                           sub r12d, eax	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4002bee	          0x4939ea	                            cmp r10, rbp	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x4002bf1	            0x7778	                            ja 0x4002c6b	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x4002bf3	          0x4c89d6	                            mov rsi, r10	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x4002bf6	        0x4183ec01	                             sub r12d, 1	      1229	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_6
0x4002bfa	    0x660f1f440000	                    nop word [rax + rax]	      1229	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_6
0x4002c00	            0x31d2	                            xor edx, edx	      1216	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	IF_3
0x4002c02	          0x4d39cb	                             cmp r11, r9	      1216	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	IF_3
0x4002c05	            0x7204	                            jb 0x4002c0b	      1216	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	IF_3
0x4002c07	        0x410fb711	                    movzx edx, word [r9]	      1217	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1
0x4002c0b	            0x31c0	                            xor eax, eax	      1218	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1
0x4002c0d	          0x4531c0	                            xor r8d, r8d	      1218	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1
0x4002c10	          0x668906	                      mov word [rsi], ax	      1218	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1
0x4002c13	          0xf6c201	                              test dl, 1	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x4002c16	            0x750b	                           jne 0x4002c23	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x4002c18	    0x428b04850000	                   mov eax, dword [r8*4]	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x4002c20	          0x660106	                      add word [rsi], ax	      1222	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_4
0x4002c23	           0xfb7c2	                           movzx eax, dx	      1223	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4002c26	    0x69c0cdcc0000	                   imul eax, eax, 0xcccd	      1223	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4002c2c	          0xc1e813	                           shr eax, 0x13	      1223	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4002c2f	            0x89c1	                            mov ecx, eax	      1223	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4002c31	          0x8d0489	                  lea eax, [rcx + rcx*4]	      1223	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4002c34	             0x1c0	                            add eax, eax	      1223	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4002c36	            0x29c2	                            sub edx, eax	      1223	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4002c38	            0x89d0	                            mov eax, edx	      1223	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4002c3a	            0x89ca	                            mov edx, ecx	      1224	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4002c3c	        0x6683f801	                               cmp ax, 1	      1225	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5
0x4002c40	            0x774e	                            ja 0x4002c90	      1225	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_5
0x4002c42	          0x4839f5	                            cmp rbp, rsi	      1229	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_6
0x4002c45	     0xf84b5000000	                            je 0x4002d00	      1229	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_6
0x4002c4b	        0x4983c001	                               add r8, 1	      1229	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_6
0x4002c4f	        0x4983f803	                               cmp r8, 3	      1221	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4002c53	            0x75be	                           jne 0x4002c13	      1221	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2
0x4002c55	        0x4883c602	                              add rsi, 2	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x4002c59	        0x4983c102	                               add r9, 2	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x4002c5d	          0x4839ee	                            cmp rsi, rbp	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x4002c60	            0x769e	                           jbe 0x4002c00	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x4002c62	          0x4c29d6	                            sub rsi, r10	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x4002c65	          0x48d1ee	                              shr rsi, 1	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x4002c68	          0x4889f1	                            mov rcx, rsi	      1213	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1
0x4002c6b	            0x89ce	                            mov esi, ecx	      1233	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_9
0x4002c6d	          0x4c89d7	                            mov rdi, r10	      1233	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_9
0x4002c70	      0xe86bdaffff	                   call sym.decGetDigits	      1233	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_9
0x4002c75	    0xc74304000000	                  mov dword [rbx + 4], 0	      1234	decNumber.c	FUNCTION_68	FUNCTION_19
0x4002c7c	            0x8903	                    mov dword [rbx], eax	      1233	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_9
0x4002c7e	          0x4889d8	                            mov rax, rbx	      1237	decNumber.c	FUNCTION_68	FUNCTION_19
0x4002c81	        0xc6430800	                   mov byte [rbx + 8], 0	      1235	decNumber.c	FUNCTION_68	FUNCTION_19
0x4002c85	              0x5b	                                 pop rbx	      1237	decNumber.c	FUNCTION_68	FUNCTION_19
0x4002c86	              0x5d	                                 pop rbp	      1237	decNumber.c	FUNCTION_68	FUNCTION_19
0x4002c87	            0x415c	                                 pop r12	      1237	decNumber.c	FUNCTION_68	FUNCTION_19
0x4002c89	              0xc3	                                     ret	      1237	decNumber.c	FUNCTION_68	FUNCTION_19
0x4002c8a	    0x660f1f440000	                    nop word [rax + rax]	      1237	decNumber.c	FUNCTION_68	FUNCTION_19
0x4002c90	            0x31d2	                            xor edx, edx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4002c92	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4002c99	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4002c9f	        0x6689530a	                mov word [rbx + 0xa], dx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4002ca3	        0xc6430820	                mov byte [rbx + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x4002ca7	      0xbe80000000	                           mov esi, 0x80	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4002cac	      0xe800000000	                          call 0x4002cb1	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4002cb1	          0x4889d8	                            mov rax, rbx	      1237	decNumber.c	FUNCTION_68	FUNCTION_19
0x4002cb4	              0x5b	                                 pop rbx	      1237	decNumber.c	FUNCTION_68	FUNCTION_19
0x4002cb5	              0x5d	                                 pop rbp	      1237	decNumber.c	FUNCTION_68	FUNCTION_19
0x4002cb6	            0x415c	                                 pop r12	      1237	decNumber.c	FUNCTION_68	FUNCTION_19
0x4002cb8	              0xc3	                                     ret	      1237	decNumber.c	FUNCTION_68	FUNCTION_19
0x4002cb9	     0xf1f80000000	                         nop dword [rax]	      1237	decNumber.c	FUNCTION_68	FUNCTION_19
0x4002cc0	     0xfb680000000	                   movzx eax, byte [rax]	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4002cc7	          0x448b27	                   mov r12d, dword [rdi]	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4002cca	      0x4c8d5c00fe	                lea r11, [rax + rax - 2]	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4002ccf	          0x4d01cb	                             add r11, r9	      1210	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_5
0x4002cd2	        0x4183fc31	                          cmp r12d, 0x31	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4002cd6	     0xf8efcfeffff	                           jle 0x4002bd8	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4002cdc	      0x418d742402	                      lea esi, [r12 + 2]	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4002ce1	      0xba56555555	                     mov edx, 0x55555556	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4002ce6	            0x89f0	                            mov eax, esi	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4002ce8	          0xc1fe1f	                           sar esi, 0x1f	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4002ceb	            0xf7ea	                                imul edx	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4002ced	            0x29f2	                            sub edx, esi	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4002cef	          0x4863c2	                         movsxd rax, edx	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4002cf2	      0x498d6c42fe	              lea rbp, [r10 + rax*2 - 2]	      1211	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_6
0x4002cf7	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4002cfb	      0xe9ebfeffff	                           jmp 0x4002beb	      1212	decNumber.c	FUNCTION_68	FUNCTION_19	CALL_7
0x4002d00	          0x4539c4	                           cmp r12d, r8d	      1229	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_6
0x4002d03	     0xf8542ffffff	                           jne 0x4002c4b	      1229	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_6
0x4002d09	      0xe947ffffff	                           jmp 0x4002c55	      1229	decNumber.c	FUNCTION_68	FUNCTION_19	FOR_1	ELSE_1	FOR_2	IF_6
decDivideOp	ELSE,15:DO,1:CALL,50:IF,78:functions,0:SWITCH,0:WHILE,0:FOR,13	980
0x4005d10	            0x4157	                                push r15	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005d12	            0x4156	                                push r14	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005d14	            0x4155	                                push r13	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005d16	            0x4154	                                push r12	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005d18	              0x55	                                push rbp	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005d19	              0x53	                                push rbx	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005d1a	          0x4889d3	                            mov rbx, rdx	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005d1d	    0x4881ec180100	                          sub rsp, 0x118	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005d24	         0xfb64608	               movzx eax, byte [rsi + 8]	      4277	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005d28	      0x4889542470	             mov qword [rsp + 0x70], rdx	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005d2d	         0xfb65208	               movzx edx, byte [rdx + 8]	      4277	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005d31	      0x48894c2478	             mov qword [rsp + 0x78], rcx	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005d36	      0x48897c2440	             mov qword [rsp + 0x40], rdi	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005d3b	    0x64488b3c2528	                mov rdi, qword fs:[0x28]	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005d44	    0x4889bc240801	            mov qword [rsp + 0x108], rdi	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005d4c	            0x31ff	                            xor edi, edi	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005d4e	            0x89c1	                            mov ecx, eax	      4277	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005d50	      0x4889742460	             mov qword [rsp + 0x60], rsi	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005d55	      0x4489442468	             mov dword [rsp + 0x68], r8d	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005d5a	            0x31d1	                            xor ecx, edx	      4277	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005d5c	      0x4c894c2448	              mov qword [rsp + 0x48], r9	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005d61	    0x448884248e00	              mov byte [rsp + 0x8e], r8b	      4213	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005d69	          0x83e180	                     and ecx, 0xffffff80	      4277	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005d6c	    0x888c24830000	               mov byte [rsp + 0x83], cl	      4277	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005d73	            0x89c1	                            mov ecx, eax	      4280	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7
0x4005d75	             0x9d1	                             or ecx, edx	      4280	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7
0x4005d77	          0xf6c170	                           test cl, 0x70	      4280	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7
0x4005d7a	            0x7462	                            je 0x4005dde	      4280	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7
0x4005d7c	          0x83e130	                           and ecx, 0x30	      4281	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8
0x4005d7f	     0xf8554060000	                           jne 0x40063d9	      4281	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8
0x4005d85	            0xa840	                           test al, 0x40	      4286	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	CALL_7
0x4005d87	     0xf8402050000	                            je 0x400628f	      4286	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	CALL_7
0x4005d8d	          0x83e240	                           and edx, 0x40	      4287	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	IF_10	CALL_8
0x4005d90	     0xf859a040000	                           jne 0x4006230	      4287	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	IF_10	CALL_8
0x4005d96	      0xf644246850	           test byte [rsp + 0x68], 0x50 	      4287	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	IF_10	CALL_8
0x4005d9b	     0xf858f040000	                           jne 0x4006230	      4287	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	IF_10	CALL_8
0x4005da1	     0xfb684248300	           movzx eax, byte [rsp + 0x83] 	      4294	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9
0x4005da9	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005dae	            0x31ed	                            xor ebp, ebp	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005db0	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005db9	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005dc2	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005dc9	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005dcf	          0x83c840	                            or eax, 0x40	      4294	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9
0x4005dd2	        0x66896b0a	                mov word [rbx + 0xa], bp	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005dd6	          0x884308	                  mov byte [rbx + 8], al	      4294	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9
0x4005dd9	      0xe96f040000	                           jmp 0x400624d	      4295	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9
0x4005dde	      0x488b5c2470	            mov rbx, qword [rsp + 0x70] 	      4319	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	CALL_12
0x4005de3	      0x66837b0a00	                 cmp word [rbx + 0xa], 0	      4319	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	CALL_12
0x4005de8	            0x7509	                           jne 0x4005df3	      4319	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	CALL_12
0x4005dea	          0x833b01	                      cmp dword [rbx], 1	      4319	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	CALL_12
0x4005ded	     0xf849d060000	                            je 0x4006490	      4319	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	CALL_12
0x4005df3	      0x488b5c2460	            mov rbx, qword [rsp + 0x60] 	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x4005df8	      0x66837b0a00	                 cmp word [rbx + 0xa], 0	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x4005dfd	     0xf84c0030000	                            je 0x40061c3	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x4005e03	      0x488b5c2460	            mov rbx, qword [rsp + 0x60] 	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x4005e08	          0x448b2b	                   mov r13d, dword [rbx]	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x4005e0b	      0x488b5c2460	            mov rbx, qword [rsp + 0x60] 	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005e10	        0x448b6304	               mov r12d, dword [rbx + 4]	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005e14	      0x488b5c2470	            mov rbx, qword [rsp + 0x70] 	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005e19	          0x8b7b04	                mov edi, dword [rbx + 4]	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005e1c	          0x448b3b	                   mov r15d, dword [rbx]	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005e1f	            0x89f9	                            mov ecx, edi	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005e21	        0x897c2408	                mov dword [rsp + 8], edi	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005e25	      0x438d7c2500	                    lea edi, [r13 + r12]	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005e2a	        0x428d1439	                    lea edx, [rcx + r15]	      4366	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005e2e	            0x29d7	                            sub edi, edx	      4371	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21
0x4005e30	        0x897c2430	             mov dword [rsp + 0x30], edi	      4371	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21
0x4005e34	            0x791d	                           jns 0x4005e53	      4371	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21
0x4005e36	        0x8b5c2468	            mov ebx, dword [rsp + 0x68] 	      4371	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21
0x4005e3a	          0x80fb80	                            cmp bl, 0x80	      4371	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21
0x4005e3d	            0x7414	                            je 0x4005e53	      4371	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21
0x4005e3f	          0x83e320	                           and ebx, 0x20	      4372	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_22
0x4005e42	     0xf8555050000	                           jne 0x400639d	      4372	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_22
0x4005e48	      0x443b642408	               cmp r12d, dword [rsp + 8]	      4381	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24
0x4005e4d	     0xf8eb2050000	                           jle 0x4006405	      4381	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24
0x4005e53	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      4243	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005e58	            0x8b00	                    mov eax, dword [rax]	      4243	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005e5a	          0x83f82e	                           cmp eax, 0x2e	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x4005e5d	        0x8944246c	             mov dword [rsp + 0x6c], eax	      4243	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005e61	     0xf8f0b050000	                            jg 0x4006372	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x4005e67	          0x83c003	                              add eax, 3	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x4005e6a	            0x4898	                                    cdqe	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x4005e6c	     0xfb680000000	                   movzx eax, byte [rax]	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x4005e73	            0x4898	                                    cdqe	      4399	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x4005e75	    0x488d9c24a000	                   lea rbx, [rsp + 0xa0]	      4219	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005e7d	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005e86	          0x4801c0	                            add rax, rax	      4399	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x4005e89	        0x4883f822	                           cmp rax, 0x22	      4399	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x4005e8d	      0x4889442428	             mov qword [rsp + 0x28], rax	      4399	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x4005e92	      0x48895c2410	             mov qword [rsp + 0x10], rbx	      4219	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005e97	     0xf87280a0000	                            ja 0x40068c5	      4399	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x4005e9d	        0x8b44246c	            mov eax, dword [rsp + 0x6c] 	      4419	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005ea1	      0x428d4438ff	                lea eax, [rax + r15 - 1]	      4419	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005ea6	          0x4139c5	                           cmp r13d, eax	      4419	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005ea9	        0x410f4dc5	                        cmovge eax, r13d	      4419	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005ead	          0x83f831	                           cmp eax, 0x31	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4005eb0	     0xf8fa0040000	                            jg 0x4006356	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4005eb6	            0x4898	                                    cdqe	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4005eb8	    0x440fb6980000	                  movzx r11d, byte [rax]	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4005ec0	        0x458d7302	                     lea r14d, [r11 + 2]	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4005ec4	        0x8b442468	            mov eax, dword [rsp + 0x68] 	      4423	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_29
0x4005ec8	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005ed1	    0x488dac24d000	                   lea rbp, [rsp + 0xd0]	      4227	decNumber.c	FUNCTION_68	FUNCTION_65
0x4005ed9	            0x3c80	                            cmp al, 0x80	      4423	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_29
0x4005edb	    0x8884248d0000	               mov byte [rsp + 0x8d], al	      4423	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_29
0x4005ee2	        0x4183d600	                             adc r14d, 0	      4423	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_29
0x4005ee6	        0x418d5e01	                      lea ebx, [r14 + 1]	      4424	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x4005eea	          0x4863db	                         movsxd rbx, ebx	      4424	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x4005eed	          0x4801db	                            add rbx, rbx	      4424	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x4005ef0	        0x4883fb32	                           cmp rbx, 0x32	      4424	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x4005ef4	     0xf874c0a0000	                            ja 0x4006946	      4424	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x4005efa	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4005eff	        0x4183fd31	                          cmp r13d, 0x31	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4005f03	      0x488d5c1dfc	                lea rbx, [rbp + rbx - 4]	      4439	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005f08	        0x488d780a	                    lea rdi, [rax + 0xa]	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4005f0c	     0xf8f12040000	                            jg 0x4006324	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4005f12	          0x4963c5	                        movsxd rax, r13d	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4005f15	          0x4889fa	                            mov rdx, rdi	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4005f18	     0xfb680000000	                   movzx eax, byte [rax]	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4005f1f	      0x488d4400fe	                lea rax, [rax + rax - 2]	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4005f24	          0x4801c2	                            add rdx, rax	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4005f27	     0xf8221040000	                            jb 0x400634e	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4005f2d	          0x4989d8	                             mov r8, rbx	      4439	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005f30	           0xfb70a	                   movzx ecx, word [rdx]	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4005f33	        0x4883ea02	                              sub rdx, 2	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4005f37	        0x4983e802	                               sub r8, 2	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4005f3b	      0x6641894802	                   mov word [r8 + 2], cx	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4005f40	          0x4839d7	                            cmp rdi, rdx	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4005f43	            0x76eb	                           jbe 0x4005f30	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4005f45	        0x4883f0fe	             xor rax, 0xfffffffffffffffe	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4005f49	          0x4801d8	                            add rax, rbx	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4005f4c	            0xeb0e	                           jmp 0x4005f5c	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4005f4e	            0x6690	                                     nop	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4005f50	          0x4531c0	                            xor r8d, r8d	      4442	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_2
0x4005f53	        0x4883e802	                              sub rax, 2	      4442	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_2
0x4005f57	      0x6644894002	                 mov word [rax + 2], r8w	      4442	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_2
0x4005f5c	          0x4839c5	                            cmp rbp, rax	      4442	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_2
0x4005f5f	            0x76ef	                           jbe 0x4005f50	      4442	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_2
0x4005f61	        0x4183ff31	                          cmp r15d, 0x31	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x4005f65	     0xf8f9e030000	                            jg 0x4006309	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x4005f6b	          0x4963cf	                        movsxd rcx, r15d	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x4005f6e	     0xfb681000000	                   movzx eax, byte [rcx]	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x4005f75	        0x8944240c	              mov dword [rsp + 0xc], eax	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x4005f79	      0x488b442470	            mov rax, qword [rsp + 0x70] 	      4447	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005f7e	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      4448	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005f82	        0x4c8d780a	                    lea r15, [rax + 0xa]	      4447	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005f86	          0x4863c6	                         movsxd rax, esi	      4448	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005f89	          0x83fe01	                              cmp esi, 1	      4453	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_32
0x4005f8c	      0x498d4447fe	              lea rax, [r15 + rax*2 - 2]	      4448	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005f91	           0xfb708	                   movzx ecx, word [rax]	      4452	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005f94	          0x4889c2	                            mov rdx, rax	      4448	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005f97	      0x4889442418	             mov qword [rsp + 0x18], rax	      4448	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005f9c	            0x89cf	                            mov edi, ecx	      4452	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005f9e	     0xf8e8f090000	                           jle 0x4006933	      4453	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_32
0x4005fa4	          0x8d4101	                      lea eax, [rcx + 1]	      4453	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_32
0x4005fa7	         0xfb752fe	               movzx edx, word [rdx - 2]	      4456	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33
0x4005fab	        0x89442420	             mov dword [rsp + 0x20], eax	      4453	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_32
0x4005faf	    0x69c1e8030000	                    imul eax, ecx, 0x3e8	      4454	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4005fb5	             0x1d0	                            add eax, edx	      4456	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33
0x4005fb7	          0x83fe02	                              cmp esi, 2	      4457	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33	IF_34
0x4005fba	            0x89c2	                            mov edx, eax	      4456	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33
0x4005fbc	           0xf95c0	                                setne al	      4457	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33	IF_34
0x4005fbf	           0xfb6c0	                           movzx eax, al	      4457	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33	IF_34
0x4005fc2	            0x89d6	                            mov esi, edx	      4457	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33	IF_34
0x4005fc4	             0x1c6	                            add esi, eax	      4457	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33	IF_34
0x4005fc6	        0x89742424	             mov dword [rsp + 0x24], esi	      4457	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_33	IF_34
0x4005fca	        0x440fb703	                   movzx r8d, word [rbx]	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x4005fce	    0x443905000000	            cmp dword [0x04005fd5], r8d 	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x4005fd5	          0x4489c0	                            mov eax, r8d	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x4005fd8	            0x7719	                            ja 0x4005ff3	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x4005fda	        0x8b742430	            mov esi, dword [rsp + 0x30] 	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x4005fde	      0xba00000000	                              mov edx, 0	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x4005fe3	        0x4883c204	                              add rdx, 4	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x4005fe7	          0x83ee01	                              sub esi, 1	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x4005fea	          0x443902	                    cmp dword [rdx], r8d	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x4005fed	            0x76f4	                           jbe 0x4005fe3	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x4005fef	        0x89742430	             mov dword [rsp + 0x30], esi	      4466	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_3
0x4005ff3	    0x390d00000000	            cmp dword [0x04005ff9], ecx 	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x4005ff9	            0x7718	                            ja 0x4006013	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x4005ffb	        0x8b742430	            mov esi, dword [rsp + 0x30] 	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x4005fff	      0xba00000000	                              mov edx, 0	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x4006004	        0x4883c204	                              add rdx, 4	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x4006008	          0x83c601	                              add esi, 1	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x400600b	            0x390a	                    cmp dword [rdx], ecx	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x400600d	            0x76f5	                           jbe 0x4006004	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x400600f	        0x89742430	             mov dword [rsp + 0x30], esi	      4467	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_4
0x4006013	      0x807c246800	                cmp byte [rsp + 0x68], 0	      4474	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35
0x4006018	     0xf88e2080000	                            js 0x4006900	      4474	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35
0x400601e	        0x4183fd31	                          cmp r13d, 0x31	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4006022	     0xf8e66030000	                           jle 0x400638e	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4006028	        0x418d4d02	                      lea ecx, [r13 + 2]	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x400602c	      0xba56555555	                     mov edx, 0x55555556	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4006031	            0x89c8	                            mov eax, ecx	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4006033	            0xf7ea	                                imul edx	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4006035	            0x89c8	                            mov eax, ecx	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4006037	          0xc1f81f	                           sar eax, 0x1f	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x400603a	            0x29c2	                            sub edx, eax	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x400603c	            0x89d0	                            mov eax, edx	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x400603e	          0x4489f7	                           mov edi, r14d	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4006041	            0x29c7	                            sub edi, eax	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4006043	        0x448d247f	                 lea r12d, [rdi + rdi*2]	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4006047	        0x8b7c2430	            mov edi, dword [rsp + 0x30] 	      4479	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	IF_36
0x400604b	            0x85ff	                           test edi, edi	      4479	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	IF_36
0x400604d	     0xf8855090000	                            js 0x40069a8	      4479	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	IF_36
0x4006053	        0x8b442430	            mov eax, dword [rsp + 0x30] 	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x4006057	        0x8b4c2430	            mov ecx, dword [rsp + 0x30] 	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x400605b	      0xba56555555	                     mov edx, 0x55555556	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x4006060	            0xf7ea	                                imul edx	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x4006062	            0x89c8	                            mov eax, ecx	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x4006064	          0xc1f81f	                           sar eax, 0x1f	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x4006067	            0x29c2	                            sub edx, eax	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x4006069	          0x8d0452	                  lea eax, [rdx + rdx*2]	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x400606c	            0x29c8	                            sub eax, ecx	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x400606e	        0x448d6803	                     lea r13d, [rax + 3]	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x4006072	          0x4489ea	                           mov edx, r13d	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x4006075	          0x4489f6	                           mov esi, r14d	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x4006078	          0x4889ef	                            mov rdi, rbp	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x400607b	      0xe8c0aeffff	         call sym.decShiftToLeast.part.1	      4480	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	ELSE_8
0x4006080	          0x4529ec	                          sub r12d, r13d	      4483	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35
0x4006083	      0x44016c2430	            add dword [rsp + 0x30], r13d	      4482	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35
0x4006088	        0x4183fd02	                             cmp r13d, 2	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x400608c	    0x4489a4248800	            mov dword [rsp + 0x88], r12d	      4483	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35
0x4006094	          0x4889d8	                            mov rax, rbx	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x4006097	            0x7e14	                           jle 0x40060ad	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x4006099	            0x31f6	                            xor esi, esi	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x400609b	        0x4183ed03	                             sub r13d, 3	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x400609f	        0x4883e802	                              sub rax, 2	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x40060a3	        0x66897002	                  mov word [rax + 2], si	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x40060a7	        0x4183fd02	                             cmp r13d, 2	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x40060ab	            0x7fec	                            jg 0x4006099	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x40060ad	           0xfb703	                   movzx eax, word [rbx]	      4485	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	FOR_5
0x40060b0	      0x4489742408	               mov dword [rsp + 8], r14d	      4445	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40060b5	    0xc78424840000	               mov dword [rsp + 0x84], 0	      4245	decNumber.c	FUNCTION_68	FUNCTION_65
0x40060c0	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      4500	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40060c5	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4500	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40060ca	    0xc74424340000	               mov dword [rsp + 0x34], 0	      4499	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40060d2	    0xc74424280000	               mov dword [rsp + 0x28], 0	      4498	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40060da	      0x488d7c0ffe	                lea rdi, [rdi + rcx - 2]	      4500	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40060df	      0x48897c2438	             mov qword [rsp + 0x38], rdi	      4500	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40060e4	     0xfb6bc248e00	           movzx edi, byte [rsp + 0x8e] 	      4582	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_50
0x40060ec	          0x83e750	                           and edi, 0x50	      4582	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_50
0x40060ef	    0x4088bc248e00	              mov byte [rsp + 0x8e], dil	      4582	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_50
0x40060f7	     0xfb6bc248d00	           movzx edi, byte [rsp + 0x8d] 	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x40060ff	            0x89f9	                            mov ecx, edi	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x4006101	          0xc0e907	                               shr cl, 7	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x4006104	    0x888c248f0000	               mov byte [rsp + 0x8f], cl	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x400610b	            0x89f9	                            mov ecx, edi	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x400610d	            0xf7d1	                                 not ecx	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x400610f	            0x89ca	                            mov edx, ecx	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x4006111	          0x4489f1	                           mov ecx, r14d	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x4006114	          0x4989ee	                            mov r14, rbp	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x4006117	          0xc0ea07	                               shr dl, 7	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x400611a	            0x89cd	                            mov ebp, ecx	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x400611c	    0x8894248d0000	               mov byte [rsp + 0x8d], dl	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x4006123	       0xf1f440000	                   nop dword [rax + rax]	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x4006128	        0x8b7c2408	                mov edi, dword [rsp + 8]	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x400612c	        0x2b7c240c	              sub edi, dword [rsp + 0xc]	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x4006130	            0x89e9	                            mov ecx, ebp	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x4006132	          0x4531e4	                          xor r12d, r12d	      4502	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6
0x4006135	          0x4c89f5	                            mov rbp, r14	      4502	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6
0x4006138	          0x4863d7	                         movsxd rdx, edi	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x400613b	        0x897c2410	             mov dword [rsp + 0x10], edi	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x400613f	        0x4d8d2c56	                  lea r13, [r14 + rdx*2]	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x4006143	          0x4189ce	                           mov r14d, ecx	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x4006146	            0xeb18	                           jmp 0x4006160	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x4006148	     0xf1f84000000	                   nop dword [rax + rax]	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x4006150	          0x4839dd	                            cmp rbp, rbx	      4507	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	FOR_8
0x4006153	            0x7310	                           jae 0x4006165	      4507	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	FOR_8
0x4006155	        0x4183ee01	                             sub r14d, 1	      4507	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	FOR_8
0x4006159	        0x4883eb02	                              sub rbx, 2	      4507	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	FOR_8
0x400615d	           0xfb703	                   movzx eax, word [rbx]	      4507	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	FOR_8
0x4006160	          0x6685c0	                             test ax, ax	      4507	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	FOR_8
0x4006163	            0x74eb	                            je 0x4006150	      4507	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	FOR_8
0x4006165	      0x443b742408	               cmp r14d, dword [rsp + 8]	      4509	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_38
0x400616a	     0xf8c07040000	                            jl 0x4006577	      4509	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_38
0x4006170	     0xf84b2030000	                            je 0x4006528	      4510	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x4006176	         0xfb753fe	               movzx edx, word [rbx - 2]	      4541	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	ELSE_10
0x400617a	    0x69c0e8030000	                    imul eax, eax, 0x3e8	      4541	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	ELSE_10
0x4006180	             0x1d0	                            add eax, edx	      4541	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	ELSE_10
0x4006182	              0x99	                                     cdq	      4541	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	ELSE_10
0x4006183	        0xf77c2420	                 idiv dword [rsp + 0x20]	      4541	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	ELSE_10
0x4006187	            0x85c0	                           test eax, eax	      4543	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_45
0x4006189	      0xbaffffffff	                     mov edx, 0xffffffff	      4543	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_45
0x400618e	      0xb901000000	                              mov ecx, 1	      4543	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_45
0x4006193	            0x7406	                            je 0x400619b	      4543	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_45
0x4006195	            0x89c1	                            mov ecx, eax	      4543	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_45
0x4006197	            0xf7d8	                                 neg eax	      4543	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_45
0x4006199	            0x89c2	                            mov edx, eax	      4543	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_45
0x400619b	        0x4883ec08	                              sub rsp, 8	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x400619f	          0x4489f6	                           mov esi, r14d	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x40061a2	        0x2b742418	             sub esi, dword [rsp + 0x18]	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x40061a6	          0x4101cc	                           add r12d, ecx	      4545	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7
0x40061a9	              0x52	                                push rdx	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x40061aa	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x40061ae	          0x4c89fa	                            mov rdx, r15	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x40061b1	          0x4d89e9	                             mov r9, r13	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x40061b4	          0x4531c0	                            xor r8d, r8d	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x40061b7	          0x4c89ef	                            mov rdi, r13	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x40061ba	      0xe8819effff	                  call sym.decUnitAddSub	      4554	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	CALL_33
0x40061bf	              0x58	                                 pop rax	      4562	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7
0x40061c0	              0x5a	                                 pop rdx	      4562	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7
0x40061c1	            0xeb9a	                           jmp 0x400615d	      4562	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7
0x40061c3	          0x448b2b	                   mov r13d, dword [rbx]	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x40061c6	        0x4183fd01	                             cmp r13d, 1	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x40061ca	     0xf853bfcffff	                           jne 0x4005e0b	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x40061d0	            0xa870	                           test al, 0x70	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x40061d2	     0xf8533fcffff	                           jne 0x4005e0b	      4335	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	CALL_16
0x40061d8	      0x807c246800	                cmp byte [rsp + 0x68], 0	      4340	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x40061dd	     0xf8817080000	                            js 0x40069fa	      4340	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x40061e3	      0xf644246820	           test byte [rsp + 0x68], 0x20 	      4348	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_6	IF_19
0x40061e8	     0xf85af010000	                           jne 0x400639d	      4348	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_6	IF_19
0x40061ee	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	      4354	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7	CALL_21
0x40061f3	      0x488b442470	            mov rax, qword [rsp + 0x70] 	      4353	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7
0x40061f8	      0x488b742460	            mov rsi, qword [rsp + 0x60] 	      4354	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7	CALL_21
0x40061fd	          0x4889df	                            mov rdi, rbx	      4354	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7	CALL_21
0x4006200	        0x448b5004	               mov r10d, dword [rax + 4]	      4353	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7
0x4006204	      0xe800000000	                          call 0x4006209	      4354	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7	CALL_21
0x4006209	        0x443b5304	               cmp r10d, dword [rbx + 4]	      4355	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7	IF_20
0x400620d	     0xf8dd0070000	                           jge 0x40069e3	      4355	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7	IF_20
0x4006213	        0x44895304	               mov dword [rbx + 4], r10d	      4355	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	ELSE_7	IF_20
0x4006217	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x4006220	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x4006229	            0xeb22	                           jmp 0x400624d	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x400622b	       0xf1f440000	                   nop dword [rax + rax]	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x4006230	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      4289	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	IF_10
0x4006235	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x400623e	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x4006247	    0x810880000000	                    or dword [rax], 0x80	      4289	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_9	IF_10
0x400624d	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      4785	decNumber.c	FUNCTION_68	FUNCTION_65
0x4006252	      0xe800000000	                          call 0x4006257	      4785	decNumber.c	FUNCTION_68	FUNCTION_65
0x4006257	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      4786	decNumber.c	FUNCTION_68	FUNCTION_65
0x400625c	      0xe800000000	                          call 0x4006261	      4786	decNumber.c	FUNCTION_68	FUNCTION_65
0x4006261	    0x488b9c240801	           mov rbx, qword [rsp + 0x108] 	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x4006269	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x4006272	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x4006277	     0xf85be0a0000	                           jne 0x4006d3b	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x400627d	    0x4881c4180100	                          add rsp, 0x118	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x4006284	              0x5b	                                 pop rbx	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x4006285	              0x5d	                                 pop rbp	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x4006286	            0x415c	                                 pop r12	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x4006288	            0x415d	                                 pop r13	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x400628a	            0x415e	                                 pop r14	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x400628c	            0x415f	                                 pop r15	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x400628e	              0xc3	                                     ret	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x400628f	      0xf644246850	           test byte [rsp + 0x68], 0x50 	      4299	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	IF_11
0x4006294	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      4298	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1
0x400629f	     0xf85cb060000	                           jne 0x4006970	      4299	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	IF_11
0x40062a5	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40062aa	            0x31db	                            xor ebx, ebx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40062ac	      0x807c246800	                cmp byte [rsp + 0x68], 0	      4308	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x40062b1	        0x6689580a	                mov word [rax + 0xa], bx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40062b5	     0xfb69c248300	           movzx ebx, byte [rsp + 0x83] 	      4305	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2
0x40062bd	    0xc74004000000	                  mov dword [rax + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40062c4	    0xc70001000000	                      mov dword [rax], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40062ca	          0x885808	                  mov byte [rax + 8], bl	      4305	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2
0x40062cd	    0x488d9c249c00	                   lea rbx, [rsp + 0x9c]	      4305	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2
0x40062d5	     0xf8825020000	                            js 0x4006500	      4308	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x40062db	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      4313	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1
0x40062e0	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	      4313	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1
0x40062e5	          0x4889da	                            mov rdx, rbx	      4313	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1
0x40062e8	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      4313	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1
0x40062ed	      0xe86ebbffff	                    call sym.decFinalize	      4313	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1
0x40062f2	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x40062fb	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x4006304	      0xe944ffffff	                           jmp 0x400624d	      4314	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1
0x4006309	        0x418d4f02	                      lea ecx, [r15 + 2]	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x400630d	      0xba56555555	                     mov edx, 0x55555556	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x4006312	            0x89c8	                            mov eax, ecx	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x4006314	          0xc1f91f	                           sar ecx, 0x1f	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x4006317	            0xf7ea	                                imul edx	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x4006319	            0x29ca	                            sub edx, ecx	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x400631b	        0x8954240c	              mov dword [rsp + 0xc], edx	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x400631f	      0xe955fcffff	                           jmp 0x4005f79	      4446	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_27
0x4006324	        0x458d4502	                      lea r8d, [r13 + 2]	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4006328	      0xba56555555	                     mov edx, 0x55555556	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x400632d	          0x4489c0	                            mov eax, r8d	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4006330	        0x41c1f81f	                           sar r8d, 0x1f	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4006334	            0xf7ea	                                imul edx	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4006336	            0x89d0	                            mov eax, edx	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4006338	          0x4889fa	                            mov rdx, rdi	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x400633b	          0x4429c0	                            sub eax, r8d	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x400633e	            0x4898	                                    cdqe	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4006340	      0x488d4400fe	                lea rax, [rax + rax - 2]	      4440	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_26
0x4006345	          0x4801c2	                            add rdx, rax	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x4006348	     0xf83dffbffff	                           jae 0x4005f2d	      4441	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_1
0x400634e	          0x4889d8	                            mov rax, rbx	      4439	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4006351	      0xe906fcffff	                           jmp 0x4005f5c	      4439	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4006356	          0x8d7802	                      lea edi, [rax + 2]	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4006359	      0xba56555555	                     mov edx, 0x55555556	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x400635e	            0x89f8	                            mov eax, edi	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4006360	            0xf7ea	                                imul edx	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4006362	            0x89f8	                            mov eax, edi	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4006364	          0xc1f81f	                           sar eax, 0x1f	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4006367	            0x29c2	                            sub edx, eax	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4006369	        0x448d7202	                     lea r14d, [rdx + 2]	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x400636d	      0xe952fbffff	                           jmp 0x4005ec4	      4421	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_25
0x4006372	        0x8b44246c	            mov eax, dword [rsp + 0x6c] 	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x4006376	      0xba56555555	                     mov edx, 0x55555556	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x400637b	          0x8d7805	                      lea edi, [rax + 5]	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x400637e	            0x89f8	                            mov eax, edi	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x4006380	          0xc1ff1f	                           sar edi, 0x1f	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x4006383	            0xf7ea	                                imul edx	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x4006385	            0x89d0	                            mov eax, edx	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x4006387	            0x29f8	                            sub eax, edi	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x4006389	      0xe9e5faffff	                           jmp 0x4005e73	      4398	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_24
0x400638e	          0x4963c5	                        movsxd rax, r13d	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4006391	     0xfb680000000	                   movzx eax, byte [rax]	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x4006398	      0xe9a1fcffff	                           jmp 0x400603e	      4477	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	CALL_28
0x400639d	     0xfb69c248300	           movzx ebx, byte [rsp + 0x83] 	      4377	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_22	IF_23
0x40063a5	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40063aa	          0x4531c9	                            xor r9d, r9d	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40063ad	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x40063b6	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x40063bf	    0xc74004000000	                  mov dword [rax + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40063c6	    0xc70001000000	                      mov dword [rax], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40063cc	      0x664489480a	               mov word [rax + 0xa], r9w	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40063d1	          0x885808	                  mov byte [rax + 8], bl	      4377	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_22	IF_23
0x40063d4	      0xe974feffff	                           jmp 0x400624d	      4378	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_22
0x40063d9	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	      4282	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8	CALL_6
0x40063de	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      4282	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8	CALL_6
0x40063e3	          0x4d89c8	                              mov r8, r9	      4282	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8	CALL_6
0x40063e6	          0x4889da	                            mov rdx, rbx	      4282	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8	CALL_6
0x40063e9	      0xe802d0ffff	                 call sym.decNaNs.isra.6	      4282	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8	CALL_6
0x40063ee	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x40063f7	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x4006400	      0xe948feffff	                           jmp 0x400624d	      4283	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	IF_8
0x4006405	      0xf644246840	           test byte [rsp + 0x68], 0x40 	      4382	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x400640a	            0x750b	                           jne 0x4006417	      4382	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x400640c	      0x837c2430ff	cmp dword [rsp + 0x30], 0xffffffffffffffff	      4382	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x4006411	     0xf843cfaffff	                            je 0x4005e53	      4382	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x4006417	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	      6839	decNumber.c	FUNCTION_11
0x400641c	      0x4c8b7c2448	            mov r15, qword [rsp + 0x48] 	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4006421	    0x4c8d84249c00	                    lea r8, [rsp + 0x9c]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4006429	      0x4c8b742478	            mov r14, qword [rsp + 0x78] 	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400642e	      0x488b542460	            mov rdx, qword [rsp + 0x60] 	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4006433	          0x4489e9	                           mov ecx, r13d	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4006436	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      4385	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x4006441	          0x884308	                  mov byte [rbx + 8], al	      6839	decNumber.c	FUNCTION_11
0x4006444	          0x4d89f9	                             mov r9, r15	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4006447	          0x4889df	                            mov rdi, rbx	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400644a	        0x4883c20a	                            add rdx, 0xa	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400644e	          0x4c89f6	                            mov rsi, r14	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4006451	        0x44896304	               mov dword [rbx + 4], r12d	      6840	decNumber.c	FUNCTION_11
0x4006455	      0xe876aeffff	             call sym.decSetCoeff.isra.3	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400645a	    0x488d94249c00	                   lea rdx, [rsp + 0x9c]	      4387	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x4006462	          0x4c89f9	                            mov rcx, r15	      4387	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x4006465	          0x4c89f6	                            mov rsi, r14	      4387	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x4006468	          0x4889df	                            mov rdi, rbx	      4387	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x400646b	      0xe8f0b9ffff	                    call sym.decFinalize	      4387	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x4006470	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x4006479	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x4006482	      0xe9c6fdffff	                           jmp 0x400624d	      4388	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x4006487	    0x660f1f840000	                    nop word [rax + rax]	      4388	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_21	IF_24	IF_25
0x4006490	          0x83e270	                           and edx, 0x70	      4319	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	CALL_12
0x4006493	     0xf855af9ffff	                           jne 0x4005df3	      4319	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	CALL_12
0x4006499	      0x488b5c2460	            mov rbx, qword [rsp + 0x60] 	      4320	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_13
0x400649e	      0x66837b0a00	                 cmp word [rbx + 0xa], 0	      4320	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_13
0x40064a3	            0x7509	                           jne 0x40064ae	      4320	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_13
0x40064a5	          0x833b01	                      cmp dword [rbx], 1	      4320	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_13
0x40064a8	     0xf84b4050000	                            je 0x4006a62	      4320	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_13
0x40064ae	          0x4531d2	                          xor r10d, r10d	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40064b1	      0xf644246850	           test byte [rsp + 0x68], 0x50 	      4326	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	IF_15
0x40064b6	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40064bb	        0xc6400800	                   mov byte [rax + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40064bf	    0xc74004000000	                  mov dword [rax + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40064c6	    0xc70001000000	                      mov dword [rax], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40064cc	      0x664489500a	              mov word [rax + 0xa], r10w	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40064d1	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      4326	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	IF_15
0x40064d6	     0xf8464080000	                            je 0x4006d40	      4326	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	IF_15
0x40064dc	    0x810880000000	                    or dword [rax], 0x80	      4326	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	IF_15
0x40064e2	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x40064eb	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x40064f4	      0xe954fdffff	                           jmp 0x400624d	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x40064f9	     0xf1f80000000	                         nop dword [rax]	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x4006500	      0x488b7c2478	            mov rdi, qword [rsp + 0x78] 	      4309	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x4006505	          0x8b4708	                mov eax, dword [rdi + 8]	      4309	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x4006508	            0x2b07	                    sub eax, dword [rdi]	      4309	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x400650a	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      4309	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x400650f	          0x83c001	                              add eax, 1	      4309	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x4006512	          0x894704	                mov dword [rdi + 4], eax	      4309	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x4006515	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      4310	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x400651a	    0x810800040000	                   or dword [rax], 0x400	      4310	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x4006520	      0xe9b6fdffff	                           jmp 0x40062db	      4310	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x4006525	           0xf1f00	                         nop dword [rax]	      4310	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x4006528	            0x89c7	                            mov edi, eax	      4310	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x400652a	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4310	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x400652f	          0x4889da	                            mov rdx, rbx	      4310	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x4006532	            0xeb18	                           jmp 0x400654c	      4310	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x4006534	         0xf1f4000	                         nop dword [rax]	      4310	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_7	ELSE_1	ELSE_2	IF_12
0x4006538	          0x4839d5	                            cmp rbp, rdx	      4520	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_42
0x400653b	     0xf844f020000	                            je 0x4006790	      4520	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_42
0x4006541	        0x4883ea02	                              sub rdx, 2	      4515	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9
0x4006545	           0xfb73a	                   movzx edi, word [rdx]	      4515	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9
0x4006548	        0x4883e902	                              sub rcx, 2	      4515	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9
0x400654c	            0x31f6	                            xor esi, esi	      4517	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9
0x400654e	          0x4c39f9	                            cmp rcx, r15	      4518	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_40
0x4006551	            0x7203	                            jb 0x4006556	      4518	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_40
0x4006553	           0xfb731	                   movzx esi, word [rcx]	      4518	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_40
0x4006556	          0x6639fe	                              cmp si, di	      4519	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_41
0x4006559	            0x74dd	                            je 0x4006538	      4519	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	FOR_9	IF_41
0x400655b	     0xf8746020000	                            ja 0x40067a7	      4523	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_43
0x4006561	         0xfb753fe	               movzx edx, word [rbx - 2]	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x4006565	    0x69c0e8030000	                    imul eax, eax, 0x3e8	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x400656b	             0x1d0	                            add eax, edx	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x400656d	              0x99	                                     cdq	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x400656e	        0xf77c2424	                 idiv dword [rsp + 0x24]	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x4006572	      0xe910fcffff	                           jmp 0x4006187	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x4006577	          0x4489f0	                           mov eax, r14d	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x400657a	          0x4989ee	                            mov r14, rbp	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x400657d	            0x89c5	                            mov ebp, eax	      4536	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39
0x400657f	      0x448b6c2428	           mov r13d, dword [rsp + 0x28] 	      4566	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x4006584	          0x4585ed	                         test r13d, r13d	      4566	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x4006587	            0x7548	                           jne 0x40065d1	      4566	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x4006589	        0x664585e4	                         test r12w, r12w	      4566	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x400658d	            0x7542	                           jne 0x40065d1	      4566	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x400658f	    0xc74424280000	               mov dword [rsp + 0x28], 0	      4566	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x4006597	      0x6641833e00	                       cmp word [r14], 0	      4581	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49
0x400659c	            0x7509	                           jne 0x40065a7	      4581	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49
0x400659e	          0x83fd01	                              cmp ebp, 1	      4581	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49
0x40065a1	     0xf840c020000	                            je 0x40067b3	      4581	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49
0x40065a7	      0x448b542430	           mov r10d, dword [rsp + 0x30] 	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x40065ac	          0x4585d2	                         test r10d, r10d	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x40065af	            0x750e	                           jne 0x40065bf	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x40065b1	    0x80bc248d0000	                cmp byte [rsp + 0x8d], 0	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x40065b9	     0xf8531020000	                           jne 0x40067f0	      4588	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_52
0x40065bf	      0x836c240801	                  sub dword [rsp + 8], 1	      4592	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6
0x40065c4	      0x836c243003	               sub dword [rsp + 0x30], 3	      4593	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6
0x40065c9	           0xfb703	                   movzx eax, word [rbx]	      4593	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6
0x40065cc	      0xe957fbffff	                           jmp 0x4006128	      4594	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6
0x40065d1	      0x448b5c2428	           mov r11d, dword [rsp + 0x28] 	      4569	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47
0x40065d6	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4567	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x40065db	          0x4585db	                         test r11d, r11d	      4569	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47
0x40065de	        0x66448920	                    mov word [rax], r12w	      4567	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x40065e2	     0xf8594010000	                           jne 0x400677c	      4569	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47
0x40065e8	      0x8344243401	               add dword [rsp + 0x34], 1	      4570	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47
0x40065ed	        0x450fb7e4	                        movzx r12d, r12w	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x40065f1	    0x443925000000	           cmp dword [0x040065f8], r12d 	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x40065f8	        0x8b542434	            mov edx, dword [rsp + 0x34] 	      4570	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47
0x40065fc	            0x771a	                            ja 0x4006618	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x40065fe	      0xb800000000	                              mov eax, 0	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x4006603	       0xf1f440000	                   nop dword [rax + rax]	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x4006608	        0x4883c004	                              add rax, 4	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x400660c	          0x83c201	                              add edx, 1	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x400660f	          0x443920	                   cmp dword [rax], r12d	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x4006612	            0x76f4	                           jbe 0x4006608	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x4006614	        0x89542434	             mov dword [rsp + 0x34], edx	      4571	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_47	FOR_10
0x4006618	      0x8344242801	               add dword [rsp + 0x28], 1	      4574	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x400661d	    0x48836c243802	               sub qword [rsp + 0x38], 2	      4575	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46
0x4006623	        0x8b4c246c	            mov ecx, dword [rsp + 0x6c] 	      4576	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_48
0x4006627	        0x394c2434	            cmp dword [rsp + 0x34], ecx 	      4576	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_48
0x400662b	     0xf8e66ffffff	                           jle 0x4006597	      4576	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_48
0x4006631	            0x89e8	                            mov eax, ebp	      4576	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_48
0x4006633	          0x4c89f5	                            mov rbp, r14	      4576	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_48
0x4006636	          0x4189c6	                           mov r14d, eax	      4576	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	IF_48
0x4006639	    0x488344243802	               add qword [rsp + 0x38], 2	      4606	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12
0x400663f	      0x807c246800	                cmp byte [rsp + 0x68], 0	      4610	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54
0x4006644	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      4609	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12
0x400664f	     0xf884f020000	                            js 0x40068a4	      4610	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54
0x4006655	        0x8b442434	            mov eax, dword [rsp + 0x34] 	      4645	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_61
0x4006659	         0x3442430	             add eax, dword [rsp + 0x30]	      4645	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_61
0x400665d	        0x3944246c	            cmp dword [rsp + 0x6c], eax 	      4645	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_61
0x4006661	     0xf8c30020000	                            jl 0x4006897	      4645	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_61
0x4006667	      0xf644246850	           test byte [rsp + 0x68], 0x50 	      4649	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x400666c	     0xf84ac000000	                            je 0x400671e	      4649	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4006672	      0x488b5c2460	            mov rbx, qword [rsp + 0x60] 	      4657	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4006677	      0x66837d0000	                       cmp word [rbp], 0	      4661	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x400667c	         0xfb64308	               movzx eax, byte [rbx + 8]	      4657	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4006680	            0x89c1	                            mov ecx, eax	      4657	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4006682	    0x888424830000	               mov byte [rsp + 0x83], al	      4657	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x4006689	            0x750a	                           jne 0x4006695	      4661	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x400668b	        0x4183fe01	                             cmp r14d, 1	      4661	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x400668f	     0xf8478050000	                            je 0x4006c0d	      4661	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4006695	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4674	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_66
0x400669a	      0x488b5c2470	            mov rbx, qword [rsp + 0x70] 	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x400669f	          0x4489f6	                           mov esi, r14d	      6740	decNumber.c	FUNCTION_9	IF_1
0x40066a2	        0x8b542430	            mov edx, dword [rsp + 0x30] 	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x40066a6	           0xfb700	                   movzx eax, word [rax]	      4674	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_66
0x40066a9	        0x448b4304	                mov r8d, dword [rbx + 4]	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x40066ad	      0x6689442408	                  mov word [rsp + 8], ax	      4674	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_66
0x40066b2	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x40066b7	    0x440fb66c2408	              movzx r13d, byte [rsp + 8]	      4674	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_66
0x40066bd	        0x448b4804	                mov r9d, dword [rax + 4]	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x40066c1	    0x8b8424880000	            mov eax, dword [rsp + 0x88] 	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x40066c8	        0x4183e501	                             and r13d, 1	      4674	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_66
0x40066cc	             0x1c2	                            add edx, eax	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x40066ce	          0x4429ca	                            sub edx, r9d	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x40066d1	          0x4401c2	                            add edx, r8d	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x40066d4	            0x39d0	                            cmp eax, edx	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x40066d6	           0xf4ed0	                         cmovle edx, eax	      4682	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62
0x40066d9	            0x85d2	                           test edx, edx	      6740	decNumber.c	FUNCTION_9	IF_1
0x40066db	     0xf85c6030000	                           jne 0x4006aa7	      6740	decNumber.c	FUNCTION_9	IF_1
0x40066e1	          0x4889ef	                            mov rdi, rbp	      4689	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_40
0x40066e4	      0xe8f79fffff	                   call sym.decGetDigits	      4689	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_40
0x40066e9	          0x83f831	                           cmp eax, 0x31	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x40066ec	            0x89c3	                            mov ebx, eax	      4689	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_40
0x40066ee	     0xf8fd6020000	                            jg 0x40069ca	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x40066f4	            0x4898	                                    cdqe	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x40066f6	    0x440fb6a00000	                  movzx r12d, byte [rax]	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x40066fe	          0x4539c1	                            cmp r9d, r8d	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x4006701	        0x450f4ec1	                         cmovle r8d, r9d	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x4006705	      0xf644246810	           test byte [rsp + 0x68], 0x10 	      4698	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69
0x400670a	      0x4489442430	             mov dword [rsp + 0x30], r8d	      4698	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69
0x400670f	     0xf85b3030000	                           jne 0x4006ac8	      4698	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69
0x4006715	        0x895c2434	             mov dword [rsp + 0x34], ebx	      4689	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_40
0x4006719	      0x48896c2438	             mov qword [rsp + 0x38], rbp	      4689	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_40
0x400671e	     0xfb684248300	           movzx eax, byte [rsp + 0x83] 	      4772	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4006726	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	      4771	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400672b	    0x4c8d84249c00	                    lea r8, [rsp + 0x9c]	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x4006733	        0x8b7c2430	            mov edi, dword [rsp + 0x30] 	      4771	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4006737	      0x4c8b7c2448	            mov r15, qword [rsp + 0x48] 	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x400673c	      0x4c8b742478	            mov r14, qword [rsp + 0x78] 	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x4006741	        0x8b4c2434	            mov ecx, dword [rsp + 0x34] 	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x4006745	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x400674a	          0x83e080	                     and eax, 0xffffff80	      4772	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400674d	          0x897b04	                mov dword [rbx + 4], edi	      4771	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4006750	          0x4d89f9	                             mov r9, r15	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x4006753	          0x4c89f6	                            mov rsi, r14	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x4006756	          0x4889df	                            mov rdi, rbx	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x4006759	          0x884308	                  mov byte [rbx + 8], al	      4772	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400675c	      0xe86fabffff	             call sym.decSetCoeff.isra.3	      4775	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	CALL_49
0x4006761	    0x488d94249c00	                   lea rdx, [rsp + 0x9c]	      4777	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4006769	          0x4c89f9	                            mov rcx, r15	      4777	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400676c	          0x4c89f6	                            mov rsi, r14	      4777	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400676f	          0x4889df	                            mov rdi, rbx	      4777	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4006772	      0xe8e9b6ffff	                    call sym.decFinalize	      4777	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4006777	      0xe9d1faffff	                           jmp 0x400624d	      4777	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400677c	      0x8344243403	               add dword [rsp + 0x34], 3	      4573	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	ELSE_11
0x4006781	      0xe992feffff	                           jmp 0x4006618	      4573	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	ELSE_11
0x4006786	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4573	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_46	ELSE_11
0x4006790	            0x31c9	                            xor ecx, ecx	      4529	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_44
0x4006792	          0x4989ee	                            mov r14, rbp	      4529	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_44
0x4006795	        0x4183c401	                             add r12d, 1	      4528	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_44
0x4006799	        0x66894d00	                      mov word [rbp], cx	      4529	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_44
0x400679d	      0xbd01000000	                              mov ebp, 1	      4530	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_44
0x40067a2	      0xe9d8fdffff	                           jmp 0x400657f	      4531	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_44
0x40067a7	          0x4989ee	                            mov r14, rbp	      4531	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_44
0x40067aa	        0x8b6c2408	                mov ebp, dword [rsp + 8]	      4523	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_43
0x40067ae	      0xe9ccfdffff	                           jmp 0x400657f	      4523	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	FOR_7	IF_39	IF_43
0x40067b3	    0x80bc248e0000	                cmp byte [rsp + 0x8e], 0	      4582	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_50
0x40067bb	            0x751f	                           jne 0x40067dc	      4582	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_50
0x40067bd	    0x80bc248f0000	                cmp byte [rsp + 0x8f], 0	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x40067c5	     0xf84dcfdffff	                            je 0x40065a7	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x40067cb	    0x8bbc24840000	            mov edi, dword [rsp + 0x84] 	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x40067d2	        0x397c2430	            cmp dword [rsp + 0x30], edi 	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x40067d6	     0xf8fcbfdffff	                            jg 0x40065a7	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x40067dc	          0x4c89f5	                            mov rbp, r14	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x40067df	    0x41be01000000	                             mov r14d, 1	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x40067e5	            0xeb19	                           jmp 0x4006800	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x40067e7	    0x660f1f840000	                    nop word [rax + rax]	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x40067f0	            0x89e8	                            mov eax, ebp	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x40067f2	    0xc74424300000	               mov dword [rsp + 0x30], 0	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x40067fa	          0x4c89f5	                            mov rbp, r14	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x40067fd	          0x4189c6	                           mov r14d, eax	      4583	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	FOR_6	IF_49	IF_51
0x4006800	      0x448b4c2428	            mov r9d, dword [rsp + 0x28] 	      4601	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_53
0x4006805	          0x4585c9	                           test r9d, r9d	      4601	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_53
0x4006808	     0xf852bfeffff	                           jne 0x4006639	      4601	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_53
0x400680e	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4604	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_53
0x4006813	          0x4531c0	                            xor r8d, r8d	      4604	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_53
0x4006816	    0xc74424340100	               mov dword [rsp + 0x34], 1	      4603	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_53
0x400681e	    0xc74424280100	               mov dword [rsp + 0x28], 1	      4602	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_53
0x4006826	        0x66448900	                     mov word [rax], r8w	      4604	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_53
0x400682a	      0xe910feffff	                           jmp 0x400663f	      4604	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_53
0x400682f	      0x837c243403	               cmp dword [rsp + 0x34], 3	      4737	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74
0x4006834	            0x7e42	                           jle 0x4006878	      4737	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74
0x4006836	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4738	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74	IF_75
0x400683b	      0x668138e703	                   cmp word [rax], 0x3e7	      4738	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74	IF_75
0x4006840	     0xf852a030000	                           jne 0x4006b70	      4738	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74	IF_75
0x4006846	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4738	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74	IF_75
0x400684b	        0x8b542434	            mov edx, dword [rsp + 0x34] 	      4738	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74	IF_75
0x400684f	            0xeb12	                           jmp 0x4006863	      4738	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74	IF_75
0x4006851	     0xf1f80000000	                         nop dword [rax]	      4738	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74	IF_75
0x4006858	      0x668138e703	                   cmp word [rax], 0x3e7	      4738	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74	IF_75
0x400685d	     0xf850d030000	                           jne 0x4006b70	      4738	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74	IF_75
0x4006863	          0x83ea03	                              sub edx, 3	      4744	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13
0x4006866	        0x4883c002	                              add rax, 2	      4736	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13
0x400686a	          0x83fa03	                              cmp edx, 3	      4737	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74
0x400686d	            0x7fe9	                            jg 0x4006858	      4737	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74
0x400686f	      0x4889442438	             mov qword [rsp + 0x38], rax	      4737	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74
0x4006874	        0x89542434	             mov dword [rsp + 0x34], edx	      4737	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	IF_74
0x4006878	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4741	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	ELSE_15	IF_76
0x400687d	           0xfb710	                   movzx edx, word [rax]	      4741	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	ELSE_15	IF_76
0x4006880	      0x4863442434	         movsxd rax, dword [rsp + 0x34] 	      4741	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	ELSE_15	IF_76
0x4006885	    0x8b0485000000	                  mov eax, dword [rax*4]	      4741	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	ELSE_15	IF_76
0x400688c	          0x83e801	                              sub eax, 1	      4741	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	ELSE_15	IF_76
0x400688f	            0x39c2	                            cmp edx, eax	      4741	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	ELSE_15	IF_76
0x4006891	     0xf85d9020000	                           jne 0x4006b70	      4741	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73	FOR_13	ELSE_15	IF_76
0x4006897	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      4748	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_77
0x400689c	          0x830804	                       or dword [rax], 4	      4748	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_77
0x400689f	      0xe9a9f9ffff	                           jmp 0x400624d	      4749	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_77
0x40068a4	      0x66837d0000	                       cmp word [rbp], 0	      4612	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	IF_55
0x40068a9	            0x750a	                           jne 0x40068b5	      4612	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	IF_55
0x40068ab	        0x4183fe01	                             cmp r14d, 1	      4612	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	IF_55
0x40068af	     0xf8ecc030000	                           jle 0x4006c81	      4612	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	IF_55
0x40068b5	    0xc784249c0000	               mov dword [rsp + 0x9c], 1	      4612	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	IF_55
0x40068c0	      0xe959feffff	                           jmp 0x400671e	      4612	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	IF_55
0x40068c5	          0x4889c7	                            mov rdi, rax	      4401	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x40068c8	      0xe800000000	                          call 0x40068cd	      4401	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x40068cd	          0x4885c0	                           test rax, rax	      4402	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26	IF_27
0x40068d0	      0x4889442458	             mov qword [rsp + 0x58], rax	      4401	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x40068d5	      0x4889442410	             mov qword [rsp + 0x10], rax	      4401	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26
0x40068da	     0xf85bdf5ffff	                           jne 0x4005e9d	      4402	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26	IF_27
0x40068e0	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      4403	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26	IF_27
0x40068e5	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x40068ee	          0x830810	                    or dword [rax], 0x10	      4403	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26	IF_27
0x40068f1	      0xe957f9ffff	                           jmp 0x400624d	      4404	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26	IF_27
0x40068f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4404	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_26	IF_27
0x4006900	      0x442b642408	               sub r12d, dword [rsp + 8]	      4488	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9
0x4006905	          0x6639c7	                              cmp di, ax	      4491	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9	IF_37
0x4006908	    0x4489a4248400	            mov dword [rsp + 0x84], r12d	      4488	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9
0x4006910	     0xf869f000000	                           jbe 0x40069b5	      4491	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9	IF_37
0x4006916	        0x418d7eff	                      lea edi, [r14 - 1]	      4492	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9	IF_37
0x400691a	      0x836c243003	               sub dword [rsp + 0x30], 3	      4493	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9	IF_37
0x400691f	    0xc78424880000	               mov dword [rsp + 0x88], 0	      4238	decNumber.c	FUNCTION_68	FUNCTION_65
0x400692a	        0x897c2408	                mov dword [rsp + 8], edi	      4492	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9	IF_37
0x400692e	      0xe98df7ffff	                           jmp 0x40060c0	      4492	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_9	IF_37
0x4006933	    0x69c1e8030000	                    imul eax, ecx, 0x3e8	      4454	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4006939	        0x894c2420	             mov dword [rsp + 0x20], ecx	      4452	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x400693d	        0x89442424	             mov dword [rsp + 0x24], eax	      4454	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4006941	      0xe984f6ffff	                           jmp 0x4005fca	      4454	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x4006946	          0x4889df	                            mov rdi, rbx	      4426	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x4006949	      0xe800000000	                          call 0x400694e	      4426	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x400694e	          0x4885c0	                           test rax, rax	      4427	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30	IF_31
0x4006951	      0x4889442450	             mov qword [rsp + 0x50], rax	      4426	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x4006956	          0x4889c5	                            mov rbp, rax	      4426	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30
0x4006959	     0xf859bf5ffff	                           jne 0x4005efa	      4427	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_30	IF_31
0x400695f	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      4714	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_70
0x4006964	          0x830810	                    or dword [rax], 0x10	      4714	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_70
0x4006967	      0xe9e1f8ffff	                           jmp 0x400624d	      4715	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_70
0x400696c	         0xf1f4000	                         nop dword [rax]	      4715	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_70
0x4006970	      0x488b4c2460	            mov rcx, qword [rsp + 0x60] 	      6840	decNumber.c	FUNCTION_11
0x4006975	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      6839	decNumber.c	FUNCTION_11
0x400697a	    0x488d9c249c00	                   lea rbx, [rsp + 0x9c]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4006982	      0x4c8b4c2448	              mov r9, qword [rsp + 0x48]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4006987	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400698c	          0x4989d8	                             mov r8, rbx	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400698f	          0x884708	                  mov byte [rdi + 8], al	      6839	decNumber.c	FUNCTION_11
0x4006992	          0x8b4104	                mov eax, dword [rcx + 4]	      6840	decNumber.c	FUNCTION_11
0x4006995	        0x488d510a	                    lea rdx, [rcx + 0xa]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4006999	            0x8b09	                    mov ecx, dword [rcx]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400699b	          0x894704	                mov dword [rdi + 4], eax	      6840	decNumber.c	FUNCTION_11
0x400699e	      0xe82da9ffff	             call sym.decSetCoeff.isra.3	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40069a3	      0xe933f9ffff	                           jmp 0x40062db	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40069a8	      0x448b6c2430	           mov r13d, dword [rsp + 0x30] 	      4479	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	IF_36
0x40069ad	          0x41f7dd	                                neg r13d	      4479	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	IF_36
0x40069b0	      0xe9bdf6ffff	                           jmp 0x4006072	      4479	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_35	IF_36
0x40069b5	      0x4489742408	               mov dword [rsp + 8], r14d	      4445	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1
0x40069ba	    0xc78424880000	               mov dword [rsp + 0x88], 0	      4238	decNumber.c	FUNCTION_68	FUNCTION_65
0x40069c5	      0xe9f6f6ffff	                           jmp 0x40060c0	      4238	decNumber.c	FUNCTION_68	FUNCTION_65
0x40069ca	          0x8d4802	                      lea ecx, [rax + 2]	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x40069cd	      0xba56555555	                     mov edx, 0x55555556	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x40069d2	            0x89c8	                            mov eax, ecx	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x40069d4	          0xc1f91f	                           sar ecx, 0x1f	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x40069d7	            0xf7ea	                                imul edx	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x40069d9	            0x29ca	                            sub edx, ecx	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x40069db	          0x4189d4	                           mov r12d, edx	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x40069de	      0xe91bfdffff	                           jmp 0x40066fe	      4690	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	CALL_41
0x40069e3	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x40069ec	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x40069f5	      0xe953f8ffff	                           jmp 0x400624d	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x40069fa	          0x4889d8	                            mov rax, rbx	      4342	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x40069fd	        0x448b5304	               mov r10d, dword [rbx + 4]	      4342	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x4006a01	      0x488b5c2470	            mov rbx, qword [rsp + 0x70] 	      4342	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x4006a06	          0x4889c6	                            mov rsi, rax	      4343	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_18
0x4006a09	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      4341	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x4006a14	        0x442b5304	               sub r10d, dword [rbx + 4]	      4342	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x4006a18	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	      4343	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_18
0x4006a1d	          0x4889df	                            mov rdi, rbx	      4343	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_18
0x4006a20	      0xe800000000	                          call 0x4006a25	      4343	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_18
0x4006a25	     0xfb69c248300	           movzx ebx, byte [rsp + 0x83] 	      4344	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x4006a2d	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      4346	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_19
0x4006a32	    0x488d94249c00	                   lea rdx, [rsp + 0x9c]	      4346	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_19
0x4006a3a	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	      4346	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_19
0x4006a3f	        0x44895704	               mov dword [rdi + 4], r10d	      4345	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x4006a43	          0x885f08	                  mov byte [rdi + 8], bl	      4344	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18
0x4006a46	      0xe815b4ffff	                    call sym.decFinalize	      4346	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_16	ELSE_5	IF_18	CALL_19
0x4006a4b	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x4006a54	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x4006a5d	      0xe9ebf7ffff	                           jmp 0x400624d	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x4006a62	            0xa870	                           test al, 0x70	      4320	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_13
0x4006a64	     0xf8544faffff	                           jne 0x40064ae	      4320	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14	CALL_13
0x4006a6a	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006a6f	          0x4531db	                          xor r11d, r11d	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006a72	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x4006a7b	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x4006a84	    0xc70001000000	                      mov dword [rax], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006a8a	        0xc6400800	                   mov byte [rax + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006a8e	    0xc74004000000	                  mov dword [rax + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006a95	      0x664489580a	              mov word [rax + 0xa], r11w	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006a9a	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      4322	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14
0x4006a9f	          0x830808	                       or dword [rax], 8	      4322	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14
0x4006aa2	      0xe9a6f7ffff	                           jmp 0x400624d	      4322	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14
0x4006aa7	          0x4889ef	                            mov rdi, rbp	      4322	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14
0x4006aaa	      0xe891a4ffff	         call sym.decShiftToLeast.part.1	      4322	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14
0x4006aaf	            0x89c6	                            mov esi, eax	      4322	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14
0x4006ab1	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      4322	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14
0x4006ab6	        0x448b4804	                mov r9d, dword [rax + 4]	      4322	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14
0x4006aba	      0x488b442470	            mov rax, qword [rsp + 0x70] 	      4322	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14
0x4006abf	        0x448b4004	                mov r8d, dword [rax + 4]	      4322	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14
0x4006ac3	      0xe919fcffff	                           jmp 0x40066e1	      4322	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	IF_14
0x4006ac8	        0x4883ec08	                              sub rsp, 8	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x4006acc	          0x4531c0	                            xor r8d, r8d	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x4006acf	          0x4489e1	                           mov ecx, r12d	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x4006ad2	            0x6a01	                                  push 1	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x4006ad4	          0x4489e6	                           mov esi, r12d	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x4006ad7	          0x4889ef	                            mov rdi, rbp	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x4006ada	          0x4989e9	                             mov r9, rbp	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x4006add	          0x4889ea	                            mov rdx, rbp	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x4006ae0	      0xe85b95ffff	                  call sym.decUnitAddSub	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x4006ae5	          0x4c63f0	                         movsxd r14, eax	      4704	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_42
0x4006ae8	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006af0	          0x8b7804	                mov edi, dword [rax + 4]	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006af3	          0x486300	                 movsxd rax, dword [rax]	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006af6	          0x4189f8	                            mov r8d, edi	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006af9	      0x442b442440	             sub r8d, dword [rsp + 0x40]	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006afe	        0x897c2418	             mov dword [rsp + 0x18], edi	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006b02	          0x83f831	                           cmp eax, 0x31	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006b05	              0x59	                                 pop rcx	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006b06	              0x5e	                                 pop rsi	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006b07	     0xf8fe6000000	                            jg 0x4006bf3	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006b0d	     0xfb688000000	                   movzx ecx, byte [rax]	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006b14	          0x4c89fa	                            mov rdx, r15	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006b17	          0x4489f6	                           mov esi, r14d	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006b1a	          0x4889ef	                            mov rdi, rbp	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006b1d	      0xe87eaaffff	                 call sym.decUnitCompare	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006b22	      0x3d00000080	                     cmp eax, 0x80000000	      4713	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_70
0x4006b27	     0xf8432feffff	                            je 0x400695f	      4713	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_70
0x4006b2d	      0x4a8d4c7500	                  lea rcx, [rbp + r14*2]	      4719	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4006b32	          0x4889ea	                            mov rdx, rbp	      4719	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4006b35	          0x4839cd	                            cmp rbp, rcx	      4719	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4006b38	            0x731f	                           jae 0x4006b59	      4719	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4006b3a	           0xfb732	                   movzx esi, word [rdx]	      4721	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4006b3d	            0x89f7	                            mov edi, esi	      4722	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4006b3f	          0x66d1ef	                               shr di, 1	      4722	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4006b42	          0x83e601	                              and esi, 1	      4723	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12	IF_71
0x4006b45	          0x66893a	                      mov word [rdx], di	      4722	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4006b48	            0x7406	                            je 0x4006b50	      4723	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12	IF_71
0x4006b4a	    0x668142fef401	               add word [rdx - 2], 0x1f4	      4724	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4006b50	        0x4883c202	                              add rdx, 2	      4719	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4006b54	          0x4839ca	                            cmp rdx, rcx	      4719	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4006b57	            0x72e1	                            jb 0x4006b3a	      4719	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	FOR_12
0x4006b59	          0x83f800	                              cmp eax, 0	      4728	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006b5c	     0xf8e0b010000	                           jle 0x4006c6d	      4728	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006b62	        0x8b5c246c	            mov ebx, dword [rsp + 0x6c] 	      4735	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73
0x4006b66	        0x395c2434	            cmp dword [rsp + 0x34], ebx 	      4735	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73
0x4006b6a	     0xf84bffcffff	                            je 0x400682f	      4735	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	IF_73
0x4006b70	      0x488b5c2470	            mov rbx, qword [rsp + 0x70] 	      4753	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006b75	      0xbf56555555	                     mov edi, 0x55555556	      4755	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006b7a	          0x8b4304	                mov eax, dword [rbx + 4]	      4753	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006b7d	            0x89c1	                            mov ecx, eax	      4753	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006b7f	        0x2b4c2430	             sub ecx, dword [rsp + 0x30]	      4753	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006b83	        0x89442408	                mov dword [rsp + 8], eax	      4753	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006b87	            0x89c8	                            mov eax, ecx	      4755	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006b89	            0xf7ef	                                imul edi	      4755	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006b8b	            0x89c8	                            mov eax, ecx	      4755	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006b8d	          0xc1f81f	                           sar eax, 0x1f	      4755	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006b90	            0x29c2	                            sub edx, eax	      4755	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006b92	          0x8d0452	                  lea eax, [rdx + rdx*2]	      4760	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006b95	          0x4189d0	                            mov r8d, edx	      4755	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006b98	            0x29c1	                            sub ecx, eax	      4760	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006b9a	          0x4863c1	                         movsxd rax, ecx	      4760	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006b9d	    0x8b3485000000	                  mov esi, dword [rax*4]	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4006ba4	          0x486303	                 movsxd rax, dword [rbx]	      4759	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_46
0x4006ba7	            0xf7de	                                 neg esi	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4006ba9	          0x83f831	                           cmp eax, 0x31	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4006bac	     0xf8fa6000000	                            jg 0x4006c58	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4006bb2	     0xfb688000000	                   movzx ecx, byte [rax]	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4006bb9	        0x4883ec08	                              sub rsp, 8	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4006bbd	          0x4c89fa	                            mov rdx, r15	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4006bc0	          0x4989e9	                             mov r9, rbp	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4006bc3	              0x56	                                push rsi	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4006bc4	          0x4889ef	                            mov rdi, rbp	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4006bc7	          0x4489e6	                           mov esi, r12d	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4006bca	      0xe87194ffff	                  call sym.decUnitAddSub	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4006bcf	            0xf7d8	                                 neg eax	      4761	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_47
0x4006bd1	          0x4889ef	                            mov rdi, rbp	      4761	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_47
0x4006bd4	            0x89c6	                            mov esi, eax	      4761	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_47
0x4006bd6	      0xe8059bffff	                   call sym.decGetDigits	      4761	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_47
0x4006bdb	    0x808424930000	             add byte [rsp + 0x93], 0x80	      4764	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006be3	        0x89442444	             mov dword [rsp + 0x44], eax	      4761	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_47
0x4006be7	              0x58	                                 pop rax	      4764	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006be8	              0x5a	                                 pop rdx	      4764	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006be9	      0x48896c2438	             mov qword [rsp + 0x38], rbp	      4764	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006bee	      0xe92bfbffff	                           jmp 0x400671e	      4764	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006bf3	          0x8d4802	                      lea ecx, [rax + 2]	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006bf6	      0xba56555555	                     mov edx, 0x55555556	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006bfb	            0x89c8	                            mov eax, ecx	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006bfd	            0xf7ea	                                imul edx	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006bff	            0x89c8	                            mov eax, ecx	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006c01	          0xc1f81f	                           sar eax, 0x1f	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006c04	            0x89d1	                            mov ecx, edx	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006c06	            0x29c1	                            sub ecx, eax	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006c08	      0xe907ffffff	                           jmp 0x4006b14	      4711	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	CALL_44
0x4006c0d	          0x8b4304	                mov eax, dword [rbx + 4]	      4662	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4006c10	      0x488b5c2470	            mov rbx, qword [rsp + 0x70] 	      4663	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63	IF_64
0x4006c15	            0x31ff	                            xor edi, edi	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006c17	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	      4670	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4006c1c	          0x8b5304	                mov edx, dword [rbx + 4]	      4663	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63	IF_64
0x4006c1f	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006c24	            0x39d0	                            cmp eax, edx	      4668	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63	IF_65
0x4006c26	        0x66897b0a	                mov word [rbx + 0xa], di	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006c2a	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006c30	           0xf4fc2	                          cmovg eax, edx	      4668	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63	IF_65
0x4006c33	    0x488d94249c00	                   lea rdx, [rsp + 0x9c]	      4670	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4006c3b	          0x4889df	                            mov rdi, rbx	      4670	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4006c3e	          0x894304	                mov dword [rbx + 4], eax	      4668	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63	IF_65
0x4006c41	            0x89c8	                            mov eax, ecx	      4669	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4006c43	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      4670	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4006c48	          0x83e080	                     and eax, 0xffffff80	      4669	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4006c4b	          0x884308	                  mov byte [rbx + 8], al	      4669	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4006c4e	      0xe80db2ffff	                    call sym.decFinalize	      4670	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4006c53	      0xe9f5f5ffff	                           jmp 0x400624d	      4671	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_63
0x4006c58	          0x8d4802	                      lea ecx, [rax + 2]	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4006c5b	            0x89c8	                            mov eax, ecx	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4006c5d	            0xf7ef	                                imul edi	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4006c5f	            0x89c8	                            mov eax, ecx	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4006c61	          0xc1f81f	                           sar eax, 0x1f	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4006c64	            0x89d1	                            mov ecx, edx	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4006c66	            0x29c1	                            sub ecx, eax	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4006c68	      0xe94cffffff	                           jmp 0x4006bb9	      4758	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72	CALL_45
0x4006c6d	     0xf85a2faffff	                           jne 0x4006715	      4728	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006c73	          0x4584ed	                         test r13b, r13b	      4728	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006c76	     0xf85e6feffff	                           jne 0x4006b62	      4728	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006c7c	      0xe994faffff	                           jmp 0x4006715	      4728	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_14	IF_62	IF_69	IF_72
0x4006c81	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4619	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13
0x4006c86	           0xfb700	                   movzx eax, word [rax]	      4619	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13
0x4006c89	            0xa801	                              test al, 1	      4620	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56
0x4006c8b	     0xf858dfaffff	                           jne 0x400671e	      4620	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56
0x4006c91	          0x6685c0	                             test ax, ax	      4620	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56
0x4006c94	     0xf8484faffff	                            je 0x400671e	      4620	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56
0x4006c9a	        0x8b4c2430	            mov ecx, dword [rsp + 0x30] 	      4624	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_57
0x4006c9e	    0x398c24840000	            cmp dword [rsp + 0x84], ecx 	      4624	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_57
0x4006ca5	     0xf8e73faffff	                           jle 0x400671e	      4624	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_57
0x4006cab	           0xfb7d0	                           movzx edx, ax	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4006cae	            0x89d0	                            mov eax, edx	      4627	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4006cb0	            0xd1e8	                              shr eax, 1	      4627	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4006cb2	    0x69c067660000	                   imul eax, eax, 0x6667	      4627	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4006cb8	          0xc1e811	                           shr eax, 0x11	      4627	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4006cbb	     0xfaf05000000	            imul eax, dword [0x04006cc2]	      4627	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4006cc2	            0x39d0	                            cmp eax, edx	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4006cc4	     0xf8554faffff	                           jne 0x400671e	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4006cca	      0x448b442430	            mov r8d, dword [rsp + 0x30] 	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4006ccf	    0x448b8c248400	            mov r9d, dword [rsp + 0x84] 	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4006cd7	            0x31ff	                            xor edi, edi	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4006cd9	      0xba01000000	                              mov edx, 1	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4006cde	          0x4529c1	                            sub r9d, r8d	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4006ce1	            0xeb27	                           jmp 0x4006d0a	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4006ce3	       0xf1f440000	                   nop dword [rax + rax]	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4006ce8	          0x8d4a01	                      lea ecx, [rdx + 1]	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4006ceb	            0x89c6	                            mov esi, eax	      4627	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4006ced	        0x4883c704	                              add rdi, 4	      4627	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4006cf1	            0xd3ee	                             shr esi, cl	      4627	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4006cf3	     0xfafb7000000	                   imul esi, dword [rdi]	      4627	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4006cfa	          0xc1ee11	                           shr esi, 0x11	      4627	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4006cfd	     0xfafb7000000	                   imul esi, dword [rdi]	      4627	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4006d04	            0x39c6	                            cmp esi, eax	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4006d06	            0x750f	                           jne 0x4006d17	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4006d08	            0x89ca	                            mov edx, ecx	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4006d0a	        0x428d1c02	                     lea ebx, [rdx + r8]	      4626	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_58
0x4006d0e	          0x4439ca	                            cmp edx, r9d	      4624	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_57
0x4006d11	        0x895c2430	             mov dword [rsp + 0x30], ebx	      4624	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_57
0x4006d15	            0x75d1	                           jne 0x4006ce8	      4624	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_57
0x4006d17	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	      4624	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_57
0x4006d1c	        0x8b742428	            mov esi, dword [rsp + 0x28] 	      4624	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_57
0x4006d20	          0x4889df	                            mov rdi, rbx	      4624	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_57
0x4006d23	      0xe818a2ffff	         call sym.decShiftToLeast.part.1	      4624	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	FOR_11	IF_57
0x4006d28	          0x4889df	                            mov rdi, rbx	      4635	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_36
0x4006d2b	            0x89c6	                            mov esi, eax	      4635	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_36
0x4006d2d	      0xe8ae99ffff	                   call sym.decGetDigits	      4635	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_36
0x4006d32	        0x89442434	             mov dword [rsp + 0x34], eax	      4635	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_36
0x4006d36	      0xe9e3f9ffff	                           jmp 0x400671e	      4635	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	ELSE_12	IF_54	ELSE_13	IF_56	IF_60	CALL_36
0x4006d3b	      0xe800000000	                          call 0x4006d40	      4792	decNumber.c	FUNCTION_68	FUNCTION_65
0x4006d40	          0x830802	                       or dword [rax], 2	      4328	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	ELSE_4
0x4006d43	     0xfb684248300	           movzx eax, byte [rsp + 0x83] 	      4329	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	ELSE_4
0x4006d4b	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	      4329	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	ELSE_4
0x4006d50	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4228	decNumber.c	FUNCTION_68	FUNCTION_65
0x4006d59	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4220	decNumber.c	FUNCTION_68	FUNCTION_65
0x4006d62	          0x83c840	                            or eax, 0x40	      4329	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	ELSE_4
0x4006d65	          0x884308	                  mov byte [rbx + 8], al	      4329	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	ELSE_4
0x4006d68	      0xe9e0f4ffff	                           jmp 0x400624d	      4329	decNumber.c	FUNCTION_68	FUNCTION_65	DO_1	IF_13	ELSE_3	ELSE_4
decNumberSquareRoot	ELSE,8:DO,1:CALL,51:IF,29:functions,0:SWITCH,0:WHILE,0:FOR,1	496
0x4008e20	            0x4157	                                push r15	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008e22	            0x4156	                                push r14	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008e24	          0x4989d7	                            mov r15, rdx	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008e27	            0x4155	                                push r13	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008e29	            0x4154	                                push r12	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008e2b	          0x4989f6	                            mov r14, rsi	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008e2e	              0x55	                                push rbp	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008e2f	              0x53	                                push rbx	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008e30	    0x4881ec580100	                          sub rsp, 0x158	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008e37	    0x64488b042528	                mov rax, qword fs:[0x28]	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008e40	    0x488984244801	            mov qword [rsp + 0x148], rax	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008e48	            0x31c0	                            xor eax, eax	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008e4a	         0xfb64608	               movzx eax, byte [rsi + 8]	      2850	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5
0x4008e4e	      0x48897c2408	                mov qword [rsp + 8], rdi	      2798	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008e53	    0xc74424480000	               mov dword [rsp + 0x48], 0	      2803	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008e5b	    0xc744244c0000	               mov dword [rsp + 0x4c], 0	      2804	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008e63	    0xc74424500000	               mov dword [rsp + 0x50], 0	      2804	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008e6b	            0xa870	                           test al, 0x70	      2850	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5
0x4008e6d	            0x7469	                            je 0x4008ed8	      2850	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5
0x4008e6f	            0xa840	                           test al, 0x40	      2851	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_7
0x4008e71	     0xf8409060000	                            je 0x4009480	      2851	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_7
0x4008e77	            0x84c0	                             test al, al	      2852	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_8
0x4008e79	     0xf8861050000	                            js 0x40093e0	      2852	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_8
0x4008e7f	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2853	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_9
0x4008e84	      0xe800000000	                          call 0x4008e89	      2853	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_9
0x4008e89	        0x8b5c244c	            mov ebx, dword [rsp + 0x4c] 	      2853	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_9
0x4008e8d	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2822	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008e96	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2821	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008e9f	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2820	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008ea8	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3114	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008ead	      0xe800000000	                          call 0x4008eb2	      3114	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008eb2	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      3115	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008eb7	      0xe800000000	                          call 0x4008ebc	      3115	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008ebc	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      3116	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008ec1	      0xe800000000	                          call 0x4008ec6	      3116	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008ec6	            0x85db	                           test ebx, ebx	      3120	decNumber.c	FUNCTION_68	FUNCTION_45	CALL_50
0x4008ec8	     0xf8467050000	                            je 0x4009435	      3120	decNumber.c	FUNCTION_68	FUNCTION_45	CALL_50
0x4008ece	      0xe953050000	                           jmp 0x4009426	      3120	decNumber.c	FUNCTION_68	FUNCTION_45	CALL_50
0x4008ed3	       0xf1f440000	                   nop dword [rax + rax]	      3120	decNumber.c	FUNCTION_68	FUNCTION_45	CALL_50
0x4008ed8	          0x8b7604	                mov esi, dword [rsi + 4]	      2862	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4008edb	            0xd1fe	                              sar esi, 1	      2862	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4008edd	    0x6641837e0a00	                 cmp word [r14 + 0xa], 0	      2865	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_11
0x4008ee3	        0x89742438	             mov dword [rsp + 0x38], esi	      2862	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4008ee7	     0xf8493040000	                            je 0x4009380	      2865	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_11
0x4008eed	            0x84c0	                             test al, al	      2874	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_9	CALL_13
0x4008eef	     0xf88eb040000	                            js 0x40093e0	      2874	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_9	CALL_13
0x4008ef5	          0x496306	                 movsxd rax, dword [r14]	      2886	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_14
0x4008ef8	          0x418b1f	                    mov ebx, dword [r15]	      2887	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_15
0x4008efb	      0xba07000000	                              mov edx, 7	      2887	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_15
0x4008f00	          0x8d4b01	                      lea ecx, [rbx + 1]	      2887	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_15
0x4008f03	          0x83f807	                              cmp eax, 7	      2887	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_15
0x4008f06	           0xf4dd0	                         cmovge edx, eax	      2887	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_15
0x4008f09	            0x39d1	                            cmp ecx, edx	      2887	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_15
0x4008f0b	           0xf4dd1	                         cmovge edx, ecx	      2887	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_15
0x4008f0e	          0x83f831	                           cmp eax, 0x31	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4008f11	        0x8954242c	             mov dword [rsp + 0x2c], edx	      2887	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_15
0x4008f15	        0x448d6202	                     lea r12d, [rdx + 2]	      2888	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4008f19	     0xf8e49050000	                           jle 0x4009468	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4008f1f	          0x8d4802	                      lea ecx, [rax + 2]	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4008f22	      0xba56555555	                     mov edx, 0x55555556	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4008f27	            0x89c8	                            mov eax, ecx	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4008f29	            0xf7ea	                                imul edx	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4008f2b	            0x89c8	                            mov eax, ecx	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4008f2d	          0xc1f81f	                           sar eax, 0x1f	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4008f30	            0x29c2	                            sub edx, eax	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4008f32	        0x8d7c120a	              lea edi, [rdx + rdx + 0xa]	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4008f36	          0x83ff24	                           cmp edi, 0x24	      2891	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10
0x4008f39	    0x4c8dac24c000	                   lea r13, [rsp + 0xc0]	      2823	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008f41	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2820	decNumber.c	FUNCTION_68	FUNCTION_45
0x4008f4a	     0xf8f00060000	                            jg 0x4009550	      2891	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10
0x4008f50	        0x4183fc31	                          cmp r12d, 0x31	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4008f54	     0xf8f96050000	                            jg 0x40094f0	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4008f5a	          0x4963c4	                        movsxd rax, r12d	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4008f5d	     0xfb680000000	                   movzx eax, byte [rax]	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4008f64	        0x8d7c000a	              lea edi, [rax + rax + 0xa]	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4008f68	          0x83ff24	                           cmp edi, 0x24	      2900	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x4008f6b	     0xf8e4f050000	                           jle 0x40094c0	      2900	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x4008f71	          0x4863df	                         movsxd rbx, edi	      2901	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x4008f74	          0x4889df	                            mov rdi, rbx	      2901	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x4008f77	      0xe800000000	                          call 0x4008f7c	      2901	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x4008f7c	          0x4889df	                            mov rdi, rbx	      2902	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x4008f7f	          0x4889c5	                            mov rbp, rax	      2901	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x4008f82	      0x4889442418	             mov qword [rsp + 0x18], rax	      2901	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x4008f87	      0xe800000000	                          call 0x4008f8c	      2902	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x4008f8c	          0x4885ed	                           test rbp, rbp	      2903	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x4008f8f	      0x4889442420	             mov qword [rsp + 0x20], rax	      2902	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12
0x4008f94	          0x4889ee	                            mov rsi, rbp	      2903	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x4008f97	     0xf84f3050000	                            je 0x4009590	      2903	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x4008f9d	          0x4885c0	                           test rax, rax	      2903	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x4008fa0	          0x4889c5	                            mov rbp, rax	      2903	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x4008fa3	          0x4889f3	                            mov rbx, rsi	      2903	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x4008fa6	     0xf84e4050000	                            je 0x4009590	      2903	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x4008fac	          0x4c89f6	                            mov rsi, r14	      2911	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_18
0x4008faf	          0x4c89ef	                            mov rdi, r13	      2911	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_18
0x4008fb2	      0xe800000000	                          call 0x4008fb7	      2911	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_18
0x4008fb7	        0x418b4500	                    mov eax, dword [r13]	      2912	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4008fbb	        0x418b7504	                mov esi, dword [r13 + 4]	      2912	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4008fbf	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      2916	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_19
0x4008fc4	             0x1c6	                            add esi, eax	      2912	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4008fc6	            0xf7d8	                                 neg eax	      2913	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4008fc8	        0x89742430	             mov dword [rsp + 0x30], esi	      2912	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4008fcc	        0x41894504	                mov dword [r13 + 4], eax	      2913	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4008fd0	      0xbe40000000	                           mov esi, 0x40	      2916	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_19
0x4008fd5	      0xe800000000	                          call 0x4008fda	      2916	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_19
0x4008fda	      0xf644243001	               test byte [rsp + 0x30], 1	      2927	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x4008fdf	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      2924	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4008fe3	    0xc7442464ffc9	     mov dword [rsp + 0x64], 0x3b9ac9ff 	      2917	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4008feb	    0xc74424680136	     mov dword [rsp + 0x68], 0xc4653601 	      2918	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4008ff3	    0xc68424b80000	                mov byte [rsp + 0xb8], 0	      2925	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4008ffb	    0xc78424b00000	               mov dword [rsp + 0xb0], 3	      2925	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4009006	        0x89442460	             mov dword [rsp + 0x60], eax	      2924	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400900a	        0xc6430800	                   mov byte [rbx + 8], 0	      2926	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400900e	    0xc70303000000	                      mov dword [rbx], 3	      2926	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4009014	     0xf85f6040000	                           jne 0x4009510	      2927	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x400901a	    0x41b903010000	                          mov r9d, 0x103	      2932	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x4009020	    0x41ba33030000	                         mov r10d, 0x333	      2933	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x4009026	    0xc78424b40000	     mov dword [rsp + 0xb4], 0xfffffffd 	      2929	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x4009031	    0xc74304fdffff	        mov dword [rbx + 4], 0xfffffffd 	      2930	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x4009038	    0x6644898c24ba	              mov word [rsp + 0xba], r9w	      2932	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x4009041	      0x664489530a	              mov word [rbx + 0xa], r10w	      2933	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_14
0x4009046	      0x4c8d442450	                    lea r8, [rsp + 0x50]	      2960	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_20
0x400904b	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      2960	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_20
0x4009050	          0x4c89ea	                            mov rdx, r13	      2960	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_20
0x4009053	          0x4889de	                            mov rsi, rbx	      2960	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_20
0x4009056	          0x4889df	                            mov rdi, rbx	      2960	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_20
0x4009059	      0xe822adffff	                  call sym.decMultiplyOp	      2960	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_20
0x400905e	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      2961	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_21
0x4009063	      0x4c8d4c2450	                    lea r9, [rsp + 0x50]	      2961	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_21
0x4009068	    0x488d9424b000	                   lea rdx, [rsp + 0xb0]	      2961	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_21
0x4009070	          0x4889de	                            mov rsi, rbx	      2961	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_21
0x4009073	          0x4531c0	                            xor r8d, r8d	      2961	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_21
0x4009076	          0x4889df	                            mov rdi, rbx	      2961	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_21
0x4009079	      0xe872bbffff	                       call sym.decAddOp	      2961	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_21
0x400907e	            0x31c9	                            xor ecx, ecx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009080	      0xbe05000000	                              mov esi, 5	      2968	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4009085	    0xc68424a80000	                mov byte [rsp + 0xa8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x400908d	    0xc78424a40000	               mov dword [rsp + 0xa4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009098	    0xc78424a00000	               mov dword [rsp + 0xa0], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40090a3	      0xb803000000	                              mov eax, 3	      2969	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40090a8	    0x66898c24aa00	               mov word [rsp + 0xaa], cx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40090b0	    0xc68424b80000	                mov byte [rsp + 0xb8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40090b8	    0xc78424b00000	               mov dword [rsp + 0xb0], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40090c3	    0x6689b424ba00	               mov word [rsp + 0xba], si	      2968	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40090cb	    0xc78424b40000	     mov dword [rsp + 0xb4], 0xffffffff 	      2969	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40090d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2969	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40090e0	        0x8d4400fe	                lea eax, [rax + rax - 2]	      2973	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_24
0x40090e4	      0x4c8d4c2450	                    lea r9, [rsp + 0x50]	      2976	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_25
0x40090e9	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      2976	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_25
0x40090ee	    0x41b880000000	                           mov r8d, 0x80	      2976	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_25
0x40090f4	          0x4889da	                            mov rdx, rbx	      2976	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_25
0x40090f7	          0x4c89ee	                            mov rsi, r13	      2976	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_25
0x40090fa	          0x4439e0	                           cmp eax, r12d	      2973	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_24
0x40090fd	          0x4889ef	                            mov rdi, rbp	      2976	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_25
0x4009100	        0x410f4fc4	                         cmovg eax, r12d	      2973	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_24
0x4009104	        0x89442460	             mov dword [rsp + 0x60], eax	      2973	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_24
0x4009108	      0xe803ccffff	                    call sym.decDivideOp	      2976	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_25
0x400910d	      0x4c8d4c2450	                    lea r9, [rsp + 0x50]	      2977	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_26
0x4009112	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      2977	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_26
0x4009117	          0x4531c0	                            xor r8d, r8d	      2977	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_26
0x400911a	          0x4889da	                            mov rdx, rbx	      2977	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_26
0x400911d	          0x4889ee	                            mov rsi, rbp	      2977	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_26
0x4009120	          0x4889ef	                            mov rdi, rbp	      2977	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_26
0x4009123	      0xe8c8baffff	                       call sym.decAddOp	      2977	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_26
0x4009128	      0x4c8d442450	                    lea r8, [rsp + 0x50]	      2978	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_27
0x400912d	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      2978	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_27
0x4009132	    0x488d9424b000	                   lea rdx, [rsp + 0xb0]	      2978	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_27
0x400913a	          0x4889ee	                            mov rsi, rbp	      2978	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_27
0x400913d	          0x4889df	                            mov rdi, rbx	      2978	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_27
0x4009140	      0xe83bacffff	                  call sym.decMultiplyOp	      2978	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1	CALL_27
0x4009145	        0x8b442460	            mov eax, dword [rsp + 0x60] 	      2971	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1
0x4009149	          0x4139c4	                           cmp r12d, eax	      2971	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1
0x400914c	            0x7f92	                            jg 0x40090e0	      2971	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	FOR_1
0x400914e	          0x498b07	                    mov rax, qword [r15]	      2985	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4009151	            0x8b0b	                    mov ecx, dword [rbx]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4009153	      0x4c8d4c2454	                    lea r9, [rsp + 0x54]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4009158	      0x4c8d442448	                    lea r8, [rsp + 0x48]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400915d	    0x488db4248000	                   lea rsi, [rsp + 0x80]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4009165	          0x4889df	                            mov rdi, rbx	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4009168	    0xc74424540000	               mov dword [rsp + 0x54], 0	      2988	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4009170	    0xc74424480000	               mov dword [rsp + 0x48], 0	      2989	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4009178	    0x488984248000	             mov qword [rsp + 0x80], rax	      2985	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4009180	        0x498b4708	                mov rax, qword [r15 + 8]	      2985	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4009184	    0x488984248800	             mov qword [rsp + 0x88], rax	      2985	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400918c	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      2985	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4009190	    0xc784248c0000	               mov dword [rsp + 0x8c], 3	      2986	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400919b	    0x488984249000	             mov qword [rsp + 0x90], rax	      2985	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40091a3	        0x418b4718	            mov eax, dword [r15 + 0x18] 	      2985	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40091a7	    0x898424980000	             mov dword [rsp + 0x98], eax	      2985	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40091ae	        0x8b442430	            mov eax, dword [rsp + 0x30] 	      2987	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40091b2	          0x4189c4	                           mov r12d, eax	      2987	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40091b5	        0x41c1ec1f	                          shr r12d, 0x1f	      2987	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40091b9	          0x4101c4	                           add r12d, eax	      2987	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40091bc	        0x488d430a	                    lea rax, [rbx + 0xa]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40091c0	          0x41d1fc	                             sar r12d, 1	      2987	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40091c3	        0x44016304	               add dword [rbx + 4], r12d	      2987	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40091c7	          0x4889c2	                            mov rdx, rax	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40091ca	      0x4889442430	             mov qword [rsp + 0x30], rax	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40091cf	      0xe8fc80ffff	             call sym.decSetCoeff.isra.3	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40091d4	      0x488d4c2454	                   lea rcx, [rsp + 0x54]	      2991	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40091d9	      0x488d542448	                   lea rdx, [rsp + 0x48]	      2991	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40091de	    0x488db4248000	                   lea rsi, [rsp + 0x80]	      2991	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40091e6	          0x4889df	                            mov rdi, rbx	      2991	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40091e9	      0xe8728cffff	                    call sym.decFinalize	      2991	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40091ee	        0x8b442454	            mov eax, dword [rsp + 0x54] 	      2995	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_15
0x40091f2	          0xf6c402	                              test ah, 2	      2995	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_15
0x40091f5	     0xf8565010000	                           jne 0x4009360	      2995	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_15
0x40091fb	      0x25dff7ffff	                     and eax, 0xfffff7df	      3002	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4009200	         0x944244c	              or dword [rsp + 0x4c], eax	      3002	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4009204	          0x4489e0	                           mov eax, r12d	      3005	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4009207	            0xf7d8	                                 neg eax	      3005	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4009209	           0x14304	                add dword [rbx + 4], eax	      3005	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400920c	      0x4c8d4c2450	                    lea r9, [rsp + 0x50]	      3014	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_30
0x4009211	        0x8944243c	             mov dword [rsp + 0x3c], eax	      3005	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4009215	            0x8b03	                    mov eax, dword [rbx]	      3013	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4009217	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      3014	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_30
0x400921c	    0x488d9424b000	                   lea rdx, [rsp + 0xb0]	      3014	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_30
0x4009224	    0x41b880000000	                           mov r8d, 0x80	      3014	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_30
0x400922a	          0x4889de	                            mov rsi, rbx	      3014	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_30
0x400922d	          0x4889ef	                            mov rdi, rbp	      3014	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_30
0x4009230	            0xf7d0	                                 not eax	      3013	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4009232	      0x836c246001	               sub dword [rsp + 0x60], 1	      3012	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x4009237	    0x898424b40000	             mov dword [rsp + 0xb4], eax	      3013	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400923e	      0xe8adb9ffff	                       call sym.decAddOp	      3014	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_30
0x4009243	      0x4c8d442450	                    lea r8, [rsp + 0x50]	      3016	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_31
0x4009248	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      3016	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_31
0x400924d	          0x4889ea	                            mov rdx, rbp	      3016	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_31
0x4009250	          0x4889ee	                            mov rsi, rbp	      3016	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_31
0x4009253	          0x4889ef	                            mov rdi, rbp	      3016	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_31
0x4009256	    0xc744246c0100	               mov dword [rsp + 0x6c], 1	      3015	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x400925e	      0xe81dabffff	                  call sym.decMultiplyOp	      3016	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_31
0x4009263	      0x4c8d4c2450	                    lea r9, [rsp + 0x50]	      3017	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_32
0x4009268	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      3017	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_32
0x400926d	    0x41b801000000	                              mov r8d, 1	      3017	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_32
0x4009273	          0x4889ea	                            mov rdx, rbp	      3017	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_32
0x4009276	          0x4c89ee	                            mov rsi, r13	      3017	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_32
0x4009279	          0x4889ef	                            mov rdi, rbp	      3017	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_32
0x400927c	      0xe88fa3ffff	                   call sym.decCompareOp	      3017	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_32
0x4009281	        0x807d0800	                   cmp byte [rbp + 8], 0	      3018	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_33
0x4009285	     0xf880d040000	                            js 0x4009698	      3018	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_33
0x400928b	      0x4c8d4c2450	                    lea r9, [rsp + 0x50]	      3029	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_36
0x4009290	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      3029	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_36
0x4009295	    0x488d9424b000	                   lea rdx, [rsp + 0xb0]	      3029	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_36
0x400929d	          0x4531c0	                            xor r8d, r8d	      3029	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_36
0x40092a0	          0x4889de	                            mov rsi, rbx	      3029	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_36
0x40092a3	          0x4889ef	                            mov rdi, rbp	      3029	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_36
0x40092a6	      0xe845b9ffff	                       call sym.decAddOp	      3029	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_36
0x40092ab	      0x4c8d442450	                    lea r8, [rsp + 0x50]	      3031	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_37
0x40092b0	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      3031	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_37
0x40092b5	          0x4889ea	                            mov rdx, rbp	      3031	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_37
0x40092b8	          0x4889ee	                            mov rsi, rbp	      3031	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_37
0x40092bb	          0x4889ef	                            mov rdi, rbp	      3031	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_37
0x40092be	    0xc744246c0500	               mov dword [rsp + 0x6c], 5	      3030	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4
0x40092c6	      0xe8b5aaffff	                  call sym.decMultiplyOp	      3031	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_37
0x40092cb	      0x4c8d4c2450	                    lea r9, [rsp + 0x50]	      3032	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_38
0x40092d0	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      3032	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_38
0x40092d5	    0x41b801000000	                              mov r8d, 1	      3032	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_38
0x40092db	          0x4c89ea	                            mov rdx, r13	      3032	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_38
0x40092de	          0x4889ee	                            mov rsi, rbp	      3032	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_38
0x40092e1	          0x4889ef	                            mov rdi, rbp	      3032	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_38
0x40092e4	      0xe827a3ffff	                   call sym.decCompareOp	      3032	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	CALL_38
0x40092e9	        0x807d0800	                   cmp byte [rbp + 8], 0	      3033	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_39
0x40092ed	     0xf8817040000	                            js 0x400970a	      3033	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_39
0x40092f3	        0x44016304	               add dword [rbx + 4], r12d	      3047	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1
0x40092f7	          0x4889de	                            mov rsi, rbx	      3051	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_42
0x40092fa	          0x4889ef	                            mov rdi, rbp	      3051	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_42
0x40092fd	      0xe800000000	                          call 0x4009302	      3051	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_42
0x4009302	      0x4c8d442458	                    lea r8, [rsp + 0x58]	      3052	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_43
0x4009307	      0xb901000000	                              mov ecx, 1	      3052	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_43
0x400930c	      0xba01000000	                              mov edx, 1	      3052	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_43
0x4009311	          0x4c89fe	                            mov rsi, r15	      3052	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_43
0x4009314	          0x4889ef	                            mov rdi, rbp	      3052	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_43
0x4009317	      0xe8247effff	                        call sym.decTrim	      3052	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_43
0x400931c	          0x8b4500	                    mov eax, dword [rbp]	      3058	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_18
0x400931f	        0x8d4400ff	                lea eax, [rax + rax - 1]	      3058	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_18
0x4009323	        0x3944242c	            cmp dword [rsp + 0x2c], eax 	      3058	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_18
0x4009327	     0xf8d7b020000	                           jge 0x40095a8	      3058	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_18
0x400932d	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x4009331	       0xd20080000	                           or eax, 0x820	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x4009336	        0x8944244c	             mov dword [rsp + 0x4c], eax	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x400933a	          0xf6c420	                           test ah, 0x20	      3099	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25
0x400933d	            0x7425	                            je 0x4009364	      3099	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25
0x400933f	        0x418b7f08	                mov edi, dword [r15 + 8]	      3103	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_26
0x4009343	          0x418b0e	                    mov ecx, dword [r14]	      3103	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_26
0x4009346	        0x41034e04	                add ecx, dword [r14 + 4]	      3103	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_26
0x400934a	          0x8d143f	                    lea edx, [rdi + rdi]	      3103	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_26
0x400934d	            0x39d1	                            cmp ecx, edx	      3103	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_26
0x400934f	            0x7e07	                           jle 0x4009358	      3103	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_26
0x4009351	          0x80e4cf	                            and ah, 0xcf	      3103	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_26
0x4009354	        0x8944244c	             mov dword [rsp + 0x4c], eax	      3103	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_26
0x4009358	            0xa820	                           test al, 0x20	      3108	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_28
0x400935a	            0x7508	                           jne 0x4009364	      3108	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_28
0x400935c	          0x80e4df	                            and ah, 0xdf	      3108	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_28
0x400935f	              0x90	                                     nop	      3108	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_28
0x4009360	        0x8944244c	             mov dword [rsp + 0x4c], eax	      3108	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_25	IF_28
0x4009364	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3111	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_49
0x4009369	          0x4889de	                            mov rsi, rbx	      3111	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_49
0x400936c	      0xe800000000	                          call 0x4009371	      3111	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_49
0x4009371	        0x8b5c244c	            mov ebx, dword [rsp + 0x4c] 	      3111	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_49
0x4009375	      0xe92efbffff	                           jmp 0x4008ea8	      3111	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_49
0x400937a	    0x660f1f440000	                    nop word [rax + rax]	      3111	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_49
0x4009380	        0x41833e01	                      cmp dword [r14], 1	      2865	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_11
0x4009384	     0xf8563fbffff	                           jne 0x4008eed	      2865	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_11
0x400938a	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      2866	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_12
0x400938f	          0x4c89f6	                            mov rsi, r14	      2866	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_12
0x4009392	          0x4889df	                            mov rdi, rbx	      2866	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_12
0x4009395	      0xe800000000	                          call 0x400939a	      2866	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8	CALL_12
0x400939a	        0x8b5c2438	            mov ebx, dword [rsp + 0x38] 	      2867	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x400939e	      0x488d4c244c	                   lea rcx, [rsp + 0x4c]	      2869	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x40093a3	      0x488d542448	                   lea rdx, [rsp + 0x48]	      2869	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x40093a8	          0x4c89fe	                            mov rsi, r15	      2869	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x40093ab	          0x895f04	                mov dword [rdi + 4], ebx	      2867	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x40093ae	      0xe8ad8affff	                    call sym.decFinalize	      2869	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x40093b3	        0x8b5c244c	            mov ebx, dword [rsp + 0x4c] 	      2869	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x40093b7	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2822	decNumber.c	FUNCTION_68	FUNCTION_45
0x40093c0	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2821	decNumber.c	FUNCTION_68	FUNCTION_45
0x40093c9	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2820	decNumber.c	FUNCTION_68	FUNCTION_45
0x40093d2	      0xe9d1faffff	                           jmp 0x4008ea8	      2870	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x40093d7	    0x660f1f840000	                    nop word [rax + rax]	      2870	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_8
0x40093e0	    0xc744244c8000	           mov dword [rsp + 0x4c], 0x80 	      2852	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_8
0x40093e8	      0xbb80000000	                           mov ebx, 0x80	      2852	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	IF_6	CALL_8
0x40093ed	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2822	decNumber.c	FUNCTION_68	FUNCTION_45
0x40093f6	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2821	decNumber.c	FUNCTION_68	FUNCTION_45
0x40093ff	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2820	decNumber.c	FUNCTION_68	FUNCTION_45
0x4009408	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3114	decNumber.c	FUNCTION_68	FUNCTION_45
0x400940d	      0xe800000000	                          call 0x4009412	      3114	decNumber.c	FUNCTION_68	FUNCTION_45
0x4009412	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      3115	decNumber.c	FUNCTION_68	FUNCTION_45
0x4009417	      0xe800000000	                          call 0x400941c	      3115	decNumber.c	FUNCTION_68	FUNCTION_45
0x400941c	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      3116	decNumber.c	FUNCTION_68	FUNCTION_45
0x4009421	      0xe800000000	                          call 0x4009426	      3116	decNumber.c	FUNCTION_68	FUNCTION_45
0x4009426	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3120	decNumber.c	FUNCTION_68	FUNCTION_45	CALL_50
0x400942b	          0x4c89fa	                            mov rdx, r15	      3120	decNumber.c	FUNCTION_68	FUNCTION_45	CALL_50
0x400942e	            0x89de	                            mov esi, ebx	      3120	decNumber.c	FUNCTION_68	FUNCTION_45	CALL_50
0x4009430	      0xe89b73ffff	                      call sym.decStatus	      3120	decNumber.c	FUNCTION_68	FUNCTION_45	CALL_50
0x4009435	    0x488bb4244801	           mov rsi, qword [rsp + 0x148] 	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x400943d	    0x644833342528	                xor rsi, qword fs:[0x28]	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x4009446	      0x488b442408	                mov rax, qword [rsp + 8]	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x400944b	     0xf85fa020000	                           jne 0x400974b	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x4009451	    0x4881c4580100	                          add rsp, 0x158	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x4009458	              0x5b	                                 pop rbx	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x4009459	              0x5d	                                 pop rbp	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x400945a	            0x415c	                                 pop r12	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x400945c	            0x415d	                                 pop r13	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x400945e	            0x415e	                                 pop r14	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x4009460	            0x415f	                                 pop r15	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x4009462	              0xc3	                                     ret	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x4009463	       0xf1f440000	                   nop dword [rax + rax]	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
0x4009468	     0xfb680000000	                   movzx eax, byte [rax]	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x400946f	        0x8d7c000a	              lea edi, [rax + rax + 0xa]	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4009473	      0xe9befaffff	                           jmp 0x4008f36	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4009478	     0xf1f84000000	                   nop dword [rax + rax]	      2890	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_16
0x4009480	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2855	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	CALL_10
0x4009485	      0x4c8d44244c	                    lea r8, [rsp + 0x4c]	      2855	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	CALL_10
0x400948a	          0x4889d1	                            mov rcx, rdx	      2855	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	CALL_10
0x400948d	            0x31d2	                            xor edx, edx	      2855	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	CALL_10
0x400948f	      0xe85c9fffff	                 call sym.decNaNs.isra.6	      2855	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	CALL_10
0x4009494	        0x8b5c244c	            mov ebx, dword [rsp + 0x4c] 	      2855	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_5	CALL_10
0x4009498	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2822	decNumber.c	FUNCTION_68	FUNCTION_45
0x40094a1	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2821	decNumber.c	FUNCTION_68	FUNCTION_45
0x40094aa	    0x48c744241000	               mov qword [rsp + 0x10], 0	      2820	decNumber.c	FUNCTION_68	FUNCTION_45
0x40094b3	      0xe9f0f9ffff	                           jmp 0x4008ea8	      2820	decNumber.c	FUNCTION_68	FUNCTION_45
0x40094b8	     0xf1f84000000	                   nop dword [rax + rax]	      2820	decNumber.c	FUNCTION_68	FUNCTION_45
0x40094c0	    0x488dac242001	                  lea rbp, [rsp + 0x120]	      2825	decNumber.c	FUNCTION_68	FUNCTION_45
0x40094c8	    0x488d9c24f000	                   lea rbx, [rsp + 0xf0]	      2824	decNumber.c	FUNCTION_68	FUNCTION_45
0x40094d0	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2822	decNumber.c	FUNCTION_68	FUNCTION_45
0x40094d9	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2821	decNumber.c	FUNCTION_68	FUNCTION_45
0x40094e2	      0xe9c5faffff	                           jmp 0x4008fac	      2821	decNumber.c	FUNCTION_68	FUNCTION_45
0x40094e7	    0x660f1f840000	                    nop word [rax + rax]	      2821	decNumber.c	FUNCTION_68	FUNCTION_45
0x40094f0	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x40094f4	      0xba56555555	                     mov edx, 0x55555556	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x40094f9	          0x8d4804	                      lea ecx, [rax + 4]	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x40094fc	            0x89c8	                            mov eax, ecx	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x40094fe	          0xc1f91f	                           sar ecx, 0x1f	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4009501	            0xf7ea	                                imul edx	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4009503	            0x29ca	                            sub edx, ecx	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4009505	        0x8d7c120a	              lea edi, [rdx + rdx + 0xa]	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4009509	      0xe95afaffff	                           jmp 0x4008f68	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x400950e	            0x6690	                                     nop	      2899	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	CALL_17
0x4009510	      0xbf33030000	                          mov edi, 0x333	      2949	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x4009515	    0x41b803010000	                          mov r8d, 0x103	      2950	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x400951b	      0x41836d0401	                  sub dword [r13 + 4], 1	      2944	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x4009520	      0x8344243001	               add dword [rsp + 0x30], 1	      2945	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x4009525	    0xc78424b40000	     mov dword [rsp + 0xb4], 0xfffffffc 	      2946	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x4009530	    0xc74304feffff	        mov dword [rbx + 4], 0xfffffffe 	      2947	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x4009537	    0x6689bc24ba00	               mov word [rsp + 0xba], di	      2949	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x400953f	      0x664489430a	               mov word [rbx + 0xa], r8w	      2950	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x4009544	      0xe9fdfaffff	                           jmp 0x4009046	      2950	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x4009549	     0xf1f80000000	                         nop dword [rax]	      2950	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_3
0x4009550	          0x4863ff	                         movsxd rdi, edi	      2892	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10
0x4009553	      0xe800000000	                          call 0x4009558	      2892	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10
0x4009558	          0x4885c0	                           test rax, rax	      2893	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10	IF_11
0x400955b	      0x4889442410	             mov qword [rsp + 0x10], rax	      2892	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10
0x4009560	          0x4989c5	                            mov r13, rax	      2892	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10
0x4009563	     0xf85e7f9ffff	                           jne 0x4008f50	      2893	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10	IF_11
0x4009569	    0xc744244c1000	           mov dword [rsp + 0x4c], 0x10 	      2894	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10	IF_11
0x4009571	      0xbb10000000	                           mov ebx, 0x10	      2895	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10	IF_11
0x4009576	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2822	decNumber.c	FUNCTION_68	FUNCTION_45
0x400957f	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2821	decNumber.c	FUNCTION_68	FUNCTION_45
0x4009588	      0xe97bfeffff	                           jmp 0x4009408	      2895	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10	IF_11
0x400958d	           0xf1f00	                         nop dword [rax]	      2895	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_10	IF_11
0x4009590	    0xc744244c1000	           mov dword [rsp + 0x4c], 0x10 	      2904	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x4009598	      0xbb10000000	                           mov ebx, 0x10	      2905	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x400959d	      0xe966feffff	                           jmp 0x4009408	      2905	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x40095a2	    0x660f1f440000	                    nop word [rax + rax]	      2905	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_12	IF_13
0x40095a8	      0x4c8d44245c	                    lea r8, [rsp + 0x5c]	      3063	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	CALL_44
0x40095ad	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      3063	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	CALL_44
0x40095b2	          0x4889ea	                            mov rdx, rbp	      3063	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	CALL_44
0x40095b5	          0x4889ee	                            mov rsi, rbp	      3063	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	CALL_44
0x40095b8	          0x4889ef	                            mov rdi, rbp	      3063	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	CALL_44
0x40095bb	    0xc744245c0000	               mov dword [rsp + 0x5c], 0	      3062	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5
0x40095c3	      0xe8b8a7ffff	                  call sym.decMultiplyOp	      3063	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	CALL_44
0x40095c8	      0xf644245d02	               test byte [rsp + 0x5d], 2	      3064	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	IF_19
0x40095cd	     0xf855afdffff	                           jne 0x400932d	      3064	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	IF_19
0x40095d3	      0x4c8d4c245c	                    lea r9, [rsp + 0x5c]	      3068	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_45
0x40095d8	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      3068	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_45
0x40095dd	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      3068	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_45
0x40095e5	    0x41b801000000	                              mov r8d, 1	      3068	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_45
0x40095eb	          0x4c89f2	                            mov rdx, r14	      3068	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_45
0x40095ee	          0x4889ee	                            mov rsi, rbp	      3068	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_45
0x40095f1	      0xe81aa0ffff	                   call sym.decCompareOp	      3068	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_45
0x40095f6	    0x6683bc24ba00	                cmp word [rsp + 0xba], 0	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x40095ff	     0xf8528fdffff	                           jne 0x400932d	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x4009605	    0x83bc24b00000	               cmp dword [rsp + 0xb0], 1	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x400960d	     0xf851afdffff	                           jne 0x400932d	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x4009613	    0xf68424b80000	           test byte [rsp + 0xb8], 0x70 	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x400961b	     0xf850cfdffff	                           jne 0x400932d	      3069	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	CALL_46
0x4009621	          0x8b5304	                mov edx, dword [rbx + 4]	      3073	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7
0x4009624	        0x8b6c2438	            mov ebp, dword [rsp + 0x38] 	      3074	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	IF_21
0x4009628	            0x29d5	                            sub ebp, edx	      3074	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	IF_21
0x400962a	     0xf88f9000000	                            js 0x4009729	      3074	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	IF_21
0x4009630	        0x418b4704	                mov eax, dword [r15 + 4]	      3078	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8
0x4009634	          0x412b07	                    sub eax, dword [r15]	      3078	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8
0x4009637	          0x83c001	                              add eax, 1	      3078	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8
0x400963a	            0x29d0	                            sub eax, edx	      3078	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8
0x400963c	            0x39c5	                            cmp ebp, eax	      3079	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_22
0x400963e	            0x7e11	                           jle 0x4009651	      3079	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_22
0x4009640	      0x41807f1800	                cmp byte [r15 + 0x18], 0	      3079	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_22
0x4009645	            0x740a	                            je 0x4009651	      3079	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_22
0x4009647	    0x814c244c0004	            or dword [rsp + 0x4c], 0x400	      3081	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_22
0x400964f	            0x89c5	                            mov ebp, eax	      3081	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_22
0x4009651	        0x8b442458	            mov eax, dword [rsp + 0x58] 	      3083	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_23
0x4009655	            0x39c5	                            cmp ebp, eax	      3083	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_23
0x4009657	            0x7e0a	                           jle 0x4009663	      3083	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_23
0x4009659	    0x814c244c0004	            or dword [rsp + 0x4c], 0x400	      3085	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_23
0x4009661	            0x89c5	                            mov ebp, eax	      3085	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_23
0x4009663	            0x85ed	                           test ebp, ebp	      3087	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24
0x4009665	            0x7e24	                           jle 0x400968b	      3087	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24
0x4009667	          0x486303	                 movsxd rax, dword [rbx]	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400966a	          0x83f831	                           cmp eax, 0x31	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400966d	     0xf8fc6000000	                            jg 0x4009739	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x4009673	     0xfb6b0000000	                   movzx esi, byte [rax]	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400967a	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400967f	            0x89ea	                            mov edx, ebp	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x4009681	      0xe8ba78ffff	         call sym.decShiftToLeast.part.1	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x4009686	           0x16b04	                add dword [rbx + 4], ebp	      3089	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24
0x4009689	            0x292b	                    sub dword [rbx], ebp	      3090	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24
0x400968b	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      3090	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24
0x400968f	      0xe9a6fcffff	                           jmp 0x400933a	      3090	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24
0x4009694	         0xf1f4000	                         nop dword [rax]	      3090	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24
0x4009698	    0x838424b40000	               add dword [rsp + 0xb4], 1	      3020	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16
0x40096a0	      0xba01000000	                              mov edx, 1	      3021	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16
0x40096a5	      0x4c8d4c2450	                    lea r9, [rsp + 0x50]	      3022	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_34
0x40096aa	    0x66899424ba00	               mov word [rsp + 0xba], dx	      3021	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16
0x40096b2	    0x41b880000000	                           mov r8d, 0x80	      3022	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	IF_16	CALL_34
0x40096b8	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      3036	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_40
0x40096bd	    0x488d9424b000	                   lea rdx, [rsp + 0xb0]	      3036	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_40
0x40096c5	          0x4889de	                            mov rsi, rbx	      3036	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_40
0x40096c8	          0x4889df	                            mov rdi, rbx	      3036	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_40
0x40096cb	      0xe820b5ffff	                       call sym.decAddOp	      3036	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_40
0x40096d0	      0x4c8d4c2450	                    lea r9, [rsp + 0x50]	      3040	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_41
0x40096d5	    0x488d8c248000	                   lea rcx, [rsp + 0x80]	      3040	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_41
0x40096dd	    0x488db424a000	                   lea rsi, [rsp + 0xa0]	      3040	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_41
0x40096e5	          0x4531c0	                            xor r8d, r8d	      3040	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_41
0x40096e8	          0x4889da	                            mov rdx, rbx	      3040	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_41
0x40096eb	          0x4889df	                            mov rdi, rbx	      3040	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_41
0x40096ee	        0x8b44243c	            mov eax, dword [rsp + 0x3c] 	      3038	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x40096f2	     0x18424880000	             add dword [rsp + 0x88], eax	      3038	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x40096f9	     0x18424840000	             add dword [rsp + 0x84], eax	      3039	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x4009700	      0xe8ebb4ffff	                       call sym.decAddOp	      3040	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_41
0x4009705	      0xe9e9fbffff	                           jmp 0x40092f3	      3040	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_41
0x400970a	      0xb801000000	                              mov eax, 1	      3035	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x400970f	    0x838424b40000	               add dword [rsp + 0xb4], 1	      3034	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x4009717	      0x4c8d4c2450	                    lea r9, [rsp + 0x50]	      3036	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_40
0x400971c	    0x66898424ba00	               mov word [rsp + 0xba], ax	      3035	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17
0x4009724	          0x4531c0	                            xor r8d, r8d	      3036	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_40
0x4009727	            0xeb8f	                           jmp 0x40096b8	      3036	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_4	IF_17	CALL_40
0x4009729	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      3074	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	IF_21
0x400972d	          0x80cc08	                                or ah, 8	      3074	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	IF_21
0x4009730	        0x8944244c	             mov dword [rsp + 0x4c], eax	      3074	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	IF_21
0x4009734	      0xe901fcffff	                           jmp 0x400933a	      3074	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	IF_21
0x4009739	          0x83c002	                              add eax, 2	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400973c	      0xb903000000	                              mov ecx, 3	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x4009741	              0x99	                                     cdq	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x4009742	            0xf7f9	                                idiv ecx	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x4009744	            0x89c6	                            mov esi, eax	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x4009746	      0xe92fffffff	                           jmp 0x400967a	      3088	decNumber.c	FUNCTION_68	FUNCTION_45	DO_1	ELSE_5	ELSE_6	ELSE_7	ELSE_8	IF_24	CALL_48
0x400974b	      0xe800000000	     call sym.decQuantizeOp.constprop.10	      3125	decNumber.c	FUNCTION_68	FUNCTION_45
decNumberShift	ELSE,6:DO,0:CALL,14:IF,11:functions,0:SWITCH,0:WHILE,0:FOR,0	116
0x4004a50	            0x4154	                                push r12	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004a52	              0x55	                                push rbp	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004a53	          0x4889cd	                            mov rbp, rcx	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004a56	              0x53	                                push rbx	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004a57	          0x4889fb	                            mov rbx, rdi	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004a5a	        0x4883ec20	                           sub rsp, 0x20	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004a5e	    0x64488b042528	                mov rax, qword fs:[0x28]	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004a67	      0x4889442418	             mov qword [rsp + 0x18], rax	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004a6c	            0x31c0	                            xor eax, eax	      2669	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004a6e	        0xf6460830	               test byte [rsi + 8], 0x30	      2678	decNumber.c	FUNCTION_68	FUNCTION_44	IF_2	CALL_3
0x4004a72	    0xc74424140000	               mov dword [rsp + 0x14], 0	      2670	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004a7a	            0x7508	                           jne 0x4004a84	      2678	decNumber.c	FUNCTION_68	FUNCTION_44	IF_2	CALL_3
0x4004a7c	         0xfb64208	               movzx eax, byte [rdx + 8]	      2678	decNumber.c	FUNCTION_68	FUNCTION_44	IF_2	CALL_3
0x4004a80	            0xa830	                           test al, 0x30	      2678	decNumber.c	FUNCTION_68	FUNCTION_44	IF_2	CALL_3
0x4004a82	            0x743c	                            je 0x4004ac0	      2678	decNumber.c	FUNCTION_68	FUNCTION_44	IF_2	CALL_3
0x4004a84	      0x4c8d442414	                    lea r8, [rsp + 0x14]	      2679	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_4
0x4004a89	          0x4889e9	                            mov rcx, rbp	      2679	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_4
0x4004a8c	          0x4889df	                            mov rdi, rbx	      2679	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_4
0x4004a8f	      0xe85ce9ffff	                 call sym.decNaNs.isra.6	      2679	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_4
0x4004a94	        0x8b742414	            mov esi, dword [rsp + 0x14] 	      2721	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_14
0x4004a98	            0x85f6	                           test esi, esi	      2721	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_14
0x4004a9a	     0xf857d000000	                           jne 0x4004b1d	      2721	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_14
0x4004aa0	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004aa5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004aae	          0x4889d8	                            mov rax, rbx	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004ab1	     0xf8500010000	                           jne 0x4004bb7	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004ab7	        0x4883c420	                           add rsp, 0x20	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004abb	              0x5b	                                 pop rbx	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004abc	              0x5d	                                 pop rbp	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004abd	            0x415c	                                 pop r12	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004abf	              0xc3	                                     ret	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004ac0	            0xa840	                           test al, 0x40	      2681	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_1	IF_3	CALL_5
0x4004ac2	            0x754c	                           jne 0x4004b10	      2681	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_1	IF_3	CALL_5
0x4004ac4	          0x8b4204	                mov eax, dword [rdx + 4]	      2681	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_1	IF_3	CALL_5
0x4004ac7	            0x85c0	                           test eax, eax	      2681	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_1	IF_3	CALL_5
0x4004ac9	            0x7545	                           jne 0x4004b10	      2681	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_1	IF_3	CALL_5
0x4004acb	          0x4889d7	                            mov rdi, rdx	      2684	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	CALL_6
0x4004ace	      0x4889742408	                mov qword [rsp + 8], rsi	      2684	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	CALL_6
0x4004ad3	      0xe858baffff	                      call sym.decGetInt	      2684	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	CALL_6
0x4004ad8	          0x4189c4	                           mov r12d, eax	      2684	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	CALL_6
0x4004adb	    0x8d80feffff7f	             lea eax, [rax + 0x7ffffffe]	      2686	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4
0x4004ae1	          0x83f801	                              cmp eax, 1	      2686	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4
0x4004ae4	            0x762a	                           jbe 0x4004b10	      2686	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4
0x4004ae6	    0x4181fc000000	                    cmp r12d, 0x80000000	      2686	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4
0x4004aed	            0x7421	                            je 0x4004b10	      2686	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4
0x4004aef	          0x4489e2	                           mov edx, r12d	      2687	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4	CALL_7
0x4004af2	      0x488b742408	                mov rsi, qword [rsp + 8]	      2687	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4	CALL_7
0x4004af7	          0xc1fa1f	                           sar edx, 0x1f	      2687	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4	CALL_7
0x4004afa	            0x89d0	                            mov eax, edx	      2687	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4	CALL_7
0x4004afc	          0x4431e0	                           xor eax, r12d	      2687	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4	CALL_7
0x4004aff	            0x29d0	                            sub eax, edx	      2687	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4	CALL_7
0x4004b01	          0x3b4500	                    cmp eax, dword [rbp]	      2687	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4	CALL_7
0x4004b04	            0x7e27	                           jle 0x4004b2d	      2687	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4	CALL_7
0x4004b06	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2687	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	IF_4	CALL_7
0x4004b10	    0xc74424148000	           mov dword [rsp + 0x14], 0x80 	      2682	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_1	IF_3
0x4004b18	      0xbe80000000	                           mov esi, 0x80	      2721	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_14
0x4004b1d	          0x4889ea	                            mov rdx, rbp	      2721	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_14
0x4004b20	          0x4889df	                            mov rdi, rbx	      2721	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_14
0x4004b23	      0xe8a8bcffff	                      call sym.decStatus	      2721	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_14
0x4004b28	      0xe973ffffff	                           jmp 0x4004aa0	      2721	decNumber.c	FUNCTION_68	FUNCTION_44	CALL_14
0x4004b2d	          0x4889df	                            mov rdi, rbx	      2690	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	CALL_8
0x4004b30	      0xe800000000	                          call 0x4004b35	      2690	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	CALL_8
0x4004b35	          0x4585e4	                         test r12d, r12d	      2691	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	CALL_9
0x4004b38	     0xf8456ffffff	                            je 0x4004a94	      2691	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	CALL_9
0x4004b3e	        0xf6430840	               test byte [rbx + 8], 0x40	      2691	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	CALL_9
0x4004b42	     0xf854cffffff	                           jne 0x4004a94	      2691	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	CALL_9
0x4004b48	          0x4585e4	                         test r12d, r12d	      2692	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6
0x4004b4b	            0x7e3b	                           jle 0x4004b88	      2692	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6
0x4004b4d	          0x8b5500	                    mov edx, dword [rbp]	      2693	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	IF_7
0x4004b50	          0x4139d4	                           cmp r12d, edx	      2693	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	IF_7
0x4004b53	            0x7422	                            je 0x4004b77	      2693	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	IF_7
0x4004b55	            0x8b33	                    mov esi, dword [rbx]	      2699	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8
0x4004b57	        0x418d0434	                    lea eax, [r12 + rsi]	      2699	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8
0x4004b5b	            0x39c2	                            cmp edx, eax	      2699	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8
0x4004b5d	            0x7c5d	                            jl 0x4004bbc	      2699	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8
0x4004b5f	          0x83fe01	                              cmp esi, 1	      2704	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_9
0x4004b62	            0x7e68	                           jle 0x4004bcc	      2704	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_9
0x4004b64	        0x488d7b0a	                    lea rdi, [rbx + 0xa]	      2705	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	CALL_11
0x4004b68	          0x4489e2	                           mov edx, r12d	      2705	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	CALL_11
0x4004b6b	      0xe8e0c1ffff	          call sym.decShiftToMost.part.0	      2705	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	CALL_11
0x4004b70	            0x8903	                    mov dword [rbx], eax	      2705	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	CALL_11
0x4004b72	      0xe91dffffff	                           jmp 0x4004a94	      2705	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	CALL_11
0x4004b77	    0x66c7430a0000	                 mov word [rbx + 0xa], 0	      2694	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	IF_7
0x4004b7d	    0xc70301000000	                      mov dword [rbx], 1	      2695	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	IF_7
0x4004b83	      0xe90cffffff	                           jmp 0x4004a94	      2695	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	IF_7
0x4004b88	          0x486303	                 movsxd rax, dword [rbx]	      2709	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	IF_10
0x4004b8b	          0x4489e1	                           mov ecx, r12d	      2709	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	IF_10
0x4004b8e	            0xf7d9	                                 neg ecx	      2709	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	IF_10
0x4004b90	            0x39c1	                            cmp ecx, eax	      2709	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	IF_10
0x4004b92	            0x7de3	                           jge 0x4004b77	      2709	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	IF_10
0x4004b94	          0x83f831	                           cmp eax, 0x31	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4004b97	            0x7f40	                            jg 0x4004bd9	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4004b99	     0xfb6b0000000	                   movzx esi, byte [rax]	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4004ba0	            0x85c9	                           test ecx, ecx	      6740	decNumber.c	FUNCTION_9	IF_1
0x4004ba2	            0x740b	                            je 0x4004baf	      6740	decNumber.c	FUNCTION_9	IF_1
0x4004ba4	        0x488d7b0a	                    lea rdi, [rbx + 0xa]	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4004ba8	            0x89ca	                            mov edx, ecx	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4004baa	      0xe891c3ffff	         call sym.decShiftToLeast.part.1	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4004baf	          0x440123	                   add dword [rbx], r12d	      2715	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6
0x4004bb2	      0xe9ddfeffff	                           jmp 0x4004a94	      2715	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6
0x4004bb7	      0xe800000000	                          call 0x4004bbc	      2723	decNumber.c	FUNCTION_68	FUNCTION_44
0x4004bbc	            0x29d0	                            sub eax, edx	      2700	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8	CALL_10
0x4004bbe	          0x4889df	                            mov rdi, rbx	      2700	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8	CALL_10
0x4004bc1	            0x89c6	                            mov esi, eax	      2700	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8	CALL_10
0x4004bc3	      0xe868bbffff	                       call sym.decDecap	      2700	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8	CALL_10
0x4004bc8	            0x8b33	                    mov esi, dword [rbx]	      2700	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8	CALL_10
0x4004bca	            0xeb93	                           jmp 0x4004b5f	      2700	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_8	CALL_10
0x4004bcc	      0x66837b0a00	                 cmp word [rbx + 0xa], 0	      2704	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_9
0x4004bd1	     0xf84bdfeffff	                            je 0x4004a94	      2704	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_9
0x4004bd7	            0xeb8b	                           jmp 0x4004b64	      2704	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	IF_6	ELSE_4	IF_9
0x4004bd9	          0x83c002	                              add eax, 2	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4004bdc	      0xbf03000000	                              mov edi, 3	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4004be1	              0x99	                                     cdq	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4004be2	            0xf7ff	                                idiv edi	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4004be4	            0x89c6	                            mov esi, eax	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
0x4004be6	            0xebb8	                           jmp 0x4004ba0	      2714	decNumber.c	FUNCTION_68	FUNCTION_44	ELSE_2	ELSE_3	IF_5	ELSE_5	ELSE_6	CALL_13
decNumberPower	ELSE,9:DO,1:CALL,54:IF,53:functions,0:SWITCH,0:WHILE,0:FOR,1	563
0x40084a0	            0x4157	                                push r15	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x40084a2	            0x4156	                                push r14	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x40084a4	          0x4989d1	                             mov r9, rdx	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x40084a7	            0x4155	                                push r13	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x40084a9	            0x4154	                                push r12	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x40084ab	          0x4989f5	                            mov r13, rsi	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x40084ae	              0x55	                                push rbp	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x40084af	              0x53	                                push rbx	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x40084b0	          0x4989cc	                            mov r12, rcx	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x40084b3	          0x4889fb	                            mov rbx, rdi	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x40084b6	    0x4881ece80000	                           sub rsp, 0xe8	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x40084bd	      0x440fb67608	              movzx r14d, byte [rsi + 8]	      1994	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7
0x40084c2	      0x440fb67a08	              movzx r15d, byte [rdx + 8]	      1994	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7
0x40084c7	    0x64488b042528	                mov rax, qword fs:[0x28]	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x40084d0	    0x48898424d800	             mov qword [rsp + 0xd8], rax	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x40084d8	            0x31c0	                            xor eax, eax	      1943	decNumber.c	FUNCTION_68	FUNCTION_34
0x40084da	            0x8b01	                    mov eax, dword [rcx]	      1950	decNumber.c	FUNCTION_68	FUNCTION_34
0x40084dc	    0xc74424380000	               mov dword [rsp + 0x38], 0	      1961	decNumber.c	FUNCTION_68	FUNCTION_34
0x40084e4	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	      1962	decNumber.c	FUNCTION_68	FUNCTION_34
0x40084ec	        0x89442408	                mov dword [rsp + 8], eax	      1950	decNumber.c	FUNCTION_68	FUNCTION_34
0x40084f0	          0x4489f0	                           mov eax, r14d	      1994	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7
0x40084f3	          0x4409f8	                            or eax, r15d	      1994	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7
0x40084f6	            0xa870	                           test al, 0x70	      1994	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7
0x40084f8	            0x7466	                            je 0x4008560	      1994	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7
0x40084fa	            0xa830	                           test al, 0x30	      1995	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8	CALL_7
0x40084fc	     0xf84c6000000	                            je 0x40085c8	      1995	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8	CALL_7
0x4008502	      0x4c8d44243c	                    lea r8, [rsp + 0x3c]	      1996	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8	CALL_8
0x4008507	      0xe8e4aeffff	                 call sym.decNaNs.isra.6	      1996	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8	CALL_8
0x400850c	        0x8b6c243c	            mov ebp, dword [rsp + 0x3c] 	      1996	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_8	CALL_8
0x4008510	    0x48c704240000	                      mov qword [rsp], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008518	          0x4531db	                          xor r11d, r11d	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x400851b	          0x4c89df	                            mov rdi, r11	      2256	decNumber.c	FUNCTION_68	FUNCTION_34
0x400851e	      0xe800000000	                          call 0x4008523	      2256	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008523	        0x488b3c24	                    mov rdi, qword [rsp]	      2257	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008527	      0xe800000000	                          call 0x400852c	      2257	decNumber.c	FUNCTION_68	FUNCTION_34
0x400852c	            0x85ed	                           test ebp, ebp	      2262	decNumber.c	FUNCTION_68	FUNCTION_34	CALL_53
0x400852e	     0xf8554010000	                           jne 0x4008688	      2262	decNumber.c	FUNCTION_68	FUNCTION_34	CALL_53
0x4008534	    0x488bb424d800	            mov rsi, qword [rsp + 0xd8] 	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x400853c	    0x644833342528	                xor rsi, qword fs:[0x28]	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008545	          0x4889d8	                            mov rax, rbx	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008548	     0xf85ba080000	                           jne 0x4008e08	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x400854e	    0x4881c4e80000	                           add rsp, 0xe8	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008555	              0x5b	                                 pop rbx	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008556	              0x5d	                                 pop rbp	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008557	            0x415c	                                 pop r12	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008559	            0x415d	                                 pop r13	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x400855b	            0x415e	                                 pop r14	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x400855d	            0x415f	                                 pop r15	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x400855f	              0xc3	                                     ret	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008560	          0x4c89cf	                             mov rdi, r9	      2028	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_17
0x4008563	        0x4c890c24	                     mov qword [rsp], r9	      2028	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_17
0x4008567	      0xe8c47fffff	                      call sym.decGetInt	      2028	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_17
0x400856c	      0x3d00000080	                     cmp eax, 0x80000000	      2029	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_15
0x4008571	            0x89c5	                            mov ebp, eax	      2028	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_17
0x4008573	        0x4c8b0c24	                     mov r9, qword [rsp]	      2029	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_15
0x4008577	     0xf846b010000	                            je 0x40086e8	      2029	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_15
0x400857d	          0x4584f6	                         test r14b, r14b	      2037	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_17
0x4008580	     0xf898a020000	                           jns 0x4008810	      2037	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_17
0x4008586	            0xa801	                              test al, 1	      2037	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_17
0x4008588	    0x41ba80ffffff	                    mov r10d, 0xffffff80	      2037	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_17
0x400858e	     0xf847c020000	                            je 0x4008810	      2037	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_17
0x4008594	        0x41f6c640	                         test r14b, 0x40	      2040	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	CALL_19
0x4008598	     0xf8402010000	                            je 0x40086a0	      2040	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	CALL_19
0x400859e	            0x85ed	                           test ebp, ebp	      2043	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	IF_19
0x40085a0	        0xc6430800	                   mov byte [rbx + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40085a4	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40085ab	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40085b1	     0xf8599010000	                           jne 0x4008750	      2043	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	IF_19
0x40085b7	      0xbe01000000	                              mov esi, 1	      2115	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_30
0x40085bc	        0x6689730a	                mov word [rbx + 0xa], si	      2115	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_30
0x40085c0	      0xe96fffffff	                           jmp 0x4008534	      2116	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_30
0x40085c5	           0xf1f00	                         nop dword [rax]	      2116	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_30
0x40085c8	        0x41f6c740	                         test r15b, 0x40	      1998	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	CALL_9
0x40085cc	            0x7492	                            je 0x4008560	      1998	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	CALL_9
0x40085ce	          0x4584f6	                         test r14b, r14b	      2000	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_10
0x40085d1	     0xf88f9010000	                            js 0x40087d0	      2000	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_10
0x40085d7	      0x488d542460	                   lea rdx, [rsp + 0x60]	      2006	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	CALL_13
0x40085dc	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      2006	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	CALL_13
0x40085e1	    0x41ba01000000	                             mov r10d, 1	      2005	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1
0x40085e7	          0x4c89e1	                            mov rcx, r12	      2006	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	CALL_13
0x40085ea	          0x4c89ee	                            mov rsi, r13	      2006	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	CALL_13
0x40085ed	        0x4183e780	                    and r15d, 0xffffff80	      1999	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9
0x40085f1	      0xc644246800	                mov byte [rsp + 0x68], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40085f6	    0xc74424640000	               mov dword [rsp + 0x64], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40085fe	    0xc74424600100	               mov dword [rsp + 0x60], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4008606	    0x66448954246a	             mov word [rsp + 0x6a], r10w	      2005	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1
0x400860c	      0xe800000000	                          call 0x4008611	      2006	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	CALL_13
0x4008611	          0x4531db	                          xor r11d, r11d	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4008614	      0x807c247800	                cmp byte [rsp + 0x78], 0	      2008	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	CALL_15
0x4008619	        0xc6430800	                   mov byte [rbx + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x400861d	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4008624	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400862a	      0x6644895b0a	              mov word [rbx + 0xa], r11w	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400862f	     0xf8873050000	                            js 0x4008ba8	      2008	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	CALL_15
0x4008635	    0x66837c247a00	                cmp word [rsp + 0x7a], 0	      2011	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x400863b	     0xf852f050000	                           jne 0x4008b70	      2011	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x4008641	        0x418b1424	                    mov edx, dword [r12]	      2013	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x4008645	    0x41b901000000	                              mov r9d, 1	      2014	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x400864b	      0xb801000000	                              mov eax, 1	      6684	decNumber.c	FUNCTION_8	IF_1
0x4008650	      0x6644894b0a	               mov word [rbx + 0xa], r9w	      2014	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x4008655	          0x83ea01	                              sub edx, 1	      6684	decNumber.c	FUNCTION_8	IF_1
0x4008658	            0x89d5	                            mov ebp, edx	      6684	decNumber.c	FUNCTION_8	IF_1
0x400865a	     0xf8570060000	                           jne 0x4008cd0	      6684	decNumber.c	FUNCTION_8	IF_1
0x4008660	            0x89ea	                            mov edx, ebp	      2016	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x4008662	        0x8b6c243c	            mov ebp, dword [rsp + 0x3c] 	      2017	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x4008666	            0x8903	                    mov dword [rbx], eax	      2015	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13	CALL_16
0x4008668	            0xf7da	                                 neg edx	      2016	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x400866a	          0x4531db	                          xor r11d, r11d	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x400866d	          0x895304	                mov dword [rbx + 4], edx	      2016	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x4008670	    0x81cd20080000	                           or ebp, 0x820	      2017	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x4008676	        0x896c243c	             mov dword [rsp + 0x3c], ebp	      2017	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13
0x400867a	          0x4c89df	                            mov rdi, r11	      2256	decNumber.c	FUNCTION_68	FUNCTION_34
0x400867d	      0xe800000000	                          call 0x4008682	      2256	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008682	    0x660f1f440000	                    nop word [rax + rax]	      2256	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008688	          0x4c89e2	                            mov rdx, r12	      2262	decNumber.c	FUNCTION_68	FUNCTION_34	CALL_53
0x400868b	            0x89ee	                            mov esi, ebp	      2262	decNumber.c	FUNCTION_68	FUNCTION_34	CALL_53
0x400868d	          0x4889df	                            mov rdi, rbx	      2262	decNumber.c	FUNCTION_68	FUNCTION_34	CALL_53
0x4008690	      0xe83b81ffff	                      call sym.decStatus	      2262	decNumber.c	FUNCTION_68	FUNCTION_34	CALL_53
0x4008695	      0xe99afeffff	                           jmp 0x4008534	      2262	decNumber.c	FUNCTION_68	FUNCTION_34	CALL_53
0x400869a	    0x660f1f440000	                    nop word [rax + rax]	      2262	decNumber.c	FUNCTION_68	FUNCTION_34	CALL_53
0x40086a0	    0x8d85feffff7f	             lea eax, [rbp + 0x7ffffffe]	      2033	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_15	IF_16
0x40086a6	    0x41b801000000	                              mov r8d, 1	      2033	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_15	IF_16
0x40086ac	          0x83f801	                              cmp eax, 1	      2033	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_15	IF_16
0x40086af	           0xf97c0	                                 seta al	      2033	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_15	IF_16
0x40086b2	    0x6641837d0a00	                 cmp word [r13 + 0xa], 0	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x40086b8	     0xf8482000000	                            je 0x4008740	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x40086be	            0x84c0	                             test al, al	      2084	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27
0x40086c0	     0xf84b0000000	                            je 0x4008776	      2084	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27
0x40086c6	            0x85ed	                           test ebp, ebp	      2112	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_30
0x40086c8	     0xf8582010000	                           jne 0x4008850	      2112	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_30
0x40086ce	        0xc6430800	                   mov byte [rbx + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40086d2	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40086d9	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40086df	      0xe9d3feffff	                           jmp 0x40085b7	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40086e4	         0xf1f4000	                         nop dword [rax]	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40086e8	        0x41f6c640	                         test r14b, 0x40	      2040	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	CALL_19
0x40086ec	     0xf852e010000	                           jne 0x4008820	      2040	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	CALL_19
0x40086f2	    0x6641837d0a00	                 cmp word [r13 + 0xa], 0	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x40086f8	            0x7576	                           jne 0x4008770	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x40086fa	      0x41837d0001	                      cmp dword [r13], 1	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x40086ff	            0x756f	                           jne 0x4008770	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x4008701	            0x31c0	                            xor eax, eax	      1953	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008703	          0x4531c0	                            xor r8d, r8d	      1952	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008706	          0x4531d2	                          xor r10d, r10d	      1963	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008709	        0x41f6c670	                         test r14b, 0x70	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x400870d	            0x75af	                           jne 0x40086be	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x400870f	            0x85ed	                           test ebp, ebp	      2057	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	IF_23
0x4008711	     0xf84d9000000	                            je 0x40087f0	      2057	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	IF_23
0x4008717	          0x4489d0	                           mov eax, r10d	      2074	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	ELSE_5	IF_25
0x400871a	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4008721	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4008727	          0x83c840	                            or eax, 0x40	      2074	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	ELSE_5	IF_25
0x400872a	          0x4584ff	                         test r15b, r15b	      2074	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	ELSE_5	IF_25
0x400872d	        0x440f48d0	                         cmovs r10d, eax	      2074	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	ELSE_5	IF_25
0x4008731	            0x31ff	                            xor edi, edi	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4008733	        0x66897b0a	                mov word [rbx + 0xa], di	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4008737	        0x44885308	                mov byte [rbx + 8], r10b	      2078	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	ELSE_5
0x400873b	      0xe9f4fdffff	                           jmp 0x4008534	      2078	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	ELSE_5
0x4008740	      0x41837d0001	                      cmp dword [r13], 1	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x4008745	     0xf8573ffffff	                           jne 0x40086be	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x400874b	            0xebbc	                           jmp 0x4008709	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x400874d	           0xf1f00	                         nop dword [rax]	      2056	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_22	CALL_22
0x4008750	          0x4531c0	                            xor r8d, r8d	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4008753	      0x664489430a	               mov word [rbx + 0xa], r8w	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4008758	          0x4489d0	                           mov eax, r10d	      2049	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_21
0x400875b	          0x83c840	                            or eax, 0x40	      2049	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_21
0x400875e	          0x4584ff	                         test r15b, r15b	      2049	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_21
0x4008761	        0x440f49d0	                        cmovns r10d, eax	      2049	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_21
0x4008765	        0x44885308	                mov byte [rbx + 8], r10b	      2051	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4
0x4008769	      0xe9c6fdffff	                           jmp 0x4008534	      2051	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4
0x400876e	            0x6690	                                     nop	      2051	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4
0x4008770	          0x4531c0	                            xor r8d, r8d	      1952	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008773	          0x4531d2	                          xor r10d, r10d	      1963	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008776	          0x4584f6	                         test r14b, r14b	      2087	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_28	CALL_25
0x4008779	      0x4c894c2410	              mov qword [rsp + 0x10], r9	      2087	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_28	CALL_25
0x400877e	      0x4488442408	                 mov byte [rsp + 8], r8b	      2087	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_28	CALL_25
0x4008783	        0x44881424	                    mov byte [rsp], r10b	      2087	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_28	CALL_25
0x4008787	            0x7867	                            js 0x40087f0	      2087	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_28	CALL_25
0x4008789	      0x488d44243c	                   lea rax, [rsp + 0x3c]	      2090	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_29	CALL_26
0x400878e	          0x4c89e6	                            mov rsi, r12	      2090	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_29	CALL_26
0x4008791	          0x4c89ef	                            mov rdi, r13	      2090	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_29	CALL_26
0x4008794	          0x4889c2	                            mov rdx, rax	      2090	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_29	CALL_26
0x4008797	      0x4889442418	             mov qword [rsp + 0x18], rax	      2090	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_29	CALL_26
0x400879c	      0xe8ff7cffff	                   call sym.decCheckMath	      2090	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_29	CALL_26
0x40087a1	            0x85c0	                           test eax, eax	      2090	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_29	CALL_26
0x40087a3	      0x440fb61424	                  movzx r10d, byte [rsp]	      2090	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_29	CALL_26
0x40087a8	    0x440fb6442408	               movzx r8d, byte [rsp + 8]	      2090	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_29	CALL_26
0x40087ae	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	      2090	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_29	CALL_26
0x40087b3	     0xf84ff020000	                            je 0x4008ab8	      2090	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_29	CALL_26
0x40087b9	        0x8b6c243c	            mov ebp, dword [rsp + 0x3c] 	      2090	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	IF_29	CALL_26
0x40087bd	    0x48c704240000	                      mov qword [rsp], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x40087c5	          0x4531db	                          xor r11d, r11d	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x40087c8	      0xe94efdffff	                           jmp 0x400851b	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x40087cd	           0xf1f00	                         nop dword [rax]	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x40087d0	      0x66837e0a00	                 cmp word [rsi + 0xa], 0	      2001	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_11
0x40087d5	            0x7519	                           jne 0x40087f0	      2001	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_11
0x40087d7	          0x833e01	                      cmp dword [rsi], 1	      2001	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_11
0x40087da	            0x7514	                           jne 0x40087f0	      2001	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_11
0x40087dc	        0x4183e670	                          and r14d, 0x70	      2001	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_11
0x40087e0	     0xf84f1fdffff	                            je 0x40085d7	      2001	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_11
0x40087e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2001	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10	CALL_11
0x40087f0	      0xbd80000000	                           mov ebp, 0x80	      2002	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10
0x40087f5	          0x4c89e2	                            mov rdx, r12	      2262	decNumber.c	FUNCTION_68	FUNCTION_34	CALL_53
0x40087f8	          0x4889df	                            mov rdi, rbx	      2262	decNumber.c	FUNCTION_68	FUNCTION_34	CALL_53
0x40087fb	            0x89ee	                            mov esi, ebp	      2262	decNumber.c	FUNCTION_68	FUNCTION_34	CALL_53
0x40087fd	    0xc744243c8000	           mov dword [rsp + 0x3c], 0x80 	      2002	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	IF_10
0x4008805	      0xe8c67fffff	                      call sym.decStatus	      2262	decNumber.c	FUNCTION_68	FUNCTION_34	CALL_53
0x400880a	      0xe925fdffff	                           jmp 0x4008534	      2262	decNumber.c	FUNCTION_68	FUNCTION_34	CALL_53
0x400880f	              0x90	                                     nop	      2262	decNumber.c	FUNCTION_68	FUNCTION_34	CALL_53
0x4008810	          0x4531d2	                          xor r10d, r10d	      1963	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008813	      0xe97cfdffff	                           jmp 0x4008594	      1963	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008818	     0xf1f84000000	                   nop dword [rax + rax]	      1963	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008820	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4008822	        0xc6430800	                   mov byte [rbx + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4008826	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400882d	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4008833	        0x6689430a	                mov word [rbx + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4008837	          0x4531d2	                          xor r10d, r10d	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400883a	      0x41807d0800	                   cmp byte [r13 + 8], 0	      2046	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_20	CALL_21
0x400883f	     0xf8913ffffff	                           jns 0x4008758	      2046	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_20	CALL_21
0x4008845	            0xeba9	                           jmp 0x40087f0	      2046	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_20	CALL_21
0x4008847	    0x660f1f840000	                    nop word [rax + rax]	      2046	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_18	ELSE_4	IF_20	CALL_21
0x4008850	        0x498b0424	                    mov rax, qword [r12]	      2120	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4008854	        0x8b742408	                mov esi, dword [rsp + 8]	      2123	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4008858	      0x4889442440	             mov qword [rsp + 0x40], rax	      2120	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x400885d	      0x498b442408	                mov rax, qword [r12 + 8]	      2120	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4008862	      0x4889442448	             mov qword [rsp + 0x48], rax	      2120	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4008867	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      2120	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x400886c	    0xc744244c0300	               mov dword [rsp + 0x4c], 3	      2121	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4008874	      0x4889442450	             mov qword [rsp + 0x50], rax	      2120	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4008879	      0x418b442418	            mov eax, dword [r12 + 0x18] 	      2120	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x400887e	        0x89442458	             mov dword [rsp + 0x58], eax	      2120	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4008882	        0x418b4104	                 mov eax, dword [r9 + 4]	      2123	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4008886	          0x410301	                     add eax, dword [r9]	      2123	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4008889	        0x8d440602	                lea eax, [rsi + rax + 2]	      2123	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x400888d	      0x3dffc99a3b	                     cmp eax, 0x3b9ac9ff	      2128	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_33
0x4008892	        0x89442440	             mov dword [rsp + 0x40], eax	      2123	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6
0x4008896	     0xf8f54ffffff	                            jg 0x40087f0	      2128	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_33
0x400889c	            0x89ea	                            mov edx, ebp	      2128	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_33
0x400889e	      0xb901000000	                              mov ecx, 1	      2128	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_33
0x40088a3	          0xc1fa1f	                           sar edx, 0x1f	      2128	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_33
0x40088a6	            0x31d5	                            xor ebp, edx	      2128	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_33
0x40088a8	            0x29d5	                            sub ebp, edx	      2128	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_6	IF_33
0x40088aa	          0x83f831	                           cmp eax, 0x31	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x40088ad	     0xf8f9d020000	                            jg 0x4008b50	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x40088b3	            0x4898	                                    cdqe	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x40088b5	     0xfb680000000	                   movzx eax, byte [rax]	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x40088bc	      0x448d74000a	            lea r14d, [rax + rax + 0xa] 	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x40088c1	          0x4531db	                          xor r11d, r11d	      1948	decNumber.c	FUNCTION_68	FUNCTION_34
0x40088c4	        0x4183fe30	                          cmp r14d, 0x30	      2135	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34
0x40088c8	      0x4c8d7c2470	                   lea r15, [rsp + 0x70]	      1968	decNumber.c	FUNCTION_68	FUNCTION_34
0x40088cd	     0xf87e5020000	                            ja 0x4008bb8	      2135	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34
0x40088d3	            0x84c9	                             test cl, cl	      2144	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36
0x40088d5	     0xf8435030000	                            je 0x4008c10	      2144	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36
0x40088db	      0x4180790800	                    cmp byte [r9 + 8], 0	      2173	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	CALL_38
0x40088e0	      0x488d44243c	                   lea rax, [rsp + 0x3c]	      2173	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	CALL_38
0x40088e5	      0xba01000000	                              mov edx, 1	      2169	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8
0x40088ea	      0x41c6470800	                   mov byte [r15 + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40088ef	    0x41c747040000	                  mov dword [r15 + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40088f7	    0x41c707010000	                      mov dword [r15], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40088fe	      0x664189570a	                mov word [r15 + 0xa], dx	      2169	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8
0x4008903	    0x48c704240000	                      mov qword [rsp], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x400890b	      0x4889442418	             mov qword [rsp + 0x18], rax	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008910	     0xf88cd030000	                            js 0x4008ce3	      2173	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	CALL_38
0x4008916	    0x41be01000000	                             mov r14d, 1	      2200	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1
0x400891c	      0x48895c2420	             mov qword [rsp + 0x20], rbx	      2200	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1
0x4008921	      0x4c89642428	             mov qword [rsp + 0x28], r12	      2200	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1
0x4008926	          0x4489f3	                           mov ebx, r14d	      2200	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1
0x4008929	        0x8b44243c	            mov eax, dword [rsp + 0x3c] 	      2200	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1
0x400892d	            0x31d2	                            xor edx, edx	      2199	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8
0x400892f	      0x4c895c2408	                mov qword [rsp + 8], r11	      2200	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1
0x4008934	      0x4488542410	             mov byte [rsp + 0x10], r10b	      2200	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1
0x4008939	          0x4d89fc	                            mov r12, r15	      2200	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1
0x400893c	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	      2200	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1
0x4008941	            0xeb08	                           jmp 0x400894b	      2200	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1
0x4008943	       0xf1f440000	                   nop dword [rax + rax]	      2200	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1
0x4008948	          0x83c301	                              add ebx, 1	      2200	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1
0x400894b	            0x89c1	                            mov ecx, eax	      2202	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43
0x400894d	    0x81e100220000	                         and ecx, 0x2200	      2202	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43
0x4008953	            0x7423	                            je 0x4008978	      2202	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43
0x4008955	          0xf6c402	                              test ah, 2	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x4008958	     0xf8550030000	                           jne 0x4008cae	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x400895e	    0x6641837c240a	                 cmp word [r12 + 0xa], 0	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x4008965	            0x7511	                           jne 0x4008978	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x4008967	      0x41833c2401	                      cmp dword [r12], 1	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x400896c	     0xf84de000000	                            je 0x4008a50	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x4008972	    0x660f1f440000	                    nop word [rax + rax]	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x4008978	             0x1ed	                            add ebp, ebp	      2208	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45
0x400897a	            0x7834	                            js 0x40089b0	      2208	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45
0x400897c	          0x83fb1f	                           cmp ebx, 0x1f	      2212	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_46
0x400897f	     0xf8403020000	                            je 0x4008b88	      2212	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_46
0x4008985	            0x84d2	                             test dl, dl	      2213	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_47
0x4008987	            0x74bf	                            je 0x4008948	      2213	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_47
0x4008989	      0x4c8d7c2440	                   lea r15, [rsp + 0x40]	      2213	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_47
0x400898e	          0x4c89e2	                            mov rdx, r12	      2214	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	CALL_45
0x4008991	          0x4d89f0	                             mov r8, r14	      2214	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	CALL_45
0x4008994	          0x4c89f9	                            mov rcx, r15	      2214	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	CALL_45
0x4008997	          0x4c89e6	                            mov rsi, r12	      2214	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	CALL_45
0x400899a	          0x4c89e7	                            mov rdi, r12	      2214	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	CALL_45
0x400899d	      0xe8deb3ffff	                  call sym.decMultiplyOp	      2214	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	CALL_45
0x40089a2	        0x8b44243c	            mov eax, dword [rsp + 0x3c] 	      2214	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	CALL_45
0x40089a6	      0xba01000000	                              mov edx, 1	      2214	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	CALL_45
0x40089ab	            0xeb9b	                           jmp 0x4008948	      2214	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	CALL_45
0x40089ad	           0xf1f00	                         nop dword [rax]	      2214	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	CALL_45
0x40089b0	      0x4c8d7c2440	                   lea r15, [rsp + 0x40]	      2210	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45	CALL_44
0x40089b5	          0x4d89f0	                             mov r8, r14	      2210	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45	CALL_44
0x40089b8	          0x4c89ea	                            mov rdx, r13	      2210	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45	CALL_44
0x40089bb	          0x4c89e6	                            mov rsi, r12	      2210	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45	CALL_44
0x40089be	          0x4c89e7	                            mov rdi, r12	      2210	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45	CALL_44
0x40089c1	          0x4c89f9	                            mov rcx, r15	      2210	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45	CALL_44
0x40089c4	      0xe8b7b3ffff	                  call sym.decMultiplyOp	      2210	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_45	CALL_44
0x40089c9	          0x83fb1f	                           cmp ebx, 0x1f	      2212	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_46
0x40089cc	            0x75c0	                           jne 0x400898e	      2212	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_46
0x40089ce	        0x8b4c243c	            mov ecx, dword [rsp + 0x3c] 	      2212	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_46
0x40089d2	    0x440fb6542410	          movzx r10d, byte [rsp + 0x10] 	      2212	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_46
0x40089d8	          0x4d89e7	                            mov r15, r12	      2212	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_46
0x40089db	      0x4c8b5c2408	                mov r11, qword [rsp + 8]	      2212	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_46
0x40089e0	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      2212	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_46
0x40089e5	      0x4c8b642428	            mov r12, qword [rsp + 0x28] 	      2212	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_46
0x40089ea	    0x81e100220000	                         and ecx, 0x2200	      2212	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_46
0x40089f0	            0x85c9	                           test ecx, ecx	      2218	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x40089f2	     0xf8515040000	                           jne 0x4008e0d	      2218	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x40089f8	      0x410fb65708	               movzx edx, byte [r15 + 8]	      2218	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x40089fd	        0x498d6f0a	                    lea rbp, [r15 + 0xa]	      2218	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x4008a01	        0x418b4704	                mov eax, dword [r15 + 4]	      6840	decNumber.c	FUNCTION_11
0x4008a05	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4008a0a	      0x4c8d442438	                    lea r8, [rsp + 0x38]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4008a0f	          0x418b0f	                    mov ecx, dword [r15]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4008a12	          0x885308	                  mov byte [rbx + 8], dl	      6839	decNumber.c	FUNCTION_11
0x4008a15	          0x4c89e6	                            mov rsi, r12	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4008a18	          0x4889ea	                            mov rdx, rbp	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4008a1b	          0x4889df	                            mov rdi, rbx	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4008a1e	      0x4c895c2408	                mov qword [rsp + 8], r11	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4008a23	          0x894304	                mov dword [rbx + 4], eax	      6840	decNumber.c	FUNCTION_11
0x4008a26	          0x4d89f1	                             mov r9, r14	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4008a29	      0xe8a288ffff	             call sym.decSetCoeff.isra.3	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4008a2e	      0x488d542438	                   lea rdx, [rsp + 0x38]	      2250	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1
0x4008a33	          0x4c89f1	                            mov rcx, r14	      2250	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1
0x4008a36	          0x4c89e6	                            mov rsi, r12	      2250	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1
0x4008a39	          0x4889df	                            mov rdi, rbx	      2250	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1
0x4008a3c	      0xe81f94ffff	                    call sym.decFinalize	      2250	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1
0x4008a41	        0x8b6c243c	            mov ebp, dword [rsp + 0x3c] 	      2250	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1
0x4008a45	      0x4c8b5c2408	                mov r11, qword [rsp + 8]	      2250	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1
0x4008a4a	      0xe9ccfaffff	                           jmp 0x400851b	      2250	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1
0x4008a4f	              0x90	                                     nop	      2250	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1
0x4008a50	    0x410fb6742408	               movzx esi, byte [r12 + 8]	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x4008a56	        0x40f6c670	                          test sil, 0x70	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x4008a5a	     0xf8518ffffff	                           jne 0x4008978	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x4008a60	    0x440fb6542410	          movzx r10d, byte [rsp + 0x10] 	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x4008a66	          0x4d89e7	                            mov r15, r12	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x4008a69	      0x4c8b5c2408	                mov r11, qword [rsp + 8]	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x4008a6e	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x4008a73	      0x4c8b642428	            mov r12, qword [rsp + 0x28] 	      2203	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	FOR_1	IF_43	CALL_43
0x4008a78	          0x83e67f	                           and esi, 0x7f	      2231	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x4008a7b	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2234	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_47
0x4008a80	      0x488d542438	                   lea rdx, [rsp + 0x38]	      2234	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_47
0x4008a85	          0x4109f2	                            or r10d, esi	      2231	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x4008a88	          0x4c89ff	                            mov rdi, r15	      2234	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_47
0x4008a8b	          0x4c89e6	                            mov rsi, r12	      2234	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_47
0x4008a8e	        0x45885708	                mov byte [r15 + 8], r10b	      2231	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x4008a92	      0x4c895c2408	                mov qword [rsp + 8], r11	      2231	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x4008a97	      0xe8c493ffff	                    call sym.decFinalize	      2234	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_47
0x4008a9c	          0x4c89fe	                            mov rsi, r15	      2235	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_48
0x4008a9f	          0x4889df	                            mov rdi, rbx	      2235	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_48
0x4008aa2	      0xe800000000	                          call 0x4008aa7	      2235	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_48
0x4008aa7	        0x8b6c243c	            mov ebp, dword [rsp + 0x3c] 	      2235	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48	CALL_48
0x4008aab	      0x4c8b5c2408	                mov r11, qword [rsp + 8]	      2236	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x4008ab0	      0xe966faffff	                           jmp 0x400851b	      2236	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x4008ab5	           0xf1f00	                         nop dword [rax]	      2236	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_48
0x4008ab8	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      2091	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_27
0x4008abd	          0x4c89cf	                             mov rdi, r9	      2091	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_27
0x4008ac0	          0x4c89e6	                            mov rsi, r12	      2091	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_27
0x4008ac3	      0x4488442410	              mov byte [rsp + 0x10], r8b	      2091	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_27
0x4008ac8	      0x4488542408	                mov byte [rsp + 8], r10b	      2091	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_27
0x4008acd	        0x4c890c24	                     mov qword [rsp], r9	      2091	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_27
0x4008ad1	      0xe8ca79ffff	                   call sym.decCheckMath	      2091	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_27
0x4008ad6	            0x85c0	                           test eax, eax	      2091	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_27
0x4008ad8	        0x4c8b0c24	                     mov r9, qword [rsp]	      2091	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_27
0x4008adc	    0x440fb6542408	              movzx r10d, byte [rsp + 8]	      2091	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_27
0x4008ae2	    0x440fb6442410	           movzx r8d, byte [rsp + 0x10] 	      2091	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_27
0x4008ae8	     0xf85cbfcffff	                           jne 0x40087b9	      2091	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_27
0x4008aee	      0x488d442440	                   lea rax, [rsp + 0x40]	      2093	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_28
0x4008af3	      0xbe40000000	                           mov esi, 0x40	      2093	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_28
0x4008af8	      0x4c894c2410	              mov qword [rsp + 0x10], r9	      2093	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_28
0x4008afd	      0x4488442408	                 mov byte [rsp + 8], r8b	      2093	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_28
0x4008b02	        0x44881424	                    mov byte [rsp], r10b	      2093	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_28
0x4008b06	          0x4889c7	                            mov rdi, rax	      2093	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_28
0x4008b09	      0xe800000000	                          call 0x4008b0e	      2093	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_28
0x4008b0e	        0x418b0424	                    mov eax, dword [r12]	      2108	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_29
0x4008b12	        0x41394500	                    cmp dword [r13], eax	      2108	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_29
0x4008b16	      0x410f4d4500	                 cmovge eax, dword [r13]	      2108	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_29
0x4008b1b	    0xc74424443f42	        mov dword [rsp + 0x44], 0xf423f 	      2094	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27
0x4008b23	            0x31c9	                            xor ecx, ecx	      2094	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27
0x4008b25	    0xc7442448c1bd	     mov dword [rsp + 0x48], 0xfff0bdc1 	      2095	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27
0x4008b2d	      0xc644245800	                mov byte [rsp + 0x58], 0	      2096	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27
0x4008b32	      0x440fb61424	                  movzx r10d, byte [rsp]	      2096	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27
0x4008b37	    0x440fb6442408	               movzx r8d, byte [rsp + 8]	      2096	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27
0x4008b3d	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	      2096	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27
0x4008b42	          0x83c00a	                            add eax, 0xa	      2108	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_29
0x4008b45	        0x89442440	             mov dword [rsp + 0x40], eax	      2108	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_29
0x4008b49	      0xe95cfdffff	                           jmp 0x40088aa	      2108	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_29
0x4008b4e	            0x6690	                                     nop	      2108	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_27	CALL_29
0x4008b50	          0x8d7002	                      lea esi, [rax + 2]	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4008b53	      0xba56555555	                     mov edx, 0x55555556	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4008b58	            0x89f0	                            mov eax, esi	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4008b5a	            0xf7ea	                                imul edx	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4008b5c	            0x89f0	                            mov eax, esi	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4008b5e	          0xc1f81f	                           sar eax, 0x1f	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4008b61	            0x29c2	                            sub edx, eax	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4008b63	      0x448d74120a	            lea r14d, [rdx + rdx + 0xa] 	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4008b68	      0xe954fdffff	                           jmp 0x40088c1	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4008b6d	           0xf1f00	                         nop dword [rax]	      2133	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	CALL_31
0x4008b70	          0x4584ff	                         test r15b, r15b	      2020	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_3	IF_14
0x4008b73	     0xf8540fcffff	                           jne 0x40087b9	      2020	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_3	IF_14
0x4008b79	        0xc6430840	                mov byte [rbx + 8], 0x40	      2009	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	IF_12
0x4008b7d	      0xe937fcffff	                           jmp 0x40087b9	      2009	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	IF_12
0x4008b82	    0x660f1f440000	                    nop word [rax + rax]	      2009	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	IF_12
0x4008b88	          0x4d89e7	                            mov r15, r12	      2009	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	IF_12
0x4008b8b	      0x4c8b5c2408	                mov r11, qword [rsp + 8]	      2009	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	IF_12
0x4008b90	    0x440fb6542410	          movzx r10d, byte [rsp + 0x10] 	      2009	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	IF_12
0x4008b96	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      2009	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	IF_12
0x4008b9b	      0x4c8b642428	            mov r12, qword [rsp + 0x28] 	      2009	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	IF_12
0x4008ba0	      0xe94bfeffff	                           jmp 0x40089f0	      2009	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	IF_12
0x4008ba5	           0xf1f00	                         nop dword [rax]	      2009	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	IF_12
0x4008ba8	          0x4584ff	                         test r15b, r15b	      2009	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	IF_12
0x4008bab	     0xf8408fcffff	                            je 0x40087b9	      2009	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	IF_12
0x4008bb1	            0xebc6	                           jmp 0x4008b79	      2009	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	IF_12
0x4008bb3	       0xf1f440000	                   nop dword [rax + rax]	      2009	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	IF_11	IF_12
0x4008bb8	          0x4489f7	                           mov edi, r14d	      2136	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34
0x4008bbb	      0x4c894c2418	              mov qword [rsp + 0x18], r9	      2136	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34
0x4008bc0	        0x884c2410	               mov byte [rsp + 0x10], cl	      2136	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34
0x4008bc4	      0x4488442408	                 mov byte [rsp + 8], r8b	      2136	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34
0x4008bc9	        0x44881424	                    mov byte [rsp], r10b	      2136	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34
0x4008bcd	      0xe800000000	                          call 0x4008bd2	      2136	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34
0x4008bd2	          0x4885c0	                           test rax, rax	      2137	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34	IF_35
0x4008bd5	          0x4989c3	                            mov r11, rax	      2136	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34
0x4008bd8	          0x4989c7	                            mov r15, rax	      2136	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34
0x4008bdb	      0x440fb61424	                  movzx r10d, byte [rsp]	      2137	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34	IF_35
0x4008be0	    0x440fb6442408	               movzx r8d, byte [rsp + 8]	      2137	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34	IF_35
0x4008be6	       0xfb64c2410	           movzx ecx, byte [rsp + 0x10] 	      2137	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34	IF_35
0x4008beb	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	      2137	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34	IF_35
0x4008bf0	     0xf85ddfcffff	                           jne 0x40088d3	      2137	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_34	IF_35
0x4008bf6	        0x8b6c243c	            mov ebp, dword [rsp + 0x3c] 	      2185	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41	IF_42
0x4008bfa	          0x83cd10	                            or ebp, 0x10	      2185	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41	IF_42
0x4008bfd	        0x896c243c	             mov dword [rsp + 0x3c], ebp	      2185	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41	IF_42
0x4008c01	      0xe974faffff	                           jmp 0x400867a	      2186	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41	IF_42
0x4008c06	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2186	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41	IF_42
0x4008c10	      0x488d44243c	                   lea rax, [rsp + 0x3c]	      2148	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	CALL_32
0x4008c15	      0x488d742440	                   lea rsi, [rsp + 0x40]	      2148	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	CALL_32
0x4008c1a	          0x4c89ff	                            mov rdi, r15	      2148	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	CALL_32
0x4008c1d	      0x4c894c2408	                 mov qword [rsp + 8], r9	      2148	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	CALL_32
0x4008c22	        0x4c891c24	                    mov qword [rsp], r11	      2148	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	CALL_32
0x4008c26	          0x4889f2	                            mov rdx, rsi	      2148	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	CALL_32
0x4008c29	          0x4989f6	                            mov r14, rsi	      2148	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	CALL_32
0x4008c2c	          0x4889c1	                            mov rcx, rax	      2148	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	CALL_32
0x4008c2f	          0x4c89ee	                            mov rsi, r13	      2148	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	CALL_32
0x4008c32	      0x4488442410	              mov byte [rsp + 0x10], r8b	      2148	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	CALL_32
0x4008c37	      0x4889442418	             mov qword [rsp + 0x18], rax	      2148	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	CALL_32
0x4008c3c	      0xe8dfebffff	                        call sym.decLnOp	      2148	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	CALL_32
0x4008c41	    0x6641837f0a00	                 cmp word [r15 + 0xa], 0	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x4008c47	        0x4c8b1c24	                    mov r11, qword [rsp]	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x4008c4b	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x4008c50	            0x7512	                           jne 0x4008c64	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x4008c52	          0x418b07	                    mov eax, dword [r15]	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x4008c55	    0x440fb6442410	           movzx r8d, byte [rsp + 0x10] 	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x4008c5b	          0x83f801	                              cmp eax, 1	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x4008c5e	     0xf8423010000	                            je 0x4008d87	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x4008c64	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	      2161	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_35
0x4008c69	          0x4c89ca	                             mov rdx, r9	      2161	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_35
0x4008c6c	          0x4c89f1	                            mov rcx, r14	      2161	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_35
0x4008c6f	          0x4c89fe	                            mov rsi, r15	      2161	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_35
0x4008c72	          0x4c89ff	                            mov rdi, r15	      2161	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_35
0x4008c75	      0x4c895c2408	                mov qword [rsp + 8], r11	      2161	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_35
0x4008c7a	          0x4989e8	                             mov r8, rbp	      2161	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_35
0x4008c7d	      0xe8feb0ffff	                  call sym.decMultiplyOp	      2161	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_35
0x4008c82	          0x4889e9	                            mov rcx, rbp	      2162	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_36
0x4008c85	          0x4c89f2	                            mov rdx, r14	      2162	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_36
0x4008c88	          0x4c89fe	                            mov rsi, r15	      2162	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_36
0x4008c8b	          0x4c89ff	                            mov rdi, r15	      2162	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_36
0x4008c8e	        0x498d6f0a	                    lea rbp, [r15 + 0xa]	      2162	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_36
0x4008c92	      0xe899e2ffff	                       call sym.decExpOp	      2162	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	ELSE_7	CALL_36
0x4008c97	    0x48c704240000	                      mov qword [rsp], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008c9f	      0x410fb65708	               movzx edx, byte [r15 + 8]	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008ca4	      0x4c8b5c2408	                mov r11, qword [rsp + 8]	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008ca9	      0xe953fdffff	                           jmp 0x4008a01	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008cae	          0x4d89e7	                            mov r15, r12	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008cb1	      0x4c8b5c2408	                mov r11, qword [rsp + 8]	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008cb6	    0x440fb6542410	          movzx r10d, byte [rsp + 0x10] 	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008cbc	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008cc1	      0x4c8b642428	            mov r12, qword [rsp + 0x28] 	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008cc6	      0x410fb67708	               movzx esi, byte [r15 + 8]	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008ccb	      0xe9a8fdffff	                           jmp 0x4008a78	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008cd0	        0x488d7b0a	                    lea rdi, [rbx + 0xa]	      2015	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13	CALL_16
0x4008cd4	      0xbe01000000	                              mov esi, 1	      2015	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13	CALL_16
0x4008cd9	      0xe87280ffff	          call sym.decShiftToMost.part.0	      2015	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13	CALL_16
0x4008cde	      0xe97df9ffff	                           jmp 0x4008660	      2015	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_7	IF_9	ELSE_1	ELSE_2	IF_13	CALL_16
0x4008ce3	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      2175	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	CALL_39
0x4008ce8	          0x4c89fe	                            mov rsi, r15	      2175	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	CALL_39
0x4008ceb	      0x4488542410	             mov byte [rsp + 0x10], r10b	      2175	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	CALL_39
0x4008cf0	      0x4c895c2408	                mov qword [rsp + 8], r11	      2175	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	CALL_39
0x4008cf5	      0xe800000000	                          call 0x4008cfa	      2175	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	CALL_39
0x4008cfa	      0x488d442440	                   lea rax, [rsp + 0x40]	      2180	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_40
0x4008cff	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	      2180	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_40
0x4008d04	      0x488d742460	                   lea rsi, [rsp + 0x60]	      2180	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_40
0x4008d09	    0x41b880000000	                           mov r8d, 0x80	      2180	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_40
0x4008d0f	          0x4c89ea	                            mov rdx, r13	      2180	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_40
0x4008d12	          0x4c89ff	                            mov rdi, r15	      2180	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_40
0x4008d15	          0x4889c1	                            mov rcx, rax	      2180	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_40
0x4008d18	      0xe8f3cfffff	                    call sym.decDivideOp	      2180	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_40
0x4008d1d	        0x4183fe30	                          cmp r14d, 0x30	      2182	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41
0x4008d21	      0x4c8b5c2408	                mov r11, qword [rsp + 8]	      2182	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41
0x4008d26	    0x440fb6542410	          movzx r10d, byte [rsp + 0x10] 	      2182	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41
0x4008d2c	     0xf86b8000000	                           jbe 0x4008dea	      2182	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41
0x4008d32	          0x4489f7	                           mov edi, r14d	      2183	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41
0x4008d35	      0xe800000000	                          call 0x4008d3a	      2183	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41
0x4008d3a	          0x4885c0	                           test rax, rax	      2184	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41	IF_42
0x4008d3d	          0x4989c5	                            mov r13, rax	      2183	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41
0x4008d40	        0x48890424	                    mov qword [rsp], rax	      2183	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41
0x4008d44	      0x4c8b5c2408	                mov r11, qword [rsp + 8]	      2184	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41	IF_42
0x4008d49	    0x440fb6542410	          movzx r10d, byte [rsp + 0x10] 	      2184	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41	IF_42
0x4008d4f	     0xf84a1feffff	                            je 0x4008bf6	      2184	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	IF_41	IF_42
0x4008d55	          0x4c89fe	                            mov rsi, r15	      2190	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_41
0x4008d58	          0x4c89ef	                            mov rdi, r13	      2190	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_41
0x4008d5b	      0x4488542410	             mov byte [rsp + 0x10], r10b	      2190	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_41
0x4008d60	      0x4c895c2408	                mov qword [rsp + 8], r11	      2190	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_41
0x4008d65	      0xe800000000	                          call 0x4008d6a	      2190	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_41
0x4008d6a	      0x488d742460	                   lea rsi, [rsp + 0x60]	      2191	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_42
0x4008d6f	          0x4c89ff	                            mov rdi, r15	      2191	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_42
0x4008d72	      0xe800000000	                          call 0x4008d77	      2191	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_42
0x4008d77	    0x440fb6542410	          movzx r10d, byte [rsp + 0x10] 	      2191	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_42
0x4008d7d	      0x4c8b5c2408	                mov r11, qword [rsp + 8]	      2191	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_42
0x4008d82	      0xe98ffbffff	                           jmp 0x4008916	      2191	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39	IF_40	CALL_42
0x4008d87	      0x410fb65708	               movzx edx, byte [r15 + 8]	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x4008d8c	          0xf6c270	                           test dl, 0x70	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x4008d8f	     0xf85cffeffff	                           jne 0x4008c64	      2150	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	CALL_33
0x4008d95	      0xb901000000	                              mov ecx, 1	      2152	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37
0x4008d9a	          0x4584c0	                           test r8b, r8b	      2153	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38
0x4008d9d	      0x6641894f0a	                mov word [r15 + 0xa], cx	      2152	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37
0x4008da2	            0x7553	                           jne 0x4008df7	      2153	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38
0x4008da4	        0x458b2c24	                   mov r13d, dword [r12]	      6684	decNumber.c	FUNCTION_8	IF_1
0x4008da8	        0x498d6f0a	                    lea rbp, [r15 + 0xa]	      6684	decNumber.c	FUNCTION_8	IF_1
0x4008dac	        0x4183ed01	                             sub r13d, 1	      6684	decNumber.c	FUNCTION_8	IF_1
0x4008db0	            0x7419	                            je 0x4008dcb	      6684	decNumber.c	FUNCTION_8	IF_1
0x4008db2	          0x4489ea	                           mov edx, r13d	      6684	decNumber.c	FUNCTION_8	IF_1
0x4008db5	      0xbe01000000	                              mov esi, 1	      6684	decNumber.c	FUNCTION_8	IF_1
0x4008dba	          0x4889ef	                            mov rdi, rbp	      6684	decNumber.c	FUNCTION_8	IF_1
0x4008dbd	      0xe88e7fffff	          call sym.decShiftToMost.part.0	      6684	decNumber.c	FUNCTION_8	IF_1
0x4008dc2	      0x410fb65708	               movzx edx, byte [r15 + 8]	      6684	decNumber.c	FUNCTION_8	IF_1
0x4008dc7	        0x4c8b1c24	                    mov r11, qword [rsp]	      6684	decNumber.c	FUNCTION_8	IF_1
0x4008dcb	          0x41f7dd	                                neg r13d	      2156	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38
0x4008dce	          0x418907	                    mov dword [r15], eax	      2155	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38	CALL_34
0x4008dd1	    0x814c243c2008	            or dword [rsp + 0x3c], 0x820	      2157	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38
0x4008dd9	        0x45896f04	               mov dword [r15 + 4], r13d	      2156	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	IF_36	IF_37	IF_38
0x4008ddd	    0x48c704240000	                      mov qword [rsp], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008de5	      0xe917fcffff	                           jmp 0x4008a01	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008dea	    0x4c8dac24a000	                   lea r13, [rsp + 0xa0]	      2174	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39
0x4008df2	      0xe95effffff	                           jmp 0x4008d55	      2174	decNumber.c	FUNCTION_68	FUNCTION_34	DO_1	ELSE_8	IF_39
0x4008df7	    0x48c704240000	                      mov qword [rsp], 0	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008dff	        0x498d6f0a	                    lea rbp, [r15 + 0xa]	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008e03	      0xe9f9fbffff	                           jmp 0x4008a01	      1949	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008e08	      0xe800000000	                          call 0x4008e0d	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008e0d	      0x410fb67708	               movzx esi, byte [r15 + 8]	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
0x4008e12	      0xe961fcffff	                           jmp 0x4008a78	      2267	decNumber.c	FUNCTION_68	FUNCTION_34
decNumberMultiply	ELSE,0:DO,0:CALL,3:IF,1:functions,0:SWITCH,0:WHILE,0:FOR,0	26
0x4004520	              0x55	                                push rbp	      1906	decNumber.c	FUNCTION_68	FUNCTION_33
0x4004521	              0x53	                                push rbx	      1906	decNumber.c	FUNCTION_68	FUNCTION_33
0x4004522	          0x4889cd	                            mov rbp, rcx	      1906	decNumber.c	FUNCTION_68	FUNCTION_33
0x4004525	          0x4889fb	                            mov rbx, rdi	      1906	decNumber.c	FUNCTION_68	FUNCTION_33
0x4004528	        0x4883ec18	                           sub rsp, 0x18	      1906	decNumber.c	FUNCTION_68	FUNCTION_33
0x400452c	      0x4c8d442404	                       lea r8, [rsp + 4]	      1908	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_1
0x4004531	    0xc74424040000	                  mov dword [rsp + 4], 0	      1907	decNumber.c	FUNCTION_68	FUNCTION_33
0x4004539	    0x64488b042528	                mov rax, qword fs:[0x28]	      1906	decNumber.c	FUNCTION_68	FUNCTION_33
0x4004542	      0x4889442408	                mov qword [rsp + 8], rax	      1906	decNumber.c	FUNCTION_68	FUNCTION_33
0x4004547	            0x31c0	                            xor eax, eax	      1906	decNumber.c	FUNCTION_68	FUNCTION_33
0x4004549	      0xe832f8ffff	                  call sym.decMultiplyOp	      1908	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_1
0x400454e	        0x8b742404	                mov esi, dword [rsp + 4]	      1909	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_2
0x4004552	            0x85f6	                           test esi, esi	      1909	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_2
0x4004554	            0x740b	                            je 0x4004561	      1909	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_2
0x4004556	          0x4889ea	                            mov rdx, rbp	      1909	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_2
0x4004559	          0x4889df	                            mov rdi, rbx	      1909	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_2
0x400455c	      0xe86fc2ffff	                      call sym.decStatus	      1909	decNumber.c	FUNCTION_68	FUNCTION_33	CALL_2
0x4004561	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1914	decNumber.c	FUNCTION_68	FUNCTION_33
0x4004566	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1914	decNumber.c	FUNCTION_68	FUNCTION_33
0x400456f	          0x4889d8	                            mov rax, rbx	      1914	decNumber.c	FUNCTION_68	FUNCTION_33
0x4004572	            0x7507	                           jne 0x400457b	      1914	decNumber.c	FUNCTION_68	FUNCTION_33
0x4004574	        0x4883c418	                           add rsp, 0x18	      1914	decNumber.c	FUNCTION_68	FUNCTION_33
0x4004578	              0x5b	                                 pop rbx	      1914	decNumber.c	FUNCTION_68	FUNCTION_33
0x4004579	              0x5d	                                 pop rbp	      1914	decNumber.c	FUNCTION_68	FUNCTION_33
0x400457a	              0xc3	                                     ret	      1914	decNumber.c	FUNCTION_68	FUNCTION_33
0x400457b	      0xe800000000	                call sym.decNumberRotate	      1914	decNumber.c	FUNCTION_68	FUNCTION_33
decNumberNextMinus	ELSE,0:DO,0:CALL,5:IF,3:functions,0:SWITCH,0:WHILE,0:FOR,0	74
0x4005840	              0x55	                                push rbp	      1662	decNumber.c	FUNCTION_68	FUNCTION_28
0x4005841	              0x53	                                push rbx	      1662	decNumber.c	FUNCTION_68	FUNCTION_28
0x4005842	          0x4889fd	                            mov rbp, rdi	      1662	decNumber.c	FUNCTION_68	FUNCTION_28
0x4005845	          0x4889d3	                            mov rbx, rdx	      1662	decNumber.c	FUNCTION_68	FUNCTION_28
0x4005848	        0x4883ec58	                           sub rsp, 0x58	      1662	decNumber.c	FUNCTION_68	FUNCTION_28
0x400584c	    0x64488b042528	                mov rax, qword fs:[0x28]	      1662	decNumber.c	FUNCTION_68	FUNCTION_28
0x4005855	      0x4889442448	             mov qword [rsp + 0x48], rax	      1662	decNumber.c	FUNCTION_68	FUNCTION_28
0x400585a	            0x31c0	                            xor eax, eax	      1662	decNumber.c	FUNCTION_68	FUNCTION_28
0x400585c	          0x488b02	                    mov rax, qword [rdx]	      1664	decNumber.c	FUNCTION_68	FUNCTION_28
0x400585f	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1665	decNumber.c	FUNCTION_68	FUNCTION_28
0x4005867	      0x4889442410	             mov qword [rsp + 0x10], rax	      1664	decNumber.c	FUNCTION_68	FUNCTION_28
0x400586c	        0x488b4208	                mov rax, qword [rdx + 8]	      1664	decNumber.c	FUNCTION_68	FUNCTION_28
0x4005870	      0x4889442418	             mov qword [rsp + 0x18], rax	      1664	decNumber.c	FUNCTION_68	FUNCTION_28
0x4005875	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      1664	decNumber.c	FUNCTION_68	FUNCTION_28
0x4005879	      0x4889442420	             mov qword [rsp + 0x20], rax	      1664	decNumber.c	FUNCTION_68	FUNCTION_28
0x400587e	          0x8b4218	            mov eax, dword [rdx + 0x18] 	      1664	decNumber.c	FUNCTION_68	FUNCTION_28
0x4005881	        0x89442428	             mov dword [rsp + 0x28], eax	      1664	decNumber.c	FUNCTION_68	FUNCTION_28
0x4005885	         0xfb64608	               movzx eax, byte [rsi + 8]	      1671	decNumber.c	FUNCTION_68	FUNCTION_28	IF_2
0x4005889	          0x83e0c0	                     and eax, 0xffffffc0	      1671	decNumber.c	FUNCTION_68	FUNCTION_28	IF_2
0x400588c	            0x3c40	                            cmp al, 0x40	      1671	decNumber.c	FUNCTION_68	FUNCTION_28	IF_2
0x400588e	     0xf8484000000	                            je 0x4005918	      1671	decNumber.c	FUNCTION_68	FUNCTION_28	IF_2
0x4005894	      0x4c8d4c240c	                     lea r9, [rsp + 0xc]	      1680	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_4
0x4005899	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      1680	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_4
0x400589e	      0x488d542430	                   lea rdx, [rsp + 0x30]	      1680	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_4
0x40058a3	      0xb801000000	                              mov eax, 1	      1677	decNumber.c	FUNCTION_68	FUNCTION_28
0x40058a8	    0x41b880000000	                           mov r8d, 0x80	      1680	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_4
0x40058ae	      0xc644243800	                mov byte [rsp + 0x38], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40058b3	    0xc74424300100	               mov dword [rsp + 0x30], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40058bb	      0x668944243a	               mov word [rsp + 0x3a], ax	      1677	decNumber.c	FUNCTION_68	FUNCTION_28
0x40058c0	    0xc74424340036	     mov dword [rsp + 0x34], 0xc4653600 	      1678	decNumber.c	FUNCTION_68	FUNCTION_28
0x40058c8	    0xc744241c0600	               mov dword [rsp + 0x1c], 6	      1679	decNumber.c	FUNCTION_68	FUNCTION_28
0x40058d0	      0xe81bf3ffff	                       call sym.decAddOp	      1680	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_4
0x40058d5	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      1681	decNumber.c	FUNCTION_68	FUNCTION_28
0x40058d9	    0x81e680000040	                     and esi, 0x40000080	      1681	decNumber.c	FUNCTION_68	FUNCTION_28
0x40058df	            0x85f6	                           test esi, esi	      1682	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_5
0x40058e1	        0x8974240c	              mov dword [rsp + 0xc], esi	      1681	decNumber.c	FUNCTION_68	FUNCTION_28
0x40058e5	            0x7521	                           jne 0x4005908	      1682	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_5
0x40058e7	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      1684	decNumber.c	FUNCTION_68	FUNCTION_28
0x40058ec	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1684	decNumber.c	FUNCTION_68	FUNCTION_28
0x40058f5	          0x4889e8	                            mov rax, rbp	      1684	decNumber.c	FUNCTION_68	FUNCTION_28
0x40058f8	            0x7563	                           jne 0x400595d	      1684	decNumber.c	FUNCTION_68	FUNCTION_28
0x40058fa	        0x4883c458	                           add rsp, 0x58	      1684	decNumber.c	FUNCTION_68	FUNCTION_28
0x40058fe	              0x5b	                                 pop rbx	      1684	decNumber.c	FUNCTION_68	FUNCTION_28
0x40058ff	              0x5d	                                 pop rbp	      1684	decNumber.c	FUNCTION_68	FUNCTION_28
0x4005900	              0xc3	                                     ret	      1684	decNumber.c	FUNCTION_68	FUNCTION_28
0x4005901	     0xf1f80000000	                         nop dword [rax]	      1684	decNumber.c	FUNCTION_68	FUNCTION_28
0x4005908	          0x4889da	                            mov rdx, rbx	      1682	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_5
0x400590b	          0x4889ef	                            mov rdi, rbp	      1682	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_5
0x400590e	      0xe8bdaeffff	                      call sym.decStatus	      1682	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_5
0x4005913	            0xebd2	                           jmp 0x40058e7	      1682	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_5
0x4005915	           0xf1f00	                         nop dword [rax]	      1682	decNumber.c	FUNCTION_68	FUNCTION_28	CALL_5
0x4005918	            0x8b02	                    mov eax, dword [rdx]	      7390	decNumber.c	ELSE_1	FUNCTION_17
0x400591a	        0x488d570a	                    lea rdx, [rdi + 0xa]	      7393	decNumber.c	ELSE_1	FUNCTION_17	FOR_1
0x400591e	          0x83f803	                              cmp eax, 3	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x4005921	            0x8907	                    mov dword [rdi], eax	      7391	decNumber.c	ELSE_1	FUNCTION_17
0x4005923	            0x7e18	                           jle 0x400593d	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x4005925	           0xf1f00	                         nop dword [rax]	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x4005928	      0xb9e7030000	                          mov ecx, 0x3e7	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400592d	          0x83e803	                              sub eax, 3	      7399	decNumber.c	FUNCTION_17	FOR_1	ELSE_1
0x4005930	        0x4883c202	                              add rdx, 2	      7393	decNumber.c	ELSE_1	FUNCTION_17	FOR_1
0x4005934	        0x66894afe	                  mov word [rdx - 2], cx	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x4005938	          0x83f803	                              cmp eax, 3	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400593b	            0x7feb	                            jg 0x4005928	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400593d	            0x4898	                                    cdqe	      7396	decNumber.c	FUNCTION_17	FOR_1
0x400593f	    0x8b0485000000	                  mov eax, dword [rax*4]	      7396	decNumber.c	FUNCTION_17	FOR_1
0x4005946	          0x83e801	                              sub eax, 1	      7396	decNumber.c	FUNCTION_17	FOR_1
0x4005949	          0x668902	                      mov word [rdx], ax	      7396	decNumber.c	FUNCTION_17	FOR_1
0x400594c	        0xc6450800	                   mov byte [rbp + 8], 0	      7401	decNumber.c	FUNCTION_17	ELSE_1
0x4005950	          0x8b4304	                mov eax, dword [rbx + 4]	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x4005953	            0x2b03	                    sub eax, dword [rbx]	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x4005955	          0x83c001	                              add eax, 1	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x4005958	          0x894504	                mov dword [rbp + 4], eax	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400595b	            0xeb8a	                           jmp 0x40058e7	      1674	decNumber.c	FUNCTION_68	FUNCTION_28	IF_2
0x400595d	      0xe800000000	                          call 0x4005962	      1684	decNumber.c	FUNCTION_68	FUNCTION_28
decNumberCompare	ELSE,0:DO,0:CALL,2:IF,1:functions,0:SWITCH,0:WHILE,0:FOR,0	27
0x4003a70	              0x55	                                push rbp	       865	decNumber.c	FUNCTION_68	FUNCTION_11
0x4003a71	              0x53	                                push rbx	       865	decNumber.c	FUNCTION_68	FUNCTION_11
0x4003a72	    0x41b801000000	                              mov r8d, 1	       867	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_1
0x4003a78	          0x4889fb	                            mov rbx, rdi	       865	decNumber.c	FUNCTION_68	FUNCTION_11
0x4003a7b	          0x4889cd	                            mov rbp, rcx	       865	decNumber.c	FUNCTION_68	FUNCTION_11
0x4003a7e	        0x4883ec18	                           sub rsp, 0x18	       865	decNumber.c	FUNCTION_68	FUNCTION_11
0x4003a82	      0x4c8d4c2404	                       lea r9, [rsp + 4]	       867	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_1
0x4003a87	    0xc74424040000	                  mov dword [rsp + 4], 0	       866	decNumber.c	FUNCTION_68	FUNCTION_11
0x4003a8f	    0x64488b042528	                mov rax, qword fs:[0x28]	       865	decNumber.c	FUNCTION_68	FUNCTION_11
0x4003a98	      0x4889442408	                mov qword [rsp + 8], rax	       865	decNumber.c	FUNCTION_68	FUNCTION_11
0x4003a9d	            0x31c0	                            xor eax, eax	       865	decNumber.c	FUNCTION_68	FUNCTION_11
0x4003a9f	      0xe86cfbffff	                   call sym.decCompareOp	       867	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_1
0x4003aa4	        0x8b742404	                mov esi, dword [rsp + 4]	       868	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_2
0x4003aa8	            0x85f6	                           test esi, esi	       868	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_2
0x4003aaa	            0x740b	                            je 0x4003ab7	       868	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_2
0x4003aac	          0x4889ea	                            mov rdx, rbp	       868	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_2
0x4003aaf	          0x4889df	                            mov rdi, rbx	       868	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_2
0x4003ab2	      0xe819cdffff	                      call sym.decStatus	       868	decNumber.c	FUNCTION_68	FUNCTION_11	CALL_2
0x4003ab7	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       870	decNumber.c	FUNCTION_68	FUNCTION_11
0x4003abc	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       870	decNumber.c	FUNCTION_68	FUNCTION_11
0x4003ac5	          0x4889d8	                            mov rax, rbx	       870	decNumber.c	FUNCTION_68	FUNCTION_11
0x4003ac8	            0x7507	                           jne 0x4003ad1	       870	decNumber.c	FUNCTION_68	FUNCTION_11
0x4003aca	        0x4883c418	                           add rsp, 0x18	       870	decNumber.c	FUNCTION_68	FUNCTION_11
0x4003ace	              0x5b	                                 pop rbx	       870	decNumber.c	FUNCTION_68	FUNCTION_11
0x4003acf	              0x5d	                                 pop rbp	       870	decNumber.c	FUNCTION_68	FUNCTION_11
0x4003ad0	              0xc3	                                     ret	       870	decNumber.c	FUNCTION_68	FUNCTION_11
0x4003ad1	      0xe800000000	                          call 0x4003ad6	       870	decNumber.c	FUNCTION_68	FUNCTION_11
decNumberSameQuantum	ELSE,2:DO,0:CALL,6:IF,5:functions,0:SWITCH,0:WHILE,0:FOR,0	31
0x4002f90	          0x4889f8	                            mov rax, rdi	      2577	decNumber.c	FUNCTION_68	FUNCTION_42
0x4002f93	         0xfb67e08	               movzx edi, byte [rsi + 8]	      2584	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2
0x4002f97	         0xfb64a08	               movzx ecx, byte [rdx + 8]	      2584	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2
0x4002f9b	          0x4189f8	                            mov r8d, edi	      2584	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2
0x4002f9e	          0x4109c8	                             or r8d, ecx	      2584	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2
0x4002fa1	        0x4183e070	                           and r8d, 0x70	      2584	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2
0x4002fa5	            0x7419	                            je 0x4002fc0	      2584	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2
0x4002fa7	        0x40f6c730	                          test dil, 0x30	      2585	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_3
0x4002fab	            0x753b	                           jne 0x4002fe8	      2585	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_3
0x4002fad	            0x31d2	                            xor edx, edx	      2578	decNumber.c	FUNCTION_68	FUNCTION_42
0x4002faf	          0x83e740	                           and edi, 0x40	      2586	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_5
0x4002fb2	            0x7417	                            je 0x4002fcb	      2586	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_5
0x4002fb4	          0xc0e906	                               shr cl, 6	      2578	decNumber.c	FUNCTION_68	FUNCTION_42
0x4002fb7	            0x89ca	                            mov edx, ecx	      2578	decNumber.c	FUNCTION_68	FUNCTION_42
0x4002fb9	          0x83e201	                              and edx, 1	      2578	decNumber.c	FUNCTION_68	FUNCTION_42
0x4002fbc	            0xeb0d	                           jmp 0x4002fcb	      2578	decNumber.c	FUNCTION_68	FUNCTION_42
0x4002fbe	            0x6690	                                     nop	      2578	decNumber.c	FUNCTION_68	FUNCTION_42
0x4002fc0	          0x8b4a04	                mov ecx, dword [rdx + 4]	      2578	decNumber.c	FUNCTION_68	FUNCTION_42
0x4002fc3	            0x31d2	                            xor edx, edx	      2578	decNumber.c	FUNCTION_68	FUNCTION_42
0x4002fc5	          0x394e04	                cmp dword [rsi + 4], ecx	      2578	decNumber.c	FUNCTION_68	FUNCTION_42
0x4002fc8	           0xf94c2	                                 sete dl	      2578	decNumber.c	FUNCTION_68	FUNCTION_42
0x4002fcb	        0xc6400800	                   mov byte [rax + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4002fcf	    0xc74004000000	                  mov dword [rax + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4002fd6	    0xc70001000000	                      mov dword [rax], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4002fdc	        0x6689500a	                mov word [rax + 0xa], dx	      2592	decNumber.c	FUNCTION_68	FUNCTION_42
0x4002fe0	              0xc3	                                     ret	      2594	decNumber.c	FUNCTION_68	FUNCTION_42
0x4002fe1	     0xf1f80000000	                         nop dword [rax]	      2594	decNumber.c	FUNCTION_68	FUNCTION_42
0x4002fe8	          0xf6c130	                           test cl, 0x30	      2585	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_3
0x4002feb	      0xba01000000	                              mov edx, 1	      2585	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_3
0x4002ff0	            0x74bb	                            je 0x4002fad	      2585	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_3
0x4002ff2	            0xebd7	                           jmp 0x4002fcb	      2585	decNumber.c	FUNCTION_68	FUNCTION_42	IF_2	CALL_3
decNumberPlus	ELSE,0:DO,0:CALL,5:IF,2:functions,0:SWITCH,0:WHILE,0:FOR,0	36
0x4005a90	              0x55	                                push rbp	      1876	decNumber.c	FUNCTION_68	FUNCTION_32
0x4005a91	              0x53	                                push rbx	      1876	decNumber.c	FUNCTION_68	FUNCTION_32
0x4005a92	          0x4889d1	                            mov rcx, rdx	      1885	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_3
0x4005a95	          0x4889d5	                            mov rbp, rdx	      1876	decNumber.c	FUNCTION_68	FUNCTION_32
0x4005a98	          0x4889f2	                            mov rdx, rsi	      1885	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_3
0x4005a9b	          0x4531c0	                            xor r8d, r8d	      1885	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_3
0x4005a9e	        0x4883ec38	                           sub rsp, 0x38	      1876	decNumber.c	FUNCTION_68	FUNCTION_32
0x4005aa2	          0x4889fb	                            mov rbx, rdi	      1876	decNumber.c	FUNCTION_68	FUNCTION_32
0x4005aa5	    0x64488b042528	                mov rax, qword fs:[0x28]	      1876	decNumber.c	FUNCTION_68	FUNCTION_32
0x4005aae	      0x4889442428	             mov qword [rsp + 0x28], rax	      1876	decNumber.c	FUNCTION_68	FUNCTION_32
0x4005ab3	            0x31c0	                            xor eax, eax	      1876	decNumber.c	FUNCTION_68	FUNCTION_32
0x4005ab5	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005ab7	      0x4c8d4c240c	                     lea r9, [rsp + 0xc]	      1885	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_3
0x4005abc	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1878	decNumber.c	FUNCTION_68	FUNCTION_32
0x4005ac4	      0x668944241a	               mov word [rsp + 0x1a], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005ac9	          0x8b4604	                mov eax, dword [rsi + 4]	      1884	decNumber.c	FUNCTION_68	FUNCTION_32
0x4005acc	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1885	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_3
0x4005ad1	      0xc644241800	                mov byte [rsp + 0x18], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005ad6	    0xc74424100100	               mov dword [rsp + 0x10], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005ade	        0x89442414	             mov dword [rsp + 0x14], eax	      1884	decNumber.c	FUNCTION_68	FUNCTION_32
0x4005ae2	      0xe809f1ffff	                       call sym.decAddOp	      1885	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_3
0x4005ae7	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      1886	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_4
0x4005aeb	            0x85f6	                           test esi, esi	      1886	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_4
0x4005aed	            0x740b	                            je 0x4005afa	      1886	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_4
0x4005aef	          0x4889ea	                            mov rdx, rbp	      1886	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_4
0x4005af2	          0x4889df	                            mov rdi, rbx	      1886	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_4
0x4005af5	      0xe8d6acffff	                      call sym.decStatus	      1886	decNumber.c	FUNCTION_68	FUNCTION_32	CALL_4
0x4005afa	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      1891	decNumber.c	FUNCTION_68	FUNCTION_32
0x4005aff	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1891	decNumber.c	FUNCTION_68	FUNCTION_32
0x4005b08	          0x4889d8	                            mov rax, rbx	      1891	decNumber.c	FUNCTION_68	FUNCTION_32
0x4005b0b	            0x7507	                           jne 0x4005b14	      1891	decNumber.c	FUNCTION_68	FUNCTION_32
0x4005b0d	        0x4883c438	                           add rsp, 0x38	      1891	decNumber.c	FUNCTION_68	FUNCTION_32
0x4005b11	              0x5b	                                 pop rbx	      1891	decNumber.c	FUNCTION_68	FUNCTION_32
0x4005b12	              0x5d	                                 pop rbp	      1891	decNumber.c	FUNCTION_68	FUNCTION_32
0x4005b13	              0xc3	                                     ret	      1891	decNumber.c	FUNCTION_68	FUNCTION_32
0x4005b14	      0xe800000000	                          call 0x4005b19	      1891	decNumber.c	FUNCTION_68	FUNCTION_32
decNumberToInt32	ELSE,2:DO,0:CALL,3:IF,5:functions,0:SWITCH,0:WHILE,0:FOR,1	63
0x40020b0	              0x53	                                push rbx	       380	decNumber.c	FUNCTION_68	FUNCTION_3
0x40020b1	      0x440fb64708	               movzx r8d, byte [rdi + 8]	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x40020b6	        0x41f6c070	                          test r8b, 0x70	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x40020ba	            0x7509	                           jne 0x40020c5	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x40020bc	          0x448b0f	                    mov r9d, dword [rdi]	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x40020bf	        0x4183f90a	                            cmp r9d, 0xa	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x40020c3	            0x7e1b	                           jle 0x40020e0	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x40020c5	          0x4889f7	                            mov rdi, rsi	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x40020c8	      0xbe80000000	                           mov esi, 0x80	       412	decNumber.c	FUNCTION_68	FUNCTION_3	CALL_3
0x40020cd	      0xe800000000	                          call 0x40020d2	       412	decNumber.c	FUNCTION_68	FUNCTION_3	CALL_3
0x40020d2	            0x31c0	                            xor eax, eax	       413	decNumber.c	FUNCTION_68	FUNCTION_3
0x40020d4	              0x5b	                                 pop rbx	       414	decNumber.c	FUNCTION_68	FUNCTION_3
0x40020d5	              0xc3	                                     ret	       414	decNumber.c	FUNCTION_68	FUNCTION_3
0x40020d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       414	decNumber.c	FUNCTION_68	FUNCTION_3
0x40020e0	          0x8b4704	                mov eax, dword [rdi + 4]	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x40020e3	            0x85c0	                           test eax, eax	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x40020e5	            0x75de	                           jne 0x40020c5	       386	decNumber.c	FUNCTION_68	FUNCTION_3	IF_2
0x40020e7	         0xfb74f0a	            movzx ecx, word [rdi + 0xa] 	       392	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40020eb	      0xbacdcccccc	                     mov edx, 0xcccccccd	       394	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40020f0	            0x89c8	                            mov eax, ecx	       394	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40020f2	            0x89cb	                            mov ebx, ecx	       395	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40020f4	            0xf7e2	                                 mul edx	       394	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40020f6	          0xc1ea03	                              shr edx, 3	       394	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40020f9	          0x8d0492	                  lea eax, [rdx + rdx*4]	       395	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40020fc	             0x1c0	                            add eax, eax	       395	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x40020fe	            0x29c3	                            sub ebx, eax	       395	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x4002100	        0x4183f903	                              cmp r9d, 3	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x4002104	            0x7e5a	                           jle 0x4002160	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x4002106	        0x488d4f0c	                    lea rcx, [rdi + 0xc]	       397	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x400210a	    0x41bb00000000	                             mov r11d, 0	       397	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x4002110	    0x41ba03000000	                             mov r10d, 3	       397	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1
0x4002116	           0xfb739	                   movzx edi, word [rcx]	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x4002119	        0x4183c203	                             add r10d, 3	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x400211d	        0x4883c102	                              add rcx, 2	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x4002121	      0x410faf7b08	               imul edi, dword [r11 + 8]	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x4002126	        0x4983c30c	                            add r11, 0xc	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x400212a	             0x1fa	                            add edx, edi	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x400212c	          0x4539d1	                           cmp r9d, r10d	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x400212f	            0x7fe5	                            jg 0x4002116	       399	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	FOR_1
0x4002131	    0x81facccccc0c	                      cmp edx, 0xccccccc	       401	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3
0x4002137	            0x7627	                           jbe 0x4002160	       401	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3
0x4002139	          0x4584c0	                           test r8b, r8b	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x400213c	            0x7987	                           jns 0x40020c5	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x400213e	    0x81facccccc0c	                      cmp edx, 0xccccccc	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x4002144	     0xf857bffffff	                           jne 0x40020c5	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x400214a	          0x83fb08	                              cmp ebx, 8	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x400214d	      0xb800000080	                     mov eax, 0x80000000	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x4002152	     0xf856dffffff	                           jne 0x40020c5	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x4002158	      0xe977ffffff	                           jmp 0x40020d4	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x400215d	           0xf1f00	                         nop dword [rax]	       403	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3	IF_4
0x4002160	    0x81facccccc0c	                      cmp edx, 0xccccccc	       401	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3
0x4002166	            0x7505	                           jne 0x400216d	       401	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3
0x4002168	          0x83fb07	                              cmp ebx, 7	       401	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3
0x400216b	            0x77cc	                            ja 0x4002139	       401	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	IF_3
0x400216d	    0x8d04d5000000	                        lea eax, [rdx*8]	       407	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	CALL_2
0x4002174	          0x8d0450	                  lea eax, [rax + rdx*2]	       407	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	CALL_2
0x4002177	          0x8d0c18	                    lea ecx, [rax + rbx]	       407	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	CALL_2
0x400217a	              0x5b	                                 pop rbx	       414	decNumber.c	FUNCTION_68	FUNCTION_3
0x400217b	            0x89c8	                            mov eax, ecx	       408	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	IF_5
0x400217d	            0xf7d8	                                 neg eax	       408	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	IF_5
0x400217f	          0x4584c0	                           test r8b, r8b	       408	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	IF_5
0x4002182	           0xf49c1	                         cmovns eax, ecx	       408	decNumber.c	FUNCTION_68	FUNCTION_3	ELSE_1	ELSE_2	IF_5
0x4002185	              0xc3	                                     ret	       414	decNumber.c	FUNCTION_68	FUNCTION_3
decNumberAnd	ELSE,2:DO,0:CALL,12:IF,8:functions,0:SWITCH,0:WHILE,0:FOR,2	172
0x40028f0	            0x4157	                                push r15	       797	decNumber.c	FUNCTION_68	FUNCTION_10
0x40028f2	            0x4156	                                push r14	       797	decNumber.c	FUNCTION_68	FUNCTION_10
0x40028f4	            0x4155	                                push r13	       797	decNumber.c	FUNCTION_68	FUNCTION_10
0x40028f6	            0x4154	                                push r12	       797	decNumber.c	FUNCTION_68	FUNCTION_10
0x40028f8	              0x55	                                push rbp	       797	decNumber.c	FUNCTION_68	FUNCTION_10
0x40028f9	              0x53	                                push rbx	       797	decNumber.c	FUNCTION_68	FUNCTION_10
0x40028fa	          0x4889fb	                            mov rbx, rdi	       797	decNumber.c	FUNCTION_68	FUNCTION_10
0x40028fd	        0x4883ec18	                           sub rsp, 0x18	       797	decNumber.c	FUNCTION_68	FUNCTION_10
0x4002901	          0x8b7e04	                mov edi, dword [rsi + 4]	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x4002904	            0x85ff	                           test edi, edi	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x4002906	     0xf8584010000	                           jne 0x4002a90	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x400290c	         0xfb64608	               movzx eax, byte [rsi + 8]	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x4002910	            0xa870	                           test al, 0x70	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x4002912	     0xf8578010000	                           jne 0x4002a90	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x4002918	            0x84c0	                             test al, al	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x400291a	     0xf8870010000	                            js 0x4002a90	       806	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_3
0x4002920	        0x448b4204	                mov r8d, dword [rdx + 4]	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x4002924	          0x4989d1	                             mov r9, rdx	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x4002927	          0x4585c0	                           test r8d, r8d	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x400292a	     0xf8560010000	                           jne 0x4002a90	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x4002930	         0xfb64208	               movzx eax, byte [rdx + 8]	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x4002934	            0xa870	                           test al, 0x70	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x4002936	     0xf8554010000	                           jne 0x4002a90	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x400293c	            0x84c0	                             test al, al	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x400293e	     0xf884c010000	                            js 0x4002a90	       807	decNumber.c	FUNCTION_68	FUNCTION_10	IF_2	CALL_5
0x4002944	          0x486306	                 movsxd rax, dword [rsi]	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4002947	        0x4c8d5e0a	                    lea r11, [rsi + 0xa]	       813	decNumber.c	FUNCTION_68	FUNCTION_10
0x400294b	        0x488d6a0a	                    lea rbp, [rdx + 0xa]	       814	decNumber.c	FUNCTION_68	FUNCTION_10
0x400294f	        0x488d7b0a	                    lea rdi, [rbx + 0xa]	       815	decNumber.c	FUNCTION_68	FUNCTION_10
0x4002953	          0x83f831	                           cmp eax, 0x31	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4002956	     0xf8fe4010000	                            jg 0x4002b40	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x400295c	     0xfb680000000	                   movzx eax, byte [rax]	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4002963	      0x4c8d6400fe	                lea r12, [rax + rax - 2]	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4002968	          0x496301	                  movsxd rax, dword [r9]	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x400296b	          0x4d01dc	                            add r12, r11	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x400296e	          0x83f831	                           cmp eax, 0x31	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4002971	     0xf8fa9010000	                            jg 0x4002b20	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4002977	     0xfb680000000	                   movzx eax, byte [rax]	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x400297e	      0x4c8d6c00fe	                lea r13, [rax + rax - 2]	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4002983	            0x8b31	                    mov esi, dword [rcx]	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4002985	          0x4901ed	                            add r13, rbp	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4002988	          0x83fe31	                           cmp esi, 0x31	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x400298b	     0xf8f5f010000	                            jg 0x4002af0	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4002991	          0x4863c6	                         movsxd rax, esi	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4002994	     0xfb690000000	                   movzx edx, byte [rax]	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x400299b	      0x4c8d7c57fe	              lea r15, [rdi + rdx*2 - 2]	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x40029a0	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x40029a4	            0x29c6	                            sub esi, eax	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x40029a6	          0x4c39ff	                            cmp rdi, r15	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x40029a9	            0x89f0	                            mov eax, esi	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x40029ab	     0xf87c0000000	                            ja 0x4002a71	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x40029b1	          0x83e801	                              sub eax, 1	       841	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x40029b4	          0x4889fe	                            mov rsi, rdi	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x40029b7	        0x8944240c	              mov dword [rsp + 0xc], eax	       841	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x40029bb	       0xf1f440000	                   nop dword [rax + rax]	       841	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x40029c0	          0x4d39dc	                            cmp r12, r11	       822	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_3
0x40029c3	     0xf8207010000	                            jb 0x4002ad0	       822	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_3
0x40029c9	            0x31c0	                            xor eax, eax	       824	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_4
0x40029cb	          0x4939ed	                            cmp r13, rbp	       824	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_4
0x40029ce	        0x450fb70b	                   movzx r9d, word [r11]	       823	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_1
0x40029d2	            0x7204	                            jb 0x40029d8	       824	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_4
0x40029d4	         0xfb74500	                   movzx eax, word [rbp]	       825	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2
0x40029d8	            0x31d2	                            xor edx, edx	       826	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2
0x40029da	          0x4531d2	                          xor r10d, r10d	       826	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2
0x40029dd	          0x668916	                      mov word [rsi], dx	       826	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2
0x40029e0	            0x89c2	                            mov edx, eax	       827	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5
0x40029e2	        0x664409ca	                              or dx, r9w	       827	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5
0x40029e6	            0x746b	                            je 0x4002a53	       827	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5
0x40029e8	            0x89c2	                            mov edx, eax	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x40029ea	          0x4421ca	                            and edx, r9d	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x40029ed	          0x83e201	                              and edx, 1	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x40029f0	            0x740b	                            je 0x40029fd	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x40029f2	    0x428b14950000	                  mov edx, dword [r10*4]	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x40029fa	          0x660116	                      add word [rsi], dx	       832	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x40029fd	        0x410fb7d1	                          movzx edx, r9w	       833	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4002a01	    0x69d2cdcc0000	                   imul edx, edx, 0xcccd	       833	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4002a07	          0xc1ea13	                           shr edx, 0x13	       833	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4002a0a	          0x4189d0	                            mov r8d, edx	       833	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4002a0d	        0x438d1480	                    lea edx, [r8 + r8*4]	       833	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4002a11	             0x1d2	                            add edx, edx	       833	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4002a13	          0x4129d1	                            sub r9d, edx	       833	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4002a16	          0x4489ca	                            mov edx, r9d	       833	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4002a19	          0x4589c1	                            mov r9d, r8d	       834	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4002a1c	        0x440fb7c0	                           movzx r8d, ax	       834	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4002a20	    0x4569c0cdcc00	                   imul r8d, r8d, 0xcccd	       834	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4002a27	        0x41c1e813	                           shr r8d, 0x13	       834	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4002a2b	        0x478d3480	                   lea r14d, [r8 + r8*4]	       834	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4002a2f	          0x4501f6	                          add r14d, r14d	       834	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4002a32	          0x4429f0	                           sub eax, r14d	       834	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4002a35	             0x9c2	                             or edx, eax	       834	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4002a37	          0x4489c0	                            mov eax, r8d	       836	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4002a3a	        0x6683fa01	                               cmp dx, 1	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4002a3e	            0x7750	                            ja 0x4002a90	       837	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4002a40	          0x4939f7	                            cmp r15, rsi	       841	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4002a43	     0xf8417010000	                            je 0x4002b60	       841	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4002a49	        0x4983c201	                              add r10, 1	       841	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4002a4d	        0x4983fa03	                              cmp r10, 3	       831	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4002a51	            0x7595	                           jne 0x40029e8	       831	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2
0x4002a53	        0x4883c602	                              add rsi, 2	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x4002a57	        0x4983c302	                              add r11, 2	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x4002a5b	        0x4883c502	                              add rbp, 2	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x4002a5f	          0x4c39fe	                            cmp rsi, r15	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x4002a62	     0xf8658ffffff	                           jbe 0x40029c0	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x4002a68	          0x4829fe	                            sub rsi, rdi	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x4002a6b	          0x48d1ee	                              shr rsi, 1	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x4002a6e	          0x4989f0	                             mov r8, rsi	       820	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1
0x4002a71	          0x4489c6	                            mov esi, r8d	       846	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_12
0x4002a74	      0xe867dcffff	                   call sym.decGetDigits	       846	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_12
0x4002a79	    0xc74304000000	                  mov dword [rbx + 4], 0	       847	decNumber.c	FUNCTION_68	FUNCTION_10
0x4002a80	            0x8903	                    mov dword [rbx], eax	       846	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_12
0x4002a82	        0xc6430800	                   mov byte [rbx + 8], 0	       848	decNumber.c	FUNCTION_68	FUNCTION_10
0x4002a86	            0xeb2c	                           jmp 0x4002ab4	       849	decNumber.c	FUNCTION_68	FUNCTION_10
0x4002a88	     0xf1f84000000	                   nop dword [rax + rax]	       849	decNumber.c	FUNCTION_68	FUNCTION_10
0x4002a90	            0x31f6	                            xor esi, esi	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4002a92	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4002a99	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4002a9f	        0x6689730a	                mov word [rbx + 0xa], si	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4002aa3	        0xc6430820	                mov byte [rbx + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x4002aa7	      0xbe80000000	                           mov esi, 0x80	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4002aac	          0x4889cf	                            mov rdi, rcx	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4002aaf	      0xe800000000	                          call 0x4002ab4	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4002ab4	        0x4883c418	                           add rsp, 0x18	       850	decNumber.c	FUNCTION_68	FUNCTION_10
0x4002ab8	          0x4889d8	                            mov rax, rbx	       850	decNumber.c	FUNCTION_68	FUNCTION_10
0x4002abb	              0x5b	                                 pop rbx	       850	decNumber.c	FUNCTION_68	FUNCTION_10
0x4002abc	              0x5d	                                 pop rbp	       850	decNumber.c	FUNCTION_68	FUNCTION_10
0x4002abd	            0x415c	                                 pop r12	       850	decNumber.c	FUNCTION_68	FUNCTION_10
0x4002abf	            0x415d	                                 pop r13	       850	decNumber.c	FUNCTION_68	FUNCTION_10
0x4002ac1	            0x415e	                                 pop r14	       850	decNumber.c	FUNCTION_68	FUNCTION_10
0x4002ac3	            0x415f	                                 pop r15	       850	decNumber.c	FUNCTION_68	FUNCTION_10
0x4002ac5	              0xc3	                                     ret	       850	decNumber.c	FUNCTION_68	FUNCTION_10
0x4002ac6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       850	decNumber.c	FUNCTION_68	FUNCTION_10
0x4002ad0	          0x4531c9	                            xor r9d, r9d	       822	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_3
0x4002ad3	          0x4939ed	                            cmp r13, rbp	       824	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_4
0x4002ad6	     0xf83f8feffff	                           jae 0x40029d4	       824	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	IF_4
0x4002adc	            0x31c0	                            xor eax, eax	       826	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2
0x4002ade	          0x668906	                      mov word [rsi], ax	       826	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2
0x4002ae1	      0xe96dffffff	                           jmp 0x4002a53	       826	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2
0x4002ae6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       826	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2
0x4002af0	        0x448d4e02	                      lea r9d, [rsi + 2]	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4002af4	      0xba56555555	                     mov edx, 0x55555556	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4002af9	          0x4489c8	                            mov eax, r9d	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4002afc	        0x41c1f91f	                           sar r9d, 0x1f	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4002b00	            0xf7ea	                                imul edx	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4002b02	          0x4429ca	                            sub edx, r9d	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4002b05	          0x4863c2	                         movsxd rax, edx	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4002b08	      0x4c8d7c47fe	              lea r15, [rdi + rax*2 - 2]	       818	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_9
0x4002b0d	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4002b11	      0xe98efeffff	                           jmp 0x40029a4	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4002b16	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       819	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_10
0x4002b20	          0x8d7002	                      lea esi, [rax + 2]	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4002b23	      0xba56555555	                     mov edx, 0x55555556	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4002b28	            0x89f0	                            mov eax, esi	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4002b2a	            0xf7ea	                                imul edx	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4002b2c	            0x89f0	                            mov eax, esi	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4002b2e	          0xc1f81f	                           sar eax, 0x1f	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4002b31	            0x29c2	                            sub edx, eax	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4002b33	          0x4863d2	                         movsxd rdx, edx	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4002b36	      0x4c8d6c12fe	                lea r13, [rdx + rdx - 2]	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4002b3b	      0xe943feffff	                           jmp 0x4002983	       817	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_8
0x4002b40	          0x8d7002	                      lea esi, [rax + 2]	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4002b43	      0xba56555555	                     mov edx, 0x55555556	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4002b48	            0x89f0	                            mov eax, esi	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4002b4a	            0xf7ea	                                imul edx	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4002b4c	            0x89f0	                            mov eax, esi	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4002b4e	          0xc1f81f	                           sar eax, 0x1f	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4002b51	            0x29c2	                            sub edx, eax	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4002b53	          0x4863d2	                         movsxd rdx, edx	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4002b56	      0x4c8d6412fe	                lea r12, [rdx + rdx - 2]	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4002b5b	      0xe908feffff	                           jmp 0x4002968	       816	decNumber.c	FUNCTION_68	FUNCTION_10	CALL_7
0x4002b60	      0x443954240c	            cmp dword [rsp + 0xc], r10d 	       841	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4002b65	     0xf85defeffff	                           jne 0x4002a49	       841	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4002b6b	      0xe9e3feffff	                           jmp 0x4002a53	       841	decNumber.c	FUNCTION_68	FUNCTION_10	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
decNumberRemainder	ELSE,0:DO,0:CALL,3:IF,1:functions,0:SWITCH,0:WHILE,0:FOR,0	27
0x4006e50	              0x55	                                push rbp	      2397	decNumber.c	FUNCTION_68	FUNCTION_39
0x4006e51	              0x53	                                push rbx	      2397	decNumber.c	FUNCTION_68	FUNCTION_39
0x4006e52	    0x41b840000000	                           mov r8d, 0x40	      2399	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_1
0x4006e58	          0x4889fb	                            mov rbx, rdi	      2397	decNumber.c	FUNCTION_68	FUNCTION_39
0x4006e5b	          0x4889cd	                            mov rbp, rcx	      2397	decNumber.c	FUNCTION_68	FUNCTION_39
0x4006e5e	        0x4883ec18	                           sub rsp, 0x18	      2397	decNumber.c	FUNCTION_68	FUNCTION_39
0x4006e62	      0x4c8d4c2404	                       lea r9, [rsp + 4]	      2399	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_1
0x4006e67	    0xc74424040000	                  mov dword [rsp + 4], 0	      2398	decNumber.c	FUNCTION_68	FUNCTION_39
0x4006e6f	    0x64488b042528	                mov rax, qword fs:[0x28]	      2397	decNumber.c	FUNCTION_68	FUNCTION_39
0x4006e78	      0x4889442408	                mov qword [rsp + 8], rax	      2397	decNumber.c	FUNCTION_68	FUNCTION_39
0x4006e7d	            0x31c0	                            xor eax, eax	      2397	decNumber.c	FUNCTION_68	FUNCTION_39
0x4006e7f	      0xe88ceeffff	                    call sym.decDivideOp	      2399	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_1
0x4006e84	        0x8b742404	                mov esi, dword [rsp + 4]	      2400	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_2
0x4006e88	            0x85f6	                           test esi, esi	      2400	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_2
0x4006e8a	            0x740b	                            je 0x4006e97	      2400	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_2
0x4006e8c	          0x4889ea	                            mov rdx, rbp	      2400	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_2
0x4006e8f	          0x4889df	                            mov rdi, rbx	      2400	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_2
0x4006e92	      0xe83999ffff	                      call sym.decStatus	      2400	decNumber.c	FUNCTION_68	FUNCTION_39	CALL_2
0x4006e97	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2405	decNumber.c	FUNCTION_68	FUNCTION_39
0x4006e9c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2405	decNumber.c	FUNCTION_68	FUNCTION_39
0x4006ea5	          0x4889d8	                            mov rax, rbx	      2405	decNumber.c	FUNCTION_68	FUNCTION_39
0x4006ea8	            0x7507	                           jne 0x4006eb1	      2405	decNumber.c	FUNCTION_68	FUNCTION_39
0x4006eaa	        0x4883c418	                           add rsp, 0x18	      2405	decNumber.c	FUNCTION_68	FUNCTION_39
0x4006eae	              0x5b	                                 pop rbx	      2405	decNumber.c	FUNCTION_68	FUNCTION_39
0x4006eaf	              0x5d	                                 pop rbp	      2405	decNumber.c	FUNCTION_68	FUNCTION_39
0x4006eb0	              0xc3	                                     ret	      2405	decNumber.c	FUNCTION_68	FUNCTION_39
0x4006eb1	      0xe800000000	                          call 0x4006eb6	      2405	decNumber.c	FUNCTION_68	FUNCTION_39
decFinalize	ELSE,0:DO,0:CALL,9:IF,9:functions,0:SWITCH,0:WHILE,0:FOR,0	112
0x4001e60	            0x4155	                                push r13	      7269	decNumber.c	FUNCTION_15
0x4001e62	            0x4154	                                push r12	      7269	decNumber.c	FUNCTION_15
0x4001e64	          0x4989d5	                            mov r13, rdx	      7269	decNumber.c	FUNCTION_15
0x4001e67	              0x55	                                push rbp	      7269	decNumber.c	FUNCTION_15
0x4001e68	              0x53	                                push rbx	      7269	decNumber.c	FUNCTION_15
0x4001e69	          0x4889f5	                            mov rbp, rsi	      7269	decNumber.c	FUNCTION_15
0x4001e6c	          0x4889fb	                            mov rbx, rdi	      7269	decNumber.c	FUNCTION_15
0x4001e6f	          0x4989cc	                            mov r12, rcx	      7269	decNumber.c	FUNCTION_15
0x4001e72	        0x4883ec28	                           sub rsp, 0x28	      7269	decNumber.c	FUNCTION_15
0x4001e76	          0x8b5608	                mov edx, dword [rsi + 8]	      7271	decNumber.c	FUNCTION_15
0x4001e79	    0x64488b042528	                mov rax, qword fs:[0x28]	      7269	decNumber.c	FUNCTION_15
0x4001e82	      0x4889442418	             mov qword [rsp + 0x18], rax	      7269	decNumber.c	FUNCTION_15
0x4001e87	            0x31c0	                            xor eax, eax	      7269	decNumber.c	FUNCTION_15
0x4001e89	            0x89d0	                            mov eax, edx	      7271	decNumber.c	FUNCTION_15
0x4001e8b	            0x2b07	                    sub eax, dword [rdi]	      7271	decNumber.c	FUNCTION_15
0x4001e8d	          0x83c001	                              add eax, 1	      7271	decNumber.c	FUNCTION_15
0x4001e90	          0x3b4704	                cmp eax, dword [rdi + 4]	      7279	decNumber.c	FUNCTION_15	IF_1
0x4001e93	            0x7c3b	                            jl 0x4001ed0	      7279	decNumber.c	FUNCTION_15	IF_1
0x4001e95	     0xf8e95000000	                           jle 0x4001f30	      7283	decNumber.c	FUNCTION_15	IF_1	IF_2
0x4001e9b	          0x4c89e1	                            mov rcx, r12	      7299	decNumber.c	FUNCTION_15	IF_1	IF_4	CALL_5
0x4001e9e	          0x4c89ea	                            mov rdx, r13	      7299	decNumber.c	FUNCTION_15	IF_1	IF_4	CALL_5
0x4001ea1	          0x4889ee	                            mov rsi, rbp	      7299	decNumber.c	FUNCTION_15	IF_1	IF_4	CALL_5
0x4001ea4	          0x4889df	                            mov rdi, rbx	      7299	decNumber.c	FUNCTION_15	IF_1	IF_4	CALL_5
0x4001ea7	      0xe844feffff	                call sym.decSetSubnormal	      7299	decNumber.c	FUNCTION_15	IF_1	IF_4	CALL_5
0x4001eac	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      7329	decNumber.c	FUNCTION_15
0x4001eb1	    0x644833042528	                xor rax, qword fs:[0x28]	      7329	decNumber.c	FUNCTION_15
0x4001eba	     0xf852f010000	                           jne 0x4001fef	      7329	decNumber.c	FUNCTION_15
0x4001ec0	        0x4883c428	                           add rsp, 0x28	      7329	decNumber.c	FUNCTION_15
0x4001ec4	              0x5b	                                 pop rbx	      7329	decNumber.c	FUNCTION_15
0x4001ec5	              0x5d	                                 pop rbp	      7329	decNumber.c	FUNCTION_15
0x4001ec6	            0x415c	                                 pop r12	      7329	decNumber.c	FUNCTION_15
0x4001ec8	            0x415d	                                 pop r13	      7329	decNumber.c	FUNCTION_15
0x4001eca	              0xc3	                                     ret	      7329	decNumber.c	FUNCTION_15
0x4001ecb	       0xf1f440000	                   nop dword [rax + rax]	      7329	decNumber.c	FUNCTION_15
0x4001ed0	        0x418b5500	                    mov edx, dword [r13]	      7329	decNumber.c	FUNCTION_15
0x4001ed4	            0x85d2	                           test edx, edx	      7305	decNumber.c	FUNCTION_15	CALL_6
0x4001ed6	     0xf85d4000000	                           jne 0x4001fb0	      7305	decNumber.c	FUNCTION_15	CALL_6
0x4001edc	          0x8b5504	                mov edx, dword [rbp + 4]	      7308	decNumber.c	FUNCTION_15	IF_6
0x4001edf	          0x8b7b04	                mov edi, dword [rbx + 4]	      7308	decNumber.c	FUNCTION_15	IF_6
0x4001ee2	            0x89d1	                            mov ecx, edx	      7308	decNumber.c	FUNCTION_15	IF_6
0x4001ee4	          0x2b4d00	                    sub ecx, dword [rbp]	      7308	decNumber.c	FUNCTION_15	IF_6
0x4001ee7	          0x83c101	                              add ecx, 1	      7308	decNumber.c	FUNCTION_15	IF_6
0x4001eea	            0x39cf	                            cmp edi, ecx	      7308	decNumber.c	FUNCTION_15	IF_6
0x4001eec	            0x7ebe	                           jle 0x4001eac	      7308	decNumber.c	FUNCTION_15	IF_6
0x4001eee	            0x8b03	                    mov eax, dword [rbx]	      7312	decNumber.c	FUNCTION_15	IF_7
0x4001ef0	            0x29c2	                            sub edx, eax	      7312	decNumber.c	FUNCTION_15	IF_7
0x4001ef2	          0x83c201	                              add edx, 1	      7312	decNumber.c	FUNCTION_15	IF_7
0x4001ef5	            0x39d7	                            cmp edi, edx	      7312	decNumber.c	FUNCTION_15	IF_7
0x4001ef7	     0xf8fcb000000	                            jg 0x4001fc8	      7312	decNumber.c	FUNCTION_15	IF_7
0x4001efd	        0x807d1800	                cmp byte [rbp + 0x18], 0	      7317	decNumber.c	FUNCTION_15	IF_8
0x4001f01	            0x74a9	                            je 0x4001eac	      7317	decNumber.c	FUNCTION_15	IF_8
0x4001f03	            0x89fd	                            mov ebp, edi	      7320	decNumber.c	FUNCTION_15
0x4001f05	            0x29cd	                            sub ebp, ecx	      7320	decNumber.c	FUNCTION_15
0x4001f07	      0x66837b0a00	                 cmp word [rbx + 0xa], 0	      7323	decNumber.c	FUNCTION_15	IF_9	CALL_8
0x4001f0c	            0x7509	                           jne 0x4001f17	      7323	decNumber.c	FUNCTION_15	IF_9	CALL_8
0x4001f0e	          0x83f801	                              cmp eax, 1	      7323	decNumber.c	FUNCTION_15	IF_9	CALL_8
0x4001f11	     0xf84c9000000	                            je 0x4001fe0	      7323	decNumber.c	FUNCTION_15	IF_9	CALL_8
0x4001f17	            0x85ed	                           test ebp, ebp	      6684	decNumber.c	FUNCTION_8	IF_1
0x4001f19	            0x757d	                           jne 0x4001f98	      6684	decNumber.c	FUNCTION_8	IF_1
0x4001f1b	            0x8903	                    mov dword [rbx], eax	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x4001f1d	            0x29ef	                            sub edi, ebp	      7326	decNumber.c	FUNCTION_15
0x4001f1f	          0x897b04	                mov dword [rbx + 4], edi	      7326	decNumber.c	FUNCTION_15
0x4001f22	    0x41810c240004	                   or dword [r12], 0x400	      7327	decNumber.c	FUNCTION_15
0x4001f2a	      0xe97dffffff	                           jmp 0x4001eac	      7328	decNumber.c	FUNCTION_15
0x4001f2f	              0x90	                                     nop	      7328	decNumber.c	FUNCTION_15
0x4001f30	      0xb801000000	                              mov eax, 1	      7290	decNumber.c	FUNCTION_15	IF_1
0x4001f35	        0x89542404	                mov dword [rsp + 4], edx	      7291	decNumber.c	FUNCTION_15	IF_1
0x4001f39	          0x4889e6	                            mov rsi, rsp	      7292	decNumber.c	FUNCTION_15	IF_1	CALL_3
0x4001f3c	      0xba01000000	                              mov edx, 1	      7292	decNumber.c	FUNCTION_15	IF_1	CALL_3
0x4001f41	      0xc644240800	                   mov byte [rsp + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4001f46	    0xc70424010000	                      mov dword [rsp], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4001f4d	      0x668944240a	                mov word [rsp + 0xa], ax	      7290	decNumber.c	FUNCTION_15	IF_1
0x4001f52	      0xe849f8ffff	                     call sym.decCompare	      7292	decNumber.c	FUNCTION_15	IF_1	CALL_3
0x4001f57	      0x3d00000080	                     cmp eax, 0x80000000	      7293	decNumber.c	FUNCTION_15	IF_1	IF_3
0x4001f5c	            0x742a	                            je 0x4001f88	      7293	decNumber.c	FUNCTION_15	IF_1	IF_3
0x4001f5e	        0x418b5500	                    mov edx, dword [r13]	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x4001f62	            0x85d2	                           test edx, edx	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x4001f64	     0xf896affffff	                           jns 0x4001ed4	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x4001f6a	            0x85c0	                           test eax, eax	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x4001f6c	     0xf8562ffffff	                           jne 0x4001ed4	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x4001f72	          0x4c89e1	                            mov rcx, r12	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x4001f75	          0x4889ee	                            mov rsi, rbp	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x4001f78	          0x4889df	                            mov rdi, rbx	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x4001f7b	      0xe840faffff	           call sym.decApplyRound.part.9	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x4001f80	      0xe916ffffff	                           jmp 0x4001e9b	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x4001f85	           0xf1f00	                         nop dword [rax]	      7297	decNumber.c	FUNCTION_15	IF_1	IF_4
0x4001f88	      0x41830c2410	                    or dword [r12], 0x10	      7294	decNumber.c	FUNCTION_15	IF_1	IF_3
0x4001f8d	      0xe91affffff	                           jmp 0x4001eac	      7295	decNumber.c	FUNCTION_15	IF_1	IF_3
0x4001f92	    0x660f1f440000	                    nop word [rax + rax]	      7295	decNumber.c	FUNCTION_15	IF_1	IF_3
0x4001f98	        0x488d7b0a	                    lea rdi, [rbx + 0xa]	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x4001f9c	            0x89ea	                            mov edx, ebp	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x4001f9e	            0x89c6	                            mov esi, eax	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x4001fa0	      0xe8abedffff	          call sym.decShiftToMost.part.0	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x4001fa5	          0x8b7b04	                mov edi, dword [rbx + 4]	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x4001fa8	      0xe96effffff	                           jmp 0x4001f1b	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x4001fad	           0xf1f00	                         nop dword [rax]	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x4001fb0	          0x4c89e1	                            mov rcx, r12	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x4001fb3	          0x4889ee	                            mov rsi, rbp	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x4001fb6	          0x4889df	                            mov rdi, rbx	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x4001fb9	      0xe802faffff	           call sym.decApplyRound.part.9	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x4001fbe	      0xe919ffffff	                           jmp 0x4001edc	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x4001fc3	       0xf1f440000	                   nop dword [rax + rax]	      7324	decNumber.c	FUNCTION_15	IF_9	CALL_9
0x4001fc8	          0x4c89e2	                            mov rdx, r12	      7313	decNumber.c	FUNCTION_15	IF_7	CALL_7
0x4001fcb	          0x4889ee	                            mov rsi, rbp	      7313	decNumber.c	FUNCTION_15	IF_7	CALL_7
0x4001fce	          0x4889df	                            mov rdi, rbx	      7313	decNumber.c	FUNCTION_15	IF_7	CALL_7
0x4001fd1	      0xe8cae3ffff	                 call sym.decSetOverflow	      7313	decNumber.c	FUNCTION_15	IF_7	CALL_7
0x4001fd6	      0xe9d1feffff	                           jmp 0x4001eac	      7314	decNumber.c	FUNCTION_15	IF_7
0x4001fdb	       0xf1f440000	                   nop dword [rax + rax]	      7314	decNumber.c	FUNCTION_15	IF_7
0x4001fe0	        0xf6430870	               test byte [rbx + 8], 0x70	      7323	decNumber.c	FUNCTION_15	IF_9	CALL_8
0x4001fe4	     0xf8433ffffff	                            je 0x4001f1d	      7323	decNumber.c	FUNCTION_15	IF_9	CALL_8
0x4001fea	      0xe928ffffff	                           jmp 0x4001f17	      7323	decNumber.c	FUNCTION_15	IF_9	CALL_8
0x4001fef	      0xe800000000	                          call 0x4001ff4	      7329	decNumber.c	FUNCTION_15
decNumberClass	ELSE,0:DO,0:CALL,9:IF,9:functions,0:SWITCH,0:WHILE,0:FOR,0	35
0x4009e60	      0x440fb64708	               movzx r8d, byte [rdi + 8]	      3294	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_1
0x4009e65	        0x41f6c070	                          test r8b, 0x70	      3294	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_1
0x4009e69	            0x7425	                            je 0x4009e90	      3294	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_1
0x4009e6b	        0x41f6c020	                          test r8b, 0x20	      3295	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_2
0x4009e6f	      0xb801000000	                              mov eax, 1	      3295	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_2
0x4009e74	            0x753c	                           jne 0x4009eb2	      3295	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_2
0x4009e76	            0x31c0	                            xor eax, eax	      3296	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_3
0x4009e78	        0x41f6c010	                          test r8b, 0x10	      3296	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_3
0x4009e7c	            0x7534	                           jne 0x4009eb2	      3296	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1	CALL_3
0x4009e7e	        0x410fbec0	                          movsx eax, r8b	      3299	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1
0x4009e82	          0xc1f81f	                           sar eax, 0x1f	      3299	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1
0x4009e85	          0x83e0f9	                     and eax, 0xfffffff9	      3299	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1
0x4009e88	          0x83c009	                              add eax, 9	      3299	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1
0x4009e8b	              0xc3	                                     ret	      3299	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1
0x4009e8c	         0xf1f4000	                         nop dword [rax]	      3299	decNumber.c	FUNCTION_68	FUNCTION_50	IF_1
0x4009e90	      0xe800000000	                          call 0x4009e95	      3302	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5	CALL_5
0x4009e95	            0x85c0	                           test eax, eax	      3302	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5	CALL_5
0x4009e97	        0x410fbec0	                          movsx eax, r8b	      3304	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5
0x4009e9b	            0x751b	                           jne 0x4009eb8	      3302	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5	CALL_5
0x4009e9d	          0xc1f81f	                           sar eax, 0x1f	      3309	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7
0x4009ea0	      0x66837f0a00	                 cmp word [rdi + 0xa], 0	      3307	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7	CALL_7
0x4009ea5	            0x7505	                           jne 0x4009eac	      3307	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7	CALL_7
0x4009ea7	          0x833f01	                      cmp dword [rdi], 1	      3307	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7	CALL_7
0x4009eaa	            0x741c	                            je 0x4009ec8	      3307	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7	CALL_7
0x4009eac	          0x83e0fd	                     and eax, 0xfffffffd	      3312	decNumber.c	FUNCTION_68	FUNCTION_50
0x4009eaf	          0x83c007	                              add eax, 7	      3312	decNumber.c	FUNCTION_68	FUNCTION_50
0x4009eb2	            0xf3c3	                                     ret	      3313	decNumber.c	FUNCTION_68	FUNCTION_50
0x4009eb4	         0xf1f4000	                         nop dword [rax]	      3313	decNumber.c	FUNCTION_68	FUNCTION_50
0x4009eb8	          0xc1f81f	                           sar eax, 0x1f	      3304	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5
0x4009ebb	          0x83e0fb	                     and eax, 0xfffffffb	      3304	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5
0x4009ebe	          0x83c008	                              add eax, 8	      3304	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5
0x4009ec1	              0xc3	                                     ret	      3304	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5
0x4009ec2	    0x660f1f440000	                    nop word [rax + rax]	      3304	decNumber.c	FUNCTION_68	FUNCTION_50	IF_5
0x4009ec8	          0x83c006	                              add eax, 6	      3309	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7
0x4009ecb	              0xc3	                                     ret	      3309	decNumber.c	FUNCTION_68	FUNCTION_50	IF_7
decNumberRescale	ELSE,0:DO,0:CALL,2:IF,1:functions,0:SWITCH,0:WHILE,0:FOR,0	27
0x4009a10	              0x55	                                push rbp	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x4009a11	              0x53	                                push rbx	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x4009a12	          0x4531c0	                            xor r8d, r8d	      2379	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_1
0x4009a15	          0x4889fb	                            mov rbx, rdi	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x4009a18	          0x4889cd	                            mov rbp, rcx	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x4009a1b	        0x4883ec18	                           sub rsp, 0x18	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x4009a1f	      0x4c8d4c2404	                       lea r9, [rsp + 4]	      2379	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_1
0x4009a24	    0xc74424040000	                  mov dword [rsp + 4], 0	      2378	decNumber.c	FUNCTION_68	FUNCTION_38
0x4009a2c	    0x64488b042528	                mov rax, qword fs:[0x28]	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x4009a35	      0x4889442408	                mov qword [rsp + 8], rax	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x4009a3a	            0x31c0	                            xor eax, eax	      2377	decNumber.c	FUNCTION_68	FUNCTION_38
0x4009a3c	      0xe80ffdffff	     call sym.decQuantizeOp.constprop.10	      2379	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_1
0x4009a41	        0x8b742404	                mov esi, dword [rsp + 4]	      2380	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_2
0x4009a45	            0x85f6	                           test esi, esi	      2380	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_2
0x4009a47	            0x740b	                            je 0x4009a54	      2380	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_2
0x4009a49	          0x4889ea	                            mov rdx, rbp	      2380	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_2
0x4009a4c	          0x4889df	                            mov rdi, rbx	      2380	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_2
0x4009a4f	      0xe87c6dffff	                      call sym.decStatus	      2380	decNumber.c	FUNCTION_68	FUNCTION_38	CALL_2
0x4009a54	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
0x4009a59	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
0x4009a62	          0x4889d8	                            mov rax, rbx	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
0x4009a65	            0x7507	                           jne 0x4009a6e	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
0x4009a67	        0x4883c418	                           add rsp, 0x18	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
0x4009a6b	              0x5b	                                 pop rbx	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
0x4009a6c	              0x5d	                                 pop rbp	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
0x4009a6d	              0xc3	                                     ret	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
0x4009a6e	      0xe800000000	                          call 0x4009a73	      2382	decNumber.c	FUNCTION_68	FUNCTION_38
decNumberToString	ELSE,0:DO,0:CALL,1:IF,0:functions,0:SWITCH,0:WHILE,0:FOR,0	7
0x4002280	              0x53	                                push rbx	       459	decNumber.c	FUNCTION_68	FUNCTION_5
0x4002281	            0x31d2	                            xor edx, edx	       460	decNumber.c	FUNCTION_68	FUNCTION_5	CALL_1
0x4002283	          0x4889f3	                            mov rbx, rsi	       459	decNumber.c	FUNCTION_68	FUNCTION_5
0x4002286	      0xe885e5ffff	                    call sym.decToString	       460	decNumber.c	FUNCTION_68	FUNCTION_5	CALL_1
0x400228b	          0x4889d8	                            mov rax, rbx	       462	decNumber.c	FUNCTION_68	FUNCTION_5
0x400228e	              0x5b	                                 pop rbx	       462	decNumber.c	FUNCTION_68	FUNCTION_5
0x400228f	              0xc3	                                     ret	       462	decNumber.c	FUNCTION_68	FUNCTION_5
decToString	ELSE,4:DO,0:CALL,15:IF,24:functions,0:SWITCH,0:WHILE,0:FOR,8	404
0x4000810	            0x4154	                                push r12	      3615	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000812	              0x55	                                push rbp	      3615	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000813	          0x4189d0	                            mov r8d, edx	      3615	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000816	              0x53	                                push rbx	      3615	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000817	          0x486307	                 movsxd rax, dword [rdi]	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x400081a	          0x8b5f04	                mov ebx, dword [rdi + 4]	      3616	decNumber.c	FUNCTION_68	FUNCTION_63
0x400081d	          0x83f831	                           cmp eax, 0x31	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4000820	     0xf8fba000000	                            jg 0x40008e0	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4000826	     0xfb680000000	                   movzx eax, byte [rax]	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x400082d	      0x4c8d5400fe	                lea r10, [rax + rax - 2]	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4000832	         0xfb64708	               movzx eax, byte [rdi + 8]	      3630	decNumber.c	FUNCTION_68	FUNCTION_63	IF_2	CALL_4
0x4000836	            0x84c0	                             test al, al	      3630	decNumber.c	FUNCTION_68	FUNCTION_63	IF_2	CALL_4
0x4000838	     0xf88c9000000	                            js 0x4000907	      3630	decNumber.c	FUNCTION_68	FUNCTION_63	IF_2	CALL_4
0x400083e	            0xa870	                           test al, 0x70	      3634	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3
0x4000840	     0xf85d4000000	                           jne 0x400091a	      3634	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3
0x4000846	          0x448b27	                   mov r12d, dword [rdi]	      3634	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3
0x4000849	        0x4183fc31	                          cmp r12d, 0x31	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x400084d	     0xf8e9d010000	                           jle 0x40009f0	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4000853	      0x418d4c2402	                      lea ecx, [r12 + 2]	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4000858	      0xba56555555	                     mov edx, 0x55555556	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x400085d	            0x89c8	                            mov eax, ecx	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x400085f	          0xc1f91f	                           sar ecx, 0x1f	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4000862	            0xf7ea	                                imul edx	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4000864	            0x29ca	                            sub edx, ecx	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4000866	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x400086a	        0x4c8d5f0a	                    lea r11, [rdi + 0xa]	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x400086e	          0x4589e1	                           mov r9d, r12d	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4000871	          0x4129c1	                            sub r9d, eax	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4000874	          0x4d01da	                            add r10, r11	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x4000877	        0x4183e901	                              sub r9d, 1	      3654	decNumber.c	FUNCTION_68	FUNCTION_63
0x400087b	            0x85db	                           test ebx, ebx	      3656	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7
0x400087d	     0xf84ef000000	                            je 0x4000972	      3656	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7
0x4000883	            0x85db	                           test ebx, ebx	      3668	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8
0x4000885	        0x428d2c23	                    lea ebp, [rbx + r12]	      3666	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000889	     0xf8f10020000	                            jg 0x4000a9f	      3668	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8
0x400088f	          0x83fdfb	             cmp ebp, 0xfffffffffffffffb	      3668	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8
0x4000892	     0xf8c07020000	                            jl 0x4000a9f	      3668	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8
0x4000898	            0x31c9	                            xor ecx, ecx	      3667	decNumber.c	FUNCTION_68	FUNCTION_63
0x400089a	            0x85ed	                           test ebp, ebp	      3698	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14
0x400089c	        0x410fb702	                   movzx eax, word [r10]	      3697	decNumber.c	FUNCTION_68	FUNCTION_63
0x40008a0	     0xf8f46020000	                            jg 0x4000aec	      3698	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14
0x40008a6	          0xc60630	                    mov byte [rsi], 0x30	      3724	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4
0x40008a9	        0xc646012e	                mov byte [rsi + 1], 0x2e	      3725	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4
0x40008ad	        0x4883c602	                              add rsi, 2	      3725	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4
0x40008b1	            0x85ed	                           test ebp, ebp	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40008b3	     0xf84a7010000	                            je 0x4000a60	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40008b9	            0x89ea	                            mov edx, ebp	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40008bb	            0xf7d2	                                 not edx	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40008bd	      0x488d7c1601	                lea rdi, [rsi + rdx + 1]	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40008c2	          0x4889f2	                            mov rdx, rsi	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40008c5	           0xf1f00	                         nop dword [rax]	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40008c8	          0xc60230	                    mov byte [rdx], 0x30	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40008cb	        0x4883c201	                              add rdx, 1	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40008cf	          0x4839fa	                            cmp rdx, rdi	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40008d2	            0x75f4	                           jne 0x40008c8	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40008d4	            0xf7d5	                                 not ebp	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40008d6	      0x488d742e01	                lea rsi, [rsi + rbp + 1]	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40008db	      0xe980010000	                           jmp 0x4000a60	      3726	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_6
0x40008e0	          0x8d4802	                      lea ecx, [rax + 2]	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x40008e3	      0xba56555555	                     mov edx, 0x55555556	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x40008e8	            0x89c8	                            mov eax, ecx	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x40008ea	            0xf7ea	                                imul edx	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x40008ec	            0x89c8	                            mov eax, ecx	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x40008ee	          0xc1f81f	                           sar eax, 0x1f	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x40008f1	            0x29c2	                            sub edx, eax	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x40008f3	          0x4863c2	                         movsxd rax, edx	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x40008f6	      0x4c8d5400fe	                lea r10, [rax + rax - 2]	      3621	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_1
0x40008fb	         0xfb64708	               movzx eax, byte [rdi + 8]	      3630	decNumber.c	FUNCTION_68	FUNCTION_63	IF_2	CALL_4
0x40008ff	            0x84c0	                             test al, al	      3630	decNumber.c	FUNCTION_68	FUNCTION_63	IF_2	CALL_4
0x4000901	     0xf8937ffffff	                           jns 0x400083e	      3630	decNumber.c	FUNCTION_68	FUNCTION_63	IF_2	CALL_4
0x4000907	          0xc6062d	                    mov byte [rsi], 0x2d	      3631	decNumber.c	FUNCTION_68	FUNCTION_63	IF_2
0x400090a	         0xfb64708	               movzx eax, byte [rdi + 8]	      3631	decNumber.c	FUNCTION_68	FUNCTION_63	IF_2
0x400090e	        0x4883c601	                              add rsi, 1	      3632	decNumber.c	FUNCTION_68	FUNCTION_63	IF_2
0x4000912	            0xa870	                           test al, 0x70	      3634	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3
0x4000914	     0xf842cffffff	                            je 0x4000846	      3634	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3
0x400091a	            0xa840	                           test al, 0x40	      3635	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_4	CALL_5
0x400091c	     0xf8562010000	                           jne 0x4000a84	      3635	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_4	CALL_5
0x4000922	            0xa810	                           test al, 0x10	      3640	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_5
0x4000924	            0x7407	                            je 0x400092d	      3640	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_5
0x4000926	          0xc60673	                    mov byte [rsi], 0x73	      3641	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_5
0x4000929	        0x4883c601	                              add rsi, 1	      3642	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_5
0x400092d	    0xc7064e614e00	               mov dword [rsi], 0x4e614e	       110	string3.h	FUNCTION_39	CALL_3
0x4000933	        0x4883c603	                              add rsi, 3	      3645	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3
0x4000937	            0x85db	                           test ebx, ebx	      3648	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_6
0x4000939	            0x7518	                           jne 0x4000953	      3648	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_6
0x400093b	      0x66837f0a00	                 cmp word [rdi + 0xa], 0	      3648	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_6
0x4000940	          0x448b27	                   mov r12d, dword [rdi]	      3648	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_6
0x4000943	     0xf8500ffffff	                           jne 0x4000849	      3648	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_6
0x4000949	        0x4183fc01	                             cmp r12d, 1	      3648	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_6
0x400094d	     0xf85f6feffff	                           jne 0x4000849	      3648	decNumber.c	FUNCTION_68	FUNCTION_63	IF_3	IF_6
0x4000953	              0x5b	                                 pop rbx	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000954	              0x5d	                                 pop rbp	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000955	            0x415c	                                 pop r12	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000957	              0xc3	                                     ret	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000958	     0xf1f84000000	                   nop dword [rax + rax]	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000960	          0x4d63c9	                          movsxd r9, r9d	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000963	      0x4a8d740e01	                 lea rsi, [rsi + r9 + 1]	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000968	        0x4983ea02	                              sub r10, 2	      3657	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1
0x400096c	    0x41b902000000	                              mov r9d, 2	      3660	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1
0x4000972	          0x4d39d3	                            cmp r11, r10	      3657	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1
0x4000975	     0xf878d000000	                            ja 0x4000a08	      3657	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1
0x400097b	          0x4585c9	                           test r9d, r9d	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x400097e	        0x410fb712	                   movzx edx, word [r10]	      3658	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1
0x4000982	            0x78e4	                            js 0x4000968	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000984	          0x4889f1	                            mov rcx, rsi	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000987	          0x4489cf	                            mov edi, r9d	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x400098a	    0x660f1f440000	                    nop word [rax + rax]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000990	          0x4863c7	                         movsxd rax, edi	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000993	          0xc60130	                    mov byte [rcx], 0x30	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x4000996	    0x448b04850000	                  mov r8d, dword [rax*4]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x400099e	        0x438d0400	                      lea eax, [r8 + r8]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40009a2	            0x39c2	                            cmp edx, eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40009a4	            0x7625	                           jbe 0x40009cb	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40009a6	    0x428d04c50000	                         lea eax, [r8*8]	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40009ae	            0x39c2	                            cmp edx, eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40009b0	            0x7205	                            jb 0x40009b7	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40009b2	            0x29c2	                            sub edx, eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40009b4	          0xc60138	                    mov byte [rcx], 0x38	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40009b7	          0x4189c0	                            mov r8d, eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40009ba	          0x41d1e8	                              shr r8d, 1	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40009bd	          0x4439c2	                            cmp edx, r8d	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40009c0	            0x7206	                            jb 0x40009c8	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40009c2	          0x800104	                       add byte [rcx], 4	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40009c5	          0x4429c2	                            sub edx, r8d	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40009c8	          0xc1e802	                              shr eax, 2	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40009cb	            0x39c2	                            cmp edx, eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40009cd	            0x7205	                            jb 0x40009d4	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40009cf	          0x800102	                       add byte [rcx], 2	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40009d2	            0x29c2	                            sub edx, eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40009d4	            0xd1e8	                              shr eax, 1	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40009d6	            0x39c2	                            cmp edx, eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40009d8	            0x7205	                            jb 0x40009df	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40009da	          0x800101	                       add byte [rcx], 1	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40009dd	            0x29c2	                            sub edx, eax	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40009df	          0x83ef01	                              sub edi, 1	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40009e2	        0x4883c101	                              add rcx, 1	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40009e6	          0x83ffff	             cmp edi, 0xffffffffffffffff	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40009e9	            0x75a5	                           jne 0x4000990	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40009eb	      0xe970ffffff	                           jmp 0x4000960	      3659	decNumber.c	FUNCTION_68	FUNCTION_63	IF_7	FOR_1	CALL_10
0x40009f0	          0x4963c4	                        movsxd rax, r12d	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x40009f3	     0xfb680000000	                   movzx eax, byte [rax]	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x40009fa	        0x8d4440fd	              lea eax, [rax + rax*2 - 3]	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x40009fe	      0xe967feffff	                           jmp 0x400086a	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4000a03	       0xf1f440000	                   nop dword [rax + rax]	      3653	decNumber.c	FUNCTION_68	FUNCTION_63	CALL_9
0x4000a08	          0xc60600	                       mov byte [rsi], 0	      3758	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000a0b	              0x5b	                                 pop rbx	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000a0c	              0x5d	                                 pop rbp	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000a0d	            0x415c	                                 pop r12	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000a0f	              0xc3	                                     ret	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000a10	          0x4963d1	                         movsxd rdx, r9d	      3728	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x4000a13	        0x4183e901	                              sub r9d, 1	      3728	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x4000a17	    0x8b3c95000000	                  mov edi, dword [rdx*4]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000a1e	          0xc60630	                    mov byte [rsi], 0x30	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000a21	          0x8d143f	                    lea edx, [rdi + rdi]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000a24	            0x39d0	                            cmp eax, edx	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000a26	            0x7620	                           jbe 0x4000a48	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000a28	    0x8d14fd000000	                        lea edx, [rdi*8]	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000a2f	            0x39d0	                            cmp eax, edx	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000a31	            0x7205	                            jb 0x4000a38	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000a33	            0x29d0	                            sub eax, edx	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000a35	          0xc60638	                    mov byte [rsi], 0x38	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000a38	            0x89d7	                            mov edi, edx	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000a3a	            0xd1ef	                              shr edi, 1	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000a3c	            0x39f8	                            cmp eax, edi	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000a3e	            0x7205	                            jb 0x4000a45	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000a40	          0x800604	                       add byte [rsi], 4	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000a43	            0x29f8	                            sub eax, edi	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000a45	          0xc1ea02	                              shr edx, 2	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000a48	            0x39d0	                            cmp eax, edx	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000a4a	            0x7205	                            jb 0x4000a51	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000a4c	          0x800602	                       add byte [rsi], 2	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000a4f	            0x29d0	                            sub eax, edx	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000a51	            0xd1ea	                              shr edx, 1	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000a53	            0x39d0	                            cmp eax, edx	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000a55	            0x7205	                            jb 0x4000a5c	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000a57	          0x800601	                       add byte [rsi], 1	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000a5a	            0x29d0	                            sub eax, edx	      3734	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	CALL_14
0x4000a5c	        0x4883c601	                              add rsi, 1	      3727	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7
0x4000a60	          0x4585c9	                           test r9d, r9d	      3728	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x4000a63	            0x79ab	                           jns 0x4000a10	      3728	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x4000a65	          0x4d39da	                            cmp r10, r11	      3729	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20	IF_21
0x4000a68	     0xf8436010000	                            je 0x4000ba4	      3729	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20	IF_21
0x4000a6e	      0x410fb742fe	               movzx eax, word [r10 - 2]	      3732	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x4000a73	    0x41b901000000	                              mov r9d, 1	      3732	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x4000a79	        0x4983ea02	                              sub r10, 2	      3730	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x4000a7d	      0xba02000000	                              mov edx, 2	      3731	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x4000a82	            0xeb93	                           jmp 0x4000a17	      3731	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x4000a84	      0xb879000000	                           mov eax, 0x79	       110	string3.h	FUNCTION_39	CALL_3
0x4000a89	    0xc706496e6600	               mov dword [rsi], 0x666e49	       110	string3.h	FUNCTION_39	CALL_3
0x4000a8f	    0xc74603696e69	        mov dword [rsi + 3], 0x74696e69 	       110	string3.h	FUNCTION_39	CALL_3
0x4000a96	        0x66894607	                  mov word [rsi + 7], ax	       110	string3.h	FUNCTION_39	CALL_3
0x4000a9a	              0x5b	                                 pop rbx	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000a9b	              0x5d	                                 pop rbp	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000a9c	            0x415c	                                 pop r12	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000a9e	              0xc3	                                     ret	      3760	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000a9f	          0x4584c0	                           test r8b, r8b	      3671	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9
0x4000aa2	          0x8d4dff	                      lea ecx, [rbp - 1]	      3669	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8
0x4000aa5	     0xf8432020000	                            je 0x4000cdd	      3671	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9
0x4000aab	            0x85c9	                           test ecx, ecx	      3671	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9
0x4000aad	     0xf842a020000	                            je 0x4000cdd	      3671	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9
0x4000ab3	            0x85c9	                           test ecx, ecx	      3675	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x4000ab5	     0xf8854020000	                            js 0x4000d0f	      3675	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x4000abb	      0xbd56555555	                     mov ebp, 0x55555556	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x4000ac0	            0x89c8	                            mov eax, ecx	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x4000ac2	            0xf7ed	                                imul ebp	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x4000ac4	            0x89c8	                            mov eax, ecx	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x4000ac6	            0x89cd	                            mov ebp, ecx	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x4000ac8	          0xc1f81f	                           sar eax, 0x1f	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x4000acb	            0x29c2	                            sub edx, eax	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x4000acd	          0x8d0452	                  lea eax, [rdx + rdx*2]	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x4000ad0	            0x29c5	                            sub ebp, eax	      3680	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_1
0x4000ad2	            0x29e9	                            sub ecx, ebp	      3682	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9
0x4000ad4	      0x66837f0a00	                 cmp word [rdi + 0xa], 0	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x4000ad9	            0x750a	                           jne 0x4000ae5	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x4000adb	        0x4183fc01	                             cmp r12d, 1	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x4000adf	     0xf840d020000	                            je 0x4000cf2	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x4000ae5	          0x83c501	                              add ebp, 1	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x4000ae8	        0x410fb702	                   movzx eax, word [r10]	      3697	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000aec	          0x4189e8	                            mov r8d, ebp	      3667	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000aef	            0xeb61	                           jmp 0x4000b52	      3667	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000af1	     0xf1f80000000	                         nop dword [rax]	      3667	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000af8	          0x4963d1	                         movsxd rdx, r9d	      3701	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15
0x4000afb	        0x4183e901	                              sub r9d, 1	      3701	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15
0x4000aff	    0x8b1c95000000	                  mov ebx, dword [rdx*4]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000b06	          0xc60630	                    mov byte [rsi], 0x30	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000b09	          0x8d141b	                    lea edx, [rbx + rbx]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000b0c	            0x39d0	                            cmp eax, edx	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000b0e	            0x7620	                           jbe 0x4000b30	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000b10	    0x8d14dd000000	                        lea edx, [rbx*8]	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000b17	            0x39d0	                            cmp eax, edx	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000b19	            0x7205	                            jb 0x4000b20	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000b1b	            0x29d0	                            sub eax, edx	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000b1d	          0xc60638	                    mov byte [rsi], 0x38	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000b20	            0x89d3	                            mov ebx, edx	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000b22	            0xd1eb	                              shr ebx, 1	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000b24	            0x39d8	                            cmp eax, ebx	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000b26	            0x7205	                            jb 0x4000b2d	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000b28	          0x800604	                       add byte [rsi], 4	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000b2b	            0x29d8	                            sub eax, ebx	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000b2d	          0xc1ea02	                              shr edx, 2	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000b30	            0x39d0	                            cmp eax, edx	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000b32	            0x7205	                            jb 0x4000b39	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000b34	          0x800602	                       add byte [rsi], 2	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000b37	            0x29d0	                            sub eax, edx	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000b39	            0xd1ea	                              shr edx, 1	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000b3b	            0x39d0	                            cmp eax, edx	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000b3d	            0x7205	                            jb 0x4000b44	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000b3f	          0x800601	                       add byte [rsi], 1	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000b42	            0x29d0	                            sub eax, edx	      3707	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	CALL_12
0x4000b44	        0x4883c601	                              add rsi, 1	      3700	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3
0x4000b48	        0x4183e801	                              sub r8d, 1	      3700	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3
0x4000b4c	     0xf84ff000000	                            je 0x4000c51	      3700	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3
0x4000b52	          0x4585c9	                           test r9d, r9d	      3701	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15
0x4000b55	            0x79a1	                           jns 0x4000af8	      3701	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15
0x4000b57	          0x4d39d3	                            cmp r11, r10	      3702	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15	IF_16
0x4000b5a	            0x7416	                            je 0x4000b72	      3702	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15	IF_16
0x4000b5c	      0x410fb742fe	               movzx eax, word [r10 - 2]	      3705	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15
0x4000b61	    0x41b901000000	                              mov r9d, 1	      3705	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15
0x4000b67	        0x4983ea02	                              sub r10, 2	      3703	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15
0x4000b6b	      0xba02000000	                              mov edx, 2	      3704	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15
0x4000b70	            0xeb8d	                           jmp 0x4000aff	      3704	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_3	IF_15
0x4000b72	            0x3b2f	                    cmp ebp, dword [rdi]	      3709	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17
0x4000b74	     0xf8ccb010000	                            jl 0x4000d45	      3709	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17
0x4000b7a	        0x418d40ff	                       lea eax, [r8 - 1]	      3709	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17
0x4000b7e	          0x4989c0	                             mov r8, rax	      3709	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17
0x4000b81	      0x488d540601	                lea rdx, [rsi + rax + 1]	      3709	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17
0x4000b86	          0x4889f0	                            mov rax, rsi	      3709	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17
0x4000b89	     0xf1f80000000	                         nop dword [rax]	      3709	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17
0x4000b90	          0xc60030	                    mov byte [rax], 0x30	      3721	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_5
0x4000b93	        0x4883c001	                              add rax, 1	      3721	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_5
0x4000b97	          0x4839d0	                            cmp rax, rdx	      3721	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_5
0x4000b9a	            0x75f4	                           jne 0x4000b90	      3721	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_5
0x4000b9c	          0x4d63c0	                          movsxd r8, r8d	      3721	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_5
0x4000b9f	      0x4a8d740601	                 lea rsi, [rsi + r8 + 1]	      3721	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	FOR_5
0x4000ba4	            0x85c9	                           test ecx, ecx	      3741	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22
0x4000ba6	     0xf845cfeffff	                            je 0x4000a08	      3741	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22
0x4000bac	            0x85c9	                           test ecx, ecx	      3746	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	IF_23
0x4000bae	          0xc60645	                    mov byte [rsi], 0x45	      3743	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22
0x4000bb1	        0x488d4602	                      lea rax, [rsi + 2]	      3744	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22
0x4000bb5	     0xf882c010000	                            js 0x4000ce7	      3746	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	IF_23
0x4000bbb	        0xc646012b	                mov byte [rsi + 1], 0x2b	      3744	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22
0x4000bbf	      0xbf00000000	                              mov edi, 0	      3744	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22
0x4000bc4	          0x4889c6	                            mov rsi, rax	      3731	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x4000bc7	          0x4531c9	                            xor r9d, r9d	      3731	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x4000bca	            0xeb26	                           jmp 0x4000bf2	      3731	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x4000bcc	         0xf1f4000	                         nop dword [rax]	      3731	decNumber.c	FUNCTION_68	FUNCTION_63	ELSE_4	FOR_7	IF_20
0x4000bd0	          0x83c201	                              add edx, 1	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000bd3	            0x29c1	                            sub ecx, eax	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000bd5	            0x8816	                      mov byte [rsi], dl	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000bd7	        0x4883c601	                              add rsi, 1	      3755	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8
0x4000bdb	    0x41b901000000	                              mov r9d, 1	      3754	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8
0x4000be1	        0x4883ef04	                              sub rdi, 4	      3754	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8
0x4000be5	    0x4881ff000000	                              cmp rdi, 0	      3751	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8
0x4000bec	     0xf8416feffff	                            je 0x4000a08	      3751	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8
0x4000bf2	          0xc60630	                    mov byte [rsi], 0x30	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000bf5	          0x448b07	                    mov r8d, dword [rdi]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000bf8	      0xba30000000	                           mov edx, 0x30	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000bfd	        0x438d0400	                      lea eax, [r8 + r8]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000c01	            0x39c8	                            cmp eax, ecx	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000c03	            0x732c	                           jae 0x4000c31	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000c05	    0x428d04c50000	                         lea eax, [r8*8]	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000c0d	            0x39c8	                            cmp eax, ecx	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000c0f	            0x770a	                            ja 0x4000c1b	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000c11	            0x29c1	                            sub ecx, eax	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000c13	          0xc60638	                    mov byte [rsi], 0x38	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000c16	      0xba38000000	                           mov edx, 0x38	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000c1b	          0x4189c0	                            mov r8d, eax	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000c1e	          0x41d1e8	                              shr r8d, 1	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000c21	          0x4439c1	                            cmp ecx, r8d	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000c24	            0x7208	                            jb 0x4000c2e	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000c26	          0x83c204	                              add edx, 4	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000c29	          0x4429c1	                            sub ecx, r8d	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000c2c	            0x8816	                      mov byte [rsi], dl	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000c2e	          0xc1e802	                              shr eax, 2	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000c31	            0x39c1	                            cmp ecx, eax	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000c33	            0x7207	                            jb 0x4000c3c	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000c35	          0x83c202	                              add edx, 2	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000c38	            0x29c1	                            sub ecx, eax	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000c3a	            0x8816	                      mov byte [rsi], dl	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000c3c	            0xd1e8	                              shr eax, 1	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000c3e	            0x39c1	                            cmp ecx, eax	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000c40	            0x738e	                           jae 0x4000bd0	      3752	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	CALL_15
0x4000c42	          0x4584c9	                           test r9b, r9b	      3753	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	IF_24
0x4000c45	            0x7590	                           jne 0x4000bd7	      3753	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	IF_24
0x4000c47	          0x80fa30	                            cmp dl, 0x30	      3753	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	IF_24
0x4000c4a	            0x758b	                           jne 0x4000bd7	      3753	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	IF_24
0x4000c4c	          0x4531c9	                            xor r9d, r9d	      3753	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	IF_24
0x4000c4f	            0xeb90	                           jmp 0x4000be1	      3753	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	FOR_8	IF_24
0x4000c51	            0x392f	                    cmp dword [rdi], ebp	      3709	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17
0x4000c53	     0xf8e4bffffff	                           jle 0x4000ba4	      3709	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17
0x4000c59	          0xc6062e	                    mov byte [rsi], 0x2e	      3710	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17
0x4000c5c	         0xf1f4000	                         nop dword [rax]	      3710	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17
0x4000c60	        0x4883c601	                              add rsi, 1	      3710	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17
0x4000c64	          0x4585c9	                           test r9d, r9d	      3712	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18
0x4000c67	            0x7855	                            js 0x4000cbe	      3712	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18
0x4000c69	          0x4963d1	                         movsxd rdx, r9d	      3712	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18
0x4000c6c	        0x4183e901	                              sub r9d, 1	      3712	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18
0x4000c70	    0x8b3c95000000	                  mov edi, dword [rdx*4]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000c77	          0xc60630	                    mov byte [rsi], 0x30	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000c7a	          0x8d143f	                    lea edx, [rdi + rdi]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000c7d	            0x39d0	                            cmp eax, edx	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000c7f	            0x7620	                           jbe 0x4000ca1	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000c81	    0x8d14fd000000	                        lea edx, [rdi*8]	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000c88	            0x39d0	                            cmp eax, edx	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000c8a	            0x7205	                            jb 0x4000c91	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000c8c	            0x29d0	                            sub eax, edx	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000c8e	          0xc60638	                    mov byte [rsi], 0x38	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000c91	            0x89d7	                            mov edi, edx	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000c93	            0xd1ef	                              shr edi, 1	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000c95	            0x39f8	                            cmp eax, edi	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000c97	            0x7205	                            jb 0x4000c9e	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000c99	          0x800604	                       add byte [rsi], 4	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000c9c	            0x29f8	                            sub eax, edi	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000c9e	          0xc1ea02	                              shr edx, 2	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000ca1	            0x39d0	                            cmp eax, edx	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000ca3	            0x7205	                            jb 0x4000caa	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000ca5	          0x800602	                       add byte [rsi], 2	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000ca8	            0x29d0	                            sub eax, edx	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000caa	            0xd1ea	                              shr edx, 1	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000cac	            0x39d0	                            cmp eax, edx	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000cae	            0x72b0	                            jb 0x4000c60	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000cb0	          0x800601	                       add byte [rsi], 1	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000cb3	            0x29d0	                            sub eax, edx	      3718	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	CALL_13
0x4000cb5	        0x4883c601	                              add rsi, 1	      3710	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17
0x4000cb9	          0x4585c9	                           test r9d, r9d	      3712	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18
0x4000cbc	            0x79ab	                           jns 0x4000c69	      3712	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18
0x4000cbe	          0x4d39da	                            cmp r10, r11	      3713	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18	IF_19
0x4000cc1	     0xf84ddfeffff	                            je 0x4000ba4	      3713	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18	IF_19
0x4000cc7	      0x410fb742fe	               movzx eax, word [r10 - 2]	      3716	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18
0x4000ccc	    0x41b901000000	                              mov r9d, 1	      3716	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18
0x4000cd2	        0x4983ea02	                              sub r10, 2	      3714	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18
0x4000cd6	      0xba02000000	                              mov edx, 2	      3715	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18
0x4000cdb	            0xeb93	                           jmp 0x4000c70	      3715	decNumber.c	FUNCTION_68	FUNCTION_63	IF_14	IF_17	FOR_4	IF_18
0x4000cdd	      0xbd01000000	                              mov ebp, 1	      3670	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8
0x4000ce2	      0xe901feffff	                           jmp 0x4000ae8	      3670	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8
0x4000ce7	        0xc646012d	                mov byte [rsi + 1], 0x2d	      3747	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	IF_23
0x4000ceb	            0xf7d9	                                 neg ecx	      3748	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	IF_23
0x4000ced	      0xe9cdfeffff	                           jmp 0x4000bbf	      3748	decNumber.c	FUNCTION_68	FUNCTION_63	IF_22	IF_23
0x4000cf2	        0xf6470870	               test byte [rdi + 8], 0x70	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x4000cf6	     0xf85e9fdffff	                           jne 0x4000ae5	      3686	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	CALL_11
0x4000cfc	            0x85ed	                           test ebp, ebp	      3688	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_2	IF_13
0x4000cfe	            0x74dd	                            je 0x4000cdd	      3688	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_2	IF_13
0x4000d00	          0x83c103	                              add ecx, 3	      3689	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_2	IF_13
0x4000d03	          0x83ed02	                              sub ebp, 2	      3690	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	ELSE_2	IF_13
0x4000d06	        0x410fb702	                   movzx eax, word [r10]	      3697	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000d0a	      0xe997fbffff	                           jmp 0x40008a6	      3697	decNumber.c	FUNCTION_68	FUNCTION_63
0x4000d0f	          0x4189c8	                            mov r8d, ecx	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x4000d12	      0xbd56555555	                     mov ebp, 0x55555556	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x4000d17	          0x41f7d8	                                 neg r8d	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x4000d1a	          0x4489c0	                            mov eax, r8d	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x4000d1d	            0xf7ed	                                imul ebp	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x4000d1f	          0x4489c0	                            mov eax, r8d	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x4000d22	          0xc1f81f	                           sar eax, 0x1f	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x4000d25	            0x29c2	                            sub edx, eax	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x4000d27	          0x8d0452	                  lea eax, [rdx + rdx*2]	      3676	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10
0x4000d2a	          0x4129c0	                            sub r8d, eax	      3677	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10	IF_11
0x4000d2d	          0x4489c5	                            mov ebp, r8d	      3677	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10	IF_11
0x4000d30	     0xf849cfdffff	                            je 0x4000ad2	      3677	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10	IF_11
0x4000d36	      0xb803000000	                              mov eax, 3	      3677	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10	IF_11
0x4000d3b	          0x4429c0	                            sub eax, r8d	      3677	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10	IF_11
0x4000d3e	            0x89c5	                            mov ebp, eax	      3677	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10	IF_11
0x4000d40	      0xe98dfdffff	                           jmp 0x4000ad2	      3677	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10	IF_11
0x4000d45	          0x4d89da	                            mov r10, r11	      3677	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10	IF_11
0x4000d48	      0xe90cffffff	                           jmp 0x4000c59	      3677	decNumber.c	FUNCTION_68	FUNCTION_63	IF_8	IF_9	IF_10	IF_11
decNumberDivide	ELSE,0:DO,0:CALL,3:IF,1:functions,0:SWITCH,0:WHILE,0:FOR,0	27
0x4006d70	              0x55	                                push rbp	       992	decNumber.c	FUNCTION_68	FUNCTION_15
0x4006d71	              0x53	                                push rbx	       992	decNumber.c	FUNCTION_68	FUNCTION_15
0x4006d72	    0x41b880000000	                           mov r8d, 0x80	       994	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_1
0x4006d78	          0x4889fb	                            mov rbx, rdi	       992	decNumber.c	FUNCTION_68	FUNCTION_15
0x4006d7b	          0x4889cd	                            mov rbp, rcx	       992	decNumber.c	FUNCTION_68	FUNCTION_15
0x4006d7e	        0x4883ec18	                           sub rsp, 0x18	       992	decNumber.c	FUNCTION_68	FUNCTION_15
0x4006d82	      0x4c8d4c2404	                       lea r9, [rsp + 4]	       994	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_1
0x4006d87	    0xc74424040000	                  mov dword [rsp + 4], 0	       993	decNumber.c	FUNCTION_68	FUNCTION_15
0x4006d8f	    0x64488b042528	                mov rax, qword fs:[0x28]	       992	decNumber.c	FUNCTION_68	FUNCTION_15
0x4006d98	      0x4889442408	                mov qword [rsp + 8], rax	       992	decNumber.c	FUNCTION_68	FUNCTION_15
0x4006d9d	            0x31c0	                            xor eax, eax	       992	decNumber.c	FUNCTION_68	FUNCTION_15
0x4006d9f	      0xe86cefffff	                    call sym.decDivideOp	       994	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_1
0x4006da4	        0x8b742404	                mov esi, dword [rsp + 4]	       995	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_2
0x4006da8	            0x85f6	                           test esi, esi	       995	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_2
0x4006daa	            0x740b	                            je 0x4006db7	       995	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_2
0x4006dac	          0x4889ea	                            mov rdx, rbp	       995	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_2
0x4006daf	          0x4889df	                            mov rdi, rbx	       995	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_2
0x4006db2	      0xe8199affff	                      call sym.decStatus	       995	decNumber.c	FUNCTION_68	FUNCTION_15	CALL_2
0x4006db7	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1000	decNumber.c	FUNCTION_68	FUNCTION_15
0x4006dbc	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1000	decNumber.c	FUNCTION_68	FUNCTION_15
0x4006dc5	          0x4889d8	                            mov rax, rbx	      1000	decNumber.c	FUNCTION_68	FUNCTION_15
0x4006dc8	            0x7507	                           jne 0x4006dd1	      1000	decNumber.c	FUNCTION_68	FUNCTION_15
0x4006dca	        0x4883c418	                           add rsp, 0x18	      1000	decNumber.c	FUNCTION_68	FUNCTION_15
0x4006dce	              0x5b	                                 pop rbx	      1000	decNumber.c	FUNCTION_68	FUNCTION_15
0x4006dcf	              0x5d	                                 pop rbp	      1000	decNumber.c	FUNCTION_68	FUNCTION_15
0x4006dd0	              0xc3	                                     ret	      1000	decNumber.c	FUNCTION_68	FUNCTION_15
0x4006dd1	      0xe800000000	                          call 0x4006dd6	      1000	decNumber.c	FUNCTION_68	FUNCTION_15
decLnOp	ELSE,3:DO,1:CALL,44:IF,29:functions,44:SWITCH,0:WHILE,0:FOR,1	414
0x4007820	            0x4157	                                push r15	      5582	decNumber.c	FUNCTION_68
0x4007822	            0x4156	                                push r14	      5582	decNumber.c	FUNCTION_68
0x4007824	            0x4155	                                push r13	      5582	decNumber.c	FUNCTION_68
0x4007826	            0x4154	                                push r12	      5582	decNumber.c	FUNCTION_68
0x4007828	          0x4989d5	                            mov r13, rdx	      5582	decNumber.c	FUNCTION_68
0x400782b	              0x55	                                push rbp	      5582	decNumber.c	FUNCTION_68
0x400782c	              0x53	                                push rbx	      5582	decNumber.c	FUNCTION_68
0x400782d	          0x4989f4	                            mov r12, rsi	      5582	decNumber.c	FUNCTION_68
0x4007830	    0x4881ec180100	                          sub rsp, 0x118	      5582	decNumber.c	FUNCTION_68
0x4007837	    0x64488b042528	                mov rax, qword fs:[0x28]	      5582	decNumber.c	FUNCTION_68
0x4007840	    0x488984240801	            mov qword [rsp + 0x108], rax	      5582	decNumber.c	FUNCTION_68
0x4007848	            0x31c0	                            xor eax, eax	      5582	decNumber.c	FUNCTION_68
0x400784a	         0xfb64608	               movzx eax, byte [rsi + 8]	      5610	decNumber.c	DO_1	IF_2
0x400784e	        0x48893c24	                    mov qword [rsp], rdi	      5582	decNumber.c	FUNCTION_68
0x4007852	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      5582	decNumber.c	FUNCTION_68
0x4007857	    0xc74424280000	               mov dword [rsp + 0x28], 0	      5583	decNumber.c	
0x400785f	            0xa870	                           test al, 0x70	      5610	decNumber.c	DO_1	IF_2
0x4007861	            0x746d	                            je 0x40078d0	      5610	decNumber.c	DO_1	IF_2
0x4007863	            0xa840	                           test al, 0x40	      5611	decNumber.c	DO_1	IF_2	IF_3	CALL_4
0x4007865	     0xf84b5040000	                            je 0x4007d20	      5611	decNumber.c	DO_1	IF_2	IF_3	CALL_4
0x400786b	            0x84c0	                             test al, al	      5612	decNumber.c	DO_1	IF_2	IF_3	IF_4	CALL_5
0x400786d	     0xf88ed030000	                            js 0x4007c60	      5612	decNumber.c	DO_1	IF_2	IF_3	IF_4	CALL_5
0x4007873	        0x488b3c24	                    mov rdi, qword [rsp]	      5614	decNumber.c	DO_1	IF_2	IF_3	CALL_6
0x4007877	      0xe800000000	                          call 0x400787c	      5614	decNumber.c	DO_1	IF_2	IF_3	CALL_6
0x400787c	    0x48c744241000	               mov qword [rsp + 0x10], 0	      5597	decNumber.c	
0x4007885	    0x48c744240800	                  mov qword [rsp + 8], 0	      5594	decNumber.c	
0x400788e	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5797	decNumber.c	DO_1
0x4007893	      0xe800000000	                          call 0x4007898	      5797	decNumber.c	DO_1
0x4007898	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      5798	decNumber.c	DO_1
0x400789d	      0xe800000000	                          call 0x40078a2	      5798	decNumber.c	DO_1
0x40078a2	    0x488bbc240801	           mov rdi, qword [rsp + 0x108] 	      5801	decNumber.c	DO_1
0x40078aa	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      5801	decNumber.c	DO_1
0x40078b3	        0x488b0424	                    mov rax, qword [rsp]	      5801	decNumber.c	DO_1
0x40078b7	     0xf85bd060000	                           jne 0x4007f7a	      5801	decNumber.c	DO_1
0x40078bd	    0x4881c4180100	                          add rsp, 0x118	      5801	decNumber.c	DO_1
0x40078c4	              0x5b	                                 pop rbx	      5801	decNumber.c	DO_1
0x40078c5	              0x5d	                                 pop rbp	      5801	decNumber.c	DO_1
0x40078c6	            0x415c	                                 pop r12	      5801	decNumber.c	DO_1
0x40078c8	            0x415d	                                 pop r13	      5801	decNumber.c	DO_1
0x40078ca	            0x415e	                                 pop r14	      5801	decNumber.c	DO_1
0x40078cc	            0x415f	                                 pop r15	      5801	decNumber.c	DO_1
0x40078ce	              0xc3	                                     ret	      5801	decNumber.c	DO_1
0x40078cf	              0x90	                                     nop	      5801	decNumber.c	DO_1
0x40078d0	         0xfb7560a	            movzx edx, word [rsi + 0xa] 	      5619	decNumber.c	DO_1	IF_5	CALL_8
0x40078d4	          0x6685d2	                             test dx, dx	      5619	decNumber.c	DO_1	IF_5	CALL_8
0x40078d7	     0xf8443030000	                            je 0x4007c20	      5619	decNumber.c	DO_1	IF_5	CALL_8
0x40078dd	            0x84c0	                             test al, al	      5625	decNumber.c	DO_1	IF_6	CALL_10
0x40078df	     0xf887b030000	                            js 0x4007c60	      5625	decNumber.c	DO_1	IF_6	CALL_10
0x40078e5	      0x418b4c2404	                mov ecx, dword [r12 + 4]	      5632	decNumber.c	DO_1	IF_7
0x40078ea	            0x85c9	                           test ecx, ecx	      5632	decNumber.c	DO_1	IF_7
0x40078ec	     0xf8496030000	                            je 0x4007c88	      5632	decNumber.c	DO_1	IF_7
0x40078f2	        0x418b1c24	                    mov ebx, dword [r12]	      5632	decNumber.c	DO_1	IF_7
0x40078f6	        0x418b6d00	                    mov ebp, dword [r13]	      5632	decNumber.c	DO_1	IF_7
0x40078fa	            0x39eb	                            cmp ebx, ebp	      5656	decNumber.c	DO_1	IF_7	CALL_14
0x40078fc	      0xb807000000	                              mov eax, 7	      5656	decNumber.c	DO_1	IF_7	CALL_14
0x4007901	           0xf4deb	                         cmovge ebp, ebx	      5656	decNumber.c	DO_1	IF_7	CALL_14
0x4007904	          0x83fd07	                              cmp ebp, 7	      5656	decNumber.c	DO_1	IF_7	CALL_14
0x4007907	           0xf4ce8	                          cmovl ebp, eax	      5656	decNumber.c	DO_1	IF_7	CALL_14
0x400790a	          0x83c502	                              add ebp, 2	      5656	decNumber.c	DO_1	IF_7	CALL_14
0x400790d	          0x83fd31	                           cmp ebp, 0x31	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x4007910	     0xf8f62050000	                            jg 0x4007e78	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x4007916	          0x83fd10	                           cmp ebp, 0x10	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x4007919	      0xb810000000	                           mov eax, 0x10	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400791e	           0xf4dc5	                         cmovge eax, ebp	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x4007921	            0x4898	                                    cdqe	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x4007923	     0xfb680000000	                   movzx eax, byte [rax]	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400792a	        0x8d44000a	              lea eax, [rax + rax + 0xa]	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x400792e	          0x83f830	                           cmp eax, 0x30	      5665	decNumber.c	DO_1	IF_7	IF_11
0x4007931	    0x4c8dbc249000	                   lea r15, [rsp + 0x90]	      5595	decNumber.c	
0x4007939	    0x48c744240800	                  mov qword [rsp + 8], 0	      5594	decNumber.c	
0x4007942	     0xf879d050000	                            ja 0x4007ee5	      5665	decNumber.c	DO_1	IF_7	IF_11
0x4007948	             0x1eb	                            add ebx, ebp	      5672	decNumber.c	DO_1	IF_7
0x400794a	          0x83fb31	                           cmp ebx, 0x31	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400794d	     0xf8f6d050000	                            jg 0x4007ec0	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x4007953	      0xb810000000	                           mov eax, 0x10	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x4007958	          0x83fb10	                           cmp ebx, 0x10	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400795b	           0xf4cd8	                          cmovl ebx, eax	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400795e	          0x4863c3	                         movsxd rax, ebx	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x4007961	     0xfb680000000	                   movzx eax, byte [rax]	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x4007968	        0x8d44000a	              lea eax, [rax + rax + 0xa]	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x400796c	          0x83f83c	                           cmp eax, 0x3c	      5674	decNumber.c	DO_1	IF_7	IF_13
0x400796f	     0xf862b050000	                           jbe 0x4007ea0	      5674	decNumber.c	DO_1	IF_7	IF_13
0x4007975	            0x89c7	                            mov edi, eax	      5675	decNumber.c	DO_1	IF_7	IF_13
0x4007977	      0xe800000000	                          call 0x400797c	      5675	decNumber.c	DO_1	IF_7	IF_13
0x400797c	          0x4885c0	                           test rax, rax	      5676	decNumber.c	DO_1	IF_7	IF_13	IF_14
0x400797f	      0x4889442410	             mov qword [rsp + 0x10], rax	      5675	decNumber.c	DO_1	IF_7	IF_13
0x4007984	          0x4989c6	                            mov r14, rax	      5675	decNumber.c	DO_1	IF_7	IF_13
0x4007987	     0xf84e0050000	                            je 0x4007f6d	      5676	decNumber.c	DO_1	IF_7	IF_13	IF_14
0x400798d	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      5691	decNumber.c	DO_1	IF_7	CALL_19
0x4007992	      0xbe40000000	                           mov esi, 0x40	      5691	decNumber.c	DO_1	IF_7	CALL_19
0x4007997	      0xe800000000	                          call 0x400799c	      5691	decNumber.c	DO_1	IF_7	CALL_19
0x400799c	        0x418b3424	                    mov esi, dword [r12]	      5693	decNumber.c	DO_1	IF_7	CALL_20
0x40079a0	      0x4103742404	                add esi, dword [r12 + 4]	      5693	decNumber.c	DO_1	IF_7	CALL_20
0x40079a5	          0x4c89ff	                            mov rdi, r15	      5693	decNumber.c	DO_1	IF_7	CALL_20
0x40079a8	      0xe800000000	                          call 0x40079ad	      5693	decNumber.c	DO_1	IF_7	CALL_20
0x40079ad	            0x31d2	                            xor edx, edx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40079af	      0xbe79222300	                       mov esi, 0x232279	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40079b4	          0x4c89f7	                            mov rdi, r14	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40079b7	      0x664189560a	                mov word [r14 + 0xa], dx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40079bc	      0x41c6460800	                   mov byte [r14 + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40079c1	    0x41c746040000	                  mov dword [r14 + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40079c9	    0x41c706010000	                      mov dword [r14], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40079d0	      0xe89b9fffff	     call sym.decNumberFromUInt32.part.8	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40079d5	      0x4c8d442428	                    lea r8, [rsp + 0x28]	      5696	decNumber.c	DO_1	IF_7	CALL_22
0x40079da	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	      5696	decNumber.c	DO_1	IF_7	CALL_22
0x40079df	          0x4c89f2	                            mov rdx, r14	      5696	decNumber.c	DO_1	IF_7	CALL_22
0x40079e2	          0x4c89fe	                            mov rsi, r15	      5696	decNumber.c	DO_1	IF_7	CALL_22
0x40079e5	          0x4c89ff	                            mov rdi, r15	      5696	decNumber.c	DO_1	IF_7	CALL_22
0x40079e8	    0x41c74604faff	        mov dword [r14 + 4], 0xfffffffa 	      5695	decNumber.c	DO_1	IF_7
0x40079f0	      0xe88bc3ffff	                  call sym.decMultiplyOp	      5696	decNumber.c	DO_1	IF_7	CALL_22
0x40079f5	    0x410fb6442408	               movzx eax, byte [r12 + 8]	      6839	decNumber.c	FUNCTION_11
0x40079fb	        0x418b0c24	                    mov ecx, dword [r12]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40079ff	      0x498d54240a	                    lea rdx, [r12 + 0xa]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4007a04	      0x4c8d4c2428	                    lea r9, [rsp + 0x28]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4007a09	      0x4c8d44242c	                    lea r8, [rsp + 0x2c]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4007a0e	      0x488d742430	                   lea rsi, [rsp + 0x30]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4007a13	          0x4c89f7	                            mov rdi, r14	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4007a16	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      5699	decNumber.c	DO_1	IF_7
0x4007a1e	    0xc74424300200	               mov dword [rsp + 0x30], 2	      5700	decNumber.c	DO_1	IF_7
0x4007a26	    0xc744243c0500	               mov dword [rsp + 0x3c], 5	      5700	decNumber.c	DO_1	IF_7
0x4007a2e	        0x41884608	                  mov byte [r14 + 8], al	      6839	decNumber.c	FUNCTION_11
0x4007a32	      0x418b442404	                mov eax, dword [r12 + 4]	      6840	decNumber.c	FUNCTION_11
0x4007a37	        0x41894604	                mov dword [r14 + 4], eax	      6840	decNumber.c	FUNCTION_11
0x4007a3b	      0xe89098ffff	             call sym.decSetCoeff.isra.3	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4007a40	    0x41c746040000	                  mov dword [r14 + 4], 0	      5702	decNumber.c	DO_1	IF_7
0x4007a48	          0x4c89f7	                            mov rdi, r14	      5703	decNumber.c	DO_1	IF_7	CALL_24
0x4007a4b	      0xe8e08affff	                      call sym.decGetInt	      5703	decNumber.c	DO_1	IF_7	CALL_24
0x4007a50	          0x83f809	                              cmp eax, 9	      5704	decNumber.c	DO_1	IF_7	CALL_25
0x4007a53	            0x7f0a	                            jg 0x4007a5f	      5704	decNumber.c	DO_1	IF_7	CALL_25
0x4007a55	    0x8d14c5000000	                        lea edx, [rax*8]	      5704	decNumber.c	DO_1	IF_7	CALL_25
0x4007a5c	          0x8d0442	                  lea eax, [rdx + rax*2]	      5704	decNumber.c	DO_1	IF_7	CALL_25
0x4007a5f	          0x83e80a	                            sub eax, 0xa	      5705	decNumber.c	DO_1	IF_7
0x4007a62	          0x4c89f7	                            mov rdi, r14	      5706	decNumber.c	DO_1	IF_7	CALL_26
0x4007a65	            0x4898	                                    cdqe	      5705	decNumber.c	DO_1	IF_7
0x4007a67	     0xfb7b4000000	             movzx esi, word [rax + rax]	      5705	decNumber.c	DO_1	IF_7
0x4007a6f	            0x89f3	                            mov ebx, esi	      5705	decNumber.c	DO_1	IF_7
0x4007a71	          0xc1fe02	                              sar esi, 2	      5706	decNumber.c	DO_1	IF_7	CALL_26
0x4007a74	      0xe800000000	                          call 0x4007a79	      5706	decNumber.c	DO_1	IF_7	CALL_26
0x4007a79	          0x83e303	                              and ebx, 3	      5707	decNumber.c	DO_1	IF_7
0x4007a7c	      0xb8fdffffff	                     mov eax, 0xfffffffd	      5707	decNumber.c	DO_1	IF_7
0x4007a81	      0x4c8d4c2428	                    lea r9, [rsp + 0x28]	      5710	decNumber.c	DO_1	IF_7	CALL_27
0x4007a86	            0x29d8	                            sub eax, ebx	      5707	decNumber.c	DO_1	IF_7
0x4007a88	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	      5710	decNumber.c	DO_1	IF_7	CALL_27
0x4007a8d	      0x41c6460880	                mov byte [r14 + 8], 0x80	      5708	decNumber.c	DO_1	IF_7
0x4007a92	        0x41894604	                mov dword [r14 + 4], eax	      5707	decNumber.c	DO_1	IF_7
0x4007a96	          0x4531c0	                            xor r8d, r8d	      5710	decNumber.c	DO_1	IF_7	CALL_27
0x4007a99	          0x4c89f2	                            mov rdx, r14	      5710	decNumber.c	DO_1	IF_7	CALL_27
0x4007a9c	          0x4c89fe	                            mov rsi, r15	      5710	decNumber.c	DO_1	IF_7	CALL_27
0x4007a9f	          0x4c89ff	                            mov rdi, r15	      5710	decNumber.c	DO_1	IF_7	CALL_27
0x4007aa2	    0xc74424301000	           mov dword [rsp + 0x30], 0x10 	      5709	decNumber.c	DO_1	IF_7
0x4007aaa	    0xc744243c0300	               mov dword [rsp + 0x3c], 3	      5709	decNumber.c	DO_1	IF_7
0x4007ab2	      0xbb09000000	                              mov ebx, 9	      5729	decNumber.c	DO_1	IF_7
0x4007ab7	      0xe834d1ffff	                       call sym.decAddOp	      5710	decNumber.c	DO_1	IF_7	CALL_27
0x4007abc	      0xb801000000	                              mov eax, 1	      5715	decNumber.c	DO_1	IF_7	CALL_28
0x4007ac1	      0xc644244800	                mov byte [rsp + 0x48], 0	      5721	decNumber.c	DO_1	IF_7
0x4007ac6	      0xc644247800	                mov byte [rsp + 0x78], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007acb	      0x668944247a	               mov word [rsp + 0x7a], ax	      5715	decNumber.c	DO_1	IF_7	CALL_28
0x4007ad0	        0x418b4504	                mov eax, dword [r13 + 4]	      5719	decNumber.c	DO_1	IF_7
0x4007ad4	    0xc74424740000	               mov dword [rsp + 0x74], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007adc	    0xc74424700100	               mov dword [rsp + 0x70], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007ae4	    0xc74424547e84	       mov dword [rsp + 0x54], 0x1e847e 	      5724	decNumber.c	DO_1	IF_7
0x4007aec	    0xc74424300900	               mov dword [rsp + 0x30], 9	      5732	decNumber.c	DO_1	IF_7
0x4007af4	        0x89442434	             mov dword [rsp + 0x34], eax	      5719	decNumber.c	DO_1	IF_7
0x4007af8	        0x418b4508	                mov eax, dword [r13 + 8]	      5720	decNumber.c	DO_1	IF_7
0x4007afc	        0x89442438	             mov dword [rsp + 0x38], eax	      5720	decNumber.c	DO_1	IF_7
0x4007b00	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      5723	decNumber.c	DO_1	IF_7
0x4007b05	      0x4889442458	             mov qword [rsp + 0x58], rax	      5723	decNumber.c	DO_1	IF_7
0x4007b0a	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      5723	decNumber.c	DO_1	IF_7
0x4007b0f	    0xc7442458827b	     mov dword [rsp + 0x58], 0xffe17b82 	      5725	decNumber.c	DO_1	IF_7
0x4007b17	      0x4889442460	             mov qword [rsp + 0x60], rax	      5723	decNumber.c	DO_1	IF_7
0x4007b1c	        0x8b442448	            mov eax, dword [rsp + 0x48] 	      5723	decNumber.c	DO_1	IF_7
0x4007b20	        0x89442468	             mov dword [rsp + 0x68], eax	      5723	decNumber.c	DO_1	IF_7
0x4007b24	        0x418b0424	                    mov eax, dword [r12]	      5733	decNumber.c	DO_1	IF_7
0x4007b28	          0x83c009	                              add eax, 9	      5733	decNumber.c	DO_1	IF_7
0x4007b2b	        0x89442450	             mov dword [rsp + 0x50], eax	      5733	decNumber.c	DO_1	IF_7
0x4007b2f	              0x90	                                     nop	      5733	decNumber.c	DO_1	IF_7
0x4007b30	      0x4180470880	                add byte [r15 + 8], 0x80	      5744	decNumber.c	DO_1	IF_7	FOR_1
0x4007b35	      0x488d4c2428	                   lea rcx, [rsp + 0x28]	      5745	decNumber.c	DO_1	IF_7	FOR_1	CALL_29
0x4007b3a	      0x488d542450	                   lea rdx, [rsp + 0x50]	      5745	decNumber.c	DO_1	IF_7	FOR_1	CALL_29
0x4007b3f	          0x4c89fe	                            mov rsi, r15	      5745	decNumber.c	DO_1	IF_7	FOR_1	CALL_29
0x4007b42	          0x4c89f7	                            mov rdi, r14	      5745	decNumber.c	DO_1	IF_7	FOR_1	CALL_29
0x4007b45	      0xe8e6f3ffff	                       call sym.decExpOp	      5745	decNumber.c	DO_1	IF_7	FOR_1	CALL_29
0x4007b4a	      0x4180470880	                add byte [r15 + 8], 0x80	      5746	decNumber.c	DO_1	IF_7	FOR_1
0x4007b4f	      0x4c8d442428	                    lea r8, [rsp + 0x28]	      5748	decNumber.c	DO_1	IF_7	FOR_1	CALL_30
0x4007b54	      0x488d4c2450	                   lea rcx, [rsp + 0x50]	      5748	decNumber.c	DO_1	IF_7	FOR_1	CALL_30
0x4007b59	          0x4c89e2	                            mov rdx, r12	      5748	decNumber.c	DO_1	IF_7	FOR_1	CALL_30
0x4007b5c	          0x4c89f6	                            mov rsi, r14	      5748	decNumber.c	DO_1	IF_7	FOR_1	CALL_30
0x4007b5f	          0x4c89f7	                            mov rdi, r14	      5748	decNumber.c	DO_1	IF_7	FOR_1	CALL_30
0x4007b62	      0xe819c2ffff	                  call sym.decMultiplyOp	      5748	decNumber.c	DO_1	IF_7	FOR_1	CALL_30
0x4007b67	      0x488d542470	                   lea rdx, [rsp + 0x70]	      5749	decNumber.c	DO_1	IF_7	FOR_1	CALL_31
0x4007b6c	      0x4c8d4c2428	                    lea r9, [rsp + 0x28]	      5749	decNumber.c	DO_1	IF_7	FOR_1	CALL_31
0x4007b71	      0x488d4c2450	                   lea rcx, [rsp + 0x50]	      5749	decNumber.c	DO_1	IF_7	FOR_1	CALL_31
0x4007b76	    0x41b880000000	                           mov r8d, 0x80	      5749	decNumber.c	DO_1	IF_7	FOR_1	CALL_31
0x4007b7c	          0x4c89f6	                            mov rsi, r14	      5749	decNumber.c	DO_1	IF_7	FOR_1	CALL_31
0x4007b7f	          0x4c89f7	                            mov rdi, r14	      5749	decNumber.c	DO_1	IF_7	FOR_1	CALL_31
0x4007b82	      0xe869d0ffff	                       call sym.decAddOp	      5749	decNumber.c	DO_1	IF_7	FOR_1	CALL_31
0x4007b87	      0x410fb7560a	            movzx edx, word [r14 + 0xa] 	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x4007b8c	          0x418b06	                    mov eax, dword [r14]	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x4007b8f	          0x6685d2	                             test dx, dx	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x4007b92	            0x7509	                           jne 0x4007b9d	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x4007b94	          0x83f801	                              cmp eax, 1	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x4007b97	     0xf84b3010000	                            je 0x4007d50	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x4007b9d	        0x41034604	                add eax, dword [r14 + 4]	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x4007ba1	          0x418b0f	                    mov ecx, dword [r15]	      5760	decNumber.c	DO_1	IF_7	FOR_1	IF_17
0x4007ba4	        0x41034500	                    add eax, dword [r13]	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x4007ba8	        0x418b7704	                mov esi, dword [r15 + 4]	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x4007bac	             0x1ce	                            add esi, ecx	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x4007bae	            0x39f0	                            cmp eax, esi	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x4007bb0	            0x7d2e	                           jge 0x4007be0	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x4007bb2	            0x39cd	                            cmp ebp, ecx	      5761	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_18
0x4007bb4	     0xf84b6010000	                            je 0x4007d70	      5761	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_18
0x4007bba	    0x6641837f0a00	                 cmp word [r15 + 0xa], 0	      5762	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_33
0x4007bc0	            0x7509	                           jne 0x4007bcb	      5762	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_33
0x4007bc2	          0x83f901	                              cmp ecx, 1	      5762	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_33
0x4007bc5	     0xf8405020000	                            je 0x4007dd0	      5762	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_33
0x4007bcb	          0x6685d2	                             test dx, dx	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x4007bce	            0x7510	                           jne 0x4007be0	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x4007bd0	        0x41833e01	                      cmp dword [r14], 1	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x4007bd4	     0xf847e020000	                            je 0x4007e58	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x4007bda	    0x660f1f440000	                    nop word [rax + rax]	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x4007be0	      0x4c8d4c2428	                    lea r9, [rsp + 0x28]	      5773	decNumber.c	DO_1	IF_7	FOR_1	CALL_36
0x4007be5	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	      5773	decNumber.c	DO_1	IF_7	FOR_1	CALL_36
0x4007bea	          0x4531c0	                            xor r8d, r8d	      5773	decNumber.c	DO_1	IF_7	FOR_1	CALL_36
0x4007bed	          0x4c89f2	                            mov rdx, r14	      5773	decNumber.c	DO_1	IF_7	FOR_1	CALL_36
0x4007bf0	          0x4c89fe	                            mov rsi, r15	      5773	decNumber.c	DO_1	IF_7	FOR_1	CALL_36
0x4007bf3	          0x4c89ff	                            mov rdi, r15	      5773	decNumber.c	DO_1	IF_7	FOR_1	CALL_36
0x4007bf6	      0xe8f5cfffff	                       call sym.decAddOp	      5773	decNumber.c	DO_1	IF_7	FOR_1	CALL_36
0x4007bfb	            0x39eb	                            cmp ebx, ebp	      5774	decNumber.c	DO_1	IF_7	FOR_1	IF_22
0x4007bfd	     0xf842dffffff	                            je 0x4007b30	      5774	decNumber.c	DO_1	IF_7	FOR_1	IF_22
0x4007c03	             0x1db	                            add ebx, ebx	      5776	decNumber.c	DO_1	IF_7	FOR_1
0x4007c05	        0x418b0424	                    mov eax, dword [r12]	      5779	decNumber.c	DO_1	IF_7	FOR_1
0x4007c09	            0x39dd	                            cmp ebp, ebx	      5779	decNumber.c	DO_1	IF_7	FOR_1
0x4007c0b	           0xf4edd	                         cmovle ebx, ebp	      5779	decNumber.c	DO_1	IF_7	FOR_1
0x4007c0e	             0x1d8	                            add eax, ebx	      5779	decNumber.c	DO_1	IF_7	FOR_1
0x4007c10	        0x895c2430	             mov dword [rsp + 0x30], ebx	      5778	decNumber.c	DO_1	IF_7	FOR_1
0x4007c14	        0x89442450	             mov dword [rsp + 0x50], eax	      5779	decNumber.c	DO_1	IF_7	FOR_1
0x4007c18	      0xe913ffffff	                           jmp 0x4007b30	      5779	decNumber.c	DO_1	IF_7	FOR_1
0x4007c1d	           0xf1f00	                         nop dword [rax]	      5779	decNumber.c	DO_1	IF_7	FOR_1
0x4007c20	          0x833e01	                      cmp dword [rsi], 1	      5619	decNumber.c	DO_1	IF_5	CALL_8
0x4007c23	     0xf85b4fcffff	                           jne 0x40078dd	      5619	decNumber.c	DO_1	IF_5	CALL_8
0x4007c29	        0x488b0424	                    mov rax, qword [rsp]	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007c2d	            0x31f6	                            xor esi, esi	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007c2f	    0x48c744241000	               mov qword [rsp + 0x10], 0	      5597	decNumber.c	
0x4007c38	    0x48c744240800	                  mov qword [rsp + 8], 0	      5594	decNumber.c	
0x4007c41	    0xc74004000000	                  mov dword [rax + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007c48	    0xc70001000000	                      mov dword [rax], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007c4e	        0x6689700a	                mov word [rax + 0xa], si	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007c52	        0xc64008c0	                mov byte [rax + 8], 0xc0	      5621	decNumber.c	DO_1	IF_5
0x4007c56	      0xe933fcffff	                           jmp 0x400788e	      5622	decNumber.c	DO_1	IF_5
0x4007c5b	       0xf1f440000	                   nop dword [rax + rax]	      5622	decNumber.c	DO_1	IF_5
0x4007c60	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5613	decNumber.c	DO_1	IF_2	IF_3	IF_4
0x4007c65	    0x48c744241000	               mov qword [rsp + 0x10], 0	      5597	decNumber.c	
0x4007c6e	    0x48c744240800	                  mov qword [rsp + 8], 0	      5594	decNumber.c	
0x4007c77	    0x810880000000	                    or dword [rax], 0x80	      5613	decNumber.c	DO_1	IF_2	IF_3	IF_4
0x4007c7d	      0xe90cfcffff	                           jmp 0x400788e	      5613	decNumber.c	DO_1	IF_2	IF_3	IF_4
0x4007c82	    0x660f1f440000	                    nop word [rax + rax]	      5613	decNumber.c	DO_1	IF_2	IF_3	IF_4
0x4007c88	        0x418b6d00	                    mov ebp, dword [r13]	      5632	decNumber.c	DO_1	IF_7
0x4007c8c	        0x418b1c24	                    mov ebx, dword [r12]	      5636	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4007c90	          0x83fd28	                           cmp ebp, 0x28	      5632	decNumber.c	DO_1	IF_7
0x4007c93	     0xf8f61fcffff	                            jg 0x40078fa	      5632	decNumber.c	DO_1	IF_7
0x4007c99	        0x6683fa0a	                             cmp dx, 0xa	      5636	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4007c9d	     0xf8470020000	                            je 0x4007f13	      5636	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4007ca3	        0x6683fa02	                               cmp dx, 2	      5643	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x4007ca7	     0xf854dfcffff	                           jne 0x40078fa	      5643	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x4007cad	          0x83fb01	                              cmp ebx, 1	      5643	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x4007cb0	     0xf8544fcffff	                           jne 0x40078fa	      5643	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x4007cb6	        0x498b4500	                    mov rax, qword [r13]	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x4007cba	      0x488d542430	                   lea rdx, [rsp + 0x30]	      5646	decNumber.c	DO_1	IF_7	IF_8	IF_10	CALL_12
0x4007cbf	      0xbe00000000	                              mov esi, 0	      5646	decNumber.c	DO_1	IF_7	IF_8	IF_10	CALL_12
0x4007cc4	      0x4889442430	             mov qword [rsp + 0x30], rax	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x4007cc9	        0x498b4508	                mov rax, qword [r13 + 8]	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x4007ccd	      0x4889442438	             mov qword [rsp + 0x38], rax	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x4007cd2	        0x498b4510	            mov rax, qword [r13 + 0x10] 	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x4007cd6	    0xc744243c0300	               mov dword [rsp + 0x3c], 3	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x4007cde	      0x4889442440	             mov qword [rsp + 0x40], rax	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x4007ce3	        0x418b4518	            mov eax, dword [r13 + 0x18] 	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x4007ce7	        0x89442448	             mov dword [rsp + 0x48], eax	      5644	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x4007ceb	        0x488b3c24	                    mov rdi, qword [rsp]	      5646	decNumber.c	DO_1	IF_7	IF_8	IF_10	CALL_12
0x4007cef	      0xe800000000	                          call 0x4007cf4	      5646	decNumber.c	DO_1	IF_7	IF_8	IF_10	CALL_12
0x4007cf4	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5647	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x4007cf9	    0x48c744241000	               mov qword [rsp + 0x10], 0	      5597	decNumber.c	
0x4007d02	    0x48c744240800	                  mov qword [rsp + 8], 0	      5594	decNumber.c	
0x4007d0b	    0x810820080000	                   or dword [rax], 0x820	      5647	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x4007d11	      0xe978fbffff	                           jmp 0x400788e	      5648	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x4007d16	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5648	decNumber.c	DO_1	IF_7	IF_8	IF_10
0x4007d20	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      5616	decNumber.c	DO_1	IF_2	CALL_7
0x4007d25	        0x488b3c24	                    mov rdi, qword [rsp]	      5616	decNumber.c	DO_1	IF_2	CALL_7
0x4007d29	          0x4889d1	                            mov rcx, rdx	      5616	decNumber.c	DO_1	IF_2	CALL_7
0x4007d2c	            0x31d2	                            xor edx, edx	      5616	decNumber.c	DO_1	IF_2	CALL_7
0x4007d2e	      0xe8bdb6ffff	                 call sym.decNaNs.isra.6	      5616	decNumber.c	DO_1	IF_2	CALL_7
0x4007d33	    0x48c744241000	               mov qword [rsp + 0x10], 0	      5597	decNumber.c	
0x4007d3c	    0x48c744240800	                  mov qword [rsp + 8], 0	      5594	decNumber.c	
0x4007d45	      0xe944fbffff	                           jmp 0x400788e	      5594	decNumber.c	
0x4007d4a	    0x660f1f440000	                    nop word [rax + rax]	      5594	decNumber.c	
0x4007d50	      0x41f6460870	               test byte [r14 + 8], 0x70	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x4007d55	     0xf8542feffff	                           jne 0x4007b9d	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x4007d5b	          0x418b0f	                    mov ecx, dword [r15]	      5759	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_32
0x4007d5e	            0x39cd	                            cmp ebp, ecx	      5761	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_18
0x4007d60	     0xf8554feffff	                           jne 0x4007bba	      5761	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_18
0x4007d66	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5761	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_18
0x4007d70	        0x418b7704	                mov esi, dword [r15 + 4]	      5761	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_18
0x4007d74	    0xc744242c0100	               mov dword [rsp + 0x2c], 1	      5790	decNumber.c	DO_1	IF_7
0x4007d7c	      0x410fb64708	               movzx eax, byte [r15 + 8]	      5790	decNumber.c	DO_1	IF_7
0x4007d81	        0x418b5500	                    mov edx, dword [r13]	      5792	decNumber.c	DO_1	IF_7
0x4007d85	        0x488b1c24	                    mov rbx, qword [rsp]	      6839	decNumber.c	FUNCTION_11
0x4007d89	      0x4c8d44242c	                    lea r8, [rsp + 0x2c]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4007d8e	        0x89542430	             mov dword [rsp + 0x30], edx	      5792	decNumber.c	DO_1	IF_7
0x4007d92	        0x498d570a	                    lea rdx, [r15 + 0xa]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4007d96	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4007d9b	          0x897304	                mov dword [rbx + 4], esi	      6840	decNumber.c	FUNCTION_11
0x4007d9e	      0x488d742430	                   lea rsi, [rsp + 0x30]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4007da3	          0x4889df	                            mov rdi, rbx	      6839	decNumber.c	FUNCTION_11
0x4007da6	          0x884308	                  mov byte [rbx + 8], al	      6839	decNumber.c	FUNCTION_11
0x4007da9	          0x4d89f9	                             mov r9, r15	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4007dac	      0xe81f95ffff	             call sym.decSetCoeff.isra.3	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4007db1	      0x488d54242c	                   lea rdx, [rsp + 0x2c]	      5794	decNumber.c	DO_1	IF_7
0x4007db6	          0x4c89f9	                            mov rcx, r15	      5794	decNumber.c	DO_1	IF_7
0x4007db9	          0x4c89ee	                            mov rsi, r13	      5794	decNumber.c	DO_1	IF_7
0x4007dbc	          0x4889df	                            mov rdi, rbx	      5794	decNumber.c	DO_1	IF_7
0x4007dbf	      0xe89ca0ffff	                    call sym.decFinalize	      5794	decNumber.c	DO_1	IF_7
0x4007dc4	      0xe9c5faffff	                           jmp 0x400788e	      5794	decNumber.c	DO_1	IF_7
0x4007dc9	     0xf1f80000000	                         nop dword [rax]	      5794	decNumber.c	DO_1	IF_7
0x4007dd0	      0x41f6470870	               test byte [r15 + 8], 0x70	      5762	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_33
0x4007dd5	     0xf85f0fdffff	                           jne 0x4007bcb	      5762	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_33
0x4007ddb	      0x4c8d4c2428	                    lea r9, [rsp + 0x28]	      5763	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_34
0x4007de0	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	      5763	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_34
0x4007de5	      0x488d542470	                   lea rdx, [rsp + 0x70]	      5763	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_34
0x4007dea	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	      5763	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_34
0x4007df2	    0x41b801000000	                              mov r8d, 1	      5763	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_34
0x4007df8	          0x4c89e6	                            mov rsi, r12	      5763	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_34
0x4007dfb	      0xe810b8ffff	                   call sym.decCompareOp	      5763	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	CALL_34
0x4007e00	    0x6683bc248a00	                cmp word [rsp + 0x8a], 0	      5764	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	IF_20
0x4007e09	     0xf8547010000	                           jne 0x4007f56	      5764	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	IF_20
0x4007e0f	          0x418b0f	                    mov ecx, dword [r15]	      5764	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	IF_20
0x4007e12	    0x41c747040000	                  mov dword [r15 + 4], 0	      5764	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	IF_20
0x4007e1a	            0x31f6	                            xor esi, esi	      5764	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	IF_20
0x4007e1c	    0x6641837f0a00	                 cmp word [r15 + 0xa], 0	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x4007e22	    0xc744242c0100	               mov dword [rsp + 0x2c], 1	      5790	decNumber.c	DO_1	IF_7
0x4007e2a	     0xf854cffffff	                           jne 0x4007d7c	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x4007e30	          0x83f901	                              cmp ecx, 1	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x4007e33	     0xf8543ffffff	                           jne 0x4007d7c	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x4007e39	      0x410fb64708	               movzx eax, byte [r15 + 8]	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x4007e3e	            0xa870	                           test al, 0x70	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x4007e40	     0xf853bffffff	                           jne 0x4007d81	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x4007e46	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x4007e4e	      0xe92effffff	                           jmp 0x4007d81	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x4007e53	       0xf1f440000	                   nop dword [rax + rax]	      5791	decNumber.c	DO_1	IF_7	CALL_38
0x4007e58	      0x41f6460870	               test byte [r14 + 8], 0x70	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x4007e5d	     0xf857dfdffff	                           jne 0x4007be0	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x4007e63	        0x418b4704	                mov eax, dword [r15 + 4]	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x4007e67	            0x29e8	                            sub eax, ebp	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x4007e69	        0x41894604	                mov dword [r14 + 4], eax	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x4007e6d	      0xe96efdffff	                           jmp 0x4007be0	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x4007e72	    0x660f1f440000	                    nop word [rax + rax]	      5769	decNumber.c	DO_1	IF_7	FOR_1	IF_17	CALL_35
0x4007e78	          0x83fd10	                           cmp ebp, 0x10	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x4007e7b	      0xb910000000	                           mov ecx, 0x10	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x4007e80	      0xba56555555	                     mov edx, 0x55555556	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x4007e85	           0xf4dcd	                         cmovge ecx, ebp	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x4007e88	          0x83c102	                              add ecx, 2	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x4007e8b	            0x89c8	                            mov eax, ecx	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x4007e8d	          0xc1f91f	                           sar ecx, 0x1f	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x4007e90	            0xf7ea	                                imul edx	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x4007e92	            0x29ca	                            sub edx, ecx	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x4007e94	        0x8d44120a	              lea eax, [rdx + rdx + 0xa]	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x4007e98	      0xe991faffff	                           jmp 0x400792e	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x4007e9d	           0xf1f00	                         nop dword [rax]	      5664	decNumber.c	DO_1	IF_7	CALL_16
0x4007ea0	    0x4c8db424c000	                   lea r14, [rsp + 0xc0]	      5598	decNumber.c	
0x4007ea8	    0x48c744241000	               mov qword [rsp + 0x10], 0	      5597	decNumber.c	
0x4007eb1	      0xe9d7faffff	                           jmp 0x400798d	      5597	decNumber.c	
0x4007eb6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5597	decNumber.c	
0x4007ec0	          0x83fb10	                           cmp ebx, 0x10	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x4007ec3	      0xb910000000	                           mov ecx, 0x10	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x4007ec8	      0xba56555555	                     mov edx, 0x55555556	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x4007ecd	           0xf4cd9	                          cmovl ebx, ecx	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x4007ed0	          0x8d4b02	                      lea ecx, [rbx + 2]	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x4007ed3	            0x89c8	                            mov eax, ecx	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x4007ed5	          0xc1f91f	                           sar ecx, 0x1f	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x4007ed8	            0xf7ea	                                imul edx	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x4007eda	            0x29ca	                            sub edx, ecx	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x4007edc	        0x8d44120a	              lea eax, [rdx + rdx + 0xa]	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x4007ee0	      0xe987faffff	                           jmp 0x400796c	      5673	decNumber.c	DO_1	IF_7	CALL_18
0x4007ee5	            0x89c7	                            mov edi, eax	      5666	decNumber.c	DO_1	IF_7	IF_11
0x4007ee7	      0xe800000000	                          call 0x4007eec	      5666	decNumber.c	DO_1	IF_7	IF_11
0x4007eec	          0x4885c0	                           test rax, rax	      5667	decNumber.c	DO_1	IF_7	IF_11	IF_12
0x4007eef	      0x4889442408	                mov qword [rsp + 8], rax	      5666	decNumber.c	DO_1	IF_7	IF_11
0x4007ef4	          0x4989c7	                            mov r15, rax	      5666	decNumber.c	DO_1	IF_7	IF_11
0x4007ef7	     0xf854bfaffff	                           jne 0x4007948	      5667	decNumber.c	DO_1	IF_7	IF_11	IF_12
0x4007efd	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5668	decNumber.c	DO_1	IF_7	IF_11	IF_12
0x4007f02	    0x48c744241000	               mov qword [rsp + 0x10], 0	      5597	decNumber.c	
0x4007f0b	          0x830810	                    or dword [rax], 0x10	      5668	decNumber.c	DO_1	IF_7	IF_11	IF_12
0x4007f0e	      0xe97bf9ffff	                           jmp 0x400788e	      5669	decNumber.c	DO_1	IF_7	IF_11	IF_12
0x4007f13	          0x83fb02	                              cmp ebx, 2	      5636	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4007f16	     0xf85def9ffff	                           jne 0x40078fa	      5636	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4007f1c	        0x498b4500	                    mov rax, qword [r13]	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4007f20	      0x488d542430	                   lea rdx, [rsp + 0x30]	      5640	decNumber.c	DO_1	IF_7	IF_8	IF_9	CALL_11
0x4007f25	      0xbe00000000	                              mov esi, 0	      5640	decNumber.c	DO_1	IF_7	IF_8	IF_9	CALL_11
0x4007f2a	      0x4889442430	             mov qword [rsp + 0x30], rax	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4007f2f	        0x498b4508	                mov rax, qword [r13 + 8]	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4007f33	      0x4889442438	             mov qword [rsp + 0x38], rax	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4007f38	        0x498b4510	            mov rax, qword [r13 + 0x10] 	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4007f3c	    0xc744243c0300	               mov dword [rsp + 0x3c], 3	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4007f44	      0x4889442440	             mov qword [rsp + 0x40], rax	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4007f49	        0x418b4518	            mov eax, dword [r13 + 0x18] 	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4007f4d	        0x89442448	             mov dword [rsp + 0x48], eax	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4007f51	      0xe995fdffff	                           jmp 0x4007ceb	      5638	decNumber.c	DO_1	IF_7	IF_8	IF_9
0x4007f56	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5765	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	ELSE_3
0x4007f5b	        0x418b7704	                mov esi, dword [r15 + 4]	      5765	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	ELSE_3
0x4007f5f	          0x418b0f	                    mov ecx, dword [r15]	      5765	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	ELSE_3
0x4007f62	    0x810820080000	                   or dword [rax], 0x820	      5765	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	ELSE_3
0x4007f68	      0xe9affeffff	                           jmp 0x4007e1c	      5765	decNumber.c	DO_1	IF_7	FOR_1	IF_17	IF_19	ELSE_3
0x4007f6d	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5677	decNumber.c	DO_1	IF_7	IF_13	IF_14
0x4007f72	          0x830810	                    or dword [rax], 0x10	      5677	decNumber.c	DO_1	IF_7	IF_13	IF_14
0x4007f75	      0xe914f9ffff	                           jmp 0x400788e	      5678	decNumber.c	DO_1	IF_7	IF_13	IF_14
0x4007f7a	      0xe800000000	                          call 0x4007f7f	      5801	decNumber.c	DO_1
decNumberLog10	ELSE,0:DO,1:CALL,22:IF,15:functions,0:SWITCH,0:WHILE,0:FOR,0	218
0x4008100	            0x4157	                                push r15	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x4008102	            0x4156	                                push r14	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x4008104	            0x4155	                                push r13	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x4008106	            0x4154	                                push r12	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x4008108	          0x4989fc	                            mov r12, rdi	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x400810b	              0x55	                                push rbp	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x400810c	              0x53	                                push rbx	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x400810d	          0x4889d5	                            mov rbp, rdx	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x4008110	          0x4889f3	                            mov rbx, rsi	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x4008113	          0x4889ee	                            mov rsi, rbp	      1418	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4008116	    0x4881ecc80000	                           sub rsp, 0xc8	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x400811d	          0x4889df	                            mov rdi, rbx	      1418	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4008120	      0x488d542410	                   lea rdx, [rsp + 0x10]	      1418	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4008125	    0xc74424100000	               mov dword [rsp + 0x10], 0	      1391	decNumber.c	FUNCTION_68	FUNCTION_22
0x400812d	    0xc74424140000	               mov dword [rsp + 0x14], 0	      1391	decNumber.c	FUNCTION_68	FUNCTION_22
0x4008135	    0x64488b042528	                mov rax, qword fs:[0x28]	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x400813e	    0x48898424b800	             mov qword [rsp + 0xb8], rax	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x4008146	            0x31c0	                            xor eax, eax	      1390	decNumber.c	FUNCTION_68	FUNCTION_22
0x4008148	      0xe85383ffff	                   call sym.decCheckMath	      1418	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x400814d	            0x85c0	                           test eax, eax	      1418	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x400814f	            0x744f	                            je 0x40081a0	      1418	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4008151	        0x8b5c2410	            mov ebx, dword [rsp + 0x10] 	      1418	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4008155	          0x4531f6	                          xor r14d, r14d	      1402	decNumber.c	FUNCTION_68	FUNCTION_22
0x4008158	          0x4531ed	                          xor r13d, r13d	      1399	decNumber.c	FUNCTION_68	FUNCTION_22
0x400815b	          0x4c89ef	                            mov rdi, r13	      1512	decNumber.c	FUNCTION_68	FUNCTION_22
0x400815e	      0xe800000000	                          call 0x4008163	      1512	decNumber.c	FUNCTION_68	FUNCTION_22
0x4008163	          0x4c89f7	                            mov rdi, r14	      1513	decNumber.c	FUNCTION_68	FUNCTION_22
0x4008166	      0xe800000000	                          call 0x400816b	      1513	decNumber.c	FUNCTION_68	FUNCTION_22
0x400816b	            0x85db	                           test ebx, ebx	      1518	decNumber.c	FUNCTION_68	FUNCTION_22	CALL_21
0x400816d	     0xf8539010000	                           jne 0x40082ac	      1518	decNumber.c	FUNCTION_68	FUNCTION_22	CALL_21
0x4008173	    0x488bb424b800	            mov rsi, qword [rsp + 0xb8] 	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x400817b	    0x644833342528	                xor rsi, qword fs:[0x28]	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x4008184	          0x4c89e0	                            mov rax, r12	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x4008187	     0xf85ff020000	                           jne 0x400848c	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x400818d	    0x4881c4c80000	                           add rsp, 0xc8	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x4008194	              0x5b	                                 pop rbx	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x4008195	              0x5d	                                 pop rbp	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x4008196	            0x415c	                                 pop r12	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x4008198	            0x415d	                                 pop r13	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x400819a	            0x415e	                                 pop r14	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x400819c	            0x415f	                                 pop r15	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x400819e	              0xc3	                                     ret	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x400819f	              0x90	                                     nop	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
0x40081a0	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1434	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_8
0x40081a5	      0xbe40000000	                           mov esi, 0x40	      1434	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_8
0x40081aa	      0xe800000000	                          call 0x40081af	      1434	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_8
0x40081af	         0xfb64308	               movzx eax, byte [rbx + 8]	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x40081b3	            0xa8f0	                           test al, 0xf0	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x40081b5	            0x7561	                           jne 0x4008218	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x40081b7	      0x66837b0a00	                 cmp word [rbx + 0xa], 0	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x40081bc	            0x8b0b	                    mov ecx, dword [rbx]	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x40081be	            0x7505	                           jne 0x40081c5	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x40081c0	          0x83f901	                              cmp ecx, 1	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x40081c3	            0x7455	                            je 0x400821a	      1437	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	CALL_9
0x40081c5	        0x88442448	               mov byte [rsp + 0x48], al	      6839	decNumber.c	FUNCTION_11
0x40081c9	          0x8b4304	                mov eax, dword [rbx + 4]	      6840	decNumber.c	FUNCTION_11
0x40081cc	        0x488d530a	                    lea rdx, [rbx + 0xa]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40081d0	      0x4c8d4c241c	                    lea r9, [rsp + 0x1c]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40081d5	      0x4c8d442418	                    lea r8, [rsp + 0x18]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40081da	      0x488d742420	                   lea rsi, [rsp + 0x20]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40081df	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40081e4	    0xc74424180000	               mov dword [rsp + 0x18], 0	      1438	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7
0x40081ec	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      1439	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7
0x40081f4	    0xc74424200100	               mov dword [rsp + 0x20], 1	      1442	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7
0x40081fc	        0x89442444	             mov dword [rsp + 0x44], eax	      6840	decNumber.c	FUNCTION_11
0x4008200	      0xe8cb90ffff	             call sym.decSetCoeff.isra.3	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4008205	      0xf644241c20	           test byte [rsp + 0x1c], 0x20 	      1445	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x400820a	            0x750c	                           jne 0x4008218	      1445	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x400820c	    0x66837c244a01	                cmp word [rsp + 0x4a], 1	      1445	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x4008212	     0xf84f4010000	                            je 0x400840c	      1445	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x4008218	            0x8b0b	                    mov ecx, dword [rbx]	      1445	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x400821a	          0x83c106	                              add ecx, 6	      1465	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x400821d	          0x394d00	                    cmp dword [rbp], ecx	      1465	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4008220	         0xf4d4d00	                 cmovge ecx, dword [rbp]	      1465	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4008224	        0x448d7103	                     lea r14d, [rcx + 3]	      1465	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4008228	        0x4183fe31	                          cmp r14d, 0x31	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x400822c	     0xf8e8e000000	                           jle 0x40082c0	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4008232	          0x83c105	                              add ecx, 5	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4008235	      0xba56555555	                     mov edx, 0x55555556	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x400823a	            0x89c8	                            mov eax, ecx	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x400823c	          0xc1f91f	                           sar ecx, 0x1f	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x400823f	            0xf7ea	                                imul edx	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4008241	            0x29ca	                            sub edx, ecx	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4008243	        0x8d7c120a	              lea edi, [rdx + rdx + 0xa]	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x4008247	          0x83ff24	                           cmp edi, 0x24	      1467	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9
0x400824a	     0xf8687000000	                           jbe 0x40082d7	      1467	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9
0x4008250	      0xe800000000	                          call 0x4008255	      1468	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9
0x4008255	          0x4885c0	                           test rax, rax	      1469	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9	IF_10
0x4008258	          0x4989c5	                            mov r13, rax	      1468	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9
0x400825b	          0x4989c7	                            mov r15, rax	      1468	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9
0x400825e	     0xf840c020000	                            je 0x4008470	      1469	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9	IF_10
0x4008264	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      1478	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_14
0x4008269	      0x488d542420	                   lea rdx, [rsp + 0x20]	      1478	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_14
0x400826e	          0x4889de	                            mov rsi, rbx	      1478	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_14
0x4008271	          0x4c89ff	                            mov rdi, r15	      1478	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_14
0x4008274	      0x4489742420	            mov dword [rsp + 0x20], r14d	      1474	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4008279	    0xc74424243f42	        mov dword [rsp + 0x24], 0xf423f 	      1475	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4008281	    0xc7442428c1bd	     mov dword [rsp + 0x28], 0xfff0bdc1 	      1476	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4008289	      0xc644243800	                mov byte [rsp + 0x38], 0	      1477	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x400828e	      0xe88df5ffff	                        call sym.decLnOp	      1478	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_14
0x4008293	        0x8b5c2410	            mov ebx, dword [rsp + 0x10] 	      1482	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_11
0x4008297	          0xf6c3dd	                           test bl, 0xdd	      1482	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_11
0x400829a	            0x744c	                            je 0x40082e8	      1482	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_11
0x400829c	    0xf7c300000040	                    test ebx, 0x40000000	      1482	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_11
0x40082a2	            0x7544	                           jne 0x40082e8	      1482	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_11
0x40082a4	          0x4c89ef	                            mov rdi, r13	      1512	decNumber.c	FUNCTION_68	FUNCTION_22
0x40082a7	      0xe800000000	                          call 0x40082ac	      1512	decNumber.c	FUNCTION_68	FUNCTION_22
0x40082ac	          0x4889ea	                            mov rdx, rbp	      1518	decNumber.c	FUNCTION_68	FUNCTION_22	CALL_21
0x40082af	            0x89de	                            mov esi, ebx	      1518	decNumber.c	FUNCTION_68	FUNCTION_22	CALL_21
0x40082b1	          0x4c89e7	                            mov rdi, r12	      1518	decNumber.c	FUNCTION_68	FUNCTION_22	CALL_21
0x40082b4	      0xe81785ffff	                      call sym.decStatus	      1518	decNumber.c	FUNCTION_68	FUNCTION_22	CALL_21
0x40082b9	      0xe9b5feffff	                           jmp 0x4008173	      1518	decNumber.c	FUNCTION_68	FUNCTION_22	CALL_21
0x40082be	            0x6690	                                     nop	      1518	decNumber.c	FUNCTION_68	FUNCTION_22	CALL_21
0x40082c0	          0x4963c6	                        movsxd rax, r14d	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x40082c3	     0xfb680000000	                   movzx eax, byte [rax]	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x40082ca	        0x8d7c000a	              lea edi, [rax + rax + 0xa]	      1466	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_13
0x40082ce	          0x83ff24	                           cmp edi, 0x24	      1467	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9
0x40082d1	     0xf8779ffffff	                            ja 0x4008250	      1467	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9
0x40082d7	      0x4c8d7c2460	                   lea r15, [rsp + 0x60]	      1400	decNumber.c	FUNCTION_68	FUNCTION_22
0x40082dc	          0x4531ed	                          xor r13d, r13d	      1399	decNumber.c	FUNCTION_68	FUNCTION_22
0x40082df	      0xe980ffffff	                           jmp 0x4008264	      1399	decNumber.c	FUNCTION_68	FUNCTION_22
0x40082e4	         0xf1f4000	                         nop dword [rax]	      1399	decNumber.c	FUNCTION_68	FUNCTION_22
0x40082e8	      0x41f6470870	               test byte [r15 + 8], 0x70	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x40082ed	     0xf85cd000000	                           jne 0x40083c0	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x40082f3	    0x6641837f0a00	                 cmp word [r15 + 0xa], 0	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x40082f9	            0x750a	                           jne 0x4008305	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x40082fb	        0x41833f01	                      cmp dword [r15], 1	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x40082ff	     0xf84bb000000	                            je 0x40083c0	      1483	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_15
0x4008305	          0x8b4500	                    mov eax, dword [rbp]	      1488	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4008308	          0x8d7003	                      lea esi, [rax + 3]	      1488	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x400830b	          0x83fe31	                           cmp esi, 0x31	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x400830e	     0xf8fdc000000	                            jg 0x40083f0	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4008314	          0x4863c6	                         movsxd rax, esi	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4008317	     0xfb680000000	                   movzx eax, byte [rax]	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x400831e	        0x8d7c000a	              lea edi, [rax + rax + 0xa]	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4008322	          0x83ff24	                           cmp edi, 0x24	      1490	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13
0x4008325	     0xf86b5000000	                           jbe 0x40083e0	      1490	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13
0x400832b	        0x89742408	                mov dword [rsp + 8], esi	      1490	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13
0x400832f	      0xe800000000	                          call 0x4008334	      1491	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13
0x4008334	          0x4885c0	                           test rax, rax	      1492	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13	IF_14
0x4008337	          0x4989c6	                            mov r14, rax	      1491	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13
0x400833a	          0x4989c2	                            mov r10, rax	      1491	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13
0x400833d	        0x8b742408	                mov esi, dword [rsp + 8]	      1492	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13	IF_14
0x4008341	     0xf8439010000	                            je 0x4008480	      1492	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13	IF_14
0x4008347	        0x89742420	             mov dword [rsp + 0x20], esi	      1505	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x400834b	      0x488d4c2414	                   lea rcx, [rsp + 0x14]	      1506	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_19
0x4008350	      0x488d542420	                   lea rdx, [rsp + 0x20]	      1506	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_19
0x4008355	      0x488d742440	                   lea rsi, [rsp + 0x40]	      1506	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_19
0x400835a	          0x4c89d7	                            mov rdi, r10	      1506	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_19
0x400835d	      0xb80a000000	                            mov eax, 0xa	      1501	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4008362	      0x4c89542408	                mov qword [rsp + 8], r10	      1506	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_19
0x4008367	      0xc644244800	                mov byte [rsp + 0x48], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x400836c	    0xc74424440000	               mov dword [rsp + 0x44], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4008374	      0x668944244a	               mov word [rsp + 0x4a], ax	      1501	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4008379	    0xc74424400200	               mov dword [rsp + 0x40], 2	      1503	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x4008381	      0xe89af4ffff	                        call sym.decLnOp	      1506	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_19
0x4008386	      0x4c8b542408	                mov r10, qword [rsp + 8]	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x400838b	          0x8b4500	                    mov eax, dword [rbp]	      1508	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x400838e	      0x4c8d4c2410	                    lea r9, [rsp + 0x10]	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x4008393	      0x488d4c2420	                   lea rcx, [rsp + 0x20]	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x4008398	    0x41b880000000	                           mov r8d, 0x80	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x400839e	          0x4c89fe	                            mov rsi, r15	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x40083a1	          0x4c89e7	                            mov rdi, r12	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x40083a4	          0x4c89d2	                            mov rdx, r10	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x40083a7	        0x89442420	             mov dword [rsp + 0x20], eax	      1508	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1
0x40083ab	      0xe860d9ffff	                    call sym.decDivideOp	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x40083b0	        0x8b5c2410	            mov ebx, dword [rsp + 0x10] 	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x40083b4	      0xe9a2fdffff	                           jmp 0x400815b	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x40083b9	     0xf1f80000000	                         nop dword [rax]	      1509	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_20
0x40083c0	          0x4c89fe	                            mov rsi, r15	      1484	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_16
0x40083c3	          0x4c89e7	                            mov rdi, r12	      1484	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_16
0x40083c6	          0x4531f6	                          xor r14d, r14d	      1402	decNumber.c	FUNCTION_68	FUNCTION_22
0x40083c9	      0xe800000000	                          call 0x40083ce	      1484	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_16
0x40083ce	        0x8b5c2410	            mov ebx, dword [rsp + 0x10] 	      1484	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12	CALL_16
0x40083d2	      0xe984fdffff	                           jmp 0x400815b	      1485	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12
0x40083d7	    0x660f1f840000	                    nop word [rax + rax]	      1485	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_12
0x40083e0	    0x4c8d94249000	                   lea r10, [rsp + 0x90]	      1403	decNumber.c	FUNCTION_68	FUNCTION_22
0x40083e8	          0x4531f6	                          xor r14d, r14d	      1402	decNumber.c	FUNCTION_68	FUNCTION_22
0x40083eb	      0xe957ffffff	                           jmp 0x4008347	      1402	decNumber.c	FUNCTION_68	FUNCTION_22
0x40083f0	          0x8d4805	                      lea ecx, [rax + 5]	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x40083f3	      0xba56555555	                     mov edx, 0x55555556	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x40083f8	            0x89c8	                            mov eax, ecx	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x40083fa	            0xf7ea	                                imul edx	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x40083fc	            0x89c8	                            mov eax, ecx	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x40083fe	          0xc1f81f	                           sar eax, 0x1f	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4008401	            0x29c2	                            sub edx, eax	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4008403	        0x8d7c120a	              lea edi, [rdx + rdx + 0xa]	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x4008407	      0xe916ffffff	                           jmp 0x4008322	      1489	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	CALL_17
0x400840c	        0x8b742444	            mov esi, dword [rsp + 0x44] 	      1450	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8	CALL_11
0x4008410	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      1450	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8	CALL_11
0x4008415	      0xe800000000	                          call 0x400841a	      1450	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8	CALL_11
0x400841a	       0xfb6442448	           movzx eax, byte [rsp + 0x48] 	      6839	decNumber.c	FUNCTION_11
0x400841f	        0x8b4c2440	            mov ecx, dword [rsp + 0x40] 	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4008423	      0x488d54244a	                   lea rdx, [rsp + 0x4a]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4008428	      0x4c8d4c2410	                    lea r9, [rsp + 0x10]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400842d	      0x4c8d442418	                    lea r8, [rsp + 0x18]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4008432	          0x4889ee	                            mov rsi, rbp	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4008435	          0x4c89e7	                            mov rdi, r12	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4008438	    0xc74424180000	               mov dword [rsp + 0x18], 0	      1451	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x4008440	      0x4188442408	                  mov byte [r12 + 8], al	      6839	decNumber.c	FUNCTION_11
0x4008445	        0x8b442444	            mov eax, dword [rsp + 0x44] 	      6840	decNumber.c	FUNCTION_11
0x4008449	      0x4189442404	                mov dword [r12 + 4], eax	      6840	decNumber.c	FUNCTION_11
0x400844e	      0xe87d8effff	             call sym.decSetCoeff.isra.3	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4008453	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      1453	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x4008458	      0x488d542418	                   lea rdx, [rsp + 0x18]	      1453	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x400845d	          0x4889ee	                            mov rsi, rbp	      1453	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x4008460	          0x4c89e7	                            mov rdi, r12	      1453	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x4008463	      0xe8f899ffff	                    call sym.decFinalize	      1453	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x4008468	      0xe9e4fcffff	                           jmp 0x4008151	      1453	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x400846d	           0xf1f00	                         nop dword [rax]	      1453	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_7	IF_8
0x4008470	        0x8b5c2410	            mov ebx, dword [rsp + 0x10] 	      1470	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9	IF_10
0x4008474	          0x83cb10	                            or ebx, 0x10	      1470	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9	IF_10
0x4008477	        0x895c2410	             mov dword [rsp + 0x10], ebx	      1470	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9	IF_10
0x400847b	      0xe924feffff	                           jmp 0x40082a4	      1471	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_9	IF_10
0x4008480	          0x83cb10	                            or ebx, 0x10	      1493	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13	IF_14
0x4008483	        0x895c2410	             mov dword [rsp + 0x10], ebx	      1493	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13	IF_14
0x4008487	      0xe918feffff	                           jmp 0x40082a4	      1494	decNumber.c	FUNCTION_68	FUNCTION_22	IF_2	DO_1	IF_13	IF_14
0x400848c	      0xe800000000	                          call 0x4008491	      1523	decNumber.c	FUNCTION_68	FUNCTION_22
decNumberCompareTotal	ELSE,0:DO,0:CALL,2:IF,1:functions,0:SWITCH,0:WHILE,0:FOR,0	27
0x4003b50	              0x55	                                push rbp	       906	decNumber.c	FUNCTION_68	FUNCTION_13
0x4003b51	              0x53	                                push rbx	       906	decNumber.c	FUNCTION_68	FUNCTION_13
0x4003b52	    0x41b804000000	                              mov r8d, 4	       908	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_1
0x4003b58	          0x4889fb	                            mov rbx, rdi	       906	decNumber.c	FUNCTION_68	FUNCTION_13
0x4003b5b	          0x4889cd	                            mov rbp, rcx	       906	decNumber.c	FUNCTION_68	FUNCTION_13
0x4003b5e	        0x4883ec18	                           sub rsp, 0x18	       906	decNumber.c	FUNCTION_68	FUNCTION_13
0x4003b62	      0x4c8d4c2404	                       lea r9, [rsp + 4]	       908	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_1
0x4003b67	    0xc74424040000	                  mov dword [rsp + 4], 0	       907	decNumber.c	FUNCTION_68	FUNCTION_13
0x4003b6f	    0x64488b042528	                mov rax, qword fs:[0x28]	       906	decNumber.c	FUNCTION_68	FUNCTION_13
0x4003b78	      0x4889442408	                mov qword [rsp + 8], rax	       906	decNumber.c	FUNCTION_68	FUNCTION_13
0x4003b7d	            0x31c0	                            xor eax, eax	       906	decNumber.c	FUNCTION_68	FUNCTION_13
0x4003b7f	      0xe88cfaffff	                   call sym.decCompareOp	       908	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_1
0x4003b84	        0x8b742404	                mov esi, dword [rsp + 4]	       909	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_2
0x4003b88	            0x85f6	                           test esi, esi	       909	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_2
0x4003b8a	            0x740b	                            je 0x4003b97	       909	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_2
0x4003b8c	          0x4889ea	                            mov rdx, rbp	       909	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_2
0x4003b8f	          0x4889df	                            mov rdi, rbx	       909	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_2
0x4003b92	      0xe839ccffff	                      call sym.decStatus	       909	decNumber.c	FUNCTION_68	FUNCTION_13	CALL_2
0x4003b97	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x4003b9c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x4003ba5	          0x4889d8	                            mov rax, rbx	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x4003ba8	            0x7507	                           jne 0x4003bb1	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x4003baa	        0x4883c418	                           add rsp, 0x18	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x4003bae	              0x5b	                                 pop rbx	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x4003baf	              0x5d	                                 pop rbp	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x4003bb0	              0xc3	                                     ret	       911	decNumber.c	FUNCTION_68	FUNCTION_13
0x4003bb1	      0xe800000000	                          call 0x4003bb6	       911	decNumber.c	FUNCTION_68	FUNCTION_13
decSetOverflow	ELSE,1:DO,0:CALL,3:IF,6:functions,0:SWITCH,1:WHILE,0:FOR,0	71
0x40003a0	         0xfb64708	               movzx eax, byte [rdi + 8]	      7344	decNumber.c	FUNCTION_16
0x40003a4	          0x4189c0	                            mov r8d, eax	      7344	decNumber.c	FUNCTION_16
0x40003a7	        0x4183e080	                     and r8d, 0xffffff80	      7344	decNumber.c	FUNCTION_16
0x40003ab	      0x66837f0a00	                 cmp word [rdi + 0xa], 0	      7346	decNumber.c	FUNCTION_16	IF_1	CALL_1
0x40003b0	            0x7509	                           jne 0x40003bb	      7346	decNumber.c	FUNCTION_16	IF_1	CALL_1
0x40003b2	          0x833f01	                      cmp dword [rdi], 1	      7346	decNumber.c	FUNCTION_16	IF_1	CALL_1
0x40003b5	     0xf84a5000000	                            je 0x4000460	      7346	decNumber.c	FUNCTION_16	IF_1	CALL_1
0x40003bb	        0xc6470800	                   mov byte [rdi + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40003bf	          0x8b460c	              mov eax, dword [rsi + 0xc]	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x40003c2	          0x4531d2	                          xor r10d, r10d	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40003c5	    0xc74704000000	                  mov dword [rdi + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40003cc	    0xc70701000000	                      mov dword [rdi], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40003d2	      0x664489570a	              mov word [rdi + 0xa], r10w	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40003d7	          0x83f805	                              cmp eax, 5	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x40003da	            0x7410	                            je 0x40003ec	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x40003dc	            0x7662	                           jbe 0x4000440	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x40003de	          0x83f806	                              cmp eax, 6	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x40003e1	     0xf84a9000000	                            je 0x4000490	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x40003e7	          0x83f807	                              cmp eax, 7	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x40003ea	            0x755d	                           jne 0x4000449	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x40003ec	            0x8b06	                    mov eax, dword [rsi]	      7390	decNumber.c	ELSE_1	FUNCTION_17
0x40003ee	        0x488d4f0a	                    lea rcx, [rdi + 0xa]	      7393	decNumber.c	ELSE_1	FUNCTION_17	FOR_1
0x40003f2	          0x83f803	                              cmp eax, 3	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x40003f5	            0x8907	                    mov dword [rdi], eax	      7391	decNumber.c	ELSE_1	FUNCTION_17
0x40003f7	            0x7e1e	                           jle 0x4000417	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x40003f9	     0xf1f80000000	                         nop dword [rax]	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x4000400	    0x41b9e7030000	                          mov r9d, 0x3e7	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x4000406	          0x83e803	                              sub eax, 3	      7399	decNumber.c	FUNCTION_17	FOR_1	ELSE_1
0x4000409	        0x4883c102	                              add rcx, 2	      7393	decNumber.c	ELSE_1	FUNCTION_17	FOR_1
0x400040d	      0x66448949fe	                 mov word [rcx - 2], r9w	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x4000412	          0x83f803	                              cmp eax, 3	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x4000415	            0x7fe9	                            jg 0x4000400	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x4000417	            0x4898	                                    cdqe	      7396	decNumber.c	FUNCTION_17	FOR_1
0x4000419	    0x8b0485000000	                  mov eax, dword [rax*4]	      7396	decNumber.c	FUNCTION_17	FOR_1
0x4000420	          0x83e801	                              sub eax, 1	      7396	decNumber.c	FUNCTION_17	FOR_1
0x4000423	          0x668901	                      mov word [rcx], ax	      7396	decNumber.c	FUNCTION_17	FOR_1
0x4000426	        0xc6470800	                   mov byte [rdi + 8], 0	      7401	decNumber.c	FUNCTION_17	ELSE_1
0x400042a	          0x8b4604	                mov eax, dword [rsi + 4]	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400042d	            0x2b06	                    sub eax, dword [rsi]	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400042f	        0x44884708	                 mov byte [rdi + 8], r8b	      7374	decNumber.c	FUNCTION_16	IF_6
0x4000433	          0x83c001	                              add eax, 1	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x4000436	          0x894704	                mov dword [rdi + 4], eax	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x4000439	    0x810a200a0000	                   or dword [rdx], 0xa20	      7377	decNumber.c	FUNCTION_16	ELSE_1
0x400043f	              0xc3	                                     ret	      7377	decNumber.c	FUNCTION_16	ELSE_1
0x4000440	            0x85c0	                           test eax, eax	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x4000442	            0x7505	                           jne 0x4000449	      7357	decNumber.c	FUNCTION_16	SWITCH_1
0x4000444	          0x4584c0	                           test r8b, r8b	      7365	decNumber.c	FUNCTION_16	SWITCH_1	IF_4
0x4000447	            0x75a3	                           jne 0x40003ec	      7365	decNumber.c	FUNCTION_16	SWITCH_1	IF_4
0x4000449	        0x4183c840	                            or r8d, 0x40	      7376	decNumber.c	FUNCTION_16	ELSE_1
0x400044d	        0x44884708	                 mov byte [rdi + 8], r8b	      7376	decNumber.c	FUNCTION_16	ELSE_1
0x4000451	    0x810a200a0000	                   or dword [rdx], 0xa20	      7377	decNumber.c	FUNCTION_16	ELSE_1
0x4000457	              0xc3	                                     ret	      7377	decNumber.c	FUNCTION_16	ELSE_1
0x4000458	     0xf1f84000000	                   nop dword [rax + rax]	      7377	decNumber.c	FUNCTION_16	ELSE_1
0x4000460	            0xa870	                           test al, 0x70	      7346	decNumber.c	FUNCTION_16	IF_1	CALL_1
0x4000462	     0xf8553ffffff	                           jne 0x40003bb	      7346	decNumber.c	FUNCTION_16	IF_1	CALL_1
0x4000468	        0x807e1800	                cmp byte [rsi + 0x18], 0	      7348	decNumber.c	FUNCTION_16	IF_1	IF_2
0x400046c	          0x8b4604	                mov eax, dword [rsi + 4]	      7347	decNumber.c	FUNCTION_16	IF_1
0x400046f	            0x7405	                            je 0x4000476	      7348	decNumber.c	FUNCTION_16	IF_1	IF_2
0x4000471	            0x2b06	                    sub eax, dword [rsi]	      7348	decNumber.c	FUNCTION_16	IF_1	IF_2
0x4000473	          0x83c001	                              add eax, 1	      7348	decNumber.c	FUNCTION_16	IF_1	IF_2
0x4000476	          0x3b4704	                cmp eax, dword [rdi + 4]	      7349	decNumber.c	FUNCTION_16	IF_1	IF_3
0x4000479	            0x7d0d	                           jge 0x4000488	      7349	decNumber.c	FUNCTION_16	IF_1	IF_3
0x400047b	          0x894704	                mov dword [rdi + 4], eax	      7350	decNumber.c	FUNCTION_16	IF_1	IF_3
0x400047e	    0x810a00040000	                   or dword [rdx], 0x400	      7351	decNumber.c	FUNCTION_16	IF_1	IF_3
0x4000484	              0xc3	                                     ret	      7351	decNumber.c	FUNCTION_16	IF_1	IF_3
0x4000485	           0xf1f00	                         nop dword [rax]	      7351	decNumber.c	FUNCTION_16	IF_1	IF_3
0x4000488	            0xf3c3	                                     ret	      7351	decNumber.c	FUNCTION_16	IF_1	IF_3
0x400048a	    0x660f1f440000	                    nop word [rax + rax]	      7351	decNumber.c	FUNCTION_16	IF_1	IF_3
0x4000490	          0x4584c0	                           test r8b, r8b	      7368	decNumber.c	FUNCTION_16	SWITCH_1	IF_5
0x4000493	     0xf8453ffffff	                            je 0x40003ec	      7368	decNumber.c	FUNCTION_16	SWITCH_1	IF_5
0x4000499	            0xebae	                           jmp 0x4000449	      7368	decNumber.c	FUNCTION_16	SWITCH_1	IF_5
decNumberAdd	ELSE,0:DO,0:CALL,3:IF,1:functions,0:SWITCH,0:WHILE,0:FOR,0	27
0x4005450	              0x55	                                push rbp	       771	decNumber.c	FUNCTION_68	FUNCTION_9
0x4005451	              0x53	                                push rbx	       771	decNumber.c	FUNCTION_68	FUNCTION_9
0x4005452	          0x4531c0	                            xor r8d, r8d	       773	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_1
0x4005455	          0x4889fb	                            mov rbx, rdi	       771	decNumber.c	FUNCTION_68	FUNCTION_9
0x4005458	          0x4889cd	                            mov rbp, rcx	       771	decNumber.c	FUNCTION_68	FUNCTION_9
0x400545b	        0x4883ec18	                           sub rsp, 0x18	       771	decNumber.c	FUNCTION_68	FUNCTION_9
0x400545f	      0x4c8d4c2404	                       lea r9, [rsp + 4]	       773	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_1
0x4005464	    0xc74424040000	                  mov dword [rsp + 4], 0	       772	decNumber.c	FUNCTION_68	FUNCTION_9
0x400546c	    0x64488b042528	                mov rax, qword fs:[0x28]	       771	decNumber.c	FUNCTION_68	FUNCTION_9
0x4005475	      0x4889442408	                mov qword [rsp + 8], rax	       771	decNumber.c	FUNCTION_68	FUNCTION_9
0x400547a	            0x31c0	                            xor eax, eax	       771	decNumber.c	FUNCTION_68	FUNCTION_9
0x400547c	      0xe86ff7ffff	                       call sym.decAddOp	       773	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_1
0x4005481	        0x8b742404	                mov esi, dword [rsp + 4]	       774	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_2
0x4005485	            0x85f6	                           test esi, esi	       774	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_2
0x4005487	            0x740b	                            je 0x4005494	       774	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_2
0x4005489	          0x4889ea	                            mov rdx, rbp	       774	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_2
0x400548c	          0x4889df	                            mov rdi, rbx	       774	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_2
0x400548f	      0xe83cb3ffff	                      call sym.decStatus	       774	decNumber.c	FUNCTION_68	FUNCTION_9	CALL_2
0x4005494	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       779	decNumber.c	FUNCTION_68	FUNCTION_9
0x4005499	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       779	decNumber.c	FUNCTION_68	FUNCTION_9
0x40054a2	          0x4889d8	                            mov rax, rbx	       779	decNumber.c	FUNCTION_68	FUNCTION_9
0x40054a5	            0x7507	                           jne 0x40054ae	       779	decNumber.c	FUNCTION_68	FUNCTION_9
0x40054a7	        0x4883c418	                           add rsp, 0x18	       779	decNumber.c	FUNCTION_68	FUNCTION_9
0x40054ab	              0x5b	                                 pop rbx	       779	decNumber.c	FUNCTION_68	FUNCTION_9
0x40054ac	              0x5d	                                 pop rbp	       779	decNumber.c	FUNCTION_68	FUNCTION_9
0x40054ad	              0xc3	                                     ret	       779	decNumber.c	FUNCTION_68	FUNCTION_9
0x40054ae	      0xe800000000	                          call 0x40054b3	       779	decNumber.c	FUNCTION_68	FUNCTION_9
decNumberCopy	ELSE,0:DO,0:CALL,2:IF,3:functions,0:SWITCH,0:WHILE,0:FOR,1	43
0x4003360	          0x4839f7	                            cmp rdi, rsi	      3352	decNumber.c	FUNCTION_68	FUNCTION_52	IF_2
0x4003363	            0x746f	                            je 0x40033d4	      3352	decNumber.c	FUNCTION_68	FUNCTION_52	IF_2
0x4003365	         0xfb64608	               movzx eax, byte [rsi + 8]	      3358	decNumber.c	FUNCTION_68	FUNCTION_52
0x4003369	          0x884708	                  mov byte [rdi + 8], al	      3358	decNumber.c	FUNCTION_68	FUNCTION_52
0x400336c	          0x8b4604	                mov eax, dword [rsi + 4]	      3359	decNumber.c	FUNCTION_68	FUNCTION_52
0x400336f	          0x894704	                mov dword [rdi + 4], eax	      3359	decNumber.c	FUNCTION_68	FUNCTION_52
0x4003372	            0x8b06	                    mov eax, dword [rsi]	      3360	decNumber.c	FUNCTION_68	FUNCTION_52
0x4003374	            0x8907	                    mov dword [rdi], eax	      3360	decNumber.c	FUNCTION_68	FUNCTION_52
0x4003376	         0xfb7460a	            movzx eax, word [rsi + 0xa] 	      3361	decNumber.c	FUNCTION_68	FUNCTION_52
0x400337a	        0x6689470a	                mov word [rdi + 0xa], ax	      3361	decNumber.c	FUNCTION_68	FUNCTION_52
0x400337e	          0x486306	                 movsxd rax, dword [rsi]	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x4003381	          0x83f803	                              cmp eax, 3	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x4003384	            0x7e4e	                           jle 0x40033d4	      3362	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x4003386	          0x83f831	                           cmp eax, 0x31	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4003389	        0x488d4f0c	                    lea rcx, [rdi + 0xc]	      3367	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3
0x400338d	        0x4c8d4e0a	                     lea r9, [rsi + 0xa]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4003391	            0x7e4d	                           jle 0x40033e0	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4003393	        0x448d4002	                      lea r8d, [rax + 2]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x4003397	      0xba56555555	                     mov edx, 0x55555556	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400339c	          0x4489c0	                            mov eax, r8d	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x400339f	            0xf7ea	                                imul edx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x40033a1	          0x4489c0	                            mov eax, r8d	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x40033a4	          0xc1f81f	                           sar eax, 0x1f	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x40033a7	            0x29c2	                            sub edx, eax	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x40033a9	          0x4863d2	                         movsxd rdx, edx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x40033ac	          0x4801d2	                            add rdx, rdx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x40033af	          0x4c01ca	                             add rdx, r9	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x40033b2	        0x4883c60c	                            add rsi, 0xc	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40033b6	          0x4839f2	                            cmp rdx, rsi	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40033b9	            0x7619	                           jbe 0x40033d4	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40033bb	       0xf1f440000	                   nop dword [rax + rax]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40033c0	           0xfb706	                   movzx eax, word [rsi]	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40033c3	        0x4883c602	                              add rsi, 2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40033c7	        0x4883c102	                              add rcx, 2	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40033cb	        0x668941fe	                  mov word [rcx - 2], ax	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40033cf	          0x4839f2	                            cmp rdx, rsi	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40033d2	            0x77ec	                            ja 0x40033c0	      3369	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	FOR_1
0x40033d4	          0x4889f8	                            mov rax, rdi	      3372	decNumber.c	FUNCTION_68	FUNCTION_52
0x40033d7	              0xc3	                                     ret	      3372	decNumber.c	FUNCTION_68	FUNCTION_52
0x40033d8	     0xf1f84000000	                   nop dword [rax + rax]	      3372	decNumber.c	FUNCTION_68	FUNCTION_52
0x40033e0	     0xfb690000000	                   movzx edx, byte [rax]	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x40033e7	          0x4801d2	                            add rdx, rdx	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
0x40033ea	            0xebc3	                           jmp 0x40033af	      3368	decNumber.c	FUNCTION_68	FUNCTION_52	IF_3	CALL_2
decNumberToIntegralExact	ELSE,2:DO,0:CALL,8:IF,5:functions,0:SWITCH,0:WHILE,0:FOR,0	69
0x4009af0	              0x55	                                push rbp	      3173	decNumber.c	FUNCTION_68	FUNCTION_47
0x4009af1	              0x53	                                push rbx	      3173	decNumber.c	FUNCTION_68	FUNCTION_47
0x4009af2	          0x4889d5	                            mov rbp, rdx	      3173	decNumber.c	FUNCTION_68	FUNCTION_47
0x4009af5	          0x4889fb	                            mov rbx, rdi	      3173	decNumber.c	FUNCTION_68	FUNCTION_47
0x4009af8	        0x4883ec68	                           sub rsp, 0x68	      3173	decNumber.c	FUNCTION_68	FUNCTION_47
0x4009afc	    0x64488b042528	                mov rax, qword fs:[0x28]	      3173	decNumber.c	FUNCTION_68	FUNCTION_47
0x4009b05	      0x4889442458	             mov qword [rsp + 0x58], rax	      3173	decNumber.c	FUNCTION_68	FUNCTION_47
0x4009b0a	            0x31c0	                            xor eax, eax	      3173	decNumber.c	FUNCTION_68	FUNCTION_47
0x4009b0c	         0xfb64608	               movzx eax, byte [rsi + 8]	      3183	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2
0x4009b10	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      3176	decNumber.c	FUNCTION_68	FUNCTION_47
0x4009b18	            0xa870	                           test al, 0x70	      3183	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2
0x4009b1a	            0x743c	                            je 0x4009b58	      3183	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2
0x4009b1c	            0xa840	                           test al, 0x40	      3184	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_3
0x4009b1e	            0x7560	                           jne 0x4009b80	      3184	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_3
0x4009b20	      0x4c8d44241c	                    lea r8, [rsp + 0x1c]	      3185	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_4
0x4009b25	          0x4889d1	                            mov rcx, rdx	      3185	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_4
0x4009b28	            0x31d2	                            xor edx, edx	      3185	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_4
0x4009b2a	      0xe8c198ffff	                 call sym.decNaNs.isra.6	      3185	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_4
0x4009b2f	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      3185	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_4
0x4009b33	            0x85f6	                           test esi, esi	      3198	decNumber.c	FUNCTION_68	FUNCTION_47	CALL_8
0x4009b35	          0x4889d8	                            mov rax, rbx	      3199	decNumber.c	FUNCTION_68	FUNCTION_47
0x4009b38	            0x742a	                            je 0x4009b64	      3198	decNumber.c	FUNCTION_68	FUNCTION_47	CALL_8
0x4009b3a	          0x4889ea	                            mov rdx, rbp	      3198	decNumber.c	FUNCTION_68	FUNCTION_47	CALL_8
0x4009b3d	          0x4889df	                            mov rdi, rbx	      3198	decNumber.c	FUNCTION_68	FUNCTION_47	CALL_8
0x4009b40	      0x48895c2408	                mov qword [rsp + 8], rbx	      3198	decNumber.c	FUNCTION_68	FUNCTION_47	CALL_8
0x4009b45	      0xe8866cffff	                      call sym.decStatus	      3198	decNumber.c	FUNCTION_68	FUNCTION_47	CALL_8
0x4009b4a	      0x488b442408	                mov rax, qword [rsp + 8]	      3198	decNumber.c	FUNCTION_68	FUNCTION_47	CALL_8
0x4009b4f	            0xeb13	                           jmp 0x4009b64	      3198	decNumber.c	FUNCTION_68	FUNCTION_47	CALL_8
0x4009b51	     0xf1f80000000	                         nop dword [rax]	      3198	decNumber.c	FUNCTION_68	FUNCTION_47	CALL_8
0x4009b58	          0x8b5604	                mov edx, dword [rsi + 4]	      3189	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_5
0x4009b5b	            0x85d2	                           test edx, edx	      3189	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_5
0x4009b5d	            0x7831	                            js 0x4009b90	      3189	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_5
0x4009b5f	      0xe800000000	                          call 0x4009b64	      3189	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_5
0x4009b64	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	      3200	decNumber.c	FUNCTION_68	FUNCTION_47
0x4009b69	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3200	decNumber.c	FUNCTION_68	FUNCTION_47
0x4009b72	     0xf8584000000	                           jne 0x4009bfc	      3200	decNumber.c	FUNCTION_68	FUNCTION_47
0x4009b78	        0x4883c468	                           add rsp, 0x68	      3200	decNumber.c	FUNCTION_68	FUNCTION_47
0x4009b7c	              0x5b	                                 pop rbx	      3200	decNumber.c	FUNCTION_68	FUNCTION_47
0x4009b7d	              0x5d	                                 pop rbp	      3200	decNumber.c	FUNCTION_68	FUNCTION_47
0x4009b7e	              0xc3	                                     ret	      3200	decNumber.c	FUNCTION_68	FUNCTION_47
0x4009b7f	              0x90	                                     nop	      3200	decNumber.c	FUNCTION_68	FUNCTION_47
0x4009b80	      0xe800000000	                          call 0x4009b85	      3184	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_3
0x4009b85	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      3184	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_3
0x4009b89	            0xeba8	                           jmp 0x4009b33	      3184	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_3
0x4009b8b	       0xf1f440000	                   nop dword [rax + rax]	      3184	decNumber.c	FUNCTION_68	FUNCTION_47	IF_2	CALL_3
0x4009b90	        0x488b4500	                    mov rax, qword [rbp]	      3191	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x4009b94	      0x488d4c2420	                   lea rcx, [rsp + 0x20]	      3195	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_7
0x4009b99	      0x488d542440	                   lea rdx, [rsp + 0x40]	      3195	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_7
0x4009b9e	      0xc644244800	                mov byte [rsp + 0x48], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009ba3	    0xc74424440000	               mov dword [rsp + 0x44], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009bab	    0xc74424400100	               mov dword [rsp + 0x40], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009bb3	      0x4889442420	             mov qword [rsp + 0x20], rax	      3191	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x4009bb8	        0x488b4508	                mov rax, qword [rbp + 8]	      3191	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x4009bbc	      0x4889442428	             mov qword [rsp + 0x28], rax	      3191	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x4009bc1	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      3191	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x4009bc5	      0x4889442430	             mov qword [rsp + 0x30], rax	      3191	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x4009bca	          0x8b4518	            mov eax, dword [rbp + 0x18] 	      3191	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x4009bcd	    0xc74424300000	               mov dword [rsp + 0x30], 0	      3193	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x4009bd5	        0x89442438	             mov dword [rsp + 0x38], eax	      3191	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x4009bd9	            0x8b06	                    mov eax, dword [rsi]	      3192	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x4009bdb	        0x89442420	             mov dword [rsp + 0x20], eax	      3192	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x4009bdf	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009be1	      0x668944244a	               mov word [rsp + 0x4a], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009be6	      0xe800000000	                          call 0x4009beb	      3195	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2	CALL_7
0x4009beb	        0x8b742434	            mov esi, dword [rsp + 0x34] 	      3196	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x4009bef	         0xb74241c	              or esi, dword [rsp + 0x1c]	      3196	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x4009bf3	        0x8974241c	             mov dword [rsp + 0x1c], esi	      3196	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x4009bf7	      0xe937ffffff	                           jmp 0x4009b33	      3196	decNumber.c	FUNCTION_68	FUNCTION_47	ELSE_2
0x4009bfc	      0xe800000000	                          call 0x4009c01	      3200	decNumber.c	FUNCTION_68	FUNCTION_47
decMultiplyOp	ELSE,3:DO,1:CALL,16:IF,22:functions,0:SWITCH,0:WHILE,0:FOR,11	487
0x4003d80	            0x4157	                                push r15	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003d82	            0x4156	                                push r14	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003d84	          0x4989d2	                            mov r10, rdx	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003d87	            0x4155	                                push r13	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003d89	            0x4154	                                push r12	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003d8b	          0x4989fd	                            mov r13, rdi	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003d8e	              0x55	                                push rbp	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003d8f	              0x53	                                push rbx	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003d90	    0x4881ece80100	                          sub rsp, 0x1e8	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003d97	         0xfb65608	               movzx edx, byte [rsi + 8]	      4897	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003d9b	      0x410fb64208	               movzx eax, byte [r10 + 8]	      4897	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003da0	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003da5	      0x4889742408	                mov qword [rsp + 8], rsi	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003daa	    0x64488b1c2528	                mov rbx, qword fs:[0x28]	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003db3	    0x48899c24d801	            mov qword [rsp + 0x1d8], rbx	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003dbb	            0x31db	                            xor ebx, ebx	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003dbd	      0x4c89442410	              mov qword [rsp + 0x10], r8	      4833	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003dc2	    0xc744245c0000	               mov dword [rsp + 0x5c], 0	      4836	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003dca	            0x89d1	                            mov ecx, edx	      4897	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003dcc	            0x31c1	                            xor ecx, eax	      4897	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003dce	          0x83e180	                     and ecx, 0xffffff80	      4897	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003dd1	        0x884c2443	               mov byte [rsp + 0x43], cl	      4897	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003dd5	            0x89d1	                            mov ecx, edx	      4900	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x4003dd7	             0x9c1	                             or ecx, eax	      4900	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x4003dd9	          0xf6c170	                           test cl, 0x70	      4900	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x4003ddc	     0xf849e000000	                            je 0x4003e80	      4900	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x4003de2	          0x83e130	                           and ecx, 0x30	      4901	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3
0x4003de5	     0xf85d0030000	                           jne 0x40041bb	      4901	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3
0x4003deb	          0xf6c240	                           test dl, 0x40	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x4003dee	            0x7518	                           jne 0x4003e08	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x4003df0	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x4003df5	      0x66837b0a00	                 cmp word [rbx + 0xa], 0	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x4003dfa	            0x750c	                           jne 0x4003e08	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x4003dfc	          0x833b01	                      cmp dword [rbx], 1	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x4003dff	     0xf847e060000	                            je 0x4004483	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x4003e05	           0xf1f00	                         nop dword [rax]	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x4003e08	            0xa840	                           test al, 0x40	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x4003e0a	            0x751c	                           jne 0x4003e28	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x4003e0c	    0x6641837a0a00	                 cmp word [r10 + 0xa], 0	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x4003e12	            0x7514	                           jne 0x4003e28	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x4003e14	        0x41833a01	                      cmp dword [r10], 1	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x4003e18	            0x750e	                           jne 0x4003e28	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x4003e1a	            0xa870	                           test al, 0x70	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x4003e1c	     0xf846a060000	                            je 0x400448c	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x4003e22	    0x660f1f440000	                    nop word [rax + rax]	      4906	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_5
0x4003e28	       0xfb6442443	           movzx eax, byte [rsp + 0x43] 	      4910	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x4003e2d	          0x4531c9	                            xor r9d, r9d	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4003e30	    0x41c745040000	                  mov dword [r13 + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4003e38	    0x41c745000100	                      mov dword [r13], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4003e40	      0x6645894d0a	               mov word [r13 + 0xa], r9w	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4003e45	          0x83c840	                            or eax, 0x40	      4910	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x4003e48	        0x41884508	                  mov byte [r13 + 8], al	      4910	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2
0x4003e4c	    0x488b9c24d801	           mov rbx, qword [rsp + 0x1d8] 	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003e54	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003e5d	          0x4c89e8	                            mov rax, r13	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003e60	     0xf85a8060000	                           jne 0x400450e	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003e66	    0x4881c4e80100	                          add rsp, 0x1e8	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003e6d	              0x5b	                                 pop rbx	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003e6e	              0x5d	                                 pop rbp	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003e6f	            0x415c	                                 pop r12	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003e71	            0x415d	                                 pop r13	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003e73	            0x415e	                                 pop r14	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003e75	            0x415f	                                 pop r15	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003e77	              0xc3	                                     ret	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003e78	     0xf1f84000000	                   nop dword [rax + rax]	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003e80	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      4917	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x4003e85	          0x418b02	                    mov eax, dword [r10]	      4917	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x4003e88	          0x48632b	                 movsxd rbp, dword [rbx]	      4917	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x4003e8b	            0x39c5	                            cmp ebp, eax	      4917	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x4003e8d	     0xf8c15010000	                            jl 0x4003fa8	      4917	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x4003e93	          0x4c63f5	                         movsxd r14, ebp	      4917	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x4003e96	          0x4863e8	                         movsxd rbp, eax	      4917	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x4003e99	          0x83fd06	                              cmp ebp, 6	      4945	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003e9c	     0xf8e1a010000	                           jle 0x4003fbc	      4945	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003ea2	        0x418d7608	                      lea esi, [r14 + 8]	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003ea6	      0xbb398ee338	                     mov ebx, 0x38e38e39	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003eab	            0x89f0	                            mov eax, esi	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003ead	          0xc1fe1f	                           sar esi, 0x1f	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003eb0	            0xf7eb	                                imul ebx	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003eb2	            0xd1fa	                              sar edx, 1	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003eb4	            0x89d1	                            mov ecx, edx	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003eb6	            0x29f1	                            sub ecx, esi	      4947	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003eb8	          0x8d7508	                      lea esi, [rbp + 8]	      4948	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003ebb	            0x89f0	                            mov eax, esi	      4948	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003ebd	          0xc1fe1f	                           sar esi, 0x1f	      4948	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003ec0	            0xf7eb	                                imul ebx	      4948	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003ec2	            0x89d3	                            mov ebx, edx	      4948	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003ec4	            0xd1fb	                              sar ebx, 1	      4948	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003ec6	            0x29f3	                            sub ebx, esi	      4948	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003ec8	        0x448d1c19	                   lea r11d, [rcx + rbx]	      4949	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003ecc	          0xc1e102	                              shl ecx, 2	      4952	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003ecf	          0x83f928	                           cmp ecx, 0x28	      4953	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x4003ed2	     0xf8ff5020000	                            jg 0x40041cd	      4953	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x4003ed8	      0x4c8d642460	                   lea r12, [rsp + 0x60]	      4863	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003edd	          0x4531ff	                          xor r15d, r15d	      4863	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003ee0	    0x48c744242800	               mov qword [rsp + 0x28], 0	      4864	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003ee9	          0xc1e302	                              shl ebx, 2	      4956	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003eec	          0x83fb28	                           cmp ebx, 0x28	      4957	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x4003eef	     0xf8f5f050000	                            jg 0x4004454	      4957	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x4003ef5	    0x488d9c249000	                   lea rbx, [rsp + 0x90]	      4866	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003efd	            0x31d2	                            xor edx, edx	      4866	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003eff	    0x48c744243000	               mov qword [rsp + 0x30], 0	      4867	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003f08	    0x428d04dd0000	                        lea eax, [r11*8]	      4968	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003f10	      0x3da0000000	                           cmp eax, 0xa0	      4973	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_14
0x4003f15	     0xf8ffc040000	                            jg 0x4004417	      4973	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_14
0x4003f1b	          0x4584ff	                         test r15b, r15b	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x4003f1e	     0xf85dd040000	                           jne 0x4004401	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x4003f24	            0x84d2	                             test dl, dl	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x4003f26	     0xf85d5040000	                           jne 0x4004401	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x4003f2c	    0x4c8dbc243001	                  lea r15, [rsp + 0x130]	      4870	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003f34	    0x48c744242000	               mov qword [rsp + 0x20], 0	      4840	decNumber.c	FUNCTION_68	FUNCTION_66
0x4003f3d	      0x488b442408	                mov rax, qword [rsp + 8]	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x4003f42	          0x4585f6	                         test r14d, r14d	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x4003f45	          0x4c89e6	                            mov rsi, r12	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x4003f48	        0x488d780a	                    lea rdi, [rax + 0xa]	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x4003f4c	     0xf8eab020000	                           jle 0x40041fd	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x4003f52	    0x41c704240000	                      mov dword [r12], 0	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003f5a	          0x4c89e6	                            mov rsi, r12	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003f5d	           0xf1f00	                         nop dword [rax]	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003f60	      0xb900000000	                              mov ecx, 0	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003f65	          0x4531c0	                            xor r8d, r8d	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003f68	            0x31d2	                            xor edx, edx	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003f6a	           0xfb707	                   movzx eax, word [rdi]	      4989	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003f6d	          0x83c203	                              add edx, 3	      4988	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003f70	        0x4883c702	                              add rdi, 2	      4988	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003f74	           0xfaf01	                   imul eax, dword [rcx]	      4989	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003f77	        0x4183ee03	                             sub r14d, 3	      4988	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003f7b	        0x4883c10c	                            add rcx, 0xc	      4988	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003f7f	          0x4101c0	                            add r8d, eax	      4989	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003f82	          0x83fa08	                              cmp edx, 8	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003f85	            0x7f05	                            jg 0x4003f8c	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003f87	          0x4585f6	                         test r14d, r14d	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003f8a	            0x7fde	                            jg 0x4003f6a	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003f8c	          0x448906	                    mov dword [rsi], r8d	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003f8f	        0x4883c604	                              add rsi, 4	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x4003f93	          0x4585f6	                         test r14d, r14d	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x4003f96	     0xf8e61020000	                           jle 0x40041fd	      4986	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1
0x4003f9c	    0xc70600000000	                      mov dword [rsi], 0	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003fa2	            0xebbc	                           jmp 0x4003f60	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003fa4	         0xf1f4000	                         nop dword [rax]	      4987	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_1	FOR_2
0x4003fa8	          0x83fd06	                              cmp ebp, 6	      4945	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003fab	      0x4c89542408	                mov qword [rsp + 8], r10	      4917	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x4003fb0	          0x4c63f0	                         movsxd r14, eax	      4917	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x4003fb3	          0x4989da	                            mov r10, rbx	      4917	decNumber.c	FUNCTION_68	FUNCTION_66	IF_5
0x4003fb6	     0xf8fe6feffff	                            jg 0x4003ea2	      4945	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4003fbc	        0x4183fe31	                          cmp r14d, 0x31	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003fc0	     0xf8ea2010000	                           jle 0x4004168	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003fc6	        0x418d4e02	                      lea ecx, [r14 + 2]	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003fca	    0x41be56555555	                    mov r14d, 0x55555556	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003fd0	            0x89c8	                            mov eax, ecx	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003fd2	          0xc1f91f	                           sar ecx, 0x1f	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003fd5	          0x41f7ee	                               imul r14d	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003fd8	     0xfb685000000	                   movzx eax, byte [rbp]	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003fdf	            0x29ca	                            sub edx, ecx	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003fe1	          0x4889c5	                            mov rbp, rax	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003fe4	             0x1d0	                            add eax, edx	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003fe6	          0x4189d6	                           mov r14d, edx	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003fe9	             0x1c0	                            add eax, eax	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4003feb	          0x83f862	                           cmp eax, 0x62	      5069	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x4003fee	     0xf8fc4040000	                            jg 0x40044b8	      5069	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x4003ff4	            0x31d2	                            xor edx, edx	      5081	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2
0x4003ff6	    0x4c8dbc24c000	                   lea r15, [rsp + 0xc0]	      5067	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2
0x4003ffe	      0x4489742428	            mov dword [rsp + 0x28], r14d	      5081	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2
0x4004003	    0x66899424c000	               mov word [rsp + 0xc0], dx	      5081	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2
0x400400b	    0x48c744242000	               mov qword [rsp + 0x20], 0	      4840	decNumber.c	FUNCTION_68	FUNCTION_66
0x4004014	        0x498d5a0a	                    lea rbx, [r10 + 0xa]	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x4004018	        0x4c8d346b	                  lea r14, [rbx + rbp*2]	      5084	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_12
0x400401c	          0x4c39f3	                            cmp rbx, r14	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x400401f	     0xf8377040000	                           jae 0x400449c	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4004025	      0x488b442408	                mov rax, qword [rsp + 8]	      5090	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21
0x400402a	          0x4d89fc	                            mov r12, r15	      5090	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21
0x400402d	      0x4c896c2438	             mov qword [rsp + 0x38], r13	      5090	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21
0x4004032	            0x31ed	                            xor ebp, ebp	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4004034	          0x4d89f5	                            mov r13, r14	      5090	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21
0x4004037	      0xbe01000000	                              mov esi, 1	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x400403c	          0x4d89fe	                            mov r14, r15	      5090	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21
0x400403f	          0x4d89d7	                            mov r15, r10	      5090	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21
0x4004042	        0x4883c00a	                            add rax, 0xa	      5090	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21
0x4004046	      0x4889442430	             mov qword [rsp + 0x30], rax	      5090	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21
0x400404b	            0xeb20	                           jmp 0x400406d	      5090	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21
0x400404d	           0xf1f00	                         nop dword [rax]	      5090	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21
0x4004050	        0x4883c302	                              add rbx, 2	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4004054	          0x4863c6	                         movsxd rax, esi	      5094	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	ELSE_3
0x4004057	            0x31c9	                            xor ecx, ecx	      5094	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	ELSE_3
0x4004059	          0x83c601	                              add esi, 1	      5095	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	ELSE_3
0x400405c	          0x83c501	                              add ebp, 1	      5098	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x400405f	        0x4983c402	                              add r12, 2	      5098	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4004063	          0x4939dd	                            cmp r13, rbx	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4004066	      0x6641890c46	              mov word [r14 + rax*2], cx	      5094	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	ELSE_3
0x400406b	            0x763c	                           jbe 0x40040a9	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x400406d	           0xfb703	                   movzx eax, word [rbx]	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4004070	          0x6685c0	                             test ax, ax	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4004073	            0x74db	                            je 0x4004050	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4004075	        0x4883ec08	                              sub rsp, 8	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4004079	            0x29ee	                            sub esi, ebp	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x400407b	          0x4531c0	                            xor r8d, r8d	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x400407e	              0x50	                                push rax	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x400407f	        0x8b4c2438	            mov ecx, dword [rsp + 0x38] 	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4004083	          0x4c89e7	                            mov rdi, r12	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x4004086	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x400408b	          0x4d89e1	                             mov r9, r12	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x400408e	        0x4883c302	                              add rbx, 2	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4004092	        0x4983c402	                              add r12, 2	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x4004096	      0xe8a5bfffff	                  call sym.decUnitAddSub	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x400409b	          0x8d3428	                    lea esi, [rax + rbp]	      5089	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11	IF_21	CALL_13
0x400409e	          0x83c501	                              add ebp, 1	      5098	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x40040a1	          0x4939dd	                            cmp r13, rbx	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x40040a4	              0x5f	                                 pop rdi	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x40040a5	            0x4158	                                  pop r8	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x40040a7	            0x77c4	                            ja 0x400406d	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x40040a9	      0x4c8b6c2438	            mov r13, qword [rsp + 0x38] 	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x40040ae	          0x4d89fa	                            mov r10, r15	      5086	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	FOR_11
0x40040b1	    0x48c744243000	               mov qword [rsp + 0x30], 0	      4867	decNumber.c	FUNCTION_68	FUNCTION_66
0x40040ba	          0x4d89f7	                            mov r15, r14	      4867	decNumber.c	FUNCTION_68	FUNCTION_66
0x40040bd	    0x48c744242800	               mov qword [rsp + 0x28], 0	      4864	decNumber.c	FUNCTION_68	FUNCTION_66
0x40040c6	       0xfb6442443	           movzx eax, byte [rsp + 0x43] 	      5111	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x40040cb	          0x4c89ff	                            mov rdi, r15	      5112	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_15
0x40040ce	      0x4c89542438	             mov qword [rsp + 0x38], r10	      5112	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_15
0x40040d3	        0x41884508	                  mov byte [r13 + 8], al	      5111	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x40040d7	      0xe804c6ffff	                   call sym.decGetDigits	      5112	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_15
0x40040dc	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      5119	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x40040e1	      0x4c8b542438	            mov r10, qword [rsp + 0x38] 	      5119	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x40040e6	        0x41894500	                    mov dword [r13], eax	      5112	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_15
0x40040ea	          0x8b7304	                mov esi, dword [rbx + 4]	      5119	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x40040ed	        0x418b5204	                mov edx, dword [r10 + 4]	      5119	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x40040f1	          0x8d0c16	                    lea ecx, [rsi + rdx]	      5119	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x40040f4	          0xc1ee1f	                           shr esi, 0x1f	      5120	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_22
0x40040f7	          0xc1ea1f	                           shr edx, 0x1f	      5120	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_22
0x40040fa	          0x4084d6	                            test sil, dl	      5120	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_22
0x40040fd	            0x740a	                            je 0x4004109	      5120	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_22
0x40040ff	            0x85c9	                           test ecx, ecx	      5121	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_22
0x4004101	      0xba026cca88	                     mov edx, 0x88ca6c02	      5121	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_22
0x4004106	           0xf4fca	                          cmovg ecx, edx	      5121	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_22
0x4004109	      0x4c8b742410	            mov r14, qword [rsp + 0x10] 	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x400410e	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x4004113	      0x4c8d44245c	                    lea r8, [rsp + 0x5c]	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x4004118	        0x41894d04	                mov dword [r13 + 4], ecx	      5122	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x400411c	          0x4c89fa	                            mov rdx, r15	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x400411f	            0x89c1	                            mov ecx, eax	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x4004121	          0x4c89ef	                            mov rdi, r13	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x4004124	          0x4889de	                            mov rsi, rbx	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x4004127	          0x4d89f1	                             mov r9, r14	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x400412a	      0xe8a1d1ffff	             call sym.decSetCoeff.isra.3	      5126	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	CALL_16
0x400412f	      0x488d54245c	                   lea rdx, [rsp + 0x5c]	      5127	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4004134	          0x4c89f1	                            mov rcx, r14	      5127	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4004137	          0x4889de	                            mov rsi, rbx	      5127	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x400413a	          0x4c89ef	                            mov rdi, r13	      5127	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x400413d	      0xe81eddffff	                    call sym.decFinalize	      5127	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1
0x4004142	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      5130	decNumber.c	FUNCTION_68	FUNCTION_66
0x4004147	      0xe800000000	                          call 0x400414c	      5130	decNumber.c	FUNCTION_68	FUNCTION_66
0x400414c	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      5136	decNumber.c	FUNCTION_68	FUNCTION_66
0x4004151	      0xe800000000	                          call 0x4004156	      5136	decNumber.c	FUNCTION_68	FUNCTION_66
0x4004156	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      5137	decNumber.c	FUNCTION_68	FUNCTION_66
0x400415b	      0xe800000000	                          call 0x4004160	      5137	decNumber.c	FUNCTION_68	FUNCTION_66
0x4004160	      0xe9e7fcffff	                           jmp 0x4003e4c	      5139	decNumber.c	FUNCTION_68	FUNCTION_66
0x4004165	           0xf1f00	                         nop dword [rax]	      5139	decNumber.c	FUNCTION_68	FUNCTION_66
0x4004168	     0xfb685000000	                   movzx eax, byte [rbp]	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x400416f	    0x450fb6b60000	                  movzx r14d, byte [r14]	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x4004177	          0x4889c5	                            mov rbp, rax	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x400417a	          0x4401f0	                           add eax, r14d	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x400417d	             0x1c0	                            add eax, eax	      5068	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	CALL_10
0x400417f	          0x83f862	                           cmp eax, 0x62	      5069	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x4004182	     0xf866cfeffff	                           jbe 0x4003ff4	      5069	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x4004188	          0x4863f8	                         movsxd rdi, eax	      5070	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x400418b	      0x4c89542420	             mov qword [rsp + 0x20], r10	      5070	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x4004190	      0xe800000000	                          call 0x4004195	      5070	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x4004195	          0x4885c0	                           test rax, rax	      5071	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19	IF_20
0x4004198	          0x4989c7	                            mov r15, rax	      5070	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x400419b	      0x4c8b542420	            mov r10, qword [rsp + 0x20] 	      5071	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19	IF_20
0x40041a0	     0xf8430030000	                            je 0x40044d6	      5071	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19	IF_20
0x40041a6	            0x31c0	                            xor eax, eax	      5081	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2
0x40041a8	        0x66418907	                      mov word [r15], ax	      5081	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2
0x40041ac	      0x4489742428	            mov dword [rsp + 0x28], r14d	      5081	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2
0x40041b1	      0x4c897c2420	             mov qword [rsp + 0x20], r15	      5081	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2
0x40041b6	      0xe959feffff	                           jmp 0x4004014	      5081	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2
0x40041bb	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4902	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3	CALL_3
0x40041c0	          0x4c89d2	                            mov rdx, r10	      4902	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3	CALL_3
0x40041c3	      0xe828f2ffff	                 call sym.decNaNs.isra.6	      4902	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3	CALL_3
0x40041c8	      0xe97ffcffff	                           jmp 0x4003e4c	      4903	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_3
0x40041cd	          0x4863f9	                         movsxd rdi, ecx	      4954	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x40041d0	      0x4c89542430	             mov qword [rsp + 0x30], r10	      4954	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x40041d5	      0x44895c2420	            mov dword [rsp + 0x20], r11d	      4954	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x40041da	      0xe800000000	                          call 0x40041df	      4954	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x40041df	          0x4885c0	                           test rax, rax	      4954	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x40041e2	          0x4989c4	                            mov r12, rax	      4954	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x40041e5	      0x4889442428	             mov qword [rsp + 0x28], rax	      4954	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x40041ea	        0x410f94c7	                               sete r15b	      4954	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x40041ee	      0x448b5c2420	           mov r11d, dword [rsp + 0x20] 	      4954	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x40041f3	      0x4c8b542430	            mov r10, qword [rsp + 0x30] 	      4954	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x40041f8	      0xe9ecfcffff	                           jmp 0x4003ee9	      4954	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_12
0x40041fd	        0x4883ee04	                              sub rsi, 4	      4990	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11
0x4004201	          0x4989d8	                             mov r8, rbx	      4991	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3
0x4004204	            0x85ed	                           test ebp, ebp	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4004206	        0x498d7a0a	                    lea rdi, [r10 + 0xa]	      4991	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3
0x400420a	    0x41c700000000	                       mov dword [r8], 0	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4004211	            0x7e48	                           jle 0x400425b	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4004213	       0xf1f440000	                   nop dword [rax + rax]	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4004218	      0xb900000000	                              mov ecx, 0	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x400421d	          0x4531c9	                            xor r9d, r9d	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4004220	            0x31d2	                            xor edx, edx	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4004222	           0xfb707	                   movzx eax, word [rdi]	      4994	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4004225	          0x83c203	                              add edx, 3	      4993	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4004228	        0x4883c702	                              add rdi, 2	      4993	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x400422c	           0xfaf01	                   imul eax, dword [rcx]	      4994	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x400422f	          0x83ed03	                              sub ebp, 3	      4993	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4004232	        0x4883c10c	                            add rcx, 0xc	      4993	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4004236	          0x4101c1	                            add r9d, eax	      4994	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4004239	          0x83fa08	                              cmp edx, 8	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x400423c	            0x7f04	                            jg 0x4004242	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x400423e	            0x85ed	                           test ebp, ebp	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4004240	            0x7fe0	                            jg 0x4004222	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4004242	            0x85ed	                           test ebp, ebp	      4991	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3
0x4004244	          0x458908	                     mov dword [r8], r9d	      4991	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3
0x4004247	        0x498d4004	                       lea rax, [r8 + 4]	      4991	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3
0x400424b	            0x7e0e	                           jle 0x400425b	      4991	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3
0x400424d	          0x4989c0	                             mov r8, rax	      4991	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3
0x4004250	            0x85ed	                           test ebp, ebp	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4004252	    0x41c700000000	                       mov dword [r8], 0	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x4004259	            0x7fbd	                            jg 0x4004218	      4992	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_3	FOR_4
0x400425b	          0x4d63db	                        movsxd r11, r11d	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x400425e	        0x4b8d3cdf	                  lea rdi, [r15 + r11*8]	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x4004262	          0x4c39ff	                            cmp rdi, r15	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x4004265	     0xf8693020000	                           jbe 0x40044fe	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x400426b	          0x4c89f8	                            mov rax, r15	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x400426e	            0x6690	                                     nop	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x4004270	    0x48c700000000	                      mov qword [rax], 0	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x4004277	        0x4883c008	                              add rax, 8	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x400427b	          0x4839c7	                            cmp rdi, rax	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x400427e	            0x77f0	                            ja 0x4004270	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x4004280	          0x4c39c3	                             cmp rbx, r8	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4004283	     0xf8784000000	                            ja 0x400430d	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4004289	          0x4989db	                            mov r11, rbx	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x400428c	      0xbd12000000	                           mov ebp, 0x12	      4998	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_5
0x4004291	    0x49b9535a9ba0	             movabs r9, 0x44b82fa09b5a53	      5029	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x400429b	    0x49be0f494777	              movabs r14, 0x49c97747490f	      5036	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x40042a5	      0x4c896c2438	             mov qword [rsp + 0x38], r13	      5038	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x40042aa	    0x660f1f440000	                    nop word [rax + rax]	      5038	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x40042b0	          0x4889d8	                            mov rax, rbx	      5019	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x40042b3	          0x4c29d8	                            sub rax, r11	      5019	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x40042b6	        0x48c1f802	                              sar rax, 2	      5019	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x40042ba	          0x4939f4	                            cmp r12, rsi	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x40042bd	        0x498d04c7	                  lea rax, [r15 + rax*8]	      5019	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x40042c1	            0x7723	                            ja 0x40042e6	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x40042c3	          0x448b2b	                   mov r13d, dword [rbx]	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x40042c6	          0x4c89e2	                            mov rdx, r12	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x40042c9	     0xf1f80000000	                         nop dword [rax]	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x40042d0	            0x8b0a	                    mov ecx, dword [rdx]	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x40042d2	        0x4883c204	                              add rdx, 4	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x40042d6	        0x490fafcd	                           imul rcx, r13	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x40042da	          0x480108	                    add qword [rax], rcx	      5021	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x40042dd	        0x4883c008	                              add rax, 8	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x40042e1	          0x4839d6	                            cmp rsi, rdx	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x40042e4	            0x73ea	                           jae 0x40042d0	      5020	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_7
0x40042e6	          0x83ed01	                              sub ebp, 1	      5023	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x40042e9	            0x85ed	                           test ebp, ebp	      5024	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	IF_16
0x40042eb	     0xf8e7f000000	                           jle 0x4004370	      5024	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	IF_16
0x40042f1	          0x4939d8	                             cmp r8, rbx	      5024	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	IF_16
0x40042f4	            0x747a	                            je 0x4004370	      5024	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	IF_16
0x40042f6	        0x4883c304	                              add rbx, 4	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x40042fa	          0x4c39c3	                             cmp rbx, r8	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x40042fd	            0x76b1	                           jbe 0x40042b0	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x40042ff	          0x4c39ff	                            cmp rdi, r15	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4004302	      0x4c8b6c2438	            mov r13, qword [rsp + 0x38] 	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4004307	     0xf86fa010000	                           jbe 0x4004507	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x400430d	          0x4d89f9	                             mov r9, r15	      5025	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4004310	          0x4c89fe	                            mov rsi, r15	      5025	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4004313	      0xbbd34d6210	                     mov ebx, 0x10624dd3	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4004318	    0x41bb83de1b43	                    mov r11d, 0x431bde83	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x400431e	            0x6690	                                     nop	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4004320	          0x498b09	                     mov rcx, qword [r9]	      5053	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4004323	        0x4983c108	                               add r9, 8	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4004327	        0x4883c606	                              add rsi, 6	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x400432b	            0x89c8	                            mov eax, ecx	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x400432d	            0xf7e3	                                 mul ebx	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x400432f	          0xc1ea06	                              shr edx, 6	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4004332	      0x6669c2e803	                      imul ax, dx, 0x3e8	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4004337	          0x4189d0	                            mov r8d, edx	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x400433a	            0x89ca	                            mov edx, ecx	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x400433c	            0x29c2	                            sub edx, eax	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x400433e	            0x89c8	                            mov eax, ecx	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4004340	        0x668956fa	                  mov word [rsi - 6], dx	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4004344	          0x41f7e3	                                mul r11d	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4004347	            0x89d1	                            mov ecx, edx	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4004349	          0xc1e912	                           shr ecx, 0x12	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x400434c	      0x6669c1e803	                      imul ax, cx, 0x3e8	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4004351	        0x66894efe	                  mov word [rsi - 2], cx	      5059	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4004355	          0x4129c0	                            sub r8d, eax	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x4004358	      0x66448946fc	                 mov word [rsi - 4], r8w	      5056	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9	FOR_10
0x400435d	          0x4c39cf	                             cmp rdi, r9	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4004360	            0x77be	                            ja 0x4004320	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4004362	          0x4c29fe	                            sub rsi, r15	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4004365	          0x48d1ee	                              shr rsi, 1	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4004368	      0xe959fdffff	                           jmp 0x40040c6	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x400436d	           0xf1f00	                         nop dword [rax]	      5052	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_9
0x4004370	          0x4c39ff	                            cmp rdi, r15	      5027	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x4004373	          0x4c89fd	                            mov rbp, r15	      5027	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x4004376	            0x767f	                           jbe 0x40043f7	      5027	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x4004378	     0xf1f84000000	                   nop dword [rax + rax]	      5027	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x4004380	        0x488b4d00	                    mov rcx, qword [rbp]	      5028	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	IF_17
0x4004384	    0x4881f9ffc99a	                     cmp rcx, 0x3b9ac9ff	      5028	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	IF_17
0x400438b	            0x7661	                           jbe 0x40043ee	      5028	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	IF_17
0x400438d	          0x4889ca	                            mov rdx, rcx	      5029	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x4004390	        0x48c1ea09	                              shr rdx, 9	      5029	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x4004394	          0x4889d0	                            mov rax, rdx	      5029	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x4004397	          0x49f7e1	                                  mul r9	      5029	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x400439a	        0x48c1ea0b	                            shr rdx, 0xb	      5029	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x400439e	    0x4881faffc99a	                     cmp rdx, 0x3b9ac9ff	      5034	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	IF_18
0x40043a5	          0x4989d5	                            mov r13, rdx	      5029	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40043a8	            0x762f	                           jbe 0x40043d9	      5034	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	IF_18
0x40043aa	          0x4889ca	                            mov rdx, rcx	      5036	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x40043ad	        0x48c1ea12	                           shr rdx, 0x12	      5036	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x40043b1	          0x4889d0	                            mov rax, rdx	      5036	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x40043b4	          0x49f7e6	                                 mul r14	      5036	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x40043b7	    0x48b8000064a7	           movabs rax, 0xde0b6b3a7640000	      5038	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x40043c1	        0x48c1ea18	                           shr rdx, 0x18	      5036	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x40043c5	        0x48015510	            add qword [rbp + 0x10], rdx 	      5037	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x40043c9	        0x480fafc2	                           imul rax, rdx	      5038	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x40043cd	    0x69d200ca9a3b	               imul edx, edx, 0x3b9aca00	      5039	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x40043d3	          0x4829c1	                            sub rcx, rax	      5038	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x40043d6	          0x4129d5	                           sub r13d, edx	      5039	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8	ELSE_1
0x40043d9	          0x4489e8	                           mov eax, r13d	      5041	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40043dc	        0x48014508	                add qword [rbp + 8], rax	      5041	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40043e0	    0x4869c000ca9a	               imul rax, rax, 0x3b9aca00	      5042	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40043e7	          0x4829c1	                            sub rcx, rax	      5042	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40043ea	        0x48894d00	                    mov qword [rbp], rcx	      5042	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40043ee	        0x4883c508	                              add rbp, 8	      5027	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40043f2	          0x4839ef	                            cmp rdi, rbp	      5027	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40043f5	            0x7789	                            ja 0x4004380	      5027	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6	FOR_8
0x40043f7	      0xbd12000000	                           mov ebp, 0x12	      5025	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x40043fc	      0xe9f5feffff	                           jmp 0x40042f6	      5025	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4004401	    0x48c744242000	               mov qword [rsp + 0x20], 0	      4840	decNumber.c	FUNCTION_68	FUNCTION_66
0x400440a	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4977	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x400440f	          0x830810	                    or dword [rax], 0x10	      4977	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x4004412	      0xe92bfdffff	                           jmp 0x4004142	      4978	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x4004417	          0x4863f8	                         movsxd rdi, eax	      4974	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_14
0x400441a	        0x88542438	               mov byte [rsp + 0x38], dl	      4974	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_14
0x400441e	      0x4c89542448	             mov qword [rsp + 0x48], r10	      4974	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_14
0x4004423	      0x44895c2444	            mov dword [rsp + 0x44], r11d	      4974	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_14
0x4004428	      0xe800000000	                          call 0x400442d	      4974	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_14
0x400442d	       0xfb6542438	           movzx edx, byte [rsp + 0x38] 	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x4004432	      0x4889442420	             mov qword [rsp + 0x20], rax	      4974	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_14
0x4004437	          0x4108d7	                             or r15b, dl	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x400443a	            0x75ce	                           jne 0x400440a	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x400443c	          0x4885c0	                           test rax, rax	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x400443f	          0x4989c7	                            mov r15, rax	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x4004442	      0x448b5c2444	           mov r11d, dword [rsp + 0x44] 	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x4004447	      0x4c8b542448	            mov r10, qword [rsp + 0x48] 	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x400444c	     0xf85ebfaffff	                           jne 0x4003f3d	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x4004452	            0xebb6	                           jmp 0x400440a	      4976	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_15
0x4004454	          0x4863fb	                         movsxd rdi, ebx	      4958	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x4004457	      0x4c89542438	             mov qword [rsp + 0x38], r10	      4958	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x400445c	      0x44895c2420	            mov dword [rsp + 0x20], r11d	      4958	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x4004461	      0xe800000000	                          call 0x4004466	      4958	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x4004466	          0x4885c0	                           test rax, rax	      4958	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x4004469	          0x4889c3	                            mov rbx, rax	      4958	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x400446c	      0x4889442430	             mov qword [rsp + 0x30], rax	      4958	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x4004471	           0xf94c2	                                 sete dl	      4958	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x4004474	      0x448b5c2420	           mov r11d, dword [rsp + 0x20] 	      4958	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x4004479	      0x4c8b542438	            mov r10, qword [rsp + 0x38] 	      4958	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x400447e	      0xe985faffff	                           jmp 0x4003f08	      4958	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	IF_13
0x4004483	          0x83e270	                           and edx, 0x70	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x4004486	     0xf857cf9ffff	                           jne 0x4003e08	      4905	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4	CALL_4
0x400448c	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4907	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4
0x4004491	    0x810880000000	                    or dword [rax], 0x80	      4907	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4
0x4004497	      0xe9b0f9ffff	                           jmp 0x4003e4c	      4908	decNumber.c	FUNCTION_68	FUNCTION_66	IF_2	IF_4
0x400449c	    0x48c744243000	               mov qword [rsp + 0x30], 0	      4867	decNumber.c	FUNCTION_68	FUNCTION_66
0x40044a5	    0x48c744242800	               mov qword [rsp + 0x28], 0	      4864	decNumber.c	FUNCTION_68	FUNCTION_66
0x40044ae	      0xbe01000000	                              mov esi, 1	      5080	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2
0x40044b3	      0xe90efcffff	                           jmp 0x40040c6	      5080	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2
0x40044b8	          0x4863f8	                         movsxd rdi, eax	      5070	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x40044bb	      0x4c89542420	             mov qword [rsp + 0x20], r10	      5070	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x40044c0	      0xe800000000	                          call 0x40044c5	      5070	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x40044c5	          0x4885c0	                           test rax, rax	      5071	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19	IF_20
0x40044c8	          0x4989c7	                            mov r15, rax	      5070	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19
0x40044cb	      0x4c8b542420	            mov r10, qword [rsp + 0x20] 	      5071	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19	IF_20
0x40044d0	     0xf85d0fcffff	                           jne 0x40041a6	      5071	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19	IF_20
0x40044d6	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5071	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19	IF_20
0x40044db	    0x48c744243000	               mov qword [rsp + 0x30], 0	      4867	decNumber.c	FUNCTION_68	FUNCTION_66
0x40044e4	    0x48c744242800	               mov qword [rsp + 0x28], 0	      4864	decNumber.c	FUNCTION_68	FUNCTION_66
0x40044ed	    0x48c744242000	               mov qword [rsp + 0x20], 0	      5071	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19	IF_20
0x40044f6	          0x830810	                    or dword [rax], 0x10	      5071	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19	IF_20
0x40044f9	      0xe944fcffff	                           jmp 0x4004142	      5071	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	ELSE_2	IF_19	IF_20
0x40044fe	          0x4c39c3	                             cmp rbx, r8	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4004501	     0xf8682fdffff	                           jbe 0x4004289	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4004507	            0x31f6	                            xor esi, esi	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x4004509	      0xe9b8fbffff	                           jmp 0x40040c6	      5018	decNumber.c	FUNCTION_68	FUNCTION_66	DO_1	IF_11	FOR_6
0x400450e	      0xe800000000	                          call 0x4004513	      5140	decNumber.c	FUNCTION_68	FUNCTION_66
decNumberToEngString	ELSE,0:DO,0:CALL,1:IF,0:functions,0:SWITCH,0:WHILE,0:FOR,0	7
0x4002290	              0x53	                                push rbx	       464	decNumber.c	FUNCTION_68	FUNCTION_6
0x4002291	      0xba01000000	                              mov edx, 1	       465	decNumber.c	FUNCTION_68	FUNCTION_6	CALL_1
0x4002296	          0x4889f3	                            mov rbx, rsi	       464	decNumber.c	FUNCTION_68	FUNCTION_6
0x4002299	      0xe872e5ffff	                    call sym.decToString	       465	decNumber.c	FUNCTION_68	FUNCTION_6	CALL_1
0x400229e	          0x4889d8	                            mov rax, rbx	       467	decNumber.c	FUNCTION_68	FUNCTION_6
0x40022a1	              0x5b	                                 pop rbx	       467	decNumber.c	FUNCTION_68	FUNCTION_6
0x40022a2	              0xc3	                                     ret	       467	decNumber.c	FUNCTION_68	FUNCTION_6
decGetInt	ELSE,4:DO,0:CALL,2:IF,15:functions,0:SWITCH,0:WHILE,0:FOR,2	112
0x4000530	            0x8b07	                    mov eax, dword [rdi]	      7540	decNumber.c	FUNCTION_20
0x4000532	          0x8b4f04	                mov ecx, dword [rdi + 4]	      7540	decNumber.c	FUNCTION_20
0x4000535	      0x440fb64f08	               movzx r9d, byte [rdi + 8]	      7541	decNumber.c	FUNCTION_20	CALL_1
0x400053a	      0x440fb7570a	           movzx r10d, word [rdi + 0xa] 	      7551	decNumber.c	FUNCTION_20	CALL_2
0x400053f	          0x83f801	                              cmp eax, 1	      7551	decNumber.c	FUNCTION_20	CALL_2
0x4000542	        0x448d0408	                    lea r8d, [rax + rcx]	      7540	decNumber.c	FUNCTION_20
0x4000546	            0x750a	                           jne 0x4000552	      7551	decNumber.c	FUNCTION_20	CALL_2
0x4000548	        0x664585d2	                         test r10w, r10w	      7551	decNumber.c	FUNCTION_20	CALL_2
0x400054c	     0xf8406010000	                            je 0x4000658	      7551	decNumber.c	FUNCTION_20	CALL_2
0x4000552	        0x4883c70a	                            add rdi, 0xa	      7553	decNumber.c	FUNCTION_20
0x4000556	            0x85c9	                           test ecx, ecx	      7555	decNumber.c	FUNCTION_20	IF_2
0x4000558	            0x7876	                            js 0x40005d0	      7555	decNumber.c	FUNCTION_20	IF_2
0x400055a	            0x744c	                            je 0x40005a8	      7586	decNumber.c	FUNCTION_20	IF_6
0x400055c	        0x4183f80a	                            cmp r8d, 0xa	      7588	decNumber.c	FUNCTION_20	IF_7
0x4000560	     0xf8f0a010000	                            jg 0x4000670	      7588	decNumber.c	FUNCTION_20	IF_7
0x4000566	          0x4531d2	                          xor r10d, r10d	      7554	decNumber.c	FUNCTION_20
0x4000569	          0x4439c1	                            cmp ecx, r8d	      7591	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x400056c	          0x4489d6	                           mov esi, r10d	      7591	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x400056f	            0x7d1c	                           jge 0x400058d	      7591	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x4000571	           0xfb717	                   movzx edx, word [rdi]	      7592	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x4000574	          0x4863c1	                         movsxd rax, ecx	      7592	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x4000577	          0x83c103	                              add ecx, 3	      7593	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x400057a	     0xfaf14850000	                 imul edx, dword [rax*4]	      7592	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x4000582	        0x4883c702	                              add rdi, 2	      7591	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x4000586	             0x1d6	                            add esi, edx	      7592	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x4000588	          0x4139c8	                            cmp r8d, ecx	      7591	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x400058b	            0x7fe4	                            jg 0x4000571	      7591	decNumber.c	FUNCTION_20	IF_7	FOR_2
0x400058d	        0x4183f80a	                            cmp r8d, 0xa	      7595	decNumber.c	FUNCTION_20	IF_7	IF_8
0x4000591	     0xf84e9000000	                            je 0x4000680	      7595	decNumber.c	FUNCTION_20	IF_7	IF_8
0x4000597	            0x89f0	                            mov eax, esi	      7595	decNumber.c	FUNCTION_20	IF_7	IF_8
0x4000599	            0xf7d8	                                 neg eax	      7595	decNumber.c	FUNCTION_20	IF_7	IF_8
0x400059b	          0x4584c9	                           test r9b, r9b	      7595	decNumber.c	FUNCTION_20	IF_7	IF_8
0x400059e	           0xf49c6	                         cmovns eax, esi	      7595	decNumber.c	FUNCTION_20	IF_7	IF_8
0x40005a1	              0xc3	                                     ret	      7595	decNumber.c	FUNCTION_20	IF_7	IF_8
0x40005a2	    0x660f1f440000	                    nop word [rax + rax]	      7595	decNumber.c	FUNCTION_20	IF_7	IF_8
0x40005a8	        0x4883c702	                              add rdi, 2	      7586	decNumber.c	FUNCTION_20	IF_6
0x40005ac	      0xb903000000	                              mov ecx, 3	      7586	decNumber.c	FUNCTION_20	IF_6
0x40005b1	        0x4183f80a	                            cmp r8d, 0xa	      7588	decNumber.c	FUNCTION_20	IF_7
0x40005b5	            0x7eb2	                           jle 0x4000569	      7588	decNumber.c	FUNCTION_20	IF_7
0x40005b7	        0x4183e201	                             and r10d, 1	      7605	decNumber.c	FUNCTION_20	IF_13	IF_14
0x40005bb	        0x4183fa01	                             cmp r10d, 1	      7605	decNumber.c	FUNCTION_20	IF_13	IF_14
0x40005bf	            0x19c0	                            sbb eax, eax	      7605	decNumber.c	FUNCTION_20	IF_13	IF_14
0x40005c1	      0x2dfdffff7f	                     sub eax, 0x7ffffffd	      7605	decNumber.c	FUNCTION_20	IF_13	IF_14
0x40005c6	              0xc3	                                     ret	      7605	decNumber.c	FUNCTION_20	IF_13	IF_14
0x40005c7	    0x660f1f840000	                    nop word [rax + rax]	      7605	decNumber.c	FUNCTION_20	IF_13	IF_14
0x40005d0	            0xf7d9	                                 neg ecx	      7560	decNumber.c	FUNCTION_20	ELSE_1
0x40005d2	          0x83f902	                              cmp ecx, 2	      7562	decNumber.c	FUNCTION_20	ELSE_1	FOR_1
0x40005d5	     0xf8efb000000	                           jle 0x40006d6	      7562	decNumber.c	FUNCTION_20	ELSE_1	FOR_1
0x40005db	        0x664585d2	                         test r10w, r10w	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x40005df	      0xb800000080	                     mov eax, 0x80000000	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x40005e4	            0x7417	                            je 0x40005fd	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x40005e6	      0xe9f3000000	                           jmp 0x40006de	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x40005eb	       0xf1f440000	                   nop dword [rax + rax]	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x40005f0	        0x66833a00	                       cmp word [rdx], 0	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x40005f4	          0x4889d7	                            mov rdi, rdx	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x40005f7	     0xf85d3000000	                           jne 0x40006d0	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x40005fd	          0x83e903	                              sub ecx, 3	      7564	decNumber.c	FUNCTION_20	ELSE_1	FOR_1
0x4000600	        0x488d5702	                      lea rdx, [rdi + 2]	      7562	decNumber.c	FUNCTION_20	ELSE_1	FOR_1
0x4000604	          0x83f902	                              cmp ecx, 2	      7562	decNumber.c	FUNCTION_20	ELSE_1	FOR_1
0x4000607	            0x7fe7	                            jg 0x40005f0	      7562	decNumber.c	FUNCTION_20	ELSE_1	FOR_1
0x4000609	            0x85c9	                           test ecx, ecx	      7566	decNumber.c	FUNCTION_20	ELSE_1	IF_4
0x400060b	      0x440fb75702	              movzx r10d, word [rdi + 2]	      7566	decNumber.c	FUNCTION_20	ELSE_1	IF_4
0x4000610	          0x4889d7	                            mov rdi, rdx	      7562	decNumber.c	FUNCTION_20	ELSE_1	FOR_1
0x4000613	            0x7493	                            je 0x40005a8	      7566	decNumber.c	FUNCTION_20	ELSE_1	IF_4
0x4000615	        0x410fb7f2	                         movzx esi, r10w	      7571	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x4000619	          0x4863c1	                         movsxd rax, ecx	      7571	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x400061c	          0x4189f2	                           mov r10d, esi	      7571	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x400061f	    0x8b3c85000000	                  mov edi, dword [rax*4]	      7577	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2	IF_5
0x4000626	          0x41d3ea	                            shr r10d, cl	      7571	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x4000629	    0x440faf148500	                imul r10d, dword [rax*4]	      7571	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x4000632	      0xb800000080	                     mov eax, 0x80000000	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x4000637	        0x41c1ea11	                          shr r10d, 0x11	      7571	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x400063b	        0x410faffa	                          imul edi, r10d	      7577	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2	IF_5
0x400063f	            0x39fe	                            cmp esi, edi	      7577	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2	IF_5
0x4000641	            0x7521	                           jne 0x4000664	      7577	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2	IF_5
0x4000643	      0xb803000000	                              mov eax, 3	      7579	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x4000648	        0x488d7a02	                      lea rdi, [rdx + 2]	      7580	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x400064c	            0x29c8	                            sub eax, ecx	      7579	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x400064e	            0x89c1	                            mov ecx, eax	      7579	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x4000650	      0xe95cffffff	                           jmp 0x40005b1	      7579	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x4000655	           0xf1f00	                         nop dword [rax]	      7579	decNumber.c	FUNCTION_20	ELSE_1	ELSE_2
0x4000658	            0x31c0	                            xor eax, eax	      7551	decNumber.c	FUNCTION_20	CALL_2
0x400065a	        0x41f6c170	                          test r9b, 0x70	      7551	decNumber.c	FUNCTION_20	CALL_2
0x400065e	     0xf85eefeffff	                           jne 0x4000552	      7551	decNumber.c	FUNCTION_20	CALL_2
0x4000664	            0xf3c3	                                     ret	      7611	decNumber.c	FUNCTION_20
0x4000666	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7611	decNumber.c	FUNCTION_20
0x4000670	      0xb802000080	                     mov eax, 0x80000002	      7606	decNumber.c	FUNCTION_20	IF_13
0x4000675	              0xc3	                                     ret	      7611	decNumber.c	FUNCTION_20
0x4000676	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7611	decNumber.c	FUNCTION_20
0x4000680	          0x83e903	                              sub ecx, 3	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x4000683	            0x89f0	                            mov eax, esi	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x4000685	              0x99	                                     cdq	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x4000686	          0x4863c9	                         movsxd rcx, ecx	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x4000689	    0xf73c8d000000	                      idiv dword [rcx*4]	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x4000690	         0xfb757fe	               movzx edx, word [rdi - 2]	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x4000694	            0x39d0	                            cmp eax, edx	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x4000696	     0xf851bffffff	                           jne 0x40005b7	      7596	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_9
0x400069c	          0x4584c9	                           test r9b, r9b	      7598	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_10
0x400069f	            0x790c	                           jns 0x40006ad	      7598	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_10
0x40006a1	    0x81fefd933577	                     cmp esi, 0x773593fd	      7598	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_10
0x40006a7	     0xf8f0affffff	                            jg 0x40005b7	      7598	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_10
0x40006ad	          0x4584c9	                           test r9b, r9b	      7599	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_11
0x40006b0	     0xf88e1feffff	                            js 0x4000597	      7599	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_11
0x40006b6	    0x81feffc99a3b	                     cmp esi, 0x3b9ac9ff	      7599	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_11
0x40006bc	     0xf8ff5feffff	                            jg 0x40005b7	      7599	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_11
0x40006c2	      0xe9d0feffff	                           jmp 0x4000597	      7599	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_11
0x40006c7	    0x660f1f840000	                    nop word [rax + rax]	      7599	decNumber.c	FUNCTION_20	IF_7	IF_8	IF_11
0x40006d0	      0xb800000080	                     mov eax, 0x80000000	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x40006d5	              0xc3	                                     ret	      7563	decNumber.c	FUNCTION_20	ELSE_1	FOR_1	IF_3
0x40006d6	          0x4889fa	                            mov rdx, rdi	      7553	decNumber.c	FUNCTION_20
0x40006d9	      0xe937ffffff	                           jmp 0x4000615	      7553	decNumber.c	FUNCTION_20
0x40006de	            0xf3c3	                                     ret	      7553	decNumber.c	FUNCTION_20
decNumberOr	ELSE,2:DO,0:CALL,12:IF,8:functions,0:SWITCH,0:WHILE,0:FOR,2	172
0x4002d10	            0x4157	                                push r15	      1806	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002d12	            0x4156	                                push r14	      1806	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002d14	            0x4155	                                push r13	      1806	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002d16	            0x4154	                                push r12	      1806	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002d18	              0x55	                                push rbp	      1806	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002d19	              0x53	                                push rbx	      1806	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002d1a	          0x4889fb	                            mov rbx, rdi	      1806	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002d1d	        0x4883ec18	                           sub rsp, 0x18	      1806	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002d21	          0x8b7e04	                mov edi, dword [rsi + 4]	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x4002d24	            0x85ff	                           test edi, edi	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x4002d26	     0xf8584010000	                           jne 0x4002eb0	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x4002d2c	         0xfb64608	               movzx eax, byte [rsi + 8]	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x4002d30	            0xa870	                           test al, 0x70	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x4002d32	     0xf8578010000	                           jne 0x4002eb0	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x4002d38	            0x84c0	                             test al, al	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x4002d3a	     0xf8870010000	                            js 0x4002eb0	      1815	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_3
0x4002d40	        0x448b4204	                mov r8d, dword [rdx + 4]	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x4002d44	          0x4989d1	                             mov r9, rdx	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x4002d47	          0x4585c0	                           test r8d, r8d	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x4002d4a	     0xf8560010000	                           jne 0x4002eb0	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x4002d50	         0xfb64208	               movzx eax, byte [rdx + 8]	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x4002d54	            0xa870	                           test al, 0x70	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x4002d56	     0xf8554010000	                           jne 0x4002eb0	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x4002d5c	            0x84c0	                             test al, al	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x4002d5e	     0xf884c010000	                            js 0x4002eb0	      1816	decNumber.c	FUNCTION_68	FUNCTION_31	IF_2	CALL_5
0x4002d64	          0x486306	                 movsxd rax, dword [rsi]	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002d67	        0x4c8d5e0a	                    lea r11, [rsi + 0xa]	      1821	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002d6b	        0x488d6a0a	                    lea rbp, [rdx + 0xa]	      1822	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002d6f	        0x488d7b0a	                    lea rdi, [rbx + 0xa]	      1823	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002d73	          0x83f831	                           cmp eax, 0x31	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002d76	     0xf8fe4010000	                            jg 0x4002f60	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002d7c	     0xfb680000000	                   movzx eax, byte [rax]	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002d83	      0x4c8d6400fe	                lea r12, [rax + rax - 2]	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002d88	          0x496301	                  movsxd rax, dword [r9]	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002d8b	          0x4d01dc	                            add r12, r11	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002d8e	          0x83f831	                           cmp eax, 0x31	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002d91	     0xf8fa9010000	                            jg 0x4002f40	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002d97	     0xfb680000000	                   movzx eax, byte [rax]	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002d9e	      0x4c8d6c00fe	                lea r13, [rax + rax - 2]	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002da3	            0x8b31	                    mov esi, dword [rcx]	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002da5	          0x4901ed	                            add r13, rbp	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002da8	          0x83fe31	                           cmp esi, 0x31	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002dab	     0xf8f5f010000	                            jg 0x4002f10	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002db1	          0x4863c6	                         movsxd rax, esi	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002db4	     0xfb690000000	                   movzx edx, byte [rax]	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002dbb	      0x4c8d7c57fe	              lea r15, [rdi + rdx*2 - 2]	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002dc0	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002dc4	            0x29c6	                            sub esi, eax	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002dc6	          0x4c39ff	                            cmp rdi, r15	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x4002dc9	            0x89f0	                            mov eax, esi	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002dcb	     0xf87c0000000	                            ja 0x4002e91	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x4002dd1	          0x83e801	                              sub eax, 1	      1848	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4002dd4	          0x4889fe	                            mov rsi, rdi	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x4002dd7	        0x8944240c	              mov dword [rsp + 0xc], eax	      1848	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4002ddb	       0xf1f440000	                   nop dword [rax + rax]	      1848	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4002de0	          0x4d39dc	                            cmp r12, r11	      1830	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	IF_3
0x4002de3	     0xf8207010000	                            jb 0x4002ef0	      1830	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	IF_3
0x4002de9	            0x31c0	                            xor eax, eax	      1832	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	IF_4
0x4002deb	          0x4939ed	                            cmp r13, rbp	      1832	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	IF_4
0x4002dee	        0x450fb70b	                   movzx r9d, word [r11]	      1831	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_1
0x4002df2	            0x7204	                            jb 0x4002df8	      1832	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	IF_4
0x4002df4	         0xfb74500	                   movzx eax, word [rbp]	      1833	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2
0x4002df8	            0x31d2	                            xor edx, edx	      1834	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2
0x4002dfa	          0x4531d2	                          xor r10d, r10d	      1834	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2
0x4002dfd	          0x668916	                      mov word [rsi], dx	      1834	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2
0x4002e00	            0x89c2	                            mov edx, eax	      1835	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5
0x4002e02	        0x664409ca	                              or dx, r9w	      1835	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5
0x4002e06	            0x746b	                            je 0x4002e73	      1835	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5
0x4002e08	            0x89c2	                            mov edx, eax	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002e0a	          0x4409ca	                             or edx, r9d	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002e0d	          0x83e201	                              and edx, 1	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002e10	            0x740b	                            je 0x4002e1d	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002e12	    0x428b14950000	                  mov edx, dword [r10*4]	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002e1a	          0x660116	                      add word [rsi], dx	      1839	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4002e1d	        0x410fb7d1	                          movzx edx, r9w	      1840	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002e21	    0x69d2cdcc0000	                   imul edx, edx, 0xcccd	      1840	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002e27	          0xc1ea13	                           shr edx, 0x13	      1840	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002e2a	          0x4189d0	                            mov r8d, edx	      1840	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002e2d	        0x438d1480	                    lea edx, [r8 + r8*4]	      1840	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002e31	             0x1d2	                            add edx, edx	      1840	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002e33	          0x4129d1	                            sub r9d, edx	      1840	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002e36	          0x4489ca	                            mov edx, r9d	      1840	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002e39	          0x4589c1	                            mov r9d, r8d	      1841	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002e3c	        0x440fb7c0	                           movzx r8d, ax	      1841	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002e40	    0x4569c0cdcc00	                   imul r8d, r8d, 0xcccd	      1841	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002e47	        0x41c1e813	                           shr r8d, 0x13	      1841	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002e4b	        0x478d3480	                   lea r14d, [r8 + r8*4]	      1841	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002e4f	          0x4501f6	                          add r14d, r14d	      1841	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002e52	          0x4429f0	                           sub eax, r14d	      1841	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002e55	             0x9c2	                             or edx, eax	      1841	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002e57	          0x4489c0	                            mov eax, r8d	      1843	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002e5a	        0x6683fa01	                               cmp dx, 1	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4002e5e	            0x7750	                            ja 0x4002eb0	      1844	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4002e60	          0x4939f7	                            cmp r15, rsi	      1848	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4002e63	     0xf8417010000	                            je 0x4002f80	      1848	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4002e69	        0x4983c201	                              add r10, 1	      1848	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4002e6d	        0x4983fa03	                              cmp r10, 3	      1838	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002e71	            0x7595	                           jne 0x4002e08	      1838	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2
0x4002e73	        0x4883c602	                              add rsi, 2	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x4002e77	        0x4983c302	                              add r11, 2	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x4002e7b	        0x4883c502	                              add rbp, 2	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x4002e7f	          0x4c39fe	                            cmp rsi, r15	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x4002e82	     0xf8658ffffff	                           jbe 0x4002de0	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x4002e88	          0x4829fe	                            sub rsi, rdi	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x4002e8b	          0x48d1ee	                              shr rsi, 1	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x4002e8e	          0x4989f0	                             mov r8, rsi	      1828	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1
0x4002e91	          0x4489c6	                            mov esi, r8d	      1853	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_12
0x4002e94	      0xe847d8ffff	                   call sym.decGetDigits	      1853	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_12
0x4002e99	    0xc74304000000	                  mov dword [rbx + 4], 0	      1854	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002ea0	            0x8903	                    mov dword [rbx], eax	      1853	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_12
0x4002ea2	        0xc6430800	                   mov byte [rbx + 8], 0	      1855	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002ea6	            0xeb2c	                           jmp 0x4002ed4	      1856	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002ea8	     0xf1f84000000	                   nop dword [rax + rax]	      1856	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002eb0	            0x31f6	                            xor esi, esi	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4002eb2	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4002eb9	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4002ebf	        0x6689730a	                mov word [rbx + 0xa], si	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4002ec3	        0xc6430820	                mov byte [rbx + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x4002ec7	      0xbe80000000	                           mov esi, 0x80	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4002ecc	          0x4889cf	                            mov rdi, rcx	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4002ecf	      0xe800000000	                          call 0x4002ed4	      7744	decNumber.c	FUNCTION_24	CALL_2
0x4002ed4	        0x4883c418	                           add rsp, 0x18	      1857	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002ed8	          0x4889d8	                            mov rax, rbx	      1857	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002edb	              0x5b	                                 pop rbx	      1857	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002edc	              0x5d	                                 pop rbp	      1857	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002edd	            0x415c	                                 pop r12	      1857	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002edf	            0x415d	                                 pop r13	      1857	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002ee1	            0x415e	                                 pop r14	      1857	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002ee3	            0x415f	                                 pop r15	      1857	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002ee5	              0xc3	                                     ret	      1857	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002ee6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1857	decNumber.c	FUNCTION_68	FUNCTION_31
0x4002ef0	          0x4531c9	                            xor r9d, r9d	      1830	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	IF_3
0x4002ef3	          0x4939ed	                            cmp r13, rbp	      1832	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	IF_4
0x4002ef6	     0xf83f8feffff	                           jae 0x4002df4	      1832	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	IF_4
0x4002efc	            0x31c0	                            xor eax, eax	      1834	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2
0x4002efe	          0x668906	                      mov word [rsi], ax	      1834	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2
0x4002f01	      0xe96dffffff	                           jmp 0x4002e73	      1834	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2
0x4002f06	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1834	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2
0x4002f10	        0x448d4e02	                      lea r9d, [rsi + 2]	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002f14	      0xba56555555	                     mov edx, 0x55555556	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002f19	          0x4489c8	                            mov eax, r9d	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002f1c	        0x41c1f91f	                           sar r9d, 0x1f	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002f20	            0xf7ea	                                imul edx	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002f22	          0x4429ca	                            sub edx, r9d	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002f25	          0x4863c2	                         movsxd rax, edx	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002f28	      0x4c8d7c47fe	              lea r15, [rdi + rax*2 - 2]	      1826	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_9
0x4002f2d	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002f31	      0xe98efeffff	                           jmp 0x4002dc4	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002f36	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1827	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_10
0x4002f40	          0x8d7002	                      lea esi, [rax + 2]	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002f43	      0xba56555555	                     mov edx, 0x55555556	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002f48	            0x89f0	                            mov eax, esi	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002f4a	            0xf7ea	                                imul edx	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002f4c	            0x89f0	                            mov eax, esi	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002f4e	          0xc1f81f	                           sar eax, 0x1f	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002f51	            0x29c2	                            sub edx, eax	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002f53	          0x4863d2	                         movsxd rdx, edx	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002f56	      0x4c8d6c12fe	                lea r13, [rdx + rdx - 2]	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002f5b	      0xe943feffff	                           jmp 0x4002da3	      1825	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_8
0x4002f60	          0x8d7002	                      lea esi, [rax + 2]	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002f63	      0xba56555555	                     mov edx, 0x55555556	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002f68	            0x89f0	                            mov eax, esi	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002f6a	            0xf7ea	                                imul edx	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002f6c	            0x89f0	                            mov eax, esi	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002f6e	          0xc1f81f	                           sar eax, 0x1f	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002f71	            0x29c2	                            sub edx, eax	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002f73	          0x4863d2	                         movsxd rdx, edx	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002f76	      0x4c8d6412fe	                lea r12, [rdx + rdx - 2]	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002f7b	      0xe908feffff	                           jmp 0x4002d88	      1824	decNumber.c	FUNCTION_68	FUNCTION_31	CALL_7
0x4002f80	      0x443954240c	            cmp dword [rsp + 0xc], r10d 	      1848	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4002f85	     0xf85defeffff	                           jne 0x4002e69	      1848	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4002f8b	      0xe9e3feffff	                           jmp 0x4002e73	      1848	decNumber.c	FUNCTION_68	FUNCTION_31	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
decGetDigits	ELSE,0:DO,0:CALL,1:IF,6:functions,0:SWITCH,0:WHILE,0:FOR,2	26
0x40006e0	          0x4863c6	                         movsxd rax, esi	      7762	decNumber.c	FUNCTION_25
0x40006e3	      0x488d5447fe	              lea rdx, [rdi + rax*2 - 2]	      7762	decNumber.c	FUNCTION_25
0x40006e8	        0x8d4476fe	              lea eax, [rsi + rsi*2 - 2]	      7763	decNumber.c	FUNCTION_25
0x40006ec	          0x4839d7	                            cmp rdi, rdx	      7772	decNumber.c	FUNCTION_25	FOR_1
0x40006ef	            0x773b	                            ja 0x400072c	      7772	decNumber.c	FUNCTION_25	FOR_1
0x40006f1	           0xfb70a	                   movzx ecx, word [rdx]	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x40006f4	          0x6685c9	                             test cx, cx	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x40006f7	            0x751f	                           jne 0x4000718	      7773	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x40006f9	          0x83f801	                              cmp eax, 1	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x40006fc	            0x7412	                            je 0x4000710	      7774	decNumber.c	FUNCTION_25	FOR_1	IF_2	IF_3
0x40006fe	        0x4883ea02	                              sub rdx, 2	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4000702	          0x83e803	                              sub eax, 3	      7775	decNumber.c	FUNCTION_25	FOR_1	IF_2
0x4000705	          0x4839d7	                            cmp rdi, rdx	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4000708	            0x76e7	                           jbe 0x40006f1	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400070a	            0xf3c3	                                     ret	      7772	decNumber.c	FUNCTION_25	FOR_1
0x400070c	         0xf1f4000	                         nop dword [rax]	      7772	decNumber.c	FUNCTION_25	FOR_1
0x4000710	            0xf3c3	                                     ret	      7796	decNumber.c	FUNCTION_25
0x4000712	    0x660f1f440000	                    nop word [rax + rax]	      7796	decNumber.c	FUNCTION_25
0x4000718	        0x6683f909	                               cmp cx, 9	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x400071c	            0x76f2	                           jbe 0x4000710	      7779	decNumber.c	FUNCTION_25	FOR_1	IF_4
0x400071e	          0x8d5001	                      lea edx, [rax + 1]	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4000721	          0x83c002	                              add eax, 2	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4000724	        0x6683f963	                            cmp cx, 0x63	      7780	decNumber.c	FUNCTION_25	FOR_1
0x4000728	           0xf46c2	                         cmovbe eax, edx	      7780	decNumber.c	FUNCTION_25	FOR_1
0x400072b	              0xc3	                                     ret	      7780	decNumber.c	FUNCTION_25	FOR_1
0x400072c	            0xf3c3	                                     ret	      7780	decNumber.c	FUNCTION_25	FOR_1
decSetSubnormal	ELSE,0:DO,0:CALL,5:IF,7:functions,1:SWITCH,0:WHILE,0:FOR,0	104
0x4001cf0	            0x4156	                                push r14	      7423	decNumber.c	FUNCTION_18
0x4001cf2	            0x4155	                                push r13	      7423	decNumber.c	FUNCTION_18
0x4001cf4	          0x4989d5	                            mov r13, rdx	      7423	decNumber.c	FUNCTION_18
0x4001cf7	            0x4154	                                push r12	      7423	decNumber.c	FUNCTION_18
0x4001cf9	              0x55	                                push rbp	      7423	decNumber.c	FUNCTION_18
0x4001cfa	          0x4889cd	                            mov rbp, rcx	      7423	decNumber.c	FUNCTION_18
0x4001cfd	              0x53	                                push rbx	      7423	decNumber.c	FUNCTION_18
0x4001cfe	          0x4889fb	                            mov rbx, rdi	      7423	decNumber.c	FUNCTION_18
0x4001d01	        0x4883ec30	                           sub rsp, 0x30	      7423	decNumber.c	FUNCTION_18
0x4001d05	        0x448b6608	               mov r12d, dword [rsi + 8]	      7439	decNumber.c	FUNCTION_18
0x4001d09	    0x64488b042528	                mov rax, qword fs:[0x28]	      7423	decNumber.c	FUNCTION_18
0x4001d12	      0x4889442428	             mov qword [rsp + 0x28], rax	      7423	decNumber.c	FUNCTION_18
0x4001d17	            0x31c0	                            xor eax, eax	      7423	decNumber.c	FUNCTION_18
0x4001d19	            0x8b06	                    mov eax, dword [rsi]	      7439	decNumber.c	FUNCTION_18
0x4001d1b	          0x83e801	                              sub eax, 1	      7439	decNumber.c	FUNCTION_18
0x4001d1e	          0x4129c4	                           sub r12d, eax	      7439	decNumber.c	FUNCTION_18
0x4001d21	      0x66837f0a00	                 cmp word [rdi + 0xa], 0	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x4001d26	            0x7509	                           jne 0x4001d31	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x4001d28	          0x833f01	                      cmp dword [rdi], 1	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x4001d2b	     0xf84cf000000	                            je 0x4001e00	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x4001d31	          0x8b4500	                    mov eax, dword [rbp]	      7456	decNumber.c	FUNCTION_18
0x4001d34	            0x89c2	                            mov edx, eax	      7456	decNumber.c	FUNCTION_18
0x4001d36	          0x80ce10	                             or dh, 0x10	      7456	decNumber.c	FUNCTION_18
0x4001d39	          0x895500	                    mov dword [rbp], edx	      7456	decNumber.c	FUNCTION_18
0x4001d3c	          0x4489e2	                           mov edx, r12d	      7457	decNumber.c	FUNCTION_18
0x4001d3f	          0x2b5304	                sub edx, dword [rbx + 4]	      7457	decNumber.c	FUNCTION_18
0x4001d42	            0x85d2	                           test edx, edx	      7458	decNumber.c	FUNCTION_18	IF_3
0x4001d44	     0xf8e86000000	                           jle 0x4001dd0	      7458	decNumber.c	FUNCTION_18	IF_3
0x4001d4a	          0x488b06	                    mov rax, qword [rsi]	      7468	decNumber.c	FUNCTION_18
0x4001d4d	            0x8b0b	                    mov ecx, dword [rbx]	      7469	decNumber.c	FUNCTION_18
0x4001d4f	        0x4c8d730a	                    lea r14, [rbx + 0xa]	      7472	decNumber.c	FUNCTION_18	CALL_2
0x4001d53	          0x4989e9	                             mov r9, rbp	      7472	decNumber.c	FUNCTION_18	CALL_2
0x4001d56	          0x4d89e8	                             mov r8, r13	      7472	decNumber.c	FUNCTION_18	CALL_2
0x4001d59	          0x4889df	                            mov rdi, rbx	      7472	decNumber.c	FUNCTION_18	CALL_2
0x4001d5c	        0x48890424	                    mov qword [rsp], rax	      7468	decNumber.c	FUNCTION_18
0x4001d60	        0x488b4608	                mov rax, qword [rsi + 8]	      7468	decNumber.c	FUNCTION_18
0x4001d64	      0x4889442408	                mov qword [rsp + 8], rax	      7468	decNumber.c	FUNCTION_18
0x4001d69	        0x488b4610	            mov rax, qword [rsi + 0x10] 	      7468	decNumber.c	FUNCTION_18
0x4001d6d	        0x29542408	                sub dword [rsp + 8], edx	      7470	decNumber.c	FUNCTION_18
0x4001d71	      0x4889442410	             mov qword [rsp + 0x10], rax	      7468	decNumber.c	FUNCTION_18
0x4001d76	          0x8b4618	            mov eax, dword [rsi + 0x18] 	      7468	decNumber.c	FUNCTION_18
0x4001d79	          0x4889e6	                            mov rsi, rsp	      7472	decNumber.c	FUNCTION_18	CALL_2
0x4001d7c	        0x89442418	             mov dword [rsp + 0x18], eax	      7468	decNumber.c	FUNCTION_18
0x4001d80	            0x89c8	                            mov eax, ecx	      7469	decNumber.c	FUNCTION_18
0x4001d82	            0x29d0	                            sub eax, edx	      7469	decNumber.c	FUNCTION_18
0x4001d84	          0x4c89f2	                            mov rdx, r14	      7472	decNumber.c	FUNCTION_18	CALL_2
0x4001d87	          0x890424	                    mov dword [rsp], eax	      7469	decNumber.c	FUNCTION_18
0x4001d8a	      0xe841f5ffff	             call sym.decSetCoeff.isra.3	      7472	decNumber.c	FUNCTION_18	CALL_2
0x4001d8f	        0x418b5500	                    mov edx, dword [r13]	      7473	decNumber.c	FUNCTION_18	CALL_3
0x4001d93	            0x85d2	                           test edx, edx	      7069	decNumber.c	FUNCTION_13	IF_1
0x4001d95	     0xf85a5000000	                           jne 0x4001e40	      7069	decNumber.c	FUNCTION_13	IF_1
0x4001d9b	          0x8b4500	                    mov eax, dword [rbp]	      7477	decNumber.c	FUNCTION_18	IF_5
0x4001d9e	            0xa820	                           test al, 0x20	      7477	decNumber.c	FUNCTION_18	IF_5
0x4001da0	            0x7406	                            je 0x4001da8	      7477	decNumber.c	FUNCTION_18	IF_5
0x4001da2	          0x80cc20	                             or ah, 0x20	      7477	decNumber.c	FUNCTION_18	IF_5
0x4001da5	          0x894500	                    mov dword [rbp], eax	      7477	decNumber.c	FUNCTION_18	IF_5
0x4001da8	        0x443b6304	               cmp r12d, dword [rbx + 4]	      7481	decNumber.c	FUNCTION_18	IF_6
0x4001dac	            0x7c72	                            jl 0x4001e20	      7481	decNumber.c	FUNCTION_18	IF_6
0x4001dae	      0x66837b0a00	                 cmp word [rbx + 0xa], 0	      7487	decNumber.c	FUNCTION_18	CALL_5
0x4001db3	            0x7525	                           jne 0x4001dda	      7487	decNumber.c	FUNCTION_18	CALL_5
0x4001db5	          0x833b01	                      cmp dword [rbx], 1	      7487	decNumber.c	FUNCTION_18	CALL_5
0x4001db8	            0x7520	                           jne 0x4001dda	      7487	decNumber.c	FUNCTION_18	CALL_5
0x4001dba	        0xf6430870	               test byte [rbx + 8], 0x70	      7487	decNumber.c	FUNCTION_18	CALL_5
0x4001dbe	            0x751a	                           jne 0x4001dda	      7487	decNumber.c	FUNCTION_18	CALL_5
0x4001dc0	    0x814d00000400	                   or dword [rbp], 0x400	      7487	decNumber.c	FUNCTION_18	CALL_5
0x4001dc7	            0xeb11	                           jmp 0x4001dda	      7487	decNumber.c	FUNCTION_18	CALL_5
0x4001dc9	     0xf1f80000000	                         nop dword [rax]	      7487	decNumber.c	FUNCTION_18	CALL_5
0x4001dd0	            0xa820	                           test al, 0x20	      7462	decNumber.c	FUNCTION_18	IF_3	IF_4
0x4001dd2	            0x7406	                            je 0x4001dda	      7462	decNumber.c	FUNCTION_18	IF_3	IF_4
0x4001dd4	          0x80cc30	                             or ah, 0x30	      7462	decNumber.c	FUNCTION_18	IF_3	IF_4
0x4001dd7	          0x894500	                    mov dword [rbp], eax	      7462	decNumber.c	FUNCTION_18	IF_3	IF_4
0x4001dda	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      7488	decNumber.c	FUNCTION_18
0x4001ddf	    0x644833042528	                xor rax, qword fs:[0x28]	      7488	decNumber.c	FUNCTION_18
0x4001de8	            0x7569	                           jne 0x4001e53	      7488	decNumber.c	FUNCTION_18
0x4001dea	        0x4883c430	                           add rsp, 0x30	      7488	decNumber.c	FUNCTION_18
0x4001dee	              0x5b	                                 pop rbx	      7488	decNumber.c	FUNCTION_18
0x4001def	              0x5d	                                 pop rbp	      7488	decNumber.c	FUNCTION_18
0x4001df0	            0x415c	                                 pop r12	      7488	decNumber.c	FUNCTION_18
0x4001df2	            0x415d	                                 pop r13	      7488	decNumber.c	FUNCTION_18
0x4001df4	            0x415e	                                 pop r14	      7488	decNumber.c	FUNCTION_18
0x4001df6	              0xc3	                                     ret	      7488	decNumber.c	FUNCTION_18
0x4001df7	    0x660f1f840000	                    nop word [rax + rax]	      7488	decNumber.c	FUNCTION_18
0x4001e00	        0xf6470870	               test byte [rdi + 8], 0x70	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x4001e04	     0xf8527ffffff	                           jne 0x4001d31	      7441	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x4001e0a	        0x443b6704	               cmp r12d, dword [rdi + 4]	      7449	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x4001e0e	            0x7eca	                           jle 0x4001dda	      7449	decNumber.c	FUNCTION_18	IF_2	FUNCTION_1
0x4001e10	        0x44896704	               mov dword [rdi + 4], r12d	      7450	decNumber.c	FUNCTION_18	FUNCTION_1
0x4001e14	    0x810900040000	                   or dword [rcx], 0x400	      7451	decNumber.c	FUNCTION_18	FUNCTION_1
0x4001e1a	            0xebbe	                           jmp 0x4001dda	      7451	decNumber.c	FUNCTION_18	FUNCTION_1
0x4001e1c	         0xf1f4000	                         nop dword [rax]	      7451	decNumber.c	FUNCTION_18	FUNCTION_1
0x4001e20	            0x8b33	                    mov esi, dword [rbx]	      7451	decNumber.c	FUNCTION_18	FUNCTION_1
0x4001e22	      0xba01000000	                              mov edx, 1	      7451	decNumber.c	FUNCTION_18	FUNCTION_1
0x4001e27	          0x4c89f7	                            mov rdi, r14	      7451	decNumber.c	FUNCTION_18	FUNCTION_1
0x4001e2a	      0xe821efffff	          call sym.decShiftToMost.part.0	      7451	decNumber.c	FUNCTION_18	FUNCTION_1
0x4001e2f	        0x836b0401	                  sub dword [rbx + 4], 1	      7483	decNumber.c	FUNCTION_18	IF_6
0x4001e33	            0x8903	                    mov dword [rbx], eax	      7482	decNumber.c	FUNCTION_18	IF_6	CALL_4
0x4001e35	      0xe974ffffff	                           jmp 0x4001dae	      7482	decNumber.c	FUNCTION_18	IF_6	CALL_4
0x4001e3a	    0x660f1f440000	                    nop word [rax + rax]	      7482	decNumber.c	FUNCTION_18	IF_6	CALL_4
0x4001e40	          0x4889e9	                            mov rcx, rbp	      7482	decNumber.c	FUNCTION_18	IF_6	CALL_4
0x4001e43	          0x4889e6	                            mov rsi, rsp	      7482	decNumber.c	FUNCTION_18	IF_6	CALL_4
0x4001e46	          0x4889df	                            mov rdi, rbx	      7482	decNumber.c	FUNCTION_18	IF_6	CALL_4
0x4001e49	      0xe872fbffff	           call sym.decApplyRound.part.9	      7482	decNumber.c	FUNCTION_18	IF_6	CALL_4
0x4001e4e	      0xe948ffffff	                           jmp 0x4001d9b	      7482	decNumber.c	FUNCTION_18	IF_6	CALL_4
0x4001e53	      0xe800000000	                          call 0x4001e58	      7488	decNumber.c	FUNCTION_18
decAddOp	ELSE,8:DO,1:CALL,44:IF,49:functions,0:SWITCH,0:WHILE,0:FOR,0	518
0x4004bf0	            0x4157	                                push r15	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004bf2	            0x4156	                                push r14	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004bf4	          0x4589c7	                           mov r15d, r8d	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004bf7	            0x4155	                                push r13	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004bf9	            0x4154	                                push r12	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004bfb	          0x4989cc	                            mov r12, rcx	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004bfe	              0x55	                                push rbp	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004bff	              0x53	                                push rbx	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004c00	          0x4889d5	                            mov rbp, rdx	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004c03	          0x4889fb	                            mov rbx, rdi	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004c06	    0x4881ec980000	                           sub rsp, 0x98	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004c0d	         0xfb64e08	               movzx ecx, byte [rsi + 8]	      3841	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004c11	    0x64488b042528	                mov rax, qword fs:[0x28]	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004c1a	    0x488984248800	             mov qword [rsp + 0x88], rax	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004c22	            0x31c0	                            xor eax, eax	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004c24	         0xfb64208	               movzx eax, byte [rdx + 8]	      3841	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004c28	        0x4c890c24	                     mov qword [rsp], r9	      3799	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004c2c	            0x89ca	                            mov edx, ecx	      3841	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004c2e	            0x31c2	                            xor edx, eax	      3841	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004c30	          0x4431c2	                            xor edx, r8d	      3841	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004c33	          0x83e280	                     and edx, 0xffffff80	      3841	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004c36	        0x88542422	               mov byte [rsp + 0x22], dl	      3841	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004c3a	            0x89ca	                            mov edx, ecx	      3844	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7
0x4004c3c	             0x9c2	                             or edx, eax	      3844	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7
0x4004c3e	          0xf6c270	                           test dl, 0x70	      3844	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7
0x4004c41	            0x746d	                            je 0x4004cb0	      3844	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7
0x4004c43	          0x83e230	                           and edx, 0x30	      3845	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	IF_8
0x4004c46	     0xf856c040000	                           jne 0x40050b8	      3845	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	IF_8
0x4004c4c	          0xf6c140	                           test cl, 0x40	      3848	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	CALL_6
0x4004c4f	     0xf85eb030000	                           jne 0x4005040	      3848	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	CALL_6
0x4004c55	          0x4431c0	                            xor eax, r8d	      3856	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	ELSE_2
0x4004c58	            0x89c1	                            mov ecx, eax	      3856	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	ELSE_2
0x4004c5a	          0x83e180	                     and ecx, 0xffffff80	      3856	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	ELSE_2
0x4004c5d	            0x31f6	                            xor esi, esi	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4004c5f	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4004c66	          0x83c940	                            or ecx, 0x40	      3859	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1
0x4004c69	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4004c6f	        0x6689730a	                mov word [rbx + 0xa], si	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4004c73	          0x884b08	                  mov byte [rbx + 8], cl	      3859	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1
0x4004c76	          0x4531ff	                          xor r15d, r15d	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004c79	          0x4c89ff	                            mov rdi, r15	      4133	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004c7c	      0xe800000000	                          call 0x4004c81	      4133	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004c81	          0x4889d8	                            mov rax, rbx	      4139	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004c84	    0x488b9c248800	            mov rbx, qword [rsp + 0x88] 	      4139	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004c8c	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4139	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004c95	     0xf850a070000	                           jne 0x40053a5	      4139	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004c9b	    0x4881c4980000	                           add rsp, 0x98	      4139	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004ca2	              0x5b	                                 pop rbx	      4139	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004ca3	              0x5d	                                 pop rbp	      4139	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004ca4	            0x415c	                                 pop r12	      4139	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004ca6	            0x415d	                                 pop r13	      4139	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004ca8	            0x415e	                                 pop r14	      4139	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004caa	            0x415f	                                 pop r15	      4139	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004cac	              0xc3	                                     ret	      4139	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004cad	           0xf1f00	                         nop dword [rax]	      4139	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004cb0	         0xfb77e0a	            movzx edi, word [rsi + 0xa] 	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x4004cb4	          0x448b1e	                   mov r11d, dword [rsi]	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x4004cb7	          0x6685ff	                             test di, di	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x4004cba	      0x66897c2410	               mov word [rsp + 0x10], di	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x4004cbf	     0xf84fb010000	                            je 0x4004ec0	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x4004cc5	      0x440fb7750a	           movzx r14d, word [rbp + 0xa] 	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x4004cca	        0x418b3c24	                    mov edi, dword [r12]	      3815	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004cce	        0x448b6d00	                   mov r13d, dword [rbp]	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x4004cd2	        0x897c2408	                mov dword [rsp + 8], edi	      3815	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004cd6	        0x664585f6	                         test r14w, r14w	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x4004cda	            0x750a	                           jne 0x4004ce6	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x4004cdc	        0x4183fd01	                             cmp r13d, 1	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x4004ce0	     0xf8482020000	                            je 0x4004f68	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x4004ce6	          0x8b5504	                mov edx, dword [rbp + 4]	      3931	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004ce9	          0x4189d1	                            mov r9d, edx	      3936	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x4004cec	        0x442b4e04	                sub r9d, dword [rsi + 4]	      3936	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x4004cf0	     0xf858a020000	                           jne 0x4004f80	      3936	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x4004cf6	        0x4183fd03	                             cmp r13d, 3	      3937	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x4004cfa	     0xf8ed0030000	                           jle 0x40050d0	      3937	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x4004d00	          0x4489ef	                           mov edi, r13d	      3937	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x4004d03	    0x41be01000000	                             mov r14d, 1	      3976	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004d09	          0x4531c0	                            xor r8d, r8d	      3974	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004d0c	       0xfb6542422	           movzx edx, byte [rsp + 0x22] 	      4018	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_35
0x4004d11	          0x4489f0	                           mov eax, r14d	      4018	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_35
0x4004d14	            0xf7d8	                                 neg eax	      4018	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_35
0x4004d16	            0x84d2	                             test dl, dl	      4018	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_35
0x4004d18	        0x440f45f0	                        cmovne r14d, eax	      4018	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_35
0x4004d1c	          0x4439df	                           cmp edi, r11d	      4018	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_35
0x4004d1f	        0x488d430a	                    lea rax, [rbx + 0xa]	      4026	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004d23	        0x410f4cfb	                         cmovl edi, r11d	      4026	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004d27	        0x397c2408	                cmp dword [rsp + 8], edi	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x4004d2b	      0x4889442410	             mov qword [rsp + 0x10], rax	      4026	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004d30	            0x7e12	                           jle 0x4004d44	      4030	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x4004d32	          0x4839eb	                            cmp rbx, rbp	      4031	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x4004d35	     0xf854d040000	                           jne 0x4005188	      4031	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x4004d3b	          0x4585c0	                           test r8d, r8d	      4031	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x4004d3e	     0xf8e44040000	                           jle 0x4005188	      4031	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x4004d44	          0x83ff31	                           cmp edi, 0x31	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4004d47	     0xf8e1b030000	                           jle 0x4005068	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4004d4d	          0x83c702	                              add edi, 2	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4004d50	      0xba56555555	                     mov edx, 0x55555556	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4004d55	            0x89f8	                            mov eax, edi	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4004d57	          0xc1ff1f	                           sar edi, 0x1f	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4004d5a	            0xf7ea	                                imul edx	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4004d5c	            0x29fa	                            sub edx, edi	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4004d5e	          0x8d7a01	                      lea edi, [rdx + 1]	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4004d61	          0x4863ff	                         movsxd rdi, edi	      4036	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x4004d64	          0x4531ff	                          xor r15d, r15d	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x4004d67	      0x4c8d542440	                   lea r10, [rsp + 0x40]	      4035	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37
0x4004d6c	          0x4801ff	                            add rdi, rdi	      4036	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x4004d6f	        0x4883ff3e	                           cmp rdi, 0x3e	      4036	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x4004d73	     0xf8787040000	                            ja 0x4005200	      4036	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x4004d79	          0x83e180	                     and ecx, 0xffffff80	      4046	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004d7c	        0x4183fd31	                          cmp r13d, 0x31	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004d80	          0x884b08	                  mov byte [rbx + 8], cl	      4046	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004d83	          0x8b4604	                mov eax, dword [rsi + 4]	      4047	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004d86	          0x894304	                mov dword [rbx + 4], eax	      4047	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004d89	     0xf8f21040000	                            jg 0x40051b0	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004d8f	          0x4963cd	                        movsxd rcx, r13d	      4057	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_31
0x4004d92	        0x4883c50a	                            add rbp, 0xa	      4057	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_31
0x4004d96	        0x4183fb31	                          cmp r11d, 0x31	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004d9a	     0xfb689000000	                   movzx ecx, byte [rcx]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004da1	     0xf8f2b040000	                            jg 0x40051d2	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004da7	          0x4963c3	                        movsxd rax, r11d	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004daa	     0xfb680000000	                   movzx eax, byte [rax]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004db1	        0x4883ec08	                              sub rsp, 8	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004db5	        0x488d7e0a	                    lea rdi, [rsi + 0xa]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004db9	          0x4d89d1	                             mov r9, r10	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004dbc	            0x4156	                                push r14	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004dbe	          0x4889ea	                            mov rdx, rbp	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004dc1	            0x89c6	                            mov esi, eax	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004dc3	      0x4c89542428	             mov qword [rsp + 0x28], r10	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004dc8	      0xe873b2ffff	                  call sym.decUnitAddSub	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004dcd	          0x8d0c40	                  lea ecx, [rax + rax*2]	      4059	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004dd0	              0x58	                                 pop rax	      4060	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x4004dd1	            0x85c9	                           test ecx, ecx	      4060	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x4004dd3	              0x5a	                                 pop rdx	      4060	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x4004dd4	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	      4060	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x4004dd9	     0xf8811040000	                            js 0x40051f0	      4060	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x4004ddf	            0x890b	                    mov dword [rbx], ecx	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x4004de1	      0x4c3b542410	            cmp r10, qword [rsp + 0x10] 	      4072	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41
0x4004de6	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	      4071	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004dee	      0x4c8d74243c	                   lea r14, [rsp + 0x3c]	      4071	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004df3	            0x744b	                            je 0x4004e40	      4072	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41
0x4004df5	        0x394c2408	                cmp dword [rsp + 8], ecx	      4078	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	IF_43
0x4004df9	            0x7d29	                           jge 0x4004e24	      4078	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	IF_43
0x4004dfb	          0x83f931	                           cmp ecx, 0x31	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4004dfe	     0xf8f4c040000	                            jg 0x4005250	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4004e04	          0x4863c9	                         movsxd rcx, ecx	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4004e07	     0xfb6b1000000	                   movzx esi, byte [rcx]	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4004e0e	          0x4c89d7	                            mov rdi, r10	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4004e11	      0x4c89542408	                mov qword [rsp + 8], r10	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4004e16	      0xe8c5b8ffff	                   call sym.decGetDigits	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4004e1b	      0x4c8b542408	                mov r10, qword [rsp + 8]	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4004e20	            0x89c1	                            mov ecx, eax	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4004e22	            0x8903	                    mov dword [rbx], eax	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4004e24	      0x4c8d74243c	                   lea r14, [rsp + 0x3c]	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x4004e29	        0x4c8b0c24	                     mov r9, qword [rsp]	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x4004e2d	          0x4c89d2	                            mov rdx, r10	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x4004e30	          0x4c89e6	                            mov rsi, r12	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x4004e33	          0x4889df	                            mov rdi, rbx	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x4004e36	          0x4d89f0	                             mov r8, r14	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x4004e39	      0xe892c4ffff	             call sym.decSetCoeff.isra.3	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x4004e3e	            0x8b0b	                    mov ecx, dword [rbx]	      4080	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_36
0x4004e40	          0x83f931	                           cmp ecx, 0x31	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x4004e43	     0xf8f4f030000	                            jg 0x4005198	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x4004e49	          0x4863c9	                         movsxd rcx, ecx	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x4004e4c	     0xfb6b1000000	                   movzx esi, byte [rcx]	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x4004e53	        0x488d7b0a	                    lea rdi, [rbx + 0xa]	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x4004e57	      0xe884b8ffff	                   call sym.decGetDigits	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x4004e5c	        0x488b0c24	                    mov rcx, qword [rsp]	      4117	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004e60	            0x8903	                    mov dword [rbx], eax	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x4004e62	          0x4c89f2	                            mov rdx, r14	      4117	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004e65	          0x4c89e6	                            mov rsi, r12	      4117	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004e68	          0x4889df	                            mov rdi, rbx	      4117	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004e6b	      0xe8f0cfffff	                    call sym.decFinalize	      4117	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004e70	      0x66837b0a00	                 cmp word [rbx + 0xa], 0	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x4004e75	     0xf85fefdffff	                           jne 0x4004c79	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x4004e7b	          0x833b01	                      cmp dword [rbx], 1	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x4004e7e	     0xf85f5fdffff	                           jne 0x4004c79	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x4004e84	         0xfb64308	               movzx eax, byte [rbx + 8]	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x4004e88	            0xa870	                           test al, 0x70	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x4004e8a	     0xf85e9fdffff	                           jne 0x4004c79	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x4004e90	      0x807c242200	                cmp byte [rsp + 0x22], 0	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x4004e95	     0xf84defdffff	                            je 0x4004c79	      4123	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	CALL_44
0x4004e9b	        0x488b3424	                    mov rsi, qword [rsp]	      4127	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48
0x4004e9f	          0xf60620	                   test byte [rsi], 0x20	      4127	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48
0x4004ea2	     0xf85d1fdffff	                           jne 0x4004c79	      4127	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48
0x4004ea8	    0x41837c240c06	                cmp dword [r12 + 0xc], 6	      4128	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	IF_49
0x4004eae	     0xf8473040000	                            je 0x4005327	      4128	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	IF_49
0x4004eb4	          0x83e07f	                           and eax, 0x7f	      4129	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	ELSE_8
0x4004eb7	          0x884308	                  mov byte [rbx + 8], al	      4129	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	ELSE_8
0x4004eba	      0xe9bafdffff	                           jmp 0x4004c79	      4129	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	ELSE_8
0x4004ebf	              0x90	                                     nop	      4129	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	ELSE_8
0x4004ec0	        0x4183fb01	                             cmp r11d, 1	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x4004ec4	     0xf85fbfdffff	                           jne 0x4004cc5	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x4004eca	          0xf6c170	                           test cl, 0x70	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x4004ecd	     0xf85f2fdffff	                           jne 0x4004cc5	      3865	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	CALL_9
0x4004ed3	        0x448b6e04	               mov r13d, dword [rsi + 4]	      3867	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4004ed7	          0x884308	                  mov byte [rbx + 8], al	      6839	decNumber.c	FUNCTION_11
0x4004eda	      0x4c8d74243c	                   lea r14, [rsp + 0x3c]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4004edf	          0x8b4504	                mov eax, dword [rbp + 4]	      6840	decNumber.c	FUNCTION_11
0x4004ee2	          0x8b4d00	                    mov ecx, dword [rbp]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4004ee5	        0x488d550a	                    lea rdx, [rbp + 0xa]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4004ee9	        0x4c8b0c24	                     mov r9, qword [rsp]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4004eed	          0x4d89f0	                             mov r8, r14	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4004ef0	          0x4c89e6	                            mov rsi, r12	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4004ef3	          0x4889df	                            mov rdi, rbx	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4004ef6	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	      3869	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4004efe	          0x4489ed	                           mov ebp, r13d	      3876	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12
0x4004f01	          0x894304	                mov dword [rbx + 4], eax	      6840	decNumber.c	FUNCTION_11
0x4004f04	      0xe8c7c3ffff	             call sym.decSetCoeff.isra.3	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4004f09	          0x4589fa	                          mov r10d, r15d	      3871	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4004f0c	          0x2b6b04	                sub ebp, dword [rbx + 4]	      3876	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12
0x4004f0f	        0x44325308	                xor r10b, byte [rbx + 8]	      3871	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4004f13	      0x66837b0a00	                 cmp word [rbx + 0xa], 0	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x4004f18	        0x44885308	                mov byte [rbx + 8], r10b	      3871	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4004f1c	            0x7509	                           jne 0x4004f27	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x4004f1e	          0x833b01	                      cmp dword [rbx], 1	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x4004f21	     0xf840b040000	                            je 0x4005332	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x4004f27	            0x85ed	                           test ebp, ebp	      3886	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17
0x4004f29	     0xf89f4000000	                           jns 0x4005023	      3886	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17
0x4004f2f	            0x8b03	                    mov eax, dword [rbx]	      3914	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x4004f31	        0x418b1424	                    mov edx, dword [r12]	      3914	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x4004f35	            0x89c1	                            mov ecx, eax	      3914	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x4004f37	            0x29e9	                            sub ecx, ebp	      3914	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x4004f39	            0x39d1	                            cmp ecx, edx	      3914	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x4004f3b	            0x7e10	                           jle 0x4004f4d	      3914	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x4004f3d	            0x29d0	                            sub eax, edx	      3915	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x4004f3f	            0x89c5	                            mov ebp, eax	      3915	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x4004f41	        0x488b0424	                    mov rax, qword [rsp]	      3916	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x4004f45	    0x810800080000	                   or dword [rax], 0x800	      3916	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x4004f4b	            0x8b03	                    mov eax, dword [rbx]	      3916	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21	IF_22
0x4004f4d	            0x89ea	                            mov edx, ebp	      6684	decNumber.c	FUNCTION_8	IF_1
0x4004f4f	            0xf7da	                                 neg edx	      6684	decNumber.c	FUNCTION_8	IF_1
0x4004f51	     0xf8579030000	                           jne 0x40052d0	      6684	decNumber.c	FUNCTION_8	IF_1
0x4004f57	            0x8903	                    mov dword [rbx], eax	      3891	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	CALL_12
0x4004f59	           0x16b04	                add dword [rbx + 4], ebp	      3892	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17
0x4004f5c	      0xe9c2000000	                           jmp 0x4005023	      3892	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17
0x4004f61	     0xf1f80000000	                         nop dword [rax]	      3892	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17
0x4004f68	            0xa870	                           test al, 0x70	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x4004f6a	     0xf8420030000	                            je 0x4005290	      3901	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	CALL_13
0x4004f70	          0x8b5504	                mov edx, dword [rbp + 4]	      3931	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x4004f73	          0x4189d1	                            mov r9d, edx	      3936	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x4004f76	        0x442b4e04	                sub r9d, dword [rsi + 4]	      3936	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x4004f7a	     0xf8450010000	                            je 0x40050d0	      3936	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x4004f80	          0x4531d2	                          xor r10d, r10d	      3983	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x4004f83	          0x4585c9	                           test r9d, r9d	      3984	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x4004f86	     0xf88d4010000	                            js 0x4005160	      3984	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x4004f8c	        0x8b542408	                mov edx, dword [rsp + 8]	      3995	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4004f90	        0x438d3c29	                     lea edi, [r9 + r13]	      3995	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4004f94	      0x4488542410	             mov byte [rsp + 0x10], r10b	      3995	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4004f99	      0x428d441a01	                lea eax, [rdx + r11 + 1]	      3995	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4004f9e	            0x39c7	                            cmp edi, eax	      3995	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4004fa0	     0xf8eda000000	                           jle 0x4005080	      3995	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4004fa6	            0x89d0	                            mov eax, edx	      3998	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4004fa8	      0x4c8d74243c	                   lea r14, [rsp + 0x3c]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4004fad	        0x4c8b0c24	                     mov r9, qword [rsp]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4004fb1	          0x4429e8	                           sub eax, r13d	      3998	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4004fb4	      0x807c242201	                cmp byte [rsp + 0x22], 1	      4000	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_32
0x4004fb9	        0x488d550a	                    lea rdx, [rbp + 0xa]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4004fbd	        0x89442408	                mov dword [rsp + 8], eax	      3998	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31
0x4004fc1	          0x4489e9	                           mov ecx, r13d	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4004fc4	          0x4d89f0	                             mov r8, r14	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4004fc7	          0x4c89e6	                            mov rsi, r12	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4004fca	          0x4889df	                            mov rdi, rbx	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4004fcd	            0x19c0	                            sbb eax, eax	      4000	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_32
0x4004fcf	          0x83e002	                              and eax, 2	      4000	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_32
0x4004fd2	          0x83e801	                              sub eax, 1	      4000	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_32
0x4004fd5	        0x8944243c	             mov dword [rsp + 0x3c], eax	      4000	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_32
0x4004fd9	         0xfb64508	               movzx eax, byte [rbp + 8]	      6839	decNumber.c	FUNCTION_11
0x4004fdd	          0x884308	                  mov byte [rbx + 8], al	      6839	decNumber.c	FUNCTION_11
0x4004fe0	          0x8b4504	                mov eax, dword [rbp + 4]	      6840	decNumber.c	FUNCTION_11
0x4004fe3	          0x894304	                mov dword [rbx + 4], eax	      6840	decNumber.c	FUNCTION_11
0x4004fe6	      0xe8e5c2ffff	             call sym.decSetCoeff.isra.3	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4004feb	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      4004	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33
0x4004fef	    0x440fb6542410	          movzx r10d, byte [rsp + 0x10] 	      4004	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33
0x4004ff5	            0x85c9	                           test ecx, ecx	      4004	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33
0x4004ff7	            0x7e21	                           jle 0x400501a	      4004	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33
0x4004ff9	        0x8b6c2408	                mov ebp, dword [rsp + 8]	      4004	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33
0x4004ffd	            0x8b33	                    mov esi, dword [rbx]	      4004	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33
0x4004fff	        0x488d7b0a	                    lea rdi, [rbx + 0xa]	      4005	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33	CALL_21
0x4005003	      0x4488542422	             mov byte [rsp + 0x22], r10b	      4005	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33	CALL_21
0x4005008	            0x89ea	                            mov edx, ebp	      4005	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33	CALL_21
0x400500a	      0xe841bdffff	          call sym.decShiftToMost.part.0	      4005	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33	CALL_21
0x400500f	          0x296b04	                sub dword [rbx + 4], ebp	      4006	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33
0x4005012	    0x440fb6542422	          movzx r10d, byte [rsp + 0x22] 	      4006	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33
0x4005018	            0x8903	                    mov dword [rbx], eax	      4005	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_33	CALL_21
0x400501a	          0x4584d2	                         test r10b, r10b	      4009	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_34
0x400501d	            0x7504	                           jne 0x4005023	      4009	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_34
0x400501f	        0x44307b08	                xor byte [rbx + 8], r15b	      4009	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_31	IF_34
0x4005023	        0x488b0c24	                    mov rcx, qword [rsp]	      3898	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4005027	          0x4c89f2	                            mov rdx, r14	      3898	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x400502a	          0x4c89e6	                            mov rsi, r12	      3898	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x400502d	          0x4889df	                            mov rdi, rbx	      3898	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4005030	          0x4531ff	                          xor r15d, r15d	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x4005033	      0xe828ceffff	                    call sym.decFinalize	      3898	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4005038	      0xe93cfcffff	                           jmp 0x4004c79	      3899	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x400503d	           0xf1f00	                         nop dword [rax]	      3899	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11
0x4005040	            0xa840	                           test al, 0x40	      3850	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10	CALL_7
0x4005042	     0xf8412fcffff	                            je 0x4004c5a	      3850	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10	CALL_7
0x4005048	      0x807c242200	                cmp byte [rsp + 0x22], 0	      3850	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10	CALL_7
0x400504d	     0xf8407fcffff	                            je 0x4004c5a	      3850	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10	CALL_7
0x4005053	        0x488b0424	                    mov rax, qword [rsp]	      3851	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10
0x4005057	          0x4531ff	                          xor r15d, r15d	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x400505a	    0x810880000000	                    or dword [rax], 0x80	      3851	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10
0x4005060	      0xe914fcffff	                           jmp 0x4004c79	      3852	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10
0x4005065	           0xf1f00	                         nop dword [rax]	      3852	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	ELSE_1	IF_9	IF_10
0x4005068	          0x4863ff	                         movsxd rdi, edi	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400506b	     0xfb6bf000000	                   movzx edi, byte [rdi]	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4005072	          0x83c701	                              add edi, 1	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4005075	      0xe9e7fcffff	                           jmp 0x4004d61	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x400507a	    0x660f1f440000	                    nop word [rax + rax]	      4034	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	CALL_23
0x4005080	        0x4183f930	                           cmp r9d, 0x30	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4005084	     0xf8fe6010000	                            jg 0x4005270	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x400508a	        0x418d4101	                       lea eax, [r9 + 1]	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x400508e	            0x4898	                                    cdqe	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4005090	    0x440fb6800000	                   movzx r8d, byte [rax]	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4005098	        0x4183e801	                              sub r8d, 1	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x400509c	        0x438d0440	                    lea eax, [r8 + r8*2]	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x40050a0	          0x4129c1	                            sub r9d, eax	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x40050a3	          0x4d63c9	                          movsxd r9, r9d	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x40050a6	    0x468b348d0000	                  mov r14d, dword [r9*4]	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x40050ae	      0xe959fcffff	                           jmp 0x4004d0c	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x40050b3	       0xf1f440000	                   nop dword [rax + rax]	      4015	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29
0x40050b8	          0x4d89c8	                              mov r8, r9	      3846	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	CALL_5
0x40050bb	          0x4c89e1	                            mov rcx, r12	      3846	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	CALL_5
0x40050be	          0x4889ea	                            mov rdx, rbp	      3846	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	CALL_5
0x40050c1	      0xe82ae3ffff	                 call sym.decNaNs.isra.6	      3846	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_7	CALL_5
0x40050c6	          0x4531ff	                          xor r15d, r15d	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x40050c9	      0xe9abfbffff	                           jmp 0x4004c79	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x40050ce	            0x6690	                                     nop	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x40050d0	      0x4139542408	                cmp dword [r12 + 8], edx	      3938	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x40050d5	     0xf8f25fcffff	                            jg 0x4004d00	      3938	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x40050db	      0x418b442404	                mov eax, dword [r12 + 4]	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x40050e0	        0x8b7c2408	                mov edi, dword [rsp + 8]	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x40050e4	            0x29f8	                            sub eax, edi	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x40050e6	          0x83c001	                              add eax, 1	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x40050e9	            0x39d0	                            cmp eax, edx	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x40050eb	     0xf8c0ffcffff	                            jl 0x4004d00	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x40050f1	          0x4439ef	                           cmp edi, r13d	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x40050f4	     0xf8c06fcffff	                            jl 0x4004d00	      3940	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x40050fa	          0x4439df	                           cmp edi, r11d	      3941	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x40050fd	     0xf8cfdfbffff	                            jl 0x4004d00	      3941	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x4005103	      0x807c242200	                cmp byte [rsp + 0x22], 0	      3943	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24
0x4005108	       0xfb7442410	           movzx eax, word [rsp + 0x10] 	      3942	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23
0x400510d	        0x410fb7d6	                         movzx edx, r14w	      3944	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24
0x4005111	     0xf85c9010000	                           jne 0x40052e0	      3943	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24
0x4005117	             0x1d0	                            add eax, edx	      3944	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24
0x4005119	      0x3de7030000	                          cmp eax, 0x3e7	      3945	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x400511e	     0xf8f42020000	                            jg 0x4005366	      3945	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x4005124	        0x4183fb02	                             cmp r11d, 2	      3946	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x4005128	            0x7f10	                            jg 0x400513a	      3946	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x400512a	          0x4963d3	                        movsxd rdx, r11d	      3947	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x400512d	    0x3b0495000000	                  cmp eax, dword [rdx*4]	      3946	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x4005134	     0xf8d2c020000	                           jge 0x4005366	      3946	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x400513a	          0x4839de	                            cmp rsi, rbx	      3948	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25	CALL_16
0x400513d	            0x7408	                            je 0x4005147	      3948	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25	CALL_16
0x400513f	          0x4889df	                            mov rdi, rbx	      3948	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25	CALL_16
0x4005142	      0xe800000000	                          call 0x4005147	      3948	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25	CALL_16
0x4005147	    0x440fb75c2410	          movzx r11d, word [rsp + 0x10] 	      3949	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x400514d	          0x4531ff	                          xor r15d, r15d	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x4005150	          0x4501f3	                          add r11d, r14d	      3949	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x4005153	      0x6644895b0a	              mov word [rbx + 0xa], r11w	      3949	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x4005158	      0xe91cfbffff	                           jmp 0x4004c79	      3950	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x400515d	           0xf1f00	                         nop dword [rax]	      3950	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	IF_24	IF_25
0x4005160	          0x4431f8	                           xor eax, r15d	      3987	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x4005163	          0x41f7d9	                                 neg r9d	      3986	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x4005166	    0x41ba01000000	                             mov r10d, 1	      3989	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x400516c	            0x89c1	                            mov ecx, eax	      3987	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x400516e	          0x4489e8	                           mov eax, r13d	      3987	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x4005171	          0x4589dd	                          mov r13d, r11d	      3987	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x4005174	          0x4189c3	                           mov r11d, eax	      3987	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x4005177	          0x4889f0	                            mov rax, rsi	      3987	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x400517a	          0x4889ee	                            mov rsi, rbp	      3987	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x400517d	          0x4889c5	                            mov rbp, rax	      3987	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x4005180	      0xe907feffff	                           jmp 0x4004f8c	      3987	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x4005185	           0xf1f00	                         nop dword [rax]	      3987	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	IF_30
0x4005188	        0x4c8d530a	                    lea r10, [rbx + 0xa]	      4026	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400518c	          0x4531ff	                          xor r15d, r15d	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x400518f	      0xe9e5fbffff	                           jmp 0x4004d79	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x4005194	         0xf1f4000	                         nop dword [rax]	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x4005198	          0x83c102	                              add ecx, 2	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x400519b	      0xbe56555555	                     mov esi, 0x55555556	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x40051a0	            0x89c8	                            mov eax, ecx	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x40051a2	          0xc1f91f	                           sar ecx, 0x1f	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x40051a5	            0xf7ee	                                imul esi	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x40051a7	            0x89d6	                            mov esi, edx	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x40051a9	            0x29ce	                            sub esi, ecx	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x40051ab	      0xe9a3fcffff	                           jmp 0x4004e53	      4114	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_43
0x40051b0	        0x418d7d02	                      lea edi, [r13 + 2]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x40051b4	      0xb956555555	                     mov ecx, 0x55555556	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x40051b9	        0x4883c50a	                            add rbp, 0xa	      4057	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_31
0x40051bd	            0x89f8	                            mov eax, edi	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x40051bf	          0xc1ff1f	                           sar edi, 0x1f	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x40051c2	            0xf7e9	                                imul ecx	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x40051c4	            0x89d1	                            mov ecx, edx	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x40051c6	            0x29f9	                            sub ecx, edi	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x40051c8	        0x4183fb31	                          cmp r11d, 0x31	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x40051cc	     0xf8ed5fbffff	                           jle 0x4004da7	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x40051d2	        0x418d7b02	                      lea edi, [r11 + 2]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x40051d6	      0xba56555555	                     mov edx, 0x55555556	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x40051db	            0x89f8	                            mov eax, edi	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x40051dd	          0xc1ff1f	                           sar edi, 0x1f	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x40051e0	            0xf7ea	                                imul edx	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x40051e2	            0x89d0	                            mov eax, edx	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x40051e4	            0x29f8	                            sub eax, edi	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x40051e6	      0xe9c6fbffff	                           jmp 0x4004db1	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x40051eb	       0xf1f440000	                   nop dword [rax + rax]	      4056	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	CALL_30
0x40051f0	            0xf7d9	                                 neg ecx	      4061	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x40051f2	        0x80430880	                add byte [rbx + 8], 0x80	      4062	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x40051f6	            0x890b	                    mov dword [rbx], ecx	      4061	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x40051f8	      0xe9e4fbffff	                           jmp 0x4004de1	      4061	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x40051fd	           0xf1f00	                         nop dword [rax]	      4061	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x4005200	      0x4889742428	             mov qword [rsp + 0x28], rsi	      4061	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x4005205	      0x44895c2424	            mov dword [rsp + 0x24], r11d	      4061	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x400520a	        0x884c2423	               mov byte [rsp + 0x23], cl	      4061	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x400520e	      0x4489442418	             mov dword [rsp + 0x18], r8d	      4061	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_40
0x4005213	      0xe800000000	                          call 0x4005218	      4038	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x4005218	          0x4885c0	                           test rax, rax	      4039	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x400521b	          0x4989c7	                            mov r15, rax	      4038	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x400521e	          0x4989c2	                            mov r10, rax	      4038	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38
0x4005221	      0x448b442418	            mov r8d, dword [rsp + 0x18] 	      4039	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x4005226	       0xfb64c2423	           movzx ecx, byte [rsp + 0x23] 	      4039	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x400522b	      0x448b5c2424	           mov r11d, dword [rsp + 0x24] 	      4039	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x4005230	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      4039	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x4005235	     0xf853efbffff	                           jne 0x4004d79	      4039	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x400523b	        0x488b0424	                    mov rax, qword [rsp]	      4040	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x400523f	          0x830810	                    or dword [rax], 0x10	      4040	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x4005242	      0xe932faffff	                           jmp 0x4004c79	      4041	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x4005247	    0x660f1f840000	                    nop word [rax + rax]	      4041	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_37	IF_38	IF_39
0x4005250	          0x83c102	                              add ecx, 2	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4005253	      0xbe56555555	                     mov esi, 0x55555556	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4005258	            0x89c8	                            mov eax, ecx	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x400525a	          0xc1f91f	                           sar ecx, 0x1f	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x400525d	            0xf7ee	                                imul esi	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x400525f	            0x89d6	                            mov esi, edx	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4005261	            0x29ce	                            sub esi, ecx	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4005263	      0xe9a6fbffff	                           jmp 0x4004e0e	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4005268	     0xf1f84000000	                   nop dword [rax + rax]	      4079	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_41	IF_42	CALL_35
0x4005270	        0x458d5103	                      lea r10d, [r9 + 3]	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4005274	      0xba56555555	                     mov edx, 0x55555556	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4005279	          0x4489d0	                           mov eax, r10d	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x400527c	        0x41c1fa1f	                          sar r10d, 0x1f	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4005280	            0xf7ea	                                imul edx	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4005282	          0x4429d2	                           sub edx, r10d	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4005285	        0x448d42ff	                      lea r8d, [rdx - 1]	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4005289	      0xe90efeffff	                           jmp 0x400509c	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x400528e	            0x6690	                                     nop	      4014	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_29	CALL_22
0x4005290	          0x8b6d04	                mov ebp, dword [rbp + 4]	      3903	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19
0x4005293	          0x884b08	                  mov byte [rbx + 8], cl	      6839	decNumber.c	FUNCTION_11
0x4005296	      0x4c8d74243c	                   lea r14, [rsp + 0x3c]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400529b	          0x8b4604	                mov eax, dword [rsi + 4]	      6840	decNumber.c	FUNCTION_11
0x400529e	        0x4c8b0c24	                     mov r9, qword [rsp]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40052a2	        0x488d560a	                    lea rdx, [rsi + 0xa]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40052a6	          0x4d89f0	                             mov r8, r14	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40052a9	          0x4489d9	                           mov ecx, r11d	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40052ac	          0x4c89e6	                            mov rsi, r12	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40052af	          0x4889df	                            mov rdi, rbx	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40052b2	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	      3905	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19
0x40052ba	          0x894304	                mov dword [rbx + 4], eax	      6840	decNumber.c	FUNCTION_11
0x40052bd	      0xe80ec0ffff	             call sym.decSetCoeff.isra.3	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40052c2	          0x2b6b04	                sub ebp, dword [rbx + 4]	      3913	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21
0x40052c5	     0xf8958fdffff	                           jns 0x4005023	      3913	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21
0x40052cb	      0xe95ffcffff	                           jmp 0x4004f2f	      3913	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_19	IF_20	IF_21
0x40052d0	        0x488d7b0a	                    lea rdi, [rbx + 0xa]	      3891	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	CALL_12
0x40052d4	            0x89c6	                            mov esi, eax	      3891	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	CALL_12
0x40052d6	      0xe875baffff	          call sym.decShiftToMost.part.0	      3891	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	CALL_12
0x40052db	      0xe977fcffff	                           jmp 0x4004f57	      3891	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	ELSE_3	ELSE_4	IF_17	CALL_12
0x40052e0	            0x29d0	                            sub eax, edx	      3956	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x40052e2	            0x85c0	                           test eax, eax	      3956	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x40052e4	     0xf8ea4000000	                           jle 0x400538e	      3956	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x40052ea	          0x4839de	                            cmp rsi, rbx	      3957	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_17
0x40052ed	            0x7408	                            je 0x40052f7	      3957	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_17
0x40052ef	          0x4889df	                            mov rdi, rbx	      3957	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_17
0x40052f2	      0xe800000000	                          call 0x40052f7	      3957	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_17
0x40052f7	    0x440fb75c2410	          movzx r11d, word [rsp + 0x10] 	      3958	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x40052fd	          0x486303	                 movsxd rax, dword [rbx]	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4005300	          0x4529f3	                          sub r11d, r14d	      3958	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x4005303	          0x83f831	                           cmp eax, 0x31	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4005306	      0x6644895b0a	              mov word [rbx + 0xa], r11w	      3958	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x400530b	            0x7f6a	                            jg 0x4005377	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x400530d	     0xfb6b0000000	                   movzx esi, byte [rax]	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4005314	        0x488d7b0a	                    lea rdi, [rbx + 0xa]	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4005318	          0x4531ff	                          xor r15d, r15d	      3814	decNumber.c	FUNCTION_68	FUNCTION_64
0x400531b	      0xe8c0b3ffff	                   call sym.decGetDigits	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4005320	            0x8903	                    mov dword [rbx], eax	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4005322	      0xe952f9ffff	                           jmp 0x4004c79	      3961	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27
0x4005327	          0x83c880	                      or eax, 0xffffff80	      4128	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	IF_49
0x400532a	          0x884308	                  mov byte [rbx + 8], al	      4128	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	IF_49
0x400532d	      0xe947f9ffff	                           jmp 0x4004c79	      4128	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_48	IF_49
0x4005332	        0x4183e270	                          and r10d, 0x70	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x4005336	     0xf85ebfbffff	                           jne 0x4004f27	      3877	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	CALL_11
0x400533c	            0x85ed	                           test ebp, ebp	      3878	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_14
0x400533e	            0x785f	                            js 0x400539f	      3878	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_14
0x4005340	      0x807c242200	                cmp byte [rsp + 0x22], 0	      3880	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15
0x4005345	     0xf84d8fcffff	                            je 0x4005023	      3880	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15
0x400534b	    0x41837c240c06	                cmp dword [r12 + 0xc], 6	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x4005351	      0xba00000000	                              mov edx, 0	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x4005356	      0xb880ffffff	                     mov eax, 0xffffff80	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x400535b	           0xf45c2	                         cmovne eax, edx	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x400535e	          0x884308	                  mov byte [rbx + 8], al	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x4005361	      0xe9bdfcffff	                           jmp 0x4005023	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x4005366	          0x4489ef	                           mov edi, r13d	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x4005369	          0x4531c0	                            xor r8d, r8d	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x400536c	    0x41be01000000	                             mov r14d, 1	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x4005372	      0xe9a5f9ffff	                           jmp 0x4004d1c	      3881	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_15	IF_16
0x4005377	          0x8d4802	                      lea ecx, [rax + 2]	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x400537a	      0xba56555555	                     mov edx, 0x55555556	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x400537f	            0x89c8	                            mov eax, ecx	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4005381	            0xf7ea	                                imul edx	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4005383	            0x89c8	                            mov eax, ecx	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4005385	          0xc1f81f	                           sar eax, 0x1f	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4005388	            0x89d6	                            mov esi, edx	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x400538a	            0x29c6	                            sub esi, eax	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x400538c	            0xeb86	                           jmp 0x4005314	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x400538e	          0x4489ef	                           mov edi, r13d	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4005391	    0x41beffffffff	                    mov r14d, 0xffffffff	      3960	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_23	ELSE_5	IF_27	CALL_19
0x4005397	          0x4531c0	                            xor r8d, r8d	      3974	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400539a	      0xe97df9ffff	                           jmp 0x4004d1c	      3974	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1
0x400539f	        0x44896b04	               mov dword [rbx + 4], r13d	      3878	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_14
0x40053a3	            0xeb9b	                           jmp 0x4005340	      3878	decNumber.c	FUNCTION_68	FUNCTION_64	DO_1	IF_11	IF_12	IF_13	IF_14
0x40053a5	      0xe800000000	                          call 0x40053aa	      4139	decNumber.c	FUNCTION_68	FUNCTION_64
decNumberMin	ELSE,0:DO,0:CALL,3:IF,1:functions,0:SWITCH,0:WHILE,0:FOR,0	27
0x4003ca0	              0x55	                                push rbp	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x4003ca1	              0x53	                                push rbx	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x4003ca2	    0x41b803000000	                              mov r8d, 3	      1586	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_1
0x4003ca8	          0x4889fb	                            mov rbx, rdi	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x4003cab	          0x4889cd	                            mov rbp, rcx	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x4003cae	        0x4883ec18	                           sub rsp, 0x18	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x4003cb2	      0x4c8d4c2404	                       lea r9, [rsp + 4]	      1586	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_1
0x4003cb7	    0xc74424040000	                  mov dword [rsp + 4], 0	      1585	decNumber.c	FUNCTION_68	FUNCTION_25
0x4003cbf	    0x64488b042528	                mov rax, qword fs:[0x28]	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x4003cc8	      0x4889442408	                mov qword [rsp + 8], rax	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x4003ccd	            0x31c0	                            xor eax, eax	      1584	decNumber.c	FUNCTION_68	FUNCTION_25
0x4003ccf	      0xe83cf9ffff	                   call sym.decCompareOp	      1586	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_1
0x4003cd4	        0x8b742404	                mov esi, dword [rsp + 4]	      1587	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_2
0x4003cd8	            0x85f6	                           test esi, esi	      1587	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_2
0x4003cda	            0x740b	                            je 0x4003ce7	      1587	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_2
0x4003cdc	          0x4889ea	                            mov rdx, rbp	      1587	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_2
0x4003cdf	          0x4889df	                            mov rdi, rbx	      1587	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_2
0x4003ce2	      0xe8e9caffff	                      call sym.decStatus	      1587	decNumber.c	FUNCTION_68	FUNCTION_25	CALL_2
0x4003ce7	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
0x4003cec	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
0x4003cf5	          0x4889d8	                            mov rax, rbx	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
0x4003cf8	            0x7507	                           jne 0x4003d01	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
0x4003cfa	        0x4883c418	                           add rsp, 0x18	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
0x4003cfe	              0x5b	                                 pop rbx	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
0x4003cff	              0x5d	                                 pop rbp	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
0x4003d00	              0xc3	                                     ret	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
0x4003d01	      0xe800000000	                          call 0x4003d06	      1592	decNumber.c	FUNCTION_68	FUNCTION_25
decNumberMinus	ELSE,0:DO,0:CALL,5:IF,2:functions,0:SWITCH,0:WHILE,0:FOR,0	36
0x40057b0	              0x55	                                push rbp	      1632	decNumber.c	FUNCTION_68	FUNCTION_27
0x40057b1	              0x53	                                push rbx	      1632	decNumber.c	FUNCTION_68	FUNCTION_27
0x40057b2	          0x4889d1	                            mov rcx, rdx	      1642	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_3
0x40057b5	          0x4889d5	                            mov rbp, rdx	      1632	decNumber.c	FUNCTION_68	FUNCTION_27
0x40057b8	          0x4889f2	                            mov rdx, rsi	      1642	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_3
0x40057bb	    0x41b880000000	                           mov r8d, 0x80	      1642	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_3
0x40057c1	        0x4883ec38	                           sub rsp, 0x38	      1632	decNumber.c	FUNCTION_68	FUNCTION_27
0x40057c5	          0x4889fb	                            mov rbx, rdi	      1632	decNumber.c	FUNCTION_68	FUNCTION_27
0x40057c8	    0x64488b042528	                mov rax, qword fs:[0x28]	      1632	decNumber.c	FUNCTION_68	FUNCTION_27
0x40057d1	      0x4889442428	             mov qword [rsp + 0x28], rax	      1632	decNumber.c	FUNCTION_68	FUNCTION_27
0x40057d6	            0x31c0	                            xor eax, eax	      1632	decNumber.c	FUNCTION_68	FUNCTION_27
0x40057d8	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40057da	      0x4c8d4c240c	                     lea r9, [rsp + 0xc]	      1642	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_3
0x40057df	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1634	decNumber.c	FUNCTION_68	FUNCTION_27
0x40057e7	      0x668944241a	               mov word [rsp + 0x1a], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40057ec	          0x8b4604	                mov eax, dword [rsi + 4]	      1641	decNumber.c	FUNCTION_68	FUNCTION_27
0x40057ef	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1642	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_3
0x40057f4	      0xc644241800	                mov byte [rsp + 0x18], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40057f9	    0xc74424100100	               mov dword [rsp + 0x10], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005801	        0x89442414	             mov dword [rsp + 0x14], eax	      1641	decNumber.c	FUNCTION_68	FUNCTION_27
0x4005805	      0xe8e6f3ffff	                       call sym.decAddOp	      1642	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_3
0x400580a	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      1643	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_4
0x400580e	            0x85f6	                           test esi, esi	      1643	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_4
0x4005810	            0x740b	                            je 0x400581d	      1643	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_4
0x4005812	          0x4889ea	                            mov rdx, rbp	      1643	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_4
0x4005815	          0x4889df	                            mov rdi, rbx	      1643	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_4
0x4005818	      0xe8b3afffff	                      call sym.decStatus	      1643	decNumber.c	FUNCTION_68	FUNCTION_27	CALL_4
0x400581d	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      1648	decNumber.c	FUNCTION_68	FUNCTION_27
0x4005822	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1648	decNumber.c	FUNCTION_68	FUNCTION_27
0x400582b	          0x4889d8	                            mov rax, rbx	      1648	decNumber.c	FUNCTION_68	FUNCTION_27
0x400582e	            0x7507	                           jne 0x4005837	      1648	decNumber.c	FUNCTION_68	FUNCTION_27
0x4005830	        0x4883c438	                           add rsp, 0x38	      1648	decNumber.c	FUNCTION_68	FUNCTION_27
0x4005834	              0x5b	                                 pop rbx	      1648	decNumber.c	FUNCTION_68	FUNCTION_27
0x4005835	              0x5d	                                 pop rbp	      1648	decNumber.c	FUNCTION_68	FUNCTION_27
0x4005836	              0xc3	                                     ret	      1648	decNumber.c	FUNCTION_68	FUNCTION_27
0x4005837	      0xe800000000	                          call 0x400583c	      1648	decNumber.c	FUNCTION_68	FUNCTION_27
decNumberMax	ELSE,0:DO,0:CALL,3:IF,1:functions,0:SWITCH,0:WHILE,0:FOR,0	27
0x4003bc0	              0x55	                                push rbp	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x4003bc1	              0x53	                                push rbx	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x4003bc2	    0x41b802000000	                              mov r8d, 2	      1540	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_1
0x4003bc8	          0x4889fb	                            mov rbx, rdi	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x4003bcb	          0x4889cd	                            mov rbp, rcx	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x4003bce	        0x4883ec18	                           sub rsp, 0x18	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x4003bd2	      0x4c8d4c2404	                       lea r9, [rsp + 4]	      1540	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_1
0x4003bd7	    0xc74424040000	                  mov dword [rsp + 4], 0	      1539	decNumber.c	FUNCTION_68	FUNCTION_23
0x4003bdf	    0x64488b042528	                mov rax, qword fs:[0x28]	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x4003be8	      0x4889442408	                mov qword [rsp + 8], rax	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x4003bed	            0x31c0	                            xor eax, eax	      1538	decNumber.c	FUNCTION_68	FUNCTION_23
0x4003bef	      0xe81cfaffff	                   call sym.decCompareOp	      1540	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_1
0x4003bf4	        0x8b742404	                mov esi, dword [rsp + 4]	      1541	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_2
0x4003bf8	            0x85f6	                           test esi, esi	      1541	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_2
0x4003bfa	            0x740b	                            je 0x4003c07	      1541	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_2
0x4003bfc	          0x4889ea	                            mov rdx, rbp	      1541	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_2
0x4003bff	          0x4889df	                            mov rdi, rbx	      1541	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_2
0x4003c02	      0xe8c9cbffff	                      call sym.decStatus	      1541	decNumber.c	FUNCTION_68	FUNCTION_23	CALL_2
0x4003c07	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
0x4003c0c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
0x4003c15	          0x4889d8	                            mov rax, rbx	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
0x4003c18	            0x7507	                           jne 0x4003c21	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
0x4003c1a	        0x4883c418	                           add rsp, 0x18	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
0x4003c1e	              0x5b	                                 pop rbx	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
0x4003c1f	              0x5d	                                 pop rbp	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
0x4003c20	              0xc3	                                     ret	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
0x4003c21	      0xe800000000	                          call 0x4003c26	      1546	decNumber.c	FUNCTION_68	FUNCTION_23
decNumberTrim	ELSE,0:DO,0:CALL,3:IF,1:functions,0:SWITCH,0:WHILE,0:FOR,0	22
0x400a150	              0x53	                                push rbx	      3554	decNumber.c	FUNCTION_68	FUNCTION_60
0x400a151	          0x4889fb	                            mov rbx, rdi	      3554	decNumber.c	FUNCTION_68	FUNCTION_60
0x400a154	            0x31f6	                            xor esi, esi	      3560	decNumber.c	FUNCTION_68	FUNCTION_60	CALL_2
0x400a156	        0x4883ec40	                           sub rsp, 0x40	      3554	decNumber.c	FUNCTION_68	FUNCTION_60
0x400a15a	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3560	decNumber.c	FUNCTION_68	FUNCTION_60	CALL_2
0x400a15f	    0x64488b042528	                mov rax, qword fs:[0x28]	      3554	decNumber.c	FUNCTION_68	FUNCTION_60
0x400a168	      0x4889442438	             mov qword [rsp + 0x38], rax	      3554	decNumber.c	FUNCTION_68	FUNCTION_60
0x400a16d	            0x31c0	                            xor eax, eax	      3554	decNumber.c	FUNCTION_68	FUNCTION_60
0x400a16f	      0xe800000000	                          call 0x400a174	      3560	decNumber.c	FUNCTION_68	FUNCTION_60	CALL_2
0x400a174	      0x4c8d44240c	                     lea r8, [rsp + 0xc]	      3561	decNumber.c	FUNCTION_68	FUNCTION_60	CALL_3
0x400a179	      0x488d742410	                   lea rsi, [rsp + 0x10]	      3561	decNumber.c	FUNCTION_68	FUNCTION_60	CALL_3
0x400a17e	            0x31d2	                            xor edx, edx	      3561	decNumber.c	FUNCTION_68	FUNCTION_60	CALL_3
0x400a180	      0xb901000000	                              mov ecx, 1	      3561	decNumber.c	FUNCTION_68	FUNCTION_60	CALL_3
0x400a185	          0x4889df	                            mov rdi, rbx	      3561	decNumber.c	FUNCTION_68	FUNCTION_60	CALL_3
0x400a188	      0xe8b36fffff	                        call sym.decTrim	      3561	decNumber.c	FUNCTION_68	FUNCTION_60	CALL_3
0x400a18d	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
0x400a192	    0x644833142528	                xor rdx, qword fs:[0x28]	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
0x400a19b	            0x7506	                           jne 0x400a1a3	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
0x400a19d	        0x4883c440	                           add rsp, 0x40	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
0x400a1a1	              0x5b	                                 pop rbx	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
0x400a1a2	              0xc3	                                     ret	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
0x400a1a3	      0xe800000000	                          call 0x400a1a8	      3562	decNumber.c	FUNCTION_68	FUNCTION_60
decNumberLogB	ELSE,3:DO,0:CALL,9:IF,5:functions,0:SWITCH,0:WHILE,0:FOR,0	59
0x4008010	              0x53	                                push rbx	      1334	decNumber.c	FUNCTION_68	FUNCTION_21
0x4008011	          0x4989d3	                            mov r11, rdx	      1334	decNumber.c	FUNCTION_68	FUNCTION_21
0x4008014	          0x4889fb	                            mov rbx, rdi	      1334	decNumber.c	FUNCTION_68	FUNCTION_21
0x4008017	        0x4883ec10	                           sub rsp, 0x10	      1334	decNumber.c	FUNCTION_68	FUNCTION_21
0x400801b	         0xfb65608	               movzx edx, byte [rsi + 8]	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x400801f	    0x64488b042528	                mov rax, qword fs:[0x28]	      1334	decNumber.c	FUNCTION_68	FUNCTION_21
0x4008028	      0x4889442408	                mov qword [rsp + 8], rax	      1334	decNumber.c	FUNCTION_68	FUNCTION_21
0x400802d	            0x31c0	                            xor eax, eax	      1334	decNumber.c	FUNCTION_68	FUNCTION_21
0x400802f	    0xc74424040000	                  mov dword [rsp + 4], 0	      1335	decNumber.c	FUNCTION_68	FUNCTION_21
0x4008037	          0xf6c230	                           test dl, 0x30	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x400803a	     0xf8590000000	                           jne 0x40080d0	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x4008040	          0xf6c240	                           test dl, 0x40	      1343	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_5
0x4008043	     0xf859f000000	                           jne 0x40080e8	      1343	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_5
0x4008049	      0x66837e0a00	                 cmp word [rsi + 0xa], 0	      1344	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_6
0x400804e	            0x8b06	                    mov eax, dword [rsi]	      1344	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_6
0x4008050	            0x7505	                           jne 0x4008057	      1344	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_6
0x4008052	          0x83f801	                              cmp eax, 1	      1344	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_6
0x4008055	            0x7439	                            je 0x4008090	      1344	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_6
0x4008057	           0x34604	                add eax, dword [rsi + 4]	      1351	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_3	CALL_8
0x400805a	          0x4889df	                            mov rdi, rbx	      1351	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_3	CALL_8
0x400805d	            0x89c6	                            mov esi, eax	      1351	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_3	CALL_8
0x400805f	          0x83ee01	                              sub esi, 1	      1351	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_3	CALL_8
0x4008062	      0xe800000000	                          call 0x4008067	      1351	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_3	CALL_8
0x4008067	        0x8b742404	                mov esi, dword [rsp + 4]	      1354	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_9
0x400806b	            0x85f6	                           test esi, esi	      1354	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_9
0x400806d	            0x7551	                           jne 0x40080c0	      1354	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_9
0x400806f	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1356	decNumber.c	FUNCTION_68	FUNCTION_21
0x4008074	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1356	decNumber.c	FUNCTION_68	FUNCTION_21
0x400807d	          0x4889d8	                            mov rax, rbx	      1356	decNumber.c	FUNCTION_68	FUNCTION_21
0x4008080	            0x7574	                           jne 0x40080f6	      1356	decNumber.c	FUNCTION_68	FUNCTION_21
0x4008082	        0x4883c410	                           add rsp, 0x10	      1356	decNumber.c	FUNCTION_68	FUNCTION_21
0x4008086	              0x5b	                                 pop rbx	      1356	decNumber.c	FUNCTION_68	FUNCTION_21
0x4008087	              0xc3	                                     ret	      1356	decNumber.c	FUNCTION_68	FUNCTION_21
0x4008088	     0xf1f84000000	                   nop dword [rax + rax]	      1356	decNumber.c	FUNCTION_68	FUNCTION_21
0x4008090	          0x83e270	                           and edx, 0x70	      1344	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_6
0x4008093	            0x75c2	                           jne 0x4008057	      1344	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4	CALL_6
0x4008095	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4008097	    0xc74704000000	                  mov dword [rdi + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400809e	    0xc70701000000	                      mov dword [rdi], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40080a4	        0x6689470a	                mov word [rdi + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40080a8	        0xc64708c0	                mov byte [rdi + 8], 0xc0	      1346	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4
0x40080ac	      0xbe02000000	                              mov esi, 2	      1354	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_9
0x40080b1	    0xc74424040200	                  mov dword [rsp + 4], 2	      1347	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4
0x40080b9	     0xf1f80000000	                         nop dword [rax]	      1347	decNumber.c	FUNCTION_68	FUNCTION_21	ELSE_2	IF_4
0x40080c0	          0x4c89da	                            mov rdx, r11	      1354	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_9
0x40080c3	          0x4889df	                            mov rdi, rbx	      1354	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_9
0x40080c6	      0xe80587ffff	                      call sym.decStatus	      1354	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_9
0x40080cb	            0xeba2	                           jmp 0x400806f	      1354	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_9
0x40080cd	           0xf1f00	                         nop dword [rax]	      1354	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_9
0x40080d0	      0x4c8d442404	                       lea r8, [rsp + 4]	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x40080d5	          0x4c89d9	                            mov rcx, r11	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x40080d8	            0x31d2	                            xor edx, edx	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x40080da	      0xe811b3ffff	                 call sym.decNaNs.isra.6	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x40080df	            0xeb86	                           jmp 0x4008067	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x40080e1	     0xf1f80000000	                         nop dword [rax]	      1342	decNumber.c	FUNCTION_68	FUNCTION_21	CALL_3
0x40080e8	      0xe800000000	                          call 0x40080ed	      3390	decNumber.c	FUNCTION_68	FUNCTION_53	CALL_2
0x40080ed	        0x8067087f	                and byte [rdi + 8], 0x7f	      3391	decNumber.c	FUNCTION_68	FUNCTION_53
0x40080f1	      0xe971ffffff	                           jmp 0x4008067	      3391	decNumber.c	FUNCTION_68	FUNCTION_53
0x40080f6	      0xe800000000	                          call 0x40080fb	      1356	decNumber.c	FUNCTION_68	FUNCTION_21
decCompare	ELSE,3:DO,0:CALL,10:IF,15:functions,0:SWITCH,0:WHILE,0:FOR,0	143
0x40017a0	              0x53	                                push rbx	      6164	decNumber.c	FUNCTION_3
0x40017a1	      0x66837f0a00	                 cmp word [rdi + 0xa], 0	      6170	decNumber.c	FUNCTION_3	CALL_1
0x40017a6	            0x7509	                           jne 0x40017b1	      6170	decNumber.c	FUNCTION_3	CALL_1
0x40017a8	          0x833f01	                      cmp dword [rdi], 1	      6170	decNumber.c	FUNCTION_3	CALL_1
0x40017ab	     0xf8457010000	                            je 0x4001908	      6170	decNumber.c	FUNCTION_3	CALL_1
0x40017b1	            0x84d2	                             test dl, dl	      6171	decNumber.c	FUNCTION_3	IF_2
0x40017b3	     0xf84d7000000	                            je 0x4001890	      6171	decNumber.c	FUNCTION_3	IF_2
0x40017b9	      0x66837e0a00	                 cmp word [rsi + 0xa], 0	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x40017be	            0x7430	                            je 0x40017f0	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x40017c0	         0xfb65608	               movzx edx, byte [rsi + 8]	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x40017c4	      0xbb01000000	                              mov ebx, 1	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x40017c9	         0xfb64f08	               movzx ecx, byte [rdi + 8]	      6188	decNumber.c	FUNCTION_3	IF_11
0x40017cd	            0x89c8	                            mov eax, ecx	      6188	decNumber.c	FUNCTION_3	IF_11
0x40017cf	             0x9d0	                             or eax, edx	      6188	decNumber.c	FUNCTION_3	IF_11
0x40017d1	            0xa840	                           test al, 0x40	      6188	decNumber.c	FUNCTION_3	IF_11
0x40017d3	            0x743b	                            je 0x4001810	      6188	decNumber.c	FUNCTION_3	IF_11
0x40017d5	          0x83e240	                           and edx, 0x40	      6189	decNumber.c	FUNCTION_3	IF_11	IF_12	CALL_6
0x40017d8	            0x89d8	                            mov eax, ebx	      6189	decNumber.c	FUNCTION_3	IF_11	IF_12	CALL_6
0x40017da	            0x740b	                            je 0x40017e7	      6189	decNumber.c	FUNCTION_3	IF_11	IF_12	CALL_6
0x40017dc	            0x31c0	                            xor eax, eax	      6184	decNumber.c	FUNCTION_3	ELSE_1	IF_10
0x40017de	          0x83e140	                           and ecx, 0x40	      6190	decNumber.c	FUNCTION_3	IF_11	IF_12	CALL_7
0x40017e1	            0x7504	                           jne 0x40017e7	      6190	decNumber.c	FUNCTION_3	IF_11	IF_12	CALL_7
0x40017e3	            0x89d8	                            mov eax, ebx	      6191	decNumber.c	FUNCTION_3	IF_11	IF_12	ELSE_3
0x40017e5	            0xf7d8	                                 neg eax	      6191	decNumber.c	FUNCTION_3	IF_11	IF_12	ELSE_3
0x40017e7	              0x5b	                                 pop rbx	      6208	decNumber.c	FUNCTION_3
0x40017e8	              0xc3	                                     ret	      6208	decNumber.c	FUNCTION_3
0x40017e9	     0xf1f80000000	                         nop dword [rax]	      6208	decNumber.c	FUNCTION_3
0x40017f0	            0x8b06	                    mov eax, dword [rsi]	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x40017f2	          0x83f801	                              cmp eax, 1	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x40017f5	            0x75c9	                           jne 0x40017c0	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x40017f7	         0xfb65608	               movzx edx, byte [rsi + 8]	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x40017fb	          0xf6c270	                           test dl, 0x70	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x40017fe	            0x74e7	                            je 0x40017e7	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x4001800	      0xbb01000000	                              mov ebx, 1	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x4001805	            0xebc2	                           jmp 0x40017c9	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x4001807	    0x660f1f840000	                    nop word [rax + rax]	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x4001810	          0x8b4704	                mov eax, dword [rdi + 4]	      6196	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x4001813	        0x448b4604	                mov r8d, dword [rsi + 4]	      6196	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x4001817	          0x4439c0	                            cmp eax, r8d	      6196	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x400181a	            0x7e13	                           jle 0x400182f	      6196	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x400181c	          0x4489c2	                            mov edx, r8d	      6201	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x400181f	          0x4189c0	                            mov r8d, eax	      6201	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x4001822	            0xf7db	                                 neg ebx	      6201	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x4001824	            0x89d0	                            mov eax, edx	      6201	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x4001826	          0x4889fa	                            mov rdx, rdi	      6201	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x4001829	          0x4889f7	                            mov rdi, rsi	      6201	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x400182c	          0x4889d6	                            mov rsi, rdx	      6201	decNumber.c	FUNCTION_3	ELSE_3	IF_14
0x400182f	          0x4129c0	                            sub r8d, eax	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4001832	          0x486306	                 movsxd rax, dword [rsi]	      6204	decNumber.c	FUNCTION_3	CALL_10
0x4001835	          0x83f831	                           cmp eax, 0x31	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4001838	     0xf8e92000000	                           jle 0x40018d0	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400183e	        0x448d4802	                      lea r9d, [rax + 2]	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4001842	      0xb956555555	                     mov ecx, 0x55555556	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4001847	          0x4489c8	                            mov eax, r9d	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400184a	            0xf7e9	                                imul ecx	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400184c	          0x4489c8	                            mov eax, r9d	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400184f	        0x4c8d4e0a	                     lea r9, [rsi + 0xa]	      6204	decNumber.c	FUNCTION_3	CALL_10
0x4001853	          0xc1f81f	                           sar eax, 0x1f	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4001856	            0x89d1	                            mov ecx, edx	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4001858	            0x29c1	                            sub ecx, eax	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400185a	          0x486307	                 movsxd rax, dword [rdi]	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400185d	          0x83f831	                           cmp eax, 0x31	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4001860	     0xf8f81000000	                            jg 0x40018e7	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4001866	     0xfb6b0000000	                   movzx esi, byte [rax]	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400186d	        0x4883c70a	                            add rdi, 0xa	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4001871	          0x4c89ca	                             mov rdx, r9	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4001874	      0xe827fdffff	                 call sym.decUnitCompare	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4001879	            0x89c2	                            mov edx, eax	      6203	decNumber.c	FUNCTION_3	CALL_9
0x400187b	      0xb800000080	                     mov eax, 0x80000000	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4001880	           0xfafda	                           imul ebx, edx	      6206	decNumber.c	FUNCTION_3	IF_15
0x4001883	            0x39c2	                            cmp edx, eax	      6206	decNumber.c	FUNCTION_3	IF_15
0x4001885	           0xf45c3	                         cmovne eax, ebx	      6206	decNumber.c	FUNCTION_3	IF_15
0x4001888	              0x5b	                                 pop rbx	      6208	decNumber.c	FUNCTION_3
0x4001889	              0xc3	                                     ret	      6208	decNumber.c	FUNCTION_3
0x400188a	    0x660f1f440000	                    nop word [rax + rax]	      6208	decNumber.c	FUNCTION_3
0x4001890	         0xfbe5f08	               movsx ebx, byte [rdi + 8]	      6178	decNumber.c	FUNCTION_3	ELSE_1	CALL_3
0x4001894	          0xc1fb1f	                           sar ebx, 0x1f	      6178	decNumber.c	FUNCTION_3	ELSE_1	CALL_3
0x4001897	          0x83cb01	                               or ebx, 1	      6178	decNumber.c	FUNCTION_3	ELSE_1	CALL_3
0x400189a	      0x66837e0a00	                 cmp word [rsi + 0xa], 0	      6180	decNumber.c	FUNCTION_3	ELSE_1	CALL_4
0x400189f	            0x7507	                           jne 0x40018a8	      6180	decNumber.c	FUNCTION_3	ELSE_1	CALL_4
0x40018a1	            0x8b06	                    mov eax, dword [rsi]	      6180	decNumber.c	FUNCTION_3	ELSE_1	CALL_4
0x40018a3	          0x83f801	                              cmp eax, 1	      6180	decNumber.c	FUNCTION_3	ELSE_1	CALL_4
0x40018a6	            0x7478	                            je 0x4001920	      6180	decNumber.c	FUNCTION_3	ELSE_1	CALL_4
0x40018a8	         0xfb65608	               movzx edx, byte [rsi + 8]	      6180	decNumber.c	FUNCTION_3	ELSE_1	CALL_4
0x40018ac	            0x84d2	                             test dl, dl	      6181	decNumber.c	FUNCTION_3	ELSE_1	CALL_5
0x40018ae	      0xb801000000	                              mov eax, 1	      6179	decNumber.c	FUNCTION_3	ELSE_1
0x40018b3	     0xf8887000000	                            js 0x4001940	      6181	decNumber.c	FUNCTION_3	ELSE_1	CALL_5
0x40018b9	            0x39c3	                            cmp ebx, eax	      6183	decNumber.c	FUNCTION_3	ELSE_1	IF_9
0x40018bb	     0xf8c8f000000	                            jl 0x4001950	      6183	decNumber.c	FUNCTION_3	ELSE_1	IF_9
0x40018c1	            0x31c0	                            xor eax, eax	      6184	decNumber.c	FUNCTION_3	ELSE_1	IF_10
0x40018c3	            0x85db	                           test ebx, ebx	      6184	decNumber.c	FUNCTION_3	ELSE_1	IF_10
0x40018c5	     0xf85fefeffff	                           jne 0x40017c9	      6184	decNumber.c	FUNCTION_3	ELSE_1	IF_10
0x40018cb	              0x5b	                                 pop rbx	      6208	decNumber.c	FUNCTION_3
0x40018cc	              0xc3	                                     ret	      6208	decNumber.c	FUNCTION_3
0x40018cd	           0xf1f00	                         nop dword [rax]	      6208	decNumber.c	FUNCTION_3
0x40018d0	     0xfb688000000	                   movzx ecx, byte [rax]	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40018d7	          0x486307	                 movsxd rax, dword [rdi]	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40018da	        0x4c8d4e0a	                     lea r9, [rsi + 0xa]	      6204	decNumber.c	FUNCTION_3	CALL_10
0x40018de	          0x83f831	                           cmp eax, 0x31	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40018e1	     0xf8e7fffffff	                           jle 0x4001866	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40018e7	        0x448d5002	                     lea r10d, [rax + 2]	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40018eb	      0xbe56555555	                     mov esi, 0x55555556	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40018f0	          0x4489d0	                           mov eax, r10d	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40018f3	            0xf7ee	                                imul esi	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40018f5	          0x4489d0	                           mov eax, r10d	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40018f8	          0xc1f81f	                           sar eax, 0x1f	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40018fb	            0x89d6	                            mov esi, edx	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40018fd	            0x29c6	                            sub esi, eax	      6203	decNumber.c	FUNCTION_3	CALL_9
0x40018ff	      0xe969ffffff	                           jmp 0x400186d	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4001904	         0xf1f4000	                         nop dword [rax]	      6203	decNumber.c	FUNCTION_3	CALL_9
0x4001908	        0xf6470870	               test byte [rdi + 8], 0x70	      6170	decNumber.c	FUNCTION_3	CALL_1
0x400190c	     0xf859ffeffff	                           jne 0x40017b1	      6170	decNumber.c	FUNCTION_3	CALL_1
0x4001912	            0x84d2	                             test dl, dl	      6171	decNumber.c	FUNCTION_3	IF_2
0x4001914	            0x7541	                           jne 0x4001957	      6171	decNumber.c	FUNCTION_3	IF_2
0x4001916	            0x31db	                            xor ebx, ebx	      6171	decNumber.c	FUNCTION_3	IF_2
0x4001918	            0xeb80	                           jmp 0x400189a	      6171	decNumber.c	FUNCTION_3	IF_2
0x400191a	    0x660f1f440000	                    nop word [rax + rax]	      6171	decNumber.c	FUNCTION_3	IF_2
0x4001920	         0xfb65608	               movzx edx, byte [rsi + 8]	      6180	decNumber.c	FUNCTION_3	ELSE_1	CALL_4
0x4001924	          0xf6c270	                           test dl, 0x70	      6180	decNumber.c	FUNCTION_3	ELSE_1	CALL_4
0x4001927	            0x7583	                           jne 0x40018ac	      6180	decNumber.c	FUNCTION_3	ELSE_1	CALL_4
0x4001929	          0x83fb01	                              cmp ebx, 1	      6182	decNumber.c	FUNCTION_3	ELSE_1	IF_8
0x400192c	     0xf84b5feffff	                            je 0x40017e7	      6182	decNumber.c	FUNCTION_3	ELSE_1	IF_8
0x4001932	            0x31c0	                            xor eax, eax	      6180	decNumber.c	FUNCTION_3	ELSE_1	CALL_4
0x4001934	      0xe980ffffff	                           jmp 0x40018b9	      6180	decNumber.c	FUNCTION_3	ELSE_1	CALL_4
0x4001939	     0xf1f80000000	                         nop dword [rax]	      6180	decNumber.c	FUNCTION_3	ELSE_1	CALL_4
0x4001940	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      6182	decNumber.c	FUNCTION_3	ELSE_1	IF_8
0x4001943	     0xf8480feffff	                            je 0x40017c9	      6182	decNumber.c	FUNCTION_3	ELSE_1	IF_8
0x4001949	      0xb801000000	                              mov eax, 1	      6182	decNumber.c	FUNCTION_3	ELSE_1	IF_8
0x400194e	              0x5b	                                 pop rbx	      6208	decNumber.c	FUNCTION_3
0x400194f	              0xc3	                                     ret	      6208	decNumber.c	FUNCTION_3
0x4001950	      0xb8ffffffff	                     mov eax, 0xffffffff	      6174	decNumber.c	FUNCTION_3	IF_2	IF_4
0x4001955	              0x5b	                                 pop rbx	      6208	decNumber.c	FUNCTION_3
0x4001956	              0xc3	                                     ret	      6208	decNumber.c	FUNCTION_3
0x4001957	      0x66837e0a00	                 cmp word [rsi + 0xa], 0	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x400195c	            0x75f2	                           jne 0x4001950	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x400195e	          0x833e01	                      cmp dword [rsi], 1	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x4001961	            0x75ed	                           jne 0x4001950	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x4001963	            0x31c0	                            xor eax, eax	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x4001965	        0xf6460870	               test byte [rsi + 8], 0x70	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x4001969	              0x5b	                                 pop rbx	      6208	decNumber.c	FUNCTION_3
0x400196a	           0xf95c0	                                setne al	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x400196d	            0xf7d8	                                 neg eax	      6172	decNumber.c	FUNCTION_3	IF_2	CALL_2
0x400196f	              0xc3	                                     ret	      6208	decNumber.c	FUNCTION_3
decNumberRotate	ELSE,4:DO,0:CALL,20:IF,11:functions,0:SWITCH,0:WHILE,0:FOR,1	256
0x4004580	            0x4157	                                push r15	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x4004582	            0x4156	                                push r14	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x4004584	            0x4155	                                push r13	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x4004586	            0x4154	                                push r12	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x4004588	              0x55	                                push rbp	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x4004589	              0x53	                                push rbx	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x400458a	          0x4889cd	                            mov rbp, rcx	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x400458d	          0x4889fb	                            mov rbx, rdi	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x4004590	        0x4883ec38	                           sub rsp, 0x38	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x4004594	    0x64488b042528	                mov rax, qword fs:[0x28]	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x400459d	      0x4889442428	             mov qword [rsp + 0x28], rax	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x40045a2	            0x31c0	                            xor eax, eax	      2456	decNumber.c	FUNCTION_68	FUNCTION_41
0x40045a4	        0xf6460830	               test byte [rsi + 8], 0x30	      2465	decNumber.c	FUNCTION_68	FUNCTION_41	IF_2	CALL_3
0x40045a8	    0xc74424240000	               mov dword [rsp + 0x24], 0	      2457	decNumber.c	FUNCTION_68	FUNCTION_41
0x40045b0	            0x7508	                           jne 0x40045ba	      2465	decNumber.c	FUNCTION_68	FUNCTION_41	IF_2	CALL_3
0x40045b2	         0xfb64208	               movzx eax, byte [rdx + 8]	      2465	decNumber.c	FUNCTION_68	FUNCTION_41	IF_2	CALL_3
0x40045b6	            0xa830	                           test al, 0x30	      2465	decNumber.c	FUNCTION_68	FUNCTION_41	IF_2	CALL_3
0x40045b8	            0x7446	                            je 0x4004600	      2465	decNumber.c	FUNCTION_68	FUNCTION_41	IF_2	CALL_3
0x40045ba	      0x4c8d442424	                    lea r8, [rsp + 0x24]	      2466	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_4
0x40045bf	          0x4889e9	                            mov rcx, rbp	      2466	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_4
0x40045c2	          0x4889df	                            mov rdi, rbx	      2466	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_4
0x40045c5	      0xe826eeffff	                 call sym.decNaNs.isra.6	      2466	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_4
0x40045ca	        0x8b742424	            mov esi, dword [rsp + 0x24] 	      2563	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_20
0x40045ce	            0x85f6	                           test esi, esi	      2563	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_20
0x40045d0	     0xf8587000000	                           jne 0x400465d	      2563	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_20
0x40045d6	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x40045db	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x40045e4	          0x4889d8	                            mov rax, rbx	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x40045e7	     0xf85ee020000	                           jne 0x40048db	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x40045ed	        0x4883c438	                           add rsp, 0x38	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x40045f1	              0x5b	                                 pop rbx	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x40045f2	              0x5d	                                 pop rbp	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x40045f3	            0x415c	                                 pop r12	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x40045f5	            0x415d	                                 pop r13	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x40045f7	            0x415e	                                 pop r14	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x40045f9	            0x415f	                                 pop r15	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x40045fb	              0xc3	                                     ret	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x40045fc	         0xf1f4000	                         nop dword [rax]	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x4004600	            0xa840	                           test al, 0x40	      2468	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_1	IF_3	CALL_5
0x4004602	            0x754c	                           jne 0x4004650	      2468	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_1	IF_3	CALL_5
0x4004604	          0x8b4a04	                mov ecx, dword [rdx + 4]	      2468	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_1	IF_3	CALL_5
0x4004607	            0x85c9	                           test ecx, ecx	      2468	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_1	IF_3	CALL_5
0x4004609	            0x7545	                           jne 0x4004650	      2468	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_1	IF_3	CALL_5
0x400460b	          0x4889d7	                            mov rdi, rdx	      2471	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	CALL_6
0x400460e	      0x4889742408	                mov qword [rsp + 8], rsi	      2471	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	CALL_6
0x4004613	      0xe818bfffff	                      call sym.decGetInt	      2471	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	CALL_6
0x4004618	          0x4189c2	                           mov r10d, eax	      2471	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	CALL_6
0x400461b	    0x8d80feffff7f	             lea eax, [rax + 0x7ffffffe]	      2473	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4
0x4004621	          0x83f801	                              cmp eax, 1	      2473	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4
0x4004624	            0x762a	                           jbe 0x4004650	      2473	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4
0x4004626	    0x4181fa000000	                    cmp r10d, 0x80000000	      2473	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4
0x400462d	            0x7421	                            je 0x4004650	      2473	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4
0x400462f	          0x4489d2	                           mov edx, r10d	      2474	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4	CALL_7
0x4004632	      0x488b742408	                mov rsi, qword [rsp + 8]	      2474	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4	CALL_7
0x4004637	          0xc1fa1f	                           sar edx, 0x1f	      2474	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4	CALL_7
0x400463a	            0x89d0	                            mov eax, edx	      2474	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4	CALL_7
0x400463c	          0x4431d0	                           xor eax, r10d	      2474	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4	CALL_7
0x400463f	            0x29d0	                            sub eax, edx	      2474	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4	CALL_7
0x4004641	          0x3b4500	                    cmp eax, dword [rbp]	      2474	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4	CALL_7
0x4004644	            0x7e27	                           jle 0x400466d	      2474	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4	CALL_7
0x4004646	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2474	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	IF_4	CALL_7
0x4004650	    0xc74424248000	           mov dword [rsp + 0x24], 0x80 	      2469	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_1	IF_3
0x4004658	      0xbe80000000	                           mov esi, 0x80	      2563	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_20
0x400465d	          0x4889ea	                            mov rdx, rbp	      2563	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_20
0x4004660	          0x4889df	                            mov rdi, rbx	      2563	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_20
0x4004663	      0xe868c1ffff	                      call sym.decStatus	      2563	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_20
0x4004668	      0xe969ffffff	                           jmp 0x40045d6	      2563	decNumber.c	FUNCTION_68	FUNCTION_41	CALL_20
0x400466d	          0x4889df	                            mov rdi, rbx	      2477	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	CALL_8
0x4004670	      0xe800000000	                          call 0x4004675	      2477	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	CALL_8
0x4004675	          0x4585d2	                         test r10d, r10d	      2479	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_5
0x4004678	     0xf88ed010000	                            js 0x400486b	      2479	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_5
0x400467e	          0x4585d2	                         test r10d, r10d	      2480	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4004681	     0xf8443ffffff	                            je 0x40045ca	      2480	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4004687	          0x8b4d00	                    mov ecx, dword [rbp]	      2480	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x400468a	          0x4139ca	                           cmp r10d, ecx	      2480	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x400468d	     0xf8437ffffff	                            je 0x40045ca	      2480	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4004693	        0xf6430840	               test byte [rbx + 8], 0x40	      2481	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_9
0x4004697	     0xf852dffffff	                           jne 0x40045ca	      2481	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_9
0x400469d	          0x486303	                 movsxd rax, dword [rbx]	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x40046a0	        0x4c8d6b0a	                    lea r13, [rbx + 0xa]	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x40046a4	          0x83f831	                           cmp eax, 0x31	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x40046a7	     0xf8f17020000	                            jg 0x40048c4	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x40046ad	     0xfb680000000	                   movzx eax, byte [rax]	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x40046b4	      0x488d7c00fe	                lea rdi, [rax + rax - 2]	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x40046b9	          0x83f931	                           cmp ecx, 0x31	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x40046bc	     0xf8fb2010000	                            jg 0x4004874	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x40046c2	          0x4863d1	                         movsxd rdx, ecx	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x40046c5	     0xfb682000000	                   movzx eax, byte [rdx]	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x40046cc	      0x4c8d7c00fe	                lea r15, [rax + rax - 2]	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x40046d1	      0x498d443d02	                lea rax, [r13 + rdi + 2]	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x40046d6	      0x4f8d643d00	                    lea r12, [r13 + r15]	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x40046db	          0x4939c4	                            cmp r12, rax	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x40046de	     0xf823f020000	                            jb 0x4004923	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x40046e4	         0xf1f4000	                         nop dword [rax]	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x40046e8	            0x31d2	                            xor edx, edx	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x40046ea	        0x4883c002	                              add rax, 2	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x40046ee	        0x668950fe	                  mov word [rax - 2], dx	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x40046f2	          0x4c39e0	                            cmp rax, r12	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x40046f5	            0x76f1	                           jbe 0x40046e8	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x40046f7	          0x83f931	                           cmp ecx, 0x31	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x40046fa	            0x890b	                    mov dword [rbx], ecx	      2488	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x40046fc	          0x8d7102	                      lea esi, [rcx + 2]	      2488	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x40046ff	     0xf8f9a010000	                            jg 0x400489f	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004705	          0x4863d1	                         movsxd rdx, ecx	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004708	     0xfb6b2000000	                   movzx esi, byte [rdx]	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x400470f	          0x4189ce	                           mov r14d, ecx	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004712	          0x8d46ff	                      lea eax, [rsi - 1]	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004715	          0x8d0440	                  lea eax, [rax + rax*2]	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x4004718	          0x4129c6	                           sub r14d, eax	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x400471b	            0x89c8	                            mov eax, ecx	      2522	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x400471d	      0xb903000000	                              mov ecx, 3	      2523	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4004722	          0x4429d0	                           sub eax, r10d	      2522	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4004725	              0x99	                                     cdq	      2523	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4004726	            0xf7f9	                                idiv ecx	      2523	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4004728	            0x85d2	                           test edx, edx	      2525	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x400472a	          0x4189c2	                           mov r10d, eax	      2523	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x400472d	        0x89442408	                mov dword [rsp + 8], eax	      2523	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4004731	            0x89d7	                            mov edi, edx	      2524	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4004733	          0x4189d1	                            mov r9d, edx	      2524	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4004736	            0x7450	                            je 0x4004788	      2525	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x4004738	         0xfb7430a	            movzx eax, word [rbx + 0xa] 	      2526	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x400473c	            0x89d1	                            mov ecx, edx	      2526	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x400473e	            0x31d2	                            xor edx, edx	      2526	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x4004740	    0xf7348d000000	                       div dword [rcx*4]	      2526	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x4004747	            0x85ff	                           test edi, edi	      6740	decNumber.c	FUNCTION_9	IF_1
0x4004749	            0x89d1	                            mov ecx, edx	      2526	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7
0x400474b	     0xf85a7010000	                           jne 0x40048f8	      6740	decNumber.c	FUNCTION_9	IF_1
0x4004751	          0x4539ce	                           cmp r14d, r9d	      2528	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4004754	     0xf8386010000	                           jae 0x40048e0	      2528	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x400475a	          0x4489ca	                            mov edx, r9d	      2529	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x400475d	            0x89c8	                            mov eax, ecx	      2530	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x400475f	          0x4429f2	                           sub edx, r14d	      2529	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4004762	          0x4889d7	                            mov rdi, rdx	      2529	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4004765	            0x31d2	                            xor edx, edx	      2530	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4004767	    0xf734bd000000	                       div dword [rdi*4]	      2530	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x400476e	      0x6641890424	                      mov word [r12], ax	      2530	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4004773	        0x418d4603	                      lea eax, [r14 + 3]	      2532	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4004777	          0x4429c8	                            sub eax, r9d	      2532	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x400477a	     0xfaf14850000	                 imul edx, dword [rax*4]	      2531	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4004782	    0x6641015424fe	                  add word [r12 - 2], dx	      2531	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4004788	        0x8b442408	                mov eax, dword [rsp + 8]	      2540	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9
0x400478c	            0x85c0	                           test eax, eax	      2540	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9
0x400478e	     0xf84bf000000	                            je 0x4004853	      2540	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9
0x4004794	      0xb903000000	                              mov ecx, 3	      2544	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9
0x4004799	          0x4429f1	                           sub ecx, r14d	      2545	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x400479c	            0x7436	                            je 0x40047d4	      2545	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x400479e	         0xfb7430a	            movzx eax, word [rbx + 0xa] 	      2546	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x40047a2	            0x89cf	                            mov edi, ecx	      2546	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x40047a4	            0x31d2	                            xor edx, edx	      2546	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x40047a6	          0x4489d6	                           mov esi, r10d	      2546	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x40047a9	    0xf734bd000000	                       div dword [rdi*4]	      2546	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x40047b0	          0x4c89ef	                            mov rdi, r13	      2546	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x40047b3	        0x89542414	             mov dword [rsp + 0x14], edx	      2546	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x40047b7	            0x89ca	                            mov edx, ecx	      2546	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x40047b9	      0xe882c7ffff	         call sym.decShiftToLeast.part.1	      2546	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x40047be	          0x4589f0	                           mov r8d, r14d	      2548	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x40047c1	       0xfb7442414	           movzx eax, word [rsp + 0x14] 	      2548	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x40047c6	    0x420faf048500	                  imul eax, dword [r8*4]	      2548	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x40047cf	      0x6641010424	                      add word [r12], ax	      2548	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	IF_10
0x40047d4	      0x448b742408	               mov r14d, dword [rsp + 8]	      2553	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_16
0x40047d9	          0x4c89e2	                            mov rdx, r12	      6658	decNumber.c	FUNCTION_7	FOR_1
0x40047dc	          0x4d01f6	                            add r14, r14	      2553	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_16
0x40047df	      0x4b8d443500	                    lea rax, [r13 + r14]	      2553	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_16
0x40047e4	          0x4c39e0	                            cmp rax, r12	      6658	decNumber.c	FUNCTION_7	FOR_1
0x40047e7	            0x731b	                           jae 0x4004804	      6658	decNumber.c	FUNCTION_7	FOR_1
0x40047e9	           0xfb708	                   movzx ecx, word [rax]	      6659	decNumber.c	FUNCTION_7	FOR_1
0x40047ec	           0xfb732	                   movzx esi, word [rdx]	      6660	decNumber.c	FUNCTION_7	FOR_1
0x40047ef	        0x4883c002	                              add rax, 2	      6658	decNumber.c	FUNCTION_7	FOR_1
0x40047f3	        0x4883ea02	                              sub rdx, 2	      6658	decNumber.c	FUNCTION_7	FOR_1
0x40047f7	        0x668970fe	                  mov word [rax - 2], si	      6660	decNumber.c	FUNCTION_7	FOR_1
0x40047fb	        0x66894a02	                  mov word [rdx + 2], cx	      6661	decNumber.c	FUNCTION_7	FOR_1
0x40047ff	          0x4839d0	                            cmp rax, rdx	      6658	decNumber.c	FUNCTION_7	FOR_1
0x4004802	            0x72e5	                            jb 0x40047e9	      6658	decNumber.c	FUNCTION_7	FOR_1
0x4004804	      0x4b8d4435fe	                lea rax, [r13 + r14 - 2]	      2554	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_9	CALL_17
0x4004809	          0x4c89ea	                            mov rdx, r13	      6658	decNumber.c	FUNCTION_7	FOR_1
0x400480c	          0x4939c5	                            cmp r13, rax	      6658	decNumber.c	FUNCTION_7	FOR_1
0x400480f	            0x731b	                           jae 0x400482c	      6658	decNumber.c	FUNCTION_7	FOR_1
0x4004811	           0xfb70a	                   movzx ecx, word [rdx]	      6659	decNumber.c	FUNCTION_7	FOR_1
0x4004814	           0xfb730	                   movzx esi, word [rax]	      6660	decNumber.c	FUNCTION_7	FOR_1
0x4004817	        0x4883c202	                              add rdx, 2	      6658	decNumber.c	FUNCTION_7	FOR_1
0x400481b	        0x4883e802	                              sub rax, 2	      6658	decNumber.c	FUNCTION_7	FOR_1
0x400481f	        0x668972fe	                  mov word [rdx - 2], si	      6660	decNumber.c	FUNCTION_7	FOR_1
0x4004823	        0x66894802	                  mov word [rax + 2], cx	      6661	decNumber.c	FUNCTION_7	FOR_1
0x4004827	          0x4839c2	                            cmp rdx, rax	      6658	decNumber.c	FUNCTION_7	FOR_1
0x400482a	            0x72e5	                            jb 0x4004811	      6658	decNumber.c	FUNCTION_7	FOR_1
0x400482c	          0x4d39e5	                            cmp r13, r12	      6658	decNumber.c	FUNCTION_7	FOR_1
0x400482f	          0x4c89e8	                            mov rax, r13	      6658	decNumber.c	FUNCTION_7	FOR_1
0x4004832	            0x731f	                           jae 0x4004853	      6658	decNumber.c	FUNCTION_7	FOR_1
0x4004834	           0xfb710	                   movzx edx, word [rax]	      6659	decNumber.c	FUNCTION_7	FOR_1
0x4004837	      0x410fb70c24	                   movzx ecx, word [r12]	      6660	decNumber.c	FUNCTION_7	FOR_1
0x400483c	        0x4883c002	                              add rax, 2	      6658	decNumber.c	FUNCTION_7	FOR_1
0x4004840	        0x4983ec02	                              sub r12, 2	      6658	decNumber.c	FUNCTION_7	FOR_1
0x4004844	        0x668948fe	                  mov word [rax - 2], cx	      6660	decNumber.c	FUNCTION_7	FOR_1
0x4004848	    0x664189542402	                  mov word [r12 + 2], dx	      6661	decNumber.c	FUNCTION_7	FOR_1
0x400484e	          0x4c39e0	                            cmp rax, r12	      6658	decNumber.c	FUNCTION_7	FOR_1
0x4004851	            0x72e1	                            jb 0x4004834	      6658	decNumber.c	FUNCTION_7	FOR_1
0x4004853	          0x4c89fe	                            mov rsi, r15	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x4004856	          0x4c89ef	                            mov rdi, r13	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x4004859	          0x48d1fe	                              sar rsi, 1	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x400485c	          0x83c601	                              add esi, 1	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x400485f	      0xe87cbeffff	                   call sym.decGetDigits	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x4004864	            0x8903	                    mov dword [rbx], eax	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x4004866	      0xe95ffdffff	                           jmp 0x40045ca	      2559	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_19
0x400486b	        0x44035500	                   add r10d, dword [rbp]	      2479	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_5
0x400486f	      0xe90afeffff	                           jmp 0x400467e	      2479	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_5
0x4004874	          0x8d7102	                      lea esi, [rcx + 2]	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4004877	    0x41b803000000	                              mov r8d, 3	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x400487d	            0x89f0	                            mov eax, esi	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x400487f	              0x99	                                     cdq	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4004880	          0x41f7f8	                                idiv r8d	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4004883	            0x4898	                                    cdqe	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4004885	      0x4c8d7c00fe	                lea r15, [rax + rax - 2]	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x400488a	      0x498d443d02	                lea rax, [r13 + rdi + 2]	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x400488f	      0x4f8d643d00	                    lea r12, [r13 + r15]	      2486	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_11
0x4004894	          0x4c39e0	                            cmp rax, r12	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x4004897	     0xf864bfeffff	                           jbe 0x40046e8	      2487	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	FOR_1
0x400489d	            0x890b	                    mov dword [rbx], ecx	      2488	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x400489f	            0x89f0	                            mov eax, esi	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x40048a1	      0xbf03000000	                              mov edi, 3	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x40048a6	          0x4189ce	                           mov r14d, ecx	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x40048a9	              0x99	                                     cdq	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x40048aa	            0xf7ff	                                idiv edi	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x40048ac	            0x89c6	                            mov esi, eax	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x40048ae	          0x8d40ff	                      lea eax, [rax - 1]	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x40048b1	          0x8d0440	                  lea eax, [rax + rax*2]	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x40048b4	          0x4129c6	                           sub r14d, eax	      2489	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_12
0x40048b7	            0x89c8	                            mov eax, ecx	      2522	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x40048b9	          0x4429d0	                           sub eax, r10d	      2522	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x40048bc	              0x99	                                     cdq	      2523	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x40048bd	            0xf7ff	                                idiv edi	      2523	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x40048bf	      0xe964feffff	                           jmp 0x4004728	      2523	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x40048c4	          0x83c002	                              add eax, 2	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x40048c7	      0xbe03000000	                              mov esi, 3	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x40048cc	              0x99	                                     cdq	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x40048cd	            0xf7fe	                                idiv esi	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x40048cf	            0x4898	                                    cdqe	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x40048d1	      0x488d7c00fe	                lea rdi, [rax + rax - 2]	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x40048d6	      0xe9defdffff	                           jmp 0x40046b9	      2485	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	CALL_10
0x40048db	      0xe800000000	                          call 0x40048e0	      2565	decNumber.c	FUNCTION_68	FUNCTION_41
0x40048e0	          0x4489f0	                           mov eax, r14d	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x40048e3	          0x4429c8	                            sub eax, r9d	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x40048e6	     0xfaf0c850000	                 imul ecx, dword [rax*4]	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x40048ee	      0x6641010c24	                      add word [r12], cx	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x40048f3	      0xe990feffff	                           jmp 0x4004788	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x40048f8	            0x89fa	                            mov edx, edi	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x40048fa	          0x4c89ef	                            mov rdi, r13	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x40048fd	        0x894c241c	             mov dword [rsp + 0x1c], ecx	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x4004901	      0x44894c2418	             mov dword [rsp + 0x18], r9d	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x4004906	      0x4489542414	            mov dword [rsp + 0x14], r10d	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x400490b	      0xe830c6ffff	         call sym.decShiftToLeast.part.1	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x4004910	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x4004914	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x4004919	      0x448b542414	           mov r10d, dword [rsp + 0x14] 	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x400491e	      0xe92efeffff	                           jmp 0x4004751	      2535	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6	IF_7	ELSE_4
0x4004923	            0x890b	                    mov dword [rbx], ecx	      2488	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
0x4004925	      0xe9defdffff	                           jmp 0x4004708	      2488	decNumber.c	FUNCTION_68	FUNCTION_41	ELSE_2	ELSE_3	IF_6
decNumberDivideInteger	ELSE,0:DO,0:CALL,2:IF,1:functions,0:SWITCH,0:WHILE,0:FOR,0	27
0x4006de0	              0x55	                                push rbp	      1015	decNumber.c	FUNCTION_68	FUNCTION_16
0x4006de1	              0x53	                                push rbx	      1015	decNumber.c	FUNCTION_68	FUNCTION_16
0x4006de2	    0x41b820000000	                           mov r8d, 0x20	      1017	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_1
0x4006de8	          0x4889fb	                            mov rbx, rdi	      1015	decNumber.c	FUNCTION_68	FUNCTION_16
0x4006deb	          0x4889cd	                            mov rbp, rcx	      1015	decNumber.c	FUNCTION_68	FUNCTION_16
0x4006dee	        0x4883ec18	                           sub rsp, 0x18	      1015	decNumber.c	FUNCTION_68	FUNCTION_16
0x4006df2	      0x4c8d4c2404	                       lea r9, [rsp + 4]	      1017	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_1
0x4006df7	    0xc74424040000	                  mov dword [rsp + 4], 0	      1016	decNumber.c	FUNCTION_68	FUNCTION_16
0x4006dff	    0x64488b042528	                mov rax, qword fs:[0x28]	      1015	decNumber.c	FUNCTION_68	FUNCTION_16
0x4006e08	      0x4889442408	                mov qword [rsp + 8], rax	      1015	decNumber.c	FUNCTION_68	FUNCTION_16
0x4006e0d	            0x31c0	                            xor eax, eax	      1015	decNumber.c	FUNCTION_68	FUNCTION_16
0x4006e0f	      0xe8fceeffff	                    call sym.decDivideOp	      1017	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_1
0x4006e14	        0x8b742404	                mov esi, dword [rsp + 4]	      1018	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_2
0x4006e18	            0x85f6	                           test esi, esi	      1018	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_2
0x4006e1a	            0x740b	                            je 0x4006e27	      1018	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_2
0x4006e1c	          0x4889ea	                            mov rdx, rbp	      1018	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_2
0x4006e1f	          0x4889df	                            mov rdi, rbx	      1018	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_2
0x4006e22	      0xe8a999ffff	                      call sym.decStatus	      1018	decNumber.c	FUNCTION_68	FUNCTION_16	CALL_2
0x4006e27	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1020	decNumber.c	FUNCTION_68	FUNCTION_16
0x4006e2c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1020	decNumber.c	FUNCTION_68	FUNCTION_16
0x4006e35	          0x4889d8	                            mov rax, rbx	      1020	decNumber.c	FUNCTION_68	FUNCTION_16
0x4006e38	            0x7507	                           jne 0x4006e41	      1020	decNumber.c	FUNCTION_68	FUNCTION_16
0x4006e3a	        0x4883c418	                           add rsp, 0x18	      1020	decNumber.c	FUNCTION_68	FUNCTION_16
0x4006e3e	              0x5b	                                 pop rbx	      1020	decNumber.c	FUNCTION_68	FUNCTION_16
0x4006e3f	              0x5d	                                 pop rbp	      1020	decNumber.c	FUNCTION_68	FUNCTION_16
0x4006e40	              0xc3	                                     ret	      1020	decNumber.c	FUNCTION_68	FUNCTION_16
0x4006e41	      0xe800000000	                          call 0x4006e46	      1020	decNumber.c	FUNCTION_68	FUNCTION_16
decDecap	ELSE,0:DO,0:CALL,4:IF,3:functions,0:SWITCH,0:WHILE,0:FOR,0	45
0x4000730	            0x8b0f	                    mov ecx, dword [rdi]	      7628	decNumber.c	FUNCTION_21	IF_1
0x4000732	          0x4989f8	                             mov r8, rdi	      7625	decNumber.c	FUNCTION_21
0x4000735	            0x39f1	                            cmp ecx, esi	      7628	decNumber.c	FUNCTION_21	IF_1
0x4000737	            0x7e7f	                           jle 0x40007b8	      7628	decNumber.c	FUNCTION_21	IF_1
0x4000739	            0x29f1	                            sub ecx, esi	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400073b	        0x488d7f0a	                    lea rdi, [rdi + 0xa]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400073f	          0x83f931	                           cmp ecx, 0x31	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4000742	            0x7e54	                           jle 0x4000798	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4000744	          0x8d7102	                      lea esi, [rcx + 2]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4000747	      0xba56555555	                     mov edx, 0x55555556	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400074c	            0x89f0	                            mov eax, esi	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400074e	          0xc1fe1f	                           sar esi, 0x1f	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4000751	            0xf7ea	                                imul edx	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4000753	            0x29f2	                            sub edx, esi	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4000755	          0x4863c2	                         movsxd rax, edx	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4000758	      0x488d7400fe	                lea rsi, [rax + rax - 2]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400075d	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	      7639	decNumber.c	FUNCTION_21	CALL_3
0x4000761	        0x4c8d0c37	                     lea r9, [rdi + rsi]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x4000765	            0x29c1	                            sub ecx, eax	      7639	decNumber.c	FUNCTION_21	CALL_3
0x4000767	          0x83f903	                              cmp ecx, 3	      7640	decNumber.c	FUNCTION_21	IF_3
0x400076a	            0x7414	                            je 0x4000780	      7640	decNumber.c	FUNCTION_21	IF_3
0x400076c	        0x410fb701	                    movzx eax, word [r9]	      7640	decNumber.c	FUNCTION_21	IF_3
0x4000770	          0x4863c9	                         movsxd rcx, ecx	      7640	decNumber.c	FUNCTION_21	IF_3
0x4000773	            0x31d2	                            xor edx, edx	      7640	decNumber.c	FUNCTION_21	IF_3
0x4000775	    0xf7348d000000	                       div dword [rcx*4]	      7640	decNumber.c	FUNCTION_21	IF_3
0x400077c	        0x66418911	                       mov word [r9], dx	      7640	decNumber.c	FUNCTION_21	IF_3
0x4000780	          0x48d1fe	                              sar rsi, 1	      7642	decNumber.c	FUNCTION_21	CALL_4
0x4000783	          0x83c601	                              add esi, 1	      7642	decNumber.c	FUNCTION_21	CALL_4
0x4000786	      0xe855ffffff	                   call sym.decGetDigits	      7642	decNumber.c	FUNCTION_21	CALL_4
0x400078b	          0x418900	                     mov dword [r8], eax	      7642	decNumber.c	FUNCTION_21	CALL_4
0x400078e	          0x4c89c0	                             mov rax, r8	      7644	decNumber.c	FUNCTION_21
0x4000791	              0xc3	                                     ret	      7644	decNumber.c	FUNCTION_21
0x4000792	    0x660f1f440000	                    nop word [rax + rax]	      7644	decNumber.c	FUNCTION_21
0x4000798	          0x4863c1	                         movsxd rax, ecx	      7638	decNumber.c	FUNCTION_21	CALL_2
0x400079b	     0xfb690000000	                   movzx edx, byte [rax]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x40007a2	      0x488d7412fe	                lea rsi, [rdx + rdx - 2]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x40007a7	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	      7639	decNumber.c	FUNCTION_21	CALL_3
0x40007ab	        0x4c8d0c37	                     lea r9, [rdi + rsi]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x40007af	            0xebb4	                           jmp 0x4000765	      7638	decNumber.c	FUNCTION_21	CALL_2
0x40007b1	     0xf1f80000000	                         nop dword [rax]	      7638	decNumber.c	FUNCTION_21	CALL_2
0x40007b8	            0x31c0	                            xor eax, eax	      7634	decNumber.c	FUNCTION_21	IF_1
0x40007ba	    0xc70701000000	                      mov dword [rdi], 1	      7635	decNumber.c	FUNCTION_21	IF_1
0x40007c0	        0x6689470a	                mov word [rdi + 0xa], ax	      7634	decNumber.c	FUNCTION_21	IF_1
0x40007c4	          0x4c89c0	                             mov rax, r8	      7644	decNumber.c	FUNCTION_21
0x40007c7	              0xc3	                                     ret	      7644	decNumber.c	FUNCTION_21
decNumberFMA	ELSE,1:DO,1:CALL,17:IF,10:functions,0:SWITCH,0:WHILE,0:FOR,0	151
0x4005530	            0x4157	                                push r15	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005532	            0x4156	                                push r14	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005534	          0x4989d6	                            mov r14, rdx	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005537	            0x4155	                                push r13	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005539	            0x4154	                                push r12	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x400553b	          0x4989f5	                            mov r13, rsi	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x400553e	              0x55	                                push rbp	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x400553f	              0x53	                                push rbx	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005540	          0x4889fd	                            mov rbp, rdi	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005543	          0x4989cc	                            mov r12, rcx	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005546	          0x4c89c3	                             mov rbx, r8	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005549	    0x4881eca80000	                           sub rsp, 0xa8	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005550	    0x64488b042528	                mov rax, qword fs:[0x28]	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005559	    0x488984249800	             mov qword [rsp + 0x98], rax	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005561	            0x31c0	                            xor eax, eax	      1105	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005563	        0xf6460870	               test byte [rsi + 8], 0x70	      1126	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_5
0x4005567	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      1106	decNumber.c	FUNCTION_68	FUNCTION_18
0x400556f	     0xf84a3010000	                            je 0x4005718	      1126	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_5
0x4005575	      0x41f6460870	               test byte [r14 + 8], 0x70	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x400557a	     0xf84c0010000	                            je 0x4005740	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x4005580	    0x41f644240870	               test byte [r12 + 8], 0x70	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x4005586	     0xf84dc010000	                            je 0x4005768	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x400558c	        0x488b4308	                mov rax, qword [rbx + 8]	      1130	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x4005590	    0xc7442424ffc9	     mov dword [rsp + 0x24], 0x3b9ac9ff 	      1133	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x4005598	      0x4889442428	             mov qword [rsp + 0x28], rax	      1130	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x400559d	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1130	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x40055a1	    0xc74424280136	     mov dword [rsp + 0x28], 0xc4653601 	      1134	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x40055a9	      0x4889442430	             mov qword [rsp + 0x30], rax	      1130	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x40055ae	          0x8b4318	            mov eax, dword [rbx + 0x18] 	      1130	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x40055b1	        0x89442438	             mov dword [rsp + 0x38], eax	      1130	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x40055b5	          0x418b06	                    mov eax, dword [r14]	      1131	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x40055b8	        0x41034500	                    add eax, dword [r13]	      1131	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x40055bc	          0x83f831	                           cmp eax, 0x31	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x40055bf	        0x89442420	             mov dword [rsp + 0x20], eax	      1131	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x40055c3	     0xf8ecf000000	                           jle 0x4005698	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x40055c9	          0x8d4802	                      lea ecx, [rax + 2]	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x40055cc	      0xba56555555	                     mov edx, 0x55555556	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x40055d1	            0x89c8	                            mov eax, ecx	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x40055d3	            0xf7ea	                                imul edx	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x40055d5	            0x89c8	                            mov eax, ecx	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x40055d7	          0xc1f81f	                           sar eax, 0x1f	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x40055da	            0x29c2	                            sub edx, eax	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x40055dc	        0x8d7c120a	              lea edi, [rdx + rdx + 0xa]	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x40055e0	          0x83ff3c	                           cmp edi, 0x3c	      1138	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5
0x40055e3	     0xf86c5000000	                           jbe 0x40056ae	      1138	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5
0x40055e9	      0xe800000000	                          call 0x40055ee	      1139	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5
0x40055ee	          0x4885c0	                           test rax, rax	      1140	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5	IF_6
0x40055f1	          0x4989c7	                            mov r15, rax	      1139	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5
0x40055f4	          0x4989c2	                            mov r10, rax	      1139	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5
0x40055f7	     0xf8493010000	                            je 0x4005790	      1140	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5	IF_6
0x40055fd	      0x4c8d44241c	                    lea r8, [rsp + 0x1c]	      1147	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_11
0x4005602	      0x488d4c2420	                   lea rcx, [rsp + 0x20]	      1147	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_11
0x4005607	          0x4c89ee	                            mov rsi, r13	      1147	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_11
0x400560a	          0x4c89d7	                            mov rdi, r10	      1147	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_11
0x400560d	          0x4c89f2	                            mov rdx, r14	      1147	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_11
0x4005610	      0x4c89542408	                mov qword [rsp + 8], r10	      1147	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_11
0x4005615	      0xe866e7ffff	                  call sym.decMultiplyOp	      1147	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_11
0x400561a	      0x448b6c241c	           mov r13d, dword [rsp + 0x1c] 	      1154	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7
0x400561f	      0x4c8b542408	                mov r10, qword [rsp + 8]	      1154	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7
0x4005624	        0x41f6c580	                         test r13b, 0x80	      1154	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7
0x4005628	     0xf84b3000000	                            je 0x40056e1	      1154	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7
0x400562e	    0x41f7c5000000	                   test r13d, 0x40000000	      1155	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7	IF_8
0x4005635	     0xf8585000000	                           jne 0x40056c0	      1155	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7	IF_8
0x400563b	            0x31d2	                            xor edx, edx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400563d	    0xc74504000000	                  mov dword [rbp + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005644	    0xc74500010000	                      mov dword [rbp], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400564b	        0x6689550a	                mov word [rbp + 0xa], dx	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400564f	        0xc6450820	                mov byte [rbp + 8], 0x20	      1157	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7	IF_8
0x4005653	          0x4c89ff	                            mov rdi, r15	      1172	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005656	      0xe800000000	                          call 0x400565b	      1172	decNumber.c	FUNCTION_68	FUNCTION_18
0x400565b	          0x4889da	                            mov rdx, rbx	      1173	decNumber.c	FUNCTION_68	FUNCTION_18	CALL_16
0x400565e	          0x4489ee	                           mov esi, r13d	      1173	decNumber.c	FUNCTION_68	FUNCTION_18	CALL_16
0x4005661	          0x4889ef	                            mov rdi, rbp	      1173	decNumber.c	FUNCTION_68	FUNCTION_18	CALL_16
0x4005664	      0xe867b1ffff	                      call sym.decStatus	      1173	decNumber.c	FUNCTION_68	FUNCTION_18	CALL_16
0x4005669	    0x488bb4249800	            mov rsi, qword [rsp + 0x98] 	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005671	    0x644833342528	                xor rsi, qword fs:[0x28]	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x400567a	          0x4889e8	                            mov rax, rbp	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x400567d	     0xf8520010000	                           jne 0x40057a3	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005683	    0x4881c4a80000	                           add rsp, 0xa8	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x400568a	              0x5b	                                 pop rbx	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x400568b	              0x5d	                                 pop rbp	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x400568c	            0x415c	                                 pop r12	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x400568e	            0x415d	                                 pop r13	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005690	            0x415e	                                 pop r14	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005692	            0x415f	                                 pop r15	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005694	              0xc3	                                     ret	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005695	           0xf1f00	                         nop dword [rax]	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005698	            0x4898	                                    cdqe	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x400569a	     0xfb680000000	                   movzx eax, byte [rax]	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x40056a1	        0x8d7c000a	              lea edi, [rax + rax + 0xa]	      1137	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_10
0x40056a5	          0x83ff3c	                           cmp edi, 0x3c	      1138	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5
0x40056a8	     0xf873bffffff	                            ja 0x40055e9	      1138	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5
0x40056ae	      0x4c8d542450	                   lea r10, [rsp + 0x50]	      1136	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1
0x40056b3	          0x4531ff	                          xor r15d, r15d	      1110	decNumber.c	FUNCTION_68	FUNCTION_18
0x40056b6	      0xe942ffffff	                           jmp 0x40055fd	      1110	decNumber.c	FUNCTION_68	FUNCTION_18
0x40056bb	       0xf1f440000	                   nop dword [rax + rax]	      1110	decNumber.c	FUNCTION_68	FUNCTION_18
0x40056c0	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40056c2	      0x4c8d642440	                   lea r12, [rsp + 0x40]	      1161	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_7
0x40056c7	      0xc644244800	                mov byte [rsp + 0x48], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40056cc	    0xc74424440000	               mov dword [rsp + 0x44], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40056d4	    0xc74424400100	               mov dword [rsp + 0x40], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40056dc	      0x668944244a	               mov word [rsp + 0x4a], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40056e1	      0x4c8d4c241c	                    lea r9, [rsp + 0x1c]	      1169	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_15
0x40056e6	          0x4531c0	                            xor r8d, r8d	      1169	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_15
0x40056e9	          0x4889d9	                            mov rcx, rbx	      1169	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_15
0x40056ec	          0x4c89e2	                            mov rdx, r12	      1169	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_15
0x40056ef	          0x4c89d6	                            mov rsi, r10	      1169	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_15
0x40056f2	          0x4889ef	                            mov rdi, rbp	      1169	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_15
0x40056f5	      0xe8f6f4ffff	                       call sym.decAddOp	      1169	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_15
0x40056fa	      0x448b6c241c	           mov r13d, dword [rsp + 0x1c] 	      1169	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_15
0x40056ff	          0x4c89ff	                            mov rdi, r15	      1172	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005702	      0xe800000000	                          call 0x4005707	      1172	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005707	          0x4585ed	                         test r13d, r13d	      1173	decNumber.c	FUNCTION_68	FUNCTION_18	CALL_16
0x400570a	     0xf8459ffffff	                            je 0x4005669	      1173	decNumber.c	FUNCTION_68	FUNCTION_18	CALL_16
0x4005710	      0xe946ffffff	                           jmp 0x400565b	      1173	decNumber.c	FUNCTION_68	FUNCTION_18	CALL_16
0x4005715	           0xf1f00	                         nop dword [rax]	      1173	decNumber.c	FUNCTION_68	FUNCTION_18	CALL_16
0x4005718	      0x488d54241c	                   lea rdx, [rsp + 0x1c]	      1126	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_5
0x400571d	          0x4c89c6	                             mov rsi, r8	      1126	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_5
0x4005720	          0x4c89ef	                            mov rdi, r13	      1126	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_5
0x4005723	      0xe878adffff	                   call sym.decCheckMath	      1126	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_5
0x4005728	            0x85c0	                           test eax, eax	      1126	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_5
0x400572a	     0xf8445feffff	                            je 0x4005575	      1126	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_5
0x4005730	      0x448b6c241c	           mov r13d, dword [rsp + 0x1c] 	      1126	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_5
0x4005735	          0x4531ff	                          xor r15d, r15d	      1110	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005738	            0xebc5	                           jmp 0x40056ff	      1110	decNumber.c	FUNCTION_68	FUNCTION_18
0x400573a	    0x660f1f440000	                    nop word [rax + rax]	      1110	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005740	      0x488d54241c	                   lea rdx, [rsp + 0x1c]	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x4005745	          0x4889de	                            mov rsi, rbx	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x4005748	          0x4c89f7	                            mov rdi, r14	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x400574b	      0xe850adffff	                   call sym.decCheckMath	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x4005750	            0x85c0	                           test eax, eax	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x4005752	     0xf8428feffff	                            je 0x4005580	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x4005758	      0x448b6c241c	           mov r13d, dword [rsp + 0x1c] 	      1127	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_4	CALL_7
0x400575d	          0x4531ff	                          xor r15d, r15d	      1110	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005760	            0xeb9d	                           jmp 0x40056ff	      1110	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005762	    0x660f1f440000	                    nop word [rax + rax]	      1110	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005768	      0x488d54241c	                   lea rdx, [rsp + 0x1c]	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x400576d	          0x4889de	                            mov rsi, rbx	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x4005770	          0x4c89e7	                            mov rdi, r12	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x4005773	      0xe828adffff	                   call sym.decCheckMath	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x4005778	            0x85c0	                           test eax, eax	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x400577a	     0xf840cfeffff	                            je 0x400558c	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x4005780	      0x448b6c241c	           mov r13d, dword [rsp + 0x1c] 	      1128	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	CALL_9
0x4005785	          0x4531ff	                          xor r15d, r15d	      1110	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005788	      0xe972ffffff	                           jmp 0x40056ff	      1110	decNumber.c	FUNCTION_68	FUNCTION_18
0x400578d	           0xf1f00	                         nop dword [rax]	      1110	decNumber.c	FUNCTION_68	FUNCTION_18
0x4005790	      0x448b6c241c	           mov r13d, dword [rsp + 0x1c] 	      1141	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5	IF_6
0x4005795	        0x4183cd10	                           or r13d, 0x10	      1141	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5	IF_6
0x4005799	      0x44896c241c	            mov dword [rsp + 0x1c], r13d	      1141	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5	IF_6
0x400579e	      0xe9b0feffff	                           jmp 0x4005653	      1142	decNumber.c	FUNCTION_68	FUNCTION_18	DO_1	IF_5	IF_6
0x40057a3	      0xe800000000	                          call 0x40057a8	      1178	decNumber.c	FUNCTION_68	FUNCTION_18
decNumberScaleB	ELSE,3:DO,0:CALL,11:IF,6:functions,0:SWITCH,0:WHILE,0:FOR,0	75
0x4004930	              0x55	                                push rbp	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x4004931	              0x53	                                push rbx	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x4004932	          0x4889cd	                            mov rbp, rcx	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x4004935	          0x4889fb	                            mov rbx, rdi	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x4004938	        0x4883ec28	                           sub rsp, 0x28	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x400493c	    0x64488b042528	                mov rax, qword fs:[0x28]	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x4004945	      0x4889442418	             mov qword [rsp + 0x18], rax	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x400494a	            0x31c0	                            xor eax, eax	      2612	decNumber.c	FUNCTION_68	FUNCTION_43
0x400494c	        0xf6460830	               test byte [rsi + 8], 0x30	      2622	decNumber.c	FUNCTION_68	FUNCTION_43	IF_2	CALL_3
0x4004950	    0xc74424100000	               mov dword [rsp + 0x10], 0	      2614	decNumber.c	FUNCTION_68	FUNCTION_43
0x4004958	            0x7508	                           jne 0x4004962	      2622	decNumber.c	FUNCTION_68	FUNCTION_43	IF_2	CALL_3
0x400495a	         0xfb64208	               movzx eax, byte [rdx + 8]	      2622	decNumber.c	FUNCTION_68	FUNCTION_43	IF_2	CALL_3
0x400495e	            0xa830	                           test al, 0x30	      2622	decNumber.c	FUNCTION_68	FUNCTION_43	IF_2	CALL_3
0x4004960	            0x743e	                            je 0x40049a0	      2622	decNumber.c	FUNCTION_68	FUNCTION_43	IF_2	CALL_3
0x4004962	      0x4c8d442410	                    lea r8, [rsp + 0x10]	      2623	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_4
0x4004967	          0x4889e9	                            mov rcx, rbp	      2623	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_4
0x400496a	          0x4889df	                            mov rdi, rbx	      2623	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_4
0x400496d	      0xe87eeaffff	                 call sym.decNaNs.isra.6	      2623	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_4
0x4004972	        0x8b742410	            mov esi, dword [rsp + 0x10] 	      2643	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_11
0x4004976	            0x85f6	                           test esi, esi	      2643	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_11
0x4004978	     0xf857f000000	                           jne 0x40049fd	      2643	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_11
0x400497e	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x4004983	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x400498c	          0x4889d8	                            mov rax, rbx	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x400498f	     0xf85b0000000	                           jne 0x4004a45	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x4004995	        0x4883c428	                           add rsp, 0x28	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x4004999	              0x5b	                                 pop rbx	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x400499a	              0x5d	                                 pop rbp	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x400499b	              0xc3	                                     ret	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x400499c	         0xf1f4000	                         nop dword [rax]	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
0x40049a0	            0xa840	                           test al, 0x40	      2625	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_1	IF_3	CALL_5
0x40049a2	            0x754c	                           jne 0x40049f0	      2625	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_1	IF_3	CALL_5
0x40049a4	          0x8b4204	                mov eax, dword [rdx + 4]	      2625	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_1	IF_3	CALL_5
0x40049a7	            0x85c0	                           test eax, eax	      2625	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_1	IF_3	CALL_5
0x40049a9	            0x7545	                           jne 0x40049f0	      2625	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_1	IF_3	CALL_5
0x40049ab	          0x4889d7	                            mov rdi, rdx	      2629	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	CALL_6
0x40049ae	      0x4889742408	                mov qword [rsp + 8], rsi	      2629	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	CALL_6
0x40049b3	      0xe878bbffff	                      call sym.decGetInt	      2629	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	CALL_6
0x40049b8	          0x4189c2	                           mov r10d, eax	      2629	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	CALL_6
0x40049bb	    0x8d80feffff7f	             lea eax, [rax + 0x7ffffffe]	      2631	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4
0x40049c1	          0x83f801	                              cmp eax, 1	      2631	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4
0x40049c4	            0x762a	                           jbe 0x40049f0	      2631	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4
0x40049c6	    0x4181fa000000	                    cmp r10d, 0x80000000	      2631	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4
0x40049cd	            0x7421	                            je 0x40049f0	      2631	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4
0x40049cf	          0x4489d0	                           mov eax, r10d	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40049d2	      0x488b742408	                mov rsi, qword [rsp + 8]	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40049d7	          0xc1f81f	                           sar eax, 0x1f	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40049da	            0x89c2	                            mov edx, eax	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40049dc	          0x4431d2	                           xor edx, r10d	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40049df	            0x29c2	                            sub edx, eax	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40049e1	          0x8b4504	                mov eax, dword [rbp + 4]	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40049e4	           0x34500	                    add eax, dword [rbp]	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40049e7	             0x1c0	                            add eax, eax	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40049e9	            0x39c2	                            cmp edx, eax	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40049eb	            0x7e20	                           jle 0x4004a0d	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40049ed	           0xf1f00	                         nop dword [rax]	      2632	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	IF_4	CALL_7
0x40049f0	    0xc74424108000	           mov dword [rsp + 0x10], 0x80 	      2626	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_1	IF_3
0x40049f8	      0xbe80000000	                           mov esi, 0x80	      2643	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_11
0x40049fd	          0x4889ea	                            mov rdx, rbp	      2643	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_11
0x4004a00	          0x4889df	                            mov rdi, rbx	      2643	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_11
0x4004a03	      0xe8c8bdffff	                      call sym.decStatus	      2643	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_11
0x4004a08	      0xe971ffffff	                           jmp 0x400497e	      2643	decNumber.c	FUNCTION_68	FUNCTION_43	CALL_11
0x4004a0d	          0x4889df	                            mov rdi, rbx	      2635	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	CALL_8
0x4004a10	      0xe800000000	                          call 0x4004a15	      2635	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	CALL_8
0x4004a15	        0xf6430840	               test byte [rbx + 8], 0x40	      2636	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_9
0x4004a19	     0xf8553ffffff	                           jne 0x4004972	      2636	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_9
0x4004a1f	        0x44015304	               add dword [rbx + 4], r10d	      2637	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5
0x4004a23	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      2639	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_10
0x4004a28	      0x488d542414	                   lea rdx, [rsp + 0x14]	      2639	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_10
0x4004a2d	          0x4889ee	                            mov rsi, rbp	      2639	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_10
0x4004a30	          0x4889df	                            mov rdi, rbx	      2639	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_10
0x4004a33	    0xc74424140000	               mov dword [rsp + 0x14], 0	      2638	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5
0x4004a3b	      0xe820d4ffff	                    call sym.decFinalize	      2639	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_10
0x4004a40	      0xe92dffffff	                           jmp 0x4004972	      2639	decNumber.c	FUNCTION_68	FUNCTION_43	ELSE_2	ELSE_3	IF_5	CALL_10
0x4004a45	      0xe800000000	                          call 0x4004a4a	      2645	decNumber.c	FUNCTION_68	FUNCTION_43
decNumberNormalize	ELSE,0:DO,0:CALL,1:IF,0:functions,0:SWITCH,0:WHILE,0:FOR,0	1
0x4003600	      0xe92bffffff	                 jmp sym.decNumberReduce	      2309	decNumber.c	FUNCTION_68	FUNCTION_36	CALL_1
decNumberSubtract	ELSE,0:DO,0:CALL,3:IF,1:functions,0:SWITCH,0:WHILE,0:FOR,0	27
0x40054c0	              0x55	                                push rbp	      3140	decNumber.c	FUNCTION_68	FUNCTION_46
0x40054c1	              0x53	                                push rbx	      3140	decNumber.c	FUNCTION_68	FUNCTION_46
0x40054c2	    0x41b880000000	                           mov r8d, 0x80	      3143	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_1
0x40054c8	          0x4889fb	                            mov rbx, rdi	      3140	decNumber.c	FUNCTION_68	FUNCTION_46
0x40054cb	          0x4889cd	                            mov rbp, rcx	      3140	decNumber.c	FUNCTION_68	FUNCTION_46
0x40054ce	        0x4883ec18	                           sub rsp, 0x18	      3140	decNumber.c	FUNCTION_68	FUNCTION_46
0x40054d2	      0x4c8d4c2404	                       lea r9, [rsp + 4]	      3143	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_1
0x40054d7	    0xc74424040000	                  mov dword [rsp + 4], 0	      3141	decNumber.c	FUNCTION_68	FUNCTION_46
0x40054df	    0x64488b042528	                mov rax, qword fs:[0x28]	      3140	decNumber.c	FUNCTION_68	FUNCTION_46
0x40054e8	      0x4889442408	                mov qword [rsp + 8], rax	      3140	decNumber.c	FUNCTION_68	FUNCTION_46
0x40054ed	            0x31c0	                            xor eax, eax	      3140	decNumber.c	FUNCTION_68	FUNCTION_46
0x40054ef	      0xe8fcf6ffff	                       call sym.decAddOp	      3143	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_1
0x40054f4	        0x8b742404	                mov esi, dword [rsp + 4]	      3144	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_2
0x40054f8	            0x85f6	                           test esi, esi	      3144	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_2
0x40054fa	            0x740b	                            je 0x4005507	      3144	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_2
0x40054fc	          0x4889ea	                            mov rdx, rbp	      3144	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_2
0x40054ff	          0x4889df	                            mov rdi, rbx	      3144	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_2
0x4005502	      0xe8c9b2ffff	                      call sym.decStatus	      3144	decNumber.c	FUNCTION_68	FUNCTION_46	CALL_2
0x4005507	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3149	decNumber.c	FUNCTION_68	FUNCTION_46
0x400550c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3149	decNumber.c	FUNCTION_68	FUNCTION_46
0x4005515	          0x4889d8	                            mov rax, rbx	      3149	decNumber.c	FUNCTION_68	FUNCTION_46
0x4005518	            0x7507	                           jne 0x4005521	      3149	decNumber.c	FUNCTION_68	FUNCTION_46
0x400551a	        0x4883c418	                           add rsp, 0x18	      3149	decNumber.c	FUNCTION_68	FUNCTION_46
0x400551e	              0x5b	                                 pop rbx	      3149	decNumber.c	FUNCTION_68	FUNCTION_46
0x400551f	              0x5d	                                 pop rbp	      3149	decNumber.c	FUNCTION_68	FUNCTION_46
0x4005520	              0xc3	                                     ret	      3149	decNumber.c	FUNCTION_68	FUNCTION_46
0x4005521	      0xe800000000	                          call 0x4005526	      3149	decNumber.c	FUNCTION_68	FUNCTION_46
decNumberCompareSignal	ELSE,0:DO,0:CALL,2:IF,1:functions,0:SWITCH,0:WHILE,0:FOR,0	27
0x4003ae0	              0x55	                                push rbp	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x4003ae1	              0x53	                                push rbx	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x4003ae2	    0x41b806000000	                              mov r8d, 6	       887	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_1
0x4003ae8	          0x4889fb	                            mov rbx, rdi	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x4003aeb	          0x4889cd	                            mov rbp, rcx	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x4003aee	        0x4883ec18	                           sub rsp, 0x18	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x4003af2	      0x4c8d4c2404	                       lea r9, [rsp + 4]	       887	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_1
0x4003af7	    0xc74424040000	                  mov dword [rsp + 4], 0	       886	decNumber.c	FUNCTION_68	FUNCTION_12
0x4003aff	    0x64488b042528	                mov rax, qword fs:[0x28]	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x4003b08	      0x4889442408	                mov qword [rsp + 8], rax	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x4003b0d	            0x31c0	                            xor eax, eax	       885	decNumber.c	FUNCTION_68	FUNCTION_12
0x4003b0f	      0xe8fcfaffff	                   call sym.decCompareOp	       887	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_1
0x4003b14	        0x8b742404	                mov esi, dword [rsp + 4]	       888	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_2
0x4003b18	            0x85f6	                           test esi, esi	       888	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_2
0x4003b1a	            0x740b	                            je 0x4003b27	       888	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_2
0x4003b1c	          0x4889ea	                            mov rdx, rbp	       888	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_2
0x4003b1f	          0x4889df	                            mov rdi, rbx	       888	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_2
0x4003b22	      0xe8a9ccffff	                      call sym.decStatus	       888	decNumber.c	FUNCTION_68	FUNCTION_12	CALL_2
0x4003b27	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       890	decNumber.c	FUNCTION_68	FUNCTION_12
0x4003b2c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       890	decNumber.c	FUNCTION_68	FUNCTION_12
0x4003b35	          0x4889d8	                            mov rax, rbx	       890	decNumber.c	FUNCTION_68	FUNCTION_12
0x4003b38	            0x7507	                           jne 0x4003b41	       890	decNumber.c	FUNCTION_68	FUNCTION_12
0x4003b3a	        0x4883c418	                           add rsp, 0x18	       890	decNumber.c	FUNCTION_68	FUNCTION_12
0x4003b3e	              0x5b	                                 pop rbx	       890	decNumber.c	FUNCTION_68	FUNCTION_12
0x4003b3f	              0x5d	                                 pop rbp	       890	decNumber.c	FUNCTION_68	FUNCTION_12
0x4003b40	              0xc3	                                     ret	       890	decNumber.c	FUNCTION_68	FUNCTION_12
0x4003b41	      0xe800000000	                          call 0x4003b46	       890	decNumber.c	FUNCTION_68	FUNCTION_12
decNumberToIntegralValue	ELSE,0:DO,0:CALL,1:IF,0:functions,0:SWITCH,0:WHILE,0:FOR,0	31
0x4009c10	              0x55	                                push rbp	      3203	decNumber.c	FUNCTION_68	FUNCTION_48
0x4009c11	              0x53	                                push rbx	      3203	decNumber.c	FUNCTION_68	FUNCTION_48
0x4009c12	          0x4889d3	                            mov rbx, rdx	      3203	decNumber.c	FUNCTION_68	FUNCTION_48
0x4009c15	          0x4889fd	                            mov rbp, rdi	      3203	decNumber.c	FUNCTION_68	FUNCTION_48
0x4009c18	        0x4883ec38	                           sub rsp, 0x38	      3203	decNumber.c	FUNCTION_68	FUNCTION_48
0x4009c1c	    0x64488b042528	                mov rax, qword fs:[0x28]	      3203	decNumber.c	FUNCTION_68	FUNCTION_48
0x4009c25	      0x4889442428	             mov qword [rsp + 0x28], rax	      3203	decNumber.c	FUNCTION_68	FUNCTION_48
0x4009c2a	            0x31c0	                            xor eax, eax	      3203	decNumber.c	FUNCTION_68	FUNCTION_48
0x4009c2c	          0x488b02	                    mov rax, qword [rdx]	      3204	decNumber.c	FUNCTION_68	FUNCTION_48
0x4009c2f	        0x48890424	                    mov qword [rsp], rax	      3204	decNumber.c	FUNCTION_68	FUNCTION_48
0x4009c33	        0x488b4208	                mov rax, qword [rdx + 8]	      3204	decNumber.c	FUNCTION_68	FUNCTION_48
0x4009c37	      0x4889442408	                mov qword [rsp + 8], rax	      3204	decNumber.c	FUNCTION_68	FUNCTION_48
0x4009c3c	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      3204	decNumber.c	FUNCTION_68	FUNCTION_48
0x4009c40	      0x4889442410	             mov qword [rsp + 0x10], rax	      3204	decNumber.c	FUNCTION_68	FUNCTION_48
0x4009c45	          0x8b4218	            mov eax, dword [rdx + 0x18] 	      3204	decNumber.c	FUNCTION_68	FUNCTION_48
0x4009c48	          0x4889e2	                            mov rdx, rsp	      3206	decNumber.c	FUNCTION_68	FUNCTION_48	CALL_1
0x4009c4b	    0xc74424100000	               mov dword [rsp + 0x10], 0	      3205	decNumber.c	FUNCTION_68	FUNCTION_48
0x4009c53	        0x89442418	             mov dword [rsp + 0x18], eax	      3204	decNumber.c	FUNCTION_68	FUNCTION_48
0x4009c57	      0xe800000000	                          call 0x4009c5c	      3206	decNumber.c	FUNCTION_68	FUNCTION_48	CALL_1
0x4009c5c	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      3209	decNumber.c	FUNCTION_68	FUNCTION_48
0x4009c60	      0x2580000000	                           and eax, 0x80	      3209	decNumber.c	FUNCTION_68	FUNCTION_48
0x4009c65	           0x94314	              or dword [rbx + 0x14], eax	      3209	decNumber.c	FUNCTION_68	FUNCTION_48
0x4009c68	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      3211	decNumber.c	FUNCTION_68	FUNCTION_48
0x4009c6d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3211	decNumber.c	FUNCTION_68	FUNCTION_48
0x4009c76	            0x750a	                           jne 0x4009c82	      3211	decNumber.c	FUNCTION_68	FUNCTION_48
0x4009c78	        0x4883c438	                           add rsp, 0x38	      3211	decNumber.c	FUNCTION_68	FUNCTION_48
0x4009c7c	          0x4889e8	                            mov rax, rbp	      3211	decNumber.c	FUNCTION_68	FUNCTION_48
0x4009c7f	              0x5b	                                 pop rbx	      3211	decNumber.c	FUNCTION_68	FUNCTION_48
0x4009c80	              0x5d	                                 pop rbp	      3211	decNumber.c	FUNCTION_68	FUNCTION_48
0x4009c81	              0xc3	                                     ret	      3211	decNumber.c	FUNCTION_68	FUNCTION_48
0x4009c82	      0xe800000000	                          call 0x4009c87	      3211	decNumber.c	FUNCTION_68	FUNCTION_48
decNumberXor	ELSE,2:DO,0:CALL,12:IF,8:functions,0:SWITCH,0:WHILE,0:FOR,2	172
0x4003000	            0x4157	                                push r15	      3229	decNumber.c	FUNCTION_68	FUNCTION_49
0x4003002	            0x4156	                                push r14	      3229	decNumber.c	FUNCTION_68	FUNCTION_49
0x4003004	            0x4155	                                push r13	      3229	decNumber.c	FUNCTION_68	FUNCTION_49
0x4003006	            0x4154	                                push r12	      3229	decNumber.c	FUNCTION_68	FUNCTION_49
0x4003008	              0x55	                                push rbp	      3229	decNumber.c	FUNCTION_68	FUNCTION_49
0x4003009	              0x53	                                push rbx	      3229	decNumber.c	FUNCTION_68	FUNCTION_49
0x400300a	          0x4889fb	                            mov rbx, rdi	      3229	decNumber.c	FUNCTION_68	FUNCTION_49
0x400300d	        0x4883ec18	                           sub rsp, 0x18	      3229	decNumber.c	FUNCTION_68	FUNCTION_49
0x4003011	          0x8b7e04	                mov edi, dword [rsi + 4]	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x4003014	            0x85ff	                           test edi, edi	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x4003016	     0xf8584010000	                           jne 0x40031a0	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x400301c	         0xfb64608	               movzx eax, byte [rsi + 8]	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x4003020	            0xa870	                           test al, 0x70	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x4003022	     0xf8578010000	                           jne 0x40031a0	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x4003028	            0x84c0	                             test al, al	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x400302a	     0xf8870010000	                            js 0x40031a0	      3238	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_3
0x4003030	        0x448b4204	                mov r8d, dword [rdx + 4]	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x4003034	          0x4989d1	                             mov r9, rdx	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x4003037	          0x4585c0	                           test r8d, r8d	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x400303a	     0xf8560010000	                           jne 0x40031a0	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x4003040	         0xfb64208	               movzx eax, byte [rdx + 8]	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x4003044	            0xa870	                           test al, 0x70	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x4003046	     0xf8554010000	                           jne 0x40031a0	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x400304c	            0x84c0	                             test al, al	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x400304e	     0xf884c010000	                            js 0x40031a0	      3239	decNumber.c	FUNCTION_68	FUNCTION_49	IF_2	CALL_5
0x4003054	          0x486306	                 movsxd rax, dword [rsi]	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4003057	        0x4c8d5e0a	                    lea r11, [rsi + 0xa]	      3244	decNumber.c	FUNCTION_68	FUNCTION_49
0x400305b	        0x488d6a0a	                    lea rbp, [rdx + 0xa]	      3245	decNumber.c	FUNCTION_68	FUNCTION_49
0x400305f	        0x488d7b0a	                    lea rdi, [rbx + 0xa]	      3246	decNumber.c	FUNCTION_68	FUNCTION_49
0x4003063	          0x83f831	                           cmp eax, 0x31	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4003066	     0xf8fe4010000	                            jg 0x4003250	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x400306c	     0xfb680000000	                   movzx eax, byte [rax]	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4003073	      0x4c8d6400fe	                lea r12, [rax + rax - 2]	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4003078	          0x496301	                  movsxd rax, dword [r9]	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x400307b	          0x4d01dc	                            add r12, r11	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x400307e	          0x83f831	                           cmp eax, 0x31	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4003081	     0xf8fa9010000	                            jg 0x4003230	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4003087	     0xfb680000000	                   movzx eax, byte [rax]	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x400308e	      0x4c8d6c00fe	                lea r13, [rax + rax - 2]	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4003093	            0x8b31	                    mov esi, dword [rcx]	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4003095	          0x4901ed	                            add r13, rbp	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4003098	          0x83fe31	                           cmp esi, 0x31	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x400309b	     0xf8f5f010000	                            jg 0x4003200	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x40030a1	          0x4863c6	                         movsxd rax, esi	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x40030a4	     0xfb690000000	                   movzx edx, byte [rax]	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x40030ab	      0x4c8d7c57fe	              lea r15, [rdi + rdx*2 - 2]	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x40030b0	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x40030b4	            0x29c6	                            sub esi, eax	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x40030b6	          0x4c39ff	                            cmp rdi, r15	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x40030b9	            0x89f0	                            mov eax, esi	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x40030bb	     0xf87c0000000	                            ja 0x4003181	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x40030c1	          0x83e801	                              sub eax, 1	      3271	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x40030c4	          0x4889fe	                            mov rsi, rdi	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x40030c7	        0x8944240c	              mov dword [rsp + 0xc], eax	      3271	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x40030cb	       0xf1f440000	                   nop dword [rax + rax]	      3271	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x40030d0	          0x4d39dc	                            cmp r12, r11	      3253	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	IF_3
0x40030d3	     0xf8207010000	                            jb 0x40031e0	      3253	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	IF_3
0x40030d9	            0x31c0	                            xor eax, eax	      3255	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	IF_4
0x40030db	          0x4939ed	                            cmp r13, rbp	      3255	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	IF_4
0x40030de	        0x450fb70b	                   movzx r9d, word [r11]	      3254	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_1
0x40030e2	            0x7204	                            jb 0x40030e8	      3255	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	IF_4
0x40030e4	         0xfb74500	                   movzx eax, word [rbp]	      3256	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2
0x40030e8	            0x31d2	                            xor edx, edx	      3257	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2
0x40030ea	          0x4531d2	                          xor r10d, r10d	      3257	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2
0x40030ed	          0x668916	                      mov word [rsi], dx	      3257	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2
0x40030f0	            0x89c2	                            mov edx, eax	      3258	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5
0x40030f2	        0x664409ca	                              or dx, r9w	      3258	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5
0x40030f6	            0x746b	                            je 0x4003163	      3258	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5
0x40030f8	            0x89c2	                            mov edx, eax	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x40030fa	          0x4431ca	                            xor edx, r9d	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x40030fd	          0x83e201	                              and edx, 1	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4003100	            0x740b	                            je 0x400310d	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x4003102	    0x428b14950000	                  mov edx, dword [r10*4]	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x400310a	          0x660116	                      add word [rsi], dx	      3262	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_6
0x400310d	        0x410fb7d1	                          movzx edx, r9w	      3263	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4003111	    0x69d2cdcc0000	                   imul edx, edx, 0xcccd	      3263	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4003117	          0xc1ea13	                           shr edx, 0x13	      3263	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x400311a	          0x4189d0	                            mov r8d, edx	      3263	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x400311d	        0x438d1480	                    lea edx, [r8 + r8*4]	      3263	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4003121	             0x1d2	                            add edx, edx	      3263	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4003123	          0x4129d1	                            sub r9d, edx	      3263	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4003126	          0x4489ca	                            mov edx, r9d	      3263	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4003129	          0x4589c1	                            mov r9d, r8d	      3264	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x400312c	        0x440fb7c0	                           movzx r8d, ax	      3264	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4003130	    0x4569c0cdcc00	                   imul r8d, r8d, 0xcccd	      3264	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4003137	        0x41c1e813	                           shr r8d, 0x13	      3264	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x400313b	        0x478d3480	                   lea r14d, [r8 + r8*4]	      3264	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x400313f	          0x4501f6	                          add r14d, r14d	      3264	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4003142	          0x4429f0	                           sub eax, r14d	      3264	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4003145	             0x9c2	                             or edx, eax	      3264	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4003147	          0x4489c0	                            mov eax, r8d	      3266	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x400314a	        0x6683fa01	                               cmp dx, 1	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x400314e	            0x7750	                            ja 0x40031a0	      3267	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_7
0x4003150	          0x4939f7	                            cmp r15, rsi	      3271	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4003153	     0xf8417010000	                            je 0x4003270	      3271	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4003159	        0x4983c201	                              add r10, 1	      3271	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x400315d	        0x4983fa03	                              cmp r10, 3	      3261	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4003161	            0x7595	                           jne 0x40030f8	      3261	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2
0x4003163	        0x4883c602	                              add rsi, 2	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x4003167	        0x4983c302	                              add r11, 2	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x400316b	        0x4883c502	                              add rbp, 2	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x400316f	          0x4c39fe	                            cmp rsi, r15	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x4003172	     0xf8658ffffff	                           jbe 0x40030d0	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x4003178	          0x4829fe	                            sub rsi, rdi	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x400317b	          0x48d1ee	                              shr rsi, 1	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x400317e	          0x4989f0	                             mov r8, rsi	      3251	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1
0x4003181	          0x4489c6	                            mov esi, r8d	      3276	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_12
0x4003184	      0xe857d5ffff	                   call sym.decGetDigits	      3276	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_12
0x4003189	    0xc74304000000	                  mov dword [rbx + 4], 0	      3277	decNumber.c	FUNCTION_68	FUNCTION_49
0x4003190	            0x8903	                    mov dword [rbx], eax	      3276	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_12
0x4003192	        0xc6430800	                   mov byte [rbx + 8], 0	      3278	decNumber.c	FUNCTION_68	FUNCTION_49
0x4003196	            0xeb2c	                           jmp 0x40031c4	      3279	decNumber.c	FUNCTION_68	FUNCTION_49
0x4003198	     0xf1f84000000	                   nop dword [rax + rax]	      3279	decNumber.c	FUNCTION_68	FUNCTION_49
0x40031a0	            0x31f6	                            xor esi, esi	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40031a2	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40031a9	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40031af	        0x6689730a	                mov word [rbx + 0xa], si	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40031b3	        0xc6430820	                mov byte [rbx + 8], 0x20	      7741	decNumber.c	FUNCTION_24	IF_1	ELSE_1
0x40031b7	      0xbe80000000	                           mov esi, 0x80	      7744	decNumber.c	FUNCTION_24	CALL_2
0x40031bc	          0x4889cf	                            mov rdi, rcx	      7744	decNumber.c	FUNCTION_24	CALL_2
0x40031bf	      0xe800000000	                          call 0x40031c4	      7744	decNumber.c	FUNCTION_24	CALL_2
0x40031c4	        0x4883c418	                           add rsp, 0x18	      3280	decNumber.c	FUNCTION_68	FUNCTION_49
0x40031c8	          0x4889d8	                            mov rax, rbx	      3280	decNumber.c	FUNCTION_68	FUNCTION_49
0x40031cb	              0x5b	                                 pop rbx	      3280	decNumber.c	FUNCTION_68	FUNCTION_49
0x40031cc	              0x5d	                                 pop rbp	      3280	decNumber.c	FUNCTION_68	FUNCTION_49
0x40031cd	            0x415c	                                 pop r12	      3280	decNumber.c	FUNCTION_68	FUNCTION_49
0x40031cf	            0x415d	                                 pop r13	      3280	decNumber.c	FUNCTION_68	FUNCTION_49
0x40031d1	            0x415e	                                 pop r14	      3280	decNumber.c	FUNCTION_68	FUNCTION_49
0x40031d3	            0x415f	                                 pop r15	      3280	decNumber.c	FUNCTION_68	FUNCTION_49
0x40031d5	              0xc3	                                     ret	      3280	decNumber.c	FUNCTION_68	FUNCTION_49
0x40031d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3280	decNumber.c	FUNCTION_68	FUNCTION_49
0x40031e0	          0x4531c9	                            xor r9d, r9d	      3253	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	IF_3
0x40031e3	          0x4939ed	                            cmp r13, rbp	      3255	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	IF_4
0x40031e6	     0xf83f8feffff	                           jae 0x40030e4	      3255	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	IF_4
0x40031ec	            0x31c0	                            xor eax, eax	      3257	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2
0x40031ee	          0x668906	                      mov word [rsi], ax	      3257	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2
0x40031f1	      0xe96dffffff	                           jmp 0x4003163	      3257	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2
0x40031f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3257	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2
0x4003200	        0x448d4e02	                      lea r9d, [rsi + 2]	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4003204	      0xba56555555	                     mov edx, 0x55555556	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4003209	          0x4489c8	                            mov eax, r9d	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x400320c	        0x41c1f91f	                           sar r9d, 0x1f	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4003210	            0xf7ea	                                imul edx	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4003212	          0x4429ca	                            sub edx, r9d	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4003215	          0x4863c2	                         movsxd rax, edx	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x4003218	      0x4c8d7c47fe	              lea r15, [rdi + rax*2 - 2]	      3249	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_9
0x400321d	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4003221	      0xe98efeffff	                           jmp 0x40030b4	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4003226	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3250	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_10
0x4003230	          0x8d7002	                      lea esi, [rax + 2]	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4003233	      0xba56555555	                     mov edx, 0x55555556	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4003238	            0x89f0	                            mov eax, esi	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x400323a	            0xf7ea	                                imul edx	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x400323c	            0x89f0	                            mov eax, esi	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x400323e	          0xc1f81f	                           sar eax, 0x1f	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4003241	            0x29c2	                            sub edx, eax	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4003243	          0x4863d2	                         movsxd rdx, edx	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4003246	      0x4c8d6c12fe	                lea r13, [rdx + rdx - 2]	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x400324b	      0xe943feffff	                           jmp 0x4003093	      3248	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_8
0x4003250	          0x8d7002	                      lea esi, [rax + 2]	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4003253	      0xba56555555	                     mov edx, 0x55555556	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4003258	            0x89f0	                            mov eax, esi	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x400325a	            0xf7ea	                                imul edx	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x400325c	            0x89f0	                            mov eax, esi	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x400325e	          0xc1f81f	                           sar eax, 0x1f	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4003261	            0x29c2	                            sub edx, eax	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4003263	          0x4863d2	                         movsxd rdx, edx	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4003266	      0x4c8d6412fe	                lea r12, [rdx + rdx - 2]	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x400326b	      0xe908feffff	                           jmp 0x4003078	      3247	decNumber.c	FUNCTION_68	FUNCTION_49	CALL_7
0x4003270	      0x443954240c	            cmp dword [rsp + 0xc], r10d 	      3271	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x4003275	     0xf85defeffff	                           jne 0x4003159	      3271	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
0x400327b	      0xe9e3feffff	                           jmp 0x4003163	      3271	decNumber.c	FUNCTION_68	FUNCTION_49	FOR_1	ELSE_2	IF_5	FOR_2	IF_8
decNumberGetBCD	ELSE,0:DO,0:CALL,0:IF,1:functions,0:SWITCH,0:WHILE,0:FOR,2	39
0x4009ce0	          0x486307	                 movsxd rax, dword [rdi]	      3452	decNumber.c	FUNCTION_68	FUNCTION_56
0x4009ce3	        0x4c8d4f0a	                     lea r9, [rdi + 0xa]	      3453	decNumber.c	FUNCTION_68	FUNCTION_56
0x4009ce7	         0xfb77f0a	            movzx edi, word [rdi + 0xa] 	      3458	decNumber.c	FUNCTION_68	FUNCTION_56
0x4009ceb	      0x4c8d4406ff	                 lea r8, [rsi + rax - 1]	      3452	decNumber.c	FUNCTION_68	FUNCTION_56
0x4009cf0	          0x4c39c6	                             cmp rsi, r8	      3460	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4009cf3	            0x7764	                            ja 0x4009d59	      3460	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4009cf5	            0x89f8	                            mov eax, edi	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4009cf7	    0x41bacdcccccc	                    mov r10d, 0xcccccccd	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4009cfd	        0x4c8d5eff	                      lea r11, [rsi - 1]	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4009d01	          0x41f7e2	                                mul r10d	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4009d04	          0xc1ea03	                              shr edx, 3	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4009d07	          0x8d0492	                  lea eax, [rdx + rdx*4]	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4009d0a	            0x89d1	                            mov ecx, edx	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4009d0c	             0x1c0	                            add eax, eax	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4009d0e	            0x29c7	                            sub edi, eax	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4009d10	          0x418838	                      mov byte [r8], dil	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4009d13	      0xbf02000000	                              mov edi, 2	      3463	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4009d18	     0xf1f84000000	                   nop dword [rax + rax]	      3463	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4009d20	        0x4983e801	                               sub r8, 1	      3460	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4009d24	          0x4d39d8	                             cmp r8, r11	      3460	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4009d27	            0x7430	                            je 0x4009d59	      3460	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4009d29	            0x89c8	                            mov eax, ecx	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4009d2b	          0x41f7e2	                                mul r10d	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4009d2e	          0xc1ea03	                              shr edx, 3	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4009d31	          0x8d0492	                  lea eax, [rdx + rdx*4]	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4009d34	             0x1c0	                            add eax, eax	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4009d36	            0x29c1	                            sub ecx, eax	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4009d38	          0x83ef01	                              sub edi, 1	      3464	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2	IF_1
0x4009d3b	          0x418808	                       mov byte [r8], cl	      3461	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4009d3e	            0x89d1	                            mov ecx, edx	      3462	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4009d40	            0x75de	                           jne 0x4009d20	      3464	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2	IF_1
0x4009d42	        0x4983e801	                               sub r8, 1	      3460	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4009d46	      0x410fb74902	                movzx ecx, word [r9 + 2]	      3466	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4009d4b	        0x4983c102	                               add r9, 2	      3465	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4009d4f	          0x4d39d8	                             cmp r8, r11	      3460	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4009d52	      0xbf03000000	                              mov edi, 3	      3467	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4009d57	            0x75d0	                           jne 0x4009d29	      3460	decNumber.c	FUNCTION_68	FUNCTION_56	FOR_2
0x4009d59	          0x4889f0	                            mov rax, rsi	      3471	decNumber.c	FUNCTION_68	FUNCTION_56
0x4009d5c	              0xc3	                                     ret	      3471	decNumber.c	FUNCTION_68	FUNCTION_56
decNumberNextPlus	ELSE,0:DO,0:CALL,5:IF,3:functions,0:SWITCH,0:WHILE,0:FOR,0	75
0x4005970	              0x55	                                push rbp	      1698	decNumber.c	FUNCTION_68	FUNCTION_29
0x4005971	              0x53	                                push rbx	      1698	decNumber.c	FUNCTION_68	FUNCTION_29
0x4005972	          0x4889fd	                            mov rbp, rdi	      1698	decNumber.c	FUNCTION_68	FUNCTION_29
0x4005975	          0x4889d3	                            mov rbx, rdx	      1698	decNumber.c	FUNCTION_68	FUNCTION_29
0x4005978	        0x4883ec58	                           sub rsp, 0x58	      1698	decNumber.c	FUNCTION_68	FUNCTION_29
0x400597c	    0x64488b042528	                mov rax, qword fs:[0x28]	      1698	decNumber.c	FUNCTION_68	FUNCTION_29
0x4005985	      0x4889442448	             mov qword [rsp + 0x48], rax	      1698	decNumber.c	FUNCTION_68	FUNCTION_29
0x400598a	            0x31c0	                            xor eax, eax	      1698	decNumber.c	FUNCTION_68	FUNCTION_29
0x400598c	          0x488b02	                    mov rax, qword [rdx]	      1700	decNumber.c	FUNCTION_68	FUNCTION_29
0x400598f	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1701	decNumber.c	FUNCTION_68	FUNCTION_29
0x4005997	      0x4889442410	             mov qword [rsp + 0x10], rax	      1700	decNumber.c	FUNCTION_68	FUNCTION_29
0x400599c	        0x488b4208	                mov rax, qword [rdx + 8]	      1700	decNumber.c	FUNCTION_68	FUNCTION_29
0x40059a0	      0x4889442418	             mov qword [rsp + 0x18], rax	      1700	decNumber.c	FUNCTION_68	FUNCTION_29
0x40059a5	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      1700	decNumber.c	FUNCTION_68	FUNCTION_29
0x40059a9	      0x4889442420	             mov qword [rsp + 0x20], rax	      1700	decNumber.c	FUNCTION_68	FUNCTION_29
0x40059ae	          0x8b4218	            mov eax, dword [rdx + 0x18] 	      1700	decNumber.c	FUNCTION_68	FUNCTION_29
0x40059b1	        0x89442428	             mov dword [rsp + 0x28], eax	      1700	decNumber.c	FUNCTION_68	FUNCTION_29
0x40059b5	         0xfb64608	               movzx eax, byte [rsi + 8]	      1707	decNumber.c	FUNCTION_68	FUNCTION_29	IF_2
0x40059b9	          0x83e0c0	                     and eax, 0xffffffc0	      1707	decNumber.c	FUNCTION_68	FUNCTION_29	IF_2
0x40059bc	            0x3cc0	                            cmp al, 0xc0	      1707	decNumber.c	FUNCTION_68	FUNCTION_29	IF_2
0x40059be	     0xf847c000000	                            je 0x4005a40	      1707	decNumber.c	FUNCTION_68	FUNCTION_29	IF_2
0x40059c4	      0x4c8d4c240c	                     lea r9, [rsp + 0xc]	      1717	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_4
0x40059c9	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      1717	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_4
0x40059ce	      0x488d542430	                   lea rdx, [rsp + 0x30]	      1717	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_4
0x40059d3	      0xb801000000	                              mov eax, 1	      1714	decNumber.c	FUNCTION_68	FUNCTION_29
0x40059d8	          0x4531c0	                            xor r8d, r8d	      1717	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_4
0x40059db	      0xc644243800	                mov byte [rsp + 0x38], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40059e0	    0xc74424300100	               mov dword [rsp + 0x30], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40059e8	      0x668944243a	               mov word [rsp + 0x3a], ax	      1714	decNumber.c	FUNCTION_68	FUNCTION_29
0x40059ed	    0xc74424340036	     mov dword [rsp + 0x34], 0xc4653600 	      1715	decNumber.c	FUNCTION_68	FUNCTION_29
0x40059f5	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      1716	decNumber.c	FUNCTION_68	FUNCTION_29
0x40059fd	      0xe8eef1ffff	                       call sym.decAddOp	      1717	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_4
0x4005a02	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      1718	decNumber.c	FUNCTION_68	FUNCTION_29
0x4005a06	    0x81e680000040	                     and esi, 0x40000080	      1718	decNumber.c	FUNCTION_68	FUNCTION_29
0x4005a0c	            0x85f6	                           test esi, esi	      1719	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_5
0x4005a0e	        0x8974240c	              mov dword [rsp + 0xc], esi	      1718	decNumber.c	FUNCTION_68	FUNCTION_29
0x4005a12	            0x751c	                           jne 0x4005a30	      1719	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_5
0x4005a14	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      1721	decNumber.c	FUNCTION_68	FUNCTION_29
0x4005a19	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1721	decNumber.c	FUNCTION_68	FUNCTION_29
0x4005a22	          0x4889e8	                            mov rax, rbp	      1721	decNumber.c	FUNCTION_68	FUNCTION_29
0x4005a25	            0x7562	                           jne 0x4005a89	      1721	decNumber.c	FUNCTION_68	FUNCTION_29
0x4005a27	        0x4883c458	                           add rsp, 0x58	      1721	decNumber.c	FUNCTION_68	FUNCTION_29
0x4005a2b	              0x5b	                                 pop rbx	      1721	decNumber.c	FUNCTION_68	FUNCTION_29
0x4005a2c	              0x5d	                                 pop rbp	      1721	decNumber.c	FUNCTION_68	FUNCTION_29
0x4005a2d	              0xc3	                                     ret	      1721	decNumber.c	FUNCTION_68	FUNCTION_29
0x4005a2e	            0x6690	                                     nop	      1721	decNumber.c	FUNCTION_68	FUNCTION_29
0x4005a30	          0x4889da	                            mov rdx, rbx	      1719	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_5
0x4005a33	          0x4889ef	                            mov rdi, rbp	      1719	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_5
0x4005a36	      0xe895adffff	                      call sym.decStatus	      1719	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_5
0x4005a3b	            0xebd7	                           jmp 0x4005a14	      1719	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_5
0x4005a3d	           0xf1f00	                         nop dword [rax]	      1719	decNumber.c	FUNCTION_68	FUNCTION_29	CALL_5
0x4005a40	            0x8b02	                    mov eax, dword [rdx]	      7390	decNumber.c	ELSE_1	FUNCTION_17
0x4005a42	        0x488d570a	                    lea rdx, [rdi + 0xa]	      7393	decNumber.c	ELSE_1	FUNCTION_17	FOR_1
0x4005a46	          0x83f803	                              cmp eax, 3	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x4005a49	            0x8907	                    mov dword [rdi], eax	      7391	decNumber.c	ELSE_1	FUNCTION_17
0x4005a4b	            0x7e18	                           jle 0x4005a65	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x4005a4d	           0xf1f00	                         nop dword [rax]	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x4005a50	      0xb9e7030000	                          mov ecx, 0x3e7	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x4005a55	          0x83e803	                              sub eax, 3	      7399	decNumber.c	FUNCTION_17	FOR_1	ELSE_1
0x4005a58	        0x4883c202	                              add rdx, 2	      7393	decNumber.c	ELSE_1	FUNCTION_17	FOR_1
0x4005a5c	        0x66894afe	                  mov word [rdx - 2], cx	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x4005a60	          0x83f803	                              cmp eax, 3	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x4005a63	            0x7feb	                            jg 0x4005a50	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x4005a65	            0x4898	                                    cdqe	      7396	decNumber.c	FUNCTION_17	FOR_1
0x4005a67	    0x8b0485000000	                  mov eax, dword [rax*4]	      7396	decNumber.c	FUNCTION_17	FOR_1
0x4005a6e	          0x83e801	                              sub eax, 1	      7396	decNumber.c	FUNCTION_17	FOR_1
0x4005a71	          0x668902	                      mov word [rdx], ax	      7396	decNumber.c	FUNCTION_17	FOR_1
0x4005a74	        0xc6450800	                   mov byte [rbp + 8], 0	      7401	decNumber.c	FUNCTION_17	ELSE_1
0x4005a78	          0x8b4304	                mov eax, dword [rbx + 4]	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x4005a7b	            0x2b03	                    sub eax, dword [rbx]	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x4005a7d	        0xc6450880	                mov byte [rbp + 8], 0x80	      1709	decNumber.c	FUNCTION_68	FUNCTION_29	IF_2
0x4005a81	          0x83c001	                              add eax, 1	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x4005a84	          0x894504	                mov dword [rbp + 4], eax	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x4005a87	            0xeb8b	                           jmp 0x4005a14	      1711	decNumber.c	FUNCTION_68	FUNCTION_29	IF_2
0x4005a89	      0xe800000000	                          call 0x4005a8e	      1721	decNumber.c	FUNCTION_68	FUNCTION_29
decNumberIsSubnormal	ELSE,0:DO,0:CALL,3:IF,4:functions,0:SWITCH,0:WHILE,0:FOR,0	13
0x400a120	            0x31c0	                            xor eax, eax	      3536	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_2
0x400a122	        0xf6470870	               test byte [rdi + 8], 0x70	      3536	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_2
0x400a126	            0x7519	                           jne 0x400a141	      3536	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_2
0x400a128	      0x66837f0a00	                 cmp word [rdi + 0xa], 0	      3537	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_3
0x400a12d	            0x8b17	                    mov edx, dword [rdi]	      3537	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_3
0x400a12f	            0x7505	                           jne 0x400a136	      3537	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_3
0x400a131	          0x83fa01	                              cmp edx, 1	      3537	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_3
0x400a134	            0x740b	                            je 0x400a141	      3537	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_3
0x400a136	           0x35704	                add edx, dword [rdi + 4]	      3536	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_2
0x400a139	            0x31c0	                            xor eax, eax	      3536	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_2
0x400a13b	          0x3b5608	                cmp edx, dword [rsi + 8]	      3536	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_2
0x400a13e	           0xf9ec0	                                setle al	      3536	decNumber.c	FUNCTION_68	FUNCTION_59	CALL_2
0x400a141	            0xf3c3	                                     ret	      3542	decNumber.c	FUNCTION_68	FUNCTION_59
decNumberMinMag	ELSE,0:DO,0:CALL,3:IF,1:functions,0:SWITCH,0:WHILE,0:FOR,0	27
0x4003d10	              0x55	                                push rbp	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x4003d11	              0x53	                                push rbx	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x4003d12	    0x41b808000000	                              mov r8d, 8	      1609	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_1
0x4003d18	          0x4889fb	                            mov rbx, rdi	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x4003d1b	          0x4889cd	                            mov rbp, rcx	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x4003d1e	        0x4883ec18	                           sub rsp, 0x18	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x4003d22	      0x4c8d4c2404	                       lea r9, [rsp + 4]	      1609	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_1
0x4003d27	    0xc74424040000	                  mov dword [rsp + 4], 0	      1608	decNumber.c	FUNCTION_68	FUNCTION_26
0x4003d2f	    0x64488b042528	                mov rax, qword fs:[0x28]	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x4003d38	      0x4889442408	                mov qword [rsp + 8], rax	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x4003d3d	            0x31c0	                            xor eax, eax	      1607	decNumber.c	FUNCTION_68	FUNCTION_26
0x4003d3f	      0xe8ccf8ffff	                   call sym.decCompareOp	      1609	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_1
0x4003d44	        0x8b742404	                mov esi, dword [rsp + 4]	      1610	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_2
0x4003d48	            0x85f6	                           test esi, esi	      1610	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_2
0x4003d4a	            0x740b	                            je 0x4003d57	      1610	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_2
0x4003d4c	          0x4889ea	                            mov rdx, rbp	      1610	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_2
0x4003d4f	          0x4889df	                            mov rdi, rbx	      1610	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_2
0x4003d52	      0xe879caffff	                      call sym.decStatus	      1610	decNumber.c	FUNCTION_68	FUNCTION_26	CALL_2
0x4003d57	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
0x4003d5c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
0x4003d65	          0x4889d8	                            mov rax, rbx	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
0x4003d68	            0x7507	                           jne 0x4003d71	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
0x4003d6a	        0x4883c418	                           add rsp, 0x18	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
0x4003d6e	              0x5b	                                 pop rbx	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
0x4003d6f	              0x5d	                                 pop rbp	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
0x4003d70	              0xc3	                                     ret	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
0x4003d71	      0xe800000000	                          call 0x4003d76	      1615	decNumber.c	FUNCTION_68	FUNCTION_26
decNumberVersion	ELSE,0:DO,0:CALL,0:IF,0:functions,0:SWITCH,0:WHILE,0:FOR,0	2
0x400a1b0	      0xb800000000	                              mov eax, 0	      3571	decNumber.c	FUNCTION_68	FUNCTION_61
0x400a1b5	              0xc3	                                     ret	      3571	decNumber.c	FUNCTION_68	FUNCTION_61
decNumberFromString	ELSE,4:DO,1:CALL,15:IF,47:functions,0:SWITCH,0:WHILE,0:FOR,8	419
0x40022b0	            0x4157	                                push r15	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x40022b2	            0x4156	                                push r14	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x40022b4	          0x4531ff	                          xor r15d, r15d	       497	decNumber.c	FUNCTION_68	FUNCTION_7
0x40022b7	            0x4155	                                push r13	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x40022b9	            0x4154	                                push r12	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x40022bb	          0x4989d5	                            mov r13, rdx	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x40022be	              0x55	                                push rbp	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x40022bf	              0x53	                                push rbx	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x40022c0	          0x4989fc	                            mov r12, rdi	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x40022c3	          0x4889f3	                            mov rbx, rsi	       507	decNumber.c	FUNCTION_68	FUNCTION_7
0x40022c6	            0x31ed	                            xor ebp, ebp	       500	decNumber.c	FUNCTION_68	FUNCTION_7
0x40022c8	            0x31ff	                            xor edi, edi	       498	decNumber.c	FUNCTION_68	FUNCTION_7
0x40022ca	        0x4883ec58	                           sub rsp, 0x58	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x40022ce	          0x4531c0	                            xor r8d, r8d	       492	decNumber.c	FUNCTION_68	FUNCTION_7
0x40022d1	    0x64488b042528	                mov rax, qword fs:[0x28]	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x40022da	      0x4889442448	             mov qword [rsp + 0x48], rax	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x40022df	            0x31c0	                            xor eax, eax	       490	decNumber.c	FUNCTION_68	FUNCTION_7
0x40022e1	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       507	decNumber.c	FUNCTION_68	FUNCTION_7
0x40022e9	          0x4889f0	                            mov rax, rsi	       507	decNumber.c	FUNCTION_68	FUNCTION_7
0x40022ec	           0xfb610	                   movzx edx, byte [rax]	       516	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_2
0x40022ef	          0x8d4ad0	                   lea ecx, [rdx - 0x30]	       516	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_2
0x40022f2	          0x80f909	                               cmp cl, 9	       516	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_2
0x40022f5	     0xf86e5000000	                           jbe 0x40023e0	       516	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_2
0x40022fb	          0x4885ff	                           test rdi, rdi	       521	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3
0x40022fe	            0x7509	                           jne 0x4002309	       521	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3
0x4002300	          0x80fa2e	                            cmp dl, 0x2e	       521	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3
0x4002303	     0xf84c7010000	                            je 0x40024d0	       521	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3
0x4002309	          0x4839f0	                            cmp rax, rsi	       525	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5
0x400230c	     0xf85ae030000	                           jne 0x40026c0	       525	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5
0x4002312	          0x80fa2d	                            cmp dl, 0x2d	       526	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_6
0x4002315	     0xf84a5010000	                            je 0x40024c0	       526	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_6
0x400231b	          0x80fa2b	                            cmp dl, 0x2b	       530	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_7
0x400231e	     0xf84bc010000	                            je 0x40024e0	       530	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_7
0x4002324	          0x4885ed	                           test rbp, rbp	       538	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x4002327	     0xf8443010000	                            je 0x4002470	       538	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x400232d	            0x84d2	                             test dl, dl	       591	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23
0x400232f	     0xf85bb000000	                           jne 0x40023f0	       591	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23
0x4002335	            0x31c9	                            xor ecx, ecx	       491	decNumber.c	FUNCTION_68	FUNCTION_7
0x4002337	           0xfb603	                   movzx eax, byte [rbx]	       629	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33
0x400233a	            0x3c30	                            cmp al, 0x30	       629	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33
0x400233c	     0xf8446030000	                            je 0x4002688	       629	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33
0x4002342	          0x4885ff	                           test rdi, rdi	       645	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_37
0x4002345	            0x740d	                            je 0x4002354	       645	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_37
0x4002347	          0x4839ef	                            cmp rdi, rbp	       645	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_37
0x400234a	            0x7308	                           jae 0x4002354	       645	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_37
0x400234c	          0x4889e8	                            mov rax, rbp	       646	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_37
0x400234f	          0x4829f8	                            sub rax, rdi	       646	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_37
0x4002352	            0x29c1	                            sub ecx, eax	       646	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_37
0x4002354	        0x453b7d00	                   cmp r15d, dword [r13]	       651	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_38
0x4002358	     0xf8f92010000	                            jg 0x40024f0	       651	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_38
0x400235e	          0x4531f6	                          xor r14d, r14d	       496	decNumber.c	FUNCTION_68	FUNCTION_7
0x4002361	        0x4183ff31	                          cmp r15d, 0x31	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x4002365	      0x498d74240a	                    lea rsi, [r12 + 0xa]	       651	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_38
0x400236a	        0x458d4f02	                      lea r9d, [r15 + 2]	       651	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_38
0x400236e	     0xf8f4c020000	                            jg 0x40025c0	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x4002374	          0x4d63cf	                         movsxd r9, r15d	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x4002377	    0x410fb6810000	                    movzx eax, byte [r9]	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x400237f	      0x488d4400fe	                lea rax, [rax + rax - 2]	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x4002384	        0x4c8d0c06	                     lea r9, [rsi + rax]	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x4002388	          0x48d1f8	                              sar rax, 1	       668	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x400238b	            0x31d2	                            xor edx, edx	       666	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x400238d	          0x48f7d8	                                 neg rax	       668	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4002390	          0x8d3c40	                  lea edi, [rax + rax*2]	       668	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4002393	          0x4401ff	                           add edi, r15d	       668	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4002396	            0xeb0c	                           jmp 0x40023a4	       668	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4002398	     0xf1f84000000	                   nop dword [rax + rax]	       668	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x40023a0	        0x4883c301	                              add rbx, 1	       669	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x40023a4	           0xfbe03	                   movsx eax, byte [rbx]	       670	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	IF_41
0x40023a7	            0x3c2e	                            cmp al, 0x2e	       670	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	IF_41
0x40023a9	            0x74f5	                            je 0x40023a0	       670	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	IF_41
0x40023ab	    0x448d14d50000	                       lea r10d, [rdx*8]	       671	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	CALL_11
0x40023b3	          0x4839dd	                            cmp rbp, rbx	       672	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	IF_42
0x40023b6	        0x418d1452	                  lea edx, [r10 + rdx*2]	       671	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	CALL_11
0x40023ba	        0x8d5402d0	             lea edx, [rdx + rax - 0x30]	       671	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	CALL_11
0x40023be	     0xf842c020000	                            je 0x40025f0	       672	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	IF_42
0x40023c4	          0x83ef01	                              sub edi, 1	       673	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x40023c7	            0x85ff	                           test edi, edi	       674	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	IF_43
0x40023c9	            0x7fd5	                            jg 0x40023a0	       674	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7	IF_43
0x40023cb	        0x66418911	                       mov word [r9], dx	       675	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x40023cf	      0xbf03000000	                              mov edi, 3	       677	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x40023d4	        0x4983e902	                               sub r9, 2	       676	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x40023d8	            0x31d2	                            xor edx, edx	       678	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x40023da	            0xebc4	                           jmp 0x40023a0	       678	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x40023dc	         0xf1f4000	                         nop dword [rax]	       678	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x40023e0	        0x4183c701	                             add r15d, 1	       518	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_2
0x40023e4	          0x4889c5	                            mov rbp, rax	       519	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_2
0x40023e7	        0x4883c001	                              add rax, 1	       515	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1
0x40023eb	      0xe9fcfeffff	                           jmp 0x40022ec	       536	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1
0x40023f0	          0x83e2df	                     and edx, 0xffffffdf	       596	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_24
0x40023f3	    0xc744241c0100	               mov dword [rsp + 0x1c], 1	       595	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23
0x40023fb	          0x80fa45	                            cmp dl, 0x45	       596	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_24
0x40023fe	     0xf8584000000	                           jne 0x4002488	       596	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_24
0x4002404	      0x440fb65601	              movzx r10d, byte [rsi + 1]	       601	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_25
0x4002409	        0x4180fa2d	                          cmp r10b, 0x2d	       601	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_25
0x400240d	     0xf84c0010000	                            je 0x40025d3	       601	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_25
0x4002413	        0x4180fa2b	                          cmp r10b, 0x2b	       602	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_26
0x4002417	     0xf847d030000	                            je 0x400279a	       602	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_26
0x400241d	        0x488d4e01	                      lea rcx, [rsi + 1]	       600	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23
0x4002421	          0x4531db	                          xor r11d, r11d	       599	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23
0x4002424	          0x4584d2	                         test r10b, r10b	       603	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_27
0x4002427	            0x745f	                            je 0x4002488	       603	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_27
0x4002429	        0x4180fa30	                          cmp r10b, 0x30	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x400242d	     0xf85bb030000	                           jne 0x40027ee	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x4002433	         0xfb64101	               movzx eax, byte [rcx + 1]	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x4002437	            0x84c0	                             test al, al	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x4002439	            0x7514	                           jne 0x400244f	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x400243b	      0xe988020000	                           jmp 0x40026c8	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x4002440	         0xfb64201	               movzx eax, byte [rdx + 1]	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x4002444	          0x4889d1	                            mov rcx, rdx	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x4002447	            0x84c0	                             test al, al	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x4002449	     0xf847c020000	                            je 0x40026cb	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x400244f	            0x3c30	                            cmp al, 0x30	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x4002451	        0x488d5101	                      lea rdx, [rcx + 1]	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x4002455	            0x74e9	                            je 0x4002440	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x4002457	          0x8d70d0	                   lea esi, [rax - 0x30]	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x400245a	        0x4080fe09	                              cmp sil, 9	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x400245e	            0x7728	                            ja 0x4002488	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x4002460	      0x440fb64902	               movzx r9d, byte [rcx + 2]	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x4002465	          0x4189c2	                           mov r10d, eax	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x4002468	      0xe961020000	                           jmp 0x40026ce	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x400246d	           0xf1f00	                         nop dword [rax]	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x4002470	          0x4885ff	                           test rdi, rdi	       546	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_11
0x4002473	    0xc744241c0100	               mov dword [rsp + 0x1c], 1	       539	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x400247b	            0x750b	                           jne 0x4002488	       546	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_11
0x400247d	            0x84d2	                             test dl, dl	       546	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_11
0x400247f	     0xf85b6020000	                           jne 0x400273b	       546	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_11
0x4002485	           0xf1f00	                         nop dword [rax]	       546	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_11
0x4002488	      0xbb01000000	                              mov ebx, 1	       677	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_7
0x400248d	          0x4c89ea	                            mov rdx, r13	       715	decNumber.c	FUNCTION_68	FUNCTION_7	CALL_15
0x4002490	            0x89de	                            mov esi, ebx	       715	decNumber.c	FUNCTION_68	FUNCTION_7	CALL_15
0x4002492	          0x4c89e7	                            mov rdi, r12	       715	decNumber.c	FUNCTION_68	FUNCTION_7	CALL_15
0x4002495	      0xe836e3ffff	                      call sym.decStatus	       715	decNumber.c	FUNCTION_68	FUNCTION_7	CALL_15
0x400249a	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x400249f	    0x644833342528	                xor rsi, qword fs:[0x28]	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x40024a8	          0x4c89e0	                            mov rax, r12	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x40024ab	     0xf852f040000	                           jne 0x40028e0	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x40024b1	        0x4883c458	                           add rsp, 0x58	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x40024b5	              0x5b	                                 pop rbx	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x40024b6	              0x5d	                                 pop rbp	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x40024b7	            0x415c	                                 pop r12	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x40024b9	            0x415d	                                 pop r13	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x40024bb	            0x415e	                                 pop r14	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x40024bd	            0x415f	                                 pop r15	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x40024bf	              0xc3	                                     ret	       717	decNumber.c	FUNCTION_68	FUNCTION_7
0x40024c0	        0x4883c301	                              add rbx, 1	       527	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_6
0x40024c4	    0x41b880ffffff	                     mov r8d, 0xffffff80	       528	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_6
0x40024ca	      0xe918ffffff	                           jmp 0x40023e7	       529	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_6
0x40024cf	              0x90	                                     nop	       529	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_6
0x40024d0	          0x4839c3	                            cmp rbx, rax	       523	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3	IF_4
0x40024d3	          0x4889c7	                            mov rdi, rax	       523	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3	IF_4
0x40024d6	     0xf850bffffff	                           jne 0x40023e7	       523	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3	IF_4
0x40024dc	         0xf1f4000	                         nop dword [rax]	       523	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_3	IF_4
0x40024e0	        0x4883c301	                              add rbx, 1	       531	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_7
0x40024e4	      0xe9fefeffff	                           jmp 0x40023e7	       532	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_7
0x40024e9	     0xf1f80000000	                         nop dword [rax]	       532	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	FOR_1	IF_5	IF_7
0x40024f0	        0x4183ff31	                          cmp r15d, 0x31	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x40024f4	            0x7f5a	                            jg 0x4002550	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x40024f6	          0x4d63cf	                         movsxd r9, r15d	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x40024f9	          0x4531f6	                          xor r14d, r14d	       496	decNumber.c	FUNCTION_68	FUNCTION_7
0x40024fc	      0x488d742420	                   lea rsi, [rsp + 0x20]	       654	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3
0x4002501	    0x410fb6910000	                    movzx edx, byte [r9]	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x4002509	          0x4889d0	                            mov rax, rdx	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x400250c	             0x1d2	                            add edx, edx	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x400250e	          0x83fa1e	                           cmp edx, 0x1e	       655	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x4002511	     0xf8668feffff	                           jbe 0x400237f	       655	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x4002517	          0x4863fa	                         movsxd rdi, edx	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x400251a	      0x4c894c2408	                 mov qword [rsp + 8], r9	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x400251f	        0x894c2404	                mov dword [rsp + 4], ecx	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x4002523	      0x4488442403	                 mov byte [rsp + 3], r8b	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x4002528	      0xe800000000	                          call 0x400252d	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x400252d	          0x4885c0	                           test rax, rax	       657	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39	IF_40
0x4002530	          0x4989c6	                            mov r14, rax	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x4002533	     0xf8472020000	                            je 0x40027ab	       657	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39	IF_40
0x4002539	          0x4889c6	                            mov rsi, rax	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x400253c	    0x440fb6442403	               movzx r8d, byte [rsp + 3]	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x4002542	        0x8b4c2404	                mov ecx, dword [rsp + 4]	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x4002546	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x400254b	      0xe927feffff	                           jmp 0x4002377	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x4002550	        0x458d4f02	                      lea r9d, [r15 + 2]	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x4002554	      0xba56555555	                     mov edx, 0x55555556	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x4002559	          0x4489c8	                            mov eax, r9d	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x400255c	            0xf7ea	                                imul edx	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x400255e	          0x4489c8	                            mov eax, r9d	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x4002561	          0xc1f81f	                           sar eax, 0x1f	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x4002564	            0x29c2	                            sub edx, eax	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x4002566	          0x8d0412	                    lea eax, [rdx + rdx]	       653	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	CALL_9
0x4002569	          0x83f81e	                           cmp eax, 0x1e	       655	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x400256c	            0x7f15	                            jg 0x4002583	       655	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x400256e	      0x488d742420	                   lea rsi, [rsp + 0x20]	       654	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3
0x4002573	          0x4531f6	                          xor r14d, r14d	       496	decNumber.c	FUNCTION_68	FUNCTION_7
0x4002576	          0x4863d2	                         movsxd rdx, edx	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x4002579	      0x488d4412fe	                lea rax, [rdx + rdx - 2]	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x400257e	      0xe901feffff	                           jmp 0x4002384	       667	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	CALL_10
0x4002583	          0x4863f8	                         movsxd rdi, eax	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x4002586	      0x44894c2408	                mov dword [rsp + 8], r9d	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x400258b	        0x894c2404	                mov dword [rsp + 4], ecx	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x400258f	      0x4488442403	                 mov byte [rsp + 3], r8b	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x4002594	      0xe800000000	                          call 0x4002599	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x4002599	          0x4885c0	                           test rax, rax	       657	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39	IF_40
0x400259c	          0x4989c6	                            mov r14, rax	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x400259f	     0xf8406020000	                            je 0x40027ab	       657	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39	IF_40
0x40025a5	    0x440fb6442403	               movzx r8d, byte [rsp + 3]	       657	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39	IF_40
0x40025ab	        0x8b4c2404	                mov ecx, dword [rsp + 4]	       657	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39	IF_40
0x40025af	          0x4889c6	                            mov rsi, rax	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x40025b2	      0x448b4c2408	                mov r9d, dword [rsp + 8]	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x40025b7	    0x660f1f840000	                    nop word [rax + rax]	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x40025c0	          0x4489c8	                            mov eax, r9d	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x40025c3	      0xba56555555	                     mov edx, 0x55555556	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x40025c8	        0x41c1f91f	                           sar r9d, 0x1f	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x40025cc	            0xf7ea	                                imul edx	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x40025ce	          0x4429ca	                            sub edx, r9d	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x40025d1	            0xeba3	                           jmp 0x4002576	       656	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39
0x40025d3	        0x488d4e02	                      lea rcx, [rsi + 2]	       601	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_25
0x40025d7	      0x440fb65602	              movzx r10d, byte [rsi + 2]	       601	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_25
0x40025dc	    0x41bb01000000	                             mov r11d, 1	       601	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_25
0x40025e2	      0xe93dfeffff	                           jmp 0x4002424	       601	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_25
0x40025e7	    0x660f1f840000	                    nop word [rax + rax]	       601	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_25
0x40025f0	        0x66418911	                       mov word [r9], dx	       680	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x40025f4	      0x4588442408	                 mov byte [r12 + 8], r8b	       692	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x40025f9	        0x418b5500	                    mov edx, dword [r13]	       697	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45
0x40025fd	      0x41894c2404	                mov dword [r12 + 4], ecx	       693	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4002602	        0x45893c24	                   mov dword [r12], r15d	       694	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1
0x4002606	          0x4139d7	                           cmp r15d, edx	       697	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45
0x4002609	            0x7f55	                            jg 0x4002660	       697	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45
0x400260b	        0x418b4508	                mov eax, dword [r13 + 8]	       705	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x400260f	          0x4429f8	                           sub eax, r15d	       705	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4002612	            0x39c1	                            cmp ecx, eax	       705	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4002614	            0x7e0d	                           jle 0x4002623	       705	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4002616	        0x418b4504	                mov eax, dword [r13 + 4]	       706	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x400261a	          0x83e901	                              sub ecx, 1	       706	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x400261d	            0x29d0	                            sub eax, edx	       706	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x400261f	            0x39c1	                            cmp ecx, eax	       706	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4002621	            0x7e1d	                           jle 0x4002640	       706	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x4002623	    0xc74424180000	               mov dword [rsp + 0x18], 0	       707	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46
0x400262b	      0x488d4c241c	                   lea rcx, [rsp + 0x1c]	       708	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46	CALL_14
0x4002630	      0x488d542418	                   lea rdx, [rsp + 0x18]	       708	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46	CALL_14
0x4002635	          0x4c89ee	                            mov rsi, r13	       708	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46	CALL_14
0x4002638	          0x4c89e7	                            mov rdi, r12	       708	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46	CALL_14
0x400263b	      0xe820f8ffff	                    call sym.decFinalize	       708	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46	CALL_14
0x4002640	        0x8b5c241c	            mov ebx, dword [rsp + 0x1c] 	       708	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_4	IF_46	CALL_14
0x4002644	          0x4c89f7	                            mov rdi, r14	       714	decNumber.c	FUNCTION_68	FUNCTION_7
0x4002647	      0xe800000000	                          call 0x400264c	       714	decNumber.c	FUNCTION_68	FUNCTION_7
0x400264c	            0x85db	                           test ebx, ebx	       715	decNumber.c	FUNCTION_68	FUNCTION_7	CALL_15
0x400264e	     0xf8446feffff	                            je 0x400249a	       715	decNumber.c	FUNCTION_68	FUNCTION_7	CALL_15
0x4002654	      0xe934feffff	                           jmp 0x400248d	       715	decNumber.c	FUNCTION_68	FUNCTION_7	CALL_15
0x4002659	     0xf1f80000000	                         nop dword [rax]	       715	decNumber.c	FUNCTION_68	FUNCTION_7	CALL_15
0x4002660	      0x4c8d4c241c	                    lea r9, [rsp + 0x1c]	       699	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_12
0x4002665	      0x4c8d442418	                    lea r8, [rsp + 0x18]	       699	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_12
0x400266a	          0x4889f2	                            mov rdx, rsi	       699	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_12
0x400266d	          0x4489f9	                           mov ecx, r15d	       699	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_12
0x4002670	          0x4c89ee	                            mov rsi, r13	       699	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_12
0x4002673	          0x4c89e7	                            mov rdi, r12	       699	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_12
0x4002676	    0xc74424180000	               mov dword [rsp + 0x18], 0	       698	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45
0x400267e	      0xe84decffff	             call sym.decSetCoeff.isra.3	       699	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_12
0x4002683	            0xeba6	                           jmp 0x400262b	       699	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_12
0x4002685	           0xf1f00	                         nop dword [rax]	       699	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_45	CALL_12
0x4002688	          0x4839eb	                            cmp rbx, rbp	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x400268b	            0x720e	                            jb 0x400269b	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x400268d	      0xe9b0fcffff	                           jmp 0x4002342	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x4002692	    0x660f1f440000	                    nop word [rax + rax]	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x4002698	           0xfb603	                   movzx eax, byte [rbx]	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x400269b	            0x3c2e	                            cmp al, 0x2e	       631	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6	IF_34
0x400269d	            0x740c	                            je 0x40026ab	       631	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6	IF_34
0x400269f	            0x3c30	                            cmp al, 0x30	       632	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6	IF_35
0x40026a1	     0xf859bfcffff	                           jne 0x4002342	       632	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6	IF_35
0x40026a7	        0x4183ef01	                             sub r15d, 1	       633	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x40026ab	        0x4883c301	                              add rbx, 1	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x40026af	          0x4839dd	                            cmp rbp, rbx	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x40026b2	            0x75e4	                           jne 0x4002698	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x40026b4	          0x4889eb	                            mov rbx, rbp	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x40026b7	      0xe986fcffff	                           jmp 0x4002342	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x40026bc	         0xf1f4000	                         nop dword [rax]	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x40026c0	          0x4889c6	                            mov rsi, rax	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x40026c3	      0xe95cfcffff	                           jmp 0x4002324	       630	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_33	FOR_6
0x40026c8	          0x4889ca	                            mov rdx, rcx	       605	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_4
0x40026cb	          0x4531c9	                            xor r9d, r9d	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x40026ce	        0x410fbec2	                         movsx eax, r10b	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x40026d2	          0x4889d6	                            mov rsi, rdx	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x40026d5	            0x31c9	                            xor ecx, ecx	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x40026d7	            0xeb10	                           jmp 0x40026e9	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x40026d9	     0xf1f80000000	                         nop dword [rax]	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x40026e0	        0x410fbec1	                          movsx eax, r9b	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x40026e4	      0x440fb64e01	               movzx r9d, byte [rsi + 1]	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x40026e9	    0x448d34cd0000	                       lea r14d, [rcx*8]	       609	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	CALL_7
0x40026f1	        0x4883c601	                              add rsi, 1	       607	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5
0x40026f5	        0x418d0c4e	                  lea ecx, [r14 + rcx*2]	       609	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	CALL_7
0x40026f9	        0x8d4c01d0	             lea ecx, [rcx + rax - 0x30]	       609	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	CALL_7
0x40026fd	        0x418d41d0	                    lea eax, [r9 - 0x30]	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x4002701	            0x3c09	                               cmp al, 9	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x4002703	            0x76db	                           jbe 0x40026e0	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x4002705	          0x4584c9	                           test r9b, r9b	       612	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_29
0x4002708	     0xf857afdffff	                           jne 0x4002488	       612	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_29
0x400270e	        0x4883c20a	                            add rdx, 0xa	       617	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_30
0x4002712	          0x4839d6	                            cmp rsi, rdx	       617	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_30
0x4002715	            0x720d	                            jb 0x4002724	       617	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_30
0x4002717	            0x7706	                            ja 0x400271f	       618	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_30	IF_31
0x4002719	        0x4180fa31	                          cmp r10b, 0x31	       618	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_30	IF_31
0x400271d	            0x7e05	                           jle 0x4002724	       618	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_30	IF_31
0x400271f	      0xb9fe933577	                     mov ecx, 0x773593fe	       618	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_30	IF_31
0x4002724	            0x89c8	                            mov eax, ecx	       621	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_32
0x4002726	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       622	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23
0x400272e	            0xf7d8	                                 neg eax	       621	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_32
0x4002730	          0x4584db	                         test r11b, r11b	       621	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_32
0x4002733	           0xf45c8	                         cmovne ecx, eax	       621	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_32
0x4002736	      0xe9fcfbffff	                           jmp 0x4002337	       621	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_32
0x400273b	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400273d	    0x41c644240800	                   mov byte [r12 + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4002743	    0x41c744240400	                  mov dword [r12 + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400274c	    0x41c704240100	                      mov dword [r12], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4002754	    0x66418944240a	                mov word [r12 + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400275a	          0x4889f1	                            mov rcx, rsi	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400275d	    0x41b900000000	                              mov r9d, 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4002763	      0xba00000000	                              mov edx, 0	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4002768	            0xeb12	                           jmp 0x400277c	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x400276a	    0x660f1f440000	                    nop word [rax + rax]	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4002770	        0x4883c101	                              add rcx, 1	      7662	decNumber.c	FUNCTION_22	FOR_1
0x4002774	        0x4883c201	                              add rdx, 1	      7662	decNumber.c	FUNCTION_22	FOR_1
0x4002778	        0x4983c101	                               add r9, 1	      7662	decNumber.c	FUNCTION_22	FOR_1
0x400277c	           0xfb601	                   movzx eax, byte [rcx]	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x400277f	            0x3a02	                      cmp al, byte [rdx]	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x4002781	            0x7405	                            je 0x4002788	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x4002783	          0x413a01	                       cmp al, byte [r9]	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x4002786	            0x7533	                           jne 0x40027bb	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x4002788	            0x84c0	                             test al, al	      7665	decNumber.c	FUNCTION_22	FOR_1	IF_2
0x400278a	            0x75e4	                           jne 0x4002770	      7665	decNumber.c	FUNCTION_22	FOR_1	IF_2
0x400278c	        0x4183c840	                            or r8d, 0x40	       550	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_12
0x4002790	      0x4588442408	                 mov byte [r12 + 8], r8b	       550	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_12
0x4002795	      0xe900fdffff	                           jmp 0x400249a	       552	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_12
0x400279a	        0x488d4e02	                      lea rcx, [rsi + 2]	       602	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_26
0x400279e	      0x440fb65602	              movzx r10d, byte [rsi + 2]	       602	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	IF_26
0x40027a3	          0x4531db	                          xor r11d, r11d	       599	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23
0x40027a6	      0xe979fcffff	                           jmp 0x4002424	       599	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23
0x40027ab	        0x8b5c241c	            mov ebx, dword [rsp + 0x1c] 	       657	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39	IF_40
0x40027af	          0x83cb10	                            or ebx, 0x10	       657	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39	IF_40
0x40027b2	        0x895c241c	             mov dword [rsp + 0x1c], ebx	       657	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39	IF_40
0x40027b6	      0xe9d2fcffff	                           jmp 0x400248d	       657	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_3	IF_39	IF_40
0x40027bb	          0x4889f1	                            mov rcx, rsi	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x40027be	    0x41b900000000	                              mov r9d, 0	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x40027c4	      0xba00000000	                              mov edx, 0	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x40027c9	            0xeb11	                           jmp 0x40027dc	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x40027cb	       0xf1f440000	                   nop dword [rax + rax]	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x40027d0	        0x4883c101	                              add rcx, 1	      7662	decNumber.c	FUNCTION_22	FOR_1
0x40027d4	        0x4883c201	                              add rdx, 1	      7662	decNumber.c	FUNCTION_22	FOR_1
0x40027d8	        0x4983c101	                               add r9, 1	      7662	decNumber.c	FUNCTION_22	FOR_1
0x40027dc	           0xfb601	                   movzx eax, byte [rcx]	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x40027df	            0x3a02	                      cmp al, byte [rdx]	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x40027e1	            0x7405	                            je 0x40027e8	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x40027e3	          0x413a01	                       cmp al, byte [r9]	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x40027e6	            0x751f	                           jne 0x4002807	      7663	decNumber.c	FUNCTION_22	FOR_1	IF_1
0x40027e8	            0x84c0	                             test al, al	      7665	decNumber.c	FUNCTION_22	FOR_1	IF_2
0x40027ea	            0x75e4	                           jne 0x40027d0	      7665	decNumber.c	FUNCTION_22	FOR_1	IF_2
0x40027ec	            0xeb9e	                           jmp 0x400278c	      7665	decNumber.c	FUNCTION_22	FOR_1	IF_2
0x40027ee	        0x418d42d0	                   lea eax, [r10 - 0x30]	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x40027f2	            0x3c09	                               cmp al, 9	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x40027f4	     0xf878efcffff	                            ja 0x4002488	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x40027fa	      0x440fb64901	               movzx r9d, byte [rcx + 1]	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x40027ff	          0x4889ca	                            mov rdx, rcx	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x4002802	      0xe9c7feffff	                           jmp 0x40026ce	       608	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	ELSE_1	IF_23	FOR_5	IF_28
0x4002807	          0x4489c0	                            mov eax, r8d	       556	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x400280a	          0x83c820	                            or eax, 0x20	       556	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x400280d	      0x4188442408	                  mov byte [r12 + 8], al	       556	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x4002812	           0xfb606	                   movzx eax, byte [rsi]	       557	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x4002815	          0x83e0df	                     and eax, 0xffffffdf	       557	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x4002818	            0x3c53	                            cmp al, 0x53	       557	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x400281a	            0x7513	                           jne 0x400282f	       557	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x400281c	        0x4183c810	                            or r8d, 0x10	       559	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x4002820	        0x4883c601	                              add rsi, 1	       558	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x4002824	      0x4588442408	                 mov byte [r12 + 8], r8b	       559	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x4002829	           0xfb606	                   movzx eax, byte [rsi]	       559	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x400282c	          0x83e0df	                     and eax, 0xffffffdf	       559	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_13
0x400282f	            0x3c4e	                            cmp al, 0x4e	       561	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_14
0x4002831	     0xf8551fcffff	                           jne 0x4002488	       561	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_14
0x4002837	         0xfb64601	               movzx eax, byte [rsi + 1]	       563	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_15
0x400283b	          0x83e0df	                     and eax, 0xffffffdf	       563	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_15
0x400283e	            0x3c41	                            cmp al, 0x41	       563	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_15
0x4002840	     0xf8542fcffff	                           jne 0x4002488	       563	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_15
0x4002846	         0xfb64602	               movzx eax, byte [rsi + 2]	       565	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_16
0x400284a	          0x83e0df	                     and eax, 0xffffffdf	       565	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_16
0x400284d	            0x3c4e	                            cmp al, 0x4e	       565	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_16
0x400284f	     0xf8533fcffff	                           jne 0x4002488	       565	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_16
0x4002855	         0xfb64603	               movzx eax, byte [rsi + 3]	       569	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_2
0x4002859	        0x488d5e03	                      lea rbx, [rsi + 3]	       566	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x400285d	            0x3c30	                            cmp al, 0x30	       569	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_2
0x400285f	            0x750b	                           jne 0x400286c	       569	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_2
0x4002861	        0x4883c301	                              add rbx, 1	       569	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_2
0x4002865	           0xfb603	                   movzx eax, byte [rbx]	       569	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_2
0x4002868	            0x3c30	                            cmp al, 0x30	       569	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_2
0x400286a	            0x74f5	                            je 0x4002861	       569	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_2
0x400286c	            0x84c0	                             test al, al	       570	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_17
0x400286e	     0xf8426fcffff	                            je 0x400249a	       570	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_17
0x4002874	           0xfb603	                   movzx eax, byte [rbx]	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x4002877	          0x8d50d0	                   lea edx, [rax - 0x30]	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x400287a	          0x80fa09	                               cmp dl, 9	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x400287d	            0x7720	                            ja 0x400289f	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x400287f	          0x4889dd	                            mov rbp, rbx	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x4002882	            0xeb07	                           jmp 0x400288b	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x4002884	         0xf1f4000	                         nop dword [rax]	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x4002888	          0x4889cd	                            mov rbp, rcx	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x400288b	         0xfb64501	               movzx eax, byte [rbp + 1]	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x400288f	        0x4183c701	                             add r15d, 1	       575	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3
0x4002893	        0x488d4d01	                      lea rcx, [rbp + 1]	       575	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3
0x4002897	          0x8d50d0	                   lea edx, [rax - 0x30]	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x400289a	          0x80fa09	                               cmp dl, 9	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x400289d	            0x76e9	                           jbe 0x4002888	       576	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	FOR_3	IF_18
0x400289f	            0x84c0	                             test al, al	       579	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_19
0x40028a1	     0xf85e1fbffff	                           jne 0x4002488	       579	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_19
0x40028a7	        0x418b4500	                    mov eax, dword [r13]	       580	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20
0x40028ab	          0x4439f8	                           cmp eax, r15d	       580	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20
0x40028ae	            0x7f14	                            jg 0x40028c4	       580	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20
0x40028b0	      0x41807d1800	                cmp byte [r13 + 0x18], 0	       584	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20	IF_22
0x40028b5	     0xf85cdfbffff	                           jne 0x4002488	       584	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20	IF_22
0x40028bb	          0x4439f8	                           cmp eax, r15d	       584	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20	IF_22
0x40028be	     0xf8cc4fbffff	                            jl 0x4002488	       584	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8	IF_20	IF_22
0x40028c4	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       587	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x40028cc	    0x450fb6442408	               movzx r8d, byte [r12 + 8]	       588	decNumber.c	FUNCTION_68	FUNCTION_7	DO_1	IF_8
0x40028d2	            0x31c9	                            xor ecx, ecx	       491	decNumber.c	FUNCTION_68	FUNCTION_7
0x40028d4	      0xe95efaffff	                           jmp 0x4002337	       491	decNumber.c	FUNCTION_68	FUNCTION_7
0x40028d9	     0xf1f80000000	                         nop dword [rax]	       491	decNumber.c	FUNCTION_68	FUNCTION_7
0x40028e0	      0xe800000000	                          call 0x40028e5	       717	decNumber.c	FUNCTION_68	FUNCTION_7
decCheckMath	ELSE,1:DO,0:CALL,1:IF,2:functions,0:SWITCH,0:WHILE,0:FOR,0	44
0x40004a0	    0x813e3f420f00	                cmp dword [rsi], 0xf423f	      7511	decNumber.c	FUNCTION_19	IF_1
0x40004a6	            0x8b0a	                    mov ecx, dword [rdx]	      7510	decNumber.c	FUNCTION_19
0x40004a8	            0x7f3e	                            jg 0x40004e8	      7511	decNumber.c	FUNCTION_19	IF_1
0x40004aa	    0x817e043f420f	           cmp dword [rsi + 4], 0xf423f 	      7512	decNumber.c	FUNCTION_19	IF_1
0x40004b1	            0x7f35	                            jg 0x40004e8	      7512	decNumber.c	FUNCTION_19	IF_1
0x40004b3	          0x8b4608	                mov eax, dword [rsi + 8]	      7513	decNumber.c	FUNCTION_19	IF_1
0x40004b6	            0xf7d8	                                 neg eax	      7513	decNumber.c	FUNCTION_19	IF_1
0x40004b8	      0x3d3f420f00	                        cmp eax, 0xf423f	      7513	decNumber.c	FUNCTION_19	IF_1
0x40004bd	            0x7f29	                            jg 0x40004e8	      7513	decNumber.c	FUNCTION_19	IF_1
0x40004bf	            0x8b37	                    mov esi, dword [rdi]	      7514	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x40004c1	    0x81fe3f420f00	                        cmp esi, 0xf423f	      7514	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x40004c7	            0x7e37	                           jle 0x4000500	      7514	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x40004c9	      0x66837f0a00	                 cmp word [rdi + 0xa], 0	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x40004ce	            0x7505	                           jne 0x40004d5	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x40004d0	          0x83fe01	                              cmp esi, 1	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x40004d3	            0x744b	                            je 0x4000520	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x40004d5	            0x89c8	                            mov eax, ecx	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x40004d7	             0xc80	                             or al, 0x80	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x40004d9	            0x39c1	                            cmp ecx, eax	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x40004db	            0x8902	                    mov dword [rdx], eax	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x40004dd	           0xf95c0	                                setne al	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x40004e0	           0xfb6c0	                           movzx eax, al	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x40004e3	            0xf3c3	                                     ret	      7519	decNumber.c	FUNCTION_19
0x40004e5	           0xf1f00	                         nop dword [rax]	      7519	decNumber.c	FUNCTION_19
0x40004e8	            0x89c8	                            mov eax, ecx	      7513	decNumber.c	FUNCTION_19	IF_1
0x40004ea	          0x83c840	                            or eax, 0x40	      7513	decNumber.c	FUNCTION_19	IF_1
0x40004ed	            0x39c1	                            cmp ecx, eax	      7513	decNumber.c	FUNCTION_19	IF_1
0x40004ef	            0x8902	                    mov dword [rdx], eax	      7513	decNumber.c	FUNCTION_19	IF_1
0x40004f1	           0xf95c0	                                setne al	      7513	decNumber.c	FUNCTION_19	IF_1
0x40004f4	           0xfb6c0	                           movzx eax, al	      7513	decNumber.c	FUNCTION_19	IF_1
0x40004f7	              0xc3	                                     ret	      7513	decNumber.c	FUNCTION_19	IF_1
0x40004f8	     0xf1f84000000	                   nop dword [rax + rax]	      7513	decNumber.c	FUNCTION_19	IF_1
0x4000500	        0x448b4704	                mov r8d, dword [rdi + 4]	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4000504	            0x31c0	                            xor eax, eax	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4000506	          0x4101f0	                            add r8d, esi	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4000509	    0x4181c07c841e	                       add r8d, 0x1e847c	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4000510	    0x4181f8bcc62d	                       cmp r8d, 0x2dc6bc	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4000517	            0x77b0	                            ja 0x40004c9	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4000519	            0xebc8	                           jmp 0x40004e3	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x400051b	       0xf1f440000	                   nop dword [rax + rax]	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4000520	            0x31c0	                            xor eax, eax	      7516	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4000522	        0xf6470870	               test byte [rdi + 8], 0x70	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4000526	            0x75ad	                           jne 0x40004d5	      7517	decNumber.c	FUNCTION_19	ELSE_1	IF_2
0x4000528	            0xf3c3	                                     ret	      7519	decNumber.c	FUNCTION_19
decNumberNextToward	ELSE,4:DO,0:CALL,12:IF,9:functions,0:SWITCH,0:WHILE,0:FOR,0	153
0x4009ed0	            0x4155	                                push r13	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x4009ed2	            0x4154	                                push r12	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x4009ed4	          0x4989d5	                            mov r13, rdx	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x4009ed7	              0x55	                                push rbp	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x4009ed8	              0x53	                                push rbx	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x4009ed9	          0x4889fd	                            mov rbp, rdi	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x4009edc	          0x4989f4	                            mov r12, rsi	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x4009edf	          0x4889cb	                            mov rbx, rcx	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x4009ee2	        0x4883ec58	                           sub rsp, 0x58	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x4009ee6	    0x64488b042528	                mov rax, qword fs:[0x28]	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x4009eef	      0x4889442448	             mov qword [rsp + 0x48], rax	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x4009ef4	            0x31c0	                            xor eax, eax	      1738	decNumber.c	FUNCTION_68	FUNCTION_30
0x4009ef6	          0x488b01	                    mov rax, qword [rcx]	      1740	decNumber.c	FUNCTION_68	FUNCTION_30
0x4009ef9	        0xf6460830	               test byte [rsi + 8], 0x30	      1747	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_3
0x4009efd	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      1742	decNumber.c	FUNCTION_68	FUNCTION_30
0x4009f05	      0x4889442410	             mov qword [rsp + 0x10], rax	      1740	decNumber.c	FUNCTION_68	FUNCTION_30
0x4009f0a	        0x488b4108	                mov rax, qword [rcx + 8]	      1740	decNumber.c	FUNCTION_68	FUNCTION_30
0x4009f0e	      0x4889442418	             mov qword [rsp + 0x18], rax	      1740	decNumber.c	FUNCTION_68	FUNCTION_30
0x4009f13	        0x488b4110	            mov rax, qword [rcx + 0x10] 	      1740	decNumber.c	FUNCTION_68	FUNCTION_30
0x4009f17	      0x4889442420	             mov qword [rsp + 0x20], rax	      1740	decNumber.c	FUNCTION_68	FUNCTION_30
0x4009f1c	          0x8b4118	            mov eax, dword [rcx + 0x18] 	      1740	decNumber.c	FUNCTION_68	FUNCTION_30
0x4009f1f	        0x89442428	             mov dword [rsp + 0x28], eax	      1740	decNumber.c	FUNCTION_68	FUNCTION_30
0x4009f23	            0x7506	                           jne 0x4009f2b	      1747	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_3
0x4009f25	        0xf6420830	               test byte [rdx + 8], 0x30	      1747	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_3
0x4009f29	            0x7445	                            je 0x4009f70	      1747	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_3
0x4009f2b	      0x4c8d44240c	                     lea r8, [rsp + 0xc]	      1748	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_4
0x4009f30	          0x4c89e6	                            mov rsi, r12	      1748	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_4
0x4009f33	          0x4889d9	                            mov rcx, rbx	      1748	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_4
0x4009f36	          0x4c89ea	                            mov rdx, r13	      1748	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_4
0x4009f39	          0x4889ef	                            mov rdi, rbp	      1748	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_4
0x4009f3c	      0xe8af94ffff	                 call sym.decNaNs.isra.6	      1748	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_4
0x4009f41	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      1748	decNumber.c	FUNCTION_68	FUNCTION_30	IF_2	CALL_4
0x4009f45	            0x85f6	                           test esi, esi	      1786	decNumber.c	FUNCTION_68	FUNCTION_30	CALL_12
0x4009f47	            0x7547	                           jne 0x4009f90	      1786	decNumber.c	FUNCTION_68	FUNCTION_30	CALL_12
0x4009f49	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x4009f4e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x4009f57	          0x4889e8	                            mov rax, rbp	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x4009f5a	     0xf85ac010000	                           jne 0x400a10c	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x4009f60	        0x4883c458	                           add rsp, 0x58	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x4009f64	              0x5b	                                 pop rbx	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x4009f65	              0x5d	                                 pop rbp	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x4009f66	            0x415c	                                 pop r12	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x4009f68	            0x415d	                                 pop r13	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x4009f6a	              0xc3	                                     ret	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x4009f6b	       0xf1f440000	                   nop dword [rax + rax]	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
0x4009f70	            0x31d2	                            xor edx, edx	      1751	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	CALL_5
0x4009f72	          0x4c89ee	                            mov rsi, r13	      1751	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	CALL_5
0x4009f75	          0x4c89e7	                            mov rdi, r12	      1751	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	CALL_5
0x4009f78	      0xe82378ffff	                     call sym.decCompare	      1751	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	CALL_5
0x4009f7d	      0x3d00000080	                     cmp eax, 0x80000000	      1752	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	IF_3
0x4009f82	            0x751c	                           jne 0x4009fa0	      1752	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	IF_3
0x4009f84	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      1752	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	IF_3
0x4009f88	          0x83ce10	                            or esi, 0x10	      1752	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	IF_3
0x4009f8b	        0x8974240c	              mov dword [rsp + 0xc], esi	      1752	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	IF_3
0x4009f8f	              0x90	                                     nop	      1752	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	IF_3
0x4009f90	          0x4889da	                            mov rdx, rbx	      1786	decNumber.c	FUNCTION_68	FUNCTION_30	CALL_12
0x4009f93	          0x4889ef	                            mov rdi, rbp	      1786	decNumber.c	FUNCTION_68	FUNCTION_30	CALL_12
0x4009f96	      0xe83568ffff	                      call sym.decStatus	      1786	decNumber.c	FUNCTION_68	FUNCTION_30	CALL_12
0x4009f9b	            0xebac	                           jmp 0x4009f49	      1786	decNumber.c	FUNCTION_68	FUNCTION_30	CALL_12
0x4009f9d	           0xf1f00	                         nop dword [rax]	      1786	decNumber.c	FUNCTION_68	FUNCTION_30	CALL_12
0x4009fa0	            0x85c0	                           test eax, eax	      1754	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	CALL_6
0x4009fa2	            0x747c	                            je 0x400a020	      1754	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	CALL_6
0x4009fa4	    0x410fb6442408	               movzx eax, byte [r12 + 8]	      1759	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6
0x4009faa	     0xf88a0000000	                            js 0x400a050	      1757	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5
0x4009fb0	          0x83e0c0	                     and eax, 0xffffffc0	      1769	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_7
0x4009fb3	            0x3c40	                            cmp al, 0x40	      1769	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_7
0x4009fb5	     0xf84b5000000	                            je 0x400a070	      1769	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_7
0x4009fbb	    0xc744241c0600	               mov dword [rsp + 0x1c], 6	      1773	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4
0x4009fc3	    0x41b880000000	                           mov r8d, 0x80	      1773	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4
0x4009fc9	      0x4c8d4c240c	                     lea r9, [rsp + 0xc]	      1779	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_10
0x4009fce	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      1779	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_10
0x4009fd3	      0x488d542430	                   lea rdx, [rsp + 0x30]	      1779	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_10
0x4009fd8	      0xb801000000	                              mov eax, 1	      1777	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3
0x4009fdd	          0x4c89e6	                            mov rsi, r12	      1779	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_10
0x4009fe0	          0x4889ef	                            mov rdi, rbp	      1779	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_10
0x4009fe3	      0xc644243800	                mov byte [rsp + 0x38], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009fe8	    0xc74424300100	               mov dword [rsp + 0x30], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4009ff0	      0x668944243a	               mov word [rsp + 0x3a], ax	      1777	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3
0x4009ff5	    0xc74424340036	     mov dword [rsp + 0x34], 0xc4653600 	      1778	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3
0x4009ffd	      0xe8eeabffff	                       call sym.decAddOp	      1779	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_10
0x400a002	          0x4889de	                            mov rsi, rbx	      1782	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_11
0x400a005	          0x4889ef	                            mov rdi, rbp	      1782	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_11
0x400a008	      0xe800000000	                          call 0x400a00d	      1782	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_11
0x400a00d	            0x85c0	                           test eax, eax	      1782	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_11
0x400a00f	     0xf8534ffffff	                           jne 0x4009f49	      1782	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_11
0x400a015	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      1782	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_11
0x400a019	      0xe927ffffff	                           jmp 0x4009f45	      1782	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_11
0x400a01e	            0x6690	                                     nop	      1782	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	CALL_11
0x400a020	      0x450fb65508	              movzx r10d, byte [r13 + 8]	      3434	decNumber.c	FUNCTION_68	FUNCTION_55
0x400a025	          0x4c89e6	                            mov rsi, r12	      3435	decNumber.c	FUNCTION_68	FUNCTION_55	CALL_2
0x400a028	          0x4889ef	                            mov rdi, rbp	      3435	decNumber.c	FUNCTION_68	FUNCTION_55	CALL_2
0x400a02b	        0x4183e280	                    and r10d, 0xffffff80	      3434	decNumber.c	FUNCTION_68	FUNCTION_55
0x400a02f	      0xe800000000	                          call 0x400a034	      3435	decNumber.c	FUNCTION_68	FUNCTION_55	CALL_2
0x400a034	         0xfb64508	               movzx eax, byte [rbp + 8]	      3437	decNumber.c	FUNCTION_68	FUNCTION_55
0x400a038	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      3437	decNumber.c	FUNCTION_68	FUNCTION_55
0x400a03c	          0x83e07f	                           and eax, 0x7f	      3437	decNumber.c	FUNCTION_68	FUNCTION_55
0x400a03f	          0x4109c2	                            or r10d, eax	      3437	decNumber.c	FUNCTION_68	FUNCTION_55
0x400a042	        0x44885508	                mov byte [rbp + 8], r10b	      3437	decNumber.c	FUNCTION_68	FUNCTION_55
0x400a046	      0xe9fafeffff	                           jmp 0x4009f45	      3437	decNumber.c	FUNCTION_68	FUNCTION_55
0x400a04b	       0xf1f440000	                   nop dword [rax + rax]	      3437	decNumber.c	FUNCTION_68	FUNCTION_55
0x400a050	          0x83e0c0	                     and eax, 0xffffffc0	      1759	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6
0x400a053	            0x3cc0	                            cmp al, 0xc0	      1759	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6
0x400a055	            0x7461	                            je 0x400a0b8	      1759	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6
0x400a057	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      1764	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5
0x400a05f	          0x4531c0	                            xor r8d, r8d	      1764	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5
0x400a062	      0xe962ffffff	                           jmp 0x4009fc9	      1764	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5
0x400a067	    0x660f1f840000	                    nop word [rax + rax]	      1764	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5
0x400a070	            0x8b03	                    mov eax, dword [rbx]	      7390	decNumber.c	ELSE_1	FUNCTION_17
0x400a072	        0x488d550a	                    lea rdx, [rbp + 0xa]	      7393	decNumber.c	ELSE_1	FUNCTION_17	FOR_1
0x400a076	          0x83f803	                              cmp eax, 3	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400a079	          0x894500	                    mov dword [rbp], eax	      7391	decNumber.c	ELSE_1	FUNCTION_17
0x400a07c	            0x7e17	                           jle 0x400a095	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400a07e	            0x6690	                                     nop	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400a080	      0xb9e7030000	                          mov ecx, 0x3e7	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400a085	          0x83e803	                              sub eax, 3	      7399	decNumber.c	FUNCTION_17	FOR_1	ELSE_1
0x400a088	        0x4883c202	                              add rdx, 2	      7393	decNumber.c	ELSE_1	FUNCTION_17	FOR_1
0x400a08c	        0x66894afe	                  mov word [rdx - 2], cx	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400a090	          0x83f803	                              cmp eax, 3	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400a093	            0x7feb	                            jg 0x400a080	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400a095	            0x4898	                                    cdqe	      7396	decNumber.c	FUNCTION_17	FOR_1
0x400a097	    0x8b0485000000	                  mov eax, dword [rax*4]	      7396	decNumber.c	FUNCTION_17	FOR_1
0x400a09e	          0x83e801	                              sub eax, 1	      7396	decNumber.c	FUNCTION_17	FOR_1
0x400a0a1	          0x668902	                      mov word [rdx], ax	      7396	decNumber.c	FUNCTION_17	FOR_1
0x400a0a4	        0xc6450800	                   mov byte [rbp + 8], 0	      7401	decNumber.c	FUNCTION_17	ELSE_1
0x400a0a8	          0x8b4304	                mov eax, dword [rbx + 4]	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400a0ab	            0x2b03	                    sub eax, dword [rbx]	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400a0ad	          0x83c001	                              add eax, 1	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400a0b0	          0x894504	                mov dword [rbp + 4], eax	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400a0b3	      0xe991feffff	                           jmp 0x4009f49	      1771	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	ELSE_4	IF_7
0x400a0b8	            0x8b03	                    mov eax, dword [rbx]	      7390	decNumber.c	ELSE_1	FUNCTION_17
0x400a0ba	        0x488d550a	                    lea rdx, [rbp + 0xa]	      7393	decNumber.c	ELSE_1	FUNCTION_17	FOR_1
0x400a0be	          0x83f803	                              cmp eax, 3	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400a0c1	          0x894500	                    mov dword [rbp], eax	      7391	decNumber.c	ELSE_1	FUNCTION_17
0x400a0c4	            0x7e1f	                           jle 0x400a0e5	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400a0c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400a0d0	      0xbee7030000	                          mov esi, 0x3e7	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400a0d5	          0x83e803	                              sub eax, 3	      7399	decNumber.c	FUNCTION_17	FOR_1	ELSE_1
0x400a0d8	        0x4883c202	                              add rdx, 2	      7393	decNumber.c	ELSE_1	FUNCTION_17	FOR_1
0x400a0dc	        0x668972fe	                  mov word [rdx - 2], si	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400a0e0	          0x83f803	                              cmp eax, 3	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400a0e3	            0x7feb	                            jg 0x400a0d0	      7394	decNumber.c	ELSE_1	FUNCTION_17	FOR_1	IF_1
0x400a0e5	            0x4898	                                    cdqe	      7396	decNumber.c	FUNCTION_17	FOR_1
0x400a0e7	    0x8b0485000000	                  mov eax, dword [rax*4]	      7396	decNumber.c	FUNCTION_17	FOR_1
0x400a0ee	          0x83e801	                              sub eax, 1	      7396	decNumber.c	FUNCTION_17	FOR_1
0x400a0f1	          0x668902	                      mov word [rdx], ax	      7396	decNumber.c	FUNCTION_17	FOR_1
0x400a0f4	        0xc6450800	                   mov byte [rbp + 8], 0	      7401	decNumber.c	FUNCTION_17	ELSE_1
0x400a0f8	          0x8b4304	                mov eax, dword [rbx + 4]	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400a0fb	            0x2b03	                    sub eax, dword [rbx]	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400a0fd	        0xc6450880	                mov byte [rbp + 8], 0x80	      1761	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6
0x400a101	          0x83c001	                              add eax, 1	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400a104	          0x894504	                mov dword [rbp + 4], eax	      7402	decNumber.c	FUNCTION_17	ELSE_1
0x400a107	      0xe93dfeffff	                           jmp 0x4009f49	      1762	decNumber.c	FUNCTION_68	FUNCTION_30	ELSE_1	ELSE_2	ELSE_3	IF_5	IF_6
0x400a10c	      0xe800000000	                          call 0x400a111	      1788	decNumber.c	FUNCTION_68	FUNCTION_30
decNumberReduce	ELSE,0:DO,1:CALL,7:IF,6:functions,0:SWITCH,0:WHILE,0:FOR,0	53
0x4003530	              0x55	                                push rbp	      2313	decNumber.c	FUNCTION_68	FUNCTION_37
0x4003531	              0x53	                                push rbx	      2313	decNumber.c	FUNCTION_68	FUNCTION_37
0x4003532	          0x4889d5	                            mov rbp, rdx	      2313	decNumber.c	FUNCTION_68	FUNCTION_37
0x4003535	          0x4889fb	                            mov rbx, rdi	      2313	decNumber.c	FUNCTION_68	FUNCTION_37
0x4003538	        0x4883ec28	                           sub rsp, 0x28	      2313	decNumber.c	FUNCTION_68	FUNCTION_37
0x400353c	    0x64488b042528	                mov rax, qword fs:[0x28]	      2313	decNumber.c	FUNCTION_68	FUNCTION_37
0x4003545	      0x4889442418	             mov qword [rsp + 0x18], rax	      2313	decNumber.c	FUNCTION_68	FUNCTION_37
0x400354a	            0x31c0	                            xor eax, eax	      2313	decNumber.c	FUNCTION_68	FUNCTION_37
0x400354c	         0xfb64608	               movzx eax, byte [rsi + 8]	      2339	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	IF_5	CALL_3
0x4003550	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      2317	decNumber.c	FUNCTION_68	FUNCTION_37
0x4003558	    0xc74424100000	               mov dword [rsp + 0x10], 0	      2318	decNumber.c	FUNCTION_68	FUNCTION_37
0x4003560	            0xa830	                           test al, 0x30	      2339	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	IF_5	CALL_3
0x4003562	            0x743c	                            je 0x40035a0	      2339	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	IF_5	CALL_3
0x4003564	      0x4c8d44240c	                     lea r8, [rsp + 0xc]	      2340	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	IF_5	CALL_4
0x4003569	          0x4889d1	                            mov rcx, rdx	      2340	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	IF_5	CALL_4
0x400356c	            0x31d2	                            xor edx, edx	      2340	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	IF_5	CALL_4
0x400356e	      0xe87dfeffff	                 call sym.decNaNs.isra.6	      2340	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	IF_5	CALL_4
0x4003573	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      2354	decNumber.c	FUNCTION_68	FUNCTION_37	CALL_7
0x4003577	            0x85f6	                           test esi, esi	      2354	decNumber.c	FUNCTION_68	FUNCTION_37	CALL_7
0x4003579	            0x740b	                            je 0x4003586	      2354	decNumber.c	FUNCTION_68	FUNCTION_37	CALL_7
0x400357b	          0x4889ea	                            mov rdx, rbp	      2354	decNumber.c	FUNCTION_68	FUNCTION_37	CALL_7
0x400357e	          0x4889df	                            mov rdi, rbx	      2354	decNumber.c	FUNCTION_68	FUNCTION_37	CALL_7
0x4003581	      0xe84ad2ffff	                      call sym.decStatus	      2354	decNumber.c	FUNCTION_68	FUNCTION_37	CALL_7
0x4003586	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2356	decNumber.c	FUNCTION_68	FUNCTION_37
0x400358b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2356	decNumber.c	FUNCTION_68	FUNCTION_37
0x4003594	          0x4889d8	                            mov rax, rbx	      2356	decNumber.c	FUNCTION_68	FUNCTION_37
0x4003597	            0x7556	                           jne 0x40035ef	      2356	decNumber.c	FUNCTION_68	FUNCTION_37
0x4003599	        0x4883c428	                           add rsp, 0x28	      2356	decNumber.c	FUNCTION_68	FUNCTION_37
0x400359d	              0x5b	                                 pop rbx	      2356	decNumber.c	FUNCTION_68	FUNCTION_37
0x400359e	              0x5d	                                 pop rbp	      2356	decNumber.c	FUNCTION_68	FUNCTION_37
0x400359f	              0xc3	                                     ret	      2356	decNumber.c	FUNCTION_68	FUNCTION_37
0x40035a0	          0x884708	                  mov byte [rdi + 8], al	      6839	decNumber.c	FUNCTION_11
0x40035a3	          0x8b4604	                mov eax, dword [rsi + 4]	      6840	decNumber.c	FUNCTION_11
0x40035a6	      0x4c8d442410	                    lea r8, [rsp + 0x10]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40035ab	            0x8b0e	                    mov ecx, dword [rsi]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40035ad	        0x488d560a	                    lea rdx, [rsi + 0xa]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40035b1	      0x4c8d4c240c	                     lea r9, [rsp + 0xc]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40035b6	          0x4889ee	                            mov rsi, rbp	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40035b9	          0x894704	                mov dword [rdi + 4], eax	      6840	decNumber.c	FUNCTION_11
0x40035bc	      0xe80fddffff	             call sym.decSetCoeff.isra.3	      6841	decNumber.c	FUNCTION_11	CALL_1
0x40035c1	      0x488d4c240c	                    lea rcx, [rsp + 0xc]	      2346	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1
0x40035c6	      0x488d542410	                   lea rdx, [rsp + 0x10]	      2346	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1
0x40035cb	          0x4889ee	                            mov rsi, rbp	      2346	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1
0x40035ce	          0x4889df	                            mov rdi, rbx	      2346	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1
0x40035d1	      0xe88ae8ffff	                    call sym.decFinalize	      2346	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1
0x40035d6	      0x4c8d442414	                    lea r8, [rsp + 0x14]	      2347	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	CALL_6
0x40035db	            0x31c9	                            xor ecx, ecx	      2347	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	CALL_6
0x40035dd	      0xba01000000	                              mov edx, 1	      2347	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	CALL_6
0x40035e2	          0x4889ee	                            mov rsi, rbp	      2347	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	CALL_6
0x40035e5	          0x4889df	                            mov rdi, rbx	      2347	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	CALL_6
0x40035e8	      0xe853dbffff	                        call sym.decTrim	      2347	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	CALL_6
0x40035ed	            0xeb84	                           jmp 0x4003573	      2347	decNumber.c	FUNCTION_68	FUNCTION_37	DO_1	CALL_6
0x40035ef	      0xe800000000	                          call 0x40035f4	      2356	decNumber.c	FUNCTION_68	FUNCTION_37
decNumberExp	ELSE,0:DO,1:CALL,6:IF,6:functions,0:SWITCH,0:WHILE,0:FOR,0	38
0x4007790	              0x55	                                push rbp	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x4007791	              0x53	                                push rbx	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x4007792	          0x4989f1	                             mov r9, rsi	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x4007795	          0x4889d5	                            mov rbp, rdx	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x4007798	          0x4889fb	                            mov rbx, rdi	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x400779b	          0x4c89cf	                             mov rdi, r9	      1062	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1
0x400779e	        0x4883ec18	                           sub rsp, 0x18	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x40077a2	          0x4889ee	                            mov rsi, rbp	      1062	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1
0x40077a5	      0x488d542404	                      lea rdx, [rsp + 4]	      1062	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1
0x40077aa	    0xc74424040000	                  mov dword [rsp + 4], 0	      1049	decNumber.c	FUNCTION_68	FUNCTION_17
0x40077b2	    0x64488b042528	                mov rax, qword fs:[0x28]	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x40077bb	      0x4889442408	                mov qword [rsp + 8], rax	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x40077c0	            0x31c0	                            xor eax, eax	      1048	decNumber.c	FUNCTION_68	FUNCTION_17
0x40077c2	      0xe8d98cffff	                   call sym.decCheckMath	      1062	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1
0x40077c7	            0x85c0	                           test eax, eax	      1062	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1
0x40077c9	            0x7435	                            je 0x4007800	      1062	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1
0x40077cb	        0x8b742404	                mov esi, dword [rsp + 4]	      1080	decNumber.c	FUNCTION_68	FUNCTION_17	CALL_5
0x40077cf	            0x85f6	                           test esi, esi	      1080	decNumber.c	FUNCTION_68	FUNCTION_17	CALL_5
0x40077d1	            0x740b	                            je 0x40077de	      1080	decNumber.c	FUNCTION_68	FUNCTION_17	CALL_5
0x40077d3	          0x4889ea	                            mov rdx, rbp	      1080	decNumber.c	FUNCTION_68	FUNCTION_17	CALL_5
0x40077d6	          0x4889df	                            mov rdi, rbx	      1080	decNumber.c	FUNCTION_68	FUNCTION_17	CALL_5
0x40077d9	      0xe8f28fffff	                      call sym.decStatus	      1080	decNumber.c	FUNCTION_68	FUNCTION_17	CALL_5
0x40077de	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
0x40077e3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
0x40077ec	          0x4889d8	                            mov rax, rbx	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
0x40077ef	            0x7524	                           jne 0x4007815	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
0x40077f1	        0x4883c418	                           add rsp, 0x18	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
0x40077f5	              0x5b	                                 pop rbx	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
0x40077f6	              0x5d	                                 pop rbp	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
0x40077f7	              0xc3	                                     ret	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
0x40077f8	     0xf1f84000000	                   nop dword [rax + rax]	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
0x4007800	      0x488d4c2404	                      lea rcx, [rsp + 4]	      1073	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1	CALL_4
0x4007805	          0x4889ea	                            mov rdx, rbp	      1073	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1	CALL_4
0x4007808	          0x4c89ce	                             mov rsi, r9	      1073	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1	CALL_4
0x400780b	          0x4889df	                            mov rdi, rbx	      1073	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1	CALL_4
0x400780e	      0xe81df7ffff	                       call sym.decExpOp	      1073	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1	CALL_4
0x4007813	            0xebb6	                           jmp 0x40077cb	      1073	decNumber.c	FUNCTION_68	FUNCTION_17	IF_2	DO_1	CALL_4
0x4007815	      0xe800000000	                          call 0x400781a	      1085	decNumber.c	FUNCTION_68	FUNCTION_17
decNumberAbs	ELSE,0:DO,0:CALL,5:IF,2:functions,0:SWITCH,0:WHILE,0:FOR,0	37
0x40053b0	              0x55	                                push rbp	       739	decNumber.c	FUNCTION_68	FUNCTION_8
0x40053b1	              0x53	                                push rbx	       739	decNumber.c	FUNCTION_68	FUNCTION_8
0x40053b2	          0x4889d1	                            mov rcx, rdx	       749	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_3
0x40053b5	          0x4889d5	                            mov rbp, rdx	       739	decNumber.c	FUNCTION_68	FUNCTION_8
0x40053b8	          0x4889f2	                            mov rdx, rsi	       749	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_3
0x40053bb	          0x4889fb	                            mov rbx, rdi	       739	decNumber.c	FUNCTION_68	FUNCTION_8
0x40053be	        0x4883ec38	                           sub rsp, 0x38	       739	decNumber.c	FUNCTION_68	FUNCTION_8
0x40053c2	      0x440fb64608	               movzx r8d, byte [rsi + 8]	       749	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_3
0x40053c7	    0x64488b042528	                mov rax, qword fs:[0x28]	       739	decNumber.c	FUNCTION_68	FUNCTION_8
0x40053d0	      0x4889442428	             mov qword [rsp + 0x28], rax	       739	decNumber.c	FUNCTION_68	FUNCTION_8
0x40053d5	            0x31c0	                            xor eax, eax	       739	decNumber.c	FUNCTION_68	FUNCTION_8
0x40053d7	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40053d9	      0x4c8d4c240c	                     lea r9, [rsp + 0xc]	       749	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_3
0x40053de	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       741	decNumber.c	FUNCTION_68	FUNCTION_8
0x40053e6	      0x668944241a	               mov word [rsp + 0x1a], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x40053eb	          0x8b4604	                mov eax, dword [rsi + 4]	       748	decNumber.c	FUNCTION_68	FUNCTION_8
0x40053ee	      0x488d742410	                   lea rsi, [rsp + 0x10]	       749	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_3
0x40053f3	    0x4181e0800000	                           and r8d, 0x80	       749	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_3
0x40053fa	      0xc644241800	                mov byte [rsp + 0x18], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40053ff	    0xc74424100100	               mov dword [rsp + 0x10], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4005407	        0x89442414	             mov dword [rsp + 0x14], eax	       748	decNumber.c	FUNCTION_68	FUNCTION_8
0x400540b	      0xe8e0f7ffff	                       call sym.decAddOp	       749	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_3
0x4005410	        0x8b74240c	              mov esi, dword [rsp + 0xc]	       750	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_4
0x4005414	            0x85f6	                           test esi, esi	       750	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_4
0x4005416	            0x740b	                            je 0x4005423	       750	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_4
0x4005418	          0x4889ea	                            mov rdx, rbp	       750	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_4
0x400541b	          0x4889df	                            mov rdi, rbx	       750	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_4
0x400541e	      0xe8adb3ffff	                      call sym.decStatus	       750	decNumber.c	FUNCTION_68	FUNCTION_8	CALL_4
0x4005423	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       755	decNumber.c	FUNCTION_68	FUNCTION_8
0x4005428	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       755	decNumber.c	FUNCTION_68	FUNCTION_8
0x4005431	          0x4889d8	                            mov rax, rbx	       755	decNumber.c	FUNCTION_68	FUNCTION_8
0x4005434	            0x7507	                           jne 0x400543d	       755	decNumber.c	FUNCTION_68	FUNCTION_8
0x4005436	        0x4883c438	                           add rsp, 0x38	       755	decNumber.c	FUNCTION_68	FUNCTION_8
0x400543a	              0x5b	                                 pop rbx	       755	decNumber.c	FUNCTION_68	FUNCTION_8
0x400543b	              0x5d	                                 pop rbp	       755	decNumber.c	FUNCTION_68	FUNCTION_8
0x400543c	              0xc3	                                     ret	       755	decNumber.c	FUNCTION_68	FUNCTION_8
0x400543d	      0xe800000000	                          call 0x4005442	       755	decNumber.c	FUNCTION_68	FUNCTION_8
decNumberSetBCD	ELSE,0:DO,0:CALL,3:IF,0:functions,0:SWITCH,0:WHILE,0:FOR,3	64
0x4009d60	          0x486307	                 movsxd rax, dword [rdi]	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4009d63	              0x53	                                push rbx	      3485	decNumber.c	FUNCTION_68	FUNCTION_57
0x4009d64	        0x4c8d5f0a	                    lea r11, [rdi + 0xa]	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4009d68	            0x89d3	                            mov ebx, edx	      3485	decNumber.c	FUNCTION_68	FUNCTION_57
0x4009d6a	          0x83f831	                           cmp eax, 0x31	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4009d6d	     0xf8f99000000	                            jg 0x4009e0c	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4009d73	     0xfb680000000	                   movzx eax, byte [rax]	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4009d7a	      0x4c8d4400fe	                 lea r8, [rax + rax - 2]	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4009d7f	          0x4d01d8	                             add r8, r11	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4009d82	          0x83fb31	                           cmp ebx, 0x31	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4009d85	            0x7773	                            ja 0x4009dfa	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4009d87	            0x89d8	                            mov eax, ebx	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4009d89	     0xfb680000000	                   movzx eax, byte [rax]	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4009d90	        0x8d4440fd	              lea eax, [rax + rax*2 - 3]	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4009d94	            0x89da	                            mov edx, ebx	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4009d96	            0x29c2	                            sub edx, eax	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4009d98	          0x4d39c3	                             cmp r11, r8	      3494	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2
0x4009d9b	            0x89d0	                            mov eax, edx	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4009d9d	            0x7754	                            ja 0x4009df3	      3494	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2
0x4009d9f	              0x90	                                     nop	      3494	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2
0x4009da0	            0x31d2	                            xor edx, edx	      3495	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2
0x4009da2	            0x85c0	                           test eax, eax	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x4009da4	        0x66418910	                       mov word [r8], dx	      3495	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2
0x4009da8	            0x7e3b	                           jle 0x4009de5	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x4009daa	          0x83e801	                              sub eax, 1	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x4009dad	          0x4889f2	                            mov rdx, rsi	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x4009db0	          0x4989c2	                            mov r10, rax	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x4009db3	      0x4c8d4c0601	                 lea r9, [rsi + rax + 1]	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x4009db8	            0x31c0	                            xor eax, eax	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x4009dba	    0x660f1f440000	                    nop word [rax + rax]	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x4009dc0	    0x8d0cc5000000	                        lea ecx, [rax*8]	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x4009dc7	        0x4883c201	                              add rdx, 1	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x4009dcb	          0x8d0441	                  lea eax, [rcx + rax*2]	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x4009dce	         0xfb64aff	               movzx ecx, byte [rdx - 1]	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x4009dd2	             0x1c8	                            add eax, ecx	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x4009dd4	          0x4c39ca	                             cmp rdx, r9	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x4009dd7	        0x66418900	                       mov word [r8], ax	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x4009ddb	            0x75e3	                           jne 0x4009dc0	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x4009ddd	          0x4963c2	                        movsxd rax, r10d	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x4009de0	      0x488d740601	                lea rsi, [rsi + rax + 1]	      3496	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2	CALL_3
0x4009de5	        0x4983e802	                               sub r8, 2	      3494	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2
0x4009de9	      0xb803000000	                              mov eax, 3	      3497	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2
0x4009dee	          0x4d39c3	                             cmp r11, r8	      3494	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2
0x4009df1	            0x76ad	                           jbe 0x4009da0	      3494	decNumber.c	FUNCTION_68	FUNCTION_57	FOR_2
0x4009df3	            0x891f	                    mov dword [rdi], ebx	      3500	decNumber.c	FUNCTION_68	FUNCTION_57
0x4009df5	          0x4889f8	                            mov rax, rdi	      3502	decNumber.c	FUNCTION_68	FUNCTION_57
0x4009df8	              0x5b	                                 pop rbx	      3502	decNumber.c	FUNCTION_68	FUNCTION_57
0x4009df9	              0xc3	                                     ret	      3502	decNumber.c	FUNCTION_68	FUNCTION_57
0x4009dfa	          0x8d4302	                      lea eax, [rbx + 2]	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4009dfd	      0xbaabaaaaaa	                     mov edx, 0xaaaaaaab	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4009e02	            0xf7e2	                                 mul edx	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4009e04	            0xd1ea	                              shr edx, 1	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4009e06	        0x8d4452fd	              lea eax, [rdx + rdx*2 - 3]	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4009e0a	            0xeb88	                           jmp 0x4009d94	      3493	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_2
0x4009e0c	          0x8d4802	                      lea ecx, [rax + 2]	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4009e0f	      0xba56555555	                     mov edx, 0x55555556	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4009e14	            0x89c8	                            mov eax, ecx	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4009e16	            0xf7ea	                                imul edx	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4009e18	            0x89c8	                            mov eax, ecx	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4009e1a	          0xc1f81f	                           sar eax, 0x1f	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4009e1d	            0x29c2	                            sub edx, eax	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4009e1f	          0x4863c2	                         movsxd rax, edx	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4009e22	      0x4c8d4400fe	                 lea r8, [rax + rax - 2]	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
0x4009e27	      0xe953ffffff	                           jmp 0x4009d7f	      3486	decNumber.c	FUNCTION_68	FUNCTION_57	CALL_1
decUnitAddSub	ELSE,4:DO,0:CALL,2:IF,31:functions,0:SWITCH,0:WHILE,0:FOR,4	248
0x4000040	            0x4157	                                push r15	      6333	decNumber.c	FUNCTION_5
0x4000042	            0x4156	                                push r14	      6333	decNumber.c	FUNCTION_5
0x4000044	          0x4c63f6	                         movsxd r14, esi	      6349	decNumber.c	FUNCTION_5
0x4000047	          0x4d01f6	                            add r14, r14	      6349	decNumber.c	FUNCTION_5
0x400004a	          0x4863c9	                         movsxd rcx, ecx	      6350	decNumber.c	FUNCTION_5
0x400004d	          0x4585c0	                           test r8d, r8d	      6351	decNumber.c	FUNCTION_5	IF_2
0x4000050	            0x4155	                                push r13	      6333	decNumber.c	FUNCTION_5
0x4000052	        0x4f8d2c31	                     lea r13, [r9 + r14]	      6349	decNumber.c	FUNCTION_5
0x4000056	            0x4154	                                push r12	      6333	decNumber.c	FUNCTION_5
0x4000058	              0x55	                                push rbp	      6333	decNumber.c	FUNCTION_5
0x4000059	              0x53	                                push rbx	      6333	decNumber.c	FUNCTION_5
0x400005a	        0x498d1c49	                   lea rbx, [r9 + rcx*2]	      6350	decNumber.c	FUNCTION_5
0x400005e	      0x448b5c2438	           mov r11d, dword [rsp + 0x38] 	      6333	decNumber.c	FUNCTION_5
0x4000063	     0xf8487000000	                            je 0x40000f0	      6351	decNumber.c	FUNCTION_5	IF_2
0x4000069	          0x4963c8	                         movsxd rcx, r8d	      6352	decNumber.c	FUNCTION_5	IF_2
0x400006c	          0x4801c9	                            add rcx, rcx	      6352	decNumber.c	FUNCTION_5	IF_2
0x400006f	          0x4801cb	                            add rbx, rcx	      6352	decNumber.c	FUNCTION_5	IF_2
0x4000072	          0x4c39cf	                             cmp rdi, r9	      6354	decNumber.c	FUNCTION_5	IF_2	IF_3
0x4000075	            0x7514	                           jne 0x400008b	      6354	decNumber.c	FUNCTION_5	IF_2	IF_3
0x4000077	          0x4439c6	                            cmp esi, r8d	      6354	decNumber.c	FUNCTION_5	IF_2	IF_3
0x400007a	        0x498d0409	                     lea rax, [r9 + rcx]	      6355	decNumber.c	FUNCTION_5	IF_2	IF_3
0x400007e	        0x4c8d140f	                    lea r10, [rdi + rcx]	      6356	decNumber.c	FUNCTION_5	IF_2	IF_3
0x4000082	        0x400f9dc6	                               setge sil	      6354	decNumber.c	FUNCTION_5	IF_2	IF_3
0x4000086	          0x4084f6	                           test sil, sil	      6354	decNumber.c	FUNCTION_5	IF_2	IF_3
0x4000089	            0x756b	                           jne 0x40000f6	      6354	decNumber.c	FUNCTION_5	IF_2	IF_3
0x400008b	        0x498d3409	                     lea rsi, [r9 + rcx]	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x400008f	        0x4e8d0437	                     lea r8, [rdi + r14]	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x4000093	          0x4c89c8	                             mov rax, r9	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x4000096	          0x4889f9	                            mov rcx, rdi	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x4000099	          0x4939f1	                             cmp r9, rsi	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x400009c	            0x7218	                            jb 0x40000b6	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x400009e	            0xeb53	                           jmp 0x40000f3	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000a0	        0x440fb711	                  movzx r10d, word [rcx]	      6359	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1	IF_4
0x40000a4	        0x4883c002	                              add rax, 2	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000a8	        0x4883c102	                              add rcx, 2	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000ac	      0x66448950fe	                mov word [rax - 2], r10w	      6359	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1	IF_4
0x40000b1	          0x4839f0	                            cmp rax, rsi	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000b4	            0x731a	                           jae 0x40000d0	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000b6	          0x4c39c1	                             cmp rcx, r8	      6359	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1	IF_4
0x40000b9	            0x72e5	                            jb 0x40000a0	      6359	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1	IF_4
0x40000bb	          0x4531d2	                          xor r10d, r10d	      6360	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1	ELSE_2
0x40000be	        0x4883c002	                              add rax, 2	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000c2	        0x4883c102	                              add rcx, 2	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000c6	      0x66448950fe	                mov word [rax - 2], r10w	      6360	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1	ELSE_2
0x40000cb	          0x4839f0	                            cmp rax, rsi	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000ce	            0x72e6	                            jb 0x40000b6	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000d0	          0x4c89c8	                             mov rax, r9	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000d3	          0x48f7d0	                                 not rax	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000d6	          0x4801f0	                            add rax, rsi	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000d9	          0x48d1e8	                              shr rax, 1	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000dc	      0x488d440002	                lea rax, [rax + rax + 2]	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000e1	        0x4c8d1407	                    lea r10, [rdi + rax]	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000e5	          0x4c01c8	                             add rax, r9	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000e8	            0xeb0c	                           jmp 0x40000f6	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000ea	    0x660f1f440000	                    nop word [rax + rax]	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000f0	          0x4c89c8	                             mov rax, r9	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000f3	          0x4989fa	                            mov r10, rdi	      6358	decNumber.c	FUNCTION_5	IF_2	ELSE_1	FOR_1
0x40000f6	          0x4c39eb	                            cmp rbx, r13	      6363	decNumber.c	FUNCTION_5	ELSE_2	IF_5
0x40000f9	            0x7709	                            ja 0x4000104	      6363	decNumber.c	FUNCTION_5	ELSE_2	IF_5
0x40000fb	          0x4c89e9	                            mov rcx, r13	      6363	decNumber.c	FUNCTION_5	ELSE_2	IF_5
0x40000fe	          0x4989dd	                            mov r13, rbx	      6363	decNumber.c	FUNCTION_5	ELSE_2	IF_5
0x4000101	          0x4889cb	                            mov rbx, rcx	      6363	decNumber.c	FUNCTION_5	ELSE_2	IF_5
0x4000104	          0x4c39e8	                            cmp rax, r13	      6373	decNumber.c	FUNCTION_5	FOR_2
0x4000107	     0xf8380020000	                           jae 0x400038d	      6373	decNumber.c	FUNCTION_5	FOR_2
0x400010d	          0x4989c0	                             mov r8, rax	      6373	decNumber.c	FUNCTION_5	FOR_2
0x4000110	          0x4989d4	                            mov r12, rdx	      6373	decNumber.c	FUNCTION_5	FOR_2
0x4000113	          0x4c89d5	                            mov rbp, r10	      6373	decNumber.c	FUNCTION_5	FOR_2
0x4000116	            0x31f6	                            xor esi, esi	      6373	decNumber.c	FUNCTION_5	FOR_2
0x4000118	            0xeb15	                           jmp 0x400012f	      6373	decNumber.c	FUNCTION_5	FOR_2
0x400011a	    0x660f1f440000	                    nop word [rax + rax]	      6373	decNumber.c	FUNCTION_5	FOR_2
0x4000120	        0x66418908	                       mov word [r8], cx	      6380	decNumber.c	FUNCTION_5	FOR_2	IF_6
0x4000124	            0x31f6	                            xor esi, esi	      6381	decNumber.c	FUNCTION_5	FOR_2	IF_6
0x4000126	        0x4983c002	                               add r8, 2	      6373	decNumber.c	FUNCTION_5	FOR_2
0x400012a	          0x4d39c5	                             cmp r13, r8	      6373	decNumber.c	FUNCTION_5	FOR_2
0x400012d	            0x7669	                           jbe 0x4000198	      6373	decNumber.c	FUNCTION_5	FOR_2
0x400012f	         0xfb74d00	                   movzx ecx, word [rbp]	      6374	decNumber.c	FUNCTION_5	FOR_2
0x4000133	        0x4983c402	                              add r12, 2	      6377	decNumber.c	FUNCTION_5	FOR_2
0x4000137	        0x4883c502	                              add rbp, 2	      6375	decNumber.c	FUNCTION_5	FOR_2
0x400013b	             0x1ce	                            add esi, ecx	      6374	decNumber.c	FUNCTION_5	FOR_2
0x400013d	    0x410fb74c24fe	               movzx ecx, word [r12 - 2]	      6376	decNumber.c	FUNCTION_5	FOR_2
0x4000143	        0x410fafcb	                          imul ecx, r11d	      6376	decNumber.c	FUNCTION_5	FOR_2
0x4000147	             0x1f1	                            add ecx, esi	      6376	decNumber.c	FUNCTION_5	FOR_2
0x4000149	    0x81f9e7030000	                          cmp ecx, 0x3e7	      6379	decNumber.c	FUNCTION_5	FOR_2	IF_6
0x400014f	            0x76cf	                           jbe 0x4000120	      6379	decNumber.c	FUNCTION_5	FOR_2	IF_6
0x4000151	            0x85c9	                           test ecx, ecx	      6403	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x4000153	     0xf882f010000	                            js 0x4000288	      6403	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x4000159	            0x89ce	                            mov esi, ecx	      6404	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x400015b	          0xc1ee03	                              shr esi, 3	      6404	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x400015e	    0x69f689410000	                   imul esi, esi, 0x4189	      6404	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x4000164	          0xc1ee15	                           shr esi, 0x15	      6404	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x4000167	    0x664469fee803	                    imul r15w, si, 0x3e8	      6405	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x400016d	          0x4429f9	                           sub ecx, r15d	      6405	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x4000170	      0x6681f9e703	                           cmp cx, 0x3e7	      6407	decNumber.c	FUNCTION_5	FOR_2	IF_10	IF_11
0x4000175	     0xf8600010000	                           jbe 0x400027b	      6407	decNumber.c	FUNCTION_5	FOR_2	IF_10	IF_11
0x400017b	      0x6681e9e803	                           sub cx, 0x3e8	      6409	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x4000180	        0x4983c002	                               add r8, 2	      6373	decNumber.c	FUNCTION_5	FOR_2
0x4000184	          0x83c601	                              add esi, 1	      6408	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x4000187	      0x66418948fe	                   mov word [r8 - 2], cx	      6409	decNumber.c	FUNCTION_5	FOR_2	IF_10
0x400018c	          0x4d39c5	                             cmp r13, r8	      6373	decNumber.c	FUNCTION_5	FOR_2
0x400018f	            0x779e	                            ja 0x400012f	      6373	decNumber.c	FUNCTION_5	FOR_2
0x4000191	     0xf1f80000000	                         nop dword [rax]	      6373	decNumber.c	FUNCTION_5	FOR_2
0x4000198	          0x4889c1	                            mov rcx, rax	      6373	decNumber.c	FUNCTION_5	FOR_2
0x400019b	          0x48f7d1	                                 not rcx	      6373	decNumber.c	FUNCTION_5	FOR_2
0x400019e	          0x4901cd	                            add r13, rcx	      6373	decNumber.c	FUNCTION_5	FOR_2
0x40001a1	          0x49d1ed	                              shr r13, 1	      6373	decNumber.c	FUNCTION_5	FOR_2
0x40001a4	      0x4b8d4c2d02	                lea rcx, [r13 + r13 + 2]	      6373	decNumber.c	FUNCTION_5	FOR_2
0x40001a9	          0x4801c8	                            add rax, rcx	      6373	decNumber.c	FUNCTION_5	FOR_2
0x40001ac	          0x4901ca	                            add r10, rcx	      6373	decNumber.c	FUNCTION_5	FOR_2
0x40001af	          0x4801ca	                            add rdx, rcx	      6373	decNumber.c	FUNCTION_5	FOR_2
0x40001b2	          0x4839d8	                            cmp rax, rbx	      6454	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x40001b5	     0xf838d000000	                           jae 0x4000248	      6454	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x40001bb	          0x4c01f7	                            add rdi, r14	      6454	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x40001be	            0xeb23	                           jmp 0x40001e3	      6454	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x40001c0	        0x450fb702	                   movzx r8d, word [r10]	      6456	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_17
0x40001c4	        0x4983c202	                              add r10, 2	      6457	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_17
0x40001c8	          0x4101f0	                            add r8d, esi	      6456	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_17
0x40001cb	    0x4181f8e70300	                          cmp r8d, 0x3e7	      6465	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_18
0x40001d2	            0x772c	                            ja 0x4000200	      6465	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_18
0x40001d4	        0x66448900	                     mov word [rax], r8w	      6466	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_18
0x40001d8	            0x31f6	                            xor esi, esi	      6467	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_18
0x40001da	        0x4883c002	                              add rax, 2	      6454	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x40001de	          0x4839c3	                            cmp rbx, rax	      6454	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x40001e1	            0x7665	                           jbe 0x4000248	      6454	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x40001e3	          0x4c39d7	                            cmp rdi, r10	      6455	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_17
0x40001e6	            0x77d8	                            ja 0x40001c0	      6455	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_17
0x40001e8	        0x440fb702	                   movzx r8d, word [rdx]	      6460	decNumber.c	FUNCTION_5	IF_16	FOR_3	ELSE_3
0x40001ec	        0x4883c202	                              add rdx, 2	      6461	decNumber.c	FUNCTION_5	IF_16	FOR_3	ELSE_3
0x40001f0	        0x450fafc3	                          imul r8d, r11d	      6460	decNumber.c	FUNCTION_5	IF_16	FOR_3	ELSE_3
0x40001f4	          0x4101f0	                            add r8d, esi	      6460	decNumber.c	FUNCTION_5	IF_16	FOR_3	ELSE_3
0x40001f7	    0x4181f8e70300	                          cmp r8d, 0x3e7	      6465	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_18
0x40001fe	            0x76d4	                           jbe 0x40001d4	      6465	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_18
0x4000200	          0x4585c0	                           test r8d, r8d	      6490	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x4000203	     0xf884f010000	                            js 0x4000358	      6490	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x4000209	          0x4489c6	                            mov esi, r8d	      6491	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x400020c	          0xc1ee03	                              shr esi, 3	      6491	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x400020f	    0x69f689410000	                   imul esi, esi, 0x4189	      6491	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x4000215	          0xc1ee15	                           shr esi, 0x15	      6491	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x4000218	      0x6669cee803	                      imul cx, si, 0x3e8	      6492	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x400021d	          0x4129c8	                            sub r8d, ecx	      6492	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x4000220	    0x664181f8e703	                          cmp r8w, 0x3e7	      6494	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22	IF_23
0x4000226	     0xf8620010000	                           jbe 0x400034c	      6494	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22	IF_23
0x400022c	    0x664181e8e803	                          sub r8w, 0x3e8	      6496	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x4000232	        0x4883c002	                              add rax, 2	      6454	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x4000236	          0x83c601	                              add esi, 1	      6495	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x4000239	      0x66448940fe	                 mov word [rax - 2], r8w	      6496	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_22
0x400023e	          0x4839c3	                            cmp rbx, rax	      6454	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x4000241	            0x77a0	                            ja 0x40001e3	      6454	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x4000243	       0xf1f440000	                   nop dword [rax + rax]	      6454	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x4000248	          0x83fe00	                              cmp esi, 0	      6540	decNumber.c	FUNCTION_5	IF_28
0x400024b	            0x7409	                            je 0x4000256	      6540	decNumber.c	FUNCTION_5	IF_28
0x400024d	            0x7e71	                           jle 0x40002c0	      6541	decNumber.c	FUNCTION_5	IF_29
0x400024f	          0x668930	                      mov word [rax], si	      6542	decNumber.c	FUNCTION_5	IF_29
0x4000252	        0x4883c002	                              add rax, 2	      6544	decNumber.c	FUNCTION_5	IF_29
0x4000256	          0x4c29c8	                             sub rax, r9	      6544	decNumber.c	FUNCTION_5	IF_29
0x4000259	              0x5b	                                 pop rbx	      6568	decNumber.c	FUNCTION_5
0x400025a	          0x48d1e8	                              shr rax, 1	      6544	decNumber.c	FUNCTION_5	IF_29
0x400025d	              0x5d	                                 pop rbp	      6568	decNumber.c	FUNCTION_5
0x400025e	            0x415c	                                 pop r12	      6568	decNumber.c	FUNCTION_5
0x4000260	            0x415d	                                 pop r13	      6568	decNumber.c	FUNCTION_5
0x4000262	            0x415e	                                 pop r14	      6568	decNumber.c	FUNCTION_5
0x4000264	            0x415f	                                 pop r15	      6568	decNumber.c	FUNCTION_5
0x4000266	              0xc3	                                     ret	      6568	decNumber.c	FUNCTION_5
0x4000267	    0x660f1f840000	                    nop word [rax + rax]	      6568	decNumber.c	FUNCTION_5
0x4000270	    0x81eee7030000	                          sub esi, 0x3e7	      6418	decNumber.c	FUNCTION_5	FOR_2
0x4000276	      0x6681e9e803	                           sub cx, 0x3e8	      6419	decNumber.c	FUNCTION_5	FOR_2
0x400027b	        0x66418908	                       mov word [r8], cx	      6419	decNumber.c	FUNCTION_5	FOR_2
0x400027f	      0xe9a2feffff	                           jmp 0x4000126	      6419	decNumber.c	FUNCTION_5	FOR_2
0x4000284	         0xf1f4000	                         nop dword [rax]	      6419	decNumber.c	FUNCTION_5	FOR_2
0x4000288	    0x81c140420f00	                        add ecx, 0xf4240	      6413	decNumber.c	FUNCTION_5	FOR_2
0x400028e	            0x89ce	                            mov esi, ecx	      6414	decNumber.c	FUNCTION_5	FOR_2
0x4000290	          0xc1ee03	                              shr esi, 3	      6414	decNumber.c	FUNCTION_5	FOR_2
0x4000293	    0x69f689410000	                   imul esi, esi, 0x4189	      6414	decNumber.c	FUNCTION_5	FOR_2
0x4000299	          0xc1ee15	                           shr esi, 0x15	      6414	decNumber.c	FUNCTION_5	FOR_2
0x400029c	    0x664469fee803	                    imul r15w, si, 0x3e8	      6415	decNumber.c	FUNCTION_5	FOR_2
0x40002a2	          0x4429f9	                           sub ecx, r15d	      6415	decNumber.c	FUNCTION_5	FOR_2
0x40002a5	      0x6681f9e703	                           cmp cx, 0x3e7	      6417	decNumber.c	FUNCTION_5	FOR_2	IF_12
0x40002aa	            0x77c4	                            ja 0x4000270	      6417	decNumber.c	FUNCTION_5	FOR_2	IF_12
0x40002ac	        0x66418908	                       mov word [r8], cx	      6415	decNumber.c	FUNCTION_5	FOR_2
0x40002b0	    0x81eee8030000	                          sub esi, 0x3e8	      6416	decNumber.c	FUNCTION_5	FOR_2
0x40002b6	      0xe96bfeffff	                           jmp 0x4000126	      6416	decNumber.c	FUNCTION_5	FOR_2
0x40002bb	       0xf1f440000	                   nop dword [rax + rax]	      6416	decNumber.c	FUNCTION_5	FOR_2
0x40002c0	          0x4939d9	                             cmp r9, rbx	      6548	decNumber.c	FUNCTION_5	FOR_4
0x40002c3	          0x4c89ca	                             mov rdx, r9	      6548	decNumber.c	FUNCTION_5	FOR_4
0x40002c6	      0xb801000000	                              mov eax, 1	      6548	decNumber.c	FUNCTION_5	FOR_4
0x40002cb	            0x7211	                            jb 0x40002de	      6548	decNumber.c	FUNCTION_5	FOR_4
0x40002cd	            0xeb45	                           jmp 0x4000314	      6548	decNumber.c	FUNCTION_5	FOR_4
0x40002cf	              0x90	                                     nop	      6548	decNumber.c	FUNCTION_5	FOR_4
0x40002d0	          0x668902	                      mov word [rdx], ax	      6551	decNumber.c	FUNCTION_5	FOR_4	IF_30
0x40002d3	        0x4883c202	                              add rdx, 2	      6548	decNumber.c	FUNCTION_5	FOR_4
0x40002d7	            0x31c0	                            xor eax, eax	      6552	decNumber.c	FUNCTION_5	FOR_4	IF_30
0x40002d9	          0x4839d3	                            cmp rbx, rdx	      6548	decNumber.c	FUNCTION_5	FOR_4
0x40002dc	            0x7625	                           jbe 0x4000303	      6548	decNumber.c	FUNCTION_5	FOR_4
0x40002de	           0xfb70a	                   movzx ecx, word [rdx]	      6549	decNumber.c	FUNCTION_5	FOR_4
0x40002e1	       0x5e7030000	                          add eax, 0x3e7	      6549	decNumber.c	FUNCTION_5	FOR_4
0x40002e6	            0x29c8	                            sub eax, ecx	      6549	decNumber.c	FUNCTION_5	FOR_4
0x40002e8	      0x3de8030000	                          cmp eax, 0x3e8	      6550	decNumber.c	FUNCTION_5	FOR_4	IF_30
0x40002ed	            0x75e1	                           jne 0x40002d0	      6550	decNumber.c	FUNCTION_5	FOR_4	IF_30
0x40002ef	            0x31c0	                            xor eax, eax	      6555	decNumber.c	FUNCTION_5	FOR_4	ELSE_4
0x40002f1	        0x4883c202	                              add rdx, 2	      6548	decNumber.c	FUNCTION_5	FOR_4
0x40002f5	        0x668942fe	                  mov word [rdx - 2], ax	      6555	decNumber.c	FUNCTION_5	FOR_4	ELSE_4
0x40002f9	          0x4839d3	                            cmp rbx, rdx	      6548	decNumber.c	FUNCTION_5	FOR_4
0x40002fc	      0xb801000000	                              mov eax, 1	      6556	decNumber.c	FUNCTION_5	FOR_4	ELSE_4
0x4000301	            0x77db	                            ja 0x40002de	      6548	decNumber.c	FUNCTION_5	FOR_4
0x4000303	          0x4c89ca	                             mov rdx, r9	      6548	decNumber.c	FUNCTION_5	FOR_4
0x4000306	          0x48f7d2	                                 not rdx	      6548	decNumber.c	FUNCTION_5	FOR_4
0x4000309	          0x4801d3	                            add rbx, rdx	      6548	decNumber.c	FUNCTION_5	FOR_4
0x400030c	          0x48d1eb	                              shr rbx, 1	      6548	decNumber.c	FUNCTION_5	FOR_4
0x400030f	      0x498d545902	               lea rdx, [r9 + rbx*2 + 2]	      6548	decNumber.c	FUNCTION_5	FOR_4
0x4000314	            0x89c1	                            mov ecx, eax	      6563	decNumber.c	FUNCTION_5	IF_31
0x4000316	            0x29f1	                            sub ecx, esi	      6563	decNumber.c	FUNCTION_5	IF_31
0x4000318	          0x83f901	                              cmp ecx, 1	      6563	decNumber.c	FUNCTION_5	IF_31
0x400031b	            0x740c	                            je 0x4000329	      6563	decNumber.c	FUNCTION_5	IF_31
0x400031d	            0xf7d6	                                 not esi	      6564	decNumber.c	FUNCTION_5	IF_31
0x400031f	        0x4883c202	                              add rdx, 2	      6565	decNumber.c	FUNCTION_5	IF_31
0x4000323	             0x1c6	                            add esi, eax	      6564	decNumber.c	FUNCTION_5	IF_31
0x4000325	        0x668972fe	                  mov word [rdx - 2], si	      6564	decNumber.c	FUNCTION_5	IF_31
0x4000329	          0x4c89c8	                             mov rax, r9	      6567	decNumber.c	FUNCTION_5
0x400032c	          0x4829d0	                            sub rax, rdx	      6567	decNumber.c	FUNCTION_5
0x400032f	              0x5b	                                 pop rbx	      6568	decNumber.c	FUNCTION_5
0x4000330	          0x48d1e8	                              shr rax, 1	      6567	decNumber.c	FUNCTION_5
0x4000333	              0x5d	                                 pop rbp	      6568	decNumber.c	FUNCTION_5
0x4000334	            0x415c	                                 pop r12	      6568	decNumber.c	FUNCTION_5
0x4000336	            0x415d	                                 pop r13	      6568	decNumber.c	FUNCTION_5
0x4000338	            0x415e	                                 pop r14	      6568	decNumber.c	FUNCTION_5
0x400033a	            0x415f	                                 pop r15	      6568	decNumber.c	FUNCTION_5
0x400033c	              0xc3	                                     ret	      6568	decNumber.c	FUNCTION_5
0x400033d	           0xf1f00	                         nop dword [rax]	      6568	decNumber.c	FUNCTION_5
0x4000340	    0x81eee7030000	                          sub esi, 0x3e7	      6505	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x4000346	    0x664181e8e803	                          sub r8w, 0x3e8	      6506	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400034c	        0x66448900	                     mov word [rax], r8w	      6506	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x4000350	      0xe985feffff	                           jmp 0x40001da	      6506	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x4000355	           0xf1f00	                         nop dword [rax]	      6506	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x4000358	    0x4181c040420f	                        add r8d, 0xf4240	      6500	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400035f	          0x4489c6	                            mov esi, r8d	      6501	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x4000362	          0xc1ee03	                              shr esi, 3	      6501	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x4000365	    0x69f689410000	                   imul esi, esi, 0x4189	      6501	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400036b	          0xc1ee15	                           shr esi, 0x15	      6501	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400036e	      0x6669cee803	                      imul cx, si, 0x3e8	      6502	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x4000373	          0x4129c8	                            sub r8d, ecx	      6502	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x4000376	    0x664181f8e703	                          cmp r8w, 0x3e7	      6504	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_24
0x400037c	            0x77c2	                            ja 0x4000340	      6504	decNumber.c	FUNCTION_5	IF_16	FOR_3	IF_24
0x400037e	        0x66448900	                     mov word [rax], r8w	      6502	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x4000382	    0x81eee8030000	                          sub esi, 0x3e8	      6503	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x4000388	      0xe94dfeffff	                           jmp 0x40001da	      6503	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x400038d	          0x4839d8	                            cmp rax, rbx	      6454	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x4000390	     0xf83c0feffff	                           jae 0x4000256	      6454	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x4000396	            0x31f6	                            xor esi, esi	      6454	decNumber.c	FUNCTION_5	IF_16	FOR_3
0x4000398	      0xe91efeffff	                           jmp 0x40001bb	      6454	decNumber.c	FUNCTION_5	IF_16	FOR_3
decNumberMaxMag	ELSE,0:DO,0:CALL,3:IF,1:functions,0:SWITCH,0:WHILE,0:FOR,0	27
0x4003c30	              0x55	                                push rbp	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x4003c31	              0x53	                                push rbx	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x4003c32	    0x41b807000000	                              mov r8d, 7	      1563	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_1
0x4003c38	          0x4889fb	                            mov rbx, rdi	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x4003c3b	          0x4889cd	                            mov rbp, rcx	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x4003c3e	        0x4883ec18	                           sub rsp, 0x18	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x4003c42	      0x4c8d4c2404	                       lea r9, [rsp + 4]	      1563	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_1
0x4003c47	    0xc74424040000	                  mov dword [rsp + 4], 0	      1562	decNumber.c	FUNCTION_68	FUNCTION_24
0x4003c4f	    0x64488b042528	                mov rax, qword fs:[0x28]	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x4003c58	      0x4889442408	                mov qword [rsp + 8], rax	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x4003c5d	            0x31c0	                            xor eax, eax	      1561	decNumber.c	FUNCTION_68	FUNCTION_24
0x4003c5f	      0xe8acf9ffff	                   call sym.decCompareOp	      1563	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_1
0x4003c64	        0x8b742404	                mov esi, dword [rsp + 4]	      1564	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_2
0x4003c68	            0x85f6	                           test esi, esi	      1564	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_2
0x4003c6a	            0x740b	                            je 0x4003c77	      1564	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_2
0x4003c6c	          0x4889ea	                            mov rdx, rbp	      1564	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_2
0x4003c6f	          0x4889df	                            mov rdi, rbx	      1564	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_2
0x4003c72	      0xe859cbffff	                      call sym.decStatus	      1564	decNumber.c	FUNCTION_68	FUNCTION_24	CALL_2
0x4003c77	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
0x4003c7c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
0x4003c85	          0x4889d8	                            mov rax, rbx	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
0x4003c88	            0x7507	                           jne 0x4003c91	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
0x4003c8a	        0x4883c418	                           add rsp, 0x18	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
0x4003c8e	              0x5b	                                 pop rbx	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
0x4003c8f	              0x5d	                                 pop rbp	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
0x4003c90	              0xc3	                                     ret	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
0x4003c91	      0xe800000000	                          call 0x4003c96	      1569	decNumber.c	FUNCTION_68	FUNCTION_24
decNumberQuantize	ELSE,0:DO,0:CALL,2:IF,1:functions,0:SWITCH,0:WHILE,0:FOR,0	27
0x4009a80	              0x55	                                push rbp	      2288	decNumber.c	FUNCTION_68	FUNCTION_35
0x4009a81	              0x53	                                push rbx	      2288	decNumber.c	FUNCTION_68	FUNCTION_35
0x4009a82	    0x41b801000000	                              mov r8d, 1	      2290	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_1
0x4009a88	          0x4889fb	                            mov rbx, rdi	      2288	decNumber.c	FUNCTION_68	FUNCTION_35
0x4009a8b	          0x4889cd	                            mov rbp, rcx	      2288	decNumber.c	FUNCTION_68	FUNCTION_35
0x4009a8e	        0x4883ec18	                           sub rsp, 0x18	      2288	decNumber.c	FUNCTION_68	FUNCTION_35
0x4009a92	      0x4c8d4c2404	                       lea r9, [rsp + 4]	      2290	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_1
0x4009a97	    0xc74424040000	                  mov dword [rsp + 4], 0	      2289	decNumber.c	FUNCTION_68	FUNCTION_35
0x4009a9f	    0x64488b042528	                mov rax, qword fs:[0x28]	      2288	decNumber.c	FUNCTION_68	FUNCTION_35
0x4009aa8	      0x4889442408	                mov qword [rsp + 8], rax	      2288	decNumber.c	FUNCTION_68	FUNCTION_35
0x4009aad	            0x31c0	                            xor eax, eax	      2288	decNumber.c	FUNCTION_68	FUNCTION_35
0x4009aaf	      0xe89cfcffff	     call sym.decQuantizeOp.constprop.10	      2290	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_1
0x4009ab4	        0x8b742404	                mov esi, dword [rsp + 4]	      2291	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_2
0x4009ab8	            0x85f6	                           test esi, esi	      2291	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_2
0x4009aba	            0x740b	                            je 0x4009ac7	      2291	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_2
0x4009abc	          0x4889ea	                            mov rdx, rbp	      2291	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_2
0x4009abf	          0x4889df	                            mov rdi, rbx	      2291	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_2
0x4009ac2	      0xe8096dffff	                      call sym.decStatus	      2291	decNumber.c	FUNCTION_68	FUNCTION_35	CALL_2
0x4009ac7	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2293	decNumber.c	FUNCTION_68	FUNCTION_35
0x4009acc	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2293	decNumber.c	FUNCTION_68	FUNCTION_35
0x4009ad5	          0x4889d8	                            mov rax, rbx	      2293	decNumber.c	FUNCTION_68	FUNCTION_35
0x4009ad8	            0x7507	                           jne 0x4009ae1	      2293	decNumber.c	FUNCTION_68	FUNCTION_35
0x4009ada	        0x4883c418	                           add rsp, 0x18	      2293	decNumber.c	FUNCTION_68	FUNCTION_35
0x4009ade	              0x5b	                                 pop rbx	      2293	decNumber.c	FUNCTION_68	FUNCTION_35
0x4009adf	              0x5d	                                 pop rbp	      2293	decNumber.c	FUNCTION_68	FUNCTION_35
0x4009ae0	              0xc3	                                     ret	      2293	decNumber.c	FUNCTION_68	FUNCTION_35
0x4009ae1	      0xe800000000	                          call 0x4009ae6	      2293	decNumber.c	FUNCTION_68	FUNCTION_35
decNumberCopyNegate	ELSE,0:DO,0:CALL,2:IF,1:functions,0:SWITCH,0:WHILE,0:FOR,0	4
0x4009ca0	      0xe800000000	                          call 0x4009ca5	      3411	decNumber.c	FUNCTION_68	FUNCTION_54	CALL_2
0x4009ca5	        0x80470880	                add byte [rdi + 8], 0x80	      3412	decNumber.c	FUNCTION_68	FUNCTION_54
0x4009ca9	          0x4889f8	                            mov rax, rdi	      3414	decNumber.c	FUNCTION_68	FUNCTION_54
0x4009cac	              0xc3	                                     ret	      3414	decNumber.c	FUNCTION_68	FUNCTION_54
decNumberCompareTotalMag	ELSE,0:DO,1:CALL,11:IF,8:functions,0:SWITCH,0:WHILE,0:FOR,0	130
0x4005b20	            0x4157	                                push r15	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005b22	            0x4156	                                push r14	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005b24	          0x4989ce	                            mov r14, rcx	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005b27	            0x4155	                                push r13	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005b29	            0x4154	                                push r12	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005b2b	          0x4531ed	                          xor r13d, r13d	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005b2e	              0x55	                                push rbp	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005b2f	              0x53	                                push rbx	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005b30	          0x4989fc	                            mov r12, rdi	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005b33	          0x4889f5	                            mov rbp, rsi	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005b36	          0x4889d3	                            mov rbx, rdx	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005b39	        0x4883ec78	                           sub rsp, 0x78	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005b3d	    0x64488b042528	                mov rax, qword fs:[0x28]	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005b46	      0x4889442468	             mov qword [rsp + 0x68], rax	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005b4b	            0x31c0	                            xor eax, eax	       927	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005b4d	        0x807e0800	                   cmp byte [rsi + 8], 0	       942	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_4
0x4005b51	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       928	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005b59	     0xf88e9000000	                            js 0x4005c48	       942	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_4
0x4005b5f	          0x4531ff	                          xor r15d, r15d	       933	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005b62	        0x807b0800	                   cmp byte [rbx + 8], 0	       956	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_7
0x4005b66	            0x7868	                            js 0x4005bd0	       956	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_7
0x4005b68	      0x4c8d4c240c	                     lea r9, [rsp + 0xc]	       970	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	CALL_10
0x4005b6d	          0x4889da	                            mov rdx, rbx	       970	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	CALL_10
0x4005b70	    0x41b804000000	                              mov r8d, 4	       970	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	CALL_10
0x4005b76	          0x4c89f1	                            mov rcx, r14	       970	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	CALL_10
0x4005b79	          0x4889ee	                            mov rsi, rbp	       970	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	CALL_10
0x4005b7c	          0x4c89e7	                            mov rdi, r12	       970	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	CALL_10
0x4005b7f	      0xe88cdaffff	                   call sym.decCompareOp	       970	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	CALL_10
0x4005b84	        0x8b5c240c	              mov ebx, dword [rsp + 0xc]	       970	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	CALL_10
0x4005b88	          0x4c89ef	                            mov rdi, r13	       973	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005b8b	      0xe800000000	                          call 0x4005b90	       973	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005b90	          0x4c89ff	                            mov rdi, r15	       974	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005b93	      0xe800000000	                          call 0x4005b98	       974	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005b98	            0x85db	                           test ebx, ebx	       975	decNumber.c	FUNCTION_68	FUNCTION_14	CALL_11
0x4005b9a	     0xf8590000000	                           jne 0x4005c30	       975	decNumber.c	FUNCTION_68	FUNCTION_14	CALL_11
0x4005ba0	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005ba5	    0x644833342528	                xor rsi, qword fs:[0x28]	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005bae	          0x4c89e0	                            mov rax, r12	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005bb1	     0xf8549010000	                           jne 0x4005d00	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005bb7	        0x4883c478	                           add rsp, 0x78	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005bbb	              0x5b	                                 pop rbx	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005bbc	              0x5d	                                 pop rbp	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005bbd	            0x415c	                                 pop r12	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005bbf	            0x415d	                                 pop r13	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005bc1	            0x415e	                                 pop r14	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005bc3	            0x415f	                                 pop r15	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005bc5	              0xc3	                                     ret	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005bc6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       977	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005bd0	          0x486303	                 movsxd rax, dword [rbx]	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4005bd3	          0x83f831	                           cmp eax, 0x31	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4005bd6	     0xf8fbc000000	                            jg 0x4005c98	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4005bdc	     0xfb680000000	                   movzx eax, byte [rax]	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4005be3	        0x8d7c000a	              lea edi, [rax + rax + 0xa]	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4005be7	          0x83ff24	                           cmp edi, 0x24	       959	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6
0x4005bea	     0xf86c8000000	                           jbe 0x4005cb8	       959	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6
0x4005bf0	      0xe800000000	                          call 0x4005bf5	       960	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6
0x4005bf5	          0x4885c0	                           test rax, rax	       961	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6	IF_7
0x4005bf8	          0x4989c7	                            mov r15, rax	       960	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6
0x4005bfb	          0x4989c2	                            mov r10, rax	       960	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6
0x4005bfe	     0xf84e4000000	                            je 0x4005ce8	       961	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6	IF_7
0x4005c04	          0x4889de	                            mov rsi, rbx	       966	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_9
0x4005c07	          0x4c89d7	                            mov rdi, r10	       966	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_9
0x4005c0a	      0xe800000000	                          call 0x4005c0f	       966	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_9
0x4005c0f	      0x418062087f	                and byte [r10 + 8], 0x7f	       967	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5
0x4005c14	          0x4c89d3	                            mov rbx, r10	       967	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5
0x4005c17	      0xe94cffffff	                           jmp 0x4005b68	       967	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5
0x4005c1c	         0xf1f4000	                         nop dword [rax]	       967	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5
0x4005c20	    0xc744240c1000	            mov dword [rsp + 0xc], 0x10 	       948	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3	IF_4
0x4005c28	      0xbb10000000	                           mov ebx, 0x10	       948	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3	IF_4
0x4005c2d	           0xf1f00	                         nop dword [rax]	       948	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3	IF_4
0x4005c30	          0x4c89f2	                            mov rdx, r14	       975	decNumber.c	FUNCTION_68	FUNCTION_14	CALL_11
0x4005c33	            0x89de	                            mov esi, ebx	       975	decNumber.c	FUNCTION_68	FUNCTION_14	CALL_11
0x4005c35	          0x4c89e7	                            mov rdi, r12	       975	decNumber.c	FUNCTION_68	FUNCTION_14	CALL_11
0x4005c38	      0xe893abffff	                      call sym.decStatus	       975	decNumber.c	FUNCTION_68	FUNCTION_14	CALL_11
0x4005c3d	      0xe95effffff	                           jmp 0x4005ba0	       975	decNumber.c	FUNCTION_68	FUNCTION_14	CALL_11
0x4005c42	    0x660f1f440000	                    nop word [rax + rax]	       975	decNumber.c	FUNCTION_68	FUNCTION_14	CALL_11
0x4005c48	          0x486306	                 movsxd rax, dword [rsi]	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4005c4b	          0x83f831	                           cmp eax, 0x31	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4005c4e	            0x7e78	                           jle 0x4005cc8	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4005c50	          0x8d4802	                      lea ecx, [rax + 2]	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4005c53	      0xba56555555	                     mov edx, 0x55555556	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4005c58	            0x89c8	                            mov eax, ecx	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4005c5a	            0xf7ea	                                imul edx	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4005c5c	            0x89c8	                            mov eax, ecx	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4005c5e	          0xc1f81f	                           sar eax, 0x1f	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4005c61	            0x29c2	                            sub edx, eax	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4005c63	        0x8d7c120a	              lea edi, [rdx + rdx + 0xa]	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4005c67	          0x83ff24	                           cmp edi, 0x24	       945	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3
0x4005c6a	            0x766c	                           jbe 0x4005cd8	       945	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3
0x4005c6c	      0xe800000000	                          call 0x4005c71	       946	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3
0x4005c71	          0x4885c0	                           test rax, rax	       947	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3	IF_4
0x4005c74	          0x4989c5	                            mov r13, rax	       946	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3
0x4005c77	          0x4989c2	                            mov r10, rax	       946	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3
0x4005c7a	            0x74a4	                            je 0x4005c20	       947	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3	IF_4
0x4005c7c	          0x4889ee	                            mov rsi, rbp	       952	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_6
0x4005c7f	          0x4c89d7	                            mov rdi, r10	       952	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_6
0x4005c82	      0xe800000000	                          call 0x4005c87	       952	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_6
0x4005c87	      0x418062087f	                and byte [r10 + 8], 0x7f	       953	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2
0x4005c8c	          0x4c89d5	                            mov rbp, r10	       953	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2
0x4005c8f	      0xe9cbfeffff	                           jmp 0x4005b5f	       953	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2
0x4005c94	         0xf1f4000	                         nop dword [rax]	       953	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2
0x4005c98	          0x8d4802	                      lea ecx, [rax + 2]	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4005c9b	      0xba56555555	                     mov edx, 0x55555556	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4005ca0	            0x89c8	                            mov eax, ecx	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4005ca2	            0xf7ea	                                imul edx	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4005ca4	            0x89c8	                            mov eax, ecx	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4005ca6	          0xc1f81f	                           sar eax, 0x1f	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4005ca9	            0x29c2	                            sub edx, eax	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4005cab	        0x8d7c120a	              lea edi, [rdx + rdx + 0xa]	       958	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	CALL_8
0x4005caf	          0x83ff24	                           cmp edi, 0x24	       959	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6
0x4005cb2	     0xf8738ffffff	                            ja 0x4005bf0	       959	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6
0x4005cb8	      0x4c8d542440	                   lea r10, [rsp + 0x40]	       957	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5
0x4005cbd	          0x4531ff	                          xor r15d, r15d	       933	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005cc0	      0xe93fffffff	                           jmp 0x4005c04	       933	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005cc5	           0xf1f00	                         nop dword [rax]	       933	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005cc8	     0xfb680000000	                   movzx eax, byte [rax]	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4005ccf	        0x8d7c000a	              lea edi, [rax + rax + 0xa]	       944	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	CALL_5
0x4005cd3	          0x83ff24	                           cmp edi, 0x24	       945	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3
0x4005cd6	            0x7794	                            ja 0x4005c6c	       945	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2	IF_3
0x4005cd8	      0x4c8d542410	                   lea r10, [rsp + 0x10]	       943	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_2
0x4005cdd	          0x4531ed	                          xor r13d, r13d	       931	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005ce0	            0xeb9a	                           jmp 0x4005c7c	       931	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005ce2	    0x660f1f440000	                    nop word [rax + rax]	       931	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005ce8	        0x8b5c240c	              mov ebx, dword [rsp + 0xc]	       962	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6	IF_7
0x4005cec	          0x4c89ef	                            mov rdi, r13	       973	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005cef	          0x83cb10	                            or ebx, 0x10	       962	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6	IF_7
0x4005cf2	        0x895c240c	              mov dword [rsp + 0xc], ebx	       962	decNumber.c	FUNCTION_68	FUNCTION_14	DO_1	IF_5	IF_6	IF_7
0x4005cf6	      0xe800000000	                          call 0x4005cfb	       973	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005cfb	      0xe930ffffff	                           jmp 0x4005c30	       973	decNumber.c	FUNCTION_68	FUNCTION_14
0x4005d00	      0xe800000000	                          call 0x4005d05	       977	decNumber.c	FUNCTION_68	FUNCTION_14
decNumberLn	ELSE,0:DO,1:CALL,7:IF,7:functions,0:SWITCH,0:WHILE,0:FOR,0	38
0x4007f80	              0x55	                                push rbp	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x4007f81	              0x53	                                push rbx	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x4007f82	          0x4989f1	                             mov r9, rsi	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x4007f85	          0x4889d5	                            mov rbp, rdx	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x4007f88	          0x4889fb	                            mov rbx, rdi	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x4007f8b	          0x4c89cf	                             mov rdi, r9	      1280	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1
0x4007f8e	        0x4883ec18	                           sub rsp, 0x18	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x4007f92	          0x4889ee	                            mov rsi, rbp	      1280	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1
0x4007f95	      0x488d542404	                      lea rdx, [rsp + 4]	      1280	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1
0x4007f9a	    0xc74424040000	                  mov dword [rsp + 4], 0	      1269	decNumber.c	FUNCTION_68	FUNCTION_20
0x4007fa2	    0x64488b042528	                mov rax, qword fs:[0x28]	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x4007fab	      0x4889442408	                mov qword [rsp + 8], rax	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x4007fb0	            0x31c0	                            xor eax, eax	      1268	decNumber.c	FUNCTION_68	FUNCTION_20
0x4007fb2	      0xe8e984ffff	                   call sym.decCheckMath	      1280	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1
0x4007fb7	            0x85c0	                           test eax, eax	      1280	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1
0x4007fb9	            0x7435	                            je 0x4007ff0	      1280	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1
0x4007fbb	        0x8b742404	                mov esi, dword [rsp + 4]	      1302	decNumber.c	FUNCTION_68	FUNCTION_20	CALL_6
0x4007fbf	            0x85f6	                           test esi, esi	      1302	decNumber.c	FUNCTION_68	FUNCTION_20	CALL_6
0x4007fc1	            0x740b	                            je 0x4007fce	      1302	decNumber.c	FUNCTION_68	FUNCTION_20	CALL_6
0x4007fc3	          0x4889ea	                            mov rdx, rbp	      1302	decNumber.c	FUNCTION_68	FUNCTION_20	CALL_6
0x4007fc6	          0x4889df	                            mov rdi, rbx	      1302	decNumber.c	FUNCTION_68	FUNCTION_20	CALL_6
0x4007fc9	      0xe80288ffff	                      call sym.decStatus	      1302	decNumber.c	FUNCTION_68	FUNCTION_20	CALL_6
0x4007fce	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
0x4007fd3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
0x4007fdc	          0x4889d8	                            mov rax, rbx	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
0x4007fdf	            0x7524	                           jne 0x4008005	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
0x4007fe1	        0x4883c418	                           add rsp, 0x18	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
0x4007fe5	              0x5b	                                 pop rbx	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
0x4007fe6	              0x5d	                                 pop rbp	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
0x4007fe7	              0xc3	                                     ret	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
0x4007fe8	     0xf1f84000000	                   nop dword [rax + rax]	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
0x4007ff0	      0x488d4c2404	                      lea rcx, [rsp + 4]	      1295	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1	CALL_5
0x4007ff5	          0x4889ea	                            mov rdx, rbp	      1295	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1	CALL_5
0x4007ff8	          0x4c89ce	                             mov rsi, r9	      1295	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1	CALL_5
0x4007ffb	          0x4889df	                            mov rdi, rbx	      1295	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1	CALL_5
0x4007ffe	      0xe81df8ffff	                        call sym.decLnOp	      1295	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1	CALL_5
0x4008003	            0xebb6	                           jmp 0x4007fbb	      1295	decNumber.c	FUNCTION_68	FUNCTION_20	IF_2	DO_1	CALL_5
0x4008005	      0xe800000000	                          call 0x400800a	      1307	decNumber.c	FUNCTION_68	FUNCTION_20
decExpOp	ELSE,3:DO,1:CALL,42:IF,27:functions,0:SWITCH,0:WHILE,0:FOR,2	464
0x4006f30	            0x4157	                                push r15	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006f32	            0x4156	                                push r14	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006f34	            0x4155	                                push r13	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006f36	            0x4154	                                push r12	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006f38	          0x4989d5	                            mov r13, rdx	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006f3b	              0x55	                                push rbp	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006f3c	              0x53	                                push rbx	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006f3d	          0x4989f4	                            mov r12, rsi	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006f40	          0x4889fb	                            mov rbx, rdi	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006f43	          0x4889cd	                            mov rbp, rcx	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006f46	    0x4881ece80100	                          sub rsp, 0x1e8	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006f4d	    0x64488b042528	                mov rax, qword fs:[0x28]	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006f56	    0x48898424d801	            mov qword [rsp + 0x1d8], rax	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006f5e	            0x31c0	                            xor eax, eax	      5222	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006f60	         0xfb64608	               movzx eax, byte [rsi + 8]	      5262	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2
0x4006f64	    0xc74424380000	               mov dword [rsp + 0x38], 0	      5223	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006f6c	            0xa870	                           test al, 0x70	      5262	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2
0x4006f6e	            0x7470	                            je 0x4006fe0	      5262	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2
0x4006f70	            0xa840	                           test al, 0x40	      5263	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	IF_3	CALL_6
0x4006f72	     0xf8478010000	                            je 0x40070f0	      5263	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	IF_3	CALL_6
0x4006f78	            0x84c0	                             test al, al	      5264	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	IF_3	IF_4	CALL_7
0x4006f7a	     0xf88a0010000	                            js 0x4007120	      5264	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	IF_3	IF_4	CALL_7
0x4006f80	      0xe800000000	                          call 0x4006f85	      5266	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	IF_3	CALL_9
0x4006f85	          0x4531f6	                          xor r14d, r14d	      5244	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006f88	    0x48c704240000	                      mov qword [rsp], 0	      5248	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006f90	    0x48c744240800	                  mov qword [rsp + 8], 0	      5236	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006f99	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5486	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006f9e	      0xe800000000	                          call 0x4006fa3	      5486	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006fa3	        0x488b3c24	                    mov rdi, qword [rsp]	      5487	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006fa7	      0xe800000000	                          call 0x4006fac	      5487	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006fac	          0x4c89f7	                            mov rdi, r14	      5488	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006faf	      0xe800000000	                          call 0x4006fb4	      5488	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006fb4	    0x488b8c24d801	           mov rcx, qword [rsp + 0x1d8] 	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006fbc	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006fc5	          0x4889d8	                            mov rax, rbx	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006fc8	     0xf85b2070000	                           jne 0x4007780	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006fce	    0x4881c4e80100	                          add rsp, 0x1e8	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006fd5	              0x5b	                                 pop rbx	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006fd6	              0x5d	                                 pop rbp	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006fd7	            0x415c	                                 pop r12	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006fd9	            0x415d	                                 pop r13	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006fdb	            0x415e	                                 pop r14	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006fdd	            0x415f	                                 pop r15	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006fdf	              0xc3	                                     ret	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
0x4006fe0	      0x66837e0a00	                 cmp word [rsi + 0xa], 0	      5271	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5	CALL_11
0x4006fe5	     0xf84c5000000	                            je 0x40070b0	      5271	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5	CALL_11
0x4006feb	    0x41be04000000	                             mov r14d, 4	      5291	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x4006ff1	            0x84c0	                             test al, al	      5293	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_14
0x4006ff3	    0xc68424b80000	                mov byte [rsp + 0xb8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4006ffb	    0xc78424b00000	               mov dword [rsp + 0xb0], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007006	    0x664489b424ba	             mov word [rsp + 0xba], r14w	      5291	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400700f	        0x418b5500	                    mov edx, dword [r13]	      5292	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x4007013	     0xf8837010000	                            js 0x4007150	      5293	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_14
0x4007019	            0xf7da	                                 neg edx	      5292	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400701b	    0x899424b40000	             mov dword [rsp + 0xb4], edx	      5292	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x4007022	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      5294	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_15
0x400702a	      0xba01000000	                              mov edx, 1	      5294	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_15
0x400702f	          0x4c89e6	                            mov rsi, r12	      5294	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_15
0x4007032	      0xe869a7ffff	                     call sym.decCompare	      5294	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_15
0x4007037	      0x3d00000080	                     cmp eax, 0x80000000	      5295	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_7
0x400703c	     0xf841e010000	                            je 0x4007160	      5295	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_7
0x4007042	            0x85c0	                           test eax, eax	      5298	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x4007044	     0xf8836010000	                            js 0x4007180	      5298	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400704a	        0x418b5500	                    mov edx, dword [r13]	      5299	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400704e	    0x41bb01000000	                             mov r11d, 1	      5301	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x4007054	        0xc6430800	                   mov byte [rbx + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007058	    0xc74304000000	                  mov dword [rbx + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400705f	    0xc70301000000	                      mov dword [rbx], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007065	      0xb801000000	                              mov eax, 1	      6684	decNumber.c	FUNCTION_8	IF_1
0x400706a	      0x6644895b0a	              mov word [rbx + 0xa], r11w	      5301	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x400706f	          0x83ea01	                              sub edx, 1	      6684	decNumber.c	FUNCTION_8	IF_1
0x4007072	          0x4189d4	                           mov r12d, edx	      6684	decNumber.c	FUNCTION_8	IF_1
0x4007075	            0x740e	                            je 0x4007085	      6684	decNumber.c	FUNCTION_8	IF_1
0x4007077	        0x488d7b0a	                    lea rdi, [rbx + 0xa]	      5302	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8	CALL_17
0x400707b	      0xbe01000000	                              mov esi, 1	      5302	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8	CALL_17
0x4007080	      0xe8cb9cffff	          call sym.decShiftToMost.part.0	      5302	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8	CALL_17
0x4007085	          0x4489e2	                           mov edx, r12d	      5303	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x4007088	            0x8903	                    mov dword [rbx], eax	      5302	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8	CALL_17
0x400708a	    0x48c704240000	                      mov qword [rsp], 0	      5248	decNumber.c	FUNCTION_68	FUNCTION_67
0x4007092	            0xf7da	                                 neg edx	      5303	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x4007094	          0x4531f6	                          xor r14d, r14d	      5244	decNumber.c	FUNCTION_68	FUNCTION_67
0x4007097	    0x48c744240800	                  mov qword [rsp + 8], 0	      5236	decNumber.c	FUNCTION_68	FUNCTION_67
0x40070a0	          0x895304	                mov dword [rbx + 4], edx	      5303	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x40070a3	    0x814d00200800	                   or dword [rbp], 0x820	      5304	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x40070aa	      0xe9eafeffff	                           jmp 0x4006f99	      5305	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x40070af	              0x90	                                     nop	      5305	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_8
0x40070b0	          0x833e01	                      cmp dword [rsi], 1	      5271	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5	CALL_11
0x40070b3	     0xf8532ffffff	                           jne 0x4006feb	      5271	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5	CALL_11
0x40070b9	    0x41bf01000000	                             mov r15d, 1	      5273	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5
0x40070bf	        0xc6470800	                   mov byte [rdi + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40070c3	    0xc74704000000	                  mov dword [rdi + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40070ca	    0xc70701000000	                      mov dword [rdi], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40070d0	      0x6644897f0a	              mov word [rdi + 0xa], r15w	      5273	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5
0x40070d5	          0x4531f6	                          xor r14d, r14d	      5244	decNumber.c	FUNCTION_68	FUNCTION_67
0x40070d8	    0x48c704240000	                      mov qword [rsp], 0	      5248	decNumber.c	FUNCTION_68	FUNCTION_67
0x40070e0	    0x48c744240800	                  mov qword [rsp + 8], 0	      5236	decNumber.c	FUNCTION_68	FUNCTION_67
0x40070e9	      0xe9abfeffff	                           jmp 0x4006f99	      5274	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5
0x40070ee	            0x6690	                                     nop	      5274	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_5
0x40070f0	          0x4989c8	                             mov r8, rcx	      5268	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	CALL_10
0x40070f3	          0x4889d1	                            mov rcx, rdx	      5268	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	CALL_10
0x40070f6	            0x31d2	                            xor edx, edx	      5268	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	CALL_10
0x40070f8	      0xe8f3c2ffff	                 call sym.decNaNs.isra.6	      5268	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_2	CALL_10
0x40070fd	          0x4531f6	                          xor r14d, r14d	      5244	decNumber.c	FUNCTION_68	FUNCTION_67
0x4007100	    0x48c704240000	                      mov qword [rsp], 0	      5248	decNumber.c	FUNCTION_68	FUNCTION_67
0x4007108	    0x48c744240800	                  mov qword [rsp + 8], 0	      5236	decNumber.c	FUNCTION_68	FUNCTION_67
0x4007111	      0xe983feffff	                           jmp 0x4006f99	      5236	decNumber.c	FUNCTION_68	FUNCTION_67
0x4007116	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5236	decNumber.c	FUNCTION_68	FUNCTION_67
0x4007120	            0x31c0	                            xor eax, eax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007122	        0xc6470800	                   mov byte [rdi + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007126	    0xc74704000000	                  mov dword [rdi + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x400712d	    0xc70701000000	                      mov dword [rdi], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007133	        0x6689470a	                mov word [rdi + 0xa], ax	      3591	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007137	          0x4531f6	                          xor r14d, r14d	      5244	decNumber.c	FUNCTION_68	FUNCTION_67
0x400713a	    0x48c704240000	                      mov qword [rsp], 0	      5248	decNumber.c	FUNCTION_68	FUNCTION_67
0x4007142	    0x48c744240800	                  mov qword [rsp + 8], 0	      5236	decNumber.c	FUNCTION_68	FUNCTION_67
0x400714b	      0xe949feffff	                           jmp 0x4006f99	      5236	decNumber.c	FUNCTION_68	FUNCTION_67
0x4007150	            0xf7d2	                                 not edx	      5293	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_14
0x4007152	    0x899424b40000	             mov dword [rsp + 0xb4], edx	      5293	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_14
0x4007159	      0xe9c4feffff	                           jmp 0x4007022	      5293	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_14
0x400715e	            0x6690	                                     nop	      5293	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_14
0x4007160	        0x834d0010	                    or dword [rbp], 0x10	      5296	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_7
0x4007164	    0x48c704240000	                      mov qword [rsp], 0	      5248	decNumber.c	FUNCTION_68	FUNCTION_67
0x400716c	          0x4531f6	                          xor r14d, r14d	      5244	decNumber.c	FUNCTION_68	FUNCTION_67
0x400716f	    0x48c744240800	                  mov qword [rsp + 8], 0	      5236	decNumber.c	FUNCTION_68	FUNCTION_67
0x4007178	      0xe91cfeffff	                           jmp 0x4006f99	      5297	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_7
0x400717d	           0xf1f00	                         nop dword [rax]	      5297	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_7
0x4007180	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      5309	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_18
0x4007185	      0xbe40000000	                           mov esi, 0x40	      5309	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_18
0x400718a	      0xe800000000	                          call 0x400718f	      5309	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_18
0x400718f	        0x418b4504	                mov eax, dword [r13 + 4]	      5311	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x4007193	      0x418b7c2404	                mov edi, dword [r12 + 4]	      5317	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x4007198	      0xc644245800	                mov byte [rsp + 0x58], 0	      5313	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400719d	        0x89442444	             mov dword [rsp + 0x44], eax	      5311	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x40071a1	        0x418b4508	                mov eax, dword [r13 + 8]	      5312	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x40071a5	        0x89442448	             mov dword [rsp + 0x48], eax	      5312	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x40071a9	        0x49630424	                 movsxd rax, dword [r12]	      5317	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x40071ad	          0x8d1407	                    lea edx, [rdi + rax]	      5317	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x40071b0	          0x83fa08	                              cmp edx, 8	      5323	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9
0x40071b3	     0xf8ed7010000	                           jle 0x4007390	      5323	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9
0x40071b9	    0x41807c240800	                   cmp byte [r12 + 8], 0	      5329	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9	CALL_20
0x40071bf	    0x41ba02000000	                             mov r10d, 2	      5328	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9
0x40071c5	    0xc68424680100	               mov byte [rsp + 0x168], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40071cd	    0xc78424640100	              mov dword [rsp + 0x164], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40071d8	    0xc78424600100	              mov dword [rsp + 0x160], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40071e3	    0x66448994246a	            mov word [rsp + 0x16a], r10w	      5328	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9
0x40071ec	     0xf8861050000	                            js 0x4007753	      5329	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9	CALL_20
0x40071f2	    0x488db4246001	                  lea rsi, [rsp + 0x160]	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x40071fa	    0x4c8dbc241001	                  lea r15, [rsp + 0x110]	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x4007202	      0xb80b000000	                            mov eax, 0xb	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x4007207	    0x48c704240000	                      mov qword [rsp], 0	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400720f	          0x4531f6	                          xor r14d, r14d	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x4007212	    0x48c744240800	                  mov qword [rsp + 8], 0	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400721b	      0x4889742418	             mov qword [rsp + 0x18], rsi	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x4007220	    0xc74424100800	               mov dword [rsp + 0x10], 8	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x4007228	      0x4863542410	         movsxd rdx, dword [rsp + 0x10] 	      5455	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400722d	        0x89442440	             mov dword [rsp + 0x40], eax	      5456	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x4007231	    0x41b901000000	                              mov r9d, 1	      5461	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2
0x4007237	      0xb801000000	                              mov eax, 1	      5460	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	CALL_37
0x400723c	      0x41c6470800	                   mov byte [r15 + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007241	    0x41c747040000	                  mov dword [r15 + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007249	      0x664189470a	                mov word [r15 + 0xa], ax	      5460	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	CALL_37
0x400724e	    0x41c707010000	                      mov dword [r15], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007255	      0x48895c2410	             mov qword [rsp + 0x10], rbx	      5453	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400725a	          0x8b4500	                    mov eax, dword [rbp]	      5453	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400725d	          0x4c89fb	                            mov rbx, r15	      5453	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x4007260	    0x448b24950000	                 mov r12d, dword [rdx*4]	      5455	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x4007268	          0x4589cf	                           mov r15d, r9d	      5453	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400726b	            0x31d2	                            xor edx, edx	      5453	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400726d	            0xeb05	                           jmp 0x4007274	      5453	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400726f	              0x90	                                     nop	      5453	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x4007270	        0x4183c701	                             add r15d, 1	      5461	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2
0x4007274	          0xf6c422	                           test ah, 0x22	      5463	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_22
0x4007277	            0x7417	                            je 0x4007290	      5463	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_22
0x4007279	          0xf6c402	                              test ah, 2	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x400727c	            0x7562	                           jne 0x40072e0	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x400727e	      0x66837b0a00	                 cmp word [rbx + 0xa], 0	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x4007283	            0x750b	                           jne 0x4007290	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x4007285	          0x833b01	                      cmp dword [rbx], 1	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x4007288	     0xf84c2000000	                            je 0x4007350	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x400728e	            0x6690	                                     nop	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x4007290	          0x4501e4	                          add r12d, r12d	      5466	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24
0x4007293	            0x782b	                            js 0x40072c0	      5466	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24
0x4007295	        0x4183ff1f	                          cmp r15d, 0x1f	      5470	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_25
0x4007299	            0x7445	                            je 0x40072e0	      5470	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_25
0x400729b	            0x85d2	                           test edx, edx	      5471	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_26
0x400729d	            0x74d1	                            je 0x4007270	      5471	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_26
0x400729f	      0x488d4c2440	                   lea rcx, [rsp + 0x40]	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x40072a4	          0x4889da	                            mov rdx, rbx	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x40072a7	          0x4989e8	                             mov r8, rbp	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x40072aa	          0x4889de	                            mov rsi, rbx	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x40072ad	          0x4889df	                            mov rdi, rbx	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x40072b0	      0xe8cbcaffff	                  call sym.decMultiplyOp	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x40072b5	          0x8b4500	                    mov eax, dword [rbp]	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x40072b8	      0xba01000000	                              mov edx, 1	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x40072bd	            0xebb1	                           jmp 0x4007270	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x40072bf	              0x90	                                     nop	      5472	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_40
0x40072c0	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      5468	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24	CALL_39
0x40072c5	      0x488d4c2440	                   lea rcx, [rsp + 0x40]	      5468	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24	CALL_39
0x40072ca	          0x4989e8	                             mov r8, rbp	      5468	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24	CALL_39
0x40072cd	          0x4889de	                            mov rsi, rbx	      5468	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24	CALL_39
0x40072d0	          0x4889df	                            mov rdi, rbx	      5468	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24	CALL_39
0x40072d3	      0xe8a8caffff	                  call sym.decMultiplyOp	      5468	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_24	CALL_39
0x40072d8	        0x4183ff1f	                          cmp r15d, 0x1f	      5470	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_25
0x40072dc	            0x75c1	                           jne 0x400729f	      5470	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_25
0x40072de	            0x6690	                                     nop	      5470	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_25
0x40072e0	          0x4989df	                            mov r15, rbx	      5470	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_25
0x40072e3	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      5470	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_25
0x40072e8	      0x410fb7470a	            movzx eax, word [r15 + 0xa] 	      5470	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_25
0x40072ed	      0x410fb67708	               movzx esi, byte [r15 + 8]	      5470	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_25
0x40072f2	        0x418b5704	                mov edx, dword [r15 + 4]	      5470	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_25
0x40072f6	          0x418b0f	                    mov ecx, dword [r15]	      5470	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	IF_25
0x40072f9	          0x6685c0	                             test ax, ax	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x40072fc	    0xc744243c0100	               mov dword [rsp + 0x3c], 1	      5479	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x4007304	            0x7505	                           jne 0x400730b	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x4007306	          0x83f901	                              cmp ecx, 1	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x4007309	            0x7467	                            je 0x4007372	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x400730b	        0x418b4500	                    mov eax, dword [r13]	      5481	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400730f	      0x4c8d44243c	                    lea r8, [rsp + 0x3c]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4007314	        0x40887308	                 mov byte [rbx + 8], sil	      6839	decNumber.c	FUNCTION_11
0x4007318	          0x895304	                mov dword [rbx + 4], edx	      6840	decNumber.c	FUNCTION_11
0x400731b	      0x488d742440	                   lea rsi, [rsp + 0x40]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4007320	        0x498d570a	                    lea rdx, [r15 + 0xa]	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4007324	          0x4889df	                            mov rdi, rbx	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4007327	          0x4989e9	                             mov r9, rbp	      6841	decNumber.c	FUNCTION_11	CALL_1
0x400732a	        0x89442440	             mov dword [rsp + 0x40], eax	      5481	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400732e	      0xe89d9fffff	             call sym.decSetCoeff.isra.3	      6841	decNumber.c	FUNCTION_11	CALL_1
0x4007333	      0x488d54243c	                   lea rdx, [rsp + 0x3c]	      5483	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x4007338	          0x4889e9	                            mov rcx, rbp	      5483	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400733b	          0x4c89ee	                            mov rsi, r13	      5483	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400733e	          0x4889df	                            mov rdi, rbx	      5483	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x4007341	      0xe81aabffff	                    call sym.decFinalize	      5483	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x4007346	      0xe94efcffff	                           jmp 0x4006f99	      5483	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400734b	       0xf1f440000	                   nop dword [rax + rax]	      5483	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x4007350	         0xfb67308	               movzx esi, byte [rbx + 8]	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x4007354	        0x40f6c670	                          test sil, 0x70	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x4007358	     0xf8532ffffff	                           jne 0x4007290	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x400735e	          0x4989df	                            mov r15, rbx	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x4007361	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      5464	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21	FOR_2	CALL_38
0x4007366	    0xc744243c0100	               mov dword [rsp + 0x3c], 1	      5479	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x400736e	        0x418b5704	                mov edx, dword [r15 + 4]	      5479	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1
0x4007372	        0x40f6c670	                          test sil, 0x70	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x4007376	      0xb901000000	                              mov ecx, 1	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x400737b	            0x758e	                           jne 0x400730b	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x400737d	    0xc744243c0000	               mov dword [rsp + 0x3c], 0	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x4007385	            0xeb84	                           jmp 0x400730b	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x4007387	    0x660f1f840000	                    nop word [rax + rax]	      5480	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	CALL_41
0x4007390	            0x31f6	                            xor esi, esi	      5345	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_21
0x4007392	      0xb908000000	                              mov ecx, 8	      5345	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_21
0x4007397	          0x83f808	                              cmp eax, 8	      5345	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_21
0x400739a	        0x400f9fc6	                                setg sil	      5345	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_21
0x400739e	            0x29d1	                            sub ecx, edx	      5345	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_21
0x40073a0	          0x4189c6	                           mov r14d, eax	      5346	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x40073a3	            0x39ce	                            cmp esi, ecx	      5345	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_21
0x40073a5	           0xf4ece	                         cmovle ecx, esi	      5345	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_21
0x40073a8	          0x41f7de	                                neg r14d	      5346	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x40073ab	          0x4129ce	                           sub r14d, ecx	      5346	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x40073ae	             0x1ca	                            add edx, ecx	      5348	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_11
0x40073b0	        0x89542410	             mov dword [rsp + 0x10], edx	      5348	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_11
0x40073b4	     0xf8889030000	                            js 0x4007743	      5348	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_11
0x40073ba	          0x4139fe	                           cmp r14d, edi	      5353	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12
0x40073bd	     0xf8442030000	                            je 0x4007705	      5353	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12
0x40073c3	          0x83f831	                           cmp eax, 0x31	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x40073c6	     0xf8f1d030000	                            jg 0x40076e9	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x40073cc	     0xfb680000000	                   movzx eax, byte [rax]	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x40073d3	        0x8d44000a	              lea eax, [rax + rax + 0xa]	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x40073d7	          0x83f83c	                           cmp eax, 0x3c	      5356	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13
0x40073da	     0xf86ee020000	                           jbe 0x40076ce	      5356	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13
0x40073e0	            0x89c7	                            mov edi, eax	      5357	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13
0x40073e2	      0xe800000000	                          call 0x40073e7	      5357	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13
0x40073e7	          0x4885c0	                           test rax, rax	      5358	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13	IF_14
0x40073ea	      0x4889442408	                mov qword [rsp + 8], rax	      5357	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13
0x40073ef	      0x4889442418	             mov qword [rsp + 0x18], rax	      5357	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13
0x40073f4	     0xf8472030000	                            je 0x400776c	      5358	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13	IF_14
0x40073fa	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      5363	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_23
0x40073ff	          0x4c89e6	                            mov rsi, r12	      5363	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_23
0x4007402	          0x4c89ff	                            mov rdi, r15	      5363	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_23
0x4007405	      0xe800000000	                          call 0x400740a	      5363	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_23
0x400740a	          0x418b07	                    mov eax, dword [r15]	      5363	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_23
0x400740d	        0x45897704	               mov dword [r15 + 4], r14d	      5364	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12
0x4007411	        0x41394500	                    cmp dword [r13], eax	      5379	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_24
0x4007415	      0x410f4d4500	                 cmovge eax, dword [r13]	      5379	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_24
0x400741a	         0x3442410	             add eax, dword [rsp + 0x10]	      5379	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_24
0x400741e	        0x89442428	             mov dword [rsp + 0x28], eax	      5379	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_24
0x4007422	          0x83c002	                              add eax, 2	      5379	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_24
0x4007425	          0x8d0c00	                    lea ecx, [rax + rax]	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x4007428	        0x89442420	             mov dword [rsp + 0x20], eax	      5379	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_24
0x400742c	          0x83f931	                           cmp ecx, 0x31	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400742f	     0xf8f33020000	                            jg 0x4007668	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x4007435	          0x4863c1	                         movsxd rax, ecx	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x4007438	     0xfb680000000	                   movzx eax, byte [rax]	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400743f	        0x8d44000a	              lea eax, [rax + rax + 0xa]	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x4007443	          0x83f878	                           cmp eax, 0x78	      5388	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15
0x4007446	    0x4c8dbc246001	                  lea r15, [rsp + 0x160]	      5249	decNumber.c	FUNCTION_68	FUNCTION_67
0x400744e	    0x48c704240000	                      mov qword [rsp], 0	      5248	decNumber.c	FUNCTION_68	FUNCTION_67
0x4007456	     0xf87bc020000	                            ja 0x4007718	      5388	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15
0x400745c	      0x837c24202f	           cmp dword [rsp + 0x20], 0x2f 	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x4007461	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x4007465	     0xf8f35020000	                            jg 0x40076a0	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400746b	          0x83c004	                              add eax, 4	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400746e	            0x4898	                                    cdqe	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x4007470	     0xfb680000000	                   movzx eax, byte [rax]	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x4007477	        0x8d44000a	              lea eax, [rax + rax + 0xa]	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x400747b	          0x83f848	                           cmp eax, 0x48	      5400	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17
0x400747e	     0xf8604020000	                           jbe 0x4007688	      5400	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17
0x4007484	            0x89c7	                            mov edi, eax	      5401	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17
0x4007486	        0x894c242c	             mov dword [rsp + 0x2c], ecx	      5401	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17
0x400748a	      0xe800000000	                          call 0x400748f	      5401	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17
0x400748f	          0x4885c0	                           test rax, rax	      5402	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17	IF_18
0x4007492	          0x4989c6	                            mov r14, rax	      5401	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17
0x4007495	          0x4989c4	                            mov r12, rax	      5401	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17
0x4007498	        0x8b4c242c	            mov ecx, dword [rsp + 0x2c] 	      5402	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17	IF_18
0x400749c	     0xf84c1020000	                            je 0x4007763	      5402	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17	IF_18
0x40074a2	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      5408	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_27
0x40074a7	          0x4c89e7	                            mov rdi, r12	      5408	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_27
0x40074aa	        0x894c242c	             mov dword [rsp + 0x2c], ecx	      5408	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_27
0x40074ae	      0xe800000000	                          call 0x40074b3	      5408	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_27
0x40074b3	      0xbf01000000	                              mov edi, 1	      5409	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_28
0x40074b8	    0x41b802000000	                              mov r8d, 2	      5410	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_29
0x40074be	    0x41b901000000	                              mov r9d, 1	      5411	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_30
0x40074c4	      0x6641897f0a	                mov word [r15 + 0xa], di	      5409	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_28
0x40074c9	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      5414	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_31
0x40074ce	      0x41c6470800	                   mov byte [r15 + 8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40074d3	    0x41c747040000	                  mov dword [r15 + 4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40074db	    0x41c707010000	                      mov dword [r15], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x40074e2	      0xbe40000000	                           mov esi, 0x40	      5414	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_31
0x40074e7	    0xc68424b80000	                mov byte [rsp + 0xb8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x40074ef	    0xc78424b40000	               mov dword [rsp + 0xb4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x40074fa	    0xc78424b00000	               mov dword [rsp + 0xb0], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007505	    0x6644898424ba	              mov word [rsp + 0xba], r8w	      5410	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_29
0x400750e	    0xc68424a80000	                mov byte [rsp + 0xa8], 0	      3588	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007516	    0xc78424a40000	               mov dword [rsp + 0xa4], 0	      3589	decNumber.c	FUNCTION_68	FUNCTION_62
0x4007521	    0xc78424a00000	               mov dword [rsp + 0xa0], 1	      3590	decNumber.c	FUNCTION_68	FUNCTION_62
0x400752c	    0x6644898c24aa	              mov word [rsp + 0xaa], r9w	      5411	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_30
0x4007535	      0xe800000000	                          call 0x400753a	      5414	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_31
0x400753a	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      5415	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400753f	        0x8b4c242c	            mov ecx, dword [rsp + 0x2c] 	      5417	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x4007543	    0x488984248000	             mov qword [rsp + 0x80], rax	      5415	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400754b	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      5415	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x4007550	        0x894c2440	             mov dword [rsp + 0x40], ecx	      5417	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x4007554	    0xc74424680136	     mov dword [rsp + 0x68], 0xc4653601 	      5420	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400755c	    0x488984248800	             mov qword [rsp + 0x88], rax	      5415	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x4007564	      0x488b442470	            mov rax, qword [rsp + 0x70] 	      5415	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x4007569	    0x488984249000	             mov qword [rsp + 0x90], rax	      5415	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x4007571	        0x8b442478	            mov eax, dword [rsp + 0x78] 	      5415	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x4007575	    0x898424980000	             mov dword [rsp + 0x98], eax	      5415	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x400757c	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      5419	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x4007580	      0x4c89742420	             mov qword [rsp + 0x20], r14	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x4007585	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x400758a	      0x48895c2418	             mov qword [rsp + 0x18], rbx	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x400758f	        0x89442460	             mov dword [rsp + 0x60], eax	      5419	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3
0x4007593	            0x89c3	                            mov ebx, eax	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x4007595	            0xeb31	                           jmp 0x40075c8	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x4007597	    0x660f1f840000	                    nop word [rax + rax]	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x40075a0	    0x488db424b000	                   lea rsi, [rsp + 0xb0]	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x40075a8	      0x4c8d4c2438	                    lea r9, [rsp + 0x38]	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x40075ad	    0x488d8c248000	                   lea rcx, [rsp + 0x80]	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x40075b5	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x40075bd	          0x4531c0	                            xor r8d, r8d	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x40075c0	          0x4889f7	                            mov rdi, rsi	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x40075c3	      0xe828d6ffff	                       call sym.decAddOp	      5439	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_35
0x40075c8	      0x488d4c2440	                   lea rcx, [rsp + 0x40]	      5430	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_32
0x40075cd	          0x4989e9	                             mov r9, rbp	      5430	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_32
0x40075d0	          0x4531c0	                            xor r8d, r8d	      5430	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_32
0x40075d3	          0x4c89e2	                            mov rdx, r12	      5430	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_32
0x40075d6	          0x4c89fe	                            mov rsi, r15	      5430	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_32
0x40075d9	          0x4c89ff	                            mov rdi, r15	      5430	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_32
0x40075dc	      0xe80fd6ffff	                       call sym.decAddOp	      5430	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_32
0x40075e1	      0x4c8d442438	                    lea r8, [rsp + 0x38]	      5431	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_33
0x40075e6	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      5431	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_33
0x40075eb	          0x4c89f2	                            mov rdx, r14	      5431	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_33
0x40075ee	          0x4c89e6	                            mov rsi, r12	      5431	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_33
0x40075f1	          0x4c89e7	                            mov rdi, r12	      5431	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_33
0x40075f4	      0xe887c7ffff	                  call sym.decMultiplyOp	      5431	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_33
0x40075f9	      0x488d4c2460	                   lea rcx, [rsp + 0x60]	      5432	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_34
0x40075fe	    0x488d9424b000	                   lea rdx, [rsp + 0xb0]	      5432	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_34
0x4007606	      0x4c8d4c2438	                    lea r9, [rsp + 0x38]	      5432	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_34
0x400760b	          0x4c89e6	                            mov rsi, r12	      5432	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_34
0x400760e	    0x41b880000000	                           mov r8d, 0x80	      5432	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_34
0x4007614	          0x4c89e7	                            mov rdi, r12	      5432	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_34
0x4007617	      0xe8f4e6ffff	                    call sym.decDivideOp	      5432	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	CALL_34
0x400761c	          0x418b0f	                    mov ecx, dword [r15]	      5437	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x400761f	        0x418b5704	                mov edx, dword [r15 + 4]	      5437	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x4007623	      0x418b442404	                mov eax, dword [r12 + 4]	      5438	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x4007628	        0x41030424	                    add eax, dword [r12]	      5438	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x400762c	          0x8d3411	                    lea esi, [rcx + rdx]	      5438	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x400762f	             0x1d8	                            add eax, ebx	      5438	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x4007631	            0x39f0	                            cmp eax, esi	      5438	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x4007633	     0xf8d67ffffff	                           jge 0x40075a0	      5438	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x4007639	            0x39cb	                            cmp ebx, ecx	      5438	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x400763b	     0xf8f5fffffff	                            jg 0x40075a0	      5438	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	FOR_1	IF_19
0x4007641	        0x8b742410	            mov esi, dword [rsp + 0x10] 	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x4007645	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400764a	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400764f	            0x85f6	                           test esi, esi	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x4007651	            0x7567	                           jne 0x40076ba	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x4007653	      0x410fb7470a	            movzx eax, word [r15 + 0xa] 	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x4007658	      0x410fb67708	               movzx esi, byte [r15 + 8]	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x400765d	      0xe997fcffff	                           jmp 0x40072f9	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x4007662	    0x660f1f440000	                    nop word [rax + rax]	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x4007668	          0x8d7102	                      lea esi, [rcx + 2]	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400766b	      0xba56555555	                     mov edx, 0x55555556	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x4007670	            0x89f0	                            mov eax, esi	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x4007672	          0xc1fe1f	                           sar esi, 0x1f	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x4007675	            0xf7ea	                                imul edx	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x4007677	            0x29f2	                            sub edx, esi	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x4007679	        0x8d44120a	              lea eax, [rdx + rdx + 0xa]	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x400767d	      0xe9c1fdffff	                           jmp 0x4007443	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x4007682	    0x660f1f440000	                    nop word [rax + rax]	      5387	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_25
0x4007688	    0x4c8da4241001	                  lea r12, [rsp + 0x110]	      5245	decNumber.c	FUNCTION_68	FUNCTION_67
0x4007690	          0x4531f6	                          xor r14d, r14d	      5244	decNumber.c	FUNCTION_68	FUNCTION_67
0x4007693	      0xe90afeffff	                           jmp 0x40074a2	      5244	decNumber.c	FUNCTION_68	FUNCTION_67
0x4007698	     0xf1f84000000	                   nop dword [rax + rax]	      5244	decNumber.c	FUNCTION_68	FUNCTION_67
0x40076a0	          0x8d7006	                      lea esi, [rax + 6]	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x40076a3	      0xba56555555	                     mov edx, 0x55555556	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x40076a8	            0x89f0	                            mov eax, esi	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x40076aa	          0xc1fe1f	                           sar esi, 0x1f	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x40076ad	            0xf7ea	                                imul edx	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x40076af	            0x29f2	                            sub edx, esi	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x40076b1	        0x8d44120a	              lea eax, [rdx + rdx + 0xa]	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x40076b5	      0xe9c1fdffff	                           jmp 0x400747b	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x40076ba	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      5399	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	CALL_26
0x40076be	      0x4c897c2418	             mov qword [rsp + 0x18], r15	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x40076c3	          0x4d89e7	                            mov r15, r12	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x40076c6	          0x83c004	                              add eax, 4	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x40076c9	      0xe95afbffff	                           jmp 0x4007228	      5452	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_21
0x40076ce	    0x488d8424d000	                   lea rax, [rsp + 0xd0]	      5354	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12
0x40076d6	    0x48c744240800	                  mov qword [rsp + 8], 0	      5236	decNumber.c	FUNCTION_68	FUNCTION_67
0x40076df	      0x4889442418	             mov qword [rsp + 0x18], rax	      5354	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12
0x40076e4	      0xe911fdffff	                           jmp 0x40073fa	      5354	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12
0x40076e9	          0x8d4802	                      lea ecx, [rax + 2]	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x40076ec	      0xba56555555	                     mov edx, 0x55555556	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x40076f1	            0x89c8	                            mov eax, ecx	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x40076f3	            0xf7ea	                                imul edx	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x40076f5	            0x89c8	                            mov eax, ecx	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x40076f7	          0xc1f81f	                           sar eax, 0x1f	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x40076fa	            0x29c2	                            sub edx, eax	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x40076fc	        0x8d44120a	              lea eax, [rdx + rdx + 0xa]	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x4007700	      0xe9d2fcffff	                           jmp 0x40073d7	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x4007705	      0x4c89642418	             mov qword [rsp + 0x18], r12	      5355	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	CALL_22
0x400770a	    0x48c744240800	                  mov qword [rsp + 8], 0	      5236	decNumber.c	FUNCTION_68	FUNCTION_67
0x4007713	      0xe9f9fcffff	                           jmp 0x4007411	      5236	decNumber.c	FUNCTION_68	FUNCTION_67
0x4007718	            0x89c7	                            mov edi, eax	      5389	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15
0x400771a	        0x894c242c	             mov dword [rsp + 0x2c], ecx	      5389	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15
0x400771e	      0xe800000000	                          call 0x4007723	      5389	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15
0x4007723	          0x4885c0	                           test rax, rax	      5390	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15	IF_16
0x4007726	        0x48890424	                    mov qword [rsp], rax	      5389	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15
0x400772a	          0x4989c7	                            mov r15, rax	      5389	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15
0x400772d	        0x8b4c242c	            mov ecx, dword [rsp + 0x2c] 	      5390	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15	IF_16
0x4007731	     0xf8525fdffff	                           jne 0x400745c	      5390	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15	IF_16
0x4007737	        0x834d0010	                    or dword [rbp], 0x10	      5391	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15	IF_16
0x400773b	          0x4531f6	                          xor r14d, r14d	      5244	decNumber.c	FUNCTION_68	FUNCTION_67
0x400773e	      0xe956f8ffff	                           jmp 0x4006f99	      5392	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_15	IF_16
0x4007743	          0x4101d6	                           add r14d, edx	      5349	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_11
0x4007746	    0xc74424100000	               mov dword [rsp + 0x10], 0	      5350	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_11
0x400774e	      0xe967fcffff	                           jmp 0x40073ba	      5350	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_11
0x4007753	    0xc78424640100	    mov dword [rsp + 0x164], 0xfffffffe 	      5329	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9	CALL_20
0x400775e	      0xe98ffaffff	                           jmp 0x40071f2	      5329	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	IF_9	CALL_20
0x4007763	        0x834d0010	                    or dword [rbp], 0x10	      5403	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17	IF_18
0x4007767	      0xe92df8ffff	                           jmp 0x4006f99	      5404	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_17	IF_18
0x400776c	        0x834d0010	                    or dword [rbp], 0x10	      5359	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13	IF_14
0x4007770	    0x48c704240000	                      mov qword [rsp], 0	      5248	decNumber.c	FUNCTION_68	FUNCTION_67
0x4007778	          0x4531f6	                          xor r14d, r14d	      5244	decNumber.c	FUNCTION_68	FUNCTION_67
0x400777b	      0xe919f8ffff	                           jmp 0x4006f99	      5360	decNumber.c	FUNCTION_68	FUNCTION_67	DO_1	ELSE_3	IF_12	IF_13	IF_14
0x4007780	      0xe800000000	                          call 0x4007785	      5491	decNumber.c	FUNCTION_68	FUNCTION_67
decNumberRemainderNear	ELSE,0:DO,0:CALL,3:IF,1:functions,0:SWITCH,0:WHILE,0:FOR,0	27
0x4006ec0	              0x55	                                push rbp	      2420	decNumber.c	FUNCTION_68	FUNCTION_40
0x4006ec1	              0x53	                                push rbx	      2420	decNumber.c	FUNCTION_68	FUNCTION_40
0x4006ec2	    0x41b810000000	                           mov r8d, 0x10	      2422	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_1
0x4006ec8	          0x4889fb	                            mov rbx, rdi	      2420	decNumber.c	FUNCTION_68	FUNCTION_40
0x4006ecb	          0x4889cd	                            mov rbp, rcx	      2420	decNumber.c	FUNCTION_68	FUNCTION_40
0x4006ece	        0x4883ec18	                           sub rsp, 0x18	      2420	decNumber.c	FUNCTION_68	FUNCTION_40
0x4006ed2	      0x4c8d4c2404	                       lea r9, [rsp + 4]	      2422	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_1
0x4006ed7	    0xc74424040000	                  mov dword [rsp + 4], 0	      2421	decNumber.c	FUNCTION_68	FUNCTION_40
0x4006edf	    0x64488b042528	                mov rax, qword fs:[0x28]	      2420	decNumber.c	FUNCTION_68	FUNCTION_40
0x4006ee8	      0x4889442408	                mov qword [rsp + 8], rax	      2420	decNumber.c	FUNCTION_68	FUNCTION_40
0x4006eed	            0x31c0	                            xor eax, eax	      2420	decNumber.c	FUNCTION_68	FUNCTION_40
0x4006eef	      0xe81ceeffff	                    call sym.decDivideOp	      2422	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_1
0x4006ef4	        0x8b742404	                mov esi, dword [rsp + 4]	      2423	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_2
0x4006ef8	            0x85f6	                           test esi, esi	      2423	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_2
0x4006efa	            0x740b	                            je 0x4006f07	      2423	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_2
0x4006efc	          0x4889ea	                            mov rdx, rbp	      2423	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_2
0x4006eff	          0x4889df	                            mov rdi, rbx	      2423	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_2
0x4006f02	      0xe8c998ffff	                      call sym.decStatus	      2423	decNumber.c	FUNCTION_68	FUNCTION_40	CALL_2
0x4006f07	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2428	decNumber.c	FUNCTION_68	FUNCTION_40
0x4006f0c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2428	decNumber.c	FUNCTION_68	FUNCTION_40
0x4006f15	          0x4889d8	                            mov rax, rbx	      2428	decNumber.c	FUNCTION_68	FUNCTION_40
0x4006f18	            0x7507	                           jne 0x4006f21	      2428	decNumber.c	FUNCTION_68	FUNCTION_40
0x4006f1a	        0x4883c418	                           add rsp, 0x18	      2428	decNumber.c	FUNCTION_68	FUNCTION_40
0x4006f1e	              0x5b	                                 pop rbx	      2428	decNumber.c	FUNCTION_68	FUNCTION_40
0x4006f1f	              0x5d	                                 pop rbp	      2428	decNumber.c	FUNCTION_68	FUNCTION_40
0x4006f20	              0xc3	                                     ret	      2428	decNumber.c	FUNCTION_68	FUNCTION_40
0x4006f21	      0xe800000000	                          call 0x4006f26	      2428	decNumber.c	FUNCTION_68	FUNCTION_40
decNumberToUInt32	ELSE,2:DO,0:CALL,4:IF,3:functions,0:SWITCH,0:WHILE,0:FOR,1	65
0x4002190	        0x4883ec08	                              sub rsp, 8	       416	decNumber.c	FUNCTION_68	FUNCTION_4
0x4002194	         0xfb64708	               movzx eax, byte [rdi + 8]	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x4002198	            0xa870	                           test al, 0x70	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x400219a	            0x7507	                           jne 0x40021a3	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x400219c	            0x8b0f	                    mov ecx, dword [rdi]	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x400219e	          0x83f90a	                            cmp ecx, 0xa	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x40021a1	            0x7e1d	                           jle 0x40021c0	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x40021a3	          0x4889f7	                            mov rdi, rsi	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x40021a6	      0xbe80000000	                           mov esi, 0x80	       441	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_4
0x40021ab	      0xe800000000	                          call 0x40021b0	       441	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_4
0x40021b0	            0x31c0	                            xor eax, eax	       442	decNumber.c	FUNCTION_68	FUNCTION_4
0x40021b2	        0x4883c408	                              add rsp, 8	       443	decNumber.c	FUNCTION_68	FUNCTION_4
0x40021b6	              0xc3	                                     ret	       443	decNumber.c	FUNCTION_68	FUNCTION_4
0x40021b7	    0x660f1f840000	                    nop word [rax + rax]	       443	decNumber.c	FUNCTION_68	FUNCTION_4
0x40021c0	          0x8b5704	                mov edx, dword [rdi + 4]	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x40021c3	            0x85d2	                           test edx, edx	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x40021c5	            0x75dc	                           jne 0x40021a3	       421	decNumber.c	FUNCTION_68	FUNCTION_4	IF_2
0x40021c7	            0x84c0	                             test al, al	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x40021c9	     0xf8891000000	                            js 0x4002260	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x40021cf	      0x440fb7570a	           movzx r10d, word [rdi + 0xa] 	       428	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x40021d4	      0xbacdcccccc	                     mov edx, 0xcccccccd	       430	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x40021d9	    0x41b900000000	                              mov r9d, 0	       430	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x40021df	          0x4489d0	                           mov eax, r10d	       430	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x40021e2	            0xf7e2	                                 mul edx	       430	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x40021e4	        0x488d470c	                    lea rax, [rdi + 0xc]	       433	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x40021e8	      0xbf03000000	                              mov edi, 3	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x40021ed	          0xc1ea03	                              shr edx, 3	       430	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x40021f0	          0x83f903	                              cmp ecx, 3	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x40021f3	          0x4189d0	                            mov r8d, edx	       430	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x40021f6	            0x7e23	                           jle 0x400221b	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x40021f8	           0xfb710	                   movzx edx, word [rax]	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x40021fb	          0x83c703	                              add edi, 3	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x40021fe	        0x4883c002	                              add rax, 2	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x4002202	      0x410faf5108	                imul edx, dword [r9 + 8]	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x4002207	        0x4983c10c	                             add r9, 0xc	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x400220b	          0x4101d0	                            add r8d, edx	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x400220e	            0x39f9	                            cmp ecx, edi	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x4002210	            0x7fe6	                            jg 0x40021f8	       435	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	FOR_1
0x4002212	    0x4181f8999999	                     cmp r8d, 0x19999999	       438	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	IF_3
0x4002219	            0x7788	                            ja 0x40021a3	       438	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	IF_3
0x400221b	          0x4489d0	                           mov eax, r10d	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x400221e	      0xb9cdcccccc	                     mov ecx, 0xcccccccd	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4002223	            0xf7e1	                                 mul ecx	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4002225	            0x89d0	                            mov eax, edx	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4002227	          0xc1e803	                              shr eax, 3	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x400222a	          0x8d0480	                  lea eax, [rax + rax*4]	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x400222d	             0x1c0	                            add eax, eax	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x400222f	          0x4129c2	                           sub r10d, eax	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4002232	    0x4181f8999999	                     cmp r8d, 0x19999999	       438	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	IF_3
0x4002239	          0x4489d0	                           mov eax, r10d	       431	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x400223c	            0x750a	                           jne 0x4002248	       438	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	IF_3
0x400223e	        0x4183fa05	                             cmp r10d, 5	       438	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	IF_3
0x4002242	     0xf875bffffff	                            ja 0x40021a3	       438	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	IF_3
0x4002248	    0x428d14c50000	                         lea edx, [r8*8]	       439	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	CALL_3
0x4002250	        0x428d1442	                   lea edx, [rdx + r8*2]	       439	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	CALL_3
0x4002254	             0x1d0	                            add eax, edx	       439	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	CALL_3
0x4002256	      0xe957ffffff	                           jmp 0x40021b2	       439	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	CALL_3
0x400225b	       0xf1f440000	                   nop dword [rax + rax]	       439	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1	CALL_3
0x4002260	      0x66837f0a00	                 cmp word [rdi + 0xa], 0	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x4002265	     0xf8538ffffff	                           jne 0x40021a3	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x400226b	          0x4531d2	                          xor r10d, r10d	       428	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x400226e	          0x4531c0	                            xor r8d, r8d	       430	decNumber.c	FUNCTION_68	FUNCTION_4	ELSE_1
0x4002271	          0x83f901	                              cmp ecx, 1	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x4002274	     0xf8529ffffff	                           jne 0x40021a3	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
0x400227a	            0xeb9f	                           jmp 0x400221b	       422	decNumber.c	FUNCTION_68	FUNCTION_4	CALL_2
