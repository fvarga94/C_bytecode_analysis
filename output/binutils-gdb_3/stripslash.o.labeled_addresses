strip_trailing_slashes	FOR,0:IF,1:DO,0:SWITCH,0:CALL,2:WHILE,0:functions,0:ELSE,0	18
0x4000040	              0x55	                                push rbp	        32	stripslash.c	FUNCTION_1
0x4000041	              0x53	                                push rbx	        32	stripslash.c	FUNCTION_1
0x4000042	          0x4889fd	                            mov rbp, rdi	        32	stripslash.c	FUNCTION_1
0x4000045	        0x4883ec08	                              sub rsp, 8	        32	stripslash.c	FUNCTION_1
0x4000049	      0xe800000000	                          call 0x400004e	        33	stripslash.c	FUNCTION_1	CALL_1
0x400004e	          0x803800	                       cmp byte [rax], 0	        40	stripslash.c	FUNCTION_1	IF_1
0x4000051	          0x4889c3	                            mov rbx, rax	        33	stripslash.c	FUNCTION_1	CALL_1
0x4000054	        0x480f44dd	                          cmove rbx, rbp	        40	stripslash.c	FUNCTION_1	IF_1
0x4000058	          0x4889df	                            mov rdi, rbx	        41	stripslash.c	FUNCTION_1	CALL_2
0x400005b	      0xe800000000	                          call 0x4000060	        41	stripslash.c	FUNCTION_1	CALL_2
0x4000060	          0x4801c3	                            add rbx, rax	        41	stripslash.c	FUNCTION_1	CALL_2
0x4000063	          0x803b00	                       cmp byte [rbx], 0	        42	stripslash.c	FUNCTION_1
0x4000066	          0xc60300	                       mov byte [rbx], 0	        43	stripslash.c	FUNCTION_1
0x4000069	           0xf95c0	                                setne al	        42	stripslash.c	FUNCTION_1
0x400006c	        0x4883c408	                              add rsp, 8	        45	stripslash.c	FUNCTION_1
0x4000070	              0x5b	                                 pop rbx	        45	stripslash.c	FUNCTION_1
0x4000071	              0x5d	                                 pop rbp	        45	stripslash.c	FUNCTION_1
0x4000072	              0xc3	                                     ret	        45	stripslash.c	FUNCTION_1
