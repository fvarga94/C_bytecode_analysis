display_gdb_index	ELSE,2:FOR,5:CALL,68:WHILE,0:DO,0:functions,0:SWITCH,0:IF,20	615
0x4002410	            0x4157	                                push r15	      8791	dwarf.c	FUNCTION_86
0x4002412	            0x4156	                                push r14	      8791	dwarf.c	FUNCTION_86
0x4002414	        0x488d7718	                   lea rsi, [rdi + 0x18]	      8791	dwarf.c	FUNCTION_86
0x4002418	            0x4155	                                push r13	      8791	dwarf.c	FUNCTION_86
0x400241a	            0x4154	                                push r12	      8791	dwarf.c	FUNCTION_86
0x400241c	          0x4989fe	                            mov r14, rdi	      8791	dwarf.c	FUNCTION_86
0x400241f	              0x55	                                push rbp	      8791	dwarf.c	FUNCTION_86
0x4002420	              0x53	                                push rbx	      8791	dwarf.c	FUNCTION_86
0x4002421	        0x4883ec68	                           sub rsp, 0x68	      8791	dwarf.c	FUNCTION_86
0x4002425	        0x488b5f20	            mov rbx, qword [rdi + 0x20] 	      8792	dwarf.c	FUNCTION_86
0x4002429	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      8804	dwarf.c	FUNCTION_86	CALL_1
0x400242d	      0xe84efdffff	  call sym.introduce.isra.5.constprop.27	      8804	dwarf.c	FUNCTION_86	CALL_1
0x4002432	      0x49837e3017	           cmp qword [r14 + 0x30], 0x17 	      8806	dwarf.c	FUNCTION_86	IF_1
0x4002437	     0xf86cb050000	                           jbe 0x4002a08	      8806	dwarf.c	FUNCTION_86	IF_1
0x400243d	      0xbe04000000	                              mov esi, 4	      8812	dwarf.c	FUNCTION_86	CALL_4
0x4002442	          0x4889df	                            mov rdi, rbx	      8812	dwarf.c	FUNCTION_86	CALL_4
0x4002445	      0xe800000000	                          call 0x400244a	      8812	dwarf.c	FUNCTION_86	CALL_4
0x400244a	            0x31ff	                            xor edi, edi	      8813	dwarf.c	FUNCTION_86	CALL_5
0x400244c	          0x4189c4	                           mov r12d, eax	      8813	dwarf.c	FUNCTION_86	CALL_5
0x400244f	      0xba05000000	                              mov edx, 5	      8813	dwarf.c	FUNCTION_86	CALL_5
0x4002454	      0xbe00000000	                              mov esi, 0	      8813	dwarf.c	FUNCTION_86	CALL_5
0x4002459	          0x4889c5	                            mov rbp, rax	      8812	dwarf.c	FUNCTION_86	CALL_4
0x400245c	      0xe800000000	                          call 0x4002461	      8813	dwarf.c	FUNCTION_86	CALL_5
0x4002461	          0x4c89e2	                            mov rdx, r12	       104	stdio2.h	CALL_16
0x4002464	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4002467	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400246c	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400246e	      0xe800000000	                          call 0x4002473	       104	stdio2.h	CALL_16
0x4002473	          0x8d45fd	                      lea eax, [rbp - 3]	      8817	dwarf.c	FUNCTION_86	IF_2
0x4002476	          0x83f805	                              cmp eax, 5	      8817	dwarf.c	FUNCTION_86	IF_2
0x4002479	     0xf87a1050000	                            ja 0x4002a20	      8817	dwarf.c	FUNCTION_86	IF_2
0x400247f	          0x83fd03	                              cmp ebp, 3	      8822	dwarf.c	FUNCTION_86	IF_3
0x4002482	     0xf84c8050000	                            je 0x4002a50	      8822	dwarf.c	FUNCTION_86	IF_3
0x4002488	          0x83fd04	                              cmp ebp, 4	      8824	dwarf.c	FUNCTION_86	IF_4
0x400248b	     0xf84da050000	                            je 0x4002a6b	      8824	dwarf.c	FUNCTION_86	IF_4
0x4002491	          0x83fd05	                              cmp ebp, 5	      8826	dwarf.c	FUNCTION_86	IF_5
0x4002494	     0xf84ec050000	                            je 0x4002a86	      8826	dwarf.c	FUNCTION_86	IF_5
0x400249a	          0x83fd06	                              cmp ebp, 6	      8828	dwarf.c	FUNCTION_86	IF_6
0x400249d	     0xf84fe050000	                            je 0x4002aa1	      8828	dwarf.c	FUNCTION_86	IF_6
0x40024a3	        0x488d7b04	                      lea rdi, [rbx + 4]	      8835	dwarf.c	FUNCTION_86	CALL_16
0x40024a7	      0xbe04000000	                              mov esi, 4	      8835	dwarf.c	FUNCTION_86	CALL_16
0x40024ac	      0xe800000000	                          call 0x40024b1	      8835	dwarf.c	FUNCTION_86	CALL_16
0x40024b1	        0x488d7b08	                      lea rdi, [rbx + 8]	      8836	dwarf.c	FUNCTION_86	CALL_17
0x40024b5	      0xbe04000000	                              mov esi, 4	      8836	dwarf.c	FUNCTION_86	CALL_17
0x40024ba	          0x4989c7	                            mov r15, rax	      8835	dwarf.c	FUNCTION_86	CALL_16
0x40024bd	          0x4589fc	                          mov r12d, r15d	      8835	dwarf.c	FUNCTION_86	CALL_16
0x40024c0	      0xe800000000	                          call 0x40024c5	      8836	dwarf.c	FUNCTION_86	CALL_17
0x40024c5	        0x488d7b0c	                    lea rdi, [rbx + 0xc]	      8837	dwarf.c	FUNCTION_86	CALL_18
0x40024c9	      0xbe04000000	                              mov esi, 4	      8837	dwarf.c	FUNCTION_86	CALL_18
0x40024ce	          0x4989c5	                            mov r13, rax	      8836	dwarf.c	FUNCTION_86	CALL_17
0x40024d1	      0xe800000000	                          call 0x40024d6	      8837	dwarf.c	FUNCTION_86	CALL_18
0x40024d6	        0x488d7b10	                   lea rdi, [rbx + 0x10]	      8838	dwarf.c	FUNCTION_86	CALL_19
0x40024da	      0xbe04000000	                              mov esi, 4	      8838	dwarf.c	FUNCTION_86	CALL_19
0x40024df	          0x4889c5	                            mov rbp, rax	      8837	dwarf.c	FUNCTION_86	CALL_18
0x40024e2	      0xe800000000	                          call 0x40024e7	      8838	dwarf.c	FUNCTION_86	CALL_19
0x40024e7	        0x488d7b14	                   lea rdi, [rbx + 0x14]	      8839	dwarf.c	FUNCTION_86	CALL_20
0x40024eb	      0xbe04000000	                              mov esi, 4	      8839	dwarf.c	FUNCTION_86	CALL_20
0x40024f0	        0x48890424	                    mov qword [rsp], rax	      8838	dwarf.c	FUNCTION_86	CALL_19
0x40024f4	      0xe800000000	                          call 0x40024f9	      8839	dwarf.c	FUNCTION_86	CALL_20
0x40024f9	          0x4889c1	                            mov rcx, rax	      8839	dwarf.c	FUNCTION_86	CALL_20
0x40024fc	      0x4889442408	                mov qword [rsp + 8], rax	      8839	dwarf.c	FUNCTION_86	CALL_20
0x4002501	        0x498b4630	            mov rax, qword [r14 + 0x30] 	      8841	dwarf.c	FUNCTION_86	IF_7
0x4002505	          0x4c39e0	                            cmp rax, r12	      8841	dwarf.c	FUNCTION_86	IF_7
0x4002508	     0xf82c2040000	                            jb 0x40029d0	      8841	dwarf.c	FUNCTION_86	IF_7
0x400250e	          0x4589ea	                          mov r10d, r13d	      8841	dwarf.c	FUNCTION_86	IF_7
0x4002511	          0x4c39d0	                            cmp rax, r10	      8842	dwarf.c	FUNCTION_86	IF_7
0x4002514	     0xf82b6040000	                            jb 0x40029d0	      8842	dwarf.c	FUNCTION_86	IF_7
0x400251a	            0x89ea	                            mov edx, ebp	      8842	dwarf.c	FUNCTION_86	IF_7
0x400251c	          0x4839d0	                            cmp rax, rdx	      8843	dwarf.c	FUNCTION_86	IF_7
0x400251f	     0xf82ab040000	                            jb 0x40029d0	      8843	dwarf.c	FUNCTION_86	IF_7
0x4002525	          0x8b3424	                    mov esi, dword [rsp]	      8843	dwarf.c	FUNCTION_86	IF_7
0x4002528	          0x4839f0	                            cmp rax, rsi	      8844	dwarf.c	FUNCTION_86	IF_7
0x400252b	      0x4889742410	             mov qword [rsp + 0x10], rsi	      8844	dwarf.c	FUNCTION_86	IF_7
0x4002530	     0xf829a040000	                            jb 0x40029d0	      8844	dwarf.c	FUNCTION_86	IF_7
0x4002536	            0x89c9	                            mov ecx, ecx	      8844	dwarf.c	FUNCTION_86	IF_7
0x4002538	          0x4839c8	                            cmp rax, rcx	      8845	dwarf.c	FUNCTION_86	IF_7
0x400253b	      0x48894c2420	             mov qword [rsp + 0x20], rcx	      8845	dwarf.c	FUNCTION_86	IF_7
0x4002540	     0xf828a040000	                            jb 0x40029d0	      8845	dwarf.c	FUNCTION_86	IF_7
0x4002546	          0x4539ef	                          cmp r15d, r13d	      8852	dwarf.c	FUNCTION_86	IF_8
0x4002549	     0xf8779050000	                            ja 0x4002ac8	      8852	dwarf.c	FUNCTION_86	IF_8
0x400254f	          0x4139ed	                           cmp r13d, ebp	      8861	dwarf.c	FUNCTION_86	IF_9
0x4002552	     0xf8766070000	                            ja 0x4002cbe	      8861	dwarf.c	FUNCTION_86	IF_9
0x4002558	          0x3b2c24	                    cmp ebp, dword [rsp]	      8871	dwarf.c	FUNCTION_86	IF_10
0x400255b	     0xf87a6070000	                            ja 0x4002d07	      8871	dwarf.c	FUNCTION_86	IF_10
0x4002561	        0x488b3424	                    mov rsi, qword [rsp]	      8878	dwarf.c	FUNCTION_86
0x4002565	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      8839	dwarf.c	FUNCTION_86	CALL_20
0x400256a	            0x89f1	                            mov ecx, esi	      8878	dwarf.c	FUNCTION_86
0x400256c	        0x897c2440	             mov dword [rsp + 0x40], edi	      8839	dwarf.c	FUNCTION_86	CALL_20
0x4002570	            0x29e9	                            sub ecx, ebp	      8878	dwarf.c	FUNCTION_86
0x4002572	            0x39fe	                            cmp esi, edi	      8880	dwarf.c	FUNCTION_86	IF_11
0x4002574	        0x894c242c	             mov dword [rsp + 0x2c], ecx	      8878	dwarf.c	FUNCTION_86
0x4002578	     0xf87b0070000	                            ja 0x4002d2e	      8880	dwarf.c	FUNCTION_86	IF_11
0x400257e	        0x488d0c13	                    lea rcx, [rbx + rdx]	      8891	dwarf.c	FUNCTION_86
0x4002582	        0x8b54242c	            mov edx, dword [rsp + 0x2c] 	      8895	dwarf.c	FUNCTION_86	IF_12
0x4002586	        0x49034620	             add rax, qword [r14 + 0x20]	      8895	dwarf.c	FUNCTION_86	IF_12
0x400258a	      0x48894c2430	             mov qword [rsp + 0x30], rcx	      8891	dwarf.c	FUNCTION_86
0x400258f	          0x4801ca	                            add rdx, rcx	      8895	dwarf.c	FUNCTION_86	IF_12
0x4002592	          0x4839c2	                            cmp rdx, rax	      8895	dwarf.c	FUNCTION_86	IF_12
0x4002595	     0xf874a070000	                            ja 0x4002ce5	      8895	dwarf.c	FUNCTION_86	IF_12
0x400259b	          0x4489e8	                           mov eax, r13d	      8859	dwarf.c	FUNCTION_86
0x400259e	      0xba05000000	                              mov edx, 5	      8901	dwarf.c	FUNCTION_86	CALL_33
0x40025a3	            0x31ff	                            xor edi, edi	      8901	dwarf.c	FUNCTION_86	CALL_33
0x40025a5	          0x4429f8	                           sub eax, r15d	      8859	dwarf.c	FUNCTION_86
0x40025a8	      0xbe00000000	                              mov esi, 0	      8901	dwarf.c	FUNCTION_86	CALL_33
0x40025ad	      0x4c89542438	             mov qword [rsp + 0x38], r10	      8901	dwarf.c	FUNCTION_86	CALL_33
0x40025b2	        0x89442444	             mov dword [rsp + 0x44], eax	      8859	dwarf.c	FUNCTION_86
0x40025b6	          0xc1e803	                              shr eax, 3	      8859	dwarf.c	FUNCTION_86
0x40025b9	          0x4901dc	                            add r12, rbx	      8889	dwarf.c	FUNCTION_86
0x40025bc	        0x89442418	             mov dword [rsp + 0x18], eax	      8859	dwarf.c	FUNCTION_86
0x40025c0	          0x4531ff	                          xor r15d, r15d	      8889	dwarf.c	FUNCTION_86
0x40025c3	      0xe800000000	                          call 0x40025c8	      8901	dwarf.c	FUNCTION_86	CALL_33
0x40025c8	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40025cd	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40025d0	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40025d2	      0xe800000000	                          call 0x40025d7	       104	stdio2.h	CALL_16
0x40025d7	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      8902	dwarf.c	FUNCTION_86	FOR_1
0x40025db	      0x4c8b542438	            mov r10, qword [rsp + 0x38] 	      8902	dwarf.c	FUNCTION_86	FOR_1
0x40025e0	            0x85d2	                           test edx, edx	      8902	dwarf.c	FUNCTION_86	FOR_1
0x40025e2	     0xf8493000000	                            je 0x400267b	      8902	dwarf.c	FUNCTION_86	FOR_1
0x40025e8	      0x48895c2438	             mov qword [rsp + 0x38], rbx	      8902	dwarf.c	FUNCTION_86	FOR_1
0x40025ed	          0x4489fb	                           mov ebx, r15d	      8902	dwarf.c	FUNCTION_86	FOR_1
0x40025f0	      0x448b7c2418	           mov r15d, dword [rsp + 0x18] 	      8902	dwarf.c	FUNCTION_86	FOR_1
0x40025f5	      0x4c896c2448	             mov qword [rsp + 0x48], r13	      8902	dwarf.c	FUNCTION_86	FOR_1
0x40025fa	      0x48896c2450	             mov qword [rsp + 0x50], rbp	      8902	dwarf.c	FUNCTION_86	FOR_1
0x40025ff	      0x4c89542458	             mov qword [rsp + 0x58], r10	      8902	dwarf.c	FUNCTION_86	FOR_1
0x4002604	         0xf1f4000	                         nop dword [rax]	      8902	dwarf.c	FUNCTION_86	FOR_1
0x4002608	    0x448d2cdd0000	                       lea r13d, [rbx*8]	      8904	dwarf.c	FUNCTION_86	FOR_1	CALL_34
0x4002610	      0xbe08000000	                              mov esi, 8	      8904	dwarf.c	FUNCTION_86	FOR_1	CALL_34
0x4002615	        0x4b8d3c2c	                    lea rdi, [r12 + r13]	      8904	dwarf.c	FUNCTION_86	FOR_1	CALL_34
0x4002619	      0xe800000000	                          call 0x400261e	      8904	dwarf.c	FUNCTION_86	FOR_1	CALL_34
0x400261e	      0x4b8d7c2c08	                lea rdi, [r12 + r13 + 8]	      8905	dwarf.c	FUNCTION_86	FOR_1	CALL_35
0x4002623	      0xbe08000000	                              mov esi, 8	      8905	dwarf.c	FUNCTION_86	FOR_1	CALL_35
0x4002628	          0x4889c5	                            mov rbp, rax	      8904	dwarf.c	FUNCTION_86	FOR_1	CALL_34
0x400262b	      0xe800000000	                          call 0x4002630	      8905	dwarf.c	FUNCTION_86	FOR_1	CALL_35
0x4002630	            0x31ff	                            xor edi, edi	      8907	dwarf.c	FUNCTION_86	FOR_1	CALL_36
0x4002632	          0x4989c5	                            mov r13, rax	      8905	dwarf.c	FUNCTION_86	FOR_1	CALL_35
0x4002635	      0xba05000000	                              mov edx, 5	      8907	dwarf.c	FUNCTION_86	FOR_1	CALL_36
0x400263a	      0xbe00000000	                              mov esi, 0	      8907	dwarf.c	FUNCTION_86	FOR_1	CALL_36
0x400263f	      0xe800000000	                          call 0x4002644	      8907	dwarf.c	FUNCTION_86	FOR_1	CALL_36
0x4002644	            0x89da	                            mov edx, ebx	       104	stdio2.h	CALL_16
0x4002646	      0x4e8d442dff	                 lea r8, [rbp + r13 - 1]	       104	stdio2.h	CALL_16
0x400264b	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400264e	            0xd1ea	                              shr edx, 1	       104	stdio2.h	CALL_16
0x4002650	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4002652	          0x4889e9	                            mov rcx, rbp	       104	stdio2.h	CALL_16
0x4002655	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400265a	          0x83c302	                              add ebx, 2	      8902	dwarf.c	FUNCTION_86	FOR_1
0x400265d	      0xe800000000	                          call 0x4002662	       104	stdio2.h	CALL_16
0x4002662	          0x4139df	                           cmp r15d, ebx	      8902	dwarf.c	FUNCTION_86	FOR_1
0x4002665	            0x77a1	                            ja 0x4002608	      8902	dwarf.c	FUNCTION_86	FOR_1
0x4002667	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	      8902	dwarf.c	FUNCTION_86	FOR_1
0x400266c	      0x4c8b6c2448	            mov r13, qword [rsp + 0x48] 	      8902	dwarf.c	FUNCTION_86	FOR_1
0x4002671	      0x488b6c2450	            mov rbp, qword [rsp + 0x50] 	      8902	dwarf.c	FUNCTION_86	FOR_1
0x4002676	      0x4c8b542458	            mov r10, qword [rsp + 0x58] 	      8902	dwarf.c	FUNCTION_86	FOR_1
0x400267b	            0x89e8	                            mov eax, ebp	      8868	dwarf.c	FUNCTION_86
0x400267d	            0x31ff	                            xor edi, edi	      8912	dwarf.c	FUNCTION_86	CALL_37
0x400267f	      0xba05000000	                              mov edx, 5	      8912	dwarf.c	FUNCTION_86	CALL_37
0x4002684	          0x4429e8	                           sub eax, r13d	      8868	dwarf.c	FUNCTION_86
0x4002687	      0xbe00000000	                              mov esi, 0	      8912	dwarf.c	FUNCTION_86	CALL_37
0x400268c	      0x4c89542418	             mov qword [rsp + 0x18], r10	      8912	dwarf.c	FUNCTION_86	CALL_37
0x4002691	          0xc1e803	                              shr eax, 3	      8868	dwarf.c	FUNCTION_86
0x4002694	          0x4531ff	                          xor r15d, r15d	      8890	dwarf.c	FUNCTION_86
0x4002697	            0x89c5	                            mov ebp, eax	      8868	dwarf.c	FUNCTION_86
0x4002699	      0xe800000000	                          call 0x400269e	      8912	dwarf.c	FUNCTION_86	CALL_37
0x400269e	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40026a3	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40026a6	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40026a8	      0xe800000000	                          call 0x40026ad	       104	stdio2.h	CALL_16
0x40026ad	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	      8890	dwarf.c	FUNCTION_86
0x40026b2	            0x85ed	                           test ebp, ebp	      8913	dwarf.c	FUNCTION_86	FOR_2
0x40026b4	        0x4e8d2413	                    lea r12, [rbx + r10]	      8890	dwarf.c	FUNCTION_86
0x40026b8	     0xf84aa000000	                            je 0x4002768	      8913	dwarf.c	FUNCTION_86	FOR_2
0x40026be	      0x48895c2418	             mov qword [rsp + 0x18], rbx	      8913	dwarf.c	FUNCTION_86	FOR_2
0x40026c3	      0x4c89742438	             mov qword [rsp + 0x38], r14	      8913	dwarf.c	FUNCTION_86	FOR_2
0x40026c8	          0x4489fb	                           mov ebx, r15d	      8913	dwarf.c	FUNCTION_86	FOR_2
0x40026cb	          0x4189ef	                           mov r15d, ebp	      8913	dwarf.c	FUNCTION_86	FOR_2
0x40026ce	            0x6690	                                     nop	      8913	dwarf.c	FUNCTION_86	FOR_2
0x40026d0	    0x8d2cdd000000	                        lea ebp, [rbx*8]	      8915	dwarf.c	FUNCTION_86	FOR_2	CALL_38
0x40026d7	      0xbe08000000	                              mov esi, 8	      8915	dwarf.c	FUNCTION_86	FOR_2	CALL_38
0x40026dc	        0x498d3c2c	                    lea rdi, [r12 + rbp]	      8915	dwarf.c	FUNCTION_86	FOR_2	CALL_38
0x40026e0	      0xe800000000	                          call 0x40026e5	      8915	dwarf.c	FUNCTION_86	FOR_2	CALL_38
0x40026e5	      0x498d7c2c08	                lea rdi, [r12 + rbp + 8]	      8916	dwarf.c	FUNCTION_86	FOR_2	CALL_39
0x40026ea	      0xbe08000000	                              mov esi, 8	      8916	dwarf.c	FUNCTION_86	FOR_2	CALL_39
0x40026ef	          0x4989c5	                            mov r13, rax	      8915	dwarf.c	FUNCTION_86	FOR_2	CALL_38
0x40026f2	      0xe800000000	                          call 0x40026f7	      8916	dwarf.c	FUNCTION_86	FOR_2	CALL_39
0x40026f7	      0x498d7c2c10	            lea rdi, [r12 + rbp + 0x10] 	      8917	dwarf.c	FUNCTION_86	FOR_2	CALL_40
0x40026fc	      0xbe08000000	                              mov esi, 8	      8917	dwarf.c	FUNCTION_86	FOR_2	CALL_40
0x4002701	          0x4989c6	                            mov r14, rax	      8916	dwarf.c	FUNCTION_86	FOR_2	CALL_39
0x4002704	      0xe800000000	                          call 0x4002709	      8917	dwarf.c	FUNCTION_86	FOR_2	CALL_40
0x4002709	            0x31ff	                            xor edi, edi	      8919	dwarf.c	FUNCTION_86	FOR_2	CALL_41
0x400270b	      0xba05000000	                              mov edx, 5	      8919	dwarf.c	FUNCTION_86	FOR_2	CALL_41
0x4002710	      0xbe00000000	                              mov esi, 0	      8919	dwarf.c	FUNCTION_86	FOR_2	CALL_41
0x4002715	          0x4889c5	                            mov rbp, rax	      8917	dwarf.c	FUNCTION_86	FOR_2	CALL_40
0x4002718	      0xe800000000	                          call 0x400271d	      8919	dwarf.c	FUNCTION_86	FOR_2	CALL_41
0x400271d	          0x4889c6	                            mov rsi, rax	      8919	dwarf.c	FUNCTION_86	FOR_2	CALL_41
0x4002720	      0xb8abaaaaaa	                     mov eax, 0xaaaaaaab	       104	stdio2.h	CALL_16
0x4002725	          0x4d89f0	                             mov r8, r14	       104	stdio2.h	CALL_16
0x4002728	            0xf7e3	                                 mul ebx	       104	stdio2.h	CALL_16
0x400272a	          0x4c89e9	                            mov rcx, r13	       104	stdio2.h	CALL_16
0x400272d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4002732	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4002734	          0x83c303	                              add ebx, 3	      8913	dwarf.c	FUNCTION_86	FOR_2
0x4002737	            0xd1ea	                              shr edx, 1	       104	stdio2.h	CALL_16
0x4002739	      0xe800000000	                          call 0x400273e	       104	stdio2.h	CALL_16
0x400273e	      0xbe08000000	                              mov esi, 8	      8922	dwarf.c	FUNCTION_86	FOR_2	CALL_42
0x4002743	          0x4889ef	                            mov rdi, rbp	      8922	dwarf.c	FUNCTION_86	FOR_2	CALL_42
0x4002746	      0xe8d5dcffff	                call sym.print_dwarf_vma	      8922	dwarf.c	FUNCTION_86	FOR_2	CALL_42
0x400274b	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x4002750	      0xe800000000	                          call 0x4002755	       104	stdio2.h	CALL_16
0x4002755	          0x4139df	                           cmp r15d, ebx	      8913	dwarf.c	FUNCTION_86	FOR_2
0x4002758	     0xf8772ffffff	                            ja 0x40026d0	      8913	dwarf.c	FUNCTION_86	FOR_2
0x400275e	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      8913	dwarf.c	FUNCTION_86	FOR_2
0x4002763	      0x4c8b742438	            mov r14, qword [rsp + 0x38] 	      8913	dwarf.c	FUNCTION_86	FOR_2
0x4002768	            0x31ff	                            xor edi, edi	      8926	dwarf.c	FUNCTION_86	CALL_43
0x400276a	      0xba05000000	                              mov edx, 5	      8926	dwarf.c	FUNCTION_86	CALL_43
0x400276f	      0xbe00000000	                              mov esi, 0	      8926	dwarf.c	FUNCTION_86	CALL_43
0x4002774	      0xe800000000	                          call 0x4002779	      8926	dwarf.c	FUNCTION_86	CALL_43
0x4002779	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400277e	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4002781	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4002783	      0xe800000000	                          call 0x4002788	       104	stdio2.h	CALL_16
0x4002788	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      8927	dwarf.c	FUNCTION_86	FOR_3
0x400278c	          0x4531ff	                          xor r15d, r15d	      8927	dwarf.c	FUNCTION_86	FOR_3
0x400278f	          0x8d48ec	                   lea ecx, [rax - 0x14]	      8927	dwarf.c	FUNCTION_86	FOR_3
0x4002792	            0x85c0	                           test eax, eax	      8927	dwarf.c	FUNCTION_86	FOR_3
0x4002794	        0x894c2418	             mov dword [rsp + 0x18], ecx	      8927	dwarf.c	FUNCTION_86	FOR_3
0x4002798	     0xf84b1000000	                            je 0x400284f	      8927	dwarf.c	FUNCTION_86	FOR_3
0x400279e	      0x488b6c2430	            mov rbp, qword [rsp + 0x30] 	      8927	dwarf.c	FUNCTION_86	FOR_3
0x40027a3	      0x48895c2438	             mov qword [rsp + 0x38], rbx	      8927	dwarf.c	FUNCTION_86	FOR_3
0x40027a8	      0x4c89742430	             mov qword [rsp + 0x30], r14	      8927	dwarf.c	FUNCTION_86	FOR_3
0x40027ad	      0x448b74242c	           mov r14d, dword [rsp + 0x2c] 	      8927	dwarf.c	FUNCTION_86	FOR_3
0x40027b2	            0xeb0f	                           jmp 0x40027c3	      8927	dwarf.c	FUNCTION_86	FOR_3
0x40027b4	         0xf1f4000	                         nop dword [rax]	      8927	dwarf.c	FUNCTION_86	FOR_3
0x40027b8	      0x443b7c2418	           cmp r15d, dword [rsp + 0x18] 	      8927	dwarf.c	FUNCTION_86	FOR_3
0x40027bd	     0xf8782000000	                            ja 0x4002845	      8927	dwarf.c	FUNCTION_86	FOR_3
0x40027c3	          0x4489fb	                           mov ebx, r15d	      8930	dwarf.c	FUNCTION_86	FOR_3	CALL_44
0x40027c6	      0xbe08000000	                              mov esi, 8	      8930	dwarf.c	FUNCTION_86	FOR_3	CALL_44
0x40027cb	        0x4183c714	                          add r15d, 0x14	      8928	dwarf.c	FUNCTION_86	FOR_3
0x40027cf	      0x488d7c1d00	                    lea rdi, [rbp + rbx]	      8930	dwarf.c	FUNCTION_86	FOR_3	CALL_44
0x40027d4	      0xe800000000	                          call 0x40027d9	      8930	dwarf.c	FUNCTION_86	FOR_3	CALL_44
0x40027d9	      0x488d7c1d08	                lea rdi, [rbp + rbx + 8]	      8931	dwarf.c	FUNCTION_86	FOR_3	CALL_45
0x40027de	      0xbe08000000	                              mov esi, 8	      8931	dwarf.c	FUNCTION_86	FOR_3	CALL_45
0x40027e3	          0x4989c5	                            mov r13, rax	      8930	dwarf.c	FUNCTION_86	FOR_3	CALL_44
0x40027e6	      0xe800000000	                          call 0x40027eb	      8931	dwarf.c	FUNCTION_86	FOR_3	CALL_45
0x40027eb	      0x488d7c1d10	            lea rdi, [rbp + rbx + 0x10] 	      8932	dwarf.c	FUNCTION_86	FOR_3	CALL_46
0x40027f0	      0xbe04000000	                              mov esi, 4	      8932	dwarf.c	FUNCTION_86	FOR_3	CALL_46
0x40027f5	          0x4989c4	                            mov r12, rax	      8931	dwarf.c	FUNCTION_86	FOR_3	CALL_45
0x40027f8	      0xe800000000	                          call 0x40027fd	      8932	dwarf.c	FUNCTION_86	FOR_3	CALL_46
0x40027fd	      0xbe08000000	                              mov esi, 8	      8934	dwarf.c	FUNCTION_86	FOR_3	CALL_47
0x4002802	          0x4c89ef	                            mov rdi, r13	      8934	dwarf.c	FUNCTION_86	FOR_3	CALL_47
0x4002805	          0x4889c3	                            mov rbx, rax	      8932	dwarf.c	FUNCTION_86	FOR_3	CALL_46
0x4002808	      0xe813dcffff	                call sym.print_dwarf_vma	      8934	dwarf.c	FUNCTION_86	FOR_3	CALL_47
0x400280d	      0xbe08000000	                              mov esi, 8	      8935	dwarf.c	FUNCTION_86	FOR_3	CALL_48
0x4002812	          0x4c89e7	                            mov rdi, r12	      8935	dwarf.c	FUNCTION_86	FOR_3	CALL_48
0x4002815	      0xe806dcffff	                call sym.print_dwarf_vma	      8935	dwarf.c	FUNCTION_86	FOR_3	CALL_48
0x400281a	            0x31ff	                            xor edi, edi	      8936	dwarf.c	FUNCTION_86	FOR_3	CALL_49
0x400281c	      0xba05000000	                              mov edx, 5	      8936	dwarf.c	FUNCTION_86	FOR_3	CALL_49
0x4002821	      0xbe00000000	                              mov esi, 0	      8936	dwarf.c	FUNCTION_86	FOR_3	CALL_49
0x4002826	      0xe800000000	                          call 0x400282b	      8936	dwarf.c	FUNCTION_86	FOR_3	CALL_49
0x400282b	            0x89da	                            mov edx, ebx	       104	stdio2.h	CALL_16
0x400282d	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4002830	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4002835	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4002837	      0xe800000000	                          call 0x400283c	       104	stdio2.h	CALL_16
0x400283c	          0x4539fe	                          cmp r14d, r15d	      8927	dwarf.c	FUNCTION_86	FOR_3
0x400283f	     0xf8773ffffff	                            ja 0x40027b8	      8927	dwarf.c	FUNCTION_86	FOR_3
0x4002845	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	      8927	dwarf.c	FUNCTION_86	FOR_3
0x400284a	      0x4c8b742430	            mov r14, qword [rsp + 0x30] 	      8927	dwarf.c	FUNCTION_86	FOR_3
0x400284f	        0x8b442408	                mov eax, dword [rsp + 8]	      8887	dwarf.c	FUNCTION_86
0x4002853	          0x2b0424	                    sub eax, dword [rsp]	      8887	dwarf.c	FUNCTION_86
0x4002856	            0x31ff	                            xor edi, edi	      8939	dwarf.c	FUNCTION_86	CALL_50
0x4002858	      0xba05000000	                              mov edx, 5	      8939	dwarf.c	FUNCTION_86	CALL_50
0x400285d	      0xbe00000000	                              mov esi, 0	      8939	dwarf.c	FUNCTION_86	CALL_50
0x4002862	          0xc1e803	                              shr eax, 3	      8887	dwarf.c	FUNCTION_86
0x4002865	          0x4189c4	                           mov r12d, eax	      8887	dwarf.c	FUNCTION_86
0x4002868	      0xe800000000	                          call 0x400286d	      8939	dwarf.c	FUNCTION_86	CALL_50
0x400286d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4002872	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4002875	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4002877	      0xe800000000	                          call 0x400287c	       104	stdio2.h	CALL_16
0x400287c	          0x4585e4	                         test r12d, r12d	      8940	dwarf.c	FUNCTION_86	FOR_4
0x400287f	     0xf84db030000	                            je 0x4002c60	      8940	dwarf.c	FUNCTION_86	FOR_4
0x4002885	        0x8b442444	            mov eax, dword [rsp + 0x44] 	      8940	dwarf.c	FUNCTION_86	FOR_4
0x4002889	      0x4c8b6c2420	            mov r13, qword [rsp + 0x20] 	      8893	dwarf.c	FUNCTION_86
0x400288e	          0x4531ff	                          xor r15d, r15d	      8893	dwarf.c	FUNCTION_86
0x4002891	        0x44892424	                   mov dword [rsp], r12d	      8893	dwarf.c	FUNCTION_86
0x4002895	          0xc1e804	                              shr eax, 4	      8893	dwarf.c	FUNCTION_86
0x4002898	          0x4901dd	                            add r13, rbx	      8893	dwarf.c	FUNCTION_86
0x400289b	      0x48035c2410	             add rbx, qword [rsp + 0x10]	      8893	dwarf.c	FUNCTION_86
0x40028a0	        0x8944242c	             mov dword [rsp + 0x2c], eax	      8893	dwarf.c	FUNCTION_86
0x40028a4	      0xe9c3000000	                           jmp 0x400296c	      8893	dwarf.c	FUNCTION_86
0x40028a9	     0xf1f80000000	                         nop dword [rax]	      8893	dwarf.c	FUNCTION_86
0x40028b0	      0xba05000000	                              mov edx, 5	      8956	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14	CALL_53
0x40028b5	      0xbe00000000	                              mov esi, 0	      8956	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14	CALL_53
0x40028ba	            0x31ff	                            xor edi, edi	      8956	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14	CALL_53
0x40028bc	      0xe800000000	                          call 0x40028c1	      8956	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14	CALL_53
0x40028c1	            0x89e9	                            mov ecx, ebp	       104	stdio2.h	CALL_16
0x40028c3	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40028c6	          0x4489fa	                           mov edx, r15d	       104	stdio2.h	CALL_16
0x40028c9	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40028ce	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40028d0	      0xe800000000	                          call 0x40028d5	       104	stdio2.h	CALL_16
0x40028d5	      0xba05000000	                              mov edx, 5	      8957	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14	CALL_55
0x40028da	      0xbe00000000	                              mov esi, 0	      8957	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14	CALL_55
0x40028df	            0x31ff	                            xor edi, edi	      8957	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14	CALL_55
0x40028e1	      0xe800000000	                          call 0x40028e6	      8957	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14	CALL_55
0x40028e6	          0x4489fa	                           mov edx, r15d	      8957	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14	CALL_55
0x40028e9	          0x4889c7	                            mov rdi, rax	      8957	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14	CALL_55
0x40028ec	            0x89ee	                            mov esi, ebp	      8957	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14	CALL_55
0x40028ee	            0x31c0	                            xor eax, eax	      8957	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14	CALL_55
0x40028f0	      0xe800000000	                          call 0x40028f5	      8957	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14	CALL_55
0x40028f5	          0x4489e5	                           mov ebp, r12d	      8957	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14	CALL_55
0x40028f8	          0x4c89ef	                            mov rdi, r13	      8966	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15
0x40028fb	          0x4801ef	                            add rdi, rbp	      8966	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15
0x40028fe	            0x7216	                            jb 0x4002916	      8966	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15
0x4002900	        0x498b4630	            mov rax, qword [r14 + 0x30] 	      8966	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15
0x4002904	        0x498b5620	            mov rdx, qword [r14 + 0x20] 	      8966	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15
0x4002908	      0x488d4402fd	                lea rax, [rdx + rax - 3]	      8966	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15
0x400290d	          0x4839c7	                            cmp rdi, rax	      8966	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15
0x4002910	     0xf82da010000	                            jb 0x4002af0	      8966	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15
0x4002916	      0xba05000000	                              mov edx, 5	      8968	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15	CALL_56
0x400291b	      0xbe00000000	                              mov esi, 0	      8968	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15	CALL_56
0x4002920	            0x31ff	                            xor edi, edi	      8968	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15	CALL_56
0x4002922	      0xe800000000	                          call 0x4002927	      8968	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15	CALL_56
0x4002927	          0x4489e2	                           mov edx, r12d	       104	stdio2.h	CALL_16
0x400292a	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400292d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4002932	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4002934	      0xe800000000	                          call 0x4002939	       104	stdio2.h	CALL_16
0x4002939	      0xba05000000	                              mov edx, 5	      8969	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15	CALL_58
0x400293e	      0xbe00000000	                              mov esi, 0	      8969	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15	CALL_58
0x4002943	            0x31ff	                            xor edi, edi	      8969	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15	CALL_58
0x4002945	      0xe800000000	                          call 0x400294a	      8969	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15	CALL_58
0x400294a	          0x4489fa	                           mov edx, r15d	      8969	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15	CALL_58
0x400294d	          0x4889c7	                            mov rdi, rax	      8969	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15	CALL_58
0x4002950	          0x4489e6	                           mov esi, r12d	      8969	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15	CALL_58
0x4002953	            0x31c0	                            xor eax, eax	      8969	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15	CALL_58
0x4002955	      0xe800000000	                          call 0x400295a	      8969	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_15	CALL_58
0x400295a	        0x4183c701	                             add r15d, 1	      8940	dwarf.c	FUNCTION_86	FOR_4
0x400295e	        0x4883c308	                              add rbx, 8	      8940	dwarf.c	FUNCTION_86	FOR_4
0x4002962	        0x44393c24	                   cmp dword [rsp], r15d	      8940	dwarf.c	FUNCTION_86	FOR_4
0x4002966	     0xf84f4020000	                            je 0x4002c60	      8940	dwarf.c	FUNCTION_86	FOR_4
0x400296c	      0xbe04000000	                              mov esi, 4	      8942	dwarf.c	FUNCTION_86	FOR_4	CALL_51
0x4002971	          0x4889df	                            mov rdi, rbx	      8942	dwarf.c	FUNCTION_86	FOR_4	CALL_51
0x4002974	      0xe800000000	                          call 0x4002979	      8942	dwarf.c	FUNCTION_86	FOR_4	CALL_51
0x4002979	        0x488d7b04	                      lea rdi, [rbx + 4]	      8943	dwarf.c	FUNCTION_86	FOR_4	CALL_52
0x400297d	          0x4889c5	                            mov rbp, rax	      8942	dwarf.c	FUNCTION_86	FOR_4	CALL_51
0x4002980	      0xbe04000000	                              mov esi, 4	      8943	dwarf.c	FUNCTION_86	FOR_4	CALL_52
0x4002985	      0xe800000000	                          call 0x400298a	      8943	dwarf.c	FUNCTION_86	FOR_4	CALL_52
0x400298a	          0x4989c4	                            mov r12, rax	      8943	dwarf.c	FUNCTION_86	FOR_4	CALL_52
0x400298d	             0x9e8	                             or eax, ebp	      8946	dwarf.c	FUNCTION_86	FOR_4	IF_13
0x400298f	            0x74c9	                            je 0x400295a	      8946	dwarf.c	FUNCTION_86	FOR_4	IF_13
0x4002991	          0x4189e8	                            mov r8d, ebp	      8952	dwarf.c	FUNCTION_86	FOR_4	IF_13
0x4002994	          0x4d01e8	                             add r8, r13	      8954	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14
0x4002997	     0xf8213ffffff	                            jb 0x40028b0	      8954	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14
0x400299d	        0x498b4e30	            mov rcx, qword [r14 + 0x30] 	      8954	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14
0x40029a1	          0x4889c8	                            mov rax, rcx	      8954	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14
0x40029a4	        0x49034620	             add rax, qword [r14 + 0x20]	      8954	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14
0x40029a8	          0x4939c0	                             cmp r8, rax	      8954	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14
0x40029ab	     0xf83fffeffff	                           jae 0x40028b0	      8954	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_14
0x40029b1	        0x2b4c2440	             sub ecx, dword [rsp + 0x40]	       104	stdio2.h	CALL_16
0x40029b5	          0x4489fa	                           mov edx, r15d	       104	stdio2.h	CALL_16
0x40029b8	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x40029bd	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40029c2	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40029c4	            0x29e9	                            sub ecx, ebp	       104	stdio2.h	CALL_16
0x40029c6	      0xe800000000	                          call 0x40029cb	       104	stdio2.h	CALL_16
0x40029cb	      0xe925ffffff	                           jmp 0x40028f5	       104	stdio2.h	CALL_16
0x40029d0	        0x498b5e10	            mov rbx, qword [r14 + 0x10] 	      8847	dwarf.c	FUNCTION_86	IF_7	CALL_22
0x40029d4	      0xba05000000	                              mov edx, 5	      8847	dwarf.c	FUNCTION_86	IF_7	CALL_22
0x40029d9	      0xbe00000000	                              mov esi, 0	      8847	dwarf.c	FUNCTION_86	IF_7	CALL_22
0x40029de	            0x31ff	                            xor edi, edi	      8847	dwarf.c	FUNCTION_86	IF_7	CALL_22
0x40029e0	      0xe800000000	                          call 0x40029e5	      8847	dwarf.c	FUNCTION_86	IF_7	CALL_22
0x40029e5	          0x4889de	                            mov rsi, rbx	      8847	dwarf.c	FUNCTION_86	IF_7	CALL_22
0x40029e8	          0x4889c7	                            mov rdi, rax	      8847	dwarf.c	FUNCTION_86	IF_7	CALL_22
0x40029eb	            0x31c0	                            xor eax, eax	      8847	dwarf.c	FUNCTION_86	IF_7	CALL_22
0x40029ed	      0xe800000000	                          call 0x40029f2	      8847	dwarf.c	FUNCTION_86	IF_7	CALL_22
0x40029f2	            0x31c0	                            xor eax, eax	      8848	dwarf.c	FUNCTION_86	IF_7
0x40029f4	        0x4883c468	                           add rsp, 0x68	      9018	dwarf.c	FUNCTION_86
0x40029f8	              0x5b	                                 pop rbx	      9018	dwarf.c	FUNCTION_86
0x40029f9	              0x5d	                                 pop rbp	      9018	dwarf.c	FUNCTION_86
0x40029fa	            0x415c	                                 pop r12	      9018	dwarf.c	FUNCTION_86
0x40029fc	            0x415d	                                 pop r13	      9018	dwarf.c	FUNCTION_86
0x40029fe	            0x415e	                                 pop r14	      9018	dwarf.c	FUNCTION_86
0x4002a00	            0x415f	                                 pop r15	      9018	dwarf.c	FUNCTION_86
0x4002a02	              0xc3	                                     ret	      9018	dwarf.c	FUNCTION_86
0x4002a03	       0xf1f440000	                   nop dword [rax + rax]	      9018	dwarf.c	FUNCTION_86
0x4002a08	        0x498b5e10	            mov rbx, qword [r14 + 0x10] 	      8808	dwarf.c	FUNCTION_86	IF_1	CALL_3
0x4002a0c	      0xba05000000	                              mov edx, 5	      8808	dwarf.c	FUNCTION_86	IF_1	CALL_3
0x4002a11	      0xbe00000000	                              mov esi, 0	      8808	dwarf.c	FUNCTION_86	IF_1	CALL_3
0x4002a16	            0xebc6	                           jmp 0x40029de	      8808	dwarf.c	FUNCTION_86	IF_1	CALL_3
0x4002a18	     0xf1f84000000	                   nop dword [rax + rax]	      8808	dwarf.c	FUNCTION_86	IF_1	CALL_3
0x4002a20	      0xba05000000	                              mov edx, 5	      8819	dwarf.c	FUNCTION_86	IF_2	CALL_7
0x4002a25	      0xbe00000000	                              mov esi, 0	      8819	dwarf.c	FUNCTION_86	IF_2	CALL_7
0x4002a2a	            0x31ff	                            xor edi, edi	      8819	dwarf.c	FUNCTION_86	IF_2	CALL_7
0x4002a2c	      0xe800000000	                          call 0x4002a31	      8819	dwarf.c	FUNCTION_86	IF_2	CALL_7
0x4002a31	          0x4c89e6	                            mov rsi, r12	      8819	dwarf.c	FUNCTION_86	IF_2	CALL_7
0x4002a34	          0x4889c7	                            mov rdi, rax	      8819	dwarf.c	FUNCTION_86	IF_2	CALL_7
0x4002a37	            0x31c0	                            xor eax, eax	      8819	dwarf.c	FUNCTION_86	IF_2	CALL_7
0x4002a39	      0xe800000000	                          call 0x4002a3e	      8819	dwarf.c	FUNCTION_86	IF_2	CALL_7
0x4002a3e	        0x4883c468	                           add rsp, 0x68	      9018	dwarf.c	FUNCTION_86
0x4002a42	            0x31c0	                            xor eax, eax	      8820	dwarf.c	FUNCTION_86	IF_2
0x4002a44	              0x5b	                                 pop rbx	      9018	dwarf.c	FUNCTION_86
0x4002a45	              0x5d	                                 pop rbp	      9018	dwarf.c	FUNCTION_86
0x4002a46	            0x415c	                                 pop r12	      9018	dwarf.c	FUNCTION_86
0x4002a48	            0x415d	                                 pop r13	      9018	dwarf.c	FUNCTION_86
0x4002a4a	            0x415e	                                 pop r14	      9018	dwarf.c	FUNCTION_86
0x4002a4c	            0x415f	                                 pop r15	      9018	dwarf.c	FUNCTION_86
0x4002a4e	              0xc3	                                     ret	      9018	dwarf.c	FUNCTION_86
0x4002a4f	              0x90	                                     nop	      9018	dwarf.c	FUNCTION_86
0x4002a50	            0x31ff	                            xor edi, edi	      8823	dwarf.c	FUNCTION_86	CALL_9
0x4002a52	      0xba05000000	                              mov edx, 5	      8823	dwarf.c	FUNCTION_86	CALL_9
0x4002a57	      0xbe00000000	                              mov esi, 0	      8823	dwarf.c	FUNCTION_86	CALL_9
0x4002a5c	      0xe800000000	                          call 0x4002a61	      8823	dwarf.c	FUNCTION_86	CALL_9
0x4002a61	          0x4889c7	                            mov rdi, rax	      8823	dwarf.c	FUNCTION_86	CALL_9
0x4002a64	            0x31c0	                            xor eax, eax	      8823	dwarf.c	FUNCTION_86	CALL_9
0x4002a66	      0xe800000000	                          call 0x4002a6b	      8823	dwarf.c	FUNCTION_86	CALL_9
0x4002a6b	            0x31ff	                            xor edi, edi	      8825	dwarf.c	FUNCTION_86	CALL_11
0x4002a6d	      0xba05000000	                              mov edx, 5	      8825	dwarf.c	FUNCTION_86	CALL_11
0x4002a72	      0xbe00000000	                              mov esi, 0	      8825	dwarf.c	FUNCTION_86	CALL_11
0x4002a77	      0xe800000000	                          call 0x4002a7c	      8825	dwarf.c	FUNCTION_86	CALL_11
0x4002a7c	          0x4889c7	                            mov rdi, rax	      8825	dwarf.c	FUNCTION_86	CALL_11
0x4002a7f	            0x31c0	                            xor eax, eax	      8825	dwarf.c	FUNCTION_86	CALL_11
0x4002a81	      0xe800000000	                          call 0x4002a86	      8825	dwarf.c	FUNCTION_86	CALL_11
0x4002a86	            0x31ff	                            xor edi, edi	      8827	dwarf.c	FUNCTION_86	CALL_13
0x4002a88	      0xba05000000	                              mov edx, 5	      8827	dwarf.c	FUNCTION_86	CALL_13
0x4002a8d	      0xbe00000000	                              mov esi, 0	      8827	dwarf.c	FUNCTION_86	CALL_13
0x4002a92	      0xe800000000	                          call 0x4002a97	      8827	dwarf.c	FUNCTION_86	CALL_13
0x4002a97	          0x4889c7	                            mov rdi, rax	      8827	dwarf.c	FUNCTION_86	CALL_13
0x4002a9a	            0x31c0	                            xor eax, eax	      8827	dwarf.c	FUNCTION_86	CALL_13
0x4002a9c	      0xe800000000	                          call 0x4002aa1	      8827	dwarf.c	FUNCTION_86	CALL_13
0x4002aa1	            0x31ff	                            xor edi, edi	      8829	dwarf.c	FUNCTION_86	CALL_15
0x4002aa3	      0xba05000000	                              mov edx, 5	      8829	dwarf.c	FUNCTION_86	CALL_15
0x4002aa8	      0xbe00000000	                              mov esi, 0	      8829	dwarf.c	FUNCTION_86	CALL_15
0x4002aad	      0xe800000000	                          call 0x4002ab2	      8829	dwarf.c	FUNCTION_86	CALL_15
0x4002ab2	          0x4889c7	                            mov rdi, rax	      8829	dwarf.c	FUNCTION_86	CALL_15
0x4002ab5	            0x31c0	                            xor eax, eax	      8829	dwarf.c	FUNCTION_86	CALL_15
0x4002ab7	      0xe800000000	                          call 0x4002abc	      8829	dwarf.c	FUNCTION_86	CALL_15
0x4002abc	      0xe9e2f9ffff	                           jmp 0x40024a3	      8829	dwarf.c	FUNCTION_86	CALL_15
0x4002ac1	     0xf1f80000000	                         nop dword [rax]	      8829	dwarf.c	FUNCTION_86	CALL_15
0x4002ac8	      0xba05000000	                              mov edx, 5	      8854	dwarf.c	FUNCTION_86	IF_8	CALL_24
0x4002acd	      0xbe00000000	                              mov esi, 0	      8854	dwarf.c	FUNCTION_86	IF_8	CALL_24
0x4002ad2	            0x31ff	                            xor edi, edi	      8854	dwarf.c	FUNCTION_86	IF_8	CALL_24
0x4002ad4	      0xe800000000	                          call 0x4002ad9	      8854	dwarf.c	FUNCTION_86	IF_8	CALL_24
0x4002ad9	          0x4489fa	                           mov edx, r15d	      8854	dwarf.c	FUNCTION_86	IF_8	CALL_24
0x4002adc	          0x4889c7	                            mov rdi, rax	      8854	dwarf.c	FUNCTION_86	IF_8	CALL_24
0x4002adf	          0x4489ee	                           mov esi, r13d	      8854	dwarf.c	FUNCTION_86	IF_8	CALL_24
0x4002ae2	            0x31c0	                            xor eax, eax	      8854	dwarf.c	FUNCTION_86	IF_8	CALL_24
0x4002ae4	      0xe800000000	                          call 0x4002ae9	      8854	dwarf.c	FUNCTION_86	IF_8	CALL_24
0x4002ae9	            0x31c0	                            xor eax, eax	      8856	dwarf.c	FUNCTION_86	IF_8
0x4002aeb	      0xe904ffffff	                           jmp 0x40029f4	      8856	dwarf.c	FUNCTION_86	IF_8
0x4002af0	      0xbe04000000	                              mov esi, 4	      8974	dwarf.c	FUNCTION_86	FOR_4	IF_13	CALL_59
0x4002af5	      0xe800000000	                          call 0x4002afa	      8974	dwarf.c	FUNCTION_86	FOR_4	IF_13	CALL_59
0x4002afa	          0x4889c1	                            mov rcx, rax	      8974	dwarf.c	FUNCTION_86	FOR_4	IF_13	CALL_59
0x4002afd	      0x4889442410	             mov qword [rsp + 0x10], rax	      8974	dwarf.c	FUNCTION_86	FOR_4	IF_13	CALL_59
0x4002b02	        0x89442420	             mov dword [rsp + 0x20], eax	      8974	dwarf.c	FUNCTION_86	FOR_4	IF_13	CALL_59
0x4002b06	          0xc1e002	                              shl eax, 2	      8976	dwarf.c	FUNCTION_86	FOR_4	IF_13
0x4002b09	            0x39c1	                            cmp ecx, eax	      8977	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16
0x4002b0b	     0xf8770010000	                            ja 0x4002c81	      8977	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16
0x4002b11	        0x488d4d04	                      lea rcx, [rbp + 4]	      8977	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16
0x4002b15	        0x498b5630	            mov rdx, qword [r14 + 0x30] 	      8979	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16
0x4002b19	        0x49035620	             add rdx, qword [r14 + 0x20]	      8979	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16
0x4002b1d	          0x4801c8	                            add rax, rcx	      8976	dwarf.c	FUNCTION_86	FOR_4	IF_13
0x4002b20	      0x48894c2408	                mov qword [rsp + 8], rcx	      8976	dwarf.c	FUNCTION_86	FOR_4	IF_13
0x4002b25	          0x4c01e8	                            add rax, r13	      8976	dwarf.c	FUNCTION_86	FOR_4	IF_13
0x4002b28	          0x4839d0	                            cmp rax, rdx	      8979	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16
0x4002b2b	     0xf8350010000	                           jae 0x4002c81	      8979	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16
0x4002b31	          0x4939c5	                            cmp r13, rax	      8979	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16
0x4002b34	     0xf8747010000	                            ja 0x4002c81	      8979	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16
0x4002b3a	      0x837c241001	               cmp dword [rsp + 0x10], 1	      8987	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_17
0x4002b3f	     0xf863b020000	                           jbe 0x4002d80	      8987	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_17
0x4002b45	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x4002b4a	      0xe800000000	                          call 0x4002b4f	       104	stdio2.h	CALL_16
0x4002b4f	      0x837c241001	               cmp dword [rsp + 0x10], 1	       104	stdio2.h	CALL_16
0x4002b54	      0xb820000000	                           mov eax, 0x20	       104	stdio2.h	CALL_16
0x4002b59	      0xb909000000	                              mov ecx, 9	       104	stdio2.h	CALL_16
0x4002b5e	        0x8b6c2420	            mov ebp, dword [rsp + 0x20] 	      8893	dwarf.c	FUNCTION_86
0x4002b62	      0x48895c2430	             mov qword [rsp + 0x30], rbx	      8893	dwarf.c	FUNCTION_86
0x4002b67	      0x44897c2420	            mov dword [rsp + 0x20], r15d	      8893	dwarf.c	FUNCTION_86
0x4002b6c	      0x4c89742438	             mov qword [rsp + 0x38], r14	      8893	dwarf.c	FUNCTION_86
0x4002b71	      0x448b7c242c	           mov r15d, dword [rsp + 0x2c] 	      8893	dwarf.c	FUNCTION_86
0x4002b76	           0xf45c1	                         cmovne eax, ecx	      8893	dwarf.c	FUNCTION_86
0x4002b79	          0x4531e4	                          xor r12d, r12d	      8893	dwarf.c	FUNCTION_86
0x4002b7c	        0x89442418	             mov dword [rsp + 0x18], eax	      8893	dwarf.c	FUNCTION_86
0x4002b80	      0xe981000000	                           jmp 0x4002c06	      8893	dwarf.c	FUNCTION_86
0x4002b85	           0xf1f00	                         nop dword [rax]	      8893	dwarf.c	FUNCTION_86
0x4002b88	        0x8b542418	            mov edx, dword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x4002b8c	            0x89c1	                            mov ecx, eax	       104	stdio2.h	CALL_16
0x4002b8e	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4002b93	          0x4429f9	                           sub ecx, r15d	       104	stdio2.h	CALL_16
0x4002b96	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4002b9b	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4002b9d	      0xe800000000	                          call 0x4002ba2	       104	stdio2.h	CALL_16
0x4002ba2	    0x488b34dd0000	                  mov rsi, qword [rbx*8]	      4752	dwarf.c	FUNCTION_42	CALL_9
0x4002baa	      0xba05000000	                              mov edx, 5	      4752	dwarf.c	FUNCTION_42	CALL_9
0x4002baf	            0x31ff	                            xor edi, edi	      4752	dwarf.c	FUNCTION_42	CALL_9
0x4002bb1	      0xe800000000	                          call 0x4002bb6	      4752	dwarf.c	FUNCTION_42	CALL_9
0x4002bb6	          0x4585f6	                         test r14d, r14d	      9006	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5
0x4002bb9	          0x4889c3	                            mov rbx, rax	      4752	dwarf.c	FUNCTION_42	CALL_9
0x4002bbc	      0xba05000000	                              mov edx, 5	      9006	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5
0x4002bc1	     0xf84a9000000	                            je 0x4002c70	      9006	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5
0x4002bc7	      0xbe00000000	                              mov esi, 0	      9006	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5
0x4002bcc	            0x31ff	                            xor edi, edi	      9006	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5
0x4002bce	      0xe800000000	                          call 0x4002bd3	      9006	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5
0x4002bd3	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_16
0x4002bd6	          0x4889d9	                            mov rcx, rbx	       104	stdio2.h	CALL_16
0x4002bd9	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4002bdb	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4002be0	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4002be5	      0xe800000000	                          call 0x4002bea	       104	stdio2.h	CALL_16
0x4002bea	          0x83fd01	                              cmp ebp, 1	      9009	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5	IF_19
0x4002bed	            0x740a	                            je 0x4002bf9	      9009	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5	IF_19
0x4002bef	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x4002bf4	      0xe800000000	                          call 0x4002bf9	       104	stdio2.h	CALL_16
0x4002bf9	        0x4183c401	                             add r12d, 1	      8990	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5
0x4002bfd	          0x4439e5	                           cmp ebp, r12d	      8990	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5
0x4002c00	     0xf8451010000	                            je 0x4002d57	      8990	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5
0x4002c06	    0x428d3ca50000	                        lea edi, [r12*4]	      8995	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5	CALL_62
0x4002c0e	      0x48037c2408	                add rdi, qword [rsp + 8]	      8995	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5	CALL_62
0x4002c13	      0xbe04000000	                              mov esi, 4	      8995	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5	CALL_62
0x4002c18	          0x4c01ef	                            add rdi, r13	      8995	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5	CALL_62
0x4002c1b	      0xe800000000	                          call 0x4002c20	      8995	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5	CALL_62
0x4002c20	            0x89c3	                            mov ebx, eax	      8997	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5	CALL_64
0x4002c22	          0x4189c6	                           mov r14d, eax	      8996	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5	CALL_63
0x4002c25	      0x25ffffff00	                       and eax, 0xffffff	      8998	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5	CALL_65
0x4002c2a	          0xc1eb1c	                           shr ebx, 0x1c	      8997	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5	CALL_64
0x4002c2d	        0x41c1ee1f	                          shr r14d, 0x1f	      8996	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5	CALL_63
0x4002c31	          0x83e307	                              and ebx, 7	      8997	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5	CALL_64
0x4002c34	          0x4439f8	                           cmp eax, r15d	      9000	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5	IF_18
0x4002c37	     0xf834bffffff	                           jae 0x4002b88	      9000	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5	IF_18
0x4002c3d	        0x8b542418	            mov edx, dword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x4002c41	            0x89c1	                            mov ecx, eax	       104	stdio2.h	CALL_16
0x4002c43	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4002c48	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4002c4d	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4002c4f	      0xe800000000	                          call 0x4002c54	       104	stdio2.h	CALL_16
0x4002c54	      0xe949ffffff	                           jmp 0x4002ba2	       104	stdio2.h	CALL_16
0x4002c59	     0xf1f80000000	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x4002c60	      0xb801000000	                              mov eax, 1	      9017	dwarf.c	FUNCTION_86
0x4002c65	      0xe98afdffff	                           jmp 0x40029f4	      9017	dwarf.c	FUNCTION_86
0x4002c6a	    0x660f1f440000	                    nop word [rax + rax]	      9017	dwarf.c	FUNCTION_86
0x4002c70	      0xbe00000000	                              mov esi, 0	      9006	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5
0x4002c75	            0x31ff	                            xor edi, edi	      9006	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5
0x4002c77	      0xe800000000	                          call 0x4002c7c	      9006	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5
0x4002c7c	      0xe952ffffff	                           jmp 0x4002bd3	      9006	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5
0x4002c81	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	       104	stdio2.h	CALL_16
0x4002c86	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4002c8b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4002c90	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4002c92	            0x89ea	                            mov edx, ebp	       104	stdio2.h	CALL_16
0x4002c94	      0xe800000000	                          call 0x4002c99	       104	stdio2.h	CALL_16
0x4002c99	            0x31ff	                            xor edi, edi	      8982	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16	CALL_61
0x4002c9b	      0xba05000000	                              mov edx, 5	      8982	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16	CALL_61
0x4002ca0	      0xbe00000000	                              mov esi, 0	      8982	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16	CALL_61
0x4002ca5	      0xe800000000	                          call 0x4002caa	      8982	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16	CALL_61
0x4002caa	          0x4489fa	                           mov edx, r15d	      8982	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16	CALL_61
0x4002cad	          0x4889c7	                            mov rdi, rax	      8982	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16	CALL_61
0x4002cb0	            0x89ee	                            mov esi, ebp	      8982	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16	CALL_61
0x4002cb2	            0x31c0	                            xor eax, eax	      8982	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16	CALL_61
0x4002cb4	      0xe800000000	                          call 0x4002cb9	      8982	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16	CALL_61
0x4002cb9	      0xe99cfcffff	                           jmp 0x400295a	      8984	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_16
0x4002cbe	      0xba05000000	                              mov edx, 5	      8863	dwarf.c	FUNCTION_86	IF_9	CALL_26
0x4002cc3	      0xbe00000000	                              mov esi, 0	      8863	dwarf.c	FUNCTION_86	IF_9	CALL_26
0x4002cc8	            0x31ff	                            xor edi, edi	      8863	dwarf.c	FUNCTION_86	IF_9	CALL_26
0x4002cca	      0xe800000000	                          call 0x4002ccf	      8863	dwarf.c	FUNCTION_86	IF_9	CALL_26
0x4002ccf	          0x4489ea	                           mov edx, r13d	      8863	dwarf.c	FUNCTION_86	IF_9	CALL_26
0x4002cd2	          0x4889c7	                            mov rdi, rax	      8863	dwarf.c	FUNCTION_86	IF_9	CALL_26
0x4002cd5	            0x89ee	                            mov esi, ebp	      8863	dwarf.c	FUNCTION_86	IF_9	CALL_26
0x4002cd7	            0x31c0	                            xor eax, eax	      8863	dwarf.c	FUNCTION_86	IF_9	CALL_26
0x4002cd9	      0xe800000000	                          call 0x4002cde	      8863	dwarf.c	FUNCTION_86	IF_9	CALL_26
0x4002cde	            0x31c0	                            xor eax, eax	      8865	dwarf.c	FUNCTION_86	IF_9
0x4002ce0	      0xe90ffdffff	                           jmp 0x40029f4	      8865	dwarf.c	FUNCTION_86	IF_9
0x4002ce5	      0xba05000000	                              mov edx, 5	      8897	dwarf.c	FUNCTION_86	IF_12	CALL_32
0x4002cea	      0xbe00000000	                              mov esi, 0	      8897	dwarf.c	FUNCTION_86	IF_12	CALL_32
0x4002cef	            0x31ff	                            xor edi, edi	      8897	dwarf.c	FUNCTION_86	IF_12	CALL_32
0x4002cf1	      0xe800000000	                          call 0x4002cf6	      8897	dwarf.c	FUNCTION_86	IF_12	CALL_32
0x4002cf6	          0x4889c7	                            mov rdi, rax	      8897	dwarf.c	FUNCTION_86	IF_12	CALL_32
0x4002cf9	            0x31c0	                            xor eax, eax	      8897	dwarf.c	FUNCTION_86	IF_12	CALL_32
0x4002cfb	      0xe800000000	                          call 0x4002d00	      8897	dwarf.c	FUNCTION_86	IF_12	CALL_32
0x4002d00	            0x31c0	                            xor eax, eax	      8898	dwarf.c	FUNCTION_86	IF_12
0x4002d02	      0xe9edfcffff	                           jmp 0x40029f4	      8898	dwarf.c	FUNCTION_86	IF_12
0x4002d07	      0xba05000000	                              mov edx, 5	      8873	dwarf.c	FUNCTION_86	IF_10	CALL_28
0x4002d0c	      0xbe00000000	                              mov esi, 0	      8873	dwarf.c	FUNCTION_86	IF_10	CALL_28
0x4002d11	            0x31ff	                            xor edi, edi	      8873	dwarf.c	FUNCTION_86	IF_10	CALL_28
0x4002d13	      0xe800000000	                          call 0x4002d18	      8873	dwarf.c	FUNCTION_86	IF_10	CALL_28
0x4002d18	          0x8b3424	                    mov esi, dword [rsp]	      8873	dwarf.c	FUNCTION_86	IF_10	CALL_28
0x4002d1b	          0x4889c7	                            mov rdi, rax	      8873	dwarf.c	FUNCTION_86	IF_10	CALL_28
0x4002d1e	            0x89ea	                            mov edx, ebp	      8873	dwarf.c	FUNCTION_86	IF_10	CALL_28
0x4002d20	            0x31c0	                            xor eax, eax	      8873	dwarf.c	FUNCTION_86	IF_10	CALL_28
0x4002d22	      0xe800000000	                          call 0x4002d27	      8873	dwarf.c	FUNCTION_86	IF_10	CALL_28
0x4002d27	            0x31c0	                            xor eax, eax	      8875	dwarf.c	FUNCTION_86	IF_10
0x4002d29	      0xe9c6fcffff	                           jmp 0x40029f4	      8875	dwarf.c	FUNCTION_86	IF_10
0x4002d2e	      0xba05000000	                              mov edx, 5	      8882	dwarf.c	FUNCTION_86	IF_11	CALL_30
0x4002d33	      0xbe00000000	                              mov esi, 0	      8882	dwarf.c	FUNCTION_86	IF_11	CALL_30
0x4002d38	            0x31ff	                            xor edi, edi	      8882	dwarf.c	FUNCTION_86	IF_11	CALL_30
0x4002d3a	      0xe800000000	                          call 0x4002d3f	      8882	dwarf.c	FUNCTION_86	IF_11	CALL_30
0x4002d3f	          0x8b1424	                    mov edx, dword [rsp]	      8882	dwarf.c	FUNCTION_86	IF_11	CALL_30
0x4002d42	        0x8b742408	                mov esi, dword [rsp + 8]	      8882	dwarf.c	FUNCTION_86	IF_11	CALL_30
0x4002d46	          0x4889c7	                            mov rdi, rax	      8882	dwarf.c	FUNCTION_86	IF_11	CALL_30
0x4002d49	            0x31c0	                            xor eax, eax	      8882	dwarf.c	FUNCTION_86	IF_11	CALL_30
0x4002d4b	      0xe800000000	                          call 0x4002d50	      8882	dwarf.c	FUNCTION_86	IF_11	CALL_30
0x4002d50	            0x31c0	                            xor eax, eax	      8884	dwarf.c	FUNCTION_86	IF_11
0x4002d52	      0xe99dfcffff	                           jmp 0x40029f4	      8884	dwarf.c	FUNCTION_86	IF_11
0x4002d57	      0x837c241001	               cmp dword [rsp + 0x10], 1	      9012	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_20
0x4002d5c	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	      9012	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_20
0x4002d61	      0x448b7c2420	           mov r15d, dword [rsp + 0x20] 	      9012	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_20
0x4002d66	      0x4c8b742438	            mov r14, qword [rsp + 0x38] 	      9012	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_20
0x4002d6b	     0xf85e9fbffff	                           jne 0x400295a	      9012	dwarf.c	FUNCTION_86	FOR_4	IF_13	IF_20
0x4002d71	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x4002d76	      0xe800000000	                          call 0x4002d7b	       104	stdio2.h	CALL_16
0x4002d7b	      0xe9dafbffff	                           jmp 0x400295a	       104	stdio2.h	CALL_16
0x4002d80	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      8990	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5
0x4002d84	            0x85c0	                           test eax, eax	      8990	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5
0x4002d86	     0xf85c3fdffff	                           jne 0x4002b4f	      8990	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5
0x4002d8c	            0xebe3	                           jmp 0x4002d71	      8990	dwarf.c	FUNCTION_86	FOR_4	IF_13	FOR_5
display_trace_info	ELSE,0:FOR,0:CALL,1:WHILE,0:DO,0:functions,0:SWITCH,0:IF,0	4
0x400bfd0	          0x8b5738	            mov edx, dword [rdi + 0x38] 	      6293	dwarf.c	FUNCTION_61	CALL_1
0x400bfd3	    0x41b801000000	                              mov r8d, 1	      6293	dwarf.c	FUNCTION_61	CALL_1
0x400bfd9	            0x31c9	                            xor ecx, ecx	      6293	dwarf.c	FUNCTION_61	CALL_1
0x400bfdb	      0xe900e8ffff	              jmp sym.process_debug_info	      6293	dwarf.c	FUNCTION_61	CALL_1
process_cu_tu_index	ELSE,11:FOR,8:CALL,53:WHILE,0:DO,0:functions,0:SWITCH,0:IF,41	1032
0x4002fb0	            0x4157	                                push r15	      9101	dwarf.c	FUNCTION_91
0x4002fb2	            0x4156	                                push r14	      9101	dwarf.c	FUNCTION_91
0x4002fb4	            0x4155	                                push r13	      9101	dwarf.c	FUNCTION_91
0x4002fb6	            0x4154	                                push r12	      9101	dwarf.c	FUNCTION_91
0x4002fb8	              0x55	                                push rbp	      9101	dwarf.c	FUNCTION_91
0x4002fb9	              0x53	                                push rbx	      9101	dwarf.c	FUNCTION_91
0x4002fba	          0x4889fd	                            mov rbp, rdi	      9101	dwarf.c	FUNCTION_91
0x4002fbd	    0x4881ecd80000	                           sub rsp, 0xd8	      9101	dwarf.c	FUNCTION_91
0x4002fc4	        0x4c8b7f20	            mov r15, qword [rdi + 0x20] 	      9102	dwarf.c	FUNCTION_91
0x4002fc8	    0x64488b042528	                mov rax, qword fs:[0x28]	      9101	dwarf.c	FUNCTION_91
0x4002fd1	    0x48898424c800	             mov qword [rsp + 0xc8], rax	      9101	dwarf.c	FUNCTION_91
0x4002fd9	            0x31c0	                            xor eax, eax	      9101	dwarf.c	FUNCTION_91
0x4002fdb	        0x488b4730	            mov rax, qword [rdi + 0x30] 	      9103	dwarf.c	FUNCTION_91
0x4002fdf	          0x4d85ff	                           test r15, r15	      9118	dwarf.c	FUNCTION_91	IF_1
0x4002fe2	        0x4d8d3407	                    lea r14, [r15 + rax]	      9103	dwarf.c	FUNCTION_91
0x4002fe6	     0xf847c050000	                            je 0x4003568	      9118	dwarf.c	FUNCTION_91	IF_1
0x4002fec	        0x4883f817	                           cmp rax, 0x17	      9124	dwarf.c	FUNCTION_91	IF_2
0x4002ff0	     0xf8682020000	                           jbe 0x4003278	      9124	dwarf.c	FUNCTION_91	IF_2
0x4002ff6	        0x4d8d6f04	                      lea r13, [r15 + 4]	      9131	dwarf.c	FUNCTION_91
0x4002ffa	            0x89f3	                            mov ebx, esi	      9131	dwarf.c	FUNCTION_91
0x4002ffc	          0x4d39ee	                            cmp r14, r13	      9131	dwarf.c	FUNCTION_91
0x4002fff	     0xf869b000000	                           jbe 0x40030a0	      9131	dwarf.c	FUNCTION_91
0x4003005	      0xbe04000000	                              mov esi, 4	      9131	dwarf.c	FUNCTION_91
0x400300a	          0x4c89ff	                            mov rdi, r15	      9131	dwarf.c	FUNCTION_91
0x400300d	        0x4d8d6708	                      lea r12, [r15 + 8]	      9133	dwarf.c	FUNCTION_91	IF_3
0x4003011	    0xff1500000000	                 call qword [0x04003017]	      9131	dwarf.c	FUNCTION_91
0x4003017	          0x83f801	                              cmp eax, 1	      9132	dwarf.c	FUNCTION_91	IF_3
0x400301a	        0x89442410	             mov dword [rsp + 0x10], eax	      9131	dwarf.c	FUNCTION_91
0x400301e	     0xf86dc0f0000	                           jbe 0x4004000	      9132	dwarf.c	FUNCTION_91	IF_3
0x4003024	          0x4d39e6	                            cmp r14, r12	      9133	dwarf.c	FUNCTION_91	IF_3
0x4003027	     0xf8773010000	                            ja 0x40031a0	      9133	dwarf.c	FUNCTION_91	IF_3
0x400302d	          0x4d39ee	                            cmp r14, r13	      9133	dwarf.c	FUNCTION_91	IF_3
0x4003030	            0x7612	                           jbe 0x4003044	      9133	dwarf.c	FUNCTION_91	IF_3
0x4003032	          0x4c89f6	                            mov rsi, r14	      9133	dwarf.c	FUNCTION_91	IF_3
0x4003035	          0x4c29ee	                            sub rsi, r13	      9133	dwarf.c	FUNCTION_91	IF_3
0x4003038	          0x8d46ff	                      lea eax, [rsi - 1]	      9133	dwarf.c	FUNCTION_91	IF_3
0x400303b	          0x83f807	                              cmp eax, 7	      9133	dwarf.c	FUNCTION_91	IF_3
0x400303e	     0xf8661010000	                           jbe 0x40031a5	      9133	dwarf.c	FUNCTION_91	IF_3
0x4003044	        0x4d8d6f0c	                    lea r13, [r15 + 0xc]	      9134	dwarf.c	FUNCTION_91
0x4003048	          0x4d39ee	                            cmp r14, r13	      9134	dwarf.c	FUNCTION_91
0x400304b	     0xf86d7010000	                           jbe 0x4003228	      9134	dwarf.c	FUNCTION_91
0x4003051	          0x4c89e7	                            mov rdi, r12	      9134	dwarf.c	FUNCTION_91
0x4003054	        0x4d8d6710	                   lea r12, [r15 + 0x10]	      9135	dwarf.c	FUNCTION_91
0x4003058	      0xbe04000000	                              mov esi, 4	      9134	dwarf.c	FUNCTION_91
0x400305d	    0xff1500000000	                 call qword [0x04003063]	      9134	dwarf.c	FUNCTION_91
0x4003063	          0x4d39e6	                            cmp r14, r12	      9135	dwarf.c	FUNCTION_91
0x4003066	        0x89442418	             mov dword [rsp + 0x18], eax	      9134	dwarf.c	FUNCTION_91
0x400306a	    0xc70424000000	                      mov dword [rsp], 0	      9134	dwarf.c	FUNCTION_91
0x4003071	     0xf8766010000	                            ja 0x40031dd	      9135	dwarf.c	FUNCTION_91
0x4003077	          0x4d39ee	                            cmp r14, r13	      9135	dwarf.c	FUNCTION_91
0x400307a	            0x760e	                           jbe 0x400308a	      9135	dwarf.c	FUNCTION_91
0x400307c	          0x4c89f6	                            mov rsi, r14	      9135	dwarf.c	FUNCTION_91
0x400307f	          0x4c29ee	                            sub rsi, r13	      9135	dwarf.c	FUNCTION_91
0x4003082	          0x8d46ff	                      lea eax, [rsi - 1]	      9135	dwarf.c	FUNCTION_91
0x4003085	          0x83f807	                              cmp eax, 7	      9135	dwarf.c	FUNCTION_91
0x4003088	            0x7670	                           jbe 0x40030fa	      9135	dwarf.c	FUNCTION_91
0x400308a	            0x31c0	                            xor eax, eax	      9135	dwarf.c	FUNCTION_91
0x400308c	          0x4531ed	                          xor r13d, r13d	      9135	dwarf.c	FUNCTION_91
0x400308f	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      9135	dwarf.c	FUNCTION_91
0x4003097	            0xeb79	                           jmp 0x4003112	      9135	dwarf.c	FUNCTION_91
0x4003099	     0xf1f80000000	                         nop dword [rax]	      9135	dwarf.c	FUNCTION_91
0x40030a0	          0x4d39f7	                            cmp r15, r14	      9131	dwarf.c	FUNCTION_91
0x40030a3	     0xf8267010000	                            jb 0x4003210	      9131	dwarf.c	FUNCTION_91
0x40030a9	        0x4d8d6708	                      lea r12, [r15 + 8]	      9131	dwarf.c	FUNCTION_91
0x40030ad	    0xc74424100000	               mov dword [rsp + 0x10], 0	      9131	dwarf.c	FUNCTION_91
0x40030b5	    0xc70424000000	                      mov dword [rsp], 0	      9108	dwarf.c	FUNCTION_91
0x40030bc	        0x4d8d6f0c	                    lea r13, [r15 + 0xc]	      9134	dwarf.c	FUNCTION_91
0x40030c0	          0x4d39ee	                            cmp r14, r13	      9134	dwarf.c	FUNCTION_91
0x40030c3	     0xf87f5000000	                            ja 0x40031be	      9134	dwarf.c	FUNCTION_91
0x40030c9	          0x4d39f4	                            cmp r12, r14	      9134	dwarf.c	FUNCTION_91
0x40030cc	            0x7312	                           jae 0x40030e0	      9134	dwarf.c	FUNCTION_91
0x40030ce	          0x4c89f6	                            mov rsi, r14	      9134	dwarf.c	FUNCTION_91
0x40030d1	          0x4c29e6	                            sub rsi, r12	      9134	dwarf.c	FUNCTION_91
0x40030d4	          0x8d46ff	                      lea eax, [rsi - 1]	      9134	dwarf.c	FUNCTION_91
0x40030d7	          0x83f807	                              cmp eax, 7	      9134	dwarf.c	FUNCTION_91
0x40030da	     0xf862c0f0000	                           jbe 0x400400c	      9134	dwarf.c	FUNCTION_91
0x40030e0	        0x4d8d6710	                   lea r12, [r15 + 0x10]	      9135	dwarf.c	FUNCTION_91
0x40030e4	          0x4d39e6	                            cmp r14, r12	      9135	dwarf.c	FUNCTION_91
0x40030e7	     0xf8603010000	                           jbe 0x40031f0	      9135	dwarf.c	FUNCTION_91
0x40030ed	      0xbe04000000	                              mov esi, 4	      9135	dwarf.c	FUNCTION_91
0x40030f2	    0xc74424180000	               mov dword [rsp + 0x18], 0	      9135	dwarf.c	FUNCTION_91
0x40030fa	          0x4c89ef	                            mov rdi, r13	      9135	dwarf.c	FUNCTION_91
0x40030fd	    0xff1500000000	                 call qword [0x04003103]	      9135	dwarf.c	FUNCTION_91
0x4003103	        0x8944240c	              mov dword [rsp + 0xc], eax	      9135	dwarf.c	FUNCTION_91
0x4003107	    0x448d2cc50000	                       lea r13d, [rax*8]	      9135	dwarf.c	FUNCTION_91
0x400310f	          0xc1e002	                              shl eax, 2	      9135	dwarf.c	FUNCTION_91
0x4003112	        0x4b8d0c2c	                    lea rcx, [r12 + r13]	      9138	dwarf.c	FUNCTION_91
0x4003116	          0x4c39e1	                            cmp rcx, r12	      9142	dwarf.c	FUNCTION_91	IF_4
0x4003119	      0x48894c2420	             mov qword [rsp + 0x20], rcx	      9138	dwarf.c	FUNCTION_91
0x400311e	        0x4c8d2c01	                    lea r13, [rcx + rax]	      9139	dwarf.c	FUNCTION_91
0x4003122	            0x721c	                            jb 0x4003140	      9142	dwarf.c	FUNCTION_91	IF_4
0x4003124	          0x4d39ef	                            cmp r15, r13	      9142	dwarf.c	FUNCTION_91	IF_4
0x4003127	            0x7717	                            ja 0x4003140	      9142	dwarf.c	FUNCTION_91	IF_4
0x4003129	          0x4c39e1	                            cmp rcx, r12	      9142	dwarf.c	FUNCTION_91	IF_4
0x400312c	     0xf850e010000	                           jne 0x4003240	      9142	dwarf.c	FUNCTION_91	IF_4
0x4003132	      0x448b4c240c	              mov r9d, dword [rsp + 0xc]	      9142	dwarf.c	FUNCTION_91	IF_4
0x4003137	          0x4585c9	                           test r9d, r9d	      9142	dwarf.c	FUNCTION_91	IF_4
0x400313a	     0xf8400010000	                            je 0x4003240	      9142	dwarf.c	FUNCTION_91	IF_4
0x4003140	      0x448b7c240c	            mov r15d, dword [rsp + 0xc] 	      9144	dwarf.c	FUNCTION_91	IF_4	CALL_6
0x4003145	      0xba00000000	                              mov edx, 0	      9144	dwarf.c	FUNCTION_91	IF_4	CALL_6
0x400314a	    0x41b805000000	                              mov r8d, 5	      9144	dwarf.c	FUNCTION_91	IF_4	CALL_6
0x4003150	      0xbe00000000	                              mov esi, 0	      9144	dwarf.c	FUNCTION_91	IF_4	CALL_6
0x4003155	            0x31ff	                            xor edi, edi	      9144	dwarf.c	FUNCTION_91	IF_4	CALL_6
0x4003157	        0x488b5d10	            mov rbx, qword [rbp + 0x10] 	      9144	dwarf.c	FUNCTION_91	IF_4	CALL_6
0x400315b	          0x4489f9	                           mov ecx, r15d	      9144	dwarf.c	FUNCTION_91	IF_4	CALL_6
0x400315e	      0xe800000000	                          call 0x4003163	      9144	dwarf.c	FUNCTION_91	IF_4	CALL_6
0x4003163	          0x4489fa	                           mov edx, r15d	      9144	dwarf.c	FUNCTION_91	IF_4	CALL_6
0x4003166	          0x4889c7	                            mov rdi, rax	      9164	dwarf.c	FUNCTION_91	IF_7	CALL_13
0x4003169	          0x4889de	                            mov rsi, rbx	      9164	dwarf.c	FUNCTION_91	IF_7	CALL_13
0x400316c	            0x31c0	                            xor eax, eax	      9164	dwarf.c	FUNCTION_91	IF_7	CALL_13
0x400316e	      0xe800000000	                          call 0x4003173	      9164	dwarf.c	FUNCTION_91	IF_7	CALL_13
0x4003173	            0x31c0	                            xor eax, eax	      9166	dwarf.c	FUNCTION_91	IF_7
0x4003175	    0x488b9c24c800	            mov rbx, qword [rsp + 0xc8] 	      9413	dwarf.c	FUNCTION_91
0x400317d	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      9413	dwarf.c	FUNCTION_91
0x4003186	     0xf855e0e0000	                           jne 0x4003fea	      9413	dwarf.c	FUNCTION_91
0x400318c	    0x4881c4d80000	                           add rsp, 0xd8	      9413	dwarf.c	FUNCTION_91
0x4003193	              0x5b	                                 pop rbx	      9413	dwarf.c	FUNCTION_91
0x4003194	              0x5d	                                 pop rbp	      9413	dwarf.c	FUNCTION_91
0x4003195	            0x415c	                                 pop r12	      9413	dwarf.c	FUNCTION_91
0x4003197	            0x415d	                                 pop r13	      9413	dwarf.c	FUNCTION_91
0x4003199	            0x415e	                                 pop r14	      9413	dwarf.c	FUNCTION_91
0x400319b	            0x415f	                                 pop r15	      9413	dwarf.c	FUNCTION_91
0x400319d	              0xc3	                                     ret	      9413	dwarf.c	FUNCTION_91
0x400319e	            0x6690	                                     nop	      9413	dwarf.c	FUNCTION_91
0x40031a0	      0xbe04000000	                              mov esi, 4	      9413	dwarf.c	FUNCTION_91
0x40031a5	          0x4c89ef	                            mov rdi, r13	      9133	dwarf.c	FUNCTION_91	IF_3
0x40031a8	        0x4d8d6f0c	                    lea r13, [r15 + 0xc]	      9134	dwarf.c	FUNCTION_91
0x40031ac	    0xff1500000000	                 call qword [0x040031b2]	      9133	dwarf.c	FUNCTION_91	IF_3
0x40031b2	          0x4d39ee	                            cmp r14, r13	      9134	dwarf.c	FUNCTION_91
0x40031b5	          0x890424	                    mov dword [rsp], eax	      9133	dwarf.c	FUNCTION_91	IF_3
0x40031b8	     0xf860bffffff	                           jbe 0x40030c9	      9134	dwarf.c	FUNCTION_91
0x40031be	          0x4c89e7	                            mov rdi, r12	      9134	dwarf.c	FUNCTION_91
0x40031c1	        0x4d8d6710	                   lea r12, [r15 + 0x10]	      9135	dwarf.c	FUNCTION_91
0x40031c5	      0xbe04000000	                              mov esi, 4	      9134	dwarf.c	FUNCTION_91
0x40031ca	    0xff1500000000	                 call qword [0x040031d0]	      9134	dwarf.c	FUNCTION_91
0x40031d0	          0x4d39e6	                            cmp r14, r12	      9135	dwarf.c	FUNCTION_91
0x40031d3	        0x89442418	             mov dword [rsp + 0x18], eax	      9134	dwarf.c	FUNCTION_91
0x40031d7	     0xf869ffeffff	                           jbe 0x400307c	      9135	dwarf.c	FUNCTION_91
0x40031dd	      0xbe04000000	                              mov esi, 4	      9135	dwarf.c	FUNCTION_91
0x40031e2	      0xe913ffffff	                           jmp 0x40030fa	      9135	dwarf.c	FUNCTION_91
0x40031e7	    0x660f1f840000	                    nop word [rax + rax]	      9135	dwarf.c	FUNCTION_91
0x40031f0	            0x31c0	                            xor eax, eax	      9135	dwarf.c	FUNCTION_91
0x40031f2	          0x4531ed	                          xor r13d, r13d	      9135	dwarf.c	FUNCTION_91
0x40031f5	    0xc74424180000	               mov dword [rsp + 0x18], 0	      9135	dwarf.c	FUNCTION_91
0x40031fd	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      9135	dwarf.c	FUNCTION_91
0x4003205	      0xe908ffffff	                           jmp 0x4003112	      9135	dwarf.c	FUNCTION_91
0x400320a	    0x660f1f440000	                    nop word [rax + rax]	      9135	dwarf.c	FUNCTION_91
0x4003210	          0x8d50ff	                      lea edx, [rax - 1]	      9131	dwarf.c	FUNCTION_91
0x4003213	          0x83fa07	                              cmp edx, 7	      9131	dwarf.c	FUNCTION_91
0x4003216	     0xf878dfeffff	                            ja 0x40030a9	      9131	dwarf.c	FUNCTION_91
0x400321c	            0x89c6	                            mov esi, eax	      9131	dwarf.c	FUNCTION_91
0x400321e	      0xe9e7fdffff	                           jmp 0x400300a	      9131	dwarf.c	FUNCTION_91
0x4003223	       0xf1f440000	                   nop dword [rax + rax]	      9131	dwarf.c	FUNCTION_91
0x4003228	        0x4d8d6710	                   lea r12, [r15 + 0x10]	      9135	dwarf.c	FUNCTION_91
0x400322c	    0xc70424000000	                      mov dword [rsp], 0	      9134	dwarf.c	FUNCTION_91
0x4003233	          0x4d39e6	                            cmp r14, r12	      9135	dwarf.c	FUNCTION_91
0x4003236	            0x76b8	                           jbe 0x40031f0	      9135	dwarf.c	FUNCTION_91
0x4003238	      0xe9b0feffff	                           jmp 0x40030ed	      9135	dwarf.c	FUNCTION_91
0x400323d	           0xf1f00	                         nop dword [rax]	      9135	dwarf.c	FUNCTION_91
0x4003240	            0x85db	                           test ebx, ebx	      9151	dwarf.c	FUNCTION_91	IF_5
0x4003242	            0x7564	                           jne 0x40032a8	      9151	dwarf.c	FUNCTION_91	IF_5
0x4003244	          0x4d39ee	                            cmp r14, r13	      9162	dwarf.c	FUNCTION_91	IF_7
0x4003247	     0xf8283010000	                            jb 0x40033d0	      9162	dwarf.c	FUNCTION_91	IF_7
0x400324d	      0x837c241001	               cmp dword [rsp + 0x10], 1	      9169	dwarf.c	FUNCTION_91	IF_8
0x4003252	     0xf8400010000	                            je 0x4003358	      9169	dwarf.c	FUNCTION_91	IF_8
0x4003258	      0x837c241002	               cmp dword [rsp + 0x10], 2	      9220	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x400325d	     0xf848d010000	                            je 0x40033f0	      9220	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x4003263	            0x85db	                           test ebx, ebx	      9406	dwarf.c	FUNCTION_91	ELSE_11	IF_40
0x4003265	     0xf8515030000	                           jne 0x4003580	      9406	dwarf.c	FUNCTION_91	ELSE_11	IF_40
0x400326b	      0xb801000000	                              mov eax, 1	      9412	dwarf.c	FUNCTION_91
0x4003270	      0xe900ffffff	                           jmp 0x4003175	      9412	dwarf.c	FUNCTION_91
0x4003275	           0xf1f00	                         nop dword [rax]	      9412	dwarf.c	FUNCTION_91
0x4003278	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	      9126	dwarf.c	FUNCTION_91	IF_2	CALL_4
0x400327c	      0xba05000000	                              mov edx, 5	      9126	dwarf.c	FUNCTION_91	IF_2	CALL_4
0x4003281	      0xbe00000000	                              mov esi, 0	      9126	dwarf.c	FUNCTION_91	IF_2	CALL_4
0x4003286	            0x31ff	                            xor edi, edi	      9126	dwarf.c	FUNCTION_91	IF_2	CALL_4
0x4003288	      0xe800000000	                          call 0x400328d	      9126	dwarf.c	FUNCTION_91	IF_2	CALL_4
0x400328d	          0x4889de	                            mov rsi, rbx	      9126	dwarf.c	FUNCTION_91	IF_2	CALL_4
0x4003290	          0x4889c7	                            mov rdi, rax	      9126	dwarf.c	FUNCTION_91	IF_2	CALL_4
0x4003293	            0x31c0	                            xor eax, eax	      9126	dwarf.c	FUNCTION_91	IF_2	CALL_4
0x4003295	      0xe800000000	                          call 0x400329a	      9126	dwarf.c	FUNCTION_91	IF_2	CALL_4
0x400329a	            0x31c0	                            xor eax, eax	      9128	dwarf.c	FUNCTION_91	IF_2
0x400329c	      0xe9d4feffff	                           jmp 0x4003175	      9128	dwarf.c	FUNCTION_91	IF_2
0x40032a1	     0xf1f80000000	                         nop dword [rax]	      9128	dwarf.c	FUNCTION_91	IF_2
0x40032a8	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	      9153	dwarf.c	FUNCTION_91	IF_5	CALL_7
0x40032ac	        0x488d7518	                   lea rsi, [rbp + 0x18]	      9153	dwarf.c	FUNCTION_91	IF_5	CALL_7
0x40032b0	      0xe8cbeeffff	  call sym.introduce.isra.5.constprop.27	      9153	dwarf.c	FUNCTION_91	IF_5	CALL_7
0x40032b5	            0x31ff	                            xor edi, edi	      9155	dwarf.c	FUNCTION_91	IF_5	CALL_8
0x40032b7	      0xba05000000	                              mov edx, 5	      9155	dwarf.c	FUNCTION_91	IF_5	CALL_8
0x40032bc	      0xbe00000000	                              mov esi, 0	      9155	dwarf.c	FUNCTION_91	IF_5	CALL_8
0x40032c1	      0xe800000000	                          call 0x40032c6	      9155	dwarf.c	FUNCTION_91	IF_5	CALL_8
0x40032c6	      0x448b7c2410	           mov r15d, dword [rsp + 0x10] 	       104	stdio2.h	CALL_16
0x40032cb	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40032ce	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40032d3	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40032d5	          0x4489fa	                           mov edx, r15d	       104	stdio2.h	CALL_16
0x40032d8	      0xe800000000	                          call 0x40032dd	       104	stdio2.h	CALL_16
0x40032dd	        0x4183ff01	                             cmp r15d, 1	      9156	dwarf.c	FUNCTION_91	IF_5	IF_6
0x40032e1	            0x7623	                           jbe 0x4003306	      9156	dwarf.c	FUNCTION_91	IF_5	IF_6
0x40032e3	      0xba05000000	                              mov edx, 5	      9157	dwarf.c	FUNCTION_91	IF_5	CALL_9
0x40032e8	      0xbe00000000	                              mov esi, 0	      9157	dwarf.c	FUNCTION_91	IF_5	CALL_9
0x40032ed	            0x31ff	                            xor edi, edi	      9157	dwarf.c	FUNCTION_91	IF_5	CALL_9
0x40032ef	      0xe800000000	                          call 0x40032f4	      9157	dwarf.c	FUNCTION_91	IF_5	CALL_9
0x40032f4	          0x8b1424	                    mov edx, dword [rsp]	       104	stdio2.h	CALL_16
0x40032f7	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40032fa	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40032ff	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4003301	      0xe800000000	                          call 0x4003306	       104	stdio2.h	CALL_16
0x4003306	            0x31ff	                            xor edi, edi	      9158	dwarf.c	FUNCTION_91	IF_5	CALL_10
0x4003308	      0xba05000000	                              mov edx, 5	      9158	dwarf.c	FUNCTION_91	IF_5	CALL_10
0x400330d	      0xbe00000000	                              mov esi, 0	      9158	dwarf.c	FUNCTION_91	IF_5	CALL_10
0x4003312	      0xe800000000	                          call 0x4003317	      9158	dwarf.c	FUNCTION_91	IF_5	CALL_10
0x4003317	        0x8b542418	            mov edx, dword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x400331b	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400331e	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4003323	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4003325	      0xe800000000	                          call 0x400332a	       104	stdio2.h	CALL_16
0x400332a	            0x31ff	                            xor edi, edi	      9159	dwarf.c	FUNCTION_91	IF_5	CALL_11
0x400332c	      0xba05000000	                              mov edx, 5	      9159	dwarf.c	FUNCTION_91	IF_5	CALL_11
0x4003331	      0xbe00000000	                              mov esi, 0	      9159	dwarf.c	FUNCTION_91	IF_5	CALL_11
0x4003336	      0xe800000000	                          call 0x400333b	      9159	dwarf.c	FUNCTION_91	IF_5	CALL_11
0x400333b	        0x8b54240c	              mov edx, dword [rsp + 0xc]	       104	stdio2.h	CALL_16
0x400333f	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4003342	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4003347	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4003349	      0xe800000000	                          call 0x400334e	       104	stdio2.h	CALL_16
0x400334e	      0xe9f1feffff	                           jmp 0x4003244	       104	stdio2.h	CALL_16
0x4003353	       0xf1f440000	                   nop dword [rax + rax]	       104	stdio2.h	CALL_16
0x4003358	            0x85db	                           test ebx, ebx	      9171	dwarf.c	FUNCTION_91	IF_8	IF_9
0x400335a	     0xf84d0020000	                            je 0x4003630	      9171	dwarf.c	FUNCTION_91	IF_8	IF_9
0x4003360	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      9173	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x4003364	            0x85c9	                           test ecx, ecx	      9173	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x4003366	            0x7458	                            je 0x40033c0	      9173	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x4003368	      0x4c8b7c2420	            mov r15, qword [rsp + 0x20] 	      9173	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x400336d	            0x31c0	                            xor eax, eax	      9135	dwarf.c	FUNCTION_91
0x400336f	      0x48896c2410	             mov qword [rsp + 0x10], rbp	      9191	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_12	CALL_17
0x4003374	          0x4c89e7	                            mov rdi, r12	      9191	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_12	CALL_17
0x4003377	        0x4c892c24	                    mov qword [rsp], r13	      9191	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_12	CALL_17
0x400337b	            0x89c5	                            mov ebp, eax	      9191	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_12	CALL_17
0x400337d	        0x4983c704	                              add r15, 4	      9191	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_12	CALL_17
0x4003381	        0x4c8d6f08	                      lea r13, [rdi + 8]	      9178	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x4003385	        0x4d8d67fc	                      lea r12, [r15 - 4]	      9178	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x4003389	          0x4d39ee	                            cmp r14, r13	      9178	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x400338c	     0xf83ce000000	                           jae 0x4003460	      9178	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x4003392	    0x48c744247000	               mov qword [rsp + 0x70], 0	      9178	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x400339b	    0x48c744247800	               mov qword [rsp + 0x78], 0	      9178	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x40033a4	          0x83c501	                              add ebp, 1	      9173	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x40033a7	        0x4983c704	                              add r15, 4	      9173	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x40033ab	        0x396c240c	              cmp dword [rsp + 0xc], ebp	      9173	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x40033af	          0x4c89ef	                            mov rdi, r13	      9178	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x40033b2	            0x77cd	                            ja 0x4003381	      9173	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x40033b4	            0x85db	                           test ebx, ebx	      9409	dwarf.c	FUNCTION_91	IF_41
0x40033b6	     0xf84affeffff	                            je 0x400326b	      9409	dwarf.c	FUNCTION_91	IF_41
0x40033bc	         0xf1f4000	                         nop dword [rax]	      9409	dwarf.c	FUNCTION_91	IF_41
0x40033c0	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x40033c5	      0xe800000000	                          call 0x40033ca	       104	stdio2.h	CALL_16
0x40033ca	      0xe99cfeffff	                           jmp 0x400326b	       104	stdio2.h	CALL_16
0x40033cf	              0x90	                                     nop	       104	stdio2.h	CALL_16
0x40033d0	      0xba05000000	                              mov edx, 5	      9164	dwarf.c	FUNCTION_91	IF_7	CALL_13
0x40033d5	      0xbe00000000	                              mov esi, 0	      9164	dwarf.c	FUNCTION_91	IF_7	CALL_13
0x40033da	            0x31ff	                            xor edi, edi	      9164	dwarf.c	FUNCTION_91	IF_7	CALL_13
0x40033dc	        0x488b5d10	            mov rbx, qword [rbp + 0x10] 	      9164	dwarf.c	FUNCTION_91	IF_7	CALL_13
0x40033e0	      0xe800000000	                          call 0x40033e5	      9164	dwarf.c	FUNCTION_91	IF_7	CALL_13
0x40033e5	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      9164	dwarf.c	FUNCTION_91	IF_7	CALL_13
0x40033e9	      0xe978fdffff	                           jmp 0x4003166	      9164	dwarf.c	FUNCTION_91	IF_7	CALL_13
0x40033ee	            0x6690	                                     nop	      9164	dwarf.c	FUNCTION_91	IF_7	CALL_13
0x40033f0	        0x448b1424	                   mov r10d, dword [rsp]	      9226	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x40033f4	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      9234	dwarf.c	FUNCTION_91	ELSE_3	IF_17	CALL_23
0x40033f8	      0xb910000000	                           mov ecx, 0x10	      9234	dwarf.c	FUNCTION_91	ELSE_3	IF_17	CALL_23
0x40033fd	      0xbf00000000	                              mov edi, 0	      9234	dwarf.c	FUNCTION_91	ELSE_3	IF_17	CALL_23
0x4003402	          0x4489d0	                           mov eax, r10d	      9226	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x4003405	          0x4889ee	                            mov rsi, rbp	      9234	dwarf.c	FUNCTION_91	ELSE_3	IF_17	CALL_23
0x4003408	          0xc1e002	                              shl eax, 2	      9226	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x400340b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9234	dwarf.c	FUNCTION_91	ELSE_3	IF_17	CALL_23
0x400340d	        0x89442458	             mov dword [rsp + 0x58], eax	      9226	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x4003411	           0xf92c2	                                 setb dl	      9234	dwarf.c	FUNCTION_91	ELSE_3	IF_17	CALL_23
0x4003414	           0xf97c1	                                 seta cl	      9234	dwarf.c	FUNCTION_91	ELSE_3	IF_17	CALL_23
0x4003417	            0x29d1	                            sub ecx, edx	      9234	dwarf.c	FUNCTION_91	ELSE_3	IF_17	CALL_23
0x4003419	           0xfbed1	                           movsx edx, cl	      9234	dwarf.c	FUNCTION_91	ELSE_3	IF_17	CALL_23
0x400341c	        0x8954245c	             mov dword [rsp + 0x5c], edx	      9234	dwarf.c	FUNCTION_91	ELSE_3	IF_17	CALL_23
0x4003420	          0x4c89ea	                            mov rdx, r13	      9238	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18
0x4003423	          0x4801c2	                            add rdx, rax	      9238	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18
0x4003426	      0x4889542450	             mov qword [rsp + 0x50], rdx	      9238	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18
0x400342b	            0x720d	                            jb 0x400343a	      9238	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18
0x400342d	        0x48c1f802	                              sar rax, 2	      9238	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18
0x4003431	          0x4139c2	                           cmp r10d, eax	      9238	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18
0x4003434	     0xf8456020000	                            je 0x4003690	      9238	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18
0x400343a	      0xba05000000	                              mov edx, 5	      9240	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18	CALL_25
0x400343f	      0xbe00000000	                              mov esi, 0	      9240	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18	CALL_25
0x4003444	            0x31ff	                            xor edi, edi	      9240	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18	CALL_25
0x4003446	      0xe800000000	                          call 0x400344b	      9240	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18	CALL_25
0x400344b	          0x8b3424	                    mov esi, dword [rsp]	      9240	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18	CALL_25
0x400344e	          0x4889c7	                            mov rdi, rax	      9240	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18	CALL_25
0x4003451	            0x31c0	                            xor eax, eax	      9240	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18	CALL_25
0x4003453	      0xe800000000	                          call 0x4003458	      9240	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18	CALL_25
0x4003458	            0x31c0	                            xor eax, eax	      9241	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18
0x400345a	      0xe916fdffff	                           jmp 0x4003175	      9241	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18
0x400345f	              0x90	                                     nop	      9241	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_18
0x4003460	      0x488d542478	                   lea rdx, [rsp + 0x78]	      9178	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x4003465	      0x488d742470	                   lea rsi, [rsp + 0x70]	      9178	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x400346a	      0xe800000000	                          call 0x400346f	      9178	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x400346f	    0x48837c247000	               cmp qword [rsp + 0x70], 0	      9179	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x4003475	     0xf84740b0000	                            je 0x4003fef	      9179	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x400347b	          0x4d39fe	                            cmp r14, r15	      9181	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x400347e	      0xbe04000000	                              mov esi, 4	      9181	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x4003483	            0x766b	                           jbe 0x40034f0	      9181	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x4003485	          0x4c89e7	                            mov rdi, r12	      9181	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x4003488	    0xff1500000000	                 call qword [0x0400348e]	      9181	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x400348e	    0x8d3c85000000	                        lea edi, [rax*4]	      9182	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x4003495	        0x48033c24	                    add rdi, qword [rsp]	      9184	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_11
0x4003499	          0x4989fc	                            mov r12, rdi	      9184	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_11
0x400349c	     0xf828a080000	                            jb 0x4003d2c	      9184	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_11
0x40034a2	            0x85db	                           test ebx, ebx	      9190	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_12
0x40034a4	     0xf8506010000	                           jne 0x40035b0	      9190	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_12
0x40034aa	          0x4d39e6	                            cmp r14, r12	      9196	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13
0x40034ad	     0xf8697000000	                           jbe 0x400354a	      9196	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13
0x40034b3	          0x4c89e7	                            mov rdi, r12	      9196	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13
0x40034b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      9196	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13
0x40034c0	        0x4c8d6704	                      lea r12, [rdi + 4]	      9196	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13
0x40034c4	          0x4d39e6	                            cmp r14, r12	      9202	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2
0x40034c7	     0xf87130b0000	                            ja 0x4003fe0	      9202	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2
0x40034cd	          0x4c39f7	                            cmp rdi, r14	      9202	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2
0x40034d0	            0x7237	                            jb 0x4003509	      9202	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2
0x40034d2	            0x85db	                           test ebx, ebx	      9211	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_16
0x40034d4	     0xf8426010000	                            je 0x4003600	      9211	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_16
0x40034da	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x40034df	      0xe800000000	                          call 0x40034e4	       104	stdio2.h	CALL_16
0x40034e4	      0xe9bbfeffff	                           jmp 0x40033a4	       104	stdio2.h	CALL_16
0x40034e9	     0xf1f80000000	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x40034f0	          0x4d39f4	                            cmp r12, r14	      9181	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x40034f3	            0x730e	                           jae 0x4003503	      9181	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x40034f5	          0x4c89f6	                            mov rsi, r14	      9181	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x40034f8	          0x4c29e6	                            sub rsi, r12	      9181	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x40034fb	          0x8d46ff	                      lea eax, [rsi - 1]	      9181	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x40034fe	          0x83f807	                              cmp eax, 7	      9181	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x4003501	            0x7682	                           jbe 0x4003485	      9181	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x4003503	        0x4c8b2424	                    mov r12, qword [rsp]	      9181	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x4003507	            0xeb99	                           jmp 0x40034a2	      9181	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x4003509	          0x4c89f0	                            mov rax, r14	      9202	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2
0x400350c	          0x4829f8	                            sub rax, rdi	      9202	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2
0x400350f	            0x89c6	                            mov esi, eax	      9202	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2
0x4003511	          0x83e801	                              sub eax, 1	      9202	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2
0x4003514	          0x83f807	                              cmp eax, 7	      9202	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2
0x4003517	            0x77b9	                            ja 0x40034d2	      9202	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2
0x4003519	    0xff1500000000	                 call qword [0x0400351f]	      9202	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2
0x400351f	            0x85c0	                           test eax, eax	      9203	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_14
0x4003521	            0x74af	                            je 0x40034d2	      9203	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_14
0x4003523	            0x85db	                           test ebx, ebx	      9205	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_15
0x4003525	     0xf84650a0000	                            je 0x4003f90	      9205	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_15
0x400352b	            0x89c2	                            mov edx, eax	       104	stdio2.h	CALL_16
0x400352d	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4003532	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4003537	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4003539	      0xe800000000	                          call 0x400353e	       104	stdio2.h	CALL_16
0x400353e	          0x4d39e6	                            cmp r14, r12	      9196	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13
0x4003541	          0x4c89e7	                            mov rdi, r12	      9196	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13
0x4003544	     0xf8776ffffff	                            ja 0x40034c0	      9196	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13
0x400354a	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	      9196	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13
0x400354f	      0xba05000000	                              mov edx, 5	      9198	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13	CALL_20
0x4003554	      0xbe00000000	                              mov esi, 0	      9198	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13	CALL_20
0x4003559	        0x488b5d10	            mov rbx, qword [rbp + 0x10] 	      9198	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13	CALL_20
0x400355d	      0xe924fdffff	                           jmp 0x4003286	      9198	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13	CALL_20
0x4003562	    0x660f1f440000	                    nop word [rax + rax]	      9198	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	FOR_2	IF_13	CALL_20
0x4003568	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	      9120	dwarf.c	FUNCTION_91	IF_1	CALL_2
0x400356c	      0xba05000000	                              mov edx, 5	      9120	dwarf.c	FUNCTION_91	IF_1	CALL_2
0x4003571	      0xbe00000000	                              mov esi, 0	      9120	dwarf.c	FUNCTION_91	IF_1	CALL_2
0x4003576	      0xe90bfdffff	                           jmp 0x4003286	      9120	dwarf.c	FUNCTION_91	IF_1	CALL_2
0x400357b	       0xf1f440000	                   nop dword [rax + rax]	      9120	dwarf.c	FUNCTION_91	IF_1	CALL_2
0x4003580	            0x31ff	                            xor edi, edi	      9407	dwarf.c	FUNCTION_91	ELSE_11	IF_40
0x4003582	      0xba05000000	                              mov edx, 5	      9407	dwarf.c	FUNCTION_91	ELSE_11	IF_40
0x4003587	      0xbe00000000	                              mov esi, 0	      9407	dwarf.c	FUNCTION_91	ELSE_11	IF_40
0x400358c	      0xe800000000	                          call 0x4003591	      9407	dwarf.c	FUNCTION_91	ELSE_11	IF_40
0x4003591	        0x8b542410	            mov edx, dword [rsp + 0x10] 	       104	stdio2.h	CALL_16
0x4003595	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4003598	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400359d	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400359f	      0xe800000000	                          call 0x40035a4	       104	stdio2.h	CALL_16
0x40035a4	      0xe917feffff	                           jmp 0x40033c0	       104	stdio2.h	CALL_16
0x40035a9	     0xf1f80000000	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x40035b0	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	      9191	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_12	CALL_17
0x40035b5	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	      9191	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_12	CALL_17
0x40035ba	    0x488d94248000	                   lea rdx, [rsp + 0x80]	      9191	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_12	CALL_17
0x40035c2	      0xe849f9ffff	    call sym.dwarf_vmatoa64.constprop.26	      9191	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_12	CALL_17
0x40035c7	            0x31ff	                            xor edi, edi	      9191	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_12	CALL_17
0x40035c9	      0xba05000000	                              mov edx, 5	      9191	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_12	CALL_17
0x40035ce	      0xbe00000000	                              mov esi, 0	      9191	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_12	CALL_17
0x40035d3	      0x4889442418	             mov qword [rsp + 0x18], rax	      9191	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_12	CALL_17
0x40035d8	      0xe800000000	                          call 0x40035dd	      9191	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_12	CALL_17
0x40035dd	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x40035e2	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40035e5	            0x89ea	                            mov edx, ebp	       104	stdio2.h	CALL_16
0x40035e7	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40035ec	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40035ee	      0xe800000000	                          call 0x40035f3	       104	stdio2.h	CALL_16
0x40035f3	      0xe9b2feffff	                           jmp 0x40034aa	       104	stdio2.h	CALL_16
0x40035f8	     0xf1f84000000	                   nop dword [rax + rax]	       104	stdio2.h	CALL_16
0x4003600	    0x8b0500000000	            mov eax, dword [0x04003606] 	      9054	dwarf.c	FUNCTION_89	IF_1
0x4003606	    0x3b0500000000	            cmp eax, dword [0x0400360c] 	      9054	dwarf.c	FUNCTION_89	IF_1
0x400360c	     0xf83dd030000	                           jae 0x40039ef	      9054	dwarf.c	FUNCTION_89	IF_1
0x4003612	          0x8d5001	                      lea edx, [rax + 1]	      9059	dwarf.c	FUNCTION_89
0x4003615	    0x891500000000	            mov dword [0x0400361b], edx 	      9059	dwarf.c	FUNCTION_89
0x400361b	    0x488b15000000	            mov rdx, qword [0x04003622] 	      9059	dwarf.c	FUNCTION_89
0x4003622	    0xc70482000000	              mov dword [rdx + rax*4], 0	      9059	dwarf.c	FUNCTION_89
0x4003629	      0xe976fdffff	                           jmp 0x40033a4	      9059	dwarf.c	FUNCTION_89
0x400362e	            0x6690	                                     nop	      9059	dwarf.c	FUNCTION_89
0x4003630	          0x4c89f2	                            mov rdx, r14	      9172	dwarf.c	FUNCTION_91	IF_8	CALL_14
0x4003633	    0x488b3d000000	            mov rdi, qword [0x0400363a] 	      9025	dwarf.c	FUNCTION_87	IF_1
0x400363a	          0x4c29ea	                            sub rdx, r13	      9172	dwarf.c	FUNCTION_91	IF_8	CALL_14
0x400363d	        0x488d4203	                      lea rax, [rdx + 3]	      9172	dwarf.c	FUNCTION_91	IF_8	CALL_14
0x4003641	          0x4885d2	                           test rdx, rdx	      9172	dwarf.c	FUNCTION_91	IF_8	CALL_14
0x4003644	        0x480f49c2	                         cmovns rax, rdx	      9172	dwarf.c	FUNCTION_91	IF_8	CALL_14
0x4003648	        0x48c1f802	                              sar rax, 2	      9172	dwarf.c	FUNCTION_91	IF_8	CALL_14
0x400364c	          0x4885ff	                           test rdi, rdi	      9025	dwarf.c	FUNCTION_87	IF_1
0x400364f	     0xf8487080000	                            je 0x4003edc	      9025	dwarf.c	FUNCTION_87	IF_1
0x4003655	     0x30500000000	             add eax, dword [0x0400365b]	      9034	dwarf.c	FUNCTION_87	ELSE_1
0x400365b	    0x488d34850000	                        lea rsi, [rax*4]	      9533	dwarf.c	FUNCTION_98	CALL_4
0x4003663	    0x890500000000	            mov dword [0x04003669], eax 	      9034	dwarf.c	FUNCTION_87	ELSE_1
0x4003669	      0xe800000000	                          call 0x400366e	      9533	dwarf.c	FUNCTION_98	CALL_4
0x400366e	    0x488905000000	            mov qword [0x04003675], rax 	      9035	dwarf.c	FUNCTION_87	ELSE_1	CALL_2
0x4003675	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      9173	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x4003679	            0x85f6	                           test esi, esi	      9173	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x400367b	     0xf85e7fcffff	                           jne 0x4003368	      9173	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x4003681	      0xe9e5fbffff	                           jmp 0x400326b	      9173	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x4003686	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      9173	dwarf.c	FUNCTION_91	IF_8	FOR_1
0x4003690	        0x8b442458	            mov eax, dword [rsp + 0x58] 	      9227	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x4003694	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	      9227	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x4003699	       0xfaf442418	            imul eax, dword [rsp + 0x18]	      9227	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x400369e	          0x4801c2	                            add rdx, rax	      9227	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x40036a1	          0x4801d0	                            add rax, rdx	      9244	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_19
0x40036a4	      0x4889542460	             mov qword [rsp + 0x60], rdx	      9227	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x40036a9	          0x4939c6	                            cmp r14, rax	      9244	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_19
0x40036ac	     0xf8205080000	                            jb 0x4003eb7	      9244	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_19
0x40036b2	            0x85db	                           test ebx, ebx	      9251	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20
0x40036b4	     0xf8594060000	                           jne 0x4003d4e	      9251	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20
0x40036ba	        0x8b4c245c	            mov ecx, dword [rsp + 0x5c] 	      9259	dwarf.c	FUNCTION_91	ELSE_3	IF_17	ELSE_4	IF_21
0x40036be	        0x8b7c2418	            mov edi, dword [rsp + 0x18] 	      9261	dwarf.c	FUNCTION_91	ELSE_3	IF_17	ELSE_4	IF_21
0x40036c2	            0x85c9	                           test ecx, ecx	      9259	dwarf.c	FUNCTION_91	ELSE_3	IF_17	ELSE_4	IF_21
0x40036c4	     0xf8541060000	                           jne 0x4003d0b	      9259	dwarf.c	FUNCTION_91	ELSE_3	IF_17	ELSE_4	IF_21
0x40036ca	      0xbe88000000	                           mov esi, 0x88	      9549	dwarf.c	FUNCTION_99	CALL_4
0x40036cf	    0x893d00000000	            mov dword [0x040036d5], edi 	      9261	dwarf.c	FUNCTION_91	ELSE_3	IF_17	ELSE_4	IF_21
0x40036d5	      0xe800000000	                          call 0x40036da	      9549	dwarf.c	FUNCTION_99	CALL_4
0x40036da	      0x4889442448	             mov qword [rsp + 0x48], rax	      9549	dwarf.c	FUNCTION_99	CALL_4
0x40036df	    0x488905000000	            mov qword [0x040036e6], rax 	      9262	dwarf.c	FUNCTION_91	ELSE_3	IF_17	ELSE_4	IF_21	CALL_31
0x40036e6	        0x8b7c240c	              mov edi, dword [rsp + 0xc]	      9283	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x40036ea	            0x85ff	                           test edi, edi	      9283	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x40036ec	     0xf842a030000	                            je 0x4003a1c	      9283	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x40036f2	      0x488b6c2420	            mov rbp, qword [rsp + 0x20] 	      9283	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x40036f7	          0x4d89e1	                             mov r9, r12	      9230	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x40036fa	    0xc74424280000	               mov dword [rsp + 0x28], 0	      9230	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x4003702	      0x4c89642468	             mov qword [rsp + 0x68], r12	      9322	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_28	CALL_41
0x4003707	            0xeb37	                           jmp 0x4003740	      9322	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_28	CALL_41
0x4003709	     0xf1f80000000	                         nop dword [rax]	      9322	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_28	CALL_41
0x4003710	          0x4c39f5	                            cmp rbp, r14	      9287	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003713	            0x730e	                           jae 0x4003723	      9287	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003715	          0x4c89f6	                            mov rsi, r14	      9287	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003718	          0x4829ee	                            sub rsi, rbp	      9287	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x400371b	          0x8d46ff	                      lea eax, [rsi - 1]	      9287	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x400371e	          0x83f807	                              cmp eax, 7	      9287	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003721	            0x7654	                           jbe 0x4003777	      9287	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003723	      0x8344242801	               add dword [rsp + 0x28], 1	      9283	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003728	      0x4c8b4c2438	              mov r9, qword [rsp + 0x38]	      9285	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x400372d	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      9283	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003731	        0x3944240c	              cmp dword [rsp + 0xc], eax	      9283	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003735	      0x488b6c2440	            mov rbp, qword [rsp + 0x40] 	      9283	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x400373a	     0xf86cf020000	                           jbe 0x4003a0f	      9283	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003740	        0x498d4108	                       lea rax, [r9 + 8]	      9285	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003744	          0x4939c6	                            cmp r14, rax	      9285	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003747	      0x4889442438	             mov qword [rsp + 0x38], rax	      9285	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x400374c	     0xf83ce010000	                           jae 0x4003920	      9285	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003752	    0x48c744247000	               mov qword [rsp + 0x70], 0	      9285	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x400375b	    0x48c744247800	               mov qword [rsp + 0x78], 0	      9285	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003764	        0x488d4504	                      lea rax, [rbp + 4]	      9285	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003768	          0x4939c6	                            cmp r14, rax	      9287	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x400376b	      0x4889442440	             mov qword [rsp + 0x40], rax	      9287	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003770	            0x769e	                           jbe 0x4003710	      9287	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003772	      0xbe04000000	                              mov esi, 4	      9287	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003777	      0x4c894c2410	              mov qword [rsp + 0x10], r9	      9287	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x400377c	          0x4889ef	                            mov rdi, rbp	      9287	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x400377f	    0xff1500000000	                 call qword [0x04003785]	      9287	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003785	            0x85c0	                           test eax, eax	      9288	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23
0x4003787	          0x4989c7	                            mov r15, rax	      9287	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x400378a	            0x89c1	                            mov ecx, eax	      9287	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x400378c	            0x7495	                            je 0x4003723	      9288	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23
0x400378e	        0x3b442418	            cmp eax, dword [rsp + 0x18] 	      9291	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_24
0x4003792	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	      9291	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_24
0x4003797	     0xf876a070000	                            ja 0x4003f07	      9291	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_24
0x400379d	            0x85db	                           test ebx, ebx	      9298	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_25
0x400379f	     0xf85a3010000	                           jne 0x4003948	      9298	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_25
0x40037a5	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      9303	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_25	IF_26
0x40037aa	          0x4939c6	                            cmp r14, rax	      9303	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_25	IF_26
0x40037ad	     0xf8699070000	                           jbe 0x4003f4c	      9303	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_25	IF_26
0x40037b3	        0x418d57ff	                      lea edx, [r15 - 1]	        53	string3.h	FUNCTION_129	CALL_3
0x40037b7	    0x418dafffffff	             lea ebp, [r15 + 0x3fffffff]	      9312	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23
0x40037be	        0x488b70f8	                mov rsi, qword [rax - 8]	      9312	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23
0x40037c2	       0xfaf6c2458	            imul ebp, dword [rsp + 0x58]	      9312	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23
0x40037c7	          0x4889d7	                            mov rdi, rdx	        53	string3.h	FUNCTION_129	CALL_3
0x40037ca	          0x4889d0	                            mov rax, rdx	        53	string3.h	FUNCTION_129	CALL_3
0x40037cd	        0x48c1e707	                              shl rdi, 7	        53	string3.h	FUNCTION_129	CALL_3
0x40037d1	      0x48036c2450	             add rbp, qword [rsp + 0x50]	      9314	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27
0x40037d6	        0x488d14d7	                  lea rdx, [rdi + rdx*8]	        53	string3.h	FUNCTION_129	CALL_3
0x40037da	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	        53	string3.h	FUNCTION_129	CALL_3
0x40037df	        0x48893417	              mov qword [rdi + rdx], rsi	        53	string3.h	FUNCTION_129	CALL_3
0x40037e3	     0xf82d7010000	                            jb 0x40039c0	      9314	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27
0x40037e9	          0x4939ee	                            cmp r14, rbp	      9314	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27
0x40037ec	     0xf82ce010000	                            jb 0x40039c0	      9314	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27
0x40037f2	          0x8b1424	                    mov edx, dword [rsp]	      9325	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x40037f5	            0x85d2	                           test edx, edx	      9325	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x40037f7	     0xf8426ffffff	                            je 0x4003723	      9325	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x40037fd	          0x4889c2	                            mov rdx, rax	      9338	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	ELSE_8
0x4003800	        0x48c1e207	                              shl rdx, 7	      9338	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	ELSE_8
0x4003804	        0x4c8d3cc2	                  lea r15, [rdx + rax*8]	      9338	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	ELSE_8
0x4003808	      0x4c037c2448	             add r15, qword [rsp + 0x48]	      9338	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	ELSE_8
0x400380d	      0x4c897c2430	             mov qword [rsp + 0x30], r15	      9338	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	ELSE_8
0x4003812	          0x4531ff	                          xor r15d, r15d	      9338	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	ELSE_8
0x4003815	          0x4589fc	                          mov r12d, r15d	      9338	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	ELSE_8
0x4003818	          0x4989ef	                            mov r15, rbp	      9338	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	ELSE_8
0x400381b	       0xf1f440000	                   nop dword [rax + rax]	      9338	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	ELSE_8
0x4003820	    0x428d2ca50000	                        lea ebp, [r12*4]	      9327	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x4003828	        0x488d4d04	                      lea rcx, [rbp + 4]	      9327	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x400382c	        0x498d040f	                    lea rax, [r15 + rcx]	      9327	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x4003830	          0x4939c6	                            cmp r14, rax	      9327	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x4003833	            0x776b	                            ja 0x40038a0	      9327	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x4003835	        0x498d3c2f	                    lea rdi, [r15 + rbp]	      9327	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x4003839	            0x31d2	                            xor edx, edx	      9327	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x400383b	          0x4939fe	                            cmp r14, rdi	      9327	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x400383e	            0x760e	                           jbe 0x400384e	      9327	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x4003840	          0x4c89f6	                            mov rsi, r14	      9327	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x4003843	          0x4829fe	                            sub rsi, rdi	      9327	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x4003846	          0x8d46ff	                      lea eax, [rsi - 1]	      9327	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x4003849	          0x83f807	                              cmp eax, 7	      9327	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x400384c	            0x765b	                           jbe 0x40038a9	      9327	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x400384e	            0x85db	                           test ebx, ebx	      9328	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	IF_29
0x4003850	            0x756d	                           jne 0x40038bf	      9328	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	IF_29
0x4003852	          0x4c01e9	                            add rcx, r13	      9332	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7
0x4003855	          0x4939ce	                            cmp r14, rcx	      9332	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7
0x4003858	            0x777e	                            ja 0x40038d8	      9332	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7
0x400385a	      0x498d7c2d00	                    lea rdi, [r13 + rbp]	      9332	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7
0x400385f	          0x4939fe	                            cmp r14, rdi	      9332	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7
0x4003862	            0x760e	                           jbe 0x4003872	      9332	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7
0x4003864	          0x4c89f6	                            mov rsi, r14	      9332	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7
0x4003867	          0x4829fe	                            sub rsi, rdi	      9332	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7
0x400386a	          0x8d46ff	                      lea eax, [rsi - 1]	      9332	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7
0x400386d	          0x83f807	                              cmp eax, 7	      9332	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7
0x4003870	            0x7670	                           jbe 0x40038e2	      9332	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7
0x4003872	            0x31c0	                            xor eax, eax	      9332	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7
0x4003874	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      9338	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	ELSE_8
0x4003879	      0x488954c608	        mov qword [rsi + rax*8 + 8], rdx	      9338	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	ELSE_8
0x400387e	        0x4183c401	                             add r12d, 1	      9325	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x4003882	        0x44392424	                   cmp dword [rsp], r12d	      9325	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x4003886	            0x7798	                            ja 0x4003820	      9325	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x4003888	            0x85db	                           test ebx, ebx	      9342	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_31
0x400388a	     0xf8493feffff	                            je 0x4003723	      9342	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_31
0x4003890	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x4003895	      0xe800000000	                          call 0x400389a	       104	stdio2.h	CALL_16
0x400389a	      0xe984feffff	                           jmp 0x4003723	       104	stdio2.h	CALL_16
0x400389f	              0x90	                                     nop	       104	stdio2.h	CALL_16
0x40038a0	        0x498d3c2f	                    lea rdi, [r15 + rbp]	       104	stdio2.h	CALL_16
0x40038a4	      0xbe04000000	                              mov esi, 4	       104	stdio2.h	CALL_16
0x40038a9	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       104	stdio2.h	CALL_16
0x40038ae	    0xff1500000000	                 call qword [0x040038b4]	      9327	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x40038b4	            0x85db	                           test ebx, ebx	      9328	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	IF_29
0x40038b6	            0x89c2	                            mov edx, eax	      9327	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x40038b8	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      9327	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x40038bd	            0x7493	                            je 0x4003852	      9328	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	IF_29
0x40038bf	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x40038c4	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40038c9	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40038cb	      0xe800000000	                          call 0x40038d0	       104	stdio2.h	CALL_16
0x40038d0	            0xebac	                           jmp 0x400387e	       104	stdio2.h	CALL_16
0x40038d2	    0x660f1f440000	                    nop word [rax + rax]	       104	stdio2.h	CALL_16
0x40038d8	      0x498d7c2d00	                    lea rdi, [r13 + rbp]	       104	stdio2.h	CALL_16
0x40038dd	      0xbe04000000	                              mov esi, 4	       104	stdio2.h	CALL_16
0x40038e2	        0x89542410	             mov dword [rsp + 0x10], edx	       104	stdio2.h	CALL_16
0x40038e6	    0xff1500000000	                 call qword [0x040038ec]	      9332	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7
0x40038ec	          0x4889c5	                            mov rbp, rax	      9332	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7
0x40038ef	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      9335	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	IF_30
0x40038f3	            0x89c0	                            mov eax, eax	      9332	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7
0x40038f5	          0x83fd07	                              cmp ebp, 7	      9335	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	IF_30
0x40038f8	     0xf8676ffffff	                           jbe 0x4003874	      9335	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	IF_30
0x40038fe	            0x31ff	                            xor edi, edi	      9336	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	CALL_44
0x4003900	      0xba05000000	                              mov edx, 5	      9336	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	CALL_44
0x4003905	      0xbe00000000	                              mov esi, 0	      9336	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	CALL_44
0x400390a	      0xe800000000	                          call 0x400390f	      9336	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	CALL_44
0x400390f	            0x89ee	                            mov esi, ebp	      9336	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	CALL_44
0x4003911	          0x4889c7	                            mov rdi, rax	      9336	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	CALL_44
0x4003914	            0x31c0	                            xor eax, eax	      9336	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	CALL_44
0x4003916	      0xe800000000	                          call 0x400391b	      9336	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	CALL_44
0x400391b	      0xe95effffff	                           jmp 0x400387e	      9336	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5	ELSE_7	CALL_44
0x4003920	      0x488d542478	                   lea rdx, [rsp + 0x78]	      9285	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003925	      0x488d742470	                   lea rsi, [rsp + 0x70]	      9285	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x400392a	          0x4c89cf	                             mov rdi, r9	      9285	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x400392d	      0x4c894c2410	              mov qword [rsp + 0x10], r9	      9285	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003932	      0xe800000000	                          call 0x4003937	      9285	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003937	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	      9285	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x400393c	      0xe923feffff	                           jmp 0x4003764	      9285	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003941	     0xf1f80000000	                         nop dword [rax]	      9285	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003948	    0x8da8ffffff3f	             lea ebp, [rax + 0x3fffffff]	      9312	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23
0x400394e	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      9312	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23
0x4003953	       0xfaf6c2458	            imul ebp, dword [rsp + 0x58]	      9312	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23
0x4003958	          0x4801c5	                            add rbp, rax	      9312	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23
0x400395b	          0x4939ee	                            cmp r14, rbp	      9314	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27
0x400395e	            0x7260	                            jb 0x40039c0	      9314	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27
0x4003960	          0x4839e8	                            cmp rax, rbp	      9314	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27
0x4003963	            0x775b	                            ja 0x40039c0	      9314	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27
0x4003965	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	      9322	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_28	CALL_41
0x400396a	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	      9322	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_28	CALL_41
0x400396f	    0x488d94248000	                   lea rdx, [rsp + 0x80]	      9322	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_28	CALL_41
0x4003977	      0xe894f5ffff	    call sym.dwarf_vmatoa64.constprop.26	      9322	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_28	CALL_41
0x400397c	            0x31ff	                            xor edi, edi	      9322	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_28	CALL_41
0x400397e	      0xba05000000	                              mov edx, 5	      9322	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_28	CALL_41
0x4003983	      0xbe00000000	                              mov esi, 0	      9322	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_28	CALL_41
0x4003988	      0x4889442410	             mov qword [rsp + 0x10], rax	      9322	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_28	CALL_41
0x400398d	      0xe800000000	                          call 0x4003992	      9322	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_28	CALL_41
0x4003992	        0x8b542428	            mov edx, dword [rsp + 0x28] 	       104	stdio2.h	CALL_16
0x4003996	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       104	stdio2.h	CALL_16
0x400399b	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400399e	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40039a3	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40039a5	      0xe800000000	                          call 0x40039aa	       104	stdio2.h	CALL_16
0x40039aa	          0x8b1424	                    mov edx, dword [rsp]	      9325	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x40039ad	        0x418d47ff	                      lea eax, [r15 - 1]	      9325	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x40039b1	            0x85d2	                           test edx, edx	      9325	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x40039b3	     0xf8544feffff	                           jne 0x40037fd	      9325	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x40039b9	      0xe9d2feffff	                           jmp 0x4003890	      9325	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x40039be	            0x6690	                                     nop	      9325	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	FOR_5
0x40039c0	      0xba05000000	                              mov edx, 5	      9316	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27	CALL_40
0x40039c5	      0xbe00000000	                              mov esi, 0	      9316	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27	CALL_40
0x40039ca	            0x31ff	                            xor edi, edi	      9316	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27	CALL_40
0x40039cc	        0x894c240c	              mov dword [rsp + 0xc], ecx	      9316	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27	CALL_40
0x40039d0	      0xe800000000	                          call 0x40039d5	      9316	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27	CALL_40
0x40039d5	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      9316	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27	CALL_40
0x40039d9	          0x8b1424	                    mov edx, dword [rsp]	      9316	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27	CALL_40
0x40039dc	          0x4889c7	                            mov rdi, rax	      9316	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27	CALL_40
0x40039df	            0x31c0	                            xor eax, eax	      9316	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27	CALL_40
0x40039e1	            0x89ce	                            mov esi, ecx	      9316	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27	CALL_40
0x40039e3	      0xe800000000	                          call 0x40039e8	      9316	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27	CALL_40
0x40039e8	            0x31c0	                            xor eax, eax	      9318	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27
0x40039ea	      0xe986f7ffff	                           jmp 0x4003175	      9318	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_27
0x40039ef	            0x31ff	                            xor edi, edi	      9056	dwarf.c	FUNCTION_89	IF_1	CALL_2
0x40039f1	      0xba05000000	                              mov edx, 5	      9056	dwarf.c	FUNCTION_89	IF_1	CALL_2
0x40039f6	      0xbe00000000	                              mov esi, 0	      9056	dwarf.c	FUNCTION_89	IF_1	CALL_2
0x40039fb	      0xe800000000	                          call 0x4003a00	      9056	dwarf.c	FUNCTION_89	IF_1	CALL_2
0x4003a00	          0x4889c7	                            mov rdi, rax	      9056	dwarf.c	FUNCTION_89	IF_1	CALL_2
0x4003a03	            0x31c0	                            xor eax, eax	      9056	dwarf.c	FUNCTION_89	IF_1	CALL_2
0x4003a05	      0xe800000000	                          call 0x4003a0a	      9056	dwarf.c	FUNCTION_89	IF_1	CALL_2
0x4003a0a	      0xe995f9ffff	                           jmp 0x40033a4	      9056	dwarf.c	FUNCTION_89	IF_1	CALL_2
0x4003a0f	            0x85db	                           test ebx, ebx	      9351	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32
0x4003a11	      0x4c8b642468	            mov r12, qword [rsp + 0x68] 	      9351	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32
0x4003a16	     0xf8516040000	                           jne 0x4003e32	      9351	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32
0x4003a1c	        0x448b1c24	                   mov r11d, dword [rsp]	      9359	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x4003a20	          0x4585db	                         test r11d, r11d	      9359	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x4003a23	            0x747e	                            je 0x4003aa3	      9359	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x4003a25	            0x31ed	                            xor ebp, ebp	      9230	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x4003a27	        0x448b3c24	                   mov r15d, dword [rsp]	      9230	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x4003a2b	            0xeb29	                           jmp 0x4003a56	      9230	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x4003a2d	           0xf1f00	                         nop dword [rax]	      9230	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x4003a30	      0x498d543d00	                    lea rdx, [r13 + rdi]	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x4003a35	            0x31ff	                            xor edi, edi	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x4003a37	          0x4939d6	                            cmp r14, rdx	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x4003a3a	            0x760e	                           jbe 0x4003a4a	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x4003a3c	          0x4c89f6	                            mov rsi, r14	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x4003a3f	          0x4829d6	                            sub rsi, rdx	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x4003a42	          0x8d46ff	                      lea eax, [rsi - 1]	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x4003a45	          0x83f807	                              cmp eax, 7	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x4003a48	            0x7627	                           jbe 0x4003a71	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x4003a4a	            0x85db	                           test ebx, ebx	      9362	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6	IF_33
0x4003a4c	            0x7532	                           jne 0x4003a80	      9362	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6	IF_33
0x4003a4e	          0x83c501	                              add ebp, 1	      9359	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x4003a51	          0x4139ef	                           cmp r15d, ebp	      9359	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x4003a54	            0x7645	                           jbe 0x4003a9b	      9359	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x4003a56	    0x8d3cad000000	                        lea edi, [rbp*4]	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x4003a5d	      0x498d443d04	                lea rax, [r13 + rdi + 4]	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x4003a62	          0x4939c6	                            cmp r14, rax	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x4003a65	            0x76c9	                           jbe 0x4003a30	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x4003a67	      0x498d543d00	                    lea rdx, [r13 + rdi]	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x4003a6c	      0xbe04000000	                              mov esi, 4	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x4003a71	          0x4889d7	                            mov rdi, rdx	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x4003a74	    0xff1500000000	                 call qword [0x04003a7a]	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x4003a7a	            0x89c7	                            mov edi, eax	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x4003a7c	            0xebcc	                           jmp 0x4003a4a	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x4003a7e	            0x6690	                                     nop	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x4003a80	      0xe86bdeffff	         call sym.get_DW_SECT_short_name	      9363	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6	CALL_48
0x4003a85	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4003a8a	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_16
0x4003a8d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4003a92	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4003a94	      0xe800000000	                          call 0x4003a99	       104	stdio2.h	CALL_16
0x4003a99	            0xebb3	                           jmp 0x4003a4e	       104	stdio2.h	CALL_16
0x4003a9b	            0x85db	                           test ebx, ebx	      9366	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_34
0x4003a9d	     0xf85f7030000	                           jne 0x4003e9a	      9366	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_34
0x4003aa3	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      9369	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003aa7	            0x85c0	                           test eax, eax	      9369	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003aa9	     0xf84bcf7ffff	                            je 0x400326b	      9369	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003aaf	      0x488b6c2420	            mov rbp, qword [rsp + 0x20] 	      9369	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003ab4	    0xc74424180000	               mov dword [rsp + 0x18], 0	      9361	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x4003abc	          0x4c89e7	                            mov rdi, r12	      9379	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	IF_36	CALL_49
0x4003abf	            0xeb37	                           jmp 0x4003af8	      9379	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	IF_36	CALL_49
0x4003ac1	     0xf1f80000000	                         nop dword [rax]	      9379	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	IF_36	CALL_49
0x4003ac8	          0x4c39f5	                            cmp rbp, r14	      9373	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003acb	            0x730e	                           jae 0x4003adb	      9373	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003acd	          0x4c89f6	                            mov rsi, r14	      9373	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003ad0	          0x4829ee	                            sub rsi, rbp	      9373	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003ad3	          0x8d46ff	                      lea eax, [rsi - 1]	      9373	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003ad6	          0x83f807	                              cmp eax, 7	      9373	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003ad9	            0x7654	                           jbe 0x4003b2f	      9373	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003adb	      0x8344241801	               add dword [rsp + 0x18], 1	      9369	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003ae0	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      9371	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003ae5	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      9369	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003ae9	        0x3944240c	              cmp dword [rsp + 0xc], eax	      9369	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003aed	      0x488b6c2428	            mov rbp, qword [rsp + 0x28] 	      9369	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003af2	     0xf86bcf8ffff	                           jbe 0x40033b4	      9369	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003af8	        0x488d4708	                      lea rax, [rdi + 8]	      9371	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003afc	          0x4939c6	                            cmp r14, rax	      9371	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003aff	      0x4889442430	             mov qword [rsp + 0x30], rax	      9371	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003b04	     0xf8396010000	                           jae 0x4003ca0	      9371	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003b0a	    0x48c744247000	               mov qword [rsp + 0x70], 0	      9371	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003b13	    0x48c744247800	               mov qword [rsp + 0x78], 0	      9371	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003b1c	        0x488d4504	                      lea rax, [rbp + 4]	      9371	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003b20	          0x4939c6	                            cmp r14, rax	      9373	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003b23	      0x4889442428	             mov qword [rsp + 0x28], rax	      9373	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003b28	            0x769e	                           jbe 0x4003ac8	      9373	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003b2a	      0xbe04000000	                              mov esi, 4	      9373	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003b2f	          0x4889ef	                            mov rdi, rbp	      9373	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003b32	    0xff1500000000	                 call qword [0x04003b38]	      9373	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003b38	            0x85c0	                           test eax, eax	      9374	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35
0x4003b3a	          0x4989c4	                            mov r12, rax	      9373	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003b3d	            0x749c	                            je 0x4003adb	      9374	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35
0x4003b3f	    0x8da8ffffff3f	             lea ebp, [rax + 0x3fffffff]	      9376	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35
0x4003b45	       0xfaf6c2458	            imul ebp, dword [rsp + 0x58]	      9376	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35
0x4003b4a	      0x48036c2460	             add rbp, qword [rsp + 0x60]	      9376	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35
0x4003b4f	            0x85db	                           test ebx, ebx	      9378	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	IF_36
0x4003b51	     0xf855d010000	                           jne 0x4003cb4	      9378	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	IF_36
0x4003b57	        0x448b0424	                    mov r8d, dword [rsp]	      9383	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003b5b	          0x4585c0	                           test r8d, r8d	      9383	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003b5e	     0xf8477ffffff	                            je 0x4003adb	      9383	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003b64	      0x418d4424ff	                      lea eax, [r12 - 1]	      9394	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	ELSE_10
0x4003b69	          0x4d89f7	                            mov r15, r14	      9394	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	ELSE_10
0x4003b6c	          0x4889c2	                            mov rdx, rax	      9394	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	ELSE_10
0x4003b6f	        0x48c1e207	                              shl rdx, 7	      9394	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	ELSE_10
0x4003b73	        0x4c8d24c2	                  lea r12, [rdx + rax*8]	      9394	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	ELSE_10
0x4003b77	      0x4c03642448	             add r12, qword [rsp + 0x48]	      9394	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	ELSE_10
0x4003b7c	      0x4c89642420	             mov qword [rsp + 0x20], r12	      9394	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	ELSE_10
0x4003b81	          0x4531e4	                          xor r12d, r12d	      9394	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	ELSE_10
0x4003b84	          0x4589e6	                          mov r14d, r12d	      9394	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	ELSE_10
0x4003b87	          0x4989ec	                            mov r12, rbp	      9394	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	ELSE_10
0x4003b8a	    0x660f1f440000	                    nop word [rax + rax]	      9394	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	ELSE_10
0x4003b90	    0x428d2cb50000	                        lea ebp, [r14*4]	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003b98	        0x488d4d04	                      lea rcx, [rbp + 4]	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003b9c	        0x498d040c	                    lea rax, [r12 + rcx]	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003ba0	          0x4939c7	                            cmp r15, rax	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003ba3	            0x777b	                            ja 0x4003c20	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003ba5	        0x498d3c2c	                    lea rdi, [r12 + rbp]	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003ba9	            0x31d2	                            xor edx, edx	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003bab	          0x4939ff	                            cmp r15, rdi	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003bae	            0x760e	                           jbe 0x4003bbe	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003bb0	          0x4c89fe	                            mov rsi, r15	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003bb3	          0x4829fe	                            sub rsi, rdi	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003bb6	          0x8d46ff	                      lea eax, [rsi - 1]	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003bb9	          0x83f807	                              cmp eax, 7	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003bbc	            0x766b	                           jbe 0x4003c29	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003bbe	            0x85db	                           test ebx, ebx	      9386	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	IF_37
0x4003bc0	     0xf85c2000000	                           jne 0x4003c88	      9386	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	IF_37
0x4003bc6	          0x4c01e9	                            add rcx, r13	      9390	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9
0x4003bc9	          0x4939cf	                            cmp r15, rcx	      9390	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9
0x4003bcc	            0x7772	                            ja 0x4003c40	      9390	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9
0x4003bce	      0x498d7c2d00	                    lea rdi, [r13 + rbp]	      9390	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9
0x4003bd3	          0x4939ff	                            cmp r15, rdi	      9390	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9
0x4003bd6	            0x760e	                           jbe 0x4003be6	      9390	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9
0x4003bd8	          0x4c89fe	                            mov rsi, r15	      9390	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9
0x4003bdb	          0x4829fe	                            sub rsi, rdi	      9390	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9
0x4003bde	          0x8d46ff	                      lea eax, [rsi - 1]	      9390	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9
0x4003be1	          0x83f807	                              cmp eax, 7	      9390	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9
0x4003be4	            0x7664	                           jbe 0x4003c4a	      9390	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9
0x4003be6	            0x31c0	                            xor eax, eax	      9390	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9
0x4003be8	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      9394	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	ELSE_10
0x4003bed	      0x488954c648	     mov qword [rsi + rax*8 + 0x48], rdx	      9394	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	ELSE_10
0x4003bf2	        0x4183c601	                             add r14d, 1	      9383	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003bf6	        0x44393424	                   cmp dword [rsp], r14d	      9383	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003bfa	            0x7794	                            ja 0x4003b90	      9383	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003bfc	            0x85db	                           test ebx, ebx	      9398	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	IF_39
0x4003bfe	          0x4d89fe	                            mov r14, r15	      9398	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	IF_39
0x4003c01	     0xf84d4feffff	                            je 0x4003adb	      9398	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	IF_39
0x4003c07	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x4003c0c	      0xe800000000	                          call 0x4003c11	       104	stdio2.h	CALL_16
0x4003c11	      0xe9c5feffff	                           jmp 0x4003adb	       104	stdio2.h	CALL_16
0x4003c16	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       104	stdio2.h	CALL_16
0x4003c20	        0x498d3c2c	                    lea rdi, [r12 + rbp]	       104	stdio2.h	CALL_16
0x4003c24	      0xbe04000000	                              mov esi, 4	       104	stdio2.h	CALL_16
0x4003c29	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       104	stdio2.h	CALL_16
0x4003c2e	    0xff1500000000	                 call qword [0x04003c34]	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003c34	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003c39	            0x89c2	                            mov edx, eax	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003c3b	            0xeb81	                           jmp 0x4003bbe	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003c3d	           0xf1f00	                         nop dword [rax]	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003c40	      0x498d7c2d00	                    lea rdi, [r13 + rbp]	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003c45	      0xbe04000000	                              mov esi, 4	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003c4a	        0x89542410	             mov dword [rsp + 0x10], edx	      9385	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003c4e	    0xff1500000000	                 call qword [0x04003c54]	      9390	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9
0x4003c54	          0x4889c5	                            mov rbp, rax	      9390	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9
0x4003c57	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      9391	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	IF_38
0x4003c5b	            0x89c0	                            mov eax, eax	      9390	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9
0x4003c5d	          0x83fd07	                              cmp ebp, 7	      9391	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	IF_38
0x4003c60	            0x7686	                           jbe 0x4003be8	      9391	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	IF_38
0x4003c62	            0x31ff	                            xor edi, edi	      9392	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	CALL_52
0x4003c64	      0xba05000000	                              mov edx, 5	      9392	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	CALL_52
0x4003c69	      0xbe00000000	                              mov esi, 0	      9392	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	CALL_52
0x4003c6e	      0xe800000000	                          call 0x4003c73	      9392	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	CALL_52
0x4003c73	            0x89ee	                            mov esi, ebp	      9392	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	CALL_52
0x4003c75	          0x4889c7	                            mov rdi, rax	      9392	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	CALL_52
0x4003c78	            0x31c0	                            xor eax, eax	      9392	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	CALL_52
0x4003c7a	      0xe800000000	                          call 0x4003c7f	      9392	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	CALL_52
0x4003c7f	      0xe96effffff	                           jmp 0x4003bf2	      9392	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	CALL_52
0x4003c84	         0xf1f4000	                         nop dword [rax]	      9392	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8	ELSE_9	CALL_52
0x4003c88	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4003c8d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4003c92	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4003c94	      0xe800000000	                          call 0x4003c99	       104	stdio2.h	CALL_16
0x4003c99	      0xe954ffffff	                           jmp 0x4003bf2	       104	stdio2.h	CALL_16
0x4003c9e	            0x6690	                                     nop	       104	stdio2.h	CALL_16
0x4003ca0	      0x488d542478	                   lea rdx, [rsp + 0x78]	      9371	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003ca5	      0x488d742470	                   lea rsi, [rsp + 0x70]	      9371	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003caa	      0xe800000000	                          call 0x4003caf	      9371	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003caf	      0xe968feffff	                           jmp 0x4003b1c	      9371	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003cb4	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	      9379	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	IF_36	CALL_49
0x4003cb9	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	      9379	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	IF_36	CALL_49
0x4003cbe	    0x488d94248000	                   lea rdx, [rsp + 0x80]	      9379	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	IF_36	CALL_49
0x4003cc6	      0xe845f2ffff	    call sym.dwarf_vmatoa64.constprop.26	      9379	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	IF_36	CALL_49
0x4003ccb	            0x31ff	                            xor edi, edi	      9379	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	IF_36	CALL_49
0x4003ccd	      0xba05000000	                              mov edx, 5	      9379	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	IF_36	CALL_49
0x4003cd2	      0xbe00000000	                              mov esi, 0	      9379	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	IF_36	CALL_49
0x4003cd7	      0x4889442410	             mov qword [rsp + 0x10], rax	      9379	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	IF_36	CALL_49
0x4003cdc	      0xe800000000	                          call 0x4003ce1	      9379	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	IF_36	CALL_49
0x4003ce1	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       104	stdio2.h	CALL_16
0x4003ce6	        0x8b542418	            mov edx, dword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x4003cea	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4003ced	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4003cf2	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4003cf4	      0xe800000000	                          call 0x4003cf9	       104	stdio2.h	CALL_16
0x4003cf9	        0x448b0c24	                    mov r9d, dword [rsp]	      9383	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003cfd	          0x4585c9	                           test r9d, r9d	      9383	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003d00	     0xf855efeffff	                           jne 0x4003b64	      9383	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003d06	      0xe9fcfeffff	                           jmp 0x4003c07	      9383	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7	IF_35	FOR_8
0x4003d0b	      0xbe88000000	                           mov esi, 0x88	      9549	dwarf.c	FUNCTION_99	CALL_4
0x4003d10	    0x893d00000000	            mov dword [0x04003d16], edi 	      9267	dwarf.c	FUNCTION_91	ELSE_3	IF_17	ELSE_4	ELSE_5
0x4003d16	      0xe800000000	                          call 0x4003d1b	      9549	dwarf.c	FUNCTION_99	CALL_4
0x4003d1b	      0x4889442448	             mov qword [rsp + 0x48], rax	      9549	dwarf.c	FUNCTION_99	CALL_4
0x4003d20	    0x488905000000	            mov qword [0x04003d27], rax 	      9268	dwarf.c	FUNCTION_91	ELSE_3	IF_17	ELSE_4	ELSE_5	CALL_32
0x4003d27	      0xe9baf9ffff	                           jmp 0x40036e6	      9268	dwarf.c	FUNCTION_91	ELSE_3	IF_17	ELSE_4	ELSE_5	CALL_32
0x4003d2c	      0xba05000000	                              mov edx, 5	      9186	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_11	CALL_16
0x4003d31	      0xbe00000000	                              mov esi, 0	      9186	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_11	CALL_16
0x4003d36	            0x31ff	                            xor edi, edi	      9186	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_11	CALL_16
0x4003d38	      0xe800000000	                          call 0x4003d3d	      9186	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_11	CALL_16
0x4003d3d	          0x4889c7	                            mov rdi, rax	      9186	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_11	CALL_16
0x4003d40	            0x31c0	                            xor eax, eax	      9186	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_11	CALL_16
0x4003d42	      0xe800000000	                          call 0x4003d47	      9186	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_11	CALL_16
0x4003d47	            0x31c0	                            xor eax, eax	      9187	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_11
0x4003d49	      0xe927f4ffff	                           jmp 0x4003175	      9187	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10	IF_11
0x4003d4e	      0xba05000000	                              mov edx, 5	      9253	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20	CALL_28
0x4003d53	            0x31ff	                            xor edi, edi	      9253	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20	CALL_28
0x4003d55	      0xbe00000000	                              mov esi, 0	      9253	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20	CALL_28
0x4003d5a	      0xe800000000	                          call 0x4003d5f	      9253	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20	CALL_28
0x4003d5f	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4003d64	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4003d67	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4003d69	      0xe800000000	                          call 0x4003d6e	       104	stdio2.h	CALL_16
0x4003d6e	      0x448b44245c	            mov r8d, dword [rsp + 0x5c] 	      9254	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20
0x4003d73	      0xba05000000	                              mov edx, 5	      9254	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20
0x4003d78	          0x4585c0	                           test r8d, r8d	      9254	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20
0x4003d7b	     0xf85b7010000	                           jne 0x4003f38	      9254	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20
0x4003d81	      0xbe00000000	                              mov esi, 0	      9254	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20
0x4003d86	            0x31ff	                            xor edi, edi	      9254	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20
0x4003d88	      0xe800000000	                          call 0x4003d8d	      9254	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20
0x4003d8d	          0x4889c2	                            mov rdx, rax	      9254	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20
0x4003d90	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4003d95	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4003d97	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4003d9c	      0xe800000000	                          call 0x4003da1	       104	stdio2.h	CALL_16
0x4003da1	          0x8b3c24	                    mov edi, dword [rsp]	      9275	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003da4	            0x31ed	                            xor ebp, ebp	      9275	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003da6	        0x448b3c24	                   mov r15d, dword [rsp]	      9275	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003daa	            0x85ff	                           test edi, edi	      9275	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003dac	            0x753d	                           jne 0x4003deb	      9275	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003dae	            0xeb63	                           jmp 0x4003e13	      9275	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003db0	      0x498d543d00	                    lea rdx, [r13 + rdi]	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003db5	            0x31ff	                            xor edi, edi	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003db7	          0x4939d6	                            cmp r14, rdx	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003dba	            0x760e	                           jbe 0x4003dca	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003dbc	          0x4c89f6	                            mov rsi, r14	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003dbf	          0x4829d6	                            sub rsi, rdx	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003dc2	          0x8d46ff	                      lea eax, [rsi - 1]	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003dc5	          0x83f807	                              cmp eax, 7	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003dc8	            0x763c	                           jbe 0x4003e06	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003dca	      0xe821dbffff	         call sym.get_DW_SECT_short_name	      9278	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3	CALL_33
0x4003dcf	          0x83c501	                              add ebp, 1	      9275	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003dd2	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_16
0x4003dd5	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4003dda	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4003ddc	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4003de1	      0xe800000000	                          call 0x4003de6	       104	stdio2.h	CALL_16
0x4003de6	          0x4139ef	                           cmp r15d, ebp	      9275	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003de9	            0x7428	                            je 0x4003e13	      9275	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003deb	    0x8d3cad000000	                        lea edi, [rbp*4]	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003df2	      0x498d443d04	                lea rax, [r13 + rdi + 4]	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003df7	          0x4939c6	                            cmp r14, rax	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003dfa	            0x76b4	                           jbe 0x4003db0	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003dfc	      0x498d543d00	                    lea rdx, [r13 + rdi]	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003e01	      0xbe04000000	                              mov esi, 4	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003e06	          0x4889d7	                            mov rdi, rdx	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003e09	    0xff1500000000	                 call qword [0x04003e0f]	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003e0f	            0x89c7	                            mov edi, eax	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003e11	            0xebb7	                           jmp 0x4003dca	      9277	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_22	FOR_3
0x4003e13	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x4003e18	      0xe800000000	                          call 0x4003e1d	       104	stdio2.h	CALL_16
0x4003e1d	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      9283	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003e21	    0x48c744244800	               mov qword [rsp + 0x48], 0	      9230	dwarf.c	FUNCTION_91	ELSE_3	IF_17
0x4003e2a	            0x85f6	                           test esi, esi	      9283	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003e2c	     0xf85c0f8ffff	                           jne 0x40036f2	      9283	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4
0x4003e32	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x4003e37	      0xe800000000	                          call 0x4003e3c	       104	stdio2.h	CALL_16
0x4003e3c	      0xba05000000	                              mov edx, 5	      9354	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32	CALL_45
0x4003e41	            0x31ff	                            xor edi, edi	      9354	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32	CALL_45
0x4003e43	      0xbe00000000	                              mov esi, 0	      9354	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32	CALL_45
0x4003e48	      0xe800000000	                          call 0x4003e4d	      9354	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32	CALL_45
0x4003e4d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4003e52	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4003e55	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4003e57	      0xe800000000	                          call 0x4003e5c	       104	stdio2.h	CALL_16
0x4003e5c	      0x448b7c245c	           mov r15d, dword [rsp + 0x5c] 	      9355	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32
0x4003e61	      0xba05000000	                              mov edx, 5	      9355	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32
0x4003e66	          0x4585ff	                         test r15d, r15d	      9355	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32
0x4003e69	     0xf850a010000	                           jne 0x4003f79	      9355	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32
0x4003e6f	      0xbe00000000	                              mov esi, 0	      9355	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32
0x4003e74	            0x31ff	                            xor edi, edi	      9355	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32
0x4003e76	      0xe800000000	                          call 0x4003e7b	      9355	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32
0x4003e7b	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_16
0x4003e7e	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4003e83	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4003e85	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4003e8a	      0xe800000000	                          call 0x4003e8f	       104	stdio2.h	CALL_16
0x4003e8f	          0x8b2c24	                    mov ebp, dword [rsp]	      9359	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x4003e92	            0x85ed	                           test ebp, ebp	      9359	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x4003e94	     0xf858bfbffff	                           jne 0x4003a25	      9359	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_6
0x4003e9a	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x4003e9f	      0xe800000000	                          call 0x4003ea4	       104	stdio2.h	CALL_16
0x4003ea4	      0x448b54240c	            mov r10d, dword [rsp + 0xc] 	      9369	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003ea9	          0x4585d2	                         test r10d, r10d	      9369	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003eac	     0xf85fdfbffff	                           jne 0x4003aaf	      9369	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003eb2	      0xe909f5ffff	                           jmp 0x40033c0	      9369	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_7
0x4003eb7	      0xba05000000	                              mov edx, 5	      9246	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_19	CALL_27
0x4003ebc	      0xbe00000000	                              mov esi, 0	      9246	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_19	CALL_27
0x4003ec1	            0x31ff	                            xor edi, edi	      9246	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_19	CALL_27
0x4003ec3	      0xe800000000	                          call 0x4003ec8	      9246	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_19	CALL_27
0x4003ec8	          0x4889ee	                            mov rsi, rbp	      9246	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_19	CALL_27
0x4003ecb	          0x4889c7	                            mov rdi, rax	      9246	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_19	CALL_27
0x4003ece	            0x31c0	                            xor eax, eax	      9246	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_19	CALL_27
0x4003ed0	      0xe800000000	                          call 0x4003ed5	      9246	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_19	CALL_27
0x4003ed5	            0x31c0	                            xor eax, eax	      9248	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_19
0x4003ed7	      0xe999f2ffff	                           jmp 0x4003175	      9248	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_19
0x4003edc	    0x890500000000	            mov dword [0x04003ee2], eax 	      9027	dwarf.c	FUNCTION_87	IF_1
0x4003ee2	            0x89c0	                            mov eax, eax	      9515	dwarf.c	FUNCTION_97	CALL_3
0x4003ee4	    0xc70500000000	               mov dword [0x04003eee], 0	      9028	dwarf.c	FUNCTION_87	IF_1
0x4003eee	    0x488d3c850000	                        lea rdi, [rax*4]	      9515	dwarf.c	FUNCTION_97	CALL_3
0x4003ef6	      0xe800000000	                          call 0x4003efb	      9515	dwarf.c	FUNCTION_97	CALL_3
0x4003efb	    0x488905000000	            mov qword [0x04003f02], rax 	      9029	dwarf.c	FUNCTION_87	IF_1	CALL_1
0x4003f02	      0xe96ef7ffff	                           jmp 0x4003675	      9029	dwarf.c	FUNCTION_87	IF_1	CALL_1
0x4003f07	      0xba05000000	                              mov edx, 5	      9293	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_24	CALL_35
0x4003f0c	      0xbe00000000	                              mov esi, 0	      9293	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_24	CALL_35
0x4003f11	            0x31ff	                            xor edi, edi	      9293	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_24	CALL_35
0x4003f13	        0x48890424	                    mov qword [rsp], rax	      9293	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_24	CALL_35
0x4003f17	      0xe800000000	                          call 0x4003f1c	      9293	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_24	CALL_35
0x4003f1c	        0x4c8b0424	                     mov r8, qword [rsp]	      9293	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_24	CALL_35
0x4003f20	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      9293	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_24	CALL_35
0x4003f24	          0x4889c7	                            mov rdi, rax	      9293	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_24	CALL_35
0x4003f27	            0x31c0	                            xor eax, eax	      9293	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_24	CALL_35
0x4003f29	          0x4489c6	                            mov esi, r8d	      9293	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_24	CALL_35
0x4003f2c	      0xe800000000	                          call 0x4003f31	      9293	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_24	CALL_35
0x4003f31	            0x31c0	                            xor eax, eax	      9295	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_24
0x4003f33	      0xe93df2ffff	                           jmp 0x4003175	      9295	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_24
0x4003f38	      0xbe00000000	                              mov esi, 0	      9254	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20
0x4003f3d	            0x31ff	                            xor edi, edi	      9254	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20
0x4003f3f	      0xe800000000	                          call 0x4003f44	      9254	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20
0x4003f44	          0x4889c2	                            mov rdx, rax	      9254	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20
0x4003f47	      0xe944feffff	                           jmp 0x4003d90	      9254	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_20
0x4003f4c	      0xba05000000	                              mov edx, 5	      9307	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_25	ELSE_6	CALL_38
0x4003f51	      0xbe00000000	                              mov esi, 0	      9307	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_25	ELSE_6	CALL_38
0x4003f56	            0x31ff	                            xor edi, edi	      9307	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_25	ELSE_6	CALL_38
0x4003f58	        0x4c890c24	                     mov qword [rsp], r9	      9307	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_25	ELSE_6	CALL_38
0x4003f5c	      0xe800000000	                          call 0x4003f61	      9307	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_25	ELSE_6	CALL_38
0x4003f61	        0x4c8b0c24	                     mov r9, qword [rsp]	      9307	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_25	ELSE_6	CALL_38
0x4003f65	          0x4889c7	                            mov rdi, rax	      9307	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_25	ELSE_6	CALL_38
0x4003f68	            0x31c0	                            xor eax, eax	      9307	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_25	ELSE_6	CALL_38
0x4003f6a	          0x4c89ce	                             mov rsi, r9	      9307	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_25	ELSE_6	CALL_38
0x4003f6d	      0xe800000000	                          call 0x4003f72	      9307	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_25	ELSE_6	CALL_38
0x4003f72	            0x31c0	                            xor eax, eax	      9308	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_25	ELSE_6
0x4003f74	      0xe9fcf1ffff	                           jmp 0x4003175	      9308	dwarf.c	FUNCTION_91	ELSE_3	IF_17	FOR_4	IF_23	IF_25	ELSE_6
0x4003f79	      0xbe00000000	                              mov esi, 0	      9355	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32
0x4003f7e	            0x31ff	                            xor edi, edi	      9355	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32
0x4003f80	      0xe800000000	                          call 0x4003f85	      9355	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32
0x4003f85	      0xe9f1feffff	                           jmp 0x4003e7b	      9355	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32
0x4003f8a	    0x660f1f440000	                    nop word [rax + rax]	      9355	dwarf.c	FUNCTION_91	ELSE_3	IF_17	IF_32
0x4003f90	    0x8b1500000000	            mov edx, dword [0x04003f96] 	      9043	dwarf.c	FUNCTION_88	IF_1
0x4003f96	    0x3b1500000000	            cmp edx, dword [0x04003f9c] 	      9043	dwarf.c	FUNCTION_88	IF_1
0x4003f9c	            0x7322	                           jae 0x4003fc0	      9043	dwarf.c	FUNCTION_88	IF_1
0x4003f9e	          0x8d4a01	                      lea ecx, [rdx + 1]	      9048	dwarf.c	FUNCTION_88
0x4003fa1	    0x890d00000000	            mov dword [0x04003fa7], ecx 	      9048	dwarf.c	FUNCTION_88
0x4003fa7	    0x488b0d000000	            mov rcx, qword [0x04003fae] 	      9048	dwarf.c	FUNCTION_88
0x4003fae	          0x890491	            mov dword [rcx + rdx*4], eax	      9048	dwarf.c	FUNCTION_88
0x4003fb1	      0xe988f5ffff	                           jmp 0x400353e	      9048	dwarf.c	FUNCTION_88
0x4003fb6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      9048	dwarf.c	FUNCTION_88
0x4003fc0	            0x31ff	                            xor edi, edi	      9045	dwarf.c	FUNCTION_88	IF_1	CALL_2
0x4003fc2	      0xba05000000	                              mov edx, 5	      9045	dwarf.c	FUNCTION_88	IF_1	CALL_2
0x4003fc7	      0xbe00000000	                              mov esi, 0	      9045	dwarf.c	FUNCTION_88	IF_1	CALL_2
0x4003fcc	      0xe800000000	                          call 0x4003fd1	      9045	dwarf.c	FUNCTION_88	IF_1	CALL_2
0x4003fd1	          0x4889c7	                            mov rdi, rax	      9045	dwarf.c	FUNCTION_88	IF_1	CALL_2
0x4003fd4	            0x31c0	                            xor eax, eax	      9045	dwarf.c	FUNCTION_88	IF_1	CALL_2
0x4003fd6	      0xe800000000	                          call 0x4003fdb	      9045	dwarf.c	FUNCTION_88	IF_1	CALL_2
0x4003fdb	      0xe95ef5ffff	                           jmp 0x400353e	      9045	dwarf.c	FUNCTION_88	IF_1	CALL_2
0x4003fe0	      0xbe04000000	                              mov esi, 4	      9045	dwarf.c	FUNCTION_88	IF_1	CALL_2
0x4003fe5	      0xe92ff5ffff	                           jmp 0x4003519	      9045	dwarf.c	FUNCTION_88	IF_1	CALL_2
0x4003fea	      0xe800000000	                          call 0x4003fef	      9413	dwarf.c	FUNCTION_91
0x4003fef	    0x48837c247800	               cmp qword [rsp + 0x78], 0	      9179	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x4003ff5	     0xf8580f4ffff	                           jne 0x400347b	      9179	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x4003ffb	      0xe9a4f3ffff	                           jmp 0x40033a4	      9179	dwarf.c	FUNCTION_91	IF_8	FOR_1	IF_10
0x4004000	    0xc70424000000	                      mov dword [rsp], 0	      9108	dwarf.c	FUNCTION_91
0x4004007	      0xe9b0f0ffff	                           jmp 0x40030bc	      9108	dwarf.c	FUNCTION_91
0x400400c	          0x4c89e7	                            mov rdi, r12	      9134	dwarf.c	FUNCTION_91
0x400400f	        0x4d8d6710	                   lea r12, [r15 + 0x10]	      9135	dwarf.c	FUNCTION_91
0x4004013	    0xff1500000000	                 call qword [0x04004019]	      9134	dwarf.c	FUNCTION_91
0x4004019	          0x4d39f4	                            cmp r12, r14	      9135	dwarf.c	FUNCTION_91
0x400401c	        0x89442418	             mov dword [rsp + 0x18], eax	      9134	dwarf.c	FUNCTION_91
0x4004020	     0xf8364f0ffff	                           jae 0x400308a	      9135	dwarf.c	FUNCTION_91
0x4004026	      0xe9b2f1ffff	                           jmp 0x40031dd	      9135	dwarf.c	FUNCTION_91
display_debug_not_supported	ELSE,0:FOR,0:CALL,1:WHILE,0:DO,0:functions,0:SWITCH,0:IF,0	14
0x40000c0	              0x53	                                push rbx	      9478	dwarf.c	FUNCTION_95
0x40000c1	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	      9479	dwarf.c	FUNCTION_95	CALL_1
0x40000c5	      0xba05000000	                              mov edx, 5	      9479	dwarf.c	FUNCTION_95	CALL_1
0x40000ca	      0xbe00000000	                              mov esi, 0	      9479	dwarf.c	FUNCTION_95	CALL_1
0x40000cf	            0x31ff	                            xor edi, edi	      9479	dwarf.c	FUNCTION_95	CALL_1
0x40000d1	      0xe800000000	                          call 0x40000d6	      9479	dwarf.c	FUNCTION_95	CALL_1
0x40000d6	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_16
0x40000d9	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40000dc	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40000e1	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40000e3	      0xe800000000	                          call 0x40000e8	       104	stdio2.h	CALL_16
0x40000e8	      0xb801000000	                              mov eax, 1	      9483	dwarf.c	FUNCTION_95
0x40000ed	              0x5b	                                 pop rbx	      9483	dwarf.c	FUNCTION_95
0x40000ee	              0xc3	                                     ret	      9483	dwarf.c	FUNCTION_95
init_dwarf_regnames	ELSE,0:FOR,0:CALL,6:WHILE,0:DO,0:functions,0:SWITCH,1:IF,0	45
0x4017b10	          0x83ff3e	                           cmp edi, 0x3e	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4017b13	            0x7476	                            je 0x4017b8b	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4017b15	            0x7719	                            ja 0x4017b30	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4017b17	          0x83ff06	                              cmp edi, 6	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4017b1a	            0x7444	                            je 0x4017b60	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4017b1c	          0x83ff16	                           cmp edi, 0x16	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4017b1f	     0xf84bb000000	                            je 0x4017be0	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4017b25	          0x83ff03	                              cmp edi, 3	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4017b28	            0x747e	                            je 0x4017ba8	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4017b2a	            0xf3c3	                                     ret	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4017b2c	         0xf1f4000	                         nop dword [rax]	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4017b30	    0x81ffb7000000	                           cmp edi, 0xb7	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4017b36	     0xf8484000000	                            je 0x4017bc0	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4017b3c	            0x7642	                           jbe 0x4017b80	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4017b3e	    0x81fff3000000	                           cmp edi, 0xf3	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4017b44	     0xf85b6000000	                           jne 0x4017c00	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4017b4a	    0x48c705000000	               mov qword [0x04017b55], 0	      7119	dwarf.c	FUNCTION_76
0x4017b55	    0xc70500000000	           mov dword [0x04017b5f], 0x40 	      7120	dwarf.c	FUNCTION_76	CALL_1
0x4017b5f	              0xc3	                                     ret	      7120	dwarf.c	FUNCTION_76	CALL_1
0x4017b60	    0x48c705000000	               mov qword [0x04017b6b], 0	      7012	dwarf.c	FUNCTION_72
0x4017b6b	    0xc70500000000	           mov dword [0x04017b75], 0x65 	      7013	dwarf.c	FUNCTION_72	CALL_1
0x4017b75	              0xc3	                                     ret	      7013	dwarf.c	FUNCTION_72	CALL_1
0x4017b76	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7013	dwarf.c	FUNCTION_72	CALL_1
0x4017b80	    0x81efb4000000	                           sub edi, 0xb4	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4017b86	          0x83ff01	                              cmp edi, 1	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4017b89	            0x777d	                            ja 0x4017c08	      7126	dwarf.c	FUNCTION_77	SWITCH_1
0x4017b8b	    0x48c705000000	               mov qword [0x04017b96], 0	      7051	dwarf.c	FUNCTION_73
0x4017b96	    0xc70500000000	           mov dword [0x04017ba0], 0x7e 	      7052	dwarf.c	FUNCTION_73	CALL_1
0x4017ba0	              0xc3	                                     ret	      7052	dwarf.c	FUNCTION_73	CALL_1
0x4017ba1	     0xf1f80000000	                         nop dword [rax]	      7052	dwarf.c	FUNCTION_73	CALL_1
0x4017ba8	    0x48c705000000	               mov qword [0x04017bb3], 0	      7005	dwarf.c	FUNCTION_71
0x4017bb3	    0xc70500000000	           mov dword [0x04017bbd], 0x65 	      7006	dwarf.c	FUNCTION_71	CALL_1
0x4017bbd	              0xc3	                                     ret	      7006	dwarf.c	FUNCTION_71	CALL_1
0x4017bbe	            0x6690	                                     nop	      7006	dwarf.c	FUNCTION_71	CALL_1
0x4017bc0	    0x48c705000000	               mov qword [0x04017bcb], 0	      7074	dwarf.c	FUNCTION_74
0x4017bcb	    0xc70500000000	           mov dword [0x04017bd5], 0x60 	      7075	dwarf.c	FUNCTION_74	CALL_1
0x4017bd5	              0xc3	                                     ret	      7075	dwarf.c	FUNCTION_74	CALL_1
0x4017bd6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7075	dwarf.c	FUNCTION_74	CALL_1
0x4017be0	    0x48c705000000	               mov qword [0x04017beb], 0	      7098	dwarf.c	FUNCTION_75
0x4017beb	    0xc70500000000	           mov dword [0x04017bf5], 0x54 	      7099	dwarf.c	FUNCTION_75	CALL_1
0x4017bf5	              0xc3	                                     ret	      7099	dwarf.c	FUNCTION_75	CALL_1
0x4017bf6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7099	dwarf.c	FUNCTION_75	CALL_1
0x4017c00	            0xf3c3	                                     ret	      7099	dwarf.c	FUNCTION_75	CALL_1
0x4017c02	    0x660f1f440000	                    nop word [rax + rax]	      7099	dwarf.c	FUNCTION_75	CALL_1
0x4017c08	            0xf3c3	                                     ret	      7099	dwarf.c	FUNCTION_75	CALL_1
dwarf_select_sections_by_names	ELSE,0:FOR,1:CALL,5:WHILE,1:DO,0:functions,0:SWITCH,0:IF,5	70
0x4018190	            0x4155	                                push r13	     10039	dwarf.c	FUNCTION_109
0x4018192	            0x4154	                                push r12	     10039	dwarf.c	FUNCTION_109
0x4018194	          0x4989fd	                            mov r13, rdi	     10039	dwarf.c	FUNCTION_109
0x4018197	              0x55	                                push rbp	     10039	dwarf.c	FUNCTION_109
0x4018198	              0x53	                                push rbx	     10039	dwarf.c	FUNCTION_109
0x4018199	        0x4883ec08	                              sub rsp, 8	     10039	dwarf.c	FUNCTION_109
0x401819d	           0xfb607	                   movzx eax, byte [rdi]	     10039	dwarf.c	FUNCTION_109
0x40181a0	            0x84c0	                             test al, al	     10084	dwarf.c	FUNCTION_109	WHILE_1
0x40181a2	     0xf84a2000000	                            je 0x401824a	     10084	dwarf.c	FUNCTION_109	WHILE_1
0x40181a8	      0xbd06000000	                              mov ebp, 6	     10084	dwarf.c	FUNCTION_109	WHILE_1
0x40181ad	      0xbb00000000	                              mov ebx, 0	     10084	dwarf.c	FUNCTION_109	WHILE_1
0x40181b2	    0x41bc00000000	                             mov r12d, 0	     10084	dwarf.c	FUNCTION_109	WHILE_1
0x40181b8	            0xeb11	                           jmp 0x40181cb	     10084	dwarf.c	FUNCTION_109	WHILE_1
0x40181ba	    0x660f1f440000	                    nop word [rax + rax]	     10084	dwarf.c	FUNCTION_109	WHILE_1
0x40181c0	          0x4889df	                            mov rdi, rbx	     10084	dwarf.c	FUNCTION_109	WHILE_1
0x40181c3	      0xe800000000	                          call 0x40181c8	     10084	dwarf.c	FUNCTION_109	WHILE_1
0x40181c8	          0x4889c5	                            mov rbp, rax	     10084	dwarf.c	FUNCTION_109	WHILE_1
0x40181cb	          0x4889ea	                            mov rdx, rbp	     10092	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1	CALL_2
0x40181ce	          0x4889de	                            mov rsi, rbx	     10092	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1	CALL_2
0x40181d1	          0x4c89ef	                            mov rdi, r13	     10092	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1	CALL_2
0x40181d4	      0xe800000000	                          call 0x40181d9	     10092	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1	CALL_2
0x40181d9	            0x85c0	                           test eax, eax	     10092	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1	CALL_2
0x40181db	            0x750f	                           jne 0x40181ec	     10092	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1	CALL_2
0x40181dd	          0x4c01ed	                            add rbp, r13	     10093	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1
0x40181e0	         0xfb64500	                   movzx eax, byte [rbp]	     10093	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1
0x40181e4	            0x3c2c	                            cmp al, 0x2c	     10093	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1
0x40181e6	            0x7470	                            je 0x4018258	     10093	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1
0x40181e8	            0x84c0	                             test al, al	     10093	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1
0x40181ea	            0x746c	                            je 0x4018258	     10093	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1
0x40181ec	        0x4983c418	                           add r12, 0x18	     10088	dwarf.c	FUNCTION_109	WHILE_1	FOR_1
0x40181f0	        0x498b1c24	                    mov rbx, qword [r12]	     10088	dwarf.c	FUNCTION_109	WHILE_1	FOR_1
0x40181f4	          0x4885db	                           test rbx, rbx	     10088	dwarf.c	FUNCTION_109	WHILE_1	FOR_1
0x40181f7	            0x75c7	                           jne 0x40181c0	     10088	dwarf.c	FUNCTION_109	WHILE_1	FOR_1
0x40181f9	      0xba05000000	                              mov edx, 5	     10109	dwarf.c	FUNCTION_109	WHILE_1	IF_3	CALL_4
0x40181fe	            0x31ff	                            xor edi, edi	     10109	dwarf.c	FUNCTION_109	WHILE_1	IF_3	CALL_4
0x4018200	      0xbe00000000	                              mov esi, 0	     10109	dwarf.c	FUNCTION_109	WHILE_1	IF_3	CALL_4
0x4018205	      0xe800000000	                          call 0x401820a	     10109	dwarf.c	FUNCTION_109	WHILE_1	IF_3	CALL_4
0x401820a	          0x4c89ee	                            mov rsi, r13	     10109	dwarf.c	FUNCTION_109	WHILE_1	IF_3	CALL_4
0x401820d	          0x4889c7	                            mov rdi, rax	     10109	dwarf.c	FUNCTION_109	WHILE_1	IF_3	CALL_4
0x4018210	            0x31c0	                            xor eax, eax	     10109	dwarf.c	FUNCTION_109	WHILE_1	IF_3	CALL_4
0x4018212	      0xe800000000	                          call 0x4018217	     10109	dwarf.c	FUNCTION_109	WHILE_1	IF_3	CALL_4
0x4018217	          0x4c89ef	                            mov rdi, r13	     10110	dwarf.c	FUNCTION_109	WHILE_1	IF_3	CALL_5
0x401821a	      0xbe2c000000	                           mov esi, 0x2c	     10110	dwarf.c	FUNCTION_109	WHILE_1	IF_3	CALL_5
0x401821f	      0xe800000000	                          call 0x4018224	     10110	dwarf.c	FUNCTION_109	WHILE_1	IF_3	CALL_5
0x4018224	          0x4885c0	                           test rax, rax	     10111	dwarf.c	FUNCTION_109	WHILE_1	IF_3	IF_4
0x4018227	          0x4989c5	                            mov r13, rax	     10110	dwarf.c	FUNCTION_109	WHILE_1	IF_3	CALL_5
0x401822a	            0x741e	                            je 0x401824a	     10111	dwarf.c	FUNCTION_109	WHILE_1	IF_3	IF_4
0x401822c	      0x410fb64500	                   movzx eax, byte [r13]	     10115	dwarf.c	FUNCTION_109	WHILE_1	IF_5
0x4018231	            0x3c2c	                            cmp al, 0x2c	     10115	dwarf.c	FUNCTION_109	WHILE_1	IF_5
0x4018233	     0xf8567ffffff	                           jne 0x40181a0	     10115	dwarf.c	FUNCTION_109	WHILE_1	IF_5
0x4018239	      0x410fb64501	               movzx eax, byte [r13 + 1]	     10115	dwarf.c	FUNCTION_109	WHILE_1	IF_5
0x401823e	        0x4983c501	                              add r13, 1	     10116	dwarf.c	FUNCTION_109	WHILE_1	IF_5
0x4018242	            0x84c0	                             test al, al	     10084	dwarf.c	FUNCTION_109	WHILE_1
0x4018244	     0xf855effffff	                           jne 0x40181a8	     10084	dwarf.c	FUNCTION_109	WHILE_1
0x401824a	        0x4883c408	                              add rsp, 8	     10118	dwarf.c	FUNCTION_109
0x401824e	              0x5b	                                 pop rbx	     10118	dwarf.c	FUNCTION_109
0x401824f	              0x5d	                                 pop rbp	     10118	dwarf.c	FUNCTION_109
0x4018250	            0x415c	                                 pop r12	     10118	dwarf.c	FUNCTION_109
0x4018252	            0x415d	                                 pop r13	     10118	dwarf.c	FUNCTION_109
0x4018254	              0xc3	                                     ret	     10118	dwarf.c	FUNCTION_109
0x4018255	           0xf1f00	                         nop dword [rax]	     10118	dwarf.c	FUNCTION_109
0x4018258	      0x498b442408	                mov rax, qword [r12 + 8]	     10095	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1
0x401825d	      0x418b542410	            mov edx, dword [r12 + 0x10] 	     10095	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1
0x4018262	             0x910	                     or dword [rax], edx	     10095	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1
0x4018264	    0x8b0500000000	            mov eax, dword [0x0401826a] 	     10099	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1	IF_2
0x401826a	            0x85c0	                           test eax, eax	     10099	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1	IF_2
0x401826c	            0x740a	                            je 0x4018278	     10099	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1	IF_2
0x401826e	    0xc70500000000	               mov dword [0x04018278], 1	     10100	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1	IF_2
0x4018278	          0x4989ed	                            mov r13, rbp	     10093	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1
0x401827b	            0xebaf	                           jmp 0x401822c	     10093	dwarf.c	FUNCTION_109	WHILE_1	FOR_1	IF_1
display_augmentation_data	ELSE,0:FOR,0:CALL,2:WHILE,0:DO,0:functions,0:SWITCH,0:IF,0	20
0x40018b0	              0x55	                                push rbp	      7410	dwarf.c	FUNCTION_82
0x40018b1	              0x53	                                push rbx	      7410	dwarf.c	FUNCTION_82
0x40018b2	          0x4889f5	                            mov rbp, rsi	      7410	dwarf.c	FUNCTION_82
0x40018b5	          0x4889fb	                            mov rbx, rdi	      7410	dwarf.c	FUNCTION_82
0x40018b8	      0xba05000000	                              mov edx, 5	      7413	dwarf.c	FUNCTION_82	CALL_1
0x40018bd	      0xbe00000000	                              mov esi, 0	      7413	dwarf.c	FUNCTION_82	CALL_1
0x40018c2	        0x4883ec08	                              sub rsp, 8	      7410	dwarf.c	FUNCTION_82
0x40018c6	            0x31ff	                            xor edi, edi	      7413	dwarf.c	FUNCTION_82	CALL_1
0x40018c8	      0xe800000000	                          call 0x40018cd	      7413	dwarf.c	FUNCTION_82	CALL_1
0x40018cd	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40018d2	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40018d5	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40018d7	      0xe800000000	                          call 0x40018dc	       104	stdio2.h	CALL_16
0x40018dc	        0x4883c408	                              add rsp, 8	      7415	dwarf.c	FUNCTION_82
0x40018e0	          0x4889ea	                            mov rdx, rbp	      7414	dwarf.c	FUNCTION_82	CALL_2
0x40018e3	          0x4889de	                            mov rsi, rbx	      7414	dwarf.c	FUNCTION_82	CALL_2
0x40018e6	              0x5b	                                 pop rbx	      7415	dwarf.c	FUNCTION_82
0x40018e7	              0x5d	                                 pop rbp	      7415	dwarf.c	FUNCTION_82
0x40018e8	          0x4863f8	                         movsxd rdi, eax	      7414	dwarf.c	FUNCTION_82	CALL_2
0x40018eb	      0xe9e0feffff	                    jmp sym.display_data	      7414	dwarf.c	FUNCTION_82	CALL_2
read_and_display_attr_value	ELSE,15:FOR,1:CALL,136:WHILE,0:DO,0:functions,0:SWITCH,20:IF,64	2796
0x40075b0	            0x4157	                                push r15	      1769	dwarf.c	FUNCTION_30
0x40075b2	            0x4156	                                push r14	      1769	dwarf.c	FUNCTION_30
0x40075b4	            0x4155	                                push r13	      1769	dwarf.c	FUNCTION_30
0x40075b6	            0x4154	                                push r12	      1769	dwarf.c	FUNCTION_30
0x40075b8	          0x4989cc	                            mov r12, rcx	      1769	dwarf.c	FUNCTION_30
0x40075bb	              0x55	                                push rbp	      1769	dwarf.c	FUNCTION_30
0x40075bc	              0x53	                                push rbx	      1769	dwarf.c	FUNCTION_30
0x40075bd	    0x4881ecc80000	                           sub rsp, 0xc8	      1769	dwarf.c	FUNCTION_30
0x40075c4	    0x488b84242801	           mov rax, qword [rsp + 0x128] 	      1769	dwarf.c	FUNCTION_30
0x40075cc	      0x4c894c2408	                 mov qword [rsp + 8], r9	      1769	dwarf.c	FUNCTION_30
0x40075d1	    0x4c8bbc241801	           mov r15, qword [rsp + 0x118] 	      1769	dwarf.c	FUNCTION_30
0x40075d9	    0x448b8c243801	           mov r9d, dword [rsp + 0x138] 	      1769	dwarf.c	FUNCTION_30
0x40075e1	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1770	dwarf.c	FUNCTION_30
0x40075ea	        0x48890424	                    mov qword [rsp], rax	      1769	dwarf.c	FUNCTION_30
0x40075ee	    0x488b84243001	           mov rax, qword [rsp + 0x130] 	      1769	dwarf.c	FUNCTION_30
0x40075f6	      0x4889442410	             mov qword [rsp + 0x10], rax	      1769	dwarf.c	FUNCTION_30
0x40075fb	    0x64488b042528	                mov rax, qword fs:[0x28]	      1769	dwarf.c	FUNCTION_30
0x4007604	    0x48898424b800	             mov qword [rsp + 0xb8], rax	      1769	dwarf.c	FUNCTION_30
0x400760c	            0x31c0	                            xor eax, eax	      1769	dwarf.c	FUNCTION_30
0x400760e	          0x4c39c1	                             cmp rcx, r8	      1775	dwarf.c	FUNCTION_30	IF_1
0x4007611	            0x7714	                            ja 0x4007627	      1775	dwarf.c	FUNCTION_30	IF_1
0x4007613	          0x4989fe	                            mov r14, rdi	      1775	dwarf.c	FUNCTION_30	IF_1
0x4007616	          0x4889f3	                            mov rbx, rsi	      1775	dwarf.c	FUNCTION_30	IF_1
0x4007619	          0x4989d3	                            mov r11, rdx	      1775	dwarf.c	FUNCTION_30	IF_1
0x400761c	          0x4d89c5	                             mov r13, r8	      1775	dwarf.c	FUNCTION_30	IF_1
0x400761f	            0x7557	                           jne 0x4007678	      1775	dwarf.c	FUNCTION_30	IF_1
0x4007621	        0x4883fe19	                           cmp rsi, 0x19	      1775	dwarf.c	FUNCTION_30	IF_1
0x4007625	            0x7451	                            je 0x4007678	      1775	dwarf.c	FUNCTION_30	IF_1
0x4007627	      0xba05000000	                              mov edx, 5	      1777	dwarf.c	FUNCTION_30	IF_1	CALL_2
0x400762c	      0xbe00000000	                              mov esi, 0	      1777	dwarf.c	FUNCTION_30	IF_1	CALL_2
0x4007631	            0x31ff	                            xor edi, edi	      1777	dwarf.c	FUNCTION_30	IF_1	CALL_2
0x4007633	      0xe800000000	                          call 0x4007638	      1777	dwarf.c	FUNCTION_30	IF_1	CALL_2
0x4007638	          0x4c89e5	                            mov rbp, r12	      1778	dwarf.c	FUNCTION_30	IF_1
0x400763b	          0x4889c7	                            mov rdi, rax	      1777	dwarf.c	FUNCTION_30	IF_1	CALL_2
0x400763e	            0x31c0	                            xor eax, eax	      1777	dwarf.c	FUNCTION_30	IF_1	CALL_2
0x4007640	      0xe800000000	                          call 0x4007645	      1777	dwarf.c	FUNCTION_30	IF_1	CALL_2
0x4007645	    0x488b8c24b800	            mov rcx, qword [rsp + 0xb8] 	      2677	dwarf.c	FUNCTION_30
0x400764d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2677	dwarf.c	FUNCTION_30
0x4007656	          0x4889e8	                            mov rax, rbp	      2677	dwarf.c	FUNCTION_30
0x4007659	     0xf85772e0000	                           jne 0x400a4d6	      2677	dwarf.c	FUNCTION_30
0x400765f	    0x4881c4c80000	                           add rsp, 0xc8	      2677	dwarf.c	FUNCTION_30
0x4007666	              0x5b	                                 pop rbx	      2677	dwarf.c	FUNCTION_30
0x4007667	              0x5d	                                 pop rbp	      2677	dwarf.c	FUNCTION_30
0x4007668	            0x415c	                                 pop r12	      2677	dwarf.c	FUNCTION_30
0x400766a	            0x415d	                                 pop r13	      2677	dwarf.c	FUNCTION_30
0x400766c	            0x415e	                                 pop r14	      2677	dwarf.c	FUNCTION_30
0x400766e	            0x415f	                                 pop r15	      2677	dwarf.c	FUNCTION_30
0x4007670	              0xc3	                                     ret	      2677	dwarf.c	FUNCTION_30
0x4007671	     0xf1f80000000	                         nop dword [rax]	      2677	dwarf.c	FUNCTION_30
0x4007678	        0x4883fb12	                           cmp rbx, 0x12	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x400767c	     0xf843e080000	                            je 0x4007ec0	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4007682	     0xf87c8000000	                            ja 0x4007750	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4007688	        0x4883fb0c	                            cmp rbx, 0xc	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x400768c	     0xf8686010000	                           jbe 0x4007818	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4007692	        0x4883fb0f	                            cmp rbx, 0xf	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4007696	     0xf84ec0a0000	                            je 0x4008188	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x400769c	     0xf863e030000	                           jbe 0x40079e0	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x40076a2	        0x4883fb10	                           cmp rbx, 0x10	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x40076a6	     0xf85ac040000	                           jne 0x4007b58	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x40076ac	    0x83bc24100100	              cmp dword [rsp + 0x110], 2	      1787	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x40076b4	     0xf840e1f0000	                            je 0x40095c8	      1787	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x40076ba	    0x8b8424100100	           mov eax, dword [rsp + 0x110] 	      1789	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x40076c1	          0x83e803	                              sub eax, 3	      1789	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x40076c4	          0x83f801	                              cmp eax, 1	      1789	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x40076c7	     0xf86db1b0000	                           jbe 0x40092a8	      1789	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x40076cd	      0xba05000000	                              mov edx, 5	      1792	dwarf.c	FUNCTION_30	SWITCH_1	CALL_4
0x40076d2	      0xbe00000000	                              mov esi, 0	      1792	dwarf.c	FUNCTION_30	SWITCH_1	CALL_4
0x40076d7	            0x31ff	                            xor edi, edi	      1792	dwarf.c	FUNCTION_30	SWITCH_1	CALL_4
0x40076d9	      0x44894c2418	             mov dword [rsp + 0x18], r9d	      1792	dwarf.c	FUNCTION_30	SWITCH_1	CALL_4
0x40076de	          0x4c89e5	                            mov rbp, r12	      1792	dwarf.c	FUNCTION_30	SWITCH_1	CALL_4
0x40076e1	      0xe800000000	                          call 0x40076e6	      1792	dwarf.c	FUNCTION_30	SWITCH_1	CALL_4
0x40076e6	          0x4889c7	                            mov rdi, rax	      1792	dwarf.c	FUNCTION_30	SWITCH_1	CALL_4
0x40076e9	            0x31c0	                            xor eax, eax	      1792	dwarf.c	FUNCTION_30	SWITCH_1	CALL_4
0x40076eb	      0xe800000000	                          call 0x40076f0	      1792	dwarf.c	FUNCTION_30	SWITCH_1	CALL_4
0x40076f0	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      1792	dwarf.c	FUNCTION_30	SWITCH_1	CALL_4
0x40076f5	    0x8b8424200100	           mov eax, dword [rsp + 0x120] 	      1868	dwarf.c	FUNCTION_30	SWITCH_2	IF_6
0x40076fc	          0x4531d2	                          xor r10d, r10d	      1771	dwarf.c	FUNCTION_30
0x40076ff	            0x85c0	                           test eax, eax	      1868	dwarf.c	FUNCTION_30	SWITCH_2	IF_6
0x4007701	     0xf8541020000	                           jne 0x4007948	      1868	dwarf.c	FUNCTION_30	SWITCH_2	IF_6
0x4007707	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x400770c	      0x44894c2420	             mov dword [rsp + 0x20], r9d	       246	dwarf.c	FUNCTION_4	CALL_1
0x4007711	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x4007713	      0x4c89542418	             mov qword [rsp + 0x18], r10	       246	dwarf.c	FUNCTION_4	CALL_1
0x4007718	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400771d	      0xe8de8bffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x4007722	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	       104	stdio2.h	CALL_16
0x4007727	          0x4889c1	                            mov rcx, rax	       104	stdio2.h	CALL_16
0x400772a	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400772f	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4007734	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4007736	        0x410fbed1	                          movsx edx, r9b	       104	stdio2.h	CALL_16
0x400773a	      0xe800000000	                          call 0x400773f	       104	stdio2.h	CALL_16
0x400773f	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x4007744	      0xe937030000	                           jmp 0x4007a80	       104	stdio2.h	CALL_16
0x4007749	     0xf1f80000000	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x4007750	        0x4883fb19	                           cmp rbx, 0x19	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4007754	     0xf84c6020000	                            je 0x4007a20	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x400775a	     0xf8780010000	                            ja 0x40078e0	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4007760	        0x4883fb15	                           cmp rbx, 0x15	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4007764	     0xf841e0a0000	                            je 0x4008188	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x400776a	     0xf86500a0000	                           jbe 0x40081c0	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4007770	        0x4883fb16	                           cmp rbx, 0x16	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4007774	     0xf85b6040000	                           jne 0x4007c30	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x400777a	      0x488d742444	                   lea rsi, [rsp + 0x44]	       356	dwarf.c	FUNCTION_10	CALL_1
0x400777f	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4007781	          0x4c89e7	                            mov rdi, r12	       356	dwarf.c	FUNCTION_10	CALL_1
0x4007784	          0x4c89e9	                            mov rcx, r13	       356	dwarf.c	FUNCTION_10	CALL_1
0x4007787	      0x44894c2420	             mov dword [rsp + 0x20], r9d	       356	dwarf.c	FUNCTION_10	CALL_1
0x400778c	      0x4c895c2418	             mov qword [rsp + 0x18], r11	       356	dwarf.c	FUNCTION_10	CALL_1
0x4007791	      0xe800000000	                          call 0x4007796	       356	dwarf.c	FUNCTION_10	CALL_1
0x4007796	          0x4889c3	                            mov rbx, rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x4007799	        0x8b442444	            mov eax, dword [rsp + 0x44] 	      1846	dwarf.c	FUNCTION_30	SWITCH_1
0x400779d	      0x4c8b5c2418	            mov r11, qword [rsp + 0x18] 	      1847	dwarf.c	FUNCTION_30	SWITCH_1	IF_4
0x40077a2	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	      1847	dwarf.c	FUNCTION_30	SWITCH_1	IF_4
0x40077a7	          0x4901c4	                            add r12, rax	      1846	dwarf.c	FUNCTION_30	SWITCH_1
0x40077aa	    0x8b8424200100	           mov eax, dword [rsp + 0x120] 	      1847	dwarf.c	FUNCTION_30	SWITCH_1	IF_4
0x40077b1	            0x85c0	                           test eax, eax	      1847	dwarf.c	FUNCTION_30	SWITCH_1	IF_4
0x40077b3	     0xf84d71c0000	                            je 0x4009490	      1847	dwarf.c	FUNCTION_30	SWITCH_1	IF_4
0x40077b9	        0x410fbee9	                          movsx ebp, r9b	      1847	dwarf.c	FUNCTION_30	SWITCH_1	IF_4
0x40077bd	        0x4883fb21	                           cmp rbx, 0x21	      1849	dwarf.c	FUNCTION_30	SWITCH_1	IF_5
0x40077c1	     0xf84501e0000	                            je 0x4009617	      1849	dwarf.c	FUNCTION_30	SWITCH_1	IF_5
0x40077c7	              0x55	                                push rbp	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x40077c8	        0xff742418	                 push qword [rsp + 0x18]	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x40077cc	          0x4d89e8	                             mov r8, r13	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x40077cf	        0xff742410	                 push qword [rsp + 0x10]	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x40077d3	    0x8b8424380100	           mov eax, dword [rsp + 0x138] 	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x40077da	          0x4c89e1	                            mov rcx, r12	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x40077dd	          0x4c89da	                            mov rdx, r11	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x40077e0	          0x4889de	                            mov rsi, rbx	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x40077e3	          0x4c89f7	                            mov rdi, r14	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x40077e6	              0x50	                                push rax	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x40077e7	            0x4157	                                push r15	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x40077e9	    0x8b8424380100	           mov eax, dword [rsp + 0x138] 	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x40077f0	              0x50	                                push rax	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x40077f1	    0xffb424380100	                push qword [rsp + 0x138]	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x40077f8	    0xffb424380100	                push qword [rsp + 0x138]	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x40077ff	      0x4c8b4c2448	              mov r9, qword [rsp + 0x48]	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x4007804	      0xe8a7fdffff	    call sym.read_and_display_attr_value	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x4007809	        0x4883c440	                           add rsp, 0x40	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x400780d	          0x4889c5	                            mov rbp, rax	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x4007810	      0xe930feffff	                           jmp 0x4007645	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x4007815	           0xf1f00	                         nop dword [rax]	      1854	dwarf.c	FUNCTION_30	SWITCH_1	CALL_11
0x4007818	        0x4883fb0b	                            cmp rbx, 0xb	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x400781c	     0xf8340030000	                           jae 0x4007b62	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4007822	        0x4883fb05	                              cmp rbx, 5	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4007826	     0xf8494060000	                            je 0x4007ec0	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x400782c	        0x4883fb06	                              cmp rbx, 6	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4007830	     0xf8494090000	                            je 0x40081ca	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4007836	        0x4883fb01	                              cmp rbx, 1	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x400783a	     0xf85e0030000	                           jne 0x4007c20	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4007840	    0x8bb424000100	           mov esi, dword [rsp + 0x100] 	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x4007847	          0x83fe08	                              cmp esi, 8	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400784a	     0xf87d01b0000	                            ja 0x4009420	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x4007850	    0x8b8424000100	           mov eax, dword [rsp + 0x100] 	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x4007857	          0x4c01e0	                            add rax, r12	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400785a	          0x4939c5	                            cmp r13, rax	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400785d	            0x770b	                            ja 0x400786a	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400785f	          0x4d39ec	                            cmp r12, r13	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x4007862	            0x7312	                           jae 0x4007876	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x4007864	          0x4489ee	                           mov esi, r13d	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x4007867	          0x4429e6	                           sub esi, r12d	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400786a	          0x8d46ff	                      lea eax, [rsi - 1]	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400786d	          0x83f807	                              cmp eax, 7	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x4007870	     0xf86f61b0000	                           jbe 0x400946c	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x4007876	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400787f	          0x4c89e5	                            mov rbp, r12	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x4007882	    0x4803ac240001	            add rbp, qword [rsp + 0x100]	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400788a	    0x448b9c242001	          mov r11d, dword [rsp + 0x120] 	      1889	dwarf.c	FUNCTION_30	SWITCH_2	IF_9
0x4007892	          0x4531d2	                          xor r10d, r10d	      1771	dwarf.c	FUNCTION_30
0x4007895	          0x4585db	                         test r11d, r11d	      1889	dwarf.c	FUNCTION_30	SWITCH_2	IF_9
0x4007898	     0xf85aa000000	                           jne 0x4007948	      1889	dwarf.c	FUNCTION_30	SWITCH_2	IF_9
0x400789e	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x40078a3	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x40078a5	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x40078aa	      0x4c89542418	             mov qword [rsp + 0x18], r10	       246	dwarf.c	FUNCTION_4	CALL_1
0x40078af	      0x44894c2420	             mov dword [rsp + 0x20], r9d	       246	dwarf.c	FUNCTION_4	CALL_1
0x40078b4	      0xe8478affff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x40078b9	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	       104	stdio2.h	CALL_16
0x40078be	          0x4889c1	                            mov rcx, rax	       104	stdio2.h	CALL_16
0x40078c1	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x40078c6	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40078cb	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40078cd	        0x410fbed1	                          movsx edx, r9b	       104	stdio2.h	CALL_16
0x40078d1	      0xe800000000	                          call 0x40078d6	       104	stdio2.h	CALL_16
0x40078d6	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x40078db	      0xe9a0010000	                           jmp 0x4007a80	       104	stdio2.h	CALL_16
0x40078e0	    0x4881fb021f00	                         cmp rbx, 0x1f02	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x40078e7	     0xf84b3070000	                            je 0x40080a0	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x40078ed	     0xf8735190000	                            ja 0x4009228	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x40078f3	        0x4883fb1f	                           cmp rbx, 0x1f	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x40078f7	     0xf8439030000	                            je 0x4007c36	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x40078fd	    0x4881fb011f00	                         cmp rbx, 0x1f01	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4007904	     0xf8516030000	                           jne 0x4007c20	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x400790a	      0x488d742444	                   lea rsi, [rsp + 0x44]	       356	dwarf.c	FUNCTION_10	CALL_1
0x400790f	          0x4c89e9	                            mov rcx, r13	       356	dwarf.c	FUNCTION_10	CALL_1
0x4007912	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4007914	          0x4c89e7	                            mov rdi, r12	       356	dwarf.c	FUNCTION_10	CALL_1
0x4007917	      0x44894c2418	             mov dword [rsp + 0x18], r9d	       356	dwarf.c	FUNCTION_10	CALL_1
0x400791c	      0xe800000000	                          call 0x4007921	       356	dwarf.c	FUNCTION_10	CALL_1
0x4007921	        0x8b6c2444	            mov ebp, dword [rsp + 0x44] 	      1861	dwarf.c	FUNCTION_30	SWITCH_1
0x4007925	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      1861	dwarf.c	FUNCTION_30	SWITCH_1
0x400792a	      0x4889442448	             mov qword [rsp + 0x48], rax	      1860	dwarf.c	FUNCTION_30	SWITCH_1	CALL_12
0x400792f	          0x4c01e5	                            add rbp, r12	      1861	dwarf.c	FUNCTION_30	SWITCH_1
0x4007932	    0x8b8424200100	           mov eax, dword [rsp + 0x120] 	      2113	dwarf.c	FUNCTION_30	SWITCH_2	IF_36
0x4007939	          0x4531d2	                          xor r10d, r10d	      1771	dwarf.c	FUNCTION_30
0x400793c	            0x85c0	                           test eax, eax	      2113	dwarf.c	FUNCTION_30	SWITCH_2	IF_36
0x400793e	     0xf847e1d0000	                            je 0x40096c2	      2113	dwarf.c	FUNCTION_30	SWITCH_2	IF_36
0x4007944	         0xf1f4000	                         nop dword [rax]	      2113	dwarf.c	FUNCTION_30	SWITCH_2	IF_36
0x4007948	    0x8b0500000000	            mov eax, dword [0x0400794e] 	      2126	dwarf.c	FUNCTION_30	IF_37
0x400794e	            0x85c0	                           test eax, eax	      2126	dwarf.c	FUNCTION_30	IF_37
0x4007950	     0xf8546010000	                           jne 0x4007a9c	      2126	dwarf.c	FUNCTION_30	IF_37
0x4007956	          0x4d85ff	                           test r15, r15	      2126	dwarf.c	FUNCTION_30	IF_37
0x4007959	     0xf843d010000	                            je 0x4007a9c	      2126	dwarf.c	FUNCTION_30	IF_37
0x400795f	        0x4983fe55	                           cmp r14, 0x55	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4007963	     0xf84d70f0000	                            je 0x4008940	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4007969	     0xf86f9030000	                           jbe 0x4007d68	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400796f	    0x4981fe142100	                         cmp r14, 0x2114	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4007976	     0xf86e40e0000	                           jbe 0x4008860	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400797c	    0x4981fe322100	                         cmp r14, 0x2132	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4007983	     0xf849f0f0000	                            je 0x4008928	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4007989	     0xf87a10e0000	                            ja 0x4008830	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400798f	    0x4981fe302100	                         cmp r14, 0x2130	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4007996	     0xf84f50e0000	                            je 0x4008891	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400799c	    0x4981fe312100	                         cmp r14, 0x2131	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x40079a3	     0xf85f3000000	                           jne 0x4007a9c	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x40079a9	    0x448b15000000	           mov r10d, dword [0x040079b0] 	      2286	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49
0x40079b0	          0x4585d2	                         test r10d, r10d	      2286	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49
0x40079b3	     0xf848cfcffff	                            je 0x4007645	      2286	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49
0x40079b9	        0x4883fb07	                              cmp rbx, 7	      2287	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6
0x40079bd	     0xf8542250000	                           jne 0x4009f05	      2287	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6
0x40079c3	        0x488d45f8	                      lea rax, [rbp - 8]	      2290	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6
0x40079c7	    0x48c705000000	               mov qword [0x040079d2], 8	      2291	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6
0x40079d2	    0x488905000000	            mov qword [0x040079d9], rax 	      2290	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6
0x40079d9	      0xe967fcffff	                           jmp 0x4007645	      2292	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6
0x40079de	            0x6690	                                     nop	      2292	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6
0x40079e0	        0x4883fb0d	                            cmp rbx, 0xd	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x40079e4	     0xf8526020000	                           jne 0x4007c10	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x40079ea	      0x488d742444	                   lea rsi, [rsp + 0x44]	       348	dwarf.c	FUNCTION_9	CALL_1
0x40079ef	          0x4c89e9	                            mov rcx, r13	       348	dwarf.c	FUNCTION_9	CALL_1
0x40079f2	      0xba01000000	                              mov edx, 1	       348	dwarf.c	FUNCTION_9	CALL_1
0x40079f7	          0x4c89e7	                            mov rdi, r12	       348	dwarf.c	FUNCTION_9	CALL_1
0x40079fa	      0x44894c2418	             mov dword [rsp + 0x18], r9d	       348	dwarf.c	FUNCTION_9	CALL_1
0x40079ff	      0xe800000000	                          call 0x4007a04	       348	dwarf.c	FUNCTION_9	CALL_1
0x4007a04	        0x8b6c2444	            mov ebp, dword [rsp + 0x44] 	      1830	dwarf.c	FUNCTION_30	SWITCH_1
0x4007a08	      0x4889442448	             mov qword [rsp + 0x48], rax	      1829	dwarf.c	FUNCTION_30	SWITCH_1	CALL_5
0x4007a0d	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      1831	dwarf.c	FUNCTION_30	SWITCH_1
0x4007a12	          0x4c01e5	                            add rbp, r12	      1830	dwarf.c	FUNCTION_30	SWITCH_1
0x4007a15	            0xeb15	                           jmp 0x4007a2c	      1831	dwarf.c	FUNCTION_30	SWITCH_1
0x4007a17	    0x660f1f840000	                    nop word [rax + rax]	      1831	dwarf.c	FUNCTION_30	SWITCH_1
0x4007a20	    0x48c744244801	               mov qword [rsp + 0x48], 1	      1809	dwarf.c	FUNCTION_30	SWITCH_1
0x4007a29	          0x4c89e5	                            mov rbp, r12	      1810	dwarf.c	FUNCTION_30	SWITCH_1
0x4007a2c	    0x448b84242001	           mov r8d, dword [rsp + 0x120] 	      1899	dwarf.c	FUNCTION_30	SWITCH_2	IF_10
0x4007a34	          0x4531d2	                          xor r10d, r10d	      1771	dwarf.c	FUNCTION_30
0x4007a37	          0x4585c0	                           test r8d, r8d	      1899	dwarf.c	FUNCTION_30	SWITCH_2	IF_10
0x4007a3a	     0xf8508ffffff	                           jne 0x4007948	      1899	dwarf.c	FUNCTION_30	SWITCH_2	IF_10
0x4007a40	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x4007a45	      0x44894c2420	             mov dword [rsp + 0x20], r9d	       246	dwarf.c	FUNCTION_4	CALL_1
0x4007a4a	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x4007a4c	      0x4c89542418	             mov qword [rsp + 0x18], r10	       246	dwarf.c	FUNCTION_4	CALL_1
0x4007a51	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x4007a56	      0xe8a588ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x4007a5b	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	       104	stdio2.h	CALL_16
0x4007a60	          0x4889c1	                            mov rcx, rax	       104	stdio2.h	CALL_16
0x4007a63	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4007a68	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4007a6d	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4007a6f	        0x410fbed1	                          movsx edx, r9b	       104	stdio2.h	CALL_16
0x4007a73	      0xe800000000	                          call 0x4007a78	       104	stdio2.h	CALL_16
0x4007a78	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x4007a7d	           0xf1f00	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x4007a80	    0x8b0500000000	            mov eax, dword [0x04007a86] 	      2124	dwarf.c	FUNCTION_30	IF_37
0x4007a86	            0x85c0	                           test eax, eax	      2124	dwarf.c	FUNCTION_30	IF_37
0x4007a88	     0xf85bafeffff	                           jne 0x4007948	      2124	dwarf.c	FUNCTION_30	IF_37
0x4007a8e	    0x8b0500000000	            mov eax, dword [0x04007a94] 	      2124	dwarf.c	FUNCTION_30	IF_37
0x4007a94	            0x85c0	                           test eax, eax	      2124	dwarf.c	FUNCTION_30	IF_37
0x4007a96	     0xf85acfeffff	                           jne 0x4007948	      2124	dwarf.c	FUNCTION_30	IF_37
0x4007a9c	    0x448b8c242001	           mov r9d, dword [rsp + 0x120] 	      2306	dwarf.c	FUNCTION_30	IF_50
0x4007aa4	          0x4585c9	                           test r9d, r9d	      2306	dwarf.c	FUNCTION_30	IF_50
0x4007aa7	     0xf8598fbffff	                           jne 0x4007645	      2306	dwarf.c	FUNCTION_30	IF_50
0x4007aad	          0x4d85f6	                           test r14, r14	      2306	dwarf.c	FUNCTION_30	IF_50
0x4007ab0	     0xf848ffbffff	                            je 0x4007645	      2306	dwarf.c	FUNCTION_30	IF_50
0x4007ab6	        0x4983fe42	                           cmp r14, 0x42	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4007aba	     0xf84d0150000	                            je 0x4009090	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4007ac0	     0xf8732040000	                            ja 0x4007ef8	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4007ac6	        0x4983fe22	                           cmp r14, 0x22	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4007aca	     0xf8450030000	                            je 0x4007e20	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4007ad0	     0xf87ea020000	                            ja 0x4007dc0	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4007ad6	        0x4983fe13	                           cmp r14, 0x13	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4007ada	     0xf84c8160000	                            je 0x40091a8	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4007ae0	     0xf860a100000	                           jbe 0x4008af0	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4007ae6	        0x4983fe18	                           cmp r14, 0x18	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4007aea	     0xf84f0150000	                            je 0x40090e0	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4007af0	     0xf870a180000	                            ja 0x4009300	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4007af6	        0x4983fe17	                           cmp r14, 0x17	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4007afa	     0xf8545fbffff	                           jne 0x4007645	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4007b00	      0xbf09000000	                              mov edi, 9	       104	stdio2.h	CALL_16
0x4007b05	      0xe800000000	                          call 0x4007b0a	       104	stdio2.h	CALL_16
0x4007b0a	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2456	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_12
0x4007b0f	        0x4883f802	                              cmp rax, 2	      2456	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_12
0x4007b13	     0xf84851e0000	                            je 0x400999e	      2456	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_12
0x4007b19	        0x4883f803	                              cmp rax, 3	      2456	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_12
0x4007b1d	     0xf84651e0000	                            je 0x4009988	      2456	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_12
0x4007b23	        0x4883f801	                              cmp rax, 1	      2456	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_12
0x4007b27	     0xf84871e0000	                            je 0x40099b4	      2456	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_12
0x4007b2d	            0x31ff	                            xor edi, edi	      2461	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_12	CALL_106
0x4007b2f	      0xba05000000	                              mov edx, 5	      2461	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_12	CALL_106
0x4007b34	      0xbe00000000	                              mov esi, 0	      2461	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_12	CALL_106
0x4007b39	      0xe800000000	                          call 0x4007b3e	      2461	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_12	CALL_106
0x4007b3e	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4007b43	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4007b46	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4007b48	      0xe800000000	                          call 0x4007b4d	       104	stdio2.h	CALL_16
0x4007b4d	      0xe9f3faffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4007b52	    0x660f1f440000	                    nop word [rax + rax]	       104	stdio2.h	CALL_16
0x4007b58	        0x4883fb11	                           cmp rbx, 0x11	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4007b5c	     0xf85be000000	                           jne 0x4007c20	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4007b62	      0x498d6c2401	                      lea rbp, [r12 + 1]	      1815	dwarf.c	FUNCTION_30	SWITCH_1
0x4007b67	      0xbe01000000	                              mov esi, 1	      1815	dwarf.c	FUNCTION_30	SWITCH_1
0x4007b6c	          0x4939ed	                            cmp r13, rbp	      1815	dwarf.c	FUNCTION_30	SWITCH_1
0x4007b6f	     0xf865e030000	                           jbe 0x4007ed3	      1815	dwarf.c	FUNCTION_30	SWITCH_1
0x4007b75	      0x44894c2420	             mov dword [rsp + 0x20], r9d	      1815	dwarf.c	FUNCTION_30	SWITCH_1
0x4007b7a	      0x4c895c2418	             mov qword [rsp + 0x18], r11	      1815	dwarf.c	FUNCTION_30	SWITCH_1
0x4007b7f	          0x4c89e7	                            mov rdi, r12	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x4007b82	    0xff1500000000	                 call qword [0x04007b88]	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x4007b88	      0x4c8b5c2418	            mov r11, qword [rsp + 0x18] 	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x4007b8d	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x4007b92	      0x4889442448	             mov qword [rsp + 0x48], rax	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x4007b97	    0x660f1f840000	                    nop word [rax + rax]	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x4007ba0	        0x4883fb13	                           cmp rbx, 0x13	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4007ba4	     0xf86de000000	                           jbe 0x4007c88	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4007baa	        0x4883fb1e	                           cmp rbx, 0x1e	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4007bae	     0xf84b4090000	                            je 0x4008568	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4007bb4	     0xf863e040000	                           jbe 0x4007ff8	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4007bba	    0x4881fb011f00	                         cmp rbx, 0x1f01	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4007bc1	     0xf846bfdffff	                            je 0x4007932	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4007bc7	     0xf8733070000	                            ja 0x4008300	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4007bcd	        0x4883fb20	                           cmp rbx, 0x20	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4007bd1	     0xf84e9080000	                            je 0x40084c0	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4007bd7	     0xf825b0b0000	                            jb 0x4008738	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4007bdd	        0x4883fb21	                           cmp rbx, 0x21	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4007be1	     0xf85290b0000	                           jne 0x4008710	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4007be7	    0x8bbc24200100	           mov edi, dword [rsp + 0x120] 	      1904	dwarf.c	FUNCTION_30	SWITCH_2	IF_11
0x4007bee	          0x4531d2	                          xor r10d, r10d	      1771	dwarf.c	FUNCTION_30
0x4007bf1	            0x85ff	                           test edi, edi	      1904	dwarf.c	FUNCTION_30	SWITCH_2	IF_11
0x4007bf3	     0xf854ffdffff	                           jne 0x4007948	      1904	dwarf.c	FUNCTION_30	SWITCH_2	IF_11
0x4007bf9	      0x44894c2420	             mov dword [rsp + 0x20], r9d	      1904	dwarf.c	FUNCTION_30	SWITCH_2	IF_11
0x4007bfe	      0x4c89542418	             mov qword [rsp + 0x18], r10	      1904	dwarf.c	FUNCTION_30	SWITCH_2	IF_11
0x4007c03	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x4007c05	          0x4c89de	                            mov rsi, r11	       246	dwarf.c	FUNCTION_4	CALL_1
0x4007c08	      0xe944feffff	                           jmp 0x4007a51	       246	dwarf.c	FUNCTION_4	CALL_1
0x4007c0d	           0xf1f00	                         nop dword [rax]	       246	dwarf.c	FUNCTION_4	CALL_1
0x4007c10	        0x4883fb0e	                            cmp rbx, 0xe	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4007c14	            0x7420	                            je 0x4007c36	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4007c16	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4007c20	          0x4c89e5	                            mov rbp, r12	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4007c23	      0xe978ffffff	                           jmp 0x4007ba0	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4007c28	     0xf1f84000000	                   nop dword [rax + rax]	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4007c30	        0x4883fb17	                           cmp rbx, 0x17	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4007c34	            0x75ea	                           jne 0x4007c20	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4007c36	    0x8bb424080100	           mov esi, dword [rsp + 0x108] 	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x4007c3d	          0x83fe08	                              cmp esi, 8	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x4007c40	     0xf875a170000	                            ja 0x40093a0	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x4007c46	    0x8b8424080100	           mov eax, dword [rsp + 0x108] 	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x4007c4d	          0x4c01e0	                            add rax, r12	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x4007c50	          0x4939c5	                            cmp r13, rax	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x4007c53	            0x770b	                            ja 0x4007c60	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x4007c55	          0x4d39ec	                            cmp r12, r13	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x4007c58	            0x7312	                           jae 0x4007c6c	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x4007c5a	          0x4489ee	                           mov esi, r13d	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x4007c5d	          0x4429e6	                           sub esi, r12d	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x4007c60	          0x8d46ff	                      lea eax, [rsi - 1]	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x4007c63	          0x83f807	                              cmp eax, 7	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x4007c66	     0xf868a170000	                           jbe 0x40093f6	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x4007c6c	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x4007c75	          0x4c89e5	                            mov rbp, r12	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x4007c78	    0x4803ac240801	            add rbp, qword [rsp + 0x108]	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x4007c80	      0xe91bffffff	                           jmp 0x4007ba0	      1806	dwarf.c	FUNCTION_30	SWITCH_1
0x4007c85	           0xf1f00	                         nop dword [rax]	      1806	dwarf.c	FUNCTION_30	SWITCH_1
0x4007c88	        0x4883fb11	                           cmp rbx, 0x11	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4007c8c	     0xf838a030000	                           jae 0x400801c	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4007c92	        0x4883fb08	                              cmp rbx, 8	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4007c96	     0xf84f4070000	                            je 0x4008490	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4007c9c	     0xf87d6020000	                            ja 0x4007f78	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4007ca2	        0x4883fb04	                              cmp rbx, 4	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4007ca6	     0xf8494080000	                            je 0x4008540	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4007cac	     0xf87ce080000	                            ja 0x4008580	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4007cb2	        0x4883fb01	                              cmp rbx, 1	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4007cb6	     0xf84cefbffff	                            je 0x400788a	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4007cbc	        0x4883fb03	                              cmp rbx, 3	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4007cc0	     0xf854a0a0000	                           jne 0x4008710	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4007cc6	        0x4c8d5502	                      lea r10, [rbp + 2]	      2016	dwarf.c	FUNCTION_30	SWITCH_2
0x4007cca	          0x4d39d5	                            cmp r13, r10	      2016	dwarf.c	FUNCTION_30	SWITCH_2
0x4007ccd	     0xf86cd050000	                           jbe 0x40082a0	      2016	dwarf.c	FUNCTION_30	SWITCH_2
0x4007cd3	      0x44894c2420	             mov dword [rsp + 0x20], r9d	      2016	dwarf.c	FUNCTION_30	SWITCH_2
0x4007cd8	      0x4c89542418	             mov qword [rsp + 0x18], r10	      2016	dwarf.c	FUNCTION_30	SWITCH_2
0x4007cdd	          0x4889ef	                            mov rdi, rbp	      2016	dwarf.c	FUNCTION_30	SWITCH_2
0x4007ce0	      0xbe02000000	                              mov esi, 2	      2016	dwarf.c	FUNCTION_30	SWITCH_2
0x4007ce5	    0xff1500000000	                 call qword [0x04007ceb]	      2016	dwarf.c	FUNCTION_30	SWITCH_2
0x4007ceb	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	      2025	dwarf.c	FUNCTION_30	SWITCH_2	IF_26
0x4007cf0	          0x4889c5	                            mov rbp, rax	      2016	dwarf.c	FUNCTION_30	SWITCH_2
0x4007cf3	      0x4889442448	             mov qword [rsp + 0x48], rax	      2016	dwarf.c	FUNCTION_30	SWITCH_2
0x4007cf8	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	      2025	dwarf.c	FUNCTION_30	SWITCH_2	IF_26
0x4007cfd	          0x4c89d0	                            mov rax, r10	      2025	dwarf.c	FUNCTION_30	SWITCH_2	IF_26
0x4007d00	          0x4801e8	                            add rax, rbp	      2025	dwarf.c	FUNCTION_30	SWITCH_2	IF_26
0x4007d03	            0x720b	                            jb 0x4007d10	      2025	dwarf.c	FUNCTION_30	SWITCH_2	IF_26
0x4007d05	          0x4939c5	                            cmp r13, rax	      2025	dwarf.c	FUNCTION_30	SWITCH_2	IF_26
0x4007d08	            0x7343	                           jae 0x4007d4d	      2025	dwarf.c	FUNCTION_30	SWITCH_2	IF_26
0x4007d0a	    0x660f1f440000	                    nop word [rax + rax]	      2025	dwarf.c	FUNCTION_30	SWITCH_2	IF_26
0x4007d10	      0xba05000000	                              mov edx, 5	      2051	dwarf.c	FUNCTION_30	SWITCH_2	IF_29	CALL_43
0x4007d15	      0xbe00000000	                              mov esi, 0	      2051	dwarf.c	FUNCTION_30	SWITCH_2	IF_29	CALL_43
0x4007d1a	            0x31ff	                            xor edi, edi	      2051	dwarf.c	FUNCTION_30	SWITCH_2	IF_29	CALL_43
0x4007d1c	      0x44894c2420	             mov dword [rsp + 0x20], r9d	      2051	dwarf.c	FUNCTION_30	SWITCH_2	IF_29	CALL_43
0x4007d21	      0x4c89542418	             mov qword [rsp + 0x18], r10	      2051	dwarf.c	FUNCTION_30	SWITCH_2	IF_29	CALL_43
0x4007d26	      0xe800000000	                          call 0x4007d2b	      2051	dwarf.c	FUNCTION_30	SWITCH_2	IF_29	CALL_43
0x4007d2b	          0x4889ee	                            mov rsi, rbp	      2051	dwarf.c	FUNCTION_30	SWITCH_2	IF_29	CALL_43
0x4007d2e	          0x4889c7	                            mov rdi, rax	      2051	dwarf.c	FUNCTION_30	SWITCH_2	IF_29	CALL_43
0x4007d31	            0x31c0	                            xor eax, eax	      2051	dwarf.c	FUNCTION_30	SWITCH_2	IF_29	CALL_43
0x4007d33	      0xe800000000	                          call 0x4007d38	      2051	dwarf.c	FUNCTION_30	SWITCH_2	IF_29	CALL_43
0x4007d38	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	      2052	dwarf.c	FUNCTION_30	SWITCH_2	IF_29
0x4007d3d	          0x4c89ed	                            mov rbp, r13	      2052	dwarf.c	FUNCTION_30	SWITCH_2	IF_29
0x4007d40	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	      2052	dwarf.c	FUNCTION_30	SWITCH_2	IF_29
0x4007d45	          0x4c29d5	                            sub rbp, r10	      2052	dwarf.c	FUNCTION_30	SWITCH_2	IF_29
0x4007d48	      0x48896c2448	             mov qword [rsp + 0x48], rbp	      2052	dwarf.c	FUNCTION_30	SWITCH_2	IF_29
0x4007d4d	    0x8b8424200100	           mov eax, dword [rsp + 0x120] 	      2054	dwarf.c	FUNCTION_30	SWITCH_2	IF_30
0x4007d54	            0x85c0	                           test eax, eax	      2054	dwarf.c	FUNCTION_30	SWITCH_2	IF_30
0x4007d56	     0xf84f40a0000	                            je 0x4008850	      2054	dwarf.c	FUNCTION_30	SWITCH_2	IF_30
0x4007d5c	          0x4c01d5	                            add rbp, r10	      2055	dwarf.c	FUNCTION_30	SWITCH_2	IF_30
0x4007d5f	      0xe9e4fbffff	                           jmp 0x4007948	      2055	dwarf.c	FUNCTION_30	SWITCH_2	IF_30
0x4007d64	         0xf1f4000	                         nop dword [rax]	      2055	dwarf.c	FUNCTION_30	SWITCH_2	IF_30
0x4007d68	        0x4983fe38	                           cmp r14, 0x38	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4007d6c	     0xf849e040000	                            je 0x4008210	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4007d72	     0xf8790060000	                            ja 0x4008408	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4007d78	        0x4983fe19	                           cmp r14, 0x19	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4007d7c	     0xf848e040000	                            je 0x4008210	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4007d82	     0xf87380a0000	                            ja 0x40087c0	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4007d88	        0x4983fe02	                              cmp r14, 2	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4007d8c	     0xf847e040000	                            je 0x4008210	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4007d92	        0x4983fe11	                           cmp r14, 0x11	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4007d96	     0xf8500fdffff	                           jne 0x4007a9c	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4007d9c	    0x8b0500000000	            mov eax, dword [0x04007da2] 	      2204	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_44
0x4007da2	            0x85c0	                           test eax, eax	      2204	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_44
0x4007da4	     0xf849bf8ffff	                            je 0x4007645	      2204	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_44
0x4007daa	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2205	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_44
0x4007daf	        0x49894718	             mov qword [r15 + 0x18], rax	      2205	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_44
0x4007db3	      0xe98df8ffff	                           jmp 0x4007645	      2205	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_44
0x4007db8	     0xf1f84000000	                   nop dword [rax + rax]	      2205	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_44
0x4007dc0	        0x4983fe36	                           cmp r14, 0x36	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4007dc4	     0xf84860d0000	                            je 0x4008b50	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4007dca	     0xf86300c0000	                           jbe 0x4008a00	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4007dd0	        0x4983fe3d	                           cmp r14, 0x3d	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4007dd4	     0xf8466120000	                            je 0x4009040	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4007dda	     0xf86b9240000	                           jbe 0x400a299	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4007de0	        0x4983fe3e	                           cmp r14, 0x3e	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4007de4	     0xf84d60e0000	                            je 0x4008cc0	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4007dea	        0x4983fe40	                           cmp r14, 0x40	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4007dee	     0xf8551f8ffff	                           jne 0x4007645	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4007df4	    0xc70500000000	               mov dword [0x04007dfe], 1	      2570	dwarf.c	FUNCTION_30	SWITCH_7
0x4007dfe	    0x83bc24100100	              cmp dword [rsp + 0x110], 3	      2588	dwarf.c	FUNCTION_30	SWITCH_7	IF_55
0x4007e06	            0x7f0e	                            jg 0x4007e16	      2588	dwarf.c	FUNCTION_30	SWITCH_7	IF_55
0x4007e08	        0x488d43fa	                      lea rax, [rbx - 6]	      2589	dwarf.c	FUNCTION_30	SWITCH_7	IF_55
0x4007e0c	        0x4883f801	                              cmp rax, 1	      2589	dwarf.c	FUNCTION_30	SWITCH_7	IF_55
0x4007e10	     0xf865a150000	                           jbe 0x4009370	      2589	dwarf.c	FUNCTION_30	SWITCH_7	IF_55
0x4007e16	        0x4883fb17	                           cmp rbx, 0x17	      2590	dwarf.c	FUNCTION_30	SWITCH_7	IF_55
0x4007e1a	     0xf8450150000	                            je 0x4009370	      2590	dwarf.c	FUNCTION_30	SWITCH_7	IF_55
0x4007e20	          0x4d85d2	                           test r10, r10	      2599	dwarf.c	FUNCTION_30	SWITCH_7	IF_56
0x4007e23	      0x4c89542410	             mov qword [rsp + 0x10], r10	      2599	dwarf.c	FUNCTION_30	SWITCH_7	IF_56
0x4007e28	     0xf8417f8ffff	                            je 0x4007645	      2599	dwarf.c	FUNCTION_30	SWITCH_7	IF_56
0x4007e2e	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4007e33	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4007e38	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4007e3a	      0xe800000000	                          call 0x4007e3f	       104	stdio2.h	CALL_16
0x4007e3f	        0x4883ec08	                              sub rsp, 8	      2604	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	CALL_128
0x4007e43	        0xff742408	                    push qword [rsp + 8]	      2604	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	CALL_128
0x4007e47	      0x4c8b542420	            mov r10, qword [rsp + 0x20] 	      2604	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	CALL_128
0x4007e4c	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	      2604	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	CALL_128
0x4007e51	      0x4c8b442458	              mov r8, qword [rsp + 0x58]	      2604	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	CALL_128
0x4007e56	    0x8b8c24200100	           mov ecx, dword [rsp + 0x120] 	      2604	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	CALL_128
0x4007e5d	    0x8b9424180100	           mov edx, dword [rsp + 0x118] 	      2604	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	CALL_128
0x4007e64	    0x8bb424100100	           mov esi, dword [rsp + 0x110] 	      2604	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	CALL_128
0x4007e6b	          0x4c89d7	                            mov rdi, r10	      2604	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	CALL_128
0x4007e6e	      0xe84dc7ffff	     call sym.decode_location_expression	      2604	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	CALL_128
0x4007e73	      0xbf29000000	                           mov edi, 0x29	       104	stdio2.h	CALL_16
0x4007e78	            0x89c3	                            mov ebx, eax	      2604	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	CALL_128
0x4007e7a	      0xe800000000	                          call 0x4007e7f	       104	stdio2.h	CALL_16
0x4007e7f	            0x85db	                           test ebx, ebx	      2611	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	IF_57
0x4007e81	              0x5f	                                 pop rdi	      2611	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	IF_57
0x4007e82	            0x4158	                                  pop r8	      2611	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	IF_57
0x4007e84	     0xf84bbf7ffff	                            je 0x4007645	      2611	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	IF_57
0x4007e8a	    0x8b3500000000	            mov esi, dword [0x04007e90] 	      2611	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	IF_57
0x4007e90	            0x85f6	                           test esi, esi	      2611	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	IF_57
0x4007e92	     0xf85adf7ffff	                           jne 0x4007645	      2611	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	IF_57
0x4007e98	            0x31ff	                            xor edi, edi	      2612	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	CALL_129
0x4007e9a	      0xba05000000	                              mov edx, 5	      2612	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	CALL_129
0x4007e9f	      0xbe00000000	                              mov esi, 0	      2612	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	CALL_129
0x4007ea4	      0xe800000000	                          call 0x4007ea9	      2612	dwarf.c	FUNCTION_30	SWITCH_7	IF_56	CALL_129
0x4007ea9	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4007eae	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4007eb1	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4007eb3	      0xe800000000	                          call 0x4007eb8	       104	stdio2.h	CALL_16
0x4007eb8	      0xe988f7ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4007ebd	           0xf1f00	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x4007ec0	      0x498d6c2402	                      lea rbp, [r12 + 2]	      1820	dwarf.c	FUNCTION_30	SWITCH_1
0x4007ec5	      0xbe02000000	                              mov esi, 2	      1820	dwarf.c	FUNCTION_30	SWITCH_1
0x4007eca	          0x4939ed	                            cmp r13, rbp	      1820	dwarf.c	FUNCTION_30	SWITCH_1
0x4007ecd	     0xf87a2fcffff	                            ja 0x4007b75	      1820	dwarf.c	FUNCTION_30	SWITCH_1
0x4007ed3	          0x4d39ec	                            cmp r12, r13	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x4007ed6	     0xf83c4fcffff	                           jae 0x4007ba0	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x4007edc	          0x4c89ee	                            mov rsi, r13	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x4007edf	          0x4c29e6	                            sub rsi, r12	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x4007ee2	          0x8d46ff	                      lea eax, [rsi - 1]	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x4007ee5	          0x83f807	                              cmp eax, 7	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x4007ee8	     0xf87b2fcffff	                            ja 0x4007ba0	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x4007eee	      0xe982fcffff	                           jmp 0x4007b75	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x4007ef3	       0xf1f440000	                   nop dword [rax + rax]	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x4007ef8	        0x4983fe6b	                           cmp r14, 0x6b	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4007efc	     0xf84560d0000	                            je 0x4008c58	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4007f02	     0xf87780b0000	                            ja 0x4008a80	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4007f08	        0x4983fe4d	                           cmp r14, 0x4d	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4007f0c	     0xf84ecfeffff	                            je 0x4007dfe	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4007f12	     0xf8628130000	                           jbe 0x4009240	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4007f18	        0x4983fe5e	                           cmp r14, 0x5e	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4007f1c	     0xf8436100000	                            je 0x4008f58	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4007f22	     0xf86301c0000	                           jbe 0x4009b58	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4007f28	        0x4983fe65	                           cmp r14, 0x65	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4007f2c	     0xf8513f7ffff	                           jne 0x4007645	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4007f32	      0xbf09000000	                              mov edi, 9	       104	stdio2.h	CALL_16
0x4007f37	      0xe800000000	                          call 0x4007f3c	       104	stdio2.h	CALL_16
0x4007f3c	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2467	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_13
0x4007f41	        0x4883f801	                              cmp rax, 1	      2467	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_13
0x4007f45	     0xf840c1b0000	                            je 0x4009a57	      2467	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_13
0x4007f4b	     0xf82ae1a0000	                            jb 0x40099ff	      2467	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_13
0x4007f51	        0x4883f802	                              cmp rax, 2	      2467	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_13
0x4007f55	     0xf856f1a0000	                           jne 0x40099ca	      2467	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_13
0x4007f5b	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4007f60	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4007f65	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4007f67	      0xe800000000	                          call 0x4007f6c	       104	stdio2.h	CALL_16
0x4007f6c	      0xe9d4f6ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4007f71	     0xf1f80000000	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x4007f78	        0x4883fb0d	                            cmp rbx, 0xd	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4007f7c	     0xf87160a0000	                            ja 0x4008998	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4007f82	        0x4883fb0b	                            cmp rbx, 0xb	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4007f86	     0xf83a0faffff	                           jae 0x4007a2c	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4007f8c	        0x4883fb09	                              cmp rbx, 9	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4007f90	     0xf849a060000	                            je 0x4008630	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4007f96	        0x4883fb0a	                            cmp rbx, 0xa	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4007f9a	     0xf8570070000	                           jne 0x4008710	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4007fa0	        0x4c8d5501	                      lea r10, [rbp + 1]	      1995	dwarf.c	FUNCTION_30	SWITCH_2
0x4007fa4	          0x4d39d5	                            cmp r13, r10	      1995	dwarf.c	FUNCTION_30	SWITCH_2
0x4007fa7	     0xf86f3020000	                           jbe 0x40082a0	      1995	dwarf.c	FUNCTION_30	SWITCH_2
0x4007fad	      0x44894c2420	             mov dword [rsp + 0x20], r9d	      1995	dwarf.c	FUNCTION_30	SWITCH_2
0x4007fb2	      0x4c89542418	             mov qword [rsp + 0x18], r10	      1995	dwarf.c	FUNCTION_30	SWITCH_2
0x4007fb7	      0xbe01000000	                              mov esi, 1	      1995	dwarf.c	FUNCTION_30	SWITCH_2
0x4007fbc	          0x4889ef	                            mov rdi, rbp	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x4007fbf	    0xff1500000000	                 call qword [0x04007fc5]	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x4007fc5	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	      2046	dwarf.c	FUNCTION_30	SWITCH_2
0x4007fca	          0x4889c5	                            mov rbp, rax	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x4007fcd	      0x4889442448	             mov qword [rsp + 0x48], rax	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x4007fd2	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	      2049	dwarf.c	FUNCTION_30	SWITCH_2	IF_29
0x4007fd7	        0x498d0402	                    lea rax, [r10 + rax]	      2046	dwarf.c	FUNCTION_30	SWITCH_2
0x4007fdb	          0x4939c5	                            cmp r13, rax	      2049	dwarf.c	FUNCTION_30	SWITCH_2	IF_29
0x4007fde	     0xf822cfdffff	                            jb 0x4007d10	      2049	dwarf.c	FUNCTION_30	SWITCH_2	IF_29
0x4007fe4	          0x4939c2	                            cmp r10, rax	      2049	dwarf.c	FUNCTION_30	SWITCH_2	IF_29
0x4007fe7	     0xf8723fdffff	                            ja 0x4007d10	      2049	dwarf.c	FUNCTION_30	SWITCH_2	IF_29
0x4007fed	      0xe95bfdffff	                           jmp 0x4007d4d	      2049	dwarf.c	FUNCTION_30	SWITCH_2	IF_29
0x4007ff2	    0x660f1f440000	                    nop word [rax + rax]	      2049	dwarf.c	FUNCTION_30	SWITCH_2	IF_29
0x4007ff8	        0x4883fb16	                           cmp rbx, 0x16	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4007ffc	     0xf8484000000	                            je 0x4008086	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4008002	     0xf87e9060000	                            ja 0x40086f1	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4008008	        0x4883fb14	                           cmp rbx, 0x14	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x400800c	     0xf847e050000	                            je 0x4008590	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4008012	        0x4883fb15	                           cmp rbx, 0x15	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4008016	     0xf85f4060000	                           jne 0x4008710	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x400801c	    0x8b8424200100	           mov eax, dword [rsp + 0x120] 	      1882	dwarf.c	FUNCTION_30	SWITCH_2	IF_8
0x4008023	          0x4531d2	                          xor r10d, r10d	      1771	dwarf.c	FUNCTION_30
0x4008026	            0x85c0	                           test eax, eax	      1882	dwarf.c	FUNCTION_30	SWITCH_2	IF_8
0x4008028	     0xf851af9ffff	                           jne 0x4007948	      1882	dwarf.c	FUNCTION_30	SWITCH_2	IF_8
0x400802e	      0x488b742408	                mov rsi, qword [rsp + 8]	       246	dwarf.c	FUNCTION_4	CALL_1
0x4008033	      0x44894c2420	             mov dword [rsp + 0x20], r9d	       246	dwarf.c	FUNCTION_4	CALL_1
0x4008038	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400803a	      0x4c89542418	             mov qword [rsp + 0x18], r10	       246	dwarf.c	FUNCTION_4	CALL_1
0x400803f	      0x4803742448	             add rsi, qword [rsp + 0x48]	       246	dwarf.c	FUNCTION_4	CALL_1
0x4008044	      0xe9cff6ffff	                           jmp 0x4007718	       246	dwarf.c	FUNCTION_4	CALL_1
0x4008049	     0xf1f80000000	                         nop dword [rax]	       246	dwarf.c	FUNCTION_4	CALL_1
0x4008050	    0x8b0500000000	            mov eax, dword [0x04008056] 	      1925	dwarf.c	FUNCTION_30	SWITCH_2	IF_14
0x4008056	            0x85c0	                           test eax, eax	      1925	dwarf.c	FUNCTION_30	SWITCH_2	IF_14
0x4008058	            0x7529	                           jne 0x4008083	      1925	dwarf.c	FUNCTION_30	SWITCH_2	IF_14
0x400805a	          0x4d39c5	                             cmp r13, r8	      1928	dwarf.c	FUNCTION_30	SWITCH_2	IF_14	IF_15
0x400805d	     0xf876e170000	                            ja 0x40097d1	      1928	dwarf.c	FUNCTION_30	SWITCH_2	IF_14	IF_15
0x4008063	          0x4c39ed	                            cmp rbp, r13	      1928	dwarf.c	FUNCTION_30	SWITCH_2	IF_14	IF_15
0x4008066	            0x7312	                           jae 0x400807a	      1928	dwarf.c	FUNCTION_30	SWITCH_2	IF_14	IF_15
0x4008068	          0x4c89ee	                            mov rsi, r13	      1928	dwarf.c	FUNCTION_30	SWITCH_2	IF_14	IF_15
0x400806b	          0x4829ee	                            sub rsi, rbp	      1928	dwarf.c	FUNCTION_30	SWITCH_2	IF_14	IF_15
0x400806e	          0x8d46ff	                      lea eax, [rsi - 1]	      1928	dwarf.c	FUNCTION_30	SWITCH_2	IF_14	IF_15
0x4008071	          0x83f807	                              cmp eax, 7	      1928	dwarf.c	FUNCTION_30	SWITCH_2	IF_14	IF_15
0x4008074	     0xf865c170000	                           jbe 0x40097d6	      1928	dwarf.c	FUNCTION_30	SWITCH_2	IF_14	IF_15
0x400807a	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1928	dwarf.c	FUNCTION_30	SWITCH_2	IF_14	IF_15
0x4008083	          0x4c89c5	                             mov rbp, r8	      1934	dwarf.c	FUNCTION_30	SWITCH_2
0x4008086	    0x8b8424200100	           mov eax, dword [rsp + 0x120] 	      2124	dwarf.c	FUNCTION_30	IF_37
0x400808d	            0x85c0	                           test eax, eax	      2124	dwarf.c	FUNCTION_30	IF_37
0x400808f	     0xf853e040000	                           jne 0x40084d3	      2124	dwarf.c	FUNCTION_30	IF_37
0x4008095	          0x4531d2	                          xor r10d, r10d	      2124	dwarf.c	FUNCTION_30	IF_37
0x4008098	      0xe9e3f9ffff	                           jmp 0x4007a80	      2124	dwarf.c	FUNCTION_30	IF_37
0x400809d	           0xf1f00	                         nop dword [rax]	      2124	dwarf.c	FUNCTION_30	IF_37
0x40080a0	      0x488d742444	                   lea rsi, [rsp + 0x44]	       356	dwarf.c	FUNCTION_10	CALL_1
0x40080a5	          0x4c89e9	                            mov rcx, r13	       356	dwarf.c	FUNCTION_10	CALL_1
0x40080a8	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x40080aa	          0x4c89e7	                            mov rdi, r12	       356	dwarf.c	FUNCTION_10	CALL_1
0x40080ad	      0x44894c2418	             mov dword [rsp + 0x18], r9d	       356	dwarf.c	FUNCTION_10	CALL_1
0x40080b2	      0xe800000000	                          call 0x40080b7	       356	dwarf.c	FUNCTION_10	CALL_1
0x40080b7	        0x8b6c2444	            mov ebp, dword [rsp + 0x44] 	      1835	dwarf.c	FUNCTION_30	SWITCH_1
0x40080bb	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      1835	dwarf.c	FUNCTION_30	SWITCH_1
0x40080c0	      0x4889442448	             mov qword [rsp + 0x48], rax	      1834	dwarf.c	FUNCTION_30	SWITCH_1	CALL_6
0x40080c5	          0x4c01e5	                            add rbp, r12	      1835	dwarf.c	FUNCTION_30	SWITCH_1
0x40080c8	    0x448b84242001	           mov r8d, dword [rsp + 0x120] 	      2075	dwarf.c	FUNCTION_30	SWITCH_2	IF_33
0x40080d0	      0x44894c2418	             mov dword [rsp + 0x18], r9d	      2075	dwarf.c	FUNCTION_30	SWITCH_2	IF_33
0x40080d5	          0x4585c0	                           test r8d, r8d	      2075	dwarf.c	FUNCTION_30	SWITCH_2	IF_33
0x40080d8	     0xf8572140000	                           jne 0x4009550	      2075	dwarf.c	FUNCTION_30	SWITCH_2	IF_33
0x40080de	        0x488b0424	                    mov rax, qword [rsp]	      2077	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_51
0x40080e2	      0xbe2e000000	                           mov esi, 0x2e	      2077	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_51
0x40080e7	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      2077	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_51
0x40080eb	      0xe800000000	                          call 0x40080f0	      2077	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_51
0x40080f0	          0x4885c0	                           test rax, rax	      2078	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_52
0x40080f3	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      2078	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_52
0x40080f8	     0xf8400200000	                            je 0x400a0fe	      2078	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_52
0x40080fe	      0xb905000000	                              mov ecx, 5	      2078	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_52
0x4008103	      0xbf00000000	                              mov edi, 0	      2078	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_52
0x4008108	          0x4889c6	                            mov rsi, rax	      2078	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_52
0x400810b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2078	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_52
0x400810d	           0xf94c1	                                 sete cl	      2078	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_52
0x4008110	           0xfb6c9	                           movzx ecx, cl	      2078	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_52
0x4008113	    0x488b94240801	           mov rdx, qword [rsp + 0x108] 	      2080	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_53
0x400811b	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      2080	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_53
0x4008120	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      2080	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_53
0x4008125	      0x44894c2428	             mov dword [rsp + 0x28], r9d	      2080	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_53
0x400812a	      0xe82183ffff	           call sym.fetch_indexed_string	      2080	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_53
0x400812f	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x4008134	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x4008136	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400813b	      0x4889442420	             mov qword [rsp + 0x20], rax	      2080	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_53
0x4008140	      0xe8bb81ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x4008145	      0xba05000000	                              mov edx, 5	      2080	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_53
0x400814a	      0x4889442418	             mov qword [rsp + 0x18], rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400814f	      0xbe00000000	                              mov esi, 0	      2080	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_53
0x4008154	            0x31ff	                            xor edi, edi	      2114	dwarf.c	FUNCTION_30	SWITCH_2	IF_36	CALL_60
0x4008156	      0xe800000000	                          call 0x400815b	      2114	dwarf.c	FUNCTION_30	SWITCH_2	IF_36	CALL_60
0x400815b	      0x448b4c2428	            mov r9d, dword [rsp + 0x28] 	       104	stdio2.h	CALL_16
0x4008160	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	       104	stdio2.h	CALL_16
0x4008165	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4008168	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x400816d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008172	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008174	        0x410fbed1	                          movsx edx, r9b	       104	stdio2.h	CALL_16
0x4008178	      0xe800000000	                          call 0x400817d	       104	stdio2.h	CALL_16
0x400817d	          0x4531d2	                          xor r10d, r10d	      1771	dwarf.c	FUNCTION_30
0x4008180	      0xe9fbf8ffff	                           jmp 0x4007a80	      1771	dwarf.c	FUNCTION_30
0x4008185	           0xf1f00	                         nop dword [rax]	      1771	dwarf.c	FUNCTION_30
0x4008188	      0x488d742444	                   lea rsi, [rsp + 0x44]	       356	dwarf.c	FUNCTION_10	CALL_1
0x400818d	          0x4c89e9	                            mov rcx, r13	       356	dwarf.c	FUNCTION_10	CALL_1
0x4008190	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4008192	          0x4c89e7	                            mov rdi, r12	       356	dwarf.c	FUNCTION_10	CALL_1
0x4008195	      0x44894c2420	             mov dword [rsp + 0x20], r9d	       356	dwarf.c	FUNCTION_10	CALL_1
0x400819a	      0x4c895c2418	             mov qword [rsp + 0x18], r11	       356	dwarf.c	FUNCTION_10	CALL_1
0x400819f	      0xe800000000	                          call 0x40081a4	       356	dwarf.c	FUNCTION_10	CALL_1
0x40081a4	        0x8b6c2444	            mov ebp, dword [rsp + 0x44] 	      1841	dwarf.c	FUNCTION_30	SWITCH_1
0x40081a8	      0x4889442448	             mov qword [rsp + 0x48], rax	      1840	dwarf.c	FUNCTION_30	SWITCH_1	CALL_7
0x40081ad	      0x4c8b5c2418	            mov r11, qword [rsp + 0x18] 	      1842	dwarf.c	FUNCTION_30	SWITCH_1
0x40081b2	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	      1842	dwarf.c	FUNCTION_30	SWITCH_1
0x40081b7	          0x4c01e5	                            add rbp, r12	      1841	dwarf.c	FUNCTION_30	SWITCH_1
0x40081ba	      0xe9e1f9ffff	                           jmp 0x4007ba0	      1842	dwarf.c	FUNCTION_30	SWITCH_1
0x40081bf	              0x90	                                     nop	      1842	dwarf.c	FUNCTION_30	SWITCH_1
0x40081c0	        0x4883fb13	                           cmp rbx, 0x13	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x40081c4	     0xf8556faffff	                           jne 0x4007c20	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x40081ca	      0x498d6c2404	                      lea rbp, [r12 + 4]	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x40081cf	          0x4939ed	                            cmp r13, rbp	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x40081d2	     0xf86fbfcffff	                           jbe 0x4007ed3	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x40081d8	      0xbe04000000	                              mov esi, 4	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x40081dd	      0xe993f9ffff	                           jmp 0x4007b75	      1825	dwarf.c	FUNCTION_30	SWITCH_1
0x40081e2	        0x4983fe48	                           cmp r14, 0x48	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x40081e6	            0x741d	                            je 0x4008205	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x40081e8	     0xf87c3250000	                            ja 0x400a7b1	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x40081ee	          0x4531d2	                          xor r10d, r10d	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x40081f1	        0x4983fe40	                           cmp r14, 0x40	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x40081f5	     0xf8427020000	                            je 0x4008422	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x40081fb	        0x4983fe46	                           cmp r14, 0x46	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x40081ff	     0xf8540f4ffff	                           jne 0x4007645	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4008205	          0x4531d2	                          xor r10d, r10d	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4008208	     0xf1f84000000	                   nop dword [rax + rax]	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4008210	    0x83bc24100100	              cmp dword [rsp + 0x110], 3	      2150	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38
0x4008218	            0x7f0a	                            jg 0x4008224	      2150	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38
0x400821a	        0x488d43fa	                      lea rax, [rbx - 6]	      2151	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38
0x400821e	        0x4883f801	                              cmp rax, 1	      2151	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38
0x4008222	            0x760a	                           jbe 0x400822e	      2151	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38
0x4008224	        0x4883fb17	                           cmp rbx, 0x17	      2152	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38
0x4008228	     0xf856ef8ffff	                           jne 0x4007a9c	      2152	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38
0x400822e	        0x418b474c	            mov eax, dword [r15 + 0x4c] 	      2155	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38
0x4008232	        0x418b4f48	            mov ecx, dword [r15 + 0x48] 	      2156	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38
0x4008236	            0x85c0	                           test eax, eax	      2158	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_39
0x4008238	     0xf842f180000	                            je 0x4009a6d	      2158	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_39
0x400823e	            0x39c8	                            cmp eax, ecx	      2158	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_39
0x4008240	     0xf8627180000	                           jbe 0x4009a6d	      2158	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_39
0x4008246	        0x498b4740	            mov rax, qword [r15 + 0x40] 	      2158	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_39
0x400824a	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      2172	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_40
0x400824f	          0x4885d2	                           test rdx, rdx	      2172	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_40
0x4008252	            0x7409	                            je 0x400825d	      2172	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_40
0x4008254	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	      2173	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_40
0x4008258	      0x4801542448	            add qword [rsp + 0x48], rdx 	      2173	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_40
0x400825d	    0x8b3500000000	            mov esi, dword [0x04008263] 	      2174	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38
0x4008263	            0x89ca	                            mov edx, ecx	      2174	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38
0x4008265	    0x4981fe372100	                         cmp r14, 0x2137	      2175	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41
0x400826c	          0x893490	            mov dword [rax + rdx*4], esi	      2174	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38
0x400826f	     0xf84a0180000	                            je 0x4009b15	      2175	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41
0x4008275	        0x418b4748	            mov eax, dword [r15 + 0x48] 	      2179	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	IF_42
0x4008279	        0x413b4750	            cmp eax, dword [r15 + 0x50] 	      2179	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	IF_42
0x400827d	     0xf87421c0000	                            ja 0x4009ec5	      2179	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	IF_42
0x4008283	        0x498b4f30	            mov rcx, qword [r15 + 0x30] 	      2184	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	ELSE_8
0x4008287	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      2184	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	ELSE_8
0x400828c	          0x83c001	                              add eax, 1	      2185	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	ELSE_8
0x400828f	        0x488934d1	            mov qword [rcx + rdx*8], rsi	      2184	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	ELSE_8
0x4008293	        0x41894748	             mov dword [r15 + 0x48], eax	      2185	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	ELSE_8
0x4008297	      0xe900f8ffff	                           jmp 0x4007a9c	      2185	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	ELSE_8
0x400829c	         0xf1f4000	                         nop dword [rax]	      2185	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	ELSE_8
0x40082a0	          0x4c39ed	                            cmp rbp, r13	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x40082a3	            0x7312	                           jae 0x40082b7	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x40082a5	          0x4c89ee	                            mov rsi, r13	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x40082a8	          0x4829ee	                            sub rsi, rbp	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x40082ab	          0x8d46ff	                      lea eax, [rsi - 1]	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x40082ae	          0x83f807	                              cmp eax, 7	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x40082b1	     0xf86c4240000	                           jbe 0x400a77b	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x40082b7	    0x48c744244800	               mov qword [rsp + 0x48], 0	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x40082c0	      0xba05000000	                              mov edx, 5	      2042	dwarf.c	FUNCTION_30	SWITCH_2	IF_28	CALL_41
0x40082c5	      0xbe00000000	                              mov esi, 0	      2042	dwarf.c	FUNCTION_30	SWITCH_2	IF_28	CALL_41
0x40082ca	            0x31ff	                            xor edi, edi	      2042	dwarf.c	FUNCTION_30	SWITCH_2	IF_28	CALL_41
0x40082cc	      0x44894c2418	             mov dword [rsp + 0x18], r9d	      2042	dwarf.c	FUNCTION_30	SWITCH_2	IF_28	CALL_41
0x40082d1	            0x31ed	                            xor ebp, ebp	      2043	dwarf.c	FUNCTION_30	SWITCH_2	IF_28
0x40082d3	      0xe800000000	                          call 0x40082d8	      2042	dwarf.c	FUNCTION_30	SWITCH_2	IF_28	CALL_41
0x40082d8	          0x4889c7	                            mov rdi, rax	      2042	dwarf.c	FUNCTION_30	SWITCH_2	IF_28	CALL_41
0x40082db	            0x31c0	                            xor eax, eax	      2042	dwarf.c	FUNCTION_30	SWITCH_2	IF_28	CALL_41
0x40082dd	      0xe800000000	                          call 0x40082e2	      2042	dwarf.c	FUNCTION_30	SWITCH_2	IF_28	CALL_41
0x40082e2	    0x48c744244800	               mov qword [rsp + 0x48], 0	      2043	dwarf.c	FUNCTION_30	SWITCH_2	IF_28
0x40082eb	          0x4d89ea	                            mov r10, r13	      2043	dwarf.c	FUNCTION_30	SWITCH_2	IF_28
0x40082ee	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      2043	dwarf.c	FUNCTION_30	SWITCH_2	IF_28
0x40082f3	      0xe955faffff	                           jmp 0x4007d4d	      2043	dwarf.c	FUNCTION_30	SWITCH_2	IF_28
0x40082f8	     0xf1f84000000	                   nop dword [rax + rax]	      2043	dwarf.c	FUNCTION_30	SWITCH_2	IF_28
0x4008300	    0x4881fb201f00	                         cmp rbx, 0x1f20	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4008307	     0xf842b010000	                            je 0x4008438	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x400830d	    0x4881fb211f00	                         cmp rbx, 0x1f21	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4008314	     0xf852d1d0000	                           jne 0x400a047	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x400831a	    0x8bbc24200100	           mov edi, dword [rsp + 0x120] 	      2087	dwarf.c	FUNCTION_30	SWITCH_2	IF_34
0x4008321	          0x4531d2	                          xor r10d, r10d	      1771	dwarf.c	FUNCTION_30
0x4008324	            0x85ff	                           test edi, edi	      2087	dwarf.c	FUNCTION_30	SWITCH_2	IF_34
0x4008326	     0xf851cf6ffff	                           jne 0x4007948	      2087	dwarf.c	FUNCTION_30	SWITCH_2	IF_34
0x400832c	    0x8b3500000000	            mov esi, dword [0x04008332] 	      1698	dwarf.c	FUNCTION_28	IF_1
0x4008332	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      2089	dwarf.c	FUNCTION_30	SWITCH_2	IF_34	CALL_56
0x4008337	    0x41b800000000	                              mov r8d, 0	      1699	dwarf.c	FUNCTION_28	IF_1
0x400833d	            0x85f6	                           test esi, esi	      1698	dwarf.c	FUNCTION_28	IF_1
0x400833f	     0xf8493000000	                            je 0x40083d8	      1698	dwarf.c	FUNCTION_28	IF_1
0x4008345	    0x488b35000000	            mov rsi, qword [0x0400834c] 	      1701	dwarf.c	FUNCTION_28	IF_2
0x400834c	          0x4885f6	                           test rsi, rsi	      1701	dwarf.c	FUNCTION_28	IF_2
0x400834f	     0xf84e11f0000	                            je 0x400a336	      1701	dwarf.c	FUNCTION_28	IF_2
0x4008355	      0xbf2a000000	                           mov edi, 0x2a	      1704	dwarf.c	FUNCTION_28	IF_3	CALL_2
0x400835a	      0x44894c2420	             mov dword [rsp + 0x20], r9d	      1704	dwarf.c	FUNCTION_28	IF_3	CALL_2
0x400835f	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      1704	dwarf.c	FUNCTION_28	IF_3	CALL_2
0x4008364	      0xe800000000	                          call 0x4008369	      1704	dwarf.c	FUNCTION_28	IF_3	CALL_2
0x4008369	            0x85c0	                           test eax, eax	      1704	dwarf.c	FUNCTION_28	IF_3	CALL_2
0x400836b	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1704	dwarf.c	FUNCTION_28	IF_3	CALL_2
0x4008370	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	      1704	dwarf.c	FUNCTION_28	IF_3	CALL_2
0x4008375	     0xf843c1f0000	                            je 0x400a2b7	      1704	dwarf.c	FUNCTION_28	IF_3	CALL_2
0x400837b	    0x488b05000000	            mov rax, qword [0x04008382] 	      1708	dwarf.c	FUNCTION_28	IF_4
0x4008382	          0x4885c0	                           test rax, rax	      1708	dwarf.c	FUNCTION_28	IF_4
0x4008385	     0xf84dc230000	                            je 0x400a767	      1708	dwarf.c	FUNCTION_28	IF_4
0x400838b	    0x488b15000000	            mov rdx, qword [0x04008392] 	      1711	dwarf.c	FUNCTION_28	IF_5
0x4008392	      0x44894c2420	             mov dword [rsp + 0x20], r9d	      1711	dwarf.c	FUNCTION_28	IF_5
0x4008397	          0x4839d1	                            cmp rcx, rdx	      1711	dwarf.c	FUNCTION_28	IF_5
0x400839a	     0xf833f1f0000	                           jae 0x400a2df	      1711	dwarf.c	FUNCTION_28	IF_5
0x40083a0	          0x4829ca	                            sub rdx, rcx	      1721	dwarf.c	FUNCTION_28	IF_6	CALL_9
0x40083a3	          0x4801c8	                            add rax, rcx	      1717	dwarf.c	FUNCTION_28
0x40083a6	          0x4889d6	                            mov rsi, rdx	      1721	dwarf.c	FUNCTION_28	IF_6	CALL_9
0x40083a9	          0x4889c7	                            mov rdi, rax	      1721	dwarf.c	FUNCTION_28	IF_6	CALL_9
0x40083ac	      0x4889542418	             mov qword [rsp + 0x18], rdx	      1721	dwarf.c	FUNCTION_28	IF_6	CALL_9
0x40083b1	      0x4889442428	             mov qword [rsp + 0x28], rax	      1721	dwarf.c	FUNCTION_28	IF_6	CALL_9
0x40083b6	      0xe800000000	                          call 0x40083bb	      1721	dwarf.c	FUNCTION_28	IF_6	CALL_9
0x40083bb	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1721	dwarf.c	FUNCTION_28	IF_6	CALL_9
0x40083c0	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	      1721	dwarf.c	FUNCTION_28	IF_6	CALL_9
0x40083c5	          0x4839c2	                            cmp rdx, rax	      1721	dwarf.c	FUNCTION_28	IF_6	CALL_9
0x40083c8	     0xf842a220000	                            je 0x400a5f8	      1721	dwarf.c	FUNCTION_28	IF_6	CALL_9
0x40083ce	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      1721	dwarf.c	FUNCTION_28	IF_6	CALL_9
0x40083d3	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	      1721	dwarf.c	FUNCTION_28	IF_6	CALL_9
0x40083d8	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x40083da	          0x4889ce	                            mov rsi, rcx	       246	dwarf.c	FUNCTION_4	CALL_1
0x40083dd	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x40083e2	      0x44894c2428	             mov dword [rsp + 0x28], r9d	       246	dwarf.c	FUNCTION_4	CALL_1
0x40083e7	      0x4c89442420	              mov qword [rsp + 0x20], r8	       246	dwarf.c	FUNCTION_4	CALL_1
0x40083ec	      0xe80f7fffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x40083f1	      0xba05000000	                              mov edx, 5	      2089	dwarf.c	FUNCTION_30	SWITCH_2	IF_34	CALL_56
0x40083f6	      0x4889442418	             mov qword [rsp + 0x18], rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x40083fb	      0xbe00000000	                              mov esi, 0	      2089	dwarf.c	FUNCTION_30	SWITCH_2	IF_34	CALL_56
0x4008400	      0xe94ffdffff	                           jmp 0x4008154	      2089	dwarf.c	FUNCTION_30	SWITCH_2	IF_34	CALL_56
0x4008405	           0xf1f00	                         nop dword [rax]	      2089	dwarf.c	FUNCTION_30	SWITCH_2	IF_34	CALL_56
0x4008408	        0x4983fe48	                           cmp r14, 0x48	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400840c	     0xf84fefdffff	                            je 0x4008210	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4008412	     0xf87db130000	                            ja 0x40097f3	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4008418	        0x4983fe40	                           cmp r14, 0x40	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400841c	     0xf85d1170000	                           jne 0x4009bf3	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4008422	    0xc70500000000	               mov dword [0x0400842c], 1	      2131	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400842c	      0xe9dffdffff	                           jmp 0x4008210	      2131	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4008431	     0xf1f80000000	                         nop dword [rax]	      2131	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4008438	    0x8b8424200100	           mov eax, dword [rsp + 0x120] 	      1873	dwarf.c	FUNCTION_30	SWITCH_2	IF_7
0x400843f	          0x4531d2	                          xor r10d, r10d	      1771	dwarf.c	FUNCTION_30
0x4008442	            0x85c0	                           test eax, eax	      1873	dwarf.c	FUNCTION_30	SWITCH_2	IF_7
0x4008444	     0xf85fef4ffff	                           jne 0x4007948	      1873	dwarf.c	FUNCTION_30	SWITCH_2	IF_7
0x400844a	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x400844f	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x4008451	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x4008456	      0x4c89542418	             mov qword [rsp + 0x18], r10	       246	dwarf.c	FUNCTION_4	CALL_1
0x400845b	      0x44894c2420	             mov dword [rsp + 0x20], r9d	       246	dwarf.c	FUNCTION_4	CALL_1
0x4008460	      0xe89b7effff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x4008465	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	       104	stdio2.h	CALL_16
0x400846a	          0x4889c1	                            mov rcx, rax	       104	stdio2.h	CALL_16
0x400846d	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4008472	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008477	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008479	        0x410fbed1	                          movsx edx, r9b	       104	stdio2.h	CALL_16
0x400847d	      0xe800000000	                          call 0x4008482	       104	stdio2.h	CALL_16
0x4008482	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x4008487	      0xe9f4f5ffff	                           jmp 0x4007a80	       104	stdio2.h	CALL_16
0x400848c	         0xf1f4000	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x4008490	    0x8b8424200100	           mov eax, dword [rsp + 0x120] 	      1963	dwarf.c	FUNCTION_30	SWITCH_2	IF_18
0x4008497	          0x4d89eb	                            mov r11, r13	      1964	dwarf.c	FUNCTION_30	SWITCH_2	IF_18
0x400849a	          0x4929eb	                            sub r11, rbp	      1964	dwarf.c	FUNCTION_30	SWITCH_2	IF_18
0x400849d	            0x85c0	                           test eax, eax	      1963	dwarf.c	FUNCTION_30	SWITCH_2	IF_18
0x400849f	     0xf84f3110000	                            je 0x4009698	      1963	dwarf.c	FUNCTION_30	SWITCH_2	IF_18
0x40084a5	          0x4889ef	                            mov rdi, rbp	      1965	dwarf.c	FUNCTION_30	SWITCH_2	CALL_23
0x40084a8	          0x4c89de	                            mov rsi, r11	      1965	dwarf.c	FUNCTION_30	SWITCH_2	CALL_23
0x40084ab	      0xe800000000	                          call 0x40084b0	      1965	dwarf.c	FUNCTION_30	SWITCH_2	CALL_23
0x40084b0	      0x488d6c0501	                lea rbp, [rbp + rax + 1]	      1965	dwarf.c	FUNCTION_30	SWITCH_2	CALL_23
0x40084b5	      0xe9ccfbffff	                           jmp 0x4008086	      1966	dwarf.c	FUNCTION_30	SWITCH_2
0x40084ba	    0x660f1f440000	                    nop word [rax + rax]	      1966	dwarf.c	FUNCTION_30	SWITCH_2
0x40084c0	    0x8b9424200100	           mov edx, dword [rsp + 0x120] 	      2100	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x40084c7	            0x85d2	                           test edx, edx	      2100	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x40084c9	     0xf8491100000	                            je 0x4009560	      2100	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x40084cf	        0x4883c508	                              add rbp, 8	      2100	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x40084d3	    0x8b0500000000	            mov eax, dword [0x040084d9] 	      2126	dwarf.c	FUNCTION_30	IF_37
0x40084d9	            0x85c0	                           test eax, eax	      2126	dwarf.c	FUNCTION_30	IF_37
0x40084db	     0xf8564f1ffff	                           jne 0x4007645	      2126	dwarf.c	FUNCTION_30	IF_37
0x40084e1	          0x4d85ff	                           test r15, r15	      2126	dwarf.c	FUNCTION_30	IF_37
0x40084e4	     0xf845bf1ffff	                            je 0x4007645	      2126	dwarf.c	FUNCTION_30	IF_37
0x40084ea	        0x4983fe55	                           cmp r14, 0x55	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x40084ee	     0xf844c040000	                            je 0x4008940	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x40084f4	     0xf8665200000	                           jbe 0x400a55f	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x40084fa	    0x4981fe142100	                         cmp r14, 0x2114	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4008501	     0xf8624220000	                           jbe 0x400a72b	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4008507	    0x4981fe322100	                         cmp r14, 0x2132	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400850e	     0xf8414040000	                            je 0x4008928	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4008514	     0xf87f2210000	                            ja 0x400a70c	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400851a	    0x4981fe302100	                         cmp r14, 0x2130	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4008521	     0xf84dd210000	                            je 0x400a704	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4008527	    0x4981fe312100	                         cmp r14, 0x2131	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400852e	     0xf8475f4ffff	                            je 0x40079a9	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4008534	      0xe90cf1ffff	                           jmp 0x4007645	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4008539	     0xf1f80000000	                         nop dword [rax]	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4008540	        0x4c8d5504	                      lea r10, [rbp + 4]	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x4008544	          0x4d39d5	                            cmp r13, r10	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x4008547	     0xf8653fdffff	                           jbe 0x40082a0	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x400854d	      0x44894c2420	             mov dword [rsp + 0x20], r9d	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x4008552	      0x4c89542418	             mov qword [rsp + 0x18], r10	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x4008557	      0xbe04000000	                              mov esi, 4	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x400855c	      0xe95bfaffff	                           jmp 0x4007fbc	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x4008561	     0xf1f80000000	                         nop dword [rax]	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x4008568	    0x8b8424200100	           mov eax, dword [rsp + 0x120] 	      1937	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x400856f	            0x85c0	                           test eax, eax	      1937	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x4008571	     0xf84590f0000	                            je 0x40094d0	      1937	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x4008577	        0x4883c510	                           add rbp, 0x10	      1937	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x400857b	      0xe953ffffff	                           jmp 0x40084d3	      1937	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x4008580	        0x4883fb06	                              cmp rbx, 6	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4008584	     0xf8400f3ffff	                            je 0x400788a	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x400858a	     0xf869cf4ffff	                           jbe 0x4007a2c	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4008590	    0x8bb424200100	           mov esi, dword [rsp + 0x120] 	      1910	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x4008597	        0x4c8d4508	                       lea r8, [rbp + 8]	      1916	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x400859b	            0x85f6	                           test esi, esi	      1910	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x400859d	     0xf85adfaffff	                           jne 0x4008050	      1910	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x40085a3	          0x4d39c5	                             cmp r13, r8	      1916	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x40085a6	     0xf8377160000	                           jae 0x4009c23	      1916	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x40085ac	      0x488b742408	                mov rsi, qword [rsp + 8]	      1918	dwarf.c	FUNCTION_30	SWITCH_2	IF_12	IF_13
0x40085b1	            0x31ff	                            xor edi, edi	      1918	dwarf.c	FUNCTION_30	SWITCH_2	IF_12	IF_13
0x40085b3	        0x4883fb14	                           cmp rbx, 0x14	      1918	dwarf.c	FUNCTION_30	SWITCH_2	IF_12	IF_13
0x40085b7	    0x48c744246800	               mov qword [rsp + 0x68], 0	      1916	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x40085c0	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1916	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x40085c9	        0x480f45f7	                         cmovne rsi, rdi	      1918	dwarf.c	FUNCTION_30	SWITCH_2	IF_12	IF_13
0x40085cd	      0x488d542470	                   lea rdx, [rsp + 0x70]	      1920	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x40085d2	      0x4c89442418	              mov qword [rsp + 0x18], r8	      1920	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x40085d7	      0x44894c2420	             mov dword [rsp + 0x20], r9d	      1920	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x40085dc	      0xe82fa9ffff	    call sym.dwarf_vmatoa64.constprop.26	      1920	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x40085e1	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	       104	stdio2.h	CALL_16
0x40085e6	          0x4889c1	                            mov rcx, rax	       104	stdio2.h	CALL_16
0x40085e9	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x40085ee	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40085f0	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40085f5	        0x410fbed1	                          movsx edx, r9b	       104	stdio2.h	CALL_16
0x40085f9	      0xe800000000	                          call 0x40085fe	       104	stdio2.h	CALL_16
0x40085fe	    0x8b0d00000000	            mov ecx, dword [0x04008604] 	      1924	dwarf.c	FUNCTION_30	SWITCH_2	IF_14
0x4008604	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      1924	dwarf.c	FUNCTION_30	SWITCH_2	IF_14
0x4008609	            0x85c9	                           test ecx, ecx	      1924	dwarf.c	FUNCTION_30	SWITCH_2	IF_14
0x400860b	     0xf853ffaffff	                           jne 0x4008050	      1924	dwarf.c	FUNCTION_30	SWITCH_2	IF_14
0x4008611	    0x8b1500000000	            mov edx, dword [0x04008617] 	      1924	dwarf.c	FUNCTION_30	SWITCH_2	IF_14
0x4008617	            0x85d2	                           test edx, edx	      1924	dwarf.c	FUNCTION_30	SWITCH_2	IF_14
0x4008619	     0xf8531faffff	                           jne 0x4008050	      1924	dwarf.c	FUNCTION_30	SWITCH_2	IF_14
0x400861f	          0x4c89c5	                             mov rbp, r8	      1924	dwarf.c	FUNCTION_30	SWITCH_2	IF_14
0x4008622	      0xe96efaffff	                           jmp 0x4008095	      1924	dwarf.c	FUNCTION_30	SWITCH_2	IF_14
0x4008627	    0x660f1f840000	                    nop word [rax + rax]	      1924	dwarf.c	FUNCTION_30	SWITCH_2	IF_14
0x4008630	      0x488d742444	                   lea rsi, [rsp + 0x44]	       356	dwarf.c	FUNCTION_10	CALL_1
0x4008635	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4008637	          0x4c89e9	                            mov rcx, r13	       356	dwarf.c	FUNCTION_10	CALL_1
0x400863a	          0x4889ef	                            mov rdi, rbp	       356	dwarf.c	FUNCTION_10	CALL_1
0x400863d	      0x44894c2418	             mov dword [rsp + 0x18], r9d	       356	dwarf.c	FUNCTION_10	CALL_1
0x4008642	      0xe800000000	                          call 0x4008647	       356	dwarf.c	FUNCTION_10	CALL_1
0x4008647	          0x4989c0	                             mov r8, rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x400864a	      0x4889442448	             mov qword [rsp + 0x48], rax	      1970	dwarf.c	FUNCTION_30	SWITCH_2	CALL_24
0x400864f	        0x8b442444	            mov eax, dword [rsp + 0x44] 	      1971	dwarf.c	FUNCTION_30	SWITCH_2
0x4008653	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      1972	dwarf.c	FUNCTION_30	SWITCH_2	IF_19
0x4008658	      0x4c8d540500	                    lea r10, [rbp + rax]	      1971	dwarf.c	FUNCTION_30	SWITCH_2
0x400865d	          0x4d39d5	                            cmp r13, r10	      1972	dwarf.c	FUNCTION_30	SWITCH_2	IF_19
0x4008660	     0xf86ed100000	                           jbe 0x4009753	      1972	dwarf.c	FUNCTION_30	SWITCH_2	IF_19
0x4008666	          0x4c89d0	                            mov rax, r10	      1983	dwarf.c	FUNCTION_30	SWITCH_2	IF_20
0x4008669	          0x4c01c0	                             add rax, r8	      1983	dwarf.c	FUNCTION_30	SWITCH_2	IF_20
0x400866c	            0x7205	                            jb 0x4008673	      1983	dwarf.c	FUNCTION_30	SWITCH_2	IF_20
0x400866e	          0x4939c5	                            cmp r13, rax	      1983	dwarf.c	FUNCTION_30	SWITCH_2	IF_20
0x4008671	            0x7347	                           jae 0x40086ba	      1983	dwarf.c	FUNCTION_30	SWITCH_2	IF_20
0x4008673	      0xba05000000	                              mov edx, 5	      1985	dwarf.c	FUNCTION_30	SWITCH_2	IF_20	CALL_28
0x4008678	      0xbe00000000	                              mov esi, 0	      1985	dwarf.c	FUNCTION_30	SWITCH_2	IF_20	CALL_28
0x400867d	            0x31ff	                            xor edi, edi	      1985	dwarf.c	FUNCTION_30	SWITCH_2	IF_20	CALL_28
0x400867f	      0x44894c2428	             mov dword [rsp + 0x28], r9d	      1985	dwarf.c	FUNCTION_30	SWITCH_2	IF_20	CALL_28
0x4008684	      0x4c89542420	             mov qword [rsp + 0x20], r10	      1985	dwarf.c	FUNCTION_30	SWITCH_2	IF_20	CALL_28
0x4008689	      0x4c89442418	              mov qword [rsp + 0x18], r8	      1985	dwarf.c	FUNCTION_30	SWITCH_2	IF_20	CALL_28
0x400868e	      0xe800000000	                          call 0x4008693	      1985	dwarf.c	FUNCTION_30	SWITCH_2	IF_20	CALL_28
0x4008693	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      1985	dwarf.c	FUNCTION_30	SWITCH_2	IF_20	CALL_28
0x4008698	          0x4889c7	                            mov rdi, rax	      1985	dwarf.c	FUNCTION_30	SWITCH_2	IF_20	CALL_28
0x400869b	            0x31c0	                            xor eax, eax	      1985	dwarf.c	FUNCTION_30	SWITCH_2	IF_20	CALL_28
0x400869d	          0x4c89c6	                             mov rsi, r8	      1985	dwarf.c	FUNCTION_30	SWITCH_2	IF_20	CALL_28
0x40086a0	      0xe800000000	                          call 0x40086a5	      1985	dwarf.c	FUNCTION_30	SWITCH_2	IF_20	CALL_28
0x40086a5	      0x4c8b542420	            mov r10, qword [rsp + 0x20] 	      1986	dwarf.c	FUNCTION_30	SWITCH_2	IF_20
0x40086aa	          0x4d89e8	                             mov r8, r13	      1986	dwarf.c	FUNCTION_30	SWITCH_2	IF_20
0x40086ad	      0x448b4c2428	            mov r9d, dword [rsp + 0x28] 	      1986	dwarf.c	FUNCTION_30	SWITCH_2	IF_20
0x40086b2	          0x4d29d0	                             sub r8, r10	      1986	dwarf.c	FUNCTION_30	SWITCH_2	IF_20
0x40086b5	      0x4c89442448	              mov qword [rsp + 0x48], r8	      1986	dwarf.c	FUNCTION_30	SWITCH_2	IF_20
0x40086ba	    0x8b8424200100	           mov eax, dword [rsp + 0x120] 	      1988	dwarf.c	FUNCTION_30	SWITCH_2	IF_21
0x40086c1	        0x4b8d2c02	                     lea rbp, [r10 + r8]	      1989	dwarf.c	FUNCTION_30	SWITCH_2	IF_21
0x40086c5	            0x85c0	                           test eax, eax	      1988	dwarf.c	FUNCTION_30	SWITCH_2	IF_21
0x40086c7	     0xf857bf2ffff	                           jne 0x4007948	      1988	dwarf.c	FUNCTION_30	SWITCH_2	IF_21
0x40086cd	        0x410fbec9	                          movsx ecx, r9b	      1991	dwarf.c	FUNCTION_30	SWITCH_2	CALL_29
0x40086d1	          0x4c89ea	                            mov rdx, r13	      1991	dwarf.c	FUNCTION_30	SWITCH_2	CALL_29
0x40086d4	          0x4c89c6	                             mov rsi, r8	      1991	dwarf.c	FUNCTION_30	SWITCH_2	CALL_29
0x40086d7	          0x4c89d7	                            mov rdi, r10	      2057	dwarf.c	FUNCTION_30	SWITCH_2	CALL_44
0x40086da	      0x4c89542418	             mov qword [rsp + 0x18], r10	      2057	dwarf.c	FUNCTION_30	SWITCH_2	CALL_44
0x40086df	      0xe87c93ffff	                  call sym.display_block	      2057	dwarf.c	FUNCTION_30	SWITCH_2	CALL_44
0x40086e4	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	      2057	dwarf.c	FUNCTION_30	SWITCH_2	CALL_44
0x40086e9	          0x4889c5	                            mov rbp, rax	      2057	dwarf.c	FUNCTION_30	SWITCH_2	CALL_44
0x40086ec	      0xe98ff3ffff	                           jmp 0x4007a80	      2057	dwarf.c	FUNCTION_30	SWITCH_2	CALL_44
0x40086f1	        0x4883fb18	                           cmp rbx, 0x18	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x40086f5	     0xf8435ffffff	                            je 0x4008630	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x40086fb	     0xf8289f1ffff	                            jb 0x400788a	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4008701	        0x4883fb19	                           cmp rbx, 0x19	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4008705	     0xf8421f3ffff	                            je 0x4007a2c	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x400870b	       0xf1f440000	                   nop dword [rax + rax]	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x4008710	            0x31ff	                            xor edi, edi	      2120	dwarf.c	FUNCTION_30	SWITCH_2	CALL_64
0x4008712	      0xba05000000	                              mov edx, 5	      2120	dwarf.c	FUNCTION_30	SWITCH_2	CALL_64
0x4008717	      0xbe00000000	                              mov esi, 0	      2120	dwarf.c	FUNCTION_30	SWITCH_2	CALL_64
0x400871c	      0xe800000000	                          call 0x4008721	      2120	dwarf.c	FUNCTION_30	SWITCH_2	CALL_64
0x4008721	          0x4889de	                            mov rsi, rbx	      2120	dwarf.c	FUNCTION_30	SWITCH_2	CALL_64
0x4008724	          0x4889c7	                            mov rdi, rax	      2120	dwarf.c	FUNCTION_30	SWITCH_2	CALL_64
0x4008727	            0x31c0	                            xor eax, eax	      2120	dwarf.c	FUNCTION_30	SWITCH_2	CALL_64
0x4008729	      0xe800000000	                          call 0x400872e	      2120	dwarf.c	FUNCTION_30	SWITCH_2	CALL_64
0x400872e	      0xe953f9ffff	                           jmp 0x4008086	      2121	dwarf.c	FUNCTION_30	SWITCH_2
0x4008733	       0xf1f440000	                   nop dword [rax + rax]	      2121	dwarf.c	FUNCTION_30	SWITCH_2
0x4008738	    0x448b9c242001	          mov r11d, dword [rsp + 0x120] 	      2068	dwarf.c	FUNCTION_30	SWITCH_2	IF_32
0x4008740	          0x4531d2	                          xor r10d, r10d	      1771	dwarf.c	FUNCTION_30
0x4008743	          0x4585db	                         test r11d, r11d	      2068	dwarf.c	FUNCTION_30	SWITCH_2	IF_32
0x4008746	     0xf85fcf1ffff	                           jne 0x4007948	      2068	dwarf.c	FUNCTION_30	SWITCH_2	IF_32
0x400874c	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      2069	dwarf.c	FUNCTION_30	SWITCH_2	IF_32	CALL_48
0x4008751	      0x44894c2434	             mov dword [rsp + 0x34], r9d	      2069	dwarf.c	FUNCTION_30	SWITCH_2	IF_32	CALL_48
0x4008756	      0x4c89542428	             mov qword [rsp + 0x28], r10	      2069	dwarf.c	FUNCTION_30	SWITCH_2	IF_32	CALL_48
0x400875b	      0xe8d094ffff	     call sym.fetch_indirect_line_string	      2069	dwarf.c	FUNCTION_30	SWITCH_2	IF_32	CALL_48
0x4008760	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x4008765	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x4008767	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400876c	      0x4889442420	             mov qword [rsp + 0x20], rax	      2069	dwarf.c	FUNCTION_30	SWITCH_2	IF_32	CALL_48
0x4008771	      0xe88a7bffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x4008776	      0xba05000000	                              mov edx, 5	      2069	dwarf.c	FUNCTION_30	SWITCH_2	IF_32	CALL_48
0x400877b	      0x4889442418	             mov qword [rsp + 0x18], rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x4008780	      0xbe00000000	                              mov esi, 0	      2069	dwarf.c	FUNCTION_30	SWITCH_2	IF_32	CALL_48
0x4008785	            0x31ff	                            xor edi, edi	      2069	dwarf.c	FUNCTION_30	SWITCH_2	IF_32	CALL_48
0x4008787	      0xe800000000	                          call 0x400878c	      2069	dwarf.c	FUNCTION_30	SWITCH_2	IF_32	CALL_48
0x400878c	      0x448b4c2434	            mov r9d, dword [rsp + 0x34] 	       104	stdio2.h	CALL_16
0x4008791	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	       104	stdio2.h	CALL_16
0x4008796	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4008799	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x400879e	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40087a3	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40087a5	        0x410fbed1	                          movsx edx, r9b	       104	stdio2.h	CALL_16
0x40087a9	      0xe800000000	                          call 0x40087ae	       104	stdio2.h	CALL_16
0x40087ae	      0x4c8b542428	            mov r10, qword [rsp + 0x28] 	       104	stdio2.h	CALL_16
0x40087b3	      0xe9c8f2ffff	                           jmp 0x4007a80	       104	stdio2.h	CALL_16
0x40087b8	     0xf1f84000000	                   nop dword [rax + rax]	       104	stdio2.h	CALL_16
0x40087c0	        0x4983fe1b	                           cmp r14, 0x1b	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x40087c4	     0xf854a140000	                           jne 0x4009c14	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x40087ca	    0x448b1d000000	           mov r11d, dword [0x040087d1] 	      2262	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48
0x40087d1	          0x4585db	                         test r11d, r11d	      2262	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48
0x40087d4	     0xf846beeffff	                            je 0x4007645	      2262	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48
0x40087da	        0x4883fb0e	                            cmp rbx, 0xe	      2263	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5
0x40087de	     0xf8404190000	                            je 0x400a0e8	      2263	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5
0x40087e4	     0xf8605170000	                           jbe 0x4009eef	      2263	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5
0x40087ea	        0x4883fb1f	                           cmp rbx, 0x1f	      2263	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5
0x40087ee	     0xf846c180000	                            je 0x400a060	      2263	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5
0x40087f4	    0x4881fb021f00	                         cmp rbx, 0x1f02	      2263	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5
0x40087fb	     0xf8575180000	                           jne 0x400a076	      2263	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5
0x4008801	    0x488b94240801	           mov rdx, qword [rsp + 0x108] 	      2272	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_83
0x4008809	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      2272	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_83
0x400880e	            0x31c9	                            xor ecx, ecx	      2272	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_83
0x4008810	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      2272	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_83
0x4008815	      0xe8367cffff	           call sym.fetch_indexed_string	      2272	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_83
0x400881a	    0x488905000000	            mov qword [0x04008821], rax 	      2272	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_83
0x4008821	      0xe91feeffff	                           jmp 0x4007645	      2273	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5
0x4008826	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2273	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5
0x4008830	    0x4981fe332100	                         cmp r14, 0x2133	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4008837	     0xf85c5130000	                           jne 0x4009c02	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400883d	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2209	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4008842	        0x49894720	             mov qword [r15 + 0x20], rax	      2209	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4008846	      0xe9faedffff	                           jmp 0x4007645	      2210	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400884b	       0xf1f440000	                   nop dword [rax + rax]	      2210	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4008850	        0x410fbec9	                          movsx ecx, r9b	      2057	dwarf.c	FUNCTION_30	SWITCH_2	CALL_44
0x4008854	          0x4c89ea	                            mov rdx, r13	      2057	dwarf.c	FUNCTION_30	SWITCH_2	CALL_44
0x4008857	          0x4889ee	                            mov rsi, rbp	      2057	dwarf.c	FUNCTION_30	SWITCH_2	CALL_44
0x400885a	      0xe978feffff	                           jmp 0x40086d7	      2057	dwarf.c	FUNCTION_30	SWITCH_2	CALL_44
0x400885f	              0x90	                                     nop	      2057	dwarf.c	FUNCTION_30	SWITCH_2	CALL_44
0x4008860	    0x4981fe112100	                         cmp r14, 0x2111	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4008867	     0xf83a3f9ffff	                           jae 0x4008210	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400886d	    0x4981fe840000	                           cmp r14, 0x84	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4008874	     0xf87cc120000	                            ja 0x4009b46	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400887a	    0x4981fe830000	                           cmp r14, 0x83	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4008881	     0xf8389f9ffff	                           jae 0x4008210	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4008887	        0x4983fe76	                           cmp r14, 0x76	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400888b	     0xf854d100000	                           jne 0x40098de	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4008891	    0x448b3d000000	           mov r15d, dword [0x04008898] 	      2240	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47
0x4008898	          0x4585ff	                         test r15d, r15d	      2240	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47
0x400889b	     0xf84fbf1ffff	                            je 0x4007a9c	      2240	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47
0x40088a1	        0x4883fb0e	                            cmp rbx, 0xe	      2241	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4
0x40088a5	     0xf8435170000	                            je 0x4009fe0	      2241	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4
0x40088ab	    0x4881fb021f00	                         cmp rbx, 0x1f02	      2241	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4
0x40088b2	     0xf84f9160000	                            je 0x4009fb1	      2241	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4
0x40088b8	        0x4883fb08	                              cmp rbx, 8	      2241	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4
0x40088bc	     0xf84e3160000	                            je 0x4009fa5	      2241	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4
0x40088c2	          0x4c89f7	                            mov rdi, r14	      2253	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_77
0x40088c5	      0x4c89542418	             mov qword [rsp + 0x18], r10	      2253	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_77
0x40088ca	      0xe8a194ffff	                    call sym.get_AT_name	      2253	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_77
0x40088cf	          0x4889df	                            mov rdi, rbx	      2253	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_77
0x40088d2	      0x4889442410	             mov qword [rsp + 0x10], rax	      2253	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_77
0x40088d7	      0xe80495ffff	                  call sym.get_FORM_name	      2253	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_77
0x40088dc	      0xba05000000	                              mov edx, 5	      2253	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_77
0x40088e1	      0xbe00000000	                              mov esi, 0	      2253	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_77
0x40088e6	            0x31ff	                            xor edi, edi	      2253	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_77
0x40088e8	          0x4989c7	                            mov r15, rax	      2253	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_77
0x40088eb	      0xe800000000	                          call 0x40088f0	      2253	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_77
0x40088f0	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      2253	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_77
0x40088f5	          0x4889c7	                            mov rdi, rax	      2253	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_77
0x40088f8	          0x4c89fe	                            mov rsi, r15	      2253	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_77
0x40088fb	            0x31c0	                            xor eax, eax	      2253	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_77
0x40088fd	      0xe800000000	                          call 0x4008902	      2253	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_77
0x4008902	      0xba05000000	                              mov edx, 5	      2255	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_80
0x4008907	      0xbe00000000	                              mov esi, 0	      2255	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_80
0x400890c	            0x31ff	                            xor edi, edi	      2255	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_80
0x400890e	      0xe800000000	                          call 0x4008913	      2255	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_80
0x4008913	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	      2256	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4
0x4008918	    0x488905000000	            mov qword [0x0400891f], rax 	      2255	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_80
0x400891f	      0xe978f1ffff	                           jmp 0x4007a9c	      2256	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4
0x4008924	         0xf1f4000	                         nop dword [rax]	      2256	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4
0x4008928	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2213	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400892d	        0x49894728	             mov qword [r15 + 0x28], rax	      2213	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4008931	      0xe90fedffff	                           jmp 0x4007645	      2214	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4008936	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2214	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4008940	    0x83bc24100100	              cmp dword [rsp + 0x110], 3	      2217	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45
0x4008948	            0x7f0a	                            jg 0x4008954	      2217	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45
0x400894a	        0x488d43fa	                      lea rax, [rbx - 6]	      2218	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45
0x400894e	        0x4883f801	                              cmp rax, 1	      2218	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45
0x4008952	            0x760a	                           jbe 0x400895e	      2218	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45
0x4008954	        0x4883fb17	                           cmp rbx, 0x17	      2219	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45
0x4008958	     0xf85e7ecffff	                           jne 0x4007645	      2219	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45
0x400895e	        0x418b4764	            mov eax, dword [r15 + 0x64] 	      2222	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45
0x4008962	        0x418b5f60	            mov ebx, dword [r15 + 0x60] 	      2223	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45
0x4008966	            0x85c0	                           test eax, eax	      2225	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45	IF_46
0x4008968	     0xf84b2160000	                            je 0x400a020	      2225	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45	IF_46
0x400896e	            0x39d8	                            cmp eax, ebx	      2225	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45	IF_46
0x4008970	     0xf86aa160000	                           jbe 0x400a020	      2225	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45	IF_46
0x4008976	        0x498b4758	            mov rax, qword [r15 + 0x58] 	      2225	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45	IF_46
0x400897a	            0x89da	                            mov edx, ebx	      2225	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45	IF_46
0x400897c	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      2233	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45
0x4008981	        0x48890cd8	            mov qword [rax + rbx*8], rcx	      2233	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45
0x4008985	          0x8d4201	                      lea eax, [rdx + 1]	      2234	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45
0x4008988	        0x41894760	             mov dword [r15 + 0x60], eax	      2234	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45
0x400898c	      0xe9b4ecffff	                           jmp 0x4007645	      2234	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45
0x4008991	     0xf1f80000000	                         nop dword [rax]	      2234	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45
0x4008998	        0x4883fb0f	                            cmp rbx, 0xf	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x400899c	     0xf848af0ffff	                            je 0x4007a2c	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x40089a2	     0xf874dedffff	                            ja 0x40076f5	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x40089a8	    0x8b8424200100	           mov eax, dword [rsp + 0x120] 	      2061	dwarf.c	FUNCTION_30	SWITCH_2	IF_31
0x40089af	          0x4531d2	                          xor r10d, r10d	      1771	dwarf.c	FUNCTION_30
0x40089b2	            0x85c0	                           test eax, eax	      2061	dwarf.c	FUNCTION_30	SWITCH_2	IF_31
0x40089b4	     0xf858eefffff	                           jne 0x4007948	      2061	dwarf.c	FUNCTION_30	SWITCH_2	IF_31
0x40089ba	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      2062	dwarf.c	FUNCTION_30	SWITCH_2	IF_31	CALL_45
0x40089bf	      0x44894c2434	             mov dword [rsp + 0x34], r9d	      2062	dwarf.c	FUNCTION_30	SWITCH_2	IF_31	CALL_45
0x40089c4	      0x4c89542428	             mov qword [rsp + 0x28], r10	      2062	dwarf.c	FUNCTION_30	SWITCH_2	IF_31	CALL_45
0x40089c9	      0xe88291ffff	          call sym.fetch_indirect_string	      2062	dwarf.c	FUNCTION_30	SWITCH_2	IF_31	CALL_45
0x40089ce	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x40089d3	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x40089d5	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x40089da	      0x4889442420	             mov qword [rsp + 0x20], rax	      2062	dwarf.c	FUNCTION_30	SWITCH_2	IF_31	CALL_45
0x40089df	      0xe81c79ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x40089e4	      0xba05000000	                              mov edx, 5	      2062	dwarf.c	FUNCTION_30	SWITCH_2	IF_31	CALL_45
0x40089e9	      0x4889442418	             mov qword [rsp + 0x18], rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x40089ee	      0xbe00000000	                              mov esi, 0	      2062	dwarf.c	FUNCTION_30	SWITCH_2	IF_31	CALL_45
0x40089f3	      0xe98dfdffff	                           jmp 0x4008785	      2062	dwarf.c	FUNCTION_30	SWITCH_2	IF_31	CALL_45
0x40089f8	     0xf1f84000000	                   nop dword [rax + rax]	      2062	dwarf.c	FUNCTION_30	SWITCH_2	IF_31	CALL_45
0x4008a00	        0x4983fe2e	                           cmp r14, 0x2e	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4008a04	     0xf844e020000	                            je 0x4008c58	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4008a0a	     0xf8698180000	                           jbe 0x400a2a8	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4008a10	        0x4983fe2f	                           cmp r14, 0x2f	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4008a14	     0xf8406f4ffff	                            je 0x4007e20	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4008a1a	        0x4983fe32	                           cmp r14, 0x32	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4008a1e	     0xf8521ecffff	                           jne 0x4007645	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4008a24	      0xbf09000000	                              mov edi, 9	       104	stdio2.h	CALL_16
0x4008a29	      0xe800000000	                          call 0x4008a2e	       104	stdio2.h	CALL_16
0x4008a2e	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2443	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_11
0x4008a33	        0x4883f802	                              cmp rax, 2	      2443	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_11
0x4008a37	     0xf8404100000	                            je 0x4009a41	      2443	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_11
0x4008a3d	        0x4883f803	                              cmp rax, 3	      2443	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_11
0x4008a41	     0xf84e40f0000	                            je 0x4009a2b	      2443	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_11
0x4008a47	        0x4883f801	                              cmp rax, 1	      2443	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_11
0x4008a4b	     0xf84c40f0000	                            je 0x4009a15	      2443	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_11
0x4008a51	            0x31ff	                            xor edi, edi	      2449	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_11	CALL_105
0x4008a53	      0xba05000000	                              mov edx, 5	      2449	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_11	CALL_105
0x4008a58	      0xbe00000000	                              mov esi, 0	      2449	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_11	CALL_105
0x4008a5d	      0xe800000000	                          call 0x4008a62	      2449	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_11	CALL_105
0x4008a62	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008a67	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4008a6a	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008a6c	      0xe800000000	                          call 0x4008a71	       104	stdio2.h	CALL_16
0x4008a71	      0xe9cfebffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008a76	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       104	stdio2.h	CALL_16
0x4008a80	    0x4981fe840000	                           cmp r14, 0x84	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4008a87	     0xf86930d0000	                           jbe 0x4009820	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4008a8d	    0x4981fe8b0000	                           cmp r14, 0x8b	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4008a94	     0xf8532160000	                           jne 0x400a0cc	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4008a9a	      0xbf09000000	                              mov edi, 9	       104	stdio2.h	CALL_16
0x4008a9f	      0xe800000000	                          call 0x4008aa4	       104	stdio2.h	CALL_16
0x4008aa4	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2550	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19
0x4008aa9	        0x4883f801	                              cmp rax, 1	      2550	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19
0x4008aad	     0xf845f0e0000	                            je 0x4009912	      2550	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19
0x4008ab3	     0xf82340e0000	                            jb 0x40098ed	      2550	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19
0x4008ab9	        0x4883f802	                              cmp rax, 2	      2550	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19
0x4008abd	     0xf85f60d0000	                           jne 0x40098b9	      2550	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19
0x4008ac3	            0x31ff	                            xor edi, edi	      2554	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19	CALL_122
0x4008ac5	      0xba05000000	                              mov edx, 5	      2554	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19	CALL_122
0x4008aca	      0xbe00000000	                              mov esi, 0	      2554	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19	CALL_122
0x4008acf	      0xe800000000	                          call 0x4008ad4	      2554	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19	CALL_122
0x4008ad4	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008ad9	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4008adc	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008ade	      0xe800000000	                          call 0x4008ae3	       104	stdio2.h	CALL_16
0x4008ae3	      0xe95debffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008ae8	     0xf1f84000000	                   nop dword [rax + rax]	       104	stdio2.h	CALL_16
0x4008af0	        0x4983fe09	                              cmp r14, 9	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4008af4	     0xf8545010000	                           jne 0x4008c3f	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4008afa	      0xbf09000000	                              mov edi, 9	       104	stdio2.h	CALL_16
0x4008aff	      0xe800000000	                          call 0x4008b04	       104	stdio2.h	CALL_16
0x4008b04	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2526	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_17
0x4008b09	        0x4883f801	                              cmp rax, 1	      2526	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_17
0x4008b0d	     0xf84ec0f0000	                            je 0x4009aff	      2526	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_17
0x4008b13	     0xf82d00f0000	                            jb 0x4009ae9	      2526	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_17
0x4008b19	    0x483dff000000	                           cmp rax, 0xff	      2526	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_17
0x4008b1f	            0x740a	                            je 0x4008b2b	      2526	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_17
0x4008b21	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      2526	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_17
0x4008b25	     0xf851aebffff	                           jne 0x4007645	      2526	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_17
0x4008b2b	            0x31ff	                            xor edi, edi	      2529	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_17	CALL_113
0x4008b2d	      0xba05000000	                              mov edx, 5	      2529	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_17	CALL_113
0x4008b32	      0xbe00000000	                              mov esi, 0	      2529	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_17	CALL_113
0x4008b37	      0xe800000000	                          call 0x4008b3c	      2529	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_17	CALL_113
0x4008b3c	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008b41	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4008b44	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008b46	      0xe800000000	                          call 0x4008b4b	       104	stdio2.h	CALL_16
0x4008b4b	      0xe9f5eaffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008b50	      0xbf09000000	                              mov edi, 9	       104	stdio2.h	CALL_16
0x4008b55	      0xe800000000	                          call 0x4008b5a	       104	stdio2.h	CALL_16
0x4008b5a	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2506	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_16
0x4008b5f	        0x4883f841	                           cmp rax, 0x41	      2506	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_16
0x4008b63	     0xf87a1000000	                            ja 0x4008c0a	      2506	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_16
0x4008b69	    0xff24c5000000	                       jmp qword [rax*8]	      2506	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_16
0x4008b70	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4008b75	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008b7a	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008b7c	      0xe800000000	                          call 0x4008b81	       104	stdio2.h	CALL_16
0x4008b81	      0xe9bfeaffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008b86	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4008b8b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008b90	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008b92	      0xe800000000	                          call 0x4008b97	       104	stdio2.h	CALL_16
0x4008b97	      0xe9a9eaffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008b9c	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4008ba1	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008ba6	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008ba8	      0xe800000000	                          call 0x4008bad	       104	stdio2.h	CALL_16
0x4008bad	      0xe993eaffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008bb2	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4008bb7	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008bbc	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008bbe	      0xe800000000	                          call 0x4008bc3	       104	stdio2.h	CALL_16
0x4008bc3	      0xe97deaffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008bc8	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4008bcd	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008bd2	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008bd4	      0xe800000000	                          call 0x4008bd9	       104	stdio2.h	CALL_16
0x4008bd9	      0xe967eaffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008bde	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4008be3	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008be8	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008bea	      0xe800000000	                          call 0x4008bef	       104	stdio2.h	CALL_16
0x4008bef	      0xe951eaffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008bf4	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4008bf9	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008bfe	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008c00	      0xe800000000	                          call 0x4008c05	       104	stdio2.h	CALL_16
0x4008c05	      0xe93beaffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008c0a	        0x4883e840	                           sub rax, 0x40	      2516	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_16	IF_54
0x4008c0e	      0xba05000000	                              mov edx, 5	      2518	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_16	CALL_111
0x4008c13	    0x483dbf000000	                           cmp rax, 0xbf	      2516	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_16	IF_54
0x4008c19	     0xf8726160000	                            ja 0x400a245	      2516	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_16	IF_54
0x4008c1f	            0x31ff	                            xor edi, edi	      2518	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_16	CALL_111
0x4008c21	      0xbe00000000	                              mov esi, 0	      2518	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_16	CALL_111
0x4008c26	      0xe800000000	                          call 0x4008c2b	      2518	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_16	CALL_111
0x4008c2b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008c30	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4008c33	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008c35	      0xe800000000	                          call 0x4008c3a	       104	stdio2.h	CALL_16
0x4008c3a	      0xe906eaffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008c3f	     0xf8645160000	                           jbe 0x400a28a	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4008c45	        0x4983fe0b	                            cmp r14, 0xb	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4008c49	            0x740d	                            je 0x4008c58	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4008c4b	        0x4983fe0d	                            cmp r14, 0xd	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4008c4f	     0xf85f0e9ffff	                           jne 0x4007645	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4008c55	           0xf1f00	                         nop dword [rax]	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4008c58	        0x4883fb18	                           cmp rbx, 0x18	      2622	dwarf.c	FUNCTION_30	SWITCH_7	IF_58
0x4008c5c	     0xf85e3e9ffff	                           jne 0x4007645	      2622	dwarf.c	FUNCTION_30	SWITCH_7	IF_58
0x4008c62	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4008c67	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008c6c	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008c6e	      0x4c89542410	             mov qword [rsp + 0x10], r10	       104	stdio2.h	CALL_16
0x4008c73	      0xe800000000	                          call 0x4008c78	       104	stdio2.h	CALL_16
0x4008c78	        0x4883ec08	                              sub rsp, 8	      2625	dwarf.c	FUNCTION_30	SWITCH_7	IF_58	CALL_130
0x4008c7c	        0xff742408	                    push qword [rsp + 8]	      2625	dwarf.c	FUNCTION_30	SWITCH_7	IF_58	CALL_130
0x4008c80	      0x4c8b542420	            mov r10, qword [rsp + 0x20] 	      2625	dwarf.c	FUNCTION_30	SWITCH_7	IF_58	CALL_130
0x4008c85	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	      2625	dwarf.c	FUNCTION_30	SWITCH_7	IF_58	CALL_130
0x4008c8a	      0x4c8b442458	              mov r8, qword [rsp + 0x58]	      2625	dwarf.c	FUNCTION_30	SWITCH_7	IF_58	CALL_130
0x4008c8f	    0x8b8c24200100	           mov ecx, dword [rsp + 0x120] 	      2625	dwarf.c	FUNCTION_30	SWITCH_7	IF_58	CALL_130
0x4008c96	    0x8b9424180100	           mov edx, dword [rsp + 0x118] 	      2625	dwarf.c	FUNCTION_30	SWITCH_7	IF_58	CALL_130
0x4008c9d	    0x8bb424100100	           mov esi, dword [rsp + 0x110] 	      2625	dwarf.c	FUNCTION_30	SWITCH_7	IF_58	CALL_130
0x4008ca4	          0x4c89d7	                            mov rdi, r10	      2625	dwarf.c	FUNCTION_30	SWITCH_7	IF_58	CALL_130
0x4008ca7	      0xe814b9ffff	     call sym.decode_location_expression	      2625	dwarf.c	FUNCTION_30	SWITCH_7	IF_58	CALL_130
0x4008cac	      0xbf29000000	                           mov edi, 0x29	       104	stdio2.h	CALL_16
0x4008cb1	      0xe800000000	                          call 0x4008cb6	       104	stdio2.h	CALL_16
0x4008cb6	              0x5a	                                 pop rdx	       104	stdio2.h	CALL_16
0x4008cb7	              0x59	                                 pop rcx	       104	stdio2.h	CALL_16
0x4008cb8	      0xe988e9ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008cbd	           0xf1f00	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x4008cc0	      0xbf09000000	                              mov edi, 9	       104	stdio2.h	CALL_16
0x4008cc5	      0xe800000000	                          call 0x4008cca	       104	stdio2.h	CALL_16
0x4008cca	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2396	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_10
0x4008ccf	    0x483d86000000	                           cmp rax, 0x86	      2396	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_10
0x4008cd5	     0xf8743020000	                            ja 0x4008f1e	      2396	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_10
0x4008cdb	    0xff24c5000000	                       jmp qword [rax*8]	      2396	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_10
0x4008ce2	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4008ce7	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008cec	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008cee	      0xe800000000	                          call 0x4008cf3	       104	stdio2.h	CALL_16
0x4008cf3	      0xe94de9ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008cf8	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4008cfd	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008d02	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008d04	      0xe800000000	                          call 0x4008d09	       104	stdio2.h	CALL_16
0x4008d09	      0xe937e9ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008d0e	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4008d13	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008d18	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008d1a	      0xe800000000	                          call 0x4008d1f	       104	stdio2.h	CALL_16
0x4008d1f	      0xe921e9ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008d24	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4008d29	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008d2e	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008d30	      0xe800000000	                          call 0x4008d35	       104	stdio2.h	CALL_16
0x4008d35	      0xe90be9ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008d3a	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4008d3f	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008d44	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008d46	      0xe800000000	                          call 0x4008d4b	       104	stdio2.h	CALL_16
0x4008d4b	      0xe9f5e8ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008d50	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4008d55	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008d5a	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008d5c	      0xe800000000	                          call 0x4008d61	       104	stdio2.h	CALL_16
0x4008d61	      0xe9dfe8ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008d66	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4008d6b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008d70	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008d72	      0xe800000000	                          call 0x4008d77	       104	stdio2.h	CALL_16
0x4008d77	      0xe9c9e8ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008d7c	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4008d81	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008d86	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008d88	      0xe800000000	                          call 0x4008d8d	       104	stdio2.h	CALL_16
0x4008d8d	      0xe9b3e8ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008d92	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4008d97	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008d9c	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008d9e	      0xe800000000	                          call 0x4008da3	       104	stdio2.h	CALL_16
0x4008da3	      0xe99de8ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008da8	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4008dad	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008db2	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008db4	      0xe800000000	                          call 0x4008db9	       104	stdio2.h	CALL_16
0x4008db9	      0xe987e8ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008dbe	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4008dc3	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008dc8	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008dca	      0xe800000000	                          call 0x4008dcf	       104	stdio2.h	CALL_16
0x4008dcf	      0xe971e8ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008dd4	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4008dd9	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008dde	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008de0	      0xe800000000	                          call 0x4008de5	       104	stdio2.h	CALL_16
0x4008de5	      0xe95be8ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008dea	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4008def	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008df4	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008df6	      0xe800000000	                          call 0x4008dfb	       104	stdio2.h	CALL_16
0x4008dfb	      0xe945e8ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008e00	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4008e05	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008e0a	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008e0c	      0xe800000000	                          call 0x4008e11	       104	stdio2.h	CALL_16
0x4008e11	      0xe92fe8ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008e16	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4008e1b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008e20	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008e22	      0xe800000000	                          call 0x4008e27	       104	stdio2.h	CALL_16
0x4008e27	      0xe919e8ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008e2c	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4008e31	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008e36	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008e38	      0xe800000000	                          call 0x4008e3d	       104	stdio2.h	CALL_16
0x4008e3d	      0xe903e8ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008e42	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4008e47	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008e4c	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008e4e	      0xe800000000	                          call 0x4008e53	       104	stdio2.h	CALL_16
0x4008e53	      0xe9ede7ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008e58	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4008e5d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008e62	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008e64	      0xe800000000	                          call 0x4008e69	       104	stdio2.h	CALL_16
0x4008e69	      0xe9d7e7ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008e6e	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4008e73	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008e78	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008e7a	      0xe800000000	                          call 0x4008e7f	       104	stdio2.h	CALL_16
0x4008e7f	      0xe9c1e7ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008e84	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4008e89	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008e8e	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008e90	      0xe800000000	                          call 0x4008e95	       104	stdio2.h	CALL_16
0x4008e95	      0xe9abe7ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008e9a	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4008e9f	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008ea4	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008ea6	      0xe800000000	                          call 0x4008eab	       104	stdio2.h	CALL_16
0x4008eab	      0xe995e7ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008eb0	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4008eb5	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008eba	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008ebc	      0xe800000000	                          call 0x4008ec1	       104	stdio2.h	CALL_16
0x4008ec1	      0xe97fe7ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008ec6	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4008ecb	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008ed0	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008ed2	      0xe800000000	                          call 0x4008ed7	       104	stdio2.h	CALL_16
0x4008ed7	      0xe969e7ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008edc	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4008ee1	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008ee6	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008ee8	      0xe800000000	                          call 0x4008eed	       104	stdio2.h	CALL_16
0x4008eed	      0xe953e7ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008ef2	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4008ef7	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008efc	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008efe	      0xe800000000	                          call 0x4008f03	       104	stdio2.h	CALL_16
0x4008f03	      0xe93de7ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008f08	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4008f0d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008f12	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008f14	      0xe800000000	                          call 0x4008f19	       104	stdio2.h	CALL_16
0x4008f19	      0xe927e7ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008f1e	        0x4883c080	             add rax, 0xffffffffffffff80	      2432	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_10	IF_52
0x4008f22	      0xba05000000	                              mov edx, 5	      2434	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_10	CALL_103
0x4008f27	        0x4883f87f	                           cmp rax, 0x7f	      2432	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_10	IF_52
0x4008f2b	     0xf876a170000	                            ja 0x400a69b	      2432	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_10	IF_52
0x4008f31	            0x31ff	                            xor edi, edi	      2434	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_10	CALL_103
0x4008f33	      0xbe00000000	                              mov esi, 0	      2434	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_10	CALL_103
0x4008f38	      0xe800000000	                          call 0x4008f3d	      2434	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_10	CALL_103
0x4008f3d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008f42	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4008f45	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008f47	      0xe800000000	                          call 0x4008f4c	       104	stdio2.h	CALL_16
0x4008f4c	      0xe9f4e6ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008f51	     0xf1f80000000	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x4008f58	      0xbf09000000	                              mov edi, 9	       104	stdio2.h	CALL_16
0x4008f5d	      0xe800000000	                          call 0x4008f62	       104	stdio2.h	CALL_16
0x4008f62	    0x48837c244805	               cmp qword [rsp + 0x48], 5	      2537	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18
0x4008f68	      0xba05000000	                              mov edx, 5	      2544	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_119
0x4008f6d	     0xf87ac000000	                            ja 0x400901f	      2537	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18
0x4008f73	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2537	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18
0x4008f78	    0xff24c5000000	                       jmp qword [rax*8]	      2537	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18
0x4008f7f	            0x31ff	                            xor edi, edi	      2543	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_118
0x4008f81	      0xbe00000000	                              mov esi, 0	      2543	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_118
0x4008f86	      0xe800000000	                          call 0x4008f8b	      2543	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_118
0x4008f8b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008f90	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4008f93	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008f95	      0xe800000000	                          call 0x4008f9a	       104	stdio2.h	CALL_16
0x4008f9a	      0xe9a6e6ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008f9f	            0x31ff	                            xor edi, edi	      2542	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_117
0x4008fa1	      0xbe00000000	                              mov esi, 0	      2542	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_117
0x4008fa6	      0xe800000000	                          call 0x4008fab	      2542	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_117
0x4008fab	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008fb0	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4008fb3	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008fb5	      0xe800000000	                          call 0x4008fba	       104	stdio2.h	CALL_16
0x4008fba	      0xe986e6ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008fbf	            0x31ff	                            xor edi, edi	      2541	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_116
0x4008fc1	      0xbe00000000	                              mov esi, 0	      2541	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_116
0x4008fc6	      0xe800000000	                          call 0x4008fcb	      2541	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_116
0x4008fcb	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008fd0	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4008fd3	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008fd5	      0xe800000000	                          call 0x4008fda	       104	stdio2.h	CALL_16
0x4008fda	      0xe966e6ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008fdf	            0x31ff	                            xor edi, edi	      2540	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_115
0x4008fe1	      0xbe00000000	                              mov esi, 0	      2540	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_115
0x4008fe6	      0xe800000000	                          call 0x4008feb	      2540	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_115
0x4008feb	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4008ff0	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4008ff3	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4008ff5	      0xe800000000	                          call 0x4008ffa	       104	stdio2.h	CALL_16
0x4008ffa	      0xe946e6ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4008fff	            0x31ff	                            xor edi, edi	      2539	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_114
0x4009001	      0xbe00000000	                              mov esi, 0	      2539	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_114
0x4009006	      0xe800000000	                          call 0x400900b	      2539	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_114
0x400900b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4009010	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4009013	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4009015	      0xe800000000	                          call 0x400901a	       104	stdio2.h	CALL_16
0x400901a	      0xe926e6ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400901f	            0x31ff	                            xor edi, edi	      2544	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_119
0x4009021	      0xbe00000000	                              mov esi, 0	      2544	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_119
0x4009026	      0xe800000000	                          call 0x400902b	      2544	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_18	CALL_119
0x400902b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4009030	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4009033	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4009035	      0xe800000000	                          call 0x400903a	       104	stdio2.h	CALL_16
0x400903a	      0xe906e6ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400903f	              0x90	                                     nop	       104	stdio2.h	CALL_16
0x4009040	      0xbf09000000	                              mov edi, 9	       104	stdio2.h	CALL_16
0x4009045	      0xe800000000	                          call 0x400904a	       104	stdio2.h	CALL_16
0x400904a	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2561	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_20
0x400904f	          0x4885c0	                           test rax, rax	      2561	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_20
0x4009052	     0xf8454070000	                            je 0x40097ac	      2561	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_20
0x4009058	        0x4883f801	                              cmp rax, 1	      2561	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_20
0x400905c	     0xf8525070000	                           jne 0x4009787	      2561	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_20
0x4009062	            0x31ff	                            xor edi, edi	      2564	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_20	CALL_125
0x4009064	      0xba05000000	                              mov edx, 5	      2564	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_20	CALL_125
0x4009069	      0xbe00000000	                              mov esi, 0	      2564	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_20	CALL_125
0x400906e	      0xe800000000	                          call 0x4009073	      2564	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_20	CALL_125
0x4009073	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4009078	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400907b	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400907d	      0xe800000000	                          call 0x4009082	       104	stdio2.h	CALL_16
0x4009082	      0xe9bee5ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4009087	    0x660f1f840000	                    nop word [rax + rax]	       104	stdio2.h	CALL_16
0x4009090	      0xbf09000000	                              mov edi, 9	       104	stdio2.h	CALL_16
0x4009095	      0xe800000000	                          call 0x400909a	       104	stdio2.h	CALL_16
0x400909a	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2494	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_15
0x400909f	        0x4883f801	                              cmp rax, 1	      2494	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_15
0x40090a3	     0xf843e0d0000	                            je 0x4009de7	      2494	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_15
0x40090a9	     0xf82220d0000	                            jb 0x4009dd1	      2494	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_15
0x40090af	        0x4883f802	                              cmp rax, 2	      2494	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_15
0x40090b3	     0xf84020d0000	                            je 0x4009dbb	      2494	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_15
0x40090b9	        0x4883f803	                              cmp rax, 3	      2494	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_15
0x40090bd	     0xf85d30c0000	                           jne 0x4009d96	      2494	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_15
0x40090c3	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x40090c8	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40090cd	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40090cf	      0xe800000000	                          call 0x40090d4	       104	stdio2.h	CALL_16
0x40090d4	      0xe96ce5ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x40090d9	     0xf1f80000000	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x40090e0	        0x4883fb20	                           cmp rbx, 0x20	      2634	dwarf.c	FUNCTION_30	SWITCH_7	IF_59
0x40090e4	     0xf845be5ffff	                            je 0x4007645	      2634	dwarf.c	FUNCTION_30	SWITCH_7	IF_59
0x40090ea	    0x4881fb201f00	                         cmp rbx, 0x1f20	      2634	dwarf.c	FUNCTION_30	SWITCH_7	IF_59
0x40090f1	     0xf844ee5ffff	                            je 0x4007645	      2634	dwarf.c	FUNCTION_30	SWITCH_7	IF_59
0x40090f7	        0x488d43ef	                   lea rax, [rbx - 0x11]	      2638	dwarf.c	FUNCTION_30	SWITCH_7	IF_60
0x40090fb	        0x4883f802	                              cmp rax, 2	      2638	dwarf.c	FUNCTION_30	SWITCH_7	IF_60
0x40090ff	     0xf8607070000	                           jbe 0x400980c	      2638	dwarf.c	FUNCTION_30	SWITCH_7	IF_60
0x4009105	        0x4883fb15	                           cmp rbx, 0x15	      2638	dwarf.c	FUNCTION_30	SWITCH_7	IF_60
0x4009109	     0xf84fd060000	                            je 0x400980c	      2638	dwarf.c	FUNCTION_30	SWITCH_7	IF_60
0x400910f	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      2638	dwarf.c	FUNCTION_30	SWITCH_7	IF_60
0x4009114	        0x488b0424	                    mov rax, qword [rsp]	      2644	dwarf.c	FUNCTION_30	SWITCH_7	IF_61
0x4009118	        0x48397030	            cmp qword [rax + 0x30], rsi 	      2644	dwarf.c	FUNCTION_30	SWITCH_7	IF_61
0x400911c	     0xf86980a0000	                           jbe 0x4009bba	      2644	dwarf.c	FUNCTION_30	SWITCH_7	IF_61
0x4009122	        0x488b0424	                    mov rax, qword [rsp]	       356	dwarf.c	FUNCTION_10	CALL_1
0x4009126	          0x4889f7	                            mov rdi, rsi	       356	dwarf.c	FUNCTION_10	CALL_1
0x4009129	          0x4c89e9	                            mov rcx, r13	       356	dwarf.c	FUNCTION_10	CALL_1
0x400912c	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x400912e	            0x31f6	                            xor esi, esi	       356	dwarf.c	FUNCTION_10	CALL_1
0x4009130	        0x48037820	             add rdi, qword [rax + 0x20]	       356	dwarf.c	FUNCTION_10	CALL_1
0x4009134	      0xe800000000	                          call 0x4009139	       356	dwarf.c	FUNCTION_10	CALL_1
0x4009139	            0x31ff	                            xor edi, edi	      2655	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	CALL_135
0x400913b	          0x4989c4	                            mov r12, rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x400913e	      0xba05000000	                              mov edx, 5	      2655	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	CALL_135
0x4009143	      0xbe00000000	                              mov esi, 0	      2655	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	CALL_135
0x4009148	      0xe800000000	                          call 0x400914d	      2655	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	CALL_135
0x400914d	          0x4c89e2	                            mov rdx, r12	       104	stdio2.h	CALL_16
0x4009150	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4009153	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4009158	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400915a	      0xe800000000	                          call 0x400915f	       104	stdio2.h	CALL_16
0x400915f	        0x4883fb10	                           cmp rbx, 0x10	      2659	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	IF_62
0x4009163	            0x742d	                            je 0x4009192	      2659	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	IF_62
0x4009165	    0x488b05000000	            mov rax, qword [0x0400916c] 	      2661	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	IF_62	FOR_1
0x400916c	          0x4885c0	                           test rax, rax	      2661	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	IF_62	FOR_1
0x400916f	            0x7421	                            je 0x4009192	      2661	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	IF_62	FOR_1
0x4009171	          0x4c3b20	                    cmp r12, qword [rax]	      2662	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	IF_62	FOR_1	IF_63
0x4009174	            0x7513	                           jne 0x4009189	      2662	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	IF_62	FOR_1	IF_63
0x4009176	      0xe9280d0000	                           jmp 0x4009ea3	      2662	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	IF_62	FOR_1	IF_63
0x400917b	       0xf1f440000	                   nop dword [rax + rax]	      2662	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	IF_62	FOR_1	IF_63
0x4009180	          0x4c3920	                    cmp qword [rax], r12	      2662	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	IF_62	FOR_1	IF_63
0x4009183	     0xf841a0d0000	                            je 0x4009ea3	      2662	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	IF_62	FOR_1	IF_63
0x4009189	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2661	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	IF_62	FOR_1
0x400918d	          0x4885c0	                           test rax, rax	      2661	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	IF_62	FOR_1
0x4009190	            0x75ee	                           jne 0x4009180	      2661	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	IF_62	FOR_1
0x4009192	      0xbf5d000000	                           mov edi, 0x5d	       104	stdio2.h	CALL_16
0x4009197	      0xe800000000	                          call 0x400919c	       104	stdio2.h	CALL_16
0x400919c	      0xe9a4e4ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x40091a1	     0xf1f80000000	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x40091a8	      0xbf09000000	                              mov edi, 9	       104	stdio2.h	CALL_16
0x40091ad	      0xe800000000	                          call 0x40091b2	       104	stdio2.h	CALL_16
0x40091b2	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x40091b7	        0x4883fe13	                           cmp rsi, 0x13	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x40091bb	     0xf8421140000	                            je 0x400a5e2	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x40091c1	     0xf8774040000	                            ja 0x400963b	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x40091c7	        0x4883fe09	                              cmp rsi, 9	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x40091cb	     0xf848f110000	                            je 0x400a360	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x40091d1	     0xf860c0b0000	                           jbe 0x4009ce3	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x40091d7	        0x4883fe0e	                            cmp rsi, 0xe	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x40091db	     0xf8445120000	                            je 0x400a426	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x40091e1	     0xf87530f0000	                            ja 0x400a13a	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x40091e7	        0x4883fe0b	                            cmp rsi, 0xb	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x40091eb	     0xf849b110000	                            je 0x400a38c	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x40091f1	     0xf827f110000	                            jb 0x400a376	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x40091f7	        0x4883fe0c	                            cmp rsi, 0xc	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x40091fb	     0xf8463140000	                            je 0x400a664	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x4009201	        0x4883fe0d	                            cmp rsi, 0xd	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x4009205	     0xf858d130000	                           jne 0x400a598	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400920b	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4009210	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4009215	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4009217	      0xe800000000	                          call 0x400921c	       104	stdio2.h	CALL_16
0x400921c	      0xe924e4ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4009221	     0xf1f80000000	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x4009228	    0x488d83e0e0ff	                 lea rax, [rbx - 0x1f20]	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x400922f	        0x4883f801	                              cmp rax, 1	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4009233	     0xf86fde9ffff	                           jbe 0x4007c36	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4009239	      0xe9e2e9ffff	                           jmp 0x4007c20	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x400923e	            0x6690	                                     nop	      1781	dwarf.c	FUNCTION_30	SWITCH_1
0x4009240	        0x4983fe48	                           cmp r14, 0x48	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009244	     0xf84b4ebffff	                            je 0x4007dfe	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400924a	     0xf862b100000	                           jbe 0x400a27b	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009250	        0x4983fe4a	                           cmp r14, 0x4a	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009254	     0xf84a4ebffff	                            je 0x4007dfe	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400925a	        0x4983fe4c	                           cmp r14, 0x4c	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400925e	     0xf85e1e3ffff	                           jne 0x4007645	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009264	      0xbf09000000	                              mov edi, 9	       104	stdio2.h	CALL_16
0x4009269	      0xe800000000	                          call 0x400926e	       104	stdio2.h	CALL_16
0x400926e	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2483	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_14
0x4009273	        0x4883f801	                              cmp rax, 1	      2483	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_14
0x4009277	     0xf84f5060000	                            je 0x4009972	      2483	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_14
0x400927d	     0xf82d9060000	                            jb 0x400995c	      2483	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_14
0x4009283	        0x4883f802	                              cmp rax, 2	      2483	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_14
0x4009287	     0xf85aa060000	                           jne 0x4009937	      2483	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_14
0x400928d	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4009292	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4009297	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4009299	      0xe800000000	                          call 0x400929e	       104	stdio2.h	CALL_16
0x400929e	      0xe9a2e3ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x40092a3	       0xf1f440000	                   nop dword [rax + rax]	       104	stdio2.h	CALL_16
0x40092a8	    0x8b9424080100	           mov edx, dword [rsp + 0x108] 	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x40092af	          0x83fa08	                              cmp edx, 8	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x40092b2	     0xf8798050000	                            ja 0x4009850	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x40092b8	    0x8b8424080100	           mov eax, dword [rsp + 0x108] 	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x40092bf	          0x4c01e0	                            add rax, r12	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x40092c2	          0x4939c5	                            cmp r13, rax	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x40092c5	            0x770b	                            ja 0x40092d2	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x40092c7	          0x4d39ec	                            cmp r12, r13	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x40092ca	            0x7314	                           jae 0x40092e0	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x40092cc	          0x4489ea	                           mov edx, r13d	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x40092cf	          0x4429e2	                           sub edx, r12d	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x40092d2	          0x8d42ff	                      lea eax, [rdx - 1]	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x40092d5	            0x89d6	                            mov esi, edx	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x40092d7	          0x83f807	                              cmp eax, 7	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x40092da	     0xf86bc050000	                           jbe 0x400989c	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x40092e0	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x40092e9	          0x4c89e5	                            mov rbp, r12	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x40092ec	    0x4803ac240801	            add rbp, qword [rsp + 0x108]	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x40092f4	      0xe9fce3ffff	                           jmp 0x40076f5	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x40092f9	     0xf1f80000000	                         nop dword [rax]	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x4009300	        0x4983fe19	                           cmp r14, 0x19	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009304	     0xf84f4eaffff	                            je 0x4007dfe	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400930a	        0x4983fe20	                           cmp r14, 0x20	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400930e	     0xf8531e3ffff	                           jne 0x4007645	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009314	      0xbf09000000	                              mov edi, 9	       104	stdio2.h	CALL_16
0x4009319	      0xe800000000	                          call 0x400931e	       104	stdio2.h	CALL_16
0x400931e	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      2314	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8
0x4009323	        0x4883fe01	                              cmp rsi, 1	      2314	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8
0x4009327	     0xf84510b0000	                            je 0x4009e7e	      2314	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8
0x400932d	     0xf82260b0000	                            jb 0x4009e59	      2314	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8
0x4009333	        0x4883fe02	                              cmp rsi, 2	      2314	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8
0x4009337	     0xf84f70a0000	                            je 0x4009e34	      2314	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8
0x400933d	        0x4883fe03	                              cmp rsi, 3	      2314	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8
0x4009341	     0xf85b60a0000	                           jne 0x4009dfd	      2314	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8
0x4009347	            0x31ff	                            xor edi, edi	      2326	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_96
0x4009349	      0xba05000000	                              mov edx, 5	      2326	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_96
0x400934e	      0xbe00000000	                              mov esi, 0	      2326	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_96
0x4009353	      0xe800000000	                          call 0x4009358	      2326	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_96
0x4009358	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400935d	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4009360	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4009362	      0xe800000000	                          call 0x4009367	       104	stdio2.h	CALL_16
0x4009367	      0xe9d9e2ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400936c	         0xf1f4000	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x4009370	      0xba05000000	                              mov edx, 5	      2591	dwarf.c	FUNCTION_30	SWITCH_7	CALL_127
0x4009375	      0xbe00000000	                              mov esi, 0	      2591	dwarf.c	FUNCTION_30	SWITCH_7	CALL_127
0x400937a	            0x31ff	                            xor edi, edi	      2591	dwarf.c	FUNCTION_30	SWITCH_7	CALL_127
0x400937c	      0x4c89542410	             mov qword [rsp + 0x10], r10	      2591	dwarf.c	FUNCTION_30	SWITCH_7	CALL_127
0x4009381	      0xe800000000	                          call 0x4009386	      2591	dwarf.c	FUNCTION_30	SWITCH_7	CALL_127
0x4009386	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400938b	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400938e	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4009390	      0xe800000000	                          call 0x4009395	       104	stdio2.h	CALL_16
0x4009395	      0x4c8b542410	            mov r10, qword [rsp + 0x10] 	       104	stdio2.h	CALL_16
0x400939a	      0xe981eaffff	                           jmp 0x4007e20	       104	stdio2.h	CALL_16
0x400939f	              0x90	                                     nop	       104	stdio2.h	CALL_16
0x40093a0	            0x89f1	                            mov ecx, esi	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40093a2	            0x31ff	                            xor edi, edi	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40093a4	    0x41b805000000	                              mov r8d, 5	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40093aa	      0xba00000000	                              mov edx, 0	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40093af	      0xbe00000000	                              mov esi, 0	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40093b4	      0x44894c2420	             mov dword [rsp + 0x20], r9d	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40093b9	      0x4c895c2418	             mov qword [rsp + 0x18], r11	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40093be	      0xe800000000	                          call 0x40093c3	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40093c3	    0x8bb424080100	           mov esi, dword [rsp + 0x108] 	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40093ca	          0x4889c7	                            mov rdi, rax	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40093cd	      0xba08000000	                              mov edx, 8	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40093d2	            0x31c0	                            xor eax, eax	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40093d4	      0xe800000000	                          call 0x40093d9	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40093d9	      0x498d442408	                      lea rax, [r12 + 8]	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40093de	      0x4c8b5c2418	            mov r11, qword [rsp + 0x18] 	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40093e3	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40093e8	          0x4939c5	                            cmp r13, rax	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40093eb	     0xf8664e8ffff	                           jbe 0x4007c55	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40093f1	      0xbe08000000	                              mov esi, 8	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40093f6	      0x44894c2420	             mov dword [rsp + 0x20], r9d	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x40093fb	      0x4c895c2418	             mov qword [rsp + 0x18], r11	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x4009400	          0x4c89e7	                            mov rdi, r12	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x4009403	    0xff1500000000	                 call qword [0x04009409]	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x4009409	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x400940e	      0x4889442448	             mov qword [rsp + 0x48], rax	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x4009413	      0x4c8b5c2418	            mov r11, qword [rsp + 0x18] 	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x4009418	      0xe958e8ffff	                           jmp 0x4007c75	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x400941d	           0xf1f00	                         nop dword [rax]	      1805	dwarf.c	FUNCTION_30	SWITCH_1
0x4009420	            0x89f1	                            mov ecx, esi	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x4009422	            0x31ff	                            xor edi, edi	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x4009424	    0x41b805000000	                              mov r8d, 5	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400942a	      0xba00000000	                              mov edx, 0	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400942f	      0xbe00000000	                              mov esi, 0	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x4009434	      0x44894c2418	             mov dword [rsp + 0x18], r9d	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x4009439	      0xe800000000	                          call 0x400943e	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400943e	    0x8bb424000100	           mov esi, dword [rsp + 0x100] 	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x4009445	          0x4889c7	                            mov rdi, rax	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x4009448	      0xba08000000	                              mov edx, 8	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400944d	            0x31c0	                            xor eax, eax	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400944f	      0xe800000000	                          call 0x4009454	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x4009454	      0x498d442408	                      lea rax, [r12 + 8]	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x4009459	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400945e	          0x4939c5	                            cmp r13, rax	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x4009461	     0xf86f8e3ffff	                           jbe 0x400785f	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x4009467	      0xbe08000000	                              mov esi, 8	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400946c	      0x44894c2418	             mov dword [rsp + 0x18], r9d	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x4009471	          0x4c89e7	                            mov rdi, r12	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x4009474	    0xff1500000000	                 call qword [0x0400947a]	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400947a	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x400947f	      0x4889442448	             mov qword [rsp + 0x48], rax	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x4009484	      0xe9f6e3ffff	                           jmp 0x400787f	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x4009489	     0xf1f80000000	                         nop dword [rax]	      1797	dwarf.c	FUNCTION_30	SWITCH_1
0x4009490	          0x4889df	                            mov rdi, rbx	      1848	dwarf.c	FUNCTION_30	SWITCH_1	CALL_9
0x4009493	      0x4c895c2418	             mov qword [rsp + 0x18], r11	      1848	dwarf.c	FUNCTION_30	SWITCH_1	CALL_9
0x4009498	      0x44894c2420	             mov dword [rsp + 0x20], r9d	      1848	dwarf.c	FUNCTION_30	SWITCH_1	CALL_9
0x400949d	      0xe83e89ffff	                  call sym.get_FORM_name	      1848	dwarf.c	FUNCTION_30	SWITCH_1	CALL_9
0x40094a2	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	      1848	dwarf.c	FUNCTION_30	SWITCH_1	CALL_9
0x40094a7	          0x4889c1	                            mov rcx, rax	       104	stdio2.h	CALL_16
0x40094aa	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x40094af	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40094b4	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40094b6	        0x410fbee9	                          movsx ebp, r9b	      1848	dwarf.c	FUNCTION_30	SWITCH_1	CALL_9
0x40094ba	            0x89ea	                            mov edx, ebp	       104	stdio2.h	CALL_16
0x40094bc	      0xe800000000	                          call 0x40094c1	       104	stdio2.h	CALL_16
0x40094c1	      0x4c8b5c2418	            mov r11, qword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x40094c6	      0xe9f2e2ffff	                           jmp 0x40077bd	       104	stdio2.h	CALL_16
0x40094cb	       0xf1f440000	                   nop dword [rax + rax]	       104	stdio2.h	CALL_16
0x40094d0	        0x488d4508	                      lea rax, [rbp + 8]	      1942	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x40094d4	          0x4939c5	                            cmp r13, rax	      1942	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x40094d7	     0xf83e5070000	                           jae 0x4009cc2	      1942	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x40094dd	    0x48c744245000	               mov qword [rsp + 0x50], 0	      1942	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x40094e6	    0x48c744245800	               mov qword [rsp + 0x58], 0	      1942	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x40094ef	        0x4883c510	                           add rbp, 0x10	      1943	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x40094f3	          0x4939ed	                            cmp r13, rbp	      1943	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x40094f6	     0xf83a5070000	                           jae 0x4009ca1	      1943	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x40094fc	    0x48c744246000	               mov qword [rsp + 0x60], 0	      1943	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x4009505	    0x48c744246800	               mov qword [rsp + 0x68], 0	      1943	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x400950e	          0x4531c9	                            xor r9d, r9d	      1943	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x4009511	          0x4531c0	                            xor r8d, r8d	      1943	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x4009514	    0x48813d000000	               cmp qword [0x0400951f], 0	      1944	dwarf.c	FUNCTION_30	SWITCH_2	IF_16	IF_17
0x400951f	     0xf84e00b0000	                            je 0x400a105	      1944	dwarf.c	FUNCTION_30	SWITCH_2	IF_16	IF_17
0x4009525	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	      1944	dwarf.c	FUNCTION_30	SWITCH_2	IF_16	IF_17
0x400952a	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	      1944	dwarf.c	FUNCTION_30	SWITCH_2	IF_16	IF_17
0x400952f	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4009534	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4009539	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400953b	      0xe800000000	                          call 0x4009540	       104	stdio2.h	CALL_16
0x4009540	          0x4531d2	                          xor r10d, r10d	       104	stdio2.h	CALL_16
0x4009543	      0xe938e5ffff	                           jmp 0x4007a80	       104	stdio2.h	CALL_16
0x4009548	     0xf1f84000000	                   nop dword [rax + rax]	       104	stdio2.h	CALL_16
0x4009550	          0x4531d2	                          xor r10d, r10d	      1771	dwarf.c	FUNCTION_30
0x4009553	      0xe9f0e3ffff	                           jmp 0x4007948	      1771	dwarf.c	FUNCTION_30
0x4009558	     0xf1f84000000	                   nop dword [rax + rax]	      1771	dwarf.c	FUNCTION_30
0x4009560	        0x488d4508	                      lea rax, [rbp + 8]	      2105	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x4009564	          0x4939c5	                            cmp r13, rax	      2105	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x4009567	      0x4889442418	             mov qword [rsp + 0x18], rax	      2105	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x400956c	     0xf8304070000	                           jae 0x4009c76	      2105	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x4009572	    0x48c744246800	               mov qword [rsp + 0x68], 0	      2105	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x400957b	    0x48c744244800	               mov qword [rsp + 0x48], 0	      2105	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x4009584	            0x31ff	                            xor edi, edi	      2105	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x4009586	            0x31f6	                            xor esi, esi	      2105	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x4009588	      0x488d542470	                   lea rdx, [rsp + 0x70]	      2106	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x400958d	      0x44894c2420	             mov dword [rsp + 0x20], r9d	      2106	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x4009592	      0xe87999ffff	    call sym.dwarf_vmatoa64.constprop.26	      2106	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x4009597	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	       104	stdio2.h	CALL_16
0x400959c	          0x4889c1	                            mov rcx, rax	       104	stdio2.h	CALL_16
0x400959f	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x40095a4	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40095a9	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40095ab	        0x410fbed1	                          movsx edx, r9b	       104	stdio2.h	CALL_16
0x40095af	      0xe800000000	                          call 0x40095b4	       104	stdio2.h	CALL_16
0x40095b4	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x40095b9	          0x4531d2	                          xor r10d, r10d	       104	stdio2.h	CALL_16
0x40095bc	      0xe9bfe4ffff	                           jmp 0x4007a80	       104	stdio2.h	CALL_16
0x40095c1	     0xf1f80000000	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x40095c8	    0x8b9424000100	           mov edx, dword [rsp + 0x100] 	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x40095cf	          0x83fa08	                              cmp edx, 8	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x40095d2	     0xf8755070000	                            ja 0x4009d2d	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x40095d8	    0x8b8424000100	           mov eax, dword [rsp + 0x100] 	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x40095df	          0x4c01e0	                            add rax, r12	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x40095e2	          0x4939c5	                            cmp r13, rax	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x40095e5	            0x770b	                            ja 0x40095f2	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x40095e7	          0x4d39ec	                            cmp r12, r13	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x40095ea	            0x7312	                           jae 0x40095fe	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x40095ec	          0x4489ea	                           mov edx, r13d	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x40095ef	          0x4429e2	                           sub edx, r12d	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x40095f2	          0x8d42ff	                      lea eax, [rdx - 1]	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x40095f5	          0x83f807	                              cmp eax, 7	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x40095f8	     0xf86f00b0000	                           jbe 0x400a1ee	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x40095fe	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x4009607	          0x4c89e5	                            mov rbp, r12	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x400960a	    0x4803ac240001	            add rbp, qword [rsp + 0x100]	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x4009612	      0xe9dee0ffff	                           jmp 0x40076f5	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x4009617	      0x488d742444	                   lea rsi, [rsp + 0x44]	       348	dwarf.c	FUNCTION_9	CALL_1
0x400961c	          0x4c89e7	                            mov rdi, r12	       348	dwarf.c	FUNCTION_9	CALL_1
0x400961f	          0x4c89e9	                            mov rcx, r13	       348	dwarf.c	FUNCTION_9	CALL_1
0x4009622	      0xba01000000	                              mov edx, 1	       348	dwarf.c	FUNCTION_9	CALL_1
0x4009627	      0xe800000000	                          call 0x400962c	       348	dwarf.c	FUNCTION_9	CALL_1
0x400962c	          0x4989c3	                            mov r11, rax	       348	dwarf.c	FUNCTION_9	CALL_1
0x400962f	        0x8b442444	            mov eax, dword [rsp + 0x44] 	      1852	dwarf.c	FUNCTION_30	SWITCH_1	IF_5
0x4009633	          0x4901c4	                            add r12, rax	      1852	dwarf.c	FUNCTION_30	SWITCH_1	IF_5
0x4009636	      0xe98ce1ffff	                           jmp 0x40077c7	      1852	dwarf.c	FUNCTION_30	SWITCH_1	IF_5
0x400963b	        0x4883fe1d	                           cmp rsi, 0x1d	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400963f	     0xf84d80e0000	                            je 0x400a51d	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x4009645	     0xf8725050000	                            ja 0x4009b70	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400964b	        0x4883fe18	                           cmp rsi, 0x18	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400964f	     0xf84290e0000	                            je 0x400a47e	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x4009655	     0xf87190b0000	                            ja 0x400a174	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400965b	        0x4883fe15	                           cmp rsi, 0x15	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400965f	     0xf84690d0000	                            je 0x400a3ce	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x4009665	     0xf824d0d0000	                            jb 0x400a3b8	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400966b	        0x4883fe16	                           cmp rsi, 0x16	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400966f	     0xf842d0d0000	                            je 0x400a3a2	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x4009675	        0x4883fe17	                           cmp rsi, 0x17	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x4009679	     0xf85190f0000	                           jne 0x400a598	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400967f	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4009684	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4009689	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400968b	      0xe800000000	                          call 0x4009690	       104	stdio2.h	CALL_16
0x4009690	      0xe9b0dfffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4009695	           0xf1f00	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x4009698	          0x4489d9	                           mov ecx, r11d	       104	stdio2.h	CALL_16
0x400969b	        0x410fbed1	                          movsx edx, r9b	       104	stdio2.h	CALL_16
0x400969f	          0x4989e8	                             mov r8, rbp	       104	stdio2.h	CALL_16
0x40096a2	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x40096a7	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40096ac	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40096ae	      0x4c895c2418	             mov qword [rsp + 0x18], r11	       104	stdio2.h	CALL_16
0x40096b3	      0xe800000000	                          call 0x40096b8	       104	stdio2.h	CALL_16
0x40096b8	      0x4c8b5c2418	            mov r11, qword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x40096bd	      0xe9e3edffff	                           jmp 0x40084a5	       104	stdio2.h	CALL_16
0x40096c2	    0x488b3d000000	            mov rdi, qword [0x040096c9] 	       798	dwarf.c	FUNCTION_16	IF_1
0x40096c9	    0x488bb4240001	           mov rsi, qword [rsp + 0x100] 	      2114	dwarf.c	FUNCTION_30	SWITCH_2	IF_36	CALL_60
0x40096d1	    0x480faf742448	            imul rsi, qword [rsp + 0x48]	      2114	dwarf.c	FUNCTION_30	SWITCH_2	IF_36	CALL_60
0x40096d7	          0x4885ff	                           test rdi, rdi	       798	dwarf.c	FUNCTION_16	IF_1
0x40096da	     0xf849a0f0000	                            je 0x400a67a	       798	dwarf.c	FUNCTION_16	IF_1
0x40096e0	          0x4889f0	                            mov rax, rsi	       801	dwarf.c	FUNCTION_16	IF_2
0x40096e3	    0x480384240001	            add rax, qword [rsp + 0x100]	       801	dwarf.c	FUNCTION_16	IF_2
0x40096eb	    0x483b05000000	            cmp rax, qword [0x040096f2] 	       801	dwarf.c	FUNCTION_16	IF_2
0x40096f2	     0xf8756080000	                            ja 0x4009f4e	       801	dwarf.c	FUNCTION_16	IF_2
0x40096f8	      0x44894c2418	             mov dword [rsp + 0x18], r9d	       801	dwarf.c	FUNCTION_16	IF_2
0x40096fd	          0x4801f7	                            add rdi, rsi	       808	dwarf.c	FUNCTION_16	CALL_6
0x4009700	    0x8bb424000100	           mov esi, dword [rsp + 0x100] 	       808	dwarf.c	FUNCTION_16	CALL_6
0x4009707	    0xff1500000000	                 call qword [0x0400970d]	       808	dwarf.c	FUNCTION_16	CALL_6
0x400970d	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400970f	          0x4889c6	                            mov rsi, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009712	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009717	      0xe8e46bffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400971c	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009721	          0x4989c0	                             mov r8, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009724	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009729	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400972b	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009730	      0x44894c2428	             mov dword [rsp + 0x28], r9d	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009735	      0x4c89442420	              mov qword [rsp + 0x20], r8	       246	dwarf.c	FUNCTION_4	CALL_1
0x400973a	      0xe8c16bffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400973f	      0xba05000000	                              mov edx, 5	      2114	dwarf.c	FUNCTION_30	SWITCH_2	IF_36	CALL_60
0x4009744	      0x4889442418	             mov qword [rsp + 0x18], rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009749	      0xbe00000000	                              mov esi, 0	      2114	dwarf.c	FUNCTION_30	SWITCH_2	IF_36	CALL_60
0x400974e	      0xe901eaffff	                           jmp 0x4008154	      2114	dwarf.c	FUNCTION_30	SWITCH_2	IF_36	CALL_60
0x4009753	      0xba05000000	                              mov edx, 5	      1974	dwarf.c	FUNCTION_30	SWITCH_2	IF_19	CALL_26
0x4009758	      0xbe00000000	                              mov esi, 0	      1974	dwarf.c	FUNCTION_30	SWITCH_2	IF_19	CALL_26
0x400975d	            0x31ff	                            xor edi, edi	      1974	dwarf.c	FUNCTION_30	SWITCH_2	IF_19	CALL_26
0x400975f	      0xe800000000	                          call 0x4009764	      1974	dwarf.c	FUNCTION_30	SWITCH_2	IF_19	CALL_26
0x4009764	          0x4889c7	                            mov rdi, rax	      1974	dwarf.c	FUNCTION_30	SWITCH_2	IF_19	CALL_26
0x4009767	            0x31c0	                            xor eax, eax	      1974	dwarf.c	FUNCTION_30	SWITCH_2	IF_19	CALL_26
0x4009769	      0xe800000000	                          call 0x400976e	      1974	dwarf.c	FUNCTION_30	SWITCH_2	IF_19	CALL_26
0x400976e	    0x48c744244800	               mov qword [rsp + 0x48], 0	      1975	dwarf.c	FUNCTION_30	SWITCH_2	IF_19
0x4009777	          0x4d89ea	                            mov r10, r13	      1975	dwarf.c	FUNCTION_30	SWITCH_2	IF_19
0x400977a	          0x4531c0	                            xor r8d, r8d	      1975	dwarf.c	FUNCTION_30	SWITCH_2	IF_19
0x400977d	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      1975	dwarf.c	FUNCTION_30	SWITCH_2	IF_19
0x4009782	      0xe933efffff	                           jmp 0x40086ba	      1975	dwarf.c	FUNCTION_30	SWITCH_2	IF_19
0x4009787	            0x31ff	                            xor edi, edi	      2565	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_20	CALL_126
0x4009789	      0xba05000000	                              mov edx, 5	      2565	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_20	CALL_126
0x400978e	      0xbe00000000	                              mov esi, 0	      2565	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_20	CALL_126
0x4009793	      0xe800000000	                          call 0x4009798	      2565	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_20	CALL_126
0x4009798	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400979d	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40097a0	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40097a2	      0xe800000000	                          call 0x40097a7	       104	stdio2.h	CALL_16
0x40097a7	      0xe999deffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x40097ac	            0x31ff	                            xor edi, edi	      2563	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_20	CALL_124
0x40097ae	      0xba05000000	                              mov edx, 5	      2563	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_20	CALL_124
0x40097b3	      0xbe00000000	                              mov esi, 0	      2563	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_20	CALL_124
0x40097b8	      0xe800000000	                          call 0x40097bd	      2563	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_20	CALL_124
0x40097bd	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40097c2	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40097c5	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40097c7	      0xe800000000	                          call 0x40097cc	       104	stdio2.h	CALL_16
0x40097cc	      0xe974deffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x40097d1	      0xbe08000000	                              mov esi, 8	       104	stdio2.h	CALL_16
0x40097d6	      0x4c89442418	              mov qword [rsp + 0x18], r8	       104	stdio2.h	CALL_16
0x40097db	          0x4889ef	                            mov rdi, rbp	      1928	dwarf.c	FUNCTION_30	SWITCH_2	IF_14	IF_15
0x40097de	    0xff1500000000	                 call qword [0x040097e4]	      1928	dwarf.c	FUNCTION_30	SWITCH_2	IF_14	IF_15
0x40097e4	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      1928	dwarf.c	FUNCTION_30	SWITCH_2	IF_14	IF_15
0x40097e9	      0x4889442448	             mov qword [rsp + 0x48], rax	      1928	dwarf.c	FUNCTION_30	SWITCH_2	IF_14	IF_15
0x40097ee	      0xe990e8ffff	                           jmp 0x4008083	      1928	dwarf.c	FUNCTION_30	SWITCH_2	IF_14	IF_15
0x40097f3	        0x4983fe4a	                           cmp r14, 0x4a	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x40097f7	     0xf8413eaffff	                            je 0x4008210	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x40097fd	        0x4983fe4d	                           cmp r14, 0x4d	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4009801	     0xf8595e2ffff	                           jne 0x4007a9c	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4009807	      0xe904eaffff	                           jmp 0x4008210	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400980c	      0x488b742408	                mov rsi, qword [rsp + 8]	      2642	dwarf.c	FUNCTION_30	SWITCH_7	IF_60
0x4009811	      0x4803742448	             add rsi, qword [rsp + 0x48]	      2642	dwarf.c	FUNCTION_30	SWITCH_7	IF_60
0x4009816	      0x4889742448	             mov qword [rsp + 0x48], rsi	      2642	dwarf.c	FUNCTION_30	SWITCH_7	IF_60
0x400981b	      0xe9f4f8ffff	                           jmp 0x4009114	      2642	dwarf.c	FUNCTION_30	SWITCH_7	IF_60
0x4009820	    0x4981fe830000	                           cmp r14, 0x83	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009827	     0xf83d1e5ffff	                           jae 0x4007dfe	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400982d	        0x4983fe6f	                           cmp r14, 0x6f	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009831	     0xf820edeffff	                            jb 0x4007645	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009837	        0x4983fe70	                           cmp r14, 0x70	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400983b	     0xf8617f4ffff	                           jbe 0x4008c58	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009841	        0x4983fe7e	                           cmp r14, 0x7e	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009845	     0xf84b3e5ffff	                            je 0x4007dfe	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400984b	      0xe9f5ddffff	                           jmp 0x4007645	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009850	            0x89d1	                            mov ecx, edx	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x4009852	            0x31ff	                            xor edi, edi	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x4009854	    0x41b805000000	                              mov r8d, 5	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400985a	      0xba00000000	                              mov edx, 0	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400985f	      0xbe00000000	                              mov esi, 0	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x4009864	      0x44894c2418	             mov dword [rsp + 0x18], r9d	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x4009869	      0xe800000000	                          call 0x400986e	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400986e	    0x8bb424080100	           mov esi, dword [rsp + 0x108] 	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x4009875	          0x4889c7	                            mov rdi, rax	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x4009878	      0xba08000000	                              mov edx, 8	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400987d	            0x31c0	                            xor eax, eax	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400987f	      0xe800000000	                          call 0x4009884	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x4009884	      0x498d442408	                      lea rax, [r12 + 8]	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x4009889	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400988e	          0x4939c5	                            cmp r13, rax	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x4009891	     0xf8630faffff	                           jbe 0x40092c7	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x4009897	      0xbe08000000	                              mov esi, 8	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x400989c	      0x44894c2418	             mov dword [rsp + 0x18], r9d	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x40098a1	          0x4c89e7	                            mov rdi, r12	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x40098a4	    0xff1500000000	                 call qword [0x040098aa]	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x40098aa	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x40098af	      0x4889442448	             mov qword [rsp + 0x48], rax	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x40098b4	      0xe930faffff	                           jmp 0x40092e9	      1790	dwarf.c	FUNCTION_30	SWITCH_1	ELSE_1	IF_3
0x40098b9	            0x31ff	                            xor edi, edi	      2555	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19	CALL_123
0x40098bb	      0xba05000000	                              mov edx, 5	      2555	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19	CALL_123
0x40098c0	      0xbe00000000	                              mov esi, 0	      2555	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19	CALL_123
0x40098c5	      0xe800000000	                          call 0x40098ca	      2555	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19	CALL_123
0x40098ca	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40098cf	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40098d2	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40098d4	      0xe800000000	                          call 0x40098d9	       104	stdio2.h	CALL_16
0x40098d9	      0xe967ddffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x40098de	        0x4983fe7e	                           cmp r14, 0x7e	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x40098e2	     0xf85b4e1ffff	                           jne 0x4007a9c	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x40098e8	      0xe923e9ffff	                           jmp 0x4008210	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x40098ed	            0x31ff	                            xor edi, edi	      2552	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19	CALL_120
0x40098ef	      0xba05000000	                              mov edx, 5	      2552	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19	CALL_120
0x40098f4	      0xbe00000000	                              mov esi, 0	      2552	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19	CALL_120
0x40098f9	      0xe800000000	                          call 0x40098fe	      2552	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19	CALL_120
0x40098fe	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4009903	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4009906	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4009908	      0xe800000000	                          call 0x400990d	       104	stdio2.h	CALL_16
0x400990d	      0xe933ddffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4009912	            0x31ff	                            xor edi, edi	      2553	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19	CALL_121
0x4009914	      0xba05000000	                              mov edx, 5	      2553	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19	CALL_121
0x4009919	      0xbe00000000	                              mov esi, 0	      2553	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19	CALL_121
0x400991e	      0xe800000000	                          call 0x4009923	      2553	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_19	CALL_121
0x4009923	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4009928	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400992b	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400992d	      0xe800000000	                          call 0x4009932	       104	stdio2.h	CALL_16
0x4009932	      0xe90eddffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4009937	            0x31ff	                            xor edi, edi	      2488	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_14	CALL_109
0x4009939	      0xba05000000	                              mov edx, 5	      2488	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_14	CALL_109
0x400993e	      0xbe00000000	                              mov esi, 0	      2488	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_14	CALL_109
0x4009943	      0xe800000000	                          call 0x4009948	      2488	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_14	CALL_109
0x4009948	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400994d	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4009950	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4009952	      0xe800000000	                          call 0x4009957	       104	stdio2.h	CALL_16
0x4009957	      0xe9e9dcffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400995c	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4009961	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4009966	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4009968	      0xe800000000	                          call 0x400996d	       104	stdio2.h	CALL_16
0x400996d	      0xe9d3dcffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4009972	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4009977	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400997c	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400997e	      0xe800000000	                          call 0x4009983	       104	stdio2.h	CALL_16
0x4009983	      0xe9bddcffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4009988	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400998d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4009992	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4009994	      0xe800000000	                          call 0x4009999	       104	stdio2.h	CALL_16
0x4009999	      0xe9a7dcffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400999e	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x40099a3	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40099a8	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40099aa	      0xe800000000	                          call 0x40099af	       104	stdio2.h	CALL_16
0x40099af	      0xe991dcffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x40099b4	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x40099b9	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40099be	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40099c0	      0xe800000000	                          call 0x40099c5	       104	stdio2.h	CALL_16
0x40099c5	      0xe97bdcffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x40099ca	        0x4883e840	                           sub rax, 0x40	      2473	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_13	IF_53
0x40099ce	      0xba05000000	                              mov edx, 5	      2474	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_13	CALL_107
0x40099d3	    0x483dbf000000	                           cmp rax, 0xbf	      2473	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_13	IF_53
0x40099d9	     0xf8721060000	                            ja 0x400a000	      2473	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_13	IF_53
0x40099df	            0x31ff	                            xor edi, edi	      2474	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_13	CALL_107
0x40099e1	      0xbe00000000	                              mov esi, 0	      2474	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_13	CALL_107
0x40099e6	      0xe800000000	                          call 0x40099eb	      2474	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_13	CALL_107
0x40099eb	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40099f0	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40099f3	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40099f5	      0xe800000000	                          call 0x40099fa	       104	stdio2.h	CALL_16
0x40099fa	      0xe946dcffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x40099ff	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4009a04	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4009a09	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4009a0b	      0xe800000000	                          call 0x4009a10	       104	stdio2.h	CALL_16
0x4009a10	      0xe930dcffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4009a15	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4009a1a	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4009a1f	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4009a21	      0xe800000000	                          call 0x4009a26	       104	stdio2.h	CALL_16
0x4009a26	      0xe91adcffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4009a2b	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4009a30	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4009a35	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4009a37	      0xe800000000	                          call 0x4009a3c	       104	stdio2.h	CALL_16
0x4009a3c	      0xe904dcffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4009a41	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4009a46	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4009a4b	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4009a4d	      0xe800000000	                          call 0x4009a52	       104	stdio2.h	CALL_16
0x4009a52	      0xe9eedbffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4009a57	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4009a5c	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4009a61	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4009a63	      0xe800000000	                          call 0x4009a68	       104	stdio2.h	CALL_16
0x4009a68	      0xe9d8dbffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4009a6d	    0x448d80000400	                  lea r8d, [rax + 0x400]	      2160	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_39
0x4009a74	        0x498b7f30	            mov rdi, qword [r15 + 0x30] 	      9533	dwarf.c	FUNCTION_98	CALL_4
0x4009a78	      0x4c89542438	             mov qword [rsp + 0x38], r10	      9533	dwarf.c	FUNCTION_98	CALL_4
0x4009a7d	        0x894c2434	             mov dword [rsp + 0x34], ecx	      9533	dwarf.c	FUNCTION_98	CALL_4
0x4009a81	    0x4e8d0cc50000	                          lea r9, [r8*8]	      9533	dwarf.c	FUNCTION_98	CALL_4
0x4009a89	      0x4489442428	             mov dword [rsp + 0x28], r8d	      2162	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_39	CALL_65
0x4009a8e	      0x4c89442420	              mov qword [rsp + 0x20], r8	      9533	dwarf.c	FUNCTION_98	CALL_4
0x4009a93	          0x4c89ce	                             mov rsi, r9	      9533	dwarf.c	FUNCTION_98	CALL_4
0x4009a96	      0x4c894c2418	              mov qword [rsp + 0x18], r9	      9533	dwarf.c	FUNCTION_98	CALL_4
0x4009a9b	      0xe800000000	                          call 0x4009aa0	      9533	dwarf.c	FUNCTION_98	CALL_4
0x4009aa0	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	      9533	dwarf.c	FUNCTION_98	CALL_4
0x4009aa5	        0x498b7f38	            mov rdi, qword [r15 + 0x38] 	      9533	dwarf.c	FUNCTION_98	CALL_4
0x4009aa9	        0x49894730	             mov qword [r15 + 0x30], rax	      2161	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_39
0x4009aad	          0x4c89ce	                             mov rsi, r9	      9533	dwarf.c	FUNCTION_98	CALL_4
0x4009ab0	      0xe800000000	                          call 0x4009ab5	      9533	dwarf.c	FUNCTION_98	CALL_4
0x4009ab5	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	      9533	dwarf.c	FUNCTION_98	CALL_4
0x4009aba	        0x498b7f40	            mov rdi, qword [r15 + 0x40] 	      9533	dwarf.c	FUNCTION_98	CALL_4
0x4009abe	        0x49894738	             mov qword [r15 + 0x38], rax	      2164	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_39
0x4009ac2	    0x4a8d34850000	                         lea rsi, [r8*4]	      9533	dwarf.c	FUNCTION_98	CALL_4
0x4009aca	      0xe800000000	                          call 0x4009acf	      9533	dwarf.c	FUNCTION_98	CALL_4
0x4009acf	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      2170	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_39
0x4009ad3	        0x49894740	             mov qword [r15 + 0x40], rax	      2167	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_39
0x4009ad7	      0x4c8b542438	            mov r10, qword [rsp + 0x38] 	      2170	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_39
0x4009adc	        0x8b4c2434	            mov ecx, dword [rsp + 0x34] 	      2170	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_39
0x4009ae0	        0x4189574c	             mov dword [r15 + 0x4c], edx	      2170	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_39
0x4009ae4	      0xe961e7ffff	                           jmp 0x400824a	      2170	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_39
0x4009ae9	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4009aee	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4009af3	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4009af5	      0xe800000000	                          call 0x4009afa	       104	stdio2.h	CALL_16
0x4009afa	      0xe946dbffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4009aff	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4009b04	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4009b09	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4009b0b	      0xe800000000	                          call 0x4009b10	       104	stdio2.h	CALL_16
0x4009b10	      0xe930dbffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4009b15	        0x418b4750	            mov eax, dword [r15 + 0x50] 	      2190	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	CALL_70
0x4009b19	            0x39c1	                            cmp ecx, eax	      2190	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	CALL_70
0x4009b1b	     0xf82770c0000	                            jb 0x400a798	      2190	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	CALL_70
0x4009b21	        0x413b4748	            cmp eax, dword [r15 + 0x48] 	      2192	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	IF_43
0x4009b25	     0xf87fa060000	                            ja 0x400a225	      2192	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	IF_43
0x4009b2b	        0x498b5738	            mov rdx, qword [r15 + 0x38] 	      2196	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	ELSE_10
0x4009b2f	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      2196	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	ELSE_10
0x4009b34	            0x89c1	                            mov ecx, eax	      2196	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	ELSE_10
0x4009b36	          0x83c001	                              add eax, 1	      2197	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	ELSE_10
0x4009b39	        0x488934ca	            mov qword [rdx + rcx*8], rsi	      2196	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	ELSE_10
0x4009b3d	        0x41894750	             mov dword [r15 + 0x50], eax	      2197	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	ELSE_10
0x4009b41	      0xe9ffdaffff	                           jmp 0x4007645	      2197	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	ELSE_10
0x4009b46	    0x4981fe860000	                           cmp r14, 0x86	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4009b4d	     0xf8549dfffff	                           jne 0x4007a9c	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4009b53	      0xe9b8e6ffff	                           jmp 0x4008210	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4009b58	        0x4983fe51	                           cmp r14, 0x51	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009b5c	     0xf86bee2ffff	                           jbe 0x4007e20	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009b62	      0xe9dedaffff	                           jmp 0x4007645	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009b67	    0x660f1f840000	                    nop word [rax + rax]	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x4009b70	        0x4883fe22	                           cmp rsi, 0x22	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x4009b74	     0xf84920a0000	                            je 0x400a60c	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x4009b7a	     0xf872e060000	                            ja 0x400a1ae	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x4009b80	        0x4883fe1f	                           cmp rsi, 0x1f	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x4009b84	     0xf8470080000	                            je 0x400a3fa	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x4009b8a	     0xf8254080000	                            jb 0x400a3e4	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x4009b90	        0x4883fe20	                           cmp rsi, 0x20	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x4009b94	     0xf84b0070000	                            je 0x400a34a	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x4009b9a	        0x4883fe21	                           cmp rsi, 0x21	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x4009b9e	     0xf85f4090000	                           jne 0x400a598	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x4009ba4	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4009ba9	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4009bae	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4009bb0	      0xe800000000	                          call 0x4009bb5	       104	stdio2.h	CALL_16
0x4009bb5	      0xe98bdaffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4009bba	        0x4c2b6020	             sub r12, qword [rax + 0x20]	      2645	dwarf.c	FUNCTION_30	SWITCH_7	IF_61	CALL_132
0x4009bbe	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009bc0	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009bc5	      0xe83667ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009bca	            0x31ff	                            xor edi, edi	      2645	dwarf.c	FUNCTION_30	SWITCH_7	IF_61	CALL_132
0x4009bcc	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009bcf	      0xba05000000	                              mov edx, 5	      2645	dwarf.c	FUNCTION_30	SWITCH_7	IF_61	CALL_132
0x4009bd4	      0xbe00000000	                              mov esi, 0	      2645	dwarf.c	FUNCTION_30	SWITCH_7	IF_61	CALL_132
0x4009bd9	      0xe800000000	                          call 0x4009bde	      2645	dwarf.c	FUNCTION_30	SWITCH_7	IF_61	CALL_132
0x4009bde	          0x4c89e2	                            mov rdx, r12	      2645	dwarf.c	FUNCTION_30	SWITCH_7	IF_61	CALL_132
0x4009be1	          0x4889c7	                            mov rdi, rax	      2645	dwarf.c	FUNCTION_30	SWITCH_7	IF_61	CALL_132
0x4009be4	          0x4889de	                            mov rsi, rbx	      2645	dwarf.c	FUNCTION_30	SWITCH_7	IF_61	CALL_132
0x4009be7	            0x31c0	                            xor eax, eax	      2645	dwarf.c	FUNCTION_30	SWITCH_7	IF_61	CALL_132
0x4009be9	      0xe800000000	                          call 0x4009bee	      2645	dwarf.c	FUNCTION_30	SWITCH_7	IF_61	CALL_132
0x4009bee	      0xe952daffff	                           jmp 0x4007645	      2645	dwarf.c	FUNCTION_30	SWITCH_7	IF_61	CALL_132
0x4009bf3	        0x4983fe46	                           cmp r14, 0x46	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4009bf7	     0xf859fdeffff	                           jne 0x4007a9c	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4009bfd	      0xe90ee6ffff	                           jmp 0x4008210	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4009c02	    0x4981fe372100	                         cmp r14, 0x2137	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4009c09	     0xf858ddeffff	                           jne 0x4007a9c	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4009c0f	      0xe9fce5ffff	                           jmp 0x4008210	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4009c14	        0x4983fe2a	                           cmp r14, 0x2a	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4009c18	     0xf857edeffff	                           jne 0x4007a9c	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4009c1e	      0xe9ede5ffff	                           jmp 0x4008210	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x4009c23	      0x488d742468	                   lea rsi, [rsp + 0x68]	      1916	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x4009c28	      0x488d542448	                   lea rdx, [rsp + 0x48]	      1916	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x4009c2d	          0x4889ef	                            mov rdi, rbp	      1916	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x4009c30	      0x44894c2420	             mov dword [rsp + 0x20], r9d	      1916	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x4009c35	      0x4c89442418	              mov qword [rsp + 0x18], r8	      1916	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x4009c3a	      0xe800000000	                          call 0x4009c3f	      1916	dwarf.c	FUNCTION_30	SWITCH_2	IF_12
0x4009c3f	        0x4883fb14	                           cmp rbx, 0x14	      1918	dwarf.c	FUNCTION_30	SWITCH_2	IF_12	IF_13
0x4009c43	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      1918	dwarf.c	FUNCTION_30	SWITCH_2	IF_12	IF_13
0x4009c48	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      1918	dwarf.c	FUNCTION_30	SWITCH_2	IF_12	IF_13
0x4009c4d	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      1918	dwarf.c	FUNCTION_30	SWITCH_2	IF_12	IF_13
0x4009c52	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	      1918	dwarf.c	FUNCTION_30	SWITCH_2	IF_12	IF_13
0x4009c57	     0xf8570e9ffff	                           jne 0x40085cd	      1918	dwarf.c	FUNCTION_30	SWITCH_2	IF_12	IF_13
0x4009c5d	      0x4803742408	                add rsi, qword [rsp + 8]	      1678	dwarf.c	FUNCTION_27	IF_1
0x4009c62	     0xf8365e9ffff	                           jae 0x40085cd	      1678	dwarf.c	FUNCTION_27	IF_1
0x4009c68	        0x4883c701	                              add rdi, 1	      1680	dwarf.c	FUNCTION_27	IF_1
0x4009c6c	      0x48897c2468	             mov qword [rsp + 0x68], rdi	      1680	dwarf.c	FUNCTION_27	IF_1
0x4009c71	      0xe957e9ffff	                           jmp 0x40085cd	      1680	dwarf.c	FUNCTION_27	IF_1
0x4009c76	      0x488d742468	                   lea rsi, [rsp + 0x68]	      2105	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x4009c7b	      0x488d542448	                   lea rdx, [rsp + 0x48]	      2105	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x4009c80	          0x4889ef	                            mov rdi, rbp	      2105	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x4009c83	      0x44894c2420	             mov dword [rsp + 0x20], r9d	      2105	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x4009c88	      0xe800000000	                          call 0x4009c8d	      2105	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x4009c8d	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      2105	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x4009c92	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      2105	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x4009c97	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	      2105	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x4009c9c	      0xe9e7f8ffff	                           jmp 0x4009588	      2105	dwarf.c	FUNCTION_30	SWITCH_2	IF_35
0x4009ca1	      0x488d542468	                   lea rdx, [rsp + 0x68]	      1943	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x4009ca6	      0x488d742460	                   lea rsi, [rsp + 0x60]	      1943	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x4009cab	          0x4889c7	                            mov rdi, rax	      1943	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x4009cae	      0xe800000000	                          call 0x4009cb3	      1943	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x4009cb3	      0x4c8b442460	              mov r8, qword [rsp + 0x60]	      1943	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x4009cb8	      0x4c8b4c2468	              mov r9, qword [rsp + 0x68]	      1943	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x4009cbd	      0xe952f8ffff	                           jmp 0x4009514	      1943	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x4009cc2	      0x488d542458	                   lea rdx, [rsp + 0x58]	      1942	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x4009cc7	      0x488d742450	                   lea rsi, [rsp + 0x50]	      1942	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x4009ccc	          0x4889ef	                            mov rdi, rbp	      1942	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x4009ccf	      0x4889442418	             mov qword [rsp + 0x18], rax	      1942	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x4009cd4	      0xe800000000	                          call 0x4009cd9	      1942	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x4009cd9	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1942	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x4009cde	      0xe90cf8ffff	                           jmp 0x40094ef	      1942	dwarf.c	FUNCTION_30	SWITCH_2	IF_16
0x4009ce3	        0x4883fe04	                              cmp rsi, 4	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x4009ce7	     0xf844f070000	                            je 0x400a43c	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x4009ced	     0xf8602050000	                           jbe 0x400a1f5	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x4009cf3	        0x4883fe06	                              cmp rsi, 6	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x4009cf7	     0xf846b070000	                            je 0x400a468	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x4009cfd	     0xf824f070000	                            jb 0x400a452	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x4009d03	        0x4883fe07	                              cmp rsi, 7	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x4009d07	     0xf8403070000	                            je 0x400a410	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x4009d0d	        0x4883fe08	                              cmp rsi, 8	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x4009d11	     0xf8581080000	                           jne 0x400a598	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x4009d17	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4009d1c	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4009d21	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4009d23	      0xe800000000	                          call 0x4009d28	       104	stdio2.h	CALL_16
0x4009d28	      0xe918d9ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4009d2d	            0x89d1	                            mov ecx, edx	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x4009d2f	            0x31ff	                            xor edi, edi	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x4009d31	    0x41b805000000	                              mov r8d, 5	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x4009d37	      0xba00000000	                              mov edx, 0	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x4009d3c	      0xbe00000000	                              mov esi, 0	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x4009d41	      0x44894c2418	             mov dword [rsp + 0x18], r9d	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x4009d46	      0xe800000000	                          call 0x4009d4b	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x4009d4b	    0x8bb424000100	           mov esi, dword [rsp + 0x100] 	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x4009d52	          0x4889c7	                            mov rdi, rax	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x4009d55	      0xba08000000	                              mov edx, 8	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x4009d5a	            0x31c0	                            xor eax, eax	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x4009d5c	      0xe800000000	                          call 0x4009d61	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x4009d61	      0x498d442408	                      lea rax, [r12 + 8]	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x4009d66	      0xbe08000000	                              mov esi, 8	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x4009d6b	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x4009d70	          0x4939c5	                            cmp r13, rax	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x4009d73	     0xf866ef8ffff	                           jbe 0x40095e7	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x4009d79	      0x44894c2418	             mov dword [rsp + 0x18], r9d	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x4009d7e	          0x4c89e7	                            mov rdi, r12	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x4009d81	    0xff1500000000	                 call qword [0x04009d87]	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x4009d87	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x4009d8c	      0x4889442448	             mov qword [rsp + 0x48], rax	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x4009d91	      0xe971f8ffff	                           jmp 0x4009607	      1788	dwarf.c	FUNCTION_30	SWITCH_1	IF_2
0x4009d96	            0x31ff	                            xor edi, edi	      2500	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_15	CALL_110
0x4009d98	      0xba05000000	                              mov edx, 5	      2500	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_15	CALL_110
0x4009d9d	      0xbe00000000	                              mov esi, 0	      2500	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_15	CALL_110
0x4009da2	      0xe800000000	                          call 0x4009da7	      2500	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_15	CALL_110
0x4009da7	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4009dac	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4009daf	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4009db1	      0xe800000000	                          call 0x4009db6	       104	stdio2.h	CALL_16
0x4009db6	      0xe98ad8ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4009dbb	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4009dc0	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4009dc5	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4009dc7	      0xe800000000	                          call 0x4009dcc	       104	stdio2.h	CALL_16
0x4009dcc	      0xe974d8ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4009dd1	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4009dd6	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4009ddb	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4009ddd	      0xe800000000	                          call 0x4009de2	       104	stdio2.h	CALL_16
0x4009de2	      0xe95ed8ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4009de7	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4009dec	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4009df1	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4009df3	      0xe800000000	                          call 0x4009df8	       104	stdio2.h	CALL_16
0x4009df8	      0xe948d8ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4009dfd	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009dff	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009e04	      0xe8f764ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009e09	            0x31ff	                            xor edi, edi	      2329	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_97
0x4009e0b	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009e0e	      0xba05000000	                              mov edx, 5	      2329	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_97
0x4009e13	      0xbe00000000	                              mov esi, 0	      2329	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_97
0x4009e18	      0xe800000000	                          call 0x4009e1d	      2329	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_97
0x4009e1d	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_16
0x4009e20	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4009e23	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4009e28	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4009e2a	      0xe800000000	                          call 0x4009e2f	       104	stdio2.h	CALL_16
0x4009e2f	      0xe911d8ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4009e34	            0x31ff	                            xor edi, edi	      2323	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_95
0x4009e36	      0xba05000000	                              mov edx, 5	      2323	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_95
0x4009e3b	      0xbe00000000	                              mov esi, 0	      2323	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_95
0x4009e40	      0xe800000000	                          call 0x4009e45	      2323	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_95
0x4009e45	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4009e4a	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4009e4d	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4009e4f	      0xe800000000	                          call 0x4009e54	       104	stdio2.h	CALL_16
0x4009e54	      0xe9ecd7ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4009e59	            0x31ff	                            xor edi, edi	      2317	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_93
0x4009e5b	      0xba05000000	                              mov edx, 5	      2317	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_93
0x4009e60	      0xbe00000000	                              mov esi, 0	      2317	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_93
0x4009e65	      0xe800000000	                          call 0x4009e6a	      2317	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_93
0x4009e6a	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4009e6f	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4009e72	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4009e74	      0xe800000000	                          call 0x4009e79	       104	stdio2.h	CALL_16
0x4009e79	      0xe9c7d7ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4009e7e	            0x31ff	                            xor edi, edi	      2320	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_94
0x4009e80	      0xba05000000	                              mov edx, 5	      2320	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_94
0x4009e85	      0xbe00000000	                              mov esi, 0	      2320	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_94
0x4009e8a	      0xe800000000	                          call 0x4009e8f	      2320	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_8	CALL_94
0x4009e8f	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4009e94	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4009e97	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4009e99	      0xe800000000	                          call 0x4009e9e	       104	stdio2.h	CALL_16
0x4009e9e	      0xe9a2d7ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x4009ea3	        0x488b7808	                mov rdi, qword [rax + 8]	      2665	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	IF_62	CALL_136
0x4009ea7	      0xe8647effff	                   call sym.get_TAG_name	      2665	dwarf.c	FUNCTION_30	SWITCH_7	ELSE_15	IF_62	CALL_136
0x4009eac	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4009eb1	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_16
0x4009eb4	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4009eb9	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4009ebb	      0xe800000000	                          call 0x4009ec0	       104	stdio2.h	CALL_16
0x4009ec0	      0xe9cdf2ffff	                           jmp 0x4009192	       104	stdio2.h	CALL_16
0x4009ec5	      0xba05000000	                              mov edx, 5	      2181	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	CALL_69
0x4009eca	      0xbe00000000	                              mov esi, 0	      2181	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	CALL_69
0x4009ecf	            0x31ff	                            xor edi, edi	      2181	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	CALL_69
0x4009ed1	      0x4c89542410	             mov qword [rsp + 0x10], r10	      2181	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	CALL_69
0x4009ed6	      0xe800000000	                          call 0x4009edb	      2181	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	CALL_69
0x4009edb	          0x4889c7	                            mov rdi, rax	      2181	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	CALL_69
0x4009ede	            0x31c0	                            xor eax, eax	      2181	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	CALL_69
0x4009ee0	      0xe800000000	                          call 0x4009ee5	      2181	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	CALL_69
0x4009ee5	      0x4c8b542410	            mov r10, qword [rsp + 0x10] 	      2181	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	CALL_69
0x4009eea	      0xe9addbffff	                           jmp 0x4007a9c	      2181	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	IF_41	CALL_69
0x4009eef	        0x4883fb08	                              cmp rbx, 8	      2263	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5
0x4009ef3	     0xf857d010000	                           jne 0x400a076	      2263	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5
0x4009ef9	    0x4c8925000000	            mov qword [0x04009f00], r12 	      2275	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5
0x4009f00	      0xe940d7ffff	                           jmp 0x4007645	      2276	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5
0x4009f05	      0xbf31210000	                         mov edi, 0x2131	      2294	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6	CALL_90
0x4009f0a	      0xe8617effff	                    call sym.get_AT_name	      2294	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6	CALL_90
0x4009f0f	          0x4889df	                            mov rdi, rbx	      2294	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6	CALL_90
0x4009f12	          0x4989c4	                            mov r12, rax	      2294	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6	CALL_90
0x4009f15	      0xe8c67effff	                  call sym.get_FORM_name	      2294	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6	CALL_90
0x4009f1a	      0xba05000000	                              mov edx, 5	      2294	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6	CALL_90
0x4009f1f	          0x4889c3	                            mov rbx, rax	      2294	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6	CALL_90
0x4009f22	      0xbe00000000	                              mov esi, 0	      2294	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6	CALL_90
0x4009f27	            0x31ff	                            xor edi, edi	      2294	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6	CALL_90
0x4009f29	      0xe800000000	                          call 0x4009f2e	      2294	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6	CALL_90
0x4009f2e	          0x4c89e2	                            mov rdx, r12	      2294	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6	CALL_90
0x4009f31	          0x4889c7	                            mov rdi, rax	      2294	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6	CALL_90
0x4009f34	          0x4889de	                            mov rsi, rbx	      2294	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6	CALL_90
0x4009f37	            0x31c0	                            xor eax, eax	      2294	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6	CALL_90
0x4009f39	      0xe800000000	                          call 0x4009f3e	      2294	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6	CALL_90
0x4009f3e	    0x48c705000000	               mov qword [0x04009f49], 0	      2296	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6
0x4009f49	      0xe9f7d6ffff	                           jmp 0x4007645	      2297	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_49	SWITCH_6
0x4009f4e	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009f50	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009f55	      0x44894c2428	             mov dword [rsp + 0x28], r9d	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009f5a	      0xe8a163ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009f5f	    0x488b0d000000	            mov rcx, qword [0x04009f66] 	       803	dwarf.c	FUNCTION_16	IF_2	CALL_3
0x4009f66	      0xba05000000	                              mov edx, 5	       803	dwarf.c	FUNCTION_16	IF_2	CALL_3
0x4009f6b	      0xbe00000000	                              mov esi, 0	       803	dwarf.c	FUNCTION_16	IF_2	CALL_3
0x4009f70	            0x31ff	                            xor edi, edi	       803	dwarf.c	FUNCTION_16	IF_2	CALL_3
0x4009f72	      0x4889442418	             mov qword [rsp + 0x18], rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x4009f77	      0x48894c2420	             mov qword [rsp + 0x20], rcx	       803	dwarf.c	FUNCTION_16	IF_2	CALL_3
0x4009f7c	      0xe800000000	                          call 0x4009f81	       803	dwarf.c	FUNCTION_16	IF_2	CALL_3
0x4009f81	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       803	dwarf.c	FUNCTION_16	IF_2	CALL_3
0x4009f86	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       803	dwarf.c	FUNCTION_16	IF_2	CALL_3
0x4009f8b	          0x4889c7	                            mov rdi, rax	       803	dwarf.c	FUNCTION_16	IF_2	CALL_3
0x4009f8e	            0x31c0	                            xor eax, eax	       803	dwarf.c	FUNCTION_16	IF_2	CALL_3
0x4009f90	      0xe800000000	                          call 0x4009f95	       803	dwarf.c	FUNCTION_16	IF_2	CALL_3
0x4009f95	    0x41b800000000	                              mov r8d, 0	       805	dwarf.c	FUNCTION_16	IF_2
0x4009f9b	      0x448b4c2428	            mov r9d, dword [rsp + 0x28] 	       805	dwarf.c	FUNCTION_16	IF_2
0x4009fa0	      0xe97ff7ffff	                           jmp 0x4009724	       805	dwarf.c	FUNCTION_16	IF_2
0x4009fa5	    0x4c8925000000	            mov qword [0x04009fac], r12 	      2250	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4
0x4009fac	      0xe9ebdaffff	                           jmp 0x4007a9c	      2251	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4
0x4009fb1	    0x488b94240801	           mov rdx, qword [rsp + 0x108] 	      2247	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_75
0x4009fb9	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      2247	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_75
0x4009fbe	            0x31c9	                            xor ecx, ecx	      2247	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_75
0x4009fc0	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      2247	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_75
0x4009fc5	      0x4c89542418	             mov qword [rsp + 0x18], r10	      2247	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_75
0x4009fca	      0xe88164ffff	           call sym.fetch_indexed_string	      2247	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_75
0x4009fcf	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	      2248	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4
0x4009fd4	    0x488905000000	            mov qword [0x04009fdb], rax 	      2247	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_75
0x4009fdb	      0xe9bcdaffff	                           jmp 0x4007a9c	      2248	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4
0x4009fe0	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      2244	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_74
0x4009fe5	      0x4c89542410	             mov qword [rsp + 0x10], r10	      2244	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_74
0x4009fea	      0xe8617bffff	          call sym.fetch_indirect_string	      2244	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_74
0x4009fef	      0x4c8b542410	            mov r10, qword [rsp + 0x10] 	      2245	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4
0x4009ff4	    0x488905000000	            mov qword [0x04009ffb], rax 	      2244	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4	CALL_74
0x4009ffb	      0xe99cdaffff	                           jmp 0x4007a9c	      2245	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_47	SWITCH_4
0x400a000	            0x31ff	                            xor edi, edi	      2476	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_13	CALL_108
0x400a002	      0xbe00000000	                              mov esi, 0	      2476	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_13	CALL_108
0x400a007	      0xe800000000	                          call 0x400a00c	      2476	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_13	CALL_108
0x400a00c	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a011	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400a014	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a016	      0xe800000000	                          call 0x400a01b	       104	stdio2.h	CALL_16
0x400a01b	      0xe925d6ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a020	    0x8db000040000	                  lea esi, [rax + 0x400]	      2227	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45	IF_46
0x400a026	        0x498b7f58	            mov rdi, qword [r15 + 0x58] 	      9533	dwarf.c	FUNCTION_98	CALL_4
0x400a02a	          0x4989f4	                            mov r12, rsi	      2227	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45	IF_46
0x400a02d	        0x48c1e603	                              shl rsi, 3	      9533	dwarf.c	FUNCTION_98	CALL_4
0x400a031	      0xe800000000	                          call 0x400a036	      9533	dwarf.c	FUNCTION_98	CALL_4
0x400a036	        0x45896764	            mov dword [r15 + 0x64], r12d	      2231	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45	IF_46
0x400a03a	        0x49894758	             mov qword [r15 + 0x58], rax	      2228	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45	IF_46
0x400a03e	        0x418b5760	            mov edx, dword [r15 + 0x60] 	      2228	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45	IF_46
0x400a042	      0xe935e9ffff	                           jmp 0x400897c	      2228	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_45	IF_46
0x400a047	    0x4881fb021f00	                         cmp rbx, 0x1f02	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x400a04e	     0xf85bce6ffff	                           jne 0x4008710	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x400a054	      0xe96fe0ffff	                           jmp 0x40080c8	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x400a059	     0xf1f80000000	                         nop dword [rax]	      1865	dwarf.c	FUNCTION_30	SWITCH_2
0x400a060	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      2269	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_82
0x400a065	      0xe8c67bffff	     call sym.fetch_indirect_line_string	      2269	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_82
0x400a06a	    0x488905000000	            mov qword [0x0400a071], rax 	      2269	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_82
0x400a071	      0xe9cfd5ffff	                           jmp 0x4007645	      2270	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5
0x400a076	      0xbf1b000000	                           mov edi, 0x1b	      2278	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_85
0x400a07b	      0xe8f07cffff	                    call sym.get_AT_name	      2278	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_85
0x400a080	          0x4889df	                            mov rdi, rbx	      2278	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_85
0x400a083	          0x4989c4	                            mov r12, rax	      2278	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_85
0x400a086	      0xe8557dffff	                  call sym.get_FORM_name	      2278	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_85
0x400a08b	      0xba05000000	                              mov edx, 5	      2278	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_85
0x400a090	          0x4889c3	                            mov rbx, rax	      2278	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_85
0x400a093	      0xbe00000000	                              mov esi, 0	      2278	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_85
0x400a098	            0x31ff	                            xor edi, edi	      2278	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_85
0x400a09a	      0xe800000000	                          call 0x400a09f	      2278	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_85
0x400a09f	          0x4c89e2	                            mov rdx, r12	      2278	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_85
0x400a0a2	          0x4889c7	                            mov rdi, rax	      2278	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_85
0x400a0a5	          0x4889de	                            mov rsi, rbx	      2278	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_85
0x400a0a8	            0x31c0	                            xor eax, eax	      2278	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_85
0x400a0aa	      0xe800000000	                          call 0x400a0af	      2278	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_85
0x400a0af	      0xba05000000	                              mov edx, 5	      2280	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_88
0x400a0b4	      0xbe00000000	                              mov esi, 0	      2280	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_88
0x400a0b9	            0x31ff	                            xor edi, edi	      2280	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_88
0x400a0bb	      0xe800000000	                          call 0x400a0c0	      2280	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_88
0x400a0c0	    0x488905000000	            mov qword [0x0400a0c7], rax 	      2280	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_88
0x400a0c7	      0xe979d5ffff	                           jmp 0x4007645	      2281	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5
0x400a0cc	     0xf8793010000	                            ja 0x400a265	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a0d2	    0x4981fe860000	                           cmp r14, 0x86	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a0d9	     0xf841fddffff	                            je 0x4007dfe	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a0df	      0xe961d5ffff	                           jmp 0x4007645	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a0e4	         0xf1f4000	                         nop dword [rax]	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a0e8	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      2266	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_81
0x400a0ed	      0xe85e7affff	          call sym.fetch_indirect_string	      2266	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_81
0x400a0f2	    0x488905000000	            mov qword [0x0400a0f9], rax 	      2266	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5	CALL_81
0x400a0f9	      0xe947d5ffff	                           jmp 0x4007645	      2267	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_48	SWITCH_5
0x400a0fe	            0x31c9	                            xor ecx, ecx	      2078	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_52
0x400a100	      0xe90ee0ffff	                           jmp 0x4008113	      2078	dwarf.c	FUNCTION_30	SWITCH_2	IF_33	CALL_52
0x400a105	          0x4c89c2	                             mov rdx, r8	      1947	dwarf.c	FUNCTION_30	SWITCH_2	IF_16	IF_17
0x400a108	          0x4c89c9	                             mov rcx, r9	      1950	dwarf.c	FUNCTION_30	SWITCH_2	IF_16	IF_17
0x400a10b	      0x4833542450	             xor rdx, qword [rsp + 0x50]	      1947	dwarf.c	FUNCTION_30	SWITCH_2	IF_16	IF_17
0x400a110	      0x48334c2458	             xor rcx, qword [rsp + 0x58]	      1950	dwarf.c	FUNCTION_30	SWITCH_2	IF_16	IF_17
0x400a115	          0x4931d0	                             xor r8, rdx	      1948	dwarf.c	FUNCTION_30	SWITCH_2	IF_16	IF_17
0x400a118	          0x4931c9	                             xor r9, rcx	      1951	dwarf.c	FUNCTION_30	SWITCH_2	IF_16	IF_17
0x400a11b	          0x4c31c2	                             xor rdx, r8	      1949	dwarf.c	FUNCTION_30	SWITCH_2	IF_16	IF_17
0x400a11e	      0x4c89442460	              mov qword [rsp + 0x60], r8	      1948	dwarf.c	FUNCTION_30	SWITCH_2	IF_16	IF_17
0x400a123	          0x4c31c9	                             xor rcx, r9	      1952	dwarf.c	FUNCTION_30	SWITCH_2	IF_16	IF_17
0x400a126	      0x4889542450	             mov qword [rsp + 0x50], rdx	      1949	dwarf.c	FUNCTION_30	SWITCH_2	IF_16	IF_17
0x400a12b	      0x4c894c2468	              mov qword [rsp + 0x68], r9	      1951	dwarf.c	FUNCTION_30	SWITCH_2	IF_16	IF_17
0x400a130	      0x48894c2458	             mov qword [rsp + 0x58], rcx	      1952	dwarf.c	FUNCTION_30	SWITCH_2	IF_16	IF_17
0x400a135	      0xe9f5f3ffff	                           jmp 0x400952f	      1952	dwarf.c	FUNCTION_30	SWITCH_2	IF_16	IF_17
0x400a13a	        0x4883fe10	                           cmp rsi, 0x10	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400a13e	     0xf847c030000	                            je 0x400a4c0	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400a144	     0xf8260030000	                            jb 0x400a4aa	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400a14a	        0x4883fe11	                           cmp rsi, 0x11	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400a14e	     0xf8440030000	                            je 0x400a494	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400a154	        0x4883fe12	                           cmp rsi, 0x12	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400a158	     0xf853a040000	                           jne 0x400a598	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400a15e	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a163	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a168	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a16a	      0xe800000000	                          call 0x400a16f	       104	stdio2.h	CALL_16
0x400a16f	      0xe9d1d4ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a174	        0x4883fe1a	                           cmp rsi, 0x1a	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400a178	     0xf84d0040000	                            je 0x400a64e	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400a17e	     0xf82b4040000	                            jb 0x400a638	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400a184	        0x4883fe1b	                           cmp rsi, 0x1b	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400a188	     0xf8494040000	                            je 0x400a622	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400a18e	        0x4883fe1c	                           cmp rsi, 0x1c	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400a192	     0xf8500040000	                           jne 0x400a598	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400a198	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a19d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a1a2	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a1a4	      0xe800000000	                          call 0x400a1a9	       104	stdio2.h	CALL_16
0x400a1a9	      0xe997d4ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a1ae	        0x4883fe24	                           cmp rsi, 0x24	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400a1b2	     0xf844f030000	                            je 0x400a507	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400a1b8	     0xf8233030000	                            jb 0x400a4f1	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400a1be	    0x4881fe018000	                         cmp rsi, 0x8001	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400a1c5	     0xf8410030000	                            je 0x400a4db	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400a1cb	    0x4881fe658700	                         cmp rsi, 0x8765	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400a1d2	     0xf85c0030000	                           jne 0x400a598	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400a1d8	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a1dd	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a1e2	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a1e4	      0xe800000000	                          call 0x400a1e9	       104	stdio2.h	CALL_16
0x400a1e9	      0xe957d4ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a1ee	            0x89d6	                            mov esi, edx	       104	stdio2.h	CALL_16
0x400a1f0	      0xe984fbffff	                           jmp 0x4009d79	       104	stdio2.h	CALL_16
0x400a1f5	        0x4883fe02	                              cmp rsi, 2	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400a1f9	     0xf844a030000	                            je 0x400a549	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400a1ff	     0xf872e030000	                            ja 0x400a533	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400a205	        0x4883fe01	                              cmp rsi, 1	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400a209	     0xf8589030000	                           jne 0x400a598	      2337	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9
0x400a20f	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a214	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a219	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a21b	      0xe800000000	                          call 0x400a220	       104	stdio2.h	CALL_16
0x400a220	      0xe920d4ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a225	            0x31ff	                            xor edi, edi	      2193	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	CALL_72
0x400a227	      0xba05000000	                              mov edx, 5	      2193	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	CALL_72
0x400a22c	      0xbe00000000	                              mov esi, 0	      2193	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	CALL_72
0x400a231	      0xe800000000	                          call 0x400a236	      2193	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	CALL_72
0x400a236	          0x4889c7	                            mov rdi, rax	      2193	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	CALL_72
0x400a239	            0x31c0	                            xor eax, eax	      2193	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	CALL_72
0x400a23b	      0xe800000000	                          call 0x400a240	      2193	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	CALL_72
0x400a240	      0xe900d4ffff	                           jmp 0x4007645	      2193	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	CALL_72
0x400a245	            0x31ff	                            xor edi, edi	      2520	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_16	CALL_112
0x400a247	      0xbe00000000	                              mov esi, 0	      2520	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_16	CALL_112
0x400a24c	      0xe800000000	                          call 0x400a251	      2520	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_16	CALL_112
0x400a251	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a256	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400a259	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a25b	      0xe800000000	                          call 0x400a260	       104	stdio2.h	CALL_16
0x400a260	      0xe9e0d3ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a265	    0x4981ee112100	                         sub r14, 0x2111	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a26c	        0x4983fe03	                              cmp r14, 3	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a270	     0xf8688dbffff	                           jbe 0x4007dfe	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a276	      0xe9cad3ffff	                           jmp 0x4007645	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a27b	        0x4983fe46	                           cmp r14, 0x46	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a27f	     0xf8479dbffff	                            je 0x4007dfe	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a285	      0xe9bbd3ffff	                           jmp 0x4007645	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a28a	        0x4983fe02	                              cmp r14, 2	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a28e	     0xf846adbffff	                            je 0x4007dfe	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a294	      0xe9acd3ffff	                           jmp 0x4007645	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a299	        0x4983fe38	                           cmp r14, 0x38	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a29d	     0xf845bdbffff	                            je 0x4007dfe	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a2a3	      0xe99dd3ffff	                           jmp 0x4007645	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a2a8	        0x4983fe2a	                           cmp r14, 0x2a	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a2ac	     0xf844cdbffff	                            je 0x4007dfe	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a2b2	      0xe98ed3ffff	                           jmp 0x4007645	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a2b7	      0x44894c2418	             mov dword [rsp + 0x18], r9d	      2310	dwarf.c	FUNCTION_30	SWITCH_7
0x400a2bc	      0xba05000000	                              mov edx, 5	      1705	dwarf.c	FUNCTION_28	CALL_3
0x400a2c1	      0xbe00000000	                              mov esi, 0	      1705	dwarf.c	FUNCTION_28	CALL_3
0x400a2c6	            0x31ff	                            xor edi, edi	      1723	dwarf.c	FUNCTION_28	CALL_10
0x400a2c8	      0xe800000000	                          call 0x400a2cd	      1723	dwarf.c	FUNCTION_28	CALL_10
0x400a2cd	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      1723	dwarf.c	FUNCTION_28	CALL_10
0x400a2d2	          0x4989c0	                             mov r8, rax	      1723	dwarf.c	FUNCTION_28	CALL_10
0x400a2d5	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      1723	dwarf.c	FUNCTION_28	CALL_10
0x400a2da	      0xe9f9e0ffff	                           jmp 0x40083d8	      1723	dwarf.c	FUNCTION_28	CALL_10
0x400a2df	          0x4889ce	                            mov rsi, rcx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a2e2	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a2e4	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a2e9	      0xe81260ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a2ee	      0xba05000000	                              mov edx, 5	      1713	dwarf.c	FUNCTION_28	IF_5	CALL_7
0x400a2f3	      0xbe00000000	                              mov esi, 0	      1713	dwarf.c	FUNCTION_28	IF_5	CALL_7
0x400a2f8	            0x31ff	                            xor edi, edi	      1713	dwarf.c	FUNCTION_28	IF_5	CALL_7
0x400a2fa	      0x4889442418	             mov qword [rsp + 0x18], rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a2ff	      0xe800000000	                          call 0x400a304	      1713	dwarf.c	FUNCTION_28	IF_5	CALL_7
0x400a304	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1713	dwarf.c	FUNCTION_28	IF_5	CALL_7
0x400a309	          0x4889c7	                            mov rdi, rax	      1713	dwarf.c	FUNCTION_28	IF_5	CALL_7
0x400a30c	            0x31c0	                            xor eax, eax	      1713	dwarf.c	FUNCTION_28	IF_5	CALL_7
0x400a30e	      0xe800000000	                          call 0x400a313	      1713	dwarf.c	FUNCTION_28	IF_5	CALL_7
0x400a313	      0xba05000000	                              mov edx, 5	      1714	dwarf.c	FUNCTION_28	IF_5	CALL_8
0x400a318	      0xbe00000000	                              mov esi, 0	      1714	dwarf.c	FUNCTION_28	IF_5	CALL_8
0x400a31d	            0x31ff	                            xor edi, edi	      1714	dwarf.c	FUNCTION_28	IF_5	CALL_8
0x400a31f	      0xe800000000	                          call 0x400a324	      1714	dwarf.c	FUNCTION_28	IF_5	CALL_8
0x400a324	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      1714	dwarf.c	FUNCTION_28	IF_5	CALL_8
0x400a329	          0x4989c0	                             mov r8, rax	      1714	dwarf.c	FUNCTION_28	IF_5	CALL_8
0x400a32c	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	      1714	dwarf.c	FUNCTION_28	IF_5	CALL_8
0x400a331	      0xe9a2e0ffff	                           jmp 0x40083d8	      1714	dwarf.c	FUNCTION_28	IF_5	CALL_8
0x400a336	      0x44894c2418	             mov dword [rsp + 0x18], r9d	      1714	dwarf.c	FUNCTION_28	IF_5	CALL_8
0x400a33b	      0xba05000000	                              mov edx, 5	      1702	dwarf.c	FUNCTION_28	CALL_1
0x400a340	      0xbe00000000	                              mov esi, 0	      1702	dwarf.c	FUNCTION_28	CALL_1
0x400a345	      0xe97cffffff	                           jmp 0x400a2c6	      1702	dwarf.c	FUNCTION_28	CALL_1
0x400a34a	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a34f	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a354	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a356	      0xe800000000	                          call 0x400a35b	       104	stdio2.h	CALL_16
0x400a35b	      0xe9e5d2ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a360	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a365	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a36a	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a36c	      0xe800000000	                          call 0x400a371	       104	stdio2.h	CALL_16
0x400a371	      0xe9cfd2ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a376	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a37b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a380	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a382	      0xe800000000	                          call 0x400a387	       104	stdio2.h	CALL_16
0x400a387	      0xe9b9d2ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a38c	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a391	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a396	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a398	      0xe800000000	                          call 0x400a39d	       104	stdio2.h	CALL_16
0x400a39d	      0xe9a3d2ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a3a2	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a3a7	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a3ac	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a3ae	      0xe800000000	                          call 0x400a3b3	       104	stdio2.h	CALL_16
0x400a3b3	      0xe98dd2ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a3b8	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a3bd	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a3c2	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a3c4	      0xe800000000	                          call 0x400a3c9	       104	stdio2.h	CALL_16
0x400a3c9	      0xe977d2ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a3ce	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a3d3	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a3d8	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a3da	      0xe800000000	                          call 0x400a3df	       104	stdio2.h	CALL_16
0x400a3df	      0xe961d2ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a3e4	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a3e9	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a3ee	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a3f0	      0xe800000000	                          call 0x400a3f5	       104	stdio2.h	CALL_16
0x400a3f5	      0xe94bd2ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a3fa	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a3ff	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a404	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a406	      0xe800000000	                          call 0x400a40b	       104	stdio2.h	CALL_16
0x400a40b	      0xe935d2ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a410	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a415	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a41a	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a41c	      0xe800000000	                          call 0x400a421	       104	stdio2.h	CALL_16
0x400a421	      0xe91fd2ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a426	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a42b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a430	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a432	      0xe800000000	                          call 0x400a437	       104	stdio2.h	CALL_16
0x400a437	      0xe909d2ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a43c	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a441	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a446	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a448	      0xe800000000	                          call 0x400a44d	       104	stdio2.h	CALL_16
0x400a44d	      0xe9f3d1ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a452	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a457	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a45c	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a45e	      0xe800000000	                          call 0x400a463	       104	stdio2.h	CALL_16
0x400a463	      0xe9ddd1ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a468	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a46d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a472	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a474	      0xe800000000	                          call 0x400a479	       104	stdio2.h	CALL_16
0x400a479	      0xe9c7d1ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a47e	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a483	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a488	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a48a	      0xe800000000	                          call 0x400a48f	       104	stdio2.h	CALL_16
0x400a48f	      0xe9b1d1ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a494	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a499	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a49e	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a4a0	      0xe800000000	                          call 0x400a4a5	       104	stdio2.h	CALL_16
0x400a4a5	      0xe99bd1ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a4aa	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a4af	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a4b4	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a4b6	      0xe800000000	                          call 0x400a4bb	       104	stdio2.h	CALL_16
0x400a4bb	      0xe985d1ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a4c0	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a4c5	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a4ca	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a4cc	      0xe800000000	                          call 0x400a4d1	       104	stdio2.h	CALL_16
0x400a4d1	      0xe96fd1ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a4d6	      0xe800000000	                          call 0x400a4db	      2677	dwarf.c	FUNCTION_30
0x400a4db	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a4e0	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a4e5	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a4e7	      0xe800000000	                          call 0x400a4ec	       104	stdio2.h	CALL_16
0x400a4ec	      0xe954d1ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a4f1	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a4f6	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a4fb	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a4fd	      0xe800000000	                          call 0x400a502	       104	stdio2.h	CALL_16
0x400a502	      0xe93ed1ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a507	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a50c	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a511	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a513	      0xe800000000	                          call 0x400a518	       104	stdio2.h	CALL_16
0x400a518	      0xe928d1ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a51d	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a522	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a527	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a529	      0xe800000000	                          call 0x400a52e	       104	stdio2.h	CALL_16
0x400a52e	      0xe912d1ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a533	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a538	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a53d	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a53f	      0xe800000000	                          call 0x400a544	       104	stdio2.h	CALL_16
0x400a544	      0xe9fcd0ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a549	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a54e	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a553	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a555	      0xe800000000	                          call 0x400a55a	       104	stdio2.h	CALL_16
0x400a55a	      0xe9e6d0ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a55f	        0x4983fe38	                           cmp r14, 0x38	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a563	     0xf849cdcffff	                            je 0x4008205	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a569	     0xf8773dcffff	                            ja 0x40081e2	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a56f	        0x4983fe19	                           cmp r14, 0x19	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a573	     0xf848cdcffff	                            je 0x4008205	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a579	     0xf876c010000	                            ja 0x400a6eb	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a57f	        0x4983fe02	                              cmp r14, 2	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a583	     0xf847cdcffff	                            je 0x4008205	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a589	        0x4983fe11	                           cmp r14, 0x11	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a58d	     0xf8409d8ffff	                            je 0x4007d9c	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a593	      0xe9add0ffff	                           jmp 0x4007645	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a598	    0x488d860080ff	                 lea rax, [rsi - 0x8000]	      2385	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9	IF_51
0x400a59f	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a5a1	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a5a6	    0x483dff7f0000	                         cmp rax, 0x7fff	      2385	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9	IF_51
0x400a5ac	     0xf8709010000	                            ja 0x400a6bb	      2385	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9	IF_51
0x400a5b2	      0xe8495dffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a5b7	            0x31ff	                            xor edi, edi	      2386	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9	IF_51	CALL_99
0x400a5b9	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a5bc	      0xba05000000	                              mov edx, 5	      2386	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9	IF_51	CALL_99
0x400a5c1	      0xbe00000000	                              mov esi, 0	      2386	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9	IF_51	CALL_99
0x400a5c6	      0xe800000000	                          call 0x400a5cb	      2386	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9	IF_51	CALL_99
0x400a5cb	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_16
0x400a5ce	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400a5d1	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a5d6	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a5d8	      0xe800000000	                          call 0x400a5dd	       104	stdio2.h	CALL_16
0x400a5dd	      0xe963d0ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a5e2	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a5e7	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a5ec	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a5ee	      0xe800000000	                          call 0x400a5f3	       104	stdio2.h	CALL_16
0x400a5f3	      0xe94dd0ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a5f8	      0x44894c2418	             mov dword [rsp + 0x18], r9d	       104	stdio2.h	CALL_16
0x400a5fd	      0xba05000000	                              mov edx, 5	      1723	dwarf.c	FUNCTION_28	CALL_10
0x400a602	      0xbe00000000	                              mov esi, 0	      1723	dwarf.c	FUNCTION_28	CALL_10
0x400a607	      0xe9bafcffff	                           jmp 0x400a2c6	      1723	dwarf.c	FUNCTION_28	CALL_10
0x400a60c	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a611	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a616	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a618	      0xe800000000	                          call 0x400a61d	       104	stdio2.h	CALL_16
0x400a61d	      0xe923d0ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a622	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a627	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a62c	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a62e	      0xe800000000	                          call 0x400a633	       104	stdio2.h	CALL_16
0x400a633	      0xe90dd0ffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a638	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a63d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a642	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a644	      0xe800000000	                          call 0x400a649	       104	stdio2.h	CALL_16
0x400a649	      0xe9f7cfffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a64e	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a653	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a658	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a65a	      0xe800000000	                          call 0x400a65f	       104	stdio2.h	CALL_16
0x400a65f	      0xe9e1cfffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a664	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400a669	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a66e	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a670	      0xe800000000	                          call 0x400a675	       104	stdio2.h	CALL_16
0x400a675	      0xe9cbcfffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a67a	      0xba05000000	                              mov edx, 5	       799	dwarf.c	FUNCTION_16	CALL_1
0x400a67f	      0xbe00000000	                              mov esi, 0	       799	dwarf.c	FUNCTION_16	CALL_1
0x400a684	      0x44894c2418	             mov dword [rsp + 0x18], r9d	       799	dwarf.c	FUNCTION_16	CALL_1
0x400a689	      0xe800000000	                          call 0x400a68e	       799	dwarf.c	FUNCTION_16	CALL_1
0x400a68e	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	       799	dwarf.c	FUNCTION_16	CALL_1
0x400a693	          0x4989c0	                             mov r8, rax	       799	dwarf.c	FUNCTION_16	CALL_1
0x400a696	      0xe989f0ffff	                           jmp 0x4009724	       799	dwarf.c	FUNCTION_16	CALL_1
0x400a69b	            0x31ff	                            xor edi, edi	      2436	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_10	CALL_104
0x400a69d	      0xbe00000000	                              mov esi, 0	      2436	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_10	CALL_104
0x400a6a2	      0xe800000000	                          call 0x400a6a7	      2436	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_10	CALL_104
0x400a6a7	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a6ac	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400a6af	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a6b1	      0xe800000000	                          call 0x400a6b6	       104	stdio2.h	CALL_16
0x400a6b6	      0xe98acfffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a6bb	      0xe8405cffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a6c0	            0x31ff	                            xor edi, edi	      2389	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9	CALL_102
0x400a6c2	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a6c5	      0xba05000000	                              mov edx, 5	      2389	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9	CALL_102
0x400a6ca	      0xbe00000000	                              mov esi, 0	      2389	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9	CALL_102
0x400a6cf	      0xe800000000	                          call 0x400a6d4	      2389	dwarf.c	FUNCTION_30	SWITCH_7	SWITCH_9	CALL_102
0x400a6d4	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_16
0x400a6d7	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400a6da	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400a6df	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400a6e1	      0xe800000000	                          call 0x400a6e6	       104	stdio2.h	CALL_16
0x400a6e6	      0xe95acfffff	                           jmp 0x4007645	       104	stdio2.h	CALL_16
0x400a6eb	        0x4983fe1b	                           cmp r14, 0x1b	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a6ef	     0xf84d5e0ffff	                            je 0x40087ca	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a6f5	        0x4983fe2a	                           cmp r14, 0x2a	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a6f9	     0xf8546cfffff	                           jne 0x4007645	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a6ff	      0xe901dbffff	                           jmp 0x4008205	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a704	          0x4531d2	                          xor r10d, r10d	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a707	      0xe985e1ffff	                           jmp 0x4008891	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a70c	    0x4981fe332100	                         cmp r14, 0x2133	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a713	     0xf8424e1ffff	                            je 0x400883d	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a719	    0x4981fe372100	                         cmp r14, 0x2137	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a720	     0xf851fcfffff	                           jne 0x4007645	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a726	      0xe9dadaffff	                           jmp 0x4008205	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a72b	    0x4981fe112100	                         cmp r14, 0x2111	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a732	     0xf83cddaffff	                           jae 0x4008205	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a738	    0x4981fe840000	                           cmp r14, 0x84	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a73f	     0xf8785000000	                            ja 0x400a7ca	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a745	    0x4981fe830000	                           cmp r14, 0x83	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a74c	     0xf83b3daffff	                           jae 0x4008205	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a752	        0x4983fe76	                           cmp r14, 0x76	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a756	            0x74ac	                            je 0x400a704	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a758	        0x4983fe7e	                           cmp r14, 0x7e	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a75c	     0xf85e3ceffff	                           jne 0x4007645	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a762	      0xe99edaffff	                           jmp 0x4008205	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a767	      0x44894c2418	             mov dword [rsp + 0x18], r9d	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a76c	      0xba05000000	                              mov edx, 5	      1709	dwarf.c	FUNCTION_28	CALL_4
0x400a771	      0xbe00000000	                              mov esi, 0	      1709	dwarf.c	FUNCTION_28	CALL_4
0x400a776	      0xe94bfbffff	                           jmp 0x400a2c6	      1709	dwarf.c	FUNCTION_28	CALL_4
0x400a77b	      0x44894c2418	             mov dword [rsp + 0x18], r9d	      1709	dwarf.c	FUNCTION_28	CALL_4
0x400a780	          0x4889ef	                            mov rdi, rbp	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x400a783	    0xff1500000000	                 call qword [0x0400a789]	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x400a789	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x400a78e	      0x4889442448	             mov qword [rsp + 0x48], rax	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x400a793	      0xe928dbffff	                           jmp 0x40082c0	      2037	dwarf.c	FUNCTION_30	SWITCH_2
0x400a798	      0xb900000000	                              mov ecx, 0	      2190	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	CALL_70
0x400a79d	      0xba8e080000	                          mov edx, 0x88e	      2190	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	CALL_70
0x400a7a2	      0xbe00000000	                              mov esi, 0	      2190	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	CALL_70
0x400a7a7	      0xbf00000000	                              mov edi, 0	      2190	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	CALL_70
0x400a7ac	      0xe800000000	                          call 0x400a7b1	      2190	dwarf.c	FUNCTION_30	IF_37	SWITCH_3	IF_38	ELSE_9	CALL_70
0x400a7b1	        0x4983fe4a	                           cmp r14, 0x4a	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a7b5	     0xf844adaffff	                            je 0x4008205	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a7bb	        0x4983fe4d	                           cmp r14, 0x4d	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a7bf	     0xf8580ceffff	                           jne 0x4007645	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a7c5	      0xe93bdaffff	                           jmp 0x4008205	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a7ca	    0x4981fe860000	                           cmp r14, 0x86	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a7d1	     0xf856eceffff	                           jne 0x4007645	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
0x400a7d7	      0xe929daffff	                           jmp 0x4008205	      2128	dwarf.c	FUNCTION_30	IF_37	SWITCH_3
check_gnu_debuglink	ELSE,0:FOR,0:CALL,11:WHILE,1:DO,0:functions,0:SWITCH,0:IF,3	83
0x4000110	            0x4157	                                push r15	      9625	dwarf.c	FUNCTION_101
0x4000112	            0x4156	                                push r14	      9625	dwarf.c	FUNCTION_101
0x4000114	          0x4531ff	                          xor r15d, r15d	      9634	dwarf.c	FUNCTION_101	IF_1
0x4000117	            0x4155	                                push r13	      9625	dwarf.c	FUNCTION_101
0x4000119	            0x4154	                                push r12	      9625	dwarf.c	FUNCTION_101
0x400011b	          0x4989f5	                            mov r13, rsi	      9625	dwarf.c	FUNCTION_101
0x400011e	              0x55	                                push rbp	      9625	dwarf.c	FUNCTION_101
0x400011f	              0x53	                                push rbx	      9625	dwarf.c	FUNCTION_101
0x4000120	          0x4889fd	                            mov rbp, rdi	      9625	dwarf.c	FUNCTION_101
0x4000123	        0x4883ec08	                              sub rsp, 8	      9625	dwarf.c	FUNCTION_101
0x4000127	      0xe800000000	                          call 0x400012c	      9632	dwarf.c	FUNCTION_101	CALL_1
0x400012c	          0x4885c0	                           test rax, rax	      9633	dwarf.c	FUNCTION_101	IF_1
0x400012f	     0xf84be000000	                            je 0x40001f3	      9633	dwarf.c	FUNCTION_101	IF_1
0x4000135	      0xbe00000000	                              mov esi, 0	      9637	dwarf.c	FUNCTION_101	CALL_2
0x400013a	          0x4889ef	                            mov rdi, rbp	      9637	dwarf.c	FUNCTION_101	CALL_2
0x400013d	          0x4989c4	                            mov r12, rax	      9637	dwarf.c	FUNCTION_101	CALL_2
0x4000140	      0xe800000000	                          call 0x4000145	      9637	dwarf.c	FUNCTION_101	CALL_2
0x4000145	          0x4885c0	                           test rax, rax	      9638	dwarf.c	FUNCTION_101	IF_2
0x4000148	          0x4889c3	                            mov rbx, rax	      9637	dwarf.c	FUNCTION_101	CALL_2
0x400014b	     0xf84b4000000	                            je 0x4000205	      9638	dwarf.c	FUNCTION_101	IF_2
0x4000151	          0x4531f6	                          xor r14d, r14d	      9638	dwarf.c	FUNCTION_101	IF_2
0x4000154	         0xf1f4000	                         nop dword [rax]	      9638	dwarf.c	FUNCTION_101	IF_2
0x4000158	          0x4889d9	                            mov rcx, rbx	       295	stdio2.h	FUNCTION_126	CALL_9
0x400015b	      0xba00200000	                         mov edx, 0x2000	       295	stdio2.h	FUNCTION_126	CALL_9
0x4000160	      0xbe01000000	                              mov esi, 1	       295	stdio2.h	FUNCTION_126	CALL_9
0x4000165	      0xbf00000000	                              mov edi, 0	       295	stdio2.h	FUNCTION_126	CALL_9
0x400016a	      0xe800000000	                          call 0x400016f	       295	stdio2.h	FUNCTION_126	CALL_9
0x400016f	          0x4885c0	                           test rax, rax	      9646	dwarf.c	FUNCTION_101	WHILE_1	CALL_6
0x4000172	            0x7442	                            je 0x40001b6	      9646	dwarf.c	FUNCTION_101	WHILE_1	CALL_6
0x4000174	    0x480500000000	                              add rax, 0	      9615	dwarf.c	FUNCTION_100	FOR_1
0x400017a	          0x4489f2	                           mov edx, r14d	      9614	dwarf.c	FUNCTION_100
0x400017d	    0x483d00000000	                              cmp rax, 0	      9615	dwarf.c	FUNCTION_100	FOR_1
0x4000183	            0xf7d2	                                 not edx	      9614	dwarf.c	FUNCTION_100
0x4000185	            0x7627	                           jbe 0x40001ae	      9615	dwarf.c	FUNCTION_100	FOR_1
0x4000187	      0xb900000000	                              mov ecx, 0	      9615	dwarf.c	FUNCTION_100	FOR_1
0x400018c	         0xf1f4000	                         nop dword [rax]	      9615	dwarf.c	FUNCTION_100	FOR_1
0x4000190	            0x89d6	                            mov esi, edx	      9616	dwarf.c	FUNCTION_100	FOR_1
0x4000192	          0x403231	                     xor sil, byte [rcx]	      9616	dwarf.c	FUNCTION_100	FOR_1
0x4000195	        0x4883c101	                              add rcx, 1	      9615	dwarf.c	FUNCTION_100	FOR_1
0x4000199	        0x48c1ea08	                              shr rdx, 8	      9616	dwarf.c	FUNCTION_100	FOR_1
0x400019d	        0x400fb6f6	                          movzx esi, sil	      9616	dwarf.c	FUNCTION_100	FOR_1
0x40001a1	    0x483314f50000	                  xor rdx, qword [rsi*8]	      9616	dwarf.c	FUNCTION_100	FOR_1
0x40001a9	          0x4839c8	                            cmp rax, rcx	      9615	dwarf.c	FUNCTION_100	FOR_1
0x40001ac	            0x75e2	                           jne 0x4000190	      9615	dwarf.c	FUNCTION_100	FOR_1
0x40001ae	          0x4189d6	                           mov r14d, edx	      9617	dwarf.c	FUNCTION_100
0x40001b1	          0x41f7d6	                                not r14d	      9617	dwarf.c	FUNCTION_100
0x40001b4	            0xeba2	                           jmp 0x4000158	      9617	dwarf.c	FUNCTION_100
0x40001b6	          0x4889df	                            mov rdi, rbx	      9649	dwarf.c	FUNCTION_101	CALL_8
0x40001b9	    0x41bf01000000	                             mov r15d, 1	      9659	dwarf.c	FUNCTION_101
0x40001bf	      0xe800000000	                          call 0x40001c4	      9649	dwarf.c	FUNCTION_101	CALL_8
0x40001c4	        0x4d3b7500	                    cmp r14, qword [r13]	      9651	dwarf.c	FUNCTION_101	IF_3
0x40001c8	            0x7429	                            je 0x40001f3	      9651	dwarf.c	FUNCTION_101	IF_3
0x40001ca	          0x4c89e7	                            mov rdi, r12	      9653	dwarf.c	FUNCTION_101	IF_3	CALL_9
0x40001cd	          0x4531ff	                          xor r15d, r15d	      9656	dwarf.c	FUNCTION_101	IF_3
0x40001d0	      0xe800000000	                          call 0x40001d5	      9653	dwarf.c	FUNCTION_101	IF_3	CALL_9
0x40001d5	      0xba05000000	                              mov edx, 5	      9654	dwarf.c	FUNCTION_101	IF_3	CALL_11
0x40001da	      0xbe00000000	                              mov esi, 0	      9654	dwarf.c	FUNCTION_101	IF_3	CALL_11
0x40001df	            0x31ff	                            xor edi, edi	      9654	dwarf.c	FUNCTION_101	IF_3	CALL_11
0x40001e1	      0xe800000000	                          call 0x40001e6	      9654	dwarf.c	FUNCTION_101	IF_3	CALL_11
0x40001e6	          0x4889ee	                            mov rsi, rbp	      9654	dwarf.c	FUNCTION_101	IF_3	CALL_11
0x40001e9	          0x4889c7	                            mov rdi, rax	      9654	dwarf.c	FUNCTION_101	IF_3	CALL_11
0x40001ec	            0x31c0	                            xor eax, eax	      9654	dwarf.c	FUNCTION_101	IF_3	CALL_11
0x40001ee	      0xe800000000	                          call 0x40001f3	      9654	dwarf.c	FUNCTION_101	IF_3	CALL_11
0x40001f3	        0x4883c408	                              add rsp, 8	      9660	dwarf.c	FUNCTION_101
0x40001f7	          0x4489f8	                           mov eax, r15d	      9660	dwarf.c	FUNCTION_101
0x40001fa	              0x5b	                                 pop rbx	      9660	dwarf.c	FUNCTION_101
0x40001fb	              0x5d	                                 pop rbp	      9660	dwarf.c	FUNCTION_101
0x40001fc	            0x415c	                                 pop r12	      9660	dwarf.c	FUNCTION_101
0x40001fe	            0x415d	                                 pop r13	      9660	dwarf.c	FUNCTION_101
0x4000200	            0x415e	                                 pop r14	      9660	dwarf.c	FUNCTION_101
0x4000202	            0x415f	                                 pop r15	      9660	dwarf.c	FUNCTION_101
0x4000204	              0xc3	                                     ret	      9660	dwarf.c	FUNCTION_101
0x4000205	          0x4c89e7	                            mov rdi, r12	      9641	dwarf.c	FUNCTION_101	IF_2	CALL_3
0x4000208	      0xe800000000	                          call 0x400020d	      9641	dwarf.c	FUNCTION_101	IF_2	CALL_3
0x400020d	            0x31ff	                            xor edi, edi	      9642	dwarf.c	FUNCTION_101	IF_2	CALL_5
0x400020f	      0xba05000000	                              mov edx, 5	      9642	dwarf.c	FUNCTION_101	IF_2	CALL_5
0x4000214	      0xbe00000000	                              mov esi, 0	      9642	dwarf.c	FUNCTION_101	IF_2	CALL_5
0x4000219	      0xe800000000	                          call 0x400021e	      9642	dwarf.c	FUNCTION_101	IF_2	CALL_5
0x400021e	          0x4889ee	                            mov rsi, rbp	      9642	dwarf.c	FUNCTION_101	IF_2	CALL_5
0x4000221	          0x4889c7	                            mov rdi, rax	      9642	dwarf.c	FUNCTION_101	IF_2	CALL_5
0x4000224	            0x31c0	                            xor eax, eax	      9642	dwarf.c	FUNCTION_101	IF_2	CALL_5
0x4000226	      0xe800000000	                          call 0x400022b	      9642	dwarf.c	FUNCTION_101	IF_2	CALL_5
0x400022b	            0xebc6	                           jmp 0x40001f3	      9643	dwarf.c	FUNCTION_101	IF_2
process_debug_info	ELSE,10:FOR,5:CALL,83:WHILE,1:DO,0:functions,0:SWITCH,2:IF,48	1388
0x400a7e0	            0x4157	                                push r15	      2771	dwarf.c	FUNCTION_34
0x400a7e2	            0x4156	                                push r14	      2771	dwarf.c	FUNCTION_34
0x400a7e4	          0x4889f8	                            mov rax, rdi	      2771	dwarf.c	FUNCTION_34
0x400a7e7	            0x4155	                                push r13	      2771	dwarf.c	FUNCTION_34
0x400a7e9	            0x4154	                                push r12	      2771	dwarf.c	FUNCTION_34
0x400a7eb	              0x55	                                push rbp	      2771	dwarf.c	FUNCTION_34
0x400a7ec	              0x53	                                push rbx	      2771	dwarf.c	FUNCTION_34
0x400a7ed	          0x4889f5	                            mov rbp, rsi	      2771	dwarf.c	FUNCTION_34
0x400a7f0	            0x89d3	                            mov ebx, edx	      2771	dwarf.c	FUNCTION_34
0x400a7f2	    0x4881ec180100	                          sub rsp, 0x118	      2771	dwarf.c	FUNCTION_34
0x400a7f9	      0x48897c2428	             mov qword [rsp + 0x28], rdi	      2771	dwarf.c	FUNCTION_34
0x400a7fe	        0x894c245c	             mov dword [rsp + 0x5c], ecx	      2771	dwarf.c	FUNCTION_34
0x400a802	    0x64488b3c2528	                mov rdi, qword fs:[0x28]	      2771	dwarf.c	FUNCTION_34
0x400a80b	    0x4889bc240801	            mov qword [rsp + 0x108], rdi	      2771	dwarf.c	FUNCTION_34
0x400a813	            0x31ff	                            xor edi, edi	      2771	dwarf.c	FUNCTION_34
0x400a815	        0x488b7820	            mov rdi, qword [rax + 0x20] 	      2772	dwarf.c	FUNCTION_34
0x400a819	      0x4489442458	             mov dword [rsp + 0x58], r8d	      2771	dwarf.c	FUNCTION_34
0x400a81e	          0x4989fe	                            mov r14, rdi	      2773	dwarf.c	FUNCTION_34
0x400a821	        0x4c037030	             add r14, qword [rax + 0x30]	      2773	dwarf.c	FUNCTION_34
0x400a825	            0x85c9	                           test ecx, ecx	      2778	dwarf.c	FUNCTION_34	IF_1
0x400a827	      0x48897c2420	             mov qword [rsp + 0x20], rdi	      2772	dwarf.c	FUNCTION_34
0x400a82c	     0xf85d3000000	                           jne 0x400a905	      2778	dwarf.c	FUNCTION_34	IF_1
0x400a832	    0x8b0500000000	            mov eax, dword [0x0400a838] 	      2778	dwarf.c	FUNCTION_34	IF_1
0x400a838	            0x85c0	                           test eax, eax	      2778	dwarf.c	FUNCTION_34	IF_1
0x400a83a	     0xf8450040000	                            je 0x400ac90	      2778	dwarf.c	FUNCTION_34	IF_1
0x400a840	    0x448b05000000	            mov r8d, dword [0x0400a847] 	      2780	dwarf.c	FUNCTION_34	IF_1
0x400a847	          0x4585c0	                           test r8d, r8d	      2780	dwarf.c	FUNCTION_34	IF_1
0x400a84a	     0xf854e040000	                           jne 0x400ac9e	      2780	dwarf.c	FUNCTION_34	IF_1
0x400a850	        0x8b7c2458	            mov edi, dword [rsp + 0x58] 	      2780	dwarf.c	FUNCTION_34	IF_1
0x400a854	            0x85ff	                           test edi, edi	      2780	dwarf.c	FUNCTION_34	IF_1
0x400a856	     0xf8542040000	                           jne 0x400ac9e	      2780	dwarf.c	FUNCTION_34	IF_1
0x400a85c	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2785	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400a861	    0xc78424940000	               mov dword [rsp + 0x94], 0	      2785	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400a86c	    0x41bcffffffff	                    mov r12d, 0xffffffff	      2793	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400a872	          0x4c39f0	                            cmp rax, r14	      2785	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400a875	          0x4989c5	                            mov r13, rax	      2785	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400a878	     0xf8365160000	                           jae 0x400bee3	      2785	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400a87e	        0x895c2408	                mov dword [rsp + 8], ebx	      2785	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400a882	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      2785	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400a887	          0x4531ff	                          xor r15d, r15d	      2785	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400a88a	        0x48892c24	                    mov qword [rsp], rbp	      2785	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400a88e	          0x4c89f5	                            mov rbp, r14	      2785	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400a891	     0xf1f80000000	                         nop dword [rax]	      2785	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400a898	        0x4d8d7504	                      lea r14, [r13 + 4]	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400a89c	          0x4c39f5	                            cmp rbp, r14	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400a89f	     0xf875b0b0000	                            ja 0x400b400	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400a8a5	          0x4c39ed	                            cmp rbp, r13	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400a8a8	     0xf86a30c0000	                           jbe 0x400b551	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400a8ae	          0x4889ee	                            mov rsi, rbp	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400a8b1	          0x4c29ee	                            sub rsi, r13	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400a8b4	          0x8d46ff	                      lea eax, [rsi - 1]	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400a8b7	          0x83f807	                              cmp eax, 7	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400a8ba	     0xf86450b0000	                           jbe 0x400b405	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400a8c0	            0x31c0	                            xor eax, eax	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400a8c2	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      2812	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_2	IF_4	CALL_5
0x400a8c7	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a8c9	          0x4889c6	                            mov rsi, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a8cc	        0x488b6f10	            mov rbp, qword [rdi + 0x10] 	      2812	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_2	IF_4	CALL_5
0x400a8d0	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a8d5	      0xe8265affff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a8da	      0xba05000000	                              mov edx, 5	      2812	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_2	IF_4	CALL_5
0x400a8df	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400a8e2	      0xbe00000000	                              mov esi, 0	      2812	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_2	IF_4	CALL_5
0x400a8e7	            0x31ff	                            xor edi, edi	      2812	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_2	IF_4	CALL_5
0x400a8e9	      0xe800000000	                          call 0x400a8ee	      2812	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_2	IF_4	CALL_5
0x400a8ee	          0x4889ea	                            mov rdx, rbp	      2812	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_2	IF_4	CALL_5
0x400a8f1	          0x4889c7	                            mov rdi, rax	      2812	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_2	IF_4	CALL_5
0x400a8f4	          0x4889de	                            mov rsi, rbx	      2812	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_2	IF_4	CALL_5
0x400a8f7	            0x31c0	                            xor eax, eax	      2812	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_2	IF_4	CALL_5
0x400a8f9	      0xe800000000	                          call 0x400a8fe	      2812	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_2	IF_4	CALL_5
0x400a8fe	            0x31c0	                            xor eax, eax	      2814	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_2	IF_4
0x400a900	      0xe97a0f0000	                           jmp 0x400b87f	      2814	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_2	IF_4
0x400a905	    0x448b15000000	           mov r10d, dword [0x0400a90c] 	      2780	dwarf.c	FUNCTION_34	IF_1
0x400a90c	          0x4585d2	                         test r10d, r10d	      2780	dwarf.c	FUNCTION_34	IF_1
0x400a90f	            0x750e	                           jne 0x400a91f	      2780	dwarf.c	FUNCTION_34	IF_1
0x400a911	      0x448b4c2458	            mov r9d, dword [rsp + 0x58] 	      2780	dwarf.c	FUNCTION_34	IF_1
0x400a916	          0x4585c9	                           test r9d, r9d	      2780	dwarf.c	FUNCTION_34	IF_1
0x400a919	     0xf843dffffff	                            je 0x400a85c	      2780	dwarf.c	FUNCTION_34	IF_1
0x400a91f	          0x4889ee	                            mov rsi, rbp	      2855	dwarf.c	FUNCTION_34	CALL_19
0x400a922	            0x89df	                            mov edi, ebx	      2855	dwarf.c	FUNCTION_34	CALL_19
0x400a924	      0xe89770ffff	 call sym.load_debug_section_with_follow	      2855	dwarf.c	FUNCTION_34	CALL_19
0x400a929	          0x4889da	                            mov rdx, rbx	      2856	dwarf.c	FUNCTION_34	IF_8
0x400a92c	          0x4889d8	                            mov rax, rbx	      2856	dwarf.c	FUNCTION_34	IF_8
0x400a92f	        0x48c1e204	                              shl rdx, 4	      2856	dwarf.c	FUNCTION_34	IF_8
0x400a933	        0x48c1e007	                              shl rax, 7	      2856	dwarf.c	FUNCTION_34	IF_8
0x400a937	          0x4829d0	                            sub rax, rdx	      2856	dwarf.c	FUNCTION_34	IF_8
0x400a93a	    0x4883b8000000	                      cmp qword [rax], 0	      2856	dwarf.c	FUNCTION_34	IF_8
0x400a942	     0xf84b60c0000	                            je 0x400b5fe	      2856	dwarf.c	FUNCTION_34	IF_8
0x400a948	      0x4c39742420	            cmp qword [rsp + 0x20], r14 	      2866	dwarf.c	FUNCTION_34	FOR_2
0x400a94d	    0xc78424940000	               mov dword [rsp + 0x94], 0	      2776	dwarf.c	FUNCTION_34
0x400a958	     0xf8309030000	                           jae 0x400ac67	      2866	dwarf.c	FUNCTION_34	FOR_2
0x400a95e	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2772	dwarf.c	FUNCTION_34
0x400a963	    0xc78424880000	               mov dword [rsp + 0x88], 0	      2772	dwarf.c	FUNCTION_34
0x400a96e	          0x4d89f5	                            mov r13, r14	      2924	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400a971	        0x48890424	                    mov qword [rsp], rax	      2772	dwarf.c	FUNCTION_34
0x400a975	          0x4889d8	                            mov rax, rbx	      2924	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400a978	        0x48c1e307	                              shl rbx, 7	      2924	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400a97c	        0x48c1e004	                              shl rax, 4	      2924	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400a980	          0x4829c3	                            sub rbx, rax	      2924	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400a983	    0x488d83000000	                          lea rax, [rbx]	      2924	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400a98a	    0x488984248000	             mov qword [rsp + 0x80], rax	      2924	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400a992	    0x660f1f440000	                    nop word [rax + rax]	      2924	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400a998	        0x488b0424	                    mov rax, qword [rsp]	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400a99c	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	      2876	dwarf.c	FUNCTION_34	FOR_2
0x400a9a8	      0xbe04000000	                              mov esi, 4	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400a9ad	    0x48c78424b800	               mov qword [rsp + 0xb8], 0	      2877	dwarf.c	FUNCTION_34	FOR_2
0x400a9b9	        0x488d5804	                      lea rbx, [rax + 4]	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400a9bd	          0x4939dd	                            cmp r13, rbx	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400a9c0	     0xf87ca040000	                            ja 0x400ae90	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400a9c6	        0x488b0424	                    mov rax, qword [rsp]	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400a9ca	          0x4939c5	                            cmp r13, rax	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400a9cd	     0xf87fd080000	                            ja 0x400b2d0	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400a9d3	        0x4c8d7806	                      lea r15, [rax + 6]	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400a9d7	    0x48c744243804	               mov qword [rsp + 0x38], 4	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400a9e0	    0x48c744240804	                  mov qword [rsp + 8], 4	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400a9e9	          0x4d39fd	                            cmp r13, r15	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400a9ec	     0xf86e9110000	                           jbe 0x400bbdb	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400a9f2	      0xbe02000000	                              mov esi, 2	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400a9f7	    0x48c744243000	               mov qword [rsp + 0x30], 0	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400aa00	      0xbd04000000	                              mov ebp, 4	      2895	dwarf.c	FUNCTION_34	FOR_2	ELSE_3
0x400aa05	          0x4889df	                            mov rdi, rbx	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400aa08	    0xff1500000000	                 call qword [0x0400aa0e]	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400aa0e	      0x6689442410	               mov word [rsp + 0x10], ax	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400aa13	      0x448b642458	           mov r12d, dword [rsp + 0x58] 	      1642	dwarf.c	FUNCTION_26	IF_1
0x400aa18	        0x4c8b3424	                    mov r14, qword [rsp]	      2901	dwarf.c	FUNCTION_34	FOR_2
0x400aa1c	      0x4c2b742420	             sub r14, qword [rsp + 0x20]	      2901	dwarf.c	FUNCTION_34	FOR_2
0x400aa21	          0x4585e4	                         test r12d, r12d	      1642	dwarf.c	FUNCTION_26	IF_1
0x400aa24	     0xf8416050000	                            je 0x400af40	      1642	dwarf.c	FUNCTION_26	IF_1
0x400aa2a	    0x488b05000000	            mov rax, qword [0x0400aa31] 	      1644	dwarf.c	FUNCTION_26	IF_1
0x400aa31	    0x8b0d00000000	            mov ecx, dword [0x0400aa37] 	      1645	dwarf.c	FUNCTION_26	IF_1
0x400aa37	      0xba02000000	                              mov edx, 2	      1646	dwarf.c	FUNCTION_26	IF_1
0x400aa3c	            0x85c9	                           test ecx, ecx	      1654	dwarf.c	FUNCTION_26	WHILE_1
0x400aa3e	            0x743e	                            je 0x400aa7e	      1654	dwarf.c	FUNCTION_26	WHILE_1
0x400aa40	      0x4c3b74d008	       cmp r14, qword [rax + rdx*8 + 8] 	      1656	dwarf.c	FUNCTION_26	WHILE_1	IF_2
0x400aa45	     0xf8415050000	                            je 0x400af60	      1656	dwarf.c	FUNCTION_26	WHILE_1	IF_2
0x400aa4b	          0x83e901	                              sub ecx, 1	      1656	dwarf.c	FUNCTION_26	WHILE_1	IF_2
0x400aa4e	        0x4883c101	                              add rcx, 1	      1656	dwarf.c	FUNCTION_26	WHILE_1	IF_2
0x400aa52	          0x4889ce	                            mov rsi, rcx	      1656	dwarf.c	FUNCTION_26	WHILE_1	IF_2
0x400aa55	        0x48c1e607	                              shl rsi, 7	      1656	dwarf.c	FUNCTION_26	WHILE_1	IF_2
0x400aa59	        0x488d0cce	                  lea rcx, [rsi + rcx*8]	      1656	dwarf.c	FUNCTION_26	WHILE_1	IF_2
0x400aa5d	          0x4801c1	                            add rcx, rax	      1656	dwarf.c	FUNCTION_26	WHILE_1	IF_2
0x400aa60	            0xeb11	                           jmp 0x400aa73	      1656	dwarf.c	FUNCTION_26	WHILE_1	IF_2
0x400aa62	    0x660f1f440000	                    nop word [rax + rax]	      1656	dwarf.c	FUNCTION_26	WHILE_1	IF_2
0x400aa68	      0x4c3b74d008	       cmp r14, qword [rax + rdx*8 + 8] 	      1656	dwarf.c	FUNCTION_26	WHILE_1	IF_2
0x400aa6d	     0xf84ed040000	                            je 0x400af60	      1656	dwarf.c	FUNCTION_26	WHILE_1	IF_2
0x400aa73	    0x480588000000	                           add rax, 0x88	      1658	dwarf.c	FUNCTION_26	WHILE_1
0x400aa79	          0x4839c1	                            cmp rcx, rax	      1654	dwarf.c	FUNCTION_26	WHILE_1
0x400aa7c	            0x75ea	                           jne 0x400aa68	      1654	dwarf.c	FUNCTION_26	WHILE_1
0x400aa7e	    0x48c744241800	               mov qword [rsp + 0x18], 0	      1661	dwarf.c	FUNCTION_26
0x400aa87	    0x66837c241004	                cmp word [rsp + 0x10], 4	      2905	dwarf.c	FUNCTION_34	FOR_2	IF_11
0x400aa8d	     0xf8685040000	                           jbe 0x400af18	      2905	dwarf.c	FUNCTION_34	FOR_2	IF_11
0x400aa93	        0x488d5303	                      lea rdx, [rbx + 3]	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400aa97	          0x4939d5	                            cmp r13, rdx	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400aa9a	     0xf8778080000	                            ja 0x400b318	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400aaa0	          0x4d39fd	                            cmp r13, r15	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400aaa3	            0x7612	                           jbe 0x400aab7	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400aaa5	          0x4c89ee	                            mov rsi, r13	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400aaa8	          0x4c29fe	                            sub rsi, r15	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400aaab	          0x8d46ff	                      lea eax, [rsi - 1]	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400aaae	          0x83f807	                              cmp eax, 7	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400aab1	     0xf86ce140000	                           jbe 0x400bf85	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400aab7	        0x4c8d7b04	                      lea r15, [rbx + 4]	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400aabb	          0x4d39fd	                            cmp r13, r15	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400aabe	     0xf86340a0000	                           jbe 0x400b4f8	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400aac4	      0xbe01000000	                              mov esi, 1	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400aac9	    0xc74424580000	               mov dword [rsp + 0x58], 0	      2914	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400aad1	    0xc74424480000	               mov dword [rsp + 0x48], 0	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400aad9	          0x4889d7	                            mov rdi, rdx	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400aadc	    0xff1500000000	                 call qword [0x0400aae2]	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400aae2	          0x4189c1	                            mov r9d, eax	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400aae5	      0x488b442408	                mov rax, qword [rsp + 8]	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400aaea	        0x498d1c07	                    lea rbx, [r15 + rax]	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400aaee	          0x4939dd	                            cmp r13, rbx	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400aaf1	     0xf8741040000	                            ja 0x400af38	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400aaf7	          0x4d39ef	                            cmp r15, r13	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400aafa	     0xf83400a0000	                           jae 0x400b540	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400ab00	          0x4489ee	                           mov esi, r13d	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400ab03	          0x4429fe	                           sub esi, r15d	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400ab06	          0x8d46ff	                      lea eax, [rsi - 1]	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400ab09	          0x4989dc	                            mov r12, rbx	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400ab0c	    0x48c744244000	               mov qword [rsp + 0x40], 0	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400ab15	          0x83f807	                              cmp eax, 7	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400ab18	            0x7719	                            ja 0x400ab33	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400ab1a	      0x44884c2450	              mov byte [rsp + 0x50], r9b	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400ab1f	          0x4c89ff	                            mov rdi, r15	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400ab22	    0xff1500000000	                 call qword [0x0400ab28]	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400ab28	    0x440fb64c2450	           movzx r9d, byte [rsp + 0x50] 	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400ab2e	      0x4889442440	             mov qword [rsp + 0x40], rax	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400ab33	    0x48837c241800	               cmp qword [rsp + 0x18], 0	      2921	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400ab39	     0xf8451080000	                            je 0x400b390	      2921	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400ab3f	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2928	dwarf.c	FUNCTION_34	FOR_2	ELSE_5
0x400ab44	        0x488b7820	            mov rdi, qword [rax + 0x20] 	      2928	dwarf.c	FUNCTION_34	FOR_2	ELSE_5
0x400ab48	        0x488b4060	            mov rax, qword [rax + 0x60] 	      2929	dwarf.c	FUNCTION_34	FOR_2	ELSE_5
0x400ab4c	      0x48897c2460	             mov qword [rsp + 0x60], rdi	      2928	dwarf.c	FUNCTION_34	FOR_2	ELSE_5
0x400ab51	      0x4889442450	             mov qword [rsp + 0x50], rax	      2929	dwarf.c	FUNCTION_34	FOR_2	ELSE_5
0x400ab56	    0x66837c241004	                cmp word [rsp + 0x10], 4	      2932	dwarf.c	FUNCTION_34	FOR_2	IF_13
0x400ab5c	     0xf8752020000	                            ja 0x400adb4	      2932	dwarf.c	FUNCTION_34	FOR_2	IF_13
0x400ab62	        0x4c8d7b01	                      lea r15, [rbx + 1]	      2933	dwarf.c	FUNCTION_34	FOR_2	IF_13
0x400ab66	          0x4d39fd	                            cmp r13, r15	      2933	dwarf.c	FUNCTION_34	FOR_2	IF_13
0x400ab69	     0xf8731020000	                            ja 0x400ada0	      2933	dwarf.c	FUNCTION_34	FOR_2	IF_13
0x400ab6f	          0x4939dd	                            cmp r13, rbx	      2933	dwarf.c	FUNCTION_34	FOR_2	IF_13
0x400ab72	            0x7612	                           jbe 0x400ab86	      2933	dwarf.c	FUNCTION_34	FOR_2	IF_13
0x400ab74	          0x4c89ee	                            mov rsi, r13	      2933	dwarf.c	FUNCTION_34	FOR_2	IF_13
0x400ab77	          0x4829de	                            sub rsi, rbx	      2933	dwarf.c	FUNCTION_34	FOR_2	IF_13
0x400ab7a	          0x8d46ff	                      lea eax, [rsi - 1]	      2933	dwarf.c	FUNCTION_34	FOR_2	IF_13
0x400ab7d	          0x83f807	                              cmp eax, 7	      2933	dwarf.c	FUNCTION_34	FOR_2	IF_13
0x400ab80	     0xf861f020000	                           jbe 0x400ada5	      2933	dwarf.c	FUNCTION_34	FOR_2	IF_13
0x400ab86	            0x31db	                            xor ebx, ebx	      2933	dwarf.c	FUNCTION_34	FOR_2	IF_13
0x400ab88	      0xba05000000	                              mov edx, 5	      2938	dwarf.c	FUNCTION_34	FOR_2	IF_14	CALL_25
0x400ab8d	      0xbe00000000	                              mov esi, 0	      2938	dwarf.c	FUNCTION_34	FOR_2	IF_14	CALL_25
0x400ab92	            0x31ff	                            xor edi, edi	      2938	dwarf.c	FUNCTION_34	FOR_2	IF_14	CALL_25
0x400ab94	      0xe800000000	                          call 0x400ab99	      2938	dwarf.c	FUNCTION_34	FOR_2	IF_14	CALL_25
0x400ab99	            0x89ea	                            mov edx, ebp	      2938	dwarf.c	FUNCTION_34	FOR_2	IF_14	CALL_25
0x400ab9b	          0x4889c7	                            mov rdi, rax	      2938	dwarf.c	FUNCTION_34	FOR_2	IF_14	CALL_25
0x400ab9e	            0x89de	                            mov esi, ebx	      2938	dwarf.c	FUNCTION_34	FOR_2	IF_14	CALL_25
0x400aba0	            0x31c0	                            xor eax, eax	      2938	dwarf.c	FUNCTION_34	FOR_2	IF_14	CALL_25
0x400aba2	          0x4d89fc	                            mov r12, r15	      2940	dwarf.c	FUNCTION_34	FOR_2	IF_14
0x400aba5	      0xe800000000	                          call 0x400abaa	      2938	dwarf.c	FUNCTION_34	FOR_2	IF_14	CALL_25
0x400abaa	          0x4189e9	                            mov r9d, ebp	      2940	dwarf.c	FUNCTION_34	FOR_2	IF_14
0x400abad	        0x8b5c2458	            mov ebx, dword [rsp + 0x58] 	      2943	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400abb1	          0x4531c0	                            xor r8d, r8d	      2878	dwarf.c	FUNCTION_34	FOR_2
0x400abb4	            0x85db	                           test ebx, ebx	      2943	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400abb6	            0x7468	                            je 0x400ac20	      2943	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400abb8	      0x498d5c2408	                      lea rbx, [r12 + 8]	      2945	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400abbd	          0x4939dd	                            cmp r13, rbx	      2945	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400abc0	     0xf8382080000	                           jae 0x400b448	      2945	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400abc6	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	      2945	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400abd2	    0x48c78424b800	               mov qword [rsp + 0xb8], 0	      2945	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400abde	      0x488b442408	                mov rax, qword [rsp + 8]	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400abe3	        0x4c8d2403	                    lea r12, [rbx + rax]	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400abe7	          0x4d39e5	                            cmp r13, r12	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400abea	     0xf87d8060000	                            ja 0x400b2c8	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400abf0	          0x4531c0	                            xor r8d, r8d	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400abf3	          0x4939dd	                            cmp r13, rbx	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400abf6	            0x7628	                           jbe 0x400ac20	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400abf8	          0x4489ee	                           mov esi, r13d	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400abfb	            0x29de	                            sub esi, ebx	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400abfd	          0x8d46ff	                      lea eax, [rsi - 1]	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400ac00	          0x4531c0	                            xor r8d, r8d	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400ac03	          0x83f807	                              cmp eax, 7	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400ac06	            0x7718	                            ja 0x400ac20	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400ac08	      0x44884c2468	              mov byte [rsp + 0x68], r9b	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400ac0d	          0x4889df	                            mov rdi, rbx	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400ac10	    0xff1500000000	                 call qword [0x0400ac16]	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400ac16	    0x440fb64c2468	           movzx r9d, byte [rsp + 0x68] 	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400ac1c	          0x4989c0	                             mov r8, rax	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400ac1f	              0x90	                                     nop	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400ac20	      0x4c8b7c2430	            mov r15, qword [rsp + 0x30] 	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400ac25	      0x4c037c2438	             add r15, qword [rsp + 0x38]	      2947	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400ac2a	    0x488b15000000	            mov rdx, qword [0x0400ac31] 	      2950	dwarf.c	FUNCTION_34	FOR_2	IF_16
0x400ac31	        0x4b8d043e	                    lea rax, [r14 + r15]	      2951	dwarf.c	FUNCTION_34	FOR_2	IF_16
0x400ac35	          0x4839d0	                            cmp rax, rdx	      2950	dwarf.c	FUNCTION_34	FOR_2	IF_16
0x400ac38	     0xf8392010000	                           jae 0x400add0	      2950	dwarf.c	FUNCTION_34	FOR_2	IF_16
0x400ac3e	      0x4803442420	             add rax, qword [rsp + 0x20]	      2953	dwarf.c	FUNCTION_34	FOR_2	IF_16
0x400ac43	        0x48890424	                    mov qword [rsp], rax	      2953	dwarf.c	FUNCTION_34	FOR_2	IF_16
0x400ac47	    0x838424880000	               add dword [rsp + 0x88], 1	      2866	dwarf.c	FUNCTION_34	FOR_2
0x400ac4f	        0x4c392c24	                    cmp qword [rsp], r13	      2866	dwarf.c	FUNCTION_34	FOR_2
0x400ac53	     0xf823ffdffff	                            jb 0x400a998	      2866	dwarf.c	FUNCTION_34	FOR_2
0x400ac59	      0x448b64245c	           mov r12d, dword [rsp + 0x5c] 	      3253	dwarf.c	FUNCTION_34	IF_46
0x400ac5e	          0x4585e4	                         test r12d, r12d	      3253	dwarf.c	FUNCTION_34	IF_46
0x400ac61	     0xf84d2000000	                            je 0x400ad39	      3253	dwarf.c	FUNCTION_34	IF_46
0x400ac67	    0x8b1500000000	            mov edx, dword [0x0400ac6d] 	      3255	dwarf.c	FUNCTION_34	IF_46
0x400ac6d	            0x85d2	                           test edx, edx	      3255	dwarf.c	FUNCTION_34	IF_46
0x400ac6f	     0xf85050c0000	                           jne 0x400b87a	      3255	dwarf.c	FUNCTION_34	IF_46
0x400ac75	        0x8b442458	            mov eax, dword [rsp + 0x58] 	      3255	dwarf.c	FUNCTION_34	IF_46
0x400ac79	            0x85c0	                           test eax, eax	      3255	dwarf.c	FUNCTION_34	IF_46
0x400ac7b	     0xf85f90b0000	                           jne 0x400b87a	      3255	dwarf.c	FUNCTION_34	IF_46
0x400ac81	      0xe9d9000000	                           jmp 0x400ad5f	      3255	dwarf.c	FUNCTION_34	IF_46
0x400ac86	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3255	dwarf.c	FUNCTION_34	IF_46
0x400ac90	    0x8b0500000000	            mov eax, dword [0x0400ac96] 	      2778	dwarf.c	FUNCTION_34	IF_1
0x400ac96	            0x85c0	                           test eax, eax	      2778	dwarf.c	FUNCTION_34	IF_1
0x400ac98	     0xf85a2fbffff	                           jne 0x400a840	      2778	dwarf.c	FUNCTION_34	IF_1
0x400ac9e	    0xc78424940000	               mov dword [rsp + 0x94], 0	      2776	dwarf.c	FUNCTION_34
0x400aca9	          0x4889ee	                            mov rsi, rbp	      2847	dwarf.c	FUNCTION_34	IF_7	CALL_13
0x400acac	      0xbf0a000000	                            mov edi, 0xa	      2847	dwarf.c	FUNCTION_34	IF_7	CALL_13
0x400acb1	      0xe80a6dffff	 call sym.load_debug_section_with_follow	      2847	dwarf.c	FUNCTION_34	IF_7	CALL_13
0x400acb6	          0x4889ee	                            mov rsi, rbp	      2848	dwarf.c	FUNCTION_34	IF_7	CALL_14
0x400acb9	      0xbf0b000000	                            mov edi, 0xb	      2848	dwarf.c	FUNCTION_34	IF_7	CALL_14
0x400acbe	      0xe8fd6cffff	 call sym.load_debug_section_with_follow	      2848	dwarf.c	FUNCTION_34	IF_7	CALL_14
0x400acc3	          0x4889ee	                            mov rsi, rbp	      2849	dwarf.c	FUNCTION_34	IF_7	CALL_15
0x400acc6	      0xbf22000000	                           mov edi, 0x22	      2849	dwarf.c	FUNCTION_34	IF_7	CALL_15
0x400accb	      0xe8f06cffff	 call sym.load_debug_section_with_follow	      2849	dwarf.c	FUNCTION_34	IF_7	CALL_15
0x400acd0	          0x4889ee	                            mov rsi, rbp	      2850	dwarf.c	FUNCTION_34	IF_7	CALL_16
0x400acd3	      0xbf23000000	                           mov edi, 0x23	      2850	dwarf.c	FUNCTION_34	IF_7	CALL_16
0x400acd8	      0xe8e36cffff	 call sym.load_debug_section_with_follow	      2850	dwarf.c	FUNCTION_34	IF_7	CALL_16
0x400acdd	          0x4889ee	                            mov rsi, rbp	      2851	dwarf.c	FUNCTION_34	IF_7	CALL_17
0x400ace0	      0xbf24000000	                           mov edi, 0x24	      2851	dwarf.c	FUNCTION_34	IF_7	CALL_17
0x400ace5	      0xe8d66cffff	 call sym.load_debug_section_with_follow	      2851	dwarf.c	FUNCTION_34	IF_7	CALL_17
0x400acea	          0x4889ee	                            mov rsi, rbp	      2852	dwarf.c	FUNCTION_34	IF_7	CALL_18
0x400aced	      0xbf25000000	                           mov edi, 0x25	      2852	dwarf.c	FUNCTION_34	IF_7	CALL_18
0x400acf2	      0xe8c96cffff	 call sym.load_debug_section_with_follow	      2852	dwarf.c	FUNCTION_34	IF_7	CALL_18
0x400acf7	          0x4889ee	                            mov rsi, rbp	      2855	dwarf.c	FUNCTION_34	CALL_19
0x400acfa	            0x89df	                            mov edi, ebx	      2855	dwarf.c	FUNCTION_34	CALL_19
0x400acfc	      0xe8bf6cffff	 call sym.load_debug_section_with_follow	      2855	dwarf.c	FUNCTION_34	CALL_19
0x400ad01	          0x4889da	                            mov rdx, rbx	      2856	dwarf.c	FUNCTION_34	IF_8
0x400ad04	          0x4889d8	                            mov rax, rbx	      2856	dwarf.c	FUNCTION_34	IF_8
0x400ad07	        0x48c1e204	                              shl rdx, 4	      2856	dwarf.c	FUNCTION_34	IF_8
0x400ad0b	        0x48c1e007	                              shl rax, 7	      2856	dwarf.c	FUNCTION_34	IF_8
0x400ad0f	          0x4829d0	                            sub rax, rdx	      2856	dwarf.c	FUNCTION_34	IF_8
0x400ad12	    0x4883b8000000	                      cmp qword [rax], 0	      2856	dwarf.c	FUNCTION_34	IF_8
0x400ad1a	     0xf84de080000	                            je 0x400b5fe	      2856	dwarf.c	FUNCTION_34	IF_8
0x400ad20	    0x48833d000000	               cmp qword [0x0400ad28], 0	      2863	dwarf.c	FUNCTION_34	IF_9
0x400ad28	     0xf849e110000	                            je 0x400becc	      2863	dwarf.c	FUNCTION_34	IF_9
0x400ad2e	      0x4c39742420	            cmp qword [rsp + 0x20], r14 	      2866	dwarf.c	FUNCTION_34	FOR_2
0x400ad33	     0xf8225fcffff	                            jb 0x400a95e	      2866	dwarf.c	FUNCTION_34	FOR_2
0x400ad39	    0x8b2d00000000	            mov ebp, dword [0x0400ad3f] 	      3253	dwarf.c	FUNCTION_34	IF_46
0x400ad3f	            0x85ed	                           test ebp, ebp	      3253	dwarf.c	FUNCTION_34	IF_46
0x400ad41	            0x750a	                           jne 0x400ad4d	      3253	dwarf.c	FUNCTION_34	IF_46
0x400ad43	    0x8b1d00000000	            mov ebx, dword [0x0400ad49] 	      3253	dwarf.c	FUNCTION_34	IF_46
0x400ad49	            0x85db	                           test ebx, ebx	      3253	dwarf.c	FUNCTION_34	IF_46
0x400ad4b	            0x7438	                            je 0x400ad85	      3253	dwarf.c	FUNCTION_34	IF_46
0x400ad4d	    0x8b3500000000	            mov esi, dword [0x0400ad53] 	      3255	dwarf.c	FUNCTION_34	IF_46
0x400ad53	            0x85f6	                           test esi, esi	      3255	dwarf.c	FUNCTION_34	IF_46
0x400ad55	            0x752e	                           jne 0x400ad85	      3255	dwarf.c	FUNCTION_34	IF_46
0x400ad57	        0x8b4c2458	            mov ecx, dword [rsp + 0x58] 	      3255	dwarf.c	FUNCTION_34	IF_46
0x400ad5b	            0x85c9	                           test ecx, ecx	      3255	dwarf.c	FUNCTION_34	IF_46
0x400ad5d	            0x7526	                           jne 0x400ad85	      3255	dwarf.c	FUNCTION_34	IF_46
0x400ad5f	    0x8b0500000000	            mov eax, dword [0x0400ad65] 	      3257	dwarf.c	FUNCTION_34	IF_46	IF_47
0x400ad65	    0x8bbc24940000	            mov edi, dword [rsp + 0x94] 	      3258	dwarf.c	FUNCTION_34	IF_46	IF_47
0x400ad6c	      0x448b5c245c	           mov r11d, dword [rsp + 0x5c] 	      3263	dwarf.c	FUNCTION_34	IF_48
0x400ad71	            0x39f8	                            cmp eax, edi	      3258	dwarf.c	FUNCTION_34	IF_46	IF_47
0x400ad73	           0xf43c7	                         cmovae eax, edi	      3258	dwarf.c	FUNCTION_34	IF_46	IF_47
0x400ad76	          0x4585db	                         test r11d, r11d	      3263	dwarf.c	FUNCTION_34	IF_48
0x400ad79	    0x890500000000	            mov dword [0x0400ad7f], eax 	      3258	dwarf.c	FUNCTION_34	IF_46	IF_47
0x400ad7f	     0xf85f50a0000	                           jne 0x400b87a	      3263	dwarf.c	FUNCTION_34	IF_48
0x400ad85	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x400ad8a	      0xe800000000	                          call 0x400ad8f	       104	stdio2.h	CALL_16
0x400ad8f	      0xb801000000	                              mov eax, 1	      3266	dwarf.c	FUNCTION_34
0x400ad94	      0xe9e60a0000	                           jmp 0x400b87f	      3266	dwarf.c	FUNCTION_34
0x400ad99	     0xf1f80000000	                         nop dword [rax]	      3266	dwarf.c	FUNCTION_34
0x400ada0	      0xbe01000000	                              mov esi, 1	      3266	dwarf.c	FUNCTION_34
0x400ada5	          0x4889df	                            mov rdi, rbx	      2933	dwarf.c	FUNCTION_34	FOR_2	IF_13
0x400ada8	          0x4d89fc	                            mov r12, r15	      2933	dwarf.c	FUNCTION_34	FOR_2	IF_13
0x400adab	    0xff1500000000	                 call qword [0x0400adb1]	      2933	dwarf.c	FUNCTION_34	FOR_2	IF_13
0x400adb1	          0x4189c1	                            mov r9d, eax	      2933	dwarf.c	FUNCTION_34	FOR_2	IF_13
0x400adb4	        0x418d41fe	                       lea eax, [r9 - 2]	      2936	dwarf.c	FUNCTION_34	FOR_2	IF_14
0x400adb8	        0x410fb6d9	                          movzx ebx, r9b	      2936	dwarf.c	FUNCTION_34	FOR_2	IF_14
0x400adbc	          0x4d89e7	                            mov r15, r12	      2936	dwarf.c	FUNCTION_34	FOR_2	IF_14
0x400adbf	            0x3c06	                               cmp al, 6	      2936	dwarf.c	FUNCTION_34	FOR_2	IF_14
0x400adc1	     0xf86e6fdffff	                           jbe 0x400abad	      2936	dwarf.c	FUNCTION_34	FOR_2	IF_14
0x400adc7	      0xe9bcfdffff	                           jmp 0x400ab88	      2936	dwarf.c	FUNCTION_34	FOR_2	IF_14
0x400adcc	         0xf1f4000	                         nop dword [rax]	      2936	dwarf.c	FUNCTION_34	FOR_2	IF_14
0x400add0	      0x448b5c245c	           mov r11d, dword [rsp + 0x5c] 	      2958	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400add5	          0x4585db	                         test r11d, r11d	      2958	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400add8	     0xf8592010000	                           jne 0x400af70	      2958	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400adde	    0x448b15000000	           mov r10d, dword [0x0400ade5] 	      2958	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400ade5	          0x4585d2	                         test r10d, r10d	      2958	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400ade8	     0xf8582010000	                           jne 0x400af70	      2958	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400adee	    0x8b3d00000000	            mov edi, dword [0x0400adf4] 	      2958	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400adf4	            0x85ff	                           test edi, edi	      2958	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400adf6	     0xf8574010000	                           jne 0x400af70	      2958	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400adfc	          0x4885d2	                           test rdx, rdx	      2979	dwarf.c	FUNCTION_34	FOR_2	IF_18
0x400adff	     0xf840e020000	                            je 0x400b013	      2979	dwarf.c	FUNCTION_34	FOR_2	IF_18
0x400ae05	           0xf1f00	                         nop dword [rax]	      2979	dwarf.c	FUNCTION_34	FOR_2	IF_18
0x400ae08	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      3021	dwarf.c	FUNCTION_34	FOR_2
0x400ae0d	          0x4c01f0	                            add rax, r14	      3021	dwarf.c	FUNCTION_34	FOR_2
0x400ae10	      0x4803442430	             add rax, qword [rsp + 0x30]	      3022	dwarf.c	FUNCTION_34	FOR_2	IF_21
0x400ae15	     0xf824f100000	                            jb 0x400be6a	      3022	dwarf.c	FUNCTION_34	FOR_2	IF_21
0x400ae1b	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      3023	dwarf.c	FUNCTION_34	FOR_2	IF_21
0x400ae20	        0x483b4730	            cmp rax, qword [rdi + 0x30] 	      3023	dwarf.c	FUNCTION_34	FOR_2	IF_21
0x400ae24	     0xf8740100000	                            ja 0x400be6a	      3023	dwarf.c	FUNCTION_34	FOR_2	IF_21
0x400ae2a	       0xfb7442410	           movzx eax, word [rsp + 0x10] 	      3036	dwarf.c	FUNCTION_34	FOR_2	IF_22
0x400ae2f	        0x4c013c24	                    add qword [rsp], r15	      3034	dwarf.c	FUNCTION_34	FOR_2
0x400ae33	          0x83e802	                              sub eax, 2	      3036	dwarf.c	FUNCTION_34	FOR_2	IF_22
0x400ae36	        0x6683f803	                               cmp ax, 3	      3036	dwarf.c	FUNCTION_34	FOR_2	IF_22
0x400ae3a	     0xf8730060000	                            ja 0x400b470	      3036	dwarf.c	FUNCTION_34	FOR_2	IF_22
0x400ae40	      0x448b7c2448	           mov r15d, dword [rsp + 0x48] 	      3044	dwarf.c	FUNCTION_34	FOR_2	IF_23
0x400ae45	          0x4489f8	                           mov eax, r15d	      3044	dwarf.c	FUNCTION_34	FOR_2	IF_23
0x400ae48	          0x83e801	                              sub eax, 1	      3044	dwarf.c	FUNCTION_34	FOR_2	IF_23
0x400ae4b	          0x83f801	                              cmp eax, 1	      3044	dwarf.c	FUNCTION_34	FOR_2	IF_23
0x400ae4e	     0xf86ec070000	                           jbe 0x400b640	      3044	dwarf.c	FUNCTION_34	FOR_2	IF_23
0x400ae54	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ae56	          0x4c89f6	                            mov rsi, r14	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ae59	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ae5e	      0xe89d54ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ae63	            0x31ff	                            xor edi, edi	      3047	dwarf.c	FUNCTION_34	FOR_2	IF_23	CALL_58
0x400ae65	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400ae68	      0xba05000000	                              mov edx, 5	      3047	dwarf.c	FUNCTION_34	FOR_2	IF_23	CALL_58
0x400ae6d	      0xbe00000000	                              mov esi, 0	      3047	dwarf.c	FUNCTION_34	FOR_2	IF_23	CALL_58
0x400ae72	      0xe800000000	                          call 0x400ae77	      3047	dwarf.c	FUNCTION_34	FOR_2	IF_23	CALL_58
0x400ae77	          0x4489fa	                           mov edx, r15d	      3047	dwarf.c	FUNCTION_34	FOR_2	IF_23	CALL_58
0x400ae7a	          0x4889c7	                            mov rdi, rax	      3047	dwarf.c	FUNCTION_34	FOR_2	IF_23	CALL_58
0x400ae7d	          0x4889de	                            mov rsi, rbx	      3047	dwarf.c	FUNCTION_34	FOR_2	IF_23	CALL_58
0x400ae80	            0x31c0	                            xor eax, eax	      3047	dwarf.c	FUNCTION_34	FOR_2	IF_23	CALL_58
0x400ae82	      0xe800000000	                          call 0x400ae87	      3047	dwarf.c	FUNCTION_34	FOR_2	IF_23	CALL_58
0x400ae87	      0xe9bbfdffff	                           jmp 0x400ac47	      3050	dwarf.c	FUNCTION_34	FOR_2	IF_23
0x400ae8c	         0xf1f4000	                         nop dword [rax]	      3050	dwarf.c	FUNCTION_34	FOR_2	IF_23
0x400ae90	        0x4c8b3c24	                    mov r15, qword [rsp]	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400ae94	          0x4c89ff	                            mov rdi, r15	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400ae97	    0xff1500000000	                 call qword [0x0400ae9d]	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400ae9d	          0x4889c7	                            mov rdi, rax	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400aea0	      0x4889442430	             mov qword [rsp + 0x30], rax	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400aea5	      0xb8ffffffff	                     mov eax, 0xffffffff	      2887	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400aeaa	          0x4839c7	                            cmp rdi, rax	      2887	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400aead	     0xf85fd040000	                           jne 0x400b3b0	      2887	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400aeb3	        0x498d6f0c	                    lea rbp, [r15 + 0xc]	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400aeb7	          0x4939ed	                            cmp r13, rbp	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400aeba	     0xf87f0050000	                            ja 0x400b4b0	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400aec0	          0x4939dd	                            cmp r13, rbx	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400aec3	            0x7612	                           jbe 0x400aed7	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400aec5	          0x4c89ee	                            mov rsi, r13	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400aec8	          0x4829de	                            sub rsi, rbx	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400aecb	          0x8d46ff	                      lea eax, [rsi - 1]	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400aece	          0x83f807	                              cmp eax, 7	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400aed1	     0xf86de050000	                           jbe 0x400b4b5	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400aed7	          0x4889eb	                            mov rbx, rbp	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400aeda	    0x48c74424380c	            mov qword [rsp + 0x38], 0xc 	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400aee3	    0x48c744240808	                  mov qword [rsp + 8], 8	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400aeec	        0x4c8d7b02	                      lea r15, [rbx + 2]	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400aef0	      0xbd08000000	                              mov ebp, 8	      2890	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400aef5	          0x4d39fd	                            cmp r13, r15	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400aef8	     0xf8609040000	                           jbe 0x400b307	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400aefe	      0xbe02000000	                              mov esi, 2	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400af03	    0x48c744243000	               mov qword [rsp + 0x30], 0	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400af0c	      0xe9f4faffff	                           jmp 0x400aa05	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400af11	     0xf1f80000000	                         nop dword [rax]	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400af18	      0x488b442408	                mov rax, qword [rsp + 8]	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400af1d	    0xc74424480100	               mov dword [rsp + 0x48], 1	      2907	dwarf.c	FUNCTION_34	FOR_2	IF_11
0x400af25	    0x41b9ffffffff	                     mov r9d, 0xffffffff	      2909	dwarf.c	FUNCTION_34	FOR_2	IF_11
0x400af2b	        0x498d1c07	                    lea rbx, [r15 + rax]	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400af2f	          0x4939dd	                            cmp r13, rbx	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400af32	     0xf86bffbffff	                           jbe 0x400aaf7	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400af38	            0x89ee	                            mov esi, ebp	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400af3a	      0xe9c7fbffff	                           jmp 0x400ab06	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400af3f	              0x90	                                     nop	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400af40	    0x488b05000000	            mov rax, qword [0x0400af47] 	      1650	dwarf.c	FUNCTION_26	ELSE_1
0x400af47	    0x8b0d00000000	            mov ecx, dword [0x0400af4d] 	      1651	dwarf.c	FUNCTION_26	ELSE_1
0x400af4d	      0xba01000000	                              mov edx, 1	      1652	dwarf.c	FUNCTION_26	ELSE_1
0x400af52	      0xe9e5faffff	                           jmp 0x400aa3c	      1652	dwarf.c	FUNCTION_26	ELSE_1
0x400af57	    0x660f1f840000	                    nop word [rax + rax]	      1652	dwarf.c	FUNCTION_26	ELSE_1
0x400af60	      0x4889442418	             mov qword [rsp + 0x18], rax	      1658	dwarf.c	FUNCTION_26	WHILE_1
0x400af65	      0xe91dfbffff	                           jmp 0x400aa87	      1658	dwarf.c	FUNCTION_26	WHILE_1
0x400af6a	    0x660f1f440000	                    nop word [rax + rax]	      1658	dwarf.c	FUNCTION_26	WHILE_1
0x400af70	    0x8b3500000000	            mov esi, dword [0x0400af76] 	      2960	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400af76	            0x85f6	                           test esi, esi	      2960	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400af78	     0xf8580000000	                           jne 0x400affe	      2960	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400af7e	        0x8b4c2458	            mov ecx, dword [rsp + 0x58] 	      2960	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400af82	            0x85c9	                           test ecx, ecx	      2960	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400af84	            0x7578	                           jne 0x400affe	      2960	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400af86	    0x8b8424880000	            mov eax, dword [rsp + 0x88] 	      2962	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400af8d	      0xbfffffffff	                     mov edi, 0xffffffff	      2968	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400af92	        0x488d0c40	                  lea rcx, [rax + rax*2]	      2962	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400af96	        0x488d0c88	                  lea rcx, [rax + rcx*4]	      2962	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400af9a	    0x488b05000000	            mov rax, qword [0x0400afa1] 	      2962	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400afa1	        0x488d04c8	                  lea rax, [rax + rcx*8]	      2962	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400afa5	        0x410fb6c9	                          movzx ecx, r9b	      2964	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400afa9	            0x8908	                    mov dword [rax], ecx	      2964	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400afab	       0xfb74c2410	           movzx ecx, word [rsp + 0x10] 	      2966	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400afb0	        0x4c897010	             mov qword [rax + 0x10], r14	      2962	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400afb4	          0x896804	                mov dword [rax + 4], ebp	      2965	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400afb7	    0x48c740180000	               mov qword [rax + 0x18], 0	      2967	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400afbf	        0x48897820	             mov qword [rax + 0x20], rdi	      2968	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400afc3	        0x48897828	             mov qword [rax + 0x28], rdi	      2969	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400afc7	    0x48c740300000	               mov qword [rax + 0x30], 0	      2970	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400afcf	          0x894808	                mov dword [rax + 8], ecx	      2966	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400afd2	    0x48c740400000	               mov qword [rax + 0x40], 0	      2971	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400afda	    0xc7404c000000	               mov dword [rax + 0x4c], 0	      2972	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400afe1	    0xc74048000000	               mov dword [rax + 0x48], 0	      2973	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400afe8	    0x48c740580000	               mov qword [rax + 0x58], 0	      2974	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400aff0	    0xc74064000000	               mov dword [rax + 0x64], 0	      2975	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400aff7	    0xc74060000000	               mov dword [rax + 0x60], 0	      2976	dwarf.c	FUNCTION_34	FOR_2	IF_17
0x400affe	        0x8b44245c	            mov eax, dword [rsp + 0x5c] 	      2979	dwarf.c	FUNCTION_34	FOR_2	IF_18
0x400b002	            0x85c0	                           test eax, eax	      2979	dwarf.c	FUNCTION_34	FOR_2	IF_18
0x400b004	     0xf85fefdffff	                           jne 0x400ae08	      2979	dwarf.c	FUNCTION_34	FOR_2	IF_18
0x400b00a	          0x4885d2	                           test rdx, rdx	      2979	dwarf.c	FUNCTION_34	FOR_2	IF_18
0x400b00d	     0xf85f5fdffff	                           jne 0x400ae08	      2979	dwarf.c	FUNCTION_34	FOR_2	IF_18
0x400b013	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b015	          0x4c89f6	                            mov rsi, r14	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b018	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b01d	      0x44884c2468	              mov byte [rsp + 0x68], r9b	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b022	      0x4c89442470	              mov qword [rsp + 0x70], r8	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b027	      0xe8d452ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b02c	            0x31ff	                            xor edi, edi	      2981	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_26
0x400b02e	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b031	      0xba05000000	                              mov edx, 5	      2981	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_26
0x400b036	      0xbe00000000	                              mov esi, 0	      2981	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_26
0x400b03b	      0xe800000000	                          call 0x400b040	      2981	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_26
0x400b040	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_16
0x400b043	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400b046	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b04b	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b04d	      0xe800000000	                          call 0x400b052	       104	stdio2.h	CALL_16
0x400b052	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b057	          0x83fd08	                              cmp ebp, 8	      2983	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_28
0x400b05a	      0xb800000000	                              mov eax, 0	      2983	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_28
0x400b05f	      0xbd00000000	                              mov ebp, 0	      2983	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_28
0x400b064	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b069	        0x480f44e8	                          cmove rbp, rax	      2983	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_28
0x400b06d	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b06f	      0xe88c52ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b074	            0x31ff	                            xor edi, edi	      2983	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_28
0x400b076	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b079	      0xba05000000	                              mov edx, 5	      2983	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_28
0x400b07e	      0xbe00000000	                              mov esi, 0	      2983	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_28
0x400b083	      0xe800000000	                          call 0x400b088	      2983	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_28
0x400b088	          0x4889e9	                            mov rcx, rbp	       104	stdio2.h	CALL_16
0x400b08b	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_16
0x400b08e	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400b091	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b096	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b098	      0xe800000000	                          call 0x400b09d	       104	stdio2.h	CALL_16
0x400b09d	            0x31ff	                            xor edi, edi	      2986	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_30
0x400b09f	      0xba05000000	                              mov edx, 5	      2986	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_30
0x400b0a4	      0xbe00000000	                              mov esi, 0	      2986	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_30
0x400b0a9	      0xe800000000	                          call 0x400b0ae	      2986	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_30
0x400b0ae	       0xfb7542410	           movzx edx, word [rsp + 0x10] 	       104	stdio2.h	CALL_16
0x400b0b3	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400b0b6	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b0bb	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b0bd	      0xe800000000	                          call 0x400b0c2	       104	stdio2.h	CALL_16
0x400b0c2	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b0c7	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b0c9	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b0ce	      0xe82d52ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b0d3	            0x31ff	                            xor edi, edi	      2987	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_31
0x400b0d5	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b0d8	      0xba05000000	                              mov edx, 5	      2987	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_31
0x400b0dd	      0xbe00000000	                              mov esi, 0	      2987	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_31
0x400b0e2	      0xe800000000	                          call 0x400b0e7	      2987	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_31
0x400b0e7	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_16
0x400b0ea	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400b0ed	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b0f2	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b0f4	      0xe800000000	                          call 0x400b0f9	       104	stdio2.h	CALL_16
0x400b0f9	            0x31ff	                            xor edi, edi	      2989	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_33
0x400b0fb	      0xba05000000	                              mov edx, 5	      2989	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_33
0x400b100	      0xbe00000000	                              mov esi, 0	      2989	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_33
0x400b105	      0xe800000000	                          call 0x400b10a	      2989	dwarf.c	FUNCTION_34	FOR_2	IF_18	CALL_33
0x400b10a	       0xfb6542468	           movzx edx, byte [rsp + 0x68] 	       104	stdio2.h	CALL_16
0x400b10f	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400b112	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b117	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b119	      0xe800000000	                          call 0x400b11e	       104	stdio2.h	CALL_16
0x400b11e	        0x8b442458	            mov eax, dword [rsp + 0x58] 	      2990	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19
0x400b122	    0x440fb64c2468	           movzx r9d, byte [rsp + 0x68] 	      2990	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19
0x400b128	      0x4c8b442470	              mov r8, qword [rsp + 0x70]	      2990	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19
0x400b12d	            0x85c0	                           test eax, eax	      2990	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19
0x400b12f	     0xf85720c0000	                           jne 0x400bda7	      2990	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19
0x400b135	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      3000	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20
0x400b13a	          0x4885db	                           test rbx, rbx	      3000	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20
0x400b13d	     0xf84c5fcffff	                            je 0x400ae08	      3000	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20
0x400b143	      0xba05000000	                              mov edx, 5	      3005	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_38
0x400b148	            0x31ff	                            xor edi, edi	      3005	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_38
0x400b14a	      0xbe00000000	                              mov esi, 0	      3005	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_38
0x400b14f	      0x44884c2468	              mov byte [rsp + 0x68], r9b	      3005	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_38
0x400b154	      0xe800000000	                          call 0x400b159	      3005	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_38
0x400b159	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b15e	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400b161	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b163	      0xe800000000	                          call 0x400b168	       104	stdio2.h	CALL_16
0x400b168	        0x488b7360	            mov rsi, qword [rbx + 0x60] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b16c	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b16e	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b173	      0xe88851ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b178	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b17c	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b17e	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b183	          0x4889c5	                            mov rbp, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b186	      0x48895c2418	             mov qword [rsp + 0x18], rbx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b18b	      0xe87051ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b190	            0x31ff	                            xor edi, edi	      3006	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_39
0x400b192	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b195	      0xba05000000	                              mov edx, 5	      3006	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_39
0x400b19a	      0xbe00000000	                              mov esi, 0	      3006	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_39
0x400b19f	      0xe800000000	                          call 0x400b1a4	      3006	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_39
0x400b1a4	          0x4889e9	                            mov rcx, rbp	       104	stdio2.h	CALL_16
0x400b1a7	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_16
0x400b1aa	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400b1ad	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b1b2	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b1b4	      0xe800000000	                          call 0x400b1b9	       104	stdio2.h	CALL_16
0x400b1b9	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b1be	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b1c0	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b1c5	        0x488b7368	            mov rsi, qword [rbx + 0x68] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b1c9	      0xe83251ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b1ce	        0x488b7328	            mov rsi, qword [rbx + 0x28] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b1d2	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b1d4	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b1d9	          0x4889c5	                            mov rbp, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b1dc	      0x48895c2418	             mov qword [rsp + 0x18], rbx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b1e1	      0xe81a51ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b1e6	            0x31ff	                            xor edi, edi	      3009	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_42
0x400b1e8	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b1eb	      0xba05000000	                              mov edx, 5	      3009	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_42
0x400b1f0	      0xbe00000000	                              mov esi, 0	      3009	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_42
0x400b1f5	      0xe800000000	                          call 0x400b1fa	      3009	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_42
0x400b1fa	          0x4889e9	                            mov rcx, rbp	       104	stdio2.h	CALL_16
0x400b1fd	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_16
0x400b200	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400b203	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b208	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b20a	      0xe800000000	                          call 0x400b20f	       104	stdio2.h	CALL_16
0x400b20f	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b214	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b216	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b21b	        0x488b7370	            mov rsi, qword [rbx + 0x70] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b21f	      0xe8dc50ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b224	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b228	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b22a	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b22f	          0x4889c5	                            mov rbp, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b232	      0x48895c2418	             mov qword [rsp + 0x18], rbx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b237	      0xe8c450ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b23c	            0x31ff	                            xor edi, edi	      3012	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_45
0x400b23e	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b241	      0xba05000000	                              mov edx, 5	      3012	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_45
0x400b246	      0xbe00000000	                              mov esi, 0	      3012	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_45
0x400b24b	      0xe800000000	                          call 0x400b250	      3012	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_45
0x400b250	          0x4889e9	                            mov rcx, rbp	       104	stdio2.h	CALL_16
0x400b253	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_16
0x400b256	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400b259	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b25e	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b260	      0xe800000000	                          call 0x400b265	       104	stdio2.h	CALL_16
0x400b265	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b26a	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b26c	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b271	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b275	      0xe88650ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b27a	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b27e	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b280	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b285	          0x4889c5	                            mov rbp, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b288	      0xe87350ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b28d	            0x31ff	                            xor edi, edi	      3015	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_48
0x400b28f	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b292	      0xba05000000	                              mov edx, 5	      3015	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_48
0x400b297	      0xbe00000000	                              mov esi, 0	      3015	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_48
0x400b29c	      0xe800000000	                          call 0x400b2a1	      3015	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_20	CALL_48
0x400b2a1	          0x4889e9	                            mov rcx, rbp	       104	stdio2.h	CALL_16
0x400b2a4	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400b2a7	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_16
0x400b2aa	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b2af	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b2b1	      0xe800000000	                          call 0x400b2b6	       104	stdio2.h	CALL_16
0x400b2b6	    0x440fb64c2468	           movzx r9d, byte [rsp + 0x68] 	       104	stdio2.h	CALL_16
0x400b2bc	      0xe947fbffff	                           jmp 0x400ae08	       104	stdio2.h	CALL_16
0x400b2c1	     0xf1f80000000	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x400b2c8	            0x89ee	                            mov esi, ebp	       104	stdio2.h	CALL_16
0x400b2ca	      0xe92ef9ffff	                           jmp 0x400abfd	       104	stdio2.h	CALL_16
0x400b2cf	              0x90	                                     nop	       104	stdio2.h	CALL_16
0x400b2d0	          0x4c89ee	                            mov rsi, r13	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400b2d3	        0x482b3424	                    sub rsi, qword [rsp]	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400b2d7	          0x8d46ff	                      lea eax, [rsi - 1]	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400b2da	          0x83f807	                              cmp eax, 7	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400b2dd	     0xf86adfbffff	                           jbe 0x400ae90	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400b2e3	        0x4c8d7b02	                      lea r15, [rbx + 2]	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400b2e7	    0x48c744243804	               mov qword [rsp + 0x38], 4	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400b2f0	    0x48c744240804	                  mov qword [rsp + 8], 4	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400b2f9	      0xbd04000000	                              mov ebp, 4	      2895	dwarf.c	FUNCTION_34	FOR_2	ELSE_3
0x400b2fe	          0x4d39fd	                            cmp r13, r15	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400b301	     0xf87f7fbffff	                            ja 0x400aefe	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400b307	    0x48c744243000	               mov qword [rsp + 0x30], 0	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400b310	      0xe9d6000000	                           jmp 0x400b3eb	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400b315	           0xf1f00	                         nop dword [rax]	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400b318	          0x4c89ff	                            mov rdi, r15	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400b31b	        0x4c8d7b04	                      lea r15, [rbx + 4]	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400b31f	      0x4889542440	             mov qword [rsp + 0x40], rdx	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400b324	      0xbe01000000	                              mov esi, 1	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400b329	    0xff1500000000	                 call qword [0x0400b32f]	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400b32f	            0x31ff	                            xor edi, edi	      2914	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400b331	          0x83f802	                              cmp eax, 2	      2914	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400b334	            0x89c1	                            mov ecx, eax	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400b336	        0x400f94c7	                                sete dil	      2914	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400b33a	          0x4d39fd	                            cmp r13, r15	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400b33d	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400b342	        0x897c2458	             mov dword [rsp + 0x58], edi	      2914	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400b346	     0xf87dc010000	                            ja 0x400b528	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400b34c	          0x4c89ee	                            mov rsi, r13	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400b34f	          0x4829d6	                            sub rsi, rdx	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400b352	          0x8d46ff	                      lea eax, [rsi - 1]	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400b355	          0x83f807	                              cmp eax, 7	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400b358	     0xf861e0c0000	                           jbe 0x400bf7c	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400b35e	      0x488b442408	                mov rax, qword [rsp + 8]	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400b363	        0x894c2448	             mov dword [rsp + 0x48], ecx	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400b367	        0x498d1c07	                    lea rbx, [r15 + rax]	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400b36b	          0x4c39eb	                            cmp rbx, r13	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400b36e	     0xf82a6010000	                            jb 0x400b51a	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400b374	          0x4531c9	                            xor r9d, r9d	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400b377	    0x48837c241800	               cmp qword [rsp + 0x18], 0	      2921	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400b37d	          0x4989dc	                            mov r12, rbx	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400b380	    0x48c744244000	               mov qword [rsp + 0x40], 0	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400b389	     0xf85b0f7ffff	                           jne 0x400ab3f	      2921	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400b38f	              0x90	                                     nop	      2921	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400b390	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      2924	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400b398	    0x48c744246000	               mov qword [rsp + 0x60], 0	      2923	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400b3a1	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2924	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400b3a5	      0x4889442450	             mov qword [rsp + 0x50], rax	      2924	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400b3aa	      0xe9a7f7ffff	                           jmp 0x400ab56	      2924	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400b3af	              0x90	                                     nop	      2924	dwarf.c	FUNCTION_34	FOR_2	IF_12
0x400b3b0	        0x4c8d7b02	                      lea r15, [rbx + 2]	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400b3b4	    0x48c744243804	               mov qword [rsp + 0x38], 4	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400b3bd	    0x48c744240804	                  mov qword [rsp + 8], 4	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400b3c6	      0xbd04000000	                              mov ebp, 4	      2895	dwarf.c	FUNCTION_34	FOR_2	ELSE_3
0x400b3cb	          0x4d39fd	                            cmp r13, r15	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400b3ce	     0xf8716010000	                            ja 0x400b4ea	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400b3d4	          0x4c39eb	                            cmp rbx, r13	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400b3d7	            0x7312	                           jae 0x400b3eb	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400b3d9	          0x4c89ee	                            mov rsi, r13	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400b3dc	          0x4829de	                            sub rsi, rbx	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400b3df	          0x8d46ff	                      lea eax, [rsi - 1]	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400b3e2	          0x83f807	                              cmp eax, 7	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400b3e5	     0xf861af6ffff	                           jbe 0x400aa05	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400b3eb	          0x4531f6	                          xor r14d, r14d	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400b3ee	    0x664489742410	             mov word [rsp + 0x10], r14w	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400b3f4	      0xe91af6ffff	                           jmp 0x400aa13	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400b3f9	     0xf1f80000000	                         nop dword [rax]	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400b400	      0xbe04000000	                              mov esi, 4	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400b405	          0x4c89ef	                            mov rdi, r13	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400b408	    0xff1500000000	                 call qword [0x0400b40e]	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400b40e	          0x4c39e0	                            cmp rax, r12	      2793	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400b411	     0xf8520070000	                           jne 0x400bb37	      2793	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400b417	        0x498d450c	                    lea rax, [r13 + 0xc]	      2795	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400b41b	          0x4839c5	                            cmp rbp, rax	      2795	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400b41e	     0xf877d070000	                            ja 0x400bba1	      2795	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400b424	          0x4c39f5	                            cmp rbp, r14	      2795	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400b427	     0xf8693f4ffff	                           jbe 0x400a8c0	      2795	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400b42d	          0x4889ee	                            mov rsi, rbp	      2795	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400b430	          0x4c29f6	                            sub rsi, r14	      2795	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400b433	          0x8d46ff	                      lea eax, [rsi - 1]	      2795	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400b436	          0x83f807	                              cmp eax, 7	      2795	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400b439	     0xf8781f4ffff	                            ja 0x400a8c0	      2795	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400b43f	      0xe962070000	                           jmp 0x400bba6	      2795	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400b444	         0xf1f4000	                         nop dword [rax]	      2795	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400b448	    0x488d9424b800	                   lea rdx, [rsp + 0xb8]	      2945	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400b450	    0x488db424b000	                   lea rsi, [rsp + 0xb0]	      2945	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400b458	          0x4c89e7	                            mov rdi, r12	      2945	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400b45b	      0x44884c2468	              mov byte [rsp + 0x68], r9b	      2945	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400b460	      0xe800000000	                          call 0x400b465	      2945	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400b465	    0x440fb64c2468	           movzx r9d, byte [rsp + 0x68] 	      2945	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400b46b	      0xe96ef7ffff	                           jmp 0x400abde	      2945	dwarf.c	FUNCTION_34	FOR_2	IF_15
0x400b470	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b472	          0x4c89f6	                            mov rsi, r14	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b475	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b47a	      0xe8814effff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b47f	            0x31ff	                            xor edi, edi	      3038	dwarf.c	FUNCTION_34	FOR_2	IF_22	CALL_55
0x400b481	      0xba05000000	                              mov edx, 5	      3038	dwarf.c	FUNCTION_34	FOR_2	IF_22	CALL_55
0x400b486	      0xbe00000000	                              mov esi, 0	      3038	dwarf.c	FUNCTION_34	FOR_2	IF_22	CALL_55
0x400b48b	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400b48e	      0xe800000000	                          call 0x400b493	      3038	dwarf.c	FUNCTION_34	FOR_2	IF_22	CALL_55
0x400b493	       0xfb7542410	           movzx edx, word [rsp + 0x10] 	      3038	dwarf.c	FUNCTION_34	FOR_2	IF_22	CALL_55
0x400b498	          0x4889c7	                            mov rdi, rax	      3038	dwarf.c	FUNCTION_34	FOR_2	IF_22	CALL_55
0x400b49b	          0x4889de	                            mov rsi, rbx	      3038	dwarf.c	FUNCTION_34	FOR_2	IF_22	CALL_55
0x400b49e	            0x31c0	                            xor eax, eax	      3038	dwarf.c	FUNCTION_34	FOR_2	IF_22	CALL_55
0x400b4a0	      0xe800000000	                          call 0x400b4a5	      3038	dwarf.c	FUNCTION_34	FOR_2	IF_22	CALL_55
0x400b4a5	      0xe99df7ffff	                           jmp 0x400ac47	      3041	dwarf.c	FUNCTION_34	FOR_2	IF_22
0x400b4aa	    0x660f1f440000	                    nop word [rax + rax]	      3041	dwarf.c	FUNCTION_34	FOR_2	IF_22
0x400b4b0	      0xbe08000000	                              mov esi, 8	      3041	dwarf.c	FUNCTION_34	FOR_2	IF_22
0x400b4b5	          0x4889df	                            mov rdi, rbx	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400b4b8	          0x4889eb	                            mov rbx, rbp	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400b4bb	      0xbd08000000	                              mov ebp, 8	      2890	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400b4c0	        0x4c8d7b02	                      lea r15, [rbx + 2]	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400b4c4	    0xff1500000000	                 call qword [0x0400b4ca]	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400b4ca	          0x4d39fd	                            cmp r13, r15	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400b4cd	      0x4889442430	             mov qword [rsp + 0x30], rax	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400b4d2	    0x48c74424380c	            mov qword [rsp + 0x38], 0xc 	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400b4db	    0x48c744240808	                  mov qword [rsp + 8], 8	      2889	dwarf.c	FUNCTION_34	FOR_2	IF_10
0x400b4e4	     0xf86eafeffff	                           jbe 0x400b3d4	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400b4ea	      0xbe02000000	                              mov esi, 2	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400b4ef	      0xe911f5ffff	                           jmp 0x400aa05	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400b4f4	         0xf1f4000	                         nop dword [rax]	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400b4f8	    0xc74424480000	               mov dword [rsp + 0x48], 0	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400b500	    0xc74424580000	               mov dword [rsp + 0x58], 0	      2914	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400b508	      0x488b442408	                mov rax, qword [rsp + 8]	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400b50d	        0x498d1c07	                    lea rbx, [r15 + rax]	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400b511	          0x4939dd	                            cmp r13, rbx	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400b514	     0xf865afeffff	                           jbe 0x400b374	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400b51a	            0x89ee	                            mov esi, ebp	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400b51c	          0x4531c9	                            xor r9d, r9d	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400b51f	      0xe9e2f5ffff	                           jmp 0x400ab06	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400b524	         0xf1f4000	                         nop dword [rax]	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400b528	        0x89442448	             mov dword [rsp + 0x48], eax	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400b52c	      0xbe01000000	                              mov esi, 1	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400b531	      0xe9a3f5ffff	                           jmp 0x400aad9	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400b536	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400b540	          0x4989dc	                            mov r12, rbx	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400b543	    0x48c744244000	               mov qword [rsp + 0x40], 0	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400b54c	      0xe9e2f5ffff	                           jmp 0x400ab33	      2919	dwarf.c	FUNCTION_34	FOR_2
0x400b551	            0x31c0	                            xor eax, eax	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400b553	      0x4d8d6c0504	                lea r13, [r13 + rax + 4]	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400b558	          0x4885c0	                           test rax, rax	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400b55b	        0x400f9ec6	                               setle sil	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400b55f	          0x4c39eb	                            cmp rbx, r13	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400b562	           0xf97c1	                                 seta cl	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400b565	             0x9f1	                             or ecx, esi	      2791	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400b567	            0x84c9	                             test cl, cl	      2810	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_2	IF_4
0x400b569	     0xf8553f3ffff	                           jne 0x400a8c2	      2810	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_2	IF_4
0x400b56f	        0x4183c701	                             add r15d, 1	      2786	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400b573	          0x4939ed	                            cmp r13, rbp	      2785	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400b576	     0xf821cf3ffff	                            jb 0x400a898	      2785	dwarf.c	FUNCTION_34	IF_1	FOR_1
0x400b57c	          0x4489f8	                           mov eax, r15d	      2818	dwarf.c	FUNCTION_34	IF_1	IF_5
0x400b57f	          0x4989ee	                            mov r14, rbp	      2818	dwarf.c	FUNCTION_34	IF_1	IF_5
0x400b582	    0x4489bc249400	            mov dword [rsp + 0x94], r15d	      2818	dwarf.c	FUNCTION_34	IF_1	IF_5
0x400b58a	            0x85c0	                           test eax, eax	      2818	dwarf.c	FUNCTION_34	IF_1	IF_5
0x400b58c	        0x488b2c24	                    mov rbp, qword [rsp]	      2818	dwarf.c	FUNCTION_34	IF_1	IF_5
0x400b590	        0x8b5c2408	                mov ebx, dword [rsp + 8]	      2818	dwarf.c	FUNCTION_34	IF_1	IF_5
0x400b594	     0xf8449090000	                            je 0x400bee3	      2818	dwarf.c	FUNCTION_34	IF_1	IF_5
0x400b59a	        0x488d1440	                  lea rdx, [rax + rax*2]	      9496	dwarf.c	FUNCTION_96	CALL_1
0x400b59e	        0x4c8d2490	                  lea r12, [rax + rdx*4]	      9496	dwarf.c	FUNCTION_96	CALL_1
0x400b5a2	        0x49c1e403	                              shl r12, 3	      9496	dwarf.c	FUNCTION_96	CALL_1
0x400b5a6	          0x4c89e7	                            mov rdi, r12	      9496	dwarf.c	FUNCTION_96	CALL_1
0x400b5a9	      0xe800000000	                          call 0x400b5ae	      9496	dwarf.c	FUNCTION_96	CALL_1
0x400b5ae	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_132	CALL_6
0x400b5b0	          0x4c89e2	                            mov rdx, r12	        90	string3.h	FUNCTION_132	CALL_6
0x400b5b3	          0x4889c7	                            mov rdi, rax	        90	string3.h	FUNCTION_132	CALL_6
0x400b5b6	    0x488905000000	            mov qword [0x0400b5bd], rax 	      2825	dwarf.c	FUNCTION_34	IF_1	CALL_9
0x400b5bd	      0xe800000000	                          call 0x400b5c2	        90	string3.h	FUNCTION_132	CALL_6
0x400b5c2	        0x8b44245c	            mov eax, dword [rsp + 0x5c] 	      2845	dwarf.c	FUNCTION_34	IF_7
0x400b5c6	    0x44893d000000	           mov dword [0x0400b5cd], r15d 	      2842	dwarf.c	FUNCTION_34	IF_1
0x400b5cd	            0x85c0	                           test eax, eax	      2845	dwarf.c	FUNCTION_34	IF_7
0x400b5cf	     0xf84d4f6ffff	                            je 0x400aca9	      2845	dwarf.c	FUNCTION_34	IF_7
0x400b5d5	          0x4889ee	                            mov rsi, rbp	      2855	dwarf.c	FUNCTION_34	CALL_19
0x400b5d8	            0x89df	                            mov edi, ebx	      2855	dwarf.c	FUNCTION_34	CALL_19
0x400b5da	      0xe8e163ffff	 call sym.load_debug_section_with_follow	      2855	dwarf.c	FUNCTION_34	CALL_19
0x400b5df	          0x4889da	                            mov rdx, rbx	      2856	dwarf.c	FUNCTION_34	IF_8
0x400b5e2	          0x4889d8	                            mov rax, rbx	      2856	dwarf.c	FUNCTION_34	IF_8
0x400b5e5	        0x48c1e204	                              shl rdx, 4	      2856	dwarf.c	FUNCTION_34	IF_8
0x400b5e9	        0x48c1e007	                              shl rax, 7	      2856	dwarf.c	FUNCTION_34	IF_8
0x400b5ed	          0x4829d0	                            sub rax, rdx	      2856	dwarf.c	FUNCTION_34	IF_8
0x400b5f0	    0x4883b8000000	                      cmp qword [rax], 0	      2856	dwarf.c	FUNCTION_34	IF_8
0x400b5f8	     0xf8560f3ffff	                           jne 0x400a95e	      2856	dwarf.c	FUNCTION_34	IF_8
0x400b5fe	          0x4889d8	                            mov rax, rbx	      2858	dwarf.c	FUNCTION_34	IF_8	CALL_21
0x400b601	        0x48c1e307	                              shl rbx, 7	      2858	dwarf.c	FUNCTION_34	IF_8	CALL_21
0x400b605	      0xba05000000	                              mov edx, 5	      2858	dwarf.c	FUNCTION_34	IF_8	CALL_21
0x400b60a	        0x48c1e004	                              shl rax, 4	      2858	dwarf.c	FUNCTION_34	IF_8	CALL_21
0x400b60e	      0xbe00000000	                              mov esi, 0	      2858	dwarf.c	FUNCTION_34	IF_8	CALL_21
0x400b613	            0x31ff	                            xor edi, edi	      2858	dwarf.c	FUNCTION_34	IF_8	CALL_21
0x400b615	          0x4829c3	                            sub rbx, rax	      2858	dwarf.c	FUNCTION_34	IF_8	CALL_21
0x400b618	    0x488b9b000000	                    mov rbx, qword [rbx]	      2858	dwarf.c	FUNCTION_34	IF_8	CALL_21
0x400b61f	      0xe800000000	                          call 0x400b624	      2858	dwarf.c	FUNCTION_34	IF_8	CALL_21
0x400b624	          0x4889c7	                            mov rdi, rax	      2858	dwarf.c	FUNCTION_34	IF_8	CALL_21
0x400b627	            0x31c0	                            xor eax, eax	      2858	dwarf.c	FUNCTION_34	IF_8	CALL_21
0x400b629	          0x4889de	                            mov rsi, rbx	      2858	dwarf.c	FUNCTION_34	IF_8	CALL_21
0x400b62c	      0xe800000000	                          call 0x400b631	      2858	dwarf.c	FUNCTION_34	IF_8	CALL_21
0x400b631	            0x31c0	                            xor eax, eax	      2860	dwarf.c	FUNCTION_34	IF_8
0x400b633	      0xe947020000	                           jmp 0x400b87f	      2860	dwarf.c	FUNCTION_34	IF_8
0x400b638	     0xf1f84000000	                   nop dword [rax + rax]	      2860	dwarf.c	FUNCTION_34	IF_8
0x400b640	      0x44884c2430	              mov byte [rsp + 0x30], r9b	      2860	dwarf.c	FUNCTION_34	IF_8
0x400b645	      0xe8c64fffff	                   call sym.free_abbrevs	      3053	dwarf.c	FUNCTION_34	FOR_2	CALL_60
0x400b64a	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      3056	dwarf.c	FUNCTION_34	FOR_2	IF_24
0x400b64f	      0x48397c2450	            cmp qword [rsp + 0x50], rdi 	      3056	dwarf.c	FUNCTION_34	FOR_2	IF_24
0x400b654	    0x440fb64c2430	           movzx r9d, byte [rsp + 0x30] 	      3056	dwarf.c	FUNCTION_34	FOR_2	IF_24
0x400b65a	     0xf8617070000	                           jbe 0x400bd77	      3056	dwarf.c	FUNCTION_34	FOR_2	IF_24
0x400b660	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      3062	dwarf.c	FUNCTION_34	FOR_2	ELSE_6	IF_25
0x400b668	      0x488b5c2450	            mov rbx, qword [rsp + 0x50] 	      3061	dwarf.c	FUNCTION_34	FOR_2	ELSE_6	IF_25
0x400b66d	      0x48035c2460	             add rbx, qword [rsp + 0x60]	      3061	dwarf.c	FUNCTION_34	FOR_2	ELSE_6	IF_25
0x400b672	        0x488b6830	            mov rbp, qword [rax + 0x30] 	      3062	dwarf.c	FUNCTION_34	FOR_2	ELSE_6	IF_25
0x400b676	          0x4839eb	                            cmp rbx, rbp	      3061	dwarf.c	FUNCTION_34	FOR_2	ELSE_6	IF_25
0x400b679	     0xf87ba070000	                            ja 0x400be39	      3061	dwarf.c	FUNCTION_34	FOR_2	ELSE_6	IF_25
0x400b67f	    0x48833d000000	               cmp qword [0x0400b687], 0	       920	dwarf.c	ELSE_1	FUNCTION_20	IF_1
0x400b687	     0xf8484080000	                            je 0x400bf11	       920	dwarf.c	ELSE_1	FUNCTION_20	IF_1
0x400b68d	        0x4c3b2424	                    cmp r12, qword [rsp]	      3076	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400b691	     0xf83b0f5ffff	                           jae 0x400ac47	      3076	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400b697	    0x8b8424880000	            mov eax, dword [rsp + 0x88] 	      3192	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400b69e	    0xc784248c0000	     mov dword [rsp + 0x8c], 0xffffffff 	      3192	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400b6a9	    0xc78424900000	               mov dword [rsp + 0x90], 0	      3192	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400b6b4	    0xc74424700000	               mov dword [rsp + 0x70], 0	      3192	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400b6bc	      0x4c89742448	             mov qword [rsp + 0x48], r14	      3192	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400b6c1	        0x488d1440	                  lea rdx, [rax + rax*2]	      3192	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400b6c5	        0x488d0490	                  lea rax, [rax + rdx*4]	      3192	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400b6c9	        0x48c1e003	                              shl rax, 3	      3192	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400b6cd	    0x488984249800	             mov qword [rsp + 0x98], rax	      3192	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400b6d5	       0xfb7442410	           movzx eax, word [rsp + 0x10] 	      3192	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400b6da	      0x4c896c2410	             mov qword [rsp + 0x10], r13	      3192	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400b6df	        0x89442438	             mov dword [rsp + 0x38], eax	      3192	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400b6e3	        0x410fb6c1	                          movzx eax, r9b	      3192	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400b6e7	      0x4889442440	             mov qword [rsp + 0x40], rax	      3192	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400b6ec	        0x488b1c24	                    mov rbx, qword [rsp]	       356	dwarf.c	FUNCTION_10	CALL_1
0x400b6f0	    0x488db424ac00	                   lea rsi, [rsp + 0xac]	       356	dwarf.c	FUNCTION_10	CALL_1
0x400b6f8	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x400b6fa	          0x4c89e7	                            mov rdi, r12	       356	dwarf.c	FUNCTION_10	CALL_1
0x400b6fd	          0x4d89e5	                            mov r13, r12	      3085	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400b700	      0x4c2b6c2420	             sub r13, qword [rsp + 0x20]	      3085	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400b705	          0x4889d9	                            mov rcx, rbx	       356	dwarf.c	FUNCTION_10	CALL_1
0x400b708	      0xe800000000	                          call 0x400b70d	       356	dwarf.c	FUNCTION_10	CALL_1
0x400b70d	          0x4889c5	                            mov rbp, rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x400b710	    0x8b8424ac0000	            mov eax, dword [rsp + 0xac] 	      3088	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400b717	          0x4901c4	                            add r12, rax	      3088	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400b71a	          0x4885ed	                           test rbp, rbp	      3092	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26
0x400b71d	            0x7559	                           jne 0x400b778	      3092	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26
0x400b71f	        0x8b442470	            mov eax, dword [rsp + 0x70] 	      3095	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27
0x400b723	            0x85c0	                           test eax, eax	      3095	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27
0x400b725	     0xf85f5000000	                           jne 0x400b820	      3095	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27
0x400b72b	      0x48395c2410	            cmp qword [rsp + 0x10], rbx 	      3095	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27
0x400b730	     0xf85ea000000	                           jne 0x400b820	      3095	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27
0x400b736	          0x4c39e3	                            cmp rbx, r12	      3099	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	FOR_3
0x400b739	     0xf86cf000000	                           jbe 0x400b80e	      3099	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	FOR_3
0x400b73f	      0x41803c2400	                       cmp byte [r12], 0	      3100	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	FOR_3	IF_28
0x400b744	     0xf85c4000000	                           jne 0x400b80e	      3100	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	FOR_3	IF_28
0x400b74a	          0x4c89e0	                            mov rax, r12	      3100	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	FOR_3	IF_28
0x400b74d	          0x4889da	                            mov rdx, rbx	      3100	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	FOR_3	IF_28
0x400b750	            0xeb0f	                           jmp 0x400b761	      3100	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	FOR_3	IF_28
0x400b752	    0x660f1f440000	                    nop word [rax + rax]	      3100	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	FOR_3	IF_28
0x400b758	          0x803800	                       cmp byte [rax], 0	      3100	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	FOR_3	IF_28
0x400b75b	     0xf85bf000000	                           jne 0x400b820	      3100	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	FOR_3	IF_28
0x400b761	        0x4883c001	                              add rax, 1	      3099	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	FOR_3
0x400b765	          0x4839c2	                            cmp rdx, rax	      3099	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	FOR_3
0x400b768	            0x75ee	                           jne 0x400b758	      3099	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	FOR_3
0x400b76a	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	      3099	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	FOR_3
0x400b76f	      0xe9d3f4ffff	                           jmp 0x400ac47	      3099	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	FOR_3
0x400b774	         0xf1f4000	                         nop dword [rax]	      3099	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	FOR_3
0x400b778	        0x8b44245c	            mov eax, dword [rsp + 0x5c] 	      3131	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35
0x400b77c	            0x85c0	                           test eax, eax	      3131	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35
0x400b77e	     0xf8594010000	                           jne 0x400b918	      3131	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35
0x400b784	    0x488b05000000	            mov rax, qword [0x0400b78b] 	      3133	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	IF_36
0x400b78b	          0x4885c0	                           test rax, rax	      3133	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	IF_36
0x400b78e	            0x741c	                            je 0x400b7ac	      3133	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	IF_36
0x400b790	          0x4939c5	                            cmp r13, rax	      3133	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	IF_36
0x400b793	     0xf825f050000	                            jb 0x400bcf8	      3133	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	IF_36
0x400b799	    0x8b84248c0000	            mov eax, dword [rsp + 0x8c] 	      3133	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	IF_36
0x400b7a0	       0xf44442470	           cmove eax, dword [rsp + 0x70]	      3133	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	IF_36
0x400b7a5	    0x8984248c0000	             mov dword [rsp + 0x8c], eax	      3133	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	IF_36
0x400b7ac	    0x8b0500000000	            mov eax, dword [0x0400b7b2] 	      3139	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8
0x400b7b2	        0x8b5c2470	            mov ebx, dword [rsp + 0x70] 	      3139	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8
0x400b7b6	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3139	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8
0x400b7b9	           0xf94c1	                                 sete cl	      3139	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8
0x400b7bc	            0x39d8	                            cmp eax, ebx	      3139	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8
0x400b7be	           0xf9fc2	                                 setg dl	      3139	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8
0x400b7c1	             0x8d1	                               or cl, dl	      3140	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8
0x400b7c3	        0x884c2430	               mov byte [rsp + 0x30], cl	      3140	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8
0x400b7c7	     0xf859b040000	                           jne 0x400bc68	      3140	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8
0x400b7cd	    0x3b8424900000	            cmp eax, dword [rsp + 0x90] 	      3145	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8	ELSE_9	IF_39
0x400b7d4	     0xf8e2b050000	                           jle 0x400bd05	      3145	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8	ELSE_9	IF_39
0x400b7da	      0xba05000000	                              mov edx, 5	      3146	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8	ELSE_9	IF_39
0x400b7df	      0xbe00000000	                              mov esi, 0	      3146	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8	ELSE_9	IF_39
0x400b7e4	            0x31ff	                            xor edi, edi	      3146	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8	ELSE_9	IF_39
0x400b7e6	      0xe800000000	                          call 0x400b7eb	      3146	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8	ELSE_9	IF_39
0x400b7eb	          0x4c89e9	                            mov rcx, r13	       104	stdio2.h	CALL_16
0x400b7ee	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400b7f1	            0x89da	                            mov edx, ebx	       104	stdio2.h	CALL_16
0x400b7f3	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400b7f8	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400b7fa	          0x4531f6	                          xor r14d, r14d	       104	stdio2.h	CALL_16
0x400b7fd	      0xe800000000	                          call 0x400b802	       104	stdio2.h	CALL_16
0x400b802	    0x899c24900000	             mov dword [rsp + 0x90], ebx	       104	stdio2.h	CALL_16
0x400b809	      0xe915010000	                           jmp 0x400b923	       104	stdio2.h	CALL_16
0x400b80e	        0x4c392424	                    cmp qword [rsp], r12	      3102	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	IF_29
0x400b812	     0xf8452ffffff	                            je 0x400b76a	      3102	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	IF_29
0x400b818	     0xf1f84000000	                   nop dword [rax + rax]	      3102	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_27	IF_29
0x400b820	        0x8b44245c	            mov eax, dword [rsp + 0x5c] 	      3106	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_30
0x400b824	            0x85c0	                           test eax, eax	      3106	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_30
0x400b826	            0x7528	                           jne 0x400b850	      3106	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_30
0x400b828	    0x4c3b2d000000	            cmp r13, qword [0x0400b82f] 	      3106	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_30
0x400b82f	            0x721f	                            jb 0x400b850	      3106	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_30
0x400b831	    0x8b0500000000	            mov eax, dword [0x0400b837] 	      3107	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_30
0x400b837	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3108	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_30
0x400b83a	     0xf84d8040000	                            je 0x400bd18	      3108	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_30
0x400b840	        0x3b442470	            cmp eax, dword [rsp + 0x70] 	      3108	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_30
0x400b844	     0xf8fce040000	                            jg 0x400bd18	      3108	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_30
0x400b84a	    0x660f1f440000	                    nop word [rax + rax]	      3108	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_30
0x400b850	      0x836c247001	               sub dword [rsp + 0x70], 1	      3113	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31
0x400b855	     0xf889a030000	                            js 0x400bbf5	      3113	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31
0x400b85b	    0x48833d000000	               cmp qword [0x0400b863], 0	      3126	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_34
0x400b863	     0xf849b000000	                            je 0x400b904	      3126	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_34
0x400b869	    0x8bbc248c0000	            mov edi, dword [rsp + 0x8c] 	      3126	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_34
0x400b870	        0x397c2470	            cmp dword [rsp + 0x70], edi 	      3126	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_34
0x400b874	     0xf8d8a000000	                           jge 0x400b904	      3126	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_34
0x400b87a	      0xb801000000	                              mov eax, 1	      3266	dwarf.c	FUNCTION_34
0x400b87f	    0x488bbc240801	           mov rdi, qword [rsp + 0x108] 	      3267	dwarf.c	FUNCTION_34
0x400b887	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      3267	dwarf.c	FUNCTION_34
0x400b890	     0xf85e1060000	                           jne 0x400bf77	      3267	dwarf.c	FUNCTION_34
0x400b896	    0x4881c4180100	                          add rsp, 0x118	      3267	dwarf.c	FUNCTION_34
0x400b89d	              0x5b	                                 pop rbx	      3267	dwarf.c	FUNCTION_34
0x400b89e	              0x5d	                                 pop rbp	      3267	dwarf.c	FUNCTION_34
0x400b89f	            0x415c	                                 pop r12	      3267	dwarf.c	FUNCTION_34
0x400b8a1	            0x415d	                                 pop r13	      3267	dwarf.c	FUNCTION_34
0x400b8a3	            0x415e	                                 pop r14	      3267	dwarf.c	FUNCTION_34
0x400b8a5	            0x415f	                                 pop r15	      3267	dwarf.c	FUNCTION_34
0x400b8a7	              0xc3	                                     ret	      3267	dwarf.c	FUNCTION_34
0x400b8a8	     0xf1f84000000	                   nop dword [rax + rax]	      3267	dwarf.c	FUNCTION_34
0x400b8b0	          0x4d85ed	                           test r13, r13	      3224	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44
0x400b8b3	      0x4c8b7c2478	            mov r15, qword [rsp + 0x78] 	      3224	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44
0x400b8b8	            0x7440	                            je 0x400b8fa	      3224	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44
0x400b8ba	        0x418b4d48	            mov ecx, dword [r13 + 0x48] 	      3224	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44
0x400b8be	        0x418b4550	            mov eax, dword [r13 + 0x50] 	      3224	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44
0x400b8c2	            0x89ca	                            mov edx, ecx	      3225	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2
0x400b8c4	            0x29c2	                            sub edx, eax	      3225	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2
0x400b8c6	          0x83fa01	                              cmp edx, 1	      3225	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2
0x400b8c9	     0xf84f0030000	                            je 0x400bcbf	      3225	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2
0x400b8cf	            0x7229	                            jb 0x400b8fa	      3225	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2
0x400b8d1	          0x83faff	             cmp edx, 0xffffffffffffffff	      3225	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2
0x400b8d4	     0xf85cc030000	                           jne 0x400bca6	      3225	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2
0x400b8da	      0xba05000000	                              mov edx, 5	      3238	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_82
0x400b8df	      0xbe00000000	                              mov esi, 0	      3238	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_82
0x400b8e4	            0x31ff	                            xor edi, edi	      3238	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_82
0x400b8e6	      0xe800000000	                          call 0x400b8eb	      3238	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_82
0x400b8eb	          0x4889c7	                            mov rdi, rax	      3238	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_82
0x400b8ee	            0x31c0	                            xor eax, eax	      3238	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_82
0x400b8f0	      0xe800000000	                          call 0x400b8f5	      3238	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_82
0x400b8f5	      0x41836d5001	               sub dword [r13 + 0x50], 1	      3239	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2
0x400b8fa	      0x41837f1001	               cmp dword [r15 + 0x10], 1	      3247	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_45
0x400b8ff	      0x835c2470ff	sbb dword [rsp + 0x70], 0xffffffffffffffff	      3247	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_45
0x400b904	        0x4c3b2424	                    cmp r12, qword [rsp]	      3076	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400b908	     0xf82defdffff	                            jb 0x400b6ec	      3076	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400b90e	      0xe957feffff	                           jmp 0x400b76a	      3076	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400b913	       0xf1f440000	                   nop dword [rax + rax]	      3076	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400b918	      0xc644243000	                mov byte [rsp + 0x30], 0	      3076	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400b91d	    0x41be01000000	                             mov r14d, 1	      3083	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400b923	    0x4c8b3d000000	            mov r15, qword [0x0400b92a] 	      3153	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_4
0x400b92a	          0x4d85ff	                           test r15, r15	      3153	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_4
0x400b92d	     0xf8411040000	                            je 0x400bd44	      3153	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_4
0x400b933	          0x49392f	                    cmp qword [r15], rbp	      3154	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_4
0x400b936	            0x7412	                            je 0x400b94a	      3154	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_4
0x400b938	        0x4d8b7f28	            mov r15, qword [r15 + 0x28] 	      3155	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_4
0x400b93c	          0x4d85ff	                           test r15, r15	      3153	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_4
0x400b93f	     0xf84ff030000	                            je 0x400bd44	      3153	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_4
0x400b945	          0x493b2f	                    cmp rbp, qword [r15]	      3154	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_4
0x400b948	            0x75ee	                           jne 0x400b938	      3154	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_4
0x400b94a	      0x807c243000	                cmp byte [rsp + 0x30], 0	      3170	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_42
0x400b94f	     0xf8564020000	                           jne 0x400bbb9	      3170	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_42
0x400b955	        0x498b4708	                mov rax, qword [r15 + 8]	      3173	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	SWITCH_1
0x400b959	        0x4883f811	                           cmp rax, 0x11	      3173	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	SWITCH_1
0x400b95d	     0xf8416020000	                            je 0x400bb79	      3173	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	SWITCH_1
0x400b963	        0x4883f82e	                           cmp rax, 0x2e	      3173	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	SWITCH_1
0x400b967	    0xc70500000000	               mov dword [0x0400b971], 0	      3184	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	SWITCH_1
0x400b971	     0xf841b020000	                            je 0x400bb92	      3173	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	SWITCH_1
0x400b977	        0x4883f803	                              cmp rax, 3	      3173	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	SWITCH_1
0x400b97b	     0xf8411020000	                            je 0x400bb92	      3173	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	SWITCH_1
0x400b981	    0x4c8b2d000000	            mov r13, qword [0x0400b988] 	      3191	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400b988	          0x4d85ed	                           test r13, r13	      3192	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400b98b	     0xf8487010000	                            je 0x400bb18	      3192	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400b991	    0x8b8424880000	            mov eax, dword [rsp + 0x88] 	      3191	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400b998	    0x390500000000	            cmp dword [0x0400b99e], eax 	      3191	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400b99e	     0xf8674010000	                           jbe 0x400bb18	      3191	dwarf.c	FUNCTION_34	FOR_2	WHILE_1
0x400b9a4	    0x4c03ac249800	             add r13, qword [rsp + 0x98]	      3194	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	CALL_78
0x400b9ac	     0xf8466010000	                            je 0x400bb18	      3194	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	CALL_78
0x400b9b2	        0x418b4550	            mov eax, dword [r13 + 0x50] 	      3194	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	CALL_78
0x400b9b6	        0x41394548	            cmp dword [r13 + 0x48], eax 	      3194	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	CALL_78
0x400b9ba	     0xf859e050000	                           jne 0x400bf5e	      3194	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	CALL_78
0x400b9c0	        0x498b5f18	            mov rbx, qword [r15 + 0x18] 	      3198	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400b9c4	          0x4885db	                           test rbx, rbx	      3198	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400b9c7	     0xf842dffffff	                            je 0x400b8fa	      3198	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400b9cd	        0x48833b00	                      cmp qword [rbx], 0	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400b9d1	     0xf84e3feffff	                            je 0x400b8ba	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400b9d7	        0x8b44245c	            mov eax, dword [rsp + 0x5c] 	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400b9db	        0x4183f601	                             xor r14d, 1	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400b9df	      0x4c897c2478	             mov qword [rsp + 0x78], r15	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400b9e4	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400b9e9	            0x85c0	                           test eax, eax	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400b9eb	           0xf95c0	                                setne al	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400b9ee	          0x4409f0	                            or eax, r14d	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400b9f1	        0x88442450	               mov byte [rsp + 0x50], al	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400b9f5	        0x440fb6f0	                          movzx r14d, al	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400b9f9	            0xeb6c	                           jmp 0x400ba67	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400b9fb	       0xf1f440000	                   nop dword [rax + rax]	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400ba00	      0x807c245000	                cmp byte [rsp + 0x50], 0	      2694	dwarf.c	FUNCTION_31	IF_1
0x400ba05	        0x4c8b5b10	            mov r11, qword [rbx + 0x10] 	      3206	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5	CALL_79
0x400ba09	        0x4c8b5308	                mov r10, qword [rbx + 8]	      3206	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5	CALL_79
0x400ba0d	          0x488b2b	                    mov rbp, qword [rbx]	      3206	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5	CALL_79
0x400ba10	            0x747e	                            je 0x400ba90	      2694	dwarf.c	FUNCTION_31	IF_1
0x400ba12	            0x6a20	                               push 0x20	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400ba14	            0x4157	                                push r15	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400ba16	          0x4c89e1	                            mov rcx, r12	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400ba19	        0xff742438	                 push qword [rsp + 0x38]	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400ba1d	            0x4156	                                push r14	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400ba1f	          0x4c89da	                            mov rdx, r11	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400ba22	            0x4155	                                push r13	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400ba24	        0x8b442460	            mov eax, dword [rsp + 0x60] 	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400ba28	          0x4c89d6	                            mov rsi, r10	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400ba2b	          0x4889ef	                            mov rdi, rbp	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400ba2e	              0x50	                                push rax	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400ba2f	        0xff742438	                 push qword [rsp + 0x38]	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400ba33	        0xff742478	                 push qword [rsp + 0x78]	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400ba37	    0x4c8b8c248800	              mov r9, qword [rsp + 0x88]	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400ba3f	      0x4c8b442450	              mov r8, qword [rsp + 0x50]	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400ba44	      0xe867bbffff	    call sym.read_and_display_attr_value	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400ba49	        0x4883c440	                           add rsp, 0x40	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400ba4d	          0x4989c4	                            mov r12, rax	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400ba50	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	      3200	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400ba54	          0x4885db	                           test rbx, rbx	      3198	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400ba57	     0xf8453feffff	                            je 0x400b8b0	      3198	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400ba5d	        0x48833b00	                      cmp qword [rbx], 0	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400ba61	     0xf8449feffff	                            je 0x400b8b0	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400ba67	      0x807c243000	                cmp byte [rsp + 0x30], 0	      3202	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5	IF_43
0x400ba6c	            0x7492	                            je 0x400ba00	      3202	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5	IF_43
0x400ba6e	          0x4c89e2	                            mov rdx, r12	       104	stdio2.h	CALL_16
0x400ba71	      0x482b542420	             sub rdx, qword [rsp + 0x20]	       104	stdio2.h	CALL_16
0x400ba76	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400ba7b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400ba80	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400ba82	      0xe800000000	                          call 0x400ba87	       104	stdio2.h	CALL_16
0x400ba87	      0xe974ffffff	                           jmp 0x400ba00	       104	stdio2.h	CALL_16
0x400ba8c	         0xf1f4000	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x400ba90	          0x4889ef	                            mov rdi, rbp	      2695	dwarf.c	FUNCTION_31	CALL_1
0x400ba93	      0x4c89542468	             mov qword [rsp + 0x68], r10	      2695	dwarf.c	FUNCTION_31	CALL_1
0x400ba98	      0x4c895c2460	             mov qword [rsp + 0x60], r11	      2695	dwarf.c	FUNCTION_31	CALL_1
0x400ba9d	      0xe8ce62ffff	                    call sym.get_AT_name	      2695	dwarf.c	FUNCTION_31	CALL_1
0x400baa2	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400baa7	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_16
0x400baaa	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400baaf	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400bab1	      0xe800000000	                          call 0x400bab6	       104	stdio2.h	CALL_16
0x400bab6	            0x6a20	                               push 0x20	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400bab8	            0x4157	                                push r15	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400baba	          0x4c89e1	                            mov rcx, r12	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400babd	        0xff742438	                 push qword [rsp + 0x38]	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400bac1	            0x4156	                                push r14	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400bac3	          0x4889ef	                            mov rdi, rbp	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400bac6	            0x4155	                                push r13	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400bac8	        0x8b442460	            mov eax, dword [rsp + 0x60] 	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400bacc	              0x50	                                push rax	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400bacd	        0xff742438	                 push qword [rsp + 0x38]	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400bad1	        0xff742478	                 push qword [rsp + 0x78]	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400bad5	    0x4c8b9c24a000	            mov r11, qword [rsp + 0xa0] 	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400badd	    0x4c8b9424a800	            mov r10, qword [rsp + 0xa8] 	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400bae5	    0x4c8b8c248800	              mov r9, qword [rsp + 0x88]	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400baed	      0x4c8b442450	              mov r8, qword [rsp + 0x50]	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400baf2	          0x4c89da	                            mov rdx, r11	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400baf5	          0x4c89d6	                            mov rsi, r10	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400baf8	      0xe8b3baffff	    call sym.read_and_display_attr_value	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400bafd	        0x4883c440	                           add rsp, 0x40	       104	stdio2.h	CALL_16
0x400bb01	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x400bb06	          0x4989c4	                            mov r12, rax	      2696	dwarf.c	FUNCTION_31	CALL_2
0x400bb09	      0xe800000000	                          call 0x400bb0e	       104	stdio2.h	CALL_16
0x400bb0e	      0xe93dffffff	                           jmp 0x400ba50	       104	stdio2.h	CALL_16
0x400bb13	       0xf1f440000	                   nop dword [rax + rax]	       104	stdio2.h	CALL_16
0x400bb18	        0x498b5f18	            mov rbx, qword [r15 + 0x18] 	      3198	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400bb1c	          0x4885db	                           test rbx, rbx	      3198	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400bb1f	     0xf84d5fdffff	                            je 0x400b8fa	      3198	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400bb25	        0x48833b00	                      cmp qword [rbx], 0	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400bb29	     0xf84cbfdffff	                            je 0x400b8fa	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400bb2f	          0x4531ed	                          xor r13d, r13d	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400bb32	      0xe9a0feffff	                           jmp 0x400b9d7	      3199	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	FOR_5
0x400bb37	    0x48bf10000000	          movabs rdi, 0xffffffff00000010	      2798	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_1	IF_3
0x400bb41	        0x488d0c38	                    lea rcx, [rax + rdi]	      2798	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_1	IF_3
0x400bb45	        0x4883f90e	                            cmp rcx, 0xe	      2798	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_1	IF_3
0x400bb49	     0xf8704faffff	                            ja 0x400b553	      2798	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_1	IF_3
0x400bb4f	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      2800	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_1	IF_3	CALL_2
0x400bb54	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400bb56	          0x4889c6	                            mov rsi, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400bb59	        0x488b6f10	            mov rbp, qword [rdi + 0x10] 	      2800	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_1	IF_3	CALL_2
0x400bb5d	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400bb62	      0xe89947ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400bb67	      0xba05000000	                              mov edx, 5	      2800	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_1	IF_3	CALL_2
0x400bb6c	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400bb6f	      0xbe00000000	                              mov esi, 0	      2800	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_1	IF_3	CALL_2
0x400bb74	      0xe96eedffff	                           jmp 0x400a8e7	      2800	dwarf.c	FUNCTION_34	IF_1	FOR_1	ELSE_1	IF_3	CALL_2
0x400bb79	        0x8b44245c	            mov eax, dword [rsp + 0x5c] 	      3180	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	SWITCH_1
0x400bb7d	    0xc70500000000	               mov dword [0x0400bb87], 1	      3179	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	SWITCH_1
0x400bb87	    0x890500000000	            mov dword [0x0400bb8d], eax 	      3180	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	SWITCH_1
0x400bb8d	      0xe9effdffff	                           jmp 0x400b981	      3181	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	SWITCH_1
0x400bb92	    0xc70500000000	               mov dword [0x0400bb9c], 0	      3186	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	SWITCH_1
0x400bb9c	      0xe9e0fdffff	                           jmp 0x400b981	      3187	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	SWITCH_1
0x400bba1	      0xbe08000000	                              mov esi, 8	      3187	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	SWITCH_1
0x400bba6	          0x4c89f7	                            mov rdi, r14	      2795	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400bba9	    0xff1500000000	                 call qword [0x0400bbaf]	      2795	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400bbaf	      0x4d8d6c050c	              lea r13, [r13 + rax + 0xc]	      2795	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400bbb4	      0xe99ff9ffff	                           jmp 0x400b558	      2795	dwarf.c	FUNCTION_34	IF_1	FOR_1	IF_2
0x400bbb9	        0x498b7f08	                mov rdi, qword [r15 + 8]	      3171	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	CALL_77
0x400bbbd	      0xe84e61ffff	                   call sym.get_TAG_name	      3171	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	CALL_77
0x400bbc2	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400bbc7	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_16
0x400bbca	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400bbcf	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400bbd1	      0xe800000000	                          call 0x400bbd6	       104	stdio2.h	CALL_16
0x400bbd6	      0xe97afdffff	                           jmp 0x400b955	       104	stdio2.h	CALL_16
0x400bbdb	            0x31c0	                            xor eax, eax	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400bbdd	    0x48c744243000	               mov qword [rsp + 0x30], 0	      2885	dwarf.c	FUNCTION_34	FOR_2
0x400bbe6	      0xbd04000000	                              mov ebp, 4	      2895	dwarf.c	FUNCTION_34	FOR_2	ELSE_3
0x400bbeb	      0x6689442410	               mov word [rsp + 0x10], ax	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400bbf0	      0xe91eeeffff	                           jmp 0x400aa13	      2899	dwarf.c	FUNCTION_34	FOR_2
0x400bbf5	    0x833d00000000	               cmp dword [0x0400bbfc], 2	      3117	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32
0x400bbfc	     0xf8759fcffff	                            ja 0x400b85b	      3117	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32
0x400bc02	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      3119	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_69
0x400bc07	            0x31ff	                            xor edi, edi	      3119	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_69
0x400bc09	      0xba05000000	                              mov edx, 5	      3119	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_69
0x400bc0e	      0xbe00000000	                              mov esi, 0	      3119	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_69
0x400bc13	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      3119	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_69
0x400bc17	      0xe800000000	                          call 0x400bc1c	      3119	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_69
0x400bc1c	          0x4c89ee	                            mov rsi, r13	      3119	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_69
0x400bc1f	          0x4889c7	                            mov rdi, rax	      3119	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_69
0x400bc22	            0x31c0	                            xor eax, eax	      3119	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_69
0x400bc24	          0x4889da	                            mov rdx, rbx	      3119	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_69
0x400bc27	      0xe800000000	                          call 0x400bc2c	      3119	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_69
0x400bc2c	    0x8b0500000000	            mov eax, dword [0x0400bc32] 	      3121	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32
0x400bc32	          0x83c001	                              add eax, 1	      3121	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32
0x400bc35	          0x83f803	                              cmp eax, 3	      3122	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	IF_33
0x400bc38	    0x890500000000	            mov dword [0x0400bc3e], eax 	      3121	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32
0x400bc3e	     0xf8517fcffff	                           jne 0x400b85b	      3122	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	IF_33
0x400bc44	            0x31ff	                            xor edi, edi	      3123	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_71
0x400bc46	      0xba05000000	                              mov edx, 5	      3123	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_71
0x400bc4b	      0xbe00000000	                              mov esi, 0	      3123	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_71
0x400bc50	      0xe800000000	                          call 0x400bc55	      3123	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_71
0x400bc55	          0x4889c7	                            mov rdi, rax	      3123	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_71
0x400bc58	            0x31c0	                            xor eax, eax	      3123	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_71
0x400bc5a	      0xe800000000	                          call 0x400bc5f	      3123	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_71
0x400bc5f	      0xe9f7fbffff	                           jmp 0x400b85b	      3123	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_71
0x400bc64	         0xf1f4000	                         nop dword [rax]	      3123	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_31	IF_32	CALL_71
0x400bc68	      0xba05000000	                              mov edx, 5	      3142	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8	IF_38	CALL_72
0x400bc6d	      0xbe00000000	                              mov esi, 0	      3142	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8	IF_38	CALL_72
0x400bc72	            0x31ff	                            xor edi, edi	      3142	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8	IF_38	CALL_72
0x400bc74	      0xe800000000	                          call 0x400bc79	      3142	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	ELSE_8	IF_38	CALL_72
0x400bc79	        0x8b5c2470	            mov ebx, dword [rsp + 0x70] 	       104	stdio2.h	CALL_16
0x400bc7d	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400bc80	          0x4989e8	                             mov r8, rbp	       104	stdio2.h	CALL_16
0x400bc83	          0x4c89e9	                            mov rcx, r13	       104	stdio2.h	CALL_16
0x400bc86	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400bc8b	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400bc8d	    0x41be01000000	                             mov r14d, 1	       104	stdio2.h	CALL_16
0x400bc93	            0x89da	                            mov edx, ebx	       104	stdio2.h	CALL_16
0x400bc95	      0xe800000000	                          call 0x400bc9a	       104	stdio2.h	CALL_16
0x400bc9a	    0x899c24900000	             mov dword [rsp + 0x90], ebx	       104	stdio2.h	CALL_16
0x400bca1	      0xe97dfcffff	                           jmp 0x400b923	       104	stdio2.h	CALL_16
0x400bca6	      0xb900000000	                              mov ecx, 0	      3243	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_83
0x400bcab	      0xbaab0c0000	                          mov edx, 0xcab	      3243	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_83
0x400bcb0	      0xbe00000000	                              mov esi, 0	      3243	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_83
0x400bcb5	      0xbf00000000	                              mov edi, 0	      3243	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_83
0x400bcba	      0xe800000000	                          call 0x400bcbf	      3243	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_83
0x400bcbf	        0x498b5538	            mov rdx, qword [r13 + 0x38] 	      3228	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2
0x400bcc3	            0x89c6	                            mov esi, eax	      3228	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2
0x400bcc5	          0x83c001	                              add eax, 1	      3229	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2
0x400bcc8	            0x39c8	                            cmp eax, ecx	      3230	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_80
0x400bcca	    0x48c704f2ffff	mov qword [rdx + rsi*8], 0xffffffffffffffff	      3228	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2
0x400bcd2	        0x41894550	             mov dword [r13 + 0x50], eax	      3229	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2
0x400bcd6	     0xf841efcffff	                            je 0x400b8fa	      3230	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_80
0x400bcdc	      0xb900000000	                              mov ecx, 0	      3230	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_80
0x400bce1	      0xba9f0c0000	                          mov edx, 0xc9f	      3230	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_80
0x400bce6	      0xbe00000000	                              mov esi, 0	      3230	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_80
0x400bceb	      0xbf00000000	                              mov edi, 0	      3230	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_80
0x400bcf0	      0xe800000000	                          call 0x400bcf5	      3230	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_80
0x400bcf5	           0xf1f00	                         nop dword [rax]	      3230	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_80
0x400bcf8	      0xc644243000	                mov byte [rsp + 0x30], 0	      3230	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_44	SWITCH_2	CALL_80
0x400bcfd	          0x4531f6	                          xor r14d, r14d	      3134	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	IF_36
0x400bd00	      0xe91efcffff	                           jmp 0x400b923	      3134	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	IF_36
0x400bd05	        0x8b442470	            mov eax, dword [rsp + 0x70] 	      3134	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	IF_36
0x400bd09	          0x4531f6	                          xor r14d, r14d	      3134	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	IF_36
0x400bd0c	    0x898424900000	             mov dword [rsp + 0x90], eax	      3134	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	IF_36
0x400bd13	      0xe90bfcffff	                           jmp 0x400b923	      3134	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_35	IF_36
0x400bd18	            0x31ff	                            xor edi, edi	      3109	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_30	CALL_67
0x400bd1a	      0xba05000000	                              mov edx, 5	      3109	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_30	CALL_67
0x400bd1f	      0xbe00000000	                              mov esi, 0	      3109	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_30	CALL_67
0x400bd24	      0xe800000000	                          call 0x400bd29	      3109	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_26	IF_30	CALL_67
0x400bd29	        0x8b542470	            mov edx, dword [rsp + 0x70] 	       104	stdio2.h	CALL_16
0x400bd2d	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400bd30	          0x4c89e9	                            mov rcx, r13	       104	stdio2.h	CALL_16
0x400bd33	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400bd38	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400bd3a	      0xe800000000	                          call 0x400bd3f	       104	stdio2.h	CALL_16
0x400bd3f	      0xe90cfbffff	                           jmp 0x400b850	       104	stdio2.h	CALL_16
0x400bd44	      0x807c243000	                cmp byte [rsp + 0x30], 0	      3160	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_40	IF_41
0x400bd49	     0xf85f4010000	                           jne 0x400bf43	      3160	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_40	IF_41
0x400bd4f	      0xba05000000	                              mov edx, 5	      3165	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_40	CALL_76
0x400bd54	      0xbe00000000	                              mov esi, 0	      3165	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_40	CALL_76
0x400bd59	            0x31ff	                            xor edi, edi	      3165	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_40	CALL_76
0x400bd5b	      0xe800000000	                          call 0x400bd60	      3165	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_40	CALL_76
0x400bd60	          0x4889ea	                            mov rdx, rbp	      3165	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_40	CALL_76
0x400bd63	          0x4889c7	                            mov rdi, rax	      3165	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_40	CALL_76
0x400bd66	          0x4c89ee	                            mov rsi, r13	      3165	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_40	CALL_76
0x400bd69	            0x31c0	                            xor eax, eax	      3165	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_40	CALL_76
0x400bd6b	      0xe800000000	                          call 0x400bd70	      3165	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_40	CALL_76
0x400bd70	            0x31c0	                            xor eax, eax	      3167	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_40
0x400bd72	      0xe908fbffff	                           jmp 0x400b87f	      3167	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_40
0x400bd77	      0xba05000000	                              mov edx, 5	      3057	dwarf.c	FUNCTION_34	FOR_2	IF_24	CALL_62
0x400bd7c	      0xbe00000000	                              mov esi, 0	      3057	dwarf.c	FUNCTION_34	FOR_2	IF_24	CALL_62
0x400bd81	            0x31ff	                            xor edi, edi	      3057	dwarf.c	FUNCTION_34	FOR_2	IF_24	CALL_62
0x400bd83	      0xe800000000	                          call 0x400bd88	      3057	dwarf.c	FUNCTION_34	FOR_2	IF_24	CALL_62
0x400bd88	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	      3057	dwarf.c	FUNCTION_34	FOR_2	IF_24	CALL_62
0x400bd8d	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	      3057	dwarf.c	FUNCTION_34	FOR_2	IF_24	CALL_62
0x400bd92	          0x4889c7	                            mov rdi, rax	      3057	dwarf.c	FUNCTION_34	FOR_2	IF_24	CALL_62
0x400bd95	            0x31c0	                            xor eax, eax	      3057	dwarf.c	FUNCTION_34	FOR_2	IF_24	CALL_62
0x400bd97	      0xe800000000	                          call 0x400bd9c	      3057	dwarf.c	FUNCTION_34	FOR_2	IF_24	CALL_62
0x400bd9c	    0x440fb64c2430	           movzx r9d, byte [rsp + 0x30] 	      3057	dwarf.c	FUNCTION_34	FOR_2	IF_24	CALL_62
0x400bda2	      0xe9e6f8ffff	                           jmp 0x400b68d	      3057	dwarf.c	FUNCTION_34	FOR_2	IF_24	CALL_62
0x400bda7	    0x488bb424b800	            mov rsi, qword [rsp + 0xb8] 	      2994	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19	CALL_34
0x400bdaf	    0x488bbc24b000	            mov rdi, qword [rsp + 0xb0] 	      2994	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19	CALL_34
0x400bdb7	    0x488d9424c000	                   lea rdx, [rsp + 0xc0]	      2994	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19	CALL_34
0x400bdbf	      0x44884c2470	              mov byte [rsp + 0x70], r9b	      2994	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19	CALL_34
0x400bdc4	      0x4c89442468	              mov qword [rsp + 0x68], r8	      2994	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19	CALL_34
0x400bdc9	      0xe84271ffff	    call sym.dwarf_vmatoa64.constprop.26	      2994	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19	CALL_34
0x400bdce	      0xba05000000	                              mov edx, 5	      2994	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19	CALL_34
0x400bdd3	          0x4889c3	                            mov rbx, rax	      2994	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19	CALL_34
0x400bdd6	      0xbe00000000	                              mov esi, 0	      2994	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19	CALL_34
0x400bddb	            0x31ff	                            xor edi, edi	      2994	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19	CALL_34
0x400bddd	      0xe800000000	                          call 0x400bde2	      2994	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19	CALL_34
0x400bde2	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_16
0x400bde5	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400bde8	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400bded	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400bdef	      0xe800000000	                          call 0x400bdf4	       104	stdio2.h	CALL_16
0x400bdf4	      0x4c8b442468	              mov r8, qword [rsp + 0x68]	       246	dwarf.c	FUNCTION_4	CALL_1
0x400bdf9	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400bdfb	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400be00	          0x4c89c6	                             mov rsi, r8	       246	dwarf.c	FUNCTION_4	CALL_1
0x400be03	      0xe8f844ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400be08	      0xba05000000	                              mov edx, 5	      2997	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19	CALL_36
0x400be0d	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400be10	      0xbe00000000	                              mov esi, 0	      2997	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19	CALL_36
0x400be15	            0x31ff	                            xor edi, edi	      2997	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19	CALL_36
0x400be17	      0xe800000000	                          call 0x400be1c	      2997	dwarf.c	FUNCTION_34	FOR_2	IF_18	IF_19	CALL_36
0x400be1c	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_16
0x400be1f	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400be22	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400be27	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400be29	      0xe800000000	                          call 0x400be2e	       104	stdio2.h	CALL_16
0x400be2e	    0x440fb64c2470	           movzx r9d, byte [rsp + 0x70] 	       104	stdio2.h	CALL_16
0x400be34	      0xe9fcf2ffff	                           jmp 0x400b135	       104	stdio2.h	CALL_16
0x400be39	      0xba05000000	                              mov edx, 5	      3063	dwarf.c	FUNCTION_34	FOR_2	ELSE_6	IF_25	CALL_64
0x400be3e	      0xbe00000000	                              mov esi, 0	      3063	dwarf.c	FUNCTION_34	FOR_2	ELSE_6	IF_25	CALL_64
0x400be43	            0x31ff	                            xor edi, edi	      3063	dwarf.c	FUNCTION_34	FOR_2	ELSE_6	IF_25	CALL_64
0x400be45	      0x44884c2430	              mov byte [rsp + 0x30], r9b	      3063	dwarf.c	FUNCTION_34	FOR_2	ELSE_6	IF_25	CALL_64
0x400be4a	      0xe800000000	                          call 0x400be4f	      3063	dwarf.c	FUNCTION_34	FOR_2	ELSE_6	IF_25	CALL_64
0x400be4f	          0x4889ea	                            mov rdx, rbp	      3063	dwarf.c	FUNCTION_34	FOR_2	ELSE_6	IF_25	CALL_64
0x400be52	          0x4889c7	                            mov rdi, rax	      3063	dwarf.c	FUNCTION_34	FOR_2	ELSE_6	IF_25	CALL_64
0x400be55	          0x4889de	                            mov rsi, rbx	      3063	dwarf.c	FUNCTION_34	FOR_2	ELSE_6	IF_25	CALL_64
0x400be58	            0x31c0	                            xor eax, eax	      3063	dwarf.c	FUNCTION_34	FOR_2	ELSE_6	IF_25	CALL_64
0x400be5a	      0xe800000000	                          call 0x400be5f	      3063	dwarf.c	FUNCTION_34	FOR_2	ELSE_6	IF_25	CALL_64
0x400be5f	    0x440fb64c2430	           movzx r9d, byte [rsp + 0x30] 	      3063	dwarf.c	FUNCTION_34	FOR_2	ELSE_6	IF_25	CALL_64
0x400be65	      0xe923f8ffff	                           jmp 0x400b68d	      3063	dwarf.c	FUNCTION_34	FOR_2	ELSE_6	IF_25	CALL_64
0x400be6a	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	       246	dwarf.c	FUNCTION_4	CALL_1
0x400be6f	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400be71	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400be76	      0xe88544ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400be7b	          0x4889c5	                            mov rbp, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400be7e	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      3025	dwarf.c	FUNCTION_34	FOR_2	IF_21	CALL_52
0x400be83	            0x31ff	                            xor edi, edi	      3025	dwarf.c	FUNCTION_34	FOR_2	IF_21	CALL_52
0x400be85	      0xba05000000	                              mov edx, 5	      3025	dwarf.c	FUNCTION_34	FOR_2	IF_21	CALL_52
0x400be8a	      0xbe00000000	                              mov esi, 0	      3025	dwarf.c	FUNCTION_34	FOR_2	IF_21	CALL_52
0x400be8f	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      3025	dwarf.c	FUNCTION_34	FOR_2	IF_21	CALL_52
0x400be93	      0xe800000000	                          call 0x400be98	      3025	dwarf.c	FUNCTION_34	FOR_2	IF_21	CALL_52
0x400be98	          0x4889e9	                            mov rcx, rbp	      3025	dwarf.c	FUNCTION_34	FOR_2	IF_21	CALL_52
0x400be9b	          0x4889c7	                            mov rdi, rax	      3025	dwarf.c	FUNCTION_34	FOR_2	IF_21	CALL_52
0x400be9e	          0x4c89f2	                            mov rdx, r14	      3025	dwarf.c	FUNCTION_34	FOR_2	IF_21	CALL_52
0x400bea1	            0x31c0	                            xor eax, eax	      3025	dwarf.c	FUNCTION_34	FOR_2	IF_21	CALL_52
0x400bea3	          0x4889de	                            mov rsi, rbx	      3025	dwarf.c	FUNCTION_34	FOR_2	IF_21	CALL_52
0x400bea6	      0xe800000000	                          call 0x400beab	      3025	dwarf.c	FUNCTION_34	FOR_2	IF_21	CALL_52
0x400beab	      0x448b64245c	           mov r12d, dword [rsp + 0x5c] 	      3253	dwarf.c	FUNCTION_34	IF_46
0x400beb0	    0x8b8424880000	            mov eax, dword [rsp + 0x88] 	      3030	dwarf.c	FUNCTION_34	FOR_2	IF_21
0x400beb7	          0x4585e4	                         test r12d, r12d	      3253	dwarf.c	FUNCTION_34	IF_46
0x400beba	    0x898424940000	             mov dword [rsp + 0x94], eax	      3030	dwarf.c	FUNCTION_34	FOR_2	IF_21
0x400bec1	     0xf85a0edffff	                           jne 0x400ac67	      3253	dwarf.c	FUNCTION_34	IF_46
0x400bec7	      0xe96deeffff	                           jmp 0x400ad39	      3253	dwarf.c	FUNCTION_34	IF_46
0x400becc	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      3253	dwarf.c	FUNCTION_34	IF_46
0x400bed1	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      2864	dwarf.c	FUNCTION_34	CALL_22
0x400bed5	        0x488d7018	                   lea rsi, [rax + 0x18]	      2864	dwarf.c	FUNCTION_34	CALL_22
0x400bed9	      0xe8a262ffff	  call sym.introduce.isra.5.constprop.27	      2864	dwarf.c	FUNCTION_34	CALL_22
0x400bede	      0xe94beeffff	                           jmp 0x400ad2e	      2864	dwarf.c	FUNCTION_34	CALL_22
0x400bee3	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2820	dwarf.c	FUNCTION_34	IF_1	IF_5	CALL_8
0x400bee8	      0xba05000000	                              mov edx, 5	      2820	dwarf.c	FUNCTION_34	IF_1	IF_5	CALL_8
0x400beed	      0xbe00000000	                              mov esi, 0	      2820	dwarf.c	FUNCTION_34	IF_1	IF_5	CALL_8
0x400bef2	            0x31ff	                            xor edi, edi	      2820	dwarf.c	FUNCTION_34	IF_1	IF_5	CALL_8
0x400bef4	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      2820	dwarf.c	FUNCTION_34	IF_1	IF_5	CALL_8
0x400bef8	      0xe800000000	                          call 0x400befd	      2820	dwarf.c	FUNCTION_34	IF_1	IF_5	CALL_8
0x400befd	          0x4889c7	                            mov rdi, rax	      2820	dwarf.c	FUNCTION_34	IF_1	IF_5	CALL_8
0x400bf00	            0x31c0	                            xor eax, eax	      2820	dwarf.c	FUNCTION_34	IF_1	IF_5	CALL_8
0x400bf02	          0x4889de	                            mov rsi, rbx	      2820	dwarf.c	FUNCTION_34	IF_1	IF_5	CALL_8
0x400bf05	      0xe800000000	                          call 0x400bf0a	      2820	dwarf.c	FUNCTION_34	IF_1	IF_5	CALL_8
0x400bf0a	            0x31c0	                            xor eax, eax	      2821	dwarf.c	FUNCTION_34	IF_1	IF_5
0x400bf0c	      0xe96ef9ffff	                           jmp 0x400b87f	      2821	dwarf.c	FUNCTION_34	IF_1	IF_5
0x400bf11	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      3070	dwarf.c	FUNCTION_34	FOR_2	ELSE_7
0x400bf19	      0x44884c2430	              mov byte [rsp + 0x30], r9b	      3070	dwarf.c	FUNCTION_34	FOR_2	ELSE_7
0x400bf1e	        0x488b7820	            mov rdi, qword [rax + 0x20] 	      3070	dwarf.c	FUNCTION_34	FOR_2	ELSE_7
0x400bf22	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      3070	dwarf.c	FUNCTION_34	FOR_2	ELSE_7
0x400bf27	      0x4803442440	             add rax, qword [rsp + 0x40]	      3070	dwarf.c	FUNCTION_34	FOR_2	ELSE_7
0x400bf2c	        0x488d341f	                    lea rsi, [rdi + rbx]	      3070	dwarf.c	FUNCTION_34	FOR_2	ELSE_7
0x400bf30	          0x4801c7	                            add rdi, rax	      3070	dwarf.c	FUNCTION_34	FOR_2	ELSE_7
0x400bf33	      0xe87882ffff	 call sym.process_abbrev_section.part.15	      3070	dwarf.c	FUNCTION_34	FOR_2	ELSE_7
0x400bf38	    0x440fb64c2430	           movzx r9d, byte [rsp + 0x30] 	      3070	dwarf.c	FUNCTION_34	FOR_2	ELSE_7
0x400bf3e	      0xe94af7ffff	                           jmp 0x400b68d	      3070	dwarf.c	FUNCTION_34	FOR_2	ELSE_7
0x400bf43	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x400bf48	      0xe800000000	                          call 0x400bf4d	       104	stdio2.h	CALL_16
0x400bf4d	    0x488b3d000000	            mov rdi, qword [0x0400bf54] 	      3163	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_40	IF_41	CALL_74
0x400bf54	      0xe800000000	                          call 0x400bf59	      3163	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_40	IF_41	CALL_74
0x400bf59	      0xe9f1fdffff	                           jmp 0x400bd4f	      3163	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	IF_40	IF_41	CALL_74
0x400bf5e	      0xb900000000	                              mov ecx, 0	      3194	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	CALL_78
0x400bf63	      0xba7c0c0000	                          mov edx, 0xc7c	      3194	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	CALL_78
0x400bf68	      0xbe00000000	                              mov esi, 0	      3194	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	CALL_78
0x400bf6d	      0xbf00000000	                              mov edi, 0	      3194	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	CALL_78
0x400bf72	      0xe800000000	                          call 0x400bf77	      3194	dwarf.c	FUNCTION_34	FOR_2	WHILE_1	CALL_78
0x400bf77	      0xe800000000	                          call 0x400bf7c	      3267	dwarf.c	FUNCTION_34
0x400bf7c	        0x894c2448	             mov dword [rsp + 0x48], ecx	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400bf80	      0xe954ebffff	                           jmp 0x400aad9	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400bf85	          0x4c89ff	                            mov rdi, r15	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400bf88	        0x4c8d7b04	                      lea r15, [rbx + 4]	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400bf8c	      0x4889542440	             mov qword [rsp + 0x40], rdx	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400bf91	    0xff1500000000	                 call qword [0x0400bf97]	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400bf97	            0x31ff	                            xor edi, edi	      2914	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400bf99	          0x83f802	                              cmp eax, 2	      2914	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400bf9c	            0x89c1	                            mov ecx, eax	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400bf9e	        0x400f94c7	                                sete dil	      2914	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400bfa2	          0x4d39fd	                            cmp r13, r15	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400bfa5	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400bfaa	        0x897c2458	             mov dword [rsp + 0x58], edi	      2914	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400bfae	     0xf8774f5ffff	                            ja 0x400b528	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400bfb4	          0x4939d5	                            cmp r13, rdx	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400bfb7	     0xf878ff3ffff	                            ja 0x400b34c	      2916	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400bfbd	        0x89442448	             mov dword [rsp + 0x48], eax	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
0x400bfc1	      0xe942f5ffff	                           jmp 0x400b508	      2913	dwarf.c	FUNCTION_34	FOR_2	ELSE_4
load_cu_tu_indexes	ELSE,0:FOR,0:CALL,4:WHILE,0:DO,0:functions,0:SWITCH,0:IF,5	38
0x4004030	    0x8b0500000000	            mov eax, dword [0x04004036] 	      9426	dwarf.c	FUNCTION_92	IF_1
0x4004036	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      9426	dwarf.c	FUNCTION_92	IF_1
0x4004039	            0x7405	                            je 0x4004040	      9426	dwarf.c	FUNCTION_92	IF_1
0x400403b	              0xc3	                                     ret	      9440	dwarf.c	FUNCTION_92
0x400403c	         0xf1f4000	                         nop dword [rax]	      9440	dwarf.c	FUNCTION_92
0x4004040	              0x53	                                push rbx	      9421	dwarf.c	FUNCTION_92
0x4004041	          0x4889fe	                            mov rsi, rdi	      9430	dwarf.c	FUNCTION_92	IF_1	IF_2	CALL_1
0x4004044	          0x4889fb	                            mov rbx, rdi	      9430	dwarf.c	FUNCTION_92	IF_1	IF_2	CALL_1
0x4004047	      0xbf26000000	                           mov edi, 0x26	      9430	dwarf.c	FUNCTION_92	IF_1	IF_2	CALL_1
0x400404c	    0xc70500000000	               mov dword [0x04004056], 1	      9428	dwarf.c	FUNCTION_92	IF_1
0x4004056	      0xe865d9ffff	 call sym.load_debug_section_with_follow	      9430	dwarf.c	FUNCTION_92	IF_1	IF_2	CALL_1
0x400405b	            0x85c0	                           test eax, eax	      9430	dwarf.c	FUNCTION_92	IF_1	IF_2	CALL_1
0x400405d	            0x7541	                           jne 0x40040a0	      9430	dwarf.c	FUNCTION_92	IF_1	IF_2	CALL_1
0x400405f	          0x4889de	                            mov rsi, rbx	      9434	dwarf.c	FUNCTION_92	IF_1	IF_4	CALL_3
0x4004062	      0xbf27000000	                           mov edi, 0x27	      9434	dwarf.c	FUNCTION_92	IF_1	IF_4	CALL_3
0x4004067	      0xe854d9ffff	 call sym.load_debug_section_with_follow	      9434	dwarf.c	FUNCTION_92	IF_1	IF_4	CALL_3
0x400406c	            0x85c0	                           test eax, eax	      9434	dwarf.c	FUNCTION_92	IF_1	IF_4	CALL_3
0x400406e	            0x7510	                           jne 0x4004080	      9434	dwarf.c	FUNCTION_92	IF_1	IF_4	CALL_3
0x4004070	              0x5b	                                 pop rbx	      9440	dwarf.c	FUNCTION_92
0x4004071	    0x8b0500000000	            mov eax, dword [0x04004077] 	      9440	dwarf.c	FUNCTION_92
0x4004077	            0xf3c3	                                     ret	      9440	dwarf.c	FUNCTION_92
0x4004079	     0xf1f80000000	                         nop dword [rax]	      9440	dwarf.c	FUNCTION_92
0x4004080	            0x31f6	                            xor esi, esi	      9435	dwarf.c	FUNCTION_92	IF_1	IF_4	IF_5	CALL_4
0x4004082	      0xbf00000000	                              mov edi, 0	      9435	dwarf.c	FUNCTION_92	IF_1	IF_4	IF_5	CALL_4
0x4004087	      0xe824efffff	            call sym.process_cu_tu_index	      9435	dwarf.c	FUNCTION_92	IF_1	IF_4	IF_5	CALL_4
0x400408c	            0x85c0	                           test eax, eax	      9435	dwarf.c	FUNCTION_92	IF_1	IF_4	IF_5	CALL_4
0x400408e	            0x75e0	                           jne 0x4004070	      9435	dwarf.c	FUNCTION_92	IF_1	IF_4	IF_5	CALL_4
0x4004090	    0xc70500000000	               mov dword [0x0400409a], 0	      9436	dwarf.c	FUNCTION_92	IF_1	IF_4	IF_5
0x400409a	              0x5b	                                 pop rbx	      9440	dwarf.c	FUNCTION_92
0x400409b	            0xebda	                           jmp 0x4004077	      9440	dwarf.c	FUNCTION_92
0x400409d	           0xf1f00	                         nop dword [rax]	      9440	dwarf.c	FUNCTION_92
0x40040a0	            0x31f6	                            xor esi, esi	      9431	dwarf.c	FUNCTION_92	IF_1	IF_2	IF_3	CALL_2
0x40040a2	      0xbf00000000	                              mov edi, 0	      9431	dwarf.c	FUNCTION_92	IF_1	IF_2	IF_3	CALL_2
0x40040a7	      0xe804efffff	            call sym.process_cu_tu_index	      9431	dwarf.c	FUNCTION_92	IF_1	IF_2	IF_3	CALL_2
0x40040ac	            0x85c0	                           test eax, eax	      9431	dwarf.c	FUNCTION_92	IF_1	IF_2	IF_3	CALL_2
0x40040ae	            0x75af	                           jne 0x400405f	      9431	dwarf.c	FUNCTION_92	IF_1	IF_2	IF_3	CALL_2
0x40040b0	    0xc70500000000	               mov dword [0x040040ba], 0	      9432	dwarf.c	FUNCTION_92	IF_1	IF_2	IF_3
0x40040ba	            0xeba3	                           jmp 0x400405f	      9432	dwarf.c	FUNCTION_92	IF_1	IF_2	IF_3
parse_gnu_debugaltlink	ELSE,0:FOR,0:CALL,2:WHILE,0:DO,0:functions,0:SWITCH,0:IF,3	41
0x4000280	            0x4155	                                push r13	      9704	dwarf.c	FUNCTION_104
0x4000282	            0x4154	                                push r12	      9704	dwarf.c	FUNCTION_104
0x4000284	          0x4989f5	                            mov r13, rsi	      9704	dwarf.c	FUNCTION_104
0x4000287	              0x55	                                push rbp	      9704	dwarf.c	FUNCTION_104
0x4000288	              0x53	                                push rbx	      9704	dwarf.c	FUNCTION_104
0x4000289	        0x4883ec08	                              sub rsp, 8	      9704	dwarf.c	FUNCTION_104
0x400028d	        0x488b6f30	            mov rbp, qword [rdi + 0x30] 	      9714	dwarf.c	FUNCTION_104	CALL_1
0x4000291	        0x4c8b6720	            mov r12, qword [rdi + 0x20] 	      9713	dwarf.c	FUNCTION_104
0x4000295	          0x4889ee	                            mov rsi, rbp	      9714	dwarf.c	FUNCTION_104	CALL_1
0x4000298	          0x4c89e7	                            mov rdi, r12	      9714	dwarf.c	FUNCTION_104	CALL_1
0x400029b	      0xe800000000	                          call 0x40002a0	      9714	dwarf.c	FUNCTION_104	CALL_1
0x40002a0	        0x488d5801	                      lea rbx, [rax + 1]	      9714	dwarf.c	FUNCTION_104	CALL_1
0x40002a4	          0x4839dd	                            cmp rbp, rbx	      9715	dwarf.c	FUNCTION_104	IF_1
0x40002a7	            0x763f	                           jbe 0x40002e8	      9715	dwarf.c	FUNCTION_104	IF_1
0x40002a9	          0x4829dd	                            sub rbp, rbx	      9718	dwarf.c	FUNCTION_104
0x40002ac	        0x4883fd13	                           cmp rbp, 0x13	      9719	dwarf.c	FUNCTION_104	IF_2
0x40002b0	            0x7636	                           jbe 0x40002e8	      9719	dwarf.c	FUNCTION_104	IF_2
0x40002b2	      0xbe10000000	                           mov esi, 0x10	      9722	dwarf.c	FUNCTION_104	CALL_2
0x40002b7	      0xbf01000000	                              mov edi, 1	      9722	dwarf.c	FUNCTION_104	CALL_2
0x40002bc	      0xe800000000	                          call 0x40002c1	      9722	dwarf.c	FUNCTION_104	CALL_2
0x40002c1	          0x4885c0	                           test rax, rax	      9723	dwarf.c	FUNCTION_104	IF_3
0x40002c4	            0x7422	                            je 0x40002e8	      9723	dwarf.c	FUNCTION_104	IF_3
0x40002c6	          0x4c01e3	                            add rbx, r12	      9727	dwarf.c	FUNCTION_104
0x40002c9	          0x488928	                    mov qword [rax], rbp	      9726	dwarf.c	FUNCTION_104
0x40002cc	        0x49894500	                    mov qword [r13], rax	      9729	dwarf.c	FUNCTION_104
0x40002d0	        0x48895808	                mov qword [rax + 8], rbx	      9727	dwarf.c	FUNCTION_104
0x40002d4	        0x4883c408	                              add rsp, 8	      9732	dwarf.c	FUNCTION_104
0x40002d8	          0x4c89e0	                            mov rax, r12	      9731	dwarf.c	FUNCTION_104
0x40002db	              0x5b	                                 pop rbx	      9732	dwarf.c	FUNCTION_104
0x40002dc	              0x5d	                                 pop rbp	      9732	dwarf.c	FUNCTION_104
0x40002dd	            0x415c	                                 pop r12	      9732	dwarf.c	FUNCTION_104
0x40002df	            0x415d	                                 pop r13	      9732	dwarf.c	FUNCTION_104
0x40002e1	              0xc3	                                     ret	      9732	dwarf.c	FUNCTION_104
0x40002e2	    0x660f1f440000	                    nop word [rax + rax]	      9732	dwarf.c	FUNCTION_104
0x40002e8	        0x4883c408	                              add rsp, 8	      9732	dwarf.c	FUNCTION_104
0x40002ec	            0x31c0	                            xor eax, eax	      9716	dwarf.c	FUNCTION_104	IF_1
0x40002ee	              0x5b	                                 pop rbx	      9732	dwarf.c	FUNCTION_104
0x40002ef	              0x5d	                                 pop rbp	      9732	dwarf.c	FUNCTION_104
0x40002f0	            0x415c	                                 pop r12	      9732	dwarf.c	FUNCTION_104
0x40002f2	            0x415d	                                 pop r13	      9732	dwarf.c	FUNCTION_104
0x40002f4	              0xc3	                                     ret	      9732	dwarf.c	FUNCTION_104
check_gnu_debugaltlink	ELSE,0:FOR,0:CALL,1:WHILE,0:DO,0:functions,0:SWITCH,0:IF,1	7
0x40000f0	        0x4883ec08	                              sub rsp, 8	      9684	dwarf.c	FUNCTION_103
0x40000f4	      0xe800000000	                          call 0x40000f9	      9685	dwarf.c	FUNCTION_103	CALL_1
0x40000f9	          0x4885c0	                           test rax, rax	      9685	dwarf.c	FUNCTION_103	CALL_1
0x40000fc	           0xf95c0	                                setne al	      9685	dwarf.c	FUNCTION_103	CALL_1
0x40000ff	        0x4883c408	                              add rsp, 8	      9694	dwarf.c	FUNCTION_103
0x4000103	           0xfb6c0	                           movzx eax, al	      9694	dwarf.c	FUNCTION_103
0x4000106	              0xc3	                                     ret	      9694	dwarf.c	FUNCTION_103
display_debug_gnu_pubnames	ELSE,0:FOR,0:CALL,1:WHILE,0:DO,0:functions,0:SWITCH,0:IF,0	2
0x400eef0	      0xba01000000	                              mov edx, 1	      4901	dwarf.c	FUNCTION_45	CALL_1
0x400eef5	      0xe936f9ffff	   jmp sym.display_debug_pubnames_worker	      4901	dwarf.c	FUNCTION_45	CALL_1
dwarf_vmatoa_1	ELSE,2:FOR,0:CALL,1:WHILE,0:DO,0:functions,0:SWITCH,0:IF,3	71
0x4000300	            0x4154	                                push r12	       206	dwarf.c	FUNCTION_3
0x4000302	              0x55	                                push rbp	       206	dwarf.c	FUNCTION_3
0x4000303	            0x89d5	                            mov ebp, edx	       206	dwarf.c	FUNCTION_3
0x4000305	              0x53	                                push rbx	       206	dwarf.c	FUNCTION_3
0x4000306	          0x4989f4	                            mov r12, rsi	       206	dwarf.c	FUNCTION_3
0x4000309	        0x4883ec30	                           sub rsp, 0x30	       206	dwarf.c	FUNCTION_3
0x400030d	    0x48631d000000	         movsxd rbx, dword [0x04000314] 	       217	dwarf.c	FUNCTION_3
0x4000314	    0x64488b042528	                mov rax, qword fs:[0x28]	       206	dwarf.c	FUNCTION_3
0x400031d	      0x4889442428	             mov qword [rsp + 0x28], rax	       206	dwarf.c	FUNCTION_3
0x4000322	            0x31c0	                            xor eax, eax	       206	dwarf.c	FUNCTION_3
0x4000324	          0x4889da	                            mov rdx, rbx	       217	dwarf.c	FUNCTION_3
0x4000327	        0x48c1e306	                              shl rbx, 6	       217	dwarf.c	FUNCTION_3
0x400032b	          0x83c201	                              add edx, 1	       218	dwarf.c	FUNCTION_3	CALL_1
0x400032e	    0x4881c3000000	                              add rbx, 0	       217	dwarf.c	FUNCTION_3
0x4000335	          0x83e20f	                            and edx, 0xf	       218	dwarf.c	FUNCTION_3	CALL_1
0x4000338	            0x85ed	                           test ebp, ebp	       220	dwarf.c	FUNCTION_3	IF_1
0x400033a	    0x891500000000	            mov dword [0x04000340], edx 	       218	dwarf.c	FUNCTION_3	CALL_1
0x4000340	            0x756e	                           jne 0x40003b0	       220	dwarf.c	FUNCTION_3	IF_1
0x4000342	          0x4885ff	                           test rdi, rdi	       234	dwarf.c	FUNCTION_3	ELSE_1	IF_3
0x4000345	          0x4889e5	                            mov rbp, rsp	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000348	     0xf84a2000000	                            je 0x40003f0	       234	dwarf.c	FUNCTION_3	ELSE_1	IF_3
0x400034e	          0x4989f9	                             mov r9, rdi	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000351	    0x41b800000000	                              mov r8d, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000357	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x400035c	      0xba20000000	                           mov edx, 0x20	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000361	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000366	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000369	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_112	CALL_1
0x400036b	      0xe800000000	                          call 0x4000370	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000370	          0x4d89e1	                             mov r9, r12	        64	stdio2.h	FUNCTION_114	CALL_1
0x4000373	          0x4989e8	                             mov r8, rbp	        64	stdio2.h	FUNCTION_114	CALL_1
0x4000376	      0xb940000000	                           mov ecx, 0x40	        64	stdio2.h	FUNCTION_114	CALL_1
0x400037b	      0xba01000000	                              mov edx, 1	        64	stdio2.h	FUNCTION_114	CALL_1
0x4000380	      0xbe40000000	                           mov esi, 0x40	        64	stdio2.h	FUNCTION_114	CALL_1
0x4000385	          0x4889df	                            mov rdi, rbx	        64	stdio2.h	FUNCTION_114	CALL_1
0x4000388	            0x31c0	                            xor eax, eax	        64	stdio2.h	FUNCTION_114	CALL_1
0x400038a	      0xe800000000	                          call 0x400038f	        64	stdio2.h	FUNCTION_114	CALL_1
0x400038f	          0x4889d8	                            mov rax, rbx	       239	dwarf.c	FUNCTION_3	ELSE_1
0x4000392	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       241	dwarf.c	FUNCTION_3
0x4000397	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       241	dwarf.c	FUNCTION_3
0x40003a0	            0x7572	                           jne 0x4000414	       241	dwarf.c	FUNCTION_3
0x40003a2	        0x4883c430	                           add rsp, 0x30	       241	dwarf.c	FUNCTION_3
0x40003a6	              0x5b	                                 pop rbx	       241	dwarf.c	FUNCTION_3
0x40003a7	              0x5d	                                 pop rbp	       241	dwarf.c	FUNCTION_3
0x40003a8	            0x415c	                                 pop r12	       241	dwarf.c	FUNCTION_3
0x40003aa	              0xc3	                                     ret	       241	dwarf.c	FUNCTION_3
0x40003ab	       0xf1f440000	                   nop dword [rax + rax]	       241	dwarf.c	FUNCTION_3
0x40003b0	          0x4989f1	                             mov r9, rsi	        64	stdio2.h	FUNCTION_114	CALL_1
0x40003b3	    0x41b800000000	                              mov r8d, 0	        64	stdio2.h	FUNCTION_114	CALL_1
0x40003b9	      0xb940000000	                           mov ecx, 0x40	        64	stdio2.h	FUNCTION_114	CALL_1
0x40003be	      0xba01000000	                              mov edx, 1	        64	stdio2.h	FUNCTION_114	CALL_1
0x40003c3	      0xbe40000000	                           mov esi, 0x40	        64	stdio2.h	FUNCTION_114	CALL_1
0x40003c8	          0x4889df	                            mov rdi, rbx	        64	stdio2.h	FUNCTION_114	CALL_1
0x40003cb	      0xe800000000	                          call 0x40003d0	        64	stdio2.h	FUNCTION_114	CALL_1
0x40003d0	          0x83fd08	                              cmp ebp, 8	       228	dwarf.c	FUNCTION_3	IF_1
0x40003d3	      0xb808000000	                              mov eax, 8	       228	dwarf.c	FUNCTION_3	IF_1
0x40003d8	           0xf47e8	                          cmova ebp, eax	       228	dwarf.c	FUNCTION_3	IF_1
0x40003db	            0xf7dd	                                 neg ebp	       228	dwarf.c	FUNCTION_3	IF_1
0x40003dd	        0x8d442d10	            lea eax, [rbp + rbp + 0x10] 	       228	dwarf.c	FUNCTION_3	IF_1
0x40003e1	          0x4801d8	                            add rax, rbx	       228	dwarf.c	FUNCTION_3	IF_1
0x40003e4	            0xebac	                           jmp 0x4000392	       228	dwarf.c	FUNCTION_3	IF_1
0x40003e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       228	dwarf.c	FUNCTION_3	IF_1
0x40003f0	    0x41b800000000	                              mov r8d, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x40003f6	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x40003fb	      0xba20000000	                           mov edx, 0x20	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000400	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000405	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000408	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_112	CALL_1
0x400040a	      0xe800000000	                          call 0x400040f	        33	stdio2.h	FUNCTION_112	CALL_1
0x400040f	      0xe95cffffff	                           jmp 0x4000370	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000414	      0xe800000000	                          call 0x4000419	       241	dwarf.c	FUNCTION_3
frame_display_row	ELSE,2:FOR,2:CALL,10:WHILE,0:DO,0:functions,0:SWITCH,1:IF,6	176
0x4001500	            0x4154	                                push r12	      7180	dwarf.c	FUNCTION_79
0x4001502	              0x55	                                push rbp	      7180	dwarf.c	FUNCTION_79
0x4001503	          0x4989d4	                            mov r12, rdx	      7180	dwarf.c	FUNCTION_79
0x4001506	              0x53	                                push rbx	      7180	dwarf.c	FUNCTION_79
0x4001507	          0x4889fd	                            mov rbp, rdi	      7180	dwarf.c	FUNCTION_79
0x400150a	        0x4883ec70	                           sub rsp, 0x70	      7180	dwarf.c	FUNCTION_79
0x400150e	    0x64488b042528	                mov rax, qword fs:[0x28]	      7180	dwarf.c	FUNCTION_79
0x4001517	      0x4889442468	             mov qword [rsp + 0x68], rax	      7180	dwarf.c	FUNCTION_79
0x400151c	            0x31c0	                            xor eax, eax	      7180	dwarf.c	FUNCTION_79
0x400151e	          0x8b4710	            mov eax, dword [rdi + 0x10] 	      7184	dwarf.c	FUNCTION_79	IF_1
0x4001521	            0x3902	                    cmp dword [rdx], eax	      7184	dwarf.c	FUNCTION_79	IF_1
0x4001523	            0x7402	                            je 0x4001527	      7184	dwarf.c	FUNCTION_79	IF_1
0x4001525	            0x8902	                    mov dword [rdx], eax	      7185	dwarf.c	FUNCTION_79	IF_1
0x4001527	            0x8b3e	                    mov edi, dword [rsi]	      7187	dwarf.c	FUNCTION_79	IF_2
0x4001529	            0x85ff	                           test edi, edi	      7187	dwarf.c	FUNCTION_79	IF_2
0x400152b	     0xf85ef010000	                           jne 0x4001720	      7187	dwarf.c	FUNCTION_79	IF_2
0x4001531	        0x488b7d38	            mov rdi, qword [rbp + 0x38] 	      7207	dwarf.c	FUNCTION_79	CALL_2
0x4001535	    0x8b3500000000	            mov esi, dword [0x0400153b] 	      7207	dwarf.c	FUNCTION_79	CALL_2
0x400153b	      0xe8e0eeffff	                call sym.print_dwarf_vma	      7207	dwarf.c	FUNCTION_79	CALL_2
0x4001540	        0x807d5d00	                cmp byte [rbp + 0x5d], 0	      7208	dwarf.c	FUNCTION_79	IF_5
0x4001544	     0xf8496010000	                            je 0x40016e0	      7208	dwarf.c	FUNCTION_79	IF_5
0x400154a	    0xc70424657870	               mov dword [rsp], 0x707865	       110	string3.h	FUNCTION_135	CALL_3
0x4001551	          0x4989e4	                            mov r12, rsp	       110	string3.h	FUNCTION_135	CALL_3
0x4001554	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4001556	          0x4c89e2	                            mov rdx, r12	       104	stdio2.h	CALL_16
0x4001559	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400155e	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4001563	            0x31db	                            xor ebx, ebx	      7214	dwarf.c	FUNCTION_79	FOR_2
0x4001565	      0xe800000000	                          call 0x400156a	       104	stdio2.h	CALL_16
0x400156a	          0x8b4d10	            mov ecx, dword [rbp + 0x10] 	      7214	dwarf.c	FUNCTION_79	FOR_2
0x400156d	            0x85c9	                           test ecx, ecx	      7214	dwarf.c	FUNCTION_79	FOR_2
0x400156f	            0x755b	                           jne 0x40015cc	      7214	dwarf.c	FUNCTION_79	FOR_2
0x4001571	      0xe9b2000000	                           jmp 0x4001628	      7214	dwarf.c	FUNCTION_79	FOR_2
0x4001576	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7214	dwarf.c	FUNCTION_79	FOR_2
0x4001580	        0x6683f808	                               cmp ax, 8	      7218	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1
0x4001584	     0xf8416010000	                            je 0x40016a0	      7218	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1
0x400158a	        0x6683f809	                               cmp ax, 9	      7218	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1
0x400158e	     0xf84dc000000	                            je 0x4001670	      7218	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1
0x4001594	        0x6683f807	                               cmp ax, 7	      7218	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1
0x4001598	     0xf84c2000000	                            je 0x4001660	      7218	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1
0x400159e	    0x41c704246e2f	               mov dword [r12], 0x612f6e	       110	string3.h	FUNCTION_135	CALL_3
0x40015a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       110	string3.h	FUNCTION_135	CALL_3
0x40015b0	          0x4c89e2	                            mov rdx, r12	       104	stdio2.h	CALL_16
0x40015b3	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x40015b8	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40015bd	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40015bf	      0xe800000000	                          call 0x40015c4	       104	stdio2.h	CALL_16
0x40015c4	          0x83c301	                              add ebx, 1	      7214	dwarf.c	FUNCTION_79	FOR_2
0x40015c7	          0x395d10	            cmp dword [rbp + 0x10], ebx 	      7214	dwarf.c	FUNCTION_79	FOR_2
0x40015ca	            0x765c	                           jbe 0x4001628	      7214	dwarf.c	FUNCTION_79	FOR_2
0x40015cc	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      7216	dwarf.c	FUNCTION_79	FOR_2	IF_6
0x40015d0	            0x89da	                            mov edx, ebx	      7216	dwarf.c	FUNCTION_79	FOR_2	IF_6
0x40015d2	         0xfb70450	           movzx eax, word [rax + rdx*2]	      7216	dwarf.c	FUNCTION_79	FOR_2	IF_6
0x40015d6	        0x6683f8ff	              cmp ax, 0xffffffffffffffff	      7216	dwarf.c	FUNCTION_79	FOR_2	IF_6
0x40015da	            0x74e8	                            je 0x40015c4	      7216	dwarf.c	FUNCTION_79	FOR_2	IF_6
0x40015dc	        0x6683f810	                            cmp ax, 0x10	      7218	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1
0x40015e0	            0x746e	                            je 0x4001650	      7218	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1
0x40015e2	            0x7e9c	                           jle 0x4001580	      7218	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1
0x40015e4	        0x6683f816	                            cmp ax, 0x16	      7218	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1
0x40015e8	     0xf84da000000	                            je 0x40016c8	      7218	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1
0x40015ee	        0x663d8000	                            cmp ax, 0x80	      7218	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1
0x40015f2	     0xf84b8000000	                            je 0x40016b0	      7218	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1
0x40015f8	        0x6683f814	                            cmp ax, 0x14	      7218	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1
0x40015fc	            0x75a0	                           jne 0x400159e	      7218	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1
0x40015fe	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      7230	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1
0x4001602	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x4001607	        0x448b0490	            mov r8d, dword [rax + rdx*4]	        33	stdio2.h	FUNCTION_112	CALL_1
0x400160b	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_112	CALL_1
0x4001610	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_112	CALL_1
0x4001615	          0x4c89e7	                            mov rdi, r12	        33	stdio2.h	FUNCTION_112	CALL_1
0x4001618	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_112	CALL_1
0x400161a	      0xe800000000	                          call 0x400161f	        33	stdio2.h	FUNCTION_112	CALL_1
0x400161f	            0xeb8f	                           jmp 0x40015b0	        33	stdio2.h	FUNCTION_112	CALL_1
0x4001621	     0xf1f80000000	                         nop dword [rax]	        33	stdio2.h	FUNCTION_112	CALL_1
0x4001628	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x400162d	      0xe800000000	                          call 0x4001632	       104	stdio2.h	CALL_16
0x4001632	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      7249	dwarf.c	FUNCTION_79
0x4001637	    0x644833042528	                xor rax, qword fs:[0x28]	      7249	dwarf.c	FUNCTION_79
0x4001640	     0xf8579010000	                           jne 0x40017bf	      7249	dwarf.c	FUNCTION_79
0x4001646	        0x4883c470	                           add rsp, 0x70	      7249	dwarf.c	FUNCTION_79
0x400164a	              0x5b	                                 pop rbx	      7249	dwarf.c	FUNCTION_79
0x400164b	              0x5d	                                 pop rbp	      7249	dwarf.c	FUNCTION_79
0x400164c	            0x415c	                                 pop r12	      7249	dwarf.c	FUNCTION_79
0x400164e	              0xc3	                                     ret	      7249	dwarf.c	FUNCTION_79
0x400164f	              0x90	                                     nop	      7249	dwarf.c	FUNCTION_79
0x4001650	    0x41c704246578	               mov dword [r12], 0x707865	       110	string3.h	FUNCTION_135	CALL_3
0x4001658	      0xe953ffffff	                           jmp 0x40015b0	       110	string3.h	FUNCTION_135	CALL_3
0x400165d	           0xf1f00	                         nop dword [rax]	       110	string3.h	FUNCTION_135	CALL_3
0x4001660	      0xba75000000	                           mov edx, 0x75	       110	string3.h	FUNCTION_135	CALL_3
0x4001665	      0x6641891424	                      mov word [r12], dx	       110	string3.h	FUNCTION_135	CALL_3
0x400166a	      0xe941ffffff	                           jmp 0x40015b0	       110	string3.h	FUNCTION_135	CALL_3
0x400166f	              0x90	                                     nop	       110	string3.h	FUNCTION_135	CALL_3
0x4001670	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      7233	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1	CALL_7
0x4001674	            0x31f6	                            xor esi, esi	      7233	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1	CALL_7
0x4001676	          0x8b3c90	            mov edi, dword [rax + rdx*4]	      7233	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1	CALL_7
0x4001679	      0xe8f2fdffff	                        call sym.regname	      7233	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1	CALL_7
0x400167e	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x4001683	          0x4989c0	                             mov r8, rax	      7233	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1	CALL_7
0x4001686	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_112	CALL_1
0x400168b	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_112	CALL_1
0x4001690	          0x4c89e7	                            mov rdi, r12	        33	stdio2.h	FUNCTION_112	CALL_1
0x4001693	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_112	CALL_1
0x4001695	      0xe800000000	                          call 0x400169a	        33	stdio2.h	FUNCTION_112	CALL_1
0x400169a	      0xe911ffffff	                           jmp 0x40015b0	        33	stdio2.h	FUNCTION_112	CALL_1
0x400169f	              0x90	                                     nop	        33	stdio2.h	FUNCTION_112	CALL_1
0x40016a0	      0xb873000000	                           mov eax, 0x73	       110	string3.h	FUNCTION_135	CALL_3
0x40016a5	      0x6641890424	                      mov word [r12], ax	       110	string3.h	FUNCTION_135	CALL_3
0x40016aa	      0xe901ffffff	                           jmp 0x40015b0	       110	string3.h	FUNCTION_135	CALL_3
0x40016af	              0x90	                                     nop	       110	string3.h	FUNCTION_135	CALL_3
0x40016b0	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      7227	dwarf.c	FUNCTION_79	FOR_2	IF_6	SWITCH_1
0x40016b4	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x40016b9	        0x448b0490	            mov r8d, dword [rax + rdx*4]	        33	stdio2.h	FUNCTION_112	CALL_1
0x40016bd	      0xe949ffffff	                           jmp 0x400160b	        33	stdio2.h	FUNCTION_112	CALL_1
0x40016c2	    0x660f1f440000	                    nop word [rax + rax]	        33	stdio2.h	FUNCTION_112	CALL_1
0x40016c8	    0x41c704247665	            mov dword [r12], 0x70786576 	       110	string3.h	FUNCTION_135	CALL_3
0x40016d0	    0x41c644240400	                   mov byte [r12 + 4], 0	       110	string3.h	FUNCTION_135	CALL_3
0x40016d6	      0xe9d5feffff	                           jmp 0x40015b0	       110	string3.h	FUNCTION_135	CALL_3
0x40016db	       0xf1f440000	                   nop dword [rax + rax]	       110	string3.h	FUNCTION_135	CALL_3
0x40016e0	        0x488b5d50	            mov rbx, qword [rbp + 0x50] 	      7211	dwarf.c	FUNCTION_79	CALL_4
0x40016e4	          0x8b7d48	            mov edi, dword [rbp + 0x48] 	      7211	dwarf.c	FUNCTION_79	CALL_4
0x40016e7	      0xbe01000000	                              mov esi, 1	      7211	dwarf.c	FUNCTION_79	CALL_4
0x40016ec	          0x4989e4	                            mov r12, rsp	        33	stdio2.h	FUNCTION_112	CALL_1
0x40016ef	      0xe87cfdffff	                        call sym.regname	      7211	dwarf.c	FUNCTION_79	CALL_4
0x40016f4	          0x4189d9	                            mov r9d, ebx	        33	stdio2.h	FUNCTION_112	CALL_1
0x40016f7	          0x4989c0	                             mov r8, rax	      7211	dwarf.c	FUNCTION_79	CALL_4
0x40016fa	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x40016ff	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_112	CALL_1
0x4001704	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_112	CALL_1
0x4001709	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_112	CALL_1
0x400170c	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_112	CALL_1
0x400170e	      0xe800000000	                          call 0x4001713	        33	stdio2.h	FUNCTION_112	CALL_1
0x4001713	      0xe93cfeffff	                           jmp 0x4001554	        33	stdio2.h	FUNCTION_112	CALL_1
0x4001718	     0xf1f84000000	                   nop dword [rax + rax]	        33	stdio2.h	FUNCTION_112	CALL_1
0x4001720	    0xc70600000000	                      mov dword [rsi], 0	      7191	dwarf.c	FUNCTION_79	IF_2
0x4001726	    0x8b0500000000	            mov eax, dword [0x0400172c] 	       104	stdio2.h	CALL_16
0x400172c	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4001731	      0xb900000000	                              mov ecx, 0	       104	stdio2.h	CALL_16
0x4001736	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400173b	            0x31db	                            xor ebx, ebx	      7195	dwarf.c	FUNCTION_79	IF_2	FOR_1
0x400173d	          0x8d1400	                    lea edx, [rax + rax]	       104	stdio2.h	CALL_16
0x4001740	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4001742	      0xe800000000	                          call 0x4001747	       104	stdio2.h	CALL_16
0x4001747	        0x418b3424	                    mov esi, dword [r12]	      7195	dwarf.c	FUNCTION_79	IF_2	FOR_1
0x400174b	            0x85f6	                           test esi, esi	      7195	dwarf.c	FUNCTION_79	IF_2	FOR_1
0x400174d	            0x7532	                           jne 0x4001781	      7195	dwarf.c	FUNCTION_79	IF_2	FOR_1
0x400174f	            0xeb5f	                           jmp 0x40017b0	      7195	dwarf.c	FUNCTION_79	IF_2	FOR_1
0x4001751	     0xf1f80000000	                         nop dword [rax]	      7195	dwarf.c	FUNCTION_79	IF_2	FOR_1
0x4001758	      0xbe01000000	                              mov esi, 1	      7201	dwarf.c	FUNCTION_79	IF_2	FOR_1	IF_3	CALL_1
0x400175d	            0x89df	                            mov edi, ebx	      7201	dwarf.c	FUNCTION_79	IF_2	FOR_1	IF_3	CALL_1
0x400175f	      0xe80cfdffff	                        call sym.regname	      7201	dwarf.c	FUNCTION_79	IF_2	FOR_1	IF_3	CALL_1
0x4001764	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4001769	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_16
0x400176c	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4001771	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4001773	      0xe800000000	                          call 0x4001778	       104	stdio2.h	CALL_16
0x4001778	          0x83c301	                              add ebx, 1	      7195	dwarf.c	FUNCTION_79	IF_2	FOR_1
0x400177b	        0x41391c24	                    cmp dword [r12], ebx	      7195	dwarf.c	FUNCTION_79	IF_2	FOR_1
0x400177f	            0x762f	                           jbe 0x40017b0	      7195	dwarf.c	FUNCTION_79	IF_2	FOR_1
0x4001781	        0x488b5518	            mov rdx, qword [rbp + 0x18] 	      7196	dwarf.c	FUNCTION_79	IF_2	FOR_1	IF_3
0x4001785	            0x89d8	                            mov eax, ebx	      7196	dwarf.c	FUNCTION_79	IF_2	FOR_1	IF_3
0x4001787	      0x66833c42ff	cmp word [rdx + rax*2], 0xffffffffffffffff	      7196	dwarf.c	FUNCTION_79	IF_2	FOR_1	IF_3
0x400178c	            0x74ea	                            je 0x4001778	      7196	dwarf.c	FUNCTION_79	IF_2	FOR_1	IF_3
0x400178e	          0x395d58	            cmp dword [rbp + 0x58], ebx 	      7198	dwarf.c	FUNCTION_79	IF_2	FOR_1	IF_3	IF_4
0x4001791	            0x75c5	                           jne 0x4001758	      7198	dwarf.c	FUNCTION_79	IF_2	FOR_1	IF_3	IF_4
0x4001793	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4001795	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400179a	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400179f	      0xe800000000	                          call 0x40017a4	       104	stdio2.h	CALL_16
0x40017a4	          0x83c301	                              add ebx, 1	      7195	dwarf.c	FUNCTION_79	IF_2	FOR_1
0x40017a7	        0x41391c24	                    cmp dword [r12], ebx	      7195	dwarf.c	FUNCTION_79	IF_2	FOR_1
0x40017ab	            0x77d4	                            ja 0x4001781	      7195	dwarf.c	FUNCTION_79	IF_2	FOR_1
0x40017ad	           0xf1f00	                         nop dword [rax]	      7195	dwarf.c	FUNCTION_79	IF_2	FOR_1
0x40017b0	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x40017b5	      0xe800000000	                          call 0x40017ba	       104	stdio2.h	CALL_16
0x40017ba	      0xe972fdffff	                           jmp 0x4001531	       104	stdio2.h	CALL_16
0x40017bf	      0xe800000000	                          call 0x40017c4	      7249	dwarf.c	FUNCTION_79
display_debug_macinfo	ELSE,0:FOR,0:CALL,14:WHILE,1:DO,0:functions,0:SWITCH,1:IF,0	139
0x4006710	            0x4155	                                push r13	      4907	dwarf.c	FUNCTION_46
0x4006712	            0x4154	                                push r12	      4907	dwarf.c	FUNCTION_46
0x4006714	        0x488d7718	                   lea rsi, [rdi + 0x18]	      4907	dwarf.c	FUNCTION_46
0x4006718	              0x55	                                push rbp	      4907	dwarf.c	FUNCTION_46
0x4006719	              0x53	                                push rbx	      4907	dwarf.c	FUNCTION_46
0x400671a	        0x4883ec18	                           sub rsp, 0x18	      4907	dwarf.c	FUNCTION_46
0x400671e	        0x488b5f20	            mov rbx, qword [rdi + 0x20] 	      4908	dwarf.c	FUNCTION_46
0x4006722	    0x64488b042528	                mov rax, qword fs:[0x28]	      4907	dwarf.c	FUNCTION_46
0x400672b	      0x4889442408	                mov qword [rsp + 8], rax	      4907	dwarf.c	FUNCTION_46
0x4006730	            0x31c0	                            xor eax, eax	      4907	dwarf.c	FUNCTION_46
0x4006732	          0x4889dd	                            mov rbp, rbx	      4909	dwarf.c	FUNCTION_46
0x4006735	        0x48036f30	             add rbp, qword [rdi + 0x30]	      4909	dwarf.c	FUNCTION_46
0x4006739	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      4914	dwarf.c	FUNCTION_46	CALL_1
0x400673d	      0xe83ebaffff	  call sym.introduce.isra.5.constprop.27	      4914	dwarf.c	FUNCTION_46	CALL_1
0x4006742	          0x4839eb	                            cmp rbx, rbp	      4916	dwarf.c	FUNCTION_46	WHILE_1
0x4006745	            0x7274	                            jb 0x40067bb	      4916	dwarf.c	FUNCTION_46	WHILE_1
0x4006747	      0xe944010000	                           jmp 0x4006890	      4916	dwarf.c	FUNCTION_46	WHILE_1
0x400674c	         0xf1f4000	                         nop dword [rax]	      4916	dwarf.c	FUNCTION_46	WHILE_1
0x4006750	            0x3c01	                               cmp al, 1	      4924	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x4006752	     0xf84c0000000	                            je 0x4006818	      4924	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x4006758	            0x3c02	                               cmp al, 2	      4924	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x400675a	            0x7556	                           jne 0x40067b2	      4924	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x400675c	      0x488d742404	                      lea rsi, [rsp + 4]	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006761	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006763	          0x4889df	                            mov rdi, rbx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006766	          0x4889e9	                            mov rcx, rbp	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006769	      0xe800000000	                          call 0x400676e	       356	dwarf.c	FUNCTION_10	CALL_1
0x400676e	      0x448b642404	               mov r12d, dword [rsp + 4]	      4955	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x4006773	          0x4889ee	                            mov rsi, rbp	      4957	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_10
0x4006776	          0x4989c5	                            mov r13, rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006779	          0x4901dc	                            add r12, rbx	      4955	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x400677c	          0x4c29e6	                            sub rsi, r12	      4957	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_10
0x400677f	          0x4c89e7	                            mov rdi, r12	      4957	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_10
0x4006782	      0xe800000000	                          call 0x4006787	      4957	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_10
0x4006787	      0x498d5c0401	                lea rbx, [r12 + rax + 1]	      4957	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_10
0x400678c	      0xba05000000	                              mov edx, 5	      4958	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_11
0x4006791	      0xbe00000000	                              mov esi, 0	      4958	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_11
0x4006796	            0x31ff	                            xor edi, edi	      4970	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_14
0x4006798	      0xe800000000	                          call 0x400679d	      4970	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_14
0x400679d	          0x4c89e1	                            mov rcx, r12	       104	stdio2.h	CALL_16
0x40067a0	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40067a3	          0x4489ea	                           mov edx, r13d	       104	stdio2.h	CALL_16
0x40067a6	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40067ab	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40067ad	      0xe800000000	                          call 0x40067b2	       104	stdio2.h	CALL_16
0x40067b2	          0x4839dd	                            cmp rbp, rbx	      4916	dwarf.c	FUNCTION_46	WHILE_1
0x40067b5	     0xf86d5000000	                           jbe 0x4006890	      4916	dwarf.c	FUNCTION_46	WHILE_1
0x40067bb	           0xfb603	                   movzx eax, byte [rbx]	      4921	dwarf.c	FUNCTION_46	WHILE_1
0x40067be	        0x4883c301	                              add rbx, 1	      4922	dwarf.c	FUNCTION_46	WHILE_1
0x40067c2	            0x3c03	                               cmp al, 3	      4924	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x40067c4	     0xf84e6000000	                            je 0x40068b0	      4924	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x40067ca	            0x7684	                           jbe 0x4006750	      4924	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x40067cc	            0x3c04	                               cmp al, 4	      4924	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x40067ce	     0xf848c000000	                            je 0x4006860	      4924	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x40067d4	            0x3cff	                            cmp al, 0xff	      4924	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x40067d6	            0x75da	                           jne 0x40067b2	      4924	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x40067d8	      0x488d742404	                      lea rsi, [rsp + 4]	       356	dwarf.c	FUNCTION_10	CALL_1
0x40067dd	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x40067df	          0x4889df	                            mov rdi, rbx	       356	dwarf.c	FUNCTION_10	CALL_1
0x40067e2	          0x4889e9	                            mov rcx, rbp	       356	dwarf.c	FUNCTION_10	CALL_1
0x40067e5	      0xe800000000	                          call 0x40067ea	       356	dwarf.c	FUNCTION_10	CALL_1
0x40067ea	      0x448b642404	               mov r12d, dword [rsp + 4]	      4967	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x40067ef	          0x4889ee	                            mov rsi, rbp	      4969	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_13
0x40067f2	          0x4989c5	                            mov r13, rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x40067f5	          0x4901dc	                            add r12, rbx	      4967	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x40067f8	          0x4c29e6	                            sub rsi, r12	      4969	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_13
0x40067fb	          0x4c89e7	                            mov rdi, r12	      4969	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_13
0x40067fe	      0xe800000000	                          call 0x4006803	      4969	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_13
0x4006803	      0xba05000000	                              mov edx, 5	      4970	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_14
0x4006808	      0x498d5c0401	                lea rbx, [r12 + rax + 1]	      4969	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_13
0x400680d	      0xbe00000000	                              mov esi, 0	      4970	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_14
0x4006812	            0xeb82	                           jmp 0x4006796	      4970	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_14
0x4006814	         0xf1f4000	                         nop dword [rax]	      4970	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_14
0x4006818	      0x488d742404	                      lea rsi, [rsp + 4]	       356	dwarf.c	FUNCTION_10	CALL_1
0x400681d	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x400681f	          0x4889df	                            mov rdi, rbx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006822	          0x4889e9	                            mov rcx, rbp	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006825	      0xe800000000	                          call 0x400682a	       356	dwarf.c	FUNCTION_10	CALL_1
0x400682a	      0x448b642404	               mov r12d, dword [rsp + 4]	      4946	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x400682f	          0x4889ee	                            mov rsi, rbp	      4948	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_7
0x4006832	          0x4989c5	                            mov r13, rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006835	          0x4901dc	                            add r12, rbx	      4946	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x4006838	          0x4c29e6	                            sub rsi, r12	      4948	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_7
0x400683b	          0x4c89e7	                            mov rdi, r12	      4948	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_7
0x400683e	      0xe800000000	                          call 0x4006843	      4948	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_7
0x4006843	      0xba05000000	                              mov edx, 5	      4949	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_8
0x4006848	      0x498d5c0401	                lea rbx, [r12 + rax + 1]	      4948	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_7
0x400684d	      0xbe00000000	                              mov esi, 0	      4949	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_8
0x4006852	      0xe93fffffff	                           jmp 0x4006796	      4949	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_8
0x4006857	    0x660f1f840000	                    nop word [rax + rax]	      4949	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_8
0x4006860	            0x31ff	                            xor edi, edi	      4941	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_5
0x4006862	      0xba05000000	                              mov edx, 5	      4941	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_5
0x4006867	      0xbe00000000	                              mov esi, 0	      4941	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_5
0x400686c	      0xe800000000	                          call 0x4006871	      4941	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_5
0x4006871	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4006876	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4006879	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400687b	      0xe800000000	                          call 0x4006880	       104	stdio2.h	CALL_16
0x4006880	          0x4839dd	                            cmp rbp, rbx	      4916	dwarf.c	FUNCTION_46	WHILE_1
0x4006883	     0xf8732ffffff	                            ja 0x40067bb	      4916	dwarf.c	FUNCTION_46	WHILE_1
0x4006889	     0xf1f80000000	                         nop dword [rax]	      4916	dwarf.c	FUNCTION_46	WHILE_1
0x4006890	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      4978	dwarf.c	FUNCTION_46
0x4006895	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4978	dwarf.c	FUNCTION_46
0x400689e	      0xb801000000	                              mov eax, 1	      4978	dwarf.c	FUNCTION_46
0x40068a3	            0x756e	                           jne 0x4006913	      4978	dwarf.c	FUNCTION_46
0x40068a5	        0x4883c418	                           add rsp, 0x18	      4978	dwarf.c	FUNCTION_46
0x40068a9	              0x5b	                                 pop rbx	      4978	dwarf.c	FUNCTION_46
0x40068aa	              0x5d	                                 pop rbp	      4978	dwarf.c	FUNCTION_46
0x40068ab	            0x415c	                                 pop r12	      4978	dwarf.c	FUNCTION_46
0x40068ad	            0x415d	                                 pop r13	      4978	dwarf.c	FUNCTION_46
0x40068af	              0xc3	                                     ret	      4978	dwarf.c	FUNCTION_46
0x40068b0	      0x488d742404	                      lea rsi, [rsp + 4]	       356	dwarf.c	FUNCTION_10	CALL_1
0x40068b5	          0x4889e9	                            mov rcx, rbp	       356	dwarf.c	FUNCTION_10	CALL_1
0x40068b8	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x40068ba	          0x4889df	                            mov rdi, rbx	       356	dwarf.c	FUNCTION_10	CALL_1
0x40068bd	      0xe800000000	                          call 0x40068c2	       356	dwarf.c	FUNCTION_10	CALL_1
0x40068c2	          0x4989c4	                            mov r12, rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x40068c5	        0x8b442404	                mov eax, dword [rsp + 4]	      4931	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x40068c9	      0x488d742404	                      lea rsi, [rsp + 4]	       356	dwarf.c	FUNCTION_10	CALL_1
0x40068ce	          0x4889e9	                            mov rcx, rbp	       356	dwarf.c	FUNCTION_10	CALL_1
0x40068d1	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x40068d3	          0x4801c3	                            add rbx, rax	      4931	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x40068d6	          0x4889df	                            mov rdi, rbx	       356	dwarf.c	FUNCTION_10	CALL_1
0x40068d9	      0xe800000000	                          call 0x40068de	       356	dwarf.c	FUNCTION_10	CALL_1
0x40068de	          0x4989c5	                            mov r13, rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x40068e1	        0x8b442404	                mov eax, dword [rsp + 4]	      4933	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x40068e5	            0x31ff	                            xor edi, edi	      4935	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_4
0x40068e7	      0xba05000000	                              mov edx, 5	      4935	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_4
0x40068ec	      0xbe00000000	                              mov esi, 0	      4935	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_4
0x40068f1	          0x4801c3	                            add rbx, rax	      4933	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1
0x40068f4	      0xe800000000	                          call 0x40068f9	      4935	dwarf.c	FUNCTION_46	WHILE_1	SWITCH_1	CALL_4
0x40068f9	          0x4489e9	                           mov ecx, r13d	       104	stdio2.h	CALL_16
0x40068fc	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40068ff	          0x4489e2	                           mov edx, r12d	       104	stdio2.h	CALL_16
0x4006902	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4006907	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4006909	      0xe800000000	                          call 0x400690e	       104	stdio2.h	CALL_16
0x400690e	      0xe99ffeffff	                           jmp 0x40067b2	       104	stdio2.h	CALL_16
0x4006913	      0xe800000000	                          call 0x4006918	      4978	dwarf.c	FUNCTION_46
fetch_indexed_string	ELSE,0:FOR,0:CALL,15:WHILE,0:DO,0:functions,0:SWITCH,0:IF,6	117
0x4000450	              0x55	                                push rbp	       747	dwarf.c	FUNCTION_15
0x4000451	              0x53	                                push rbx	       747	dwarf.c	FUNCTION_15
0x4000452	        0x4883ec08	                              sub rsp, 8	       747	dwarf.c	FUNCTION_15
0x4000456	            0x85c9	                           test ecx, ecx	       748	dwarf.c	FUNCTION_15
0x4000458	            0x7426	                            je 0x4000480	       748	dwarf.c	FUNCTION_15
0x400045a	    0x4c8b05000000	              mov r8, qword [0x04000461]	       756	dwarf.c	FUNCTION_15	IF_1
0x4000461	        0x480faffa	                           imul rdi, rdx	       752	dwarf.c	FUNCTION_15
0x4000465	          0x4d85c0	                             test r8, r8	       756	dwarf.c	FUNCTION_15	IF_1
0x4000468	     0xf84e2000000	                            je 0x4000550	       756	dwarf.c	FUNCTION_15	IF_1
0x400046e	      0xbb22000000	                           mov ebx, 0x22	       748	dwarf.c	FUNCTION_15
0x4000473	      0xb824000000	                           mov eax, 0x24	       749	dwarf.c	FUNCTION_15
0x4000478	            0xeb24	                           jmp 0x400049e	       749	dwarf.c	FUNCTION_15
0x400047a	    0x660f1f440000	                    nop word [rax + rax]	       749	dwarf.c	FUNCTION_15
0x4000480	    0x4c8b05000000	              mov r8, qword [0x04000487]	       756	dwarf.c	FUNCTION_15	IF_1
0x4000487	        0x480faffa	                           imul rdi, rdx	       752	dwarf.c	FUNCTION_15
0x400048b	          0x4d85c0	                             test r8, r8	       756	dwarf.c	FUNCTION_15	IF_1
0x400048e	     0xf84cc000000	                            je 0x4000560	       756	dwarf.c	FUNCTION_15	IF_1
0x4000494	      0xbb0a000000	                            mov ebx, 0xa	       748	dwarf.c	FUNCTION_15
0x4000499	      0xb823000000	                           mov eax, 0x23	       749	dwarf.c	FUNCTION_15
0x400049e	          0x4885f6	                           test rsi, rsi	       760	dwarf.c	FUNCTION_15	IF_2
0x40004a1	            0x7404	                            je 0x40004a7	       760	dwarf.c	FUNCTION_15	IF_2
0x40004a3	        0x48037e38	             add rdi, qword [rsi + 0x38]	       761	dwarf.c	FUNCTION_15	IF_2
0x40004a7	          0x4889c6	                            mov rsi, rax	       762	dwarf.c	FUNCTION_15	IF_3
0x40004aa	        0x48c1e007	                              shl rax, 7	       762	dwarf.c	FUNCTION_15	IF_3
0x40004ae	        0x48c1e604	                              shl rsi, 4	       762	dwarf.c	FUNCTION_15	IF_3
0x40004b2	          0x4829f0	                            sub rax, rsi	       762	dwarf.c	FUNCTION_15	IF_3
0x40004b5	    0x483bb8000000	                    cmp rdi, qword [rax]	       762	dwarf.c	FUNCTION_15	IF_3
0x40004bc	     0xf83ae000000	                           jae 0x4000570	       762	dwarf.c	FUNCTION_15	IF_3
0x40004c2	          0x4889d8	                            mov rax, rbx	       769	dwarf.c	FUNCTION_15	IF_4
0x40004c5	        0x48c1e307	                              shl rbx, 7	       769	dwarf.c	FUNCTION_15	IF_4
0x40004c9	        0x48c1e004	                              shl rax, 4	       769	dwarf.c	FUNCTION_15	IF_4
0x40004cd	          0x4829c3	                            sub rbx, rax	       769	dwarf.c	FUNCTION_15	IF_4
0x40004d0	    0x4881c3000000	                              add rbx, 0	       769	dwarf.c	FUNCTION_15	IF_4
0x40004d7	      0x48837b2000	               cmp qword [rbx + 0x20], 0	       769	dwarf.c	FUNCTION_15	IF_4
0x40004dc	            0x744a	                            je 0x4000528	       769	dwarf.c	FUNCTION_15	IF_4
0x40004de	          0x4c01c7	                             add rdi, r8	       773	dwarf.c	FUNCTION_15	CALL_9
0x40004e1	            0x89d6	                            mov esi, edx	       773	dwarf.c	FUNCTION_15	CALL_9
0x40004e3	    0xff1500000000	                 call qword [0x040004e9]	       773	dwarf.c	FUNCTION_15	CALL_9
0x40004e9	        0x482b4328	             sub rax, qword [rbx + 0x28]	       774	dwarf.c	FUNCTION_15
0x40004ed	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	       775	dwarf.c	FUNCTION_15	IF_5
0x40004f1	          0x4839f0	                            cmp rax, rsi	       775	dwarf.c	FUNCTION_15	IF_5
0x40004f4	     0xf83c6000000	                           jae 0x40005c0	       775	dwarf.c	FUNCTION_15	IF_5
0x40004fa	          0x4889c5	                            mov rbp, rax	       782	dwarf.c	FUNCTION_15
0x40004fd	        0x48036b20	             add rbp, qword [rbx + 0x20]	       782	dwarf.c	FUNCTION_15
0x4000501	          0x4889f3	                            mov rbx, rsi	       786	dwarf.c	FUNCTION_15	IF_6	CALL_14
0x4000504	          0x4829c3	                            sub rbx, rax	       786	dwarf.c	FUNCTION_15	IF_6	CALL_14
0x4000507	          0x4889de	                            mov rsi, rbx	       786	dwarf.c	FUNCTION_15	IF_6	CALL_14
0x400050a	          0x4889ef	                            mov rdi, rbp	       786	dwarf.c	FUNCTION_15	IF_6	CALL_14
0x400050d	      0xe800000000	                          call 0x4000512	       786	dwarf.c	FUNCTION_15	IF_6	CALL_14
0x4000512	          0x4839c3	                            cmp rbx, rax	       786	dwarf.c	FUNCTION_15	IF_6	CALL_14
0x4000515	     0xf84e5000000	                            je 0x4000600	       786	dwarf.c	FUNCTION_15	IF_6	CALL_14
0x400051b	        0x4883c408	                              add rsp, 8	       791	dwarf.c	FUNCTION_15
0x400051f	          0x4889e8	                            mov rax, rbp	       791	dwarf.c	FUNCTION_15
0x4000522	              0x5b	                                 pop rbx	       791	dwarf.c	FUNCTION_15
0x4000523	              0x5d	                                 pop rbp	       791	dwarf.c	FUNCTION_15
0x4000524	              0xc3	                                     ret	       791	dwarf.c	FUNCTION_15
0x4000525	           0xf1f00	                         nop dword [rax]	       791	dwarf.c	FUNCTION_15
0x4000528	            0x85c9	                           test ecx, ecx	       770	dwarf.c	FUNCTION_15	IF_4	CALL_7
0x400052a	      0xba05000000	                              mov edx, 5	       770	dwarf.c	FUNCTION_15	IF_4	CALL_7
0x400052f	      0xbe00000000	                              mov esi, 0	       770	dwarf.c	FUNCTION_15	IF_4	CALL_7
0x4000534	            0x7505	                           jne 0x400053b	       770	dwarf.c	FUNCTION_15	IF_4	CALL_7
0x4000536	      0xbe00000000	                              mov esi, 0	       770	dwarf.c	FUNCTION_15	IF_4	CALL_7
0x400053b	        0x4883c408	                              add rsp, 8	       791	dwarf.c	FUNCTION_15
0x400053f	            0x31ff	                            xor edi, edi	       788	dwarf.c	FUNCTION_15	CALL_15
0x4000541	              0x5b	                                 pop rbx	       791	dwarf.c	FUNCTION_15
0x4000542	              0x5d	                                 pop rbp	       791	dwarf.c	FUNCTION_15
0x4000543	      0xe900000000	                           jmp 0x4000548	       788	dwarf.c	FUNCTION_15	CALL_15
0x4000548	     0xf1f84000000	                   nop dword [rax + rax]	       788	dwarf.c	FUNCTION_15	CALL_15
0x4000550	      0xba05000000	                              mov edx, 5	       757	dwarf.c	FUNCTION_15	IF_1	CALL_1
0x4000555	      0xbe00000000	                              mov esi, 0	       757	dwarf.c	FUNCTION_15	IF_1	CALL_1
0x400055a	            0xebdf	                           jmp 0x400053b	       757	dwarf.c	FUNCTION_15	IF_1	CALL_1
0x400055c	         0xf1f4000	                         nop dword [rax]	       757	dwarf.c	FUNCTION_15	IF_1	CALL_1
0x4000560	      0xba05000000	                              mov edx, 5	       757	dwarf.c	FUNCTION_15	IF_1	CALL_1
0x4000565	      0xbe00000000	                              mov esi, 0	       757	dwarf.c	FUNCTION_15	IF_1	CALL_1
0x400056a	            0xebcf	                           jmp 0x400053b	       757	dwarf.c	FUNCTION_15	IF_1	CALL_1
0x400056c	         0xf1f4000	                         nop dword [rax]	       757	dwarf.c	FUNCTION_15	IF_1	CALL_1
0x4000570	          0x4889fe	                            mov rsi, rdi	       246	dwarf.c	FUNCTION_4	CALL_1
0x4000573	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x4000575	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400057a	      0xe881fdffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400057f	      0xba05000000	                              mov edx, 5	       764	dwarf.c	FUNCTION_15	IF_3	CALL_4
0x4000584	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x4000587	      0xbe00000000	                              mov esi, 0	       764	dwarf.c	FUNCTION_15	IF_3	CALL_4
0x400058c	            0x31ff	                            xor edi, edi	       764	dwarf.c	FUNCTION_15	IF_3	CALL_4
0x400058e	      0xe800000000	                          call 0x4000593	       764	dwarf.c	FUNCTION_15	IF_3	CALL_4
0x4000593	          0x4889de	                            mov rsi, rbx	       764	dwarf.c	FUNCTION_15	IF_3	CALL_4
0x4000596	          0x4889c7	                            mov rdi, rax	       764	dwarf.c	FUNCTION_15	IF_3	CALL_4
0x4000599	            0x31c0	                            xor eax, eax	       764	dwarf.c	FUNCTION_15	IF_3	CALL_4
0x400059b	      0xe800000000	                          call 0x40005a0	       764	dwarf.c	FUNCTION_15	IF_3	CALL_4
0x40005a0	        0x4883c408	                              add rsp, 8	       791	dwarf.c	FUNCTION_15
0x40005a4	      0xba05000000	                              mov edx, 5	       766	dwarf.c	FUNCTION_15	IF_3	CALL_6
0x40005a9	      0xbe00000000	                              mov esi, 0	       766	dwarf.c	FUNCTION_15	IF_3	CALL_6
0x40005ae	              0x5b	                                 pop rbx	       791	dwarf.c	FUNCTION_15
0x40005af	              0x5d	                                 pop rbp	       791	dwarf.c	FUNCTION_15
0x40005b0	            0x31ff	                            xor edi, edi	       788	dwarf.c	FUNCTION_15	CALL_15
0x40005b2	      0xe900000000	                           jmp 0x40005b7	       788	dwarf.c	FUNCTION_15	CALL_15
0x40005b7	    0x660f1f840000	                    nop word [rax + rax]	       788	dwarf.c	FUNCTION_15	CALL_15
0x40005c0	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x40005c2	          0x4889c6	                            mov rsi, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x40005c5	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x40005ca	      0xe831fdffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x40005cf	      0xba05000000	                              mov edx, 5	       777	dwarf.c	FUNCTION_15	IF_5	CALL_11
0x40005d4	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x40005d7	      0xbe00000000	                              mov esi, 0	       777	dwarf.c	FUNCTION_15	IF_5	CALL_11
0x40005dc	            0x31ff	                            xor edi, edi	       777	dwarf.c	FUNCTION_15	IF_5	CALL_11
0x40005de	      0xe800000000	                          call 0x40005e3	       777	dwarf.c	FUNCTION_15	IF_5	CALL_11
0x40005e3	          0x4889de	                            mov rsi, rbx	       777	dwarf.c	FUNCTION_15	IF_5	CALL_11
0x40005e6	          0x4889c7	                            mov rdi, rax	       777	dwarf.c	FUNCTION_15	IF_5	CALL_11
0x40005e9	            0x31c0	                            xor eax, eax	       777	dwarf.c	FUNCTION_15	IF_5	CALL_11
0x40005eb	      0xe800000000	                          call 0x40005f0	       777	dwarf.c	FUNCTION_15	IF_5	CALL_11
0x40005f0	      0xba05000000	                              mov edx, 5	       779	dwarf.c	FUNCTION_15	IF_5	CALL_13
0x40005f5	      0xbe00000000	                              mov esi, 0	       779	dwarf.c	FUNCTION_15	IF_5	CALL_13
0x40005fa	      0xe93cffffff	                           jmp 0x400053b	       779	dwarf.c	FUNCTION_15	IF_5	CALL_13
0x40005ff	              0x90	                                     nop	       779	dwarf.c	FUNCTION_15	IF_5	CALL_13
0x4000600	      0xba05000000	                              mov edx, 5	       788	dwarf.c	FUNCTION_15	CALL_15
0x4000605	      0xbe00000000	                              mov esi, 0	       788	dwarf.c	FUNCTION_15	CALL_15
0x400060a	      0xe92cffffff	                           jmp 0x400053b	       788	dwarf.c	FUNCTION_15	CALL_15
display_cu_index	ELSE,0:FOR,0:CALL,1:WHILE,0:DO,0:functions,0:SWITCH,0:IF,0	2
0x40040c0	      0xbe01000000	                              mov esi, 1	      9472	dwarf.c	FUNCTION_94	CALL_1
0x40040c5	      0xe9e6eeffff	             jmp sym.process_cu_tu_index	      9472	dwarf.c	FUNCTION_94	CALL_1
frame_need_space	ELSE,0:FOR,0:CALL,6:WHILE,1:DO,0:functions,0:SWITCH,0:IF,5	66
0x4002020	            0x4154	                                push r12	      6910	dwarf.c	FUNCTION_70
0x4002022	              0x55	                                push rbp	      6910	dwarf.c	FUNCTION_70
0x4002023	            0x31c0	                            xor eax, eax	      6914	dwarf.c	FUNCTION_70	IF_1
0x4002025	              0x53	                                push rbx	      6910	dwarf.c	FUNCTION_70
0x4002026	          0x8b5f10	            mov ebx, dword [rdi + 0x10] 	      6911	dwarf.c	FUNCTION_70
0x4002029	            0x39f3	                            cmp ebx, esi	      6913	dwarf.c	FUNCTION_70	IF_1
0x400202b	     0xf8786000000	                            ja 0x40020b7	      6913	dwarf.c	FUNCTION_70	IF_1
0x4002031	    0x8b0500000000	            mov eax, dword [0x04002037] 	      6916	dwarf.c	FUNCTION_70	IF_2
0x4002037	            0x85c0	                           test eax, eax	      6917	dwarf.c	FUNCTION_70	IF_2
0x4002039	            0x7408	                            je 0x4002043	      6917	dwarf.c	FUNCTION_70	IF_2
0x400203b	            0x39c6	                            cmp esi, eax	      6917	dwarf.c	FUNCTION_70	IF_2
0x400203d	     0xf879e000000	                            ja 0x40020e1	      6917	dwarf.c	FUNCTION_70	IF_2
0x4002043	          0x8d4601	                      lea eax, [rsi + 1]	      6920	dwarf.c	FUNCTION_70
0x4002046	            0x85c0	                           test eax, eax	      6923	dwarf.c	FUNCTION_70	IF_3
0x4002048	          0x894710	             mov dword [rdi + 0x10], eax	      6920	dwarf.c	FUNCTION_70
0x400204b	     0xf8490000000	                            je 0x40020e1	      6923	dwarf.c	FUNCTION_70	IF_3
0x4002051	      0x3d00040000	                          cmp eax, 0x400	      6927	dwarf.c	FUNCTION_70	IF_4
0x4002056	          0x4189f4	                           mov r12d, esi	      6927	dwarf.c	FUNCTION_70	IF_4
0x4002059	          0x4889fd	                            mov rbp, rdi	      6927	dwarf.c	FUNCTION_70	IF_4
0x400205c	            0x775e	                            ja 0x40020bc	      6927	dwarf.c	FUNCTION_70	IF_4
0x400205e	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	      9533	dwarf.c	FUNCTION_98	CALL_4
0x4002062	            0x89c6	                            mov esi, eax	      9533	dwarf.c	FUNCTION_98	CALL_4
0x4002064	          0x4801f6	                            add rsi, rsi	      9533	dwarf.c	FUNCTION_98	CALL_4
0x4002067	      0xe800000000	                          call 0x400206c	      9533	dwarf.c	FUNCTION_98	CALL_4
0x400206c	          0x8b7510	            mov esi, dword [rbp + 0x10] 	      9533	dwarf.c	FUNCTION_98	CALL_4
0x400206f	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	      9533	dwarf.c	FUNCTION_98	CALL_4
0x4002073	        0x48894518	            mov qword [rbp + 0x18], rax 	      6936	dwarf.c	FUNCTION_70	CALL_3
0x4002077	        0x48c1e602	                              shl rsi, 2	      9533	dwarf.c	FUNCTION_98	CALL_4
0x400207b	      0xe800000000	                          call 0x4002080	      9533	dwarf.c	FUNCTION_98	CALL_4
0x4002080	        0x488b4d18	            mov rcx, qword [rbp + 0x18] 	      6940	dwarf.c	FUNCTION_70	IF_5
0x4002084	        0x48894520	            mov qword [rbp + 0x20], rax 	      6938	dwarf.c	FUNCTION_70	CALL_4
0x4002088	          0x4885c9	                           test rcx, rcx	      6940	dwarf.c	FUNCTION_70	IF_5
0x400208b	            0x745b	                            je 0x40020e8	      6940	dwarf.c	FUNCTION_70	IF_5
0x400208d	          0x3b5d10	            cmp ebx, dword [rbp + 0x10] 	      6948	dwarf.c	FUNCTION_70	WHILE_1
0x4002090	            0x7320	                           jae 0x40020b2	      6948	dwarf.c	FUNCTION_70	WHILE_1
0x4002092	    0x660f1f440000	                    nop word [rax + rax]	      6948	dwarf.c	FUNCTION_70	WHILE_1
0x4002098	            0x89da	                            mov edx, ebx	      6950	dwarf.c	FUNCTION_70	WHILE_1
0x400209a	      0xbeffffffff	                     mov esi, 0xffffffff	      6950	dwarf.c	FUNCTION_70	WHILE_1
0x400209f	          0x83c301	                              add ebx, 1	      6952	dwarf.c	FUNCTION_70	WHILE_1
0x40020a2	        0x66893451	              mov word [rcx + rdx*2], si	      6950	dwarf.c	FUNCTION_70	WHILE_1
0x40020a6	    0xc70490000000	              mov dword [rax + rdx*4], 0	      6951	dwarf.c	FUNCTION_70	WHILE_1
0x40020ad	          0x395d10	            cmp dword [rbp + 0x10], ebx 	      6948	dwarf.c	FUNCTION_70	WHILE_1
0x40020b0	            0x77e6	                            ja 0x4002098	      6948	dwarf.c	FUNCTION_70	WHILE_1
0x40020b2	      0xb801000000	                              mov eax, 1	      6954	dwarf.c	FUNCTION_70
0x40020b7	              0x5b	                                 pop rbx	      6955	dwarf.c	FUNCTION_70
0x40020b8	              0x5d	                                 pop rbp	      6955	dwarf.c	FUNCTION_70
0x40020b9	            0x415c	                                 pop r12	      6955	dwarf.c	FUNCTION_70
0x40020bb	              0xc3	                                     ret	      6955	dwarf.c	FUNCTION_70
0x40020bc	      0xbe00000000	                              mov esi, 0	      6929	dwarf.c	FUNCTION_70	IF_4	CALL_2
0x40020c1	      0xba05000000	                              mov edx, 5	      6929	dwarf.c	FUNCTION_70	IF_4	CALL_2
0x40020c6	            0x31ff	                            xor edi, edi	      6929	dwarf.c	FUNCTION_70	IF_4	CALL_2
0x40020c8	      0xe800000000	                          call 0x40020cd	      6929	dwarf.c	FUNCTION_70	IF_4	CALL_2
0x40020cd	          0x4489e6	                           mov esi, r12d	      6929	dwarf.c	FUNCTION_70	IF_4	CALL_2
0x40020d0	          0x4889c7	                            mov rdi, rax	      6942	dwarf.c	FUNCTION_70	IF_5	CALL_6
0x40020d3	            0x31c0	                            xor eax, eax	      6942	dwarf.c	FUNCTION_70	IF_5	CALL_6
0x40020d5	      0xe800000000	                          call 0x40020da	      6942	dwarf.c	FUNCTION_70	IF_5	CALL_6
0x40020da	    0xc74510000000	               mov dword [rbp + 0x10], 0	      6944	dwarf.c	FUNCTION_70	IF_5
0x40020e1	      0xb8ffffffff	                     mov eax, 0xffffffff	      6945	dwarf.c	FUNCTION_70	IF_5
0x40020e6	            0xebcf	                           jmp 0x40020b7	      6945	dwarf.c	FUNCTION_70	IF_5
0x40020e8	          0x8b5d10	            mov ebx, dword [rbp + 0x10] 	      6942	dwarf.c	FUNCTION_70	IF_5	CALL_6
0x40020eb	      0xbe00000000	                              mov esi, 0	      6942	dwarf.c	FUNCTION_70	IF_5	CALL_6
0x40020f0	      0xba05000000	                              mov edx, 5	      6942	dwarf.c	FUNCTION_70	IF_5	CALL_6
0x40020f5	            0x31ff	                            xor edi, edi	      6942	dwarf.c	FUNCTION_70	IF_5	CALL_6
0x40020f7	      0xe800000000	                          call 0x40020fc	      6942	dwarf.c	FUNCTION_70	IF_5	CALL_6
0x40020fc	            0x89de	                            mov esi, ebx	      6942	dwarf.c	FUNCTION_70	IF_5	CALL_6
0x40020fe	            0xebd0	                           jmp 0x40020d0	      6942	dwarf.c	FUNCTION_70	IF_5	CALL_6
load_separate_debug_file	ELSE,1:FOR,0:CALL,16:WHILE,0:DO,0:functions,0:SWITCH,0:IF,10	197
0x4017d40	            0x4154	                                push r12	      9923	dwarf.c	FUNCTION_107
0x4017d42	              0x55	                                push rbp	      9923	dwarf.c	FUNCTION_107
0x4017d43	          0x4889f5	                            mov rbp, rsi	      9923	dwarf.c	FUNCTION_107
0x4017d46	              0x53	                                push rbx	      9923	dwarf.c	FUNCTION_107
0x4017d47	          0x4889fb	                            mov rbx, rdi	      9923	dwarf.c	FUNCTION_107
0x4017d4a	        0x4883ec10	                           sub rsp, 0x10	      9923	dwarf.c	FUNCTION_107
0x4017d4e	    0x8b3d00000000	            mov edi, dword [0x04017d54] 	      9925	dwarf.c	FUNCTION_107	IF_1
0x4017d54	    0x64488b042528	                mov rax, qword fs:[0x28]	      9923	dwarf.c	FUNCTION_107
0x4017d5d	      0x4889442408	                mov qword [rsp + 8], rax	      9923	dwarf.c	FUNCTION_107
0x4017d62	            0x31c0	                            xor eax, eax	      9923	dwarf.c	FUNCTION_107
0x4017d64	            0x85ff	                           test edi, edi	      9925	dwarf.c	FUNCTION_107	IF_1
0x4017d66	            0x750e	                           jne 0x4017d76	      9925	dwarf.c	FUNCTION_107	IF_1
0x4017d68	    0x8b3500000000	            mov esi, dword [0x04017d6e] 	      9925	dwarf.c	FUNCTION_107	IF_1
0x4017d6e	            0x85f6	                           test esi, esi	      9925	dwarf.c	FUNCTION_107	IF_1
0x4017d70	     0xf84b4000000	                            je 0x4017e2a	      9925	dwarf.c	FUNCTION_107	IF_1
0x4017d76	          0x4889de	                            mov rsi, rbx	      9929	dwarf.c	FUNCTION_107	IF_2	CALL_1
0x4017d79	      0xbf0a000000	                            mov edi, 0xa	      9929	dwarf.c	FUNCTION_107	IF_2	CALL_1
0x4017d7e	      0xe800000000	                          call 0x4017d83	      9929	dwarf.c	FUNCTION_107	IF_2	CALL_1
0x4017d83	            0x85c0	                           test eax, eax	      9929	dwarf.c	FUNCTION_107	IF_2	CALL_1
0x4017d85	     0xf85a5000000	                           jne 0x4017e30	      9929	dwarf.c	FUNCTION_107	IF_2	CALL_1
0x4017d8b	    0x8b1500000000	            mov edx, dword [0x04017d91] 	      9961	dwarf.c	FUNCTION_107	IF_8
0x4017d91	            0x85d2	                           test edx, edx	      9961	dwarf.c	FUNCTION_107	IF_8
0x4017d93	     0xf8491000000	                            je 0x4017e2a	      9961	dwarf.c	FUNCTION_107	IF_8
0x4017d99	          0x4889de	                            mov rsi, rbx	      9971	dwarf.c	FUNCTION_107	IF_9	CALL_13
0x4017d9c	      0xbf29000000	                           mov edi, 0x29	      9971	dwarf.c	FUNCTION_107	IF_9	CALL_13
0x4017da1	      0xe800000000	                          call 0x4017da6	      9971	dwarf.c	FUNCTION_107	IF_9	CALL_13
0x4017da6	            0x85c0	                           test eax, eax	      9971	dwarf.c	FUNCTION_107	IF_9	CALL_13
0x4017da8	            0x7556	                           jne 0x4017e00	      9971	dwarf.c	FUNCTION_107	IF_9	CALL_13
0x4017daa	          0x4889de	                            mov rsi, rbx	      9982	dwarf.c	FUNCTION_107	IF_10	CALL_15
0x4017dad	      0xbf28000000	                           mov edi, 0x28	      9982	dwarf.c	FUNCTION_107	IF_10	CALL_15
0x4017db2	      0xe800000000	                          call 0x4017db7	      9982	dwarf.c	FUNCTION_107	IF_10	CALL_15
0x4017db7	            0x85c0	                           test eax, eax	      9982	dwarf.c	FUNCTION_107	IF_10	CALL_15
0x4017db9	            0x7465	                            je 0x4017e20	      9982	dwarf.c	FUNCTION_107	IF_10	CALL_15
0x4017dbb	          0x4989e0	                             mov r8, rsp	      9986	dwarf.c	FUNCTION_107	IF_10	CALL_16
0x4017dbe	      0xb900000000	                              mov ecx, 0	      9986	dwarf.c	FUNCTION_107	IF_10	CALL_16
0x4017dc3	      0xba00000000	                              mov edx, 0	      9986	dwarf.c	FUNCTION_107	IF_10	CALL_16
0x4017dc8	      0xbe00000000	                              mov esi, 0	      9986	dwarf.c	FUNCTION_107	IF_10	CALL_16
0x4017dcd	          0x4889ef	                            mov rdi, rbp	      9986	dwarf.c	FUNCTION_107	IF_10	CALL_16
0x4017dd0	      0xe89b88feff	       call sym.load_separate_debug_info	      9986	dwarf.c	FUNCTION_107	IF_10	CALL_16
0x4017dd5	          0x4889c3	                            mov rbx, rax	      9986	dwarf.c	FUNCTION_107	IF_10	CALL_16
0x4017dd8	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      9995	dwarf.c	FUNCTION_107
0x4017ddd	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9995	dwarf.c	FUNCTION_107
0x4017de6	          0x4889d8	                            mov rax, rbx	      9995	dwarf.c	FUNCTION_107
0x4017de9	     0xf8527020000	                           jne 0x4018016	      9995	dwarf.c	FUNCTION_107
0x4017def	        0x4883c410	                           add rsp, 0x10	      9995	dwarf.c	FUNCTION_107
0x4017df3	              0x5b	                                 pop rbx	      9995	dwarf.c	FUNCTION_107
0x4017df4	              0x5d	                                 pop rbp	      9995	dwarf.c	FUNCTION_107
0x4017df5	            0x415c	                                 pop r12	      9995	dwarf.c	FUNCTION_107
0x4017df7	              0xc3	                                     ret	      9995	dwarf.c	FUNCTION_107
0x4017df8	     0xf1f84000000	                   nop dword [rax + rax]	      9995	dwarf.c	FUNCTION_107
0x4017e00	          0x4989e0	                             mov r8, rsp	      9975	dwarf.c	FUNCTION_107	IF_9	CALL_14
0x4017e03	      0xb900000000	                              mov ecx, 0	      9975	dwarf.c	FUNCTION_107	IF_9	CALL_14
0x4017e08	      0xba00000000	                              mov edx, 0	      9975	dwarf.c	FUNCTION_107	IF_9	CALL_14
0x4017e0d	      0xbe00000000	                              mov esi, 0	      9975	dwarf.c	FUNCTION_107	IF_9	CALL_14
0x4017e12	          0x4889ef	                            mov rdi, rbp	      9975	dwarf.c	FUNCTION_107	IF_9	CALL_14
0x4017e15	      0xe85688feff	       call sym.load_separate_debug_info	      9975	dwarf.c	FUNCTION_107	IF_9	CALL_14
0x4017e1a	          0x4889c3	                            mov rbx, rax	      9975	dwarf.c	FUNCTION_107	IF_9	CALL_14
0x4017e1d	            0xebb9	                           jmp 0x4017dd8	      9975	dwarf.c	FUNCTION_107	IF_9	CALL_14
0x4017e1f	              0x90	                                     nop	      9975	dwarf.c	FUNCTION_107	IF_9	CALL_14
0x4017e20	    0xc70500000000	               mov dword [0x04017e2a], 0	      9993	dwarf.c	FUNCTION_107
0x4017e2a	            0x31db	                            xor ebx, ebx	      9994	dwarf.c	FUNCTION_107
0x4017e2c	            0xebaa	                           jmp 0x4017dd8	      9994	dwarf.c	FUNCTION_107
0x4017e2e	            0x6690	                                     nop	      9994	dwarf.c	FUNCTION_107
0x4017e30	            0x31ff	                            xor edi, edi	      9930	dwarf.c	FUNCTION_107	IF_2	CALL_2
0x4017e32	          0x4889de	                            mov rsi, rbx	      9930	dwarf.c	FUNCTION_107	IF_2	CALL_2
0x4017e35	      0xe800000000	                          call 0x4017e3a	      9930	dwarf.c	FUNCTION_107	IF_2	CALL_2
0x4017e3a	            0x85c0	                           test eax, eax	      9930	dwarf.c	FUNCTION_107	IF_2	CALL_2
0x4017e3c	     0xf8449ffffff	                            je 0x4017d8b	      9930	dwarf.c	FUNCTION_107	IF_2	CALL_2
0x4017e42	          0x4889de	                            mov rsi, rbx	      9931	dwarf.c	FUNCTION_107	IF_2	CALL_3
0x4017e45	      0xbf03000000	                              mov edi, 3	      9931	dwarf.c	FUNCTION_107	IF_2	CALL_3
0x4017e4a	      0xe800000000	                          call 0x4017e4f	      9931	dwarf.c	FUNCTION_107	IF_2	CALL_3
0x4017e4f	            0x85c0	                           test eax, eax	      9931	dwarf.c	FUNCTION_107	IF_2	CALL_3
0x4017e51	     0xf8434ffffff	                            je 0x4017d8b	      9931	dwarf.c	FUNCTION_107	IF_2	CALL_3
0x4017e57	          0x4531c0	                            xor r8d, r8d	      9937	dwarf.c	FUNCTION_107	IF_2	IF_3	CALL_4
0x4017e5a	            0x31d2	                            xor edx, edx	      9937	dwarf.c	FUNCTION_107	IF_2	IF_3	CALL_4
0x4017e5c	      0xb901000000	                              mov ecx, 1	      9937	dwarf.c	FUNCTION_107	IF_2	IF_3	CALL_4
0x4017e61	          0x4889de	                            mov rsi, rbx	      9937	dwarf.c	FUNCTION_107	IF_2	IF_3	CALL_4
0x4017e64	      0xbf00000000	                              mov edi, 0	      9937	dwarf.c	FUNCTION_107	IF_2	IF_3	CALL_4
0x4017e69	    0x48c705000000	               mov qword [0x04017e74], 0	      9933	dwarf.c	FUNCTION_107	IF_2
0x4017e74	    0x48c705000000	               mov qword [0x04017e7f], 0	      9933	dwarf.c	FUNCTION_107	IF_2
0x4017e7f	    0x48c705000000	               mov qword [0x04017e8a], 0	      9934	dwarf.c	FUNCTION_107	IF_2
0x4017e8a	    0x48c705000000	               mov qword [0x04017e95], 0	      9935	dwarf.c	FUNCTION_107	IF_2
0x4017e95	      0xe84629ffff	             call sym.process_debug_info	      9937	dwarf.c	FUNCTION_107	IF_2	IF_3	CALL_4
0x4017e9a	            0x85c0	                           test eax, eax	      9937	dwarf.c	FUNCTION_107	IF_2	IF_3	CALL_4
0x4017e9c	     0xf84e9feffff	                            je 0x4017d8b	      9937	dwarf.c	FUNCTION_107	IF_2	IF_3	CALL_4
0x4017ea2	    0x48833d000000	               cmp qword [0x04017eaa], 0	      9939	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4
0x4017eaa	     0xf84dbfeffff	                            je 0x4017d8b	      9939	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4
0x4017eb0	    0x8b0d00000000	            mov ecx, dword [0x04017eb6] 	      9941	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5
0x4017eb6	            0x85c9	                           test ecx, ecx	      9941	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5
0x4017eb8	     0xf8581000000	                           jne 0x4017f3f	      9941	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5
0x4017ebe	    0x8b0500000000	            mov eax, dword [0x04017ec4] 	      9955	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_7
0x4017ec4	            0x85c0	                           test eax, eax	      9955	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_7
0x4017ec6	     0xf845effffff	                            je 0x4017e2a	      9955	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_7
0x4017ecc	    0x488b15000000	            mov rdx, qword [0x04017ed3] 	      9895	dwarf.c	FUNCTION_106	CALL_1
0x4017ed3	    0x488b3d000000	            mov rdi, qword [0x04017eda] 	      9895	dwarf.c	FUNCTION_106	CALL_1
0x4017eda	            0x31c9	                            xor ecx, ecx	      9895	dwarf.c	FUNCTION_106	CALL_1
0x4017edc	      0xbe00000000	                              mov esi, 0	      9895	dwarf.c	FUNCTION_106	CALL_1
0x4017ee1	            0x31c0	                            xor eax, eax	      9895	dwarf.c	FUNCTION_106	CALL_1
0x4017ee3	      0xe800000000	                          call 0x4017ee8	      9895	dwarf.c	FUNCTION_106	CALL_1
0x4017ee8	          0x4889c7	                            mov rdi, rax	      9902	dwarf.c	FUNCTION_106	IF_2	CALL_4
0x4017eeb	          0x4989c4	                            mov r12, rax	      9895	dwarf.c	FUNCTION_106	CALL_1
0x4017eee	      0xe800000000	                          call 0x4017ef3	      9902	dwarf.c	FUNCTION_106	IF_2	CALL_4
0x4017ef3	          0x4885c0	                           test rax, rax	      9902	dwarf.c	FUNCTION_106	IF_2	CALL_4
0x4017ef6	          0x4889c3	                            mov rbx, rax	      9902	dwarf.c	FUNCTION_106	IF_2	CALL_4
0x4017ef9	    0x488905000000	            mov qword [0x04017f00], rax 	      9902	dwarf.c	FUNCTION_106	IF_2	CALL_4
0x4017f00	     0xf8450010000	                            je 0x4018056	      9902	dwarf.c	FUNCTION_106	IF_2	CALL_4
0x4017f06	      0xba05000000	                              mov edx, 5	      9911	dwarf.c	FUNCTION_106	CALL_8
0x4017f0b	      0xbe00000000	                              mov esi, 0	      9911	dwarf.c	FUNCTION_106	CALL_8
0x4017f10	            0x31ff	                            xor edi, edi	      9911	dwarf.c	FUNCTION_106	CALL_8
0x4017f12	      0xe800000000	                          call 0x4017f17	      9911	dwarf.c	FUNCTION_106	CALL_8
0x4017f17	          0x4c89e1	                            mov rcx, r12	       104	stdio2.h	CALL_16
0x4017f1a	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4017f1d	          0x4889ea	                            mov rdx, rbp	       104	stdio2.h	CALL_16
0x4017f20	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4017f25	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4017f27	      0xe800000000	                          call 0x4017f2c	       104	stdio2.h	CALL_16
0x4017f2c	    0x4c8925000000	            mov qword [0x04017f33], r12 	      9912	dwarf.c	FUNCTION_106
0x4017f33	    0x488b1d000000	            mov rbx, qword [0x04017f3a] 	      9913	dwarf.c	FUNCTION_106
0x4017f3a	      0xe999feffff	                           jmp 0x4017dd8	      9913	dwarf.c	FUNCTION_106
0x4017f3f	    0x488b1d000000	            mov rbx, qword [0x04017f46] 	      9943	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_5
0x4017f46	            0x31ff	                            xor edi, edi	      9943	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_5
0x4017f48	      0xba05000000	                              mov edx, 5	      9943	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_5
0x4017f4d	      0xbe00000000	                              mov esi, 0	      9943	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_5
0x4017f52	      0xe800000000	                          call 0x4017f57	      9943	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_5
0x4017f57	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_16
0x4017f5a	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4017f5d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4017f62	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4017f64	      0xe800000000	                          call 0x4017f69	       104	stdio2.h	CALL_16
0x4017f69	    0x488b1d000000	            mov rbx, qword [0x04017f70] 	      9945	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_6
0x4017f70	            0x31ff	                            xor edi, edi	      9945	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_6
0x4017f72	      0xba05000000	                              mov edx, 5	      9945	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_6
0x4017f77	      0xbe00000000	                              mov esi, 0	      9945	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_6
0x4017f7c	      0xe800000000	                          call 0x4017f81	      9945	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_6
0x4017f81	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_16
0x4017f84	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4017f87	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4017f8c	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4017f8e	      0xe800000000	                          call 0x4017f93	       104	stdio2.h	CALL_16
0x4017f93	    0x488b1d000000	            mov rbx, qword [0x04017f9a] 	      9946	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_8
0x4017f9a	          0x4885db	                           test rbx, rbx	      9946	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_8
0x4017f9d	     0xf849a000000	                            je 0x401803d	      9946	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_8
0x4017fa3	            0x31ff	                            xor edi, edi	      9946	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_8
0x4017fa5	      0xba05000000	                              mov edx, 5	      9946	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_8
0x4017faa	      0xbe00000000	                              mov esi, 0	      9946	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_8
0x4017faf	      0xe800000000	                          call 0x4017fb4	      9946	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_8
0x4017fb4	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_16
0x4017fb7	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4017fba	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4017fbf	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4017fc1	      0xe800000000	                          call 0x4017fc6	       104	stdio2.h	CALL_16
0x4017fc6	    0x488b1d000000	            mov rbx, qword [0x04017fcd] 	      9947	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	IF_6
0x4017fcd	          0x4885db	                           test rbx, rbx	      9947	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	IF_6
0x4017fd0	            0x7449	                            je 0x401801b	      9947	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	IF_6
0x4017fd2	    0x4c8b25000000	            mov r12, qword [0x04017fd9] 	      9948	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_10
0x4017fd9	      0xba05000000	                              mov edx, 5	      9948	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_10
0x4017fde	      0xbe00000000	                              mov esi, 0	      9948	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_10
0x4017fe3	            0x31ff	                            xor edi, edi	      9948	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_10
0x4017fe5	      0xe800000000	                          call 0x4017fea	      9948	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_10
0x4017fea	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4017fef	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4017ff2	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4017ff4	      0xe800000000	                          call 0x4017ff9	       104	stdio2.h	CALL_16
0x4017ff9	          0x4c89e2	                            mov rdx, r12	      9948	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_10
0x4017ffc	          0x4863f8	                         movsxd rdi, eax	      9948	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_10
0x4017fff	          0x4889de	                            mov rsi, rbx	      9948	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_10
0x4018002	      0xe8c997feff	                   call sym.display_data	      9948	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_10
0x4018007	      0xbf00000000	                              mov edi, 0	       104	stdio2.h	CALL_16
0x401800c	      0xe800000000	                          call 0x4018011	       104	stdio2.h	CALL_16
0x4018011	      0xe9a8feffff	                           jmp 0x4017ebe	       104	stdio2.h	CALL_16
0x4018016	      0xe800000000	                          call 0x401801b	      9995	dwarf.c	FUNCTION_107
0x401801b	            0x31ff	                            xor edi, edi	      9950	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_11
0x401801d	      0xba05000000	                              mov edx, 5	      9950	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_11
0x4018022	      0xbe00000000	                              mov esi, 0	      9950	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_11
0x4018027	      0xe800000000	                          call 0x401802c	      9950	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_11
0x401802c	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4018031	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4018034	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4018036	      0xe800000000	                          call 0x401803b	       104	stdio2.h	CALL_16
0x401803b	            0xebca	                           jmp 0x4018007	       104	stdio2.h	CALL_16
0x401803d	      0xba05000000	                              mov edx, 5	      9946	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_8
0x4018042	      0xbe00000000	                              mov esi, 0	      9946	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_8
0x4018047	            0x31ff	                            xor edi, edi	      9946	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_8
0x4018049	      0xe800000000	                          call 0x401804e	      9946	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_8
0x401804e	          0x4889c3	                            mov rbx, rax	      9946	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_8
0x4018051	      0xe94dffffff	                           jmp 0x4017fa3	      9946	dwarf.c	FUNCTION_107	IF_2	IF_3	IF_4	IF_5	CALL_8
0x4018056	      0xba05000000	                              mov edx, 5	      9904	dwarf.c	FUNCTION_106	IF_2	CALL_6
0x401805b	            0x31ff	                            xor edi, edi	      9904	dwarf.c	FUNCTION_106	IF_2	CALL_6
0x401805d	      0xbe00000000	                              mov esi, 0	      9904	dwarf.c	FUNCTION_106	IF_2	CALL_6
0x4018062	      0xe800000000	                          call 0x4018067	      9904	dwarf.c	FUNCTION_106	IF_2	CALL_6
0x4018067	          0x4c89e6	                            mov rsi, r12	      9904	dwarf.c	FUNCTION_106	IF_2	CALL_6
0x401806a	          0x4889c7	                            mov rdi, rax	      9904	dwarf.c	FUNCTION_106	IF_2	CALL_6
0x401806d	            0x31c0	                            xor eax, eax	      9904	dwarf.c	FUNCTION_106	IF_2	CALL_6
0x401806f	      0xe800000000	                          call 0x4018074	      9904	dwarf.c	FUNCTION_106	IF_2	CALL_6
0x4018074	          0x4c89e7	                            mov rdi, r12	      9905	dwarf.c	FUNCTION_106	IF_2	CALL_7
0x4018077	      0xe800000000	                          call 0x401807c	      9905	dwarf.c	FUNCTION_106	IF_2	CALL_7
0x401807c	      0xe957fdffff	                           jmp 0x4017dd8	      9905	dwarf.c	FUNCTION_106	IF_2	CALL_7
free_debug_memory	ELSE,0:FOR,2:CALL,8:WHILE,0:DO,0:functions,0:SWITCH,0:IF,5	62
0x4018090	            0x4154	                                push r12	      9999	dwarf.c	FUNCTION_108
0x4018092	              0x55	                                push rbp	      9999	dwarf.c	FUNCTION_108
0x4018093	              0x53	                                push rbx	      9999	dwarf.c	FUNCTION_108
0x4018094	            0x31db	                            xor ebx, ebx	     10004	dwarf.c	FUNCTION_108	FOR_1
0x4018096	      0xe87585feff	                   call sym.free_abbrevs	     10002	dwarf.c	FUNCTION_108	CALL_1
0x401809b	       0xf1f440000	                   nop dword [rax + rax]	     10002	dwarf.c	FUNCTION_108	CALL_1
0x40180a0	            0x89df	                            mov edi, ebx	     10005	dwarf.c	FUNCTION_108	CALL_2
0x40180a2	          0x83c301	                              add ebx, 1	     10004	dwarf.c	FUNCTION_108	FOR_1
0x40180a5	      0xe800000000	                          call 0x40180aa	     10005	dwarf.c	FUNCTION_108	CALL_2
0x40180aa	          0x83fb2b	                           cmp ebx, 0x2b	     10004	dwarf.c	FUNCTION_108	FOR_1
0x40180ad	            0x75f1	                           jne 0x40180a0	     10004	dwarf.c	FUNCTION_108	FOR_1
0x40180af	    0x4c8b25000000	            mov r12, qword [0x040180b6] 	     10007	dwarf.c	FUNCTION_108	IF_1
0x40180b6	          0x4d85e4	                           test r12, r12	     10007	dwarf.c	FUNCTION_108	IF_1
0x40180b9	     0xf8491000000	                            je 0x4018150	     10007	dwarf.c	FUNCTION_108	IF_1
0x40180bf	    0x8b0500000000	            mov eax, dword [0x040180c5] 	     10011	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2
0x40180c5	          0x83e801	                              sub eax, 1	     10011	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2
0x40180c8	          0x83f8fd	             cmp eax, 0xfffffffffffffffd	     10011	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2
0x40180cb	            0x775c	                            ja 0x4018129	     10011	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2
0x40180cd	        0x488d1440	                  lea rdx, [rax + rax*2]	     10011	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2
0x40180d1	      0x498d5c244c	                   lea rbx, [r12 + 0x4c]	     10011	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2
0x40180d6	        0x488d0490	                  lea rax, [rax + rdx*4]	     10011	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2
0x40180da	    0x498dacc4b400	          lea rbp, [r12 + rax*8 + 0xb4] 	     10011	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2
0x40180e2	            0xeb14	                           jmp 0x40180f8	     10011	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2
0x40180e4	         0xf1f4000	                         nop dword [rax]	     10011	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2
0x40180e8	          0x8b4318	            mov eax, dword [rbx + 0x18] 	     10018	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2	IF_4
0x40180eb	            0x85c0	                           test eax, eax	     10018	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2	IF_4
0x40180ed	            0x7428	                            je 0x4018117	     10018	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2	IF_4
0x40180ef	        0x4883c368	                           add rbx, 0x68	     10018	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2	IF_4
0x40180f3	          0x4839eb	                            cmp rbx, rbp	     10011	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2
0x40180f6	            0x7431	                            je 0x4018129	     10011	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2
0x40180f8	            0x8b13	                    mov edx, dword [rbx]	     10013	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2	IF_3
0x40180fa	            0x85d2	                           test edx, edx	     10013	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2	IF_3
0x40180fc	            0x75ea	                           jne 0x40180e8	     10013	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2	IF_3
0x40180fe	        0x488b7be4	             mov rdi, qword [rbx - 0x1c]	     10015	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2	IF_3	CALL_3
0x4018102	      0xe800000000	                          call 0x4018107	     10015	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2	IF_3	CALL_3
0x4018107	        0x488b7bf4	              mov rdi, qword [rbx - 0xc]	     10016	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2	IF_3	CALL_4
0x401810b	      0xe800000000	                          call 0x4018110	     10016	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2	IF_3	CALL_4
0x4018110	          0x8b4318	            mov eax, dword [rbx + 0x18] 	     10018	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2	IF_4
0x4018113	            0x85c0	                           test eax, eax	     10018	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2	IF_4
0x4018115	            0x75d8	                           jne 0x40180ef	     10018	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2	IF_4
0x4018117	        0x488b7b0c	              mov rdi, qword [rbx + 0xc]	     10019	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2	CALL_5
0x401811b	        0x4883c368	                           add rbx, 0x68	     10019	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2	CALL_5
0x401811f	      0xe800000000	                          call 0x4018124	     10019	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2	CALL_5
0x4018124	          0x4839eb	                            cmp rbx, rbp	     10011	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2
0x4018127	            0x75cf	                           jne 0x40180f8	     10011	dwarf.c	FUNCTION_108	IF_1	IF_2	FOR_2
0x4018129	          0x4c89e7	                            mov rdi, r12	     10022	dwarf.c	FUNCTION_108	IF_1	CALL_6
0x401812c	      0xe800000000	                          call 0x4018131	     10022	dwarf.c	FUNCTION_108	IF_1	CALL_6
0x4018131	    0x48c705000000	               mov qword [0x0401813c], 0	     10023	dwarf.c	FUNCTION_108	IF_1
0x401813c	    0xc70500000000	               mov dword [0x04018146], 0	     10024	dwarf.c	FUNCTION_108	IF_1
0x4018146	    0xc70500000000	               mov dword [0x04018150], 0	     10024	dwarf.c	FUNCTION_108	IF_1
0x4018150	    0x488b3d000000	            mov rdi, qword [0x04018157] 	     10027	dwarf.c	FUNCTION_108	IF_5
0x4018157	          0x4885ff	                           test rdi, rdi	     10027	dwarf.c	FUNCTION_108	IF_5
0x401815a	            0x7427	                            je 0x4018183	     10027	dwarf.c	FUNCTION_108	IF_5
0x401815c	      0xe800000000	                          call 0x4018161	     10029	dwarf.c	FUNCTION_108	IF_5	CALL_7
0x4018161	    0x488b3d000000	            mov rdi, qword [0x04018168] 	     10032	dwarf.c	FUNCTION_108	IF_5	CALL_8
0x4018168	    0x48c705000000	               mov qword [0x04018173], 0	     10030	dwarf.c	FUNCTION_108	IF_5
0x4018173	      0xe800000000	                          call 0x4018178	     10032	dwarf.c	FUNCTION_108	IF_5	CALL_8
0x4018178	    0x48c705000000	               mov qword [0x04018183], 0	     10033	dwarf.c	FUNCTION_108	IF_5
0x4018183	              0x5b	                                 pop rbx	     10035	dwarf.c	FUNCTION_108
0x4018184	              0x5d	                                 pop rbp	     10035	dwarf.c	FUNCTION_108
0x4018185	            0x415c	                                 pop r12	     10035	dwarf.c	FUNCTION_108
0x4018187	              0xc3	                                     ret	     10035	dwarf.c	FUNCTION_108
display_debug_macro	ELSE,4:FOR,3:CALL,52:WHILE,2:DO,0:functions,0:SWITCH,2:IF,13	1080
0x40106a0	            0x4157	                                push r15	      5080	dwarf.c	FUNCTION_48
0x40106a2	            0x4156	                                push r14	      5080	dwarf.c	FUNCTION_48
0x40106a4	            0x4155	                                push r13	      5080	dwarf.c	FUNCTION_48
0x40106a6	            0x4154	                                push r12	      5080	dwarf.c	FUNCTION_48
0x40106a8	              0x55	                                push rbp	      5080	dwarf.c	FUNCTION_48
0x40106a9	              0x53	                                push rbx	      5080	dwarf.c	FUNCTION_48
0x40106aa	          0x4889fd	                            mov rbp, rdi	      5080	dwarf.c	FUNCTION_48
0x40106ad	          0x4889f3	                            mov rbx, rsi	      5080	dwarf.c	FUNCTION_48
0x40106b0	    0x4881ec880800	                          sub rsp, 0x888	      5080	dwarf.c	FUNCTION_48
0x40106b7	        0x4c8b7720	            mov r14, qword [rdi + 0x20] 	      5081	dwarf.c	FUNCTION_48
0x40106bb	      0x48897c2450	             mov qword [rsp + 0x50], rdi	      5080	dwarf.c	FUNCTION_48
0x40106c0	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      5080	dwarf.c	FUNCTION_48
0x40106c9	    0x48898c247808	            mov qword [rsp + 0x878], rcx	      5080	dwarf.c	FUNCTION_48
0x40106d1	            0x31c9	                            xor ecx, ecx	      5080	dwarf.c	FUNCTION_48
0x40106d3	          0x4d89f7	                            mov r15, r14	      5082	dwarf.c	FUNCTION_48
0x40106d6	        0x4c037f30	             add r15, qword [rdi + 0x30]	      5082	dwarf.c	FUNCTION_48
0x40106da	      0xbf0a000000	                            mov edi, 0xa	      5087	dwarf.c	FUNCTION_48	CALL_1
0x40106df	      0xe8dc12ffff	 call sym.load_debug_section_with_follow	      5087	dwarf.c	FUNCTION_48	CALL_1
0x40106e4	          0x4889de	                            mov rsi, rbx	      5088	dwarf.c	FUNCTION_48	CALL_2
0x40106e7	      0xbf04000000	                              mov edi, 4	      5088	dwarf.c	FUNCTION_48	CALL_2
0x40106ec	      0xe8cf12ffff	 call sym.load_debug_section_with_follow	      5088	dwarf.c	FUNCTION_48	CALL_2
0x40106f1	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	      5090	dwarf.c	FUNCTION_48	CALL_3
0x40106f5	        0x488d7518	                   lea rsi, [rbp + 0x18]	      5090	dwarf.c	FUNCTION_48	CALL_3
0x40106f9	      0xe8821affff	  call sym.introduce.isra.5.constprop.27	      5090	dwarf.c	FUNCTION_48	CALL_3
0x40106fe	          0x4d39fe	                            cmp r14, r15	      5092	dwarf.c	FUNCTION_48	WHILE_1
0x4010701	     0xf8323060000	                           jae 0x4010d2a	      5092	dwarf.c	FUNCTION_48	WHILE_1
0x4010707	      0x4c89742448	             mov qword [rsp + 0x48], r14	      5092	dwarf.c	FUNCTION_48	WHILE_1
0x401070c	        0x498d5e02	                      lea rbx, [r14 + 2]	      5100	dwarf.c	FUNCTION_48	WHILE_1
0x4010710	          0x4c89f5	                            mov rbp, r14	      5097	dwarf.c	FUNCTION_48	WHILE_1
0x4010713	      0x482b6c2448	             sub rbp, qword [rsp + 0x48]	      5097	dwarf.c	FUNCTION_48	WHILE_1
0x4010718	          0x4939df	                            cmp r15, rbx	      5100	dwarf.c	FUNCTION_48	WHILE_1
0x401071b	            0x7763	                            ja 0x4010780	      5100	dwarf.c	FUNCTION_48	WHILE_1
0x401071d	          0x4d39fe	                            cmp r14, r15	      5100	dwarf.c	FUNCTION_48	WHILE_1
0x4010720	     0xf82fa0b0000	                            jb 0x4011320	      5100	dwarf.c	FUNCTION_48	WHILE_1
0x4010726	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      5103	dwarf.c	FUNCTION_48	WHILE_1	IF_1	CALL_5
0x401072b	      0xba05000000	                              mov edx, 5	      5103	dwarf.c	FUNCTION_48	WHILE_1	IF_1	CALL_5
0x4010730	      0xbe00000000	                              mov esi, 0	      5103	dwarf.c	FUNCTION_48	WHILE_1	IF_1	CALL_5
0x4010735	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      5103	dwarf.c	FUNCTION_48	WHILE_1	IF_1	CALL_5
0x4010739	            0x31ff	                            xor edi, edi	      5169	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	SWITCH_1	CALL_17
0x401073b	      0xe800000000	                          call 0x4010740	      5169	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	SWITCH_1	CALL_17
0x4010740	          0x4889de	                            mov rsi, rbx	      5169	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	SWITCH_1	CALL_17
0x4010743	          0x4889c7	                            mov rdi, rax	      5169	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	SWITCH_1	CALL_17
0x4010746	            0x31c0	                            xor eax, eax	      5169	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	SWITCH_1	CALL_17
0x4010748	      0xe800000000	                          call 0x401074d	      5169	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	SWITCH_1	CALL_17
0x401074d	            0x31c0	                            xor eax, eax	      5171	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	SWITCH_1
0x401074f	    0x488b8c247808	           mov rcx, qword [rsp + 0x878] 	      5334	dwarf.c	FUNCTION_48
0x4010757	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5334	dwarf.c	FUNCTION_48
0x4010760	     0xf8542100000	                           jne 0x40117a8	      5334	dwarf.c	FUNCTION_48
0x4010766	    0x4881c4880800	                          add rsp, 0x888	      5334	dwarf.c	FUNCTION_48
0x401076d	              0x5b	                                 pop rbx	      5334	dwarf.c	FUNCTION_48
0x401076e	              0x5d	                                 pop rbp	      5334	dwarf.c	FUNCTION_48
0x401076f	            0x415c	                                 pop r12	      5334	dwarf.c	FUNCTION_48
0x4010771	            0x415d	                                 pop r13	      5334	dwarf.c	FUNCTION_48
0x4010773	            0x415e	                                 pop r14	      5334	dwarf.c	FUNCTION_48
0x4010775	            0x415f	                                 pop r15	      5334	dwarf.c	FUNCTION_48
0x4010777	              0xc3	                                     ret	      5334	dwarf.c	FUNCTION_48
0x4010778	     0xf1f84000000	                   nop dword [rax + rax]	      5334	dwarf.c	FUNCTION_48
0x4010780	      0xbe02000000	                              mov esi, 2	      5334	dwarf.c	FUNCTION_48
0x4010785	          0x4c89f7	                            mov rdi, r14	      5100	dwarf.c	FUNCTION_48	WHILE_1
0x4010788	    0xff1500000000	                 call qword [0x0401078e]	      5100	dwarf.c	FUNCTION_48	WHILE_1
0x401078e	      0x4889442438	             mov qword [rsp + 0x38], rax	      5100	dwarf.c	FUNCTION_48	WHILE_1
0x4010793	          0x83e804	                              sub eax, 4	      5101	dwarf.c	FUNCTION_48	WHILE_1	IF_1
0x4010796	          0x83f801	                              cmp eax, 1	      5101	dwarf.c	FUNCTION_48	WHILE_1	IF_1
0x4010799	            0x778b	                            ja 0x4010726	      5101	dwarf.c	FUNCTION_48	WHILE_1	IF_1
0x401079b	        0x4d8d6e03	                      lea r13, [r14 + 3]	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x401079f	          0x4d39ef	                            cmp r15, r13	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x40107a2	     0xf87f8070000	                            ja 0x4010fa0	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x40107a8	          0x4939df	                            cmp r15, rbx	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x40107ab	     0xf878f0b0000	                            ja 0x4011340	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x40107b1	      0xba05000000	                              mov edx, 5	      5111	dwarf.c	FUNCTION_48	WHILE_1	CALL_6
0x40107b6	      0xbe00000000	                              mov esi, 0	      5111	dwarf.c	FUNCTION_48	WHILE_1	CALL_6
0x40107bb	            0x31ff	                            xor edi, edi	      5111	dwarf.c	FUNCTION_48	WHILE_1	CALL_6
0x40107bd	      0xe800000000	                          call 0x40107c2	      5111	dwarf.c	FUNCTION_48	WHILE_1	CALL_6
0x40107c2	          0x4889ea	                            mov rdx, rbp	       104	stdio2.h	CALL_16
0x40107c5	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40107c8	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40107cd	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40107cf	      0xe800000000	                          call 0x40107d4	       104	stdio2.h	CALL_16
0x40107d4	      0xba05000000	                              mov edx, 5	      5113	dwarf.c	FUNCTION_48	WHILE_1	CALL_7
0x40107d9	      0xbe00000000	                              mov esi, 0	      5113	dwarf.c	FUNCTION_48	WHILE_1	CALL_7
0x40107de	            0x31ff	                            xor edi, edi	      5113	dwarf.c	FUNCTION_48	WHILE_1	CALL_7
0x40107e0	      0xe800000000	                          call 0x40107e5	      5113	dwarf.c	FUNCTION_48	WHILE_1	CALL_7
0x40107e5	        0x8b542438	            mov edx, dword [rsp + 0x38] 	       104	stdio2.h	CALL_16
0x40107e9	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40107ec	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40107f1	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40107f3	      0xe800000000	                          call 0x40107f8	       104	stdio2.h	CALL_16
0x40107f8	      0xba05000000	                              mov edx, 5	      5114	dwarf.c	FUNCTION_48	WHILE_1	CALL_8
0x40107fd	      0xbe00000000	                              mov esi, 0	      5114	dwarf.c	FUNCTION_48	WHILE_1	CALL_8
0x4010802	            0x31ff	                            xor edi, edi	      5114	dwarf.c	FUNCTION_48	WHILE_1	CALL_8
0x4010804	      0xe800000000	                          call 0x4010809	      5114	dwarf.c	FUNCTION_48	WHILE_1	CALL_8
0x4010809	      0xba04000000	                              mov edx, 4	       104	stdio2.h	CALL_16
0x401080e	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4010811	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4010816	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4010818	      0xe800000000	                          call 0x401081d	       104	stdio2.h	CALL_16
0x401081d	    0xc74424580000	               mov dword [rsp + 0x58], 0	      5115	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x4010825	    0xc74424240400	               mov dword [rsp + 0x24], 4	      5095	dwarf.c	FUNCTION_48	WHILE_1
0x401082d	    0x48c744243000	               mov qword [rsp + 0x30], 0	      5097	dwarf.c	FUNCTION_48	WHILE_1
0x4010836	    0x48c744242800	               mov qword [rsp + 0x28], 0	      5098	dwarf.c	FUNCTION_48	WHILE_1
0x401083f	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x4010844	      0xe800000000	                          call 0x4010849	       104	stdio2.h	CALL_16
0x4010849	          0x4d39fd	                            cmp r13, r15	      5184	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_7
0x401084c	     0xf838b020000	                           jae 0x4010add	      5184	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_7
0x4010852	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      5184	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_7
0x4010856	      0x4889442408	                mov qword [rsp + 8], rax	      5184	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_7
0x401085b	       0xf1f440000	                   nop dword [rax + rax]	      5184	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_7
0x4010860	        0x4d8d7501	                      lea r14, [r13 + 1]	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x4010864	          0x4d39f7	                            cmp r15, r14	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x4010867	     0xf87a3040000	                            ja 0x4010d10	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x401086d	          0x4d39ef	                            cmp r15, r13	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x4010870	     0xf86aa040000	                           jbe 0x4010d20	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x4010876	          0x4c89fe	                            mov rsi, r15	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x4010879	          0x4c29ee	                            sub rsi, r13	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x401087c	          0x8d46ff	                      lea eax, [rsi - 1]	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x401087f	          0x83f807	                              cmp eax, 7	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x4010882	     0xf8798040000	                            ja 0x4010d20	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x4010888	          0x4c89ef	                            mov rdi, r13	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x401088b	    0xff1500000000	                 call qword [0x04010891]	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x4010891	            0x85c0	                           test eax, eax	      5191	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_8
0x4010893	          0x4989c4	                            mov r12, rax	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x4010896	          0x4189c5	                           mov r13d, eax	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x4010899	     0xf84310d0000	                            je 0x40115d0	      5191	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_8
0x401089f	          0x83f80a	                            cmp eax, 0xa	      5194	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40108a2	     0xf87f8030000	                            ja 0x4010ca0	      5194	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40108a8	            0x89c0	                            mov eax, eax	      5194	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40108aa	    0xff24c5000000	                       jmp qword [rax*8]	      5194	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40108b1	     0xf1f80000000	                         nop dword [rax]	      5194	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40108b8	      0x488d742468	                   lea rsi, [rsp + 0x68]	       356	dwarf.c	FUNCTION_10	CALL_1
0x40108bd	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x40108bf	          0x4c89f7	                            mov rdi, r14	       356	dwarf.c	FUNCTION_10	CALL_1
0x40108c2	          0x4c89f9	                            mov rcx, r15	       356	dwarf.c	FUNCTION_10	CALL_1
0x40108c5	      0xe800000000	                          call 0x40108ca	       356	dwarf.c	FUNCTION_10	CALL_1
0x40108ca	        0x8b7c2468	            mov edi, dword [rsp + 0x68] 	      5279	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40108ce	          0x4889c3	                            mov rbx, rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x40108d1	      0x488b442408	                mov rax, qword [rsp + 8]	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40108d6	          0x4c01f7	                            add rdi, r14	      5279	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40108d9	        0x4c8d2c07	                    lea r13, [rdi + rax]	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40108dd	          0x4d39ef	                            cmp r15, r13	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40108e0	     0xf8752040000	                            ja 0x4010d38	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40108e6	            0x31ed	                            xor ebp, ebp	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40108e8	          0x4939ff	                            cmp r15, rdi	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40108eb	            0x7613	                           jbe 0x4010900	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40108ed	          0x4489fe	                           mov esi, r15d	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40108f0	            0x31ed	                            xor ebp, ebp	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40108f2	            0x29fe	                            sub esi, edi	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40108f4	          0x8d46ff	                      lea eax, [rsi - 1]	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40108f7	          0x83f807	                              cmp eax, 7	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40108fa	     0xf864a040000	                           jbe 0x4010d4a	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010900	      0xba05000000	                              mov edx, 5	      5281	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_45
0x4010905	      0xbe00000000	                              mov esi, 0	      5281	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_45
0x401090a	            0x31ff	                            xor edi, edi	      5281	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_45
0x401090c	      0xe800000000	                          call 0x4010911	      5281	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_45
0x4010911	          0x4889e9	                            mov rcx, rbp	       104	stdio2.h	CALL_16
0x4010914	      0xe9aa010000	                           jmp 0x4010ac3	       104	stdio2.h	CALL_16
0x4010919	     0xf1f80000000	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x4010920	      0x488d742468	                   lea rsi, [rsp + 0x68]	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010925	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010927	          0x4c89f7	                            mov rdi, r14	       356	dwarf.c	FUNCTION_10	CALL_1
0x401092a	          0x4c89f9	                            mov rcx, r15	       356	dwarf.c	FUNCTION_10	CALL_1
0x401092d	      0xe800000000	                          call 0x4010932	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010932	        0x8b7c2468	            mov edi, dword [rsp + 0x68] 	      5271	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010936	          0x4889c3	                            mov rbx, rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010939	      0x488b442408	                mov rax, qword [rsp + 8]	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x401093e	          0x4c01f7	                            add rdi, r14	      5271	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010941	        0x4c8d2c07	                    lea r13, [rdi + rax]	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010945	          0x4d39ef	                            cmp r15, r13	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010948	     0xf873a040000	                            ja 0x4010d88	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x401094e	            0x31ed	                            xor ebp, ebp	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010950	          0x4939ff	                            cmp r15, rdi	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010953	            0x761b	                           jbe 0x4010970	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010955	          0x4489fe	                           mov esi, r15d	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010958	            0x31ed	                            xor ebp, ebp	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x401095a	            0x29fe	                            sub esi, edi	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x401095c	          0x8d46ff	                      lea eax, [rsi - 1]	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x401095f	          0x83f807	                              cmp eax, 7	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010962	     0xf8632040000	                           jbe 0x4010d9a	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010968	     0xf1f84000000	                   nop dword [rax + rax]	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010970	      0xba05000000	                              mov edx, 5	      5273	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_43
0x4010975	      0xbe00000000	                              mov esi, 0	      5273	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_43
0x401097a	            0x31ff	                            xor edi, edi	      5273	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_43
0x401097c	      0xe800000000	                          call 0x4010981	      5273	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_43
0x4010981	          0x4889e9	                            mov rcx, rbp	       104	stdio2.h	CALL_16
0x4010984	      0xe93a010000	                           jmp 0x4010ac3	       104	stdio2.h	CALL_16
0x4010989	     0xf1f80000000	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x4010990	      0x488d742468	                   lea rsi, [rsp + 0x68]	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010995	          0x4c89f7	                            mov rdi, r14	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010998	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x401099a	          0x4c89f9	                            mov rcx, r15	       356	dwarf.c	FUNCTION_10	CALL_1
0x401099d	      0xe800000000	                          call 0x40109a2	       356	dwarf.c	FUNCTION_10	CALL_1
0x40109a2	        0x8b7c2468	            mov edi, dword [rsp + 0x68] 	      5256	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40109a6	          0x4889c3	                            mov rbx, rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x40109a9	      0x488b442408	                mov rax, qword [rsp + 8]	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40109ae	          0x4901fe	                            add r14, rdi	      5256	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40109b1	        0x4d8d2c06	                    lea r13, [r14 + rax]	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40109b5	          0x4d39ef	                            cmp r15, r13	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40109b8	     0xf87a2030000	                            ja 0x4010d60	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40109be	            0x31ff	                            xor edi, edi	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40109c0	          0x4d39f7	                            cmp r15, r14	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40109c3	            0x761b	                           jbe 0x40109e0	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40109c5	          0x4489fe	                           mov esi, r15d	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40109c8	            0x31ff	                            xor edi, edi	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40109ca	          0x4429f6	                           sub esi, r14d	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40109cd	          0x8d46ff	                      lea eax, [rsi - 1]	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40109d0	          0x83f807	                              cmp eax, 7	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40109d3	     0xf8699030000	                           jbe 0x4010d72	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40109d9	     0xf1f80000000	                         nop dword [rax]	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x40109e0	      0xe86b11ffff	          call sym.fetch_indirect_string	      5258	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_39
0x40109e5	      0xba05000000	                              mov edx, 5	      5259	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_40
0x40109ea	          0x4889c5	                            mov rbp, rax	      5258	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_39
0x40109ed	      0xbe00000000	                              mov esi, 0	      5259	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_40
0x40109f2	            0x31ff	                            xor edi, edi	      5259	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_40
0x40109f4	      0xe800000000	                          call 0x40109f9	      5259	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_40
0x40109f9	          0x4889e9	                            mov rcx, rbp	       104	stdio2.h	CALL_16
0x40109fc	      0xe9c2000000	                           jmp 0x4010ac3	       104	stdio2.h	CALL_16
0x4010a01	     0xf1f80000000	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x4010a08	      0x488d742468	                   lea rsi, [rsp + 0x68]	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010a0d	          0x4c89f7	                            mov rdi, r14	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010a10	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010a12	          0x4c89f9	                            mov rcx, r15	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010a15	      0xe800000000	                          call 0x4010a1a	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010a1a	        0x8b7c2468	            mov edi, dword [rsp + 0x68] 	      5247	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010a1e	          0x4889c3	                            mov rbx, rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010a21	      0x488b442408	                mov rax, qword [rsp + 8]	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010a26	          0x4901fe	                            add r14, rdi	      5247	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010a29	        0x4d8d2c06	                    lea r13, [r14 + rax]	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010a2d	          0x4d39ef	                            cmp r15, r13	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010a30	     0xf877a030000	                            ja 0x4010db0	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010a36	            0x31ff	                            xor edi, edi	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010a38	          0x4d39f7	                            cmp r15, r14	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010a3b	            0x761b	                           jbe 0x4010a58	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010a3d	          0x4489fe	                           mov esi, r15d	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010a40	            0x31ff	                            xor edi, edi	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010a42	          0x4429f6	                           sub esi, r14d	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010a45	          0x8d46ff	                      lea eax, [rsi - 1]	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010a48	          0x83f807	                              cmp eax, 7	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010a4b	     0xf8671030000	                           jbe 0x4010dc2	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010a51	     0xf1f80000000	                         nop dword [rax]	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010a58	      0xe8f310ffff	          call sym.fetch_indirect_string	      5249	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_36
0x4010a5d	      0xba05000000	                              mov edx, 5	      5250	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_37
0x4010a62	          0x4889c5	                            mov rbp, rax	      5249	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_36
0x4010a65	      0xbe00000000	                              mov esi, 0	      5250	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_37
0x4010a6a	            0x31ff	                            xor edi, edi	      5250	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_37
0x4010a6c	      0xe800000000	                          call 0x4010a71	      5250	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_37
0x4010a71	          0x4889e9	                            mov rcx, rbp	       104	stdio2.h	CALL_16
0x4010a74	            0xeb4d	                           jmp 0x4010ac3	       104	stdio2.h	CALL_16
0x4010a76	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       104	stdio2.h	CALL_16
0x4010a80	      0x488d742468	                   lea rsi, [rsp + 0x68]	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010a85	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010a87	          0x4c89f7	                            mov rdi, r14	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010a8a	          0x4c89f9	                            mov rcx, r15	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010a8d	      0xe800000000	                          call 0x4010a92	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010a92	        0x8b4c2468	            mov ecx, dword [rsp + 0x68] 	      5238	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010a96	          0x4c89fe	                            mov rsi, r15	      5240	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_33
0x4010a99	          0x4889c3	                            mov rbx, rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010a9c	          0x4901ce	                            add r14, rcx	      5238	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010a9f	          0x4c29f6	                            sub rsi, r14	      5240	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_33
0x4010aa2	          0x4c89f7	                            mov rdi, r14	      5240	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_33
0x4010aa5	      0xe800000000	                          call 0x4010aaa	      5240	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_33
0x4010aaa	      0x4d8d6c0601	                lea r13, [r14 + rax + 1]	      5240	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_33
0x4010aaf	      0xba05000000	                              mov edx, 5	      5241	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_34
0x4010ab4	      0xbe00000000	                              mov esi, 0	      5241	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_34
0x4010ab9	            0x31ff	                            xor edi, edi	      5241	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_34
0x4010abb	      0xe800000000	                          call 0x4010ac0	      5241	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_34
0x4010ac0	          0x4c89f1	                            mov rcx, r14	       104	stdio2.h	CALL_16
0x4010ac3	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4010ac6	            0x89da	                            mov edx, ebx	       104	stdio2.h	CALL_16
0x4010ac8	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4010acd	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4010acf	      0xe800000000	                          call 0x4010ad4	       104	stdio2.h	CALL_16
0x4010ad4	          0x4d39ef	                            cmp r15, r13	      5184	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_7
0x4010ad7	     0xf8783fdffff	                            ja 0x4010860	      5184	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_7
0x4010add	      0xba05000000	                              mov edx, 5	      5186	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_7	CALL_20
0x4010ae2	      0xbe00000000	                              mov esi, 0	      5186	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_7	CALL_20
0x4010ae7	            0x31ff	                            xor edi, edi	      5186	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_7	CALL_20
0x4010ae9	      0xe800000000	                          call 0x4010aee	      5186	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_7	CALL_20
0x4010aee	          0x4889c7	                            mov rdi, rax	      5186	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_7	CALL_20
0x4010af1	            0x31c0	                            xor eax, eax	      5186	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_7	CALL_20
0x4010af3	      0xe800000000	                          call 0x4010af8	      5186	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_7	CALL_20
0x4010af8	            0x31c0	                            xor eax, eax	      5187	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_7
0x4010afa	      0xe950fcffff	                           jmp 0x401074f	      5187	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_7
0x4010aff	              0x90	                                     nop	      5187	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	IF_7
0x4010b00	      0x488d742468	                   lea rsi, [rsp + 0x68]	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010b05	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010b07	          0x4c89f7	                            mov rdi, r14	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010b0a	          0x4c89f9	                            mov rcx, r15	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010b0d	      0xe800000000	                          call 0x4010b12	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010b12	        0x8b4c2468	            mov ecx, dword [rsp + 0x68] 	      5229	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010b16	          0x4c89fe	                            mov rsi, r15	      5231	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_30
0x4010b19	          0x4889c3	                            mov rbx, rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010b1c	          0x4901ce	                            add r14, rcx	      5229	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010b1f	          0x4c29f6	                            sub rsi, r14	      5231	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_30
0x4010b22	          0x4c89f7	                            mov rdi, r14	      5231	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_30
0x4010b25	      0xe800000000	                          call 0x4010b2a	      5231	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_30
0x4010b2a	      0xba05000000	                              mov edx, 5	      5232	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_31
0x4010b2f	      0x4d8d6c0601	                lea r13, [r14 + rax + 1]	      5231	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_30
0x4010b34	      0xbe00000000	                              mov esi, 0	      5232	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_31
0x4010b39	      0xe97bffffff	                           jmp 0x4010ab9	      5232	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_31
0x4010b3e	            0x6690	                                     nop	      5232	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_31
0x4010b40	      0xba05000000	                              mov edx, 5	      5224	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_28
0x4010b45	      0xbe00000000	                              mov esi, 0	      5224	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_28
0x4010b4a	            0x31ff	                            xor edi, edi	      5224	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_28
0x4010b4c	      0xe800000000	                          call 0x4010b51	      5224	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_28
0x4010b51	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4010b56	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4010b59	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4010b5b	      0xe800000000	                          call 0x4010b60	       104	stdio2.h	CALL_16
0x4010b60	          0x4d89f5	                            mov r13, r14	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x4010b63	      0xe96cffffff	                           jmp 0x4010ad4	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x4010b68	     0xf1f84000000	                   nop dword [rax + rax]	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x4010b70	      0x488d742468	                   lea rsi, [rsp + 0x68]	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010b75	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010b77	          0x4c89f9	                            mov rcx, r15	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010b7a	          0x4c89f7	                            mov rdi, r14	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010b7d	      0xe800000000	                          call 0x4010b82	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010b82	      0x448b542468	           mov r10d, dword [rsp + 0x68] 	      5202	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010b87	      0x488d742468	                   lea rsi, [rsp + 0x68]	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010b8c	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010b8e	          0x4c89f9	                            mov rcx, r15	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010b91	      0x4889442418	             mov qword [rsp + 0x18], rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010b96	        0x4b8d1c16	                    lea rbx, [r14 + r10]	      5202	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010b9a	          0x4889df	                            mov rdi, rbx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010b9d	      0xe800000000	                          call 0x4010ba2	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010ba2	      0x448b542468	           mov r10d, dword [rsp + 0x68] 	      5204	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010ba7	        0x8b742458	            mov esi, dword [rsp + 0x58] 	      5206	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_9
0x4010bab	      0x4889442410	             mov qword [rsp + 0x10], rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010bb0	            0x85f6	                           test esi, esi	      5206	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_9
0x4010bb2	        0x4e8d2c13	                    lea r13, [rbx + r10]	      5204	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010bb6	     0xf851c020000	                           jne 0x4010dd8	      5206	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_9
0x4010bbc	            0x31ff	                            xor edi, edi	      5207	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_24
0x4010bbe	      0xba05000000	                              mov edx, 5	      5207	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_24
0x4010bc3	      0xbe00000000	                              mov esi, 0	      5207	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_24
0x4010bc8	      0xe800000000	                          call 0x4010bcd	      5207	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_24
0x4010bcd	          0x4889c7	                            mov rdi, rax	      5207	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_24
0x4010bd0	            0x31c0	                            xor eax, eax	      5207	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_24
0x4010bd2	      0xe800000000	                          call 0x4010bd7	      5207	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_24
0x4010bd7	            0x31ff	                            xor edi, edi	      5213	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_10	CALL_26
0x4010bd9	      0xba05000000	                              mov edx, 5	      5213	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_10	CALL_26
0x4010bde	      0xbe00000000	                              mov esi, 0	      5213	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_10	CALL_26
0x4010be3	      0xe800000000	                          call 0x4010be8	      5213	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_10	CALL_26
0x4010be8	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	       104	stdio2.h	CALL_16
0x4010bec	        0x8b542418	            mov edx, dword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x4010bf0	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4010bf3	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4010bf8	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4010bfa	      0xe800000000	                          call 0x4010bff	       104	stdio2.h	CALL_16
0x4010bff	      0xe9d0feffff	                           jmp 0x4010ad4	       104	stdio2.h	CALL_16
0x4010c04	         0xf1f4000	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x4010c08	      0x488b442408	                mov rax, qword [rsp + 8]	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010c0d	        0x4d8d2c06	                    lea r13, [r14 + rax]	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010c11	          0x4d39ef	                            cmp r15, r13	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010c14	     0xf8686020000	                           jbe 0x4010ea0	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010c1a	        0x8b742424	            mov esi, dword [rsp + 0x24] 	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010c1e	          0x8d46ff	                      lea eax, [rsi - 1]	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010c21	            0x31db	                            xor ebx, ebx	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010c23	          0x83f807	                              cmp eax, 7	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010c26	            0x770c	                            ja 0x4010c34	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010c28	          0x4c89f7	                            mov rdi, r14	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010c2b	    0xff1500000000	                 call qword [0x04010c31]	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010c31	          0x4889c3	                            mov rbx, rax	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010c34	      0xba05000000	                              mov edx, 5	      5265	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_41
0x4010c39	      0xbe00000000	                              mov esi, 0	      5265	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_41
0x4010c3e	            0x31ff	                            xor edi, edi	      5287	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_46
0x4010c40	      0xe800000000	                          call 0x4010c45	      5287	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_46
0x4010c45	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_16
0x4010c48	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4010c4b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4010c50	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4010c52	      0xe800000000	                          call 0x4010c57	       104	stdio2.h	CALL_16
0x4010c57	      0xe978feffff	                           jmp 0x4010ad4	       104	stdio2.h	CALL_16
0x4010c5c	         0xf1f4000	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x4010c60	      0x488b442408	                mov rax, qword [rsp + 8]	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010c65	        0x4d8d2c06	                    lea r13, [r14 + rax]	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010c69	          0x4d39ef	                            cmp r15, r13	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010c6c	     0xf860e020000	                           jbe 0x4010e80	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010c72	        0x8b742424	            mov esi, dword [rsp + 0x24] 	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010c76	          0x8d46ff	                      lea eax, [rsi - 1]	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010c79	            0x31db	                            xor ebx, ebx	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010c7b	          0x83f807	                              cmp eax, 7	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010c7e	            0x770c	                            ja 0x4010c8c	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010c80	          0x4c89f7	                            mov rdi, r14	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010c83	    0xff1500000000	                 call qword [0x04010c89]	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010c89	          0x4889c3	                            mov rbx, rax	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010c8c	      0xba05000000	                              mov edx, 5	      5287	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_46
0x4010c91	      0xbe00000000	                              mov esi, 0	      5287	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_46
0x4010c96	            0xeba6	                           jmp 0x4010c3e	      5287	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_46
0x4010c98	     0xf1f84000000	                   nop dword [rax + rax]	      5287	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	CALL_46
0x4010ca0	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      5292	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_11
0x4010ca5	          0x4885c9	                           test rcx, rcx	      5292	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_11
0x4010ca8	     0xf84e3090000	                            je 0x4011691	      5292	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_11
0x4010cae	          0x4489e0	                           mov eax, r12d	      5292	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_11
0x4010cb1	        0x488b2cc1	            mov rbp, qword [rcx + rax*8]	      5292	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_11
0x4010cb5	          0x4885ed	                           test rbp, rbp	      5292	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_11
0x4010cb8	     0xf84d3090000	                            je 0x4011691	      5292	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_11
0x4010cbe	      0x488d742468	                   lea rsi, [rsp + 0x68]	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010cc3	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010cc5	          0x4c89f9	                            mov rcx, r15	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010cc8	          0x4889ef	                            mov rdi, rbp	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010ccb	      0xe800000000	                          call 0x4010cd0	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010cd0	          0x4885c0	                           test rax, rax	      5304	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	IF_12
0x4010cd3	          0x4889c3	                            mov rbx, rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x4010cd6	     0xf85e4010000	                           jne 0x4010ec0	      5304	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	IF_12
0x4010cdc	      0xba05000000	                              mov edx, 5	      5306	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	IF_12	CALL_50
0x4010ce1	      0xbe00000000	                              mov esi, 0	      5306	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	IF_12	CALL_50
0x4010ce6	            0x31ff	                            xor edi, edi	      5306	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	IF_12	CALL_50
0x4010ce8	      0xe800000000	                          call 0x4010ced	      5306	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	IF_12	CALL_50
0x4010ced	          0x4489e2	                           mov edx, r12d	       104	stdio2.h	CALL_16
0x4010cf0	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4010cf3	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4010cf8	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4010cfa	          0x4d89f5	                            mov r13, r14	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x4010cfd	      0xe800000000	                          call 0x4010d02	       104	stdio2.h	CALL_16
0x4010d02	      0xe9cdfdffff	                           jmp 0x4010ad4	       104	stdio2.h	CALL_16
0x4010d07	    0x660f1f840000	                    nop word [rax + rax]	       104	stdio2.h	CALL_16
0x4010d10	      0xbe01000000	                              mov esi, 1	       104	stdio2.h	CALL_16
0x4010d15	      0xe96efbffff	                           jmp 0x4010888	       104	stdio2.h	CALL_16
0x4010d1a	    0x660f1f440000	                    nop word [rax + rax]	       104	stdio2.h	CALL_16
0x4010d20	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x4010d25	      0xe800000000	                          call 0x4010d2a	       104	stdio2.h	CALL_16
0x4010d2a	      0xb801000000	                              mov eax, 1	      5333	dwarf.c	FUNCTION_48
0x4010d2f	      0xe91bfaffff	                           jmp 0x401074f	      5333	dwarf.c	FUNCTION_48
0x4010d34	         0xf1f4000	                         nop dword [rax]	      5333	dwarf.c	FUNCTION_48
0x4010d38	        0x8b742424	            mov esi, dword [rsp + 0x24] 	      5333	dwarf.c	FUNCTION_48
0x4010d3c	            0x31ed	                            xor ebp, ebp	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010d3e	          0x8d46ff	                      lea eax, [rsi - 1]	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010d41	          0x83f807	                              cmp eax, 7	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010d44	     0xf87b6fbffff	                            ja 0x4010900	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010d4a	    0xff1500000000	                 call qword [0x04010d50]	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010d50	          0x4889c5	                            mov rbp, rax	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010d53	      0xe9a8fbffff	                           jmp 0x4010900	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010d58	     0xf1f84000000	                   nop dword [rax + rax]	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010d60	        0x8b742424	            mov esi, dword [rsp + 0x24] 	      5280	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010d64	            0x31ff	                            xor edi, edi	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010d66	          0x8d46ff	                      lea eax, [rsi - 1]	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010d69	          0x83f807	                              cmp eax, 7	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010d6c	     0xf876efcffff	                            ja 0x40109e0	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010d72	          0x4c89f7	                            mov rdi, r14	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010d75	    0xff1500000000	                 call qword [0x04010d7b]	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010d7b	          0x4889c7	                            mov rdi, rax	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010d7e	      0xe95dfcffff	                           jmp 0x40109e0	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010d83	       0xf1f440000	                   nop dword [rax + rax]	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010d88	        0x8b742424	            mov esi, dword [rsp + 0x24] 	      5257	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010d8c	            0x31ed	                            xor ebp, ebp	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010d8e	          0x8d46ff	                      lea eax, [rsi - 1]	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010d91	          0x83f807	                              cmp eax, 7	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010d94	     0xf87d6fbffff	                            ja 0x4010970	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010d9a	    0xff1500000000	                 call qword [0x04010da0]	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010da0	          0x4889c5	                            mov rbp, rax	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010da3	      0xe9c8fbffff	                           jmp 0x4010970	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010da8	     0xf1f84000000	                   nop dword [rax + rax]	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010db0	        0x8b742424	            mov esi, dword [rsp + 0x24] 	      5272	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010db4	            0x31ff	                            xor edi, edi	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010db6	          0x8d46ff	                      lea eax, [rsi - 1]	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010db9	          0x83f807	                              cmp eax, 7	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010dbc	     0xf8796fcffff	                            ja 0x4010a58	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010dc2	          0x4c89f7	                            mov rdi, r14	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010dc5	    0xff1500000000	                 call qword [0x04010dcb]	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010dcb	          0x4889c7	                            mov rdi, rax	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010dce	      0xe985fcffff	                           jmp 0x4010a58	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010dd3	       0xf1f440000	                   nop dword [rax + rax]	      5248	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010dd8	    0x488b1d000000	            mov rbx, qword [0x04010ddf] 	      4997	dwarf.c	FUNCTION_47	IF_1
0x4010ddf	      0x448b642410	           mov r12d, dword [rsp + 0x10] 	      4997	dwarf.c	FUNCTION_47	IF_1
0x4010de4	          0x4885db	                           test rbx, rbx	      4997	dwarf.c	FUNCTION_47	IF_1
0x4010de7	     0xf84eafdffff	                            je 0x4010bd7	      4997	dwarf.c	FUNCTION_47	IF_1
0x4010ded	    0x488b05000000	            mov rax, qword [0x04010df4] 	      4998	dwarf.c	FUNCTION_47	IF_1
0x4010df4	          0x4d85e4	                           test r12, r12	      4999	dwarf.c	FUNCTION_47	IF_1
0x4010df7	          0x4889c6	                            mov rsi, rax	      4998	dwarf.c	FUNCTION_47	IF_1
0x4010dfa	     0xf84d7fdffff	                            je 0x4010bd7	      4999	dwarf.c	FUNCTION_47	IF_1
0x4010e00	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      4999	dwarf.c	FUNCTION_47	IF_1
0x4010e05	          0x4839d0	                            cmp rax, rdx	      4999	dwarf.c	FUNCTION_47	IF_1
0x4010e08	     0xf86c9fdffff	                           jbe 0x4010bd7	      4999	dwarf.c	FUNCTION_47	IF_1
0x4010e0e	        0x4c8d3413	                    lea r14, [rbx + rdx]	      5002	dwarf.c	FUNCTION_47
0x4010e12	          0x4801c3	                            add rbx, rax	      5003	dwarf.c	FUNCTION_47
0x4010e15	        0x498d6e04	                      lea rbp, [r14 + 4]	      5005	dwarf.c	FUNCTION_47
0x4010e19	          0x4839eb	                            cmp rbx, rbp	      5005	dwarf.c	FUNCTION_47
0x4010e1c	     0xf86be020000	                           jbe 0x40110e0	      5005	dwarf.c	FUNCTION_47
0x4010e22	      0xbe04000000	                              mov esi, 4	      5005	dwarf.c	FUNCTION_47
0x4010e27	          0x4c89f7	                            mov rdi, r14	      5005	dwarf.c	FUNCTION_47
0x4010e2a	    0xff1500000000	                 call qword [0x04010e30]	      5005	dwarf.c	FUNCTION_47
0x4010e30	      0xb9ffffffff	                     mov ecx, 0xffffffff	      5006	dwarf.c	FUNCTION_47	IF_2
0x4010e35	          0x4839c8	                            cmp rax, rcx	      5006	dwarf.c	FUNCTION_47	IF_2
0x4010e38	     0xf853c080000	                           jne 0x401167a	      5006	dwarf.c	FUNCTION_47	IF_2
0x4010e3e	        0x4983c60c	                            add r14, 0xc	      5009	dwarf.c	FUNCTION_47	IF_2
0x4010e42	          0x4c39f3	                            cmp rbx, r14	      5009	dwarf.c	FUNCTION_47	IF_2
0x4010e45	     0xf86f1070000	                           jbe 0x401163c	      5009	dwarf.c	FUNCTION_47	IF_2
0x4010e4b	      0xbe08000000	                              mov esi, 8	      5009	dwarf.c	FUNCTION_47	IF_2
0x4010e50	          0x4889ef	                            mov rdi, rbp	      5009	dwarf.c	FUNCTION_47	IF_2
0x4010e53	          0x4c89f5	                            mov rbp, r14	      5009	dwarf.c	FUNCTION_47	IF_2
0x4010e56	    0x41be08000000	                             mov r14d, 8	      5010	dwarf.c	FUNCTION_47	IF_2
0x4010e5c	    0xff1500000000	                 call qword [0x04010e62]	      5009	dwarf.c	FUNCTION_47	IF_2
0x4010e62	        0x488d480c	                    lea rcx, [rax + 0xc]	      5009	dwarf.c	FUNCTION_47	IF_2
0x4010e66	          0x4839c1	                            cmp rcx, rax	      5018	dwarf.c	FUNCTION_47	IF_3
0x4010e69	    0x488b35000000	            mov rsi, qword [0x04010e70] 	      5018	dwarf.c	FUNCTION_47	IF_3
0x4010e70	     0xf837e020000	                           jae 0x40110f4	      5018	dwarf.c	FUNCTION_47	IF_3
0x4010e76	      0xe95cfdffff	                           jmp 0x4010bd7	      5018	dwarf.c	FUNCTION_47	IF_3
0x4010e7b	       0xf1f440000	                   nop dword [rax + rax]	      5018	dwarf.c	FUNCTION_47	IF_3
0x4010e80	            0x31db	                            xor ebx, ebx	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010e82	          0x4d39f7	                            cmp r15, r14	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010e85	     0xf8601feffff	                           jbe 0x4010c8c	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010e8b	          0x4489fe	                           mov esi, r15d	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010e8e	          0x4429f6	                           sub esi, r14d	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010e91	      0xe9e0fdffff	                           jmp 0x4010c76	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010e96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5286	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010ea0	            0x31db	                            xor ebx, ebx	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010ea2	          0x4d39f7	                            cmp r15, r14	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010ea5	     0xf8689fdffff	                           jbe 0x4010c34	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010eab	          0x4489fe	                           mov esi, r15d	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010eae	          0x4429f6	                           sub esi, r14d	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010eb1	      0xe968fdffff	                           jmp 0x4010c1e	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010eb6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5264	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2
0x4010ec0	        0x8b442468	            mov eax, dword [rsp + 0x68] 	      5303	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4
0x4010ec4	      0xba05000000	                              mov edx, 5	      5309	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	CALL_51
0x4010ec9	      0xbe00000000	                              mov esi, 0	      5309	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	CALL_51
0x4010ece	            0x31ff	                            xor edi, edi	      5309	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	CALL_51
0x4010ed0	          0x4d89f5	                            mov r13, r14	      5190	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2
0x4010ed3	          0x4801c5	                            add rbp, rax	      5303	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4
0x4010ed6	      0xe800000000	                          call 0x4010edb	      5309	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	CALL_51
0x4010edb	          0x4489e2	                           mov edx, r12d	       104	stdio2.h	CALL_16
0x4010ede	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4010ee1	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4010ee6	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4010ee8	      0xe800000000	                          call 0x4010eed	       104	stdio2.h	CALL_16
0x4010eed	        0x488d43ff	                      lea rax, [rbx - 1]	       104	stdio2.h	CALL_16
0x4010ef1	      0x448b642438	           mov r12d, dword [rsp + 0x38] 	       104	stdio2.h	CALL_16
0x4010ef6	      0x4889442418	             mov qword [rsp + 0x18], rax	       104	stdio2.h	CALL_16
0x4010efb	      0x488d441d00	                    lea rax, [rbp + rbx]	       104	stdio2.h	CALL_16
0x4010f00	          0x4889eb	                            mov rbx, rbp	       104	stdio2.h	CALL_16
0x4010f03	      0x4889442410	             mov qword [rsp + 0x10], rax	       104	stdio2.h	CALL_16
0x4010f08	            0xeb68	                           jmp 0x4010f72	       104	stdio2.h	CALL_16
0x4010f0a	    0x660f1f440000	                    nop word [rax + rax]	       104	stdio2.h	CALL_16
0x4010f10	            0x31f6	                            xor esi, esi	       104	stdio2.h	CALL_16
0x4010f12	          0x4c39fb	                            cmp rbx, r15	      5315	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4010f15	            0x7312	                           jae 0x4010f29	      5315	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4010f17	          0x4c89f8	                            mov rax, r15	      5315	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4010f1a	          0x4829d8	                            sub rax, rbx	      5315	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4010f1d	          0x8d50ff	                      lea edx, [rax - 1]	      5315	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4010f20	          0x83fa07	                              cmp edx, 7	      5315	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4010f23	     0xf863b080000	                           jbe 0x4011764	      5315	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4010f29	            0x6a20	                               push 0x20	      5317	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	CALL_52
0x4010f2b	            0x6a00	                                  push 0	      5317	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	CALL_52
0x4010f2d	          0x4531c9	                            xor r9d, r9d	      5317	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	CALL_52
0x4010f30	            0x6a00	                                  push 0	      5317	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	CALL_52
0x4010f32	            0x6a00	                                  push 0	      5317	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	CALL_52
0x4010f34	          0x4c89e9	                            mov rcx, r13	      5317	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	CALL_52
0x4010f37	            0x6a00	                                  push 0	      5317	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	CALL_52
0x4010f39	            0x4154	                                push r12	      5317	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	CALL_52
0x4010f3b	            0x31d2	                            xor edx, edx	      5317	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	CALL_52
0x4010f3d	        0xff742438	                 push qword [rsp + 0x38]	      5317	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	CALL_52
0x4010f41	            0x6a00	                                  push 0	      5317	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	CALL_52
0x4010f43	            0x31ff	                            xor edi, edi	      5317	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	CALL_52
0x4010f45	          0x4d89f8	                             mov r8, r15	      5317	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	CALL_52
0x4010f48	          0x4829eb	                            sub rbx, rbp	      5321	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	IF_13
0x4010f4b	      0xe86066ffff	    call sym.read_and_display_attr_value	      5317	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	CALL_52
0x4010f50	        0x4883c440	                           add rsp, 0x40	      5321	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	IF_13
0x4010f54	          0x4989c5	                            mov r13, rax	      5317	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	CALL_52
0x4010f57	      0x483b5c2418	            cmp rbx, qword [rsp + 0x18] 	      5321	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	IF_13
0x4010f5c	            0x740a	                            je 0x4010f68	      5321	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3	IF_13
0x4010f5e	      0xbf2c000000	                           mov edi, 0x2c	       104	stdio2.h	CALL_16
0x4010f63	      0xe800000000	                          call 0x4010f68	       104	stdio2.h	CALL_16
0x4010f68	      0x4c3b742410	            cmp r14, qword [rsp + 0x10] 	      5310	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4010f6d	          0x4c89f3	                            mov rbx, r14	      5310	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4010f70	            0x741e	                            je 0x4010f90	      5310	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4010f72	        0x4c8d7301	                      lea r14, [rbx + 1]	      5310	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4010f76	          0x4d39f7	                            cmp r15, r14	      5315	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4010f79	            0x7695	                           jbe 0x4010f10	      5315	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4010f7b	      0xbe01000000	                              mov esi, 1	      5315	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4010f80	          0x4889df	                            mov rdi, rbx	      5315	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4010f83	    0xff1500000000	                 call qword [0x04010f89]	      5315	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4010f89	          0x4863f0	                         movsxd rsi, eax	      5315	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4010f8c	            0xeb9b	                           jmp 0x4010f29	      5315	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4010f8e	            0x6690	                                     nop	      5315	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_4	FOR_3
0x4010f90	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x4010f95	      0xe800000000	                          call 0x4010f9a	       104	stdio2.h	CALL_16
0x4010f9a	      0xe935fbffff	                           jmp 0x4010ad4	       104	stdio2.h	CALL_16
0x4010f9f	              0x90	                                     nop	       104	stdio2.h	CALL_16
0x4010fa0	      0xbe01000000	                              mov esi, 1	       104	stdio2.h	CALL_16
0x4010fa5	          0x4889df	                            mov rdi, rbx	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x4010fa8	    0xff1500000000	                 call qword [0x04010fae]	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x4010fae	            0x89c1	                            mov ecx, eax	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x4010fb0	            0x89c3	                            mov ebx, eax	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x4010fb2	          0x83e102	                              and ecx, 2	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x4010fb5	          0x83e304	                              and ebx, 4	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x4010fb8	            0xa801	                              test al, 1	      5109	dwarf.c	FUNCTION_48	WHILE_1	IF_2
0x4010fba	        0x894c2458	             mov dword [rsp + 0x58], ecx	      5109	dwarf.c	FUNCTION_48	WHILE_1	IF_2
0x4010fbe	     0xf8461070000	                            je 0x4011725	      5109	dwarf.c	FUNCTION_48	WHILE_1	IF_2
0x4010fc4	    0xc74424240800	               mov dword [rsp + 0x24], 8	      5110	dwarf.c	FUNCTION_48	WHILE_1	IF_2
0x4010fcc	            0x31ff	                            xor edi, edi	      5111	dwarf.c	FUNCTION_48	WHILE_1	CALL_6
0x4010fce	      0xba05000000	                              mov edx, 5	      5111	dwarf.c	FUNCTION_48	WHILE_1	CALL_6
0x4010fd3	      0xbe00000000	                              mov esi, 0	      5111	dwarf.c	FUNCTION_48	WHILE_1	CALL_6
0x4010fd8	      0xe800000000	                          call 0x4010fdd	      5111	dwarf.c	FUNCTION_48	WHILE_1	CALL_6
0x4010fdd	          0x4889ea	                            mov rdx, rbp	       104	stdio2.h	CALL_16
0x4010fe0	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4010fe3	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4010fe8	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4010fea	      0xe800000000	                          call 0x4010fef	       104	stdio2.h	CALL_16
0x4010fef	            0x31ff	                            xor edi, edi	      5113	dwarf.c	FUNCTION_48	WHILE_1	CALL_7
0x4010ff1	      0xba05000000	                              mov edx, 5	      5113	dwarf.c	FUNCTION_48	WHILE_1	CALL_7
0x4010ff6	      0xbe00000000	                              mov esi, 0	      5113	dwarf.c	FUNCTION_48	WHILE_1	CALL_7
0x4010ffb	      0xe800000000	                          call 0x4011000	      5113	dwarf.c	FUNCTION_48	WHILE_1	CALL_7
0x4011000	        0x8b542438	            mov edx, dword [rsp + 0x38] 	       104	stdio2.h	CALL_16
0x4011004	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4011007	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x401100c	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x401100e	      0xe800000000	                          call 0x4011013	       104	stdio2.h	CALL_16
0x4011013	            0x31ff	                            xor edi, edi	      5114	dwarf.c	FUNCTION_48	WHILE_1	CALL_8
0x4011015	      0xba05000000	                              mov edx, 5	      5114	dwarf.c	FUNCTION_48	WHILE_1	CALL_8
0x401101a	      0xbe00000000	                              mov esi, 0	      5114	dwarf.c	FUNCTION_48	WHILE_1	CALL_8
0x401101f	      0xe800000000	                          call 0x4011024	      5114	dwarf.c	FUNCTION_48	WHILE_1	CALL_8
0x4011024	        0x8b542424	            mov edx, dword [rsp + 0x24] 	       104	stdio2.h	CALL_16
0x4011028	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x401102b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4011030	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4011032	      0xe800000000	                          call 0x4011037	       104	stdio2.h	CALL_16
0x4011037	        0x8b442458	            mov eax, dword [rsp + 0x58] 	      5115	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x401103b	            0x85c0	                           test eax, eax	      5115	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x401103d	     0xf84c6050000	                            je 0x4011609	      5115	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x4011043	        0x8b6c2424	            mov ebp, dword [rsp + 0x24] 	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x4011047	          0x4c01ed	                            add rbp, r13	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x401104a	          0x4939ef	                            cmp r15, rbp	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x401104d	     0xf860d030000	                           jbe 0x4011360	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x4011053	        0x8b742424	            mov esi, dword [rsp + 0x24] 	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x4011057	          0x8d46ff	                      lea eax, [rsi - 1]	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x401105a	    0x48c744243000	               mov qword [rsp + 0x30], 0	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x4011063	          0x83f807	                              cmp eax, 7	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x4011066	            0x770e	                            ja 0x4011076	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x4011068	          0x4c89ef	                            mov rdi, r13	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x401106b	    0xff1500000000	                 call qword [0x04011071]	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x4011071	      0x4889442430	             mov qword [rsp + 0x30], rax	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x4011076	      0xba05000000	                              mov edx, 5	      5118	dwarf.c	FUNCTION_48	WHILE_1	IF_3	CALL_9
0x401107b	      0xbe00000000	                              mov esi, 0	      5118	dwarf.c	FUNCTION_48	WHILE_1	IF_3	CALL_9
0x4011080	            0x31ff	                            xor edi, edi	      5118	dwarf.c	FUNCTION_48	WHILE_1	IF_3	CALL_9
0x4011082	      0xe800000000	                          call 0x4011087	      5118	dwarf.c	FUNCTION_48	WHILE_1	IF_3	CALL_9
0x4011087	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	       104	stdio2.h	CALL_16
0x401108c	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x401108f	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4011094	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4011096	      0xe800000000	                          call 0x401109b	       104	stdio2.h	CALL_16
0x401109b	            0x85db	                           test ebx, ebx	      5121	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x401109d	     0xf84c8060000	                            je 0x401176b	      5121	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x40110a3	        0x4c8d6d01	                      lea r13, [rbp + 1]	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x40110a7	          0x4d39ef	                            cmp r15, r13	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x40110aa	     0xf87d0020000	                            ja 0x4011380	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x40110b0	          0x4c39fd	                            cmp rbp, r15	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x40110b3	            0x7312	                           jae 0x40110c7	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x40110b5	          0x4c89fe	                            mov rsi, r15	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x40110b8	          0x4829ee	                            sub rsi, rbp	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x40110bb	          0x8d46ff	                      lea eax, [rsi - 1]	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x40110be	          0x83f807	                              cmp eax, 7	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x40110c1	     0xf86b5060000	                           jbe 0x401177c	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x40110c7	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x40110cc	      0xe800000000	                          call 0x40110d1	       104	stdio2.h	CALL_16
0x40110d1	      0xe907faffff	                           jmp 0x4010add	       104	stdio2.h	CALL_16
0x40110d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       104	stdio2.h	CALL_16
0x40110e0	          0x4939de	                            cmp r14, rbx	      5005	dwarf.c	FUNCTION_47
0x40110e3	     0xf8231050000	                            jb 0x401161a	      5005	dwarf.c	FUNCTION_47
0x40110e9	    0x41be04000000	                             mov r14d, 4	      5015	dwarf.c	FUNCTION_47	ELSE_1
0x40110ef	      0xb904000000	                              mov ecx, 4	      5005	dwarf.c	FUNCTION_47
0x40110f4	          0x4889f0	                            mov rax, rsi	      5005	dwarf.c	FUNCTION_47
0x40110f7	          0x4839c8	                            cmp rax, rcx	      5019	dwarf.c	FUNCTION_47	IF_3
0x40110fa	     0xf82d7faffff	                            jb 0x4010bd7	      5019	dwarf.c	FUNCTION_47	IF_3
0x4011100	        0x488d4502	                      lea rax, [rbp + 2]	      5022	dwarf.c	FUNCTION_47
0x4011104	          0x4839c3	                            cmp rbx, rax	      5022	dwarf.c	FUNCTION_47
0x4011107	     0xf8753050000	                            ja 0x4011660	      5022	dwarf.c	FUNCTION_47
0x401110d	          0x4839dd	                            cmp rbp, rbx	      5022	dwarf.c	FUNCTION_47
0x4011110	     0xf83c1faffff	                           jae 0x4010bd7	      5022	dwarf.c	FUNCTION_47
0x4011116	          0x4889de	                            mov rsi, rbx	      5022	dwarf.c	FUNCTION_47
0x4011119	          0x4829ee	                            sub rsi, rbp	      5022	dwarf.c	FUNCTION_47
0x401111c	          0x8d46ff	                      lea eax, [rsi - 1]	      5022	dwarf.c	FUNCTION_47
0x401111f	          0x83f807	                              cmp eax, 7	      5022	dwarf.c	FUNCTION_47
0x4011122	     0xf87affaffff	                            ja 0x4010bd7	      5022	dwarf.c	FUNCTION_47
0x4011128	     0xf1f84000000	                   nop dword [rax + rax]	      5022	dwarf.c	FUNCTION_47
0x4011130	          0x4889ef	                            mov rdi, rbp	      5022	dwarf.c	FUNCTION_47
0x4011133	    0xff1500000000	                 call qword [0x04011139]	      5022	dwarf.c	FUNCTION_47
0x4011139	          0x8d48fe	                      lea ecx, [rax - 2]	      5023	dwarf.c	FUNCTION_47	IF_4
0x401113c	          0x83f902	                              cmp ecx, 2	      5023	dwarf.c	FUNCTION_47	IF_4
0x401113f	     0xf8792faffff	                            ja 0x4010bd7	      5023	dwarf.c	FUNCTION_47	IF_4
0x4011145	        0x418d5601	                      lea edx, [r14 + 1]	      5025	dwarf.c	FUNCTION_47
0x4011149	          0x83f804	                              cmp eax, 4	      5027	dwarf.c	FUNCTION_47	IF_5
0x401114c	           0xf94c0	                                 sete al	      5027	dwarf.c	FUNCTION_47	IF_5
0x401114f	      0x488d6c1502	                lea rbp, [rbp + rdx + 2]	      5025	dwarf.c	FUNCTION_47
0x4011154	           0xfb6c0	                           movzx eax, al	      5027	dwarf.c	FUNCTION_47	IF_5
0x4011157	          0x4801c5	                            add rbp, rax	      5027	dwarf.c	FUNCTION_47	IF_5
0x401115a	        0x488d7d03	                      lea rdi, [rbp + 3]	      5028	dwarf.c	FUNCTION_47
0x401115e	        0x4883c504	                              add rbp, 4	      5030	dwarf.c	FUNCTION_47
0x4011162	          0x4839eb	                            cmp rbx, rbp	      5030	dwarf.c	FUNCTION_47
0x4011165	     0xf8705050000	                            ja 0x4011670	      5030	dwarf.c	FUNCTION_47
0x401116b	          0x4839fb	                            cmp rbx, rdi	      5030	dwarf.c	FUNCTION_47
0x401116e	     0xf8663faffff	                           jbe 0x4010bd7	      5030	dwarf.c	FUNCTION_47
0x4011174	          0x4889de	                            mov rsi, rbx	      5030	dwarf.c	FUNCTION_47
0x4011177	          0x4829fe	                            sub rsi, rdi	      5030	dwarf.c	FUNCTION_47
0x401117a	          0x8d46ff	                      lea eax, [rsi - 1]	      5030	dwarf.c	FUNCTION_47
0x401117d	          0x83f807	                              cmp eax, 7	      5030	dwarf.c	FUNCTION_47
0x4011180	     0xf8751faffff	                            ja 0x4010bd7	      5030	dwarf.c	FUNCTION_47
0x4011186	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5030	dwarf.c	FUNCTION_47
0x4011190	    0xff1500000000	                 call qword [0x04011196]	      5030	dwarf.c	FUNCTION_47
0x4011196	            0x85c0	                           test eax, eax	      5031	dwarf.c	FUNCTION_47	IF_6
0x4011198	     0xf8439faffff	                            je 0x4010bd7	      5031	dwarf.c	FUNCTION_47	IF_6
0x401119e	          0x83e801	                              sub eax, 1	      5034	dwarf.c	FUNCTION_47
0x40111a1	          0x4801e8	                            add rax, rbp	      5034	dwarf.c	FUNCTION_47
0x40111a4	          0x4839c3	                            cmp rbx, rax	      5035	dwarf.c	FUNCTION_47	IF_7
0x40111a7	      0x4889442440	             mov qword [rsp + 0x40], rax	      5034	dwarf.c	FUNCTION_47
0x40111ac	     0xf8625faffff	                           jbe 0x4010bd7	      5035	dwarf.c	FUNCTION_47	IF_7
0x40111b2	          0x4889c5	                            mov rbp, rax	      5035	dwarf.c	FUNCTION_47	IF_7
0x40111b5	            0xeb25	                           jmp 0x40111dc	      5035	dwarf.c	FUNCTION_47	IF_7
0x40111b7	    0x660f1f840000	                    nop word [rax + rax]	      5035	dwarf.c	FUNCTION_47	IF_7
0x40111c0	          0x4889de	                            mov rsi, rbx	      5042	dwarf.c	FUNCTION_47	WHILE_1	CALL_1
0x40111c3	          0x4889ef	                            mov rdi, rbp	      5042	dwarf.c	FUNCTION_47	WHILE_1	CALL_1
0x40111c6	          0x4829ee	                            sub rsi, rbp	      5042	dwarf.c	FUNCTION_47	WHILE_1	CALL_1
0x40111c9	      0xe800000000	                          call 0x40111ce	      5042	dwarf.c	FUNCTION_47	WHILE_1	CALL_1
0x40111ce	      0x488d6c0501	                lea rbp, [rbp + rax + 1]	      5042	dwarf.c	FUNCTION_47	WHILE_1	CALL_1
0x40111d3	          0x4839eb	                            cmp rbx, rbp	      5043	dwarf.c	FUNCTION_47	WHILE_1	IF_8
0x40111d6	     0xf86fbf9ffff	                           jbe 0x4010bd7	      5043	dwarf.c	FUNCTION_47	WHILE_1	IF_8
0x40111dc	        0x807d0000	                       cmp byte [rbp], 0	      5040	dwarf.c	FUNCTION_47	WHILE_1
0x40111e0	            0x75de	                           jne 0x40111c0	      5040	dwarf.c	FUNCTION_47	WHILE_1
0x40111e2	        0x4c8d7501	                      lea r14, [rbp + 1]	      5046	dwarf.c	FUNCTION_47
0x40111e6	          0x4c39f3	                            cmp rbx, r14	      5049	dwarf.c	FUNCTION_47	FOR_1
0x40111e9	     0xf86e8f9ffff	                           jbe 0x4010bd7	      5049	dwarf.c	FUNCTION_47	FOR_1
0x40111ef	        0x4983fc01	                              cmp r12, 1	      5049	dwarf.c	FUNCTION_47	FOR_1
0x40111f3	         0xfb64501	               movzx eax, byte [rbp + 1]	      5049	dwarf.c	FUNCTION_47	FOR_1
0x40111f7	            0x757c	                           jne 0x4011275	      5049	dwarf.c	FUNCTION_47	FOR_1
0x40111f9	            0xeb7e	                           jmp 0x4011279	      5049	dwarf.c	FUNCTION_47	FOR_1
0x40111fb	       0xf1f440000	                   nop dword [rax + rax]	      5049	dwarf.c	FUNCTION_47	FOR_1
0x4011200	          0x4889de	                            mov rsi, rbx	      5051	dwarf.c	FUNCTION_47	FOR_1	CALL_2
0x4011203	          0x4c89f7	                            mov rdi, r14	      5051	dwarf.c	FUNCTION_47	FOR_1	CALL_2
0x4011206	        0x4983ec01	                              sub r12, 1	      5049	dwarf.c	FUNCTION_47	FOR_1
0x401120a	          0x4c29f6	                            sub rsi, r14	      5051	dwarf.c	FUNCTION_47	FOR_1	CALL_2
0x401120d	      0xe800000000	                          call 0x4011212	      5051	dwarf.c	FUNCTION_47	FOR_1	CALL_2
0x4011212	      0x4d8d740601	                lea r14, [r14 + rax + 1]	      5051	dwarf.c	FUNCTION_47	FOR_1	CALL_2
0x4011217	      0x488d74246c	                   lea rsi, [rsp + 0x6c]	       356	dwarf.c	FUNCTION_10	CALL_1
0x401121c	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x401121e	          0x4889d9	                            mov rcx, rbx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4011221	          0x4c89f7	                            mov rdi, r14	       356	dwarf.c	FUNCTION_10	CALL_1
0x4011224	      0xe800000000	                          call 0x4011229	       356	dwarf.c	FUNCTION_10	CALL_1
0x4011229	        0x8b44246c	            mov eax, dword [rsp + 0x6c] 	      5053	dwarf.c	FUNCTION_47	FOR_1
0x401122d	      0x488d74246c	                   lea rsi, [rsp + 0x6c]	       356	dwarf.c	FUNCTION_10	CALL_1
0x4011232	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4011234	          0x4889d9	                            mov rcx, rbx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4011237	          0x4901c6	                            add r14, rax	      5053	dwarf.c	FUNCTION_47	FOR_1
0x401123a	          0x4c89f7	                            mov rdi, r14	       356	dwarf.c	FUNCTION_10	CALL_1
0x401123d	      0xe800000000	                          call 0x4011242	       356	dwarf.c	FUNCTION_10	CALL_1
0x4011242	        0x8b44246c	            mov eax, dword [rsp + 0x6c] 	      5055	dwarf.c	FUNCTION_47	FOR_1
0x4011246	      0x488d74246c	                   lea rsi, [rsp + 0x6c]	       356	dwarf.c	FUNCTION_10	CALL_1
0x401124b	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x401124d	          0x4889d9	                            mov rcx, rbx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4011250	          0x4901c6	                            add r14, rax	      5055	dwarf.c	FUNCTION_47	FOR_1
0x4011253	          0x4c89f7	                            mov rdi, r14	       356	dwarf.c	FUNCTION_10	CALL_1
0x4011256	      0xe800000000	                          call 0x401125b	       356	dwarf.c	FUNCTION_10	CALL_1
0x401125b	        0x8b44246c	            mov eax, dword [rsp + 0x6c] 	      5057	dwarf.c	FUNCTION_47	FOR_1
0x401125f	          0x4901c6	                            add r14, rax	      5057	dwarf.c	FUNCTION_47	FOR_1
0x4011262	          0x4c39f3	                            cmp rbx, r14	      5049	dwarf.c	FUNCTION_47	FOR_1
0x4011265	     0xf866cf9ffff	                           jbe 0x4010bd7	      5049	dwarf.c	FUNCTION_47	FOR_1
0x401126b	        0x4983fc01	                              cmp r12, 1	      5049	dwarf.c	FUNCTION_47	FOR_1
0x401126f	        0x410fb606	                   movzx eax, byte [r14]	      5049	dwarf.c	FUNCTION_47	FOR_1
0x4011273	            0x7404	                            je 0x4011279	      5049	dwarf.c	FUNCTION_47	FOR_1
0x4011275	            0x84c0	                             test al, al	      5049	dwarf.c	FUNCTION_47	FOR_1
0x4011277	            0x7587	                           jne 0x4011200	      5049	dwarf.c	FUNCTION_47	FOR_1
0x4011279	            0x84c0	                             test al, al	      5059	dwarf.c	FUNCTION_47	IF_9
0x401127b	     0xf8456f9ffff	                            je 0x4010bd7	      5059	dwarf.c	FUNCTION_47	IF_9
0x4011281	          0x4889de	                            mov rsi, rbx	      5063	dwarf.c	FUNCTION_47	CALL_6
0x4011284	          0x4c89f7	                            mov rdi, r14	      5063	dwarf.c	FUNCTION_47	CALL_6
0x4011287	          0x4c29f6	                            sub rsi, r14	      5063	dwarf.c	FUNCTION_47	CALL_6
0x401128a	      0xe800000000	                          call 0x401128f	      5063	dwarf.c	FUNCTION_47	CALL_6
0x401128f	      0x498d7c0601	                lea rdi, [r14 + rax + 1]	      5063	dwarf.c	FUNCTION_47	CALL_6
0x4011294	          0x4839fb	                            cmp rbx, rdi	      5064	dwarf.c	FUNCTION_47	IF_10
0x4011297	     0xf863af9ffff	                           jbe 0x4010bd7	      5064	dwarf.c	FUNCTION_47	IF_10
0x401129d	      0x488d74246c	                   lea rsi, [rsp + 0x6c]	       356	dwarf.c	FUNCTION_10	CALL_1
0x40112a2	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x40112a4	          0x4889d9	                            mov rcx, rbx	       356	dwarf.c	FUNCTION_10	CALL_1
0x40112a7	      0xe800000000	                          call 0x40112ac	       356	dwarf.c	FUNCTION_10	CALL_1
0x40112ac	          0x4885c0	                           test rax, rax	      5067	dwarf.c	FUNCTION_47	IF_11
0x40112af	          0x4989c4	                            mov r12, rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x40112b2	     0xf84fe030000	                            je 0x40116b6	      5067	dwarf.c	FUNCTION_47	IF_11
0x40112b8	      0x488b6c2440	            mov rbp, qword [rsp + 0x40] 	      5069	dwarf.c	FUNCTION_47	FOR_2
0x40112bd	        0x4983fc01	                              cmp r12, 1	      5069	dwarf.c	FUNCTION_47	FOR_2
0x40112c1	         0xfb64500	                   movzx eax, byte [rbp]	      5069	dwarf.c	FUNCTION_47	FOR_2
0x40112c5	            0x763c	                           jbe 0x4011303	      5069	dwarf.c	FUNCTION_47	FOR_2
0x40112c7	            0x84c0	                             test al, al	      5069	dwarf.c	FUNCTION_47	FOR_2
0x40112c9	            0x750b	                           jne 0x40112d6	      5069	dwarf.c	FUNCTION_47	FOR_2
0x40112cb	            0xeb36	                           jmp 0x4011303	      5069	dwarf.c	FUNCTION_47	FOR_2
0x40112cd	           0xf1f00	                         nop dword [rax]	      5069	dwarf.c	FUNCTION_47	FOR_2
0x40112d0	        0x4983fc01	                              cmp r12, 1	      5069	dwarf.c	FUNCTION_47	FOR_2
0x40112d4	            0x7628	                           jbe 0x40112fe	      5069	dwarf.c	FUNCTION_47	FOR_2
0x40112d6	          0x4889de	                            mov rsi, rbx	      5070	dwarf.c	FUNCTION_47	CALL_8
0x40112d9	          0x4889ef	                            mov rdi, rbp	      5070	dwarf.c	FUNCTION_47	CALL_8
0x40112dc	        0x4983ec01	                              sub r12, 1	      5069	dwarf.c	FUNCTION_47	FOR_2
0x40112e0	          0x4829ee	                            sub rsi, rbp	      5070	dwarf.c	FUNCTION_47	CALL_8
0x40112e3	      0xe800000000	                          call 0x40112e8	      5070	dwarf.c	FUNCTION_47	CALL_8
0x40112e8	      0x488d6c0501	                lea rbp, [rbp + rax + 1]	      5070	dwarf.c	FUNCTION_47	CALL_8
0x40112ed	          0x4839eb	                            cmp rbx, rbp	      5069	dwarf.c	FUNCTION_47	FOR_2
0x40112f0	     0xf86e1f8ffff	                           jbe 0x4010bd7	      5069	dwarf.c	FUNCTION_47	FOR_2
0x40112f6	         0xfb64500	                   movzx eax, byte [rbp]	      5069	dwarf.c	FUNCTION_47	FOR_2
0x40112fa	            0x84c0	                             test al, al	      5069	dwarf.c	FUNCTION_47	FOR_2
0x40112fc	            0x75d2	                           jne 0x40112d0	      5069	dwarf.c	FUNCTION_47	FOR_2
0x40112fe	      0x48896c2440	             mov qword [rsp + 0x40], rbp	      5069	dwarf.c	FUNCTION_47	FOR_2
0x4011303	            0x84c0	                             test al, al	      5071	dwarf.c	FUNCTION_47	IF_12
0x4011305	     0xf84ccf8ffff	                            je 0x4010bd7	      5071	dwarf.c	FUNCTION_47	IF_12
0x401130b	      0x488b6c2440	            mov rbp, qword [rsp + 0x40] 	      5071	dwarf.c	FUNCTION_47	IF_12
0x4011310	      0xbb00000000	                              mov ebx, 0	      5216	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_3	CALL_27
0x4011315	      0xe9a4030000	                           jmp 0x40116be	      5216	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_3	CALL_27
0x401131a	    0x660f1f440000	                    nop word [rax + rax]	      5216	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_3	CALL_27
0x4011320	          0x4c89fe	                            mov rsi, r15	      5100	dwarf.c	FUNCTION_48	WHILE_1
0x4011323	          0x4c29f6	                            sub rsi, r14	      5100	dwarf.c	FUNCTION_48	WHILE_1
0x4011326	          0x8d46ff	                      lea eax, [rsi - 1]	      5100	dwarf.c	FUNCTION_48	WHILE_1
0x4011329	          0x83f807	                              cmp eax, 7	      5100	dwarf.c	FUNCTION_48	WHILE_1
0x401132c	     0xf87f4f3ffff	                            ja 0x4010726	      5100	dwarf.c	FUNCTION_48	WHILE_1
0x4011332	      0xe94ef4ffff	                           jmp 0x4010785	      5100	dwarf.c	FUNCTION_48	WHILE_1
0x4011337	    0x660f1f840000	                    nop word [rax + rax]	      5100	dwarf.c	FUNCTION_48	WHILE_1
0x4011340	          0x4c89fe	                            mov rsi, r15	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x4011343	          0x4829de	                            sub rsi, rbx	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x4011346	          0x8d46ff	                      lea eax, [rsi - 1]	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x4011349	          0x83f807	                              cmp eax, 7	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x401134c	     0xf875ff4ffff	                            ja 0x40107b1	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x4011352	      0xe94efcffff	                           jmp 0x4010fa5	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x4011357	    0x660f1f840000	                    nop word [rax + rax]	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x4011360	          0x4d39ef	                            cmp r15, r13	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x4011363	    0x48c744243000	               mov qword [rsp + 0x30], 0	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x401136c	     0xf8604fdffff	                           jbe 0x4011076	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x4011372	          0x4489fe	                           mov esi, r15d	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x4011375	          0x4429ee	                           sub esi, r13d	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x4011378	      0xe9dafcffff	                           jmp 0x4011057	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x401137d	           0xf1f00	                         nop dword [rax]	      5117	dwarf.c	FUNCTION_48	WHILE_1	IF_3
0x4011380	          0x4889ef	                            mov rdi, rbp	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x4011383	      0xbe01000000	                              mov esi, 1	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x4011388	    0xff1500000000	                 call qword [0x0401138e]	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x401138e	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	        90	string3.h	FUNCTION_132	CALL_6
0x4011393	          0x4889c2	                            mov rdx, rax	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x4011396	        0x8944245c	             mov dword [rsp + 0x5c], eax	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x401139a	      0xb900010000	                          mov ecx, 0x100	        90	string3.h	FUNCTION_132	CALL_6
0x401139f	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_132	CALL_6
0x40113a1	            0x85d2	                           test edx, edx	      5130	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5
0x40113a3	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_132	CALL_6
0x40113a6	     0xf8444020000	                            je 0x40115f0	      5130	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5
0x40113ac	      0xba05000000	                              mov edx, 5	      5132	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	CALL_11
0x40113b1	      0xbe00000000	                              mov esi, 0	      5132	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	CALL_11
0x40113b6	            0x31ff	                            xor edi, edi	      5132	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	CALL_11
0x40113b8	      0xe800000000	                          call 0x40113bd	      5132	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	CALL_11
0x40113bd	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40113c2	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40113c5	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40113c7	      0xe800000000	                          call 0x40113cc	       104	stdio2.h	CALL_16
0x40113cc	    0xc74424400000	               mov dword [rsp + 0x40], 0	       104	stdio2.h	CALL_16
0x40113d4	          0x4c89e9	                            mov rcx, r13	       104	stdio2.h	CALL_16
0x40113d7	        0x488d6901	                      lea rbp, [rcx + 1]	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x40113db	          0x4939ef	                            cmp r15, rbp	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x40113de	     0xf879c000000	                            ja 0x4011480	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x40113e4	          0x4939cf	                            cmp r15, rcx	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x40113e7	            0x7612	                           jbe 0x40113fb	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x40113e9	          0x4c89fe	                            mov rsi, r15	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x40113ec	          0x4829ce	                            sub rsi, rcx	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x40113ef	          0x8d46ff	                      lea eax, [rsi - 1]	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x40113f2	          0x83f807	                              cmp eax, 7	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x40113f5	     0xf868a000000	                           jbe 0x4011485	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x40113fb	      0x488d442470	                   lea rax, [rsp + 0x70]	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x4011400	            0x31db	                            xor ebx, ebx	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x4011402	      0x488d742468	                   lea rsi, [rsp + 0x68]	       356	dwarf.c	FUNCTION_10	CALL_1
0x4011407	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4011409	          0x4c89f9	                            mov rcx, r15	       356	dwarf.c	FUNCTION_10	CALL_1
0x401140c	          0x488928	                    mov qword [rax], rbp	      5136	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x401140f	          0x4889ef	                            mov rdi, rbp	       356	dwarf.c	FUNCTION_10	CALL_1
0x4011412	      0xe800000000	                          call 0x4011417	       356	dwarf.c	FUNCTION_10	CALL_1
0x4011417	        0x8b4c2468	            mov ecx, dword [rsp + 0x68] 	      5138	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x401141b	          0x4989c6	                            mov r14, rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x401141e	      0xba05000000	                              mov edx, 5	      5140	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	CALL_13
0x4011423	          0x4801e9	                            add rcx, rbp	      5138	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x4011426	          0x4885c0	                           test rax, rax	      5139	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	IF_6
0x4011429	      0x48894c2408	                mov qword [rsp + 8], rcx	      5139	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	IF_6
0x401142e	            0x7570	                           jne 0x40114a0	      5139	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	IF_6
0x4011430	      0xbe00000000	                              mov esi, 0	      5140	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	CALL_13
0x4011435	            0x31ff	                            xor edi, edi	      5140	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	CALL_13
0x4011437	      0xe800000000	                          call 0x401143c	      5140	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	CALL_13
0x401143c	            0x89da	                            mov edx, ebx	       104	stdio2.h	CALL_16
0x401143e	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4011441	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4011446	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4011448	      0xe800000000	                          call 0x401144d	       104	stdio2.h	CALL_16
0x401144d	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       104	stdio2.h	CALL_16
0x4011452	      0x8344244001	               add dword [rsp + 0x40], 1	      5133	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x4011457	        0x8b442440	            mov eax, dword [rsp + 0x40] 	      5133	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x401145b	        0x3b44245c	            cmp eax, dword [rsp + 0x5c] 	      5133	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x401145f	     0xf8572ffffff	                           jne 0x40113d7	      5133	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x4011465	      0x488d442470	                   lea rax, [rsp + 0x70]	      5129	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x401146a	          0x4989cd	                            mov r13, rcx	      5129	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x401146d	      0x4889442428	             mov qword [rsp + 0x28], rax	      5129	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x4011472	      0xe9c8f3ffff	                           jmp 0x401083f	      5129	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x4011477	    0x660f1f840000	                    nop word [rax + rax]	      5129	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x4011480	      0xbe01000000	                              mov esi, 1	      5129	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x4011485	          0x4889cf	                            mov rdi, rcx	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x4011488	    0xff1500000000	                 call qword [0x0401148e]	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x401148e	            0x89c3	                            mov ebx, eax	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x4011490	            0x89c0	                            mov eax, eax	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x4011492	      0x488d44c470	          lea rax, [rsp + rax*8 + 0x70] 	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x4011497	      0xe966ffffff	                           jmp 0x4011402	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x401149c	         0xf1f4000	                         nop dword [rax]	      5135	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1
0x40114a0	      0xbe00000000	                              mov esi, 0	      5143	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	CALL_14
0x40114a5	            0x31ff	                            xor edi, edi	      5143	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	CALL_14
0x40114a7	      0xe800000000	                          call 0x40114ac	      5143	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	CALL_14
0x40114ac	            0x89da	                            mov edx, ebx	       104	stdio2.h	CALL_16
0x40114ae	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40114b1	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40114b6	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40114b8	            0x31db	                            xor ebx, ebx	       104	stdio2.h	CALL_16
0x40114ba	      0xe800000000	                          call 0x40114bf	       104	stdio2.h	CALL_16
0x40114bf	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       104	stdio2.h	CALL_16
0x40114c4	        0x498d46ff	                      lea rax, [r14 - 1]	       104	stdio2.h	CALL_16
0x40114c8	      0x4c89742410	             mov qword [rsp + 0x10], r14	       104	stdio2.h	CALL_16
0x40114cd	      0x4889442408	                mov qword [rsp + 8], rax	       104	stdio2.h	CALL_16
0x40114d2	          0x4989cc	                            mov r12, rcx	       104	stdio2.h	CALL_16
0x40114d5	          0x4889cf	                            mov rdi, rcx	       104	stdio2.h	CALL_16
0x40114d8	            0xeb72	                           jmp 0x401154c	       104	stdio2.h	CALL_16
0x40114da	    0x660f1f440000	                    nop word [rax + rax]	       104	stdio2.h	CALL_16
0x40114e0	          0x4d39e7	                            cmp r15, r12	      5148	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x40114e3	            0x760e	                           jbe 0x40114f3	      5148	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x40114e5	          0x4c89fe	                            mov rsi, r15	      5148	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x40114e8	          0x4c29e6	                            sub rsi, r12	      5148	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x40114eb	          0x8d46ff	                      lea eax, [rsi - 1]	      5148	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x40114ee	          0x83f807	                              cmp eax, 7	      5148	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x40114f1	            0x7667	                           jbe 0x401155a	      5148	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x40114f3	      0x483b5c2408	                cmp rbx, qword [rsp + 8]	      5149	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	CALL_15
0x40114f8	     0xf843e020000	                            je 0x401173c	      5149	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	CALL_15
0x40114fe	            0x31ff	                            xor edi, edi	      5149	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	CALL_15
0x4011500	          0x4531f6	                          xor r14d, r14d	       104	stdio2.h	CALL_16
0x4011503	          0x4531ed	                          xor r13d, r13d	       104	stdio2.h	CALL_16
0x4011506	      0xe8d508ffff	                  call sym.get_FORM_name	      5149	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	CALL_15
0x401150b	      0xb900000000	                              mov ecx, 0	       104	stdio2.h	CALL_16
0x4011510	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_16
0x4011513	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4011518	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x401151d	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x401151f	      0xe800000000	                          call 0x4011524	       104	stdio2.h	CALL_16
0x4011524	      0xb801000000	                              mov eax, 1	       104	stdio2.h	CALL_16
0x4011529	          0x4489f1	                           mov ecx, r14d	       104	stdio2.h	CALL_16
0x401152c	          0x48d3e0	                             shl rax, cl	       104	stdio2.h	CALL_16
0x401152f	      0xa9f8ff8000	                      test eax, 0x80fff8	       104	stdio2.h	CALL_16
0x4011534	            0x747d	                            je 0x40115b3	       104	stdio2.h	CALL_16
0x4011536	        0x4883c301	                              add rbx, 1	      5144	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x401153a	        0x4983c401	                              add r12, 1	      5144	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x401153e	      0x483b5c2410	            cmp rbx, qword [rsp + 0x10] 	      5144	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x4011543	          0x4889ef	                            mov rdi, rbp	      5148	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x4011546	     0xf843d010000	                            je 0x4011689	      5144	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x401154c	        0x488d6f01	                      lea rbp, [rdi + 1]	      5148	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x4011550	          0x4939ef	                            cmp r15, rbp	      5148	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x4011553	            0x768b	                           jbe 0x40114e0	      5148	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x4011555	      0xbe01000000	                              mov esi, 1	      5148	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x401155a	    0xff1500000000	                 call qword [0x04011560]	      5148	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x4011560	      0x483b5c2408	                cmp rbx, qword [rsp + 8]	      5149	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	CALL_15
0x4011565	          0x4989c0	                             mov r8, rax	      5148	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x4011568	          0x4189c6	                           mov r14d, eax	      5148	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x401156b	          0x4189c5	                           mov r13d, eax	      5148	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2
0x401156e	     0xf84be010000	                            je 0x4011732	      5149	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	CALL_15
0x4011574	      0xb900000000	                              mov ecx, 0	      5149	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	CALL_15
0x4011579	          0x4c89ef	                            mov rdi, r13	      5149	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	CALL_15
0x401157c	      0x4c89442428	              mov qword [rsp + 0x28], r8	      5149	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	CALL_15
0x4011581	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      5149	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	CALL_15
0x4011586	      0xe85508ffff	                  call sym.get_FORM_name	      5149	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	CALL_15
0x401158b	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       104	stdio2.h	CALL_16
0x4011590	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_16
0x4011593	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4011598	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x401159a	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x401159f	      0xe800000000	                          call 0x40115a4	       104	stdio2.h	CALL_16
0x40115a4	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	       104	stdio2.h	CALL_16
0x40115a9	        0x4183f817	                           cmp r8d, 0x17	       104	stdio2.h	CALL_16
0x40115ad	     0xf8671ffffff	                           jbe 0x4011524	       104	stdio2.h	CALL_16
0x40115b3	          0x4d89e9	                             mov r9, r13	       104	stdio2.h	CALL_16
0x40115b6	          0x4c89cf	                             mov rdi, r9	      5169	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	SWITCH_1	CALL_17
0x40115b9	      0xe82208ffff	                  call sym.get_FORM_name	      5169	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	SWITCH_1	CALL_17
0x40115be	      0xba05000000	                              mov edx, 5	      5169	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	SWITCH_1	CALL_17
0x40115c3	          0x4889c3	                            mov rbx, rax	      5169	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	SWITCH_1	CALL_17
0x40115c6	      0xbe00000000	                              mov esi, 0	      5169	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	SWITCH_1	CALL_17
0x40115cb	      0xe969f1ffff	                           jmp 0x4010739	      5169	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	SWITCH_1	CALL_17
0x40115d0	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x40115d5	      0xe800000000	                          call 0x40115da	       104	stdio2.h	CALL_16
0x40115da	          0x4d39f7	                            cmp r15, r14	      5092	dwarf.c	FUNCTION_48	WHILE_1
0x40115dd	     0xf8729f1ffff	                            ja 0x401070c	      5092	dwarf.c	FUNCTION_48	WHILE_1
0x40115e3	      0xe942f7ffff	                           jmp 0x4010d2a	      5092	dwarf.c	FUNCTION_48	WHILE_1
0x40115e8	     0xf1f84000000	                   nop dword [rax + rax]	      5092	dwarf.c	FUNCTION_48	WHILE_1
0x40115f0	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x40115f5	      0xe800000000	                          call 0x40115fa	       104	stdio2.h	CALL_16
0x40115fa	      0x488d442470	                   lea rax, [rsp + 0x70]	      5129	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x40115ff	      0x4889442428	             mov qword [rsp + 0x28], rax	      5129	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x4011604	      0xe949f2ffff	                           jmp 0x4010852	      5129	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x4011609	          0x4c89ed	                            mov rbp, r13	      5108	dwarf.c	FUNCTION_48	WHILE_1
0x401160c	    0x48c744243000	               mov qword [rsp + 0x30], 0	      5097	dwarf.c	FUNCTION_48	WHILE_1
0x4011615	      0xe981faffff	                           jmp 0x401109b	      5097	dwarf.c	FUNCTION_48	WHILE_1
0x401161a	          0x4889de	                            mov rsi, rbx	      5005	dwarf.c	FUNCTION_47
0x401161d	          0x4c29f6	                            sub rsi, r14	      5005	dwarf.c	FUNCTION_47
0x4011620	          0x8d4eff	                      lea ecx, [rsi - 1]	      5005	dwarf.c	FUNCTION_47
0x4011623	          0x83f907	                              cmp ecx, 7	      5005	dwarf.c	FUNCTION_47
0x4011626	     0xf86fbf7ffff	                           jbe 0x4010e27	      5005	dwarf.c	FUNCTION_47
0x401162c	      0xb904000000	                              mov ecx, 4	      5005	dwarf.c	FUNCTION_47
0x4011631	    0x41be04000000	                             mov r14d, 4	      5015	dwarf.c	FUNCTION_47	ELSE_1
0x4011637	      0xe9bbfaffff	                           jmp 0x40110f7	      5015	dwarf.c	FUNCTION_47	ELSE_1
0x401163c	          0x4839eb	                            cmp rbx, rbp	      5009	dwarf.c	FUNCTION_47	IF_2
0x401163f	     0xf87b4000000	                            ja 0x40116f9	      5009	dwarf.c	FUNCTION_47	IF_2
0x4011645	          0x4c89f5	                            mov rbp, r14	      5009	dwarf.c	FUNCTION_47	IF_2
0x4011648	    0x488b05000000	            mov rax, qword [0x0401164f] 	      5009	dwarf.c	FUNCTION_47	IF_2
0x401164f	      0xb90c000000	                            mov ecx, 0xc	      5009	dwarf.c	FUNCTION_47	IF_2
0x4011654	    0x41be08000000	                             mov r14d, 8	      5010	dwarf.c	FUNCTION_47	IF_2
0x401165a	      0xe998faffff	                           jmp 0x40110f7	      5010	dwarf.c	FUNCTION_47	IF_2
0x401165f	              0x90	                                     nop	      5010	dwarf.c	FUNCTION_47	IF_2
0x4011660	      0xbe02000000	                              mov esi, 2	      5022	dwarf.c	FUNCTION_47
0x4011665	      0xe9c6faffff	                           jmp 0x4011130	      5022	dwarf.c	FUNCTION_47
0x401166a	    0x660f1f440000	                    nop word [rax + rax]	      5022	dwarf.c	FUNCTION_47
0x4011670	      0xbe01000000	                              mov esi, 1	      5030	dwarf.c	FUNCTION_47
0x4011675	      0xe916fbffff	                           jmp 0x4011190	      5030	dwarf.c	FUNCTION_47
0x401167a	        0x488d4804	                      lea rcx, [rax + 4]	      5030	dwarf.c	FUNCTION_47
0x401167e	    0x41be04000000	                             mov r14d, 4	      5015	dwarf.c	FUNCTION_47	ELSE_1
0x4011684	      0xe9ddf7ffff	                           jmp 0x4010e66	      5015	dwarf.c	FUNCTION_47	ELSE_1
0x4011689	          0x4889e9	                            mov rcx, rbp	      5015	dwarf.c	FUNCTION_47	ELSE_1
0x401168c	      0xe9c1fdffff	                           jmp 0x4011452	      5015	dwarf.c	FUNCTION_47	ELSE_1
0x4011691	      0xba05000000	                              mov edx, 5	      5294	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_11	CALL_48
0x4011696	      0xbe00000000	                              mov esi, 0	      5294	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_11	CALL_48
0x401169b	            0x31ff	                            xor edi, edi	      5294	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_11	CALL_48
0x401169d	      0xe800000000	                          call 0x40116a2	      5294	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_11	CALL_48
0x40116a2	          0x4489ee	                           mov esi, r13d	      5294	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_11	CALL_48
0x40116a5	          0x4889c7	                            mov rdi, rax	      5294	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_11	CALL_48
0x40116a8	            0x31c0	                            xor eax, eax	      5294	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_11	CALL_48
0x40116aa	      0xe800000000	                          call 0x40116af	      5294	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_11	CALL_48
0x40116af	            0x31c0	                            xor eax, eax	      5295	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_11
0x40116b1	      0xe999f0ffff	                           jmp 0x401074f	      5295	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	IF_11
0x40116b6	      0xbb00000000	                              mov ebx, 0	      5216	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_3	CALL_27
0x40116bb	          0x4889dd	                            mov rbp, rbx	      5216	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_3	CALL_27
0x40116be	      0xba05000000	                              mov edx, 5	      5216	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_3	CALL_27
0x40116c3	      0xbe00000000	                              mov esi, 0	      5216	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_3	CALL_27
0x40116c8	            0x31ff	                            xor edi, edi	      5216	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_3	CALL_27
0x40116ca	      0xe800000000	                          call 0x40116cf	      5216	dwarf.c	FUNCTION_48	WHILE_1	WHILE_2	SWITCH_2	ELSE_3	CALL_27
0x40116cf	        0x4883ec08	                              sub rsp, 8	       104	stdio2.h	CALL_16
0x40116d3	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40116d6	          0x4989d9	                             mov r9, rbx	       104	stdio2.h	CALL_16
0x40116d9	            0x4156	                                push r14	       104	stdio2.h	CALL_16
0x40116db	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	       104	stdio2.h	CALL_16
0x40116df	          0x4989e8	                             mov r8, rbp	       104	stdio2.h	CALL_16
0x40116e2	        0x8b542428	            mov edx, dword [rsp + 0x28] 	       104	stdio2.h	CALL_16
0x40116e6	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40116eb	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40116ed	      0xe800000000	                          call 0x40116f2	       104	stdio2.h	CALL_16
0x40116f2	              0x5a	                                 pop rdx	       104	stdio2.h	CALL_16
0x40116f3	              0x59	                                 pop rcx	       104	stdio2.h	CALL_16
0x40116f4	      0xe9dbf3ffff	                           jmp 0x4010ad4	       104	stdio2.h	CALL_16
0x40116f9	          0x4889de	                            mov rsi, rbx	      5009	dwarf.c	FUNCTION_47	IF_2
0x40116fc	          0x4829ee	                            sub rsi, rbp	      5009	dwarf.c	FUNCTION_47	IF_2
0x40116ff	          0x8d46ff	                      lea eax, [rsi - 1]	      5009	dwarf.c	FUNCTION_47	IF_2
0x4011702	          0x83f807	                              cmp eax, 7	      5009	dwarf.c	FUNCTION_47	IF_2
0x4011705	     0xf8645f7ffff	                           jbe 0x4010e50	      5009	dwarf.c	FUNCTION_47	IF_2
0x401170b	          0x4c89f5	                            mov rbp, r14	      5009	dwarf.c	FUNCTION_47	IF_2
0x401170e	    0x488b05000000	            mov rax, qword [0x04011715] 	      5009	dwarf.c	FUNCTION_47	IF_2
0x4011715	    0x41be08000000	                             mov r14d, 8	      5010	dwarf.c	FUNCTION_47	IF_2
0x401171b	      0xb90c000000	                            mov ecx, 0xc	      5018	dwarf.c	FUNCTION_47	IF_3
0x4011720	      0xe9d2f9ffff	                           jmp 0x40110f7	      5018	dwarf.c	FUNCTION_47	IF_3
0x4011725	    0xc74424240400	               mov dword [rsp + 0x24], 4	      5095	dwarf.c	FUNCTION_48	WHILE_1
0x401172d	      0xe99af8ffff	                           jmp 0x4010fcc	      5095	dwarf.c	FUNCTION_48	WHILE_1
0x4011732	      0xb900000000	                              mov ecx, 0	      5149	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	CALL_15
0x4011737	      0xe93dfeffff	                           jmp 0x4011579	      5149	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	CALL_15
0x401173c	            0x31ff	                            xor edi, edi	      5149	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	CALL_15
0x401173e	      0xe89d06ffff	                  call sym.get_FORM_name	      5149	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	CALL_15
0x4011743	      0xb900000000	                              mov ecx, 0	       104	stdio2.h	CALL_16
0x4011748	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_16
0x401174b	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4011750	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4011755	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4011757	      0xe800000000	                          call 0x401175c	       104	stdio2.h	CALL_16
0x401175c	          0x4531c9	                            xor r9d, r9d	      5149	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	CALL_15
0x401175f	      0xe952feffff	                           jmp 0x40115b6	      5149	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	CALL_15
0x4011764	            0x89c6	                            mov esi, eax	      5149	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	CALL_15
0x4011766	      0xe915f8ffff	                           jmp 0x4010f80	      5149	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	CALL_15
0x401176b	          0x4989ed	                            mov r13, rbp	      5149	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5	FOR_1	ELSE_1	FOR_2	CALL_15
0x401176e	    0x48c744242800	               mov qword [rsp + 0x28], 0	      5098	dwarf.c	FUNCTION_48	WHILE_1
0x4011777	      0xe9c3f0ffff	                           jmp 0x401083f	      5098	dwarf.c	FUNCTION_48	WHILE_1
0x401177c	          0x4889ef	                            mov rdi, rbp	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x401177f	    0xff1500000000	                 call qword [0x04011785]	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x4011785	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	        90	string3.h	FUNCTION_132	CALL_6
0x401178a	          0x4889c2	                            mov rdx, rax	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x401178d	        0x8944245c	             mov dword [rsp + 0x5c], eax	      5126	dwarf.c	FUNCTION_48	WHILE_1	IF_4
0x4011791	      0xb900010000	                          mov ecx, 0x100	        90	string3.h	FUNCTION_132	CALL_6
0x4011796	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_132	CALL_6
0x4011798	            0x85d2	                           test edx, edx	      5130	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5
0x401179a	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_132	CALL_6
0x401179d	     0xf8509fcffff	                           jne 0x40113ac	      5130	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5
0x40117a3	      0xe91ff9ffff	                           jmp 0x40110c7	      5130	dwarf.c	FUNCTION_48	WHILE_1	IF_4	IF_5
0x40117a8	      0xe800000000	                          call 0x40117ad	      5334	dwarf.c	FUNCTION_48
comp_addr_base	ELSE,0:FOR,0:CALL,0:WHILE,0:DO,0:functions,0:SWITCH,0:IF,0	3
0x4000090	        0x488b4720	            mov rax, qword [rdi + 0x20] 	      6435	dwarf.c	FUNCTION_63
0x4000094	          0x2b4620	             sub eax, dword [rsi + 0x20]	      6435	dwarf.c	FUNCTION_63
0x4000097	              0xc3	                                     ret	      6436	dwarf.c	FUNCTION_63
display_debug_pubnames	ELSE,0:FOR,0:CALL,1:WHILE,0:DO,0:functions,0:SWITCH,0:IF,0	2
0x400ef00	            0x31d2	                            xor edx, edx	      4895	dwarf.c	FUNCTION_44	CALL_1
0x400ef02	      0xe929f9ffff	   jmp sym.display_debug_pubnames_worker	      4895	dwarf.c	FUNCTION_44	CALL_1
read_leb128	ELSE,0:FOR,0:CALL,0:WHILE,1:DO,0:functions,0:SWITCH,0:IF,4	63
0x40040d0	          0x4839cf	                            cmp rdi, rcx	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40040d3	              0x53	                                push rbx	       310	dwarf.c	FUNCTION_8
0x40040d4	     0xf83a7000000	                           jae 0x4004181	       316	dwarf.c	FUNCTION_8	WHILE_1
0x40040da	        0x440fb617	                  movzx r10d, byte [rdi]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40040de	        0x4c8d4701	                       lea r8, [rdi + 1]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x40040e2	          0x4c89d0	                            mov rax, r10	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40040e5	          0x83e07f	                           and eax, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x40040e8	          0x4584d2	                         test r10b, r10b	       324	dwarf.c	FUNCTION_8	WHILE_1	IF_1
0x40040eb	     0xf89a1000000	                           jns 0x4004192	       324	dwarf.c	FUNCTION_8	WHILE_1	IF_1
0x40040f1	          0x4889cb	                            mov rbx, rcx	       324	dwarf.c	FUNCTION_8	WHILE_1	IF_1
0x40040f4	        0x4883c70a	                            add rdi, 0xa	       324	dwarf.c	FUNCTION_8	WHILE_1	IF_1
0x40040f8	      0xb907000000	                              mov ecx, 7	       324	dwarf.c	FUNCTION_8	WHILE_1	IF_1
0x40040fd	    0x41bb01000000	                             mov r11d, 1	       324	dwarf.c	FUNCTION_8	WHILE_1	IF_1
0x4004103	       0xf1f440000	                   nop dword [rax + rax]	       324	dwarf.c	FUNCTION_8	WHILE_1	IF_1
0x4004108	          0x4c39c3	                             cmp rbx, r8	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400410b	            0x745b	                            je 0x4004168	       316	dwarf.c	FUNCTION_8	WHILE_1
0x400410d	        0x4983c001	                               add r8, 1	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004111	      0x450fb650ff	               movzx r10d, byte [r8 - 1]	       318	dwarf.c	FUNCTION_8	WHILE_1
0x4004116	        0x4183c301	                             add r11d, 1	       319	dwarf.c	FUNCTION_8	WHILE_1
0x400411a	          0x4d89d1	                             mov r9, r10	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400411d	        0x4183e17f	                           and r9d, 0x7f	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004121	          0x49d3e1	                              shl r9, cl	       321	dwarf.c	FUNCTION_8	WHILE_1
0x4004124	          0x83c107	                              add ecx, 7	       323	dwarf.c	FUNCTION_8	WHILE_1
0x4004127	          0x4c09c8	                              or rax, r9	       321	dwarf.c	FUNCTION_8	WHILE_1
0x400412a	          0x4584d2	                         test r10b, r10b	       324	dwarf.c	FUNCTION_8	WHILE_1	IF_1
0x400412d	            0x7949	                           jns 0x4004178	       324	dwarf.c	FUNCTION_8	WHILE_1	IF_1
0x400412f	          0x4939f8	                             cmp r8, rdi	       329	dwarf.c	FUNCTION_8	WHILE_1	IF_2
0x4004132	            0x75d4	                           jne 0x4004108	       329	dwarf.c	FUNCTION_8	WHILE_1	IF_2
0x4004134	          0x4885f6	                           test rsi, rsi	       333	dwarf.c	FUNCTION_8	IF_3
0x4004137	            0x7426	                            je 0x400415f	       333	dwarf.c	FUNCTION_8	IF_3
0x4004139	          0x83f93f	                           cmp ecx, 0x3f	       333	dwarf.c	FUNCTION_8	IF_3
0x400413c	        0x400f96c7	                               setbe dil	       333	dwarf.c	FUNCTION_8	IF_3
0x4004140	          0x44891e	                   mov dword [rsi], r11d	       334	dwarf.c	FUNCTION_8	IF_3
0x4004143	            0x85d2	                           test edx, edx	       336	dwarf.c	FUNCTION_8	IF_4
0x4004145	            0x7418	                            je 0x400415f	       336	dwarf.c	FUNCTION_8	IF_4
0x4004147	          0x4084ff	                           test dil, dil	       336	dwarf.c	FUNCTION_8	IF_4
0x400414a	            0x7413	                            je 0x400415f	       336	dwarf.c	FUNCTION_8	IF_4
0x400414c	        0x4183e240	                          and r10d, 0x40	       336	dwarf.c	FUNCTION_8	IF_4
0x4004150	            0x740d	                            je 0x400415f	       336	dwarf.c	FUNCTION_8	IF_4
0x4004152	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       337	dwarf.c	FUNCTION_8	IF_4
0x4004159	          0x48d3e2	                             shl rdx, cl	       337	dwarf.c	FUNCTION_8	IF_4
0x400415c	          0x4809d0	                             or rax, rdx	       337	dwarf.c	FUNCTION_8	IF_4
0x400415f	              0x5b	                                 pop rbx	       340	dwarf.c	FUNCTION_8
0x4004160	              0xc3	                                     ret	       340	dwarf.c	FUNCTION_8
0x4004161	     0xf1f80000000	                         nop dword [rax]	       340	dwarf.c	FUNCTION_8
0x4004168	      0xbf01000000	                              mov edi, 1	       340	dwarf.c	FUNCTION_8
0x400416d	          0x4885f6	                           test rsi, rsi	       333	dwarf.c	FUNCTION_8	IF_3
0x4004170	            0x75ce	                           jne 0x4004140	       333	dwarf.c	FUNCTION_8	IF_3
0x4004172	            0xebcf	                           jmp 0x4004143	       333	dwarf.c	FUNCTION_8	IF_3
0x4004174	         0xf1f4000	                         nop dword [rax]	       333	dwarf.c	FUNCTION_8	IF_3
0x4004178	          0x83f93f	                           cmp ecx, 0x3f	       333	dwarf.c	FUNCTION_8	IF_3
0x400417b	        0x400f96c7	                               setbe dil	       333	dwarf.c	FUNCTION_8	IF_3
0x400417f	            0xebec	                           jmp 0x400416d	       333	dwarf.c	FUNCTION_8	IF_3
0x4004181	      0xbf01000000	                              mov edi, 1	       316	dwarf.c	FUNCTION_8	WHILE_1
0x4004186	          0x4531d2	                          xor r10d, r10d	       314	dwarf.c	FUNCTION_8
0x4004189	            0x31c9	                            xor ecx, ecx	       313	dwarf.c	FUNCTION_8
0x400418b	          0x4531db	                          xor r11d, r11d	       312	dwarf.c	FUNCTION_8
0x400418e	            0x31c0	                            xor eax, eax	       311	dwarf.c	FUNCTION_8
0x4004190	            0xebdb	                           jmp 0x400416d	       311	dwarf.c	FUNCTION_8
0x4004192	      0xbf01000000	                              mov edi, 1	       324	dwarf.c	FUNCTION_8	WHILE_1	IF_1
0x4004197	      0xb907000000	                              mov ecx, 7	       323	dwarf.c	FUNCTION_8	WHILE_1
0x400419c	    0x41bb01000000	                             mov r11d, 1	       319	dwarf.c	FUNCTION_8	WHILE_1
0x40041a2	            0xebc9	                           jmp 0x400416d	       319	dwarf.c	FUNCTION_8	WHILE_1
dwarf_select_sections_by_letters	ELSE,0:FOR,0:CALL,2:WHILE,1:DO,0:functions,0:SWITCH,1:IF,0	94
0x4018280	              0x55	                                push rbp	     10122	dwarf.c	FUNCTION_110
0x4018281	              0x53	                                push rbx	     10122	dwarf.c	FUNCTION_110
0x4018282	          0x4889fd	                            mov rbp, rdi	     10122	dwarf.c	FUNCTION_110
0x4018285	            0x31db	                            xor ebx, ebx	     10123	dwarf.c	FUNCTION_110
0x4018287	        0x4883ec08	                              sub rsp, 8	     10122	dwarf.c	FUNCTION_110
0x401828b	       0xf1f440000	                   nop dword [rax + rax]	     10122	dwarf.c	FUNCTION_110
0x4018290	            0x89d8	                            mov eax, ebx	     10125	dwarf.c	FUNCTION_110	WHILE_1
0x4018292	       0xfb6440500	             movzx eax, byte [rbp + rax]	     10125	dwarf.c	FUNCTION_110	WHILE_1
0x4018297	            0x84c0	                             test al, al	     10125	dwarf.c	FUNCTION_110	WHILE_1
0x4018299	            0x743c	                            je 0x40182d7	     10125	dwarf.c	FUNCTION_110	WHILE_1
0x401829b	          0x83e841	                           sub eax, 0x41	     10126	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x401829e	          0x83c301	                              add ebx, 1	     10126	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40182a1	            0x3c34	                            cmp al, 0x34	     10126	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40182a3	     0xf8767010000	                            ja 0x4018410	     10126	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40182a9	           0xfb6c0	                           movzx eax, al	     10126	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40182ac	    0xff24c5000000	                       jmp qword [rax*8]	     10126	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40182b3	       0xf1f440000	                   nop dword [rax + rax]	     10126	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40182b8	    0xc70500000000	               mov dword [0x040182c2], 1	     10131	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40182c2	            0x89d8	                            mov eax, ebx	     10125	dwarf.c	FUNCTION_110	WHILE_1
0x40182c4	    0xc70500000000	               mov dword [0x040182ce], 1	     10132	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40182ce	       0xfb6440500	             movzx eax, byte [rbp + rax]	     10125	dwarf.c	FUNCTION_110	WHILE_1
0x40182d3	            0x84c0	                             test al, al	     10125	dwarf.c	FUNCTION_110	WHILE_1
0x40182d5	            0x75c4	                           jne 0x401829b	     10125	dwarf.c	FUNCTION_110	WHILE_1
0x40182d7	        0x4883c408	                              add rsp, 8	     10154	dwarf.c	FUNCTION_110
0x40182db	              0x5b	                                 pop rbx	     10154	dwarf.c	FUNCTION_110
0x40182dc	              0x5d	                                 pop rbp	     10154	dwarf.c	FUNCTION_110
0x40182dd	              0xc3	                                     ret	     10154	dwarf.c	FUNCTION_110
0x40182de	            0x6690	                                     nop	     10154	dwarf.c	FUNCTION_110
0x40182e0	    0xc70500000000	               mov dword [0x040182ea], 1	     10148	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40182ea	            0xeba4	                           jmp 0x4018290	     10148	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40182ec	         0xf1f4000	                         nop dword [rax]	     10148	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40182f0	    0xc70500000000	               mov dword [0x040182fa], 1	     10146	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40182fa	            0xeb94	                           jmp 0x4018290	     10146	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40182fc	         0xf1f4000	                         nop dword [rax]	     10146	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4018300	    0xc70500000000	               mov dword [0x0401830a], 1	     10144	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x401830a	            0xeb84	                           jmp 0x4018290	     10144	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x401830c	         0xf1f4000	                         nop dword [rax]	     10144	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4018310	    0xc70500000000	               mov dword [0x0401831a], 1	     10143	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x401831a	      0xe971ffffff	                           jmp 0x4018290	     10143	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x401831f	              0x90	                                     nop	     10143	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4018320	    0xc70500000000	               mov dword [0x0401832a], 1	     10141	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x401832a	      0xe961ffffff	                           jmp 0x4018290	     10141	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x401832f	              0x90	                                     nop	     10141	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4018330	    0xc70500000000	               mov dword [0x0401833a], 1	     10140	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x401833a	      0xe951ffffff	                           jmp 0x4018290	     10140	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x401833f	              0x90	                                     nop	     10140	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4018340	    0xc70500000000	               mov dword [0x0401834a], 1	     10139	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x401834a	      0xe941ffffff	                           jmp 0x4018290	     10139	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x401834f	              0x90	                                     nop	     10139	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4018350	    0x830d00000000	                or dword [0x04018357], 1	     10137	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4018357	      0xe934ffffff	                           jmp 0x4018290	     10137	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x401835c	         0xf1f4000	                         nop dword [rax]	     10137	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4018360	    0xc70500000000	               mov dword [0x0401836a], 1	     10136	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x401836a	      0xe921ffffff	                           jmp 0x4018290	     10136	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x401836f	              0x90	                                     nop	     10136	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4018370	    0xc70500000000	               mov dword [0x0401837a], 1	     10134	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x401837a	      0xe911ffffff	                           jmp 0x4018290	     10134	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x401837f	              0x90	                                     nop	     10134	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4018380	    0xc70500000000	               mov dword [0x0401838a], 1	     10133	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x401838a	      0xe901ffffff	                           jmp 0x4018290	     10133	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x401838f	              0x90	                                     nop	     10133	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4018390	    0xc70500000000	               mov dword [0x0401839a], 1	     10130	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x401839a	      0xe9f1feffff	                           jmp 0x4018290	     10130	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x401839f	              0x90	                                     nop	     10130	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40183a0	    0xc70500000000	               mov dword [0x040183aa], 1	     10129	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40183aa	      0xe9e1feffff	                           jmp 0x4018290	     10129	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40183af	              0x90	                                     nop	     10129	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40183b0	    0xc70500000000	               mov dword [0x040183ba], 1	     10147	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40183ba	      0xe9d1feffff	                           jmp 0x4018290	     10147	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40183bf	              0x90	                                     nop	     10147	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40183c0	    0xc70500000000	               mov dword [0x040183ca], 1	     10145	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40183ca	      0xe9c1feffff	                           jmp 0x4018290	     10145	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40183cf	              0x90	                                     nop	     10145	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40183d0	    0xc70500000000	               mov dword [0x040183da], 1	     10142	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40183da	      0xe9b1feffff	                           jmp 0x4018290	     10142	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40183df	              0x90	                                     nop	     10142	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40183e0	    0x830d00000000	                or dword [0x040183e7], 2	     10138	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40183e7	      0xe9a4feffff	                           jmp 0x4018290	     10138	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40183ec	         0xf1f4000	                         nop dword [rax]	     10138	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40183f0	    0xc70500000000	               mov dword [0x040183fa], 1	     10135	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40183fa	      0xe991feffff	                           jmp 0x4018290	     10135	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x40183ff	              0x90	                                     nop	     10135	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4018400	    0xc70500000000	               mov dword [0x0401840a], 1	     10128	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x401840a	      0xe981feffff	                           jmp 0x4018290	     10128	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x401840f	              0x90	                                     nop	     10128	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
0x4018410	            0x31ff	                            xor edi, edi	     10151	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1	CALL_2
0x4018412	      0xba05000000	                              mov edx, 5	     10151	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1	CALL_2
0x4018417	      0xbe00000000	                              mov esi, 0	     10151	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1	CALL_2
0x401841c	      0xe800000000	                          call 0x4018421	     10151	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1	CALL_2
0x4018421	          0x4889ee	                            mov rsi, rbp	     10151	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1	CALL_2
0x4018424	          0x4889c7	                            mov rdi, rax	     10151	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1	CALL_2
0x4018427	            0x31c0	                            xor eax, eax	     10151	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1	CALL_2
0x4018429	      0xe800000000	                          call 0x401842e	     10151	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1	CALL_2
0x401842e	      0xe95dfeffff	                           jmp 0x4018290	     10152	dwarf.c	FUNCTION_110	WHILE_1	SWITCH_1
find_cu_tu_set	ELSE,0:FOR,1:CALL,1:WHILE,1:DO,0:functions,0:SWITCH,0:IF,3	51
0x4017c10	              0x53	                                push rbx	      9446	dwarf.c	FUNCTION_93
0x4017c11	            0x89f3	                            mov ebx, esi	      9446	dwarf.c	FUNCTION_93
0x4017c13	      0xe818c4feff	             call sym.load_cu_tu_indexes	      9449	dwarf.c	FUNCTION_93	IF_1	CALL_1
0x4017c18	            0x85c0	                           test eax, eax	      9449	dwarf.c	FUNCTION_93	IF_1	CALL_1
0x4017c1a	            0x743a	                            je 0x4017c56	      9449	dwarf.c	FUNCTION_93	IF_1	CALL_1
0x4017c1c	    0x448b05000000	            mov r8d, dword [0x04017c23] 	      9453	dwarf.c	FUNCTION_93	FOR_1
0x4017c23	          0x4585c0	                           test r8d, r8d	      9453	dwarf.c	FUNCTION_93	FOR_1
0x4017c26	            0x742e	                            je 0x4017c56	      9453	dwarf.c	FUNCTION_93	FOR_1
0x4017c28	    0x488b05000000	            mov rax, qword [0x04017c2f] 	      9454	dwarf.c	FUNCTION_93	FOR_1	IF_2
0x4017c2f	            0x31d2	                            xor edx, edx	      9454	dwarf.c	FUNCTION_93	FOR_1	IF_2
0x4017c31	            0x3b18	                    cmp ebx, dword [rax]	      9454	dwarf.c	FUNCTION_93	FOR_1	IF_2
0x4017c33	        0x488d4804	                      lea rcx, [rax + 4]	      9454	dwarf.c	FUNCTION_93	FOR_1	IF_2
0x4017c37	            0x7515	                           jne 0x4017c4e	      9454	dwarf.c	FUNCTION_93	FOR_1	IF_2
0x4017c39	            0xeb1d	                           jmp 0x4017c58	      9454	dwarf.c	FUNCTION_93	FOR_1	IF_2
0x4017c3b	       0xf1f440000	                   nop dword [rax + rax]	      9454	dwarf.c	FUNCTION_93	FOR_1	IF_2
0x4017c40	          0x4889ce	                            mov rsi, rcx	      9454	dwarf.c	FUNCTION_93	FOR_1	IF_2
0x4017c43	        0x4883c104	                              add rcx, 4	      9454	dwarf.c	FUNCTION_93	FOR_1	IF_2
0x4017c47	          0x3959fc	                cmp dword [rcx - 4], ebx	      9454	dwarf.c	FUNCTION_93	FOR_1	IF_2
0x4017c4a	            0x7414	                            je 0x4017c60	      9454	dwarf.c	FUNCTION_93	FOR_1	IF_2
0x4017c4c	            0x89fa	                            mov edx, edi	      9454	dwarf.c	FUNCTION_93	FOR_1	IF_2
0x4017c4e	          0x8d7a01	                      lea edi, [rdx + 1]	      9453	dwarf.c	FUNCTION_93	FOR_1
0x4017c51	          0x4439c7	                            cmp edi, r8d	      9453	dwarf.c	FUNCTION_93	FOR_1
0x4017c54	            0x75ea	                           jne 0x4017c40	      9453	dwarf.c	FUNCTION_93	FOR_1
0x4017c56	            0x31c0	                            xor eax, eax	      9450	dwarf.c	FUNCTION_93	IF_1
0x4017c58	              0x5b	                                 pop rbx	      9465	dwarf.c	FUNCTION_93
0x4017c59	              0xc3	                                     ret	      9465	dwarf.c	FUNCTION_93
0x4017c5a	    0x660f1f440000	                    nop word [rax + rax]	      9465	dwarf.c	FUNCTION_93
0x4017c60	            0x85ff	                           test edi, edi	      9461	dwarf.c	FUNCTION_93	WHILE_1
0x4017c62	            0x74f4	                            je 0x4017c58	      9461	dwarf.c	FUNCTION_93	WHILE_1
0x4017c64	            0x89d1	                            mov ecx, edx	      9461	dwarf.c	FUNCTION_93	WHILE_1
0x4017c66	          0x8b3c88	            mov edi, dword [rax + rcx*4]	      9461	dwarf.c	FUNCTION_93	WHILE_1
0x4017c69	            0x85ff	                           test edi, edi	      9461	dwarf.c	FUNCTION_93	WHILE_1
0x4017c6b	            0x7512	                           jne 0x4017c7f	      9461	dwarf.c	FUNCTION_93	WHILE_1
0x4017c6d	            0xeb1f	                           jmp 0x4017c8e	      9461	dwarf.c	FUNCTION_93	WHILE_1
0x4017c6f	              0x90	                                     nop	      9461	dwarf.c	FUNCTION_93	WHILE_1
0x4017c70	          0x8d72ff	                      lea esi, [rdx - 1]	      9461	dwarf.c	FUNCTION_93	WHILE_1
0x4017c73	          0x4889f1	                            mov rcx, rsi	      9461	dwarf.c	FUNCTION_93	WHILE_1
0x4017c76	          0x8b34b0	            mov esi, dword [rax + rsi*4]	      9461	dwarf.c	FUNCTION_93	WHILE_1
0x4017c79	            0x85f6	                           test esi, esi	      9461	dwarf.c	FUNCTION_93	WHILE_1
0x4017c7b	            0x740b	                            je 0x4017c88	      9461	dwarf.c	FUNCTION_93	WHILE_1
0x4017c7d	            0x89ca	                            mov edx, ecx	      9461	dwarf.c	FUNCTION_93	WHILE_1
0x4017c7f	            0x85d2	                           test edx, edx	      9461	dwarf.c	FUNCTION_93	WHILE_1
0x4017c81	            0x75ed	                           jne 0x4017c70	      9461	dwarf.c	FUNCTION_93	WHILE_1
0x4017c83	            0xebd3	                           jmp 0x4017c58	      9461	dwarf.c	FUNCTION_93	WHILE_1
0x4017c85	           0xf1f00	                         nop dword [rax]	      9461	dwarf.c	FUNCTION_93	WHILE_1
0x4017c88	        0x488d0490	                  lea rax, [rax + rdx*4]	      9461	dwarf.c	FUNCTION_93	WHILE_1
0x4017c8c	              0x5b	                                 pop rbx	      9465	dwarf.c	FUNCTION_93
0x4017c8d	              0xc3	                                     ret	      9465	dwarf.c	FUNCTION_93
0x4017c8e	          0x4889f0	                            mov rax, rsi	      9454	dwarf.c	FUNCTION_93	FOR_1	IF_2
0x4017c91	              0x5b	                                 pop rbx	      9465	dwarf.c	FUNCTION_93
0x4017c92	              0xc3	                                     ret	      9465	dwarf.c	FUNCTION_93
print_dwarf_vma	ELSE,0:FOR,0:CALL,1:WHILE,0:DO,0:functions,0:SWITCH,0:IF,0	11
0x4000420	            0x89f2	                            mov edx, esi	       255	dwarf.c	FUNCTION_5
0x4000422	        0x4883ec08	                              sub rsp, 8	       255	dwarf.c	FUNCTION_5
0x4000426	          0x4889fe	                            mov rsi, rdi	       256	dwarf.c	FUNCTION_5	CALL_1
0x4000429	            0x31ff	                            xor edi, edi	       256	dwarf.c	FUNCTION_5	CALL_1
0x400042b	      0xe8d0feffff	                 call sym.dwarf_vmatoa_1	       256	dwarf.c	FUNCTION_5	CALL_1
0x4000430	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4000435	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_16
0x4000438	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400043d	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400043f	        0x4883c408	                              add rsp, 8	       257	dwarf.c	FUNCTION_5
0x4000443	      0xe900000000	                           jmp 0x4000448	       104	stdio2.h	CALL_16
free_abbrevs	ELSE,0:FOR,2:CALL,2:WHILE,0:DO,0:functions,0:SWITCH,0:IF,0	27
0x4000610	            0x4154	                                push r12	       840	dwarf.c	FUNCTION_17
0x4000612	              0x55	                                push rbp	       840	dwarf.c	FUNCTION_17
0x4000613	    0x488b2d000000	            mov rbp, qword [0x0400061a] 	       843	dwarf.c	FUNCTION_17	FOR_1
0x400061a	              0x53	                                push rbx	       840	dwarf.c	FUNCTION_17
0x400061b	          0x4885ed	                           test rbp, rbp	       843	dwarf.c	FUNCTION_17	FOR_1
0x400061e	            0x7431	                            je 0x4000651	       843	dwarf.c	FUNCTION_17	FOR_1
0x4000620	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	       848	dwarf.c	FUNCTION_17	FOR_1	FOR_2
0x4000624	        0x4c8b6528	            mov r12, qword [rbp + 0x28] 	       845	dwarf.c	FUNCTION_17	FOR_1
0x4000628	          0x4885ff	                           test rdi, rdi	       848	dwarf.c	FUNCTION_17	FOR_1	FOR_2
0x400062b	            0x7414	                            je 0x4000641	       848	dwarf.c	FUNCTION_17	FOR_1	FOR_2
0x400062d	           0xf1f00	                         nop dword [rax]	       848	dwarf.c	FUNCTION_17	FOR_1	FOR_2
0x4000630	        0x488b5f18	            mov rbx, qword [rdi + 0x18] 	       850	dwarf.c	FUNCTION_17	FOR_1	FOR_2
0x4000634	      0xe800000000	                          call 0x4000639	       852	dwarf.c	FUNCTION_17	FOR_1	FOR_2	CALL_1
0x4000639	          0x4885db	                           test rbx, rbx	       848	dwarf.c	FUNCTION_17	FOR_1	FOR_2
0x400063c	          0x4889df	                            mov rdi, rbx	       848	dwarf.c	FUNCTION_17	FOR_1	FOR_2
0x400063f	            0x75ef	                           jne 0x4000630	       848	dwarf.c	FUNCTION_17	FOR_1	FOR_2
0x4000641	          0x4889ef	                            mov rdi, rbp	       856	dwarf.c	FUNCTION_17	FOR_1	CALL_2
0x4000644	          0x4c89e5	                            mov rbp, r12	       856	dwarf.c	FUNCTION_17	FOR_1	CALL_2
0x4000647	      0xe800000000	                          call 0x400064c	       856	dwarf.c	FUNCTION_17	FOR_1	CALL_2
0x400064c	          0x4d85e4	                           test r12, r12	       843	dwarf.c	FUNCTION_17	FOR_1
0x400064f	            0x75cf	                           jne 0x4000620	       843	dwarf.c	FUNCTION_17	FOR_1
0x4000651	              0x5b	                                 pop rbx	       861	dwarf.c	FUNCTION_17
0x4000652	    0x48c705000000	               mov qword [0x0400065d], 0	       860	dwarf.c	FUNCTION_17
0x400065d	    0x48c705000000	               mov qword [0x04000668], 0	       860	dwarf.c	FUNCTION_17
0x4000668	              0x5d	                                 pop rbp	       861	dwarf.c	FUNCTION_17
0x4000669	            0x415c	                                 pop r12	       861	dwarf.c	FUNCTION_17
0x400066b	              0xc3	                                     ret	       861	dwarf.c	FUNCTION_17
display_debug_pubnames_worker	ELSE,3:FOR,0:CALL,22:WHILE,2:DO,0:functions,0:SWITCH,0:IF,10	433
0x400e830	            0x4157	                                push r15	      4759	dwarf.c	FUNCTION_43
0x400e832	            0x4156	                                push r14	      4759	dwarf.c	FUNCTION_43
0x400e834	          0x4989fe	                            mov r14, rdi	      4759	dwarf.c	FUNCTION_43
0x400e837	            0x4155	                                push r13	      4759	dwarf.c	FUNCTION_43
0x400e839	            0x4154	                                push r12	      4759	dwarf.c	FUNCTION_43
0x400e83b	              0x55	                                push rbp	      4759	dwarf.c	FUNCTION_43
0x400e83c	              0x53	                                push rbx	      4759	dwarf.c	FUNCTION_43
0x400e83d	        0x4883ec38	                           sub rsp, 0x38	      4759	dwarf.c	FUNCTION_43
0x400e841	        0x488b4f20	            mov rcx, qword [rdi + 0x20] 	      4761	dwarf.c	FUNCTION_43
0x400e845	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      4759	dwarf.c	FUNCTION_43
0x400e84a	        0x89542428	             mov dword [rsp + 0x28], edx	      4759	dwarf.c	FUNCTION_43
0x400e84e	          0x4889cb	                            mov rbx, rcx	      4762	dwarf.c	FUNCTION_43
0x400e851	        0x48035f30	             add rbx, qword [rdi + 0x30]	      4762	dwarf.c	FUNCTION_43
0x400e855	          0x4889f7	                            mov rdi, rsi	      4766	dwarf.c	FUNCTION_43	CALL_1
0x400e858	          0x4989cf	                            mov r15, rcx	      4761	dwarf.c	FUNCTION_43
0x400e85b	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      4761	dwarf.c	FUNCTION_43
0x400e860	      0xe89bd7ffff	                call sym.load_debug_info	      4766	dwarf.c	FUNCTION_43	CALL_1
0x400e865	        0x498b7e10	            mov rdi, qword [r14 + 0x10] 	      4768	dwarf.c	FUNCTION_43	CALL_2
0x400e869	        0x498d7618	                   lea rsi, [r14 + 0x18]	      4768	dwarf.c	FUNCTION_43	CALL_2
0x400e86d	      0xe80e39ffff	  call sym.introduce.isra.5.constprop.27	      4768	dwarf.c	FUNCTION_43	CALL_2
0x400e872	          0x4939df	                            cmp r15, rbx	      4770	dwarf.c	FUNCTION_43	WHILE_1
0x400e875	     0xf8327020000	                           jae 0x400eaa2	      4770	dwarf.c	FUNCTION_43	WHILE_1
0x400e87b	       0xf1f440000	                   nop dword [rax + rax]	      4770	dwarf.c	FUNCTION_43	WHILE_1
0x400e880	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x400e885	        0x4c8d6004	                      lea r12, [rax + 4]	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x400e889	          0x4c39e3	                            cmp rbx, r12	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x400e88c	     0xf872e020000	                            ja 0x400eac0	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x400e892	          0x4839d8	                            cmp rax, rbx	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x400e895	     0xf831d050000	                           jae 0x400edb8	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x400e89b	          0x4889de	                            mov rsi, rbx	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x400e89e	          0x4829c6	                            sub rsi, rax	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x400e8a1	          0x8d46ff	                      lea eax, [rsi - 1]	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x400e8a4	          0x83f807	                              cmp eax, 7	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x400e8a7	     0xf8618020000	                           jbe 0x400eac5	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x400e8ad	      0xb904000000	                              mov ecx, 4	      4786	dwarf.c	FUNCTION_43	WHILE_1	ELSE_1
0x400e8b2	    0xc744240c0400	                mov dword [rsp + 0xc], 4	      4785	dwarf.c	FUNCTION_43	WHILE_1	ELSE_1
0x400e8ba	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x400e8bf	          0x4d89e5	                            mov r13, r12	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x400e8c2	          0x4c89e0	                            mov rax, r12	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x400e8c5	            0x31ed	                            xor ebp, ebp	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x400e8c7	        0x4c2b6f20	             sub r13, qword [rdi + 0x20]	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x400e8cb	          0x4c89ea	                            mov rdx, r13	      4790	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x400e8ce	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4791	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x400e8d3	        0x48395730	            cmp qword [rdi + 0x30], rdx 	      4791	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x400e8d7	     0xf8263020000	                            jb 0x400eb40	      4791	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x400e8dd	      0x498d542402	                      lea rdx, [r12 + 2]	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x400e8e2	        0x498d0c2c	                    lea rcx, [r12 + rbp]	      4801	dwarf.c	FUNCTION_43	WHILE_1
0x400e8e6	          0x4839d3	                            cmp rbx, rdx	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x400e8e9	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      4801	dwarf.c	FUNCTION_43	WHILE_1
0x400e8ee	     0xf879c020000	                            ja 0x400eb90	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x400e8f4	          0x4939dc	                            cmp r12, rbx	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x400e8f7	            0x7312	                           jae 0x400e90b	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x400e8f9	          0x4889de	                            mov rsi, rbx	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x400e8fc	          0x4829c6	                            sub rsi, rax	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x400e8ff	          0x8d46ff	                      lea eax, [rsi - 1]	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x400e902	          0x83f807	                              cmp eax, 7	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x400e905	     0xf868a020000	                           jbe 0x400eb95	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x400e90b	      0x448b6c240c	            mov r13d, dword [rsp + 0xc] 	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400e910	        0x4e8d042a	                     lea r8, [rdx + r13]	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400e914	          0x4c39c3	                             cmp rbx, r8	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400e917	     0xf86c3040000	                           jbe 0x400ede0	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400e91d	      0xb8feffffff	                     mov eax, 0xfffffffe	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400e922	          0x4489ee	                           mov esi, r13d	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400e925	          0x4531ff	                          xor r15d, r15d	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400e928	      0x668944242e	               mov word [rsp + 0x2e], ax	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400e92d	          0x8d46ff	                      lea eax, [rsi - 1]	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400e930	          0x4531f6	                          xor r14d, r14d	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400e933	          0x83f807	                              cmp eax, 7	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400e936	            0x7716	                            ja 0x400e94e	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400e938	      0x4c89442420	              mov qword [rsp + 0x20], r8	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400e93d	          0x4889d7	                            mov rdi, rdx	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400e940	    0xff1500000000	                 call qword [0x0400e946]	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400e946	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400e94b	          0x4989c6	                            mov r14, rax	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400e94e	    0x8b3500000000	            mov esi, dword [0x0400e954] 	      4807	dwarf.c	FUNCTION_43	WHILE_1	IF_3
0x400e954	          0x8d46ff	                      lea eax, [rsi - 1]	      4806	dwarf.c	FUNCTION_43	WHILE_1	IF_3
0x400e957	          0x83f8fd	             cmp eax, 0xfffffffffffffffd	      4806	dwarf.c	FUNCTION_43	WHILE_1	IF_3
0x400e95a	            0x7758	                            ja 0x400e9b4	      4806	dwarf.c	FUNCTION_43	WHILE_1	IF_3
0x400e95c	    0x488b05000000	            mov rax, qword [0x0400e963] 	      4806	dwarf.c	FUNCTION_43	WHILE_1	IF_3
0x400e963	            0x31d2	                            xor edx, edx	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400e965	        0x4883c010	                           add rax, 0x10	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400e969	     0xf1f80000000	                         nop dword [rax]	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400e970	          0x4c3b30	                    cmp r14, qword [rax]	      4730	dwarf.c	FUNCTION_41	FOR_1	IF_2
0x400e973	            0x743f	                            je 0x400e9b4	      4730	dwarf.c	FUNCTION_41	FOR_1	IF_2
0x400e975	          0x83c201	                              add edx, 1	      4729	dwarf.c	FUNCTION_41	FOR_1
0x400e978	        0x4883c068	                           add rax, 0x68	      4729	dwarf.c	FUNCTION_41	FOR_1
0x400e97c	            0x39f2	                            cmp edx, esi	      4729	dwarf.c	FUNCTION_41	FOR_1
0x400e97e	            0x72f0	                            jb 0x400e970	      4729	dwarf.c	FUNCTION_41	FOR_1
0x400e980	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x400e985	      0xba05000000	                              mov edx, 5	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x400e98a	      0xbe00000000	                              mov esi, 0	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x400e98f	            0x31ff	                            xor edi, edi	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x400e991	      0x4c89442420	              mov qword [rsp + 0x20], r8	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x400e996	        0x4c8b6010	            mov r12, qword [rax + 0x10] 	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x400e99a	      0xe800000000	                          call 0x400e99f	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x400e99f	          0x4c89f6	                            mov rsi, r14	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x400e9a2	          0x4889c7	                            mov rdi, rax	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x400e9a5	            0x31c0	                            xor eax, eax	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x400e9a7	          0x4c89e2	                            mov rdx, r12	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x400e9aa	      0xe800000000	                          call 0x400e9af	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x400e9af	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	      4809	dwarf.c	FUNCTION_43	WHILE_1	IF_3	CALL_8
0x400e9b4	        0x4f8d2428	                     lea r12, [r8 + r13]	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x400e9b8	          0x4c39e3	                            cmp rbx, r12	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x400e9bb	     0xf871f020000	                            ja 0x400ebe0	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x400e9c1	          0x4531c9	                            xor r9d, r9d	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x400e9c4	          0x4c39c3	                             cmp rbx, r8	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x400e9c7	            0x761c	                           jbe 0x400e9e5	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x400e9c9	            0x89de	                            mov esi, ebx	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x400e9cb	          0x4429c6	                            sub esi, r8d	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x400e9ce	          0x8d46ff	                      lea eax, [rsi - 1]	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x400e9d1	          0x4531c9	                            xor r9d, r9d	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x400e9d4	          0x83f807	                              cmp eax, 7	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x400e9d7	            0x770c	                            ja 0x400e9e5	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x400e9d9	          0x4c89c7	                             mov rdi, r8	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x400e9dc	    0xff1500000000	                 call qword [0x0400e9e2]	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x400e9e2	          0x4989c1	                             mov r9, rax	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x400e9e5	            0x31ff	                            xor edi, edi	      4814	dwarf.c	FUNCTION_43	WHILE_1	CALL_9
0x400e9e7	      0xba05000000	                              mov edx, 5	      4814	dwarf.c	FUNCTION_43	WHILE_1	CALL_9
0x400e9ec	      0xbe00000000	                              mov esi, 0	      4814	dwarf.c	FUNCTION_43	WHILE_1	CALL_9
0x400e9f1	      0x4c894c2420	              mov qword [rsp + 0x20], r9	      4814	dwarf.c	FUNCTION_43	WHILE_1	CALL_9
0x400e9f6	      0xe800000000	                          call 0x400e9fb	      4814	dwarf.c	FUNCTION_43	WHILE_1	CALL_9
0x400e9fb	          0x4889ea	                            mov rdx, rbp	       104	stdio2.h	CALL_16
0x400e9fe	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400ea01	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400ea06	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400ea08	      0xe800000000	                          call 0x400ea0d	       104	stdio2.h	CALL_16
0x400ea0d	            0x31ff	                            xor edi, edi	      4816	dwarf.c	FUNCTION_43	WHILE_1	CALL_10
0x400ea0f	      0xba05000000	                              mov edx, 5	      4816	dwarf.c	FUNCTION_43	WHILE_1	CALL_10
0x400ea14	      0xbe00000000	                              mov esi, 0	      4816	dwarf.c	FUNCTION_43	WHILE_1	CALL_10
0x400ea19	      0xe800000000	                          call 0x400ea1e	      4816	dwarf.c	FUNCTION_43	WHILE_1	CALL_10
0x400ea1e	          0x4489fa	                           mov edx, r15d	       104	stdio2.h	CALL_16
0x400ea21	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400ea24	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400ea29	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400ea2b	      0xe800000000	                          call 0x400ea30	       104	stdio2.h	CALL_16
0x400ea30	            0x31ff	                            xor edi, edi	      4818	dwarf.c	FUNCTION_43	WHILE_1	CALL_11
0x400ea32	      0xba05000000	                              mov edx, 5	      4818	dwarf.c	FUNCTION_43	WHILE_1	CALL_11
0x400ea37	      0xbe00000000	                              mov esi, 0	      4818	dwarf.c	FUNCTION_43	WHILE_1	CALL_11
0x400ea3c	      0xe800000000	                          call 0x400ea41	      4818	dwarf.c	FUNCTION_43	WHILE_1	CALL_11
0x400ea41	          0x4c89f2	                            mov rdx, r14	       104	stdio2.h	CALL_16
0x400ea44	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400ea47	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400ea4c	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400ea4e	      0xe800000000	                          call 0x400ea53	       104	stdio2.h	CALL_16
0x400ea53	            0x31ff	                            xor edi, edi	      4820	dwarf.c	FUNCTION_43	WHILE_1	CALL_12
0x400ea55	      0xba05000000	                              mov edx, 5	      4820	dwarf.c	FUNCTION_43	WHILE_1	CALL_12
0x400ea5a	      0xbe00000000	                              mov esi, 0	      4820	dwarf.c	FUNCTION_43	WHILE_1	CALL_12
0x400ea5f	      0xe800000000	                          call 0x400ea64	      4820	dwarf.c	FUNCTION_43	WHILE_1	CALL_12
0x400ea64	      0x4c8b4c2420	              mov r9, qword [rsp + 0x20]	       104	stdio2.h	CALL_16
0x400ea69	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400ea6c	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400ea71	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400ea73	          0x4c89ca	                             mov rdx, r9	       104	stdio2.h	CALL_16
0x400ea76	      0xe800000000	                          call 0x400ea7b	       104	stdio2.h	CALL_16
0x400ea7b	    0x66837c242e01	                cmp word [rsp + 0x2e], 1	      4823	dwarf.c	FUNCTION_43	WHILE_1	IF_4
0x400ea81	     0xf8669010000	                           jbe 0x400ebf0	      4823	dwarf.c	FUNCTION_43	WHILE_1	IF_4
0x400ea87	    0x448b05000000	            mov r8d, dword [0x0400ea8e] 	      4827	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5
0x400ea8e	          0x4585c0	                           test r8d, r8d	      4827	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5
0x400ea91	     0xf84b9030000	                            je 0x400ee50	      4827	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5
0x400ea97	      0x483b5c2410	            cmp rbx, qword [rsp + 0x10] 	      4770	dwarf.c	FUNCTION_43	WHILE_1
0x400ea9c	     0xf87defdffff	                            ja 0x400e880	      4770	dwarf.c	FUNCTION_43	WHILE_1
0x400eaa2	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x400eaa7	      0xe800000000	                          call 0x400eaac	       104	stdio2.h	CALL_16
0x400eaac	        0x4883c438	                           add rsp, 0x38	      4890	dwarf.c	FUNCTION_43
0x400eab0	      0xb801000000	                              mov eax, 1	      4890	dwarf.c	FUNCTION_43
0x400eab5	              0x5b	                                 pop rbx	      4890	dwarf.c	FUNCTION_43
0x400eab6	              0x5d	                                 pop rbp	      4890	dwarf.c	FUNCTION_43
0x400eab7	            0x415c	                                 pop r12	      4890	dwarf.c	FUNCTION_43
0x400eab9	            0x415d	                                 pop r13	      4890	dwarf.c	FUNCTION_43
0x400eabb	            0x415e	                                 pop r14	      4890	dwarf.c	FUNCTION_43
0x400eabd	            0x415f	                                 pop r15	      4890	dwarf.c	FUNCTION_43
0x400eabf	              0xc3	                                     ret	      4890	dwarf.c	FUNCTION_43
0x400eac0	      0xbe04000000	                              mov esi, 4	      4890	dwarf.c	FUNCTION_43
0x400eac5	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x400eaca	          0x4c89ff	                            mov rdi, r15	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x400eacd	    0xff1500000000	                 call qword [0x0400ead3]	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x400ead3	          0x4889c5	                            mov rbp, rax	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x400ead6	      0xb8ffffffff	                     mov eax, 0xffffffff	      4777	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x400eadb	          0x4839c5	                            cmp rbp, rax	      4777	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x400eade	     0xf853c030000	                           jne 0x400ee20	      4777	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x400eae4	        0x4983c70c	                            add r15, 0xc	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x400eae8	          0x4c39fb	                            cmp rbx, r15	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x400eaeb	     0xf878f030000	                            ja 0x400ee80	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x400eaf1	          0x4c39e3	                            cmp rbx, r12	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x400eaf4	     0xf86c6030000	                           jbe 0x400eec0	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x400eafa	          0x4889de	                            mov rsi, rbx	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x400eafd	          0x4c29e6	                            sub rsi, r12	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x400eb00	          0x8d46ff	                      lea eax, [rsi - 1]	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x400eb03	          0x83f807	                              cmp eax, 7	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x400eb06	     0xf8679030000	                           jbe 0x400ee85	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x400eb0c	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x400eb11	          0x4d89fd	                            mov r13, r15	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x400eb14	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4791	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x400eb19	            0x31ed	                            xor ebp, ebp	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x400eb1b	          0x4c89f8	                            mov rax, r15	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x400eb1e	          0x4d89fc	                            mov r12, r15	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x400eb21	    0xc744240c0800	                mov dword [rsp + 0xc], 8	      4780	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x400eb29	        0x4c2b6920	             sub r13, qword [rcx + 0x20]	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x400eb2d	      0xb90c000000	                            mov ecx, 0xc	      4781	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x400eb32	          0x4c89ea	                            mov rdx, r13	      4790	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x400eb35	        0x48395730	            cmp qword [rdi + 0x30], rdx 	      4791	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x400eb39	     0xf839efdffff	                           jae 0x400e8dd	      4791	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x400eb3f	              0x90	                                     nop	      4791	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x400eb40	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400eb42	          0x4889ee	                            mov rsi, rbp	       246	dwarf.c	FUNCTION_4	CALL_1
0x400eb45	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400eb4a	          0x4189cc	                           mov r12d, ecx	       246	dwarf.c	FUNCTION_4	CALL_1
0x400eb4d	      0xe8ae17ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400eb52	          0x4889c5	                            mov rbp, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x400eb55	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x400eb5a	            0x31ff	                            xor edi, edi	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x400eb5c	      0xba05000000	                              mov edx, 5	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x400eb61	      0xbe00000000	                              mov esi, 0	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x400eb66	          0x4589e6	                          mov r14d, r12d	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x400eb69	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x400eb6d	      0xe800000000	                          call 0x400eb72	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x400eb72	          0x4c89ea	                            mov rdx, r13	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x400eb75	          0x4889c7	                            mov rdi, rax	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x400eb78	          0x4889e9	                            mov rcx, rbp	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x400eb7b	          0x4c29f2	                            sub rdx, r14	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x400eb7e	          0x4889de	                            mov rsi, rbx	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x400eb81	            0x31c0	                            xor eax, eax	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x400eb83	      0xe800000000	                          call 0x400eb88	      4793	dwarf.c	FUNCTION_43	WHILE_1	IF_2	CALL_4
0x400eb88	      0xe915ffffff	                           jmp 0x400eaa2	      4797	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x400eb8d	           0xf1f00	                         nop dword [rax]	      4797	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x400eb90	      0xbe02000000	                              mov esi, 2	      4797	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x400eb95	      0x4889542420	             mov qword [rsp + 0x20], rdx	      4797	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x400eb9a	          0x4c89e7	                            mov rdi, r12	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x400eb9d	    0xff1500000000	                 call qword [0x0400eba3]	      4803	dwarf.c	FUNCTION_43	WHILE_1
0x400eba3	      0x448b6c240c	            mov r13d, dword [rsp + 0xc] 	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400eba8	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400ebad	           0xfb7c8	                           movzx ecx, ax	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400ebb0	          0x83e802	                              sub eax, 2	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400ebb3	          0x4189cf	                           mov r15d, ecx	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400ebb6	      0x668944242e	               mov word [rsp + 0x2e], ax	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400ebbb	        0x4e8d042a	                     lea r8, [rdx + r13]	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400ebbf	          0x4c39c3	                             cmp rbx, r8	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400ebc2	     0xf8748020000	                            ja 0x400ee10	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400ebc8	          0x4839d3	                            cmp rbx, rdx	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400ebcb	     0xf861e020000	                           jbe 0x400edef	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400ebd1	            0x89de	                            mov esi, ebx	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400ebd3	            0x29d6	                            sub esi, edx	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400ebd5	      0xe953fdffff	                           jmp 0x400e92d	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400ebda	    0x660f1f440000	                    nop word [rax + rax]	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400ebe0	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400ebe4	      0xe9e5fdffff	                           jmp 0x400e9ce	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400ebe9	     0xf1f80000000	                         nop dword [rax]	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400ebf0	        0x8b7c2428	            mov edi, dword [rsp + 0x28] 	      4836	dwarf.c	FUNCTION_43	WHILE_1	IF_6
0x400ebf4	      0xba05000000	                              mov edx, 5	      4837	dwarf.c	FUNCTION_43	WHILE_1	CALL_15
0x400ebf9	      0xbe00000000	                              mov esi, 0	      4837	dwarf.c	FUNCTION_43	WHILE_1	CALL_15
0x400ebfe	            0x85ff	                           test edi, edi	      4836	dwarf.c	FUNCTION_43	WHILE_1	IF_6
0x400ec00	            0x7505	                           jne 0x400ec07	      4836	dwarf.c	FUNCTION_43	WHILE_1	IF_6
0x400ec02	      0xbe00000000	                              mov esi, 0	      4839	dwarf.c	FUNCTION_43	WHILE_1	CALL_16
0x400ec07	            0x31ff	                            xor edi, edi	      4839	dwarf.c	FUNCTION_43	WHILE_1	CALL_16
0x400ec09	      0xe800000000	                          call 0x400ec0e	      4839	dwarf.c	FUNCTION_43	WHILE_1	CALL_16
0x400ec0e	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400ec13	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x400ec16	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400ec18	      0xe800000000	                          call 0x400ec1d	       104	stdio2.h	CALL_16
0x400ec1d	          0x4c89e7	                            mov rdi, r12	       104	stdio2.h	CALL_16
0x400ec20	      0xe9d9000000	                           jmp 0x400ecfe	       104	stdio2.h	CALL_16
0x400ec25	           0xf1f00	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x400ec28	          0x4839df	                            cmp rdi, rbx	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x400ec2b	     0xf8366feffff	                           jae 0x400ea97	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x400ec31	            0x89de	                            mov esi, ebx	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x400ec33	            0x29fe	                            sub esi, edi	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x400ec35	          0x8d46ff	                      lea eax, [rsi - 1]	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x400ec38	          0x83f807	                              cmp eax, 7	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x400ec3b	     0xf8756feffff	                            ja 0x400ea97	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x400ec41	    0xff1500000000	                 call qword [0x0400ec47]	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x400ec47	          0x4885c0	                           test rax, rax	      4848	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_7
0x400ec4a	          0x4989c6	                            mov r14, rax	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x400ec4d	     0xf8444feffff	                            je 0x400ea97	      4848	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_7
0x400ec53	          0x4c39fb	                            cmp rbx, r15	      4852	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_8
0x400ec56	     0xf863bfeffff	                           jbe 0x400ea97	      4852	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_8
0x400ec5c	          0x4889d8	                            mov rax, rbx	      4854	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x400ec5f	        0x8b742428	            mov esi, dword [rsp + 0x28] 	      4856	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400ec63	          0x4c29f8	                            sub rax, r15	      4854	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x400ec66	        0x488d50ff	                      lea rdx, [rax - 1]	      4854	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x400ec6a	            0x85f6	                           test esi, esi	      4856	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400ec6c	          0x4989d4	                            mov r12, rdx	      4854	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x400ec6f	     0xf841b010000	                            je 0x400ed90	      4856	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400ec75	        0x498d6f01	                      lea rbp, [r15 + 1]	      4863	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400ec79	          0x4839eb	                            cmp rbx, rbp	      4863	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400ec7c	     0xf8796000000	                            ja 0x400ed18	      4863	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400ec82	          0x8d48ff	                      lea ecx, [rax - 1]	      4863	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400ec85	          0x83f907	                              cmp ecx, 7	      4863	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400ec88	     0xf8655020000	                           jbe 0x400eee3	      4863	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400ec8e	        0x4c8d60fe	                      lea r12, [rax - 2]	      4865	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400ec92	      0xba05000000	                              mov edx, 5	      4752	dwarf.c	FUNCTION_42	CALL_9
0x400ec97	      0xbe00000000	                              mov esi, 0	      4752	dwarf.c	FUNCTION_42	CALL_9
0x400ec9c	            0x31ff	                            xor edi, edi	      4752	dwarf.c	FUNCTION_42	CALL_9
0x400ec9e	      0xe800000000	                          call 0x400eca3	      4752	dwarf.c	FUNCTION_42	CALL_9
0x400eca3	          0x4589e7	                          mov r15d, r12d	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400eca6	          0x4989c0	                             mov r8, rax	      4752	dwarf.c	FUNCTION_42	CALL_9
0x400eca9	      0xba05000000	                              mov edx, 5	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400ecae	      0xbe00000000	                              mov esi, 0	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400ecb3	            0x31ff	                            xor edi, edi	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400ecb5	      0x4c89442420	              mov qword [rsp + 0x20], r8	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400ecba	      0xe800000000	                          call 0x400ecbf	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400ecbf	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400ecc4	        0x4883ec08	                              sub rsp, 8	       104	stdio2.h	CALL_16
0x400ecc8	          0x4889c1	                            mov rcx, rax	       104	stdio2.h	CALL_16
0x400eccb	          0x4c89f2	                            mov rdx, r14	       104	stdio2.h	CALL_16
0x400ecce	              0x55	                                push rbp	       104	stdio2.h	CALL_16
0x400eccf	          0x4589f9	                           mov r9d, r15d	       104	stdio2.h	CALL_16
0x400ecd2	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400ecd7	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400ecdc	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400ecde	      0xe800000000	                          call 0x400ece3	       104	stdio2.h	CALL_16
0x400ece3	              0x5a	                                 pop rdx	       104	stdio2.h	CALL_16
0x400ece4	              0x59	                                 pop rcx	       104	stdio2.h	CALL_16
0x400ece5	          0x4889ef	                            mov rdi, rbp	      4882	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	CALL_22
0x400ece8	          0x4c89e6	                            mov rsi, r12	      4882	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	CALL_22
0x400eceb	      0xe800000000	                          call 0x400ecf0	      4882	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	CALL_22
0x400ecf0	      0x488d7c0501	                lea rdi, [rbp + rax + 1]	      4882	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	CALL_22
0x400ecf5	          0x4839fb	                            cmp rbx, rdi	      4883	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_10
0x400ecf8	     0xf8699fdffff	                           jbe 0x400ea97	      4883	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_10
0x400ecfe	        0x4e8d3c2f	                    lea r15, [rdi + r13]	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x400ed02	          0x4c39fb	                            cmp rbx, r15	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x400ed05	     0xf861dffffff	                           jbe 0x400ec28	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x400ed0b	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x400ed0f	      0xe921ffffff	                           jmp 0x400ec35	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x400ed14	         0xf1f4000	                         nop dword [rax]	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x400ed18	      0xbe01000000	                              mov esi, 1	      4846	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2
0x400ed1d	          0x4c89ff	                            mov rdi, r15	      4863	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400ed20	      0x4889542420	             mov qword [rsp + 0x20], rdx	      4863	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400ed25	    0xff1500000000	                 call qword [0x0400ed2b]	      4863	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400ed2b	            0x89c1	                            mov ecx, eax	      4870	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400ed2d	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      4865	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400ed32	            0x31ff	                            xor edi, edi	      4752	dwarf.c	FUNCTION_42	CALL_9
0x400ed34	          0xc1e118	                           shl ecx, 0x18	      4870	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400ed37	            0x89c8	                            mov eax, ecx	      4752	dwarf.c	FUNCTION_42	CALL_9
0x400ed39	        0x894c2420	             mov dword [rsp + 0x20], ecx	      4752	dwarf.c	FUNCTION_42	CALL_9
0x400ed3d	          0xc1e81c	                           shr eax, 0x1c	      4752	dwarf.c	FUNCTION_42	CALL_9
0x400ed40	        0x4c8d62ff	                      lea r12, [rdx - 1]	      4865	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400ed44	      0xba05000000	                              mov edx, 5	      4752	dwarf.c	FUNCTION_42	CALL_9
0x400ed49	          0x83e007	                              and eax, 7	      4752	dwarf.c	FUNCTION_42	CALL_9
0x400ed4c	    0x488b34c50000	                  mov rsi, qword [rax*8]	      4752	dwarf.c	FUNCTION_42	CALL_9
0x400ed54	          0x4589e7	                          mov r15d, r12d	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400ed57	      0xe800000000	                          call 0x400ed5c	      4752	dwarf.c	FUNCTION_42	CALL_9
0x400ed5c	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400ed60	          0x4989c0	                             mov r8, rax	      4752	dwarf.c	FUNCTION_42	CALL_9
0x400ed63	            0x85c9	                           test ecx, ecx	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400ed65	     0xf893effffff	                           jns 0x400eca9	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400ed6b	      0xba05000000	                              mov edx, 5	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400ed70	      0xbe00000000	                              mov esi, 0	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400ed75	            0x31ff	                            xor edi, edi	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400ed77	      0x4889442420	             mov qword [rsp + 0x20], rax	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400ed7c	      0xe800000000	                          call 0x400ed81	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400ed81	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400ed86	      0xe939ffffff	                           jmp 0x400ecc4	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400ed8b	       0xf1f440000	                   nop dword [rax + rax]	      4874	dwarf.c	FUNCTION_43	WHILE_1	WHILE_2	IF_9
0x400ed90	            0x89d1	                            mov ecx, edx	       104	stdio2.h	CALL_16
0x400ed92	          0x4d89f8	                             mov r8, r15	       104	stdio2.h	CALL_16
0x400ed95	          0x4c89f2	                            mov rdx, r14	       104	stdio2.h	CALL_16
0x400ed98	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x400ed9d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400eda2	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x400eda4	      0xe800000000	                          call 0x400eda9	       104	stdio2.h	CALL_16
0x400eda9	          0x4c89fd	                            mov rbp, r15	       104	stdio2.h	CALL_16
0x400edac	      0xe934ffffff	                           jmp 0x400ece5	       104	stdio2.h	CALL_16
0x400edb1	     0xf1f80000000	                         nop dword [rax]	       104	stdio2.h	CALL_16
0x400edb8	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x400edbd	          0x4d89e5	                            mov r13, r12	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x400edc0	          0x4c89e0	                            mov rax, r12	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x400edc3	            0x31ed	                            xor ebp, ebp	      4776	dwarf.c	FUNCTION_43	WHILE_1
0x400edc5	    0xc744240c0400	                mov dword [rsp + 0xc], 4	      4785	dwarf.c	FUNCTION_43	WHILE_1	ELSE_1
0x400edcd	        0x4c2b6920	             sub r13, qword [rcx + 0x20]	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x400edd1	      0xb904000000	                              mov ecx, 4	      4786	dwarf.c	FUNCTION_43	WHILE_1	ELSE_1
0x400edd6	          0x4c89ea	                            mov rdx, r13	      4790	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x400edd9	      0xe9f0faffff	                           jmp 0x400e8ce	      4790	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x400edde	            0x6690	                                     nop	      4790	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x400ede0	    0x41b9feffffff	                     mov r9d, 0xfffffffe	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400ede6	          0x4531ff	                          xor r15d, r15d	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400ede9	    0x6644894c242e	              mov word [rsp + 0x2e], r9w	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400edef	    0x8b3500000000	            mov esi, dword [0x0400edf5] 	      4807	dwarf.c	FUNCTION_43	WHILE_1	IF_3
0x400edf5	          0x8d46ff	                      lea eax, [rsi - 1]	      4806	dwarf.c	FUNCTION_43	WHILE_1	IF_3
0x400edf8	          0x83f8fd	             cmp eax, 0xfffffffffffffffd	      4806	dwarf.c	FUNCTION_43	WHILE_1	IF_3
0x400edfb	     0xf87a7000000	                            ja 0x400eea8	      4806	dwarf.c	FUNCTION_43	WHILE_1	IF_3
0x400ee01	          0x4531f6	                          xor r14d, r14d	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400ee04	      0xe953fbffff	                           jmp 0x400e95c	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400ee09	     0xf1f80000000	                         nop dword [rax]	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400ee10	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400ee14	      0xe914fbffff	                           jmp 0x400e92d	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400ee19	     0xf1f80000000	                         nop dword [rax]	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400ee20	      0xb904000000	                              mov ecx, 4	      4786	dwarf.c	FUNCTION_43	WHILE_1	ELSE_1
0x400ee25	    0xc744240c0400	                mov dword [rsp + 0xc], 4	      4785	dwarf.c	FUNCTION_43	WHILE_1	ELSE_1
0x400ee2d	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x400ee32	          0x4d89e5	                            mov r13, r12	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x400ee35	          0x4c89e0	                            mov rax, r12	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x400ee38	        0x4c2b6a20	             sub r13, qword [rdx + 0x20]	      4789	dwarf.c	FUNCTION_43	WHILE_1
0x400ee3c	          0x4c89ea	                            mov rdx, r13	      4790	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x400ee3f	          0x4801ea	                            add rdx, rbp	      4790	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x400ee42	     0xf8386faffff	                           jae 0x400e8ce	      4790	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x400ee48	      0xe9f3fcffff	                           jmp 0x400eb40	      4790	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x400ee4d	           0xf1f00	                         nop dword [rax]	      4790	dwarf.c	FUNCTION_43	WHILE_1	IF_2
0x400ee50	      0xba05000000	                              mov edx, 5	      4829	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5	CALL_14
0x400ee55	      0xbe00000000	                              mov esi, 0	      4829	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5	CALL_14
0x400ee5a	            0x31ff	                            xor edi, edi	      4829	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5	CALL_14
0x400ee5c	      0xe800000000	                          call 0x400ee61	      4829	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5	CALL_14
0x400ee61	          0x4889c7	                            mov rdi, rax	      4829	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5	CALL_14
0x400ee64	            0x31c0	                            xor eax, eax	      4829	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5	CALL_14
0x400ee66	      0xe800000000	                          call 0x400ee6b	      4829	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5	CALL_14
0x400ee6b	    0xc70500000000	               mov dword [0x0400ee75], 1	      4830	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5
0x400ee75	      0xe91dfcffff	                           jmp 0x400ea97	      4830	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5
0x400ee7a	    0x660f1f440000	                    nop word [rax + rax]	      4830	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5
0x400ee80	      0xbe08000000	                              mov esi, 8	      4830	dwarf.c	FUNCTION_43	WHILE_1	IF_4	IF_5
0x400ee85	          0x4c89e7	                            mov rdi, r12	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x400ee88	          0x4d89fc	                            mov r12, r15	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x400ee8b	    0xff1500000000	                 call qword [0x0400ee91]	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x400ee91	      0xb90c000000	                            mov ecx, 0xc	      4781	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x400ee96	          0x4889c5	                            mov rbp, rax	      4779	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x400ee99	    0xc744240c0800	                mov dword [rsp + 0xc], 8	      4780	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x400eea1	            0xeb8a	                           jmp 0x400ee2d	      4780	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x400eea3	       0xf1f440000	                   nop dword [rax + rax]	      4780	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x400eea8	        0x4f8d2428	                     lea r12, [r8 + r13]	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x400eeac	          0x4c39e3	                            cmp rbx, r12	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x400eeaf	            0x7627	                           jbe 0x400eed8	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x400eeb1	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x400eeb5	          0x4531f6	                          xor r14d, r14d	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400eeb8	      0xe911fbffff	                           jmp 0x400e9ce	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400eebd	           0xf1f00	                         nop dword [rax]	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400eec0	          0x4d89fc	                            mov r12, r15	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400eec3	      0xb90c000000	                            mov ecx, 0xc	      4781	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x400eec8	    0xc744240c0800	                mov dword [rsp + 0xc], 8	      4780	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x400eed0	      0xe9e5f9ffff	                           jmp 0x400e8ba	      4780	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x400eed5	           0xf1f00	                         nop dword [rax]	      4780	dwarf.c	FUNCTION_43	WHILE_1	IF_1
0x400eed8	          0x4531c9	                            xor r9d, r9d	      4812	dwarf.c	FUNCTION_43	WHILE_1
0x400eedb	          0x4531f6	                          xor r14d, r14d	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400eede	      0xe902fbffff	                           jmp 0x400e9e5	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400eee3	            0x89c6	                            mov esi, eax	      4804	dwarf.c	FUNCTION_43	WHILE_1
0x400eee5	      0xe933feffff	                           jmp 0x400ed1d	      4804	dwarf.c	FUNCTION_43	WHILE_1
parse_gnu_debuglink	ELSE,0:FOR,0:CALL,2:WHILE,0:DO,0:functions,0:SWITCH,0:IF,1	24
0x4000230	            0x4154	                                push r12	      9664	dwarf.c	FUNCTION_102
0x4000232	              0x55	                                push rbp	      9664	dwarf.c	FUNCTION_102
0x4000233	          0x4889f5	                            mov rbp, rsi	      9664	dwarf.c	FUNCTION_102
0x4000236	              0x53	                                push rbx	      9664	dwarf.c	FUNCTION_102
0x4000237	        0x4c8b6730	            mov r12, qword [rdi + 0x30] 	      9673	dwarf.c	FUNCTION_102	CALL_1
0x400023b	        0x488b5f20	            mov rbx, qword [rdi + 0x20] 	      9671	dwarf.c	FUNCTION_102
0x400023f	          0x4c89e6	                            mov rsi, r12	      9673	dwarf.c	FUNCTION_102	CALL_1
0x4000242	          0x4889df	                            mov rdi, rbx	      9673	dwarf.c	FUNCTION_102	CALL_1
0x4000245	      0xe800000000	                          call 0x400024a	      9673	dwarf.c	FUNCTION_102	CALL_1
0x400024a	          0x8d7804	                      lea edi, [rax + 4]	      9674	dwarf.c	FUNCTION_102
0x400024d	            0x31c0	                            xor eax, eax	      9674	dwarf.c	FUNCTION_102
0x400024f	          0x83e7fc	                     and edi, 0xfffffffc	      9674	dwarf.c	FUNCTION_102
0x4000252	          0x8d5704	                      lea edx, [rdi + 4]	      9675	dwarf.c	FUNCTION_102	IF_1
0x4000255	          0x4939d4	                            cmp r12, rdx	      9675	dwarf.c	FUNCTION_102	IF_1
0x4000258	            0x7215	                            jb 0x400026f	      9675	dwarf.c	FUNCTION_102	IF_1
0x400025a	          0x4801df	                            add rdi, rbx	      9678	dwarf.c	FUNCTION_102	CALL_2
0x400025d	      0xbe04000000	                              mov esi, 4	      9678	dwarf.c	FUNCTION_102	CALL_2
0x4000262	    0xff1500000000	                 call qword [0x04000268]	      9678	dwarf.c	FUNCTION_102	CALL_2
0x4000268	        0x48894500	                    mov qword [rbp], rax	      9678	dwarf.c	FUNCTION_102	CALL_2
0x400026c	          0x4889d8	                            mov rax, rbx	      9679	dwarf.c	FUNCTION_102
0x400026f	              0x5b	                                 pop rbx	      9680	dwarf.c	FUNCTION_102
0x4000270	              0x5d	                                 pop rbp	      9680	dwarf.c	FUNCTION_102
0x4000271	            0x415c	                                 pop r12	      9680	dwarf.c	FUNCTION_102
0x4000273	              0xc3	                                     ret	      9680	dwarf.c	FUNCTION_102
range_entry_compar	ELSE,0:FOR,0:CALL,0:WHILE,0:DO,0:functions,0:SWITCH,0:IF,0	9
0x40000a0	          0x488b16	                    mov rdx, qword [rsi]	      6551	dwarf.c	FUNCTION_66
0x40000a3	          0x488b0f	                    mov rcx, qword [rdi]	      6550	dwarf.c	FUNCTION_66
0x40000a6	            0x31c0	                            xor eax, eax	      6553	dwarf.c	FUNCTION_66
0x40000a8	          0x4839d1	                            cmp rcx, rdx	      6553	dwarf.c	FUNCTION_66
0x40000ab	           0xf92c2	                                 setb dl	      6553	dwarf.c	FUNCTION_66
0x40000ae	           0xf97c0	                                 seta al	      6553	dwarf.c	FUNCTION_66
0x40000b1	           0xfb6d2	                           movzx edx, dl	      6553	dwarf.c	FUNCTION_66
0x40000b4	            0x29d0	                            sub eax, edx	      6553	dwarf.c	FUNCTION_66
0x40000b6	              0xc3	                                     ret	      6554	dwarf.c	FUNCTION_66
read_debug_line_header	ELSE,3:FOR,0:CALL,12:WHILE,0:DO,0:functions,0:SWITCH,0:IF,9	409
0x4000b20	            0x4157	                                push r15	      3314	dwarf.c	FUNCTION_36
0x4000b22	        0x4c8d7e04	                      lea r15, [rsi + 4]	      3324	dwarf.c	FUNCTION_36
0x4000b26	            0x4156	                                push r14	      3314	dwarf.c	FUNCTION_36
0x4000b28	            0x4155	                                push r13	      3314	dwarf.c	FUNCTION_36
0x4000b2a	            0x4154	                                push r12	      3314	dwarf.c	FUNCTION_36
0x4000b2c	          0x4989f6	                            mov r14, rsi	      3314	dwarf.c	FUNCTION_36
0x4000b2f	              0x55	                                push rbp	      3314	dwarf.c	FUNCTION_36
0x4000b30	              0x53	                                push rbx	      3314	dwarf.c	FUNCTION_36
0x4000b31	          0x4989fc	                            mov r12, rdi	      3314	dwarf.c	FUNCTION_36
0x4000b34	          0x4889d3	                            mov rbx, rdx	      3314	dwarf.c	FUNCTION_36
0x4000b37	          0x4889cd	                            mov rbp, rcx	      3314	dwarf.c	FUNCTION_36
0x4000b3a	        0x4883ec28	                           sub rsp, 0x28	      3314	dwarf.c	FUNCTION_36
0x4000b3e	          0x4939d7	                            cmp r15, rdx	      3324	dwarf.c	FUNCTION_36
0x4000b41	      0x4c89442408	                 mov qword [rsp + 8], r8	      3314	dwarf.c	FUNCTION_36
0x4000b46	     0xf8264010000	                            jb 0x4000cb0	      3324	dwarf.c	FUNCTION_36
0x4000b4c	          0x4839d6	                            cmp rsi, rdx	      3324	dwarf.c	FUNCTION_36
0x4000b4f	     0xf82eb010000	                            jb 0x4000d40	      3324	dwarf.c	FUNCTION_36
0x4000b55	    0x48c745000000	                      mov qword [rbp], 0	      3324	dwarf.c	FUNCTION_36
0x4000b5d	      0xb804000000	                              mov eax, 4	      3324	dwarf.c	FUNCTION_36
0x4000b62	    0xc74524040000	               mov dword [rbp + 0x24], 4	      3335	dwarf.c	FUNCTION_36	ELSE_1
0x4000b69	    0x48c744241004	               mov qword [rsp + 0x10], 4	      3335	dwarf.c	FUNCTION_36	ELSE_1
0x4000b72	    0x41bd04000000	                             mov r13d, 4	      3336	dwarf.c	FUNCTION_36	ELSE_1
0x4000b78	      0x4939442430	            cmp qword [r12 + 0x30], rax 	      3339	dwarf.c	FUNCTION_36	IF_2
0x4000b7d	     0xf825d030000	                            jb 0x4000ee0	      3339	dwarf.c	FUNCTION_36	IF_2
0x4000b83	        0x4d8d6f02	                      lea r13, [r15 + 2]	      3360	dwarf.c	FUNCTION_36
0x4000b87	          0x4c39eb	                            cmp rbx, r13	      3360	dwarf.c	FUNCTION_36
0x4000b8a	     0xf8680010000	                           jbe 0x4000d10	      3360	dwarf.c	FUNCTION_36
0x4000b90	      0xbe02000000	                              mov esi, 2	      3360	dwarf.c	FUNCTION_36
0x4000b95	          0x4c89ff	                            mov rdi, r15	      3360	dwarf.c	FUNCTION_36
0x4000b98	    0xff1500000000	                 call qword [0x04000b9e]	      3360	dwarf.c	FUNCTION_36
0x4000b9e	          0x8d48fe	                      lea ecx, [rax - 2]	      3362	dwarf.c	FUNCTION_36	IF_4
0x4000ba1	        0x66894508	                  mov word [rbp + 8], ax	      3360	dwarf.c	FUNCTION_36
0x4000ba5	        0x6683f903	                               cmp cx, 3	      3362	dwarf.c	FUNCTION_36	IF_4
0x4000ba9	     0xf877e010000	                            ja 0x4000d2d	      3362	dwarf.c	FUNCTION_36	IF_4
0x4000baf	        0x6683f805	                               cmp ax, 5	      3372	dwarf.c	FUNCTION_36	IF_5
0x4000bb3	            0x7546	                           jne 0x4000bfb	      3372	dwarf.c	FUNCTION_36	IF_5
0x4000bb5	        0x498d4f03	                      lea rcx, [r15 + 3]	      3374	dwarf.c	FUNCTION_36	IF_5
0x4000bb9	          0x4839cb	                            cmp rbx, rcx	      3374	dwarf.c	FUNCTION_36	IF_5
0x4000bbc	     0xf87ae030000	                            ja 0x4000f70	      3374	dwarf.c	FUNCTION_36	IF_5
0x4000bc2	          0x4c39eb	                            cmp rbx, r13	      3374	dwarf.c	FUNCTION_36	IF_5
0x4000bc5	            0x7612	                           jbe 0x4000bd9	      3374	dwarf.c	FUNCTION_36	IF_5
0x4000bc7	          0x4889de	                            mov rsi, rbx	      3374	dwarf.c	FUNCTION_36	IF_5
0x4000bca	          0x4c29ee	                            sub rsi, r13	      3374	dwarf.c	FUNCTION_36	IF_5
0x4000bcd	          0x8d46ff	                      lea eax, [rsi - 1]	      3374	dwarf.c	FUNCTION_36	IF_5
0x4000bd0	          0x83f807	                              cmp eax, 7	      3374	dwarf.c	FUNCTION_36	IF_5
0x4000bd3	     0xf869c030000	                           jbe 0x4000f75	      3374	dwarf.c	FUNCTION_36	IF_5
0x4000bd9	        0x4d8d6f04	                      lea r13, [r15 + 4]	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000bdd	          0x4c39eb	                            cmp rbx, r13	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000be0	            0x7619	                           jbe 0x4000bfb	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000be2	      0xbe01000000	                              mov esi, 1	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000be7	          0x4889cf	                            mov rdi, rcx	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000bea	    0xff1500000000	                 call qword [0x04000bf0]	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000bf0	            0x84c0	                             test al, al	      3377	dwarf.c	FUNCTION_36	IF_5	IF_6
0x4000bf2	          0x4989c7	                            mov r15, rax	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000bf5	     0xf8535040000	                           jne 0x4001030	      3377	dwarf.c	FUNCTION_36	IF_5	IF_6
0x4000bfb	        0x448b6524	           mov r12d, dword [rbp + 0x24] 	      3386	dwarf.c	FUNCTION_36
0x4000bff	        0x4183fc08	                             cmp r12d, 8	      3386	dwarf.c	FUNCTION_36
0x4000c03	     0xf870f030000	                            ja 0x4000f18	      3386	dwarf.c	FUNCTION_36
0x4000c09	          0x4489e0	                           mov eax, r12d	      3386	dwarf.c	FUNCTION_36
0x4000c0c	          0x4c01e8	                            add rax, r13	      3386	dwarf.c	FUNCTION_36
0x4000c0f	          0x4839c3	                            cmp rbx, rax	      3386	dwarf.c	FUNCTION_36
0x4000c12	            0x770b	                            ja 0x4000c1f	      3386	dwarf.c	FUNCTION_36
0x4000c14	          0x4939dd	                            cmp r13, rbx	      3386	dwarf.c	FUNCTION_36
0x4000c17	            0x7317	                           jae 0x4000c30	      3386	dwarf.c	FUNCTION_36
0x4000c19	          0x4189dc	                           mov r12d, ebx	      3386	dwarf.c	FUNCTION_36
0x4000c1c	          0x4529ec	                          sub r12d, r13d	      3386	dwarf.c	FUNCTION_36
0x4000c1f	      0x418d4424ff	                      lea eax, [r12 - 1]	      3386	dwarf.c	FUNCTION_36
0x4000c24	          0x4489e6	                           mov esi, r12d	      3386	dwarf.c	FUNCTION_36
0x4000c27	          0x83f807	                              cmp eax, 7	      3386	dwarf.c	FUNCTION_36
0x4000c2a	     0xf8626030000	                           jbe 0x4000f56	      3386	dwarf.c	FUNCTION_36
0x4000c30	    0x48c745100000	               mov qword [rbp + 0x10], 0	      3386	dwarf.c	FUNCTION_36
0x4000c38	          0x8b4524	            mov eax, dword [rbp + 0x24] 	      3386	dwarf.c	FUNCTION_36
0x4000c3b	          0x4901c5	                            add r13, rax	      3386	dwarf.c	FUNCTION_36
0x4000c3e	        0x4d8d6501	                      lea r12, [r13 + 1]	      3388	dwarf.c	FUNCTION_36
0x4000c42	          0x4c39e3	                            cmp rbx, r12	      3388	dwarf.c	FUNCTION_36
0x4000c45	     0xf8715010000	                            ja 0x4000d60	      3388	dwarf.c	FUNCTION_36
0x4000c4b	          0x4c39eb	                            cmp rbx, r13	      3388	dwarf.c	FUNCTION_36
0x4000c4e	            0x7612	                           jbe 0x4000c62	      3388	dwarf.c	FUNCTION_36
0x4000c50	          0x4889de	                            mov rsi, rbx	      3388	dwarf.c	FUNCTION_36
0x4000c53	          0x4c29ee	                            sub rsi, r13	      3388	dwarf.c	FUNCTION_36
0x4000c56	          0x8d46ff	                      lea eax, [rsi - 1]	      3388	dwarf.c	FUNCTION_36
0x4000c59	          0x83f807	                              cmp eax, 7	      3388	dwarf.c	FUNCTION_36
0x4000c5c	     0xf8603010000	                           jbe 0x4000d65	      3388	dwarf.c	FUNCTION_36
0x4000c62	      0x66837d0803	                   cmp word [rbp + 8], 3	      3390	dwarf.c	FUNCTION_36	IF_7
0x4000c67	        0xc6451800	                mov byte [rbp + 0x18], 0	      3388	dwarf.c	FUNCTION_36
0x4000c6b	     0xf860b010000	                           jbe 0x4000d7c	      3390	dwarf.c	FUNCTION_36	IF_7
0x4000c71	        0x4983c502	                              add r13, 2	      3392	dwarf.c	FUNCTION_36	IF_7
0x4000c75	          0x4c39eb	                            cmp rbx, r13	      3392	dwarf.c	FUNCTION_36	IF_7
0x4000c78	     0xf873a030000	                            ja 0x4000fb8	      3392	dwarf.c	FUNCTION_36	IF_7
0x4000c7e	          0x4c39e3	                            cmp rbx, r12	      3392	dwarf.c	FUNCTION_36	IF_7
0x4000c81	     0xf8791030000	                            ja 0x4001018	      3392	dwarf.c	FUNCTION_36	IF_7
0x4000c87	        0xc6451900	                mov byte [rbp + 0x19], 0	      3392	dwarf.c	FUNCTION_36	IF_7
0x4000c8b	      0xba05000000	                              mov edx, 5	      3396	dwarf.c	FUNCTION_36	IF_7	IF_8	CALL_9
0x4000c90	      0xbe00000000	                              mov esi, 0	      3396	dwarf.c	FUNCTION_36	IF_7	IF_8	CALL_9
0x4000c95	            0x31ff	                            xor edi, edi	      3396	dwarf.c	FUNCTION_36	IF_7	IF_8	CALL_9
0x4000c97	          0x4531e4	                          xor r12d, r12d	      3397	dwarf.c	FUNCTION_36	IF_7	IF_8
0x4000c9a	      0xe800000000	                          call 0x4000c9f	      3396	dwarf.c	FUNCTION_36	IF_7	IF_8	CALL_9
0x4000c9f	          0x4889c7	                            mov rdi, rax	      3396	dwarf.c	FUNCTION_36	IF_7	IF_8	CALL_9
0x4000ca2	            0x31c0	                            xor eax, eax	      3396	dwarf.c	FUNCTION_36	IF_7	IF_8	CALL_9
0x4000ca4	      0xe800000000	                          call 0x4000ca9	      3396	dwarf.c	FUNCTION_36	IF_7	IF_8	CALL_9
0x4000ca9	      0xe985010000	                           jmp 0x4000e33	      3397	dwarf.c	FUNCTION_36	IF_7	IF_8
0x4000cae	            0x6690	                                     nop	      3397	dwarf.c	FUNCTION_36	IF_7	IF_8
0x4000cb0	      0xbe04000000	                              mov esi, 4	      3397	dwarf.c	FUNCTION_36	IF_7	IF_8
0x4000cb5	          0x4c89f7	                            mov rdi, r14	      3324	dwarf.c	FUNCTION_36
0x4000cb8	    0xff1500000000	                 call qword [0x04000cbe]	      3324	dwarf.c	FUNCTION_36
0x4000cbe	      0xb9ffffffff	                     mov ecx, 0xffffffff	      3326	dwarf.c	FUNCTION_36	IF_1
0x4000cc3	        0x48894500	                    mov qword [rbp], rax	      3324	dwarf.c	FUNCTION_36
0x4000cc7	          0x4839c8	                            cmp rax, rcx	      3326	dwarf.c	FUNCTION_36	IF_1
0x4000cca	     0xf858f030000	                           jne 0x400105f	      3326	dwarf.c	FUNCTION_36	IF_1
0x4000cd0	        0x4d8d6e0c	                    lea r13, [r14 + 0xc]	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000cd4	          0x4c39eb	                            cmp rbx, r13	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000cd7	     0xf8703030000	                            ja 0x4000fe0	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000cdd	          0x4939df	                            cmp r15, rbx	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000ce0	            0x7312	                           jae 0x4000cf4	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000ce2	          0x4889de	                            mov rsi, rbx	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000ce5	          0x4c29fe	                            sub rsi, r15	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000ce8	          0x8d46ff	                      lea eax, [rsi - 1]	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000ceb	          0x83f807	                              cmp eax, 7	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000cee	     0xf86f1020000	                           jbe 0x4000fe5	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000cf4	    0x48c745000000	                      mov qword [rbp], 0	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000cfc	      0xb80c000000	                            mov eax, 0xc	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000d01	      0xe9f0020000	                           jmp 0x4000ff6	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000d06	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000d10	          0x4939df	                            cmp r15, rbx	      3360	dwarf.c	FUNCTION_36
0x4000d13	            0x7312	                           jae 0x4000d27	      3360	dwarf.c	FUNCTION_36
0x4000d15	          0x4889de	                            mov rsi, rbx	      3360	dwarf.c	FUNCTION_36
0x4000d18	          0x4c29fe	                            sub rsi, r15	      3360	dwarf.c	FUNCTION_36
0x4000d1b	          0x8d46ff	                      lea eax, [rsi - 1]	      3360	dwarf.c	FUNCTION_36
0x4000d1e	          0x83f807	                              cmp eax, 7	      3360	dwarf.c	FUNCTION_36
0x4000d21	     0xf866efeffff	                           jbe 0x4000b95	      3360	dwarf.c	FUNCTION_36
0x4000d27	            0x31c0	                            xor eax, eax	      3360	dwarf.c	FUNCTION_36
0x4000d29	        0x66894508	                  mov word [rbp + 8], ax	      3360	dwarf.c	FUNCTION_36
0x4000d2d	      0xba05000000	                              mov edx, 5	      3367	dwarf.c	FUNCTION_36	IF_4	CALL_5
0x4000d32	      0xbe00000000	                              mov esi, 0	      3367	dwarf.c	FUNCTION_36	IF_4	CALL_5
0x4000d37	      0xe959ffffff	                           jmp 0x4000c95	      3367	dwarf.c	FUNCTION_36	IF_4	CALL_5
0x4000d3c	         0xf1f4000	                         nop dword [rax]	      3367	dwarf.c	FUNCTION_36	IF_4	CALL_5
0x4000d40	          0x4889d6	                            mov rsi, rdx	      3324	dwarf.c	FUNCTION_36
0x4000d43	          0x4c29f6	                            sub rsi, r14	      3324	dwarf.c	FUNCTION_36
0x4000d46	          0x8d46ff	                      lea eax, [rsi - 1]	      3324	dwarf.c	FUNCTION_36
0x4000d49	          0x83f807	                              cmp eax, 7	      3324	dwarf.c	FUNCTION_36
0x4000d4c	     0xf8703feffff	                            ja 0x4000b55	      3324	dwarf.c	FUNCTION_36
0x4000d52	      0xe95effffff	                           jmp 0x4000cb5	      3324	dwarf.c	FUNCTION_36
0x4000d57	    0x660f1f840000	                    nop word [rax + rax]	      3324	dwarf.c	FUNCTION_36
0x4000d60	      0xbe01000000	                              mov esi, 1	      3324	dwarf.c	FUNCTION_36
0x4000d65	          0x4c89ef	                            mov rdi, r13	      3388	dwarf.c	FUNCTION_36
0x4000d68	    0xff1500000000	                 call qword [0x04000d6e]	      3388	dwarf.c	FUNCTION_36
0x4000d6e	      0x66837d0803	                   cmp word [rbp + 8], 3	      3390	dwarf.c	FUNCTION_36	IF_7
0x4000d73	          0x884518	               mov byte [rbp + 0x18], al	      3388	dwarf.c	FUNCTION_36
0x4000d76	     0xf87f5feffff	                            ja 0x4000c71	      3390	dwarf.c	FUNCTION_36	IF_7
0x4000d7c	        0xc6451901	                mov byte [rbp + 0x19], 1	      3401	dwarf.c	FUNCTION_36	ELSE_3
0x4000d80	      0x498d4c2401	                      lea rcx, [r12 + 1]	      3403	dwarf.c	FUNCTION_36
0x4000d85	          0x4839cb	                            cmp rbx, rcx	      3403	dwarf.c	FUNCTION_36
0x4000d88	     0xf87ba000000	                            ja 0x4000e48	      3403	dwarf.c	FUNCTION_36
0x4000d8e	          0x4939dc	                            cmp r12, rbx	      3403	dwarf.c	FUNCTION_36
0x4000d91	            0x7312	                           jae 0x4000da5	      3403	dwarf.c	FUNCTION_36
0x4000d93	          0x4889de	                            mov rsi, rbx	      3403	dwarf.c	FUNCTION_36
0x4000d96	          0x4c29e6	                            sub rsi, r12	      3403	dwarf.c	FUNCTION_36
0x4000d99	          0x8d46ff	                      lea eax, [rsi - 1]	      3403	dwarf.c	FUNCTION_36
0x4000d9c	          0x83f807	                              cmp eax, 7	      3403	dwarf.c	FUNCTION_36
0x4000d9f	     0xf86b6030000	                           jbe 0x400115b	      3403	dwarf.c	FUNCTION_36
0x4000da5	      0x498d542402	                      lea rdx, [r12 + 2]	      3404	dwarf.c	FUNCTION_36
0x4000daa	        0xc6451a00	                mov byte [rbp + 0x1a], 0	      3403	dwarf.c	FUNCTION_36
0x4000dae	          0x4839da	                            cmp rdx, rbx	      3404	dwarf.c	FUNCTION_36
0x4000db1	     0xf83c8000000	                           jae 0x4000e7f	      3404	dwarf.c	FUNCTION_36
0x4000db7	          0x4889cf	                            mov rdi, rcx	      3404	dwarf.c	FUNCTION_36
0x4000dba	      0xbe01000000	                              mov esi, 1	      3404	dwarf.c	FUNCTION_36
0x4000dbf	      0x4889542418	             mov qword [rsp + 0x18], rdx	      3404	dwarf.c	FUNCTION_36
0x4000dc4	      0xe800000000	                          call 0x4000dc9	      3404	dwarf.c	FUNCTION_36
0x4000dc9	      0x498d4c2403	                      lea rcx, [r12 + 3]	      3405	dwarf.c	FUNCTION_36
0x4000dce	          0x89451c	            mov dword [rbp + 0x1c], eax 	      3404	dwarf.c	FUNCTION_36
0x4000dd1	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      3405	dwarf.c	FUNCTION_36
0x4000dd6	          0x4839cb	                            cmp rbx, rcx	      3405	dwarf.c	FUNCTION_36
0x4000dd9	     0xf871e030000	                            ja 0x40010fd	      3405	dwarf.c	FUNCTION_36
0x4000ddf	          0x4889de	                            mov rsi, rbx	      3405	dwarf.c	FUNCTION_36
0x4000de2	          0x4829d6	                            sub rsi, rdx	      3405	dwarf.c	FUNCTION_36
0x4000de5	          0x8d46ff	                      lea eax, [rsi - 1]	      3405	dwarf.c	FUNCTION_36
0x4000de8	          0x83f807	                              cmp eax, 7	      3405	dwarf.c	FUNCTION_36
0x4000deb	     0xf8642030000	                           jbe 0x4001133	      3405	dwarf.c	FUNCTION_36
0x4000df1	        0x4983c404	                              add r12, 4	      3406	dwarf.c	FUNCTION_36
0x4000df5	        0xc6452000	                mov byte [rbp + 0x20], 0	      3405	dwarf.c	FUNCTION_36
0x4000df9	          0x4939dc	                            cmp r12, rbx	      3406	dwarf.c	FUNCTION_36
0x4000dfc	     0xf83cc000000	                           jae 0x4000ece	      3406	dwarf.c	FUNCTION_36
0x4000e02	      0xbe01000000	                              mov esi, 1	      3406	dwarf.c	FUNCTION_36
0x4000e07	          0x4889cf	                            mov rdi, rcx	      3406	dwarf.c	FUNCTION_36
0x4000e0a	    0xff1500000000	                 call qword [0x04000e10]	      3406	dwarf.c	FUNCTION_36
0x4000e10	          0x884521	               mov byte [rbp + 0x21], al	      3406	dwarf.c	FUNCTION_36
0x4000e13	        0x488b7500	                    mov rsi, qword [rbp]	      3408	dwarf.c	FUNCTION_36
0x4000e17	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	      3408	dwarf.c	FUNCTION_36
0x4000e1c	      0x488b442408	                mov rax, qword [rsp + 8]	      3408	dwarf.c	FUNCTION_36
0x4000e21	          0x4901f5	                            add r13, rsi	      3408	dwarf.c	FUNCTION_36
0x4000e24	          0x4d01ee	                            add r14, r13	      3408	dwarf.c	FUNCTION_36
0x4000e27	          0x4c39f3	                            cmp rbx, r14	      3410	dwarf.c	FUNCTION_36	IF_9
0x4000e2a	          0x4c8930	                    mov qword [rax], r14	      3408	dwarf.c	FUNCTION_36
0x4000e2d	     0xf823d020000	                            jb 0x4001070	      3410	dwarf.c	FUNCTION_36	IF_9
0x4000e33	        0x4883c428	                           add rsp, 0x28	      3419	dwarf.c	FUNCTION_36
0x4000e37	          0x4c89e0	                            mov rax, r12	      3419	dwarf.c	FUNCTION_36
0x4000e3a	              0x5b	                                 pop rbx	      3419	dwarf.c	FUNCTION_36
0x4000e3b	              0x5d	                                 pop rbp	      3419	dwarf.c	FUNCTION_36
0x4000e3c	            0x415c	                                 pop r12	      3419	dwarf.c	FUNCTION_36
0x4000e3e	            0x415d	                                 pop r13	      3419	dwarf.c	FUNCTION_36
0x4000e40	            0x415e	                                 pop r14	      3419	dwarf.c	FUNCTION_36
0x4000e42	            0x415f	                                 pop r15	      3419	dwarf.c	FUNCTION_36
0x4000e44	              0xc3	                                     ret	      3419	dwarf.c	FUNCTION_36
0x4000e45	           0xf1f00	                         nop dword [rax]	      3419	dwarf.c	FUNCTION_36
0x4000e48	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      3419	dwarf.c	FUNCTION_36
0x4000e4d	      0xbe01000000	                              mov esi, 1	      3403	dwarf.c	FUNCTION_36
0x4000e52	          0x4c89e7	                            mov rdi, r12	      3403	dwarf.c	FUNCTION_36
0x4000e55	    0xff1500000000	                 call qword [0x04000e5b]	      3403	dwarf.c	FUNCTION_36
0x4000e5b	      0x498d542402	                      lea rdx, [r12 + 2]	      3404	dwarf.c	FUNCTION_36
0x4000e60	          0x88451a	               mov byte [rbp + 0x1a], al	      3403	dwarf.c	FUNCTION_36
0x4000e63	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      3404	dwarf.c	FUNCTION_36
0x4000e68	          0x4839d3	                            cmp rbx, rdx	      3404	dwarf.c	FUNCTION_36
0x4000e6b	     0xf870e030000	                            ja 0x400117f	      3404	dwarf.c	FUNCTION_36
0x4000e71	          0x4889de	                            mov rsi, rbx	      3404	dwarf.c	FUNCTION_36
0x4000e74	          0x4829ce	                            sub rsi, rcx	      3404	dwarf.c	FUNCTION_36
0x4000e77	            0x85f6	                           test esi, esi	      3404	dwarf.c	FUNCTION_36
0x4000e79	     0xf855b020000	                           jne 0x40010da	      3404	dwarf.c	FUNCTION_36
0x4000e7f	      0x498d4c2403	                      lea rcx, [r12 + 3]	      3405	dwarf.c	FUNCTION_36
0x4000e84	    0xc7451c000000	               mov dword [rbp + 0x1c], 0	      3404	dwarf.c	FUNCTION_36
0x4000e8b	          0x4839d9	                            cmp rcx, rbx	      3405	dwarf.c	FUNCTION_36
0x4000e8e	     0xf835dffffff	                           jae 0x4000df1	      3405	dwarf.c	FUNCTION_36
0x4000e94	        0x4983c404	                              add r12, 4	      3406	dwarf.c	FUNCTION_36
0x4000e98	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      3406	dwarf.c	FUNCTION_36
0x4000e9d	      0xbe01000000	                              mov esi, 1	      3405	dwarf.c	FUNCTION_36
0x4000ea2	          0x4889d7	                            mov rdi, rdx	      3405	dwarf.c	FUNCTION_36
0x4000ea5	    0xff1500000000	                 call qword [0x04000eab]	      3405	dwarf.c	FUNCTION_36
0x4000eab	          0x4c39e3	                            cmp rbx, r12	      3406	dwarf.c	FUNCTION_36
0x4000eae	          0x884520	               mov byte [rbp + 0x20], al	      3405	dwarf.c	FUNCTION_36
0x4000eb1	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      3406	dwarf.c	FUNCTION_36
0x4000eb6	     0xf8746ffffff	                            ja 0x4000e02	      3406	dwarf.c	FUNCTION_36
0x4000ebc	          0x4889de	                            mov rsi, rbx	      3406	dwarf.c	FUNCTION_36
0x4000ebf	          0x4829ce	                            sub rsi, rcx	      3406	dwarf.c	FUNCTION_36
0x4000ec2	          0x8d46ff	                      lea eax, [rsi - 1]	      3406	dwarf.c	FUNCTION_36
0x4000ec5	          0x83f807	                              cmp eax, 7	      3406	dwarf.c	FUNCTION_36
0x4000ec8	     0xf8639ffffff	                           jbe 0x4000e07	      3406	dwarf.c	FUNCTION_36
0x4000ece	        0xc6452100	                mov byte [rbp + 0x21], 0	      3406	dwarf.c	FUNCTION_36
0x4000ed2	      0xe93cffffff	                           jmp 0x4000e13	      3406	dwarf.c	FUNCTION_36
0x4000ed7	    0x660f1f840000	                    nop word [rax + rax]	      3406	dwarf.c	FUNCTION_36
0x4000ee0	          0x8b4524	            mov eax, dword [rbp + 0x24] 	      3347	dwarf.c	FUNCTION_36	IF_2	IF_3	CALL_1
0x4000ee3	          0x4c89fe	                            mov rsi, r15	      3347	dwarf.c	FUNCTION_36	IF_2	IF_3	CALL_1
0x4000ee6	      0x492b742420	             sub rsi, qword [r12 + 0x20]	      3347	dwarf.c	FUNCTION_36	IF_2	IF_3	CALL_1
0x4000eeb	          0x4c89e7	                            mov rdi, r12	      3347	dwarf.c	FUNCTION_36	IF_2	IF_3	CALL_1
0x4000eee	          0x4829c6	                            sub rsi, rax	      3347	dwarf.c	FUNCTION_36	IF_2	IF_3	CALL_1
0x4000ef1	      0xe800000000	                          call 0x4000ef6	      3347	dwarf.c	FUNCTION_36	IF_2	IF_3	CALL_1
0x4000ef6	            0x85c0	                           test eax, eax	      3347	dwarf.c	FUNCTION_36	IF_2	IF_3	CALL_1
0x4000ef8	     0xf84b2010000	                            je 0x40010b0	      3347	dwarf.c	FUNCTION_36	IF_2	IF_3	CALL_1
0x4000efe	          0x4889d8	                            mov rax, rbx	      3349	dwarf.c	FUNCTION_36	IF_2	IF_3
0x4000f01	          0x4489e9	                           mov ecx, r13d	      3349	dwarf.c	FUNCTION_36	IF_2	IF_3
0x4000f04	          0x4c29f0	                            sub rax, r14	      3349	dwarf.c	FUNCTION_36	IF_2	IF_3
0x4000f07	          0x4829c8	                            sub rax, rcx	      3349	dwarf.c	FUNCTION_36	IF_2	IF_3
0x4000f0a	        0x48894500	                    mov qword [rbp], rax	      3349	dwarf.c	FUNCTION_36	IF_2	IF_3
0x4000f0e	      0xe970fcffff	                           jmp 0x4000b83	      3349	dwarf.c	FUNCTION_36	IF_2	IF_3
0x4000f13	       0xf1f440000	                   nop dword [rax + rax]	      3349	dwarf.c	FUNCTION_36	IF_2	IF_3
0x4000f18	            0x31ff	                            xor edi, edi	      3386	dwarf.c	FUNCTION_36
0x4000f1a	          0x4489e1	                           mov ecx, r12d	      3386	dwarf.c	FUNCTION_36
0x4000f1d	    0x41b805000000	                              mov r8d, 5	      3386	dwarf.c	FUNCTION_36
0x4000f23	      0xba00000000	                              mov edx, 0	      3386	dwarf.c	FUNCTION_36
0x4000f28	      0xbe00000000	                              mov esi, 0	      3386	dwarf.c	FUNCTION_36
0x4000f2d	      0xe800000000	                          call 0x4000f32	      3386	dwarf.c	FUNCTION_36
0x4000f32	      0xba08000000	                              mov edx, 8	      3386	dwarf.c	FUNCTION_36
0x4000f37	          0x4889c7	                            mov rdi, rax	      3386	dwarf.c	FUNCTION_36
0x4000f3a	          0x4489e6	                           mov esi, r12d	      3386	dwarf.c	FUNCTION_36
0x4000f3d	            0x31c0	                            xor eax, eax	      3386	dwarf.c	FUNCTION_36
0x4000f3f	      0xe800000000	                          call 0x4000f44	      3386	dwarf.c	FUNCTION_36
0x4000f44	        0x498d4508	                      lea rax, [r13 + 8]	      3386	dwarf.c	FUNCTION_36
0x4000f48	          0x4839c3	                            cmp rbx, rax	      3386	dwarf.c	FUNCTION_36
0x4000f4b	     0xf86c3fcffff	                           jbe 0x4000c14	      3386	dwarf.c	FUNCTION_36
0x4000f51	      0xbe08000000	                              mov esi, 8	      3386	dwarf.c	FUNCTION_36
0x4000f56	          0x4c89ef	                            mov rdi, r13	      3386	dwarf.c	FUNCTION_36
0x4000f59	    0xff1500000000	                 call qword [0x04000f5f]	      3386	dwarf.c	FUNCTION_36
0x4000f5f	        0x48894510	            mov qword [rbp + 0x10], rax 	      3386	dwarf.c	FUNCTION_36
0x4000f63	      0xe9d0fcffff	                           jmp 0x4000c38	      3386	dwarf.c	FUNCTION_36
0x4000f68	     0xf1f84000000	                   nop dword [rax + rax]	      3386	dwarf.c	FUNCTION_36
0x4000f70	      0xbe01000000	                              mov esi, 1	      3386	dwarf.c	FUNCTION_36
0x4000f75	          0x4c89ef	                            mov rdi, r13	      3374	dwarf.c	FUNCTION_36	IF_5
0x4000f78	        0x4d8d6f04	                      lea r13, [r15 + 4]	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000f7c	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000f81	    0xff1500000000	                 call qword [0x04000f87]	      3374	dwarf.c	FUNCTION_36	IF_5
0x4000f87	          0x4c39eb	                            cmp rbx, r13	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000f8a	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000f8f	     0xf874dfcffff	                            ja 0x4000be2	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000f95	          0x4839cb	                            cmp rbx, rcx	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000f98	     0xf865dfcffff	                           jbe 0x4000bfb	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000f9e	          0x4889de	                            mov rsi, rbx	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000fa1	          0x4829ce	                            sub rsi, rcx	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000fa4	          0x8d46ff	                      lea eax, [rsi - 1]	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000fa7	          0x83f807	                              cmp eax, 7	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000faa	     0xf874bfcffff	                            ja 0x4000bfb	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000fb0	      0xe932fcffff	                           jmp 0x4000be7	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000fb5	           0xf1f00	                         nop dword [rax]	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000fb8	      0xbe01000000	                              mov esi, 1	      3376	dwarf.c	FUNCTION_36	IF_5
0x4000fbd	          0x4c89e7	                            mov rdi, r12	      3392	dwarf.c	FUNCTION_36	IF_7
0x4000fc0	    0xff1500000000	                 call qword [0x04000fc6]	      3392	dwarf.c	FUNCTION_36	IF_7
0x4000fc6	            0x84c0	                             test al, al	      3394	dwarf.c	FUNCTION_36	IF_7	IF_8
0x4000fc8	          0x884519	               mov byte [rbp + 0x19], al	      3392	dwarf.c	FUNCTION_36	IF_7
0x4000fcb	     0xf84bafcffff	                            je 0x4000c8b	      3394	dwarf.c	FUNCTION_36	IF_7	IF_8
0x4000fd1	          0x4d89ec	                            mov r12, r13	      3392	dwarf.c	FUNCTION_36	IF_7
0x4000fd4	      0xe9a7fdffff	                           jmp 0x4000d80	      3392	dwarf.c	FUNCTION_36	IF_7
0x4000fd9	     0xf1f80000000	                         nop dword [rax]	      3392	dwarf.c	FUNCTION_36	IF_7
0x4000fe0	      0xbe08000000	                              mov esi, 8	      3392	dwarf.c	FUNCTION_36	IF_7
0x4000fe5	          0x4c89ff	                            mov rdi, r15	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000fe8	    0xff1500000000	                 call qword [0x04000fee]	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000fee	        0x48894500	                    mov qword [rbp], rax	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000ff2	        0x4883c00c	                            add rax, 0xc	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000ff6	          0x4d89ef	                            mov r15, r13	      3329	dwarf.c	FUNCTION_36	IF_1
0x4000ff9	    0xc74524080000	               mov dword [rbp + 0x24], 8	      3330	dwarf.c	FUNCTION_36	IF_1
0x4001000	    0x48c74424100c	            mov qword [rsp + 0x10], 0xc 	      3330	dwarf.c	FUNCTION_36	IF_1
0x4001009	    0x41bd0c000000	                           mov r13d, 0xc	      3331	dwarf.c	FUNCTION_36	IF_1
0x400100f	      0xe964fbffff	                           jmp 0x4000b78	      3331	dwarf.c	FUNCTION_36	IF_1
0x4001014	         0xf1f4000	                         nop dword [rax]	      3331	dwarf.c	FUNCTION_36	IF_1
0x4001018	          0x4889de	                            mov rsi, rbx	      3392	dwarf.c	FUNCTION_36	IF_7
0x400101b	          0x4c29e6	                            sub rsi, r12	      3392	dwarf.c	FUNCTION_36	IF_7
0x400101e	          0x8d46ff	                      lea eax, [rsi - 1]	      3392	dwarf.c	FUNCTION_36	IF_7
0x4001021	          0x83f807	                              cmp eax, 7	      3392	dwarf.c	FUNCTION_36	IF_7
0x4001024	     0xf875dfcffff	                            ja 0x4000c87	      3392	dwarf.c	FUNCTION_36	IF_7
0x400102a	            0xeb91	                           jmp 0x4000fbd	      3392	dwarf.c	FUNCTION_36	IF_7
0x400102c	         0xf1f4000	                         nop dword [rax]	      3392	dwarf.c	FUNCTION_36	IF_7
0x4001030	      0x498b5c2410	            mov rbx, qword [r12 + 0x10] 	      3379	dwarf.c	FUNCTION_36	IF_5	IF_6	CALL_7
0x4001035	      0xba05000000	                              mov edx, 5	      3379	dwarf.c	FUNCTION_36	IF_5	IF_6	CALL_7
0x400103a	      0xbe00000000	                              mov esi, 0	      3379	dwarf.c	FUNCTION_36	IF_5	IF_6	CALL_7
0x400103f	            0x31ff	                            xor edi, edi	      3379	dwarf.c	FUNCTION_36	IF_5	IF_6	CALL_7
0x4001041	          0x4531e4	                          xor r12d, r12d	      3382	dwarf.c	FUNCTION_36	IF_5	IF_6
0x4001044	      0xe800000000	                          call 0x4001049	      3379	dwarf.c	FUNCTION_36	IF_5	IF_6	CALL_7
0x4001049	        0x410fb6d7	                         movzx edx, r15b	      3379	dwarf.c	FUNCTION_36	IF_5	IF_6	CALL_7
0x400104d	          0x4889c7	                            mov rdi, rax	      3379	dwarf.c	FUNCTION_36	IF_5	IF_6	CALL_7
0x4001050	          0x4889de	                            mov rsi, rbx	      3379	dwarf.c	FUNCTION_36	IF_5	IF_6	CALL_7
0x4001053	            0x31c0	                            xor eax, eax	      3379	dwarf.c	FUNCTION_36	IF_5	IF_6	CALL_7
0x4001055	      0xe800000000	                          call 0x400105a	      3379	dwarf.c	FUNCTION_36	IF_5	IF_6	CALL_7
0x400105a	      0xe9d4fdffff	                           jmp 0x4000e33	      3382	dwarf.c	FUNCTION_36	IF_5	IF_6
0x400105f	        0x4883c004	                              add rax, 4	      3382	dwarf.c	FUNCTION_36	IF_5	IF_6
0x4001063	      0xe9fafaffff	                           jmp 0x4000b62	      3382	dwarf.c	FUNCTION_36	IF_5	IF_6
0x4001068	     0xf1f84000000	                   nop dword [rax + rax]	      3382	dwarf.c	FUNCTION_36	IF_5	IF_6
0x4001070	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x4001072	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x4001077	          0x4531e4	                          xor r12d, r12d	      3415	dwarf.c	FUNCTION_36	IF_9
0x400107a	      0xe881f2ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x400107f	      0xba05000000	                              mov edx, 5	      3412	dwarf.c	FUNCTION_36	IF_9	CALL_11
0x4001084	          0x4889c5	                            mov rbp, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x4001087	      0xbe00000000	                              mov esi, 0	      3412	dwarf.c	FUNCTION_36	IF_9	CALL_11
0x400108c	            0x31ff	                            xor edi, edi	      3412	dwarf.c	FUNCTION_36	IF_9	CALL_11
0x400108e	      0xe800000000	                          call 0x4001093	      3412	dwarf.c	FUNCTION_36	IF_9	CALL_11
0x4001093	          0x4889ee	                            mov rsi, rbp	      3412	dwarf.c	FUNCTION_36	IF_9	CALL_11
0x4001096	          0x4889c7	                            mov rdi, rax	      3412	dwarf.c	FUNCTION_36	IF_9	CALL_11
0x4001099	            0x31c0	                            xor eax, eax	      3412	dwarf.c	FUNCTION_36	IF_9	CALL_11
0x400109b	      0xe800000000	                          call 0x40010a0	      3412	dwarf.c	FUNCTION_36	IF_9	CALL_11
0x40010a0	      0x488b442408	                mov rax, qword [rsp + 8]	      3414	dwarf.c	FUNCTION_36	IF_9
0x40010a5	          0x488918	                    mov qword [rax], rbx	      3414	dwarf.c	FUNCTION_36	IF_9
0x40010a8	      0xe986fdffff	                           jmp 0x4000e33	      3415	dwarf.c	FUNCTION_36	IF_9
0x40010ad	           0xf1f00	                         nop dword [rax]	      3415	dwarf.c	FUNCTION_36	IF_9
0x40010b0	        0x488b5d00	                    mov rbx, qword [rbp]	      3353	dwarf.c	FUNCTION_36	IF_2	ELSE_2	CALL_3
0x40010b4	      0xba05000000	                              mov edx, 5	      3353	dwarf.c	FUNCTION_36	IF_2	ELSE_2	CALL_3
0x40010b9	      0xbe00000000	                              mov esi, 0	      3353	dwarf.c	FUNCTION_36	IF_2	ELSE_2	CALL_3
0x40010be	            0x31ff	                            xor edi, edi	      3353	dwarf.c	FUNCTION_36	IF_2	ELSE_2	CALL_3
0x40010c0	          0x4531e4	                          xor r12d, r12d	      3355	dwarf.c	FUNCTION_36	IF_2	ELSE_2
0x40010c3	      0xe800000000	                          call 0x40010c8	      3353	dwarf.c	FUNCTION_36	IF_2	ELSE_2	CALL_3
0x40010c8	          0x4889de	                            mov rsi, rbx	      3353	dwarf.c	FUNCTION_36	IF_2	ELSE_2	CALL_3
0x40010cb	          0x4889c7	                            mov rdi, rax	      3353	dwarf.c	FUNCTION_36	IF_2	ELSE_2	CALL_3
0x40010ce	            0x31c0	                            xor eax, eax	      3353	dwarf.c	FUNCTION_36	IF_2	ELSE_2	CALL_3
0x40010d0	      0xe800000000	                          call 0x40010d5	      3353	dwarf.c	FUNCTION_36	IF_2	ELSE_2	CALL_3
0x40010d5	      0xe959fdffff	                           jmp 0x4000e33	      3355	dwarf.c	FUNCTION_36	IF_2	ELSE_2
0x40010da	          0x4889cf	                            mov rdi, rcx	      3404	dwarf.c	FUNCTION_36
0x40010dd	      0x4889542418	             mov qword [rsp + 0x18], rdx	      3404	dwarf.c	FUNCTION_36
0x40010e2	      0xe800000000	                          call 0x40010e7	      3404	dwarf.c	FUNCTION_36
0x40010e7	      0x498d4c2403	                      lea rcx, [r12 + 3]	      3405	dwarf.c	FUNCTION_36
0x40010ec	          0x89451c	            mov dword [rbp + 0x1c], eax 	      3404	dwarf.c	FUNCTION_36
0x40010ef	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      3405	dwarf.c	FUNCTION_36
0x40010f4	          0x4839cb	                            cmp rbx, rcx	      3405	dwarf.c	FUNCTION_36
0x40010f7	     0xf86f4fcffff	                           jbe 0x4000df1	      3405	dwarf.c	FUNCTION_36
0x40010fd	        0x4983c404	                              add r12, 4	      3406	dwarf.c	FUNCTION_36
0x4001101	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      3406	dwarf.c	FUNCTION_36
0x4001106	      0xbe01000000	                              mov esi, 1	      3405	dwarf.c	FUNCTION_36
0x400110b	          0x4889d7	                            mov rdi, rdx	      3405	dwarf.c	FUNCTION_36
0x400110e	    0xff1500000000	                 call qword [0x04001114]	      3405	dwarf.c	FUNCTION_36
0x4001114	          0x4c39e3	                            cmp rbx, r12	      3406	dwarf.c	FUNCTION_36
0x4001117	          0x884520	               mov byte [rbp + 0x20], al	      3405	dwarf.c	FUNCTION_36
0x400111a	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      3406	dwarf.c	FUNCTION_36
0x400111f	     0xf87ddfcffff	                            ja 0x4000e02	      3406	dwarf.c	FUNCTION_36
0x4001125	          0x4839cb	                            cmp rbx, rcx	      3406	dwarf.c	FUNCTION_36
0x4001128	     0xf878efdffff	                            ja 0x4000ebc	      3406	dwarf.c	FUNCTION_36
0x400112e	      0xe99bfdffff	                           jmp 0x4000ece	      3406	dwarf.c	FUNCTION_36
0x4001133	        0x4983c404	                              add r12, 4	      3406	dwarf.c	FUNCTION_36
0x4001137	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      3406	dwarf.c	FUNCTION_36
0x400113c	          0x4889d7	                            mov rdi, rdx	      3405	dwarf.c	FUNCTION_36
0x400113f	    0xff1500000000	                 call qword [0x04001145]	      3405	dwarf.c	FUNCTION_36
0x4001145	          0x4c39e3	                            cmp rbx, r12	      3406	dwarf.c	FUNCTION_36
0x4001148	          0x884520	               mov byte [rbp + 0x20], al	      3405	dwarf.c	FUNCTION_36
0x400114b	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      3406	dwarf.c	FUNCTION_36
0x4001150	     0xf8678fdffff	                           jbe 0x4000ece	      3406	dwarf.c	FUNCTION_36
0x4001156	      0xe9a7fcffff	                           jmp 0x4000e02	      3406	dwarf.c	FUNCTION_36
0x400115b	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      3406	dwarf.c	FUNCTION_36
0x4001160	          0x4c89e7	                            mov rdi, r12	      3403	dwarf.c	FUNCTION_36
0x4001163	    0xff1500000000	                 call qword [0x04001169]	      3403	dwarf.c	FUNCTION_36
0x4001169	      0x498d542402	                      lea rdx, [r12 + 2]	      3404	dwarf.c	FUNCTION_36
0x400116e	          0x88451a	               mov byte [rbp + 0x1a], al	      3403	dwarf.c	FUNCTION_36
0x4001171	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      3404	dwarf.c	FUNCTION_36
0x4001176	          0x4839da	                            cmp rdx, rbx	      3404	dwarf.c	FUNCTION_36
0x4001179	     0xf8300fdffff	                           jae 0x4000e7f	      3404	dwarf.c	FUNCTION_36
0x400117f	          0x4889cf	                            mov rdi, rcx	      3404	dwarf.c	FUNCTION_36
0x4001182	      0xbe01000000	                              mov esi, 1	      3404	dwarf.c	FUNCTION_36
0x4001187	      0x4889542418	             mov qword [rsp + 0x18], rdx	      3404	dwarf.c	FUNCTION_36
0x400118c	      0xe800000000	                          call 0x4001191	      3404	dwarf.c	FUNCTION_36
0x4001191	      0x498d4c2403	                      lea rcx, [r12 + 3]	      3405	dwarf.c	FUNCTION_36
0x4001196	          0x89451c	            mov dword [rbp + 0x1c], eax 	      3404	dwarf.c	FUNCTION_36
0x4001199	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      3405	dwarf.c	FUNCTION_36
0x400119e	          0x4839cb	                            cmp rbx, rcx	      3405	dwarf.c	FUNCTION_36
0x40011a1	     0xf87edfcffff	                            ja 0x4000e94	      3405	dwarf.c	FUNCTION_36
0x40011a7	          0x4839d3	                            cmp rbx, rdx	      3405	dwarf.c	FUNCTION_36
0x40011aa	     0xf872ffcffff	                            ja 0x4000ddf	      3405	dwarf.c	FUNCTION_36
0x40011b0	      0xe93cfcffff	                           jmp 0x4000df1	      3405	dwarf.c	FUNCTION_36
display_debug_info	ELSE,0:FOR,0:CALL,1:WHILE,0:DO,0:functions,0:SWITCH,0:IF,0	4
0x400bff0	          0x8b5738	            mov edx, dword [rdi + 0x38] 	      6281	dwarf.c	FUNCTION_59	CALL_1
0x400bff3	          0x4531c0	                            xor r8d, r8d	      6281	dwarf.c	FUNCTION_59	CALL_1
0x400bff6	            0x31c9	                            xor ecx, ecx	      6281	dwarf.c	FUNCTION_59	CALL_1
0x400bff8	      0xe9e3e7ffff	              jmp sym.process_debug_info	      6281	dwarf.c	FUNCTION_59	CALL_1
dwarf_select_sections_all	ELSE,0:FOR,0:CALL,0:WHILE,0:DO,0:functions,0:SWITCH,0:IF,0	20
0x4018440	    0xc70500000000	               mov dword [0x0401844a], 1	     10159	dwarf.c	FUNCTION_111
0x401844a	    0xc70500000000	               mov dword [0x04018454], 1	     10160	dwarf.c	FUNCTION_111
0x4018454	    0xc70500000000	               mov dword [0x0401845e], 1	     10161	dwarf.c	FUNCTION_111
0x401845e	    0xc70500000000	               mov dword [0x04018468], 1	     10162	dwarf.c	FUNCTION_111
0x4018468	    0xc70500000000	               mov dword [0x04018472], 1	     10163	dwarf.c	FUNCTION_111
0x4018472	    0xc70500000000	               mov dword [0x0401847c], 1	     10164	dwarf.c	FUNCTION_111
0x401847c	    0xc70500000000	               mov dword [0x04018486], 1	     10165	dwarf.c	FUNCTION_111
0x4018486	    0xc70500000000	               mov dword [0x04018490], 1	     10166	dwarf.c	FUNCTION_111
0x4018490	    0xc70500000000	               mov dword [0x0401849a], 1	     10167	dwarf.c	FUNCTION_111
0x401849a	    0xc70500000000	               mov dword [0x040184a4], 1	     10168	dwarf.c	FUNCTION_111
0x40184a4	    0xc70500000000	               mov dword [0x040184ae], 1	     10169	dwarf.c	FUNCTION_111
0x40184ae	    0xc70500000000	               mov dword [0x040184b8], 1	     10170	dwarf.c	FUNCTION_111
0x40184b8	    0xc70500000000	               mov dword [0x040184c2], 1	     10171	dwarf.c	FUNCTION_111
0x40184c2	    0xc70500000000	               mov dword [0x040184cc], 1	     10172	dwarf.c	FUNCTION_111
0x40184cc	    0xc70500000000	               mov dword [0x040184d6], 1	     10173	dwarf.c	FUNCTION_111
0x40184d6	    0xc70500000000	               mov dword [0x040184e0], 1	     10174	dwarf.c	FUNCTION_111
0x40184e0	    0xc70500000000	               mov dword [0x040184ea], 1	     10175	dwarf.c	FUNCTION_111
0x40184ea	    0xc70500000000	               mov dword [0x040184f4], 1	     10176	dwarf.c	FUNCTION_111
0x40184f4	    0xc70500000000	               mov dword [0x040184fe], 1	     10177	dwarf.c	FUNCTION_111
0x40184fe	              0xc3	                                     ret	     10177	dwarf.c	FUNCTION_111
loc_offsets_compar	ELSE,0:FOR,0:CALL,0:WHILE,0:DO,0:functions,0:SWITCH,0:IF,1	22
0x4000040	            0x8b3f	                    mov edi, dword [rdi]	      5934	dwarf.c	FUNCTION_56
0x4000042	            0x8b36	                    mov esi, dword [rsi]	      5935	dwarf.c	FUNCTION_56
0x4000044	    0x488b05000000	            mov rax, qword [0x0400004b] 	      5934	dwarf.c	FUNCTION_56
0x400004b	        0x488b14f0	            mov rdx, qword [rax + rsi*8]	      5935	dwarf.c	FUNCTION_56
0x400004f	        0x488b0cf8	            mov rcx, qword [rax + rdi*8]	      5934	dwarf.c	FUNCTION_56
0x4000053	            0x31c0	                            xor eax, eax	      5937	dwarf.c	FUNCTION_56
0x4000055	          0x4839d1	                            cmp rcx, rdx	      5937	dwarf.c	FUNCTION_56
0x4000058	           0xf92c2	                                 setb dl	      5937	dwarf.c	FUNCTION_56
0x400005b	           0xf97c0	                                 seta al	      5937	dwarf.c	FUNCTION_56
0x400005e	           0xfb6d2	                           movzx edx, dl	      5937	dwarf.c	FUNCTION_56
0x4000061	            0x29d0	                            sub eax, edx	      5938	dwarf.c	FUNCTION_56	IF_1
0x4000063	            0x751f	                           jne 0x4000084	      5938	dwarf.c	FUNCTION_56	IF_1
0x4000065	    0x488b05000000	            mov rax, qword [0x0400006c] 	      5941	dwarf.c	FUNCTION_56
0x400006c	        0x488b14f0	            mov rdx, qword [rax + rsi*8]	      5942	dwarf.c	FUNCTION_56
0x4000070	        0x488b0cf8	            mov rcx, qword [rax + rdi*8]	      5941	dwarf.c	FUNCTION_56
0x4000074	            0x31c0	                            xor eax, eax	      5944	dwarf.c	FUNCTION_56
0x4000076	          0x4839d1	                            cmp rcx, rdx	      5944	dwarf.c	FUNCTION_56
0x4000079	           0xf92c2	                                 setb dl	      5944	dwarf.c	FUNCTION_56
0x400007c	           0xf97c0	                                 seta al	      5944	dwarf.c	FUNCTION_56
0x400007f	           0xfb6d2	                           movzx edx, dl	      5944	dwarf.c	FUNCTION_56
0x4000082	            0x29d0	                            sub eax, edx	      5946	dwarf.c	FUNCTION_56
0x4000084	            0xf3c3	                                     ret	      5947	dwarf.c	FUNCTION_56
process_extended_line_op	ELSE,2:FOR,1:CALL,37:WHILE,1:DO,0:functions,0:SWITCH,2:IF,4	460
0x4006920	            0x4157	                                push r15	       512	dwarf.c	FUNCTION_12
0x4006922	            0x4156	                                push r14	       512	dwarf.c	FUNCTION_12
0x4006924	          0x4889d1	                            mov rcx, rdx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006927	            0x4155	                                push r13	       512	dwarf.c	FUNCTION_12
0x4006929	            0x4154	                                push r12	       512	dwarf.c	FUNCTION_12
0x400692b	          0x4189f5	                           mov r13d, esi	       512	dwarf.c	FUNCTION_12
0x400692e	              0x55	                                push rbp	       512	dwarf.c	FUNCTION_12
0x400692f	              0x53	                                push rbx	       512	dwarf.c	FUNCTION_12
0x4006930	          0x4989d7	                            mov r15, rdx	       512	dwarf.c	FUNCTION_12
0x4006933	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006935	          0x4989fc	                            mov r12, rdi	       512	dwarf.c	FUNCTION_12
0x4006938	        0x4883ec28	                           sub rsp, 0x28	       512	dwarf.c	FUNCTION_12
0x400693c	      0x488d742414	                   lea rsi, [rsp + 0x14]	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006941	    0x64488b042528	                mov rax, qword fs:[0x28]	       512	dwarf.c	FUNCTION_12
0x400694a	      0x4889442418	             mov qword [rsp + 0x18], rax	       512	dwarf.c	FUNCTION_12
0x400694f	            0x31c0	                            xor eax, eax	       512	dwarf.c	FUNCTION_12
0x4006951	      0xe800000000	                          call 0x4006956	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006956	        0x8b5c2414	            mov ebx, dword [rsp + 0x14] 	       521	dwarf.c	FUNCTION_12
0x400695a	          0x4889dd	                            mov rbp, rbx	       521	dwarf.c	FUNCTION_12
0x400695d	          0x4c01e3	                            add rbx, r12	       521	dwarf.c	FUNCTION_12
0x4006960	            0x85c0	                           test eax, eax	       523	dwarf.c	FUNCTION_12	IF_1
0x4006962	            0x7412	                            je 0x4006976	       523	dwarf.c	FUNCTION_12	IF_1
0x4006964	          0x4939df	                            cmp r15, rbx	       523	dwarf.c	FUNCTION_12	IF_1
0x4006967	            0x740d	                            je 0x4006976	       523	dwarf.c	FUNCTION_12	IF_1
0x4006969	          0x4c89f9	                            mov rcx, r15	       523	dwarf.c	FUNCTION_12	IF_1
0x400696c	            0x89c2	                            mov edx, eax	       523	dwarf.c	FUNCTION_12	IF_1
0x400696e	          0x4829d9	                            sub rcx, rbx	       523	dwarf.c	FUNCTION_12	IF_1
0x4006971	          0x4839d1	                            cmp rcx, rdx	       523	dwarf.c	FUNCTION_12	IF_1
0x4006974	            0x734a	                           jae 0x40069c0	       523	dwarf.c	FUNCTION_12	IF_1
0x4006976	      0xba05000000	                              mov edx, 5	       525	dwarf.c	FUNCTION_12	IF_1	CALL_3
0x400697b	      0xbe00000000	                              mov esi, 0	       525	dwarf.c	FUNCTION_12	IF_1	CALL_3
0x4006980	            0x31ff	                            xor edi, edi	       525	dwarf.c	FUNCTION_12	IF_1	CALL_3
0x4006982	      0xe800000000	                          call 0x4006987	       525	dwarf.c	FUNCTION_12	IF_1	CALL_3
0x4006987	          0x4889c7	                            mov rdi, rax	       525	dwarf.c	FUNCTION_12	IF_1	CALL_3
0x400698a	            0x31c0	                            xor eax, eax	       525	dwarf.c	FUNCTION_12	IF_1	CALL_3
0x400698c	      0xe800000000	                          call 0x4006991	       525	dwarf.c	FUNCTION_12	IF_1	CALL_3
0x4006991	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       526	dwarf.c	FUNCTION_12	IF_1
0x4006995	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       686	dwarf.c	FUNCTION_12
0x400699a	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       686	dwarf.c	FUNCTION_12
0x40069a3	     0xf85a7060000	                           jne 0x4007050	       686	dwarf.c	FUNCTION_12
0x40069a9	        0x4883c428	                           add rsp, 0x28	       686	dwarf.c	FUNCTION_12
0x40069ad	              0x5b	                                 pop rbx	       686	dwarf.c	FUNCTION_12
0x40069ae	              0x5d	                                 pop rbp	       686	dwarf.c	FUNCTION_12
0x40069af	            0x415c	                                 pop r12	       686	dwarf.c	FUNCTION_12
0x40069b1	            0x415d	                                 pop r13	       686	dwarf.c	FUNCTION_12
0x40069b3	            0x415e	                                 pop r14	       686	dwarf.c	FUNCTION_12
0x40069b5	            0x415f	                                 pop r15	       686	dwarf.c	FUNCTION_12
0x40069b7	              0xc3	                                     ret	       686	dwarf.c	FUNCTION_12
0x40069b8	     0xf1f84000000	                   nop dword [rax + rax]	       686	dwarf.c	FUNCTION_12
0x40069c0	             0x1c5	                            add ebp, eax	       529	dwarf.c	FUNCTION_12
0x40069c2	           0xfb603	                   movzx eax, byte [rbx]	       530	dwarf.c	FUNCTION_12
0x40069c5	            0x31ff	                            xor edi, edi	       532	dwarf.c	FUNCTION_12	CALL_4
0x40069c7	      0xba05000000	                              mov edx, 5	       532	dwarf.c	FUNCTION_12	CALL_4
0x40069cc	      0xbe00000000	                              mov esi, 0	       532	dwarf.c	FUNCTION_12	CALL_4
0x40069d1	        0x4c8d7301	                      lea r14, [rbx + 1]	       530	dwarf.c	FUNCTION_12
0x40069d5	        0x8844240f	                mov byte [rsp + 0xf], al	       530	dwarf.c	FUNCTION_12
0x40069d9	      0xe800000000	                          call 0x40069de	       532	dwarf.c	FUNCTION_12	CALL_4
0x40069de	       0xfb654240f	            movzx edx, byte [rsp + 0xf] 	       104	stdio2.h	CALL_16
0x40069e3	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x40069e6	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40069eb	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x40069ed	      0xe800000000	                          call 0x40069f2	       104	stdio2.h	CALL_16
0x40069f2	       0xfb64c240f	            movzx ecx, byte [rsp + 0xf] 	       534	dwarf.c	FUNCTION_12	SWITCH_1
0x40069f7	          0x80f980	                            cmp cl, 0x80	       534	dwarf.c	FUNCTION_12	SWITCH_1
0x40069fa	     0xf8780040000	                            ja 0x4006e80	       534	dwarf.c	FUNCTION_12	SWITCH_1
0x4006a00	           0xfb6c1	                           movzx eax, cl	       534	dwarf.c	FUNCTION_12	SWITCH_1
0x4006a03	    0xff24c5000000	                       jmp qword [rax*8]	       534	dwarf.c	FUNCTION_12	SWITCH_1
0x4006a0a	    0x660f1f440000	                    nop word [rax + rax]	       534	dwarf.c	FUNCTION_12	SWITCH_1
0x4006a10	      0x448b642414	           mov r12d, dword [rsp + 0x14] 	       619	dwarf.c	FUNCTION_12	SWITCH_1
0x4006a15	            0x89e8	                            mov eax, ebp	       619	dwarf.c	FUNCTION_12	SWITCH_1
0x4006a17	      0xbf00000000	                              mov edi, 0	       104	stdio2.h	CALL_16
0x4006a1c	          0x49f7d4	                                 not r12	       619	dwarf.c	FUNCTION_12	SWITCH_1
0x4006a1f	          0x4901c4	                            add r12, rax	       619	dwarf.c	FUNCTION_12	SWITCH_1
0x4006a22	          0x4d01f4	                            add r12, r14	       619	dwarf.c	FUNCTION_12	SWITCH_1
0x4006a25	      0xe800000000	                          call 0x4006a2a	       104	stdio2.h	CALL_16
0x4006a2a	    0x660f1f440000	                    nop word [rax + rax]	       104	stdio2.h	CALL_16
0x4006a30	          0x4d39e6	                            cmp r14, r12	       623	dwarf.c	FUNCTION_12	SWITCH_1	WHILE_1
0x4006a33	            0x7359	                           jae 0x4006a8e	       623	dwarf.c	FUNCTION_12	SWITCH_1	WHILE_1
0x4006a35	      0x488d742414	                   lea rsi, [rsp + 0x14]	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006a3a	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006a3c	          0x4c89f7	                            mov rdi, r14	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006a3f	          0x4c89e1	                            mov rcx, r12	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006a42	      0xe800000000	                          call 0x4006a47	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006a47	          0x4889c3	                            mov rbx, rax	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006a4a	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       628	dwarf.c	FUNCTION_12	SWITCH_1	WHILE_1
0x4006a4e	          0x4901c6	                            add r14, rax	       628	dwarf.c	FUNCTION_12	SWITCH_1	WHILE_1
0x4006a51	          0x83fb02	                              cmp ebx, 2	       630	dwarf.c	FUNCTION_12	SWITCH_1	WHILE_1	SWITCH_2
0x4006a54	     0xf84a6050000	                            je 0x4007000	       630	dwarf.c	FUNCTION_12	SWITCH_1	WHILE_1	SWITCH_2
0x4006a5a	          0x83fb03	                              cmp ebx, 3	       630	dwarf.c	FUNCTION_12	SWITCH_1	WHILE_1	SWITCH_2
0x4006a5d	     0xf84cd040000	                            je 0x4006f30	       630	dwarf.c	FUNCTION_12	SWITCH_1	WHILE_1	SWITCH_2
0x4006a63	          0x83fb01	                              cmp ebx, 1	       630	dwarf.c	FUNCTION_12	SWITCH_1	WHILE_1	SWITCH_2
0x4006a66	     0xf84b4040000	                            je 0x4006f20	       630	dwarf.c	FUNCTION_12	SWITCH_1	WHILE_1	SWITCH_2
0x4006a6c	      0xba05000000	                              mov edx, 5	       657	dwarf.c	FUNCTION_12	SWITCH_1	WHILE_1	SWITCH_2	CALL_34
0x4006a71	      0xbe00000000	                              mov esi, 0	       657	dwarf.c	FUNCTION_12	SWITCH_1	WHILE_1	SWITCH_2	CALL_34
0x4006a76	            0x31ff	                            xor edi, edi	       657	dwarf.c	FUNCTION_12	SWITCH_1	WHILE_1	SWITCH_2	CALL_34
0x4006a78	      0xe800000000	                          call 0x4006a7d	       657	dwarf.c	FUNCTION_12	SWITCH_1	WHILE_1	SWITCH_2	CALL_34
0x4006a7d	            0x89da	                            mov edx, ebx	       104	stdio2.h	CALL_16
0x4006a7f	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4006a82	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4006a87	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4006a89	      0xe800000000	                          call 0x4006a8e	       104	stdio2.h	CALL_16
0x4006a8e	            0x89e8	                            mov eax, ebp	       685	dwarf.c	FUNCTION_12
0x4006a90	      0xe900ffffff	                           jmp 0x4006995	       685	dwarf.c	FUNCTION_12
0x4006a95	           0xf1f00	                         nop dword [rax]	       685	dwarf.c	FUNCTION_12
0x4006a98	      0xba05000000	                              mov edx, 5	       537	dwarf.c	FUNCTION_12	SWITCH_1	CALL_5
0x4006a9d	      0xbe00000000	                              mov esi, 0	       537	dwarf.c	FUNCTION_12	SWITCH_1	CALL_5
0x4006aa2	            0x31ff	                            xor edi, edi	       537	dwarf.c	FUNCTION_12	SWITCH_1	CALL_5
0x4006aa4	      0xe800000000	                          call 0x4006aa9	       537	dwarf.c	FUNCTION_12	SWITCH_1	CALL_5
0x4006aa9	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4006aae	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4006ab1	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4006ab3	      0xe800000000	                          call 0x4006ab8	       104	stdio2.h	CALL_16
0x4006ab8	    0x48c705000000	               mov qword [0x04006ac3], 0	       493	dwarf.c	FUNCTION_11
0x4006ac3	    0xc70500000000	               mov dword [0x04006acd], 0	       494	dwarf.c	FUNCTION_11
0x4006acd	            0x89e8	                            mov eax, ebp	       685	dwarf.c	FUNCTION_12
0x4006acf	    0xc60500000000	                mov byte [0x04006ad6], 0	       495	dwarf.c	FUNCTION_11
0x4006ad6	    0xc70500000000	               mov dword [0x04006ae0], 1	       496	dwarf.c	FUNCTION_11
0x4006ae0	    0xc70500000000	               mov dword [0x04006aea], 1	       497	dwarf.c	FUNCTION_11
0x4006aea	    0xc70500000000	               mov dword [0x04006af4], 0	       498	dwarf.c	FUNCTION_11
0x4006af4	    0x44892d000000	           mov dword [0x04006afb], r13d 	       499	dwarf.c	FUNCTION_11
0x4006afb	    0xc70500000000	               mov dword [0x04006b05], 0	       500	dwarf.c	FUNCTION_11
0x4006b05	    0xc60500000000	                mov byte [0x04006b0c], 0	       501	dwarf.c	FUNCTION_11
0x4006b0c	    0xc70500000000	               mov dword [0x04006b16], 0	       502	dwarf.c	FUNCTION_11
0x4006b16	      0xe97afeffff	                           jmp 0x4006995	       502	dwarf.c	FUNCTION_11
0x4006b1b	       0xf1f440000	                   nop dword [rax + rax]	       502	dwarf.c	FUNCTION_11
0x4006b20	        0x8b5c2414	            mov ebx, dword [rsp + 0x14] 	       543	dwarf.c	FUNCTION_12	SWITCH_1	IF_2
0x4006b24	            0xf7d3	                                 not ebx	       543	dwarf.c	FUNCTION_12	SWITCH_1	IF_2
0x4006b26	             0x1eb	                            add ebx, ebp	       543	dwarf.c	FUNCTION_12	SWITCH_1	IF_2
0x4006b28	          0x83fb08	                              cmp ebx, 8	       543	dwarf.c	FUNCTION_12	SWITCH_1	IF_2
0x4006b2b	     0xf87fa040000	                            ja 0x400702b	       543	dwarf.c	FUNCTION_12	SWITCH_1	IF_2
0x4006b31	            0x89d8	                            mov eax, ebx	       550	dwarf.c	FUNCTION_12	SWITCH_1	ELSE_1
0x4006b33	          0x4c01f0	                            add rax, r14	       550	dwarf.c	FUNCTION_12	SWITCH_1	ELSE_1
0x4006b36	          0x4939c7	                            cmp r15, rax	       550	dwarf.c	FUNCTION_12	SWITCH_1	ELSE_1
0x4006b39	            0x770e	                            ja 0x4006b49	       550	dwarf.c	FUNCTION_12	SWITCH_1	ELSE_1
0x4006b3b	          0x4531e4	                          xor r12d, r12d	       550	dwarf.c	FUNCTION_12	SWITCH_1	ELSE_1
0x4006b3e	          0x4d39f7	                            cmp r15, r14	       550	dwarf.c	FUNCTION_12	SWITCH_1	ELSE_1
0x4006b41	            0x761f	                           jbe 0x4006b62	       550	dwarf.c	FUNCTION_12	SWITCH_1	ELSE_1
0x4006b43	          0x4489fb	                           mov ebx, r15d	       550	dwarf.c	FUNCTION_12	SWITCH_1	ELSE_1
0x4006b46	          0x4429f3	                           sub ebx, r14d	       550	dwarf.c	FUNCTION_12	SWITCH_1	ELSE_1
0x4006b49	          0x8d43ff	                      lea eax, [rbx - 1]	       550	dwarf.c	FUNCTION_12	SWITCH_1	ELSE_1
0x4006b4c	          0x4531e4	                          xor r12d, r12d	       550	dwarf.c	FUNCTION_12	SWITCH_1	ELSE_1
0x4006b4f	          0x83f807	                              cmp eax, 7	       550	dwarf.c	FUNCTION_12	SWITCH_1	ELSE_1
0x4006b52	            0x770e	                            ja 0x4006b62	       550	dwarf.c	FUNCTION_12	SWITCH_1	ELSE_1
0x4006b54	            0x89de	                            mov esi, ebx	       550	dwarf.c	FUNCTION_12	SWITCH_1	ELSE_1
0x4006b56	          0x4c89f7	                            mov rdi, r14	       550	dwarf.c	FUNCTION_12	SWITCH_1	ELSE_1
0x4006b59	    0xff1500000000	                 call qword [0x04006b5f]	       550	dwarf.c	FUNCTION_12	SWITCH_1	ELSE_1
0x4006b5f	          0x4989c4	                            mov r12, rax	       550	dwarf.c	FUNCTION_12	SWITCH_1	ELSE_1
0x4006b62	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x4006b64	          0x4c89e6	                            mov rsi, r12	       246	dwarf.c	FUNCTION_4	CALL_1
0x4006b67	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x4006b6c	      0xe88f97ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x4006b71	      0xba05000000	                              mov edx, 5	       551	dwarf.c	FUNCTION_12	SWITCH_1	CALL_10
0x4006b76	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x4006b79	      0xbe00000000	                              mov esi, 0	       551	dwarf.c	FUNCTION_12	SWITCH_1	CALL_10
0x4006b7e	            0x31ff	                            xor edi, edi	       551	dwarf.c	FUNCTION_12	SWITCH_1	CALL_10
0x4006b80	      0xe800000000	                          call 0x4006b85	       551	dwarf.c	FUNCTION_12	SWITCH_1	CALL_10
0x4006b85	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_16
0x4006b88	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4006b8b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4006b90	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4006b92	      0xe800000000	                          call 0x4006b97	       104	stdio2.h	CALL_16
0x4006b97	    0x4c8925000000	            mov qword [0x04006b9e], r12 	       552	dwarf.c	FUNCTION_12	SWITCH_1
0x4006b9e	    0xc70500000000	               mov dword [0x04006ba8], 0	       553	dwarf.c	FUNCTION_12	SWITCH_1
0x4006ba8	            0x89e8	                            mov eax, ebp	       685	dwarf.c	FUNCTION_12
0x4006baa	    0xc60500000000	                mov byte [0x04006bb1], 0	       554	dwarf.c	FUNCTION_12	SWITCH_1
0x4006bb1	      0xe9dffdffff	                           jmp 0x4006995	       554	dwarf.c	FUNCTION_12	SWITCH_1
0x4006bb6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       554	dwarf.c	FUNCTION_12	SWITCH_1
0x4006bc0	      0xba05000000	                              mov edx, 5	       558	dwarf.c	FUNCTION_12	SWITCH_1	CALL_11
0x4006bc5	            0x31ff	                            xor edi, edi	       558	dwarf.c	FUNCTION_12	SWITCH_1	CALL_11
0x4006bc7	      0xbe00000000	                              mov esi, 0	       558	dwarf.c	FUNCTION_12	SWITCH_1	CALL_11
0x4006bcc	      0xe800000000	                          call 0x4006bd1	       558	dwarf.c	FUNCTION_12	SWITCH_1	CALL_11
0x4006bd1	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4006bd6	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4006bd9	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4006bdb	      0xe800000000	                          call 0x4006be0	       104	stdio2.h	CALL_16
0x4006be0	      0xba05000000	                              mov edx, 5	       559	dwarf.c	FUNCTION_12	SWITCH_1	CALL_12
0x4006be5	            0x31ff	                            xor edi, edi	       559	dwarf.c	FUNCTION_12	SWITCH_1	CALL_12
0x4006be7	      0xbe00000000	                              mov esi, 0	       559	dwarf.c	FUNCTION_12	SWITCH_1	CALL_12
0x4006bec	      0xe800000000	                          call 0x4006bf1	       559	dwarf.c	FUNCTION_12	SWITCH_1	CALL_12
0x4006bf1	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4006bf6	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4006bf9	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4006bfb	      0xe800000000	                          call 0x4006c00	       104	stdio2.h	CALL_16
0x4006c00	    0x8b0500000000	            mov eax, dword [0x04006c06] 	       560	dwarf.c	FUNCTION_12	SWITCH_1
0x4006c06	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4006c0b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4006c10	          0x8d5d01	                      lea ebx, [rbp + 1]	       567	dwarf.c	FUNCTION_12	SWITCH_1
0x4006c13	          0x8d5001	                      lea edx, [rax + 1]	       560	dwarf.c	FUNCTION_12	SWITCH_1
0x4006c16	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4006c18	          0x4c01f3	                            add rbx, r14	       567	dwarf.c	FUNCTION_12	SWITCH_1
0x4006c1b	    0x891500000000	            mov dword [0x04006c21], edx 	       560	dwarf.c	FUNCTION_12	SWITCH_1
0x4006c21	      0xe800000000	                          call 0x4006c26	       104	stdio2.h	CALL_16
0x4006c26	          0x4c89fe	                            mov rsi, r15	       566	dwarf.c	FUNCTION_12	SWITCH_1	CALL_13
0x4006c29	          0x4c89f7	                            mov rdi, r14	       566	dwarf.c	FUNCTION_12	SWITCH_1	CALL_13
0x4006c2c	          0x4c29f6	                            sub rsi, r14	       566	dwarf.c	FUNCTION_12	SWITCH_1	CALL_13
0x4006c2f	      0xe800000000	                          call 0x4006c34	       566	dwarf.c	FUNCTION_12	SWITCH_1	CALL_13
0x4006c34	      0x488d742414	                   lea rsi, [rsp + 0x14]	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006c39	          0x4c89f9	                            mov rcx, r15	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006c3c	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006c3e	          0x4889df	                            mov rdi, rbx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006c41	          0x4989c5	                            mov r13, rax	       566	dwarf.c	FUNCTION_12	SWITCH_1	CALL_13
0x4006c44	      0xe800000000	                          call 0x4006c49	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006c49	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x4006c4b	          0x4889c6	                            mov rsi, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x4006c4e	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x4006c53	      0xe8a896ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x4006c58	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4006c5d	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_16
0x4006c60	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4006c65	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4006c67	      0xe800000000	                          call 0x4006c6c	       104	stdio2.h	CALL_16
0x4006c6c	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       569	dwarf.c	FUNCTION_12	SWITCH_1
0x4006c70	      0x488d742414	                   lea rsi, [rsp + 0x14]	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006c75	          0x4c89f9	                            mov rcx, r15	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006c78	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006c7a	          0x4801c3	                            add rbx, rax	       569	dwarf.c	FUNCTION_12	SWITCH_1
0x4006c7d	          0x4889df	                            mov rdi, rbx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006c80	      0xe800000000	                          call 0x4006c85	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006c85	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x4006c87	          0x4889c6	                            mov rsi, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x4006c8a	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x4006c8f	      0xe86c96ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x4006c94	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4006c99	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_16
0x4006c9c	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4006ca1	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4006ca3	      0xe800000000	                          call 0x4006ca8	       104	stdio2.h	CALL_16
0x4006ca8	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       571	dwarf.c	FUNCTION_12	SWITCH_1
0x4006cac	      0x488d742414	                   lea rsi, [rsp + 0x14]	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006cb1	          0x4c89f9	                            mov rcx, r15	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006cb4	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006cb6	          0x4801c3	                            add rbx, rax	       571	dwarf.c	FUNCTION_12	SWITCH_1
0x4006cb9	          0x4889df	                            mov rdi, rbx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006cbc	      0xe800000000	                          call 0x4006cc1	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006cc1	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x4006cc3	          0x4889c6	                            mov rsi, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x4006cc6	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x4006ccb	      0xe83096ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x4006cd0	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4006cd5	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_16
0x4006cd8	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4006cdd	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4006cdf	      0xe800000000	                          call 0x4006ce4	       104	stdio2.h	CALL_16
0x4006ce4	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       573	dwarf.c	FUNCTION_12	SWITCH_1
0x4006ce8	          0x4c89f1	                            mov rcx, r14	       104	stdio2.h	CALL_16
0x4006ceb	          0x4489ea	                           mov edx, r13d	       104	stdio2.h	CALL_16
0x4006cee	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4006cf3	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4006cf8	          0x4801c3	                            add rbx, rax	       573	dwarf.c	FUNCTION_12	SWITCH_1
0x4006cfb	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4006cfd	      0xe800000000	                          call 0x4006d02	       104	stdio2.h	CALL_16
0x4006d02	          0x4889d8	                            mov rax, rbx	       577	dwarf.c	FUNCTION_12	SWITCH_1	IF_3
0x4006d05	          0x4c29e0	                            sub rax, r12	       577	dwarf.c	FUNCTION_12	SWITCH_1	IF_3
0x4006d08	            0x39c5	                            cmp ebp, eax	       577	dwarf.c	FUNCTION_12	SWITCH_1	IF_3
0x4006d0a	            0x7509	                           jne 0x4006d15	       577	dwarf.c	FUNCTION_12	SWITCH_1	IF_3
0x4006d0c	          0x4939df	                            cmp r15, rbx	       577	dwarf.c	FUNCTION_12	SWITCH_1	IF_3
0x4006d0f	     0xf8579fdffff	                           jne 0x4006a8e	       577	dwarf.c	FUNCTION_12	SWITCH_1	IF_3
0x4006d15	      0xba05000000	                              mov edx, 5	       578	dwarf.c	FUNCTION_12	SWITCH_1	CALL_21
0x4006d1a	      0xbe00000000	                              mov esi, 0	       578	dwarf.c	FUNCTION_12	SWITCH_1	CALL_21
0x4006d1f	            0x31ff	                            xor edi, edi	       578	dwarf.c	FUNCTION_12	SWITCH_1	CALL_21
0x4006d21	      0xe800000000	                          call 0x4006d26	       578	dwarf.c	FUNCTION_12	SWITCH_1	CALL_21
0x4006d26	          0x4889c7	                            mov rdi, rax	       578	dwarf.c	FUNCTION_12	SWITCH_1	CALL_21
0x4006d29	            0x31c0	                            xor eax, eax	       578	dwarf.c	FUNCTION_12	SWITCH_1	CALL_21
0x4006d2b	      0xe800000000	                          call 0x4006d30	       578	dwarf.c	FUNCTION_12	SWITCH_1	CALL_21
0x4006d30	            0x89e8	                            mov eax, ebp	       685	dwarf.c	FUNCTION_12
0x4006d32	      0xe95efcffff	                           jmp 0x4006995	       685	dwarf.c	FUNCTION_12
0x4006d37	    0x660f1f840000	                    nop word [rax + rax]	       685	dwarf.c	FUNCTION_12
0x4006d40	      0x488d742414	                   lea rsi, [rsp + 0x14]	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006d45	          0x4c89f9	                            mov rcx, r15	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006d48	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006d4a	          0x4c89f7	                            mov rdi, r14	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006d4d	      0xe800000000	                          call 0x4006d52	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006d52	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x4006d54	          0x4889c6	                            mov rsi, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x4006d57	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x4006d5c	      0xe89f95ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x4006d61	      0xba05000000	                              mov edx, 5	       582	dwarf.c	FUNCTION_12	SWITCH_1	CALL_22
0x4006d66	          0x4889c3	                            mov rbx, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x4006d69	      0xbe00000000	                              mov esi, 0	       582	dwarf.c	FUNCTION_12	SWITCH_1	CALL_22
0x4006d6e	            0x31ff	                            xor edi, edi	       582	dwarf.c	FUNCTION_12	SWITCH_1	CALL_22
0x4006d70	      0xe800000000	                          call 0x4006d75	       582	dwarf.c	FUNCTION_12	SWITCH_1	CALL_22
0x4006d75	          0x4889da	                            mov rdx, rbx	       104	stdio2.h	CALL_16
0x4006d78	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4006d7b	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4006d80	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4006d82	      0xe800000000	                          call 0x4006d87	       104	stdio2.h	CALL_16
0x4006d87	            0x89e8	                            mov eax, ebp	       685	dwarf.c	FUNCTION_12
0x4006d89	      0xe907fcffff	                           jmp 0x4006995	       685	dwarf.c	FUNCTION_12
0x4006d8e	            0x6690	                                     nop	       685	dwarf.c	FUNCTION_12
0x4006d90	      0xbf00000000	                              mov edi, 0	       104	stdio2.h	CALL_16
0x4006d95	      0xe800000000	                          call 0x4006d9a	       104	stdio2.h	CALL_16
0x4006d9a	            0x89e8	                            mov eax, ebp	       685	dwarf.c	FUNCTION_12
0x4006d9c	      0xe9f4fbffff	                           jmp 0x4006995	       685	dwarf.c	FUNCTION_12
0x4006da1	     0xf1f80000000	                         nop dword [rax]	       685	dwarf.c	FUNCTION_12
0x4006da8	      0xbf00000000	                              mov edi, 0	       104	stdio2.h	CALL_16
0x4006dad	      0xe800000000	                          call 0x4006db2	       104	stdio2.h	CALL_16
0x4006db2	            0x89e8	                            mov eax, ebp	       685	dwarf.c	FUNCTION_12
0x4006db4	      0xe9dcfbffff	                           jmp 0x4006995	       685	dwarf.c	FUNCTION_12
0x4006db9	     0xf1f80000000	                         nop dword [rax]	       685	dwarf.c	FUNCTION_12
0x4006dc0	      0xbf00000000	                              mov edi, 0	       104	stdio2.h	CALL_16
0x4006dc5	      0xe800000000	                          call 0x4006dca	       104	stdio2.h	CALL_16
0x4006dca	            0x89e8	                            mov eax, ebp	       685	dwarf.c	FUNCTION_12
0x4006dcc	      0xe9c4fbffff	                           jmp 0x4006995	       685	dwarf.c	FUNCTION_12
0x4006dd1	     0xf1f80000000	                         nop dword [rax]	       685	dwarf.c	FUNCTION_12
0x4006dd8	      0xbf00000000	                              mov edi, 0	       104	stdio2.h	CALL_16
0x4006ddd	      0xe800000000	                          call 0x4006de2	       104	stdio2.h	CALL_16
0x4006de2	            0x89e8	                            mov eax, ebp	       685	dwarf.c	FUNCTION_12
0x4006de4	      0xe9acfbffff	                           jmp 0x4006995	       685	dwarf.c	FUNCTION_12
0x4006de9	     0xf1f80000000	                         nop dword [rax]	       685	dwarf.c	FUNCTION_12
0x4006df0	      0xbf00000000	                              mov edi, 0	       104	stdio2.h	CALL_16
0x4006df5	      0xe800000000	                          call 0x4006dfa	       104	stdio2.h	CALL_16
0x4006dfa	            0x89e8	                            mov eax, ebp	       685	dwarf.c	FUNCTION_12
0x4006dfc	      0xe994fbffff	                           jmp 0x4006995	       685	dwarf.c	FUNCTION_12
0x4006e01	     0xf1f80000000	                         nop dword [rax]	       685	dwarf.c	FUNCTION_12
0x4006e08	      0xbf00000000	                              mov edi, 0	       104	stdio2.h	CALL_16
0x4006e0d	      0xe800000000	                          call 0x4006e12	       104	stdio2.h	CALL_16
0x4006e12	            0x89e8	                            mov eax, ebp	       685	dwarf.c	FUNCTION_12
0x4006e14	      0xe97cfbffff	                           jmp 0x4006995	       685	dwarf.c	FUNCTION_12
0x4006e19	     0xf1f80000000	                         nop dword [rax]	       685	dwarf.c	FUNCTION_12
0x4006e20	      0xbf00000000	                              mov edi, 0	       104	stdio2.h	CALL_16
0x4006e25	      0xe800000000	                          call 0x4006e2a	       104	stdio2.h	CALL_16
0x4006e2a	            0x89e8	                            mov eax, ebp	       685	dwarf.c	FUNCTION_12
0x4006e2c	      0xe964fbffff	                           jmp 0x4006995	       685	dwarf.c	FUNCTION_12
0x4006e31	     0xf1f80000000	                         nop dword [rax]	       685	dwarf.c	FUNCTION_12
0x4006e38	      0xbf00000000	                              mov edi, 0	       104	stdio2.h	CALL_16
0x4006e3d	      0xe800000000	                          call 0x4006e42	       104	stdio2.h	CALL_16
0x4006e42	            0x89e8	                            mov eax, ebp	       685	dwarf.c	FUNCTION_12
0x4006e44	      0xe94cfbffff	                           jmp 0x4006995	       685	dwarf.c	FUNCTION_12
0x4006e49	     0xf1f80000000	                         nop dword [rax]	       685	dwarf.c	FUNCTION_12
0x4006e50	      0xbf00000000	                              mov edi, 0	       104	stdio2.h	CALL_16
0x4006e55	      0xe800000000	                          call 0x4006e5a	       104	stdio2.h	CALL_16
0x4006e5a	            0x89e8	                            mov eax, ebp	       685	dwarf.c	FUNCTION_12
0x4006e5c	      0xe934fbffff	                           jmp 0x4006995	       685	dwarf.c	FUNCTION_12
0x4006e61	     0xf1f80000000	                         nop dword [rax]	       685	dwarf.c	FUNCTION_12
0x4006e68	      0xbf00000000	                              mov edi, 0	       104	stdio2.h	CALL_16
0x4006e6d	      0xe800000000	                          call 0x4006e72	       104	stdio2.h	CALL_16
0x4006e72	            0x89e8	                            mov eax, ebp	       685	dwarf.c	FUNCTION_12
0x4006e74	      0xe91cfbffff	                           jmp 0x4006995	       685	dwarf.c	FUNCTION_12
0x4006e79	     0xf1f80000000	                         nop dword [rax]	       685	dwarf.c	FUNCTION_12
0x4006e80	      0x448b642414	           mov r12d, dword [rsp + 0x14] 	       667	dwarf.c	FUNCTION_12	SWITCH_1
0x4006e85	      0xba05000000	                              mov edx, 5	       674	dwarf.c	FUNCTION_12	SWITCH_1	CALL_35
0x4006e8a	      0xbe00000000	                              mov esi, 0	       674	dwarf.c	FUNCTION_12	SWITCH_1	CALL_35
0x4006e8f	          0x41f7d4	                                not r12d	       667	dwarf.c	FUNCTION_12	SWITCH_1
0x4006e92	          0x4101ec	                           add r12d, ebp	       667	dwarf.c	FUNCTION_12	SWITCH_1
0x4006e95	      0x807c240f00	                 cmp byte [rsp + 0xf], 0	       669	dwarf.c	FUNCTION_12	SWITCH_1	IF_4
0x4006e9a	            0x7805	                            js 0x4006ea1	       669	dwarf.c	FUNCTION_12	SWITCH_1	IF_4
0x4006e9c	      0xbe00000000	                              mov esi, 0	       676	dwarf.c	FUNCTION_12	SWITCH_1	CALL_36
0x4006ea1	            0x31ff	                            xor edi, edi	       676	dwarf.c	FUNCTION_12	SWITCH_1	CALL_36
0x4006ea3	      0xe800000000	                          call 0x4006ea8	       676	dwarf.c	FUNCTION_12	SWITCH_1	CALL_36
0x4006ea8	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4006ead	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4006eb0	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4006eb2	      0xe800000000	                          call 0x4006eb7	       104	stdio2.h	CALL_16
0x4006eb7	            0x31ff	                            xor edi, edi	       677	dwarf.c	FUNCTION_12	SWITCH_1	CALL_37
0x4006eb9	      0xba05000000	                              mov edx, 5	       677	dwarf.c	FUNCTION_12	SWITCH_1	CALL_37
0x4006ebe	      0xbe00000000	                              mov esi, 0	       677	dwarf.c	FUNCTION_12	SWITCH_1	CALL_37
0x4006ec3	      0xe800000000	                          call 0x4006ec8	       677	dwarf.c	FUNCTION_12	SWITCH_1	CALL_37
0x4006ec8	          0x4489e2	                           mov edx, r12d	       104	stdio2.h	CALL_16
0x4006ecb	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4006ece	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4006ed3	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4006ed5	      0xe800000000	                          call 0x4006eda	       104	stdio2.h	CALL_16
0x4006eda	      0x418d4424ff	                      lea eax, [r12 - 1]	       104	stdio2.h	CALL_16
0x4006edf	          0x4585e4	                         test r12d, r12d	       678	dwarf.c	FUNCTION_12	SWITCH_1	FOR_1
0x4006ee2	      0x488d5c0302	                lea rbx, [rbx + rax + 2]	       678	dwarf.c	FUNCTION_12	SWITCH_1	FOR_1
0x4006ee7	            0x7426	                            je 0x4006f0f	       678	dwarf.c	FUNCTION_12	SWITCH_1	FOR_1
0x4006ee9	     0xf1f80000000	                         nop dword [rax]	       678	dwarf.c	FUNCTION_12	SWITCH_1	FOR_1
0x4006ef0	        0x4983c601	                              add r14, 1	       679	dwarf.c	FUNCTION_12	SWITCH_1	FOR_1
0x4006ef4	      0x410fb656ff	               movzx edx, byte [r14 - 1]	       104	stdio2.h	CALL_16
0x4006ef9	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4006efb	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4006f00	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4006f05	      0xe800000000	                          call 0x4006f0a	       104	stdio2.h	CALL_16
0x4006f0a	          0x4c39f3	                            cmp rbx, r14	       678	dwarf.c	FUNCTION_12	SWITCH_1	FOR_1
0x4006f0d	            0x75e1	                           jne 0x4006ef0	       678	dwarf.c	FUNCTION_12	SWITCH_1	FOR_1
0x4006f0f	      0xbf00000000	                              mov edi, 0	       104	stdio2.h	CALL_16
0x4006f14	      0xe800000000	                          call 0x4006f19	       104	stdio2.h	CALL_16
0x4006f19	            0x89e8	                            mov eax, ebp	       685	dwarf.c	FUNCTION_12
0x4006f1b	      0xe975faffff	                           jmp 0x4006995	       685	dwarf.c	FUNCTION_12
0x4006f20	      0xbf00000000	                              mov edi, 0	       104	stdio2.h	CALL_16
0x4006f25	      0xe800000000	                          call 0x4006f2a	       104	stdio2.h	CALL_16
0x4006f2a	      0xe901fbffff	                           jmp 0x4006a30	       104	stdio2.h	CALL_16
0x4006f2f	              0x90	                                     nop	       104	stdio2.h	CALL_16
0x4006f30	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4006f35	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4006f3a	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4006f3c	      0xe800000000	                          call 0x4006f41	       104	stdio2.h	CALL_16
0x4006f41	      0x488d742414	                   lea rsi, [rsp + 0x14]	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006f46	          0x4c89e1	                            mov rcx, r12	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006f49	          0x4c89f7	                            mov rdi, r14	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006f4c	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006f4e	      0xe800000000	                          call 0x4006f53	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006f53	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x4006f55	          0x4889c6	                            mov rsi, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x4006f58	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x4006f5d	      0xe89e93ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x4006f62	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4006f67	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_16
0x4006f6a	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4006f6f	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4006f71	      0xe800000000	                          call 0x4006f76	       104	stdio2.h	CALL_16
0x4006f76	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       646	dwarf.c	FUNCTION_12	SWITCH_1	WHILE_1	SWITCH_2
0x4006f7a	      0x488d742414	                   lea rsi, [rsp + 0x14]	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006f7f	          0x4c89e1	                            mov rcx, r12	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006f82	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006f84	          0x4901c6	                            add r14, rax	       646	dwarf.c	FUNCTION_12	SWITCH_1	WHILE_1	SWITCH_2
0x4006f87	          0x4c89f7	                            mov rdi, r14	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006f8a	      0xe800000000	                          call 0x4006f8f	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006f8f	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x4006f91	          0x4889c6	                            mov rsi, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x4006f94	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x4006f99	      0xe86293ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x4006f9e	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4006fa3	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_16
0x4006fa6	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4006fab	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4006fad	      0xe800000000	                          call 0x4006fb2	       104	stdio2.h	CALL_16
0x4006fb2	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       650	dwarf.c	FUNCTION_12	SWITCH_1	WHILE_1	SWITCH_2
0x4006fb6	      0x488d742414	                   lea rsi, [rsp + 0x14]	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006fbb	          0x4c89e1	                            mov rcx, r12	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006fbe	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006fc0	          0x4901c6	                            add r14, rax	       650	dwarf.c	FUNCTION_12	SWITCH_1	WHILE_1	SWITCH_2
0x4006fc3	          0x4c89f7	                            mov rdi, r14	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006fc6	      0xe800000000	                          call 0x4006fcb	       356	dwarf.c	FUNCTION_10	CALL_1
0x4006fcb	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x4006fcd	          0x4889c6	                            mov rsi, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x4006fd0	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x4006fd5	      0xe82693ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x4006fda	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4006fdf	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_16
0x4006fe2	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4006fe7	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4006fe9	      0xe800000000	                          call 0x4006fee	       104	stdio2.h	CALL_16
0x4006fee	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       654	dwarf.c	FUNCTION_12	SWITCH_1	WHILE_1	SWITCH_2
0x4006ff2	          0x4901c6	                            add r14, rax	       654	dwarf.c	FUNCTION_12	SWITCH_1	WHILE_1	SWITCH_2
0x4006ff5	      0xe936faffff	                           jmp 0x4006a30	       655	dwarf.c	FUNCTION_12	SWITCH_1	WHILE_1	SWITCH_2
0x4006ffa	    0x660f1f440000	                    nop word [rax + rax]	       655	dwarf.c	FUNCTION_12	SWITCH_1	WHILE_1	SWITCH_2
0x4007000	      0x488d742414	                   lea rsi, [rsp + 0x14]	       356	dwarf.c	FUNCTION_10	CALL_1
0x4007005	          0x4c89e1	                            mov rcx, r12	       356	dwarf.c	FUNCTION_10	CALL_1
0x4007008	            0x31d2	                            xor edx, edx	       356	dwarf.c	FUNCTION_10	CALL_1
0x400700a	          0x4c89f7	                            mov rdi, r14	       356	dwarf.c	FUNCTION_10	CALL_1
0x400700d	      0xe800000000	                          call 0x4007012	       356	dwarf.c	FUNCTION_10	CALL_1
0x4007012	            0x31d2	                            xor edx, edx	       246	dwarf.c	FUNCTION_4	CALL_1
0x4007014	          0x4889c6	                            mov rsi, rax	       246	dwarf.c	FUNCTION_4	CALL_1
0x4007017	      0xbf00000000	                              mov edi, 0	       246	dwarf.c	FUNCTION_4	CALL_1
0x400701c	      0xe8df92ffff	                 call sym.dwarf_vmatoa_1	       246	dwarf.c	FUNCTION_4	CALL_1
0x4007021	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4007026	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_16
0x4007029	            0xebb7	                           jmp 0x4006fe2	       104	stdio2.h	CALL_16
0x400702b	      0xba05000000	                              mov edx, 5	       545	dwarf.c	FUNCTION_12	SWITCH_1	IF_2	CALL_8
0x4007030	      0xbe00000000	                              mov esi, 0	       545	dwarf.c	FUNCTION_12	SWITCH_1	IF_2	CALL_8
0x4007035	            0x31ff	                            xor edi, edi	       545	dwarf.c	FUNCTION_12	SWITCH_1	IF_2	CALL_8
0x4007037	      0xe800000000	                          call 0x400703c	       545	dwarf.c	FUNCTION_12	SWITCH_1	IF_2	CALL_8
0x400703c	            0x89de	                            mov esi, ebx	       545	dwarf.c	FUNCTION_12	SWITCH_1	IF_2	CALL_8
0x400703e	          0x4889c7	                            mov rdi, rax	       545	dwarf.c	FUNCTION_12	SWITCH_1	IF_2	CALL_8
0x4007041	            0x31c0	                            xor eax, eax	       545	dwarf.c	FUNCTION_12	SWITCH_1	IF_2	CALL_8
0x4007043	      0xe800000000	                          call 0x4007048	       545	dwarf.c	FUNCTION_12	SWITCH_1	IF_2	CALL_8
0x4007048	          0x4531e4	                          xor r12d, r12d	       547	dwarf.c	FUNCTION_12	SWITCH_1	IF_2
0x400704b	      0xe912fbffff	                           jmp 0x4006b62	       547	dwarf.c	FUNCTION_12	SWITCH_1	IF_2
0x4007050	      0xe800000000	                          call 0x4007055	       686	dwarf.c	FUNCTION_12
load_separate_debug_info	ELSE,0:FOR,1:CALL,49:WHILE,0:DO,0:functions,0:SWITCH,0:IF,12	307
0x4000670	            0x4157	                                push r15	      9740	dwarf.c	FUNCTION_105
0x4000672	            0x4156	                                push r14	      9740	dwarf.c	FUNCTION_105
0x4000674	          0x4989ce	                            mov r14, rcx	      9740	dwarf.c	FUNCTION_105
0x4000677	            0x4155	                                push r13	      9740	dwarf.c	FUNCTION_105
0x4000679	            0x4154	                                push r12	      9740	dwarf.c	FUNCTION_105
0x400067b	          0x4989fd	                            mov r13, rdi	      9740	dwarf.c	FUNCTION_105
0x400067e	              0x55	                                push rbp	      9740	dwarf.c	FUNCTION_105
0x400067f	              0x53	                                push rbx	      9740	dwarf.c	FUNCTION_105
0x4000680	          0x4889f3	                            mov rbx, rsi	      9740	dwarf.c	FUNCTION_105
0x4000683	          0x4d89c4	                             mov r12, r8	      9740	dwarf.c	FUNCTION_105
0x4000686	          0x4c89c6	                             mov rsi, r8	      9747	dwarf.c	FUNCTION_105	IF_1	CALL_1
0x4000689	          0x4889df	                            mov rdi, rbx	      9747	dwarf.c	FUNCTION_105	IF_1	CALL_1
0x400068c	        0x4883ec18	                           sub rsp, 0x18	      9740	dwarf.c	FUNCTION_105
0x4000690	            0xffd2	                                call rdx	      9747	dwarf.c	FUNCTION_105	IF_1	CALL_1
0x4000692	          0x4885c0	                           test rax, rax	      9747	dwarf.c	FUNCTION_105	IF_1	CALL_1
0x4000695	     0xf84ed030000	                            je 0x4000a88	      9747	dwarf.c	FUNCTION_105	IF_1	CALL_1
0x400069b	          0x4c89ef	                            mov rdi, r13	      9757	dwarf.c	FUNCTION_105	CALL_4
0x400069e	          0x4889c5	                            mov rbp, rax	      9757	dwarf.c	FUNCTION_105	CALL_4
0x40006a1	      0xe800000000	                          call 0x40006a6	      9757	dwarf.c	FUNCTION_105	CALL_4
0x40006a6	          0x4889c7	                            mov rdi, rax	      9759	dwarf.c	FUNCTION_105	FOR_1	CALL_5
0x40006a9	          0x4989c7	                            mov r15, rax	      9757	dwarf.c	FUNCTION_105	CALL_4
0x40006ac	      0xe800000000	                          call 0x40006b1	      9759	dwarf.c	FUNCTION_105	FOR_1	CALL_5
0x40006b1	          0x4885c0	                           test rax, rax	      9759	dwarf.c	FUNCTION_105	FOR_1	CALL_5
0x40006b4	     0xf84fc030000	                            je 0x4000ab6	      9759	dwarf.c	FUNCTION_105	FOR_1	CALL_5
0x40006ba	    0x41807c07ff2f	         cmp byte [r15 + rax - 1], 0x2f 	      9760	dwarf.c	FUNCTION_105	FOR_1	IF_2	CALL_6
0x40006c0	        0x488d58ff	                      lea rbx, [rax - 1]	      9760	dwarf.c	FUNCTION_105	FOR_1	IF_2	CALL_6
0x40006c4	            0x7519	                           jne 0x40006df	      9760	dwarf.c	FUNCTION_105	FOR_1	IF_2	CALL_6
0x40006c6	      0xe9f2030000	                           jmp 0x4000abd	      9760	dwarf.c	FUNCTION_105	FOR_1	IF_2	CALL_6
0x40006cb	       0xf1f440000	                   nop dword [rax + rax]	      9760	dwarf.c	FUNCTION_105	FOR_1	IF_2	CALL_6
0x40006d0	    0x41807c1fff2f	         cmp byte [r15 + rbx - 1], 0x2f 	      9760	dwarf.c	FUNCTION_105	FOR_1	IF_2	CALL_6
0x40006d6	        0x488d43ff	                      lea rax, [rbx - 1]	      9760	dwarf.c	FUNCTION_105	FOR_1	IF_2	CALL_6
0x40006da	            0x7408	                            je 0x40006e4	      9760	dwarf.c	FUNCTION_105	FOR_1	IF_2	CALL_6
0x40006dc	          0x4889c3	                            mov rbx, rax	      9760	dwarf.c	FUNCTION_105	FOR_1	IF_2	CALL_6
0x40006df	          0x4885db	                           test rbx, rbx	      9759	dwarf.c	FUNCTION_105	FOR_1	CALL_5
0x40006e2	            0x75ec	                           jne 0x40006d0	      9759	dwarf.c	FUNCTION_105	FOR_1	CALL_5
0x40006e4	      0x41c6041f00	                 mov byte [r15 + rbx], 0	      9762	dwarf.c	FUNCTION_105
0x40006e9	          0x4889ef	                            mov rdi, rbp	      9783	dwarf.c	FUNCTION_105	CALL_12
0x40006ec	      0xe800000000	                          call 0x40006f1	      9783	dwarf.c	FUNCTION_105	CALL_12
0x40006f1	      0x488d7c0333	            lea rdi, [rbx + rax + 0x33] 	      9774	dwarf.c	FUNCTION_105	CALL_8
0x40006f6	      0x4889442408	                mov qword [rsp + 8], rax	      9774	dwarf.c	FUNCTION_105	CALL_8
0x40006fb	      0xe800000000	                          call 0x4000700	      9774	dwarf.c	FUNCTION_105	CALL_8
0x4000700	          0x4885c0	                           test rax, rax	      9785	dwarf.c	FUNCTION_105	IF_3
0x4000703	          0x4889c3	                            mov rbx, rax	      9774	dwarf.c	FUNCTION_105	CALL_8
0x4000706	      0x488b542408	                mov rdx, qword [rsp + 8]	      9785	dwarf.c	FUNCTION_105	IF_3
0x400070b	     0xf84da030000	                            je 0x4000aeb	      9785	dwarf.c	FUNCTION_105	IF_3
0x4000711	        0x4883c201	                              add rdx, 1	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000715	          0x4889ee	                            mov rsi, rbp	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000718	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_112	CALL_1
0x400071b	      0xe800000000	                          call 0x4000720	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000720	          0x4c89e6	                            mov rsi, r12	      9793	dwarf.c	FUNCTION_105	IF_4	CALL_15
0x4000723	          0x4889df	                            mov rdi, rbx	      9793	dwarf.c	FUNCTION_105	IF_4	CALL_15
0x4000726	          0x41ffd6	                                call r14	      9793	dwarf.c	FUNCTION_105	IF_4	CALL_15
0x4000729	            0x85c0	                           test eax, eax	      9793	dwarf.c	FUNCTION_105	IF_4	CALL_15
0x400072b	            0x7473	                            je 0x40007a0	      9793	dwarf.c	FUNCTION_105	IF_4	CALL_15
0x400072d	          0x4c89ff	                            mov rdi, r15	      9866	dwarf.c	FUNCTION_105	CALL_44
0x4000730	      0xe800000000	                          call 0x4000735	      9866	dwarf.c	FUNCTION_105	CALL_44
0x4000735	          0x4889df	                            mov rdi, rbx	      9869	dwarf.c	FUNCTION_105	IF_12	CALL_45
0x4000738	      0xe800000000	                          call 0x400073d	      9869	dwarf.c	FUNCTION_105	IF_12	CALL_45
0x400073d	          0x4885c0	                           test rax, rax	      9869	dwarf.c	FUNCTION_105	IF_12	CALL_45
0x4000740	          0x4889c5	                            mov rbp, rax	      9869	dwarf.c	FUNCTION_105	IF_12	CALL_45
0x4000743	    0x488905000000	            mov qword [0x0400074a], rax 	      9869	dwarf.c	FUNCTION_105	IF_12	CALL_45
0x400074a	      0xba05000000	                              mov edx, 5	      9871	dwarf.c	FUNCTION_105	IF_12	CALL_47
0x400074f	     0xf8470030000	                            je 0x4000ac5	      9869	dwarf.c	FUNCTION_105	IF_12	CALL_45
0x4000755	      0xbe00000000	                              mov esi, 0	      9879	dwarf.c	FUNCTION_105	CALL_49
0x400075a	            0x31ff	                            xor edi, edi	      9879	dwarf.c	FUNCTION_105	CALL_49
0x400075c	      0xe800000000	                          call 0x4000761	      9879	dwarf.c	FUNCTION_105	CALL_49
0x4000761	          0x4889d9	                            mov rcx, rbx	       104	stdio2.h	CALL_16
0x4000764	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_16
0x4000767	          0x4c89ea	                            mov rdx, r13	       104	stdio2.h	CALL_16
0x400076a	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400076f	            0x31c0	                            xor eax, eax	       104	stdio2.h	CALL_16
0x4000771	      0xe800000000	                          call 0x4000776	       104	stdio2.h	CALL_16
0x4000776	    0x488b2d000000	            mov rbp, qword [0x0400077d] 	      9884	dwarf.c	FUNCTION_105
0x400077d	    0x48891d000000	            mov qword [0x04000784], rbx 	      9880	dwarf.c	FUNCTION_105
0x4000784	        0x4883c418	                           add rsp, 0x18	      9885	dwarf.c	FUNCTION_105
0x4000788	          0x4889e8	                            mov rax, rbp	      9885	dwarf.c	FUNCTION_105
0x400078b	              0x5b	                                 pop rbx	      9885	dwarf.c	FUNCTION_105
0x400078c	              0x5d	                                 pop rbp	      9885	dwarf.c	FUNCTION_105
0x400078d	            0x415c	                                 pop r12	      9885	dwarf.c	FUNCTION_105
0x400078f	            0x415d	                                 pop r13	      9885	dwarf.c	FUNCTION_105
0x4000791	            0x415e	                                 pop r14	      9885	dwarf.c	FUNCTION_105
0x4000793	            0x415f	                                 pop r15	      9885	dwarf.c	FUNCTION_105
0x4000795	              0xc3	                                     ret	      9885	dwarf.c	FUNCTION_105
0x4000796	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      9885	dwarf.c	FUNCTION_105
0x40007a0	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_112	CALL_1
0x40007a3	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x40007a8	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_112	CALL_1
0x40007af	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_112	CALL_1
0x40007b4	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_112	CALL_1
0x40007b7	      0xe800000000	                          call 0x40007bc	        33	stdio2.h	FUNCTION_112	CALL_1
0x40007bc	          0x4c89e6	                            mov rsi, r12	      9798	dwarf.c	FUNCTION_105	IF_5	CALL_16
0x40007bf	          0x4889df	                            mov rdi, rbx	      9798	dwarf.c	FUNCTION_105	IF_5	CALL_16
0x40007c2	          0x41ffd6	                                call r14	      9798	dwarf.c	FUNCTION_105	IF_5	CALL_16
0x40007c5	            0x85c0	                           test eax, eax	      9798	dwarf.c	FUNCTION_105	IF_5	CALL_16
0x40007c7	     0xf8560ffffff	                           jne 0x400072d	      9798	dwarf.c	FUNCTION_105	IF_5	CALL_16
0x40007cd	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_112	CALL_1
0x40007d0	          0x4d89f8	                             mov r8, r15	        33	stdio2.h	FUNCTION_112	CALL_1
0x40007d3	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x40007d8	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_112	CALL_1
0x40007df	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_112	CALL_1
0x40007e4	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_112	CALL_1
0x40007e7	      0xe800000000	                          call 0x40007ec	        33	stdio2.h	FUNCTION_112	CALL_1
0x40007ec	          0x4c89e6	                            mov rsi, r12	      9803	dwarf.c	FUNCTION_105	IF_6	CALL_17
0x40007ef	          0x4889df	                            mov rdi, rbx	      9803	dwarf.c	FUNCTION_105	IF_6	CALL_17
0x40007f2	          0x41ffd6	                                call r14	      9803	dwarf.c	FUNCTION_105	IF_6	CALL_17
0x40007f5	            0x85c0	                           test eax, eax	      9803	dwarf.c	FUNCTION_105	IF_6	CALL_17
0x40007f7	     0xf8530ffffff	                           jne 0x400072d	      9803	dwarf.c	FUNCTION_105	IF_6	CALL_17
0x40007fd	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000800	          0x4d89f8	                             mov r8, r15	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000803	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000808	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_112	CALL_1
0x400080f	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000814	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000817	      0xe800000000	                          call 0x400081c	        33	stdio2.h	FUNCTION_112	CALL_1
0x400081c	          0x4c89e6	                            mov rsi, r12	      9808	dwarf.c	FUNCTION_105	IF_7	CALL_18
0x400081f	          0x4889df	                            mov rdi, rbx	      9808	dwarf.c	FUNCTION_105	IF_7	CALL_18
0x4000822	          0x41ffd6	                                call r14	      9808	dwarf.c	FUNCTION_105	IF_7	CALL_18
0x4000825	            0x85c0	                           test eax, eax	      9808	dwarf.c	FUNCTION_105	IF_7	CALL_18
0x4000827	     0xf8500ffffff	                           jne 0x400072d	      9808	dwarf.c	FUNCTION_105	IF_7	CALL_18
0x400082d	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000830	    0x41b800000000	                              mov r8d, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000836	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x400083b	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000842	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000847	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_112	CALL_1
0x400084a	      0xe800000000	                          call 0x400084f	        33	stdio2.h	FUNCTION_112	CALL_1
0x400084f	          0x4c89e6	                            mov rsi, r12	      9814	dwarf.c	FUNCTION_105	IF_8	CALL_19
0x4000852	          0x4889df	                            mov rdi, rbx	      9814	dwarf.c	FUNCTION_105	IF_8	CALL_19
0x4000855	          0x41ffd6	                                call r14	      9814	dwarf.c	FUNCTION_105	IF_8	CALL_19
0x4000858	            0x85c0	                           test eax, eax	      9814	dwarf.c	FUNCTION_105	IF_8	CALL_19
0x400085a	     0xf85cdfeffff	                           jne 0x400072d	      9814	dwarf.c	FUNCTION_105	IF_8	CALL_19
0x4000860	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000863	    0x41b800000000	                              mov r8d, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000869	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x400086e	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000875	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_112	CALL_1
0x400087a	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_112	CALL_1
0x400087d	      0xe800000000	                          call 0x4000882	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000882	          0x4c89e6	                            mov rsi, r12	      9821	dwarf.c	FUNCTION_105	IF_9	CALL_20
0x4000885	          0x4889df	                            mov rdi, rbx	      9821	dwarf.c	FUNCTION_105	IF_9	CALL_20
0x4000888	          0x41ffd6	                                call r14	      9821	dwarf.c	FUNCTION_105	IF_9	CALL_20
0x400088b	            0x85c0	                           test eax, eax	      9821	dwarf.c	FUNCTION_105	IF_9	CALL_20
0x400088d	     0xf859afeffff	                           jne 0x400072d	      9821	dwarf.c	FUNCTION_105	IF_9	CALL_20
0x4000893	    0x48b82f6c6962	          movabs rax, 0x6265642f62696c2f	       110	string3.h	FUNCTION_135	CALL_3
0x400089d	        0x488d7b0b	                    lea rdi, [rbx + 0xb]	       148	string3.h	FUNCTION_139	CALL_3
0x40008a1	          0x4889ee	                            mov rsi, rbp	       148	string3.h	FUNCTION_139	CALL_3
0x40008a4	          0x488903	                    mov qword [rbx], rax	       110	string3.h	FUNCTION_135	CALL_3
0x40008a7	      0xb875670000	                         mov eax, 0x6775	       110	string3.h	FUNCTION_135	CALL_3
0x40008ac	        0xc6430a2f	              mov byte [rbx + 0xa], 0x2f	       148	string3.h	FUNCTION_139	CALL_3
0x40008b0	        0x66894308	                  mov word [rbx + 8], ax	       110	string3.h	FUNCTION_135	CALL_3
0x40008b4	      0xe800000000	                          call 0x40008b9	       148	string3.h	FUNCTION_139	CALL_3
0x40008b9	          0x4c89e6	                            mov rsi, r12	      9832	dwarf.c	FUNCTION_105	IF_11	CALL_25
0x40008bc	          0x4889df	                            mov rdi, rbx	      9832	dwarf.c	FUNCTION_105	IF_11	CALL_25
0x40008bf	          0x41ffd6	                                call r14	      9832	dwarf.c	FUNCTION_105	IF_11	CALL_25
0x40008c2	            0x85c0	                           test eax, eax	      9832	dwarf.c	FUNCTION_105	IF_11	CALL_25
0x40008c4	     0xf8563feffff	                           jne 0x400072d	      9832	dwarf.c	FUNCTION_105	IF_11	CALL_25
0x40008ca	      0xba05000000	                              mov edx, 5	      9836	dwarf.c	FUNCTION_105	CALL_27
0x40008cf	            0x31ff	                            xor edi, edi	      9836	dwarf.c	FUNCTION_105	CALL_27
0x40008d1	      0xbe00000000	                              mov esi, 0	      9836	dwarf.c	FUNCTION_105	CALL_27
0x40008d6	      0xe800000000	                          call 0x40008db	      9836	dwarf.c	FUNCTION_105	CALL_27
0x40008db	          0x4889ee	                            mov rsi, rbp	      9836	dwarf.c	FUNCTION_105	CALL_27
0x40008de	          0x4889c7	                            mov rdi, rax	      9836	dwarf.c	FUNCTION_105	CALL_27
0x40008e1	            0x31c0	                            xor eax, eax	      9836	dwarf.c	FUNCTION_105	CALL_27
0x40008e3	      0xe800000000	                          call 0x40008e8	      9836	dwarf.c	FUNCTION_105	CALL_27
0x40008e8	      0xba05000000	                              mov edx, 5	      9837	dwarf.c	FUNCTION_105	CALL_29
0x40008ed	            0x31ff	                            xor edi, edi	      9837	dwarf.c	FUNCTION_105	CALL_29
0x40008ef	      0xbe00000000	                              mov esi, 0	      9837	dwarf.c	FUNCTION_105	CALL_29
0x40008f4	      0xe800000000	                          call 0x40008f9	      9837	dwarf.c	FUNCTION_105	CALL_29
0x40008f9	          0x4889de	                            mov rsi, rbx	      9837	dwarf.c	FUNCTION_105	CALL_29
0x40008fc	          0x4889c7	                            mov rdi, rax	      9837	dwarf.c	FUNCTION_105	CALL_29
0x40008ff	            0x31c0	                            xor eax, eax	      9837	dwarf.c	FUNCTION_105	CALL_29
0x4000901	      0xe800000000	                          call 0x4000906	      9837	dwarf.c	FUNCTION_105	CALL_29
0x4000906	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000909	    0x41b800000000	                              mov r8d, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x400090f	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000914	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_112	CALL_1
0x400091b	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000920	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000923	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000925	      0xe800000000	                          call 0x400092a	        33	stdio2.h	FUNCTION_112	CALL_1
0x400092a	      0xba05000000	                              mov edx, 5	      9841	dwarf.c	FUNCTION_105	CALL_31
0x400092f	            0x31ff	                            xor edi, edi	      9841	dwarf.c	FUNCTION_105	CALL_31
0x4000931	      0xbe00000000	                              mov esi, 0	      9841	dwarf.c	FUNCTION_105	CALL_31
0x4000936	      0xe800000000	                          call 0x400093b	      9841	dwarf.c	FUNCTION_105	CALL_31
0x400093b	          0x4889de	                            mov rsi, rbx	      9841	dwarf.c	FUNCTION_105	CALL_31
0x400093e	          0x4889c7	                            mov rdi, rax	      9841	dwarf.c	FUNCTION_105	CALL_31
0x4000941	            0x31c0	                            xor eax, eax	      9841	dwarf.c	FUNCTION_105	CALL_31
0x4000943	      0xe800000000	                          call 0x4000948	      9841	dwarf.c	FUNCTION_105	CALL_31
0x4000948	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_112	CALL_1
0x400094b	    0x41b800000000	                              mov r8d, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000951	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000956	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_112	CALL_1
0x400095d	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000962	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000965	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000967	      0xe800000000	                          call 0x400096c	        33	stdio2.h	FUNCTION_112	CALL_1
0x400096c	      0xba05000000	                              mov edx, 5	      9846	dwarf.c	FUNCTION_105	CALL_33
0x4000971	            0x31ff	                            xor edi, edi	      9846	dwarf.c	FUNCTION_105	CALL_33
0x4000973	      0xbe00000000	                              mov esi, 0	      9846	dwarf.c	FUNCTION_105	CALL_33
0x4000978	      0xe800000000	                          call 0x400097d	      9846	dwarf.c	FUNCTION_105	CALL_33
0x400097d	          0x4889de	                            mov rsi, rbx	      9846	dwarf.c	FUNCTION_105	CALL_33
0x4000980	          0x4889c7	                            mov rdi, rax	      9846	dwarf.c	FUNCTION_105	CALL_33
0x4000983	            0x31c0	                            xor eax, eax	      9846	dwarf.c	FUNCTION_105	CALL_33
0x4000985	      0xe800000000	                          call 0x400098a	      9846	dwarf.c	FUNCTION_105	CALL_33
0x400098a	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_112	CALL_1
0x400098d	          0x4d89f8	                             mov r8, r15	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000990	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000995	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_112	CALL_1
0x400099c	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_112	CALL_1
0x40009a1	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_112	CALL_1
0x40009a4	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_112	CALL_1
0x40009a6	      0xe800000000	                          call 0x40009ab	        33	stdio2.h	FUNCTION_112	CALL_1
0x40009ab	      0xba05000000	                              mov edx, 5	      9850	dwarf.c	FUNCTION_105	CALL_35
0x40009b0	            0x31ff	                            xor edi, edi	      9850	dwarf.c	FUNCTION_105	CALL_35
0x40009b2	      0xbe00000000	                              mov esi, 0	      9850	dwarf.c	FUNCTION_105	CALL_35
0x40009b7	      0xe800000000	                          call 0x40009bc	      9850	dwarf.c	FUNCTION_105	CALL_35
0x40009bc	          0x4889de	                            mov rsi, rbx	      9850	dwarf.c	FUNCTION_105	CALL_35
0x40009bf	          0x4889c7	                            mov rdi, rax	      9850	dwarf.c	FUNCTION_105	CALL_35
0x40009c2	            0x31c0	                            xor eax, eax	      9850	dwarf.c	FUNCTION_105	CALL_35
0x40009c4	      0xe800000000	                          call 0x40009c9	      9850	dwarf.c	FUNCTION_105	CALL_35
0x40009c9	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_112	CALL_1
0x40009cc	          0x4d89f8	                             mov r8, r15	        33	stdio2.h	FUNCTION_112	CALL_1
0x40009cf	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x40009d4	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_112	CALL_1
0x40009db	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_112	CALL_1
0x40009e0	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_112	CALL_1
0x40009e3	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_112	CALL_1
0x40009e5	      0xe800000000	                          call 0x40009ea	        33	stdio2.h	FUNCTION_112	CALL_1
0x40009ea	      0xba05000000	                              mov edx, 5	      9853	dwarf.c	FUNCTION_105	CALL_37
0x40009ef	            0x31ff	                            xor edi, edi	      9853	dwarf.c	FUNCTION_105	CALL_37
0x40009f1	      0xbe00000000	                              mov esi, 0	      9853	dwarf.c	FUNCTION_105	CALL_37
0x40009f6	      0xe800000000	                          call 0x40009fb	      9853	dwarf.c	FUNCTION_105	CALL_37
0x40009fb	          0x4889de	                            mov rsi, rbx	      9853	dwarf.c	FUNCTION_105	CALL_37
0x40009fe	          0x4889c7	                            mov rdi, rax	      9853	dwarf.c	FUNCTION_105	CALL_37
0x4000a01	            0x31c0	                            xor eax, eax	      9853	dwarf.c	FUNCTION_105	CALL_37
0x4000a03	      0xe800000000	                          call 0x4000a08	      9853	dwarf.c	FUNCTION_105	CALL_37
0x4000a08	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000a0a	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000a0d	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000a12	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000a19	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000a1e	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000a21	      0xe800000000	                          call 0x4000a26	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000a26	      0xba05000000	                              mov edx, 5	      9856	dwarf.c	FUNCTION_105	CALL_39
0x4000a2b	      0xbe00000000	                              mov esi, 0	      9856	dwarf.c	FUNCTION_105	CALL_39
0x4000a30	            0x31ff	                            xor edi, edi	      9856	dwarf.c	FUNCTION_105	CALL_39
0x4000a32	      0xe800000000	                          call 0x4000a37	      9856	dwarf.c	FUNCTION_105	CALL_39
0x4000a37	          0x4889de	                            mov rsi, rbx	      9856	dwarf.c	FUNCTION_105	CALL_39
0x4000a3a	          0x4889c7	                            mov rdi, rax	      9856	dwarf.c	FUNCTION_105	CALL_39
0x4000a3d	            0x31c0	                            xor eax, eax	      9856	dwarf.c	FUNCTION_105	CALL_39
0x4000a3f	      0xe800000000	                          call 0x4000a44	      9856	dwarf.c	FUNCTION_105	CALL_39
0x4000a44	          0x4889ee	                            mov rsi, rbp	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000a47	          0x4889df	                            mov rdi, rbx	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000a4a	            0x31ed	                            xor ebp, ebp	      9863	dwarf.c	FUNCTION_105
0x4000a4c	      0xe800000000	                          call 0x4000a51	        33	stdio2.h	FUNCTION_112	CALL_1
0x4000a51	      0xba05000000	                              mov edx, 5	      9859	dwarf.c	FUNCTION_105	CALL_41
0x4000a56	      0xbe00000000	                              mov esi, 0	      9859	dwarf.c	FUNCTION_105	CALL_41
0x4000a5b	            0x31ff	                            xor edi, edi	      9859	dwarf.c	FUNCTION_105	CALL_41
0x4000a5d	      0xe800000000	                          call 0x4000a62	      9859	dwarf.c	FUNCTION_105	CALL_41
0x4000a62	          0x4889de	                            mov rsi, rbx	      9859	dwarf.c	FUNCTION_105	CALL_41
0x4000a65	          0x4889c7	                            mov rdi, rax	      9859	dwarf.c	FUNCTION_105	CALL_41
0x4000a68	            0x31c0	                            xor eax, eax	      9859	dwarf.c	FUNCTION_105	CALL_41
0x4000a6a	      0xe800000000	                          call 0x4000a6f	      9859	dwarf.c	FUNCTION_105	CALL_41
0x4000a6f	          0x4c89ff	                            mov rdi, r15	      9861	dwarf.c	FUNCTION_105	CALL_42
0x4000a72	      0xe800000000	                          call 0x4000a77	      9861	dwarf.c	FUNCTION_105	CALL_42
0x4000a77	          0x4889df	                            mov rdi, rbx	      9862	dwarf.c	FUNCTION_105	CALL_43
0x4000a7a	      0xe800000000	                          call 0x4000a7f	      9862	dwarf.c	FUNCTION_105	CALL_43
0x4000a7f	      0xe900fdffff	                           jmp 0x4000784	      9863	dwarf.c	FUNCTION_105
0x4000a84	         0xf1f4000	                         nop dword [rax]	      9863	dwarf.c	FUNCTION_105
0x4000a88	        0x488b6b10	            mov rbp, qword [rbx + 0x10] 	      9750	dwarf.c	FUNCTION_105	IF_1
0x4000a8c	          0x4885ed	                           test rbp, rbp	      9749	dwarf.c	FUNCTION_105	IF_1	CALL_3
0x4000a8f	            0x747c	                            je 0x4000b0d	      9749	dwarf.c	FUNCTION_105	IF_1	CALL_3
0x4000a91	      0xba05000000	                              mov edx, 5	      9749	dwarf.c	FUNCTION_105	IF_1	CALL_3
0x4000a96	      0xbe00000000	                              mov esi, 0	      9749	dwarf.c	FUNCTION_105	IF_1	CALL_3
0x4000a9b	            0x31ff	                            xor edi, edi	      9749	dwarf.c	FUNCTION_105	IF_1	CALL_3
0x4000a9d	      0xe800000000	                          call 0x4000aa2	      9749	dwarf.c	FUNCTION_105	IF_1	CALL_3
0x4000aa2	          0x4889ee	                            mov rsi, rbp	      9749	dwarf.c	FUNCTION_105	IF_1	CALL_3
0x4000aa5	          0x4889c7	                            mov rdi, rax	      9749	dwarf.c	FUNCTION_105	IF_1	CALL_3
0x4000aa8	            0x31c0	                            xor eax, eax	      9749	dwarf.c	FUNCTION_105	IF_1	CALL_3
0x4000aaa	      0xe800000000	                          call 0x4000aaf	      9749	dwarf.c	FUNCTION_105	IF_1	CALL_3
0x4000aaf	            0x31ed	                            xor ebp, ebp	      9751	dwarf.c	FUNCTION_105	IF_1
0x4000ab1	      0xe9cefcffff	                           jmp 0x4000784	      9751	dwarf.c	FUNCTION_105	IF_1
0x4000ab6	            0x31db	                            xor ebx, ebx	      9759	dwarf.c	FUNCTION_105	FOR_1	CALL_5
0x4000ab8	      0xe927fcffff	                           jmp 0x40006e4	      9759	dwarf.c	FUNCTION_105	FOR_1	CALL_5
0x4000abd	          0x4889c3	                            mov rbx, rax	      9760	dwarf.c	FUNCTION_105	FOR_1	IF_2	CALL_6
0x4000ac0	      0xe91ffcffff	                           jmp 0x40006e4	      9760	dwarf.c	FUNCTION_105	FOR_1	IF_2	CALL_6
0x4000ac5	            0x31ff	                            xor edi, edi	      9871	dwarf.c	FUNCTION_105	IF_12	CALL_47
0x4000ac7	      0xbe00000000	                              mov esi, 0	      9871	dwarf.c	FUNCTION_105	IF_12	CALL_47
0x4000acc	      0xe800000000	                          call 0x4000ad1	      9871	dwarf.c	FUNCTION_105	IF_12	CALL_47
0x4000ad1	          0x4889de	                            mov rsi, rbx	      9871	dwarf.c	FUNCTION_105	IF_12	CALL_47
0x4000ad4	          0x4889c7	                            mov rdi, rax	      9871	dwarf.c	FUNCTION_105	IF_12	CALL_47
0x4000ad7	            0x31c0	                            xor eax, eax	      9871	dwarf.c	FUNCTION_105	IF_12	CALL_47
0x4000ad9	      0xe800000000	                          call 0x4000ade	      9871	dwarf.c	FUNCTION_105	IF_12	CALL_47
0x4000ade	          0x4889df	                            mov rdi, rbx	      9872	dwarf.c	FUNCTION_105	IF_12	CALL_48
0x4000ae1	      0xe800000000	                          call 0x4000ae6	      9872	dwarf.c	FUNCTION_105	IF_12	CALL_48
0x4000ae6	      0xe999fcffff	                           jmp 0x4000784	      9873	dwarf.c	FUNCTION_105	IF_12
0x4000aeb	      0xba05000000	                              mov edx, 5	      9787	dwarf.c	FUNCTION_105	IF_3	CALL_14
0x4000af0	      0xbe00000000	                              mov esi, 0	      9787	dwarf.c	FUNCTION_105	IF_3	CALL_14
0x4000af5	            0x31ff	                            xor edi, edi	      9787	dwarf.c	FUNCTION_105	IF_3	CALL_14
0x4000af7	      0xe800000000	                          call 0x4000afc	      9787	dwarf.c	FUNCTION_105	IF_3	CALL_14
0x4000afc	          0x4889c7	                            mov rdi, rax	      9787	dwarf.c	FUNCTION_105	IF_3	CALL_14
0x4000aff	            0x31c0	                            xor eax, eax	      9787	dwarf.c	FUNCTION_105	IF_3	CALL_14
0x4000b01	            0x31ed	                            xor ebp, ebp	      9788	dwarf.c	FUNCTION_105	IF_3
0x4000b03	      0xe800000000	                          call 0x4000b08	      9787	dwarf.c	FUNCTION_105	IF_3	CALL_14
0x4000b08	      0xe977fcffff	                           jmp 0x4000784	      9788	dwarf.c	FUNCTION_105	IF_3
0x4000b0d	          0x488b2b	                    mov rbp, qword [rbx]	      9749	dwarf.c	FUNCTION_105	IF_1	CALL_3
0x4000b10	      0xe97cffffff	                           jmp 0x4000a91	      9749	dwarf.c	FUNCTION_105	IF_1	CALL_3
