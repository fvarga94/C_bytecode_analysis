_bfd_nowrite_set_section_contents	WHILE,0:SWITCH,0:DO,0:ELSE,0:CALL,1:FOR,0:IF,0:functions,0	1
0x4000a90	      0xe900000000	                   jmp section_end..text	      1686	section.c	FUNCTION_25	CALL_1
bfd_section_hash_newfunc	WHILE,0:SWITCH,0:DO,0:ELSE,0:CALL,3:FOR,0:IF,3:functions,0	35
0x40000e0	              0x53	                                push rbx	       779	section.c	FUNCTION_1
0x40000e1	          0x4889f3	                            mov rbx, rsi	       779	section.c	FUNCTION_1
0x40000e4	        0x4883ec10	                           sub rsp, 0x10	       779	section.c	FUNCTION_1
0x40000e8	          0x4885ff	                           test rdi, rdi	       782	section.c	FUNCTION_1	IF_1
0x40000eb	            0x744b	                            je 0x4000138	       782	section.c	FUNCTION_1	IF_1
0x40000ed	          0x4889de	                            mov rsi, rbx	       791	section.c	FUNCTION_1	CALL_2
0x40000f0	      0xe800000000	                          call 0x40000f5	       791	section.c	FUNCTION_1	CALL_2
0x40000f5	          0x4889c2	                            mov rdx, rax	       791	section.c	FUNCTION_1	CALL_2
0x40000f8	            0x31c0	                            xor eax, eax	       791	section.c	FUNCTION_1	CALL_2
0x40000fa	          0x4885d2	                           test rdx, rdx	       792	section.c	FUNCTION_1	IF_3
0x40000fd	            0x742e	                            je 0x400012d	       792	section.c	FUNCTION_1	IF_3
0x40000ff	        0x488d7a20	                   lea rdi, [rdx + 0x20]	        90	string3.h	FUNCTION_29	CALL_6
0x4000103	            0x89d1	                            mov ecx, edx	        90	string3.h	FUNCTION_29	CALL_6
0x4000105	    0x48c742180000	               mov qword [rdx + 0x18], 0	        90	string3.h	FUNCTION_29	CALL_6
0x400010d	    0x48c782280100	              mov qword [rdx + 0x128], 0	        90	string3.h	FUNCTION_29	CALL_6
0x4000118	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_29	CALL_6
0x400011c	            0x29f9	                            sub ecx, edi	        90	string3.h	FUNCTION_29	CALL_6
0x400011e	    0x81c130010000	                          add ecx, 0x130	        90	string3.h	FUNCTION_29	CALL_6
0x4000124	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_29	CALL_6
0x4000127	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_29	CALL_6
0x400012a	          0x4889d0	                            mov rax, rdx	        90	string3.h	FUNCTION_29	CALL_6
0x400012d	        0x4883c410	                           add rsp, 0x10	       797	section.c	FUNCTION_1
0x4000131	              0x5b	                                 pop rbx	       797	section.c	FUNCTION_1
0x4000132	              0xc3	                                     ret	       797	section.c	FUNCTION_1
0x4000133	       0xf1f440000	                   nop dword [rax + rax]	       797	section.c	FUNCTION_1
0x4000138	          0x4889df	                            mov rdi, rbx	       784	section.c	FUNCTION_1	IF_1
0x400013b	      0xbe30010000	                          mov esi, 0x130	       784	section.c	FUNCTION_1	IF_1
0x4000140	      0x4889542408	                mov qword [rsp + 8], rdx	       784	section.c	FUNCTION_1	IF_1
0x4000145	      0xe800000000	                          call 0x400014a	       784	section.c	FUNCTION_1	IF_1
0x400014a	          0x4885c0	                           test rax, rax	       786	section.c	FUNCTION_1	IF_1	IF_2
0x400014d	          0x4889c7	                            mov rdi, rax	       784	section.c	FUNCTION_1	IF_1
0x4000150	      0x488b542408	                mov rdx, qword [rsp + 8]	       786	section.c	FUNCTION_1	IF_1	IF_2
0x4000155	            0x7596	                           jne 0x40000ed	       786	section.c	FUNCTION_1	IF_1	IF_2
0x4000157	            0x31c0	                            xor eax, eax	       786	section.c	FUNCTION_1	IF_1	IF_2
0x4000159	            0xebd2	                           jmp 0x400012d	       786	section.c	FUNCTION_1	IF_1	IF_2
bfd_sections_find_if	WHILE,0:SWITCH,0:DO,0:ELSE,0:CALL,1:FOR,1:IF,1:functions,0	38
0x4000800	            0x4155	                                push r13	      1405	section.c	FUNCTION_18
0x4000802	            0x4154	                                push r12	      1405	section.c	FUNCTION_18
0x4000804	          0x4989f5	                            mov r13, rsi	      1405	section.c	FUNCTION_18
0x4000807	              0x55	                                push rbp	      1405	section.c	FUNCTION_18
0x4000808	              0x53	                                push rbx	      1405	section.c	FUNCTION_18
0x4000809	          0x4889fd	                            mov rbp, rdi	      1405	section.c	FUNCTION_18
0x400080c	          0x4989d4	                            mov r12, rdx	      1405	section.c	FUNCTION_18
0x400080f	        0x4883ec08	                              sub rsp, 8	      1405	section.c	FUNCTION_18
0x4000813	    0x488b9f900000	            mov rbx, qword [rdi + 0x90] 	      1408	section.c	FUNCTION_18	FOR_1
0x400081a	          0x4885db	                           test rbx, rbx	      1408	section.c	FUNCTION_18	FOR_1
0x400081d	            0x7512	                           jne 0x4000831	      1408	section.c	FUNCTION_18	FOR_1
0x400081f	            0xeb2f	                           jmp 0x4000850	      1408	section.c	FUNCTION_18	FOR_1
0x4000821	     0xf1f80000000	                         nop dword [rax]	      1408	section.c	FUNCTION_18	FOR_1
0x4000828	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      1408	section.c	FUNCTION_18	FOR_1
0x400082c	          0x4885db	                           test rbx, rbx	      1408	section.c	FUNCTION_18	FOR_1
0x400082f	            0x741f	                            je 0x4000850	      1408	section.c	FUNCTION_18	FOR_1
0x4000831	          0x4c89e2	                            mov rdx, r12	      1409	section.c	FUNCTION_18	FOR_1	IF_1
0x4000834	          0x4889de	                            mov rsi, rbx	      1409	section.c	FUNCTION_18	FOR_1	IF_1
0x4000837	          0x4889ef	                            mov rdi, rbp	      1409	section.c	FUNCTION_18	FOR_1	IF_1
0x400083a	          0x41ffd5	                                call r13	      1409	section.c	FUNCTION_18	FOR_1	IF_1
0x400083d	            0x85c0	                           test eax, eax	      1409	section.c	FUNCTION_18	FOR_1	IF_1
0x400083f	            0x74e7	                            je 0x4000828	      1409	section.c	FUNCTION_18	FOR_1	IF_1
0x4000841	        0x4883c408	                              add rsp, 8	      1413	section.c	FUNCTION_18
0x4000845	          0x4889d8	                            mov rax, rbx	      1413	section.c	FUNCTION_18
0x4000848	              0x5b	                                 pop rbx	      1413	section.c	FUNCTION_18
0x4000849	              0x5d	                                 pop rbp	      1413	section.c	FUNCTION_18
0x400084a	            0x415c	                                 pop r12	      1413	section.c	FUNCTION_18
0x400084c	            0x415d	                                 pop r13	      1413	section.c	FUNCTION_18
0x400084e	              0xc3	                                     ret	      1413	section.c	FUNCTION_18
0x400084f	              0x90	                                     nop	      1413	section.c	FUNCTION_18
0x4000850	        0x4883c408	                              add rsp, 8	      1413	section.c	FUNCTION_18
0x4000854	            0x31db	                            xor ebx, ebx	      1405	section.c	FUNCTION_18
0x4000856	          0x4889d8	                            mov rax, rbx	      1413	section.c	FUNCTION_18
0x4000859	              0x5b	                                 pop rbx	      1413	section.c	FUNCTION_18
0x400085a	              0x5d	                                 pop rbp	      1413	section.c	FUNCTION_18
0x400085b	            0x415c	                                 pop r12	      1413	section.c	FUNCTION_18
0x400085d	            0x415d	                                 pop r13	      1413	section.c	FUNCTION_18
0x400085f	              0xc3	                                     ret	      1413	section.c	FUNCTION_18
bfd_get_linker_section	WHILE,1:SWITCH,0:DO,0:ELSE,0:CALL,2:FOR,0:IF,0:functions,0	25
0x40002e0	        0x4883ec08	                              sub rsp, 8	       961	section.c	FUNCTION_7
0x40002e4	        0x4883c768	                           add rdi, 0x68	       893	section.c	FUNCTION_5
0x40002e8	            0x31c9	                            xor ecx, ecx	       893	section.c	FUNCTION_5
0x40002ea	            0x31d2	                            xor edx, edx	       893	section.c	FUNCTION_5
0x40002ec	      0xe800000000	                          call 0x40002f1	       893	section.c	FUNCTION_5
0x40002f1	          0x4885c0	                           test rax, rax	       894	section.c	FUNCTION_5	IF_1
0x40002f4	            0x742a	                            je 0x4000320	       894	section.c	FUNCTION_5	IF_1
0x40002f6	        0xf6403a10	           test byte [rax + 0x3a], 0x10 	       964	section.c	FUNCTION_7	WHILE_1
0x40002fa	        0x488d7018	                   lea rsi, [rax + 0x18]	       895	section.c	FUNCTION_5	IF_1
0x40002fe	            0x7515	                           jne 0x4000315	       964	section.c	FUNCTION_7	WHILE_1
0x4000300	            0x31ff	                            xor edi, edi	       965	section.c	FUNCTION_7	CALL_2
0x4000302	      0xe800000000	                          call 0x4000307	       965	section.c	FUNCTION_7	CALL_2
0x4000307	          0x4885c0	                           test rax, rax	       964	section.c	FUNCTION_7	WHILE_1
0x400030a	          0x4889c6	                            mov rsi, rax	       965	section.c	FUNCTION_7	CALL_2
0x400030d	            0x7411	                            je 0x4000320	       964	section.c	FUNCTION_7	WHILE_1
0x400030f	        0xf6402210	           test byte [rax + 0x22], 0x10 	       964	section.c	FUNCTION_7	WHILE_1
0x4000313	            0x74eb	                            je 0x4000300	       964	section.c	FUNCTION_7	WHILE_1
0x4000315	          0x4889f0	                            mov rax, rsi	       967	section.c	FUNCTION_7
0x4000318	        0x4883c408	                              add rsp, 8	       967	section.c	FUNCTION_7
0x400031c	              0xc3	                                     ret	       967	section.c	FUNCTION_7
0x400031d	           0xf1f00	                         nop dword [rax]	       967	section.c	FUNCTION_7
0x4000320	            0x31f6	                            xor esi, esi	       961	section.c	FUNCTION_7
0x4000322	        0x4883c408	                              add rsp, 8	       967	section.c	FUNCTION_7
0x4000326	          0x4889f0	                            mov rax, rsi	       967	section.c	FUNCTION_7
0x4000329	              0xc3	                                     ret	       967	section.c	FUNCTION_7
bfd_section_list_clear	WHILE,0:SWITCH,0:DO,0:ELSE,0:CALL,1:FOR,0:IF,0:functions,0	13
0x40001c0	              0x53	                                push rbx	       867	section.c	FUNCTION_4
0x40001c1	    0x8b9780000000	            mov edx, dword [rdi + 0x80] 	        90	string3.h	FUNCTION_29	CALL_6
0x40001c7	          0x4889fb	                            mov rbx, rdi	       867	section.c	FUNCTION_4
0x40001ca	    0x48c787900000	               mov qword [rdi + 0x90], 0	       868	section.c	FUNCTION_4
0x40001d5	    0x48c787980000	               mov qword [rdi + 0x98], 0	       869	section.c	FUNCTION_4
0x40001e0	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_29	CALL_6
0x40001e2	    0xc787a0000000	               mov dword [rdi + 0xa0], 0	       870	section.c	FUNCTION_4
0x40001ec	        0x488b7f68	            mov rdi, qword [rdi + 0x68] 	        90	string3.h	FUNCTION_29	CALL_6
0x40001f0	        0x48c1e203	                              shl rdx, 3	        90	string3.h	FUNCTION_29	CALL_6
0x40001f4	      0xe800000000	                          call 0x40001f9	        90	string3.h	FUNCTION_29	CALL_6
0x40001f9	    0xc78384000000	               mov dword [rbx + 0x84], 0	       873	section.c	FUNCTION_4
0x4000203	              0x5b	                                 pop rbx	       874	section.c	FUNCTION_4
0x4000204	              0xc3	                                     ret	       874	section.c	FUNCTION_4
bfd_set_section_contents	WHILE,0:SWITCH,0:DO,0:ELSE,0:CALL,7:FOR,0:IF,5:functions,0	69
0x4000890	            0x4154	                                push r12	      1482	section.c	FUNCTION_20
0x4000892	              0x55	                                push rbp	      1482	section.c	FUNCTION_20
0x4000893	              0x53	                                push rbx	      1482	section.c	FUNCTION_20
0x4000894	        0x4883ec10	                           sub rsp, 0x10	      1482	section.c	FUNCTION_20
0x4000898	        0xf6462101	               test byte [rsi + 0x21], 1	      1485	section.c	FUNCTION_20	IF_1	CALL_1
0x400089c	     0xf84a6000000	                            je 0x4000948	      1485	section.c	FUNCTION_20	IF_1	CALL_1
0x40008a2	        0x488b4638	            mov rax, qword [rsi + 0x38] 	      1491	section.c	FUNCTION_20
0x40008a6	          0x4889f3	                            mov rbx, rsi	      1491	section.c	FUNCTION_20
0x40008a9	          0x4839c8	                            cmp rax, rcx	      1492	section.c	FUNCTION_20	IF_2
0x40008ac	     0xf827e000000	                            jb 0x4000930	      1492	section.c	FUNCTION_20	IF_2
0x40008b2	          0x4c39c0	                             cmp rax, r8	      1492	section.c	FUNCTION_20	IF_2
0x40008b5	            0x7279	                            jb 0x4000930	      1492	section.c	FUNCTION_20	IF_2
0x40008b7	          0x4989d4	                            mov r12, rdx	      1492	section.c	FUNCTION_20	IF_2
0x40008ba	        0x4a8d1401	                     lea rdx, [rcx + r8]	      1495	section.c	FUNCTION_20	IF_2
0x40008be	          0x4839d0	                            cmp rax, rdx	      1495	section.c	FUNCTION_20	IF_2
0x40008c1	            0x726d	                            jb 0x4000930	      1495	section.c	FUNCTION_20	IF_2
0x40008c3	        0xf6474410	           test byte [rdi + 0x44], 0x10 	      1501	section.c	FUNCTION_20	IF_3	CALL_4
0x40008c7	          0x4889fd	                            mov rbp, rdi	      1501	section.c	FUNCTION_20	IF_3	CALL_4
0x40008ca	     0xf8490000000	                            je 0x4000960	      1501	section.c	FUNCTION_20	IF_3	CALL_4
0x40008d0	    0x488bbeb00000	            mov rdi, qword [rsi + 0xb0] 	      1508	section.c	FUNCTION_20	IF_4
0x40008d7	          0x4885ff	                           test rdi, rdi	      1508	section.c	FUNCTION_20	IF_4
0x40008da	            0x7425	                            je 0x4000901	      1508	section.c	FUNCTION_20	IF_4
0x40008dc	          0x4801cf	                            add rdi, rcx	      1509	section.c	FUNCTION_20	IF_4
0x40008df	          0x4c39e7	                            cmp rdi, r12	      1509	section.c	FUNCTION_20	IF_4
0x40008e2	            0x741d	                            je 0x4000901	      1509	section.c	FUNCTION_20	IF_4
0x40008e4	          0x4c89c2	                             mov rdx, r8	        53	string3.h	FUNCTION_26	CALL_3
0x40008e7	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_26	CALL_3
0x40008ea	      0x48894c2408	                mov qword [rsp + 8], rcx	        53	string3.h	FUNCTION_26	CALL_3
0x40008ef	        0x4c890424	                     mov qword [rsp], r8	        53	string3.h	FUNCTION_26	CALL_3
0x40008f3	      0xe800000000	                          call 0x40008f8	        53	string3.h	FUNCTION_26	CALL_3
0x40008f8	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        53	string3.h	FUNCTION_26	CALL_3
0x40008fd	        0x4c8b0424	                     mov r8, qword [rsp]	        53	string3.h	FUNCTION_26	CALL_3
0x4000901	        0x488b4508	                mov rax, qword [rbp + 8]	      1512	section.c	FUNCTION_20	IF_5	CALL_7
0x4000905	          0x4c89e2	                            mov rdx, r12	      1512	section.c	FUNCTION_20	IF_5	CALL_7
0x4000908	          0x4889de	                            mov rsi, rbx	      1512	section.c	FUNCTION_20	IF_5	CALL_7
0x400090b	          0x4889ef	                            mov rdi, rbp	      1512	section.c	FUNCTION_20	IF_5	CALL_7
0x400090e	    0xff9098020000	                call qword [rax + 0x298]	      1512	section.c	FUNCTION_20	IF_5	CALL_7
0x4000914	            0x85c0	                           test eax, eax	      1512	section.c	FUNCTION_20	IF_5	CALL_7
0x4000916	            0x7424	                            je 0x400093c	      1512	section.c	FUNCTION_20	IF_5	CALL_7
0x4000918	        0x804d4740	              or byte [rbp + 0x47], 0x40	      1515	section.c	FUNCTION_20	IF_5
0x400091c	        0x4883c410	                           add rsp, 0x10	      1520	section.c	FUNCTION_20
0x4000920	      0xb801000000	                              mov eax, 1	      1516	section.c	FUNCTION_20	IF_5
0x4000925	              0x5b	                                 pop rbx	      1520	section.c	FUNCTION_20
0x4000926	              0x5d	                                 pop rbp	      1520	section.c	FUNCTION_20
0x4000927	            0x415c	                                 pop r12	      1520	section.c	FUNCTION_20
0x4000929	              0xc3	                                     ret	      1520	section.c	FUNCTION_20
0x400092a	    0x660f1f440000	                    nop word [rax + rax]	      1520	section.c	FUNCTION_20
0x4000930	      0xbf11000000	                           mov edi, 0x11	      1497	section.c	FUNCTION_20	IF_2	CALL_3
0x4000935	      0xe800000000	                          call 0x400093a	      1497	section.c	FUNCTION_20	IF_2	CALL_3
0x400093a	            0x31c0	                            xor eax, eax	      1498	section.c	FUNCTION_20	IF_2
0x400093c	        0x4883c410	                           add rsp, 0x10	      1520	section.c	FUNCTION_20
0x4000940	              0x5b	                                 pop rbx	      1520	section.c	FUNCTION_20
0x4000941	              0x5d	                                 pop rbp	      1520	section.c	FUNCTION_20
0x4000942	            0x415c	                                 pop r12	      1520	section.c	FUNCTION_20
0x4000944	              0xc3	                                     ret	      1520	section.c	FUNCTION_20
0x4000945	           0xf1f00	                         nop dword [rax]	      1520	section.c	FUNCTION_20
0x4000948	      0xbf0e000000	                            mov edi, 0xe	      1487	section.c	FUNCTION_20	IF_1	CALL_2
0x400094d	      0xe800000000	                          call 0x4000952	      1487	section.c	FUNCTION_20	IF_1	CALL_2
0x4000952	        0x4883c410	                           add rsp, 0x10	      1520	section.c	FUNCTION_20
0x4000956	            0x31c0	                            xor eax, eax	      1488	section.c	FUNCTION_20	IF_1
0x4000958	              0x5b	                                 pop rbx	      1520	section.c	FUNCTION_20
0x4000959	              0x5d	                                 pop rbp	      1520	section.c	FUNCTION_20
0x400095a	            0x415c	                                 pop r12	      1520	section.c	FUNCTION_20
0x400095c	              0xc3	                                     ret	      1520	section.c	FUNCTION_20
0x400095d	           0xf1f00	                         nop dword [rax]	      1520	section.c	FUNCTION_20
0x4000960	      0xbf05000000	                              mov edi, 5	      1503	section.c	FUNCTION_20	IF_3	CALL_5
0x4000965	      0xe800000000	                          call 0x400096a	      1503	section.c	FUNCTION_20	IF_3	CALL_5
0x400096a	            0x31c0	                            xor eax, eax	      1504	section.c	FUNCTION_20	IF_3
0x400096c	            0xebce	                           jmp 0x400093c	      1504	section.c	FUNCTION_20	IF_3
bfd_make_section_anyway	WHILE,0:SWITCH,0:DO,0:ELSE,0:CALL,1:FOR,0:IF,0:functions,0	2
0x4000670	            0x31d2	                            xor edx, edx	      1213	section.c	FUNCTION_12	CALL_1
0x4000672	      0xe959ffffff	jmp sym.bfd_make_section_anyway_with_flags	      1213	section.c	FUNCTION_12	CALL_1
bfd_section_init	WHILE,0:SWITCH,0:DO,0:ELSE,0:CALL,2:FOR,0:IF,1:functions,0	38
0x4000040	              0x55	                                push rbp	       829	section.c	FUNCTION_3
0x4000041	              0x53	                                push rbx	       829	section.c	FUNCTION_3
0x4000042	          0x4889fd	                            mov rbp, rdi	       829	section.c	FUNCTION_3
0x4000045	          0x4889f3	                            mov rbx, rsi	       829	section.c	FUNCTION_3
0x4000048	        0x4883ec08	                              sub rsp, 8	       829	section.c	FUNCTION_3
0x400004c	    0x8b0500000000	            mov eax, dword [0x04000052] 	       830	section.c	FUNCTION_3
0x4000052	          0x894608	                mov dword [rsi + 8], eax	       830	section.c	FUNCTION_3
0x4000055	    0x8b87a0000000	            mov eax, dword [rdi + 0xa0] 	       831	section.c	FUNCTION_3
0x400005b	    0x4889bef00000	             mov qword [rsi + 0xf0], rdi	       832	section.c	FUNCTION_3
0x4000062	          0x89460c	              mov dword [rsi + 0xc], eax	       831	section.c	FUNCTION_3
0x4000065	        0x488b4708	                mov rax, qword [rdi + 8]	       834	section.c	FUNCTION_3	IF_1	CALL_1
0x4000069	    0xff9020010000	                call qword [rax + 0x120]	       834	section.c	FUNCTION_3	IF_1	CALL_1
0x400006f	            0x85c0	                           test eax, eax	       834	section.c	FUNCTION_3	IF_1	CALL_1
0x4000071	            0x7455	                            je 0x40000c8	       834	section.c	FUNCTION_3	IF_1	CALL_1
0x4000073	    0x488b85980000	            mov rax, qword [rbp + 0x98] 	       839	section.c	FUNCTION_3	CALL_2
0x400007a	    0x8385a0000000	               add dword [rbp + 0xa0], 1	       838	section.c	FUNCTION_3
0x4000081	    0x830500000000	               add dword [0x04000088], 1	       837	section.c	FUNCTION_3
0x4000088	    0x48c743100000	               mov qword [rbx + 0x10], 0	       839	section.c	FUNCTION_3	CALL_2
0x4000090	          0x4885c0	                           test rax, rax	       839	section.c	FUNCTION_3	CALL_2
0x4000093	            0x741b	                            je 0x40000b0	       839	section.c	FUNCTION_3	CALL_2
0x4000095	        0x48894318	             mov qword [rbx + 0x18], rax	       839	section.c	FUNCTION_3	CALL_2
0x4000099	        0x48895810	             mov qword [rax + 0x10], rbx	       839	section.c	FUNCTION_3	CALL_2
0x400009d	    0x48899d980000	            mov qword [rbp + 0x98], rbx 	       839	section.c	FUNCTION_3	CALL_2
0x40000a4	        0x4883c408	                              add rsp, 8	       841	section.c	FUNCTION_3
0x40000a8	          0x4889d8	                            mov rax, rbx	       840	section.c	FUNCTION_3
0x40000ab	              0x5b	                                 pop rbx	       841	section.c	FUNCTION_3
0x40000ac	              0x5d	                                 pop rbp	       841	section.c	FUNCTION_3
0x40000ad	              0xc3	                                     ret	       841	section.c	FUNCTION_3
0x40000ae	            0x6690	                                     nop	       841	section.c	FUNCTION_3
0x40000b0	    0x48c743180000	               mov qword [rbx + 0x18], 0	       839	section.c	FUNCTION_3	CALL_2
0x40000b8	    0x48899d900000	            mov qword [rbp + 0x90], rbx 	       839	section.c	FUNCTION_3	CALL_2
0x40000bf	            0xebdc	                           jmp 0x400009d	       839	section.c	FUNCTION_3	CALL_2
0x40000c1	     0xf1f80000000	                         nop dword [rax]	       839	section.c	FUNCTION_3	CALL_2
0x40000c8	        0x4883c408	                              add rsp, 8	       841	section.c	FUNCTION_3
0x40000cc	            0x31c0	                            xor eax, eax	       835	section.c	FUNCTION_3	IF_1
0x40000ce	              0x5b	                                 pop rbx	       841	section.c	FUNCTION_3
0x40000cf	              0x5d	                                 pop rbp	       841	section.c	FUNCTION_3
0x40000d0	              0xc3	                                     ret	       841	section.c	FUNCTION_3
bfd_set_section_flags	WHILE,0:SWITCH,0:DO,0:ELSE,0:CALL,0:FOR,0:IF,0:functions,0	3
0x4000760	          0x895620	             mov dword [rsi + 0x20], edx	      1312	section.c	FUNCTION_15
0x4000763	      0xb801000000	                              mov eax, 1	      1314	section.c	FUNCTION_15
0x4000768	              0xc3	                                     ret	      1314	section.c	FUNCTION_15
bfd_malloc_and_get_section	WHILE,0:SWITCH,0:DO,0:ELSE,0:CALL,1:FOR,0:IF,0:functions,0	2
0x4000a60	    0x48c702000000	                      mov qword [rdx], 0	      1618	section.c	FUNCTION_22
0x4000a67	      0xe900000000	                           jmp 0x4000a6c	      1619	section.c	FUNCTION_22	CALL_1
bfd_map_over_sections	WHILE,0:SWITCH,0:DO,0:ELSE,0:CALL,1:FOR,1:IF,1:functions,0	35
0x4000790	            0x4156	                                push r14	      1369	section.c	FUNCTION_17
0x4000792	            0x4155	                                push r13	      1369	section.c	FUNCTION_17
0x4000794	            0x4154	                                push r12	      1369	section.c	FUNCTION_17
0x4000796	              0x55	                                push rbp	      1369	section.c	FUNCTION_17
0x4000797	          0x4989fc	                            mov r12, rdi	      1369	section.c	FUNCTION_17
0x400079a	              0x53	                                push rbx	      1369	section.c	FUNCTION_17
0x400079b	    0x488b9f900000	            mov rbx, qword [rdi + 0x90] 	      1373	section.c	FUNCTION_17	FOR_1
0x40007a2	          0x4885db	                           test rbx, rbx	      1373	section.c	FUNCTION_17	FOR_1
0x40007a5	            0x7434	                            je 0x40007db	      1373	section.c	FUNCTION_17	FOR_1
0x40007a7	          0x4989f5	                            mov r13, rsi	      1373	section.c	FUNCTION_17	FOR_1
0x40007aa	          0x4989d6	                            mov r14, rdx	      1373	section.c	FUNCTION_17	FOR_1
0x40007ad	            0x31ed	                            xor ebp, ebp	      1373	section.c	FUNCTION_17	FOR_1
0x40007af	              0x90	                                     nop	      1373	section.c	FUNCTION_17	FOR_1
0x40007b0	          0x4889de	                            mov rsi, rbx	      1374	section.c	FUNCTION_17	FOR_1
0x40007b3	          0x4c89f2	                            mov rdx, r14	      1374	section.c	FUNCTION_17	FOR_1
0x40007b6	          0x4c89e7	                            mov rdi, r12	      1374	section.c	FUNCTION_17	FOR_1
0x40007b9	          0x41ffd5	                                call r13	      1374	section.c	FUNCTION_17	FOR_1
0x40007bc	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      1373	section.c	FUNCTION_17	FOR_1
0x40007c0	          0x83c501	                              add ebp, 1	      1373	section.c	FUNCTION_17	FOR_1
0x40007c3	          0x4885db	                           test rbx, rbx	      1373	section.c	FUNCTION_17	FOR_1
0x40007c6	            0x75e8	                           jne 0x40007b0	      1373	section.c	FUNCTION_17	FOR_1
0x40007c8	    0x4139ac24a000	            cmp dword [r12 + 0xa0], ebp 	      1376	section.c	FUNCTION_17	IF_1
0x40007d0	            0x750d	                           jne 0x40007df	      1376	section.c	FUNCTION_17	IF_1
0x40007d2	              0x5b	                                 pop rbx	      1378	section.c	FUNCTION_17
0x40007d3	              0x5d	                                 pop rbp	      1378	section.c	FUNCTION_17
0x40007d4	            0x415c	                                 pop r12	      1378	section.c	FUNCTION_17
0x40007d6	            0x415d	                                 pop r13	      1378	section.c	FUNCTION_17
0x40007d8	            0x415e	                                 pop r14	      1378	section.c	FUNCTION_17
0x40007da	              0xc3	                                     ret	      1378	section.c	FUNCTION_17
0x40007db	            0x31ed	                            xor ebp, ebp	      1371	section.c	FUNCTION_17
0x40007dd	            0xebe9	                           jmp 0x40007c8	      1371	section.c	FUNCTION_17
0x40007df	      0xba00000000	                              mov edx, 0	      1377	section.c	FUNCTION_17	CALL_1
0x40007e4	      0xbe61050000	                          mov esi, 0x561	      1377	section.c	FUNCTION_17	CALL_1
0x40007e9	      0xbf00000000	                              mov edi, 0	      1377	section.c	FUNCTION_17	CALL_1
0x40007ee	      0xe800000000	                          call 0x40007f3	      1377	section.c	FUNCTION_17	CALL_1
bfd_get_section_by_name_if	WHILE,0:SWITCH,0:DO,0:ELSE,0:CALL,2:FOR,1:IF,2:functions,0	52
0x4000330	            0x4157	                                push r15	       999	section.c	FUNCTION_8
0x4000332	            0x4156	                                push r14	       999	section.c	FUNCTION_8
0x4000334	            0x4155	                                push r13	       999	section.c	FUNCTION_8
0x4000336	            0x4154	                                push r12	       999	section.c	FUNCTION_8
0x4000338	          0x4989d5	                            mov r13, rdx	       999	section.c	FUNCTION_8
0x400033b	              0x55	                                push rbp	       999	section.c	FUNCTION_8
0x400033c	              0x53	                                push rbx	       999	section.c	FUNCTION_8
0x400033d	            0x31d2	                            xor edx, edx	      1003	section.c	FUNCTION_8
0x400033f	          0x4989fc	                            mov r12, rdi	       999	section.c	FUNCTION_8
0x4000342	        0x4883c768	                           add rdi, 0x68	      1003	section.c	FUNCTION_8
0x4000346	          0x4889f5	                            mov rbp, rsi	       999	section.c	FUNCTION_8
0x4000349	        0x4883ec18	                           sub rsp, 0x18	       999	section.c	FUNCTION_8
0x400034d	      0x48894c2408	                mov qword [rsp + 8], rcx	       999	section.c	FUNCTION_8
0x4000352	            0x31c9	                            xor ecx, ecx	      1003	section.c	FUNCTION_8
0x4000354	      0xe800000000	                          call 0x4000359	      1003	section.c	FUNCTION_8
0x4000359	          0x4885c0	                           test rax, rax	      1004	section.c	FUNCTION_8	IF_1
0x400035c	            0x7462	                            je 0x40003c0	      1004	section.c	FUNCTION_8	IF_1
0x400035e	        0x4c8b7810	            mov r15, qword [rax + 0x10] 	      1007	section.c	FUNCTION_8
0x4000362	          0x4889c3	                            mov rbx, rax	      1007	section.c	FUNCTION_8
0x4000365	          0x4c89f8	                            mov rax, r15	      1007	section.c	FUNCTION_8
0x4000368	            0xeb12	                           jmp 0x400037c	      1007	section.c	FUNCTION_8
0x400036a	    0x660f1f440000	                    nop word [rax + rax]	      1007	section.c	FUNCTION_8
0x4000370	          0x488b1b	                    mov rbx, qword [rbx]	      1008	section.c	FUNCTION_8	FOR_1
0x4000373	          0x4885db	                           test rbx, rbx	      1008	section.c	FUNCTION_8	FOR_1
0x4000376	            0x7448	                            je 0x40003c0	      1008	section.c	FUNCTION_8	FOR_1
0x4000378	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1008	section.c	FUNCTION_8	FOR_1
0x400037c	          0x4c39f8	                            cmp rax, r15	      1009	section.c	FUNCTION_8	FOR_1	IF_2
0x400037f	            0x75ef	                           jne 0x4000370	      1009	section.c	FUNCTION_8	FOR_1	IF_2
0x4000381	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1010	section.c	FUNCTION_8	FOR_1	IF_2	CALL_2
0x4000385	          0x4889ee	                            mov rsi, rbp	      1010	section.c	FUNCTION_8	FOR_1	IF_2	CALL_2
0x4000388	      0xe800000000	                          call 0x400038d	      1010	section.c	FUNCTION_8	FOR_1	IF_2	CALL_2
0x400038d	            0x85c0	                           test eax, eax	      1010	section.c	FUNCTION_8	FOR_1	IF_2	CALL_2
0x400038f	            0x75df	                           jne 0x4000370	      1010	section.c	FUNCTION_8	FOR_1	IF_2	CALL_2
0x4000391	        0x4c8d7318	                   lea r14, [rbx + 0x18]	      1011	section.c	FUNCTION_8	FOR_1	IF_2
0x4000395	      0x488b542408	                mov rdx, qword [rsp + 8]	      1011	section.c	FUNCTION_8	FOR_1	IF_2
0x400039a	          0x4c89e7	                            mov rdi, r12	      1011	section.c	FUNCTION_8	FOR_1	IF_2
0x400039d	          0x4c89f6	                            mov rsi, r14	      1011	section.c	FUNCTION_8	FOR_1	IF_2
0x40003a0	          0x41ffd5	                                call r13	      1011	section.c	FUNCTION_8	FOR_1	IF_2
0x40003a3	            0x85c0	                           test eax, eax	      1011	section.c	FUNCTION_8	FOR_1	IF_2
0x40003a5	            0x74c9	                            je 0x4000370	      1011	section.c	FUNCTION_8	FOR_1	IF_2
0x40003a7	        0x4883c418	                           add rsp, 0x18	      1015	section.c	FUNCTION_8
0x40003ab	          0x4c89f0	                            mov rax, r14	      1015	section.c	FUNCTION_8
0x40003ae	              0x5b	                                 pop rbx	      1015	section.c	FUNCTION_8
0x40003af	              0x5d	                                 pop rbp	      1015	section.c	FUNCTION_8
0x40003b0	            0x415c	                                 pop r12	      1015	section.c	FUNCTION_8
0x40003b2	            0x415d	                                 pop r13	      1015	section.c	FUNCTION_8
0x40003b4	            0x415e	                                 pop r14	      1015	section.c	FUNCTION_8
0x40003b6	            0x415f	                                 pop r15	      1015	section.c	FUNCTION_8
0x40003b8	              0xc3	                                     ret	      1015	section.c	FUNCTION_8
0x40003b9	     0xf1f80000000	                         nop dword [rax]	      1015	section.c	FUNCTION_8
0x40003c0	          0x4531f6	                          xor r14d, r14d	      1005	section.c	FUNCTION_8	IF_1
0x40003c3	            0xebe2	                           jmp 0x40003a7	      1005	section.c	FUNCTION_8	IF_1
bfd_make_section_old_way	WHILE,0:SWITCH,0:DO,0:ELSE,4:CALL,7:FOR,0:IF,8:functions,0	75
0x40004b0	            0x4154	                                push r12	      1090	section.c	FUNCTION_10
0x40004b2	              0x55	                                push rbp	      1090	section.c	FUNCTION_10
0x40004b3	              0x53	                                push rbx	      1090	section.c	FUNCTION_10
0x40004b4	        0xf6474740	           test byte [rdi + 0x47], 0x40 	      1093	section.c	FUNCTION_10	IF_1
0x40004b8	     0xf85f2000000	                           jne 0x40005b0	      1093	section.c	FUNCTION_10	IF_1
0x40004be	          0x4889fd	                            mov rbp, rdi	      1093	section.c	FUNCTION_10	IF_1
0x40004c1	      0xb906000000	                              mov ecx, 6	      1099	section.c	FUNCTION_10	IF_2	CALL_2
0x40004c6	      0xbf00000000	                              mov edi, 0	      1099	section.c	FUNCTION_10	IF_2	CALL_2
0x40004cb	          0x4989f4	                            mov r12, rsi	      1099	section.c	FUNCTION_10	IF_2	CALL_2
0x40004ce	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1099	section.c	FUNCTION_10	IF_2	CALL_2
0x40004d0	            0x745e	                            je 0x4000530	      1099	section.c	FUNCTION_10	IF_2	CALL_2
0x40004d2	      0xbf00000000	                              mov edi, 0	      1101	section.c	FUNCTION_10	ELSE_1	IF_3	CALL_3
0x40004d7	      0xb906000000	                              mov ecx, 6	      1101	section.c	FUNCTION_10	ELSE_1	IF_3	CALL_3
0x40004dc	          0x4c89e6	                            mov rsi, r12	      1101	section.c	FUNCTION_10	ELSE_1	IF_3	CALL_3
0x40004df	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1101	section.c	FUNCTION_10	ELSE_1	IF_3	CALL_3
0x40004e1	            0x752d	                           jne 0x4000510	      1101	section.c	FUNCTION_10	ELSE_1	IF_3	CALL_3
0x40004e3	      0xbb00000000	                              mov ebx, 0	      1102	section.c	FUNCTION_10	ELSE_1	IF_3
0x40004e8	        0x488b4508	                mov rax, qword [rbp + 8]	      1129	section.c	FUNCTION_10	IF_8	CALL_7
0x40004ec	          0x4889de	                            mov rsi, rbx	      1129	section.c	FUNCTION_10	IF_8	CALL_7
0x40004ef	          0x4889ef	                            mov rdi, rbp	      1129	section.c	FUNCTION_10	IF_8	CALL_7
0x40004f2	    0xff9020010000	                call qword [rax + 0x120]	      1129	section.c	FUNCTION_10	IF_8	CALL_7
0x40004f8	            0x85c0	                           test eax, eax	      1129	section.c	FUNCTION_10	IF_8	CALL_7
0x40004fa	     0xf84a0000000	                            je 0x40005a0	      1129	section.c	FUNCTION_10	IF_8	CALL_7
0x4000500	          0x4889d8	                            mov rax, rbx	      1131	section.c	FUNCTION_10
0x4000503	              0x5b	                                 pop rbx	      1132	section.c	FUNCTION_10
0x4000504	              0x5d	                                 pop rbp	      1132	section.c	FUNCTION_10
0x4000505	            0x415c	                                 pop r12	      1132	section.c	FUNCTION_10
0x4000507	              0xc3	                                     ret	      1132	section.c	FUNCTION_10
0x4000508	     0xf1f84000000	                   nop dword [rax + rax]	      1132	section.c	FUNCTION_10
0x4000510	      0xbf00000000	                              mov edi, 0	      1103	section.c	FUNCTION_10	ELSE_2	IF_4	CALL_4
0x4000515	      0xb906000000	                              mov ecx, 6	      1103	section.c	FUNCTION_10	ELSE_2	IF_4	CALL_4
0x400051a	          0x4c89e6	                            mov rsi, r12	      1103	section.c	FUNCTION_10	ELSE_2	IF_4	CALL_4
0x400051d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1103	section.c	FUNCTION_10	ELSE_2	IF_4	CALL_4
0x400051f	            0x751f	                           jne 0x4000540	      1103	section.c	FUNCTION_10	ELSE_2	IF_4	CALL_4
0x4000521	      0xbb00000000	                              mov ebx, 0	      1104	section.c	FUNCTION_10	ELSE_2	IF_4
0x4000526	            0xebc0	                           jmp 0x40004e8	      1104	section.c	FUNCTION_10	ELSE_2	IF_4
0x4000528	     0xf1f84000000	                   nop dword [rax + rax]	      1104	section.c	FUNCTION_10	ELSE_2	IF_4
0x4000530	      0xbb00000000	                              mov ebx, 0	      1100	section.c	FUNCTION_10	IF_2
0x4000535	            0xebb1	                           jmp 0x40004e8	      1100	section.c	FUNCTION_10	IF_2
0x4000537	    0x660f1f840000	                    nop word [rax + rax]	      1100	section.c	FUNCTION_10	IF_2
0x4000540	      0xbf00000000	                              mov edi, 0	      1105	section.c	FUNCTION_10	ELSE_3	IF_5	CALL_5
0x4000545	      0xb906000000	                              mov ecx, 6	      1105	section.c	FUNCTION_10	ELSE_3	IF_5	CALL_5
0x400054a	          0x4c89e6	                            mov rsi, r12	      1105	section.c	FUNCTION_10	ELSE_3	IF_5	CALL_5
0x400054d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1105	section.c	FUNCTION_10	ELSE_3	IF_5	CALL_5
0x400054f	      0xbb00000000	                              mov ebx, 0	      1106	section.c	FUNCTION_10	ELSE_3	IF_5
0x4000554	           0xf97c2	                                 seta dl	      1105	section.c	FUNCTION_10	ELSE_3	IF_5	CALL_5
0x4000557	           0xf92c0	                                 setb al	      1105	section.c	FUNCTION_10	ELSE_3	IF_5	CALL_5
0x400055a	            0x38c2	                              cmp dl, al	      1105	section.c	FUNCTION_10	ELSE_3	IF_5	CALL_5
0x400055c	            0x748a	                            je 0x40004e8	      1105	section.c	FUNCTION_10	ELSE_3	IF_5	CALL_5
0x400055e	        0x488d7d68	                   lea rdi, [rbp + 0x68]	      1111	section.c	FUNCTION_10	ELSE_4
0x4000562	            0x31c9	                            xor ecx, ecx	      1111	section.c	FUNCTION_10	ELSE_4
0x4000564	      0xba01000000	                              mov edx, 1	      1111	section.c	FUNCTION_10	ELSE_4
0x4000569	          0x4c89e6	                            mov rsi, r12	      1111	section.c	FUNCTION_10	ELSE_4
0x400056c	      0xe800000000	                          call 0x4000571	      1111	section.c	FUNCTION_10	ELSE_4
0x4000571	          0x4885c0	                           test rax, rax	      1112	section.c	FUNCTION_10	ELSE_4	IF_6
0x4000574	          0x4889c2	                            mov rdx, rax	      1111	section.c	FUNCTION_10	ELSE_4
0x4000577	            0x7427	                            je 0x40005a0	      1112	section.c	FUNCTION_10	ELSE_4	IF_6
0x4000579	      0x48837a1800	               cmp qword [rdx + 0x18], 0	      1116	section.c	FUNCTION_10	ELSE_4	IF_7
0x400057e	        0x488d7018	                   lea rsi, [rax + 0x18]	      1115	section.c	FUNCTION_10	ELSE_4
0x4000582	          0x4889f0	                            mov rax, rsi	      1119	section.c	FUNCTION_10	ELSE_4	IF_7
0x4000585	     0xf8578ffffff	                           jne 0x4000503	      1116	section.c	FUNCTION_10	ELSE_4	IF_7
0x400058b	        0x4c896218	             mov qword [rdx + 0x18], r12	      1122	section.c	FUNCTION_10	ELSE_4
0x400058f	          0x4889ef	                            mov rdi, rbp	      1123	section.c	FUNCTION_10	ELSE_4	CALL_6
0x4000592	              0x5b	                                 pop rbx	      1132	section.c	FUNCTION_10
0x4000593	              0x5d	                                 pop rbp	      1132	section.c	FUNCTION_10
0x4000594	            0x415c	                                 pop r12	      1132	section.c	FUNCTION_10
0x4000596	      0xe9a5faffff	                jmp sym.bfd_section_init	      1123	section.c	FUNCTION_10	ELSE_4	CALL_6
0x400059b	       0xf1f440000	                   nop dword [rax + rax]	      1123	section.c	FUNCTION_10	ELSE_4	CALL_6
0x40005a0	            0x31c0	                            xor eax, eax	      1113	section.c	FUNCTION_10	ELSE_4	IF_6
0x40005a2	      0xe95cffffff	                           jmp 0x4000503	      1113	section.c	FUNCTION_10	ELSE_4	IF_6
0x40005a7	    0x660f1f840000	                    nop word [rax + rax]	      1113	section.c	FUNCTION_10	ELSE_4	IF_6
0x40005b0	      0xbf05000000	                              mov edi, 5	      1095	section.c	FUNCTION_10	IF_1	CALL_1
0x40005b5	      0xe800000000	                          call 0x40005ba	      1095	section.c	FUNCTION_10	IF_1	CALL_1
0x40005ba	            0x31c0	                            xor eax, eax	      1096	section.c	FUNCTION_10	IF_1
0x40005bc	      0xe942ffffff	                           jmp 0x4000503	      1096	section.c	FUNCTION_10	IF_1
_bfd_generic_new_section_hook	WHILE,0:SWITCH,0:DO,0:ELSE,0:CALL,1:FOR,0:IF,1:functions,0	21
0x4000160	        0x488b4708	                mov rax, qword [rdi + 8]	       810	section.c	FUNCTION_2	CALL_1
0x4000164	              0x53	                                push rbx	       809	section.c	FUNCTION_2
0x4000165	          0x4889f3	                            mov rbx, rsi	       809	section.c	FUNCTION_2
0x4000168	    0xff9000020000	                call qword [rax + 0x200]	       810	section.c	FUNCTION_2	CALL_1
0x400016e	          0x4885c0	                           test rax, rax	       811	section.c	FUNCTION_2	IF_1
0x4000171	    0x488983f80000	             mov qword [rbx + 0xf8], rax	       810	section.c	FUNCTION_2	CALL_1
0x4000178	            0x7436	                            je 0x40001b0	       811	section.c	FUNCTION_2	IF_1
0x400017a	          0x488b13	                    mov rdx, qword [rbx]	       814	section.c	FUNCTION_2
0x400017d	    0x48c740100000	               mov qword [rax + 0x10], 0	       815	section.c	FUNCTION_2
0x4000185	        0x48895820	             mov qword [rax + 0x20], rbx	       816	section.c	FUNCTION_2
0x4000189	    0xc74018000100	          mov dword [rax + 0x18], 0x100 	       817	section.c	FUNCTION_2
0x4000190	        0x48895008	                mov qword [rax + 8], rdx	       814	section.c	FUNCTION_2
0x4000194	    0x488d83f80000	                   lea rax, [rbx + 0xf8]	       819	section.c	FUNCTION_2
0x400019b	    0x488983000100	            mov qword [rbx + 0x100], rax	       819	section.c	FUNCTION_2
0x40001a2	      0xb801000000	                              mov eax, 1	       820	section.c	FUNCTION_2
0x40001a7	              0x5b	                                 pop rbx	       821	section.c	FUNCTION_2
0x40001a8	              0xc3	                                     ret	       821	section.c	FUNCTION_2
0x40001a9	     0xf1f80000000	                         nop dword [rax]	       821	section.c	FUNCTION_2
0x40001b0	            0x31c0	                            xor eax, eax	       812	section.c	FUNCTION_2	IF_1
0x40001b2	              0x5b	                                 pop rbx	       821	section.c	FUNCTION_2
0x40001b3	              0xc3	                                     ret	       821	section.c	FUNCTION_2
bfd_generic_discard_group	WHILE,0:SWITCH,0:DO,0:ELSE,0:CALL,0:FOR,0:IF,0:functions,0	2
0x4000a80	      0xb801000000	                              mov eax, 1	      1677	section.c	FUNCTION_24
0x4000a85	              0xc3	                                     ret	      1677	section.c	FUNCTION_24
bfd_rename_section	WHILE,0:SWITCH,0:DO,0:ELSE,0:CALL,1:FOR,0:IF,0:functions,0	6
0x4000770	          0x4889d0	                            mov rax, rdx	      1330	section.c	FUNCTION_16
0x4000773	          0x488916	                    mov qword [rsi], rdx	      1335	section.c	FUNCTION_16
0x4000776	        0x488d56e8	                   lea rdx, [rsi - 0x18]	      1336	section.c	FUNCTION_16	CALL_1
0x400077a	        0x4883c768	                           add rdi, 0x68	      1336	section.c	FUNCTION_16	CALL_1
0x400077e	          0x4889c6	                            mov rsi, rax	      1336	section.c	FUNCTION_16	CALL_1
0x4000781	      0xe900000000	                           jmp 0x4000786	      1336	section.c	FUNCTION_16	CALL_1
bfd_make_section_anyway_with_flags	WHILE,0:SWITCH,0:DO,0:ELSE,0:CALL,3:FOR,0:IF,4:functions,0	54
0x40005d0	            0x4156	                                push r14	      1156	section.c	FUNCTION_11
0x40005d2	            0x4155	                                push r13	      1156	section.c	FUNCTION_11
0x40005d4	            0x4154	                                push r12	      1156	section.c	FUNCTION_11
0x40005d6	              0x55	                                push rbp	      1156	section.c	FUNCTION_11
0x40005d7	              0x53	                                push rbx	      1156	section.c	FUNCTION_11
0x40005d8	        0xf6474740	           test byte [rdi + 0x47], 0x40 	      1160	section.c	FUNCTION_11	IF_1
0x40005dc	            0x757a	                           jne 0x4000658	      1160	section.c	FUNCTION_11	IF_1
0x40005de	        0x4c8d7768	                   lea r14, [rdi + 0x68]	      1166	section.c	FUNCTION_11
0x40005e2	            0x31c9	                            xor ecx, ecx	      1166	section.c	FUNCTION_11
0x40005e4	          0x4889fd	                            mov rbp, rdi	      1166	section.c	FUNCTION_11
0x40005e7	          0x4189d5	                           mov r13d, edx	      1166	section.c	FUNCTION_11
0x40005ea	      0xba01000000	                              mov edx, 1	      1166	section.c	FUNCTION_11
0x40005ef	          0x4989f4	                            mov r12, rsi	      1166	section.c	FUNCTION_11
0x40005f2	          0x4c89f7	                            mov rdi, r14	      1166	section.c	FUNCTION_11
0x40005f5	      0xe800000000	                          call 0x40005fa	      1166	section.c	FUNCTION_11
0x40005fa	          0x4885c0	                           test rax, rax	      1167	section.c	FUNCTION_11	IF_2
0x40005fd	          0x4889c3	                            mov rbx, rax	      1166	section.c	FUNCTION_11
0x4000600	            0x7460	                            je 0x4000662	      1167	section.c	FUNCTION_11	IF_2
0x4000602	      0x4883781800	               cmp qword [rax + 0x18], 0	      1171	section.c	FUNCTION_11	IF_3
0x4000607	        0x488d7018	                   lea rsi, [rax + 0x18]	      1170	section.c	FUNCTION_11
0x400060b	            0x742f	                            je 0x400063c	      1171	section.c	FUNCTION_11	IF_3
0x400060d	            0x31ff	                            xor edi, edi	      1178	section.c	FUNCTION_11	IF_3
0x400060f	          0x4c89e2	                            mov rdx, r12	      1178	section.c	FUNCTION_11	IF_3
0x4000612	          0x4c89f6	                            mov rsi, r14	      1178	section.c	FUNCTION_11	IF_3
0x4000615	      0xe800000000	                          call 0x400061a	      1178	section.c	FUNCTION_11	IF_3
0x400061a	          0x4885c0	                           test rax, rax	      1180	section.c	FUNCTION_11	IF_3	IF_4
0x400061d	            0x7443	                            je 0x4000662	      1180	section.c	FUNCTION_11	IF_3	IF_4
0x400061f	          0x488b13	                    mov rdx, qword [rbx]	      1183	section.c	FUNCTION_11	IF_3
0x4000622	        0x488d7018	                   lea rsi, [rax + 0x18]	      1185	section.c	FUNCTION_11	IF_3
0x4000626	          0x488910	                    mov qword [rax], rdx	      1183	section.c	FUNCTION_11	IF_3
0x4000629	        0x488b5308	                mov rdx, qword [rbx + 8]	      1183	section.c	FUNCTION_11	IF_3
0x400062d	        0x48895008	                mov qword [rax + 8], rdx	      1183	section.c	FUNCTION_11	IF_3
0x4000631	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1183	section.c	FUNCTION_11	IF_3
0x4000635	        0x48895010	             mov qword [rax + 0x10], rdx	      1183	section.c	FUNCTION_11	IF_3
0x4000639	          0x488903	                    mov qword [rbx], rax	      1184	section.c	FUNCTION_11	IF_3
0x400063c	        0x44896e20	            mov dword [rsi + 0x20], r13d	      1188	section.c	FUNCTION_11
0x4000640	          0x4c8926	                    mov qword [rsi], r12	      1189	section.c	FUNCTION_11
0x4000643	          0x4889ef	                            mov rdi, rbp	      1190	section.c	FUNCTION_11	CALL_3
0x4000646	              0x5b	                                 pop rbx	      1191	section.c	FUNCTION_11
0x4000647	              0x5d	                                 pop rbp	      1191	section.c	FUNCTION_11
0x4000648	            0x415c	                                 pop r12	      1191	section.c	FUNCTION_11
0x400064a	            0x415d	                                 pop r13	      1191	section.c	FUNCTION_11
0x400064c	            0x415e	                                 pop r14	      1191	section.c	FUNCTION_11
0x400064e	      0xe9edf9ffff	                jmp sym.bfd_section_init	      1190	section.c	FUNCTION_11	CALL_3
0x4000653	       0xf1f440000	                   nop dword [rax + rax]	      1190	section.c	FUNCTION_11	CALL_3
0x4000658	      0xbf05000000	                              mov edi, 5	      1162	section.c	FUNCTION_11	IF_1	CALL_1
0x400065d	      0xe800000000	                          call 0x4000662	      1162	section.c	FUNCTION_11	IF_1	CALL_1
0x4000662	              0x5b	                                 pop rbx	      1191	section.c	FUNCTION_11
0x4000663	            0x31c0	                            xor eax, eax	      1191	section.c	FUNCTION_11
0x4000665	              0x5d	                                 pop rbp	      1191	section.c	FUNCTION_11
0x4000666	            0x415c	                                 pop r12	      1191	section.c	FUNCTION_11
0x4000668	            0x415d	                                 pop r13	      1191	section.c	FUNCTION_11
0x400066a	            0x415e	                                 pop r14	      1191	section.c	FUNCTION_11
0x400066c	              0xc3	                                     ret	      1191	section.c	FUNCTION_11
bfd_get_section_contents	WHILE,0:SWITCH,0:DO,0:ELSE,1:CALL,6:FOR,0:IF,7:functions,0	69
0x4000970	        0x4883ec08	                              sub rsp, 8	      1550	section.c	FUNCTION_21
0x4000974	          0x4989d1	                             mov r9, rdx	      1550	section.c	FUNCTION_21
0x4000977	          0x8b5620	            mov edx, dword [rsi + 0x20] 	      1553	section.c	FUNCTION_21	IF_1
0x400097a	          0xf6c280	                           test dl, 0x80	      1553	section.c	FUNCTION_21	IF_1
0x400097d	     0xf8585000000	                           jne 0x4000a08	      1553	section.c	FUNCTION_21	IF_1
0x4000983	         0xfb64744	           movzx eax, byte [rdi + 0x44] 	      1559	section.c	FUNCTION_21	IF_2
0x4000987	          0x83e018	                           and eax, 0x18	      1559	section.c	FUNCTION_21	IF_2
0x400098a	            0x3c10	                            cmp al, 0x10	      1559	section.c	FUNCTION_21	IF_2
0x400098c	            0x745a	                            je 0x40009e8	      1559	section.c	FUNCTION_21	IF_2
0x400098e	        0x488b4640	            mov rax, qword [rsi + 0x40] 	      1559	section.c	FUNCTION_21	IF_2
0x4000992	          0x4885c0	                           test rax, rax	      1559	section.c	FUNCTION_21	IF_2
0x4000995	            0x7451	                            je 0x40009e8	      1559	section.c	FUNCTION_21	IF_2
0x4000997	          0x4839c8	                            cmp rax, rcx	      1563	section.c	FUNCTION_21	ELSE_1	IF_3
0x400099a	            0x7254	                            jb 0x40009f0	      1563	section.c	FUNCTION_21	ELSE_1	IF_3
0x400099c	          0x4c39c0	                             cmp rax, r8	      1563	section.c	FUNCTION_21	ELSE_1	IF_3
0x400099f	            0x724f	                            jb 0x40009f0	      1563	section.c	FUNCTION_21	ELSE_1	IF_3
0x40009a1	        0x4d8d1408	                     lea r10, [r8 + rcx]	      1566	section.c	FUNCTION_21	ELSE_1	IF_3
0x40009a5	          0x4c39d0	                            cmp rax, r10	      1566	section.c	FUNCTION_21	ELSE_1	IF_3
0x40009a8	            0x7246	                            jb 0x40009f0	      1566	section.c	FUNCTION_21	ELSE_1	IF_3
0x40009aa	          0x4d85c0	                             test r8, r8	      1572	section.c	FUNCTION_21	IF_4
0x40009ad	            0x7471	                            je 0x4000a20	      1572	section.c	FUNCTION_21	IF_4
0x40009af	          0xf6c601	                              test dh, 1	      1576	section.c	FUNCTION_21	IF_5
0x40009b2	            0x7454	                            je 0x4000a08	      1576	section.c	FUNCTION_21	IF_5
0x40009b4	          0xf6c640	                           test dh, 0x40	      1582	section.c	FUNCTION_21	IF_6
0x40009b7	            0x7477	                            je 0x4000a30	      1582	section.c	FUNCTION_21	IF_6
0x40009b9	    0x488b86b00000	            mov rax, qword [rsi + 0xb0] 	      1584	section.c	FUNCTION_21	IF_6	IF_7
0x40009c0	          0x4885c0	                           test rax, rax	      1584	section.c	FUNCTION_21	IF_6	IF_7
0x40009c3	     0xf847f000000	                            je 0x4000a48	      1584	section.c	FUNCTION_21	IF_6	IF_7
0x40009c9	        0x488d3408	                    lea rsi, [rax + rcx]	        59	string3.h	FUNCTION_27	CALL_3
0x40009cd	          0x4c89c2	                             mov rdx, r8	        59	string3.h	FUNCTION_27	CALL_3
0x40009d0	          0x4c89cf	                             mov rdi, r9	        59	string3.h	FUNCTION_27	CALL_3
0x40009d3	      0xe800000000	                          call 0x40009d8	        59	string3.h	FUNCTION_27	CALL_3
0x40009d8	      0xb801000000	                              mov eax, 1	      1595	section.c	FUNCTION_21	IF_6
0x40009dd	        0x4883c408	                              add rsp, 8	      1600	section.c	FUNCTION_21
0x40009e1	              0xc3	                                     ret	      1600	section.c	FUNCTION_21
0x40009e2	    0x660f1f440000	                    nop word [rax + rax]	      1600	section.c	FUNCTION_21
0x40009e8	        0x488b4638	            mov rax, qword [rsi + 0x38] 	      1562	section.c	FUNCTION_21	ELSE_1
0x40009ec	            0xeba9	                           jmp 0x4000997	      1562	section.c	FUNCTION_21	ELSE_1
0x40009ee	            0x6690	                                     nop	      1562	section.c	FUNCTION_21	ELSE_1
0x40009f0	      0xbf11000000	                           mov edi, 0x11	      1568	section.c	FUNCTION_21	ELSE_1	IF_3	CALL_2
0x40009f5	      0xe800000000	                          call 0x40009fa	      1568	section.c	FUNCTION_21	ELSE_1	IF_3	CALL_2
0x40009fa	            0x31c0	                            xor eax, eax	      1569	section.c	FUNCTION_21	ELSE_1	IF_3
0x40009fc	        0x4883c408	                              add rsp, 8	      1600	section.c	FUNCTION_21
0x4000a00	              0xc3	                                     ret	      1600	section.c	FUNCTION_21
0x4000a01	     0xf1f80000000	                         nop dword [rax]	      1600	section.c	FUNCTION_21
0x4000a08	          0x4c89c2	                             mov rdx, r8	        90	string3.h	FUNCTION_29	CALL_6
0x4000a0b	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_29	CALL_6
0x4000a0d	          0x4c89cf	                             mov rdi, r9	        90	string3.h	FUNCTION_29	CALL_6
0x4000a10	      0xe800000000	                          call 0x4000a15	        90	string3.h	FUNCTION_29	CALL_6
0x4000a15	      0xb801000000	                              mov eax, 1	      1556	section.c	FUNCTION_21	IF_1
0x4000a1a	        0x4883c408	                              add rsp, 8	      1600	section.c	FUNCTION_21
0x4000a1e	              0xc3	                                     ret	      1600	section.c	FUNCTION_21
0x4000a1f	              0x90	                                     nop	      1600	section.c	FUNCTION_21
0x4000a20	      0xb801000000	                              mov eax, 1	      1574	section.c	FUNCTION_21	IF_4
0x4000a25	        0x4883c408	                              add rsp, 8	      1600	section.c	FUNCTION_21
0x4000a29	              0xc3	                                     ret	      1600	section.c	FUNCTION_21
0x4000a2a	    0x660f1f440000	                    nop word [rax + rax]	      1600	section.c	FUNCTION_21
0x4000a30	        0x488b4708	                mov rax, qword [rdi + 8]	      1598	section.c	FUNCTION_21	CALL_6
0x4000a34	          0x4c89ca	                             mov rdx, r9	      1598	section.c	FUNCTION_21	CALL_6
0x4000a37	    0x488b80280100	           mov rax, qword [rax + 0x128] 	      1598	section.c	FUNCTION_21	CALL_6
0x4000a3e	        0x4883c408	                              add rsp, 8	      1600	section.c	FUNCTION_21
0x4000a42	            0xffe0	                                 jmp rax	      1598	section.c	FUNCTION_21	CALL_6
0x4000a44	         0xf1f4000	                         nop dword [rax]	      1598	section.c	FUNCTION_21	CALL_6
0x4000a48	          0x80e6bf	                            and dh, 0xbf	      1589	section.c	FUNCTION_21	IF_6	IF_7
0x4000a4b	      0xbf05000000	                              mov edi, 5	      1590	section.c	FUNCTION_21	IF_6	IF_7	CALL_4
0x4000a50	          0x895620	             mov dword [rsi + 0x20], edx	      1589	section.c	FUNCTION_21	IF_6	IF_7
0x4000a53	      0xe800000000	                          call 0x4000a58	      1590	section.c	FUNCTION_21	IF_6	IF_7	CALL_4
0x4000a58	            0x31c0	                            xor eax, eax	      1591	section.c	FUNCTION_21	IF_6	IF_7
0x4000a5a	            0xeba0	                           jmp 0x40009fc	      1591	section.c	FUNCTION_21	IF_6	IF_7
bfd_get_unique_section_name	WHILE,0:SWITCH,0:DO,1:ELSE,0:CALL,4:FOR,0:IF,4:functions,0	67
0x40003d0	            0x4156	                                push r14	      1035	section.c	FUNCTION_9
0x40003d2	            0x4155	                                push r13	      1035	section.c	FUNCTION_9
0x40003d4	          0x4989fd	                            mov r13, rdi	      1035	section.c	FUNCTION_9
0x40003d7	            0x4154	                                push r12	      1035	section.c	FUNCTION_9
0x40003d9	              0x55	                                push rbp	      1035	section.c	FUNCTION_9
0x40003da	          0x4889f7	                            mov rdi, rsi	      1040	section.c	FUNCTION_9	CALL_1
0x40003dd	              0x53	                                push rbx	      1035	section.c	FUNCTION_9
0x40003de	          0x4989d6	                            mov r14, rdx	      1035	section.c	FUNCTION_9
0x40003e1	          0x4889f3	                            mov rbx, rsi	      1035	section.c	FUNCTION_9
0x40003e4	      0xe800000000	                          call 0x40003e9	      1040	section.c	FUNCTION_9	CALL_1
0x40003e9	          0x8d7808	                      lea edi, [rax + 8]	      1041	section.c	FUNCTION_9	CALL_2
0x40003ec	          0x4989c4	                            mov r12, rax	      1040	section.c	FUNCTION_9	CALL_1
0x40003ef	      0xe800000000	                          call 0x40003f4	      1041	section.c	FUNCTION_9	CALL_2
0x40003f4	          0x4885c0	                           test rax, rax	      1042	section.c	FUNCTION_9	IF_1
0x40003f7	     0xf8492000000	                            je 0x400048f	      1042	section.c	FUNCTION_9	IF_1
0x40003fd	          0x4589e4	                          mov r12d, r12d	      1042	section.c	FUNCTION_9	IF_1
0x4000400	          0x4889de	                            mov rsi, rbx	        53	string3.h	FUNCTION_26	CALL_3
0x4000403	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_26	CALL_3
0x4000406	          0x4c89e2	                            mov rdx, r12	        53	string3.h	FUNCTION_26	CALL_3
0x4000409	          0x4889c5	                            mov rbp, rax	        53	string3.h	FUNCTION_26	CALL_3
0x400040c	      0xe800000000	                          call 0x4000411	        53	string3.h	FUNCTION_26	CALL_3
0x4000411	          0x4d85f6	                           test r14, r14	      1046	section.c	FUNCTION_9	IF_2
0x4000414	            0x746c	                            je 0x4000482	      1046	section.c	FUNCTION_9	IF_2
0x4000416	          0x458b06	                    mov r8d, dword [r14]	      1047	section.c	FUNCTION_9	IF_2
0x4000419	    0x4181f83f420f	                        cmp r8d, 0xf423f	      1052	section.c	FUNCTION_9	DO_1	IF_3
0x4000420	            0x7f71	                            jg 0x4000493	      1052	section.c	FUNCTION_9	DO_1	IF_3
0x4000422	          0x4901ec	                            add r12, rbp	      1052	section.c	FUNCTION_9	DO_1	IF_3
0x4000425	        0x4983c568	                           add r13, 0x68	      1052	section.c	FUNCTION_9	DO_1	IF_3
0x4000429	            0xeb10	                           jmp 0x400043b	      1052	section.c	FUNCTION_9	DO_1	IF_3
0x400042b	       0xf1f440000	                   nop dword [rax + rax]	      1052	section.c	FUNCTION_9	DO_1	IF_3
0x4000430	    0x81fb40420f00	                        cmp ebx, 0xf4240	      1052	section.c	FUNCTION_9	DO_1	IF_3
0x4000436	          0x4189d8	                            mov r8d, ebx	      1052	section.c	FUNCTION_9	DO_1	IF_3
0x4000439	            0x7458	                            je 0x4000493	      1052	section.c	FUNCTION_9	DO_1	IF_3
0x400043b	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_38	CALL_1
0x4000440	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_38	CALL_1
0x4000447	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_38	CALL_1
0x400044c	          0x4c89e7	                            mov rdi, r12	        33	stdio2.h	FUNCTION_38	CALL_1
0x400044f	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_38	CALL_1
0x4000451	        0x418d5801	                       lea ebx, [r8 + 1]	      1054	section.c	FUNCTION_9	DO_1
0x4000455	      0xe800000000	                          call 0x400045a	        33	stdio2.h	FUNCTION_38	CALL_1
0x400045a	            0x31c9	                            xor ecx, ecx	      1056	section.c	FUNCTION_9
0x400045c	            0x31d2	                            xor edx, edx	      1056	section.c	FUNCTION_9
0x400045e	          0x4889ee	                            mov rsi, rbp	      1056	section.c	FUNCTION_9
0x4000461	          0x4c89ef	                            mov rdi, r13	      1056	section.c	FUNCTION_9
0x4000464	      0xe800000000	                          call 0x4000469	      1056	section.c	FUNCTION_9
0x4000469	          0x4885c0	                           test rax, rax	      1056	section.c	FUNCTION_9
0x400046c	            0x75c2	                           jne 0x4000430	      1056	section.c	FUNCTION_9
0x400046e	          0x4d85f6	                           test r14, r14	      1058	section.c	FUNCTION_9	IF_4
0x4000471	            0x7417	                            je 0x400048a	      1058	section.c	FUNCTION_9	IF_4
0x4000473	          0x41891e	                    mov dword [r14], ebx	      1059	section.c	FUNCTION_9	IF_4
0x4000476	          0x4889e8	                            mov rax, rbp	      1059	section.c	FUNCTION_9	IF_4
0x4000479	              0x5b	                                 pop rbx	      1061	section.c	FUNCTION_9
0x400047a	              0x5d	                                 pop rbp	      1061	section.c	FUNCTION_9
0x400047b	            0x415c	                                 pop r12	      1061	section.c	FUNCTION_9
0x400047d	            0x415d	                                 pop r13	      1061	section.c	FUNCTION_9
0x400047f	            0x415e	                                 pop r14	      1061	section.c	FUNCTION_9
0x4000481	              0xc3	                                     ret	      1061	section.c	FUNCTION_9
0x4000482	    0x41b801000000	                              mov r8d, 1	      1045	section.c	FUNCTION_9
0x4000488	            0xeb98	                           jmp 0x4000422	      1045	section.c	FUNCTION_9
0x400048a	          0x4889e8	                            mov rax, rbp	      1045	section.c	FUNCTION_9
0x400048d	            0xebea	                           jmp 0x4000479	      1045	section.c	FUNCTION_9
0x400048f	            0x31c0	                            xor eax, eax	      1043	section.c	FUNCTION_9	IF_1
0x4000491	            0xebe6	                           jmp 0x4000479	      1043	section.c	FUNCTION_9	IF_1
0x4000493	      0xba00000000	                              mov edx, 0	      1053	section.c	FUNCTION_9	DO_1	CALL_4
0x4000498	      0xbe1d040000	                          mov esi, 0x41d	      1053	section.c	FUNCTION_9	DO_1	CALL_4
0x400049d	      0xbf00000000	                              mov edi, 0	      1053	section.c	FUNCTION_9	DO_1	CALL_4
0x40004a2	      0xe800000000	                          call 0x40004a7	      1053	section.c	FUNCTION_9	DO_1	CALL_4
bfd_get_next_section_by_name	WHILE,1:SWITCH,0:DO,0:ELSE,0:CALL,2:FOR,1:IF,3:functions,0	58
0x4000240	            0x4155	                                push r13	       917	section.c	FUNCTION_6
0x4000242	            0x4154	                                push r12	       917	section.c	FUNCTION_6
0x4000244	              0x55	                                push rbp	       917	section.c	FUNCTION_6
0x4000245	              0x53	                                push rbx	       917	section.c	FUNCTION_6
0x4000246	          0x4889fd	                            mov rbp, rdi	       917	section.c	FUNCTION_6
0x4000249	        0x4883ec08	                              sub rsp, 8	       917	section.c	FUNCTION_6
0x400024d	        0x488b5ee8	             mov rbx, qword [rsi - 0x18]	       927	section.c	FUNCTION_6	FOR_1
0x4000251	        0x4c8b66f8	                mov r12, qword [rsi - 8]	       925	section.c	FUNCTION_6
0x4000255	          0x4c8b2e	                    mov r13, qword [rsi]	       926	section.c	FUNCTION_6
0x4000258	          0x4885db	                           test rbx, rbx	       927	section.c	FUNCTION_6	FOR_1
0x400025b	            0x750b	                           jne 0x4000268	       927	section.c	FUNCTION_6	FOR_1
0x400025d	            0xeb31	                           jmp 0x4000290	       927	section.c	FUNCTION_6	FOR_1
0x400025f	              0x90	                                     nop	       927	section.c	FUNCTION_6	FOR_1
0x4000260	          0x488b1b	                    mov rbx, qword [rbx]	       929	section.c	FUNCTION_6	FOR_1
0x4000263	          0x4885db	                           test rbx, rbx	       927	section.c	FUNCTION_6	FOR_1
0x4000266	            0x7428	                            je 0x4000290	       927	section.c	FUNCTION_6	FOR_1
0x4000268	        0x4c3b6310	            cmp r12, qword [rbx + 0x10] 	       930	section.c	FUNCTION_6	FOR_1	IF_1
0x400026c	            0x75f2	                           jne 0x4000260	       930	section.c	FUNCTION_6	FOR_1	IF_1
0x400026e	        0x488b7b08	                mov rdi, qword [rbx + 8]	       931	section.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x4000272	          0x4c89ee	                            mov rsi, r13	       931	section.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x4000275	      0xe800000000	                          call 0x400027a	       931	section.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x400027a	            0x85c0	                           test eax, eax	       931	section.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x400027c	            0x75e2	                           jne 0x4000260	       931	section.c	FUNCTION_6	FOR_1	IF_1	CALL_1
0x400027e	        0x4883c408	                              add rsp, 8	       945	section.c	FUNCTION_6
0x4000282	        0x488d4318	                   lea rax, [rbx + 0x18]	       932	section.c	FUNCTION_6	FOR_1	IF_1
0x4000286	              0x5b	                                 pop rbx	       945	section.c	FUNCTION_6
0x4000287	              0x5d	                                 pop rbp	       945	section.c	FUNCTION_6
0x4000288	            0x415c	                                 pop r12	       945	section.c	FUNCTION_6
0x400028a	            0x415d	                                 pop r13	       945	section.c	FUNCTION_6
0x400028c	              0xc3	                                     ret	       945	section.c	FUNCTION_6
0x400028d	           0xf1f00	                         nop dword [rax]	       945	section.c	FUNCTION_6
0x4000290	          0x4885ed	                           test rbp, rbp	       934	section.c	FUNCTION_6	IF_2
0x4000293	            0x7433	                            je 0x40002c8	       934	section.c	FUNCTION_6	IF_2
0x4000295	    0x488badf00000	            mov rbp, qword [rbp + 0xf0] 	       936	section.c	FUNCTION_6	IF_2	WHILE_1
0x400029c	          0x4885ed	                           test rbp, rbp	       936	section.c	FUNCTION_6	IF_2	WHILE_1
0x400029f	            0x7427	                            je 0x40002c8	       936	section.c	FUNCTION_6	IF_2	WHILE_1
0x40002a1	        0x488d7d68	                   lea rdi, [rbp + 0x68]	       893	section.c	FUNCTION_5
0x40002a5	            0x31c9	                            xor ecx, ecx	       893	section.c	FUNCTION_5
0x40002a7	            0x31d2	                            xor edx, edx	       893	section.c	FUNCTION_5
0x40002a9	          0x4c89ee	                            mov rsi, r13	       893	section.c	FUNCTION_5
0x40002ac	      0xe800000000	                          call 0x40002b1	       893	section.c	FUNCTION_5
0x40002b1	          0x4885c0	                           test rax, rax	       894	section.c	FUNCTION_5	IF_1
0x40002b4	            0x74df	                            je 0x4000295	       894	section.c	FUNCTION_5	IF_1
0x40002b6	        0x4883c408	                              add rsp, 8	       945	section.c	FUNCTION_6
0x40002ba	        0x4883c018	                           add rax, 0x18	       895	section.c	FUNCTION_5	IF_1
0x40002be	              0x5b	                                 pop rbx	       945	section.c	FUNCTION_6
0x40002bf	              0x5d	                                 pop rbp	       945	section.c	FUNCTION_6
0x40002c0	            0x415c	                                 pop r12	       945	section.c	FUNCTION_6
0x40002c2	            0x415d	                                 pop r13	       945	section.c	FUNCTION_6
0x40002c4	              0xc3	                                     ret	       945	section.c	FUNCTION_6
0x40002c5	           0xf1f00	                         nop dword [rax]	       945	section.c	FUNCTION_6
0x40002c8	        0x4883c408	                              add rsp, 8	       945	section.c	FUNCTION_6
0x40002cc	            0x31c0	                            xor eax, eax	       944	section.c	FUNCTION_6
0x40002ce	              0x5b	                                 pop rbx	       945	section.c	FUNCTION_6
0x40002cf	              0x5d	                                 pop rbp	       945	section.c	FUNCTION_6
0x40002d0	            0x415c	                                 pop r12	       945	section.c	FUNCTION_6
0x40002d2	            0x415d	                                 pop r13	       945	section.c	FUNCTION_6
0x40002d4	              0xc3	                                     ret	       945	section.c	FUNCTION_6
bfd_make_section	WHILE,0:SWITCH,0:DO,0:ELSE,0:CALL,1:FOR,0:IF,0:functions,0	2
0x4000750	            0x31d2	                            xor edx, edx	      1284	section.c	FUNCTION_14	CALL_1
0x4000752	      0xe929ffffff	     jmp sym.bfd_make_section_with_flags	      1284	section.c	FUNCTION_14	CALL_1
bfd_set_section_size	WHILE,0:SWITCH,0:DO,0:ELSE,0:CALL,1:FOR,0:IF,1:functions,0	11
0x4000860	        0xf6474740	           test byte [rdi + 0x47], 0x40 	      1439	section.c	FUNCTION_19	IF_1
0x4000864	            0x750a	                           jne 0x4000870	      1439	section.c	FUNCTION_19	IF_1
0x4000866	        0x48895638	             mov qword [rsi + 0x38], rdx	      1445	section.c	FUNCTION_19
0x400086a	      0xb801000000	                              mov eax, 1	      1446	section.c	FUNCTION_19
0x400086f	              0xc3	                                     ret	      1446	section.c	FUNCTION_19
0x4000870	        0x4883ec08	                              sub rsp, 8	      1435	section.c	FUNCTION_19
0x4000874	      0xbf05000000	                              mov edi, 5	      1441	section.c	FUNCTION_19	IF_1	CALL_1
0x4000879	      0xe800000000	                          call 0x400087e	      1441	section.c	FUNCTION_19	IF_1	CALL_1
0x400087e	            0x31c0	                            xor eax, eax	      1442	section.c	FUNCTION_19	IF_1
0x4000880	        0x4883c408	                              add rsp, 8	      1447	section.c	FUNCTION_19
0x4000884	              0xc3	                                     ret	      1447	section.c	FUNCTION_19
bfd_generic_is_group_section	WHILE,0:SWITCH,0:DO,0:ELSE,0:CALL,0:FOR,0:IF,0:functions,0	2
0x4000a70	            0x31c0	                            xor eax, eax	      1659	section.c	FUNCTION_23
0x4000a72	              0xc3	                                     ret	      1659	section.c	FUNCTION_23
