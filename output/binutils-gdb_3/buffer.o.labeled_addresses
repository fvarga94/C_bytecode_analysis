buffer_init	WHILE,0:DO,0:ELSE,0:CALL,1:FOR,0:functions,0:SWITCH,0:IF,0	4
0x4000100	    0x48c707000000	                      mov qword [rdi], 0	        90	string3.h	FUNCTION_4	CALL_6
0x4000107	    0x48c747080000	                  mov qword [rdi + 8], 0	        90	string3.h	FUNCTION_4	CALL_6
0x400010f	    0x48c747100000	               mov qword [rdi + 0x10], 0	        90	string3.h	FUNCTION_4	CALL_6
0x4000117	              0xc3	                                     ret	        90	string3.h	FUNCTION_4	CALL_6
buffer_xml_printf	WHILE,0:DO,0:ELSE,1:CALL,20:FOR,1:functions,0:SWITCH,3:IF,3	280
0x4000140	            0x4157	                                push r15	        77	buffer.c	FUNCTION_17
0x4000142	            0x4156	                                push r14	        77	buffer.c	FUNCTION_17
0x4000144	            0x4155	                                push r13	        77	buffer.c	FUNCTION_17
0x4000146	            0x4154	                                push r12	        77	buffer.c	FUNCTION_17
0x4000148	          0x4989fc	                            mov r12, rdi	        77	buffer.c	FUNCTION_17
0x400014b	              0x55	                                push rbp	        77	buffer.c	FUNCTION_17
0x400014c	              0x53	                                push rbx	        77	buffer.c	FUNCTION_17
0x400014d	          0x4889f3	                            mov rbx, rsi	        77	buffer.c	FUNCTION_17
0x4000150	    0x4881eca80000	                           sub rsp, 0xa8	        77	buffer.c	FUNCTION_17
0x4000157	    0x64488b042528	                mov rax, qword fs:[0x28]	        77	buffer.c	FUNCTION_17
0x4000160	      0x4889442468	             mov qword [rsp + 0x68], rax	        77	buffer.c	FUNCTION_17
0x4000165	            0x31c0	                            xor eax, eax	        77	buffer.c	FUNCTION_17
0x4000167	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	        83	buffer.c	FUNCTION_17	CALL_1
0x400016f	    0x488994248000	             mov qword [rsp + 0x80], rdx	        77	buffer.c	FUNCTION_17
0x4000177	    0x48898c248800	             mov qword [rsp + 0x88], rcx	        77	buffer.c	FUNCTION_17
0x400017f	    0x4c8984249000	              mov qword [rsp + 0x90], r8	        77	buffer.c	FUNCTION_17
0x4000187	    0x4c898c249800	              mov qword [rsp + 0x98], r9	        77	buffer.c	FUNCTION_17
0x400018f	      0x4889442410	             mov qword [rsp + 0x10], rax	        83	buffer.c	FUNCTION_17	CALL_1
0x4000194	      0x488d442470	                   lea rax, [rsp + 0x70]	        83	buffer.c	FUNCTION_17	CALL_1
0x4000199	    0xc74424081000	               mov dword [rsp + 8], 0x10	        83	buffer.c	FUNCTION_17	CALL_1
0x40001a1	      0x4889442418	             mov qword [rsp + 0x18], rax	        83	buffer.c	FUNCTION_17	CALL_1
0x40001a6	           0xfb606	                   movzx eax, byte [rsi]	        86	buffer.c	FUNCTION_17	FOR_1
0x40001a9	            0x84c0	                             test al, al	        86	buffer.c	FUNCTION_17	FOR_1
0x40001ab	     0xf84d0000000	                            je 0x4000281	        86	buffer.c	FUNCTION_17	FOR_1
0x40001b1	      0x488d6c2430	                   lea rbp, [rsp + 0x30]	       179	basic_string.h	FUNCTION_18	FUNCTION_7	IF_1	CALL_1
0x40001b6	          0x4989f5	                            mov r13, rsi	        86	buffer.c	FUNCTION_17	FOR_1
0x40001b9	            0x31d2	                            xor edx, edx	        86	buffer.c	FUNCTION_17	FOR_1
0x40001bb	       0xf1f440000	                   nop dword [rax + rax]	        86	buffer.c	FUNCTION_17	FOR_1
0x40001c0	            0x85d2	                           test edx, edx	        88	buffer.c	FUNCTION_17	FOR_1	IF_1
0x40001c2	     0xf84d8020000	                            je 0x40004a0	        88	buffer.c	FUNCTION_17	FOR_1	IF_1
0x40001c8	          0x83e864	                           sub eax, 0x64	        94	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1
0x40001cb	            0x3c14	                            cmp al, 0x14	        94	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1
0x40001cd	     0xf87dd010000	                            ja 0x40003b0	        94	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1
0x40001d3	           0xfb6c0	                           movzx eax, al	        94	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1
0x40001d6	    0xff24c5000000	                       jmp qword [rax*8]	        94	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1
0x40001dd	           0xf1f00	                         nop dword [rax]	        94	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1
0x40001e0	        0x8b442408	                mov eax, dword [rsp + 8]	       106	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_5
0x40001e4	          0x83f82f	                           cmp eax, 0x2f	       106	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_5
0x40001e7	     0xf87e3020000	                            ja 0x40004d0	       106	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_5
0x40001ed	            0x89c2	                            mov edx, eax	       106	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_5
0x40001ef	      0x4803542418	             add rdx, qword [rsp + 0x18]	       106	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_5
0x40001f4	          0x83c008	                              add eax, 8	       106	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_5
0x40001f7	        0x89442408	                mov dword [rsp + 8], eax	       106	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_5
0x40001fb	          0x448b02	                    mov r8d, dword [rdx]	        34	stdio2.h	FUNCTION_21	CALL_3
0x40001fe	      0xb900000000	                              mov ecx, 0	        34	stdio2.h	FUNCTION_21	CALL_3
0x4000203	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	        34	stdio2.h	FUNCTION_21	CALL_3
0x4000208	      0xba20000000	                           mov edx, 0x20	        34	stdio2.h	FUNCTION_21	CALL_3
0x400020d	      0xbe01000000	                              mov esi, 1	        34	stdio2.h	FUNCTION_21	CALL_3
0x4000212	            0x31c0	                            xor eax, eax	        34	stdio2.h	FUNCTION_21	CALL_3
0x4000214	          0x4d89ee	                            mov r14, r13	        34	stdio2.h	FUNCTION_21	CALL_3
0x4000217	      0xe800000000	                          call 0x400021c	        34	stdio2.h	FUNCTION_21	CALL_3
0x400021c	      0x4c8d7c2440	                   lea r15, [rsp + 0x40]	        34	stdio2.h	FUNCTION_21	CALL_3
0x4000221	          0x4929dd	                            sub r13, rbx	       164	buffer.c	FUNCTION_17	FOR_1	IF_1	IF_2	CALL_15
0x4000224	          0x4c89ea	                            mov rdx, r13	        30	buffer.c	FUNCTION_13	IF_1
0x4000227	        0x4883ea01	                              sub rdx, 1	        30	buffer.c	FUNCTION_13	IF_1
0x400022b	            0x740b	                            je 0x4000238	        30	buffer.c	FUNCTION_13	IF_1
0x400022d	          0x4889de	                            mov rsi, rbx	        30	buffer.c	FUNCTION_13	IF_1
0x4000230	          0x4c89e7	                            mov rdi, r12	        30	buffer.c	FUNCTION_13	IF_1
0x4000233	      0xe808feffff	call sym.buffer_grow_buffer__charconst__unsignedlong__clone.part.1	        30	buffer.c	FUNCTION_13	IF_1
0x4000238	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       165	buffer.c	FUNCTION_17	FOR_1	IF_1	IF_2	CALL_16
0x400023d	          0x4c89fe	                            mov rsi, r15	       165	buffer.c	FUNCTION_17	FOR_1	IF_1	IF_2	CALL_16
0x4000240	      0xe800000000	                          call 0x4000245	       165	buffer.c	FUNCTION_17	FOR_1	IF_1	IF_2	CALL_16
0x4000245	      0x4c8b6c2420	            mov r13, qword [rsp + 0x20] 	       165	buffer.c	FUNCTION_17	FOR_1	IF_1	IF_2	CALL_16
0x400024a	          0x4c89ef	                            mov rdi, r13	       166	buffer.c	FUNCTION_17	FOR_1	IF_1	IF_2	CALL_18
0x400024d	      0xe800000000	                          call 0x4000252	       166	buffer.c	FUNCTION_17	FOR_1	IF_1	IF_2	CALL_18
0x4000252	          0x4885c0	                           test rax, rax	        30	buffer.c	FUNCTION_13	IF_1
0x4000255	     0xf855d020000	                           jne 0x40004b8	        30	buffer.c	FUNCTION_13	IF_1
0x400025b	          0x4939ed	                            cmp r13, rbp	       179	basic_string.h	FUNCTION_18	FUNCTION_7	IF_1	CALL_1
0x400025e	        0x498d5e01	                      lea rbx, [r14 + 1]	       167	buffer.c	FUNCTION_17	FOR_1	IF_1	IF_2
0x4000262	            0x7408	                            je 0x400026c	       179	basic_string.h	FUNCTION_18	FUNCTION_7	IF_1	CALL_1
0x4000264	          0x4c89ef	                            mov rdi, r13	       110	new_allocator.h	FUNCTION_38	CALL_5
0x4000267	      0xe800000000	                          call 0x400026c	       110	new_allocator.h	FUNCTION_38	CALL_5
0x400026c	          0x4889d8	                            mov rax, rbx	       110	new_allocator.h	FUNCTION_38	CALL_5
0x400026f	          0x4989c5	                            mov r13, rax	       110	new_allocator.h	FUNCTION_38	CALL_5
0x4000272	            0x31d2	                            xor edx, edx	       169	buffer.c	FUNCTION_17	FOR_1	IF_1
0x4000274	      0x410fb64601	               movzx eax, byte [r14 + 1]	        86	buffer.c	FUNCTION_17	FOR_1
0x4000279	            0x84c0	                             test al, al	        86	buffer.c	FUNCTION_17	FOR_1
0x400027b	     0xf853fffffff	                           jne 0x40001c0	        86	buffer.c	FUNCTION_17	FOR_1
0x4000281	          0x4889df	                            mov rdi, rbx	       175	buffer.c	FUNCTION_17	CALL_19
0x4000284	      0xe800000000	                          call 0x4000289	       175	buffer.c	FUNCTION_17	CALL_19
0x4000289	          0x4885c0	                           test rax, rax	        30	buffer.c	FUNCTION_13	IF_1
0x400028c	            0x740e	                            je 0x400029c	        30	buffer.c	FUNCTION_13	IF_1
0x400028e	          0x4889c2	                            mov rdx, rax	        30	buffer.c	FUNCTION_13	IF_1
0x4000291	          0x4889de	                            mov rsi, rbx	        30	buffer.c	FUNCTION_13	IF_1
0x4000294	          0x4c89e7	                            mov rdi, r12	        30	buffer.c	FUNCTION_13	IF_1
0x4000297	      0xe8a4fdffff	call sym.buffer_grow_buffer__charconst__unsignedlong__clone.part.1	        30	buffer.c	FUNCTION_13	IF_1
0x400029c	      0x488b442468	            mov rax, qword [rsp + 0x68] 	       177	buffer.c	FUNCTION_17
0x40002a1	    0x644833042528	                xor rax, qword fs:[0x28]	       177	buffer.c	FUNCTION_17
0x40002aa	     0xf85fe020000	                           jne 0x40005ae	       177	buffer.c	FUNCTION_17
0x40002b0	    0x4881c4a80000	                           add rsp, 0xa8	       177	buffer.c	FUNCTION_17
0x40002b7	              0x5b	                                 pop rbx	       177	buffer.c	FUNCTION_17
0x40002b8	              0x5d	                                 pop rbp	       177	buffer.c	FUNCTION_17
0x40002b9	            0x415c	                                 pop r12	       177	buffer.c	FUNCTION_17
0x40002bb	            0x415d	                                 pop r13	       177	buffer.c	FUNCTION_17
0x40002bd	            0x415e	                                 pop r14	       177	buffer.c	FUNCTION_17
0x40002bf	            0x415f	                                 pop r15	       177	buffer.c	FUNCTION_17
0x40002c1	              0xc3	                                     ret	       177	buffer.c	FUNCTION_17
0x40002c2	    0x660f1f440000	                    nop word [rax + rax]	       177	buffer.c	FUNCTION_17
0x40002c8	        0x8b442408	                mov eax, dword [rsp + 8]	       103	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_4
0x40002cc	          0x83f82f	                           cmp eax, 0x2f	       103	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_4
0x40002cf	     0xf8713020000	                            ja 0x40004e8	       103	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_4
0x40002d5	            0x89c2	                            mov edx, eax	       103	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_4
0x40002d7	      0x4803542418	             add rdx, qword [rsp + 0x18]	       103	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_4
0x40002dc	          0x83c008	                              add eax, 8	       103	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_4
0x40002df	        0x89442408	                mov dword [rsp + 8], eax	       103	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_4
0x40002e3	          0x448b02	                    mov r8d, dword [rdx]	        34	stdio2.h	FUNCTION_21	CALL_3
0x40002e6	      0xb900000000	                              mov ecx, 0	        34	stdio2.h	FUNCTION_21	CALL_3
0x40002eb	      0xe913ffffff	                           jmp 0x4000203	        34	stdio2.h	FUNCTION_21	CALL_3
0x40002f0	        0x8b442408	                mov eax, dword [rsp + 8]	       100	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_3
0x40002f4	          0x83f82f	                           cmp eax, 0x2f	       100	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_3
0x40002f7	     0xf871b020000	                            ja 0x4000518	       100	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_3
0x40002fd	            0x89c2	                            mov edx, eax	       100	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_3
0x40002ff	      0x4803542418	             add rdx, qword [rsp + 0x18]	       100	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_3
0x4000304	          0x83c008	                              add eax, 8	       100	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_3
0x4000307	        0x89442408	                mov dword [rsp + 8], eax	       100	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_3
0x400030b	          0x448b02	                    mov r8d, dword [rdx]	        34	stdio2.h	FUNCTION_21	CALL_3
0x400030e	      0xb900000000	                              mov ecx, 0	        34	stdio2.h	FUNCTION_21	CALL_3
0x4000313	      0xe9ebfeffff	                           jmp 0x4000203	        34	stdio2.h	FUNCTION_21	CALL_3
0x4000318	     0xf1f84000000	                   nop dword [rax + rax]	        34	stdio2.h	FUNCTION_21	CALL_3
0x4000320	        0x8b442408	                mov eax, dword [rsp + 8]	       109	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_6
0x4000324	          0x83f82f	                           cmp eax, 0x2f	       109	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_6
0x4000327	     0xf87d3010000	                            ja 0x4000500	       109	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_6
0x400032d	            0x89c2	                            mov edx, eax	       109	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_6
0x400032f	      0x4803542418	             add rdx, qword [rsp + 0x18]	       109	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_6
0x4000334	          0x83c008	                              add eax, 8	       109	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_6
0x4000337	        0x89442408	                mov dword [rsp + 8], eax	       109	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_6
0x400033b	          0x448b02	                    mov r8d, dword [rdx]	        34	stdio2.h	FUNCTION_21	CALL_3
0x400033e	      0xb900000000	                              mov ecx, 0	        34	stdio2.h	FUNCTION_21	CALL_3
0x4000343	      0xe9bbfeffff	                           jmp 0x4000203	        34	stdio2.h	FUNCTION_21	CALL_3
0x4000348	     0xf1f84000000	                   nop dword [rax + rax]	        34	stdio2.h	FUNCTION_21	CALL_3
0x4000350	        0x8b442408	                mov eax, dword [rsp + 8]	        97	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_2
0x4000354	          0x83f82f	                           cmp eax, 0x2f	        97	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_2
0x4000357	     0xf87d3010000	                            ja 0x4000530	        97	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_2
0x400035d	            0x89c2	                            mov edx, eax	        97	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_2
0x400035f	      0x4803542418	             add rdx, qword [rsp + 0x18]	        97	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_2
0x4000364	          0x83c008	                              add eax, 8	        97	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_2
0x4000367	        0x89442408	                mov dword [rsp + 8], eax	        97	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_2
0x400036b	          0x4c8b3a	                    mov r15, qword [rdx]	        97	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_2
0x400036e	          0x4d85ff	                           test r15, r15	       162	buffer.c	FUNCTION_17	FOR_1	IF_1	IF_2
0x4000371	            0x743d	                            je 0x40003b0	       162	buffer.c	FUNCTION_17	FOR_1	IF_1	IF_2
0x4000373	          0x4d89ee	                            mov r14, r13	       162	buffer.c	FUNCTION_17	FOR_1	IF_1	IF_2
0x4000376	      0xe9a6feffff	                           jmp 0x4000221	       162	buffer.c	FUNCTION_17	FOR_1	IF_1	IF_2
0x400037b	       0xf1f440000	                   nop dword [rax + rax]	       162	buffer.c	FUNCTION_17	FOR_1	IF_1	IF_2
0x4000380	      0x410fb64501	               movzx eax, byte [r13 + 1]	       113	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2
0x4000385	        0x4d8d7501	                      lea r14, [r13 + 1]	       112	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1
0x4000389	          0x83e864	                           sub eax, 0x64	       113	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2
0x400038c	            0x3c14	                            cmp al, 0x14	       113	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2
0x400038e	            0x7718	                            ja 0x40003a8	       113	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2
0x4000390	           0xfb6c0	                           movzx eax, al	       113	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2
0x4000393	    0xff24c5000000	                       jmp qword [rax*8]	       113	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2
0x400039a	            0x3c64	                            cmp al, 0x64	       129	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x400039c	     0xf84b6000000	                            je 0x4000458	       129	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x40003a2	    0x660f1f440000	                    nop word [rax + rax]	       129	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x40003a8	          0x4d89f5	                            mov r13, r14	       128	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2
0x40003ab	       0xf1f440000	                   nop dword [rax + rax]	       128	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2
0x40003b0	        0x498d4501	                      lea rax, [r13 + 1]	       128	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2
0x40003b4	          0x4d89ee	                            mov r14, r13	       128	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2
0x40003b7	      0xe9b3feffff	                           jmp 0x400026f	       128	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2
0x40003bc	         0xf1f4000	                         nop dword [rax]	       128	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2
0x40003c0	      0x410fb64502	               movzx eax, byte [r13 + 2]	       129	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x40003c5	        0x4d8d7502	                      lea r14, [r13 + 2]	       128	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2
0x40003c9	            0x3c6f	                            cmp al, 0x6f	       129	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x40003cb	            0x7463	                            je 0x4000430	       129	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x40003cd	            0x7ecb	                           jle 0x400039a	       129	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x40003cf	            0x3c75	                            cmp al, 0x75	       129	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x40003d1	            0x7435	                            je 0x4000408	       129	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x40003d3	            0x3c78	                            cmp al, 0x78	       129	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x40003d5	            0x75d1	                           jne 0x40003a8	       129	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x40003d7	    0x660f1f840000	                    nop word [rax + rax]	       129	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x40003e0	        0x8b442408	                mov eax, dword [rsp + 8]	       140	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x40003e4	          0x83f82f	                           cmp eax, 0x2f	       140	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x40003e7	     0xf878f010000	                            ja 0x400057c	       140	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x40003ed	            0x89c2	                            mov edx, eax	       140	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x40003ef	      0x4803542418	             add rdx, qword [rsp + 0x18]	       140	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x40003f4	          0x83c008	                              add eax, 8	       140	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x40003f7	        0x89442408	                mov dword [rsp + 8], eax	       140	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x40003fb	          0x4c8b02	                     mov r8, qword [rdx]	        34	stdio2.h	FUNCTION_21	CALL_3
0x40003fe	      0xb900000000	                              mov ecx, 0	        34	stdio2.h	FUNCTION_21	CALL_3
0x4000403	            0xeb76	                           jmp 0x400047b	        34	stdio2.h	FUNCTION_21	CALL_3
0x4000405	           0xf1f00	                         nop dword [rax]	        34	stdio2.h	FUNCTION_21	CALL_3
0x4000408	        0x8b442408	                mov eax, dword [rsp + 8]	       136	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x400040c	          0x83f82f	                           cmp eax, 0x2f	       136	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x400040f	     0xf8754010000	                            ja 0x4000569	       136	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x4000415	            0x89c2	                            mov edx, eax	       136	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x4000417	      0x4803542418	             add rdx, qword [rsp + 0x18]	       136	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x400041c	          0x83c008	                              add eax, 8	       136	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x400041f	        0x89442408	                mov dword [rsp + 8], eax	       136	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x4000423	          0x4c8b02	                     mov r8, qword [rdx]	        34	stdio2.h	FUNCTION_21	CALL_3
0x4000426	      0xb900000000	                              mov ecx, 0	        34	stdio2.h	FUNCTION_21	CALL_3
0x400042b	            0xeb4e	                           jmp 0x400047b	        34	stdio2.h	FUNCTION_21	CALL_3
0x400042d	           0xf1f00	                         nop dword [rax]	        34	stdio2.h	FUNCTION_21	CALL_3
0x4000430	        0x8b442408	                mov eax, dword [rsp + 8]	       144	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x4000434	          0x83f82f	                           cmp eax, 0x2f	       144	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x4000437	     0xf8719010000	                            ja 0x4000556	       144	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x400043d	            0x89c2	                            mov edx, eax	       144	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x400043f	      0x4803542418	             add rdx, qword [rsp + 0x18]	       144	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x4000444	          0x83c008	                              add eax, 8	       144	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x4000447	        0x89442408	                mov dword [rsp + 8], eax	       144	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x400044b	          0x4c8b02	                     mov r8, qword [rdx]	        34	stdio2.h	FUNCTION_21	CALL_3
0x400044e	      0xb900000000	                              mov ecx, 0	        34	stdio2.h	FUNCTION_21	CALL_3
0x4000453	            0xeb26	                           jmp 0x400047b	        34	stdio2.h	FUNCTION_21	CALL_3
0x4000455	           0xf1f00	                         nop dword [rax]	        34	stdio2.h	FUNCTION_21	CALL_3
0x4000458	        0x8b442408	                mov eax, dword [rsp + 8]	       132	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x400045c	          0x83f82f	                           cmp eax, 0x2f	       132	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x400045f	     0xf87de000000	                            ja 0x4000543	       132	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x4000465	            0x89c2	                            mov edx, eax	       132	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x4000467	      0x4803542418	             add rdx, qword [rsp + 0x18]	       132	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x400046c	          0x83c008	                              add eax, 8	       132	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x400046f	        0x89442408	                mov dword [rsp + 8], eax	       132	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x4000473	          0x4c8b02	                     mov r8, qword [rdx]	        34	stdio2.h	FUNCTION_21	CALL_3
0x4000476	      0xb900000000	                              mov ecx, 0	        34	stdio2.h	FUNCTION_21	CALL_3
0x400047b	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	        34	stdio2.h	FUNCTION_21	CALL_3
0x4000480	      0xba20000000	                           mov edx, 0x20	        34	stdio2.h	FUNCTION_21	CALL_3
0x4000485	      0xbe01000000	                              mov esi, 1	        34	stdio2.h	FUNCTION_21	CALL_3
0x400048a	            0x31c0	                            xor eax, eax	        34	stdio2.h	FUNCTION_21	CALL_3
0x400048c	      0xe800000000	                          call 0x4000491	        34	stdio2.h	FUNCTION_21	CALL_3
0x4000491	      0xe986fdffff	                           jmp 0x400021c	        34	stdio2.h	FUNCTION_21	CALL_3
0x4000496	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        34	stdio2.h	FUNCTION_21	CALL_3
0x40004a0	            0x31d2	                            xor edx, edx	       169	buffer.c	FUNCTION_17	FOR_1	IF_1
0x40004a2	            0x3c25	                            cmp al, 0x25	       169	buffer.c	FUNCTION_17	FOR_1	IF_1
0x40004a4	          0x4d89ee	                            mov r14, r13	       169	buffer.c	FUNCTION_17	FOR_1	IF_1
0x40004a7	           0xf94c2	                                 sete dl	       169	buffer.c	FUNCTION_17	FOR_1	IF_1
0x40004aa	        0x4983c501	                              add r13, 1	       169	buffer.c	FUNCTION_17	FOR_1	IF_1
0x40004ae	      0xe9c1fdffff	                           jmp 0x4000274	       169	buffer.c	FUNCTION_17	FOR_1	IF_1
0x40004b3	       0xf1f440000	                   nop dword [rax + rax]	       169	buffer.c	FUNCTION_17	FOR_1	IF_1
0x40004b8	          0x4889c2	                            mov rdx, rax	       169	buffer.c	FUNCTION_17	FOR_1	IF_1
0x40004bb	          0x4c89ee	                            mov rsi, r13	       169	buffer.c	FUNCTION_17	FOR_1	IF_1
0x40004be	          0x4c89e7	                            mov rdi, r12	       169	buffer.c	FUNCTION_17	FOR_1	IF_1
0x40004c1	      0xe87afbffff	call sym.buffer_grow_buffer__charconst__unsignedlong__clone.part.1	       169	buffer.c	FUNCTION_17	FOR_1	IF_1
0x40004c6	      0x4c8b6c2420	            mov r13, qword [rsp + 0x20] 	       169	buffer.c	FUNCTION_17	FOR_1	IF_1
0x40004cb	      0xe98bfdffff	                           jmp 0x400025b	       169	buffer.c	FUNCTION_17	FOR_1	IF_1
0x40004d0	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       106	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_5
0x40004d5	        0x488d4208	                      lea rax, [rdx + 8]	       106	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_5
0x40004d9	      0x4889442410	             mov qword [rsp + 0x10], rax	       106	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_5
0x40004de	      0xe918fdffff	                           jmp 0x40001fb	       106	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_5
0x40004e3	       0xf1f440000	                   nop dword [rax + rax]	       106	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_5
0x40004e8	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       103	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_4
0x40004ed	        0x488d4208	                      lea rax, [rdx + 8]	       103	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_4
0x40004f1	      0x4889442410	             mov qword [rsp + 0x10], rax	       103	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_4
0x40004f6	      0xe9e8fdffff	                           jmp 0x40002e3	       103	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_4
0x40004fb	       0xf1f440000	                   nop dword [rax + rax]	       103	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_4
0x4000500	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       109	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_6
0x4000505	        0x488d4208	                      lea rax, [rdx + 8]	       109	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_6
0x4000509	      0x4889442410	             mov qword [rsp + 0x10], rax	       109	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_6
0x400050e	      0xe928feffff	                           jmp 0x400033b	       109	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_6
0x4000513	       0xf1f440000	                   nop dword [rax + rax]	       109	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_6
0x4000518	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       100	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_3
0x400051d	        0x488d4208	                      lea rax, [rdx + 8]	       100	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_3
0x4000521	      0x4889442410	             mov qword [rsp + 0x10], rax	       100	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_3
0x4000526	      0xe9e0fdffff	                           jmp 0x400030b	       100	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_3
0x400052b	       0xf1f440000	                   nop dword [rax + rax]	       100	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_3
0x4000530	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	        97	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_2
0x4000535	        0x488d4208	                      lea rax, [rdx + 8]	        97	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_2
0x4000539	      0x4889442410	             mov qword [rsp + 0x10], rax	        97	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_2
0x400053e	      0xe928feffff	                           jmp 0x400036b	        97	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	CALL_2
0x4000543	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       132	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x4000548	        0x488d4208	                      lea rax, [rdx + 8]	       132	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x400054c	      0x4889442410	             mov qword [rsp + 0x10], rax	       132	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x4000551	      0xe91dffffff	                           jmp 0x4000473	       132	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x4000556	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       144	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x400055b	        0x488d4208	                      lea rax, [rdx + 8]	       144	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x400055f	      0x4889442410	             mov qword [rsp + 0x10], rax	       144	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x4000564	      0xe9e2feffff	                           jmp 0x400044b	       144	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x4000569	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       136	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x400056e	        0x488d4208	                      lea rax, [rdx + 8]	       136	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x4000572	      0x4889442410	             mov qword [rsp + 0x10], rax	       136	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x4000577	      0xe9a7feffff	                           jmp 0x4000423	       136	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	SWITCH_3
0x400057c	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       122	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	CALL_9
0x4000581	        0x488d4208	                      lea rax, [rdx + 8]	       122	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	CALL_9
0x4000585	      0x4889442410	             mov qword [rsp + 0x10], rax	       122	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	CALL_9
0x400058a	      0xe96cfeffff	                           jmp 0x40003fb	       122	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	CALL_9
0x400058f	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       122	buffer.c	FUNCTION_17	FOR_1	IF_1	SWITCH_1	SWITCH_2	CALL_9
0x4000594	      0x488d542430	                   lea rdx, [rsp + 0x30]	       179	basic_string.h	FUNCTION_18	FUNCTION_7	IF_1	CALL_1
0x4000599	          0x4889c3	                            mov rbx, rax	       179	basic_string.h	FUNCTION_18	FUNCTION_7	IF_1	CALL_1
0x400059c	          0x4839d7	                            cmp rdi, rdx	       179	basic_string.h	FUNCTION_18	FUNCTION_7	IF_1	CALL_1
0x400059f	            0x7405	                            je 0x40005a6	       179	basic_string.h	FUNCTION_18	FUNCTION_7	IF_1	CALL_1
0x40005a1	      0xe800000000	                          call 0x40005a6	       110	new_allocator.h	FUNCTION_38	CALL_5
0x40005a6	          0x4889df	                            mov rdi, rbx	       110	new_allocator.h	FUNCTION_38	CALL_5
0x40005a9	      0xe800000000	                          call 0x40005ae	       110	new_allocator.h	FUNCTION_38	CALL_5
0x40005ae	      0xe800000000	                          call 0x40005b3	       177	buffer.c	FUNCTION_17
buffer_finish	WHILE,0:DO,0:ELSE,0:CALL,0:FOR,0:functions,0:SWITCH,0:IF,0	5
0x4000120	          0x488b07	                    mov rax, qword [rdi]	        68	buffer.c	FUNCTION_16
0x4000123	    0x48c747080000	                  mov qword [rdi + 8], 0	        70	buffer.c	FUNCTION_16
0x400012b	    0x48c707000000	                      mov qword [rdi], 0	        69	buffer.c	FUNCTION_16
0x4000132	    0x48c747100000	               mov qword [rdi + 0x10], 0	        71	buffer.c	FUNCTION_16
0x400013a	              0xc3	                                     ret	        73	buffer.c	FUNCTION_16
buffer_free	WHILE,0:DO,0:ELSE,0:CALL,1:FOR,0:functions,0:SWITCH,0:IF,1	13
0x40000d0	          0x4885ff	                           test rdi, rdi	        50	buffer.c	FUNCTION_14	IF_1
0x40000d3	            0x7429	                            je 0x40000fe	        50	buffer.c	FUNCTION_14	IF_1
0x40000d5	              0x53	                                push rbx	        49	buffer.c	FUNCTION_14
0x40000d6	          0x4889fb	                            mov rbx, rdi	        49	buffer.c	FUNCTION_14
0x40000d9	          0x488b3f	                    mov rdi, qword [rdi]	        53	buffer.c	FUNCTION_14	CALL_1
0x40000dc	          0x4885ff	                           test rdi, rdi	        59	common-utils.h	FUNCTION_39	CALL_2
0x40000df	            0x7405	                            je 0x40000e6	        59	common-utils.h	FUNCTION_39	CALL_2
0x40000e1	      0xe800000000	                          call 0x40000e6	        60	common-utils.h	FUNCTION_39
0x40000e6	    0x48c703000000	                      mov qword [rbx], 0	        54	buffer.c	FUNCTION_14
0x40000ed	    0x48c743080000	                  mov qword [rbx + 8], 0	        55	buffer.c	FUNCTION_14
0x40000f5	    0x48c743100000	               mov qword [rbx + 0x10], 0	        56	buffer.c	FUNCTION_14
0x40000fd	              0x5b	                                 pop rbx	        57	buffer.c	FUNCTION_14
0x40000fe	            0xf3c3	                                     ret	        57	buffer.c	FUNCTION_14
