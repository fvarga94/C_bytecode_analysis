remove_junk_on_signal	functions,0:CALL,3:ELSE,0:FOR,0:IF,0:WHILE,0:DO,0:SWITCH,0	14
0xaaf	              0x55	                                push rbp	       189	worktree.c	FUNCTION_6
0xab0	          0x4889e5	                            mov rbp, rsp	       189	worktree.c	FUNCTION_6
0xab3	        0x4883ec10	                           sub rsp, 0x10	       189	worktree.c	FUNCTION_6
0xab7	          0x897dfc	                mov dword [rbp - 4], edi	       189	worktree.c	FUNCTION_6
0xaba	      0xe802ffffff	                    call sym.remove_junk	       190	worktree.c	FUNCTION_6	CALL_1
0xabf	          0x8b45fc	                mov eax, dword [rbp - 4]	       191	worktree.c	FUNCTION_6	CALL_2
0xac2	            0x89c7	                            mov edi, eax	       191	worktree.c	FUNCTION_6	CALL_2
0xac4	      0xe800000000	                          call 0x4000b09	       191	worktree.c	FUNCTION_6	CALL_2
0xac9	          0x8b45fc	                mov eax, dword [rbp - 4]	       192	worktree.c	FUNCTION_6	CALL_3
0xacc	            0x89c7	                            mov edi, eax	       192	worktree.c	FUNCTION_6	CALL_3
0xace	      0xe800000000	                          call 0x4000b13	       192	worktree.c	FUNCTION_6	CALL_3
0xad3	              0x90	                                     nop	       193	worktree.c	FUNCTION_6
0xad4	              0xc9	                                   leave	       193	worktree.c	FUNCTION_6
0xad5	              0xc3	                                     ret	       193	worktree.c	FUNCTION_6
git_worktree_config	functions,0:CALL,3:ELSE,0:FOR,0:IF,1:WHILE,0:DO,0:SWITCH,0	28
0x1b9	              0x55	                                push rbp	        40	worktree.c	FUNCTION_1
0x1ba	          0x4889e5	                            mov rbp, rsp	        40	worktree.c	FUNCTION_1
0x1bd	        0x4883ec20	                           sub rsp, 0x20	        40	worktree.c	FUNCTION_1
0x1c1	        0x48897df8	                mov qword [rbp - 8], rdi	        40	worktree.c	FUNCTION_1
0x1c5	        0x488975f0	             mov qword [rbp - 0x10], rsi	        40	worktree.c	FUNCTION_1
0x1c9	        0x488955e8	             mov qword [rbp - 0x18], rdx	        40	worktree.c	FUNCTION_1
0x1cd	        0x488b45f8	                mov rax, qword [rbp - 8]	        41	worktree.c	FUNCTION_1	IF_1	CALL_1
0x1d1	      0xbe00000000	                              mov esi, 0	        41	worktree.c	FUNCTION_1	IF_1	CALL_1
0x1d6	          0x4889c7	                            mov rdi, rax	        41	worktree.c	FUNCTION_1	IF_1	CALL_1
0x1d9	      0xe800000000	                          call 0x400021e	        41	worktree.c	FUNCTION_1	IF_1	CALL_1
0x1de	            0x85c0	                           test eax, eax	        41	worktree.c	FUNCTION_1	IF_1	CALL_1
0x1e0	            0x7520	                           jne 0x4000242	        41	worktree.c	FUNCTION_1	IF_1	CALL_1
0x1e2	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        42	worktree.c	FUNCTION_1	IF_1	CALL_2
0x1e6	        0x488b45f8	                mov rax, qword [rbp - 8]	        42	worktree.c	FUNCTION_1	IF_1	CALL_2
0x1ea	          0x4889d6	                            mov rsi, rdx	        42	worktree.c	FUNCTION_1	IF_1	CALL_2
0x1ed	          0x4889c7	                            mov rdi, rax	        42	worktree.c	FUNCTION_1	IF_1	CALL_2
0x1f0	      0xe800000000	                          call 0x4000235	        42	worktree.c	FUNCTION_1	IF_1	CALL_2
0x1f5	    0x890500000000	            mov dword [0x0400023b], eax 	        42	worktree.c	FUNCTION_1	IF_1	CALL_2
0x1fb	      0xb800000000	                              mov eax, 0	        43	worktree.c	FUNCTION_1	IF_1
0x200	            0xeb17	                           jmp 0x4000259	        43	worktree.c	FUNCTION_1	IF_1
0x202	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        46	worktree.c	FUNCTION_1	CALL_3
0x206	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        46	worktree.c	FUNCTION_1	CALL_3
0x20a	        0x488b45f8	                mov rax, qword [rbp - 8]	        46	worktree.c	FUNCTION_1	CALL_3
0x20e	          0x4889ce	                            mov rsi, rcx	        46	worktree.c	FUNCTION_1	CALL_3
0x211	          0x4889c7	                            mov rdi, rax	        46	worktree.c	FUNCTION_1	CALL_3
0x214	      0xe800000000	                          call 0x4000259	        46	worktree.c	FUNCTION_1	CALL_3
0x219	              0xc9	                                   leave	        47	worktree.c	FUNCTION_1
0x21a	              0xc3	                                     ret	        47	worktree.c	FUNCTION_1
move_worktree	functions,0:CALL,38:ELSE,0:FOR,0:IF,10:WHILE,0:DO,0:SWITCH,0	210
0x288f	              0x55	                                push rbp	       689	worktree.c	FUNCTION_19
0x2890	          0x4889e5	                            mov rbp, rsp	       689	worktree.c	FUNCTION_19
0x2893	            0x4154	                                push r12	       689	worktree.c	FUNCTION_19
0x2895	              0x53	                                push rbx	       689	worktree.c	FUNCTION_19
0x2896	    0x4881ece00000	                           sub rsp, 0xe0	       689	worktree.c	FUNCTION_19
0x289d	    0x89bd2cffffff	             mov dword [rbp - 0xd4], edi	       689	worktree.c	FUNCTION_19
0x28a3	    0x4889b520ffff	             mov qword [rbp - 0xe0], rsi	       689	worktree.c	FUNCTION_19
0x28aa	    0x48899518ffff	             mov qword [rbp - 0xe8], rdx	       689	worktree.c	FUNCTION_19
0x28b1	    0x64488b042528	                mov rax, qword fs:[0x28]	       689	worktree.c	FUNCTION_19
0x28ba	        0x488945e8	             mov qword [rbp - 0x18], rax	       689	worktree.c	FUNCTION_19
0x28be	            0x31c0	                            xor eax, eax	       689	worktree.c	FUNCTION_19
0x28c0	        0x488d55a0	                   lea rdx, [rbp - 0x60]	       690	worktree.c	FUNCTION_19
0x28c4	      0xb800000000	                              mov eax, 0	       690	worktree.c	FUNCTION_19
0x28c9	      0xb908000000	                              mov ecx, 8	       690	worktree.c	FUNCTION_19
0x28ce	          0x4889d7	                            mov rdi, rdx	       690	worktree.c	FUNCTION_19
0x28d1	          0xf348ab	              rep stosq qword [rdi], rax	       690	worktree.c	FUNCTION_19
0x28d4	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	       694	worktree.c	FUNCTION_19
0x28df	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	       694	worktree.c	FUNCTION_19
0x28ea	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	       694	worktree.c	FUNCTION_19
0x28f5	    0x48c745800000	               mov qword [rbp - 0x80], 0	       695	worktree.c	FUNCTION_19
0x28fd	    0x48c745880000	               mov qword [rbp - 0x78], 0	       695	worktree.c	FUNCTION_19
0x2905	    0x48c745900000	               mov qword [rbp - 0x70], 0	       695	worktree.c	FUNCTION_19
0x290d	        0x488d4da0	                   lea rcx, [rbp - 0x60]	       699	worktree.c	FUNCTION_19	CALL_2
0x2911	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       699	worktree.c	FUNCTION_19	CALL_2
0x2918	    0x488bb520ffff	             mov rsi, qword [rbp - 0xe0]	       699	worktree.c	FUNCTION_19	CALL_2
0x291f	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       699	worktree.c	FUNCTION_19	CALL_2
0x2925	    0x41b900000000	                              mov r9d, 0	       699	worktree.c	FUNCTION_19	CALL_2
0x292b	    0x41b800000000	                              mov r8d, 0	       699	worktree.c	FUNCTION_19	CALL_2
0x2931	            0x89c7	                            mov edi, eax	       699	worktree.c	FUNCTION_19	CALL_2
0x2933	      0xe800000000	                          call 0x4002978	       699	worktree.c	FUNCTION_19	CALL_2
0x2938	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	       699	worktree.c	FUNCTION_19	CALL_2
0x293e	    0x83bd2cffffff	               cmp dword [rbp - 0xd4], 2	       700	worktree.c	FUNCTION_19	IF_1
0x2945	            0x7411	                            je 0x4002998	       700	worktree.c	FUNCTION_19	IF_1
0x2947	        0x488d45a0	                   lea rax, [rbp - 0x60]	       701	worktree.c	FUNCTION_19	CALL_3
0x294b	          0x4889c6	                            mov rsi, rax	       701	worktree.c	FUNCTION_19	CALL_3
0x294e	      0xbf00000000	                              mov edi, 0	       701	worktree.c	FUNCTION_19	CALL_3
0x2953	      0xe800000000	                          call 0x4002998	       701	worktree.c	FUNCTION_19	CALL_3
0x2958	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       703	worktree.c	FUNCTION_19	CALL_4
0x295f	        0x4883c008	                              add rax, 8	       703	worktree.c	FUNCTION_19	CALL_4
0x2963	          0x488b10	                    mov rdx, qword [rax]	       703	worktree.c	FUNCTION_19	CALL_4
0x2966	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       703	worktree.c	FUNCTION_19	CALL_4
0x296d	          0x4889d6	                            mov rsi, rdx	       703	worktree.c	FUNCTION_19	CALL_4
0x2970	          0x4889c7	                            mov rdi, rax	       703	worktree.c	FUNCTION_19	CALL_4
0x2973	      0xe800000000	                          call 0x40029b8	       703	worktree.c	FUNCTION_19	CALL_4
0x2978	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       703	worktree.c	FUNCTION_19	CALL_4
0x297f	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	       704	worktree.c	FUNCTION_19	CALL_5
0x2986	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	       704	worktree.c	FUNCTION_19	CALL_5
0x298d	          0x4889d6	                            mov rsi, rdx	       704	worktree.c	FUNCTION_19	CALL_5
0x2990	          0x4889c7	                            mov rdi, rax	       704	worktree.c	FUNCTION_19	CALL_5
0x2993	      0xe872d7ffff	                  call sym.strbuf_addstr	       704	worktree.c	FUNCTION_19	CALL_5
0x2998	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       705	worktree.c	FUNCTION_19	CALL_6
0x299f	          0x4889c7	                            mov rdi, rax	       705	worktree.c	FUNCTION_19	CALL_6
0x29a2	      0xe800000000	                          call 0x40029e7	       705	worktree.c	FUNCTION_19	CALL_6
0x29a7	      0xbf00000000	                              mov edi, 0	       707	worktree.c	FUNCTION_19	CALL_7
0x29ac	      0xe800000000	                          call 0x40029f1	       707	worktree.c	FUNCTION_19	CALL_7
0x29b1	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       707	worktree.c	FUNCTION_19	CALL_7
0x29b8	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       708	worktree.c	FUNCTION_19	CALL_8
0x29bf	          0x488b10	                    mov rdx, qword [rax]	       708	worktree.c	FUNCTION_19	CALL_8
0x29c2	    0x488b8d18ffff	             mov rcx, qword [rbp - 0xe8]	       708	worktree.c	FUNCTION_19	CALL_8
0x29c9	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       708	worktree.c	FUNCTION_19	CALL_8
0x29d0	          0x4889ce	                            mov rsi, rcx	       708	worktree.c	FUNCTION_19	CALL_8
0x29d3	          0x4889c7	                            mov rdi, rax	       708	worktree.c	FUNCTION_19	CALL_8
0x29d6	      0xe800000000	                          call 0x4002a1b	       708	worktree.c	FUNCTION_19	CALL_8
0x29db	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       708	worktree.c	FUNCTION_19	CALL_8
0x29e2	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	       709	worktree.c	FUNCTION_19	IF_2
0x29ea	            0x7524	                           jne 0x4002a50	       709	worktree.c	FUNCTION_19	IF_2
0x29ec	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       710	worktree.c	FUNCTION_19	CALL_10
0x29f3	          0x488b18	                    mov rbx, qword [rax]	       710	worktree.c	FUNCTION_19	CALL_10
0x29f6	      0xbf00000000	                              mov edi, 0	       710	worktree.c	FUNCTION_19	CALL_10
0x29fb	      0xe83fd7ffff	                               call sym.	       710	worktree.c	FUNCTION_19	CALL_10
0x2a00	          0x4889de	                            mov rsi, rbx	       710	worktree.c	FUNCTION_19	CALL_10
0x2a03	          0x4889c7	                            mov rdi, rax	       710	worktree.c	FUNCTION_19	CALL_10
0x2a06	      0xb800000000	                              mov eax, 0	       710	worktree.c	FUNCTION_19	CALL_10
0x2a0b	      0xe800000000	                          call 0x4002a50	       710	worktree.c	FUNCTION_19	CALL_10
0x2a10	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       711	worktree.c	FUNCTION_19	IF_3	CALL_11
0x2a17	          0x4889c7	                            mov rdi, rax	       711	worktree.c	FUNCTION_19	IF_3	CALL_11
0x2a1a	      0xe800000000	                          call 0x4002a5f	       711	worktree.c	FUNCTION_19	IF_3	CALL_11
0x2a1f	            0x85c0	                           test eax, eax	       711	worktree.c	FUNCTION_19	IF_3	CALL_11
0x2a21	            0x7424	                            je 0x4002a87	       711	worktree.c	FUNCTION_19	IF_3	CALL_11
0x2a23	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       712	worktree.c	FUNCTION_19	CALL_13
0x2a2a	          0x488b18	                    mov rbx, qword [rax]	       712	worktree.c	FUNCTION_19	CALL_13
0x2a2d	      0xbf00000000	                              mov edi, 0	       712	worktree.c	FUNCTION_19	CALL_13
0x2a32	      0xe808d7ffff	                               call sym.	       712	worktree.c	FUNCTION_19	CALL_13
0x2a37	          0x4889de	                            mov rsi, rbx	       712	worktree.c	FUNCTION_19	CALL_13
0x2a3a	          0x4889c7	                            mov rdi, rax	       712	worktree.c	FUNCTION_19	CALL_13
0x2a3d	      0xb800000000	                              mov eax, 0	       712	worktree.c	FUNCTION_19	CALL_13
0x2a42	      0xe800000000	                          call 0x4002a87	       712	worktree.c	FUNCTION_19	CALL_13
0x2a47	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       713	worktree.c	FUNCTION_19	IF_4	CALL_14
0x2a4e	          0x4889c7	                            mov rdi, rax	       713	worktree.c	FUNCTION_19	IF_4	CALL_14
0x2a51	      0xe800000000	                          call 0x4002a96	       713	worktree.c	FUNCTION_19	IF_4	CALL_14
0x2a56	            0x85c0	                           test eax, eax	       713	worktree.c	FUNCTION_19	IF_4	CALL_14
0x2a58	            0x746f	                            je 0x4002b09	       713	worktree.c	FUNCTION_19	IF_4	CALL_14
0x2a5a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       714	worktree.c	FUNCTION_19	IF_4	CALL_15
0x2a61	          0x488b00	                    mov rax, qword [rax]	       714	worktree.c	FUNCTION_19	IF_4	CALL_15
0x2a64	          0x4889c7	                            mov rdi, rax	       714	worktree.c	FUNCTION_19	IF_4	CALL_15
0x2a67	      0xe8a7d5ffff	          call sym.git_find_last_dir_sep	       714	worktree.c	FUNCTION_19	IF_4	CALL_15
0x2a6c	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	       714	worktree.c	FUNCTION_19	IF_4	CALL_15
0x2a73	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	       716	worktree.c	FUNCTION_19	IF_4	IF_5
0x2a7b	            0x7524	                           jne 0x4002ae1	       716	worktree.c	FUNCTION_19	IF_4	IF_5
0x2a7d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       717	worktree.c	FUNCTION_19	IF_4	IF_5	CALL_17
0x2a84	          0x488b18	                    mov rbx, qword [rax]	       717	worktree.c	FUNCTION_19	IF_4	IF_5	CALL_17
0x2a87	      0xbf00000000	                              mov edi, 0	       717	worktree.c	FUNCTION_19	IF_4	IF_5	CALL_17
0x2a8c	      0xe8aed6ffff	                               call sym.	       717	worktree.c	FUNCTION_19	IF_4	IF_5	CALL_17
0x2a91	          0x4889de	                            mov rsi, rbx	       717	worktree.c	FUNCTION_19	IF_4	IF_5	CALL_17
0x2a94	          0x4889c7	                            mov rdi, rax	       717	worktree.c	FUNCTION_19	IF_4	IF_5	CALL_17
0x2a97	      0xb800000000	                              mov eax, 0	       717	worktree.c	FUNCTION_19	IF_4	IF_5	CALL_17
0x2a9c	      0xe800000000	                          call 0x4002ae1	       717	worktree.c	FUNCTION_19	IF_4	IF_5	CALL_17
0x2aa1	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	       719	worktree.c	FUNCTION_19	IF_4	CALL_18
0x2aa8	          0x4889c7	                            mov rdi, rax	       719	worktree.c	FUNCTION_19	IF_4	CALL_18
0x2aab	      0xe800000000	                          call 0x4002af0	       719	worktree.c	FUNCTION_19	IF_4	CALL_18
0x2ab0	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	       720	worktree.c	FUNCTION_19	IF_4	CALL_19
0x2ab7	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	       720	worktree.c	FUNCTION_19	IF_4	CALL_19
0x2abe	          0x4889d6	                            mov rsi, rdx	       720	worktree.c	FUNCTION_19	IF_4	CALL_19
0x2ac1	          0x4889c7	                            mov rdi, rax	       720	worktree.c	FUNCTION_19	IF_4	CALL_19
0x2ac4	      0xe841d6ffff	                  call sym.strbuf_addstr	       720	worktree.c	FUNCTION_19	IF_4	CALL_19
0x2ac9	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       722	worktree.c	FUNCTION_19	IF_6	CALL_20
0x2ad0	          0x4889c7	                            mov rdi, rax	       722	worktree.c	FUNCTION_19	IF_6	CALL_20
0x2ad3	      0xe800000000	                          call 0x4002b18	       722	worktree.c	FUNCTION_19	IF_6	CALL_20
0x2ad8	            0x85c0	                           test eax, eax	       722	worktree.c	FUNCTION_19	IF_6	CALL_20
0x2ada	            0x7421	                            je 0x4002b3d	       722	worktree.c	FUNCTION_19	IF_6	CALL_20
0x2adc	    0x488b9d70ffff	             mov rbx, qword [rbp - 0x90]	       723	worktree.c	FUNCTION_19	CALL_22
0x2ae3	      0xbf00000000	                              mov edi, 0	       723	worktree.c	FUNCTION_19	CALL_22
0x2ae8	      0xe852d6ffff	                               call sym.	       723	worktree.c	FUNCTION_19	CALL_22
0x2aed	          0x4889de	                            mov rsi, rbx	       723	worktree.c	FUNCTION_19	CALL_22
0x2af0	          0x4889c7	                            mov rdi, rax	       723	worktree.c	FUNCTION_19	CALL_22
0x2af3	      0xb800000000	                              mov eax, 0	       723	worktree.c	FUNCTION_19	CALL_22
0x2af8	      0xe800000000	                          call 0x4002b3d	       723	worktree.c	FUNCTION_19	CALL_22
0x2afd	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       725	worktree.c	FUNCTION_19	CALL_23
0x2b04	          0x4889c7	                            mov rdi, rax	       725	worktree.c	FUNCTION_19	CALL_23
0x2b07	      0xe845fcffff	         call sym.validate_no_submodules	       725	worktree.c	FUNCTION_19	CALL_23
0x2b0c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       727	worktree.c	FUNCTION_19	CALL_24
0x2b13	          0x4889c7	                            mov rdi, rax	       727	worktree.c	FUNCTION_19	CALL_24
0x2b16	      0xe800000000	                          call 0x4002b5b	       727	worktree.c	FUNCTION_19	CALL_24
0x2b1b	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       727	worktree.c	FUNCTION_19	CALL_24
0x2b22	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	       728	worktree.c	FUNCTION_19	IF_7
0x2b2a	            0x7449	                            je 0x4002bb5	       728	worktree.c	FUNCTION_19	IF_7
0x2b2c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       729	worktree.c	FUNCTION_19	IF_7	IF_8
0x2b33	           0xfb600	                   movzx eax, byte [rax]	       729	worktree.c	FUNCTION_19	IF_7	IF_8
0x2b36	            0x84c0	                             test al, al	       729	worktree.c	FUNCTION_19	IF_7	IF_8
0x2b38	            0x7424	                            je 0x4002b9e	       729	worktree.c	FUNCTION_19	IF_7	IF_8
0x2b3a	      0xbf00000000	                              mov edi, 0	       730	worktree.c	FUNCTION_19	IF_7	IF_8	CALL_26
0x2b3f	      0xe8fbd5ffff	                               call sym.	       730	worktree.c	FUNCTION_19	IF_7	IF_8	CALL_26
0x2b44	          0x4889c2	                            mov rdx, rax	       730	worktree.c	FUNCTION_19	IF_7	IF_8	CALL_26
0x2b47	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       730	worktree.c	FUNCTION_19	IF_7	IF_8	CALL_26
0x2b4e	          0x4889c6	                            mov rsi, rax	       730	worktree.c	FUNCTION_19	IF_7	IF_8	CALL_26
0x2b51	          0x4889d7	                            mov rdi, rdx	       730	worktree.c	FUNCTION_19	IF_7	IF_8	CALL_26
0x2b54	      0xb800000000	                              mov eax, 0	       730	worktree.c	FUNCTION_19	IF_7	IF_8	CALL_26
0x2b59	      0xe800000000	                          call 0x4002b9e	       730	worktree.c	FUNCTION_19	IF_7	IF_8	CALL_26
0x2b5e	      0xbf00000000	                              mov edi, 0	       732	worktree.c	FUNCTION_19	IF_7	CALL_28
0x2b63	      0xe8d7d5ffff	                               call sym.	       732	worktree.c	FUNCTION_19	IF_7	CALL_28
0x2b68	          0x4889c7	                            mov rdi, rax	       732	worktree.c	FUNCTION_19	IF_7	CALL_28
0x2b6b	      0xb800000000	                              mov eax, 0	       732	worktree.c	FUNCTION_19	IF_7	CALL_28
0x2b70	      0xe800000000	                          call 0x4002bb5	       732	worktree.c	FUNCTION_19	IF_7	CALL_28
0x2b75	        0x488d4d80	                   lea rcx, [rbp - 0x80]	       734	worktree.c	FUNCTION_19	IF_9	CALL_29
0x2b79	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       734	worktree.c	FUNCTION_19	IF_9	CALL_29
0x2b80	      0xba00000000	                              mov edx, 0	       734	worktree.c	FUNCTION_19	IF_9	CALL_29
0x2b85	          0x4889ce	                            mov rsi, rcx	       734	worktree.c	FUNCTION_19	IF_9	CALL_29
0x2b88	          0x4889c7	                            mov rdi, rax	       734	worktree.c	FUNCTION_19	IF_9	CALL_29
0x2b8b	      0xe800000000	                          call 0x4002bd0	       734	worktree.c	FUNCTION_19	IF_9	CALL_29
0x2b90	            0x85c0	                           test eax, eax	       734	worktree.c	FUNCTION_19	IF_9	CALL_29
0x2b92	            0x741e	                            je 0x4002bf2	       734	worktree.c	FUNCTION_19	IF_9	CALL_29
0x2b94	        0x488b5d90	             mov rbx, qword [rbp - 0x70]	       735	worktree.c	FUNCTION_19	IF_9	CALL_31
0x2b98	      0xbf00000000	                              mov edi, 0	       735	worktree.c	FUNCTION_19	IF_9	CALL_31
0x2b9d	      0xe89dd5ffff	                               call sym.	       735	worktree.c	FUNCTION_19	IF_9	CALL_31
0x2ba2	          0x4889de	                            mov rsi, rbx	       735	worktree.c	FUNCTION_19	IF_9	CALL_31
0x2ba5	          0x4889c7	                            mov rdi, rax	       735	worktree.c	FUNCTION_19	IF_9	CALL_31
0x2ba8	      0xb800000000	                              mov eax, 0	       735	worktree.c	FUNCTION_19	IF_9	CALL_31
0x2bad	      0xe800000000	                          call 0x4002bf2	       735	worktree.c	FUNCTION_19	IF_9	CALL_31
0x2bb2	        0x488d4580	                   lea rax, [rbp - 0x80]	       737	worktree.c	FUNCTION_19	CALL_32
0x2bb6	          0x4889c7	                            mov rdi, rax	       737	worktree.c	FUNCTION_19	CALL_32
0x2bb9	      0xe800000000	                          call 0x4002bfe	       737	worktree.c	FUNCTION_19	CALL_32
0x2bbe	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       739	worktree.c	FUNCTION_19	IF_10	CALL_33
0x2bc5	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       739	worktree.c	FUNCTION_19	IF_10	CALL_33
0x2bcc	          0x488b00	                    mov rax, qword [rax]	       739	worktree.c	FUNCTION_19	IF_10	CALL_33
0x2bcf	          0x4889d6	                            mov rsi, rdx	       739	worktree.c	FUNCTION_19	IF_10	CALL_33
0x2bd2	          0x4889c7	                            mov rdi, rax	       739	worktree.c	FUNCTION_19	IF_10	CALL_33
0x2bd5	      0xe800000000	                          call 0x4002c1a	       739	worktree.c	FUNCTION_19	IF_10	CALL_33
0x2bda	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       739	worktree.c	FUNCTION_19	IF_10	CALL_33
0x2bdd	            0x752e	                           jne 0x4002c4d	       739	worktree.c	FUNCTION_19	IF_10	CALL_33
0x2bdf	    0x4c8ba570ffff	             mov r12, qword [rbp - 0x90]	       740	worktree.c	FUNCTION_19	CALL_35
0x2be6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       740	worktree.c	FUNCTION_19	CALL_35
0x2bed	          0x488b18	                    mov rbx, qword [rax]	       740	worktree.c	FUNCTION_19	CALL_35
0x2bf0	      0xbf00000000	                              mov edi, 0	       740	worktree.c	FUNCTION_19	CALL_35
0x2bf5	      0xe845d5ffff	                               call sym.	       740	worktree.c	FUNCTION_19	CALL_35
0x2bfa	          0x4c89e2	                            mov rdx, r12	       740	worktree.c	FUNCTION_19	CALL_35
0x2bfd	          0x4889de	                            mov rsi, rbx	       740	worktree.c	FUNCTION_19	CALL_35
0x2c00	          0x4889c7	                            mov rdi, rax	       740	worktree.c	FUNCTION_19	CALL_35
0x2c03	      0xb800000000	                              mov eax, 0	       740	worktree.c	FUNCTION_19	CALL_35
0x2c08	      0xe800000000	                          call 0x4002c4d	       740	worktree.c	FUNCTION_19	CALL_35
0x2c0d	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       742	worktree.c	FUNCTION_19	CALL_36
0x2c14	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       742	worktree.c	FUNCTION_19	CALL_36
0x2c1b	          0x4889d6	                            mov rsi, rdx	       742	worktree.c	FUNCTION_19	CALL_36
0x2c1e	          0x4889c7	                            mov rdi, rax	       742	worktree.c	FUNCTION_19	CALL_36
0x2c21	      0xe800000000	                          call 0x4002c66	       742	worktree.c	FUNCTION_19	CALL_36
0x2c26	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	       744	worktree.c	FUNCTION_19	CALL_37
0x2c2d	          0x4889c7	                            mov rdi, rax	       744	worktree.c	FUNCTION_19	CALL_37
0x2c30	      0xe800000000	                          call 0x4002c75	       744	worktree.c	FUNCTION_19	CALL_37
0x2c35	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       745	worktree.c	FUNCTION_19	CALL_38
0x2c3c	          0x4889c7	                            mov rdi, rax	       745	worktree.c	FUNCTION_19	CALL_38
0x2c3f	      0xe800000000	                          call 0x4002c84	       745	worktree.c	FUNCTION_19	CALL_38
0x2c44	      0xb800000000	                              mov eax, 0	       746	worktree.c	FUNCTION_19
0x2c49	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       747	worktree.c	FUNCTION_19
0x2c4d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       747	worktree.c	FUNCTION_19
0x2c56	            0x7405	                            je 0x4002c9d	       747	worktree.c	FUNCTION_19
0x2c58	      0xe800000000	                          call 0x4002c9d	       747	worktree.c	FUNCTION_19
0x2c5d	    0x4881c4e00000	                           add rsp, 0xe0	       747	worktree.c	FUNCTION_19
0x2c64	              0x5b	                                 pop rbx	       747	worktree.c	FUNCTION_19
0x2c65	            0x415c	                                 pop r12	       747	worktree.c	FUNCTION_19
0x2c67	              0x5d	                                 pop rbp	       747	worktree.c	FUNCTION_19
0x2c68	              0xc3	                                     ret	       747	worktree.c	FUNCTION_19
list	functions,0:CALL,10:ELSE,2:FOR,1:IF,3:WHILE,0:DO,0:SWITCH,0	96
0x2170	              0x55	                                push rbp	       577	worktree.c	FUNCTION_15
0x2171	          0x4889e5	                            mov rbp, rsp	       577	worktree.c	FUNCTION_15
0x2174	    0x4881ecd00000	                           sub rsp, 0xd0	       577	worktree.c	FUNCTION_15
0x217b	    0x89bd4cffffff	             mov dword [rbp - 0xb4], edi	       577	worktree.c	FUNCTION_15
0x2181	    0x4889b540ffff	             mov qword [rbp - 0xc0], rsi	       577	worktree.c	FUNCTION_15
0x2188	    0x48899538ffff	             mov qword [rbp - 0xc8], rdx	       577	worktree.c	FUNCTION_15
0x218f	    0x64488b042528	                mov rax, qword fs:[0x28]	       577	worktree.c	FUNCTION_15
0x2198	        0x488945f8	                mov qword [rbp - 8], rax	       577	worktree.c	FUNCTION_15
0x219c	            0x31c0	                            xor eax, eax	       577	worktree.c	FUNCTION_15
0x219e	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	       578	worktree.c	FUNCTION_15
0x21a8	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	       580	worktree.c	FUNCTION_15
0x21af	      0xb800000000	                              mov eax, 0	       580	worktree.c	FUNCTION_15
0x21b4	      0xb910000000	                           mov ecx, 0x10	       580	worktree.c	FUNCTION_15
0x21b9	          0x4889d7	                            mov rdi, rdx	       580	worktree.c	FUNCTION_15
0x21bc	          0xf348ab	              rep stosq qword [rdi], rax	       580	worktree.c	FUNCTION_15
0x21bf	    0xc78570ffffff	               mov dword [rbp - 0x90], 7	       580	worktree.c	FUNCTION_15
0x21c9	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	       580	worktree.c	FUNCTION_15
0x21d4	    0x488d8558ffff	                   lea rax, [rbp - 0xa8]	       580	worktree.c	FUNCTION_15
0x21db	        0x48894580	             mov qword [rbp - 0x80], rax	       580	worktree.c	FUNCTION_15
0x21df	    0x48c745900000	               mov qword [rbp - 0x70], 0	       580	worktree.c	FUNCTION_15
0x21e7	    0xc74598020000	               mov dword [rbp - 0x68], 2	       580	worktree.c	FUNCTION_15
0x21ee	    0x48c745a80100	               mov qword [rbp - 0x58], 1	       580	worktree.c	FUNCTION_15
0x21f6	    0x488d8d70ffff	                   lea rcx, [rbp - 0x90]	       585	worktree.c	FUNCTION_15	CALL_4
0x21fd	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	       585	worktree.c	FUNCTION_15	CALL_4
0x2204	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	       585	worktree.c	FUNCTION_15	CALL_4
0x220b	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	       585	worktree.c	FUNCTION_15	CALL_4
0x2211	    0x41b900000000	                              mov r9d, 0	       585	worktree.c	FUNCTION_15	CALL_4
0x2217	    0x41b800000000	                              mov r8d, 0	       585	worktree.c	FUNCTION_15	CALL_4
0x221d	            0x89c7	                            mov edi, eax	       585	worktree.c	FUNCTION_15	CALL_4
0x221f	      0xe800000000	                          call 0x4002264	       585	worktree.c	FUNCTION_15	CALL_4
0x2224	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	       585	worktree.c	FUNCTION_15	CALL_4
0x222a	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 0	       586	worktree.c	FUNCTION_15	IF_1
0x2231	            0x7414	                            je 0x4002287	       586	worktree.c	FUNCTION_15	IF_1
0x2233	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	       587	worktree.c	FUNCTION_15	CALL_5
0x223a	          0x4889c6	                            mov rsi, rax	       587	worktree.c	FUNCTION_15	CALL_5
0x223d	      0xbf00000000	                              mov edi, 0	       587	worktree.c	FUNCTION_15	CALL_5
0x2242	      0xe800000000	                          call 0x4002287	       587	worktree.c	FUNCTION_15	CALL_5
0x2247	      0xbf01000000	                              mov edi, 1	       589	worktree.c	FUNCTION_15	ELSE_1	CALL_6
0x224c	      0xe800000000	                          call 0x4002291	       589	worktree.c	FUNCTION_15	ELSE_1	CALL_6
0x2251	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       589	worktree.c	FUNCTION_15	ELSE_1	CALL_6
0x2258	    0xc7855cffffff	               mov dword [rbp - 0xa4], 0	       590	worktree.c	FUNCTION_15	ELSE_1
0x2262	    0x8b0500000000	            mov eax, dword [0x040022a8] 	       590	worktree.c	FUNCTION_15	ELSE_1
0x2268	    0x898560ffffff	             mov dword [rbp - 0xa0], eax	       590	worktree.c	FUNCTION_15	ELSE_1
0x226e	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       592	worktree.c	FUNCTION_15	ELSE_1	IF_2
0x2274	            0x85c0	                           test eax, eax	       592	worktree.c	FUNCTION_15	ELSE_1	IF_2
0x2276	            0x7520	                           jne 0x40022d8	       592	worktree.c	FUNCTION_15	ELSE_1	IF_2
0x2278	    0x488d955cffff	                   lea rdx, [rbp - 0xa4]	       593	worktree.c	FUNCTION_15	ELSE_1	CALL_7
0x227f	    0x488d8d60ffff	                   lea rcx, [rbp - 0xa0]	       593	worktree.c	FUNCTION_15	ELSE_1	CALL_7
0x2286	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       593	worktree.c	FUNCTION_15	ELSE_1	CALL_7
0x228d	          0x4889ce	                            mov rsi, rcx	       593	worktree.c	FUNCTION_15	ELSE_1	CALL_7
0x2290	          0x4889c7	                            mov rdi, rax	       593	worktree.c	FUNCTION_15	ELSE_1	CALL_7
0x2293	      0xe80dfeffff	                 call sym.measure_widths	       593	worktree.c	FUNCTION_15	ELSE_1	CALL_7
0x2298	    0xc78564ffffff	               mov dword [rbp - 0x9c], 0	       595	worktree.c	FUNCTION_15	ELSE_1	FOR_1
0x22a2	            0xeb6b	                           jmp 0x400234f	       595	worktree.c	FUNCTION_15	ELSE_1	FOR_1
0x22a4	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       596	worktree.c	FUNCTION_15	ELSE_1	FOR_1	IF_3
0x22aa	            0x85c0	                           test eax, eax	       596	worktree.c	FUNCTION_15	ELSE_1	FOR_1	IF_3
0x22ac	            0x7427	                            je 0x4002315	       596	worktree.c	FUNCTION_15	ELSE_1	FOR_1	IF_3
0x22ae	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	       597	worktree.c	FUNCTION_15	ELSE_1	FOR_1	CALL_8
0x22b4	            0x4898	                                    cdqe	       597	worktree.c	FUNCTION_15	ELSE_1	FOR_1	CALL_8
0x22b6	    0x488d14c50000	                        lea rdx, [rax*8]	       597	worktree.c	FUNCTION_15	ELSE_1	FOR_1	CALL_8
0x22be	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       597	worktree.c	FUNCTION_15	ELSE_1	FOR_1	CALL_8
0x22c5	          0x4801d0	                            add rax, rdx	       597	worktree.c	FUNCTION_15	ELSE_1	FOR_1	CALL_8
0x22c8	          0x488b00	                    mov rax, qword [rax]	       597	worktree.c	FUNCTION_15	ELSE_1	FOR_1	CALL_8
0x22cb	          0x4889c7	                            mov rdi, rax	       597	worktree.c	FUNCTION_15	ELSE_1	FOR_1	CALL_8
0x22ce	      0xe896fbffff	        call sym.show_worktree_porcelain	       597	worktree.c	FUNCTION_15	ELSE_1	FOR_1	CALL_8
0x22d3	            0xeb33	                           jmp 0x4002348	       597	worktree.c	FUNCTION_15	ELSE_1	FOR_1	CALL_8
0x22d5	    0x8b9560ffffff	             mov edx, dword [rbp - 0xa0]	       599	worktree.c	FUNCTION_15	ELSE_1	FOR_1	CALL_9
0x22db	    0x8b8d5cffffff	             mov ecx, dword [rbp - 0xa4]	       599	worktree.c	FUNCTION_15	ELSE_1	FOR_1	CALL_9
0x22e1	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	       599	worktree.c	FUNCTION_15	ELSE_1	FOR_1	CALL_9
0x22e7	            0x4898	                                    cdqe	       599	worktree.c	FUNCTION_15	ELSE_1	FOR_1	CALL_9
0x22e9	    0x488d34c50000	                        lea rsi, [rax*8]	       599	worktree.c	FUNCTION_15	ELSE_1	FOR_1	CALL_9
0x22f1	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       599	worktree.c	FUNCTION_15	ELSE_1	FOR_1	CALL_9
0x22f8	          0x4801f0	                            add rax, rsi	       599	worktree.c	FUNCTION_15	ELSE_1	FOR_1	CALL_9
0x22fb	          0x488b00	                    mov rax, qword [rax]	       599	worktree.c	FUNCTION_15	ELSE_1	FOR_1	CALL_9
0x22fe	            0x89ce	                            mov esi, ecx	       599	worktree.c	FUNCTION_15	ELSE_1	FOR_1	CALL_9
0x2300	          0x4889c7	                            mov rdi, rax	       599	worktree.c	FUNCTION_15	ELSE_1	FOR_1	CALL_9
0x2303	      0xe80afcffff	                  call sym.show_worktree	       599	worktree.c	FUNCTION_15	ELSE_1	FOR_1	CALL_9
0x2308	    0x838564ffffff	               add dword [rbp - 0x9c], 1	       595	worktree.c	FUNCTION_15	ELSE_1	FOR_1
0x230f	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	       595	worktree.c	FUNCTION_15	ELSE_1	FOR_1
0x2315	            0x4898	                                    cdqe	       595	worktree.c	FUNCTION_15	ELSE_1	FOR_1
0x2317	    0x488d14c50000	                        lea rdx, [rax*8]	       595	worktree.c	FUNCTION_15	ELSE_1	FOR_1
0x231f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       595	worktree.c	FUNCTION_15	ELSE_1	FOR_1
0x2326	          0x4801d0	                            add rax, rdx	       595	worktree.c	FUNCTION_15	ELSE_1	FOR_1
0x2329	          0x488b00	                    mov rax, qword [rax]	       595	worktree.c	FUNCTION_15	ELSE_1	FOR_1
0x232c	          0x4885c0	                           test rax, rax	       595	worktree.c	FUNCTION_15	ELSE_1	FOR_1
0x232f	     0xf856fffffff	                           jne 0x40022e4	       595	worktree.c	FUNCTION_15	ELSE_1	FOR_1
0x2335	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       601	worktree.c	FUNCTION_15	ELSE_1	CALL_10
0x233c	          0x4889c7	                            mov rdi, rax	       601	worktree.c	FUNCTION_15	ELSE_1	CALL_10
0x233f	      0xe800000000	                          call 0x4002384	       601	worktree.c	FUNCTION_15	ELSE_1	CALL_10
0x2344	      0xb800000000	                              mov eax, 0	       603	worktree.c	FUNCTION_15
0x2349	        0x488b4df8	                mov rcx, qword [rbp - 8]	       604	worktree.c	FUNCTION_15
0x234d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       604	worktree.c	FUNCTION_15
0x2356	            0x7405	                            je 0x400239d	       604	worktree.c	FUNCTION_15
0x2358	      0xe800000000	                          call 0x400239d	       604	worktree.c	FUNCTION_15
0x235d	              0xc9	                                   leave	       604	worktree.c	FUNCTION_15
0x235e	              0xc3	                                     ret	       604	worktree.c	FUNCTION_15
_	functions,0:CALL,2:ELSE,0:FOR,0:IF,1:WHILE,0:DO,0:SWITCH,0	15
0x13f	              0x55	                                push rbp	        51	gettext.h	FUNCTION_27
0x140	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_27
0x143	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_27
0x147	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_27
0x14b	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_27	IF_1
0x14f	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_27	IF_1
0x152	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_27	IF_1
0x154	            0x7507	                           jne 0x400019d	        52	gettext.h	FUNCTION_27	IF_1
0x156	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_27	IF_1
0x15b	            0xeb0c	                           jmp 0x40001a9	        53	gettext.h	FUNCTION_27	IF_1
0x15d	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_27	CALL_2
0x161	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_27	CALL_2
0x164	      0xe800000000	                          call 0x40001a9	        54	gettext.h	FUNCTION_27	CALL_2
0x169	              0xc9	                                   leave	        55	gettext.h	FUNCTION_27
0x16a	              0xc3	                                     ret	        55	gettext.h	FUNCTION_27
add_worktree	functions,0:CALL,73:ELSE,2:FOR,0:IF,15:WHILE,1:DO,0:SWITCH,0	475
0xb72	              0x55	                                push rbp	       216	worktree.c	FUNCTION_8
0xb73	          0x4889e5	                            mov rbp, rsp	       216	worktree.c	FUNCTION_8
0xb76	            0x4154	                                push r12	       216	worktree.c	FUNCTION_8
0xb78	              0x53	                                push rbx	       216	worktree.c	FUNCTION_8
0xb79	    0x4881ec000200	                          sub rsp, 0x200	       216	worktree.c	FUNCTION_8
0xb80	    0x4889bd08feff	            mov qword [rbp - 0x1f8], rdi	       216	worktree.c	FUNCTION_8
0xb87	    0x4889b500feff	            mov qword [rbp - 0x200], rsi	       216	worktree.c	FUNCTION_8
0xb8e	    0x488995f8fdff	            mov qword [rbp - 0x208], rdx	       216	worktree.c	FUNCTION_8
0xb95	    0x64488b042528	                mov rax, qword fs:[0x28]	       216	worktree.c	FUNCTION_8
0xb9e	        0x488945e8	             mov qword [rbp - 0x18], rax	       216	worktree.c	FUNCTION_8
0xba2	            0x31c0	                            xor eax, eax	       216	worktree.c	FUNCTION_8
0xba4	    0x48c78550feff	              mov qword [rbp - 0x1b0], 0	       217	worktree.c	FUNCTION_8
0xbaf	    0x48c78558feff	              mov qword [rbp - 0x1a8], 0	       217	worktree.c	FUNCTION_8
0xbba	    0x48c78560feff	              mov qword [rbp - 0x1a0], 0	       217	worktree.c	FUNCTION_8
0xbc5	    0x48c78570feff	              mov qword [rbp - 0x190], 0	       217	worktree.c	FUNCTION_8
0xbd0	    0x48c78578feff	              mov qword [rbp - 0x188], 0	       217	worktree.c	FUNCTION_8
0xbdb	    0x48c78580feff	              mov qword [rbp - 0x180], 0	       217	worktree.c	FUNCTION_8
0xbe6	    0x48c78590feff	              mov qword [rbp - 0x170], 0	       218	worktree.c	FUNCTION_8
0xbf1	    0x48c78598feff	              mov qword [rbp - 0x168], 0	       218	worktree.c	FUNCTION_8
0xbfc	    0x48c785a0feff	              mov qword [rbp - 0x160], 0	       218	worktree.c	FUNCTION_8
0xc07	    0x488d95d0feff	                  lea rdx, [rbp - 0x130]	       221	worktree.c	FUNCTION_8
0xc0e	      0xb800000000	                              mov eax, 0	       221	worktree.c	FUNCTION_8
0xc13	      0xb90c000000	                            mov ecx, 0xc	       221	worktree.c	FUNCTION_8
0xc18	          0x4889d7	                            mov rdi, rdx	       221	worktree.c	FUNCTION_8
0xc1b	          0xf348ab	              rep stosq qword [rdi], rax	       221	worktree.c	FUNCTION_8
0xc1e	    0x48c785d8feff	              mov qword [rbp - 0x128], 0	       221	worktree.c	FUNCTION_8
0xc29	    0x48c785e8feff	              mov qword [rbp - 0x118], 0	       221	worktree.c	FUNCTION_8
0xc34	    0x48c78540feff	              mov qword [rbp - 0x1c0], 0	       222	worktree.c	FUNCTION_8
0xc3f	    0xc78548feffff	              mov dword [rbp - 0x1b8], 0	       222	worktree.c	FUNCTION_8
0xc49	    0xc7854cfeffff	              mov dword [rbp - 0x1b4], 0	       222	worktree.c	FUNCTION_8
0xc53	    0xc7851cfeffff	              mov dword [rbp - 0x1e4], 0	       223	worktree.c	FUNCTION_8
0xc5d	    0x48c785b0feff	              mov qword [rbp - 0x150], 0	       224	worktree.c	FUNCTION_8
0xc68	    0x48c785b8feff	              mov qword [rbp - 0x148], 0	       224	worktree.c	FUNCTION_8
0xc73	    0x48c785c0feff	              mov qword [rbp - 0x140], 0	       224	worktree.c	FUNCTION_8
0xc7e	    0x48c78528feff	              mov qword [rbp - 0x1d8], 0	       225	worktree.c	FUNCTION_8
0xc89	    0xc78524feffff	              mov dword [rbp - 0x1dc], 0	       226	worktree.c	FUNCTION_8
0xc93	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	       228	worktree.c	FUNCTION_8	IF_1	CALL_2
0xc9a	          0x4889c7	                            mov rdi, rax	       228	worktree.c	FUNCTION_8	IF_1	CALL_2
0xc9d	      0xe800000000	                          call 0x4000ce2	       228	worktree.c	FUNCTION_8	IF_1	CALL_2
0xca2	            0x85c0	                           test eax, eax	       228	worktree.c	FUNCTION_8	IF_1	CALL_2
0xca4	            0x7437	                            je 0x4000d1d	       228	worktree.c	FUNCTION_8	IF_1	CALL_2
0xca6	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	       228	worktree.c	FUNCTION_8	IF_1	CALL_2
0xcad	          0x4889c7	                            mov rdi, rax	       228	worktree.c	FUNCTION_8	IF_1	CALL_2
0xcb0	      0xe800000000	                          call 0x4000cf5	       228	worktree.c	FUNCTION_8	IF_1	CALL_2
0xcb5	            0x85c0	                           test eax, eax	       228	worktree.c	FUNCTION_8	IF_1	CALL_2
0xcb7	            0x7524	                           jne 0x4000d1d	       228	worktree.c	FUNCTION_8	IF_1	CALL_2
0xcb9	      0xbf00000000	                              mov edi, 0	       229	worktree.c	FUNCTION_8	CALL_4
0xcbe	      0xe87cf4ffff	                               call sym.	       229	worktree.c	FUNCTION_8	CALL_4
0xcc3	          0x4889c2	                            mov rdx, rax	       229	worktree.c	FUNCTION_8	CALL_4
0xcc6	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	       229	worktree.c	FUNCTION_8	CALL_4
0xccd	          0x4889c6	                            mov rsi, rax	       229	worktree.c	FUNCTION_8	CALL_4
0xcd0	          0x4889d7	                            mov rdi, rdx	       229	worktree.c	FUNCTION_8	CALL_4
0xcd3	      0xb800000000	                              mov eax, 0	       229	worktree.c	FUNCTION_8	CALL_4
0xcd8	      0xe800000000	                          call 0x4000d1d	       229	worktree.c	FUNCTION_8	CALL_4
0xcdd	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	       232	worktree.c	FUNCTION_8	IF_2	CALL_5
0xce4	          0x8b4004	                mov eax, dword [rax + 4]	       232	worktree.c	FUNCTION_8	IF_2	CALL_5
0xce7	            0x85c0	                           test eax, eax	       232	worktree.c	FUNCTION_8	IF_2	CALL_5
0xce9	            0x755b	                           jne 0x4000d86	       232	worktree.c	FUNCTION_8	IF_2	CALL_5
0xceb	    0x488b9500feff	            mov rdx, qword [rbp - 0x200]	       232	worktree.c	FUNCTION_8	IF_2	CALL_5
0xcf2	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	       232	worktree.c	FUNCTION_8	IF_2	CALL_5
0xcf9	          0x4889d6	                            mov rsi, rdx	       232	worktree.c	FUNCTION_8	IF_2	CALL_5
0xcfc	          0x4889c7	                            mov rdi, rax	       232	worktree.c	FUNCTION_8	IF_2	CALL_5
0xcff	      0xe800000000	                          call 0x4000d44	       232	worktree.c	FUNCTION_8	IF_2	CALL_5
0xd04	            0x85c0	                           test eax, eax	       232	worktree.c	FUNCTION_8	IF_2	CALL_5
0xd06	            0x753e	                           jne 0x4000d86	       232	worktree.c	FUNCTION_8	IF_2	CALL_5
0xd08	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	       233	worktree.c	FUNCTION_8	IF_2	CALL_6
0xd0f	          0x4889c7	                            mov rdi, rax	       233	worktree.c	FUNCTION_8	IF_2	CALL_6
0xd12	      0xe800000000	                          call 0x4000d57	       233	worktree.c	FUNCTION_8	IF_2	CALL_6
0xd17	            0x85c0	                           test eax, eax	       232	worktree.c	FUNCTION_8	IF_2	CALL_5
0xd19	            0x742b	                            je 0x4000d86	       232	worktree.c	FUNCTION_8	IF_2	CALL_5
0xd1b	    0xc78524feffff	              mov dword [rbp - 0x1dc], 1	       234	worktree.c	FUNCTION_8	IF_2
0xd25	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	       235	worktree.c	FUNCTION_8	IF_2	IF_3
0xd2c	            0x8b00	                    mov eax, dword [rax]	       235	worktree.c	FUNCTION_8	IF_2	IF_3
0xd2e	            0x85c0	                           test eax, eax	       235	worktree.c	FUNCTION_8	IF_2	IF_3
0xd30	            0x7514	                           jne 0x4000d86	       235	worktree.c	FUNCTION_8	IF_2	IF_3
0xd32	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	       236	worktree.c	FUNCTION_8	IF_2	CALL_7
0xd39	      0xbe00000000	                              mov esi, 0	       236	worktree.c	FUNCTION_8	IF_2	CALL_7
0xd3e	          0x4889c7	                            mov rdi, rax	       236	worktree.c	FUNCTION_8	IF_2	CALL_7
0xd41	      0xe800000000	                          call 0x4000d86	       236	worktree.c	FUNCTION_8	IF_2	CALL_7
0xd46	    0x488b8500feff	            mov rax, qword [rbp - 0x200]	       238	worktree.c	FUNCTION_8	CALL_8
0xd4d	          0x4889c7	                            mov rdi, rax	       238	worktree.c	FUNCTION_8	CALL_8
0xd50	      0xe800000000	                          call 0x4000d95	       238	worktree.c	FUNCTION_8	CALL_8
0xd55	    0x48898528feff	            mov qword [rbp - 0x1d8], rax	       238	worktree.c	FUNCTION_8	CALL_8
0xd5c	    0x4883bd28feff	              cmp qword [rbp - 0x1d8], 0	       239	worktree.c	FUNCTION_8	IF_4
0xd64	            0x7524	                           jne 0x4000dca	       239	worktree.c	FUNCTION_8	IF_4
0xd66	      0xbf00000000	                              mov edi, 0	       240	worktree.c	FUNCTION_8	CALL_10
0xd6b	      0xe8cff3ffff	                               call sym.	       240	worktree.c	FUNCTION_8	CALL_10
0xd70	          0x4889c2	                            mov rdx, rax	       240	worktree.c	FUNCTION_8	CALL_10
0xd73	    0x488b8500feff	            mov rax, qword [rbp - 0x200]	       240	worktree.c	FUNCTION_8	CALL_10
0xd7a	          0x4889c6	                            mov rsi, rax	       240	worktree.c	FUNCTION_8	CALL_10
0xd7d	          0x4889d7	                            mov rdi, rdx	       240	worktree.c	FUNCTION_8	CALL_10
0xd80	      0xb800000000	                              mov eax, 0	       240	worktree.c	FUNCTION_8	CALL_10
0xd85	      0xe800000000	                          call 0x4000dca	       240	worktree.c	FUNCTION_8	CALL_10
0xd8a	    0x488d9518feff	                  lea rdx, [rbp - 0x1e8]	       242	worktree.c	FUNCTION_8	CALL_11
0xd91	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	       242	worktree.c	FUNCTION_8	CALL_11
0xd98	          0x4889d6	                            mov rsi, rdx	       242	worktree.c	FUNCTION_8	CALL_11
0xd9b	          0x4889c7	                            mov rdi, rax	       242	worktree.c	FUNCTION_8	CALL_11
0xd9e	      0xe833fdffff	              call sym.worktree_basename	       242	worktree.c	FUNCTION_8	CALL_11
0xda3	    0x48898530feff	            mov qword [rbp - 0x1d0], rax	       242	worktree.c	FUNCTION_8	CALL_11
0xdaa	    0x8b8518feffff	            mov eax, dword [rbp - 0x1e8]	       243	worktree.c	FUNCTION_8	CALL_12
0xdb0	          0x4863d0	                         movsxd rdx, eax	       243	worktree.c	FUNCTION_8	CALL_12
0xdb3	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	       243	worktree.c	FUNCTION_8	CALL_12
0xdba	          0x4801d0	                            add rax, rdx	       243	worktree.c	FUNCTION_8	CALL_12
0xdbd	          0x4889c2	                            mov rdx, rax	       243	worktree.c	FUNCTION_8	CALL_12
0xdc0	    0x488b8530feff	            mov rax, qword [rbp - 0x1d0]	       243	worktree.c	FUNCTION_8	CALL_12
0xdc7	          0x4829c2	                            sub rdx, rax	       243	worktree.c	FUNCTION_8	CALL_12
0xdca	          0x4889d0	                            mov rax, rdx	       243	worktree.c	FUNCTION_8	CALL_12
0xdcd	            0x89c6	                            mov esi, eax	       243	worktree.c	FUNCTION_8	CALL_12
0xdcf	    0x488b9530feff	            mov rdx, qword [rbp - 0x1d0]	       243	worktree.c	FUNCTION_8	CALL_12
0xdd6	    0x488d8570feff	                  lea rax, [rbp - 0x190]	       243	worktree.c	FUNCTION_8	CALL_12
0xddd	          0x4889d1	                            mov rcx, rdx	       243	worktree.c	FUNCTION_8	CALL_12
0xde0	            0x89f2	                            mov edx, esi	       243	worktree.c	FUNCTION_8	CALL_12
0xde2	      0xbe00000000	                              mov esi, 0	       243	worktree.c	FUNCTION_8	CALL_12
0xde7	          0x4889c7	                            mov rdi, rax	       243	worktree.c	FUNCTION_8	CALL_12
0xdea	      0xb800000000	                              mov eax, 0	       243	worktree.c	FUNCTION_8	CALL_12
0xdef	      0xe800000000	                          call 0x4000e34	       243	worktree.c	FUNCTION_8	CALL_12
0xdf4	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	       244	worktree.c	FUNCTION_8
0xdfb	    0x898518feffff	            mov dword [rbp - 0x1e8], eax	       244	worktree.c	FUNCTION_8
0xe01	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	       245	worktree.c	FUNCTION_8	IF_5	CALL_13
0xe08	          0x4889c7	                            mov rdi, rax	       245	worktree.c	FUNCTION_8	IF_5	CALL_13
0xe0b	      0xe800000000	                          call 0x4000e50	       245	worktree.c	FUNCTION_8	IF_5	CALL_13
0xe10	            0x85c0	                           test eax, eax	       245	worktree.c	FUNCTION_8	IF_5	CALL_13
0xe12	            0x7462	                            je 0x4000eb6	       245	worktree.c	FUNCTION_8	IF_5	CALL_13
0xe14	    0x488b9d80feff	            mov rbx, qword [rbp - 0x180]	       246	worktree.c	FUNCTION_8	IF_5	CALL_15
0xe1b	      0xbf00000000	                              mov edi, 0	       246	worktree.c	FUNCTION_8	IF_5	CALL_15
0xe20	      0xe81af3ffff	                               call sym.	       246	worktree.c	FUNCTION_8	IF_5	CALL_15
0xe25	          0x4889de	                            mov rsi, rbx	       246	worktree.c	FUNCTION_8	IF_5	CALL_15
0xe28	          0x4889c7	                            mov rdi, rax	       246	worktree.c	FUNCTION_8	IF_5	CALL_15
0xe2b	      0xb800000000	                              mov eax, 0	       246	worktree.c	FUNCTION_8	IF_5	CALL_15
0xe30	      0xe800000000	                          call 0x4000e75	       246	worktree.c	FUNCTION_8	IF_5	CALL_15
0xe35	    0x83851cfeffff	              add dword [rbp - 0x1e4], 1	       249	worktree.c	FUNCTION_8	WHILE_1
0xe3c	    0x8b8518feffff	            mov eax, dword [rbp - 0x1e8]	       250	worktree.c	FUNCTION_8	WHILE_1	CALL_17
0xe42	          0x4863d0	                         movsxd rdx, eax	       250	worktree.c	FUNCTION_8	WHILE_1	CALL_17
0xe45	    0x488d8570feff	                  lea rax, [rbp - 0x190]	       250	worktree.c	FUNCTION_8	WHILE_1	CALL_17
0xe4c	          0x4889d6	                            mov rsi, rdx	       250	worktree.c	FUNCTION_8	WHILE_1	CALL_17
0xe4f	          0x4889c7	                            mov rdi, rax	       250	worktree.c	FUNCTION_8	WHILE_1	CALL_17
0xe52	      0xe819f2ffff	                  call sym.strbuf_setlen	       250	worktree.c	FUNCTION_8	WHILE_1	CALL_17
0xe57	    0x8b951cfeffff	            mov edx, dword [rbp - 0x1e4]	       251	worktree.c	FUNCTION_8	WHILE_1	CALL_18
0xe5d	    0x488d8570feff	                  lea rax, [rbp - 0x190]	       251	worktree.c	FUNCTION_8	WHILE_1	CALL_18
0xe64	      0xbe00000000	                              mov esi, 0	       251	worktree.c	FUNCTION_8	WHILE_1	CALL_18
0xe69	          0x4889c7	                            mov rdi, rax	       251	worktree.c	FUNCTION_8	WHILE_1	CALL_18
0xe6c	      0xb800000000	                              mov eax, 0	       251	worktree.c	FUNCTION_8	WHILE_1	CALL_18
0xe71	      0xe800000000	                          call 0x4000eb6	       251	worktree.c	FUNCTION_8	WHILE_1	CALL_18
0xe76	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	       248	worktree.c	FUNCTION_8	WHILE_1	CALL_16
0xe7d	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       248	worktree.c	FUNCTION_8	WHILE_1	CALL_16
0xe84	          0x4889d6	                            mov rsi, rdx	       248	worktree.c	FUNCTION_8	WHILE_1	CALL_16
0xe87	          0x4889c7	                            mov rdi, rax	       248	worktree.c	FUNCTION_8	WHILE_1	CALL_16
0xe8a	      0xe800000000	                          call 0x4000ecf	       248	worktree.c	FUNCTION_8	WHILE_1	CALL_16
0xe8f	            0x85c0	                           test eax, eax	       248	worktree.c	FUNCTION_8	WHILE_1	CALL_16
0xe91	            0x74a2	                            je 0x4000e75	       248	worktree.c	FUNCTION_8	WHILE_1	CALL_16
0xe93	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	       253	worktree.c	FUNCTION_8	CALL_19
0xe9a	      0xbe2f000000	                           mov esi, 0x2f	       253	worktree.c	FUNCTION_8	CALL_19
0xe9f	          0x4889c7	                            mov rdi, rax	       253	worktree.c	FUNCTION_8	CALL_19
0xea2	      0xe800000000	                          call 0x4000ee7	       253	worktree.c	FUNCTION_8	CALL_19
0xea7	        0x4883c001	                              add rax, 1	       253	worktree.c	FUNCTION_8	CALL_19
0xeab	    0x48898530feff	            mov qword [rbp - 0x1d0], rax	       253	worktree.c	FUNCTION_8	CALL_19
0xeb2	      0xe800000000	                          call 0x4000ef7	       255	worktree.c	FUNCTION_8	CALL_20
0xeb7	    0x890500000000	            mov dword [0x04000efd], eax 	       255	worktree.c	FUNCTION_8	CALL_20
0xebd	      0xbf00000000	                              mov edi, 0	       256	worktree.c	FUNCTION_8	CALL_21
0xec2	      0xe800000000	                          call 0x4000f07	       256	worktree.c	FUNCTION_8	CALL_21
0xec7	      0xbf00000000	                              mov edi, 0	       257	worktree.c	FUNCTION_8	CALL_22
0xecc	      0xe800000000	                          call 0x4000f11	       257	worktree.c	FUNCTION_8	CALL_22
0xed1	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	       259	worktree.c	FUNCTION_8	IF_6	CALL_23
0xed8	      0xbeff010000	                          mov esi, 0x1ff	       259	worktree.c	FUNCTION_8	IF_6	CALL_23
0xedd	          0x4889c7	                            mov rdi, rax	       259	worktree.c	FUNCTION_8	IF_6	CALL_23
0xee0	      0xe800000000	                          call 0x4000f25	       259	worktree.c	FUNCTION_8	IF_6	CALL_23
0xee5	            0x85c0	                           test eax, eax	       259	worktree.c	FUNCTION_8	IF_6	CALL_23
0xee7	            0x7421	                            je 0x4000f4a	       259	worktree.c	FUNCTION_8	IF_6	CALL_23
0xee9	    0x488b9d80feff	            mov rbx, qword [rbp - 0x180]	       260	worktree.c	FUNCTION_8	CALL_25
0xef0	      0xbf00000000	                              mov edi, 0	       260	worktree.c	FUNCTION_8	CALL_25
0xef5	      0xe845f2ffff	                               call sym.	       260	worktree.c	FUNCTION_8	CALL_25
0xefa	          0x4889de	                            mov rsi, rbx	       260	worktree.c	FUNCTION_8	CALL_25
0xefd	          0x4889c7	                            mov rdi, rax	       260	worktree.c	FUNCTION_8	CALL_25
0xf00	      0xb800000000	                              mov eax, 0	       260	worktree.c	FUNCTION_8	CALL_25
0xf05	      0xe800000000	                          call 0x4000f4a	       260	worktree.c	FUNCTION_8	CALL_25
0xf0a	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	       261	worktree.c	FUNCTION_8	CALL_26
0xf11	          0x4889c7	                            mov rdi, rax	       261	worktree.c	FUNCTION_8	CALL_26
0xf14	      0xe800000000	                          call 0x4000f59	       261	worktree.c	FUNCTION_8	CALL_26
0xf19	    0x488905000000	            mov qword [0x04000f60], rax 	       261	worktree.c	FUNCTION_8	CALL_26
0xf20	    0xc70500000000	               mov dword [0x04000f6a], 1	       262	worktree.c	FUNCTION_8
0xf2a	    0x488b9580feff	            mov rdx, qword [rbp - 0x180]	       268	worktree.c	FUNCTION_8	CALL_27
0xf31	    0x488d8590feff	                  lea rax, [rbp - 0x170]	       268	worktree.c	FUNCTION_8	CALL_27
0xf38	      0xbe00000000	                              mov esi, 0	       268	worktree.c	FUNCTION_8	CALL_27
0xf3d	          0x4889c7	                            mov rdi, rax	       268	worktree.c	FUNCTION_8	CALL_27
0xf40	      0xb800000000	                              mov eax, 0	       268	worktree.c	FUNCTION_8	CALL_27
0xf45	      0xe800000000	                          call 0x4000f8a	       268	worktree.c	FUNCTION_8	CALL_27
0xf4a	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	       269	worktree.c	FUNCTION_8	IF_7
0xf51	          0x8b400c	              mov eax, dword [rax + 0xc]	       269	worktree.c	FUNCTION_8	IF_7
0xf54	            0x85c0	                           test eax, eax	       269	worktree.c	FUNCTION_8	IF_7
0xf56	            0x751b	                           jne 0x4000fb3	       269	worktree.c	FUNCTION_8	IF_7
0xf58	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       270	worktree.c	FUNCTION_8	CALL_28
0xf5f	      0xbe00000000	                              mov esi, 0	       270	worktree.c	FUNCTION_8	CALL_28
0xf64	          0x4889c7	                            mov rdi, rax	       270	worktree.c	FUNCTION_8	CALL_28
0xf67	      0xb800000000	                              mov eax, 0	       270	worktree.c	FUNCTION_8	CALL_28
0xf6c	      0xe800000000	                          call 0x4000fb1	       270	worktree.c	FUNCTION_8	CALL_28
0xf71	            0xeb19	                           jmp 0x4000fcc	       270	worktree.c	FUNCTION_8	CALL_28
0xf73	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       272	worktree.c	FUNCTION_8	CALL_29
0xf7a	      0xbe00000000	                              mov esi, 0	       272	worktree.c	FUNCTION_8	CALL_29
0xf7f	          0x4889c7	                            mov rdi, rax	       272	worktree.c	FUNCTION_8	CALL_29
0xf82	      0xb800000000	                              mov eax, 0	       272	worktree.c	FUNCTION_8	CALL_29
0xf87	      0xe800000000	                          call 0x4000fcc	       272	worktree.c	FUNCTION_8	CALL_29
0xf8c	    0x488b9508feff	            mov rdx, qword [rbp - 0x1f8]	       274	worktree.c	FUNCTION_8	CALL_30
0xf93	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	       274	worktree.c	FUNCTION_8	CALL_30
0xf9a	      0xbe00000000	                              mov esi, 0	       274	worktree.c	FUNCTION_8	CALL_30
0xf9f	          0x4889c7	                            mov rdi, rax	       274	worktree.c	FUNCTION_8	CALL_30
0xfa2	      0xb800000000	                              mov eax, 0	       274	worktree.c	FUNCTION_8	CALL_30
0xfa7	      0xe800000000	                          call 0x4000fec	       274	worktree.c	FUNCTION_8	CALL_30
0xfac	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	       275	worktree.c	FUNCTION_8	IF_8	CALL_31
0xfb3	          0x4889c7	                            mov rdi, rax	       275	worktree.c	FUNCTION_8	IF_8	CALL_31
0xfb6	      0xe800000000	                          call 0x4000ffb	       275	worktree.c	FUNCTION_8	IF_8	CALL_31
0xfbb	            0x85c0	                           test eax, eax	       275	worktree.c	FUNCTION_8	IF_8	CALL_31
0xfbd	            0x7421	                            je 0x4001020	       275	worktree.c	FUNCTION_8	IF_8	CALL_31
0xfbf	    0x488b9d60feff	            mov rbx, qword [rbp - 0x1a0]	       276	worktree.c	FUNCTION_8	IF_8	CALL_33
0xfc6	      0xbf00000000	                              mov edi, 0	       276	worktree.c	FUNCTION_8	IF_8	CALL_33
0xfcb	      0xe86ff1ffff	                               call sym.	       276	worktree.c	FUNCTION_8	IF_8	CALL_33
0xfd0	          0x4889de	                            mov rsi, rbx	       276	worktree.c	FUNCTION_8	IF_8	CALL_33
0xfd3	          0x4889c7	                            mov rdi, rax	       276	worktree.c	FUNCTION_8	IF_8	CALL_33
0xfd6	      0xb800000000	                              mov eax, 0	       276	worktree.c	FUNCTION_8	IF_8	CALL_33
0xfdb	      0xe800000000	                          call 0x4001020	       276	worktree.c	FUNCTION_8	IF_8	CALL_33
0xfe0	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	       278	worktree.c	FUNCTION_8	CALL_34
0xfe7	          0x4889c7	                            mov rdi, rax	       278	worktree.c	FUNCTION_8	CALL_34
0xfea	      0xe800000000	                          call 0x400102f	       278	worktree.c	FUNCTION_8	CALL_34
0xfef	    0x488905000000	            mov qword [0x04001036], rax 	       278	worktree.c	FUNCTION_8	CALL_34
0xff6	    0x488d8590feff	                  lea rax, [rbp - 0x170]	       280	worktree.c	FUNCTION_8	CALL_35
0xffd	      0xbe00000000	                              mov esi, 0	       280	worktree.c	FUNCTION_8	CALL_35
0x1002	          0x4889c7	                            mov rdi, rax	       280	worktree.c	FUNCTION_8	CALL_35
0x1005	      0xe866f0ffff	                  call sym.strbuf_setlen	       280	worktree.c	FUNCTION_8	CALL_35
0x100a	    0x488b9580feff	            mov rdx, qword [rbp - 0x180]	       281	worktree.c	FUNCTION_8	CALL_36
0x1011	    0x488d8590feff	                  lea rax, [rbp - 0x170]	       281	worktree.c	FUNCTION_8	CALL_36
0x1018	      0xbe00000000	                              mov esi, 0	       281	worktree.c	FUNCTION_8	CALL_36
0x101d	          0x4889c7	                            mov rdi, rax	       281	worktree.c	FUNCTION_8	CALL_36
0x1020	      0xb800000000	                              mov eax, 0	       281	worktree.c	FUNCTION_8	CALL_36
0x1025	      0xe800000000	                          call 0x400106a	       281	worktree.c	FUNCTION_8	CALL_36
0x102a	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	       282	worktree.c	FUNCTION_8	CALL_38
0x1031	          0x4889c7	                            mov rdi, rax	       282	worktree.c	FUNCTION_8	CALL_38
0x1034	      0xe800000000	                          call 0x4001079	       282	worktree.c	FUNCTION_8	CALL_38
0x1039	          0x4889c2	                            mov rdx, rax	       282	worktree.c	FUNCTION_8	CALL_38
0x103c	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       282	worktree.c	FUNCTION_8	CALL_38
0x1043	      0xbe00000000	                              mov esi, 0	       282	worktree.c	FUNCTION_8	CALL_38
0x1048	          0x4889c7	                            mov rdi, rax	       282	worktree.c	FUNCTION_8	CALL_38
0x104b	      0xb800000000	                              mov eax, 0	       282	worktree.c	FUNCTION_8	CALL_38
0x1050	      0xe800000000	                          call 0x4001095	       282	worktree.c	FUNCTION_8	CALL_38
0x1055	      0xe800000000	                          call 0x400109a	       283	worktree.c	FUNCTION_8	CALL_39
0x105a	          0x4889c7	                            mov rdi, rax	       283	worktree.c	FUNCTION_8	CALL_39
0x105d	      0xe800000000	                          call 0x40010a2	       283	worktree.c	FUNCTION_8	CALL_39
0x1062	          0x4889c6	                            mov rsi, rax	       283	worktree.c	FUNCTION_8	CALL_39
0x1065	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	       283	worktree.c	FUNCTION_8	CALL_39
0x106c	    0x488b9530feff	            mov rdx, qword [rbp - 0x1d0]	       283	worktree.c	FUNCTION_8	CALL_39
0x1073	          0x4889d1	                            mov rcx, rdx	       283	worktree.c	FUNCTION_8	CALL_39
0x1076	          0x4889f2	                            mov rdx, rsi	       283	worktree.c	FUNCTION_8	CALL_39
0x1079	      0xbe00000000	                              mov esi, 0	       283	worktree.c	FUNCTION_8	CALL_39
0x107e	          0x4889c7	                            mov rdi, rax	       283	worktree.c	FUNCTION_8	CALL_39
0x1081	      0xb800000000	                              mov eax, 0	       283	worktree.c	FUNCTION_8	CALL_39
0x1086	      0xe800000000	                          call 0x40010cb	       283	worktree.c	FUNCTION_8	CALL_39
0x108b	    0x488d8590feff	                  lea rax, [rbp - 0x170]	       292	worktree.c	FUNCTION_8	CALL_42
0x1092	      0xbe00000000	                              mov esi, 0	       292	worktree.c	FUNCTION_8	CALL_42
0x1097	          0x4889c7	                            mov rdi, rax	       292	worktree.c	FUNCTION_8	CALL_42
0x109a	      0xe8d1efffff	                  call sym.strbuf_setlen	       292	worktree.c	FUNCTION_8	CALL_42
0x109f	    0x488b9580feff	            mov rdx, qword [rbp - 0x180]	       293	worktree.c	FUNCTION_8	CALL_43
0x10a6	    0x488d8590feff	                  lea rax, [rbp - 0x170]	       293	worktree.c	FUNCTION_8	CALL_43
0x10ad	      0xbe00000000	                              mov esi, 0	       293	worktree.c	FUNCTION_8	CALL_43
0x10b2	          0x4889c7	                            mov rdi, rax	       293	worktree.c	FUNCTION_8	CALL_43
0x10b5	      0xb800000000	                              mov eax, 0	       293	worktree.c	FUNCTION_8	CALL_43
0x10ba	      0xe800000000	                          call 0x40010ff	       293	worktree.c	FUNCTION_8	CALL_43
0x10bf	      0xbf00000000	                              mov edi, 0	       294	worktree.c	FUNCTION_8	CALL_45
0x10c4	      0xe800000000	                          call 0x4001109	       294	worktree.c	FUNCTION_8	CALL_45
0x10c9	          0x4889c2	                            mov rdx, rax	       294	worktree.c	FUNCTION_8	CALL_45
0x10cc	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       294	worktree.c	FUNCTION_8	CALL_45
0x10d3	      0xbe00000000	                              mov esi, 0	       294	worktree.c	FUNCTION_8	CALL_45
0x10d8	          0x4889c7	                            mov rdi, rax	       294	worktree.c	FUNCTION_8	CALL_45
0x10db	      0xb800000000	                              mov eax, 0	       294	worktree.c	FUNCTION_8	CALL_45
0x10e0	      0xe800000000	                          call 0x4001125	       294	worktree.c	FUNCTION_8	CALL_45
0x10e5	    0x488d8590feff	                  lea rax, [rbp - 0x170]	       295	worktree.c	FUNCTION_8	CALL_46
0x10ec	      0xbe00000000	                              mov esi, 0	       295	worktree.c	FUNCTION_8	CALL_46
0x10f1	          0x4889c7	                            mov rdi, rax	       295	worktree.c	FUNCTION_8	CALL_46
0x10f4	      0xe877efffff	                  call sym.strbuf_setlen	       295	worktree.c	FUNCTION_8	CALL_46
0x10f9	    0x488b9580feff	            mov rdx, qword [rbp - 0x180]	       296	worktree.c	FUNCTION_8	CALL_47
0x1100	    0x488d8590feff	                  lea rax, [rbp - 0x170]	       296	worktree.c	FUNCTION_8	CALL_47
0x1107	      0xbe00000000	                              mov esi, 0	       296	worktree.c	FUNCTION_8	CALL_47
0x110c	          0x4889c7	                            mov rdi, rax	       296	worktree.c	FUNCTION_8	CALL_47
0x110f	      0xb800000000	                              mov eax, 0	       296	worktree.c	FUNCTION_8	CALL_47
0x1114	      0xe800000000	                          call 0x4001159	       296	worktree.c	FUNCTION_8	CALL_47
0x1119	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       297	worktree.c	FUNCTION_8	CALL_48
0x1120	      0xbe00000000	                              mov esi, 0	       297	worktree.c	FUNCTION_8	CALL_48
0x1125	          0x4889c7	                            mov rdi, rax	       297	worktree.c	FUNCTION_8	CALL_48
0x1128	      0xb800000000	                              mov eax, 0	       297	worktree.c	FUNCTION_8	CALL_48
0x112d	      0xe800000000	                          call 0x4001172	       297	worktree.c	FUNCTION_8	CALL_48
0x1132	    0x488b9560feff	            mov rdx, qword [rbp - 0x1a0]	       299	worktree.c	FUNCTION_8	CALL_49
0x1139	    0x488d8540feff	                  lea rax, [rbp - 0x1c0]	       299	worktree.c	FUNCTION_8	CALL_49
0x1140	          0x4889d1	                            mov rcx, rdx	       299	worktree.c	FUNCTION_8	CALL_49
0x1143	      0xba00000000	                              mov edx, 0	       299	worktree.c	FUNCTION_8	CALL_49
0x1148	      0xbe00000000	                              mov esi, 0	       299	worktree.c	FUNCTION_8	CALL_49
0x114d	          0x4889c7	                            mov rdi, rax	       299	worktree.c	FUNCTION_8	CALL_49
0x1150	      0xb800000000	                              mov eax, 0	       299	worktree.c	FUNCTION_8	CALL_49
0x1155	      0xe800000000	                          call 0x400119a	       299	worktree.c	FUNCTION_8	CALL_49
0x115a	    0x488b9508feff	            mov rdx, qword [rbp - 0x1f8]	       300	worktree.c	FUNCTION_8	CALL_50
0x1161	    0x488d8540feff	                  lea rax, [rbp - 0x1c0]	       300	worktree.c	FUNCTION_8	CALL_50
0x1168	          0x4889d1	                            mov rcx, rdx	       300	worktree.c	FUNCTION_8	CALL_50
0x116b	      0xba00000000	                              mov edx, 0	       300	worktree.c	FUNCTION_8	CALL_50
0x1170	      0xbe00000000	                              mov esi, 0	       300	worktree.c	FUNCTION_8	CALL_50
0x1175	          0x4889c7	                            mov rdi, rax	       300	worktree.c	FUNCTION_8	CALL_50
0x1178	      0xb800000000	                              mov eax, 0	       300	worktree.c	FUNCTION_8	CALL_50
0x117d	      0xe800000000	                          call 0x40011c2	       300	worktree.c	FUNCTION_8	CALL_50
0x1182	     0xfb68518ffff	            movzx eax, byte [rbp - 0xe8]	       301	worktree.c	FUNCTION_8
0x1189	          0x83c808	                               or eax, 8	       301	worktree.c	FUNCTION_8
0x118c	    0x888518ffffff	               mov byte [rbp - 0xe8], al	       301	worktree.c	FUNCTION_8
0x1192	    0x83bd24feffff	              cmp dword [rbp - 0x1dc], 0	       303	worktree.c	FUNCTION_8	IF_9
0x1199	            0x7543	                           jne 0x400121e	       303	worktree.c	FUNCTION_8	IF_9
0x119b	    0x488b8528feff	            mov rax, qword [rbp - 0x1d8]	       305	worktree.c	FUNCTION_8	CALL_52
0x11a2	        0x4883c004	                              add rax, 4	       305	worktree.c	FUNCTION_8	CALL_52
0x11a6	          0x4889c7	                            mov rdi, rax	       304	worktree.c	FUNCTION_8	IF_9	CALL_51
0x11a9	      0xe800000000	                          call 0x40011ee	       304	worktree.c	FUNCTION_8	IF_9	CALL_51
0x11ae	          0x4889c2	                            mov rdx, rax	       304	worktree.c	FUNCTION_8	IF_9	CALL_51
0x11b1	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       304	worktree.c	FUNCTION_8	IF_9	CALL_51
0x11b8	        0x4883c008	                              add rax, 8	       304	worktree.c	FUNCTION_8	IF_9	CALL_51
0x11bc	    0x41b800000000	                              mov r8d, 0	       304	worktree.c	FUNCTION_8	IF_9	CALL_51
0x11c2	          0x4889d1	                            mov rcx, rdx	       304	worktree.c	FUNCTION_8	IF_9	CALL_51
0x11c5	      0xba00000000	                              mov edx, 0	       304	worktree.c	FUNCTION_8	IF_9	CALL_51
0x11ca	      0xbe00000000	                              mov esi, 0	       304	worktree.c	FUNCTION_8	IF_9	CALL_51
0x11cf	          0x4889c7	                            mov rdi, rax	       304	worktree.c	FUNCTION_8	IF_9	CALL_51
0x11d2	      0xb800000000	                              mov eax, 0	       304	worktree.c	FUNCTION_8	IF_9	CALL_51
0x11d7	      0xe800000000	                          call 0x400121c	       304	worktree.c	FUNCTION_8	IF_9	CALL_51
0x11dc	            0xeb2f	                           jmp 0x400124d	       304	worktree.c	FUNCTION_8	IF_9	CALL_51
0x11de	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	       307	worktree.c	FUNCTION_8	ELSE_2	CALL_53
0x11e5	    0x488d95d0feff	                  lea rdx, [rbp - 0x130]	       307	worktree.c	FUNCTION_8	ELSE_2	CALL_53
0x11ec	        0x488d7a08	                      lea rdi, [rdx + 8]	       307	worktree.c	FUNCTION_8	ELSE_2	CALL_53
0x11f0	    0x41b800000000	                              mov r8d, 0	       307	worktree.c	FUNCTION_8	ELSE_2	CALL_53
0x11f6	          0x4889c1	                            mov rcx, rax	       307	worktree.c	FUNCTION_8	ELSE_2	CALL_53
0x11f9	      0xba00000000	                              mov edx, 0	       307	worktree.c	FUNCTION_8	ELSE_2	CALL_53
0x11fe	      0xbe00000000	                              mov esi, 0	       307	worktree.c	FUNCTION_8	ELSE_2	CALL_53
0x1203	      0xb800000000	                              mov eax, 0	       307	worktree.c	FUNCTION_8	ELSE_2	CALL_53
0x1208	      0xe800000000	                          call 0x400124d	       307	worktree.c	FUNCTION_8	ELSE_2	CALL_53
0x120d	    0x488b8540feff	            mov rax, qword [rbp - 0x1c0]	       309	worktree.c	FUNCTION_8
0x1214	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	       309	worktree.c	FUNCTION_8
0x121b	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       310	worktree.c	FUNCTION_8	CALL_54
0x1222	          0x4889c7	                            mov rdi, rax	       310	worktree.c	FUNCTION_8	CALL_54
0x1225	      0xe800000000	                          call 0x400126a	       310	worktree.c	FUNCTION_8	CALL_54
0x122a	    0x898520feffff	            mov dword [rbp - 0x1e0], eax	       310	worktree.c	FUNCTION_8	CALL_54
0x1230	    0x83bd20feffff	              cmp dword [rbp - 0x1e0], 0	       311	worktree.c	FUNCTION_8	IF_10
0x1237	     0xf85bf000000	                           jne 0x400133c	       311	worktree.c	FUNCTION_8	IF_10
0x123d	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	       314	worktree.c	FUNCTION_8	IF_11
0x1244	          0x8b4008	                mov eax, dword [rax + 8]	       314	worktree.c	FUNCTION_8	IF_11
0x1247	            0x85c0	                           test eax, eax	       314	worktree.c	FUNCTION_8	IF_11
0x1249	            0x7471	                            je 0x40012fc	       314	worktree.c	FUNCTION_8	IF_11
0x124b	    0x48c785d0feff	              mov qword [rbp - 0x130], 0	       315	worktree.c	FUNCTION_8	IF_11
0x1256	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       316	worktree.c	FUNCTION_8	IF_11	CALL_55
0x125d	        0x4883c008	                              add rax, 8	       316	worktree.c	FUNCTION_8	IF_11	CALL_55
0x1261	          0x4889c7	                            mov rdi, rax	       316	worktree.c	FUNCTION_8	IF_11	CALL_55
0x1264	      0xe800000000	                          call 0x40012a9	       316	worktree.c	FUNCTION_8	IF_11	CALL_55
0x1269	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       317	worktree.c	FUNCTION_8	IF_11	CALL_56
0x1270	        0x4883c008	                              add rax, 8	       317	worktree.c	FUNCTION_8	IF_11	CALL_56
0x1274	      0xb900000000	                              mov ecx, 0	       317	worktree.c	FUNCTION_8	IF_11	CALL_56
0x1279	      0xba00000000	                              mov edx, 0	       317	worktree.c	FUNCTION_8	IF_11	CALL_56
0x127e	      0xbe00000000	                              mov esi, 0	       317	worktree.c	FUNCTION_8	IF_11	CALL_56
0x1283	          0x4889c7	                            mov rdi, rax	       317	worktree.c	FUNCTION_8	IF_11	CALL_56
0x1286	      0xb800000000	                              mov eax, 0	       317	worktree.c	FUNCTION_8	IF_11	CALL_56
0x128b	      0xe800000000	                          call 0x40012d0	       317	worktree.c	FUNCTION_8	IF_11	CALL_56
0x1290	    0x488b8540feff	            mov rax, qword [rbp - 0x1c0]	       318	worktree.c	FUNCTION_8	IF_11
0x1297	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	       318	worktree.c	FUNCTION_8	IF_11
0x129e	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       319	worktree.c	FUNCTION_8	IF_11	CALL_57
0x12a5	          0x4889c7	                            mov rdi, rax	       319	worktree.c	FUNCTION_8	IF_11	CALL_57
0x12a8	      0xe800000000	                          call 0x40012ed	       319	worktree.c	FUNCTION_8	IF_11	CALL_57
0x12ad	    0x898520feffff	            mov dword [rbp - 0x1e0], eax	       319	worktree.c	FUNCTION_8	IF_11	CALL_57
0x12b3	    0x83bd20feffff	              cmp dword [rbp - 0x1e0], 0	       320	worktree.c	FUNCTION_8	IF_11	IF_12
0x12ba	            0x7543	                           jne 0x400133f	       320	worktree.c	FUNCTION_8	IF_11	IF_12
0x12bc	    0xc70500000000	               mov dword [0x04001306], 0	       324	worktree.c	FUNCTION_8
0x12c6	    0x488b05000000	            mov rax, qword [0x0400130d] 	       325	worktree.c	FUNCTION_8	CALL_58
0x12cd	          0x4889c7	                            mov rdi, rax	       325	worktree.c	FUNCTION_8	CALL_58
0x12d0	      0xe800000000	                          call 0x4001315	       325	worktree.c	FUNCTION_8	CALL_58
0x12d5	    0x48c705000000	               mov qword [0x04001320], 0	       325	worktree.c	FUNCTION_8	CALL_58
0x12e0	    0x488b05000000	            mov rax, qword [0x04001327] 	       326	worktree.c	FUNCTION_8	CALL_59
0x12e7	          0x4889c7	                            mov rdi, rax	       326	worktree.c	FUNCTION_8	CALL_59
0x12ea	      0xe800000000	                          call 0x400132f	       326	worktree.c	FUNCTION_8	CALL_59
0x12ef	    0x48c705000000	               mov qword [0x0400133a], 0	       326	worktree.c	FUNCTION_8	CALL_59
0x12fa	            0xeb04	                           jmp 0x4001340	       326	worktree.c	FUNCTION_8	CALL_59
0x12fc	              0x90	                                     nop	       312	worktree.c	FUNCTION_8	IF_10
0x12fd	            0xeb01	                           jmp 0x4001340	       312	worktree.c	FUNCTION_8	IF_10
0x12ff	              0x90	                                     nop	       321	worktree.c	FUNCTION_8	IF_11	IF_12
0x1300	    0x83bd20feffff	              cmp dword [rbp - 0x1e0], 0	       329	worktree.c	FUNCTION_8	IF_13
0x1307	            0x750e	                           jne 0x4001357	       329	worktree.c	FUNCTION_8	IF_13
0x1309	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	       329	worktree.c	FUNCTION_8	IF_13
0x1310	          0x8b400c	              mov eax, dword [rax + 0xc]	       329	worktree.c	FUNCTION_8	IF_13
0x1313	            0x85c0	                           test eax, eax	       329	worktree.c	FUNCTION_8	IF_13
0x1315	            0x7543	                           jne 0x400139a	       329	worktree.c	FUNCTION_8	IF_13
0x1317	    0x488d8590feff	                  lea rax, [rbp - 0x170]	       330	worktree.c	FUNCTION_8	IF_13	CALL_60
0x131e	      0xbe00000000	                              mov esi, 0	       330	worktree.c	FUNCTION_8	IF_13	CALL_60
0x1323	          0x4889c7	                            mov rdi, rax	       330	worktree.c	FUNCTION_8	IF_13	CALL_60
0x1326	      0xe845edffff	                  call sym.strbuf_setlen	       330	worktree.c	FUNCTION_8	IF_13	CALL_60
0x132b	    0x488b9580feff	            mov rdx, qword [rbp - 0x180]	       331	worktree.c	FUNCTION_8	IF_13	CALL_61
0x1332	    0x488d8590feff	                  lea rax, [rbp - 0x170]	       331	worktree.c	FUNCTION_8	IF_13	CALL_61
0x1339	      0xbe00000000	                              mov esi, 0	       331	worktree.c	FUNCTION_8	IF_13	CALL_61
0x133e	          0x4889c7	                            mov rdi, rax	       331	worktree.c	FUNCTION_8	IF_13	CALL_61
0x1341	      0xb800000000	                              mov eax, 0	       331	worktree.c	FUNCTION_8	IF_13	CALL_61
0x1346	      0xe800000000	                          call 0x400138b	       331	worktree.c	FUNCTION_8	IF_13	CALL_61
0x134b	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       332	worktree.c	FUNCTION_8	IF_13	CALL_62
0x1352	          0x4889c7	                            mov rdi, rax	       332	worktree.c	FUNCTION_8	IF_13	CALL_62
0x1355	      0xe800000000	                          call 0x400139a	       332	worktree.c	FUNCTION_8	IF_13	CALL_62
0x135a	    0x83bd20feffff	              cmp dword [rbp - 0x1e0], 0	       339	worktree.c	FUNCTION_8	IF_14
0x1361	     0xf851d010000	                           jne 0x40014c4	       339	worktree.c	FUNCTION_8	IF_14
0x1367	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	       339	worktree.c	FUNCTION_8	IF_14
0x136e	          0x8b4008	                mov eax, dword [rax + 8]	       339	worktree.c	FUNCTION_8	IF_14
0x1371	            0x85c0	                           test eax, eax	       339	worktree.c	FUNCTION_8	IF_14
0x1373	     0xf840b010000	                            je 0x40014c4	       339	worktree.c	FUNCTION_8	IF_14
0x1379	      0xbf00000000	                              mov edi, 0	       340	worktree.c	FUNCTION_8	IF_14	CALL_63
0x137e	      0xe800000000	                          call 0x40013c3	       340	worktree.c	FUNCTION_8	IF_14	CALL_63
0x1383	    0x48898538feff	            mov qword [rbp - 0x1c8], rax	       340	worktree.c	FUNCTION_8	IF_14	CALL_63
0x138a	    0x4883bd38feff	              cmp qword [rbp - 0x1c8], 0	       341	worktree.c	FUNCTION_8	IF_14	IF_15
0x1392	     0xf84ec000000	                            je 0x40014c4	       341	worktree.c	FUNCTION_8	IF_14	IF_15
0x1398	    0x48c78530ffff	               mov qword [rbp - 0xd0], 0	       342	worktree.c	FUNCTION_8	IF_14	IF_15
0x13a3	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	       342	worktree.c	FUNCTION_8	IF_14	IF_15
0x13ae	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	       342	worktree.c	FUNCTION_8	IF_14	IF_15
0x13b9	     0xfb68518ffff	            movzx eax, byte [rbp - 0xe8]	       343	worktree.c	FUNCTION_8	IF_14	IF_15
0x13c0	          0x83e0f7	                     and eax, 0xfffffff7	       343	worktree.c	FUNCTION_8	IF_14	IF_15
0x13c3	    0x888518ffffff	               mov byte [rbp - 0xe8], al	       343	worktree.c	FUNCTION_8	IF_14	IF_15
0x13c9	     0xfb68518ffff	            movzx eax, byte [rbp - 0xe8]	       344	worktree.c	FUNCTION_8	IF_14	IF_15
0x13d0	          0x83c801	                               or eax, 1	       344	worktree.c	FUNCTION_8	IF_14	IF_15
0x13d3	    0x888518ffffff	               mov byte [rbp - 0xe8], al	       344	worktree.c	FUNCTION_8	IF_14	IF_15
0x13d9	     0xfb68518ffff	            movzx eax, byte [rbp - 0xe8]	       345	worktree.c	FUNCTION_8	IF_14	IF_15
0x13e0	          0x83c820	                            or eax, 0x20	       345	worktree.c	FUNCTION_8	IF_14	IF_15
0x13e3	    0x888518ffffff	               mov byte [rbp - 0xe8], al	       345	worktree.c	FUNCTION_8	IF_14	IF_15
0x13e9	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	       346	worktree.c	FUNCTION_8	IF_14	IF_15
0x13f0	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	       346	worktree.c	FUNCTION_8	IF_14	IF_15
0x13f7	    0x488d8530ffff	                   lea rax, [rbp - 0xd0]	       347	worktree.c	FUNCTION_8	IF_14	IF_15
0x13fe	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	       347	worktree.c	FUNCTION_8	IF_14	IF_15
0x1405	    0x48c785d0feff	              mov qword [rbp - 0x130], 0	       348	worktree.c	FUNCTION_8	IF_14	IF_15
0x1410	    0x488b8528feff	            mov rax, qword [rbp - 0x1d8]	       351	worktree.c	FUNCTION_8	IF_14	IF_15	CALL_67
0x1417	        0x4883c004	                              add rax, 4	       351	worktree.c	FUNCTION_8	IF_14	IF_15	CALL_67
0x141b	          0x4889c7	                            mov rdi, rax	       349	worktree.c	FUNCTION_8	IF_14	IF_15	CALL_65
0x141e	      0xe800000000	                          call 0x4001463	       349	worktree.c	FUNCTION_8	IF_14	IF_15	CALL_65
0x1423	          0x4989c4	                            mov r12, rax	       349	worktree.c	FUNCTION_8	IF_14	IF_15	CALL_65
0x1426	      0xbf00000000	                              mov edi, 0	       349	worktree.c	FUNCTION_8	IF_14	IF_15	CALL_65
0x142b	      0xe800000000	                          call 0x4001470	       349	worktree.c	FUNCTION_8	IF_14	IF_15	CALL_65
0x1430	          0x4889c3	                            mov rbx, rax	       349	worktree.c	FUNCTION_8	IF_14	IF_15	CALL_65
0x1433	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	       349	worktree.c	FUNCTION_8	IF_14	IF_15	CALL_65
0x143a	          0x4889c7	                            mov rdi, rax	       349	worktree.c	FUNCTION_8	IF_14	IF_15	CALL_65
0x143d	      0xe800000000	                          call 0x4001482	       349	worktree.c	FUNCTION_8	IF_14	IF_15	CALL_65
0x1442	          0x4889c6	                            mov rsi, rax	       349	worktree.c	FUNCTION_8	IF_14	IF_15	CALL_65
0x1445	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       349	worktree.c	FUNCTION_8	IF_14	IF_15	CALL_65
0x144c	        0x4883c008	                              add rax, 8	       349	worktree.c	FUNCTION_8	IF_14	IF_15	CALL_65
0x1450	    0x41b900000000	                              mov r9d, 0	       349	worktree.c	FUNCTION_8	IF_14	IF_15	CALL_65
0x1456	    0x41b800000000	                              mov r8d, 0	       349	worktree.c	FUNCTION_8	IF_14	IF_15	CALL_65
0x145c	          0x4c89e1	                            mov rcx, r12	       349	worktree.c	FUNCTION_8	IF_14	IF_15	CALL_65
0x145f	          0x4889da	                            mov rdx, rbx	       349	worktree.c	FUNCTION_8	IF_14	IF_15	CALL_65
0x1462	          0x4889c7	                            mov rdi, rax	       349	worktree.c	FUNCTION_8	IF_14	IF_15	CALL_65
0x1465	      0xb800000000	                              mov eax, 0	       349	worktree.c	FUNCTION_8	IF_14	IF_15	CALL_65
0x146a	      0xe800000000	                          call 0x40014af	       349	worktree.c	FUNCTION_8	IF_14	IF_15	CALL_65
0x146f	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       353	worktree.c	FUNCTION_8	IF_14	IF_15	CALL_68
0x1476	          0x4889c7	                            mov rdi, rax	       353	worktree.c	FUNCTION_8	IF_14	IF_15	CALL_68
0x1479	      0xe800000000	                          call 0x40014be	       353	worktree.c	FUNCTION_8	IF_14	IF_15	CALL_68
0x147e	    0x898520feffff	            mov dword [rbp - 0x1e0], eax	       353	worktree.c	FUNCTION_8	IF_14	IF_15	CALL_68
0x1484	    0x488d8540feff	                  lea rax, [rbp - 0x1c0]	       357	worktree.c	FUNCTION_8	CALL_69
0x148b	          0x4889c7	                            mov rdi, rax	       357	worktree.c	FUNCTION_8	CALL_69
0x148e	      0xe800000000	                          call 0x40014d3	       357	worktree.c	FUNCTION_8	CALL_69
0x1493	    0x488d8590feff	                  lea rax, [rbp - 0x170]	       358	worktree.c	FUNCTION_8	CALL_70
0x149a	          0x4889c7	                            mov rdi, rax	       358	worktree.c	FUNCTION_8	CALL_70
0x149d	      0xe800000000	                          call 0x40014e2	       358	worktree.c	FUNCTION_8	CALL_70
0x14a2	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	       359	worktree.c	FUNCTION_8	CALL_71
0x14a9	          0x4889c7	                            mov rdi, rax	       359	worktree.c	FUNCTION_8	CALL_71
0x14ac	      0xe800000000	                          call 0x40014f1	       359	worktree.c	FUNCTION_8	CALL_71
0x14b1	    0x488d8570feff	                  lea rax, [rbp - 0x190]	       360	worktree.c	FUNCTION_8	CALL_72
0x14b8	          0x4889c7	                            mov rdi, rax	       360	worktree.c	FUNCTION_8	CALL_72
0x14bb	      0xe800000000	                          call 0x4001500	       360	worktree.c	FUNCTION_8	CALL_72
0x14c0	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	       361	worktree.c	FUNCTION_8	CALL_73
0x14c7	          0x4889c7	                            mov rdi, rax	       361	worktree.c	FUNCTION_8	CALL_73
0x14ca	      0xe800000000	                          call 0x400150f	       361	worktree.c	FUNCTION_8	CALL_73
0x14cf	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	       362	worktree.c	FUNCTION_8
0x14d5	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       363	worktree.c	FUNCTION_8
0x14d9	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       363	worktree.c	FUNCTION_8
0x14e2	            0x7405	                            je 0x4001529	       363	worktree.c	FUNCTION_8
0x14e4	      0xe800000000	                          call 0x4001529	       363	worktree.c	FUNCTION_8
0x14e9	    0x4881c4000200	                          add rsp, 0x200	       363	worktree.c	FUNCTION_8
0x14f0	              0x5b	                                 pop rbx	       363	worktree.c	FUNCTION_8
0x14f1	            0x415c	                                 pop r12	       363	worktree.c	FUNCTION_8
0x14f3	              0x5d	                                 pop rbp	       363	worktree.c	FUNCTION_8
0x14f4	              0xc3	                                     ret	       363	worktree.c	FUNCTION_8
prune	functions,0:CALL,10:ELSE,0:FOR,0:IF,1:WHILE,0:DO,0:SWITCH,0	57
0x842	              0x55	                                push rbp	       149	worktree.c	FUNCTION_4
0x843	          0x4889e5	                            mov rbp, rsp	       149	worktree.c	FUNCTION_4
0x846	    0x4881ec300100	                          sub rsp, 0x130	       149	worktree.c	FUNCTION_4
0x84d	    0x89bdecfeffff	            mov dword [rbp - 0x114], edi	       149	worktree.c	FUNCTION_4
0x853	    0x4889b5e0feff	            mov qword [rbp - 0x120], rsi	       149	worktree.c	FUNCTION_4
0x85a	    0x488995d8feff	            mov qword [rbp - 0x128], rdx	       149	worktree.c	FUNCTION_4
0x861	    0x64488b042528	                mov rax, qword fs:[0x28]	       149	worktree.c	FUNCTION_4
0x86a	        0x488945f8	                mov qword [rbp - 8], rax	       149	worktree.c	FUNCTION_4
0x86e	            0x31c0	                            xor eax, eax	       149	worktree.c	FUNCTION_4
0x870	    0x488d95f0feff	                  lea rdx, [rbp - 0x110]	       150	worktree.c	FUNCTION_4
0x877	      0xb800000000	                              mov eax, 0	       150	worktree.c	FUNCTION_4
0x87c	      0xb920000000	                           mov ecx, 0x20	       150	worktree.c	FUNCTION_4
0x881	          0x4889d7	                            mov rdi, rdx	       150	worktree.c	FUNCTION_4
0x884	          0xf348ab	              rep stosq qword [rdi], rax	       150	worktree.c	FUNCTION_4
0x887	    0xc785f0feffff	              mov dword [rbp - 0x110], 7	       150	worktree.c	FUNCTION_4
0x891	    0xc785f4feffff	          mov dword [rbp - 0x10c], 0x6e 	       150	worktree.c	FUNCTION_4
0x89b	    0x48c785f8feff	              mov qword [rbp - 0x108], 0	       150	worktree.c	FUNCTION_4
0x8a6	    0x48c78500ffff	              mov qword [rbp - 0x100], 0	       150	worktree.c	FUNCTION_4
0x8b1	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	       150	worktree.c	FUNCTION_4
0x8bc	    0xc78518ffffff	               mov dword [rbp - 0xe8], 2	       150	worktree.c	FUNCTION_4
0x8c6	    0x48c78528ffff	               mov qword [rbp - 0xd8], 1	       150	worktree.c	FUNCTION_4
0x8d1	    0xc78530ffffff	               mov dword [rbp - 0xd0], 6	       150	worktree.c	FUNCTION_4
0x8db	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x76 	       150	worktree.c	FUNCTION_4
0x8e5	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	       150	worktree.c	FUNCTION_4
0x8f0	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	       150	worktree.c	FUNCTION_4
0x8fb	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	       150	worktree.c	FUNCTION_4
0x906	    0xc78558ffffff	               mov dword [rbp - 0xa8], 2	       150	worktree.c	FUNCTION_4
0x910	    0xc78570ffffff	            mov dword [rbp - 0x90], 0xc 	       150	worktree.c	FUNCTION_4
0x91a	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	       150	worktree.c	FUNCTION_4
0x925	    0x48c745800000	               mov qword [rbp - 0x80], 0	       150	worktree.c	FUNCTION_4
0x92d	    0x48c745880000	               mov qword [rbp - 0x78], 0	       150	worktree.c	FUNCTION_4
0x935	    0x48c745900000	               mov qword [rbp - 0x70], 0	       150	worktree.c	FUNCTION_4
0x93d	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       150	worktree.c	FUNCTION_4
0x945	    0x48c705000000	mov qword [0x04000990], 0xffffffffffffffff 	       158	worktree.c	FUNCTION_4
0x950	    0x488d8df0feff	                  lea rcx, [rbp - 0x110]	       159	worktree.c	FUNCTION_4	CALL_8
0x957	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	       159	worktree.c	FUNCTION_4	CALL_8
0x95e	    0x488bb5e0feff	            mov rsi, qword [rbp - 0x120]	       159	worktree.c	FUNCTION_4	CALL_8
0x965	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	       159	worktree.c	FUNCTION_4	CALL_8
0x96b	    0x41b900000000	                              mov r9d, 0	       159	worktree.c	FUNCTION_4	CALL_8
0x971	    0x41b800000000	                              mov r8d, 0	       159	worktree.c	FUNCTION_4	CALL_8
0x977	            0x89c7	                            mov edi, eax	       159	worktree.c	FUNCTION_4	CALL_8
0x979	      0xe800000000	                          call 0x40009be	       159	worktree.c	FUNCTION_4	CALL_8
0x97e	    0x8985ecfeffff	            mov dword [rbp - 0x114], eax	       159	worktree.c	FUNCTION_4	CALL_8
0x984	    0x83bdecfeffff	              cmp dword [rbp - 0x114], 0	       160	worktree.c	FUNCTION_4	IF_1
0x98b	            0x7414	                            je 0x40009e1	       160	worktree.c	FUNCTION_4	IF_1
0x98d	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	       161	worktree.c	FUNCTION_4	CALL_9
0x994	          0x4889c6	                            mov rsi, rax	       161	worktree.c	FUNCTION_4	CALL_9
0x997	      0xbf00000000	                              mov edi, 0	       161	worktree.c	FUNCTION_4	CALL_9
0x99c	      0xe800000000	                          call 0x40009e1	       161	worktree.c	FUNCTION_4	CALL_9
0x9a1	      0xe8b9fcffff	                call sym.prune_worktrees	       162	worktree.c	FUNCTION_4	CALL_10
0x9a6	      0xb800000000	                              mov eax, 0	       163	worktree.c	FUNCTION_4
0x9ab	        0x488b4df8	                mov rcx, qword [rbp - 8]	       164	worktree.c	FUNCTION_4
0x9af	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       164	worktree.c	FUNCTION_4
0x9b8	            0x7405	                            je 0x40009ff	       164	worktree.c	FUNCTION_4
0x9ba	      0xe800000000	                          call 0x40009ff	       164	worktree.c	FUNCTION_4
0x9bf	              0xc9	                                   leave	       164	worktree.c	FUNCTION_4
0x9c0	              0xc3	                                     ret	       164	worktree.c	FUNCTION_4
unlock_worktree	functions,0:CALL,16:ELSE,0:FOR,0:IF,4:WHILE,0:DO,0:SWITCH,0	95
0x25b8	              0x55	                                push rbp	       642	worktree.c	FUNCTION_17
0x25b9	          0x4889e5	                            mov rbp, rsp	       642	worktree.c	FUNCTION_17
0x25bc	              0x53	                                push rbx	       642	worktree.c	FUNCTION_17
0x25bd	    0x4881ec980000	                           sub rsp, 0x98	       642	worktree.c	FUNCTION_17
0x25c4	    0x89bd7cffffff	             mov dword [rbp - 0x84], edi	       642	worktree.c	FUNCTION_17
0x25ca	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	       642	worktree.c	FUNCTION_17
0x25d1	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	       642	worktree.c	FUNCTION_17
0x25d8	    0x64488b042528	                mov rax, qword fs:[0x28]	       642	worktree.c	FUNCTION_17
0x25e1	        0x488945e8	             mov qword [rbp - 0x18], rax	       642	worktree.c	FUNCTION_17
0x25e5	            0x31c0	                            xor eax, eax	       642	worktree.c	FUNCTION_17
0x25e7	        0x488d55a0	                   lea rdx, [rbp - 0x60]	       643	worktree.c	FUNCTION_17
0x25eb	      0xb800000000	                              mov eax, 0	       643	worktree.c	FUNCTION_17
0x25f0	      0xb908000000	                              mov ecx, 8	       643	worktree.c	FUNCTION_17
0x25f5	          0x4889d7	                            mov rdi, rdx	       643	worktree.c	FUNCTION_17
0x25f8	          0xf348ab	              rep stosq qword [rdi], rax	       643	worktree.c	FUNCTION_17
0x25fb	        0x488d4da0	                   lea rcx, [rbp - 0x60]	       649	worktree.c	FUNCTION_17	CALL_2
0x25ff	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       649	worktree.c	FUNCTION_17	CALL_2
0x2606	    0x488bb570ffff	             mov rsi, qword [rbp - 0x90]	       649	worktree.c	FUNCTION_17	CALL_2
0x260d	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	       649	worktree.c	FUNCTION_17	CALL_2
0x2613	    0x41b900000000	                              mov r9d, 0	       649	worktree.c	FUNCTION_17	CALL_2
0x2619	    0x41b800000000	                              mov r8d, 0	       649	worktree.c	FUNCTION_17	CALL_2
0x261f	            0x89c7	                            mov edi, eax	       649	worktree.c	FUNCTION_17	CALL_2
0x2621	      0xe800000000	                          call 0x4002666	       649	worktree.c	FUNCTION_17	CALL_2
0x2626	    0x89857cffffff	             mov dword [rbp - 0x84], eax	       649	worktree.c	FUNCTION_17	CALL_2
0x262c	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 1	       650	worktree.c	FUNCTION_17	IF_1
0x2633	            0x7411	                            je 0x4002686	       650	worktree.c	FUNCTION_17	IF_1
0x2635	        0x488d45a0	                   lea rax, [rbp - 0x60]	       651	worktree.c	FUNCTION_17	CALL_3
0x2639	          0x4889c6	                            mov rsi, rax	       651	worktree.c	FUNCTION_17	CALL_3
0x263c	      0xbf00000000	                              mov edi, 0	       651	worktree.c	FUNCTION_17	CALL_3
0x2641	      0xe800000000	                          call 0x4002686	       651	worktree.c	FUNCTION_17	CALL_3
0x2646	      0xbf00000000	                              mov edi, 0	       653	worktree.c	FUNCTION_17	CALL_4
0x264b	      0xe800000000	                          call 0x4002690	       653	worktree.c	FUNCTION_17	CALL_4
0x2650	        0x48894590	             mov qword [rbp - 0x70], rax	       653	worktree.c	FUNCTION_17	CALL_4
0x2654	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       654	worktree.c	FUNCTION_17	CALL_5
0x265b	          0x488b10	                    mov rdx, qword [rax]	       654	worktree.c	FUNCTION_17	CALL_5
0x265e	    0x488b8d68ffff	             mov rcx, qword [rbp - 0x98]	       654	worktree.c	FUNCTION_17	CALL_5
0x2665	        0x488b4590	             mov rax, qword [rbp - 0x70]	       654	worktree.c	FUNCTION_17	CALL_5
0x2669	          0x4889ce	                            mov rsi, rcx	       654	worktree.c	FUNCTION_17	CALL_5
0x266c	          0x4889c7	                            mov rdi, rax	       654	worktree.c	FUNCTION_17	CALL_5
0x266f	      0xe800000000	                          call 0x40026b4	       654	worktree.c	FUNCTION_17	CALL_5
0x2674	        0x48894598	             mov qword [rbp - 0x68], rax	       654	worktree.c	FUNCTION_17	CALL_5
0x2678	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       655	worktree.c	FUNCTION_17	IF_2
0x267d	            0x7524	                           jne 0x40026e3	       655	worktree.c	FUNCTION_17	IF_2
0x267f	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       656	worktree.c	FUNCTION_17	CALL_7
0x2686	          0x488b18	                    mov rbx, qword [rax]	       656	worktree.c	FUNCTION_17	CALL_7
0x2689	      0xbf00000000	                              mov edi, 0	       656	worktree.c	FUNCTION_17	CALL_7
0x268e	      0xe8acdaffff	                               call sym.	       656	worktree.c	FUNCTION_17	CALL_7
0x2693	          0x4889de	                            mov rsi, rbx	       656	worktree.c	FUNCTION_17	CALL_7
0x2696	          0x4889c7	                            mov rdi, rax	       656	worktree.c	FUNCTION_17	CALL_7
0x2699	      0xb800000000	                              mov eax, 0	       656	worktree.c	FUNCTION_17	CALL_7
0x269e	      0xe800000000	                          call 0x40026e3	       656	worktree.c	FUNCTION_17	CALL_7
0x26a3	        0x488b4598	             mov rax, qword [rbp - 0x68]	       657	worktree.c	FUNCTION_17	IF_3	CALL_8
0x26a7	          0x4889c7	                            mov rdi, rax	       657	worktree.c	FUNCTION_17	IF_3	CALL_8
0x26aa	      0xe800000000	                          call 0x40026ef	       657	worktree.c	FUNCTION_17	IF_3	CALL_8
0x26af	            0x85c0	                           test eax, eax	       657	worktree.c	FUNCTION_17	IF_3	CALL_8
0x26b1	            0x7417	                            je 0x400270a	       657	worktree.c	FUNCTION_17	IF_3	CALL_8
0x26b3	      0xbf00000000	                              mov edi, 0	       658	worktree.c	FUNCTION_17	CALL_10
0x26b8	      0xe882daffff	                               call sym.	       658	worktree.c	FUNCTION_17	CALL_10
0x26bd	          0x4889c7	                            mov rdi, rax	       658	worktree.c	FUNCTION_17	CALL_10
0x26c0	      0xb800000000	                              mov eax, 0	       658	worktree.c	FUNCTION_17	CALL_10
0x26c5	      0xe800000000	                          call 0x400270a	       658	worktree.c	FUNCTION_17	CALL_10
0x26ca	        0x488b4598	             mov rax, qword [rbp - 0x68]	       659	worktree.c	FUNCTION_17	IF_4	CALL_11
0x26ce	          0x4889c7	                            mov rdi, rax	       659	worktree.c	FUNCTION_17	IF_4	CALL_11
0x26d1	      0xe800000000	                          call 0x4002716	       659	worktree.c	FUNCTION_17	IF_4	CALL_11
0x26d6	          0x4885c0	                           test rax, rax	       659	worktree.c	FUNCTION_17	IF_4	CALL_11
0x26d9	            0x7524	                           jne 0x400273f	       659	worktree.c	FUNCTION_17	IF_4	CALL_11
0x26db	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       660	worktree.c	FUNCTION_17	CALL_13
0x26e2	          0x488b18	                    mov rbx, qword [rax]	       660	worktree.c	FUNCTION_17	CALL_13
0x26e5	      0xbf00000000	                              mov edi, 0	       660	worktree.c	FUNCTION_17	CALL_13
0x26ea	      0xe850daffff	                               call sym.	       660	worktree.c	FUNCTION_17	CALL_13
0x26ef	          0x4889de	                            mov rsi, rbx	       660	worktree.c	FUNCTION_17	CALL_13
0x26f2	          0x4889c7	                            mov rdi, rax	       660	worktree.c	FUNCTION_17	CALL_13
0x26f5	      0xb800000000	                              mov eax, 0	       660	worktree.c	FUNCTION_17	CALL_13
0x26fa	      0xe800000000	                          call 0x400273f	       660	worktree.c	FUNCTION_17	CALL_13
0x26ff	        0x488b4598	             mov rax, qword [rbp - 0x68]	       661	worktree.c	FUNCTION_17	CALL_15
0x2703	        0x488b4008	                mov rax, qword [rax + 8]	       661	worktree.c	FUNCTION_17	CALL_15
0x2707	          0x4889c6	                            mov rsi, rax	       661	worktree.c	FUNCTION_17	CALL_15
0x270a	      0xbf00000000	                              mov edi, 0	       661	worktree.c	FUNCTION_17	CALL_15
0x270f	      0xb800000000	                              mov eax, 0	       661	worktree.c	FUNCTION_17	CALL_15
0x2714	      0xe800000000	                          call 0x4002759	       661	worktree.c	FUNCTION_17	CALL_15
0x2719	          0x4889c7	                            mov rdi, rax	       661	worktree.c	FUNCTION_17	CALL_15
0x271c	      0xe800000000	                          call 0x4002761	       661	worktree.c	FUNCTION_17	CALL_15
0x2721	          0x89458c	             mov dword [rbp - 0x74], eax	       661	worktree.c	FUNCTION_17	CALL_15
0x2724	        0x488b4590	             mov rax, qword [rbp - 0x70]	       662	worktree.c	FUNCTION_17	CALL_16
0x2728	          0x4889c7	                            mov rdi, rax	       662	worktree.c	FUNCTION_17	CALL_16
0x272b	      0xe800000000	                          call 0x4002770	       662	worktree.c	FUNCTION_17	CALL_16
0x2730	          0x8b458c	             mov eax, dword [rbp - 0x74]	       663	worktree.c	FUNCTION_17
0x2733	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       664	worktree.c	FUNCTION_17
0x2737	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       664	worktree.c	FUNCTION_17
0x2740	            0x7405	                            je 0x4002787	       664	worktree.c	FUNCTION_17
0x2742	      0xe800000000	                          call 0x4002787	       664	worktree.c	FUNCTION_17
0x2747	    0x4881c4980000	                           add rsp, 0x98	       664	worktree.c	FUNCTION_17
0x274e	              0x5b	                                 pop rbx	       664	worktree.c	FUNCTION_17
0x274f	              0x5d	                                 pop rbp	       664	worktree.c	FUNCTION_17
0x2750	              0xc3	                                     ret	       664	worktree.c	FUNCTION_17
prune_worktree	functions,0:CALL,37:ELSE,1:FOR,0:IF,9:WHILE,1:DO,0:SWITCH,0	239
0x21b	              0x55	                                push rbp	        50	worktree.c	FUNCTION_2
0x21c	          0x4889e5	                            mov rbp, rsp	        50	worktree.c	FUNCTION_2
0x21f	              0x53	                                push rbx	        50	worktree.c	FUNCTION_2
0x220	    0x4881ecd80000	                           sub rsp, 0xd8	        50	worktree.c	FUNCTION_2
0x227	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	        50	worktree.c	FUNCTION_2
0x22e	    0x4889b520ffff	             mov qword [rbp - 0xe0], rsi	        50	worktree.c	FUNCTION_2
0x235	    0x64488b042528	                mov rax, qword fs:[0x28]	        50	worktree.c	FUNCTION_2
0x23e	        0x488945e8	             mov qword [rbp - 0x18], rax	        50	worktree.c	FUNCTION_2
0x242	            0x31c0	                            xor eax, eax	        50	worktree.c	FUNCTION_2
0x244	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	        57	worktree.c	FUNCTION_2	IF_1	CALL_2
0x24b	          0x4889c6	                            mov rsi, rax	        57	worktree.c	FUNCTION_2	IF_1	CALL_2
0x24e	      0xbf00000000	                              mov edi, 0	        57	worktree.c	FUNCTION_2	IF_1	CALL_2
0x253	      0xb800000000	                              mov eax, 0	        57	worktree.c	FUNCTION_2	IF_1	CALL_2
0x258	      0xe800000000	                          call 0x400029d	        57	worktree.c	FUNCTION_2	IF_1	CALL_2
0x25d	          0x4889c7	                            mov rdi, rax	        57	worktree.c	FUNCTION_2	IF_1	CALL_2
0x260	      0xe800000000	                          call 0x40002a5	        57	worktree.c	FUNCTION_2	IF_1	CALL_2
0x265	            0x85c0	                           test eax, eax	        57	worktree.c	FUNCTION_2	IF_1	CALL_2
0x267	            0x7535	                           jne 0x40002de	        57	worktree.c	FUNCTION_2	IF_1	CALL_2
0x269	      0xbf00000000	                              mov edi, 0	        58	worktree.c	FUNCTION_2	IF_1	CALL_4
0x26e	      0xe8ccfeffff	                               call sym.	        58	worktree.c	FUNCTION_2	IF_1	CALL_4
0x273	          0x4889c1	                            mov rcx, rax	        58	worktree.c	FUNCTION_2	IF_1	CALL_4
0x276	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	        58	worktree.c	FUNCTION_2	IF_1	CALL_4
0x27d	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	        58	worktree.c	FUNCTION_2	IF_1	CALL_4
0x284	          0x4889ce	                            mov rsi, rcx	        58	worktree.c	FUNCTION_2	IF_1	CALL_4
0x287	          0x4889c7	                            mov rdi, rax	        58	worktree.c	FUNCTION_2	IF_1	CALL_4
0x28a	      0xb800000000	                              mov eax, 0	        58	worktree.c	FUNCTION_2	IF_1	CALL_4
0x28f	      0xe800000000	                          call 0x40002d4	        58	worktree.c	FUNCTION_2	IF_1	CALL_4
0x294	      0xb801000000	                              mov eax, 1	        59	worktree.c	FUNCTION_2	IF_1
0x299	      0xe9a3030000	                           jmp 0x4000681	        59	worktree.c	FUNCTION_2	IF_1
0x29e	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	        61	worktree.c	FUNCTION_2	IF_2	CALL_6
0x2a5	          0x4889c6	                            mov rsi, rax	        61	worktree.c	FUNCTION_2	IF_2	CALL_6
0x2a8	      0xbf00000000	                              mov edi, 0	        61	worktree.c	FUNCTION_2	IF_2	CALL_6
0x2ad	      0xb800000000	                              mov eax, 0	        61	worktree.c	FUNCTION_2	IF_2	CALL_6
0x2b2	      0xe800000000	                          call 0x40002f7	        61	worktree.c	FUNCTION_2	IF_2	CALL_6
0x2b7	          0x4889c7	                            mov rdi, rax	        61	worktree.c	FUNCTION_2	IF_2	CALL_6
0x2ba	      0xe800000000	                          call 0x40002ff	        61	worktree.c	FUNCTION_2	IF_2	CALL_6
0x2bf	            0x85c0	                           test eax, eax	        61	worktree.c	FUNCTION_2	IF_2	CALL_6
0x2c1	            0x740a	                            je 0x400030d	        61	worktree.c	FUNCTION_2	IF_2	CALL_6
0x2c3	      0xb800000000	                              mov eax, 0	        62	worktree.c	FUNCTION_2	IF_2
0x2c8	      0xe974030000	                           jmp 0x4000681	        62	worktree.c	FUNCTION_2	IF_2
0x2cd	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	        63	worktree.c	FUNCTION_2	IF_3	CALL_8
0x2d4	          0x4889c6	                            mov rsi, rax	        63	worktree.c	FUNCTION_2	IF_3	CALL_8
0x2d7	      0xbf00000000	                              mov edi, 0	        63	worktree.c	FUNCTION_2	IF_3	CALL_8
0x2dc	      0xb800000000	                              mov eax, 0	        63	worktree.c	FUNCTION_2	IF_3	CALL_8
0x2e1	      0xe800000000	                          call 0x4000326	        63	worktree.c	FUNCTION_2	IF_3	CALL_8
0x2e6	          0x4889c2	                            mov rdx, rax	        63	worktree.c	FUNCTION_2	IF_3	CALL_8
0x2e9	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	        63	worktree.c	FUNCTION_2	IF_3	CALL_8
0x2f0	          0x4889c6	                            mov rsi, rax	        63	worktree.c	FUNCTION_2	IF_3	CALL_8
0x2f3	          0x4889d7	                            mov rdi, rdx	        63	worktree.c	FUNCTION_2	IF_3	CALL_8
0x2f6	      0xe800000000	                          call 0x400033b	        63	worktree.c	FUNCTION_2	IF_3	CALL_8
0x2fb	            0x85c0	                           test eax, eax	        63	worktree.c	FUNCTION_2	IF_3	CALL_8
0x2fd	            0x7435	                            je 0x4000374	        63	worktree.c	FUNCTION_2	IF_3	CALL_8
0x2ff	      0xbf00000000	                              mov edi, 0	        64	worktree.c	FUNCTION_2	IF_3	CALL_10
0x304	      0xe836feffff	                               call sym.	        64	worktree.c	FUNCTION_2	IF_3	CALL_10
0x309	          0x4889c1	                            mov rcx, rax	        64	worktree.c	FUNCTION_2	IF_3	CALL_10
0x30c	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	        64	worktree.c	FUNCTION_2	IF_3	CALL_10
0x313	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	        64	worktree.c	FUNCTION_2	IF_3	CALL_10
0x31a	          0x4889ce	                            mov rsi, rcx	        64	worktree.c	FUNCTION_2	IF_3	CALL_10
0x31d	          0x4889c7	                            mov rdi, rax	        64	worktree.c	FUNCTION_2	IF_3	CALL_10
0x320	      0xb800000000	                              mov eax, 0	        64	worktree.c	FUNCTION_2	IF_3	CALL_10
0x325	      0xe800000000	                          call 0x400036a	        64	worktree.c	FUNCTION_2	IF_3	CALL_10
0x32a	      0xb801000000	                              mov eax, 1	        65	worktree.c	FUNCTION_2	IF_3
0x32f	      0xe90d030000	                           jmp 0x4000681	        65	worktree.c	FUNCTION_2	IF_3
0x334	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	        67	worktree.c	FUNCTION_2	CALL_12
0x33b	          0x4889c6	                            mov rsi, rax	        67	worktree.c	FUNCTION_2	CALL_12
0x33e	      0xbf00000000	                              mov edi, 0	        67	worktree.c	FUNCTION_2	CALL_12
0x343	      0xb800000000	                              mov eax, 0	        67	worktree.c	FUNCTION_2	CALL_12
0x348	      0xe800000000	                          call 0x400038d	        67	worktree.c	FUNCTION_2	CALL_12
0x34d	      0xbe00000000	                              mov esi, 0	        67	worktree.c	FUNCTION_2	CALL_12
0x352	          0x4889c7	                            mov rdi, rax	        67	worktree.c	FUNCTION_2	CALL_12
0x355	      0xb800000000	                              mov eax, 0	        67	worktree.c	FUNCTION_2	CALL_12
0x35a	      0xe800000000	                          call 0x400039f	        67	worktree.c	FUNCTION_2	CALL_12
0x35f	    0x898534ffffff	             mov dword [rbp - 0xcc], eax	        67	worktree.c	FUNCTION_2	CALL_12
0x365	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	        68	worktree.c	FUNCTION_2	IF_4
0x36c	            0x7946	                           jns 0x40003f4	        68	worktree.c	FUNCTION_2	IF_4
0x36e	      0xe800000000	                          call 0x40003b3	        70	worktree.c	FUNCTION_2	IF_4	CALL_15
0x373	            0x8b00	                    mov eax, dword [rax]	        69	worktree.c	FUNCTION_2	IF_4	CALL_14
0x375	            0x89c7	                            mov edi, eax	        69	worktree.c	FUNCTION_2	IF_4	CALL_14
0x377	      0xe800000000	                          call 0x40003bc	        69	worktree.c	FUNCTION_2	IF_4	CALL_14
0x37c	          0x4889c3	                            mov rbx, rax	        69	worktree.c	FUNCTION_2	IF_4	CALL_14
0x37f	      0xbf00000000	                              mov edi, 0	        69	worktree.c	FUNCTION_2	IF_4	CALL_14
0x384	      0xe8b6fdffff	                               call sym.	        69	worktree.c	FUNCTION_2	IF_4	CALL_14
0x389	          0x4889c6	                            mov rsi, rax	        69	worktree.c	FUNCTION_2	IF_4	CALL_14
0x38c	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	        69	worktree.c	FUNCTION_2	IF_4	CALL_14
0x393	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	        69	worktree.c	FUNCTION_2	IF_4	CALL_14
0x39a	          0x4889d9	                            mov rcx, rbx	        69	worktree.c	FUNCTION_2	IF_4	CALL_14
0x39d	          0x4889c7	                            mov rdi, rax	        69	worktree.c	FUNCTION_2	IF_4	CALL_14
0x3a0	      0xb800000000	                              mov eax, 0	        69	worktree.c	FUNCTION_2	IF_4	CALL_14
0x3a5	      0xe800000000	                          call 0x40003ea	        69	worktree.c	FUNCTION_2	IF_4	CALL_14
0x3aa	      0xb801000000	                              mov eax, 1	        71	worktree.c	FUNCTION_2	IF_4
0x3af	      0xe98d020000	                           jmp 0x4000681	        71	worktree.c	FUNCTION_2	IF_4
0x3b4	        0x488b4580	             mov rax, qword [rbp - 0x80]	        73	worktree.c	FUNCTION_2	CALL_16
0x3b8	          0x4889c7	                            mov rdi, rax	        73	worktree.c	FUNCTION_2	CALL_16
0x3bb	      0xe87dfcffff	                        call sym.xsize_t	        73	worktree.c	FUNCTION_2	CALL_16
0x3c0	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	        73	worktree.c	FUNCTION_2	CALL_16
0x3c7	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        74	worktree.c	FUNCTION_2	CALL_17
0x3ce	          0x4889c7	                            mov rdi, rax	        74	worktree.c	FUNCTION_2	CALL_17
0x3d1	      0xe800000000	                          call 0x4000416	        74	worktree.c	FUNCTION_2	CALL_17
0x3d6	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	        74	worktree.c	FUNCTION_2	CALL_17
0x3dd	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	        76	worktree.c	FUNCTION_2	CALL_18
0x3e4	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	        76	worktree.c	FUNCTION_2	CALL_18
0x3eb	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	        76	worktree.c	FUNCTION_2	CALL_18
0x3f1	          0x4889ce	                            mov rsi, rcx	        76	worktree.c	FUNCTION_2	CALL_18
0x3f4	            0x89c7	                            mov edi, eax	        76	worktree.c	FUNCTION_2	CALL_18
0x3f6	      0xe800000000	                          call 0x400043b	        76	worktree.c	FUNCTION_2	CALL_18
0x3fb	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	        76	worktree.c	FUNCTION_2	CALL_18
0x402	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	        77	worktree.c	FUNCTION_2	IF_5
0x40a	            0x7962	                           jns 0x40004ae	        77	worktree.c	FUNCTION_2	IF_5
0x40c	      0xe800000000	                          call 0x4000451	        79	worktree.c	FUNCTION_2	IF_5	CALL_21
0x411	            0x8b00	                    mov eax, dword [rax]	        78	worktree.c	FUNCTION_2	IF_5	CALL_20
0x413	            0x89c7	                            mov edi, eax	        78	worktree.c	FUNCTION_2	IF_5	CALL_20
0x415	      0xe800000000	                          call 0x400045a	        78	worktree.c	FUNCTION_2	IF_5	CALL_20
0x41a	          0x4889c3	                            mov rbx, rax	        78	worktree.c	FUNCTION_2	IF_5	CALL_20
0x41d	      0xbf00000000	                              mov edi, 0	        78	worktree.c	FUNCTION_2	IF_5	CALL_20
0x422	      0xe818fdffff	                               call sym.	        78	worktree.c	FUNCTION_2	IF_5	CALL_20
0x427	          0x4889c6	                            mov rsi, rax	        78	worktree.c	FUNCTION_2	IF_5	CALL_20
0x42a	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	        78	worktree.c	FUNCTION_2	IF_5	CALL_20
0x431	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	        78	worktree.c	FUNCTION_2	IF_5	CALL_20
0x438	          0x4889d9	                            mov rcx, rbx	        78	worktree.c	FUNCTION_2	IF_5	CALL_20
0x43b	          0x4889c7	                            mov rdi, rax	        78	worktree.c	FUNCTION_2	IF_5	CALL_20
0x43e	      0xb800000000	                              mov eax, 0	        78	worktree.c	FUNCTION_2	IF_5	CALL_20
0x443	      0xe800000000	                          call 0x4000488	        78	worktree.c	FUNCTION_2	IF_5	CALL_20
0x448	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	        80	worktree.c	FUNCTION_2	IF_5	CALL_22
0x44e	            0x89c7	                            mov edi, eax	        80	worktree.c	FUNCTION_2	IF_5	CALL_22
0x450	      0xe800000000	                          call 0x4000495	        80	worktree.c	FUNCTION_2	IF_5	CALL_22
0x455	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	        81	worktree.c	FUNCTION_2	IF_5	CALL_23
0x45c	          0x4889c7	                            mov rdi, rax	        81	worktree.c	FUNCTION_2	IF_5	CALL_23
0x45f	      0xe800000000	                          call 0x40004a4	        81	worktree.c	FUNCTION_2	IF_5	CALL_23
0x464	      0xb801000000	                              mov eax, 1	        82	worktree.c	FUNCTION_2	IF_5
0x469	      0xe9d3010000	                           jmp 0x4000681	        82	worktree.c	FUNCTION_2	IF_5
0x46e	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	        84	worktree.c	FUNCTION_2	CALL_24
0x474	            0x89c7	                            mov edi, eax	        84	worktree.c	FUNCTION_2	CALL_24
0x476	      0xe800000000	                          call 0x40004bb	        84	worktree.c	FUNCTION_2	CALL_24
0x47b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	        86	worktree.c	FUNCTION_2	IF_6
0x482	    0x483b8538ffff	             cmp rax, qword [rbp - 0xc8]	        86	worktree.c	FUNCTION_2	IF_6
0x489	            0x745a	                            je 0x4000525	        86	worktree.c	FUNCTION_2	IF_6
0x48b	    0x488b9d48ffff	             mov rbx, qword [rbp - 0xb8]	        87	worktree.c	FUNCTION_2	IF_6	CALL_25
0x492	      0xbf00000000	                              mov edi, 0	        87	worktree.c	FUNCTION_2	IF_6	CALL_25
0x497	      0xe8a3fcffff	                               call sym.	        87	worktree.c	FUNCTION_2	IF_6	CALL_25
0x49c	          0x4889c6	                            mov rsi, rax	        87	worktree.c	FUNCTION_2	IF_6	CALL_25
0x49f	    0x488b8d38ffff	             mov rcx, qword [rbp - 0xc8]	        87	worktree.c	FUNCTION_2	IF_6	CALL_25
0x4a6	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	        87	worktree.c	FUNCTION_2	IF_6	CALL_25
0x4ad	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	        87	worktree.c	FUNCTION_2	IF_6	CALL_25
0x4b4	          0x4989d8	                             mov r8, rbx	        87	worktree.c	FUNCTION_2	IF_6	CALL_25
0x4b7	          0x4889c7	                            mov rdi, rax	        87	worktree.c	FUNCTION_2	IF_6	CALL_25
0x4ba	      0xb800000000	                              mov eax, 0	        87	worktree.c	FUNCTION_2	IF_6	CALL_25
0x4bf	      0xe800000000	                          call 0x4000504	        87	worktree.c	FUNCTION_2	IF_6	CALL_25
0x4c4	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	        90	worktree.c	FUNCTION_2	IF_6	CALL_27
0x4cb	          0x4889c7	                            mov rdi, rax	        90	worktree.c	FUNCTION_2	IF_6	CALL_27
0x4ce	      0xe800000000	                          call 0x4000513	        90	worktree.c	FUNCTION_2	IF_6	CALL_27
0x4d3	      0xb801000000	                              mov eax, 1	        91	worktree.c	FUNCTION_2	IF_6
0x4d8	      0xe964010000	                           jmp 0x4000681	        91	worktree.c	FUNCTION_2	IF_6
0x4dd	    0x4883ad38ffff	               sub qword [rbp - 0xc8], 1	        94	worktree.c	FUNCTION_2	WHILE_1
0x4e5	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	        93	worktree.c	FUNCTION_2	WHILE_1
0x4ed	            0x7438	                            je 0x4000567	        93	worktree.c	FUNCTION_2	WHILE_1
0x4ef	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        93	worktree.c	FUNCTION_2	WHILE_1
0x4f6	        0x488d50ff	                      lea rdx, [rax - 1]	        93	worktree.c	FUNCTION_2	WHILE_1
0x4fa	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	        93	worktree.c	FUNCTION_2	WHILE_1
0x501	          0x4801d0	                            add rax, rdx	        93	worktree.c	FUNCTION_2	WHILE_1
0x504	           0xfb600	                   movzx eax, byte [rax]	        93	worktree.c	FUNCTION_2	WHILE_1
0x507	            0x3c0a	                             cmp al, 0xa	        93	worktree.c	FUNCTION_2	WHILE_1
0x509	            0x74d2	                            je 0x400051d	        93	worktree.c	FUNCTION_2	WHILE_1
0x50b	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        93	worktree.c	FUNCTION_2	WHILE_1
0x512	        0x488d50ff	                      lea rdx, [rax - 1]	        93	worktree.c	FUNCTION_2	WHILE_1
0x516	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	        93	worktree.c	FUNCTION_2	WHILE_1
0x51d	          0x4801d0	                            add rax, rdx	        93	worktree.c	FUNCTION_2	WHILE_1
0x520	           0xfb600	                   movzx eax, byte [rax]	        93	worktree.c	FUNCTION_2	WHILE_1
0x523	            0x3c0d	                             cmp al, 0xd	        93	worktree.c	FUNCTION_2	WHILE_1
0x525	            0x74b6	                            je 0x400051d	        93	worktree.c	FUNCTION_2	WHILE_1
0x527	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	        95	worktree.c	FUNCTION_2	IF_7
0x52f	            0x7544	                           jne 0x40005b5	        95	worktree.c	FUNCTION_2	IF_7
0x531	      0xbf00000000	                              mov edi, 0	        96	worktree.c	FUNCTION_2	IF_7	CALL_29
0x536	      0xe804fcffff	                               call sym.	        96	worktree.c	FUNCTION_2	IF_7	CALL_29
0x53b	          0x4889c1	                            mov rcx, rax	        96	worktree.c	FUNCTION_2	IF_7	CALL_29
0x53e	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	        96	worktree.c	FUNCTION_2	IF_7	CALL_29
0x545	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	        96	worktree.c	FUNCTION_2	IF_7	CALL_29
0x54c	          0x4889ce	                            mov rsi, rcx	        96	worktree.c	FUNCTION_2	IF_7	CALL_29
0x54f	          0x4889c7	                            mov rdi, rax	        96	worktree.c	FUNCTION_2	IF_7	CALL_29
0x552	      0xb800000000	                              mov eax, 0	        96	worktree.c	FUNCTION_2	IF_7	CALL_29
0x557	      0xe800000000	                          call 0x400059c	        96	worktree.c	FUNCTION_2	IF_7	CALL_29
0x55c	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	        97	worktree.c	FUNCTION_2	IF_7	CALL_30
0x563	          0x4889c7	                            mov rdi, rax	        97	worktree.c	FUNCTION_2	IF_7	CALL_30
0x566	      0xe800000000	                          call 0x40005ab	        97	worktree.c	FUNCTION_2	IF_7	CALL_30
0x56b	      0xb801000000	                              mov eax, 1	        98	worktree.c	FUNCTION_2	IF_7
0x570	      0xe9cc000000	                           jmp 0x4000681	        98	worktree.c	FUNCTION_2	IF_7
0x575	    0x488b9540ffff	             mov rdx, qword [rbp - 0xc0]	       100	worktree.c	FUNCTION_2
0x57c	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       100	worktree.c	FUNCTION_2
0x583	          0x4801d0	                            add rax, rdx	       100	worktree.c	FUNCTION_2
0x586	          0xc60000	                       mov byte [rax], 0	       100	worktree.c	FUNCTION_2
0x589	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       101	worktree.c	FUNCTION_2	IF_8	CALL_31
0x590	          0x4889c7	                            mov rdi, rax	       101	worktree.c	FUNCTION_2	IF_8	CALL_31
0x593	      0xe800000000	                          call 0x40005d8	       101	worktree.c	FUNCTION_2	IF_8	CALL_31
0x598	            0x85c0	                           test eax, eax	       101	worktree.c	FUNCTION_2	IF_8	CALL_31
0x59a	     0xf858d000000	                           jne 0x400066d	       101	worktree.c	FUNCTION_2	IF_8	CALL_31
0x5a0	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       102	worktree.c	FUNCTION_2	IF_8	CALL_32
0x5a7	          0x4889c7	                            mov rdi, rax	       102	worktree.c	FUNCTION_2	IF_8	CALL_32
0x5aa	      0xe800000000	                          call 0x40005ef	       102	worktree.c	FUNCTION_2	IF_8	CALL_32
0x5af	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       103	worktree.c	FUNCTION_2	IF_8	IF_9	CALL_34
0x5b6	          0x4889c6	                            mov rsi, rax	       103	worktree.c	FUNCTION_2	IF_8	IF_9	CALL_34
0x5b9	      0xbf00000000	                              mov edi, 0	       103	worktree.c	FUNCTION_2	IF_8	IF_9	CALL_34
0x5be	      0xb800000000	                              mov eax, 0	       103	worktree.c	FUNCTION_2	IF_8	IF_9	CALL_34
0x5c3	      0xe800000000	                          call 0x4000608	       103	worktree.c	FUNCTION_2	IF_8	IF_9	CALL_34
0x5c8	          0x4889c2	                            mov rdx, rax	       103	worktree.c	FUNCTION_2	IF_8	IF_9	CALL_34
0x5cb	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       103	worktree.c	FUNCTION_2	IF_8	IF_9	CALL_34
0x5d2	          0x4889c6	                            mov rsi, rax	       103	worktree.c	FUNCTION_2	IF_8	IF_9	CALL_34
0x5d5	          0x4889d7	                            mov rdi, rdx	       103	worktree.c	FUNCTION_2	IF_8	IF_9	CALL_34
0x5d8	      0xe800000000	                          call 0x400061d	       103	worktree.c	FUNCTION_2	IF_8	IF_9	CALL_34
0x5dd	            0x85c0	                           test eax, eax	       103	worktree.c	FUNCTION_2	IF_8	IF_9	CALL_34
0x5df	            0x7513	                           jne 0x4000634	       103	worktree.c	FUNCTION_2	IF_8	IF_9	CALL_34
0x5e1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       104	worktree.c	FUNCTION_2	IF_8	IF_9
0x5e5	          0x4889c2	                            mov rdx, rax	       104	worktree.c	FUNCTION_2	IF_8	IF_9
0x5e8	    0x488b05000000	            mov rax, qword [0x0400062f] 	       104	worktree.c	FUNCTION_2	IF_8	IF_9
0x5ef	          0x4839c2	                            cmp rdx, rax	       103	worktree.c	FUNCTION_2	IF_8	IF_9	CALL_34
0x5f2	            0x7732	                            ja 0x4000666	       103	worktree.c	FUNCTION_2	IF_8	IF_9	CALL_34
0x5f4	      0xbf00000000	                              mov edi, 0	       105	worktree.c	FUNCTION_2	IF_8	IF_9	CALL_36
0x5f9	      0xe841fbffff	                               call sym.	       105	worktree.c	FUNCTION_2	IF_8	IF_9	CALL_36
0x5fe	          0x4889c1	                            mov rcx, rax	       105	worktree.c	FUNCTION_2	IF_8	IF_9	CALL_36
0x601	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	       105	worktree.c	FUNCTION_2	IF_8	IF_9	CALL_36
0x608	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       105	worktree.c	FUNCTION_2	IF_8	IF_9	CALL_36
0x60f	          0x4889ce	                            mov rsi, rcx	       105	worktree.c	FUNCTION_2	IF_8	IF_9	CALL_36
0x612	          0x4889c7	                            mov rdi, rax	       105	worktree.c	FUNCTION_2	IF_8	IF_9	CALL_36
0x615	      0xb800000000	                              mov eax, 0	       105	worktree.c	FUNCTION_2	IF_8	IF_9	CALL_36
0x61a	      0xe800000000	                          call 0x400065f	       105	worktree.c	FUNCTION_2	IF_8	IF_9	CALL_36
0x61f	      0xb801000000	                              mov eax, 1	       106	worktree.c	FUNCTION_2	IF_8	IF_9
0x624	            0xeb1b	                           jmp 0x4000681	       106	worktree.c	FUNCTION_2	IF_8	IF_9
0x626	      0xb800000000	                              mov eax, 0	       108	worktree.c	FUNCTION_2	IF_8	ELSE_1
0x62b	            0xeb14	                           jmp 0x4000681	       108	worktree.c	FUNCTION_2	IF_8	ELSE_1
0x62d	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       111	worktree.c	FUNCTION_2	CALL_37
0x634	          0x4889c7	                            mov rdi, rax	       111	worktree.c	FUNCTION_2	CALL_37
0x637	      0xe800000000	                          call 0x400067c	       111	worktree.c	FUNCTION_2	CALL_37
0x63c	      0xb800000000	                              mov eax, 0	       112	worktree.c	FUNCTION_2
0x641	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       113	worktree.c	FUNCTION_2
0x645	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       113	worktree.c	FUNCTION_2
0x64e	            0x7405	                            je 0x4000695	       113	worktree.c	FUNCTION_2
0x650	      0xe800000000	                          call 0x4000695	       113	worktree.c	FUNCTION_2
0x655	    0x4881c4d80000	                           add rsp, 0xd8	       113	worktree.c	FUNCTION_2
0x65c	              0x5b	                                 pop rbx	       113	worktree.c	FUNCTION_2
0x65d	              0x5d	                                 pop rbp	       113	worktree.c	FUNCTION_2
0x65e	              0xc3	                                     ret	       113	worktree.c	FUNCTION_2
worktree_basename	functions,0:CALL,3:ELSE,0:FOR,1:IF,1:WHILE,1:DO,0:SWITCH,0	50
0xad6	              0x55	                                push rbp	       196	worktree.c	FUNCTION_7
0xad7	          0x4889e5	                            mov rbp, rsp	       196	worktree.c	FUNCTION_7
0xada	        0x4883ec20	                           sub rsp, 0x20	       196	worktree.c	FUNCTION_7
0xade	        0x48897de8	             mov qword [rbp - 0x18], rdi	       196	worktree.c	FUNCTION_7
0xae2	        0x488975e0	             mov qword [rbp - 0x20], rsi	       196	worktree.c	FUNCTION_7
0xae6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       200	worktree.c	FUNCTION_7	CALL_1
0xaea	          0x4889c7	                            mov rdi, rax	       200	worktree.c	FUNCTION_7	CALL_1
0xaed	      0xe800000000	                          call 0x4000b32	       200	worktree.c	FUNCTION_7	CALL_1
0xaf2	          0x8945f4	              mov dword [rbp - 0xc], eax	       200	worktree.c	FUNCTION_7	CALL_1
0xaf5	            0xeb04	                           jmp 0x4000b3b	       201	worktree.c	FUNCTION_7	WHILE_1	CALL_2
0xaf7	        0x836df401	                sub dword [rbp - 0xc], 1	       202	worktree.c	FUNCTION_7	WHILE_1
0xafb	        0x837df400	                cmp dword [rbp - 0xc], 0	       201	worktree.c	FUNCTION_7	WHILE_1	CALL_2
0xaff	            0x7421	                            je 0x4000b62	       201	worktree.c	FUNCTION_7	WHILE_1	CALL_2
0xb01	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       201	worktree.c	FUNCTION_7	WHILE_1	CALL_2
0xb04	            0x4898	                                    cdqe	       201	worktree.c	FUNCTION_7	WHILE_1	CALL_2
0xb06	        0x488d50ff	                      lea rdx, [rax - 1]	       201	worktree.c	FUNCTION_7	WHILE_1	CALL_2
0xb0a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       201	worktree.c	FUNCTION_7	WHILE_1	CALL_2
0xb0e	          0x4801d0	                            add rax, rdx	       201	worktree.c	FUNCTION_7	WHILE_1	CALL_2
0xb11	           0xfb600	                   movzx eax, byte [rax]	       201	worktree.c	FUNCTION_7	WHILE_1	CALL_2
0xb14	           0xfbec0	                           movsx eax, al	       201	worktree.c	FUNCTION_7	WHILE_1	CALL_2
0xb17	            0x89c7	                            mov edi, eax	       201	worktree.c	FUNCTION_7	WHILE_1	CALL_2
0xb19	      0xe8e2f4ffff	                 call sym.git_is_dir_sep	       201	worktree.c	FUNCTION_7	WHILE_1	CALL_2
0xb1e	            0x85c0	                           test eax, eax	       201	worktree.c	FUNCTION_7	WHILE_1	CALL_2
0xb20	            0x75d5	                           jne 0x4000b37	       201	worktree.c	FUNCTION_7	WHILE_1	CALL_2
0xb22	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       204	worktree.c	FUNCTION_7	FOR_1
0xb25	            0x4898	                                    cdqe	       204	worktree.c	FUNCTION_7	FOR_1
0xb27	        0x488d50ff	                      lea rdx, [rax - 1]	       204	worktree.c	FUNCTION_7	FOR_1
0xb2b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       204	worktree.c	FUNCTION_7	FOR_1
0xb2f	          0x4801d0	                            add rax, rdx	       204	worktree.c	FUNCTION_7	FOR_1
0xb32	        0x488945f8	                mov qword [rbp - 8], rax	       204	worktree.c	FUNCTION_7	FOR_1
0xb36	            0xeb21	                           jmp 0x4000b99	       204	worktree.c	FUNCTION_7	FOR_1
0xb38	        0x488b45f8	                mov rax, qword [rbp - 8]	       205	worktree.c	FUNCTION_7	FOR_1	IF_1	CALL_3
0xb3c	           0xfb600	                   movzx eax, byte [rax]	       205	worktree.c	FUNCTION_7	FOR_1	IF_1	CALL_3
0xb3f	           0xfbec0	                           movsx eax, al	       205	worktree.c	FUNCTION_7	FOR_1	IF_1	CALL_3
0xb42	            0x89c7	                            mov edi, eax	       205	worktree.c	FUNCTION_7	FOR_1	IF_1	CALL_3
0xb44	      0xe8b7f4ffff	                 call sym.git_is_dir_sep	       205	worktree.c	FUNCTION_7	FOR_1	IF_1	CALL_3
0xb49	            0x85c0	                           test eax, eax	       205	worktree.c	FUNCTION_7	FOR_1	IF_1	CALL_3
0xb4b	            0x7407	                            je 0x4000b94	       205	worktree.c	FUNCTION_7	FOR_1	IF_1	CALL_3
0xb4d	      0x488345f801	                  add qword [rbp - 8], 1	       206	worktree.c	FUNCTION_7	FOR_1	IF_1
0xb52	            0xeb0f	                           jmp 0x4000ba3	       207	worktree.c	FUNCTION_7	FOR_1	IF_1
0xb54	      0x48836df801	                  sub qword [rbp - 8], 1	       204	worktree.c	FUNCTION_7	FOR_1
0xb59	        0x488b45f8	                mov rax, qword [rbp - 8]	       204	worktree.c	FUNCTION_7	FOR_1
0xb5d	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       204	worktree.c	FUNCTION_7	FOR_1
0xb61	            0x77d5	                            ja 0x4000b78	       204	worktree.c	FUNCTION_7	FOR_1
0xb63	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       210	worktree.c	FUNCTION_7
0xb67	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       210	worktree.c	FUNCTION_7
0xb6a	            0x8910	                    mov dword [rax], edx	       210	worktree.c	FUNCTION_7
0xb6c	        0x488b45f8	                mov rax, qword [rbp - 8]	       211	worktree.c	FUNCTION_7
0xb70	              0xc9	                                   leave	       212	worktree.c	FUNCTION_7
0xb71	              0xc3	                                     ret	       212	worktree.c	FUNCTION_7
cmd_worktree	functions,0:CALL,18:ELSE,0:FOR,0:IF,9:WHILE,0:DO,0:SWITCH,0	155
0x32e1	              0x55	                                push rbp	       882	worktree.c	FUNCTION_24
0x32e2	          0x4889e5	                            mov rbp, rsp	       882	worktree.c	FUNCTION_24
0x32e5	        0x4883ec70	                           sub rsp, 0x70	       882	worktree.c	FUNCTION_24
0x32e9	          0x897dac	             mov dword [rbp - 0x54], edi	       882	worktree.c	FUNCTION_24
0x32ec	        0x488975a0	             mov qword [rbp - 0x60], rsi	       882	worktree.c	FUNCTION_24
0x32f0	        0x48895598	             mov qword [rbp - 0x68], rdx	       882	worktree.c	FUNCTION_24
0x32f4	    0x64488b042528	                mov rax, qword fs:[0x28]	       882	worktree.c	FUNCTION_24
0x32fd	        0x488945f8	                mov qword [rbp - 8], rax	       882	worktree.c	FUNCTION_24
0x3301	            0x31c0	                            xor eax, eax	       882	worktree.c	FUNCTION_24
0x3303	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       883	worktree.c	FUNCTION_24
0x3307	      0xb800000000	                              mov eax, 0	       883	worktree.c	FUNCTION_24
0x330c	      0xb908000000	                              mov ecx, 8	       883	worktree.c	FUNCTION_24
0x3311	          0x4889d7	                            mov rdi, rdx	       883	worktree.c	FUNCTION_24
0x3314	          0xf348ab	              rep stosq qword [rdi], rax	       883	worktree.c	FUNCTION_24
0x3317	      0xbe00000000	                              mov esi, 0	       887	worktree.c	FUNCTION_24	CALL_2
0x331c	      0xbf00000000	                              mov edi, 0	       887	worktree.c	FUNCTION_24	CALL_2
0x3321	      0xe800000000	                          call 0x4003366	       887	worktree.c	FUNCTION_24	CALL_2
0x3326	        0x837dac01	               cmp dword [rbp - 0x54], 1	       889	worktree.c	FUNCTION_24	IF_1
0x332a	            0x7f11	                            jg 0x400337d	       889	worktree.c	FUNCTION_24	IF_1
0x332c	        0x488d45b0	                   lea rax, [rbp - 0x50]	       890	worktree.c	FUNCTION_24	CALL_3
0x3330	          0x4889c6	                            mov rsi, rax	       890	worktree.c	FUNCTION_24	CALL_3
0x3333	      0xbf00000000	                              mov edi, 0	       890	worktree.c	FUNCTION_24	CALL_3
0x3338	      0xe800000000	                          call 0x400337d	       890	worktree.c	FUNCTION_24	CALL_3
0x333d	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       891	worktree.c	FUNCTION_24	IF_2
0x3342	            0x7508	                           jne 0x400338c	       891	worktree.c	FUNCTION_24	IF_2
0x3344	    0x48c745980000	               mov qword [rbp - 0x68], 0	       892	worktree.c	FUNCTION_24	IF_2
0x334c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       893	worktree.c	FUNCTION_24	IF_3	CALL_4
0x3350	        0x4883c008	                              add rax, 8	       893	worktree.c	FUNCTION_24	IF_3	CALL_4
0x3354	          0x488b00	                    mov rax, qword [rax]	       893	worktree.c	FUNCTION_24	IF_3	CALL_4
0x3357	      0xbe00000000	                              mov esi, 0	       893	worktree.c	FUNCTION_24	IF_3	CALL_4
0x335c	          0x4889c7	                            mov rdi, rax	       893	worktree.c	FUNCTION_24	IF_3	CALL_4
0x335f	      0xe800000000	                          call 0x40033a4	       893	worktree.c	FUNCTION_24	IF_3	CALL_4
0x3364	            0x85c0	                           test eax, eax	       893	worktree.c	FUNCTION_24	IF_3	CALL_4
0x3366	            0x7521	                           jne 0x40033c9	       893	worktree.c	FUNCTION_24	IF_3	CALL_4
0x3368	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       894	worktree.c	FUNCTION_24	CALL_5
0x336c	        0x488d7008	                      lea rsi, [rax + 8]	       894	worktree.c	FUNCTION_24	CALL_5
0x3370	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       894	worktree.c	FUNCTION_24	CALL_5
0x3373	          0x8d48ff	                      lea ecx, [rax - 1]	       894	worktree.c	FUNCTION_24	CALL_5
0x3376	        0x488b4598	             mov rax, qword [rbp - 0x68]	       894	worktree.c	FUNCTION_24	CALL_5
0x337a	          0x4889c2	                            mov rdx, rax	       894	worktree.c	FUNCTION_24	CALL_5
0x337d	            0x89cf	                            mov edi, ecx	       894	worktree.c	FUNCTION_24	CALL_5
0x337f	      0xe83ce4ffff	                            call sym.add	       894	worktree.c	FUNCTION_24	CALL_5
0x3384	      0xe979010000	                           jmp 0x4003542	       894	worktree.c	FUNCTION_24	CALL_5
0x3389	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       895	worktree.c	FUNCTION_24	IF_4	CALL_6
0x338d	        0x4883c008	                              add rax, 8	       895	worktree.c	FUNCTION_24	IF_4	CALL_6
0x3391	          0x488b00	                    mov rax, qword [rax]	       895	worktree.c	FUNCTION_24	IF_4	CALL_6
0x3394	      0xbe00000000	                              mov esi, 0	       895	worktree.c	FUNCTION_24	IF_4	CALL_6
0x3399	          0x4889c7	                            mov rdi, rax	       895	worktree.c	FUNCTION_24	IF_4	CALL_6
0x339c	      0xe800000000	                          call 0x40033e1	       895	worktree.c	FUNCTION_24	IF_4	CALL_6
0x33a1	            0x85c0	                           test eax, eax	       895	worktree.c	FUNCTION_24	IF_4	CALL_6
0x33a3	            0x7521	                           jne 0x4003406	       895	worktree.c	FUNCTION_24	IF_4	CALL_6
0x33a5	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       896	worktree.c	FUNCTION_24	CALL_7
0x33a9	        0x488d7008	                      lea rsi, [rax + 8]	       896	worktree.c	FUNCTION_24	CALL_7
0x33ad	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       896	worktree.c	FUNCTION_24	CALL_7
0x33b0	          0x8d48ff	                      lea ecx, [rax - 1]	       896	worktree.c	FUNCTION_24	CALL_7
0x33b3	        0x488b4598	             mov rax, qword [rbp - 0x68]	       896	worktree.c	FUNCTION_24	CALL_7
0x33b7	          0x4889c2	                            mov rdx, rax	       896	worktree.c	FUNCTION_24	CALL_7
0x33ba	            0x89cf	                            mov edi, ecx	       896	worktree.c	FUNCTION_24	CALL_7
0x33bc	      0xe881d4ffff	                          call sym.prune	       896	worktree.c	FUNCTION_24	CALL_7
0x33c1	      0xe93c010000	                           jmp 0x4003542	       896	worktree.c	FUNCTION_24	CALL_7
0x33c6	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       897	worktree.c	FUNCTION_24	IF_5	CALL_8
0x33ca	        0x4883c008	                              add rax, 8	       897	worktree.c	FUNCTION_24	IF_5	CALL_8
0x33ce	          0x488b00	                    mov rax, qword [rax]	       897	worktree.c	FUNCTION_24	IF_5	CALL_8
0x33d1	      0xbe00000000	                              mov esi, 0	       897	worktree.c	FUNCTION_24	IF_5	CALL_8
0x33d6	          0x4889c7	                            mov rdi, rax	       897	worktree.c	FUNCTION_24	IF_5	CALL_8
0x33d9	      0xe800000000	                          call 0x400341e	       897	worktree.c	FUNCTION_24	IF_5	CALL_8
0x33de	            0x85c0	                           test eax, eax	       897	worktree.c	FUNCTION_24	IF_5	CALL_8
0x33e0	            0x7521	                           jne 0x4003443	       897	worktree.c	FUNCTION_24	IF_5	CALL_8
0x33e2	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       898	worktree.c	FUNCTION_24	CALL_9
0x33e6	        0x488d7008	                      lea rsi, [rax + 8]	       898	worktree.c	FUNCTION_24	CALL_9
0x33ea	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       898	worktree.c	FUNCTION_24	CALL_9
0x33ed	          0x8d48ff	                      lea ecx, [rax - 1]	       898	worktree.c	FUNCTION_24	CALL_9
0x33f0	        0x488b4598	             mov rax, qword [rbp - 0x68]	       898	worktree.c	FUNCTION_24	CALL_9
0x33f4	          0x4889c2	                            mov rdx, rax	       898	worktree.c	FUNCTION_24	CALL_9
0x33f7	            0x89cf	                            mov edi, ecx	       898	worktree.c	FUNCTION_24	CALL_9
0x33f9	      0xe872edffff	                           call sym.list	       898	worktree.c	FUNCTION_24	CALL_9
0x33fe	      0xe9ff000000	                           jmp 0x4003542	       898	worktree.c	FUNCTION_24	CALL_9
0x3403	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       899	worktree.c	FUNCTION_24	IF_6	CALL_10
0x3407	        0x4883c008	                              add rax, 8	       899	worktree.c	FUNCTION_24	IF_6	CALL_10
0x340b	          0x488b00	                    mov rax, qword [rax]	       899	worktree.c	FUNCTION_24	IF_6	CALL_10
0x340e	      0xbe00000000	                              mov esi, 0	       899	worktree.c	FUNCTION_24	IF_6	CALL_10
0x3413	          0x4889c7	                            mov rdi, rax	       899	worktree.c	FUNCTION_24	IF_6	CALL_10
0x3416	      0xe800000000	                          call 0x400345b	       899	worktree.c	FUNCTION_24	IF_6	CALL_10
0x341b	            0x85c0	                           test eax, eax	       899	worktree.c	FUNCTION_24	IF_6	CALL_10
0x341d	            0x7521	                           jne 0x4003480	       899	worktree.c	FUNCTION_24	IF_6	CALL_10
0x341f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       900	worktree.c	FUNCTION_24	CALL_11
0x3423	        0x488d7008	                      lea rsi, [rax + 8]	       900	worktree.c	FUNCTION_24	CALL_11
0x3427	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       900	worktree.c	FUNCTION_24	CALL_11
0x342a	          0x8d48ff	                      lea ecx, [rax - 1]	       900	worktree.c	FUNCTION_24	CALL_11
0x342d	        0x488b4598	             mov rax, qword [rbp - 0x68]	       900	worktree.c	FUNCTION_24	CALL_11
0x3431	          0x4889c2	                            mov rdx, rax	       900	worktree.c	FUNCTION_24	CALL_11
0x3434	            0x89cf	                            mov edi, ecx	       900	worktree.c	FUNCTION_24	CALL_11
0x3436	      0xe824efffff	                  call sym.lock_worktree	       900	worktree.c	FUNCTION_24	CALL_11
0x343b	      0xe9c2000000	                           jmp 0x4003542	       900	worktree.c	FUNCTION_24	CALL_11
0x3440	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       901	worktree.c	FUNCTION_24	IF_7	CALL_12
0x3444	        0x4883c008	                              add rax, 8	       901	worktree.c	FUNCTION_24	IF_7	CALL_12
0x3448	          0x488b00	                    mov rax, qword [rax]	       901	worktree.c	FUNCTION_24	IF_7	CALL_12
0x344b	      0xbe00000000	                              mov esi, 0	       901	worktree.c	FUNCTION_24	IF_7	CALL_12
0x3450	          0x4889c7	                            mov rdi, rax	       901	worktree.c	FUNCTION_24	IF_7	CALL_12
0x3453	      0xe800000000	                          call 0x4003498	       901	worktree.c	FUNCTION_24	IF_7	CALL_12
0x3458	            0x85c0	                           test eax, eax	       901	worktree.c	FUNCTION_24	IF_7	CALL_12
0x345a	            0x7521	                           jne 0x40034bd	       901	worktree.c	FUNCTION_24	IF_7	CALL_12
0x345c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       902	worktree.c	FUNCTION_24	CALL_13
0x3460	        0x488d7008	                      lea rsi, [rax + 8]	       902	worktree.c	FUNCTION_24	CALL_13
0x3464	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       902	worktree.c	FUNCTION_24	CALL_13
0x3467	          0x8d48ff	                      lea ecx, [rax - 1]	       902	worktree.c	FUNCTION_24	CALL_13
0x346a	        0x488b4598	             mov rax, qword [rbp - 0x68]	       902	worktree.c	FUNCTION_24	CALL_13
0x346e	          0x4889c2	                            mov rdx, rax	       902	worktree.c	FUNCTION_24	CALL_13
0x3471	            0x89cf	                            mov edi, ecx	       902	worktree.c	FUNCTION_24	CALL_13
0x3473	      0xe840f1ffff	                call sym.unlock_worktree	       902	worktree.c	FUNCTION_24	CALL_13
0x3478	      0xe985000000	                           jmp 0x4003542	       902	worktree.c	FUNCTION_24	CALL_13
0x347d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       903	worktree.c	FUNCTION_24	IF_8	CALL_14
0x3481	        0x4883c008	                              add rax, 8	       903	worktree.c	FUNCTION_24	IF_8	CALL_14
0x3485	          0x488b00	                    mov rax, qword [rax]	       903	worktree.c	FUNCTION_24	IF_8	CALL_14
0x3488	      0xbe00000000	                              mov esi, 0	       903	worktree.c	FUNCTION_24	IF_8	CALL_14
0x348d	          0x4889c7	                            mov rdi, rax	       903	worktree.c	FUNCTION_24	IF_8	CALL_14
0x3490	      0xe800000000	                          call 0x40034d5	       903	worktree.c	FUNCTION_24	IF_8	CALL_14
0x3495	            0x85c0	                           test eax, eax	       903	worktree.c	FUNCTION_24	IF_8	CALL_14
0x3497	            0x751e	                           jne 0x40034f7	       903	worktree.c	FUNCTION_24	IF_8	CALL_14
0x3499	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       904	worktree.c	FUNCTION_24	CALL_15
0x349d	        0x488d7008	                      lea rsi, [rax + 8]	       904	worktree.c	FUNCTION_24	CALL_15
0x34a1	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       904	worktree.c	FUNCTION_24	CALL_15
0x34a4	          0x8d48ff	                      lea ecx, [rax - 1]	       904	worktree.c	FUNCTION_24	CALL_15
0x34a7	        0x488b4598	             mov rax, qword [rbp - 0x68]	       904	worktree.c	FUNCTION_24	CALL_15
0x34ab	          0x4889c2	                            mov rdx, rax	       904	worktree.c	FUNCTION_24	CALL_15
0x34ae	            0x89cf	                            mov edi, ecx	       904	worktree.c	FUNCTION_24	CALL_15
0x34b0	      0xe8daf3ffff	                  call sym.move_worktree	       904	worktree.c	FUNCTION_24	CALL_15
0x34b5	            0xeb4b	                           jmp 0x4003542	       904	worktree.c	FUNCTION_24	CALL_15
0x34b7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       905	worktree.c	FUNCTION_24	IF_9	CALL_16
0x34bb	        0x4883c008	                              add rax, 8	       905	worktree.c	FUNCTION_24	IF_9	CALL_16
0x34bf	          0x488b00	                    mov rax, qword [rax]	       905	worktree.c	FUNCTION_24	IF_9	CALL_16
0x34c2	      0xbe00000000	                              mov esi, 0	       905	worktree.c	FUNCTION_24	IF_9	CALL_16
0x34c7	          0x4889c7	                            mov rdi, rax	       905	worktree.c	FUNCTION_24	IF_9	CALL_16
0x34ca	      0xe800000000	                          call 0x400350f	       905	worktree.c	FUNCTION_24	IF_9	CALL_16
0x34cf	            0x85c0	                           test eax, eax	       905	worktree.c	FUNCTION_24	IF_9	CALL_16
0x34d1	            0x751e	                           jne 0x4003531	       905	worktree.c	FUNCTION_24	IF_9	CALL_16
0x34d3	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       906	worktree.c	FUNCTION_24	CALL_17
0x34d7	        0x488d7008	                      lea rsi, [rax + 8]	       906	worktree.c	FUNCTION_24	CALL_17
0x34db	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       906	worktree.c	FUNCTION_24	CALL_17
0x34de	          0x8d48ff	                      lea ecx, [rax - 1]	       906	worktree.c	FUNCTION_24	CALL_17
0x34e1	        0x488b4598	             mov rax, qword [rbp - 0x68]	       906	worktree.c	FUNCTION_24	CALL_17
0x34e5	          0x4889c2	                            mov rdx, rax	       906	worktree.c	FUNCTION_24	CALL_17
0x34e8	            0x89cf	                            mov edi, ecx	       906	worktree.c	FUNCTION_24	CALL_17
0x34ea	      0xe8f6faffff	                call sym.remove_worktree	       906	worktree.c	FUNCTION_24	CALL_17
0x34ef	            0xeb11	                           jmp 0x4003542	       906	worktree.c	FUNCTION_24	CALL_17
0x34f1	        0x488d45b0	                   lea rax, [rbp - 0x50]	       907	worktree.c	FUNCTION_24	CALL_18
0x34f5	          0x4889c6	                            mov rsi, rax	       907	worktree.c	FUNCTION_24	CALL_18
0x34f8	      0xbf00000000	                              mov edi, 0	       907	worktree.c	FUNCTION_24	CALL_18
0x34fd	      0xe800000000	                          call 0x4003542	       907	worktree.c	FUNCTION_24	CALL_18
0x3502	        0x488b55f8	                mov rdx, qword [rbp - 8]	       908	worktree.c	FUNCTION_24
0x3506	    0x644833142528	                xor rdx, qword fs:[0x28]	       908	worktree.c	FUNCTION_24
0x350f	            0x7405	                            je 0x4003556	       908	worktree.c	FUNCTION_24
0x3511	      0xe800000000	                          call 0x4003556	       908	worktree.c	FUNCTION_24
0x3516	              0xc9	                                   leave	       908	worktree.c	FUNCTION_24
0x3517	              0xc3	                                     ret	       908	worktree.c	FUNCTION_24
git_find_last_dir_sep	functions,0:CALL,1:ELSE,0:FOR,0:IF,0:WHILE,0:DO,0:SWITCH,0	10
0x13	              0x55	                                push rbp	       379	git-compat-util.h	FUNCTION_33
0x14	          0x4889e5	                            mov rbp, rsp	       379	git-compat-util.h	FUNCTION_33
0x17	        0x4883ec10	                           sub rsp, 0x10	       379	git-compat-util.h	FUNCTION_33
0x1b	        0x48897df8	                mov qword [rbp - 8], rdi	       379	git-compat-util.h	FUNCTION_33
0x1f	        0x488b45f8	                mov rax, qword [rbp - 8]	       380	git-compat-util.h	FUNCTION_33	CALL_1
0x23	      0xbe2f000000	                           mov esi, 0x2f	       380	git-compat-util.h	FUNCTION_33	CALL_1
0x28	          0x4889c7	                            mov rdi, rax	       380	git-compat-util.h	FUNCTION_33	CALL_1
0x2b	      0xe800000000	                          call 0x4000070	       380	git-compat-util.h	FUNCTION_33	CALL_1
0x30	              0xc9	                                   leave	       381	git-compat-util.h	FUNCTION_33
0x31	              0xc3	                                     ret	       381	git-compat-util.h	FUNCTION_33
strbuf_setlen	functions,0:CALL,2:ELSE,1:FOR,0:IF,2:WHILE,0:DO,0:SWITCH,0	43
0x70	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_58
0x71	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_58
0x74	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_58
0x78	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_58
0x7c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_58
0x80	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_58	IF_1
0x84	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_58	IF_1
0x87	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_58	IF_1
0x8a	            0x740d	                            je 0x40000d9	       162	strbuf.h	FUNCTION_58	IF_1
0x8c	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_58	IF_1
0x90	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_58	IF_1
0x93	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_58	IF_1
0x97	            0xeb05	                           jmp 0x40000de	       162	strbuf.h	FUNCTION_58	IF_1
0x99	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_58	IF_1
0x9e	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_58	IF_1
0xa2	            0x730f	                           jae 0x40000f3	       162	strbuf.h	FUNCTION_58	IF_1
0xa4	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_58	CALL_1
0xa9	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_58	CALL_1
0xae	      0xe800000000	                          call 0x40000f3	       163	strbuf.h	FUNCTION_58	CALL_1
0xb3	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_58
0xb7	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_58
0xbb	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_58
0xbf	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_58	IF_2
0xc3	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_58	IF_2
0xc7	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_58	IF_2
0xcd	            0x7414	                            je 0x4000123	       165	strbuf.h	FUNCTION_58	IF_2
0xcf	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_58	IF_2
0xd3	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_58	IF_2
0xd7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_58	IF_2
0xdb	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_58	IF_2
0xde	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_58	IF_2
0xe1	            0xeb24	                           jmp 0x4000147	       169	strbuf.h	FUNCTION_58
0xe3	     0xfb605000000	           movzx eax, byte [0x0400012a] 	       168	strbuf.h	FUNCTION_58	CALL_2
0xea	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_58	CALL_2
0xec	            0x7419	                            je 0x4000147	       168	strbuf.h	FUNCTION_58	CALL_2
0xee	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_58	CALL_2
0xf3	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_58	CALL_2
0xf8	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_58	CALL_2
0xfd	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_58	CALL_2
0x102	      0xe800000000	                          call 0x4000147	       168	strbuf.h	FUNCTION_58	CALL_2
0x107	              0x90	                                     nop	       169	strbuf.h	FUNCTION_58
0x108	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_58
0x109	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_58
print_preparing_worktree_line	functions,0:CALL,19:ELSE,4:FOR,0:IF,5:WHILE,0:DO,0:SWITCH,0	121
0x14f5	              0x55	                                push rbp	       369	worktree.c	FUNCTION_9
0x14f6	          0x4889e5	                            mov rbp, rsp	       369	worktree.c	FUNCTION_9
0x14f9	              0x53	                                push rbx	       369	worktree.c	FUNCTION_9
0x14fa	        0x4883ec58	                           sub rsp, 0x58	       369	worktree.c	FUNCTION_9
0x14fe	          0x897dbc	             mov dword [rbp - 0x44], edi	       369	worktree.c	FUNCTION_9
0x1501	        0x488975b0	             mov qword [rbp - 0x50], rsi	       369	worktree.c	FUNCTION_9
0x1505	        0x488955a8	             mov qword [rbp - 0x58], rdx	       369	worktree.c	FUNCTION_9
0x1509	          0x894db8	             mov dword [rbp - 0x48], ecx	       369	worktree.c	FUNCTION_9
0x150c	    0x64488b042528	                mov rax, qword fs:[0x28]	       369	worktree.c	FUNCTION_9
0x1515	        0x488945e8	             mov qword [rbp - 0x18], rax	       369	worktree.c	FUNCTION_9
0x1519	            0x31c0	                            xor eax, eax	       369	worktree.c	FUNCTION_9
0x151b	        0x837db800	               cmp dword [rbp - 0x48], 0	       370	worktree.c	FUNCTION_9	IF_1
0x151f	     0xf8481000000	                            je 0x40015e6	       370	worktree.c	FUNCTION_9	IF_1
0x1525	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       371	worktree.c	FUNCTION_9	IF_1	CALL_1
0x1529	          0x4889c7	                            mov rdi, rax	       371	worktree.c	FUNCTION_9	IF_1	CALL_1
0x152c	      0xe800000000	                          call 0x4001571	       371	worktree.c	FUNCTION_9	IF_1	CALL_1
0x1531	        0x488945c0	             mov qword [rbp - 0x40], rax	       371	worktree.c	FUNCTION_9	IF_1	CALL_1
0x1535	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       372	worktree.c	FUNCTION_9	IF_1	IF_2
0x153a	            0x7526	                           jne 0x40015a2	       372	worktree.c	FUNCTION_9	IF_1	IF_2
0x153c	      0xbf00000000	                              mov edi, 0	       373	worktree.c	FUNCTION_9	IF_1	CALL_3
0x1541	      0xe8f9ebffff	                               call sym.	       373	worktree.c	FUNCTION_9	IF_1	CALL_3
0x1546	          0x4889c2	                            mov rdx, rax	       373	worktree.c	FUNCTION_9	IF_1	CALL_3
0x1549	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       373	worktree.c	FUNCTION_9	IF_1	CALL_3
0x154d	          0x4889c6	                            mov rsi, rax	       373	worktree.c	FUNCTION_9	IF_1	CALL_3
0x1550	          0x4889d7	                            mov rdi, rdx	       373	worktree.c	FUNCTION_9	IF_1	CALL_3
0x1553	      0xb800000000	                              mov eax, 0	       373	worktree.c	FUNCTION_9	IF_1	CALL_3
0x1558	      0xe800000000	                          call 0x400159d	       373	worktree.c	FUNCTION_9	IF_1	CALL_3
0x155d	      0xe952010000	                           jmp 0x40016f4	       395	worktree.c	FUNCTION_9
0x1562	    0x8b0500000000	            mov eax, dword [0x040015a8] 	       375	worktree.c	FUNCTION_9	IF_1	ELSE_1	CALL_5
0x1568	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       377	worktree.c	FUNCTION_9	IF_1	CALL_6
0x156c	        0x4883c204	                              add rdx, 4	       377	worktree.c	FUNCTION_9	IF_1	CALL_6
0x1570	            0x89c6	                            mov esi, eax	       375	worktree.c	FUNCTION_9	IF_1	ELSE_1	CALL_5
0x1572	          0x4889d7	                            mov rdi, rdx	       375	worktree.c	FUNCTION_9	IF_1	ELSE_1	CALL_5
0x1575	      0xe800000000	                          call 0x40015ba	       375	worktree.c	FUNCTION_9	IF_1	ELSE_1	CALL_5
0x157a	          0x4889c3	                            mov rbx, rax	       375	worktree.c	FUNCTION_9	IF_1	ELSE_1	CALL_5
0x157d	      0xbf00000000	                              mov edi, 0	       375	worktree.c	FUNCTION_9	IF_1	ELSE_1	CALL_5
0x1582	      0xe8b8ebffff	                               call sym.	       375	worktree.c	FUNCTION_9	IF_1	ELSE_1	CALL_5
0x1587	          0x4889c1	                            mov rcx, rax	       375	worktree.c	FUNCTION_9	IF_1	ELSE_1	CALL_5
0x158a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       375	worktree.c	FUNCTION_9	IF_1	ELSE_1	CALL_5
0x158e	          0x4889da	                            mov rdx, rbx	       375	worktree.c	FUNCTION_9	IF_1	ELSE_1	CALL_5
0x1591	          0x4889c6	                            mov rsi, rax	       375	worktree.c	FUNCTION_9	IF_1	ELSE_1	CALL_5
0x1594	          0x4889cf	                            mov rdi, rcx	       375	worktree.c	FUNCTION_9	IF_1	ELSE_1	CALL_5
0x1597	      0xb800000000	                              mov eax, 0	       375	worktree.c	FUNCTION_9	IF_1	ELSE_1	CALL_5
0x159c	      0xe800000000	                          call 0x40015e1	       375	worktree.c	FUNCTION_9	IF_1	ELSE_1	CALL_5
0x15a1	      0xe90e010000	                           jmp 0x40016f4	       395	worktree.c	FUNCTION_9
0x15a6	      0x48837da800	               cmp qword [rbp - 0x58], 0	       378	worktree.c	FUNCTION_9	ELSE_2	IF_3
0x15ab	            0x7426	                            je 0x4001613	       378	worktree.c	FUNCTION_9	ELSE_2	IF_3
0x15ad	      0xbf00000000	                              mov edi, 0	       379	worktree.c	FUNCTION_9	ELSE_2	IF_3	CALL_8
0x15b2	      0xe888ebffff	                               call sym.	       379	worktree.c	FUNCTION_9	ELSE_2	IF_3	CALL_8
0x15b7	          0x4889c2	                            mov rdx, rax	       379	worktree.c	FUNCTION_9	ELSE_2	IF_3	CALL_8
0x15ba	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       379	worktree.c	FUNCTION_9	ELSE_2	IF_3	CALL_8
0x15be	          0x4889c6	                            mov rsi, rax	       379	worktree.c	FUNCTION_9	ELSE_2	IF_3	CALL_8
0x15c1	          0x4889d7	                            mov rdi, rdx	       379	worktree.c	FUNCTION_9	ELSE_2	IF_3	CALL_8
0x15c4	      0xb800000000	                              mov eax, 0	       379	worktree.c	FUNCTION_9	ELSE_2	IF_3	CALL_8
0x15c9	      0xe800000000	                          call 0x400160e	       379	worktree.c	FUNCTION_9	ELSE_2	IF_3	CALL_8
0x15ce	      0xe9e1000000	                           jmp 0x40016f4	       395	worktree.c	FUNCTION_9
0x15d3	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       381	worktree.c	FUNCTION_9	ELSE_3
0x15db	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       381	worktree.c	FUNCTION_9	ELSE_3
0x15e3	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       381	worktree.c	FUNCTION_9	ELSE_3
0x15eb	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       382	worktree.c	FUNCTION_9	ELSE_3	IF_4	CALL_9
0x15ef	            0x754a	                           jne 0x400167b	       382	worktree.c	FUNCTION_9	ELSE_3	IF_4	CALL_9
0x15f1	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       382	worktree.c	FUNCTION_9	ELSE_3	IF_4	CALL_9
0x15f5	        0x488d45d0	                   lea rax, [rbp - 0x30]	       382	worktree.c	FUNCTION_9	ELSE_3	IF_4	CALL_9
0x15f9	          0x4889d6	                            mov rsi, rdx	       382	worktree.c	FUNCTION_9	ELSE_3	IF_4	CALL_9
0x15fc	          0x4889c7	                            mov rdi, rax	       382	worktree.c	FUNCTION_9	ELSE_3	IF_4	CALL_9
0x15ff	      0xe800000000	                          call 0x4001644	       382	worktree.c	FUNCTION_9	ELSE_3	IF_4	CALL_9
0x1604	            0x85c0	                           test eax, eax	       382	worktree.c	FUNCTION_9	ELSE_3	IF_4	CALL_9
0x1606	            0x7533	                           jne 0x400167b	       382	worktree.c	FUNCTION_9	ELSE_3	IF_4	CALL_9
0x1608	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       383	worktree.c	FUNCTION_9	ELSE_3	IF_4	CALL_10
0x160c	          0x4889c7	                            mov rdi, rax	       383	worktree.c	FUNCTION_9	ELSE_3	IF_4	CALL_10
0x160f	      0xe800000000	                          call 0x4001654	       383	worktree.c	FUNCTION_9	ELSE_3	IF_4	CALL_10
0x1614	            0x85c0	                           test eax, eax	       382	worktree.c	FUNCTION_9	ELSE_3	IF_4	CALL_9
0x1616	            0x7423	                            je 0x400167b	       382	worktree.c	FUNCTION_9	ELSE_3	IF_4	CALL_9
0x1618	      0xbf00000000	                              mov edi, 0	       384	worktree.c	FUNCTION_9	ELSE_3	IF_4	CALL_12
0x161d	      0xe81debffff	                               call sym.	       384	worktree.c	FUNCTION_9	ELSE_3	IF_4	CALL_12
0x1622	          0x4889c2	                            mov rdx, rax	       384	worktree.c	FUNCTION_9	ELSE_3	IF_4	CALL_12
0x1625	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       384	worktree.c	FUNCTION_9	ELSE_3	IF_4	CALL_12
0x1629	          0x4889c6	                            mov rsi, rax	       384	worktree.c	FUNCTION_9	ELSE_3	IF_4	CALL_12
0x162c	          0x4889d7	                            mov rdi, rdx	       384	worktree.c	FUNCTION_9	ELSE_3	IF_4	CALL_12
0x162f	      0xb800000000	                              mov eax, 0	       384	worktree.c	FUNCTION_9	ELSE_3	IF_4	CALL_12
0x1634	      0xe800000000	                          call 0x4001679	       384	worktree.c	FUNCTION_9	ELSE_3	IF_4	CALL_12
0x1639	            0xeb6d	                           jmp 0x40016e8	       384	worktree.c	FUNCTION_9	ELSE_3	IF_4	CALL_12
0x163b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       387	worktree.c	FUNCTION_9	ELSE_3	ELSE_4	CALL_13
0x163f	          0x4889c7	                            mov rdi, rax	       387	worktree.c	FUNCTION_9	ELSE_3	ELSE_4	CALL_13
0x1642	      0xe800000000	                          call 0x4001687	       387	worktree.c	FUNCTION_9	ELSE_3	ELSE_4	CALL_13
0x1647	        0x488945c8	             mov qword [rbp - 0x38], rax	       387	worktree.c	FUNCTION_9	ELSE_3	ELSE_4	CALL_13
0x164b	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       388	worktree.c	FUNCTION_9	ELSE_3	ELSE_4	IF_5
0x1650	            0x7521	                           jne 0x40016b3	       388	worktree.c	FUNCTION_9	ELSE_3	ELSE_4	IF_5
0x1652	      0xbf00000000	                              mov edi, 0	       389	worktree.c	FUNCTION_9	ELSE_3	ELSE_4	CALL_15
0x1657	      0xe8e3eaffff	                               call sym.	       389	worktree.c	FUNCTION_9	ELSE_3	ELSE_4	CALL_15
0x165c	          0x4889c2	                            mov rdx, rax	       389	worktree.c	FUNCTION_9	ELSE_3	ELSE_4	CALL_15
0x165f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       389	worktree.c	FUNCTION_9	ELSE_3	ELSE_4	CALL_15
0x1663	          0x4889c6	                            mov rsi, rax	       389	worktree.c	FUNCTION_9	ELSE_3	ELSE_4	CALL_15
0x1666	          0x4889d7	                            mov rdi, rdx	       389	worktree.c	FUNCTION_9	ELSE_3	ELSE_4	CALL_15
0x1669	      0xb800000000	                              mov eax, 0	       389	worktree.c	FUNCTION_9	ELSE_3	ELSE_4	CALL_15
0x166e	      0xe800000000	                          call 0x40016b3	       389	worktree.c	FUNCTION_9	ELSE_3	ELSE_4	CALL_15
0x1673	    0x8b0500000000	            mov eax, dword [0x040016b9] 	       390	worktree.c	FUNCTION_9	ELSE_3	ELSE_4	CALL_17
0x1679	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       391	worktree.c	FUNCTION_9	ELSE_3	ELSE_4	CALL_18
0x167d	        0x4883c204	                              add rdx, 4	       391	worktree.c	FUNCTION_9	ELSE_3	ELSE_4	CALL_18
0x1681	            0x89c6	                            mov esi, eax	       390	worktree.c	FUNCTION_9	ELSE_3	ELSE_4	CALL_17
0x1683	          0x4889d7	                            mov rdi, rdx	       390	worktree.c	FUNCTION_9	ELSE_3	ELSE_4	CALL_17
0x1686	      0xe800000000	                          call 0x40016cb	       390	worktree.c	FUNCTION_9	ELSE_3	ELSE_4	CALL_17
0x168b	          0x4889c3	                            mov rbx, rax	       390	worktree.c	FUNCTION_9	ELSE_3	ELSE_4	CALL_17
0x168e	      0xbf00000000	                              mov edi, 0	       390	worktree.c	FUNCTION_9	ELSE_3	ELSE_4	CALL_17
0x1693	      0xe8a7eaffff	                               call sym.	       390	worktree.c	FUNCTION_9	ELSE_3	ELSE_4	CALL_17
0x1698	          0x4889de	                            mov rsi, rbx	       390	worktree.c	FUNCTION_9	ELSE_3	ELSE_4	CALL_17
0x169b	          0x4889c7	                            mov rdi, rax	       390	worktree.c	FUNCTION_9	ELSE_3	ELSE_4	CALL_17
0x169e	      0xb800000000	                              mov eax, 0	       390	worktree.c	FUNCTION_9	ELSE_3	ELSE_4	CALL_17
0x16a3	      0xe800000000	                          call 0x40016e8	       390	worktree.c	FUNCTION_9	ELSE_3	ELSE_4	CALL_17
0x16a8	        0x488d45d0	                   lea rax, [rbp - 0x30]	       393	worktree.c	FUNCTION_9	ELSE_3	CALL_19
0x16ac	          0x4889c7	                            mov rdi, rax	       393	worktree.c	FUNCTION_9	ELSE_3	CALL_19
0x16af	      0xe800000000	                          call 0x40016f4	       393	worktree.c	FUNCTION_9	ELSE_3	CALL_19
0x16b4	              0x90	                                     nop	       395	worktree.c	FUNCTION_9
0x16b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       395	worktree.c	FUNCTION_9
0x16b9	    0x644833042528	                xor rax, qword fs:[0x28]	       395	worktree.c	FUNCTION_9
0x16c2	            0x7405	                            je 0x4001709	       395	worktree.c	FUNCTION_9
0x16c4	      0xe800000000	                          call 0x4001709	       395	worktree.c	FUNCTION_9
0x16c9	        0x4883c458	                           add rsp, 0x58	       395	worktree.c	FUNCTION_9
0x16cd	              0x5b	                                 pop rbx	       395	worktree.c	FUNCTION_9
0x16ce	              0x5d	                                 pop rbp	       395	worktree.c	FUNCTION_9
0x16cf	              0xc3	                                     ret	       395	worktree.c	FUNCTION_9
git_is_dir_sep	functions,0:CALL,0:ELSE,0:FOR,0:IF,0:WHILE,0:DO,0:SWITCH,0	8
0x0	              0x55	                                push rbp	       363	git-compat-util.h	FUNCTION_31
0x1	          0x4889e5	                            mov rbp, rsp	       363	git-compat-util.h	FUNCTION_31
0x4	          0x897dfc	                mov dword [rbp - 4], edi	       363	git-compat-util.h	FUNCTION_31
0x7	        0x837dfc2f	               cmp dword [rbp - 4], 0x2f	       364	git-compat-util.h	FUNCTION_31
0xb	           0xf94c0	                                 sete al	       364	git-compat-util.h	FUNCTION_31
0xe	           0xfb6c0	                           movzx eax, al	       364	git-compat-util.h	FUNCTION_31
0x11	              0x5d	                                 pop rbp	       365	git-compat-util.h	FUNCTION_31
0x12	              0xc3	                                     ret	       365	git-compat-util.h	FUNCTION_31
validate_no_submodules	functions,0:CALL,7:ELSE,0:FOR,1:IF,3:WHILE,0:DO,0:SWITCH,0	71
0x2751	              0x55	                                push rbp	       667	worktree.c	FUNCTION_18
0x2752	          0x4889e5	                            mov rbp, rsp	       667	worktree.c	FUNCTION_18
0x2755	              0x53	                                push rbx	       667	worktree.c	FUNCTION_18
0x2756	    0x4881ec080100	                          sub rsp, 0x108	       667	worktree.c	FUNCTION_18
0x275d	    0x4889bdf8feff	            mov qword [rbp - 0x108], rdi	       667	worktree.c	FUNCTION_18
0x2764	    0x64488b042528	                mov rax, qword fs:[0x28]	       667	worktree.c	FUNCTION_18
0x276d	        0x488945e8	             mov qword [rbp - 0x18], rax	       667	worktree.c	FUNCTION_18
0x2771	            0x31c0	                            xor eax, eax	       667	worktree.c	FUNCTION_18
0x2773	    0x488d9510ffff	                   lea rdx, [rbp - 0xf0]	       668	worktree.c	FUNCTION_18
0x277a	      0xb800000000	                              mov eax, 0	       668	worktree.c	FUNCTION_18
0x277f	      0xb91a000000	                           mov ecx, 0x1a	       668	worktree.c	FUNCTION_18
0x2784	          0x4889d7	                            mov rdi, rdx	       668	worktree.c	FUNCTION_18
0x2787	          0xf348ab	              rep stosq qword [rdi], rax	       668	worktree.c	FUNCTION_18
0x278a	    0xc78504ffffff	               mov dword [rbp - 0xfc], 0	       669	worktree.c	FUNCTION_18
0x2794	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       671	worktree.c	FUNCTION_18	IF_1	CALL_2
0x279b	          0x4889c7	                            mov rdi, rax	       671	worktree.c	FUNCTION_18	IF_1	CALL_2
0x279e	      0xe800000000	                          call 0x40027e3	       671	worktree.c	FUNCTION_18	IF_1	CALL_2
0x27a3	          0x4889c3	                            mov rbx, rax	       671	worktree.c	FUNCTION_18	IF_1	CALL_2
0x27a6	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	       671	worktree.c	FUNCTION_18	IF_1	CALL_2
0x27ad	      0xbe00000000	                              mov esi, 0	       671	worktree.c	FUNCTION_18	IF_1	CALL_2
0x27b2	          0x4889c7	                            mov rdi, rax	       671	worktree.c	FUNCTION_18	IF_1	CALL_2
0x27b5	      0xb800000000	                              mov eax, 0	       671	worktree.c	FUNCTION_18	IF_1	CALL_2
0x27ba	      0xe800000000	                          call 0x40027ff	       671	worktree.c	FUNCTION_18	IF_1	CALL_2
0x27bf	          0x4889c1	                            mov rcx, rax	       671	worktree.c	FUNCTION_18	IF_1	CALL_2
0x27c2	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	       671	worktree.c	FUNCTION_18	IF_1	CALL_2
0x27c9	          0x4889da	                            mov rdx, rbx	       671	worktree.c	FUNCTION_18	IF_1	CALL_2
0x27cc	          0x4889ce	                            mov rsi, rcx	       671	worktree.c	FUNCTION_18	IF_1	CALL_2
0x27cf	          0x4889c7	                            mov rdi, rax	       671	worktree.c	FUNCTION_18	IF_1	CALL_2
0x27d2	      0xe800000000	                          call 0x4002817	       671	worktree.c	FUNCTION_18	IF_1	CALL_2
0x27d7	            0x85c0	                           test eax, eax	       671	worktree.c	FUNCTION_18	IF_1	CALL_2
0x27d9	            0x7e66	                           jle 0x4002881	       671	worktree.c	FUNCTION_18	IF_1	CALL_2
0x27db	    0xc78500ffffff	              mov dword [rbp - 0x100], 0	       673	worktree.c	FUNCTION_18	IF_1	FOR_1
0x27e5	            0xeb4a	                           jmp 0x4002871	       673	worktree.c	FUNCTION_18	IF_1	FOR_1
0x27e7	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       674	worktree.c	FUNCTION_18	IF_1	FOR_1
0x27ee	    0x8b9500ffffff	            mov edx, dword [rbp - 0x100]	       674	worktree.c	FUNCTION_18	IF_1	FOR_1
0x27f4	          0x4863d2	                         movsxd rdx, edx	       674	worktree.c	FUNCTION_18	IF_1	FOR_1
0x27f7	        0x48c1e203	                              shl rdx, 3	       674	worktree.c	FUNCTION_18	IF_1	FOR_1
0x27fb	          0x4801d0	                            add rax, rdx	       674	worktree.c	FUNCTION_18	IF_1	FOR_1
0x27fe	          0x488b00	                    mov rax, qword [rax]	       674	worktree.c	FUNCTION_18	IF_1	FOR_1
0x2801	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	       674	worktree.c	FUNCTION_18	IF_1	FOR_1
0x2808	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       676	worktree.c	FUNCTION_18	IF_1	FOR_1	IF_2	CALL_4
0x280f	          0x8b4034	            mov eax, dword [rax + 0x34] 	       676	worktree.c	FUNCTION_18	IF_1	FOR_1	IF_2	CALL_4
0x2812	      0x2500f00000	                         and eax, 0xf000	       676	worktree.c	FUNCTION_18	IF_1	FOR_1	IF_2	CALL_4
0x2817	      0x3d00e00000	                         cmp eax, 0xe000	       676	worktree.c	FUNCTION_18	IF_1	FOR_1	IF_2	CALL_4
0x281c	            0x750c	                           jne 0x400286a	       676	worktree.c	FUNCTION_18	IF_1	FOR_1	IF_2	CALL_4
0x281e	    0xc78504ffffff	               mov dword [rbp - 0xfc], 1	       677	worktree.c	FUNCTION_18	IF_1	FOR_1	IF_2
0x2828	            0xeb17	                           jmp 0x4002881	       678	worktree.c	FUNCTION_18	IF_1	FOR_1	IF_2
0x282a	    0x838500ffffff	              add dword [rbp - 0x100], 1	       673	worktree.c	FUNCTION_18	IF_1	FOR_1
0x2831	    0x8b951cffffff	             mov edx, dword [rbp - 0xe4]	       673	worktree.c	FUNCTION_18	IF_1	FOR_1
0x2837	    0x8b8500ffffff	            mov eax, dword [rbp - 0x100]	       673	worktree.c	FUNCTION_18	IF_1	FOR_1
0x283d	            0x39c2	                            cmp edx, eax	       673	worktree.c	FUNCTION_18	IF_1	FOR_1
0x283f	            0x77a6	                            ja 0x4002827	       673	worktree.c	FUNCTION_18	IF_1	FOR_1
0x2841	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	       682	worktree.c	FUNCTION_18	CALL_5
0x2848	          0x4889c7	                            mov rdi, rax	       682	worktree.c	FUNCTION_18	CALL_5
0x284b	      0xe800000000	                          call 0x4002890	       682	worktree.c	FUNCTION_18	CALL_5
0x2850	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 0	       684	worktree.c	FUNCTION_18	IF_3
0x2857	            0x7417	                            je 0x40028b0	       684	worktree.c	FUNCTION_18	IF_3
0x2859	      0xbf00000000	                              mov edi, 0	       685	worktree.c	FUNCTION_18	CALL_7
0x285e	      0xe8dcd8ffff	                               call sym.	       685	worktree.c	FUNCTION_18	CALL_7
0x2863	          0x4889c7	                            mov rdi, rax	       685	worktree.c	FUNCTION_18	CALL_7
0x2866	      0xb800000000	                              mov eax, 0	       685	worktree.c	FUNCTION_18	CALL_7
0x286b	      0xe800000000	                          call 0x40028b0	       685	worktree.c	FUNCTION_18	CALL_7
0x2870	              0x90	                                     nop	       686	worktree.c	FUNCTION_18
0x2871	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       686	worktree.c	FUNCTION_18
0x2875	    0x644833042528	                xor rax, qword fs:[0x28]	       686	worktree.c	FUNCTION_18
0x287e	            0x7405	                            je 0x40028c5	       686	worktree.c	FUNCTION_18
0x2880	      0xe800000000	                          call 0x40028c5	       686	worktree.c	FUNCTION_18
0x2885	    0x4881c4080100	                          add rsp, 0x108	       686	worktree.c	FUNCTION_18
0x288c	              0x5b	                                 pop rbx	       686	worktree.c	FUNCTION_18
0x288d	              0x5d	                                 pop rbp	       686	worktree.c	FUNCTION_18
0x288e	              0xc3	                                     ret	       686	worktree.c	FUNCTION_18
add	functions,0:CALL,45:ELSE,1:FOR,0:IF,15:WHILE,0:DO,0:SWITCH,0	298
0x17c0	              0x55	                                push rbp	       422	worktree.c	FUNCTION_11
0x17c1	          0x4889e5	                            mov rbp, rsp	       422	worktree.c	FUNCTION_11
0x17c4	    0x4881ec400300	                          sub rsp, 0x340	       422	worktree.c	FUNCTION_11
0x17cb	    0x89bddcfcffff	            mov dword [rbp - 0x324], edi	       422	worktree.c	FUNCTION_11
0x17d1	    0x4889b5d0fcff	            mov qword [rbp - 0x330], rsi	       422	worktree.c	FUNCTION_11
0x17d8	    0x488995c8fcff	            mov qword [rbp - 0x338], rdx	       422	worktree.c	FUNCTION_11
0x17df	    0x64488b042528	                mov rax, qword fs:[0x28]	       422	worktree.c	FUNCTION_11
0x17e8	        0x488945f8	                mov qword [rbp - 8], rax	       422	worktree.c	FUNCTION_11
0x17ec	            0x31c0	                            xor eax, eax	       422	worktree.c	FUNCTION_11
0x17ee	    0x48c785e0fcff	              mov qword [rbp - 0x320], 0	       424	worktree.c	FUNCTION_11
0x17f9	    0x48c785e8fcff	              mov qword [rbp - 0x318], 0	       427	worktree.c	FUNCTION_11
0x1804	    0x48c785f0fcff	              mov qword [rbp - 0x310], 0	       428	worktree.c	FUNCTION_11
0x180f	    0x488d95b0fdff	                  lea rdx, [rbp - 0x250]	       429	worktree.c	FUNCTION_11
0x1816	      0xb800000000	                              mov eax, 0	       429	worktree.c	FUNCTION_11
0x181b	      0xb948000000	                           mov ecx, 0x48	       429	worktree.c	FUNCTION_11
0x1820	          0x4889d7	                            mov rdi, rdx	       429	worktree.c	FUNCTION_11
0x1823	          0xf348ab	              rep stosq qword [rdi], rax	       429	worktree.c	FUNCTION_11
0x1826	    0xc785b0fdffff	              mov dword [rbp - 0x250], 6	       429	worktree.c	FUNCTION_11
0x1830	    0xc785b4fdffff	          mov dword [rbp - 0x24c], 0x66 	       429	worktree.c	FUNCTION_11
0x183a	    0x48c785b8fdff	              mov qword [rbp - 0x248], 0	       429	worktree.c	FUNCTION_11
0x1845	    0x488d8520fdff	                  lea rax, [rbp - 0x2e0]	       429	worktree.c	FUNCTION_11
0x184c	    0x488985c0fdff	            mov qword [rbp - 0x240], rax	       429	worktree.c	FUNCTION_11
0x1853	    0x48c785d0fdff	              mov qword [rbp - 0x230], 0	       429	worktree.c	FUNCTION_11
0x185e	    0xc785d8fdffff	         mov dword [rbp - 0x228], 0x202 	       429	worktree.c	FUNCTION_11
0x1868	    0xc785f0fdffff	              mov dword [rbp - 0x210], 9	       429	worktree.c	FUNCTION_11
0x1872	    0xc785f4fdffff	          mov dword [rbp - 0x20c], 0x62 	       429	worktree.c	FUNCTION_11
0x187c	    0x488d85e8fcff	                  lea rax, [rbp - 0x318]	       429	worktree.c	FUNCTION_11
0x1883	    0x48898500feff	            mov qword [rbp - 0x200], rax	       429	worktree.c	FUNCTION_11
0x188a	    0x48c78508feff	              mov qword [rbp - 0x1f8], 0	       429	worktree.c	FUNCTION_11
0x1895	    0x48c78510feff	              mov qword [rbp - 0x1f0], 0	       429	worktree.c	FUNCTION_11
0x18a0	    0xc78530feffff	              mov dword [rbp - 0x1d0], 9	       429	worktree.c	FUNCTION_11
0x18aa	    0xc78534feffff	          mov dword [rbp - 0x1cc], 0x42 	       429	worktree.c	FUNCTION_11
0x18b4	    0x488d85e0fcff	                  lea rax, [rbp - 0x320]	       429	worktree.c	FUNCTION_11
0x18bb	    0x48898540feff	            mov qword [rbp - 0x1c0], rax	       429	worktree.c	FUNCTION_11
0x18c2	    0x48c78548feff	              mov qword [rbp - 0x1b8], 0	       429	worktree.c	FUNCTION_11
0x18cd	    0x48c78550feff	              mov qword [rbp - 0x1b0], 0	       429	worktree.c	FUNCTION_11
0x18d8	    0xc78570feffff	              mov dword [rbp - 0x190], 7	       429	worktree.c	FUNCTION_11
0x18e2	    0x48c78578feff	              mov qword [rbp - 0x188], 0	       429	worktree.c	FUNCTION_11
0x18ed	    0x488d8520fdff	                  lea rax, [rbp - 0x2e0]	       429	worktree.c	FUNCTION_11
0x18f4	        0x4883c004	                              add rax, 4	       429	worktree.c	FUNCTION_11
0x18f8	    0x48898580feff	            mov qword [rbp - 0x180], rax	       429	worktree.c	FUNCTION_11
0x18ff	    0x48c78590feff	              mov qword [rbp - 0x170], 0	       429	worktree.c	FUNCTION_11
0x190a	    0xc78598feffff	              mov dword [rbp - 0x168], 2	       429	worktree.c	FUNCTION_11
0x1914	    0x48c785a8feff	              mov qword [rbp - 0x158], 1	       429	worktree.c	FUNCTION_11
0x191f	    0xc785b0feffff	              mov dword [rbp - 0x150], 7	       429	worktree.c	FUNCTION_11
0x1929	    0x48c785b8feff	              mov qword [rbp - 0x148], 0	       429	worktree.c	FUNCTION_11
0x1934	    0x488d8520fdff	                  lea rax, [rbp - 0x2e0]	       429	worktree.c	FUNCTION_11
0x193b	        0x4883c008	                              add rax, 8	       429	worktree.c	FUNCTION_11
0x193f	    0x488985c0feff	            mov qword [rbp - 0x140], rax	       429	worktree.c	FUNCTION_11
0x1946	    0x48c785d0feff	              mov qword [rbp - 0x130], 0	       429	worktree.c	FUNCTION_11
0x1951	    0xc785d8feffff	              mov dword [rbp - 0x128], 2	       429	worktree.c	FUNCTION_11
0x195b	    0x48c785e8feff	              mov qword [rbp - 0x118], 1	       429	worktree.c	FUNCTION_11
0x1966	    0xc785f0feffff	              mov dword [rbp - 0x110], 7	       429	worktree.c	FUNCTION_11
0x1970	    0x48c785f8feff	              mov qword [rbp - 0x108], 0	       429	worktree.c	FUNCTION_11
0x197b	    0x488d8520fdff	                  lea rax, [rbp - 0x2e0]	       429	worktree.c	FUNCTION_11
0x1982	        0x4883c00c	                            add rax, 0xc	       429	worktree.c	FUNCTION_11
0x1986	    0x48898500ffff	            mov qword [rbp - 0x100], rax	       429	worktree.c	FUNCTION_11
0x198d	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	       429	worktree.c	FUNCTION_11
0x1998	    0xc78518ffffff	               mov dword [rbp - 0xe8], 2	       429	worktree.c	FUNCTION_11
0x19a2	    0x48c78528ffff	               mov qword [rbp - 0xd8], 1	       429	worktree.c	FUNCTION_11
0x19ad	    0xc78530ffffff	            mov dword [rbp - 0xd0], 0xc 	       429	worktree.c	FUNCTION_11
0x19b7	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	       429	worktree.c	FUNCTION_11
0x19c2	    0x488d85f0fcff	                  lea rax, [rbp - 0x310]	       429	worktree.c	FUNCTION_11
0x19c9	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       429	worktree.c	FUNCTION_11
0x19d0	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	       429	worktree.c	FUNCTION_11
0x19db	    0xc78558ffffff	               mov dword [rbp - 0xa8], 3	       429	worktree.c	FUNCTION_11
0x19e5	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	       429	worktree.c	FUNCTION_11
0x19f0	    0xc78570ffffff	               mov dword [rbp - 0x90], 7	       429	worktree.c	FUNCTION_11
0x19fa	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	       429	worktree.c	FUNCTION_11
0x1a05	    0x48c745800000	               mov qword [rbp - 0x80], 0	       429	worktree.c	FUNCTION_11
0x1a0d	    0x48c745900000	               mov qword [rbp - 0x70], 0	       429	worktree.c	FUNCTION_11
0x1a15	    0xc74598020000	               mov dword [rbp - 0x68], 2	       429	worktree.c	FUNCTION_11
0x1a1c	    0x48c745a80100	               mov qword [rbp - 0x58], 1	       429	worktree.c	FUNCTION_11
0x1a24	    0x488d8520fdff	                  lea rax, [rbp - 0x2e0]	       448	worktree.c	FUNCTION_11	CALL_20
0x1a2b	      0xba10000000	                           mov edx, 0x10	       448	worktree.c	FUNCTION_11	CALL_20
0x1a30	      0xbe00000000	                              mov esi, 0	       448	worktree.c	FUNCTION_11	CALL_20
0x1a35	          0x4889c7	                            mov rdi, rax	       448	worktree.c	FUNCTION_11	CALL_20
0x1a38	      0xe800000000	                          call 0x4001a7d	       448	worktree.c	FUNCTION_11	CALL_20
0x1a3d	    0xc78528fdffff	              mov dword [rbp - 0x2d8], 1	       449	worktree.c	FUNCTION_11
0x1a47	    0x488d8db0fdff	                  lea rcx, [rbp - 0x250]	       450	worktree.c	FUNCTION_11	CALL_21
0x1a4e	    0x488b95c8fcff	            mov rdx, qword [rbp - 0x338]	       450	worktree.c	FUNCTION_11	CALL_21
0x1a55	    0x488bb5d0fcff	            mov rsi, qword [rbp - 0x330]	       450	worktree.c	FUNCTION_11	CALL_21
0x1a5c	    0x8b85dcfcffff	            mov eax, dword [rbp - 0x324]	       450	worktree.c	FUNCTION_11	CALL_21
0x1a62	    0x41b900000000	                              mov r9d, 0	       450	worktree.c	FUNCTION_11	CALL_21
0x1a68	    0x41b800000000	                              mov r8d, 0	       450	worktree.c	FUNCTION_11	CALL_21
0x1a6e	            0x89c7	                            mov edi, eax	       450	worktree.c	FUNCTION_11	CALL_21
0x1a70	      0xe800000000	                          call 0x4001ab5	       450	worktree.c	FUNCTION_11	CALL_21
0x1a75	    0x8985dcfcffff	            mov dword [rbp - 0x324], eax	       450	worktree.c	FUNCTION_11	CALL_21
0x1a7b	    0x8b8524fdffff	            mov eax, dword [rbp - 0x2dc]	       451	worktree.c	FUNCTION_11	IF_1
0x1a81	            0x85c0	                           test eax, eax	       451	worktree.c	FUNCTION_11	IF_1
0x1a83	           0xf95c0	                                setne al	       451	worktree.c	FUNCTION_11	IF_1
0x1a86	           0xfb6d0	                           movzx edx, al	       451	worktree.c	FUNCTION_11	IF_1
0x1a89	    0x488b85e8fcff	            mov rax, qword [rbp - 0x318]	       451	worktree.c	FUNCTION_11	IF_1
0x1a90	          0x4885c0	                           test rax, rax	       451	worktree.c	FUNCTION_11	IF_1
0x1a93	           0xf95c0	                                setne al	       451	worktree.c	FUNCTION_11	IF_1
0x1a96	           0xfb6c0	                           movzx eax, al	       451	worktree.c	FUNCTION_11	IF_1
0x1a99	             0x1c2	                            add edx, eax	       451	worktree.c	FUNCTION_11	IF_1
0x1a9b	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       451	worktree.c	FUNCTION_11	IF_1
0x1aa2	          0x4885c0	                           test rax, rax	       451	worktree.c	FUNCTION_11	IF_1
0x1aa5	           0xf95c0	                                setne al	       451	worktree.c	FUNCTION_11	IF_1
0x1aa8	           0xfb6c0	                           movzx eax, al	       451	worktree.c	FUNCTION_11	IF_1
0x1aab	             0x1d0	                            add eax, edx	       451	worktree.c	FUNCTION_11	IF_1
0x1aad	          0x83f801	                              cmp eax, 1	       451	worktree.c	FUNCTION_11	IF_1
0x1ab0	            0x7e17	                           jle 0x4001b09	       451	worktree.c	FUNCTION_11	IF_1
0x1ab2	      0xbf00000000	                              mov edi, 0	       452	worktree.c	FUNCTION_11	CALL_23
0x1ab7	      0xe883e6ffff	                               call sym.	       452	worktree.c	FUNCTION_11	CALL_23
0x1abc	          0x4889c7	                            mov rdi, rax	       452	worktree.c	FUNCTION_11	CALL_23
0x1abf	      0xb800000000	                              mov eax, 0	       452	worktree.c	FUNCTION_11	CALL_23
0x1ac4	      0xe800000000	                          call 0x4001b09	       452	worktree.c	FUNCTION_11	CALL_23
0x1ac9	    0x83bddcfcffff	              cmp dword [rbp - 0x324], 0	       453	worktree.c	FUNCTION_11	IF_2
0x1ad0	            0x7e09	                           jle 0x4001b1b	       453	worktree.c	FUNCTION_11	IF_2
0x1ad2	    0x83bddcfcffff	              cmp dword [rbp - 0x324], 2	       453	worktree.c	FUNCTION_11	IF_2
0x1ad9	            0x7e14	                           jle 0x4001b2f	       453	worktree.c	FUNCTION_11	IF_2
0x1adb	    0x488d85b0fdff	                  lea rax, [rbp - 0x250]	       454	worktree.c	FUNCTION_11	CALL_24
0x1ae2	          0x4889c6	                            mov rsi, rax	       454	worktree.c	FUNCTION_11	CALL_24
0x1ae5	      0xbf00000000	                              mov edi, 0	       454	worktree.c	FUNCTION_11	CALL_24
0x1aea	      0xe800000000	                          call 0x4001b2f	       454	worktree.c	FUNCTION_11	CALL_24
0x1aef	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	       456	worktree.c	FUNCTION_11	CALL_25
0x1af6	          0x488b10	                    mov rdx, qword [rax]	       456	worktree.c	FUNCTION_11	CALL_25
0x1af9	    0x488b85c8fcff	            mov rax, qword [rbp - 0x338]	       456	worktree.c	FUNCTION_11	CALL_25
0x1b00	          0x4889d6	                            mov rsi, rdx	       456	worktree.c	FUNCTION_11	CALL_25
0x1b03	          0x4889c7	                            mov rdi, rax	       456	worktree.c	FUNCTION_11	CALL_25
0x1b06	      0xe800000000	                          call 0x4001b4b	       456	worktree.c	FUNCTION_11	CALL_25
0x1b0b	    0x48898500fdff	            mov qword [rbp - 0x300], rax	       456	worktree.c	FUNCTION_11	CALL_25
0x1b12	    0x83bddcfcffff	              cmp dword [rbp - 0x324], 1	       457	worktree.c	FUNCTION_11
0x1b19	            0x7e0d	                           jle 0x4001b68	       457	worktree.c	FUNCTION_11
0x1b1b	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	       457	worktree.c	FUNCTION_11
0x1b22	        0x488b4008	                mov rax, qword [rax + 8]	       457	worktree.c	FUNCTION_11
0x1b26	            0xeb05	                           jmp 0x4001b6d	       457	worktree.c	FUNCTION_11
0x1b28	      0xb800000000	                              mov eax, 0	       457	worktree.c	FUNCTION_11
0x1b2d	    0x488985f8fcff	            mov qword [rbp - 0x308], rax	       457	worktree.c	FUNCTION_11
0x1b34	    0x488b85f8fcff	            mov rax, qword [rbp - 0x308]	       459	worktree.c	FUNCTION_11	IF_3	CALL_26
0x1b3b	      0xbe00000000	                              mov esi, 0	       459	worktree.c	FUNCTION_11	IF_3	CALL_26
0x1b40	          0x4889c7	                            mov rdi, rax	       459	worktree.c	FUNCTION_11	IF_3	CALL_26
0x1b43	      0xe800000000	                          call 0x4001b88	       459	worktree.c	FUNCTION_11	IF_3	CALL_26
0x1b48	            0x85c0	                           test eax, eax	       459	worktree.c	FUNCTION_11	IF_3	CALL_26
0x1b4a	            0x750b	                           jne 0x4001b97	       459	worktree.c	FUNCTION_11	IF_3	CALL_26
0x1b4c	    0x48c785f8fcff	              mov qword [rbp - 0x308], 0	       460	worktree.c	FUNCTION_11	IF_3
0x1b57	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       462	worktree.c	FUNCTION_11	IF_4
0x1b5e	          0x4885c0	                           test rax, rax	       462	worktree.c	FUNCTION_11	IF_4
0x1b61	     0xf848c000000	                            je 0x4001c33	       462	worktree.c	FUNCTION_11	IF_4
0x1b67	    0x48c78530fdff	              mov qword [rbp - 0x2d0], 0	       463	worktree.c	FUNCTION_11	IF_4
0x1b72	    0x48c78538fdff	              mov qword [rbp - 0x2c8], 0	       463	worktree.c	FUNCTION_11	IF_4
0x1b7d	    0x48c78540fdff	              mov qword [rbp - 0x2c0], 0	       463	worktree.c	FUNCTION_11	IF_4
0x1b88	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       465	worktree.c	FUNCTION_11	IF_4
0x1b8f	    0x488985e8fcff	            mov qword [rbp - 0x318], rax	       465	worktree.c	FUNCTION_11	IF_4
0x1b96	    0x8b8520fdffff	            mov eax, dword [rbp - 0x2e0]	       467	worktree.c	FUNCTION_11	IF_4	IF_5
0x1b9c	            0x85c0	                           test eax, eax	       467	worktree.c	FUNCTION_11	IF_4	IF_5
0x1b9e	            0x7544	                           jne 0x4001c24	       467	worktree.c	FUNCTION_11	IF_4	IF_5
0x1ba0	    0x488b95e8fcff	            mov rdx, qword [rbp - 0x318]	       468	worktree.c	FUNCTION_11	IF_4	IF_5	CALL_27
0x1ba7	    0x488d8530fdff	                  lea rax, [rbp - 0x2d0]	       468	worktree.c	FUNCTION_11	IF_4	IF_5	CALL_27
0x1bae	          0x4889d6	                            mov rsi, rdx	       468	worktree.c	FUNCTION_11	IF_4	IF_5	CALL_27
0x1bb1	          0x4889c7	                            mov rdi, rax	       468	worktree.c	FUNCTION_11	IF_4	IF_5	CALL_27
0x1bb4	      0xe800000000	                          call 0x4001bf9	       468	worktree.c	FUNCTION_11	IF_4	IF_5	CALL_27
0x1bb9	            0x85c0	                           test eax, eax	       467	worktree.c	FUNCTION_11	IF_4	IF_5
0x1bbb	            0x7527	                           jne 0x4001c24	       467	worktree.c	FUNCTION_11	IF_4	IF_5
0x1bbd	    0x488b8540fdff	            mov rax, qword [rbp - 0x2c0]	       469	worktree.c	FUNCTION_11	IF_4	IF_5	CALL_28
0x1bc4	          0x4889c7	                            mov rdi, rax	       469	worktree.c	FUNCTION_11	IF_4	IF_5	CALL_28
0x1bc7	      0xe800000000	                          call 0x4001c0c	       469	worktree.c	FUNCTION_11	IF_4	IF_5	CALL_28
0x1bcc	            0x85c0	                           test eax, eax	       468	worktree.c	FUNCTION_11	IF_4	IF_5	CALL_27
0x1bce	            0x7414	                            je 0x4001c24	       468	worktree.c	FUNCTION_11	IF_4	IF_5	CALL_27
0x1bd0	    0x488b8540fdff	            mov rax, qword [rbp - 0x2c0]	       470	worktree.c	FUNCTION_11	IF_4	CALL_29
0x1bd7	      0xbe00000000	                              mov esi, 0	       470	worktree.c	FUNCTION_11	IF_4	CALL_29
0x1bdc	          0x4889c7	                            mov rdi, rax	       470	worktree.c	FUNCTION_11	IF_4	CALL_29
0x1bdf	      0xe800000000	                          call 0x4001c24	       470	worktree.c	FUNCTION_11	IF_4	CALL_29
0x1be4	    0x488d8530fdff	                  lea rax, [rbp - 0x2d0]	       471	worktree.c	FUNCTION_11	IF_4	CALL_30
0x1beb	          0x4889c7	                            mov rdi, rax	       471	worktree.c	FUNCTION_11	IF_4	CALL_30
0x1bee	      0xe800000000	                          call 0x4001c33	       471	worktree.c	FUNCTION_11	IF_4	CALL_30
0x1bf3	    0x83bddcfcffff	              cmp dword [rbp - 0x324], 1	       474	worktree.c	FUNCTION_11	IF_6
0x1bfa	            0x7f4e	                            jg 0x4001c8a	       474	worktree.c	FUNCTION_11	IF_6
0x1bfc	    0x488b85e8fcff	            mov rax, qword [rbp - 0x318]	       474	worktree.c	FUNCTION_11	IF_6
0x1c03	          0x4885c0	                           test rax, rax	       474	worktree.c	FUNCTION_11	IF_6
0x1c06	            0x7542	                           jne 0x4001c8a	       474	worktree.c	FUNCTION_11	IF_6
0x1c08	    0x8b8524fdffff	            mov eax, dword [rbp - 0x2dc]	       474	worktree.c	FUNCTION_11	IF_6
0x1c0e	            0x85c0	                           test eax, eax	       474	worktree.c	FUNCTION_11	IF_6
0x1c10	            0x7538	                           jne 0x4001c8a	       474	worktree.c	FUNCTION_11	IF_6
0x1c12	    0x488d95e8fcff	                  lea rdx, [rbp - 0x318]	       475	worktree.c	FUNCTION_11	IF_6	CALL_31
0x1c19	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       475	worktree.c	FUNCTION_11	IF_6	CALL_31
0x1c20	          0x4889d6	                            mov rsi, rdx	       475	worktree.c	FUNCTION_11	IF_6	CALL_31
0x1c23	          0x4889c7	                            mov rdi, rax	       475	worktree.c	FUNCTION_11	IF_6	CALL_31
0x1c26	      0xe8a5faffff	                    call sym.dwim_branch	       475	worktree.c	FUNCTION_11	IF_6	CALL_31
0x1c2b	    0x48898508fdff	            mov qword [rbp - 0x2f8], rax	       475	worktree.c	FUNCTION_11	IF_6	CALL_31
0x1c32	    0x4883bd08fdff	              cmp qword [rbp - 0x2f8], 0	       476	worktree.c	FUNCTION_11	IF_6	IF_7
0x1c3a	            0x740e	                            je 0x4001c8a	       476	worktree.c	FUNCTION_11	IF_6	IF_7
0x1c3c	    0x488b8508fdff	            mov rax, qword [rbp - 0x2f8]	       477	worktree.c	FUNCTION_11	IF_6	IF_7
0x1c43	    0x488985f8fcff	            mov qword [rbp - 0x308], rax	       477	worktree.c	FUNCTION_11	IF_6	IF_7
0x1c4a	    0x83bddcfcffff	              cmp dword [rbp - 0x324], 2	       480	worktree.c	FUNCTION_11	IF_8
0x1c51	            0x757c	                           jne 0x4001d0f	       480	worktree.c	FUNCTION_11	IF_8
0x1c53	    0x488b85e8fcff	            mov rax, qword [rbp - 0x318]	       480	worktree.c	FUNCTION_11	IF_8
0x1c5a	          0x4885c0	                           test rax, rax	       480	worktree.c	FUNCTION_11	IF_8
0x1c5d	            0x7570	                           jne 0x4001d0f	       480	worktree.c	FUNCTION_11	IF_8
0x1c5f	    0x8b8524fdffff	            mov eax, dword [rbp - 0x2dc]	       480	worktree.c	FUNCTION_11	IF_8
0x1c65	            0x85c0	                           test eax, eax	       480	worktree.c	FUNCTION_11	IF_8
0x1c67	            0x7566	                           jne 0x4001d0f	       480	worktree.c	FUNCTION_11	IF_8
0x1c69	    0x488b85f8fcff	            mov rax, qword [rbp - 0x308]	       485	worktree.c	FUNCTION_11	IF_8	CALL_32
0x1c70	          0x4889c7	                            mov rdi, rax	       485	worktree.c	FUNCTION_11	IF_8	CALL_32
0x1c73	      0xe800000000	                          call 0x4001cb8	       485	worktree.c	FUNCTION_11	IF_8	CALL_32
0x1c78	    0x48898510fdff	            mov qword [rbp - 0x2f0], rax	       485	worktree.c	FUNCTION_11	IF_8	CALL_32
0x1c7f	    0x4883bd10fdff	              cmp qword [rbp - 0x2f0], 0	       486	worktree.c	FUNCTION_11	IF_8	IF_9
0x1c87	            0x7546	                           jne 0x4001d0f	       486	worktree.c	FUNCTION_11	IF_8	IF_9
0x1c89	    0x488d9590fdff	                  lea rdx, [rbp - 0x270]	       487	worktree.c	FUNCTION_11	IF_8	IF_9	CALL_33
0x1c90	    0x488b85f8fcff	            mov rax, qword [rbp - 0x308]	       487	worktree.c	FUNCTION_11	IF_8	IF_9	CALL_33
0x1c97	          0x4889d6	                            mov rsi, rdx	       487	worktree.c	FUNCTION_11	IF_8	IF_9	CALL_33
0x1c9a	          0x4889c7	                            mov rdi, rax	       487	worktree.c	FUNCTION_11	IF_8	IF_9	CALL_33
0x1c9d	      0xe800000000	                          call 0x4001ce2	       487	worktree.c	FUNCTION_11	IF_8	IF_9	CALL_33
0x1ca2	    0x48898518fdff	            mov qword [rbp - 0x2e8], rax	       487	worktree.c	FUNCTION_11	IF_8	IF_9	CALL_33
0x1ca9	    0x4883bd18fdff	              cmp qword [rbp - 0x2e8], 0	       488	worktree.c	FUNCTION_11	IF_8	IF_9	IF_10
0x1cb1	            0x741c	                            je 0x4001d0f	       488	worktree.c	FUNCTION_11	IF_8	IF_9	IF_10
0x1cb3	    0x488b85f8fcff	            mov rax, qword [rbp - 0x308]	       489	worktree.c	FUNCTION_11	IF_8	IF_9	IF_10
0x1cba	    0x488985e8fcff	            mov qword [rbp - 0x318], rax	       489	worktree.c	FUNCTION_11	IF_8	IF_9	IF_10
0x1cc1	    0x488b8518fdff	            mov rax, qword [rbp - 0x2e8]	       490	worktree.c	FUNCTION_11	IF_8	IF_9	IF_10
0x1cc8	    0x488985f8fcff	            mov qword [rbp - 0x308], rax	       490	worktree.c	FUNCTION_11	IF_8	IF_9	IF_10
0x1ccf	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       495	worktree.c	FUNCTION_11	CALL_34
0x1cd6	          0x4885c0	                           test rax, rax	       495	worktree.c	FUNCTION_11	CALL_34
0x1cd9	           0xf95c0	                                setne al	       495	worktree.c	FUNCTION_11	CALL_34
0x1cdc	           0xfb6c8	                           movzx ecx, al	       495	worktree.c	FUNCTION_11	CALL_34
0x1cdf	    0x488b95e8fcff	            mov rdx, qword [rbp - 0x318]	       495	worktree.c	FUNCTION_11	CALL_34
0x1ce6	    0x8b8524fdffff	            mov eax, dword [rbp - 0x2dc]	       495	worktree.c	FUNCTION_11	CALL_34
0x1cec	    0x488bb5f8fcff	            mov rsi, qword [rbp - 0x308]	       495	worktree.c	FUNCTION_11	CALL_34
0x1cf3	            0x89c7	                            mov edi, eax	       495	worktree.c	FUNCTION_11	CALL_34
0x1cf5	      0xe8fbf7ffff	  call sym.print_preparing_worktree_line	       495	worktree.c	FUNCTION_11	CALL_34
0x1cfa	    0x488b85e8fcff	            mov rax, qword [rbp - 0x318]	       497	worktree.c	FUNCTION_11	IF_11
0x1d01	          0x4885c0	                           test rax, rax	       497	worktree.c	FUNCTION_11	IF_11
0x1d04	     0xf8406010000	                            je 0x4001e50	       497	worktree.c	FUNCTION_11	IF_11
0x1d0a	    0x488d9530fdff	                  lea rdx, [rbp - 0x2d0]	       498	worktree.c	FUNCTION_11	IF_11
0x1d11	      0xb800000000	                              mov eax, 0	       498	worktree.c	FUNCTION_11	IF_11
0x1d16	      0xb90c000000	                            mov ecx, 0xc	       498	worktree.c	FUNCTION_11	IF_11
0x1d1b	          0x4889d7	                            mov rdi, rdx	       498	worktree.c	FUNCTION_11	IF_11
0x1d1e	          0xf348ab	              rep stosq qword [rdi], rax	       498	worktree.c	FUNCTION_11	IF_11
0x1d21	    0x48c78538fdff	              mov qword [rbp - 0x2c8], 0	       498	worktree.c	FUNCTION_11	IF_11
0x1d2c	    0x48c78548fdff	              mov qword [rbp - 0x2b8], 0	       498	worktree.c	FUNCTION_11	IF_11
0x1d37	     0xfb68578fdff	           movzx eax, byte [rbp - 0x288]	       499	worktree.c	FUNCTION_11	IF_11
0x1d3e	          0x83c808	                               or eax, 8	       499	worktree.c	FUNCTION_11	IF_11
0x1d41	    0x888578fdffff	              mov byte [rbp - 0x288], al	       499	worktree.c	FUNCTION_11	IF_11
0x1d47	    0x488d8530fdff	                  lea rax, [rbp - 0x2d0]	       500	worktree.c	FUNCTION_11	IF_11	CALL_35
0x1d4e	        0x4883c008	                              add rax, 8	       500	worktree.c	FUNCTION_11	IF_11	CALL_35
0x1d52	      0xbe00000000	                              mov esi, 0	       500	worktree.c	FUNCTION_11	IF_11	CALL_35
0x1d57	          0x4889c7	                            mov rdi, rax	       500	worktree.c	FUNCTION_11	IF_11	CALL_35
0x1d5a	      0xe800000000	                          call 0x4001d9f	       500	worktree.c	FUNCTION_11	IF_11	CALL_35
0x1d5f	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       501	worktree.c	FUNCTION_11	IF_11	IF_12
0x1d66	          0x4885c0	                           test rax, rax	       501	worktree.c	FUNCTION_11	IF_11	IF_12
0x1d69	            0x7418	                            je 0x4001dc3	       501	worktree.c	FUNCTION_11	IF_11	IF_12
0x1d6b	    0x488d8530fdff	                  lea rax, [rbp - 0x2d0]	       502	worktree.c	FUNCTION_11	IF_11	CALL_36
0x1d72	        0x4883c008	                              add rax, 8	       502	worktree.c	FUNCTION_11	IF_11	CALL_36
0x1d76	      0xbe00000000	                              mov esi, 0	       502	worktree.c	FUNCTION_11	IF_11	CALL_36
0x1d7b	          0x4889c7	                            mov rdi, rax	       502	worktree.c	FUNCTION_11	IF_11	CALL_36
0x1d7e	      0xe800000000	                          call 0x4001dc3	       502	worktree.c	FUNCTION_11	IF_11	CALL_36
0x1d83	    0x488b85e8fcff	            mov rax, qword [rbp - 0x318]	       503	worktree.c	FUNCTION_11	IF_11	CALL_37
0x1d8a	    0x488d9530fdff	                  lea rdx, [rbp - 0x2d0]	       503	worktree.c	FUNCTION_11	IF_11	CALL_37
0x1d91	        0x4883c208	                              add rdx, 8	       503	worktree.c	FUNCTION_11	IF_11	CALL_37
0x1d95	          0x4889c6	                            mov rsi, rax	       503	worktree.c	FUNCTION_11	IF_11	CALL_37
0x1d98	          0x4889d7	                            mov rdi, rdx	       503	worktree.c	FUNCTION_11	IF_11	CALL_37
0x1d9b	      0xe800000000	                          call 0x4001de0	       503	worktree.c	FUNCTION_11	IF_11	CALL_37
0x1da0	    0x488b85f8fcff	            mov rax, qword [rbp - 0x308]	       504	worktree.c	FUNCTION_11	IF_11	CALL_38
0x1da7	    0x488d9530fdff	                  lea rdx, [rbp - 0x2d0]	       504	worktree.c	FUNCTION_11	IF_11	CALL_38
0x1dae	        0x4883c208	                              add rdx, 8	       504	worktree.c	FUNCTION_11	IF_11	CALL_38
0x1db2	          0x4889c6	                            mov rsi, rax	       504	worktree.c	FUNCTION_11	IF_11	CALL_38
0x1db5	          0x4889d7	                            mov rdi, rdx	       504	worktree.c	FUNCTION_11	IF_11	CALL_38
0x1db8	      0xe800000000	                          call 0x4001dfd	       504	worktree.c	FUNCTION_11	IF_11	CALL_38
0x1dbd	    0x488b85f0fcff	            mov rax, qword [rbp - 0x310]	       505	worktree.c	FUNCTION_11	IF_11	IF_13
0x1dc4	          0x4885c0	                           test rax, rax	       505	worktree.c	FUNCTION_11	IF_11	IF_13
0x1dc7	            0x741d	                            je 0x4001e26	       505	worktree.c	FUNCTION_11	IF_11	IF_13
0x1dc9	    0x488b85f0fcff	            mov rax, qword [rbp - 0x310]	       506	worktree.c	FUNCTION_11	IF_11	CALL_39
0x1dd0	    0x488d9530fdff	                  lea rdx, [rbp - 0x2d0]	       506	worktree.c	FUNCTION_11	IF_11	CALL_39
0x1dd7	        0x4883c208	                              add rdx, 8	       506	worktree.c	FUNCTION_11	IF_11	CALL_39
0x1ddb	          0x4889c6	                            mov rsi, rax	       506	worktree.c	FUNCTION_11	IF_11	CALL_39
0x1dde	          0x4889d7	                            mov rdi, rdx	       506	worktree.c	FUNCTION_11	IF_11	CALL_39
0x1de1	      0xe800000000	                          call 0x4001e26	       506	worktree.c	FUNCTION_11	IF_11	CALL_39
0x1de6	    0x488d8530fdff	                  lea rax, [rbp - 0x2d0]	       507	worktree.c	FUNCTION_11	IF_11	IF_14	CALL_40
0x1ded	          0x4889c7	                            mov rdi, rax	       507	worktree.c	FUNCTION_11	IF_11	IF_14	CALL_40
0x1df0	      0xe800000000	                          call 0x4001e35	       507	worktree.c	FUNCTION_11	IF_11	IF_14	CALL_40
0x1df5	            0x85c0	                           test eax, eax	       507	worktree.c	FUNCTION_11	IF_11	IF_14	CALL_40
0x1df7	            0x7407	                            je 0x4001e40	       507	worktree.c	FUNCTION_11	IF_11	IF_14	CALL_40
0x1df9	      0xb8ffffffff	                     mov eax, 0xffffffff	       508	worktree.c	FUNCTION_11	IF_11	IF_14
0x1dfe	            0xeb53	                           jmp 0x4001e93	       508	worktree.c	FUNCTION_11	IF_11	IF_14
0x1e00	    0x488b85e8fcff	            mov rax, qword [rbp - 0x318]	       509	worktree.c	FUNCTION_11	IF_11
0x1e07	    0x488985f8fcff	            mov qword [rbp - 0x308], rax	       509	worktree.c	FUNCTION_11	IF_11
0x1e0e	            0xeb23	                           jmp 0x4001e73	       509	worktree.c	FUNCTION_11	IF_11
0x1e10	    0x488b85f0fcff	            mov rax, qword [rbp - 0x310]	       510	worktree.c	FUNCTION_11	ELSE_1	IF_15
0x1e17	          0x4885c0	                           test rax, rax	       510	worktree.c	FUNCTION_11	ELSE_1	IF_15
0x1e1a	            0x7417	                            je 0x4001e73	       510	worktree.c	FUNCTION_11	ELSE_1	IF_15
0x1e1c	      0xbf00000000	                              mov edi, 0	       511	worktree.c	FUNCTION_11	ELSE_1	IF_15	CALL_42
0x1e21	      0xe819e3ffff	                               call sym.	       511	worktree.c	FUNCTION_11	ELSE_1	IF_15	CALL_42
0x1e26	          0x4889c7	                            mov rdi, rax	       511	worktree.c	FUNCTION_11	ELSE_1	IF_15	CALL_42
0x1e29	      0xb800000000	                              mov eax, 0	       511	worktree.c	FUNCTION_11	ELSE_1	IF_15	CALL_42
0x1e2e	      0xe800000000	                          call 0x4001e73	       511	worktree.c	FUNCTION_11	ELSE_1	IF_15	CALL_42
0x1e33	    0x488d9520fdff	                  lea rdx, [rbp - 0x2e0]	       516	worktree.c	FUNCTION_11	CALL_45
0x1e3a	    0x488b8df8fcff	            mov rcx, qword [rbp - 0x308]	       516	worktree.c	FUNCTION_11	CALL_45
0x1e41	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       516	worktree.c	FUNCTION_11	CALL_45
0x1e48	          0x4889ce	                            mov rsi, rcx	       516	worktree.c	FUNCTION_11	CALL_45
0x1e4b	          0x4889c7	                            mov rdi, rax	       516	worktree.c	FUNCTION_11	CALL_45
0x1e4e	      0xe81fedffff	                   call sym.add_worktree	       516	worktree.c	FUNCTION_11	CALL_45
0x1e53	        0x488b4df8	                mov rcx, qword [rbp - 8]	       517	worktree.c	FUNCTION_11
0x1e57	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       517	worktree.c	FUNCTION_11
0x1e60	            0x7405	                            je 0x4001ea7	       517	worktree.c	FUNCTION_11
0x1e62	      0xe800000000	                          call 0x4001ea7	       517	worktree.c	FUNCTION_11
0x1e67	              0xc9	                                   leave	       517	worktree.c	FUNCTION_11
0x1e68	              0xc3	                                     ret	       517	worktree.c	FUNCTION_11
const_error	functions,0:CALL,0:ELSE,0:FOR,0:IF,0:WHILE,0:DO,0:SWITCH,0	5
0x32	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_34
0x33	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_34
0x36	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_34
0x3b	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_34
0x3c	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_34
strbuf_addstr	functions,0:CALL,2:ELSE,0:FOR,0:IF,0:WHILE,0:DO,0:SWITCH,0	17
0x10a	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_60
0x10b	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_60
0x10e	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_60
0x112	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_60
0x116	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_60
0x11a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_60	CALL_2
0x11e	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_60	CALL_2
0x121	      0xe800000000	                          call 0x4000166	       279	strbuf.h	FUNCTION_60	CALL_2
0x126	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_60	CALL_2
0x129	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_60	CALL_2
0x12d	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_60	CALL_2
0x131	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_60	CALL_2
0x134	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_60	CALL_2
0x137	      0xe800000000	                          call 0x400017c	       279	strbuf.h	FUNCTION_60	CALL_2
0x13c	              0x90	                                     nop	       280	strbuf.h	FUNCTION_60
0x13d	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_60
0x13e	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_60
remove_junk	functions,0:CALL,7:ELSE,0:FOR,0:IF,3:WHILE,0:DO,0:SWITCH,0	56
0x9c1	              0x55	                                push rbp	       172	worktree.c	FUNCTION_5
0x9c2	          0x4889e5	                            mov rbp, rsp	       172	worktree.c	FUNCTION_5
0x9c5	        0x4883ec20	                           sub rsp, 0x20	       172	worktree.c	FUNCTION_5
0x9c9	    0x64488b042528	                mov rax, qword fs:[0x28]	       172	worktree.c	FUNCTION_5
0x9d2	        0x488945f8	                mov qword [rbp - 8], rax	       172	worktree.c	FUNCTION_5
0x9d6	            0x31c0	                            xor eax, eax	       172	worktree.c	FUNCTION_5
0x9d8	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       173	worktree.c	FUNCTION_5
0x9e0	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       173	worktree.c	FUNCTION_5
0x9e8	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       173	worktree.c	FUNCTION_5
0x9f0	    0x8b0500000000	            mov eax, dword [0x04000a36] 	       174	worktree.c	FUNCTION_5	IF_1	CALL_1
0x9f6	            0x85c0	                           test eax, eax	       174	worktree.c	FUNCTION_5	IF_1	CALL_1
0x9f8	     0xf849a000000	                            je 0x4000ad8	       174	worktree.c	FUNCTION_5	IF_1	CALL_1
0x9fe	      0xe800000000	                          call 0x4000a43	       174	worktree.c	FUNCTION_5	IF_1	CALL_1
0xa03	            0x89c2	                            mov edx, eax	       174	worktree.c	FUNCTION_5	IF_1	CALL_1
0xa05	    0x8b0500000000	            mov eax, dword [0x04000a4b] 	       174	worktree.c	FUNCTION_5	IF_1	CALL_1
0xa0b	            0x39c2	                            cmp edx, eax	       174	worktree.c	FUNCTION_5	IF_1	CALL_1
0xa0d	     0xf8585000000	                           jne 0x4000ad8	       174	worktree.c	FUNCTION_5	IF_1	CALL_1
0xa13	    0x488b05000000	            mov rax, qword [0x04000a5a] 	       176	worktree.c	FUNCTION_5	IF_2
0xa1a	          0x4885c0	                           test rax, rax	       176	worktree.c	FUNCTION_5	IF_2
0xa1d	            0x7438	                            je 0x4000a97	       176	worktree.c	FUNCTION_5	IF_2
0xa1f	    0x488b15000000	            mov rdx, qword [0x04000a66] 	       177	worktree.c	FUNCTION_5	IF_2	CALL_2
0xa26	        0x488d45e0	                   lea rax, [rbp - 0x20]	       177	worktree.c	FUNCTION_5	IF_2	CALL_2
0xa2a	          0x4889d6	                            mov rsi, rdx	       177	worktree.c	FUNCTION_5	IF_2	CALL_2
0xa2d	          0x4889c7	                            mov rdi, rax	       177	worktree.c	FUNCTION_5	IF_2	CALL_2
0xa30	      0xe8d5f6ffff	                  call sym.strbuf_addstr	       177	worktree.c	FUNCTION_5	IF_2	CALL_2
0xa35	        0x488d45e0	                   lea rax, [rbp - 0x20]	       178	worktree.c	FUNCTION_5	IF_2	CALL_3
0xa39	      0xbe00000000	                              mov esi, 0	       178	worktree.c	FUNCTION_5	IF_2	CALL_3
0xa3e	          0x4889c7	                            mov rdi, rax	       178	worktree.c	FUNCTION_5	IF_2	CALL_3
0xa41	      0xe800000000	                          call 0x4000a86	       178	worktree.c	FUNCTION_5	IF_2	CALL_3
0xa46	        0x488d45e0	                   lea rax, [rbp - 0x20]	       179	worktree.c	FUNCTION_5	IF_2	CALL_4
0xa4a	      0xbe00000000	                              mov esi, 0	       179	worktree.c	FUNCTION_5	IF_2	CALL_4
0xa4f	          0x4889c7	                            mov rdi, rax	       179	worktree.c	FUNCTION_5	IF_2	CALL_4
0xa52	      0xe819f6ffff	                  call sym.strbuf_setlen	       179	worktree.c	FUNCTION_5	IF_2	CALL_4
0xa57	    0x488b05000000	            mov rax, qword [0x04000a9e] 	       181	worktree.c	FUNCTION_5	IF_3
0xa5e	          0x4885c0	                           test rax, rax	       181	worktree.c	FUNCTION_5	IF_3
0xa61	            0x7427	                            je 0x4000aca	       181	worktree.c	FUNCTION_5	IF_3
0xa63	    0x488b15000000	            mov rdx, qword [0x04000aaa] 	       182	worktree.c	FUNCTION_5	IF_3	CALL_5
0xa6a	        0x488d45e0	                   lea rax, [rbp - 0x20]	       182	worktree.c	FUNCTION_5	IF_3	CALL_5
0xa6e	          0x4889d6	                            mov rsi, rdx	       182	worktree.c	FUNCTION_5	IF_3	CALL_5
0xa71	          0x4889c7	                            mov rdi, rax	       182	worktree.c	FUNCTION_5	IF_3	CALL_5
0xa74	      0xe891f6ffff	                  call sym.strbuf_addstr	       182	worktree.c	FUNCTION_5	IF_3	CALL_5
0xa79	        0x488d45e0	                   lea rax, [rbp - 0x20]	       183	worktree.c	FUNCTION_5	IF_3	CALL_6
0xa7d	      0xbe00000000	                              mov esi, 0	       183	worktree.c	FUNCTION_5	IF_3	CALL_6
0xa82	          0x4889c7	                            mov rdi, rax	       183	worktree.c	FUNCTION_5	IF_3	CALL_6
0xa85	      0xe800000000	                          call 0x4000aca	       183	worktree.c	FUNCTION_5	IF_3	CALL_6
0xa8a	        0x488d45e0	                   lea rax, [rbp - 0x20]	       185	worktree.c	FUNCTION_5	CALL_7
0xa8e	          0x4889c7	                            mov rdi, rax	       185	worktree.c	FUNCTION_5	CALL_7
0xa91	      0xe800000000	                          call 0x4000ad6	       185	worktree.c	FUNCTION_5	CALL_7
0xa96	            0xeb01	                           jmp 0x4000ad9	       185	worktree.c	FUNCTION_5	CALL_7
0xa98	              0x90	                                     nop	       175	worktree.c	FUNCTION_5	IF_1
0xa99	        0x488b45f8	                mov rax, qword [rbp - 8]	       186	worktree.c	FUNCTION_5
0xa9d	    0x644833042528	                xor rax, qword fs:[0x28]	       186	worktree.c	FUNCTION_5
0xaa6	            0x7405	                            je 0x4000aed	       186	worktree.c	FUNCTION_5
0xaa8	      0xe800000000	                          call 0x4000aed	       186	worktree.c	FUNCTION_5
0xaad	              0xc9	                                   leave	       186	worktree.c	FUNCTION_5
0xaae	              0xc3	                                     ret	       186	worktree.c	FUNCTION_5
show_worktree	functions,0:CALL,13:ELSE,3:FOR,0:IF,3:WHILE,0:DO,0:SWITCH,0	106
0x1f12	              0x55	                                push rbp	       535	worktree.c	FUNCTION_13
0x1f13	          0x4889e5	                            mov rbp, rsp	       535	worktree.c	FUNCTION_13
0x1f16	        0x4883ec40	                           sub rsp, 0x40	       535	worktree.c	FUNCTION_13
0x1f1a	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       535	worktree.c	FUNCTION_13
0x1f1e	          0x8975c4	             mov dword [rbp - 0x3c], esi	       535	worktree.c	FUNCTION_13
0x1f21	          0x8955c0	             mov dword [rbp - 0x40], edx	       535	worktree.c	FUNCTION_13
0x1f24	    0x64488b042528	                mov rax, qword fs:[0x28]	       535	worktree.c	FUNCTION_13
0x1f2d	        0x488945f8	                mov qword [rbp - 8], rax	       535	worktree.c	FUNCTION_13
0x1f31	            0x31c0	                            xor eax, eax	       535	worktree.c	FUNCTION_13
0x1f33	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       536	worktree.c	FUNCTION_13
0x1f3b	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       536	worktree.c	FUNCTION_13
0x1f43	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       536	worktree.c	FUNCTION_13
0x1f4b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       537	worktree.c	FUNCTION_13	CALL_1
0x1f4f	          0x488b00	                    mov rax, qword [rax]	       537	worktree.c	FUNCTION_13	CALL_1
0x1f52	          0x4889c7	                            mov rdi, rax	       537	worktree.c	FUNCTION_13	CALL_1
0x1f55	      0xe800000000	                          call 0x4001f9a	       537	worktree.c	FUNCTION_13	CALL_1
0x1f5a	          0x8945d0	             mov dword [rbp - 0x30], eax	       537	worktree.c	FUNCTION_13	CALL_1
0x1f5d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       538	worktree.c	FUNCTION_13	CALL_2
0x1f61	          0x488b00	                    mov rax, qword [rax]	       538	worktree.c	FUNCTION_13	CALL_2
0x1f64	          0x4889c7	                            mov rdi, rax	       538	worktree.c	FUNCTION_13	CALL_2
0x1f67	      0xe800000000	                          call 0x4001fac	       538	worktree.c	FUNCTION_13	CALL_2
0x1f6c	            0x89c2	                            mov edx, eax	       538	worktree.c	FUNCTION_13	CALL_2
0x1f6e	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       538	worktree.c	FUNCTION_13	CALL_2
0x1f71	            0x29d0	                            sub eax, edx	       538	worktree.c	FUNCTION_13	CALL_2
0x1f73	          0x8945d4	             mov dword [rbp - 0x2c], eax	       538	worktree.c	FUNCTION_13	CALL_2
0x1f76	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       540	worktree.c	FUNCTION_13	CALL_3
0x1f7a	          0x488b10	                    mov rdx, qword [rax]	       540	worktree.c	FUNCTION_13	CALL_3
0x1f7d	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       540	worktree.c	FUNCTION_13	CALL_3
0x1f80	          0x8d4801	                      lea ecx, [rax + 1]	       540	worktree.c	FUNCTION_13	CALL_3
0x1f83	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       540	worktree.c	FUNCTION_13	CALL_3
0x1f86	          0x8d3401	                    lea esi, [rcx + rax]	       540	worktree.c	FUNCTION_13	CALL_3
0x1f89	        0x488d45e0	                   lea rax, [rbp - 0x20]	       540	worktree.c	FUNCTION_13	CALL_3
0x1f8d	          0x4889d1	                            mov rcx, rdx	       540	worktree.c	FUNCTION_13	CALL_3
0x1f90	            0x89f2	                            mov edx, esi	       540	worktree.c	FUNCTION_13	CALL_3
0x1f92	      0xbe00000000	                              mov esi, 0	       540	worktree.c	FUNCTION_13	CALL_3
0x1f97	          0x4889c7	                            mov rdi, rax	       540	worktree.c	FUNCTION_13	CALL_3
0x1f9a	      0xb800000000	                              mov eax, 0	       540	worktree.c	FUNCTION_13	CALL_3
0x1f9f	      0xe800000000	                          call 0x4001fe4	       540	worktree.c	FUNCTION_13	CALL_3
0x1fa4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       541	worktree.c	FUNCTION_13	IF_1
0x1fa8	          0x8b4038	            mov eax, dword [rax + 0x38] 	       541	worktree.c	FUNCTION_13	IF_1
0x1fab	            0x85c0	                           test eax, eax	       541	worktree.c	FUNCTION_13	IF_1
0x1fad	            0x7416	                            je 0x4002005	       541	worktree.c	FUNCTION_13	IF_1
0x1faf	        0x488d45e0	                   lea rax, [rbp - 0x20]	       542	worktree.c	FUNCTION_13	CALL_4
0x1fb3	      0xbe00000000	                              mov esi, 0	       542	worktree.c	FUNCTION_13	CALL_4
0x1fb8	          0x4889c7	                            mov rdi, rax	       542	worktree.c	FUNCTION_13	CALL_4
0x1fbb	      0xe84ae1ffff	                  call sym.strbuf_addstr	       542	worktree.c	FUNCTION_13	CALL_4
0x1fc0	      0xe9b1000000	                           jmp 0x40020b6	       542	worktree.c	FUNCTION_13	CALL_4
0x1fc5	    0x8b0500000000	            mov eax, dword [0x0400200b] 	       544	worktree.c	FUNCTION_13	ELSE_1	CALL_5
0x1fcb	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       545	worktree.c	FUNCTION_13	ELSE_1	CALL_6
0x1fcf	        0x4883c220	                           add rdx, 0x20	       545	worktree.c	FUNCTION_13	ELSE_1	CALL_6
0x1fd3	            0x89c6	                            mov esi, eax	       544	worktree.c	FUNCTION_13	ELSE_1	CALL_5
0x1fd5	          0x4889d7	                            mov rdi, rdx	       544	worktree.c	FUNCTION_13	ELSE_1	CALL_5
0x1fd8	      0xe800000000	                          call 0x400201d	       544	worktree.c	FUNCTION_13	ELSE_1	CALL_5
0x1fdd	          0x4889c1	                            mov rcx, rax	       544	worktree.c	FUNCTION_13	ELSE_1	CALL_5
0x1fe0	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       544	worktree.c	FUNCTION_13	ELSE_1	CALL_5
0x1fe3	        0x488d45e0	                   lea rax, [rbp - 0x20]	       544	worktree.c	FUNCTION_13	ELSE_1	CALL_5
0x1fe7	      0xbe00000000	                              mov esi, 0	       544	worktree.c	FUNCTION_13	ELSE_1	CALL_5
0x1fec	          0x4889c7	                            mov rdi, rax	       544	worktree.c	FUNCTION_13	ELSE_1	CALL_5
0x1fef	      0xb800000000	                              mov eax, 0	       544	worktree.c	FUNCTION_13	ELSE_1	CALL_5
0x1ff4	      0xe800000000	                          call 0x4002039	       544	worktree.c	FUNCTION_13	ELSE_1	CALL_5
0x1ff9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       546	worktree.c	FUNCTION_13	ELSE_1	IF_2
0x1ffd	          0x8b4034	            mov eax, dword [rax + 0x34] 	       546	worktree.c	FUNCTION_13	ELSE_1	IF_2
0x2000	            0x85c0	                           test eax, eax	       546	worktree.c	FUNCTION_13	ELSE_1	IF_2
0x2002	            0x7413	                            je 0x4002057	       546	worktree.c	FUNCTION_13	ELSE_1	IF_2
0x2004	        0x488d45e0	                   lea rax, [rbp - 0x20]	       547	worktree.c	FUNCTION_13	ELSE_1	CALL_7
0x2008	      0xbe00000000	                              mov esi, 0	       547	worktree.c	FUNCTION_13	ELSE_1	CALL_7
0x200d	          0x4889c7	                            mov rdi, rax	       547	worktree.c	FUNCTION_13	ELSE_1	CALL_7
0x2010	      0xe8f5e0ffff	                  call sym.strbuf_addstr	       547	worktree.c	FUNCTION_13	ELSE_1	CALL_7
0x2015	            0xeb5f	                           jmp 0x40020b6	       547	worktree.c	FUNCTION_13	ELSE_1	CALL_7
0x2017	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       548	worktree.c	FUNCTION_13	ELSE_1	ELSE_2	IF_3
0x201b	        0x488b4010	            mov rax, qword [rax + 0x10] 	       548	worktree.c	FUNCTION_13	ELSE_1	ELSE_2	IF_3
0x201f	          0x4885c0	                           test rax, rax	       548	worktree.c	FUNCTION_13	ELSE_1	ELSE_2	IF_3
0x2022	            0x7441	                            je 0x40020a5	       548	worktree.c	FUNCTION_13	ELSE_1	ELSE_2	IF_3
0x2024	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       549	worktree.c	FUNCTION_13	ELSE_1	ELSE_2	IF_3	CALL_8
0x2028	        0x488b4010	            mov rax, qword [rax + 0x10] 	       549	worktree.c	FUNCTION_13	ELSE_1	ELSE_2	IF_3	CALL_8
0x202c	      0xbe00000000	                              mov esi, 0	       549	worktree.c	FUNCTION_13	ELSE_1	ELSE_2	IF_3	CALL_8
0x2031	          0x4889c7	                            mov rdi, rax	       549	worktree.c	FUNCTION_13	ELSE_1	ELSE_2	IF_3	CALL_8
0x2034	      0xe800000000	                          call 0x4002079	       549	worktree.c	FUNCTION_13	ELSE_1	ELSE_2	IF_3	CALL_8
0x2039	        0x488945d8	             mov qword [rbp - 0x28], rax	       549	worktree.c	FUNCTION_13	ELSE_1	ELSE_2	IF_3	CALL_8
0x203d	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       550	worktree.c	FUNCTION_13	ELSE_1	ELSE_2	IF_3	CALL_9
0x2041	        0x488d45e0	                   lea rax, [rbp - 0x20]	       550	worktree.c	FUNCTION_13	ELSE_1	ELSE_2	IF_3	CALL_9
0x2045	      0xbe00000000	                              mov esi, 0	       550	worktree.c	FUNCTION_13	ELSE_1	ELSE_2	IF_3	CALL_9
0x204a	          0x4889c7	                            mov rdi, rax	       550	worktree.c	FUNCTION_13	ELSE_1	ELSE_2	IF_3	CALL_9
0x204d	      0xb800000000	                              mov eax, 0	       550	worktree.c	FUNCTION_13	ELSE_1	ELSE_2	IF_3	CALL_9
0x2052	      0xe800000000	                          call 0x4002097	       550	worktree.c	FUNCTION_13	ELSE_1	ELSE_2	IF_3	CALL_9
0x2057	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       551	worktree.c	FUNCTION_13	ELSE_1	ELSE_2	IF_3	CALL_10
0x205b	          0x4889c7	                            mov rdi, rax	       551	worktree.c	FUNCTION_13	ELSE_1	ELSE_2	IF_3	CALL_10
0x205e	      0xe800000000	                          call 0x40020a3	       551	worktree.c	FUNCTION_13	ELSE_1	ELSE_2	IF_3	CALL_10
0x2063	            0xeb11	                           jmp 0x40020b6	       551	worktree.c	FUNCTION_13	ELSE_1	ELSE_2	IF_3	CALL_10
0x2065	        0x488d45e0	                   lea rax, [rbp - 0x20]	       553	worktree.c	FUNCTION_13	ELSE_1	CALL_11
0x2069	      0xbe00000000	                              mov esi, 0	       553	worktree.c	FUNCTION_13	ELSE_1	CALL_11
0x206e	          0x4889c7	                            mov rdi, rax	       553	worktree.c	FUNCTION_13	ELSE_1	CALL_11
0x2071	      0xe894e0ffff	                  call sym.strbuf_addstr	       553	worktree.c	FUNCTION_13	ELSE_1	CALL_11
0x2076	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       555	worktree.c	FUNCTION_13	CALL_12
0x207a	          0x4889c7	                            mov rdi, rax	       555	worktree.c	FUNCTION_13	CALL_12
0x207d	      0xe800000000	                          call 0x40020c2	       555	worktree.c	FUNCTION_13	CALL_12
0x2082	        0x488d45e0	                   lea rax, [rbp - 0x20]	       557	worktree.c	FUNCTION_13	CALL_13
0x2086	          0x4889c7	                            mov rdi, rax	       557	worktree.c	FUNCTION_13	CALL_13
0x2089	      0xe800000000	                          call 0x40020ce	       557	worktree.c	FUNCTION_13	CALL_13
0x208e	              0x90	                                     nop	       558	worktree.c	FUNCTION_13
0x208f	        0x488b45f8	                mov rax, qword [rbp - 8]	       558	worktree.c	FUNCTION_13
0x2093	    0x644833042528	                xor rax, qword fs:[0x28]	       558	worktree.c	FUNCTION_13
0x209c	            0x7405	                            je 0x40020e3	       558	worktree.c	FUNCTION_13
0x209e	      0xe800000000	                          call 0x40020e3	       558	worktree.c	FUNCTION_13
0x20a3	              0xc9	                                   leave	       558	worktree.c	FUNCTION_13
0x20a4	              0xc3	                                     ret	       558	worktree.c	FUNCTION_13
lock_worktree	functions,0:CALL,21:ELSE,0:FOR,0:IF,5:WHILE,0:DO,0:SWITCH,0	121
0x235f	              0x55	                                push rbp	       607	worktree.c	FUNCTION_16
0x2360	          0x4889e5	                            mov rbp, rsp	       607	worktree.c	FUNCTION_16
0x2363	              0x53	                                push rbx	       607	worktree.c	FUNCTION_16
0x2364	    0x4881ecd80000	                           sub rsp, 0xd8	       607	worktree.c	FUNCTION_16
0x236b	    0x89bd3cffffff	             mov dword [rbp - 0xc4], edi	       607	worktree.c	FUNCTION_16
0x2371	    0x4889b530ffff	             mov qword [rbp - 0xd0], rsi	       607	worktree.c	FUNCTION_16
0x2378	    0x48899528ffff	             mov qword [rbp - 0xd8], rdx	       607	worktree.c	FUNCTION_16
0x237f	    0x64488b042528	                mov rax, qword fs:[0x28]	       607	worktree.c	FUNCTION_16
0x2388	        0x488945e8	             mov qword [rbp - 0x18], rax	       607	worktree.c	FUNCTION_16
0x238c	            0x31c0	                            xor eax, eax	       607	worktree.c	FUNCTION_16
0x238e	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	       608	worktree.c	FUNCTION_16
0x2399	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       609	worktree.c	FUNCTION_16
0x23a0	      0xb800000000	                              mov eax, 0	       609	worktree.c	FUNCTION_16
0x23a5	      0xb910000000	                           mov ecx, 0x10	       609	worktree.c	FUNCTION_16
0x23aa	          0x4889d7	                            mov rdi, rdx	       609	worktree.c	FUNCTION_16
0x23ad	          0xf348ab	              rep stosq qword [rdi], rax	       609	worktree.c	FUNCTION_16
0x23b0	    0xc78560ffffff	               mov dword [rbp - 0xa0], 9	       609	worktree.c	FUNCTION_16
0x23ba	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	       609	worktree.c	FUNCTION_16
0x23c5	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	       609	worktree.c	FUNCTION_16
0x23cc	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       609	worktree.c	FUNCTION_16
0x23d3	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	       609	worktree.c	FUNCTION_16
0x23de	    0x48c745800000	               mov qword [rbp - 0x80], 0	       609	worktree.c	FUNCTION_16
0x23e6	    0x488d8d60ffff	                   lea rcx, [rbp - 0xa0]	       616	worktree.c	FUNCTION_16	CALL_5
0x23ed	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	       616	worktree.c	FUNCTION_16	CALL_5
0x23f4	    0x488bb530ffff	             mov rsi, qword [rbp - 0xd0]	       616	worktree.c	FUNCTION_16	CALL_5
0x23fb	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	       616	worktree.c	FUNCTION_16	CALL_5
0x2401	    0x41b900000000	                              mov r9d, 0	       616	worktree.c	FUNCTION_16	CALL_5
0x2407	    0x41b800000000	                              mov r8d, 0	       616	worktree.c	FUNCTION_16	CALL_5
0x240d	            0x89c7	                            mov edi, eax	       616	worktree.c	FUNCTION_16	CALL_5
0x240f	      0xe800000000	                          call 0x4002454	       616	worktree.c	FUNCTION_16	CALL_5
0x2414	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	       616	worktree.c	FUNCTION_16	CALL_5
0x241a	    0x83bd3cffffff	               cmp dword [rbp - 0xc4], 1	       617	worktree.c	FUNCTION_16	IF_1
0x2421	            0x7414	                            je 0x4002477	       617	worktree.c	FUNCTION_16	IF_1
0x2423	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	       618	worktree.c	FUNCTION_16	CALL_6
0x242a	          0x4889c6	                            mov rsi, rax	       618	worktree.c	FUNCTION_16	CALL_6
0x242d	      0xbf00000000	                              mov edi, 0	       618	worktree.c	FUNCTION_16	CALL_6
0x2432	      0xe800000000	                          call 0x4002477	       618	worktree.c	FUNCTION_16	CALL_6
0x2437	      0xbf00000000	                              mov edi, 0	       620	worktree.c	FUNCTION_16	CALL_7
0x243c	      0xe800000000	                          call 0x4002481	       620	worktree.c	FUNCTION_16	CALL_7
0x2441	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       620	worktree.c	FUNCTION_16	CALL_7
0x2448	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       621	worktree.c	FUNCTION_16	CALL_8
0x244f	          0x488b10	                    mov rdx, qword [rax]	       621	worktree.c	FUNCTION_16	CALL_8
0x2452	    0x488b8d28ffff	             mov rcx, qword [rbp - 0xd8]	       621	worktree.c	FUNCTION_16	CALL_8
0x2459	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       621	worktree.c	FUNCTION_16	CALL_8
0x2460	          0x4889ce	                            mov rsi, rcx	       621	worktree.c	FUNCTION_16	CALL_8
0x2463	          0x4889c7	                            mov rdi, rax	       621	worktree.c	FUNCTION_16	CALL_8
0x2466	      0xe800000000	                          call 0x40024ab	       621	worktree.c	FUNCTION_16	CALL_8
0x246b	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	       621	worktree.c	FUNCTION_16	CALL_8
0x2472	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	       622	worktree.c	FUNCTION_16	IF_2
0x247a	            0x7524	                           jne 0x40024e0	       622	worktree.c	FUNCTION_16	IF_2
0x247c	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       623	worktree.c	FUNCTION_16	CALL_10
0x2483	          0x488b18	                    mov rbx, qword [rax]	       623	worktree.c	FUNCTION_16	CALL_10
0x2486	      0xbf00000000	                              mov edi, 0	       623	worktree.c	FUNCTION_16	CALL_10
0x248b	      0xe8afdcffff	                               call sym.	       623	worktree.c	FUNCTION_16	CALL_10
0x2490	          0x4889de	                            mov rsi, rbx	       623	worktree.c	FUNCTION_16	CALL_10
0x2493	          0x4889c7	                            mov rdi, rax	       623	worktree.c	FUNCTION_16	CALL_10
0x2496	      0xb800000000	                              mov eax, 0	       623	worktree.c	FUNCTION_16	CALL_10
0x249b	      0xe800000000	                          call 0x40024e0	       623	worktree.c	FUNCTION_16	CALL_10
0x24a0	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       624	worktree.c	FUNCTION_16	IF_3	CALL_11
0x24a7	          0x4889c7	                            mov rdi, rax	       624	worktree.c	FUNCTION_16	IF_3	CALL_11
0x24aa	      0xe800000000	                          call 0x40024ef	       624	worktree.c	FUNCTION_16	IF_3	CALL_11
0x24af	            0x85c0	                           test eax, eax	       624	worktree.c	FUNCTION_16	IF_3	CALL_11
0x24b1	            0x7417	                            je 0x400250a	       624	worktree.c	FUNCTION_16	IF_3	CALL_11
0x24b3	      0xbf00000000	                              mov edi, 0	       625	worktree.c	FUNCTION_16	CALL_13
0x24b8	      0xe882dcffff	                               call sym.	       625	worktree.c	FUNCTION_16	CALL_13
0x24bd	          0x4889c7	                            mov rdi, rax	       625	worktree.c	FUNCTION_16	CALL_13
0x24c0	      0xb800000000	                              mov eax, 0	       625	worktree.c	FUNCTION_16	CALL_13
0x24c5	      0xe800000000	                          call 0x400250a	       625	worktree.c	FUNCTION_16	CALL_13
0x24ca	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       627	worktree.c	FUNCTION_16	CALL_14
0x24d1	          0x4889c7	                            mov rdi, rax	       627	worktree.c	FUNCTION_16	CALL_14
0x24d4	      0xe800000000	                          call 0x4002519	       627	worktree.c	FUNCTION_16	CALL_14
0x24d9	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       627	worktree.c	FUNCTION_16	CALL_14
0x24e0	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	       628	worktree.c	FUNCTION_16	IF_4
0x24e8	            0x7463	                            je 0x400258d	       628	worktree.c	FUNCTION_16	IF_4
0x24ea	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       629	worktree.c	FUNCTION_16	IF_4	IF_5
0x24f1	           0xfb600	                   movzx eax, byte [rax]	       629	worktree.c	FUNCTION_16	IF_4	IF_5
0x24f4	            0x84c0	                             test al, al	       629	worktree.c	FUNCTION_16	IF_4	IF_5
0x24f6	            0x7431	                            je 0x4002569	       629	worktree.c	FUNCTION_16	IF_4	IF_5
0x24f8	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       630	worktree.c	FUNCTION_16	IF_4	IF_5	CALL_16
0x24ff	          0x488b18	                    mov rbx, qword [rax]	       630	worktree.c	FUNCTION_16	IF_4	IF_5	CALL_16
0x2502	      0xbf00000000	                              mov edi, 0	       630	worktree.c	FUNCTION_16	IF_4	IF_5	CALL_16
0x2507	      0xe833dcffff	                               call sym.	       630	worktree.c	FUNCTION_16	IF_4	IF_5	CALL_16
0x250c	          0x4889c1	                            mov rcx, rax	       630	worktree.c	FUNCTION_16	IF_4	IF_5	CALL_16
0x250f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       630	worktree.c	FUNCTION_16	IF_4	IF_5	CALL_16
0x2516	          0x4889c2	                            mov rdx, rax	       630	worktree.c	FUNCTION_16	IF_4	IF_5	CALL_16
0x2519	          0x4889de	                            mov rsi, rbx	       630	worktree.c	FUNCTION_16	IF_4	IF_5	CALL_16
0x251c	          0x4889cf	                            mov rdi, rcx	       630	worktree.c	FUNCTION_16	IF_4	IF_5	CALL_16
0x251f	      0xb800000000	                              mov eax, 0	       630	worktree.c	FUNCTION_16	IF_4	IF_5	CALL_16
0x2524	      0xe800000000	                          call 0x4002569	       630	worktree.c	FUNCTION_16	IF_4	IF_5	CALL_16
0x2529	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       632	worktree.c	FUNCTION_16	IF_4	CALL_18
0x2530	          0x488b18	                    mov rbx, qword [rax]	       632	worktree.c	FUNCTION_16	IF_4	CALL_18
0x2533	      0xbf00000000	                              mov edi, 0	       632	worktree.c	FUNCTION_16	IF_4	CALL_18
0x2538	      0xe802dcffff	                               call sym.	       632	worktree.c	FUNCTION_16	IF_4	CALL_18
0x253d	          0x4889de	                            mov rsi, rbx	       632	worktree.c	FUNCTION_16	IF_4	CALL_18
0x2540	          0x4889c7	                            mov rdi, rax	       632	worktree.c	FUNCTION_16	IF_4	CALL_18
0x2543	      0xb800000000	                              mov eax, 0	       632	worktree.c	FUNCTION_16	IF_4	CALL_18
0x2548	      0xe800000000	                          call 0x400258d	       632	worktree.c	FUNCTION_16	IF_4	CALL_18
0x254d	    0x488b9d40ffff	             mov rbx, qword [rbp - 0xc0]	       635	worktree.c	FUNCTION_16	CALL_20
0x2554	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       635	worktree.c	FUNCTION_16	CALL_20
0x255b	        0x488b4008	                mov rax, qword [rax + 8]	       635	worktree.c	FUNCTION_16	CALL_20
0x255f	          0x4889c6	                            mov rsi, rax	       635	worktree.c	FUNCTION_16	CALL_20
0x2562	      0xbf00000000	                              mov edi, 0	       635	worktree.c	FUNCTION_16	CALL_20
0x2567	      0xb800000000	                              mov eax, 0	       635	worktree.c	FUNCTION_16	CALL_20
0x256c	      0xe800000000	                          call 0x40025b1	       635	worktree.c	FUNCTION_16	CALL_20
0x2571	          0x4889da	                            mov rdx, rbx	       635	worktree.c	FUNCTION_16	CALL_20
0x2574	      0xbe00000000	                              mov esi, 0	       635	worktree.c	FUNCTION_16	CALL_20
0x2579	          0x4889c7	                            mov rdi, rax	       635	worktree.c	FUNCTION_16	CALL_20
0x257c	      0xb800000000	                              mov eax, 0	       635	worktree.c	FUNCTION_16	CALL_20
0x2581	      0xe800000000	                          call 0x40025c6	       635	worktree.c	FUNCTION_16	CALL_20
0x2586	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       637	worktree.c	FUNCTION_16	CALL_21
0x258d	          0x4889c7	                            mov rdi, rax	       637	worktree.c	FUNCTION_16	CALL_21
0x2590	      0xe800000000	                          call 0x40025d5	       637	worktree.c	FUNCTION_16	CALL_21
0x2595	      0xb800000000	                              mov eax, 0	       638	worktree.c	FUNCTION_16
0x259a	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       639	worktree.c	FUNCTION_16
0x259e	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       639	worktree.c	FUNCTION_16
0x25a7	            0x7405	                            je 0x40025ee	       639	worktree.c	FUNCTION_16
0x25a9	      0xe800000000	                          call 0x40025ee	       639	worktree.c	FUNCTION_16
0x25ae	    0x4881c4d80000	                           add rsp, 0xd8	       639	worktree.c	FUNCTION_16
0x25b5	              0x5b	                                 pop rbx	       639	worktree.c	FUNCTION_16
0x25b6	              0x5d	                                 pop rbp	       639	worktree.c	FUNCTION_16
0x25b7	              0xc3	                                     ret	       639	worktree.c	FUNCTION_16
remove_worktree	functions,0:CALL,26:ELSE,0:FOR,0:IF,8:WHILE,0:DO,0:SWITCH,0	152
0x2fe5	              0x55	                                push rbp	       830	worktree.c	FUNCTION_23
0x2fe6	          0x4889e5	                            mov rbp, rsp	       830	worktree.c	FUNCTION_23
0x2fe9	              0x53	                                push rbx	       830	worktree.c	FUNCTION_23
0x2fea	    0x4881ecf80000	                           sub rsp, 0xf8	       830	worktree.c	FUNCTION_23
0x2ff1	    0x89bd1cffffff	             mov dword [rbp - 0xe4], edi	       830	worktree.c	FUNCTION_23
0x2ff7	    0x4889b510ffff	             mov qword [rbp - 0xf0], rsi	       830	worktree.c	FUNCTION_23
0x2ffe	    0x48899508ffff	             mov qword [rbp - 0xf8], rdx	       830	worktree.c	FUNCTION_23
0x3005	    0x64488b042528	                mov rax, qword fs:[0x28]	       830	worktree.c	FUNCTION_23
0x300e	        0x488945e8	             mov qword [rbp - 0x18], rax	       830	worktree.c	FUNCTION_23
0x3012	            0x31c0	                            xor eax, eax	       830	worktree.c	FUNCTION_23
0x3014	    0xc78520ffffff	               mov dword [rbp - 0xe0], 0	       831	worktree.c	FUNCTION_23
0x301e	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       832	worktree.c	FUNCTION_23
0x3025	      0xb800000000	                              mov eax, 0	       832	worktree.c	FUNCTION_23
0x302a	      0xb910000000	                           mov ecx, 0x10	       832	worktree.c	FUNCTION_23
0x302f	          0x4889d7	                            mov rdi, rdx	       832	worktree.c	FUNCTION_23
0x3032	          0xf348ab	              rep stosq qword [rdi], rax	       832	worktree.c	FUNCTION_23
0x3035	    0xc78560ffffff	               mov dword [rbp - 0xa0], 6	       832	worktree.c	FUNCTION_23
0x303f	    0xc78564ffffff	           mov dword [rbp - 0x9c], 0x66 	       832	worktree.c	FUNCTION_23
0x3049	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	       832	worktree.c	FUNCTION_23
0x3054	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	       832	worktree.c	FUNCTION_23
0x305b	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       832	worktree.c	FUNCTION_23
0x3062	    0x48c745800000	               mov qword [rbp - 0x80], 0	       832	worktree.c	FUNCTION_23
0x306a	    0xc74588020200	          mov dword [rbp - 0x78], 0x202 	       832	worktree.c	FUNCTION_23
0x3071	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	       839	worktree.c	FUNCTION_23
0x307c	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	       839	worktree.c	FUNCTION_23
0x3087	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	       839	worktree.c	FUNCTION_23
0x3092	    0xc78524ffffff	               mov dword [rbp - 0xdc], 0	       841	worktree.c	FUNCTION_23
0x309c	    0x488d8d60ffff	                   lea rcx, [rbp - 0xa0]	       843	worktree.c	FUNCTION_23	CALL_4
0x30a3	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	       843	worktree.c	FUNCTION_23	CALL_4
0x30aa	    0x488bb510ffff	             mov rsi, qword [rbp - 0xf0]	       843	worktree.c	FUNCTION_23	CALL_4
0x30b1	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	       843	worktree.c	FUNCTION_23	CALL_4
0x30b7	    0x41b900000000	                              mov r9d, 0	       843	worktree.c	FUNCTION_23	CALL_4
0x30bd	    0x41b800000000	                              mov r8d, 0	       843	worktree.c	FUNCTION_23	CALL_4
0x30c3	            0x89c7	                            mov edi, eax	       843	worktree.c	FUNCTION_23	CALL_4
0x30c5	      0xe800000000	                          call 0x400310a	       843	worktree.c	FUNCTION_23	CALL_4
0x30ca	    0x89851cffffff	             mov dword [rbp - 0xe4], eax	       843	worktree.c	FUNCTION_23	CALL_4
0x30d0	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 1	       844	worktree.c	FUNCTION_23	IF_1
0x30d7	            0x7414	                            je 0x400312d	       844	worktree.c	FUNCTION_23	IF_1
0x30d9	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	       845	worktree.c	FUNCTION_23	CALL_5
0x30e0	          0x4889c6	                            mov rsi, rax	       845	worktree.c	FUNCTION_23	CALL_5
0x30e3	      0xbf00000000	                              mov edi, 0	       845	worktree.c	FUNCTION_23	CALL_5
0x30e8	      0xe800000000	                          call 0x400312d	       845	worktree.c	FUNCTION_23	CALL_5
0x30ed	      0xbf00000000	                              mov edi, 0	       847	worktree.c	FUNCTION_23	CALL_6
0x30f2	      0xe800000000	                          call 0x4003137	       847	worktree.c	FUNCTION_23	CALL_6
0x30f7	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	       847	worktree.c	FUNCTION_23	CALL_6
0x30fe	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       848	worktree.c	FUNCTION_23	CALL_7
0x3105	          0x488b10	                    mov rdx, qword [rax]	       848	worktree.c	FUNCTION_23	CALL_7
0x3108	    0x488b8d08ffff	             mov rcx, qword [rbp - 0xf8]	       848	worktree.c	FUNCTION_23	CALL_7
0x310f	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       848	worktree.c	FUNCTION_23	CALL_7
0x3116	          0x4889ce	                            mov rsi, rcx	       848	worktree.c	FUNCTION_23	CALL_7
0x3119	          0x4889c7	                            mov rdi, rax	       848	worktree.c	FUNCTION_23	CALL_7
0x311c	      0xe800000000	                          call 0x4003161	       848	worktree.c	FUNCTION_23	CALL_7
0x3121	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	       848	worktree.c	FUNCTION_23	CALL_7
0x3128	    0x4883bd30ffff	               cmp qword [rbp - 0xd0], 0	       849	worktree.c	FUNCTION_23	IF_2
0x3130	            0x7524	                           jne 0x4003196	       849	worktree.c	FUNCTION_23	IF_2
0x3132	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       850	worktree.c	FUNCTION_23	CALL_9
0x3139	          0x488b18	                    mov rbx, qword [rax]	       850	worktree.c	FUNCTION_23	CALL_9
0x313c	      0xbf00000000	                              mov edi, 0	       850	worktree.c	FUNCTION_23	CALL_9
0x3141	      0xe8f9cfffff	                               call sym.	       850	worktree.c	FUNCTION_23	CALL_9
0x3146	          0x4889de	                            mov rsi, rbx	       850	worktree.c	FUNCTION_23	CALL_9
0x3149	          0x4889c7	                            mov rdi, rax	       850	worktree.c	FUNCTION_23	CALL_9
0x314c	      0xb800000000	                              mov eax, 0	       850	worktree.c	FUNCTION_23	CALL_9
0x3151	      0xe800000000	                          call 0x4003196	       850	worktree.c	FUNCTION_23	CALL_9
0x3156	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       851	worktree.c	FUNCTION_23	IF_3	CALL_10
0x315d	          0x4889c7	                            mov rdi, rax	       851	worktree.c	FUNCTION_23	IF_3	CALL_10
0x3160	      0xe800000000	                          call 0x40031a5	       851	worktree.c	FUNCTION_23	IF_3	CALL_10
0x3165	            0x85c0	                           test eax, eax	       851	worktree.c	FUNCTION_23	IF_3	CALL_10
0x3167	            0x7424	                            je 0x40031cd	       851	worktree.c	FUNCTION_23	IF_3	CALL_10
0x3169	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       852	worktree.c	FUNCTION_23	CALL_12
0x3170	          0x488b18	                    mov rbx, qword [rax]	       852	worktree.c	FUNCTION_23	CALL_12
0x3173	      0xbf00000000	                              mov edi, 0	       852	worktree.c	FUNCTION_23	CALL_12
0x3178	      0xe8c2cfffff	                               call sym.	       852	worktree.c	FUNCTION_23	CALL_12
0x317d	          0x4889de	                            mov rsi, rbx	       852	worktree.c	FUNCTION_23	CALL_12
0x3180	          0x4889c7	                            mov rdi, rax	       852	worktree.c	FUNCTION_23	CALL_12
0x3183	      0xb800000000	                              mov eax, 0	       852	worktree.c	FUNCTION_23	CALL_12
0x3188	      0xe800000000	                          call 0x40031cd	       852	worktree.c	FUNCTION_23	CALL_12
0x318d	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       853	worktree.c	FUNCTION_23	CALL_13
0x3194	          0x4889c7	                            mov rdi, rax	       853	worktree.c	FUNCTION_23	CALL_13
0x3197	      0xe800000000	                          call 0x40031dc	       853	worktree.c	FUNCTION_23	CALL_13
0x319c	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       853	worktree.c	FUNCTION_23	CALL_13
0x31a3	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	       854	worktree.c	FUNCTION_23	IF_4
0x31ab	            0x7449	                            je 0x4003236	       854	worktree.c	FUNCTION_23	IF_4
0x31ad	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       855	worktree.c	FUNCTION_23	IF_4	IF_5
0x31b4	           0xfb600	                   movzx eax, byte [rax]	       855	worktree.c	FUNCTION_23	IF_4	IF_5
0x31b7	            0x84c0	                             test al, al	       855	worktree.c	FUNCTION_23	IF_4	IF_5
0x31b9	            0x7424	                            je 0x400321f	       855	worktree.c	FUNCTION_23	IF_4	IF_5
0x31bb	      0xbf00000000	                              mov edi, 0	       856	worktree.c	FUNCTION_23	IF_4	IF_5	CALL_15
0x31c0	      0xe87acfffff	                               call sym.	       856	worktree.c	FUNCTION_23	IF_4	IF_5	CALL_15
0x31c5	          0x4889c2	                            mov rdx, rax	       856	worktree.c	FUNCTION_23	IF_4	IF_5	CALL_15
0x31c8	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       856	worktree.c	FUNCTION_23	IF_4	IF_5	CALL_15
0x31cf	          0x4889c6	                            mov rsi, rax	       856	worktree.c	FUNCTION_23	IF_4	IF_5	CALL_15
0x31d2	          0x4889d7	                            mov rdi, rdx	       856	worktree.c	FUNCTION_23	IF_4	IF_5	CALL_15
0x31d5	      0xb800000000	                              mov eax, 0	       856	worktree.c	FUNCTION_23	IF_4	IF_5	CALL_15
0x31da	      0xe800000000	                          call 0x400321f	       856	worktree.c	FUNCTION_23	IF_4	IF_5	CALL_15
0x31df	      0xbf00000000	                              mov edi, 0	       858	worktree.c	FUNCTION_23	IF_4	CALL_17
0x31e4	      0xe856cfffff	                               call sym.	       858	worktree.c	FUNCTION_23	IF_4	CALL_17
0x31e9	          0x4889c7	                            mov rdi, rax	       858	worktree.c	FUNCTION_23	IF_4	CALL_17
0x31ec	      0xb800000000	                              mov eax, 0	       858	worktree.c	FUNCTION_23	IF_4	CALL_17
0x31f1	      0xe800000000	                          call 0x4003236	       858	worktree.c	FUNCTION_23	IF_4	CALL_17
0x31f6	    0x488d8d40ffff	                   lea rcx, [rbp - 0xc0]	       860	worktree.c	FUNCTION_23	IF_6	CALL_18
0x31fd	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       860	worktree.c	FUNCTION_23	IF_6	CALL_18
0x3204	      0xba01000000	                              mov edx, 1	       860	worktree.c	FUNCTION_23	IF_6	CALL_18
0x3209	          0x4889ce	                            mov rsi, rcx	       860	worktree.c	FUNCTION_23	IF_6	CALL_18
0x320c	          0x4889c7	                            mov rdi, rax	       860	worktree.c	FUNCTION_23	IF_6	CALL_18
0x320f	      0xe800000000	                          call 0x4003254	       860	worktree.c	FUNCTION_23	IF_6	CALL_18
0x3214	            0x85c0	                           test eax, eax	       860	worktree.c	FUNCTION_23	IF_6	CALL_18
0x3216	            0x7421	                            je 0x4003279	       860	worktree.c	FUNCTION_23	IF_6	CALL_18
0x3218	    0x488b9d50ffff	             mov rbx, qword [rbp - 0xb0]	       861	worktree.c	FUNCTION_23	IF_6	CALL_20
0x321f	      0xbf00000000	                              mov edi, 0	       861	worktree.c	FUNCTION_23	IF_6	CALL_20
0x3224	      0xe816cfffff	                               call sym.	       861	worktree.c	FUNCTION_23	IF_6	CALL_20
0x3229	          0x4889de	                            mov rsi, rbx	       861	worktree.c	FUNCTION_23	IF_6	CALL_20
0x322c	          0x4889c7	                            mov rdi, rax	       861	worktree.c	FUNCTION_23	IF_6	CALL_20
0x322f	      0xb800000000	                              mov eax, 0	       861	worktree.c	FUNCTION_23	IF_6	CALL_20
0x3234	      0xe800000000	                          call 0x4003279	       861	worktree.c	FUNCTION_23	IF_6	CALL_20
0x3239	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	       863	worktree.c	FUNCTION_23	CALL_21
0x3240	          0x4889c7	                            mov rdi, rax	       863	worktree.c	FUNCTION_23	CALL_21
0x3243	      0xe800000000	                          call 0x4003288	       863	worktree.c	FUNCTION_23	CALL_21
0x3248	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       865	worktree.c	FUNCTION_23	IF_7	CALL_22
0x324f	          0x488b00	                    mov rax, qword [rax]	       865	worktree.c	FUNCTION_23	IF_7	CALL_22
0x3252	          0x4889c7	                            mov rdi, rax	       865	worktree.c	FUNCTION_23	IF_7	CALL_22
0x3255	      0xe800000000	                          call 0x400329a	       865	worktree.c	FUNCTION_23	IF_7	CALL_22
0x325a	            0x85c0	                           test eax, eax	       865	worktree.c	FUNCTION_23	IF_7	CALL_22
0x325c	            0x743b	                            je 0x40032d9	       865	worktree.c	FUNCTION_23	IF_7	CALL_22
0x325e	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	       866	worktree.c	FUNCTION_23	IF_7	IF_8
0x3264	            0x85c0	                           test eax, eax	       866	worktree.c	FUNCTION_23	IF_7	IF_8
0x3266	            0x751c	                           jne 0x40032c4	       866	worktree.c	FUNCTION_23	IF_7	IF_8
0x3268	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       867	worktree.c	FUNCTION_23	IF_7	CALL_23
0x326f	          0x488b10	                    mov rdx, qword [rax]	       867	worktree.c	FUNCTION_23	IF_7	CALL_23
0x3272	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       867	worktree.c	FUNCTION_23	IF_7	CALL_23
0x3279	          0x4889d6	                            mov rsi, rdx	       867	worktree.c	FUNCTION_23	IF_7	CALL_23
0x327c	          0x4889c7	                            mov rdi, rax	       867	worktree.c	FUNCTION_23	IF_7	CALL_23
0x327f	      0xe8e5f9ffff	           call sym.check_clean_worktree	       867	worktree.c	FUNCTION_23	IF_7	CALL_23
0x3284	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       869	worktree.c	FUNCTION_23	IF_7	CALL_24
0x328b	          0x4889c7	                            mov rdi, rax	       869	worktree.c	FUNCTION_23	IF_7	CALL_24
0x328e	      0xe8c8fbffff	           call sym.delete_git_work_tree	       869	worktree.c	FUNCTION_23	IF_7	CALL_24
0x3293	     0x98524ffffff	              or dword [rbp - 0xdc], eax	       869	worktree.c	FUNCTION_23	IF_7	CALL_24
0x3299	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       875	worktree.c	FUNCTION_23	CALL_25
0x32a0	          0x4889c7	                            mov rdi, rax	       875	worktree.c	FUNCTION_23	CALL_25
0x32a3	      0xe86dfcffff	                 call sym.delete_git_dir	       875	worktree.c	FUNCTION_23	CALL_25
0x32a8	     0x98524ffffff	              or dword [rbp - 0xdc], eax	       875	worktree.c	FUNCTION_23	CALL_25
0x32ae	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       877	worktree.c	FUNCTION_23	CALL_26
0x32b5	          0x4889c7	                            mov rdi, rax	       877	worktree.c	FUNCTION_23	CALL_26
0x32b8	      0xe800000000	                          call 0x40032fd	       877	worktree.c	FUNCTION_23	CALL_26
0x32bd	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	       878	worktree.c	FUNCTION_23
0x32c3	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       879	worktree.c	FUNCTION_23
0x32c7	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       879	worktree.c	FUNCTION_23
0x32d0	            0x7405	                            je 0x4003317	       879	worktree.c	FUNCTION_23
0x32d2	      0xe800000000	                          call 0x4003317	       879	worktree.c	FUNCTION_23
0x32d7	    0x4881c4f80000	                           add rsp, 0xf8	       879	worktree.c	FUNCTION_23
0x32de	              0x5b	                                 pop rbx	       879	worktree.c	FUNCTION_23
0x32df	              0x5d	                                 pop rbp	       879	worktree.c	FUNCTION_23
0x32e0	              0xc3	                                     ret	       879	worktree.c	FUNCTION_23
measure_widths	functions,0:CALL,3:ELSE,0:FOR,1:IF,2:WHILE,0:DO,0:SWITCH,0	59
0x20a5	              0x55	                                push rbp	       561	worktree.c	FUNCTION_14
0x20a6	          0x4889e5	                            mov rbp, rsp	       561	worktree.c	FUNCTION_14
0x20a9	        0x4883ec30	                           sub rsp, 0x30	       561	worktree.c	FUNCTION_14
0x20ad	        0x48897de8	             mov qword [rbp - 0x18], rdi	       561	worktree.c	FUNCTION_14
0x20b1	        0x488975e0	             mov qword [rbp - 0x20], rsi	       561	worktree.c	FUNCTION_14
0x20b5	        0x488955d8	             mov qword [rbp - 0x28], rdx	       561	worktree.c	FUNCTION_14
0x20b9	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       564	worktree.c	FUNCTION_14	FOR_1
0x20c0	      0xe988000000	                           jmp 0x400218d	       564	worktree.c	FUNCTION_14	FOR_1
0x20c5	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       566	worktree.c	FUNCTION_14	FOR_1	CALL_1
0x20c8	            0x4898	                                    cdqe	       566	worktree.c	FUNCTION_14	FOR_1	CALL_1
0x20ca	    0x488d14c50000	                        lea rdx, [rax*8]	       566	worktree.c	FUNCTION_14	FOR_1	CALL_1
0x20d2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       566	worktree.c	FUNCTION_14	FOR_1	CALL_1
0x20d6	          0x4801d0	                            add rax, rdx	       566	worktree.c	FUNCTION_14	FOR_1	CALL_1
0x20d9	          0x488b00	                    mov rax, qword [rax]	       566	worktree.c	FUNCTION_14	FOR_1	CALL_1
0x20dc	          0x488b00	                    mov rax, qword [rax]	       566	worktree.c	FUNCTION_14	FOR_1	CALL_1
0x20df	          0x4889c7	                            mov rdi, rax	       566	worktree.c	FUNCTION_14	FOR_1	CALL_1
0x20e2	      0xe800000000	                          call 0x4002127	       566	worktree.c	FUNCTION_14	FOR_1	CALL_1
0x20e7	          0x8945f8	                mov dword [rbp - 8], eax	       566	worktree.c	FUNCTION_14	FOR_1	CALL_1
0x20ea	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       568	worktree.c	FUNCTION_14	FOR_1	IF_1
0x20ee	            0x8b00	                    mov eax, dword [rax]	       568	worktree.c	FUNCTION_14	FOR_1	IF_1
0x20f0	          0x3b45f8	                cmp eax, dword [rbp - 8]	       568	worktree.c	FUNCTION_14	FOR_1	IF_1
0x20f3	            0x7d09	                           jge 0x400213e	       568	worktree.c	FUNCTION_14	FOR_1	IF_1
0x20f5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       569	worktree.c	FUNCTION_14	FOR_1	IF_1
0x20f9	          0x8b55f8	                mov edx, dword [rbp - 8]	       569	worktree.c	FUNCTION_14	FOR_1	IF_1
0x20fc	            0x8910	                    mov dword [rax], edx	       569	worktree.c	FUNCTION_14	FOR_1	IF_1
0x20fe	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       570	worktree.c	FUNCTION_14	FOR_1	CALL_3
0x2102	            0x8b00	                    mov eax, dword [rax]	       570	worktree.c	FUNCTION_14	FOR_1	CALL_3
0x2104	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       570	worktree.c	FUNCTION_14	FOR_1	CALL_3
0x2107	          0x4863d2	                         movsxd rdx, edx	       570	worktree.c	FUNCTION_14	FOR_1	CALL_3
0x210a	    0x488d0cd50000	                        lea rcx, [rdx*8]	       570	worktree.c	FUNCTION_14	FOR_1	CALL_3
0x2112	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       570	worktree.c	FUNCTION_14	FOR_1	CALL_3
0x2116	          0x4801ca	                            add rdx, rcx	       570	worktree.c	FUNCTION_14	FOR_1	CALL_3
0x2119	          0x488b12	                    mov rdx, qword [rdx]	       570	worktree.c	FUNCTION_14	FOR_1	CALL_3
0x211c	        0x4883c220	                           add rdx, 0x20	       570	worktree.c	FUNCTION_14	FOR_1	CALL_3
0x2120	            0x89c6	                            mov esi, eax	       570	worktree.c	FUNCTION_14	FOR_1	CALL_3
0x2122	          0x4889d7	                            mov rdi, rdx	       570	worktree.c	FUNCTION_14	FOR_1	CALL_3
0x2125	      0xe800000000	                          call 0x400216a	       570	worktree.c	FUNCTION_14	FOR_1	CALL_3
0x212a	          0x4889c7	                            mov rdi, rax	       570	worktree.c	FUNCTION_14	FOR_1	CALL_3
0x212d	      0xe800000000	                          call 0x4002172	       570	worktree.c	FUNCTION_14	FOR_1	CALL_3
0x2132	          0x8945fc	                mov dword [rbp - 4], eax	       570	worktree.c	FUNCTION_14	FOR_1	CALL_3
0x2135	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       571	worktree.c	FUNCTION_14	FOR_1	IF_2
0x2139	            0x8b00	                    mov eax, dword [rax]	       571	worktree.c	FUNCTION_14	FOR_1	IF_2
0x213b	          0x3b45fc	                cmp eax, dword [rbp - 4]	       571	worktree.c	FUNCTION_14	FOR_1	IF_2
0x213e	            0x7d09	                           jge 0x4002189	       571	worktree.c	FUNCTION_14	FOR_1	IF_2
0x2140	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       572	worktree.c	FUNCTION_14	FOR_1	IF_2
0x2144	          0x8b55fc	                mov edx, dword [rbp - 4]	       572	worktree.c	FUNCTION_14	FOR_1	IF_2
0x2147	            0x8910	                    mov dword [rax], edx	       572	worktree.c	FUNCTION_14	FOR_1	IF_2
0x2149	        0x8345f401	                add dword [rbp - 0xc], 1	       564	worktree.c	FUNCTION_14	FOR_1
0x214d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       564	worktree.c	FUNCTION_14	FOR_1
0x2150	            0x4898	                                    cdqe	       564	worktree.c	FUNCTION_14	FOR_1
0x2152	    0x488d14c50000	                        lea rdx, [rax*8]	       564	worktree.c	FUNCTION_14	FOR_1
0x215a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       564	worktree.c	FUNCTION_14	FOR_1
0x215e	          0x4801d0	                            add rax, rdx	       564	worktree.c	FUNCTION_14	FOR_1
0x2161	          0x488b00	                    mov rax, qword [rax]	       564	worktree.c	FUNCTION_14	FOR_1
0x2164	          0x4885c0	                           test rax, rax	       564	worktree.c	FUNCTION_14	FOR_1
0x2167	     0xf8558ffffff	                           jne 0x4002105	       564	worktree.c	FUNCTION_14	FOR_1
0x216d	              0x90	                                     nop	       574	worktree.c	FUNCTION_14
0x216e	              0xc9	                                   leave	       574	worktree.c	FUNCTION_14
0x216f	              0xc3	                                     ret	       574	worktree.c	FUNCTION_14
check_clean_worktree	functions,0:CALL,15:ELSE,0:FOR,0:IF,3:WHILE,0:DO,0:SWITCH,0	111
0x2c69	              0x55	                                push rbp	       762	worktree.c	FUNCTION_20
0x2c6a	          0x4889e5	                            mov rbp, rsp	       762	worktree.c	FUNCTION_20
0x2c6d	    0x4881eca00000	                           sub rsp, 0xa0	       762	worktree.c	FUNCTION_20
0x2c74	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	       762	worktree.c	FUNCTION_20
0x2c7b	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	       762	worktree.c	FUNCTION_20
0x2c82	    0x64488b042528	                mov rax, qword fs:[0x28]	       762	worktree.c	FUNCTION_20
0x2c8b	        0x488945f8	                mov qword [rbp - 8], rax	       762	worktree.c	FUNCTION_20
0x2c8f	            0x31c0	                            xor eax, eax	       762	worktree.c	FUNCTION_20
0x2c91	    0x48c745800000	               mov qword [rbp - 0x80], 0	       763	worktree.c	FUNCTION_20
0x2c99	    0xc74588000000	               mov dword [rbp - 0x78], 0	       763	worktree.c	FUNCTION_20
0x2ca0	    0xc7458c000000	               mov dword [rbp - 0x74], 0	       763	worktree.c	FUNCTION_20
0x2ca7	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       772	worktree.c	FUNCTION_20	CALL_1
0x2cae	          0x4889c7	                            mov rdi, rax	       772	worktree.c	FUNCTION_20	CALL_1
0x2cb1	      0xe89bfaffff	         call sym.validate_no_submodules	       772	worktree.c	FUNCTION_20	CALL_1
0x2cb6	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       774	worktree.c	FUNCTION_20	CALL_2
0x2cbd	          0x488b10	                    mov rdx, qword [rax]	       774	worktree.c	FUNCTION_20	CALL_2
0x2cc0	        0x488d4580	                   lea rax, [rbp - 0x80]	       774	worktree.c	FUNCTION_20	CALL_2
0x2cc4	          0x4889d1	                            mov rcx, rdx	       774	worktree.c	FUNCTION_20	CALL_2
0x2cc7	      0xba00000000	                              mov edx, 0	       774	worktree.c	FUNCTION_20	CALL_2
0x2ccc	      0xbe00000000	                              mov esi, 0	       774	worktree.c	FUNCTION_20	CALL_2
0x2cd1	          0x4889c7	                            mov rdi, rax	       774	worktree.c	FUNCTION_20	CALL_2
0x2cd4	      0xb800000000	                              mov eax, 0	       774	worktree.c	FUNCTION_20	CALL_2
0x2cd9	      0xe800000000	                          call 0x4002d1e	       774	worktree.c	FUNCTION_20	CALL_2
0x2cde	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       776	worktree.c	FUNCTION_20	CALL_3
0x2ce5	          0x488b10	                    mov rdx, qword [rax]	       776	worktree.c	FUNCTION_20	CALL_3
0x2ce8	        0x488d4580	                   lea rax, [rbp - 0x80]	       776	worktree.c	FUNCTION_20	CALL_3
0x2cec	          0x4889d1	                            mov rcx, rdx	       776	worktree.c	FUNCTION_20	CALL_3
0x2cef	      0xba00000000	                              mov edx, 0	       776	worktree.c	FUNCTION_20	CALL_3
0x2cf4	      0xbe00000000	                              mov esi, 0	       776	worktree.c	FUNCTION_20	CALL_3
0x2cf9	          0x4889c7	                            mov rdi, rax	       776	worktree.c	FUNCTION_20	CALL_3
0x2cfc	      0xb800000000	                              mov eax, 0	       776	worktree.c	FUNCTION_20	CALL_3
0x2d01	      0xe800000000	                          call 0x4002d46	       776	worktree.c	FUNCTION_20	CALL_3
0x2d06	        0x488d4590	                   lea rax, [rbp - 0x70]	       778	worktree.c	FUNCTION_20	CALL_4
0x2d0a	      0xba60000000	                           mov edx, 0x60	       778	worktree.c	FUNCTION_20	CALL_4
0x2d0f	      0xbe00000000	                              mov esi, 0	       778	worktree.c	FUNCTION_20	CALL_4
0x2d14	          0x4889c7	                            mov rdi, rax	       778	worktree.c	FUNCTION_20	CALL_4
0x2d17	      0xe800000000	                          call 0x4002d5c	       778	worktree.c	FUNCTION_20	CALL_4
0x2d1c	        0x488d4590	                   lea rax, [rbp - 0x70]	       779	worktree.c	FUNCTION_20	CALL_5
0x2d20	        0x4883c008	                              add rax, 8	       779	worktree.c	FUNCTION_20	CALL_5
0x2d24	    0x41b800000000	                              mov r8d, 0	       779	worktree.c	FUNCTION_20	CALL_5
0x2d2a	      0xb900000000	                              mov ecx, 0	       779	worktree.c	FUNCTION_20	CALL_5
0x2d2f	      0xba00000000	                              mov edx, 0	       779	worktree.c	FUNCTION_20	CALL_5
0x2d34	      0xbe00000000	                              mov esi, 0	       779	worktree.c	FUNCTION_20	CALL_5
0x2d39	          0x4889c7	                            mov rdi, rax	       779	worktree.c	FUNCTION_20	CALL_5
0x2d3c	      0xb800000000	                              mov eax, 0	       779	worktree.c	FUNCTION_20	CALL_5
0x2d41	      0xe800000000	                          call 0x4002d86	       779	worktree.c	FUNCTION_20	CALL_5
0x2d46	        0x488b4580	             mov rax, qword [rbp - 0x80]	       782	worktree.c	FUNCTION_20
0x2d4a	        0x488945d0	             mov qword [rbp - 0x30], rax	       782	worktree.c	FUNCTION_20
0x2d4e	         0xfb645d8	            movzx eax, byte [rbp - 0x28]	       783	worktree.c	FUNCTION_20
0x2d52	          0x83c808	                               or eax, 8	       783	worktree.c	FUNCTION_20
0x2d55	          0x8845d8	               mov byte [rbp - 0x28], al	       783	worktree.c	FUNCTION_20
0x2d58	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       784	worktree.c	FUNCTION_20
0x2d5f	          0x488b00	                    mov rax, qword [rax]	       784	worktree.c	FUNCTION_20
0x2d62	        0x488945c8	             mov qword [rbp - 0x38], rax	       784	worktree.c	FUNCTION_20
0x2d66	    0xc745c0ffffff	     mov dword [rbp - 0x40], 0xffffffff 	       785	worktree.c	FUNCTION_20
0x2d6d	        0x488d4590	                   lea rax, [rbp - 0x70]	       786	worktree.c	FUNCTION_20	CALL_6
0x2d71	          0x4889c7	                            mov rdi, rax	       786	worktree.c	FUNCTION_20	CALL_6
0x2d74	      0xe800000000	                          call 0x4002db9	       786	worktree.c	FUNCTION_20	CALL_6
0x2d79	    0x89857cffffff	             mov dword [rbp - 0x84], eax	       786	worktree.c	FUNCTION_20	CALL_6
0x2d7f	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	       787	worktree.c	FUNCTION_20	IF_1
0x2d86	            0x7424	                            je 0x4002dec	       787	worktree.c	FUNCTION_20	IF_1
0x2d88	      0xbf00000000	                              mov edi, 0	       788	worktree.c	FUNCTION_20	IF_1	CALL_8
0x2d8d	      0xe8add3ffff	                               call sym.	       788	worktree.c	FUNCTION_20	IF_1	CALL_8
0x2d92	          0x4889c2	                            mov rdx, rax	       788	worktree.c	FUNCTION_20	IF_1	CALL_8
0x2d95	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       788	worktree.c	FUNCTION_20	IF_1	CALL_8
0x2d9c	          0x4889c6	                            mov rsi, rax	       788	worktree.c	FUNCTION_20	IF_1	CALL_8
0x2d9f	          0x4889d7	                            mov rdi, rdx	       788	worktree.c	FUNCTION_20	IF_1	CALL_8
0x2da2	      0xb800000000	                              mov eax, 0	       788	worktree.c	FUNCTION_20	IF_1	CALL_8
0x2da7	      0xe800000000	                          call 0x4002dec	       788	worktree.c	FUNCTION_20	IF_1	CALL_8
0x2dac	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       790	worktree.c	FUNCTION_20	CALL_9
0x2daf	        0x488d4df7	                      lea rcx, [rbp - 9]	       790	worktree.c	FUNCTION_20	CALL_9
0x2db3	      0xba01000000	                              mov edx, 1	       790	worktree.c	FUNCTION_20	CALL_9
0x2db8	          0x4889ce	                            mov rsi, rcx	       790	worktree.c	FUNCTION_20	CALL_9
0x2dbb	            0x89c7	                            mov edi, eax	       790	worktree.c	FUNCTION_20	CALL_9
0x2dbd	      0xe800000000	                          call 0x4002e02	       790	worktree.c	FUNCTION_20	CALL_9
0x2dc2	    0x89857cffffff	             mov dword [rbp - 0x84], eax	       790	worktree.c	FUNCTION_20	CALL_9
0x2dc8	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	       791	worktree.c	FUNCTION_20	IF_2
0x2dcf	            0x7424	                            je 0x4002e35	       791	worktree.c	FUNCTION_20	IF_2
0x2dd1	      0xbf00000000	                              mov edi, 0	       792	worktree.c	FUNCTION_20	IF_2	CALL_11
0x2dd6	      0xe864d3ffff	                               call sym.	       792	worktree.c	FUNCTION_20	IF_2	CALL_11
0x2ddb	          0x4889c2	                            mov rdx, rax	       792	worktree.c	FUNCTION_20	IF_2	CALL_11
0x2dde	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       792	worktree.c	FUNCTION_20	IF_2	CALL_11
0x2de5	          0x4889c6	                            mov rsi, rax	       792	worktree.c	FUNCTION_20	IF_2	CALL_11
0x2de8	          0x4889d7	                            mov rdi, rdx	       792	worktree.c	FUNCTION_20	IF_2	CALL_11
0x2deb	      0xb800000000	                              mov eax, 0	       792	worktree.c	FUNCTION_20	IF_2	CALL_11
0x2df0	      0xe800000000	                          call 0x4002e35	       792	worktree.c	FUNCTION_20	IF_2	CALL_11
0x2df5	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       794	worktree.c	FUNCTION_20	CALL_12
0x2df8	            0x89c7	                            mov edi, eax	       794	worktree.c	FUNCTION_20	CALL_12
0x2dfa	      0xe800000000	                          call 0x4002e3f	       794	worktree.c	FUNCTION_20	CALL_12
0x2dff	        0x488d4590	                   lea rax, [rbp - 0x70]	       795	worktree.c	FUNCTION_20	CALL_13
0x2e03	          0x4889c7	                            mov rdi, rax	       795	worktree.c	FUNCTION_20	CALL_13
0x2e06	      0xe800000000	                          call 0x4002e4b	       795	worktree.c	FUNCTION_20	CALL_13
0x2e0b	    0x89857cffffff	             mov dword [rbp - 0x84], eax	       795	worktree.c	FUNCTION_20	CALL_13
0x2e11	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	       796	worktree.c	FUNCTION_20	IF_3
0x2e18	            0x742a	                            je 0x4002e84	       796	worktree.c	FUNCTION_20	IF_3
0x2e1a	      0xbf00000000	                              mov edi, 0	       797	worktree.c	FUNCTION_20	IF_3	CALL_15
0x2e1f	      0xe81bd3ffff	                               call sym.	       797	worktree.c	FUNCTION_20	IF_3	CALL_15
0x2e24	          0x4889c1	                            mov rcx, rax	       797	worktree.c	FUNCTION_20	IF_3	CALL_15
0x2e27	    0x8b957cffffff	             mov edx, dword [rbp - 0x84]	       797	worktree.c	FUNCTION_20	IF_3	CALL_15
0x2e2d	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       797	worktree.c	FUNCTION_20	IF_3	CALL_15
0x2e34	          0x4889c6	                            mov rsi, rax	       797	worktree.c	FUNCTION_20	IF_3	CALL_15
0x2e37	          0x4889cf	                            mov rdi, rcx	       797	worktree.c	FUNCTION_20	IF_3	CALL_15
0x2e3a	      0xb800000000	                              mov eax, 0	       797	worktree.c	FUNCTION_20	IF_3	CALL_15
0x2e3f	      0xe800000000	                          call 0x4002e84	       797	worktree.c	FUNCTION_20	IF_3	CALL_15
0x2e44	              0x90	                                     nop	       799	worktree.c	FUNCTION_20
0x2e45	        0x488b45f8	                mov rax, qword [rbp - 8]	       799	worktree.c	FUNCTION_20
0x2e49	    0x644833042528	                xor rax, qword fs:[0x28]	       799	worktree.c	FUNCTION_20
0x2e52	            0x7405	                            je 0x4002e99	       799	worktree.c	FUNCTION_20
0x2e54	      0xe800000000	                          call 0x4002e99	       799	worktree.c	FUNCTION_20
0x2e59	              0xc9	                                   leave	       799	worktree.c	FUNCTION_20
0x2e5a	              0xc3	                                     ret	       799	worktree.c	FUNCTION_20
show_worktree_porcelain	functions,0:CALL,7:ELSE,2:FOR,0:IF,3:WHILE,0:DO,0:SWITCH,0	47
0x1e69	              0x55	                                push rbp	       520	worktree.c	FUNCTION_12
0x1e6a	          0x4889e5	                            mov rbp, rsp	       520	worktree.c	FUNCTION_12
0x1e6d	        0x4883ec10	                           sub rsp, 0x10	       520	worktree.c	FUNCTION_12
0x1e71	        0x48897df8	                mov qword [rbp - 8], rdi	       520	worktree.c	FUNCTION_12
0x1e75	        0x488b45f8	                mov rax, qword [rbp - 8]	       521	worktree.c	FUNCTION_12	CALL_1
0x1e79	          0x488b00	                    mov rax, qword [rax]	       521	worktree.c	FUNCTION_12	CALL_1
0x1e7c	          0x4889c6	                            mov rsi, rax	       521	worktree.c	FUNCTION_12	CALL_1
0x1e7f	      0xbf00000000	                              mov edi, 0	       521	worktree.c	FUNCTION_12	CALL_1
0x1e84	      0xb800000000	                              mov eax, 0	       521	worktree.c	FUNCTION_12	CALL_1
0x1e89	      0xe800000000	                          call 0x4001ece	       521	worktree.c	FUNCTION_12	CALL_1
0x1e8e	        0x488b45f8	                mov rax, qword [rbp - 8]	       522	worktree.c	FUNCTION_12	IF_1
0x1e92	          0x8b4038	            mov eax, dword [rax + 0x38] 	       522	worktree.c	FUNCTION_12	IF_1
0x1e95	            0x85c0	                           test eax, eax	       522	worktree.c	FUNCTION_12	IF_1
0x1e97	            0x740c	                            je 0x4001ee5	       522	worktree.c	FUNCTION_12	IF_1
0x1e99	      0xbf00000000	                              mov edi, 0	       523	worktree.c	FUNCTION_12	CALL_2
0x1e9e	      0xe800000000	                          call 0x4001ee3	       523	worktree.c	FUNCTION_12	CALL_2
0x1ea3	            0xeb60	                           jmp 0x4001f45	       523	worktree.c	FUNCTION_12	CALL_2
0x1ea5	        0x488b45f8	                mov rax, qword [rbp - 8]	       525	worktree.c	FUNCTION_12	ELSE_1	CALL_4
0x1ea9	        0x4883c020	                           add rax, 0x20	       525	worktree.c	FUNCTION_12	ELSE_1	CALL_4
0x1ead	          0x4889c7	                            mov rdi, rax	       525	worktree.c	FUNCTION_12	ELSE_1	CALL_4
0x1eb0	      0xe800000000	                          call 0x4001ef5	       525	worktree.c	FUNCTION_12	ELSE_1	CALL_4
0x1eb5	          0x4889c6	                            mov rsi, rax	       525	worktree.c	FUNCTION_12	ELSE_1	CALL_4
0x1eb8	      0xbf00000000	                              mov edi, 0	       525	worktree.c	FUNCTION_12	ELSE_1	CALL_4
0x1ebd	      0xb800000000	                              mov eax, 0	       525	worktree.c	FUNCTION_12	ELSE_1	CALL_4
0x1ec2	      0xe800000000	                          call 0x4001f07	       525	worktree.c	FUNCTION_12	ELSE_1	CALL_4
0x1ec7	        0x488b45f8	                mov rax, qword [rbp - 8]	       526	worktree.c	FUNCTION_12	ELSE_1	IF_2
0x1ecb	          0x8b4034	            mov eax, dword [rax + 0x34] 	       526	worktree.c	FUNCTION_12	ELSE_1	IF_2
0x1ece	            0x85c0	                           test eax, eax	       526	worktree.c	FUNCTION_12	ELSE_1	IF_2
0x1ed0	            0x740c	                            je 0x4001f1e	       526	worktree.c	FUNCTION_12	ELSE_1	IF_2
0x1ed2	      0xbf00000000	                              mov edi, 0	       527	worktree.c	FUNCTION_12	ELSE_1	CALL_5
0x1ed7	      0xe800000000	                          call 0x4001f1c	       527	worktree.c	FUNCTION_12	ELSE_1	CALL_5
0x1edc	            0xeb27	                           jmp 0x4001f45	       527	worktree.c	FUNCTION_12	ELSE_1	CALL_5
0x1ede	        0x488b45f8	                mov rax, qword [rbp - 8]	       528	worktree.c	FUNCTION_12	ELSE_1	ELSE_2	IF_3
0x1ee2	        0x488b4010	            mov rax, qword [rax + 0x10] 	       528	worktree.c	FUNCTION_12	ELSE_1	ELSE_2	IF_3
0x1ee6	          0x4885c0	                           test rax, rax	       528	worktree.c	FUNCTION_12	ELSE_1	ELSE_2	IF_3
0x1ee9	            0x741a	                            je 0x4001f45	       528	worktree.c	FUNCTION_12	ELSE_1	ELSE_2	IF_3
0x1eeb	        0x488b45f8	                mov rax, qword [rbp - 8]	       529	worktree.c	FUNCTION_12	ELSE_1	ELSE_2	IF_3
0x1eef	        0x488b4010	            mov rax, qword [rax + 0x10] 	       529	worktree.c	FUNCTION_12	ELSE_1	ELSE_2	IF_3
0x1ef3	          0x4889c6	                            mov rsi, rax	       529	worktree.c	FUNCTION_12	ELSE_1	ELSE_2	IF_3
0x1ef6	      0xbf00000000	                              mov edi, 0	       529	worktree.c	FUNCTION_12	ELSE_1	ELSE_2	IF_3
0x1efb	      0xb800000000	                              mov eax, 0	       529	worktree.c	FUNCTION_12	ELSE_1	ELSE_2	IF_3
0x1f00	      0xe800000000	                          call 0x4001f45	       529	worktree.c	FUNCTION_12	ELSE_1	ELSE_2	IF_3
0x1f05	      0xbf0a000000	                            mov edi, 0xa	       531	worktree.c	FUNCTION_12	CALL_7
0x1f0a	      0xe800000000	                          call 0x4001f4f	       531	worktree.c	FUNCTION_12	CALL_7
0x1f0f	              0x90	                                     nop	       532	worktree.c	FUNCTION_12
0x1f10	              0xc9	                                   leave	       532	worktree.c	FUNCTION_12
0x1f11	              0xc3	                                     ret	       532	worktree.c	FUNCTION_12
xsize_t	functions,0:CALL,1:ELSE,0:FOR,0:IF,1:WHILE,0:DO,0:SWITCH,0	15
0x3d	              0x55	                                push rbp	       928	git-compat-util.h	FUNCTION_48
0x3e	          0x4889e5	                            mov rbp, rsp	       928	git-compat-util.h	FUNCTION_48
0x41	        0x4883ec20	                           sub rsp, 0x20	       928	git-compat-util.h	FUNCTION_48
0x45	        0x48897de8	             mov qword [rbp - 0x18], rdi	       928	git-compat-util.h	FUNCTION_48
0x49	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       929	git-compat-util.h	FUNCTION_48
0x4d	        0x488945f8	                mov qword [rbp - 8], rax	       929	git-compat-util.h	FUNCTION_48
0x51	        0x488b45f8	                mov rax, qword [rbp - 8]	       931	git-compat-util.h	FUNCTION_48	IF_1
0x55	        0x483945e8	            cmp qword [rbp - 0x18], rax 	       931	git-compat-util.h	FUNCTION_48	IF_1
0x59	            0x740f	                            je 0x40000aa	       931	git-compat-util.h	FUNCTION_48	IF_1
0x5b	      0xbf00000000	                              mov edi, 0	       932	git-compat-util.h	FUNCTION_48	CALL_1
0x60	      0xb800000000	                              mov eax, 0	       932	git-compat-util.h	FUNCTION_48	CALL_1
0x65	      0xe800000000	                          call 0x40000aa	       932	git-compat-util.h	FUNCTION_48	CALL_1
0x6a	        0x488b45f8	                mov rax, qword [rbp - 8]	       933	git-compat-util.h	FUNCTION_48
0x6e	              0xc9	                                   leave	       934	git-compat-util.h	FUNCTION_48
0x6f	              0xc3	                                     ret	       934	git-compat-util.h	FUNCTION_48
dwim_branch	functions,0:CALL,7:ELSE,0:FOR,0:IF,2:WHILE,0:DO,0:SWITCH,0	63
0x16d0	              0x55	                                push rbp	       398	worktree.c	FUNCTION_10
0x16d1	          0x4889e5	                            mov rbp, rsp	       398	worktree.c	FUNCTION_10
0x16d4	        0x4883ec70	                           sub rsp, 0x70	       398	worktree.c	FUNCTION_10
0x16d8	        0x48897d98	             mov qword [rbp - 0x68], rdi	       398	worktree.c	FUNCTION_10
0x16dc	        0x48897590	             mov qword [rbp - 0x70], rsi	       398	worktree.c	FUNCTION_10
0x16e0	    0x64488b042528	                mov rax, qword fs:[0x28]	       398	worktree.c	FUNCTION_10
0x16e9	        0x488945f8	                mov qword [rbp - 8], rax	       398	worktree.c	FUNCTION_10
0x16ed	            0x31c0	                            xor eax, eax	       398	worktree.c	FUNCTION_10
0x16ef	        0x488d55a4	                   lea rdx, [rbp - 0x5c]	       400	worktree.c	FUNCTION_10	CALL_1
0x16f3	        0x488b4598	             mov rax, qword [rbp - 0x68]	       400	worktree.c	FUNCTION_10	CALL_1
0x16f7	          0x4889d6	                            mov rsi, rdx	       400	worktree.c	FUNCTION_10	CALL_1
0x16fa	          0x4889c7	                            mov rdi, rax	       400	worktree.c	FUNCTION_10	CALL_1
0x16fd	      0xe8d4f3ffff	              call sym.worktree_basename	       400	worktree.c	FUNCTION_10	CALL_1
0x1702	        0x488945a8	             mov qword [rbp - 0x58], rax	       400	worktree.c	FUNCTION_10	CALL_1
0x1706	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       401	worktree.c	FUNCTION_10	CALL_2
0x1709	          0x4863d0	                         movsxd rdx, eax	       401	worktree.c	FUNCTION_10	CALL_2
0x170c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       401	worktree.c	FUNCTION_10	CALL_2
0x1710	          0x4889d6	                            mov rsi, rdx	       401	worktree.c	FUNCTION_10	CALL_2
0x1713	          0x4889c7	                            mov rdi, rax	       401	worktree.c	FUNCTION_10	CALL_2
0x1716	      0xe800000000	                          call 0x400175b	       401	worktree.c	FUNCTION_10	CALL_2
0x171b	        0x488945b0	             mov qword [rbp - 0x50], rax	       401	worktree.c	FUNCTION_10	CALL_2
0x171f	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       402	worktree.c	FUNCTION_10
0x1727	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       402	worktree.c	FUNCTION_10
0x172f	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       402	worktree.c	FUNCTION_10
0x1737	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       405	worktree.c	FUNCTION_10	IF_1	CALL_4
0x173b	        0x488d45c0	                   lea rax, [rbp - 0x40]	       405	worktree.c	FUNCTION_10	IF_1	CALL_4
0x173f	          0x4889d6	                            mov rsi, rdx	       405	worktree.c	FUNCTION_10	IF_1	CALL_4
0x1742	          0x4889c7	                            mov rdi, rax	       405	worktree.c	FUNCTION_10	IF_1	CALL_4
0x1745	      0xe800000000	                          call 0x400178a	       405	worktree.c	FUNCTION_10	IF_1	CALL_4
0x174a	            0x85c0	                           test eax, eax	       405	worktree.c	FUNCTION_10	IF_1	CALL_4
0x174c	            0x7522	                           jne 0x40017b0	       405	worktree.c	FUNCTION_10	IF_1	CALL_4
0x174e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       406	worktree.c	FUNCTION_10	IF_1	CALL_5
0x1752	          0x4889c7	                            mov rdi, rax	       406	worktree.c	FUNCTION_10	IF_1	CALL_5
0x1755	      0xe800000000	                          call 0x400179a	       406	worktree.c	FUNCTION_10	IF_1	CALL_5
0x175a	            0x85c0	                           test eax, eax	       405	worktree.c	FUNCTION_10	IF_1	CALL_4
0x175c	            0x7412	                            je 0x40017b0	       405	worktree.c	FUNCTION_10	IF_1	CALL_4
0x175e	        0x488d45c0	                   lea rax, [rbp - 0x40]	       407	worktree.c	FUNCTION_10	IF_1	CALL_6
0x1762	          0x4889c7	                            mov rdi, rax	       407	worktree.c	FUNCTION_10	IF_1	CALL_6
0x1765	      0xe800000000	                          call 0x40017aa	       407	worktree.c	FUNCTION_10	IF_1	CALL_6
0x176a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       408	worktree.c	FUNCTION_10	IF_1
0x176e	            0xeb3a	                           jmp 0x40017ea	       408	worktree.c	FUNCTION_10	IF_1
0x1770	        0x488b4590	             mov rax, qword [rbp - 0x70]	       411	worktree.c	FUNCTION_10
0x1774	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       411	worktree.c	FUNCTION_10
0x1778	          0x488910	                    mov qword [rax], rdx	       411	worktree.c	FUNCTION_10
0x177b	    0x8b0500000000	            mov eax, dword [0x040017c1] 	       412	worktree.c	FUNCTION_10	IF_2
0x1781	            0x85c0	                           test eax, eax	       412	worktree.c	FUNCTION_10	IF_2
0x1783	            0x7420	                            je 0x40017e5	       412	worktree.c	FUNCTION_10	IF_2
0x1785	        0x488b4590	             mov rax, qword [rbp - 0x70]	       415	worktree.c	FUNCTION_10	IF_2	CALL_7
0x1789	          0x488b00	                    mov rax, qword [rax]	       415	worktree.c	FUNCTION_10	IF_2	CALL_7
0x178c	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       414	worktree.c	FUNCTION_10	IF_2
0x1790	          0x4889d6	                            mov rsi, rdx	       414	worktree.c	FUNCTION_10	IF_2
0x1793	          0x4889c7	                            mov rdi, rax	       414	worktree.c	FUNCTION_10	IF_2
0x1796	      0xe800000000	                          call 0x40017db	       414	worktree.c	FUNCTION_10	IF_2
0x179b	        0x488945b8	             mov qword [rbp - 0x48], rax	       414	worktree.c	FUNCTION_10	IF_2
0x179f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       416	worktree.c	FUNCTION_10	IF_2
0x17a3	            0xeb05	                           jmp 0x40017ea	       416	worktree.c	FUNCTION_10	IF_2
0x17a5	      0xb800000000	                              mov eax, 0	       418	worktree.c	FUNCTION_10
0x17aa	        0x488b4df8	                mov rcx, qword [rbp - 8]	       419	worktree.c	FUNCTION_10
0x17ae	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       419	worktree.c	FUNCTION_10
0x17b7	            0x7405	                            je 0x40017fe	       419	worktree.c	FUNCTION_10
0x17b9	      0xe800000000	                          call 0x40017fe	       419	worktree.c	FUNCTION_10
0x17be	              0xc9	                                   leave	       419	worktree.c	FUNCTION_10
0x17bf	              0xc3	                                     ret	       419	worktree.c	FUNCTION_10
delete_git_work_tree	functions,0:CALL,5:ELSE,0:FOR,0:IF,1:WHILE,0:DO,0:SWITCH,0	45
0x2e5b	              0x55	                                push rbp	       802	worktree.c	FUNCTION_21
0x2e5c	          0x4889e5	                            mov rbp, rsp	       802	worktree.c	FUNCTION_21
0x2e5f	              0x53	                                push rbx	       802	worktree.c	FUNCTION_21
0x2e60	        0x4883ec48	                           sub rsp, 0x48	       802	worktree.c	FUNCTION_21
0x2e64	        0x48897db8	             mov qword [rbp - 0x48], rdi	       802	worktree.c	FUNCTION_21
0x2e68	    0x64488b042528	                mov rax, qword fs:[0x28]	       802	worktree.c	FUNCTION_21
0x2e71	        0x488945e8	             mov qword [rbp - 0x18], rax	       802	worktree.c	FUNCTION_21
0x2e75	            0x31c0	                            xor eax, eax	       802	worktree.c	FUNCTION_21
0x2e77	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       803	worktree.c	FUNCTION_21
0x2e7f	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       803	worktree.c	FUNCTION_21
0x2e87	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       803	worktree.c	FUNCTION_21
0x2e8f	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       804	worktree.c	FUNCTION_21
0x2e96	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       806	worktree.c	FUNCTION_21	CALL_1
0x2e9a	          0x488b10	                    mov rdx, qword [rax]	       806	worktree.c	FUNCTION_21	CALL_1
0x2e9d	        0x488d45d0	                   lea rax, [rbp - 0x30]	       806	worktree.c	FUNCTION_21	CALL_1
0x2ea1	          0x4889d6	                            mov rsi, rdx	       806	worktree.c	FUNCTION_21	CALL_1
0x2ea4	          0x4889c7	                            mov rdi, rax	       806	worktree.c	FUNCTION_21	CALL_1
0x2ea7	      0xe85ed2ffff	                  call sym.strbuf_addstr	       806	worktree.c	FUNCTION_21	CALL_1
0x2eac	        0x488d45d0	                   lea rax, [rbp - 0x30]	       807	worktree.c	FUNCTION_21	IF_1	CALL_2
0x2eb0	      0xbe00000000	                              mov esi, 0	       807	worktree.c	FUNCTION_21	IF_1	CALL_2
0x2eb5	          0x4889c7	                            mov rdi, rax	       807	worktree.c	FUNCTION_21	IF_1	CALL_2
0x2eb8	      0xe800000000	                          call 0x4002efd	       807	worktree.c	FUNCTION_21	IF_1	CALL_2
0x2ebd	            0x85c0	                           test eax, eax	       807	worktree.c	FUNCTION_21	IF_1	CALL_2
0x2ebf	            0x742a	                            je 0x4002f2b	       807	worktree.c	FUNCTION_21	IF_1	CALL_2
0x2ec1	        0x488b5de0	             mov rbx, qword [rbp - 0x20]	       808	worktree.c	FUNCTION_21	IF_1	CALL_4
0x2ec5	      0xbf00000000	                              mov edi, 0	       808	worktree.c	FUNCTION_21	IF_1	CALL_4
0x2eca	      0xe870d2ffff	                               call sym.	       808	worktree.c	FUNCTION_21	IF_1	CALL_4
0x2ecf	          0x4889de	                            mov rsi, rbx	       808	worktree.c	FUNCTION_21	IF_1	CALL_4
0x2ed2	          0x4889c7	                            mov rdi, rax	       808	worktree.c	FUNCTION_21	IF_1	CALL_4
0x2ed5	      0xb800000000	                              mov eax, 0	       808	worktree.c	FUNCTION_21	IF_1	CALL_4
0x2eda	      0xe800000000	                          call 0x4002f1f	       808	worktree.c	FUNCTION_21	IF_1	CALL_4
0x2edf	      0xe84ed1ffff	                    call sym.const_error	       808	worktree.c	FUNCTION_21	IF_1	CALL_4
0x2ee4	    0xc745ccffffff	     mov dword [rbp - 0x34], 0xffffffff 	       809	worktree.c	FUNCTION_21	IF_1
0x2eeb	        0x488d45d0	                   lea rax, [rbp - 0x30]	       811	worktree.c	FUNCTION_21	CALL_5
0x2eef	          0x4889c7	                            mov rdi, rax	       811	worktree.c	FUNCTION_21	CALL_5
0x2ef2	      0xe800000000	                          call 0x4002f37	       811	worktree.c	FUNCTION_21	CALL_5
0x2ef7	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       812	worktree.c	FUNCTION_21
0x2efa	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       813	worktree.c	FUNCTION_21
0x2efe	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       813	worktree.c	FUNCTION_21
0x2f07	            0x7405	                            je 0x4002f4e	       813	worktree.c	FUNCTION_21
0x2f09	      0xe800000000	                          call 0x4002f4e	       813	worktree.c	FUNCTION_21
0x2f0e	        0x4883c448	                           add rsp, 0x48	       813	worktree.c	FUNCTION_21
0x2f12	              0x5b	                                 pop rbx	       813	worktree.c	FUNCTION_21
0x2f13	              0x5d	                                 pop rbp	       813	worktree.c	FUNCTION_21
0x2f14	              0xc3	                                     ret	       813	worktree.c	FUNCTION_21
prune_worktrees	functions,0:CALL,17:ELSE,0:FOR,0:IF,8:WHILE,1:DO,0:SWITCH,0	120
0x65f	              0x55	                                push rbp	       116	worktree.c	FUNCTION_3
0x660	          0x4889e5	                            mov rbp, rsp	       116	worktree.c	FUNCTION_3
0x663	              0x53	                                push rbx	       116	worktree.c	FUNCTION_3
0x664	        0x4883ec68	                           sub rsp, 0x68	       116	worktree.c	FUNCTION_3
0x668	    0x64488b042528	                mov rax, qword fs:[0x28]	       116	worktree.c	FUNCTION_3
0x671	        0x488945e8	             mov qword [rbp - 0x18], rax	       116	worktree.c	FUNCTION_3
0x675	            0x31c0	                            xor eax, eax	       116	worktree.c	FUNCTION_3
0x677	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       117	worktree.c	FUNCTION_3
0x67f	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       117	worktree.c	FUNCTION_3
0x687	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       117	worktree.c	FUNCTION_3
0x68f	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       118	worktree.c	FUNCTION_3
0x697	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       118	worktree.c	FUNCTION_3
0x69f	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       118	worktree.c	FUNCTION_3
0x6a7	      0xbf00000000	                              mov edi, 0	       119	worktree.c	FUNCTION_3	CALL_2
0x6ac	      0xb800000000	                              mov eax, 0	       119	worktree.c	FUNCTION_3	CALL_2
0x6b1	      0xe800000000	                          call 0x40006f6	       119	worktree.c	FUNCTION_3	CALL_2
0x6b6	          0x4889c7	                            mov rdi, rax	       119	worktree.c	FUNCTION_3	CALL_2
0x6b9	      0xe800000000	                          call 0x40006fe	       119	worktree.c	FUNCTION_3	CALL_2
0x6be	        0x488945a0	             mov qword [rbp - 0x60], rax	       119	worktree.c	FUNCTION_3	CALL_2
0x6c2	      0x48837da000	               cmp qword [rbp - 0x60], 0	       122	worktree.c	FUNCTION_3	IF_1
0x6c7	     0xf8459010000	                            je 0x4000866	       122	worktree.c	FUNCTION_3	IF_1
0x6cd	      0xe9f2000000	                           jmp 0x4000804	       124	worktree.c	FUNCTION_3	WHILE_1	CALL_3
0x6d2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       125	worktree.c	FUNCTION_3	WHILE_1	IF_2	CALL_4
0x6d6	        0x4883c013	                           add rax, 0x13	       125	worktree.c	FUNCTION_3	WHILE_1	IF_2	CALL_4
0x6da	          0x4889c7	                            mov rdi, rax	       125	worktree.c	FUNCTION_3	WHILE_1	IF_2	CALL_4
0x6dd	      0xe889faffff	               call sym.is_dot_or_dotdot	       125	worktree.c	FUNCTION_3	WHILE_1	IF_2	CALL_4
0x6e2	            0x85c0	                           test eax, eax	       125	worktree.c	FUNCTION_3	WHILE_1	IF_2	CALL_4
0x6e4	            0x7405	                            je 0x400072b	       125	worktree.c	FUNCTION_3	WHILE_1	IF_2	CALL_4
0x6e6	      0xe9d9000000	                           jmp 0x4000804	       126	worktree.c	FUNCTION_3	WHILE_1	IF_2
0x6eb	        0x488d45b0	                   lea rax, [rbp - 0x50]	       127	worktree.c	FUNCTION_3	WHILE_1	CALL_5
0x6ef	      0xbe00000000	                              mov esi, 0	       127	worktree.c	FUNCTION_3	WHILE_1	CALL_5
0x6f4	          0x4889c7	                            mov rdi, rax	       127	worktree.c	FUNCTION_3	WHILE_1	CALL_5
0x6f7	      0xe874f9ffff	                  call sym.strbuf_setlen	       127	worktree.c	FUNCTION_3	WHILE_1	CALL_5
0x6fc	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       128	worktree.c	FUNCTION_3	WHILE_1	IF_3	CALL_6
0x700	        0x488d5013	                   lea rdx, [rax + 0x13]	       128	worktree.c	FUNCTION_3	WHILE_1	IF_3	CALL_6
0x704	        0x488d45b0	                   lea rax, [rbp - 0x50]	       128	worktree.c	FUNCTION_3	WHILE_1	IF_3	CALL_6
0x708	          0x4889c6	                            mov rsi, rax	       128	worktree.c	FUNCTION_3	WHILE_1	IF_3	CALL_6
0x70b	          0x4889d7	                            mov rdi, rdx	       128	worktree.c	FUNCTION_3	WHILE_1	IF_3	CALL_6
0x70e	      0xe808fbffff	                 call sym.prune_worktree	       128	worktree.c	FUNCTION_3	WHILE_1	IF_3	CALL_6
0x713	            0x85c0	                           test eax, eax	       128	worktree.c	FUNCTION_3	WHILE_1	IF_3	CALL_6
0x715	            0x7505	                           jne 0x400075c	       128	worktree.c	FUNCTION_3	WHILE_1	IF_3	CALL_6
0x717	      0xe9a8000000	                           jmp 0x4000804	       129	worktree.c	FUNCTION_3	WHILE_1	IF_3
0x71c	    0x8b0500000000	            mov eax, dword [0x04000762] 	       130	worktree.c	FUNCTION_3	WHILE_1	IF_4
0x722	            0x85c0	                           test eax, eax	       130	worktree.c	FUNCTION_3	WHILE_1	IF_4
0x724	            0x750a	                           jne 0x4000770	       130	worktree.c	FUNCTION_3	WHILE_1	IF_4
0x726	    0x8b0500000000	            mov eax, dword [0x0400076c] 	       130	worktree.c	FUNCTION_3	WHILE_1	IF_4
0x72c	            0x85c0	                           test eax, eax	       130	worktree.c	FUNCTION_3	WHILE_1	IF_4
0x72e	            0x740c	                            je 0x400077c	       130	worktree.c	FUNCTION_3	WHILE_1	IF_4
0x730	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       131	worktree.c	FUNCTION_3	WHILE_1	CALL_7
0x734	          0x4889c7	                            mov rdi, rax	       131	worktree.c	FUNCTION_3	WHILE_1	CALL_7
0x737	      0xe800000000	                          call 0x400077c	       131	worktree.c	FUNCTION_3	WHILE_1	CALL_7
0x73c	    0x8b0500000000	            mov eax, dword [0x04000782] 	       132	worktree.c	FUNCTION_3	WHILE_1	IF_5
0x742	            0x85c0	                           test eax, eax	       132	worktree.c	FUNCTION_3	WHILE_1	IF_5
0x744	            0x7402	                            je 0x4000788	       132	worktree.c	FUNCTION_3	WHILE_1	IF_5
0x746	            0xeb7c	                           jmp 0x4000804	       133	worktree.c	FUNCTION_3	WHILE_1	IF_5
0x748	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       134	worktree.c	FUNCTION_3	WHILE_1	CALL_8
0x74c	        0x488d5013	                   lea rdx, [rax + 0x13]	       134	worktree.c	FUNCTION_3	WHILE_1	CALL_8
0x750	        0x488d45d0	                   lea rax, [rbp - 0x30]	       134	worktree.c	FUNCTION_3	WHILE_1	CALL_8
0x754	      0xbe00000000	                              mov esi, 0	       134	worktree.c	FUNCTION_3	WHILE_1	CALL_8
0x759	          0x4889c7	                            mov rdi, rax	       134	worktree.c	FUNCTION_3	WHILE_1	CALL_8
0x75c	      0xb800000000	                              mov eax, 0	       134	worktree.c	FUNCTION_3	WHILE_1	CALL_8
0x761	      0xe800000000	                          call 0x40007a6	       134	worktree.c	FUNCTION_3	WHILE_1	CALL_8
0x766	        0x488d45d0	                   lea rax, [rbp - 0x30]	       135	worktree.c	FUNCTION_3	WHILE_1	CALL_9
0x76a	      0xbe00000000	                              mov esi, 0	       135	worktree.c	FUNCTION_3	WHILE_1	CALL_9
0x76f	          0x4889c7	                            mov rdi, rax	       135	worktree.c	FUNCTION_3	WHILE_1	CALL_9
0x772	      0xe800000000	                          call 0x40007b7	       135	worktree.c	FUNCTION_3	WHILE_1	CALL_9
0x777	          0x89459c	             mov dword [rbp - 0x64], eax	       135	worktree.c	FUNCTION_3	WHILE_1	CALL_9
0x77a	        0x837d9c00	               cmp dword [rbp - 0x64], 0	       136	worktree.c	FUNCTION_3	WHILE_1	IF_6
0x77e	            0x791b	                           jns 0x40007db	       136	worktree.c	FUNCTION_3	WHILE_1	IF_6
0x780	      0xe800000000	                          call 0x40007c5	       136	worktree.c	FUNCTION_3	WHILE_1	IF_6
0x785	            0x8b00	                    mov eax, dword [rax]	       136	worktree.c	FUNCTION_3	WHILE_1	IF_6
0x787	          0x83f814	                           cmp eax, 0x14	       136	worktree.c	FUNCTION_3	WHILE_1	IF_6
0x78a	            0x750f	                           jne 0x40007db	       136	worktree.c	FUNCTION_3	WHILE_1	IF_6
0x78c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       137	worktree.c	FUNCTION_3	WHILE_1	CALL_10
0x790	          0x4889c7	                            mov rdi, rax	       137	worktree.c	FUNCTION_3	WHILE_1	CALL_10
0x793	      0xe800000000	                          call 0x40007d8	       137	worktree.c	FUNCTION_3	WHILE_1	CALL_10
0x798	          0x89459c	             mov dword [rbp - 0x64], eax	       137	worktree.c	FUNCTION_3	WHILE_1	CALL_10
0x79b	        0x837d9c00	               cmp dword [rbp - 0x64], 0	       138	worktree.c	FUNCTION_3	WHILE_1	IF_7
0x79f	            0x7423	                            je 0x4000804	       138	worktree.c	FUNCTION_3	WHILE_1	IF_7
0x7a1	        0x488b5de0	             mov rbx, qword [rbp - 0x20]	       139	worktree.c	FUNCTION_3	WHILE_1	CALL_12
0x7a5	      0xbf00000000	                              mov edi, 0	       139	worktree.c	FUNCTION_3	WHILE_1	CALL_12
0x7aa	      0xe890f9ffff	                               call sym.	       139	worktree.c	FUNCTION_3	WHILE_1	CALL_12
0x7af	          0x4889de	                            mov rsi, rbx	       139	worktree.c	FUNCTION_3	WHILE_1	CALL_12
0x7b2	          0x4889c7	                            mov rdi, rax	       139	worktree.c	FUNCTION_3	WHILE_1	CALL_12
0x7b5	      0xb800000000	                              mov eax, 0	       139	worktree.c	FUNCTION_3	WHILE_1	CALL_12
0x7ba	      0xe800000000	                          call 0x40007ff	       139	worktree.c	FUNCTION_3	WHILE_1	CALL_12
0x7bf	      0xe86ef8ffff	                    call sym.const_error	       139	worktree.c	FUNCTION_3	WHILE_1	CALL_12
0x7c4	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       124	worktree.c	FUNCTION_3	WHILE_1	CALL_3
0x7c8	          0x4889c7	                            mov rdi, rax	       124	worktree.c	FUNCTION_3	WHILE_1	CALL_3
0x7cb	      0xe800000000	                          call 0x4000810	       124	worktree.c	FUNCTION_3	WHILE_1	CALL_3
0x7d0	        0x488945a8	             mov qword [rbp - 0x58], rax	       124	worktree.c	FUNCTION_3	WHILE_1	CALL_3
0x7d4	      0x48837da800	               cmp qword [rbp - 0x58], 0	       124	worktree.c	FUNCTION_3	WHILE_1	CALL_3
0x7d9	     0xf85f3feffff	                           jne 0x4000712	       124	worktree.c	FUNCTION_3	WHILE_1	CALL_3
0x7df	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       141	worktree.c	FUNCTION_3	CALL_13
0x7e3	          0x4889c7	                            mov rdi, rax	       141	worktree.c	FUNCTION_3	CALL_13
0x7e6	      0xe800000000	                          call 0x400082b	       141	worktree.c	FUNCTION_3	CALL_13
0x7eb	    0x8b0500000000	            mov eax, dword [0x04000831] 	       142	worktree.c	FUNCTION_3	IF_8
0x7f1	            0x85c0	                           test eax, eax	       142	worktree.c	FUNCTION_3	IF_8
0x7f3	            0x7517	                           jne 0x400084c	       142	worktree.c	FUNCTION_3	IF_8
0x7f5	      0xbf00000000	                              mov edi, 0	       143	worktree.c	FUNCTION_3	CALL_15
0x7fa	      0xb800000000	                              mov eax, 0	       143	worktree.c	FUNCTION_3	CALL_15
0x7ff	      0xe800000000	                          call 0x4000844	       143	worktree.c	FUNCTION_3	CALL_15
0x804	          0x4889c7	                            mov rdi, rax	       143	worktree.c	FUNCTION_3	CALL_15
0x807	      0xe800000000	                          call 0x400084c	       143	worktree.c	FUNCTION_3	CALL_15
0x80c	        0x488d45b0	                   lea rax, [rbp - 0x50]	       144	worktree.c	FUNCTION_3	CALL_16
0x810	          0x4889c7	                            mov rdi, rax	       144	worktree.c	FUNCTION_3	CALL_16
0x813	      0xe800000000	                          call 0x4000858	       144	worktree.c	FUNCTION_3	CALL_16
0x818	        0x488d45d0	                   lea rax, [rbp - 0x30]	       145	worktree.c	FUNCTION_3	CALL_17
0x81c	          0x4889c7	                            mov rdi, rax	       145	worktree.c	FUNCTION_3	CALL_17
0x81f	      0xe800000000	                          call 0x4000864	       145	worktree.c	FUNCTION_3	CALL_17
0x824	            0xeb01	                           jmp 0x4000867	       145	worktree.c	FUNCTION_3	CALL_17
0x826	              0x90	                                     nop	       123	worktree.c	FUNCTION_3	IF_1
0x827	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       146	worktree.c	FUNCTION_3
0x82b	    0x644833042528	                xor rax, qword fs:[0x28]	       146	worktree.c	FUNCTION_3
0x834	            0x7405	                            je 0x400087b	       146	worktree.c	FUNCTION_3
0x836	      0xe800000000	                          call 0x400087b	       146	worktree.c	FUNCTION_3
0x83b	        0x4883c468	                           add rsp, 0x68	       146	worktree.c	FUNCTION_3
0x83f	              0x5b	                                 pop rbx	       146	worktree.c	FUNCTION_3
0x840	              0x5d	                                 pop rbp	       146	worktree.c	FUNCTION_3
0x841	              0xc3	                                     ret	       146	worktree.c	FUNCTION_3
is_dot_or_dotdot	functions,0:CALL,0:ELSE,0:FOR,0:IF,0:WHILE,0:DO,0:SWITCH,0	27
0x16b	              0x55	                                push rbp	       276	dir.h	FUNCTION_67
0x16c	          0x4889e5	                            mov rbp, rsp	       276	dir.h	FUNCTION_67
0x16f	        0x48897df8	                mov qword [rbp - 8], rdi	       276	dir.h	FUNCTION_67
0x173	        0x488b45f8	                mov rax, qword [rbp - 8]	       277	dir.h	FUNCTION_67
0x177	           0xfb600	                   movzx eax, byte [rax]	       277	dir.h	FUNCTION_67
0x17a	            0x3c2e	                            cmp al, 0x2e	       277	dir.h	FUNCTION_67
0x17c	            0x7534	                           jne 0x40001f2	       277	dir.h	FUNCTION_67
0x17e	        0x488b45f8	                mov rax, qword [rbp - 8]	       278	dir.h	FUNCTION_67
0x182	        0x4883c001	                              add rax, 1	       278	dir.h	FUNCTION_67
0x186	           0xfb600	                   movzx eax, byte [rax]	       278	dir.h	FUNCTION_67
0x189	            0x84c0	                             test al, al	       277	dir.h	FUNCTION_67
0x18b	            0x741e	                            je 0x40001eb	       277	dir.h	FUNCTION_67
0x18d	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	dir.h	FUNCTION_67
0x191	        0x4883c001	                              add rax, 1	       279	dir.h	FUNCTION_67
0x195	           0xfb600	                   movzx eax, byte [rax]	       279	dir.h	FUNCTION_67
0x198	            0x3c2e	                            cmp al, 0x2e	       278	dir.h	FUNCTION_67
0x19a	            0x7516	                           jne 0x40001f2	       278	dir.h	FUNCTION_67
0x19c	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	dir.h	FUNCTION_67
0x1a0	        0x4883c002	                              add rax, 2	       279	dir.h	FUNCTION_67
0x1a4	           0xfb600	                   movzx eax, byte [rax]	       279	dir.h	FUNCTION_67
0x1a7	            0x84c0	                             test al, al	       279	dir.h	FUNCTION_67
0x1a9	            0x7507	                           jne 0x40001f2	       279	dir.h	FUNCTION_67
0x1ab	      0xb801000000	                              mov eax, 1	       277	dir.h	FUNCTION_67
0x1b0	            0xeb05	                           jmp 0x40001f7	       277	dir.h	FUNCTION_67
0x1b2	      0xb800000000	                              mov eax, 0	       277	dir.h	FUNCTION_67
0x1b7	              0x5d	                                 pop rbp	       280	dir.h	FUNCTION_67
0x1b8	              0xc3	                                     ret	       280	dir.h	FUNCTION_67
delete_git_dir	functions,0:CALL,6:ELSE,0:FOR,0:IF,1:WHILE,0:DO,0:SWITCH,0	50
0x2f15	              0x55	                                push rbp	       816	worktree.c	FUNCTION_22
0x2f16	          0x4889e5	                            mov rbp, rsp	       816	worktree.c	FUNCTION_22
0x2f19	              0x53	                                push rbx	       816	worktree.c	FUNCTION_22
0x2f1a	        0x4883ec48	                           sub rsp, 0x48	       816	worktree.c	FUNCTION_22
0x2f1e	        0x48897db8	             mov qword [rbp - 0x48], rdi	       816	worktree.c	FUNCTION_22
0x2f22	    0x64488b042528	                mov rax, qword fs:[0x28]	       816	worktree.c	FUNCTION_22
0x2f2b	        0x488945e8	             mov qword [rbp - 0x18], rax	       816	worktree.c	FUNCTION_22
0x2f2f	            0x31c0	                            xor eax, eax	       816	worktree.c	FUNCTION_22
0x2f31	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       817	worktree.c	FUNCTION_22
0x2f39	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       817	worktree.c	FUNCTION_22
0x2f41	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       817	worktree.c	FUNCTION_22
0x2f49	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       818	worktree.c	FUNCTION_22
0x2f50	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       820	worktree.c	FUNCTION_22	CALL_2
0x2f54	        0x488b4008	                mov rax, qword [rax + 8]	       820	worktree.c	FUNCTION_22	CALL_2
0x2f58	          0x4889c6	                            mov rsi, rax	       820	worktree.c	FUNCTION_22	CALL_2
0x2f5b	      0xbf00000000	                              mov edi, 0	       820	worktree.c	FUNCTION_22	CALL_2
0x2f60	      0xb800000000	                              mov eax, 0	       820	worktree.c	FUNCTION_22	CALL_2
0x2f65	      0xe800000000	                          call 0x4002faa	       820	worktree.c	FUNCTION_22	CALL_2
0x2f6a	          0x4889c2	                            mov rdx, rax	       820	worktree.c	FUNCTION_22	CALL_2
0x2f6d	        0x488d45d0	                   lea rax, [rbp - 0x30]	       820	worktree.c	FUNCTION_22	CALL_2
0x2f71	          0x4889d6	                            mov rsi, rdx	       820	worktree.c	FUNCTION_22	CALL_2
0x2f74	          0x4889c7	                            mov rdi, rax	       820	worktree.c	FUNCTION_22	CALL_2
0x2f77	      0xe88ed1ffff	                  call sym.strbuf_addstr	       820	worktree.c	FUNCTION_22	CALL_2
0x2f7c	        0x488d45d0	                   lea rax, [rbp - 0x30]	       821	worktree.c	FUNCTION_22	IF_1	CALL_3
0x2f80	      0xbe00000000	                              mov esi, 0	       821	worktree.c	FUNCTION_22	IF_1	CALL_3
0x2f85	          0x4889c7	                            mov rdi, rax	       821	worktree.c	FUNCTION_22	IF_1	CALL_3
0x2f88	      0xe800000000	                          call 0x4002fcd	       821	worktree.c	FUNCTION_22	IF_1	CALL_3
0x2f8d	            0x85c0	                           test eax, eax	       821	worktree.c	FUNCTION_22	IF_1	CALL_3
0x2f8f	            0x742a	                            je 0x4002ffb	       821	worktree.c	FUNCTION_22	IF_1	CALL_3
0x2f91	        0x488b5de0	             mov rbx, qword [rbp - 0x20]	       822	worktree.c	FUNCTION_22	IF_1	CALL_5
0x2f95	      0xbf00000000	                              mov edi, 0	       822	worktree.c	FUNCTION_22	IF_1	CALL_5
0x2f9a	      0xe8a0d1ffff	                               call sym.	       822	worktree.c	FUNCTION_22	IF_1	CALL_5
0x2f9f	          0x4889de	                            mov rsi, rbx	       822	worktree.c	FUNCTION_22	IF_1	CALL_5
0x2fa2	          0x4889c7	                            mov rdi, rax	       822	worktree.c	FUNCTION_22	IF_1	CALL_5
0x2fa5	      0xb800000000	                              mov eax, 0	       822	worktree.c	FUNCTION_22	IF_1	CALL_5
0x2faa	      0xe800000000	                          call 0x4002fef	       822	worktree.c	FUNCTION_22	IF_1	CALL_5
0x2faf	      0xe87ed0ffff	                    call sym.const_error	       822	worktree.c	FUNCTION_22	IF_1	CALL_5
0x2fb4	    0xc745ccffffff	     mov dword [rbp - 0x34], 0xffffffff 	       823	worktree.c	FUNCTION_22	IF_1
0x2fbb	        0x488d45d0	                   lea rax, [rbp - 0x30]	       825	worktree.c	FUNCTION_22	CALL_6
0x2fbf	          0x4889c7	                            mov rdi, rax	       825	worktree.c	FUNCTION_22	CALL_6
0x2fc2	      0xe800000000	                          call 0x4003007	       825	worktree.c	FUNCTION_22	CALL_6
0x2fc7	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       826	worktree.c	FUNCTION_22
0x2fca	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       827	worktree.c	FUNCTION_22
0x2fce	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       827	worktree.c	FUNCTION_22
0x2fd7	            0x7405	                            je 0x400301e	       827	worktree.c	FUNCTION_22
0x2fd9	      0xe800000000	                          call 0x400301e	       827	worktree.c	FUNCTION_22
0x2fde	        0x4883c448	                           add rsp, 0x48	       827	worktree.c	FUNCTION_22
0x2fe2	              0x5b	                                 pop rbx	       827	worktree.c	FUNCTION_22
0x2fe3	              0x5d	                                 pop rbp	       827	worktree.c	FUNCTION_22
0x2fe4	              0xc3	                                     ret	       827	worktree.c	FUNCTION_22
