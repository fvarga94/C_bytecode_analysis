check_shallow_file_for_update	FOR,0:CALL,4:SWITCH,0:DO,0:WHILE,0:ELSE,0:functions,0:IF,2	20
0xb49	              0x55	                                push rbp	       219	shallow.c	FUNCTION_7
0xb4a	          0x4889e5	                            mov rbp, rsp	       219	shallow.c	FUNCTION_7
0xb4d	    0x8b0500000000	            mov eax, dword [0x04000b93] 	       220	shallow.c	FUNCTION_7	IF_1
0xb53	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       220	shallow.c	FUNCTION_7	IF_1
0xb56	            0x750f	                           jne 0x4000ba7	       220	shallow.c	FUNCTION_7	IF_1
0xb58	      0xbf00000000	                              mov edi, 0	       221	shallow.c	FUNCTION_7	CALL_1
0xb5d	      0xb800000000	                              mov eax, 0	       221	shallow.c	FUNCTION_7	CALL_1
0xb62	      0xe800000000	                          call 0x4000ba7	       221	shallow.c	FUNCTION_7	CALL_1
0xb67	      0xe800000000	                          call 0x4000bac	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0xb6c	          0x4889c6	                            mov rsi, rax	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0xb6f	      0xbf00000000	                              mov edi, 0	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0xb74	      0xe800000000	                          call 0x4000bb9	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0xb79	            0x85c0	                           test eax, eax	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0xb7b	            0x750f	                           jne 0x4000bcc	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0xb7d	      0xbf00000000	                              mov edi, 0	       224	shallow.c	FUNCTION_7	CALL_4
0xb82	      0xb800000000	                              mov eax, 0	       224	shallow.c	FUNCTION_7	CALL_4
0xb87	      0xe800000000	                          call 0x4000bcc	       224	shallow.c	FUNCTION_7	CALL_4
0xb8c	              0x90	                                     nop	       225	shallow.c	FUNCTION_7
0xb8d	              0x5d	                                 pop rbp	       225	shallow.c	FUNCTION_7
0xb8e	              0xc3	                                     ret	       225	shallow.c	FUNCTION_7
clear_shallow_info	FOR,0:CALL,2:SWITCH,0:DO,0:WHILE,0:ELSE,0:functions,0:IF,0	15
0x12ca	              0x55	                                push rbp	       409	shallow.c	ELSE_1	FUNCTION_17
0x12cb	          0x4889e5	                            mov rbp, rsp	       409	shallow.c	ELSE_1	FUNCTION_17
0x12ce	        0x4883ec10	                           sub rsp, 0x10	       409	shallow.c	ELSE_1	FUNCTION_17
0x12d2	        0x48897df8	                mov qword [rbp - 8], rdi	       409	shallow.c	ELSE_1	FUNCTION_17
0x12d6	        0x488b45f8	                mov rax, qword [rbp - 8]	       410	shallow.c	ELSE_1	FUNCTION_17	CALL_1
0x12da	        0x488b4008	                mov rax, qword [rax + 8]	       410	shallow.c	ELSE_1	FUNCTION_17	CALL_1
0x12de	          0x4889c7	                            mov rdi, rax	       410	shallow.c	ELSE_1	FUNCTION_17	CALL_1
0x12e1	      0xe800000000	                          call 0x4001326	       410	shallow.c	ELSE_1	FUNCTION_17	CALL_1
0x12e6	        0x488b45f8	                mov rax, qword [rbp - 8]	       411	shallow.c	ELSE_1	FUNCTION_17	CALL_2
0x12ea	        0x488b4018	            mov rax, qword [rax + 0x18] 	       411	shallow.c	ELSE_1	FUNCTION_17	CALL_2
0x12ee	          0x4889c7	                            mov rdi, rax	       411	shallow.c	ELSE_1	FUNCTION_17	CALL_2
0x12f1	      0xe800000000	                          call 0x4001336	       411	shallow.c	ELSE_1	FUNCTION_17	CALL_2
0x12f6	              0x90	                                     nop	       412	shallow.c	ELSE_1	FUNCTION_17
0x12f7	              0xc9	                                   leave	       412	shallow.c	ELSE_1	FUNCTION_17
0x12f8	              0xc3	                                     ret	       412	shallow.c	ELSE_1	FUNCTION_17
rollback_lock_file	FOR,0:CALL,1:SWITCH,0:DO,0:WHILE,0:ELSE,0:functions,0:IF,0	10
0x23d	              0x55	                                push rbp	       303	lockfile.h	FUNCTION_36
0x23e	          0x4889e5	                            mov rbp, rsp	       303	lockfile.h	FUNCTION_36
0x241	        0x4883ec10	                           sub rsp, 0x10	       303	lockfile.h	FUNCTION_36
0x245	        0x48897df8	                mov qword [rbp - 8], rdi	       303	lockfile.h	FUNCTION_36
0x249	        0x488b45f8	                mov rax, qword [rbp - 8]	       304	lockfile.h	FUNCTION_36	CALL_1
0x24d	          0x4889c7	                            mov rdi, rax	       304	lockfile.h	FUNCTION_36	CALL_1
0x250	      0xe800000000	                          call 0x4000295	       304	lockfile.h	FUNCTION_36	CALL_1
0x255	              0x90	                                     nop	       305	lockfile.h	FUNCTION_36
0x256	              0xc9	                                   leave	       305	lockfile.h	FUNCTION_36
0x257	              0xc3	                                     ret	       305	lockfile.h	FUNCTION_36
paint_alloc	FOR,0:CALL,4:SWITCH,0:DO,0:WHILE,0:ELSE,0:functions,0:IF,2	86
0x1697	              0x55	                                push rbp	       443	shallow.c	FUNCTION_19
0x1698	          0x4889e5	                            mov rbp, rsp	       443	shallow.c	FUNCTION_19
0x169b	        0x4883ec20	                           sub rsp, 0x20	       443	shallow.c	FUNCTION_19
0x169f	        0x48897de8	             mov qword [rbp - 0x18], rdi	       443	shallow.c	FUNCTION_19
0x16a3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       444	shallow.c	FUNCTION_19	CALL_1
0x16a7	          0x8b4018	            mov eax, dword [rax + 0x18] 	       444	shallow.c	FUNCTION_19	CALL_1
0x16aa	          0x83c01f	                           add eax, 0x1f	       444	shallow.c	FUNCTION_19	CALL_1
0x16ad	          0xc1e805	                              shr eax, 5	       444	shallow.c	FUNCTION_19	CALL_1
0x16b0	          0x8945f0	             mov dword [rbp - 0x10], eax	       444	shallow.c	FUNCTION_19	CALL_1
0x16b3	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       445	shallow.c	FUNCTION_19
0x16b6	          0xc1e002	                              shl eax, 2	       445	shallow.c	FUNCTION_19
0x16b9	          0x8945f4	              mov dword [rbp - 0xc], eax	       445	shallow.c	FUNCTION_19
0x16bc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       447	shallow.c	FUNCTION_19	IF_1
0x16c0	          0x8b4038	            mov eax, dword [rax + 0x38] 	       447	shallow.c	FUNCTION_19	IF_1
0x16c3	            0x85c0	                           test eax, eax	       447	shallow.c	FUNCTION_19	IF_1
0x16c5	            0x7425	                            je 0x400172c	       447	shallow.c	FUNCTION_19	IF_1
0x16c7	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       447	shallow.c	FUNCTION_19	IF_1
0x16ca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       447	shallow.c	FUNCTION_19	IF_1
0x16ce	        0x488b4030	            mov rax, qword [rax + 0x30] 	       447	shallow.c	FUNCTION_19	IF_1
0x16d2	          0x4889c1	                            mov rcx, rax	       447	shallow.c	FUNCTION_19	IF_1
0x16d5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       447	shallow.c	FUNCTION_19	IF_1
0x16d9	        0x488b4028	            mov rax, qword [rax + 0x28] 	       447	shallow.c	FUNCTION_19	IF_1
0x16dd	          0x4829c1	                            sub rcx, rax	       447	shallow.c	FUNCTION_19	IF_1
0x16e0	          0x4889c8	                            mov rax, rcx	       447	shallow.c	FUNCTION_19	IF_1
0x16e3	          0x4839c2	                            cmp rdx, rax	       447	shallow.c	FUNCTION_19	IF_1
0x16e6	     0xf8eb7000000	                           jle 0x40017e3	       447	shallow.c	FUNCTION_19	IF_1
0x16ec	    0x817df4000008	         cmp dword [rbp - 0xc], 0x80000 	       448	shallow.c	FUNCTION_19	IF_1	IF_2
0x16f3	            0x7614	                           jbe 0x4001749	       448	shallow.c	FUNCTION_19	IF_1	IF_2
0x16f5	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       449	shallow.c	FUNCTION_19	IF_1	IF_2	CALL_2
0x16f8	            0x89c6	                            mov esi, eax	       449	shallow.c	FUNCTION_19	IF_1	IF_2	CALL_2
0x16fa	      0xbf00000000	                              mov edi, 0	       449	shallow.c	FUNCTION_19	IF_1	IF_2	CALL_2
0x16ff	      0xb800000000	                              mov eax, 0	       449	shallow.c	FUNCTION_19	IF_1	IF_2	CALL_2
0x1704	      0xe800000000	                          call 0x4001749	       449	shallow.c	FUNCTION_19	IF_1	IF_2	CALL_2
0x1709	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       451	shallow.c	FUNCTION_19	IF_1
0x170d	          0x8b4038	            mov eax, dword [rax + 0x38] 	       451	shallow.c	FUNCTION_19	IF_1
0x1710	          0x8d5001	                      lea edx, [rax + 1]	       451	shallow.c	FUNCTION_19	IF_1
0x1713	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       451	shallow.c	FUNCTION_19	IF_1
0x1717	          0x895038	             mov dword [rax + 0x38], edx	       451	shallow.c	FUNCTION_19	IF_1
0x171a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       452	shallow.c	FUNCTION_19	IF_1	CALL_3
0x171e	          0x8b4038	            mov eax, dword [rax + 0x38] 	       452	shallow.c	FUNCTION_19	IF_1	CALL_3
0x1721	            0x89c0	                            mov eax, eax	       452	shallow.c	FUNCTION_19	IF_1	CALL_3
0x1723	          0x4889c6	                            mov rsi, rax	       452	shallow.c	FUNCTION_19	IF_1	CALL_3
0x1726	      0xbf08000000	                              mov edi, 8	       452	shallow.c	FUNCTION_19	IF_1	CALL_3
0x172b	      0xe8d0e8ffff	                        call sym.st_mult	       452	shallow.c	FUNCTION_19	IF_1	CALL_3
0x1730	          0x4889c2	                            mov rdx, rax	       452	shallow.c	FUNCTION_19	IF_1	CALL_3
0x1733	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       452	shallow.c	FUNCTION_19	IF_1	CALL_3
0x1737	        0x488b4020	            mov rax, qword [rax + 0x20] 	       452	shallow.c	FUNCTION_19	IF_1	CALL_3
0x173b	          0x4889d6	                            mov rsi, rdx	       452	shallow.c	FUNCTION_19	IF_1	CALL_3
0x173e	          0x4889c7	                            mov rdi, rax	       452	shallow.c	FUNCTION_19	IF_1	CALL_3
0x1741	      0xe800000000	                          call 0x4001786	       452	shallow.c	FUNCTION_19	IF_1	CALL_3
0x1746	          0x4889c2	                            mov rdx, rax	       452	shallow.c	FUNCTION_19	IF_1	CALL_3
0x1749	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       452	shallow.c	FUNCTION_19	IF_1	CALL_3
0x174d	        0x48895020	             mov qword [rax + 0x20], rdx	       452	shallow.c	FUNCTION_19	IF_1	CALL_3
0x1751	      0xbf00000800	                        mov edi, 0x80000	       453	shallow.c	FUNCTION_19	IF_1	CALL_4
0x1756	      0xe800000000	                          call 0x400179b	       453	shallow.c	FUNCTION_19	IF_1	CALL_4
0x175b	          0x4889c2	                            mov rdx, rax	       453	shallow.c	FUNCTION_19	IF_1	CALL_4
0x175e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       453	shallow.c	FUNCTION_19	IF_1	CALL_4
0x1762	        0x48895028	             mov qword [rax + 0x28], rdx	       453	shallow.c	FUNCTION_19	IF_1	CALL_4
0x1766	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       454	shallow.c	FUNCTION_19	IF_1
0x176a	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       454	shallow.c	FUNCTION_19	IF_1
0x176e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       454	shallow.c	FUNCTION_19	IF_1
0x1772	          0x8b4038	            mov eax, dword [rax + 0x38] 	       454	shallow.c	FUNCTION_19	IF_1
0x1775	          0x83e801	                              sub eax, 1	       454	shallow.c	FUNCTION_19	IF_1
0x1778	            0x89c0	                            mov eax, eax	       454	shallow.c	FUNCTION_19	IF_1
0x177a	        0x48c1e003	                              shl rax, 3	       454	shallow.c	FUNCTION_19	IF_1
0x177e	          0x4801c2	                            add rdx, rax	       454	shallow.c	FUNCTION_19	IF_1
0x1781	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       454	shallow.c	FUNCTION_19	IF_1
0x1785	        0x488b4028	            mov rax, qword [rax + 0x28] 	       454	shallow.c	FUNCTION_19	IF_1
0x1789	          0x488902	                    mov qword [rdx], rax	       454	shallow.c	FUNCTION_19	IF_1
0x178c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       455	shallow.c	FUNCTION_19	IF_1
0x1790	        0x488b4028	            mov rax, qword [rax + 0x28] 	       455	shallow.c	FUNCTION_19	IF_1
0x1794	    0x488d90000008	                lea rdx, [rax + 0x80000]	       455	shallow.c	FUNCTION_19	IF_1
0x179b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       455	shallow.c	FUNCTION_19	IF_1
0x179f	        0x48895030	             mov qword [rax + 0x30], rdx	       455	shallow.c	FUNCTION_19	IF_1
0x17a3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       457	shallow.c	FUNCTION_19
0x17a7	        0x488b4028	            mov rax, qword [rax + 0x28] 	       457	shallow.c	FUNCTION_19
0x17ab	        0x488945f8	                mov qword [rbp - 8], rax	       457	shallow.c	FUNCTION_19
0x17af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       458	shallow.c	FUNCTION_19
0x17b3	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       458	shallow.c	FUNCTION_19
0x17b7	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       458	shallow.c	FUNCTION_19
0x17ba	          0x4801c2	                            add rdx, rax	       458	shallow.c	FUNCTION_19
0x17bd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       458	shallow.c	FUNCTION_19
0x17c1	        0x48895028	             mov qword [rax + 0x28], rdx	       458	shallow.c	FUNCTION_19
0x17c5	        0x488b45f8	                mov rax, qword [rbp - 8]	       459	shallow.c	FUNCTION_19
0x17c9	              0xc9	                                   leave	       460	shallow.c	FUNCTION_19
0x17ca	              0xc3	                                     ret	       460	shallow.c	FUNCTION_19
is_repository_shallow	FOR,0:CALL,10:SWITCH,0:DO,0:WHILE,1:ELSE,0:functions,0:IF,4	73
0x355	              0x55	                                push rbp	        44	shallow.c	FUNCTION_3
0x356	          0x4889e5	                            mov rbp, rsp	        44	shallow.c	FUNCTION_3
0x359	    0x4881ec400400	                          sub rsp, 0x440	        44	shallow.c	FUNCTION_3
0x360	    0x64488b042528	                mov rax, qword fs:[0x28]	        44	shallow.c	FUNCTION_3
0x369	        0x488945f8	                mov qword [rbp - 8], rax	        44	shallow.c	FUNCTION_3
0x36d	            0x31c0	                            xor eax, eax	        44	shallow.c	FUNCTION_3
0x36f	    0x488b05000000	            mov rax, qword [0x040003b6] 	        47	shallow.c	FUNCTION_3
0x376	    0x488985c0fbff	            mov qword [rbp - 0x440], rax	        47	shallow.c	FUNCTION_3
0x37d	    0x8b0500000000	            mov eax, dword [0x040003c3] 	        49	shallow.c	FUNCTION_3	IF_1
0x383	            0x85c0	                           test eax, eax	        49	shallow.c	FUNCTION_3	IF_1
0x385	            0x780b	                            js 0x40003d2	        49	shallow.c	FUNCTION_3	IF_1
0x387	    0x8b0500000000	            mov eax, dword [0x040003cd] 	        50	shallow.c	FUNCTION_3	IF_1
0x38d	      0xe909010000	                           jmp 0x40004db	        50	shallow.c	FUNCTION_3	IF_1
0x392	    0x4883bdc0fbff	              cmp qword [rbp - 0x440], 0	        52	shallow.c	FUNCTION_3	IF_2
0x39a	            0x750c	                           jne 0x40003e8	        52	shallow.c	FUNCTION_3	IF_2
0x39c	      0xe800000000	                          call 0x40003e1	        53	shallow.c	FUNCTION_3	CALL_1
0x3a1	    0x488985c0fbff	            mov qword [rbp - 0x440], rax	        53	shallow.c	FUNCTION_3	CALL_1
0x3a8	    0x488b85c0fbff	            mov rax, qword [rbp - 0x440]	        59	shallow.c	FUNCTION_3	IF_3	CALL_2
0x3af	           0xfb600	                   movzx eax, byte [rax]	        59	shallow.c	FUNCTION_3	IF_3	CALL_2
0x3b2	            0x84c0	                             test al, al	        59	shallow.c	FUNCTION_3	IF_3	CALL_2
0x3b4	            0x7425	                            je 0x400041b	        59	shallow.c	FUNCTION_3	IF_3	CALL_2
0x3b6	    0x488b85c0fbff	            mov rax, qword [rbp - 0x440]	        59	shallow.c	FUNCTION_3	IF_3	CALL_2
0x3bd	      0xbe00000000	                              mov esi, 0	        59	shallow.c	FUNCTION_3	IF_3	CALL_2
0x3c2	          0x4889c7	                            mov rdi, rax	        59	shallow.c	FUNCTION_3	IF_3	CALL_2
0x3c5	      0xe800000000	                          call 0x400040a	        59	shallow.c	FUNCTION_3	IF_3	CALL_2
0x3ca	    0x488985c8fbff	            mov qword [rbp - 0x438], rax	        59	shallow.c	FUNCTION_3	IF_3	CALL_2
0x3d1	    0x4883bdc8fbff	              cmp qword [rbp - 0x438], 0	        59	shallow.c	FUNCTION_3	IF_3	CALL_2
0x3d9	            0x751f	                           jne 0x400043a	        59	shallow.c	FUNCTION_3	IF_3	CALL_2
0x3db	      0xbf00000000	                              mov edi, 0	        60	shallow.c	FUNCTION_3	IF_3	CALL_3
0x3e0	      0xe800000000	                          call 0x4000425	        60	shallow.c	FUNCTION_3	IF_3	CALL_3
0x3e5	    0xc70500000000	               mov dword [0x0400042f], 0	        61	shallow.c	FUNCTION_3	IF_3
0x3ef	    0x8b0500000000	            mov eax, dword [0x04000435] 	        62	shallow.c	FUNCTION_3	IF_3
0x3f5	      0xe9a1000000	                           jmp 0x40004db	        62	shallow.c	FUNCTION_3	IF_3
0x3fa	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	        64	shallow.c	FUNCTION_3	CALL_5
0x401	          0x4889c7	                            mov rdi, rax	        64	shallow.c	FUNCTION_3	CALL_5
0x404	      0xe800000000	                          call 0x4000449	        64	shallow.c	FUNCTION_3	CALL_5
0x409	            0x89c6	                            mov esi, eax	        64	shallow.c	FUNCTION_3	CALL_5
0x40b	      0xbf00000000	                              mov edi, 0	        64	shallow.c	FUNCTION_3	CALL_5
0x410	      0xe800000000	                          call 0x4000455	        64	shallow.c	FUNCTION_3	CALL_5
0x415	    0xc70500000000	               mov dword [0x0400045f], 1	        65	shallow.c	FUNCTION_3
0x41f	            0xeb45	                           jmp 0x40004a6	        67	shallow.c	FUNCTION_3	WHILE_1	CALL_6
0x421	    0x488d95d0fbff	                  lea rdx, [rbp - 0x430]	        69	shallow.c	FUNCTION_3	WHILE_1	IF_4	CALL_7
0x428	    0x488d85f0fbff	                  lea rax, [rbp - 0x410]	        69	shallow.c	FUNCTION_3	WHILE_1	IF_4	CALL_7
0x42f	          0x4889d6	                            mov rsi, rdx	        69	shallow.c	FUNCTION_3	WHILE_1	IF_4	CALL_7
0x432	          0x4889c7	                            mov rdi, rax	        69	shallow.c	FUNCTION_3	WHILE_1	IF_4	CALL_7
0x435	      0xe800000000	                          call 0x400047a	        69	shallow.c	FUNCTION_3	WHILE_1	IF_4	CALL_7
0x43a	            0x85c0	                           test eax, eax	        69	shallow.c	FUNCTION_3	WHILE_1	IF_4	CALL_7
0x43c	            0x7419	                            je 0x4000497	        69	shallow.c	FUNCTION_3	WHILE_1	IF_4	CALL_7
0x43e	    0x488d85f0fbff	                  lea rax, [rbp - 0x410]	        70	shallow.c	FUNCTION_3	WHILE_1	CALL_8
0x445	          0x4889c6	                            mov rsi, rax	        70	shallow.c	FUNCTION_3	WHILE_1	CALL_8
0x448	      0xbf00000000	                              mov edi, 0	        70	shallow.c	FUNCTION_3	WHILE_1	CALL_8
0x44d	      0xb800000000	                              mov eax, 0	        70	shallow.c	FUNCTION_3	WHILE_1	CALL_8
0x452	      0xe800000000	                          call 0x4000497	        70	shallow.c	FUNCTION_3	WHILE_1	CALL_8
0x457	    0x488d85d0fbff	                  lea rax, [rbp - 0x430]	        71	shallow.c	FUNCTION_3	WHILE_1	CALL_9
0x45e	          0x4889c7	                            mov rdi, rax	        71	shallow.c	FUNCTION_3	WHILE_1	CALL_9
0x461	      0xe800000000	                          call 0x40004a6	        71	shallow.c	FUNCTION_3	WHILE_1	CALL_9
0x466	    0x488b95c8fbff	            mov rdx, qword [rbp - 0x438]	        67	shallow.c	FUNCTION_3	WHILE_1	CALL_6
0x46d	    0x488d85f0fbff	                  lea rax, [rbp - 0x410]	        67	shallow.c	FUNCTION_3	WHILE_1	CALL_6
0x474	      0xbe00040000	                          mov esi, 0x400	        67	shallow.c	FUNCTION_3	WHILE_1	CALL_6
0x479	          0x4889c7	                            mov rdi, rax	        67	shallow.c	FUNCTION_3	WHILE_1	CALL_6
0x47c	      0xe800000000	                          call 0x40004c1	        67	shallow.c	FUNCTION_3	WHILE_1	CALL_6
0x481	          0x4885c0	                           test rax, rax	        67	shallow.c	FUNCTION_3	WHILE_1	CALL_6
0x484	            0x759b	                           jne 0x4000461	        67	shallow.c	FUNCTION_3	WHILE_1	CALL_6
0x486	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	        73	shallow.c	FUNCTION_3	CALL_10
0x48d	          0x4889c7	                            mov rdi, rax	        73	shallow.c	FUNCTION_3	CALL_10
0x490	      0xe800000000	                          call 0x40004d5	        73	shallow.c	FUNCTION_3	CALL_10
0x495	    0x8b0500000000	            mov eax, dword [0x040004db] 	        74	shallow.c	FUNCTION_3
0x49b	        0x488b4df8	                mov rcx, qword [rbp - 8]	        75	shallow.c	FUNCTION_3
0x49f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        75	shallow.c	FUNCTION_3
0x4a8	            0x7405	                            je 0x40004ef	        75	shallow.c	FUNCTION_3
0x4aa	      0xe800000000	                          call 0x40004ef	        75	shallow.c	FUNCTION_3
0x4af	              0xc9	                                   leave	        75	shallow.c	FUNCTION_3
0x4b0	              0xc3	                                     ret	        75	shallow.c	FUNCTION_3
post_assign_shallow	FOR,4:CALL,14:SWITCH,0:DO,0:WHILE,0:ELSE,0:functions,0:IF,7	244
0x2289	              0x55	                                push rbp	       668	shallow.c	FUNCTION_25
0x228a	          0x4889e5	                            mov rbp, rsp	       668	shallow.c	FUNCTION_25
0x228d	        0x4883ec70	                           sub rsp, 0x70	       668	shallow.c	FUNCTION_25
0x2291	        0x48897da8	             mov qword [rbp - 0x58], rdi	       668	shallow.c	FUNCTION_25
0x2295	        0x488975a0	             mov qword [rbp - 0x60], rsi	       668	shallow.c	FUNCTION_25
0x2299	        0x48895598	             mov qword [rbp - 0x68], rdx	       668	shallow.c	FUNCTION_25
0x229d	    0x64488b042528	                mov rax, qword fs:[0x28]	       668	shallow.c	FUNCTION_25
0x22a6	        0x488945f8	                mov qword [rbp - 8], rax	       668	shallow.c	FUNCTION_25
0x22aa	            0x31c0	                            xor eax, eax	       668	shallow.c	FUNCTION_25
0x22ac	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       669	shallow.c	FUNCTION_25
0x22b0	          0x488b00	                    mov rax, qword [rax]	       669	shallow.c	FUNCTION_25
0x22b3	          0x488b00	                    mov rax, qword [rax]	       669	shallow.c	FUNCTION_25
0x22b6	        0x488945c8	             mov qword [rbp - 0x38], rax	       669	shallow.c	FUNCTION_25
0x22ba	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       673	shallow.c	FUNCTION_25	CALL_1
0x22be	        0x488b4028	            mov rax, qword [rax + 0x28] 	       673	shallow.c	FUNCTION_25	CALL_1
0x22c2	          0x8b4008	                mov eax, dword [rax + 8]	       673	shallow.c	FUNCTION_25	CALL_1
0x22c5	          0x83c01f	                           add eax, 0x1f	       673	shallow.c	FUNCTION_25	CALL_1
0x22c8	          0x8d501f	                   lea edx, [rax + 0x1f]	       673	shallow.c	FUNCTION_25	CALL_1
0x22cb	            0x85c0	                           test eax, eax	       673	shallow.c	FUNCTION_25	CALL_1
0x22cd	           0xf48c2	                          cmovs eax, edx	       673	shallow.c	FUNCTION_25	CALL_1
0x22d0	          0xc1f805	                              sar eax, 5	       673	shallow.c	FUNCTION_25	CALL_1
0x22d3	          0x8945c4	             mov dword [rbp - 0x3c], eax	       673	shallow.c	FUNCTION_25	CALL_1
0x22d6	      0xbf00000000	                              mov edi, 0	       676	shallow.c	FUNCTION_25	CALL_2
0x22db	      0xe873deffff	                  call sym.trace_pass_fl	       676	shallow.c	FUNCTION_25	CALL_2
0x22e0	            0x85c0	                           test eax, eax	       676	shallow.c	FUNCTION_25	CALL_2
0x22e2	            0x741e	                            je 0x4002342	       676	shallow.c	FUNCTION_25	CALL_2
0x22e4	      0xb900000000	                              mov ecx, 0	       676	shallow.c	FUNCTION_25	CALL_2
0x22e9	      0xba00000000	                              mov edx, 0	       676	shallow.c	FUNCTION_25	CALL_2
0x22ee	      0xbea4020000	                          mov esi, 0x2a4	       676	shallow.c	FUNCTION_25	CALL_2
0x22f3	      0xbf00000000	                              mov edi, 0	       676	shallow.c	FUNCTION_25	CALL_2
0x22f8	      0xb800000000	                              mov eax, 0	       676	shallow.c	FUNCTION_25	CALL_2
0x22fd	      0xe800000000	                          call 0x4002342	       676	shallow.c	FUNCTION_25	CALL_2
0x2302	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       677	shallow.c	FUNCTION_25	IF_1
0x2307	            0x7426	                            je 0x400236f	       677	shallow.c	FUNCTION_25	IF_1
0x2309	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       678	shallow.c	FUNCTION_25	CALL_3
0x230d	        0x488b4028	            mov rax, qword [rax + 0x28] 	       678	shallow.c	FUNCTION_25	CALL_3
0x2311	          0x8b4008	                mov eax, dword [rax + 8]	       678	shallow.c	FUNCTION_25	CALL_3
0x2314	            0x4898	                                    cdqe	       678	shallow.c	FUNCTION_25	CALL_3
0x2316	    0x488d14850000	                        lea rdx, [rax*4]	       678	shallow.c	FUNCTION_25	CALL_3
0x231e	        0x488b4598	             mov rax, qword [rbp - 0x68]	       678	shallow.c	FUNCTION_25	CALL_3
0x2322	      0xbe00000000	                              mov esi, 0	       678	shallow.c	FUNCTION_25	CALL_3
0x2327	          0x4889c7	                            mov rdi, rax	       678	shallow.c	FUNCTION_25	CALL_3
0x232a	      0xe800000000	                          call 0x400236f	       678	shallow.c	FUNCTION_25	CALL_3
0x232f	    0xc745b8000000	               mov dword [rbp - 0x48], 0	       681	shallow.c	FUNCTION_25	FOR_1
0x2336	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       681	shallow.c	FUNCTION_25	FOR_1
0x2339	          0x8945bc	             mov dword [rbp - 0x44], eax	       681	shallow.c	FUNCTION_25	FOR_1
0x233c	      0xe9f3000000	                           jmp 0x4002474	       681	shallow.c	FUNCTION_25	FOR_1
0x2341	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       682	shallow.c	FUNCTION_25	FOR_1	IF_2
0x2344	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	       682	shallow.c	FUNCTION_25	FOR_1	IF_2
0x2347	            0x742e	                            je 0x40023b7	       682	shallow.c	FUNCTION_25	FOR_1	IF_2
0x2349	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x234d	        0x488b4018	            mov rax, qword [rax + 0x18] 	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x2351	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x2354	          0x4863d2	                         movsxd rdx, edx	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x2357	        0x48c1e202	                              shl rdx, 2	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x235b	          0x4801c2	                            add rdx, rax	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x235e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x2362	        0x488b4018	            mov rax, qword [rax + 0x18] 	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x2366	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x2369	          0x4863c9	                         movsxd rcx, ecx	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x236c	        0x48c1e102	                              shl rcx, 2	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x2370	          0x4801c8	                            add rax, rcx	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x2373	            0x8b00	                    mov eax, dword [rax]	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x2375	            0x8902	                    mov dword [rdx], eax	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x2377	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       684	shallow.c	FUNCTION_25	FOR_1	CALL_4
0x237b	        0x488b4018	            mov rax, qword [rax + 0x18] 	       684	shallow.c	FUNCTION_25	FOR_1	CALL_4
0x237f	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       684	shallow.c	FUNCTION_25	FOR_1	CALL_4
0x2382	          0x4863d2	                         movsxd rdx, edx	       684	shallow.c	FUNCTION_25	FOR_1	CALL_4
0x2385	        0x48c1e202	                              shl rdx, 2	       684	shallow.c	FUNCTION_25	FOR_1	CALL_4
0x2389	          0x4801d0	                            add rax, rdx	       684	shallow.c	FUNCTION_25	FOR_1	CALL_4
0x238c	            0x8b00	                    mov eax, dword [rax]	       684	shallow.c	FUNCTION_25	FOR_1	CALL_4
0x238e	          0x4863d0	                         movsxd rdx, eax	       684	shallow.c	FUNCTION_25	FOR_1	CALL_4
0x2391	          0x4889d0	                            mov rax, rdx	       684	shallow.c	FUNCTION_25	FOR_1	CALL_4
0x2394	        0x48c1e002	                              shl rax, 2	       684	shallow.c	FUNCTION_25	FOR_1	CALL_4
0x2398	          0x4801d0	                            add rax, rdx	       684	shallow.c	FUNCTION_25	FOR_1	CALL_4
0x239b	        0x48c1e002	                              shl rax, 2	       684	shallow.c	FUNCTION_25	FOR_1	CALL_4
0x239f	          0x4889c2	                            mov rdx, rax	       684	shallow.c	FUNCTION_25	FOR_1	CALL_4
0x23a2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       684	shallow.c	FUNCTION_25	FOR_1	CALL_4
0x23a6	          0x4801d0	                            add rax, rdx	       684	shallow.c	FUNCTION_25	FOR_1	CALL_4
0x23a9	          0x4889c7	                            mov rdi, rax	       684	shallow.c	FUNCTION_25	FOR_1	CALL_4
0x23ac	      0xe800000000	                          call 0x40023f1	       684	shallow.c	FUNCTION_25	FOR_1	CALL_4
0x23b1	        0x488945d0	             mov qword [rbp - 0x30], rax	       684	shallow.c	FUNCTION_25	FOR_1	CALL_4
0x23b5	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       685	shallow.c	FUNCTION_25	FOR_1	CALL_5
0x23b9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       685	shallow.c	FUNCTION_25	FOR_1	CALL_5
0x23bd	          0x4889d6	                            mov rsi, rdx	       685	shallow.c	FUNCTION_25	FOR_1	CALL_5
0x23c0	          0x4889c7	                            mov rdi, rax	       685	shallow.c	FUNCTION_25	FOR_1	CALL_5
0x23c3	      0xe87bf2ffff	                  call sym.ref_bitmap_at	       685	shallow.c	FUNCTION_25	FOR_1	CALL_5
0x23c8	        0x488945d8	             mov qword [rbp - 0x28], rax	       685	shallow.c	FUNCTION_25	FOR_1	CALL_5
0x23cc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       686	shallow.c	FUNCTION_25	FOR_1	IF_3
0x23d0	          0x488b00	                    mov rax, qword [rax]	       686	shallow.c	FUNCTION_25	FOR_1	IF_3
0x23d3	          0x4885c0	                           test rax, rax	       686	shallow.c	FUNCTION_25	FOR_1	IF_3
0x23d6	            0x7457	                            je 0x400246f	       686	shallow.c	FUNCTION_25	FOR_1	IF_3
0x23d8	    0xc745c0000000	               mov dword [rbp - 0x40], 0	       688	shallow.c	FUNCTION_25	FOR_1	FOR_2
0x23df	            0xeb44	                           jmp 0x4002465	       688	shallow.c	FUNCTION_25	FOR_1	FOR_2
0x23e1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x23e5	          0x488b00	                    mov rax, qword [rax]	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x23e8	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x23eb	          0x4863d2	                         movsxd rdx, edx	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x23ee	        0x48c1e202	                              shl rdx, 2	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x23f2	          0x4801d0	                            add rax, rdx	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x23f5	            0x8b00	                    mov eax, dword [rax]	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x23f7	            0x85c0	                           test eax, eax	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x23f9	            0x7426	                            je 0x4002461	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x23fb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       690	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4	CALL_6
0x23ff	          0x488b10	                    mov rdx, qword [rax]	       690	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4	CALL_6
0x2402	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       690	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4	CALL_6
0x2406	        0x488b4028	            mov rax, qword [rax + 0x28] 	       690	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4	CALL_6
0x240a	          0x8b4808	                mov ecx, dword [rax + 8]	       690	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4	CALL_6
0x240d	        0x488b4598	             mov rax, qword [rbp - 0x68]	       690	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4	CALL_6
0x2411	            0x89ce	                            mov esi, ecx	       690	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4	CALL_6
0x2413	          0x4889c7	                            mov rdi, rax	       690	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4	CALL_6
0x2416	      0xe8f5fdffff	               call sym.update_refstatus	       690	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4	CALL_6
0x241b	        0x8345b801	               add dword [rbp - 0x48], 1	       691	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x241f	            0xeb0f	                           jmp 0x4002470	       692	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x2421	        0x8345c001	               add dword [rbp - 0x40], 1	       688	shallow.c	FUNCTION_25	FOR_1	FOR_2
0x2425	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       688	shallow.c	FUNCTION_25	FOR_1	FOR_2
0x2428	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	       688	shallow.c	FUNCTION_25	FOR_1	FOR_2
0x242b	            0x7cb4	                            jl 0x4002421	       688	shallow.c	FUNCTION_25	FOR_1	FOR_2
0x242d	            0xeb01	                           jmp 0x4002470	       688	shallow.c	FUNCTION_25	FOR_1	FOR_2
0x242f	              0x90	                                     nop	       687	shallow.c	FUNCTION_25	FOR_1	IF_3
0x2430	        0x8345bc01	               add dword [rbp - 0x44], 1	       681	shallow.c	FUNCTION_25	FOR_1
0x2434	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       681	shallow.c	FUNCTION_25	FOR_1
0x2438	          0x8b4020	            mov eax, dword [rax + 0x20] 	       681	shallow.c	FUNCTION_25	FOR_1
0x243b	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	       681	shallow.c	FUNCTION_25	FOR_1
0x243e	     0xf8ffdfeffff	                            jg 0x4002381	       681	shallow.c	FUNCTION_25	FOR_1
0x2444	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       695	shallow.c	FUNCTION_25
0x2448	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       695	shallow.c	FUNCTION_25
0x244b	          0x895020	             mov dword [rax + 0x20], edx	       695	shallow.c	FUNCTION_25
0x244e	        0x488d45e0	                   lea rax, [rbp - 0x20]	       697	shallow.c	FUNCTION_25	CALL_7
0x2452	      0xba10000000	                           mov edx, 0x10	       697	shallow.c	FUNCTION_25	CALL_7
0x2457	      0xbe00000000	                              mov esi, 0	       697	shallow.c	FUNCTION_25	CALL_7
0x245c	          0x4889c7	                            mov rdi, rax	       697	shallow.c	FUNCTION_25	CALL_7
0x245f	      0xe800000000	                          call 0x40024a4	       697	shallow.c	FUNCTION_25	CALL_7
0x2464	        0x488d45e0	                   lea rax, [rbp - 0x20]	       698	shallow.c	FUNCTION_25	CALL_8
0x2468	          0x4889c6	                            mov rsi, rax	       698	shallow.c	FUNCTION_25	CALL_8
0x246b	      0xbf00000000	                              mov edi, 0	       698	shallow.c	FUNCTION_25	CALL_8
0x2470	      0xe800000000	                          call 0x40024b5	       698	shallow.c	FUNCTION_25	CALL_8
0x2475	        0x488d45e0	                   lea rax, [rbp - 0x20]	       699	shallow.c	FUNCTION_25	CALL_9
0x2479	          0x4889c6	                            mov rsi, rax	       699	shallow.c	FUNCTION_25	CALL_9
0x247c	      0xbf00000000	                              mov edi, 0	       699	shallow.c	FUNCTION_25	CALL_9
0x2481	      0xe800000000	                          call 0x40024c6	       699	shallow.c	FUNCTION_25	CALL_9
0x2486	    0xc745b8000000	               mov dword [rbp - 0x48], 0	       702	shallow.c	FUNCTION_25	FOR_3
0x248d	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       702	shallow.c	FUNCTION_25	FOR_3
0x2490	          0x8945bc	             mov dword [rbp - 0x44], eax	       702	shallow.c	FUNCTION_25	FOR_3
0x2493	      0xe90c010000	                           jmp 0x40025e4	       702	shallow.c	FUNCTION_25	FOR_3
0x2498	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       703	shallow.c	FUNCTION_25	FOR_3	IF_5
0x249b	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	       703	shallow.c	FUNCTION_25	FOR_3	IF_5
0x249e	            0x742e	                            je 0x400250e	       703	shallow.c	FUNCTION_25	FOR_3	IF_5
0x24a0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x24a4	        0x488b4008	                mov rax, qword [rax + 8]	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x24a8	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x24ab	          0x4863d2	                         movsxd rdx, edx	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x24ae	        0x48c1e202	                              shl rdx, 2	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x24b2	          0x4801c2	                            add rdx, rax	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x24b5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x24b9	        0x488b4008	                mov rax, qword [rax + 8]	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x24bd	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x24c0	          0x4863c9	                         movsxd rcx, ecx	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x24c3	        0x48c1e102	                              shl rcx, 2	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x24c7	          0x4801c8	                            add rax, rcx	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x24ca	            0x8b00	                    mov eax, dword [rax]	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x24cc	            0x8902	                    mov dword [rdx], eax	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x24ce	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       705	shallow.c	FUNCTION_25	FOR_3	CALL_10
0x24d2	        0x488b4008	                mov rax, qword [rax + 8]	       705	shallow.c	FUNCTION_25	FOR_3	CALL_10
0x24d6	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       705	shallow.c	FUNCTION_25	FOR_3	CALL_10
0x24d9	          0x4863d2	                         movsxd rdx, edx	       705	shallow.c	FUNCTION_25	FOR_3	CALL_10
0x24dc	        0x48c1e202	                              shl rdx, 2	       705	shallow.c	FUNCTION_25	FOR_3	CALL_10
0x24e0	          0x4801d0	                            add rax, rdx	       705	shallow.c	FUNCTION_25	FOR_3	CALL_10
0x24e3	            0x8b00	                    mov eax, dword [rax]	       705	shallow.c	FUNCTION_25	FOR_3	CALL_10
0x24e5	          0x4863d0	                         movsxd rdx, eax	       705	shallow.c	FUNCTION_25	FOR_3	CALL_10
0x24e8	          0x4889d0	                            mov rax, rdx	       705	shallow.c	FUNCTION_25	FOR_3	CALL_10
0x24eb	        0x48c1e002	                              shl rax, 2	       705	shallow.c	FUNCTION_25	FOR_3	CALL_10
0x24ef	          0x4801d0	                            add rax, rdx	       705	shallow.c	FUNCTION_25	FOR_3	CALL_10
0x24f2	        0x48c1e002	                              shl rax, 2	       705	shallow.c	FUNCTION_25	FOR_3	CALL_10
0x24f6	          0x4889c2	                            mov rdx, rax	       705	shallow.c	FUNCTION_25	FOR_3	CALL_10
0x24f9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       705	shallow.c	FUNCTION_25	FOR_3	CALL_10
0x24fd	          0x4801d0	                            add rax, rdx	       705	shallow.c	FUNCTION_25	FOR_3	CALL_10
0x2500	          0x4889c7	                            mov rdi, rax	       705	shallow.c	FUNCTION_25	FOR_3	CALL_10
0x2503	      0xe800000000	                          call 0x4002548	       705	shallow.c	FUNCTION_25	FOR_3	CALL_10
0x2508	        0x488945d0	             mov qword [rbp - 0x30], rax	       705	shallow.c	FUNCTION_25	FOR_3	CALL_10
0x250c	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       706	shallow.c	FUNCTION_25	FOR_3	CALL_11
0x2510	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       706	shallow.c	FUNCTION_25	FOR_3	CALL_11
0x2514	          0x4889d6	                            mov rsi, rdx	       706	shallow.c	FUNCTION_25	FOR_3	CALL_11
0x2517	          0x4889c7	                            mov rdi, rax	       706	shallow.c	FUNCTION_25	FOR_3	CALL_11
0x251a	      0xe824f1ffff	                  call sym.ref_bitmap_at	       706	shallow.c	FUNCTION_25	FOR_3	CALL_11
0x251f	        0x488945d8	             mov qword [rbp - 0x28], rax	       706	shallow.c	FUNCTION_25	FOR_3	CALL_11
0x2523	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       707	shallow.c	FUNCTION_25	FOR_3	IF_6
0x2527	          0x488b00	                    mov rax, qword [rax]	       707	shallow.c	FUNCTION_25	FOR_3	IF_6
0x252a	          0x4885c0	                           test rax, rax	       707	shallow.c	FUNCTION_25	FOR_3	IF_6
0x252d	            0x7470	                            je 0x40025df	       707	shallow.c	FUNCTION_25	FOR_3	IF_6
0x252f	    0xc745c0000000	               mov dword [rbp - 0x40], 0	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x2536	            0xeb5d	                           jmp 0x40025d5	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x2538	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x253c	          0x488b00	                    mov rax, qword [rax]	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x253f	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x2542	          0x4863d2	                         movsxd rdx, edx	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x2545	        0x48c1e202	                              shl rdx, 2	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x2549	          0x4801d0	                            add rax, rdx	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x254c	            0x8b00	                    mov eax, dword [rax]	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x254e	            0x85c0	                           test eax, eax	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x2550	            0x743f	                            je 0x40025d1	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x2552	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       712	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_12
0x2556	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	       712	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_12
0x2559	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       712	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_12
0x255d	            0x89ce	                            mov esi, ecx	       712	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_12
0x255f	          0x4889c7	                            mov rdi, rax	       712	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_12
0x2562	      0xe800000000	                          call 0x40025a7	       712	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_12
0x2567	            0x85c0	                           test eax, eax	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x2569	            0x7526	                           jne 0x40025d1	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x256b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       713	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_13
0x256f	          0x488b10	                    mov rdx, qword [rax]	       713	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_13
0x2572	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       713	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_13
0x2576	        0x488b4028	            mov rax, qword [rax + 0x28] 	       713	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_13
0x257a	          0x8b4808	                mov ecx, dword [rax + 8]	       713	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_13
0x257d	        0x488b4598	             mov rax, qword [rbp - 0x68]	       713	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_13
0x2581	            0x89ce	                            mov esi, ecx	       713	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_13
0x2583	          0x4889c7	                            mov rdi, rax	       713	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_13
0x2586	      0xe885fcffff	               call sym.update_refstatus	       713	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_13
0x258b	        0x8345b801	               add dword [rbp - 0x48], 1	       714	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x258f	            0xeb0f	                           jmp 0x40025e0	       715	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x2591	        0x8345c001	               add dword [rbp - 0x40], 1	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x2595	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x2598	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x259b	            0x7c9b	                            jl 0x4002578	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x259d	            0xeb01	                           jmp 0x40025e0	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x259f	              0x90	                                     nop	       708	shallow.c	FUNCTION_25	FOR_3	IF_6
0x25a0	        0x8345bc01	               add dword [rbp - 0x44], 1	       702	shallow.c	FUNCTION_25	FOR_3
0x25a4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       702	shallow.c	FUNCTION_25	FOR_3
0x25a8	          0x8b4010	            mov eax, dword [rax + 0x10] 	       702	shallow.c	FUNCTION_25	FOR_3
0x25ab	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	       702	shallow.c	FUNCTION_25	FOR_3
0x25ae	     0xf8fe4feffff	                            jg 0x40024d8	       702	shallow.c	FUNCTION_25	FOR_3
0x25b4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       718	shallow.c	FUNCTION_25
0x25b8	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       718	shallow.c	FUNCTION_25
0x25bb	          0x895010	             mov dword [rax + 0x10], edx	       718	shallow.c	FUNCTION_25
0x25be	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       720	shallow.c	FUNCTION_25	CALL_14
0x25c2	          0x4889c7	                            mov rdi, rax	       720	shallow.c	FUNCTION_25	CALL_14
0x25c5	      0xe800000000	                          call 0x400260a	       720	shallow.c	FUNCTION_25	CALL_14
0x25ca	              0x90	                                     nop	       721	shallow.c	FUNCTION_25
0x25cb	        0x488b45f8	                mov rax, qword [rbp - 8]	       721	shallow.c	FUNCTION_25
0x25cf	    0x644833042528	                xor rax, qword fs:[0x28]	       721	shallow.c	FUNCTION_25
0x25d8	            0x7405	                            je 0x400261f	       721	shallow.c	FUNCTION_25
0x25da	      0xe800000000	                          call 0x400261f	       721	shallow.c	FUNCTION_25
0x25df	              0xc9	                                   leave	       721	shallow.c	FUNCTION_25
0x25e0	              0xc3	                                     ret	       721	shallow.c	FUNCTION_25
xstrdup_or_null	FOR,0:CALL,1:SWITCH,0:DO,0:WHILE,0:ELSE,0:functions,0:IF,0	13
0x52	              0x55	                                push rbp	       923	git-compat-util.h	FUNCTION_55
0x53	          0x4889e5	                            mov rbp, rsp	       923	git-compat-util.h	FUNCTION_55
0x56	        0x4883ec10	                           sub rsp, 0x10	       923	git-compat-util.h	FUNCTION_55
0x5a	        0x48897df8	                mov qword [rbp - 8], rdi	       923	git-compat-util.h	FUNCTION_55
0x5e	      0x48837df800	                  cmp qword [rbp - 8], 0	       924	git-compat-util.h	FUNCTION_55	CALL_1
0x63	            0x740e	                            je 0x40000b3	       924	git-compat-util.h	FUNCTION_55	CALL_1
0x65	        0x488b45f8	                mov rax, qword [rbp - 8]	       924	git-compat-util.h	FUNCTION_55	CALL_1
0x69	          0x4889c7	                            mov rdi, rax	       924	git-compat-util.h	FUNCTION_55	CALL_1
0x6c	      0xe800000000	                          call 0x40000b1	       924	git-compat-util.h	FUNCTION_55	CALL_1
0x71	            0xeb05	                           jmp 0x40000b8	       924	git-compat-util.h	FUNCTION_55	CALL_1
0x73	      0xb800000000	                              mov eax, 0	       924	git-compat-util.h	FUNCTION_55	CALL_1
0x78	              0xc9	                                   leave	       925	git-compat-util.h	FUNCTION_55
0x79	              0xc3	                                     ret	       925	git-compat-util.h	FUNCTION_55
remove_nonexistent_theirs_shallow	FOR,1:CALL,2:SWITCH,0:DO,0:WHILE,0:ELSE,0:functions,0:IF,2	70
0x12f9	              0x55	                                push rbp	       417	shallow.c	FUNCTION_18
0x12fa	          0x4889e5	                            mov rbp, rsp	       417	shallow.c	FUNCTION_18
0x12fd	        0x4883ec20	                           sub rsp, 0x20	       417	shallow.c	FUNCTION_18
0x1301	        0x48897de8	             mov qword [rbp - 0x18], rdi	       417	shallow.c	FUNCTION_18
0x1305	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       418	shallow.c	FUNCTION_18
0x1309	          0x488b00	                    mov rax, qword [rax]	       418	shallow.c	FUNCTION_18
0x130c	          0x488b00	                    mov rax, qword [rax]	       418	shallow.c	FUNCTION_18
0x130f	        0x488945f8	                mov qword [rbp - 8], rax	       418	shallow.c	FUNCTION_18
0x1313	      0xbf00000000	                              mov edi, 0	       420	shallow.c	FUNCTION_18	CALL_1
0x1318	      0xe836eeffff	                  call sym.trace_pass_fl	       420	shallow.c	FUNCTION_18	CALL_1
0x131d	            0x85c0	                           test eax, eax	       420	shallow.c	FUNCTION_18	CALL_1
0x131f	            0x741e	                            je 0x400137f	       420	shallow.c	FUNCTION_18	CALL_1
0x1321	      0xb900000000	                              mov ecx, 0	       420	shallow.c	FUNCTION_18	CALL_1
0x1326	      0xba00000000	                              mov edx, 0	       420	shallow.c	FUNCTION_18	CALL_1
0x132b	      0xbea4010000	                          mov esi, 0x1a4	       420	shallow.c	FUNCTION_18	CALL_1
0x1330	      0xbf00000000	                              mov edi, 0	       420	shallow.c	FUNCTION_18	CALL_1
0x1335	      0xb800000000	                              mov eax, 0	       420	shallow.c	FUNCTION_18	CALL_1
0x133a	      0xe800000000	                          call 0x400137f	       420	shallow.c	FUNCTION_18	CALL_1
0x133f	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       421	shallow.c	FUNCTION_18	FOR_1
0x1346	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       421	shallow.c	FUNCTION_18	FOR_1
0x1349	          0x8945f0	             mov dword [rbp - 0x10], eax	       421	shallow.c	FUNCTION_18	FOR_1
0x134c	            0xeb7c	                           jmp 0x400140a	       421	shallow.c	FUNCTION_18	FOR_1
0x134e	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       422	shallow.c	FUNCTION_18	FOR_1	IF_1
0x1351	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       422	shallow.c	FUNCTION_18	FOR_1	IF_1
0x1354	            0x742e	                            je 0x40013c4	       422	shallow.c	FUNCTION_18	FOR_1	IF_1
0x1356	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x135a	        0x488b4018	            mov rax, qword [rax + 0x18] 	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x135e	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x1361	          0x4863d2	                         movsxd rdx, edx	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x1364	        0x48c1e202	                              shl rdx, 2	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x1368	          0x4801c2	                            add rdx, rax	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x136b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x136f	        0x488b4018	            mov rax, qword [rax + 0x18] 	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x1373	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x1376	          0x4863c9	                         movsxd rcx, ecx	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x1379	        0x48c1e102	                              shl rcx, 2	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x137d	          0x4801c8	                            add rax, rcx	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x1380	            0x8b00	                    mov eax, dword [rax]	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x1382	            0x8902	                    mov dword [rdx], eax	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x1384	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x1388	        0x488b4018	            mov rax, qword [rax + 0x18] 	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x138c	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x138f	          0x4863d2	                         movsxd rdx, edx	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x1392	        0x48c1e202	                              shl rdx, 2	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x1396	          0x4801d0	                            add rax, rdx	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x1399	            0x8b00	                    mov eax, dword [rax]	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x139b	          0x4863d0	                         movsxd rdx, eax	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x139e	          0x4889d0	                            mov rax, rdx	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x13a1	        0x48c1e002	                              shl rax, 2	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x13a5	          0x4801d0	                            add rax, rdx	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x13a8	        0x48c1e002	                              shl rax, 2	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x13ac	          0x4889c2	                            mov rdx, rax	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x13af	        0x488b45f8	                mov rax, qword [rbp - 8]	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x13b3	          0x4801d0	                            add rax, rdx	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x13b6	          0x4889c7	                            mov rdi, rax	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x13b9	      0xe800000000	                          call 0x40013fe	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x13be	            0x85c0	                           test eax, eax	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x13c0	            0x7404	                            je 0x4001406	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0x13c2	        0x8345f401	                add dword [rbp - 0xc], 1	       425	shallow.c	FUNCTION_18	FOR_1	IF_2
0x13c6	        0x8345f001	               add dword [rbp - 0x10], 1	       421	shallow.c	FUNCTION_18	FOR_1
0x13ca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       421	shallow.c	FUNCTION_18	FOR_1
0x13ce	          0x8b4020	            mov eax, dword [rax + 0x20] 	       421	shallow.c	FUNCTION_18	FOR_1
0x13d1	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	       421	shallow.c	FUNCTION_18	FOR_1
0x13d4	     0xf8f74ffffff	                            jg 0x400138e	       421	shallow.c	FUNCTION_18	FOR_1
0x13da	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       427	shallow.c	FUNCTION_18
0x13de	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       427	shallow.c	FUNCTION_18
0x13e1	          0x895020	             mov dword [rax + 0x20], edx	       427	shallow.c	FUNCTION_18
0x13e4	              0x90	                                     nop	       428	shallow.c	FUNCTION_18
0x13e5	              0xc9	                                   leave	       428	shallow.c	FUNCTION_18
0x13e6	              0xc3	                                     ret	       428	shallow.c	FUNCTION_18
set_alternate_shallow_file	FOR,0:CALL,3:SWITCH,0:DO,0:WHILE,0:ELSE,0:functions,0:IF,2	27
0x277	              0x55	                                push rbp	        21	shallow.c	FUNCTION_1
0x278	          0x4889e5	                            mov rbp, rsp	        21	shallow.c	FUNCTION_1
0x27b	        0x4883ec10	                           sub rsp, 0x10	        21	shallow.c	FUNCTION_1
0x27f	        0x48897df8	                mov qword [rbp - 8], rdi	        21	shallow.c	FUNCTION_1
0x283	          0x8975f4	              mov dword [rbp - 0xc], esi	        21	shallow.c	FUNCTION_1
0x286	    0x8b0500000000	            mov eax, dword [0x040002cc] 	        22	shallow.c	FUNCTION_1	IF_1
0x28c	          0x83f8ff	             cmp eax, 0xffffffffffffffff	        22	shallow.c	FUNCTION_1	IF_1
0x28f	            0x740f	                            je 0x40002e0	        22	shallow.c	FUNCTION_1	IF_1
0x291	      0xbf00000000	                              mov edi, 0	        23	shallow.c	FUNCTION_1	CALL_1
0x296	      0xb800000000	                              mov eax, 0	        23	shallow.c	FUNCTION_1	CALL_1
0x29b	      0xe800000000	                          call 0x40002e0	        23	shallow.c	FUNCTION_1	CALL_1
0x2a0	    0x488b05000000	            mov rax, qword [0x040002e7] 	        24	shallow.c	FUNCTION_1	IF_2
0x2a7	          0x4885c0	                           test rax, rax	        24	shallow.c	FUNCTION_1	IF_2
0x2aa	            0x7406	                            je 0x40002f2	        24	shallow.c	FUNCTION_1	IF_2
0x2ac	        0x837df400	                cmp dword [rbp - 0xc], 0	        24	shallow.c	FUNCTION_1	IF_2
0x2b0	            0x7424	                            je 0x4000316	        24	shallow.c	FUNCTION_1	IF_2
0x2b2	    0x488b05000000	            mov rax, qword [0x040002f9] 	        26	shallow.c	FUNCTION_1	CALL_2
0x2b9	          0x4889c7	                            mov rdi, rax	        26	shallow.c	FUNCTION_1	CALL_2
0x2bc	      0xe800000000	                          call 0x4000301	        26	shallow.c	FUNCTION_1	CALL_2
0x2c1	        0x488b45f8	                mov rax, qword [rbp - 8]	        27	shallow.c	FUNCTION_1	CALL_3
0x2c5	          0x4889c7	                            mov rdi, rax	        27	shallow.c	FUNCTION_1	CALL_3
0x2c8	      0xe885fdffff	                call sym.xstrdup_or_null	        27	shallow.c	FUNCTION_1	CALL_3
0x2cd	    0x488905000000	            mov qword [0x04000314], rax 	        27	shallow.c	FUNCTION_1	CALL_3
0x2d4	            0xeb01	                           jmp 0x4000317	        27	shallow.c	FUNCTION_1	CALL_3
0x2d6	              0x90	                                     nop	        25	shallow.c	FUNCTION_1	IF_2
0x2d7	              0xc9	                                   leave	        28	shallow.c	FUNCTION_1
0x2d8	              0xc3	                                     ret	        28	shallow.c	FUNCTION_1
assign_shallow_commits_to_refs	FOR,7:CALL,20:SWITCH,0:DO,0:WHILE,0:ELSE,1:functions,0:IF,3	293
0x1bca	              0x55	                                push rbp	       563	shallow.c	FUNCTION_22
0x1bcb	          0x4889e5	                            mov rbp, rsp	       563	shallow.c	FUNCTION_22
0x1bce	              0x53	                                push rbx	       563	shallow.c	FUNCTION_22
0x1bcf	    0x4881ecc80000	                           sub rsp, 0xc8	       563	shallow.c	FUNCTION_22
0x1bd6	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	       563	shallow.c	FUNCTION_22
0x1bdd	    0x4889b540ffff	             mov qword [rbp - 0xc0], rsi	       563	shallow.c	FUNCTION_22
0x1be4	    0x48899538ffff	             mov qword [rbp - 0xc8], rdx	       563	shallow.c	FUNCTION_22
0x1beb	    0x64488b042528	                mov rax, qword fs:[0x28]	       563	shallow.c	FUNCTION_22
0x1bf4	        0x488945e8	             mov qword [rbp - 0x18], rax	       563	shallow.c	FUNCTION_22
0x1bf8	            0x31c0	                            xor eax, eax	       563	shallow.c	FUNCTION_22
0x1bfa	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       564	shallow.c	FUNCTION_22
0x1c01	          0x488b00	                    mov rax, qword [rax]	       564	shallow.c	FUNCTION_22
0x1c04	          0x488b00	                    mov rax, qword [rax]	       564	shallow.c	FUNCTION_22
0x1c07	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       564	shallow.c	FUNCTION_22
0x1c0e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       565	shallow.c	FUNCTION_22
0x1c15	        0x488b4028	            mov rax, qword [rax + 0x28] 	       565	shallow.c	FUNCTION_22
0x1c19	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       565	shallow.c	FUNCTION_22
0x1c20	    0xc7855cffffff	               mov dword [rbp - 0xa4], 0	       567	shallow.c	FUNCTION_22
0x1c2a	      0xbf00000000	                              mov edi, 0	       570	shallow.c	FUNCTION_22	CALL_1
0x1c2f	      0xe81fe5ffff	                  call sym.trace_pass_fl	       570	shallow.c	FUNCTION_22	CALL_1
0x1c34	            0x85c0	                           test eax, eax	       570	shallow.c	FUNCTION_22	CALL_1
0x1c36	            0x741e	                            je 0x4001c96	       570	shallow.c	FUNCTION_22	CALL_1
0x1c38	      0xb900000000	                              mov ecx, 0	       570	shallow.c	FUNCTION_22	CALL_1
0x1c3d	      0xba00000000	                              mov edx, 0	       570	shallow.c	FUNCTION_22	CALL_1
0x1c42	      0xbe3a020000	                          mov esi, 0x23a	       570	shallow.c	FUNCTION_22	CALL_1
0x1c47	      0xbf00000000	                              mov edi, 0	       570	shallow.c	FUNCTION_22	CALL_1
0x1c4c	      0xb800000000	                              mov eax, 0	       570	shallow.c	FUNCTION_22	CALL_1
0x1c51	      0xe800000000	                          call 0x4001c96	       570	shallow.c	FUNCTION_22	CALL_1
0x1c56	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       571	shallow.c	FUNCTION_22	CALL_2
0x1c5d	          0x8b5010	            mov edx, dword [rax + 0x10] 	       571	shallow.c	FUNCTION_22	CALL_2
0x1c60	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       571	shallow.c	FUNCTION_22	CALL_2
0x1c67	          0x8b4020	            mov eax, dword [rax + 0x20] 	       571	shallow.c	FUNCTION_22	CALL_2
0x1c6a	             0x1d0	                            add eax, edx	       571	shallow.c	FUNCTION_22	CALL_2
0x1c6c	            0x4898	                                    cdqe	       571	shallow.c	FUNCTION_22	CALL_2
0x1c6e	          0x4889c6	                            mov rsi, rax	       571	shallow.c	FUNCTION_22	CALL_2
0x1c71	      0xbf04000000	                              mov edi, 4	       571	shallow.c	FUNCTION_22	CALL_2
0x1c76	      0xe885e3ffff	                        call sym.st_mult	       571	shallow.c	FUNCTION_22	CALL_2
0x1c7b	          0x4889c7	                            mov rdi, rax	       571	shallow.c	FUNCTION_22	CALL_2
0x1c7e	      0xe800000000	                          call 0x4001cc3	       571	shallow.c	FUNCTION_22	CALL_2
0x1c83	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       571	shallow.c	FUNCTION_22	CALL_2
0x1c8a	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	       572	shallow.c	FUNCTION_22	FOR_1
0x1c94	            0xeb46	                           jmp 0x4001d1c	       572	shallow.c	FUNCTION_22	FOR_1
0x1c96	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	       573	shallow.c	FUNCTION_22	FOR_1
0x1c9c	          0x8d5001	                      lea edx, [rax + 1]	       573	shallow.c	FUNCTION_22	FOR_1
0x1c9f	    0x89955cffffff	             mov dword [rbp - 0xa4], edx	       573	shallow.c	FUNCTION_22	FOR_1
0x1ca5	            0x4898	                                    cdqe	       573	shallow.c	FUNCTION_22	FOR_1
0x1ca7	    0x488d14850000	                        lea rdx, [rax*4]	       573	shallow.c	FUNCTION_22	FOR_1
0x1caf	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       573	shallow.c	FUNCTION_22	FOR_1
0x1cb6	          0x4801c2	                            add rdx, rax	       573	shallow.c	FUNCTION_22	FOR_1
0x1cb9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       573	shallow.c	FUNCTION_22	FOR_1
0x1cc0	        0x488b4008	                mov rax, qword [rax + 8]	       573	shallow.c	FUNCTION_22	FOR_1
0x1cc4	    0x8b8d58ffffff	             mov ecx, dword [rbp - 0xa8]	       573	shallow.c	FUNCTION_22	FOR_1
0x1cca	        0x48c1e102	                              shl rcx, 2	       573	shallow.c	FUNCTION_22	FOR_1
0x1cce	          0x4801c8	                            add rax, rcx	       573	shallow.c	FUNCTION_22	FOR_1
0x1cd1	            0x8b00	                    mov eax, dword [rax]	       573	shallow.c	FUNCTION_22	FOR_1
0x1cd3	            0x8902	                    mov dword [rdx], eax	       573	shallow.c	FUNCTION_22	FOR_1
0x1cd5	    0x838558ffffff	               add dword [rbp - 0xa8], 1	       572	shallow.c	FUNCTION_22	FOR_1
0x1cdc	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       572	shallow.c	FUNCTION_22	FOR_1
0x1ce3	          0x8b4010	            mov eax, dword [rax + 0x10] 	       572	shallow.c	FUNCTION_22	FOR_1
0x1ce6	    0x3b8558ffffff	             cmp eax, dword [rbp - 0xa8]	       572	shallow.c	FUNCTION_22	FOR_1
0x1cec	            0x77a8	                            ja 0x4001cd6	       572	shallow.c	FUNCTION_22	FOR_1
0x1cee	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	       574	shallow.c	FUNCTION_22	FOR_2
0x1cf8	            0xeb46	                           jmp 0x4001d80	       574	shallow.c	FUNCTION_22	FOR_2
0x1cfa	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	       575	shallow.c	FUNCTION_22	FOR_2
0x1d00	          0x8d5001	                      lea edx, [rax + 1]	       575	shallow.c	FUNCTION_22	FOR_2
0x1d03	    0x89955cffffff	             mov dword [rbp - 0xa4], edx	       575	shallow.c	FUNCTION_22	FOR_2
0x1d09	            0x4898	                                    cdqe	       575	shallow.c	FUNCTION_22	FOR_2
0x1d0b	    0x488d14850000	                        lea rdx, [rax*4]	       575	shallow.c	FUNCTION_22	FOR_2
0x1d13	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       575	shallow.c	FUNCTION_22	FOR_2
0x1d1a	          0x4801c2	                            add rdx, rax	       575	shallow.c	FUNCTION_22	FOR_2
0x1d1d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       575	shallow.c	FUNCTION_22	FOR_2
0x1d24	        0x488b4018	            mov rax, qword [rax + 0x18] 	       575	shallow.c	FUNCTION_22	FOR_2
0x1d28	    0x8b8d58ffffff	             mov ecx, dword [rbp - 0xa8]	       575	shallow.c	FUNCTION_22	FOR_2
0x1d2e	        0x48c1e102	                              shl rcx, 2	       575	shallow.c	FUNCTION_22	FOR_2
0x1d32	          0x4801c8	                            add rax, rcx	       575	shallow.c	FUNCTION_22	FOR_2
0x1d35	            0x8b00	                    mov eax, dword [rax]	       575	shallow.c	FUNCTION_22	FOR_2
0x1d37	            0x8902	                    mov dword [rdx], eax	       575	shallow.c	FUNCTION_22	FOR_2
0x1d39	    0x838558ffffff	               add dword [rbp - 0xa8], 1	       574	shallow.c	FUNCTION_22	FOR_2
0x1d40	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       574	shallow.c	FUNCTION_22	FOR_2
0x1d47	          0x8b4020	            mov eax, dword [rax + 0x20] 	       574	shallow.c	FUNCTION_22	FOR_2
0x1d4a	    0x3b8558ffffff	             cmp eax, dword [rbp - 0xa8]	       574	shallow.c	FUNCTION_22	FOR_2
0x1d50	            0x77a8	                            ja 0x4001d3a	       574	shallow.c	FUNCTION_22	FOR_2
0x1d52	      0xe800000000	                          call 0x4001d97	       581	shallow.c	FUNCTION_22	CALL_3
0x1d57	    0x898560ffffff	             mov dword [rbp - 0xa0], eax	       581	shallow.c	FUNCTION_22	CALL_3
0x1d5d	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	       582	shallow.c	FUNCTION_22	FOR_3
0x1d67	            0xeb60	                           jmp 0x4001e09	       582	shallow.c	FUNCTION_22	FOR_3
0x1d69	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       583	shallow.c	FUNCTION_22	FOR_3	CALL_4
0x1d6f	            0x89c7	                            mov edi, eax	       583	shallow.c	FUNCTION_22	FOR_3	CALL_4
0x1d71	      0xe800000000	                          call 0x4001db6	       583	shallow.c	FUNCTION_22	FOR_3	CALL_4
0x1d76	        0x48894580	             mov qword [rbp - 0x80], rax	       583	shallow.c	FUNCTION_22	FOR_3	CALL_4
0x1d7a	      0x48837d8000	               cmp qword [rbp - 0x80], 0	       584	shallow.c	FUNCTION_22	FOR_3	IF_1
0x1d7f	            0x7440	                            je 0x4001e01	       584	shallow.c	FUNCTION_22	FOR_3	IF_1
0x1d81	        0x488b4580	             mov rax, qword [rbp - 0x80]	       584	shallow.c	FUNCTION_22	FOR_3	IF_1
0x1d85	           0xfb600	                   movzx eax, byte [rax]	       584	shallow.c	FUNCTION_22	FOR_3	IF_1
0x1d88	          0x83e00e	                            and eax, 0xe	       584	shallow.c	FUNCTION_22	FOR_3	IF_1
0x1d8b	            0x3c02	                               cmp al, 2	       584	shallow.c	FUNCTION_22	FOR_3	IF_1
0x1d8d	            0x7532	                           jne 0x4001e01	       584	shallow.c	FUNCTION_22	FOR_3	IF_1
0x1d8f	        0x488b4580	             mov rax, qword [rbp - 0x80]	       587	shallow.c	FUNCTION_22	FOR_3
0x1d93	            0x8b00	                    mov eax, dword [rax]	       587	shallow.c	FUNCTION_22	FOR_3
0x1d95	          0xc1e804	                              shr eax, 4	       587	shallow.c	FUNCTION_22	FOR_3
0x1d98	      0x25ffffff07	                      and eax, 0x7ffffff	       587	shallow.c	FUNCTION_22	FOR_3
0x1d9d	      0x25fcfbff07	                      and eax, 0x7fffbfc	       587	shallow.c	FUNCTION_22	FOR_3
0x1da2	            0x89c2	                            mov edx, eax	       587	shallow.c	FUNCTION_22	FOR_3
0x1da4	        0x488b4580	             mov rax, qword [rbp - 0x80]	       587	shallow.c	FUNCTION_22	FOR_3
0x1da8	    0x81e2ffffff07	                      and edx, 0x7ffffff	       587	shallow.c	FUNCTION_22	FOR_3
0x1dae	            0x89d1	                            mov ecx, edx	       587	shallow.c	FUNCTION_22	FOR_3
0x1db0	          0xc1e104	                              shl ecx, 4	       587	shallow.c	FUNCTION_22	FOR_3
0x1db3	            0x8b10	                    mov edx, dword [rax]	       587	shallow.c	FUNCTION_22	FOR_3
0x1db5	    0x81e20f000080	                     and edx, 0x8000000f	       587	shallow.c	FUNCTION_22	FOR_3
0x1dbb	             0x9ca	                             or edx, ecx	       587	shallow.c	FUNCTION_22	FOR_3
0x1dbd	            0x8910	                    mov dword [rax], edx	       587	shallow.c	FUNCTION_22	FOR_3
0x1dbf	            0xeb01	                           jmp 0x4001e02	       587	shallow.c	FUNCTION_22	FOR_3
0x1dc1	              0x90	                                     nop	       585	shallow.c	FUNCTION_22	FOR_3	IF_1
0x1dc2	    0x838558ffffff	               add dword [rbp - 0xa8], 1	       582	shallow.c	FUNCTION_22	FOR_3
0x1dc9	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       582	shallow.c	FUNCTION_22	FOR_3
0x1dcf	    0x3b8560ffffff	             cmp eax, dword [rbp - 0xa0]	       582	shallow.c	FUNCTION_22	FOR_3
0x1dd5	            0x7292	                            jb 0x4001da9	       582	shallow.c	FUNCTION_22	FOR_3
0x1dd7	        0x488d45a0	                   lea rax, [rbp - 0x60]	       590	shallow.c	FUNCTION_22	CALL_5
0x1ddb	      0xba40000000	                           mov edx, 0x40	       590	shallow.c	FUNCTION_22	CALL_5
0x1de0	      0xbe00000000	                              mov esi, 0	       590	shallow.c	FUNCTION_22	CALL_5
0x1de5	          0x4889c7	                            mov rdi, rax	       590	shallow.c	FUNCTION_22	CALL_5
0x1de8	      0xe800000000	                          call 0x4001e2d	       590	shallow.c	FUNCTION_22	CALL_5
0x1ded	        0x488d45a0	                   lea rax, [rbp - 0x60]	       591	shallow.c	FUNCTION_22	CALL_6
0x1df1	          0x4889c7	                            mov rdi, rax	       591	shallow.c	FUNCTION_22	CALL_6
0x1df4	      0xe848f6ffff	                call sym.init_ref_bitmap	       591	shallow.c	FUNCTION_22	CALL_6
0x1df9	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       592	shallow.c	FUNCTION_22
0x1e00	          0x8b4008	                mov eax, dword [rax + 8]	       592	shallow.c	FUNCTION_22
0x1e03	          0x8945b8	             mov dword [rbp - 0x48], eax	       592	shallow.c	FUNCTION_22
0x1e06	      0xbe00000000	                              mov esi, 0	       599	shallow.c	FUNCTION_22	CALL_7
0x1e0b	      0xbf00000000	                              mov edi, 0	       599	shallow.c	FUNCTION_22	CALL_7
0x1e10	      0xe800000000	                          call 0x4001e55	       599	shallow.c	FUNCTION_22	CALL_7
0x1e15	      0xbe00000000	                              mov esi, 0	       600	shallow.c	FUNCTION_22	CALL_8
0x1e1a	      0xbf00000000	                              mov edi, 0	       600	shallow.c	FUNCTION_22	CALL_8
0x1e1f	      0xe800000000	                          call 0x4001e64	       600	shallow.c	FUNCTION_22	CALL_8
0x1e24	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	       603	shallow.c	FUNCTION_22	FOR_4
0x1e2e	            0xeb79	                           jmp 0x4001ee9	       603	shallow.c	FUNCTION_22	FOR_4
0x1e30	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       604	shallow.c	FUNCTION_22	FOR_4	CALL_9
0x1e36	    0x488d14850000	                        lea rdx, [rax*4]	       604	shallow.c	FUNCTION_22	FOR_4	CALL_9
0x1e3e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       604	shallow.c	FUNCTION_22	FOR_4	CALL_9
0x1e45	          0x4801d0	                            add rax, rdx	       604	shallow.c	FUNCTION_22	FOR_4	CALL_9
0x1e48	            0x8b00	                    mov eax, dword [rax]	       604	shallow.c	FUNCTION_22	FOR_4	CALL_9
0x1e4a	          0x4863d0	                         movsxd rdx, eax	       604	shallow.c	FUNCTION_22	FOR_4	CALL_9
0x1e4d	          0x4889d0	                            mov rax, rdx	       604	shallow.c	FUNCTION_22	FOR_4	CALL_9
0x1e50	        0x48c1e002	                              shl rax, 2	       604	shallow.c	FUNCTION_22	FOR_4	CALL_9
0x1e54	          0x4801d0	                            add rax, rdx	       604	shallow.c	FUNCTION_22	FOR_4	CALL_9
0x1e57	        0x48c1e002	                              shl rax, 2	       604	shallow.c	FUNCTION_22	FOR_4	CALL_9
0x1e5b	          0x4889c2	                            mov rdx, rax	       604	shallow.c	FUNCTION_22	FOR_4	CALL_9
0x1e5e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       604	shallow.c	FUNCTION_22	FOR_4	CALL_9
0x1e65	          0x4801d0	                            add rax, rdx	       604	shallow.c	FUNCTION_22	FOR_4	CALL_9
0x1e68	          0x4889c7	                            mov rdi, rax	       604	shallow.c	FUNCTION_22	FOR_4	CALL_9
0x1e6b	      0xe800000000	                          call 0x4001eb0	       604	shallow.c	FUNCTION_22	FOR_4	CALL_9
0x1e70	        0x48894588	             mov qword [rbp - 0x78], rax	       604	shallow.c	FUNCTION_22	FOR_4	CALL_9
0x1e74	        0x488b4588	             mov rax, qword [rbp - 0x78]	       605	shallow.c	FUNCTION_22	FOR_4
0x1e78	            0x8b00	                    mov eax, dword [rax]	       605	shallow.c	FUNCTION_22	FOR_4
0x1e7a	          0xc1e804	                              shr eax, 4	       605	shallow.c	FUNCTION_22	FOR_4
0x1e7d	      0x25ffffff07	                      and eax, 0x7ffffff	       605	shallow.c	FUNCTION_22	FOR_4
0x1e82	          0x80cc04	                                or ah, 4	       605	shallow.c	FUNCTION_22	FOR_4
0x1e85	            0x89c2	                            mov edx, eax	       605	shallow.c	FUNCTION_22	FOR_4
0x1e87	        0x488b4588	             mov rax, qword [rbp - 0x78]	       605	shallow.c	FUNCTION_22	FOR_4
0x1e8b	    0x81e2ffffff07	                      and edx, 0x7ffffff	       605	shallow.c	FUNCTION_22	FOR_4
0x1e91	            0x89d1	                            mov ecx, edx	       605	shallow.c	FUNCTION_22	FOR_4
0x1e93	          0xc1e104	                              shl ecx, 4	       605	shallow.c	FUNCTION_22	FOR_4
0x1e96	            0x8b10	                    mov edx, dword [rax]	       605	shallow.c	FUNCTION_22	FOR_4
0x1e98	    0x81e20f000080	                     and edx, 0x8000000f	       605	shallow.c	FUNCTION_22	FOR_4
0x1e9e	             0x9ca	                             or edx, ecx	       605	shallow.c	FUNCTION_22	FOR_4
0x1ea0	            0x8910	                    mov dword [rax], edx	       605	shallow.c	FUNCTION_22	FOR_4
0x1ea2	    0x838558ffffff	               add dword [rbp - 0xa8], 1	       603	shallow.c	FUNCTION_22	FOR_4
0x1ea9	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	       603	shallow.c	FUNCTION_22	FOR_4
0x1eaf	    0x398558ffffff	            cmp dword [rbp - 0xa8], eax 	       603	shallow.c	FUNCTION_22	FOR_4
0x1eb5	     0xf8275ffffff	                            jb 0x4001e70	       603	shallow.c	FUNCTION_22	FOR_4
0x1ebb	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	       608	shallow.c	FUNCTION_22	FOR_5
0x1ec5	            0xeb3d	                           jmp 0x4001f44	       608	shallow.c	FUNCTION_22	FOR_5
0x1ec7	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       609	shallow.c	FUNCTION_22	CALL_10
0x1ece	          0x488b08	                    mov rcx, qword [rax]	       609	shallow.c	FUNCTION_22	CALL_10
0x1ed1	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	       609	shallow.c	FUNCTION_22	CALL_10
0x1ed7	          0x4889d0	                            mov rax, rdx	       609	shallow.c	FUNCTION_22	CALL_10
0x1eda	        0x48c1e002	                              shl rax, 2	       609	shallow.c	FUNCTION_22	CALL_10
0x1ede	          0x4801d0	                            add rax, rdx	       609	shallow.c	FUNCTION_22	CALL_10
0x1ee1	        0x48c1e002	                              shl rax, 2	       609	shallow.c	FUNCTION_22	CALL_10
0x1ee5	          0x4801c1	                            add rcx, rax	       609	shallow.c	FUNCTION_22	CALL_10
0x1ee8	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	       609	shallow.c	FUNCTION_22	CALL_10
0x1eee	        0x488d45a0	                   lea rax, [rbp - 0x60]	       609	shallow.c	FUNCTION_22	CALL_10
0x1ef2	          0x4889ce	                            mov rsi, rcx	       609	shallow.c	FUNCTION_22	CALL_10
0x1ef5	          0x4889c7	                            mov rdi, rax	       609	shallow.c	FUNCTION_22	CALL_10
0x1ef8	      0xe8cef8ffff	                     call sym.paint_down	       609	shallow.c	FUNCTION_22	CALL_10
0x1efd	    0x838558ffffff	               add dword [rbp - 0xa8], 1	       608	shallow.c	FUNCTION_22	FOR_5
0x1f04	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       608	shallow.c	FUNCTION_22	FOR_5
0x1f0b	          0x8b4008	                mov eax, dword [rax + 8]	       608	shallow.c	FUNCTION_22	FOR_5
0x1f0e	    0x3b8558ffffff	             cmp eax, dword [rbp - 0xa8]	       608	shallow.c	FUNCTION_22	FOR_5
0x1f14	            0x77b1	                            ja 0x4001f07	       608	shallow.c	FUNCTION_22	FOR_5
0x1f16	    0x4883bd40ffff	               cmp qword [rbp - 0xc0], 0	       611	shallow.c	FUNCTION_22	IF_2
0x1f1e	     0xf841b010000	                            je 0x400207f	       611	shallow.c	FUNCTION_22	IF_2
0x1f24	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       612	shallow.c	FUNCTION_22	IF_2	CALL_11
0x1f27	          0x83c01f	                           add eax, 0x1f	       612	shallow.c	FUNCTION_22	IF_2	CALL_11
0x1f2a	          0xc1e805	                              shr eax, 5	       612	shallow.c	FUNCTION_22	IF_2	CALL_11
0x1f2d	          0xc1e002	                              shl eax, 2	       612	shallow.c	FUNCTION_22	IF_2	CALL_11
0x1f30	    0x898564ffffff	             mov dword [rbp - 0x9c], eax	       612	shallow.c	FUNCTION_22	IF_2	CALL_11
0x1f36	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       613	shallow.c	FUNCTION_22	IF_2	CALL_12
0x1f3d	          0x488b00	                    mov rax, qword [rax]	       613	shallow.c	FUNCTION_22	IF_2	CALL_12
0x1f40	          0x8b4008	                mov eax, dword [rax + 8]	       613	shallow.c	FUNCTION_22	IF_2	CALL_12
0x1f43	            0x4898	                                    cdqe	       613	shallow.c	FUNCTION_22	IF_2	CALL_12
0x1f45	    0x488d14c50000	                        lea rdx, [rax*8]	       613	shallow.c	FUNCTION_22	IF_2	CALL_12
0x1f4d	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       613	shallow.c	FUNCTION_22	IF_2	CALL_12
0x1f54	      0xbe00000000	                              mov esi, 0	       613	shallow.c	FUNCTION_22	IF_2	CALL_12
0x1f59	          0x4889c7	                            mov rdi, rax	       613	shallow.c	FUNCTION_22	IF_2	CALL_12
0x1f5c	      0xe800000000	                          call 0x4001fa1	       613	shallow.c	FUNCTION_22	IF_2	CALL_12
0x1f61	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x1f6b	      0xe9bb000000	                           jmp 0x400206b	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x1f70	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x1f76	    0x488d14850000	                        lea rdx, [rax*4]	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x1f7e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x1f85	          0x4801d0	                            add rax, rdx	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x1f88	            0x8b00	                    mov eax, dword [rax]	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x1f8a	          0x4863d0	                         movsxd rdx, eax	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x1f8d	          0x4889d0	                            mov rax, rdx	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x1f90	        0x48c1e002	                              shl rax, 2	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x1f94	          0x4801d0	                            add rax, rdx	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x1f97	        0x48c1e002	                              shl rax, 2	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x1f9b	          0x4889c2	                            mov rdx, rax	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x1f9e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x1fa5	          0x4801d0	                            add rax, rdx	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x1fa8	          0x4889c7	                            mov rdi, rax	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x1fab	      0xe800000000	                          call 0x4001ff0	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x1fb0	        0x48894590	             mov qword [rbp - 0x70], rax	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_13
0x1fb4	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       616	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_14
0x1fb8	        0x488d45a0	                   lea rax, [rbp - 0x60]	       616	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_14
0x1fbc	          0x4889d6	                            mov rsi, rdx	       616	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_14
0x1fbf	          0x4889c7	                            mov rdi, rax	       616	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_14
0x1fc2	      0xe87cf6ffff	                  call sym.ref_bitmap_at	       616	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_14
0x1fc7	        0x48894598	             mov qword [rbp - 0x68], rax	       616	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_14
0x1fcb	        0x488b4598	             mov rax, qword [rbp - 0x68]	       617	shallow.c	FUNCTION_22	IF_2	FOR_6	IF_3
0x1fcf	          0x488b00	                    mov rax, qword [rax]	       617	shallow.c	FUNCTION_22	IF_2	FOR_6	IF_3
0x1fd2	          0x4885c0	                           test rax, rax	       617	shallow.c	FUNCTION_22	IF_2	FOR_6	IF_3
0x1fd5	            0x744d	                            je 0x4002064	       617	shallow.c	FUNCTION_22	IF_2	FOR_6	IF_3
0x1fd7	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_15
0x1fdd	    0x488d14850000	                        lea rdx, [rax*4]	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_15
0x1fe5	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_15
0x1fec	          0x4801d0	                            add rax, rdx	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_15
0x1fef	            0x8b00	                    mov eax, dword [rax]	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_15
0x1ff1	            0x4898	                                    cdqe	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_15
0x1ff3	    0x488d14c50000	                        lea rdx, [rax*8]	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_15
0x1ffb	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_15
0x2002	        0x488d1c02	                    lea rbx, [rdx + rax]	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_15
0x2006	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_15
0x200c	          0x4863d0	                         movsxd rdx, eax	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_15
0x200f	        0x488b4598	             mov rax, qword [rbp - 0x68]	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_15
0x2013	          0x488b00	                    mov rax, qword [rax]	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_15
0x2016	          0x4889d6	                            mov rsi, rdx	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_15
0x2019	          0x4889c7	                            mov rdi, rax	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_15
0x201c	      0xe800000000	                          call 0x4002061	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_15
0x2021	          0x488903	                    mov qword [rbx], rax	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_15
0x2024	    0x838558ffffff	               add dword [rbp - 0xa8], 1	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x202b	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x2031	    0x398558ffffff	            cmp dword [rbp - 0xa8], eax 	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x2037	     0xf8233ffffff	                            jb 0x4001fb0	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x203d	            0xeb1d	                           jmp 0x400209c	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x203f	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	       627	shallow.c	FUNCTION_22	CALL_16
0x2046	        0x488d4da0	                   lea rcx, [rbp - 0x60]	       627	shallow.c	FUNCTION_22	CALL_16
0x204a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       627	shallow.c	FUNCTION_22	CALL_16
0x2051	          0x4889ce	                            mov rsi, rcx	       627	shallow.c	FUNCTION_22	CALL_16
0x2054	          0x4889c7	                            mov rdi, rax	       627	shallow.c	FUNCTION_22	CALL_16
0x2057	      0xe82d020000	            call sym.post_assign_shallow	       627	shallow.c	FUNCTION_22	CALL_16
0x205c	        0x488d45a0	                   lea rax, [rbp - 0x60]	       629	shallow.c	FUNCTION_22	CALL_17
0x2060	          0x4889c7	                            mov rdi, rax	       629	shallow.c	FUNCTION_22	CALL_17
0x2063	      0xe8f9f3ffff	               call sym.clear_ref_bitmap	       629	shallow.c	FUNCTION_22	CALL_17
0x2068	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	       630	shallow.c	FUNCTION_22	FOR_7
0x2072	            0xeb23	                           jmp 0x40020d7	       630	shallow.c	FUNCTION_22	FOR_7
0x2074	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       631	shallow.c	FUNCTION_22	CALL_18
0x2078	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	       631	shallow.c	FUNCTION_22	CALL_18
0x207e	        0x48c1e203	                              shl rdx, 3	       631	shallow.c	FUNCTION_22	CALL_18
0x2082	          0x4801d0	                            add rax, rdx	       631	shallow.c	FUNCTION_22	CALL_18
0x2085	          0x488b00	                    mov rax, qword [rax]	       631	shallow.c	FUNCTION_22	CALL_18
0x2088	          0x4889c7	                            mov rdi, rax	       631	shallow.c	FUNCTION_22	CALL_18
0x208b	      0xe800000000	                          call 0x40020d0	       631	shallow.c	FUNCTION_22	CALL_18
0x2090	    0x838558ffffff	               add dword [rbp - 0xa8], 1	       630	shallow.c	FUNCTION_22	FOR_7
0x2097	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       630	shallow.c	FUNCTION_22	FOR_7
0x209a	    0x3b8558ffffff	             cmp eax, dword [rbp - 0xa8]	       630	shallow.c	FUNCTION_22	FOR_7
0x20a0	            0x77d2	                            ja 0x40020b4	       630	shallow.c	FUNCTION_22	FOR_7
0x20a2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       632	shallow.c	FUNCTION_22	CALL_19
0x20a6	          0x4889c7	                            mov rdi, rax	       632	shallow.c	FUNCTION_22	CALL_19
0x20a9	      0xe800000000	                          call 0x40020ee	       632	shallow.c	FUNCTION_22	CALL_19
0x20ae	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       633	shallow.c	FUNCTION_22	CALL_20
0x20b5	          0x4889c7	                            mov rdi, rax	       633	shallow.c	FUNCTION_22	CALL_20
0x20b8	      0xe800000000	                          call 0x40020fd	       633	shallow.c	FUNCTION_22	CALL_20
0x20bd	              0x90	                                     nop	       634	shallow.c	FUNCTION_22
0x20be	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       634	shallow.c	FUNCTION_22
0x20c2	    0x644833042528	                xor rax, qword fs:[0x28]	       634	shallow.c	FUNCTION_22
0x20cb	            0x7405	                            je 0x4002112	       634	shallow.c	FUNCTION_22
0x20cd	      0xe800000000	                          call 0x4002112	       634	shallow.c	FUNCTION_22
0x20d2	    0x4881c4c80000	                           add rsp, 0xc8	       634	shallow.c	FUNCTION_22
0x20d9	              0x5b	                                 pop rbx	       634	shallow.c	FUNCTION_22
0x20da	              0x5d	                                 pop rbp	       634	shallow.c	FUNCTION_22
0x20db	              0xc3	                                     ret	       634	shallow.c	FUNCTION_22
trace_pass_fl	FOR,0:CALL,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:functions,0:IF,0	17
0x153	              0x55	                                push rbp	       134	trace.h	FUNCTION_64
0x154	          0x4889e5	                            mov rbp, rsp	       134	trace.h	FUNCTION_64
0x157	        0x48897df8	                mov qword [rbp - 8], rdi	       134	trace.h	FUNCTION_64
0x15b	        0x488b45f8	                mov rax, qword [rbp - 8]	       135	trace.h	FUNCTION_64
0x15f	          0x8b4008	                mov eax, dword [rax + 8]	       135	trace.h	FUNCTION_64
0x162	            0x85c0	                           test eax, eax	       135	trace.h	FUNCTION_64
0x164	            0x750f	                           jne 0x40001b5	       135	trace.h	FUNCTION_64
0x166	        0x488b45f8	                mov rax, qword [rbp - 8]	       135	trace.h	FUNCTION_64
0x16a	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	       135	trace.h	FUNCTION_64
0x16e	          0x83e001	                              and eax, 1	       135	trace.h	FUNCTION_64
0x171	            0x84c0	                             test al, al	       135	trace.h	FUNCTION_64
0x173	            0x7507	                           jne 0x40001bc	       135	trace.h	FUNCTION_64
0x175	      0xb801000000	                              mov eax, 1	       135	trace.h	FUNCTION_64
0x17a	            0xeb05	                           jmp 0x40001c1	       135	trace.h	FUNCTION_64
0x17c	      0xb800000000	                              mov eax, 0	       135	trace.h	FUNCTION_64
0x181	              0x5d	                                 pop rbp	       136	trace.h	FUNCTION_64
0x182	              0xc3	                                     ret	       136	trace.h	FUNCTION_64
st_mult	FOR,0:CALL,2:SWITCH,0:DO,0:WHILE,0:ELSE,0:functions,0:IF,1	22
0x0	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_51
0x1	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_51
0x4	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_51
0x8	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_51
0xc	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_51
0x10	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_51	IF_1	CALL_1
0x15	            0x7430	                            je 0x4000087	       795	git-compat-util.h	FUNCTION_51	IF_1	CALL_1
0x17	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_51	IF_1	CALL_1
0x1e	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_51	IF_1	CALL_1
0x23	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_51	IF_1	CALL_1
0x27	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_51	IF_1	CALL_1
0x2b	            0x731a	                           jae 0x4000087	       795	git-compat-util.h	FUNCTION_51	IF_1	CALL_1
0x2d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_51	IF_1	CALL_2
0x31	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_51	IF_1	CALL_2
0x35	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_51	IF_1	CALL_2
0x38	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_51	IF_1	CALL_2
0x3d	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_51	IF_1	CALL_2
0x42	      0xe800000000	                          call 0x4000087	       796	git-compat-util.h	FUNCTION_51	IF_1	CALL_2
0x47	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_51
0x4b	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_51
0x50	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_51
0x51	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_51
strbuf_addch	FOR,0:CALL,2:SWITCH,0:DO,0:WHILE,0:ELSE,0:functions,0:IF,1	33
0xb0	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_68
0xb1	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_68
0xb4	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_68
0xb8	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_68
0xbc	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_68
0xbf	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_68	IF_1	CALL_1
0xc3	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_68	IF_1	CALL_1
0xc6	      0xe8afffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_68	IF_1	CALL_1
0xcb	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_68	IF_1	CALL_1
0xce	            0x7511	                           jne 0x4000121	       227	strbuf.h	FUNCTION_68	IF_1	CALL_1
0xd0	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_68	CALL_2
0xd4	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_68	CALL_2
0xd9	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_68	CALL_2
0xdc	      0xe800000000	                          call 0x4000121	       228	strbuf.h	FUNCTION_68	CALL_2
0xe1	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_68
0xe5	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_68
0xe9	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_68
0xed	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_68
0xf1	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_68
0xf5	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_68
0xf9	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_68
0xfd	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_68
0x100	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_68
0x103	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_68
0x105	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_68
0x109	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_68
0x10d	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_68
0x111	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_68
0x115	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_68
0x118	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_68
0x11b	              0x90	                                     nop	       231	strbuf.h	FUNCTION_68
0x11c	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_68
0x11d	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_68
paint_down	FOR,3:CALL,20:SWITCH,0:DO,0:WHILE,1:ELSE,2:functions,0:IF,8	250
0x17cb	              0x55	                                push rbp	       469	shallow.c	FUNCTION_20
0x17cc	          0x4889e5	                            mov rbp, rsp	       469	shallow.c	FUNCTION_20
0x17cf	        0x4883c480	             add rsp, 0xffffffffffffff80	       469	shallow.c	FUNCTION_20
0x17d3	        0x48897d98	             mov qword [rbp - 0x68], rdi	       469	shallow.c	FUNCTION_20
0x17d7	        0x48897590	             mov qword [rbp - 0x70], rsi	       469	shallow.c	FUNCTION_20
0x17db	          0x89558c	             mov dword [rbp - 0x74], edx	       469	shallow.c	FUNCTION_20
0x17de	    0x64488b042528	                mov rax, qword fs:[0x28]	       469	shallow.c	FUNCTION_20
0x17e7	        0x488945f8	                mov qword [rbp - 8], rax	       469	shallow.c	FUNCTION_20
0x17eb	            0x31c0	                            xor eax, eax	       469	shallow.c	FUNCTION_20
0x17ed	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       471	shallow.c	FUNCTION_20
0x17f5	        0x488b4598	             mov rax, qword [rbp - 0x68]	       472	shallow.c	FUNCTION_20	CALL_1
0x17f9	          0x8b4018	            mov eax, dword [rax + 0x18] 	       472	shallow.c	FUNCTION_20	CALL_1
0x17fc	          0x83c01f	                           add eax, 0x1f	       472	shallow.c	FUNCTION_20	CALL_1
0x17ff	          0xc1e805	                              shr eax, 5	       472	shallow.c	FUNCTION_20	CALL_1
0x1802	          0x8945a8	             mov dword [rbp - 0x58], eax	       472	shallow.c	FUNCTION_20	CALL_1
0x1805	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       473	shallow.c	FUNCTION_20	CALL_2
0x1808	            0x4898	                                    cdqe	       473	shallow.c	FUNCTION_20	CALL_2
0x180a	          0x4889c6	                            mov rsi, rax	       473	shallow.c	FUNCTION_20	CALL_2
0x180d	      0xbf04000000	                              mov edi, 4	       473	shallow.c	FUNCTION_20	CALL_2
0x1812	      0xe8e9e7ffff	                        call sym.st_mult	       473	shallow.c	FUNCTION_20	CALL_2
0x1817	        0x488945c0	             mov qword [rbp - 0x40], rax	       473	shallow.c	FUNCTION_20	CALL_2
0x181b	        0x488b4590	             mov rax, qword [rbp - 0x70]	       474	shallow.c	FUNCTION_20	CALL_3
0x181f	      0xbe01000000	                              mov esi, 1	       474	shallow.c	FUNCTION_20	CALL_3
0x1824	          0x4889c7	                            mov rdi, rax	       474	shallow.c	FUNCTION_20	CALL_3
0x1827	      0xe800000000	                          call 0x400186c	       474	shallow.c	FUNCTION_20	CALL_3
0x182c	        0x488945c8	             mov qword [rbp - 0x38], rax	       474	shallow.c	FUNCTION_20	CALL_3
0x1830	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       478	shallow.c	FUNCTION_20	IF_1
0x1835	     0xf84fd020000	                            je 0x4001b78	       478	shallow.c	FUNCTION_20	IF_1
0x183b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       481	shallow.c	FUNCTION_20	CALL_4
0x183f	          0x4889c7	                            mov rdi, rax	       481	shallow.c	FUNCTION_20	CALL_4
0x1842	      0xe800000000	                          call 0x4001887	       481	shallow.c	FUNCTION_20	CALL_4
0x1847	        0x488945d0	             mov qword [rbp - 0x30], rax	       481	shallow.c	FUNCTION_20	CALL_4
0x184b	        0x488b4598	             mov rax, qword [rbp - 0x68]	       482	shallow.c	FUNCTION_20	CALL_5
0x184f	          0x4889c7	                            mov rdi, rax	       482	shallow.c	FUNCTION_20	CALL_5
0x1852	      0xe840feffff	                    call sym.paint_alloc	       482	shallow.c	FUNCTION_20	CALL_5
0x1857	        0x488945d8	             mov qword [rbp - 0x28], rax	       482	shallow.c	FUNCTION_20	CALL_5
0x185b	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       483	shallow.c	FUNCTION_20	CALL_6
0x185f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       483	shallow.c	FUNCTION_20	CALL_6
0x1863	      0xbe00000000	                              mov esi, 0	       483	shallow.c	FUNCTION_20	CALL_6
0x1868	          0x4889c7	                            mov rdi, rax	       483	shallow.c	FUNCTION_20	CALL_6
0x186b	      0xe800000000	                          call 0x40018b0	       483	shallow.c	FUNCTION_20	CALL_6
0x1870	          0x8b458c	             mov eax, dword [rbp - 0x74]	       484	shallow.c	FUNCTION_20
0x1873	          0xc1e805	                              shr eax, 5	       484	shallow.c	FUNCTION_20
0x1876	            0x89c2	                            mov edx, eax	       484	shallow.c	FUNCTION_20
0x1878	            0x89d0	                            mov eax, edx	       484	shallow.c	FUNCTION_20
0x187a	    0x488d0c850000	                        lea rcx, [rax*4]	       484	shallow.c	FUNCTION_20
0x1882	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       484	shallow.c	FUNCTION_20
0x1886	          0x4801c8	                            add rax, rcx	       484	shallow.c	FUNCTION_20
0x1889	            0x89d2	                            mov edx, edx	       484	shallow.c	FUNCTION_20
0x188b	    0x488d0c950000	                        lea rcx, [rdx*4]	       484	shallow.c	FUNCTION_20
0x1893	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       484	shallow.c	FUNCTION_20
0x1897	          0x4801ca	                            add rdx, rcx	       484	shallow.c	FUNCTION_20
0x189a	            0x8b12	                    mov edx, dword [rdx]	       484	shallow.c	FUNCTION_20
0x189c	          0x8b4d8c	             mov ecx, dword [rbp - 0x74]	       484	shallow.c	FUNCTION_20
0x189f	          0x83e11f	                           and ecx, 0x1f	       484	shallow.c	FUNCTION_20
0x18a2	      0xbe01000000	                              mov esi, 1	       484	shallow.c	FUNCTION_20
0x18a7	            0xd3e6	                             shl esi, cl	       484	shallow.c	FUNCTION_20
0x18a9	            0x89f1	                            mov ecx, esi	       484	shallow.c	FUNCTION_20
0x18ab	             0x9ca	                             or edx, ecx	       484	shallow.c	FUNCTION_20
0x18ad	            0x8910	                    mov dword [rax], edx	       484	shallow.c	FUNCTION_20
0x18af	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       485	shallow.c	FUNCTION_20	CALL_7
0x18b3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       485	shallow.c	FUNCTION_20	CALL_7
0x18b7	          0x4889d6	                            mov rsi, rdx	       485	shallow.c	FUNCTION_20	CALL_7
0x18ba	          0x4889c7	                            mov rdi, rax	       485	shallow.c	FUNCTION_20	CALL_7
0x18bd	      0xe800000000	                          call 0x4001902	       485	shallow.c	FUNCTION_20	CALL_7
0x18c2	      0xe9e6010000	                           jmp 0x4001aed	       486	shallow.c	FUNCTION_20	WHILE_1
0x18c7	        0x488d45b0	                   lea rax, [rbp - 0x50]	       488	shallow.c	FUNCTION_20	WHILE_1	CALL_8
0x18cb	          0x4889c7	                            mov rdi, rax	       488	shallow.c	FUNCTION_20	WHILE_1	CALL_8
0x18ce	      0xe800000000	                          call 0x4001913	       488	shallow.c	FUNCTION_20	WHILE_1	CALL_8
0x18d3	        0x488945e0	             mov qword [rbp - 0x20], rax	       488	shallow.c	FUNCTION_20	WHILE_1	CALL_8
0x18d7	        0x488b4598	             mov rax, qword [rbp - 0x68]	       489	shallow.c	FUNCTION_20	WHILE_1	CALL_9
0x18db	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       489	shallow.c	FUNCTION_20	WHILE_1	CALL_9
0x18df	          0x4889d6	                            mov rsi, rdx	       489	shallow.c	FUNCTION_20	WHILE_1	CALL_9
0x18e2	          0x4889c7	                            mov rdi, rax	       489	shallow.c	FUNCTION_20	WHILE_1	CALL_9
0x18e5	      0xe859fdffff	                  call sym.ref_bitmap_at	       489	shallow.c	FUNCTION_20	WHILE_1	CALL_9
0x18ea	        0x488945e8	             mov qword [rbp - 0x18], rax	       489	shallow.c	FUNCTION_20	WHILE_1	CALL_9
0x18ee	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       492	shallow.c	FUNCTION_20	WHILE_1	IF_2
0x18f2	            0x8b00	                    mov eax, dword [rax]	       492	shallow.c	FUNCTION_20	WHILE_1	IF_2
0x18f4	          0xc1e804	                              shr eax, 4	       492	shallow.c	FUNCTION_20	WHILE_1	IF_2
0x18f7	      0x25ffffff07	                      and eax, 0x7ffffff	       492	shallow.c	FUNCTION_20	WHILE_1	IF_2
0x18fc	          0x83e003	                              and eax, 3	       492	shallow.c	FUNCTION_20	WHILE_1	IF_2
0x18ff	            0x85c0	                           test eax, eax	       492	shallow.c	FUNCTION_20	WHILE_1	IF_2
0x1901	            0x7405	                            je 0x4001948	       492	shallow.c	FUNCTION_20	WHILE_1	IF_2
0x1903	      0xe9a5010000	                           jmp 0x4001aed	       493	shallow.c	FUNCTION_20	WHILE_1	IF_2
0x1908	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x190c	            0x8b00	                    mov eax, dword [rax]	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x190e	          0xc1e804	                              shr eax, 4	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x1911	      0x25ffffff07	                      and eax, 0x7ffffff	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x1916	          0x83c801	                               or eax, 1	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x1919	            0x89c2	                            mov edx, eax	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x191b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x191f	    0x81e2ffffff07	                      and edx, 0x7ffffff	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x1925	            0x89d1	                            mov ecx, edx	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x1927	          0xc1e104	                              shl ecx, 4	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x192a	            0x8b10	                    mov edx, dword [rax]	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x192c	    0x81e20f000080	                     and edx, 0x8000000f	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x1932	             0x9ca	                             or edx, ecx	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x1934	            0x8910	                    mov dword [rax], edx	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x1936	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       497	shallow.c	FUNCTION_20	WHILE_1	IF_3
0x193a	          0x488b00	                    mov rax, qword [rax]	       497	shallow.c	FUNCTION_20	WHILE_1	IF_3
0x193d	          0x4885c0	                           test rax, rax	       497	shallow.c	FUNCTION_20	WHILE_1	IF_3
0x1940	            0x7510	                           jne 0x4001992	       497	shallow.c	FUNCTION_20	WHILE_1	IF_3
0x1942	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       498	shallow.c	FUNCTION_20	WHILE_1	IF_3
0x1946	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       498	shallow.c	FUNCTION_20	WHILE_1	IF_3
0x194a	          0x488910	                    mov qword [rax], rdx	       498	shallow.c	FUNCTION_20	WHILE_1	IF_3
0x194d	      0xe9bb000000	                           jmp 0x4001a4d	       498	shallow.c	FUNCTION_20	WHILE_1	IF_3
0x1952	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       500	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	CALL_10
0x1956	          0x488b08	                    mov rcx, qword [rax]	       500	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	CALL_10
0x1959	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       500	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	CALL_10
0x195d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       500	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	CALL_10
0x1961	          0x4889ce	                            mov rsi, rcx	       500	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	CALL_10
0x1964	          0x4889c7	                            mov rdi, rax	       500	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	CALL_10
0x1967	      0xe800000000	                          call 0x40019ac	       500	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	CALL_10
0x196c	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x1973	            0xeb42	                           jmp 0x40019f7	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x1975	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x1978	    0x488d14850000	                        lea rdx, [rax*4]	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x1980	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x1984	          0x4801d0	                            add rax, rdx	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x1987	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x198a	    0x488d0c950000	                        lea rcx, [rdx*4]	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x1992	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x1996	          0x4801ca	                            add rdx, rcx	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x1999	            0x8b0a	                    mov ecx, dword [rdx]	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x199b	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x199e	    0x488d34950000	                        lea rsi, [rdx*4]	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x19a6	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x19aa	          0x4801f2	                            add rdx, rsi	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x19ad	            0x8b12	                    mov edx, dword [rdx]	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x19af	             0x9ca	                             or edx, ecx	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x19b1	            0x8910	                    mov dword [rax], edx	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x19b3	        0x8345a401	               add dword [rbp - 0x5c], 1	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x19b7	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x19ba	          0x3945a4	            cmp dword [rbp - 0x5c], eax 	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x19bd	            0x72b6	                            jb 0x40019b5	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x19bf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_11
0x19c3	          0x488b08	                    mov rcx, qword [rax]	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_11
0x19c6	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_11
0x19ca	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_11
0x19ce	          0x4889ce	                            mov rsi, rcx	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_11
0x19d1	          0x4889c7	                            mov rdi, rax	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_11
0x19d4	      0xe800000000	                          call 0x4001a19	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_11
0x19d9	            0x85c0	                           test eax, eax	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_11
0x19db	            0x7430	                            je 0x4001a4d	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_11
0x19dd	        0x488b4598	             mov rax, qword [rbp - 0x68]	       504	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_12
0x19e1	          0x4889c7	                            mov rdi, rax	       504	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_12
0x19e4	      0xe8aefcffff	                    call sym.paint_alloc	       504	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_12
0x19e9	          0x4889c2	                            mov rdx, rax	       504	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_12
0x19ec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       504	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_12
0x19f0	          0x488910	                    mov qword [rax], rdx	       504	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_12
0x19f3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       505	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_13
0x19f7	          0x488b00	                    mov rax, qword [rax]	       505	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_13
0x19fa	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       505	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_13
0x19fe	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       505	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_13
0x1a02	          0x4889ce	                            mov rsi, rcx	       505	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_13
0x1a05	          0x4889c7	                            mov rdi, rax	       505	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_13
0x1a08	      0xe800000000	                          call 0x4001a4d	       505	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_13
0x1a0d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       509	shallow.c	FUNCTION_20	WHILE_1	IF_5
0x1a11	            0x8b00	                    mov eax, dword [rax]	       509	shallow.c	FUNCTION_20	WHILE_1	IF_5
0x1a13	          0xc1e804	                              shr eax, 4	       509	shallow.c	FUNCTION_20	WHILE_1	IF_5
0x1a16	      0x25ffffff07	                      and eax, 0x7ffffff	       509	shallow.c	FUNCTION_20	WHILE_1	IF_5
0x1a1b	      0x2500040000	                          and eax, 0x400	       509	shallow.c	FUNCTION_20	WHILE_1	IF_5
0x1a20	            0x85c0	                           test eax, eax	       509	shallow.c	FUNCTION_20	WHILE_1	IF_5
0x1a22	            0x7405	                            je 0x4001a69	       509	shallow.c	FUNCTION_20	WHILE_1	IF_5
0x1a24	      0xe984000000	                           jmp 0x4001aed	       510	shallow.c	FUNCTION_20	WHILE_1	IF_5
0x1a29	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       512	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_14
0x1a2d	          0x4889c7	                            mov rdi, rax	       512	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_14
0x1a30	      0xe823e8ffff	                   call sym.parse_commit	       512	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_14
0x1a35	            0x85c0	                           test eax, eax	       512	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_14
0x1a37	            0x7422	                            je 0x4001a9b	       512	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_14
0x1a39	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       514	shallow.c	FUNCTION_20	WHILE_1	CALL_16
0x1a3d	        0x4883c004	                              add rax, 4	       514	shallow.c	FUNCTION_20	WHILE_1	CALL_16
0x1a41	          0x4889c7	                            mov rdi, rax	       513	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_15
0x1a44	      0xe800000000	                          call 0x4001a89	       513	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_15
0x1a49	          0x4889c6	                            mov rsi, rax	       513	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_15
0x1a4c	      0xbf00000000	                              mov edi, 0	       513	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_15
0x1a51	      0xb800000000	                              mov eax, 0	       513	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_15
0x1a56	      0xe800000000	                          call 0x4001a9b	       513	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_15
0x1a5b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x1a5f	        0x488b4030	            mov rax, qword [rax + 0x30] 	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x1a63	        0x488945b8	             mov qword [rbp - 0x48], rax	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x1a67	            0xeb3d	                           jmp 0x4001ae6	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x1a69	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       517	shallow.c	FUNCTION_20	WHILE_1	FOR_2	IF_7
0x1a6d	          0x488b00	                    mov rax, qword [rax]	       517	shallow.c	FUNCTION_20	WHILE_1	FOR_2	IF_7
0x1a70	            0x8b00	                    mov eax, dword [rax]	       517	shallow.c	FUNCTION_20	WHILE_1	FOR_2	IF_7
0x1a72	          0xc1e804	                              shr eax, 4	       517	shallow.c	FUNCTION_20	WHILE_1	FOR_2	IF_7
0x1a75	      0x25ffffff07	                      and eax, 0x7ffffff	       517	shallow.c	FUNCTION_20	WHILE_1	FOR_2	IF_7
0x1a7a	          0x83e001	                              and eax, 1	       517	shallow.c	FUNCTION_20	WHILE_1	FOR_2	IF_7
0x1a7d	            0x85c0	                           test eax, eax	       517	shallow.c	FUNCTION_20	WHILE_1	FOR_2	IF_7
0x1a7f	            0x7518	                           jne 0x4001ad9	       517	shallow.c	FUNCTION_20	WHILE_1	FOR_2	IF_7
0x1a81	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       519	shallow.c	FUNCTION_20	WHILE_1	FOR_2	CALL_17
0x1a85	          0x488b00	                    mov rax, qword [rax]	       519	shallow.c	FUNCTION_20	WHILE_1	FOR_2	CALL_17
0x1a88	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       519	shallow.c	FUNCTION_20	WHILE_1	FOR_2	CALL_17
0x1a8c	          0x4889d6	                            mov rsi, rdx	       519	shallow.c	FUNCTION_20	WHILE_1	FOR_2	CALL_17
0x1a8f	          0x4889c7	                            mov rdi, rax	       519	shallow.c	FUNCTION_20	WHILE_1	FOR_2	CALL_17
0x1a92	      0xe800000000	                          call 0x4001ad7	       519	shallow.c	FUNCTION_20	WHILE_1	FOR_2	CALL_17
0x1a97	            0xeb01	                           jmp 0x4001ada	       519	shallow.c	FUNCTION_20	WHILE_1	FOR_2	CALL_17
0x1a99	              0x90	                                     nop	       518	shallow.c	FUNCTION_20	WHILE_1	FOR_2	IF_7
0x1a9a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x1a9e	        0x488b4008	                mov rax, qword [rax + 8]	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x1aa2	        0x488945b8	             mov qword [rbp - 0x48], rax	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x1aa6	      0x48837db800	               cmp qword [rbp - 0x48], 0	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x1aab	            0x75bc	                           jne 0x4001aa9	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x1aad	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       486	shallow.c	FUNCTION_20	WHILE_1
0x1ab1	          0x4885c0	                           test rax, rax	       486	shallow.c	FUNCTION_20	WHILE_1
0x1ab4	     0xf850dfeffff	                           jne 0x4001907	       486	shallow.c	FUNCTION_20	WHILE_1
0x1aba	      0xe800000000	                          call 0x4001aff	       523	shallow.c	FUNCTION_20	CALL_18
0x1abf	          0x8945ac	             mov dword [rbp - 0x54], eax	       523	shallow.c	FUNCTION_20	CALL_18
0x1ac2	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	       524	shallow.c	FUNCTION_20	FOR_3
0x1ac9	            0xeb57	                           jmp 0x4001b62	       524	shallow.c	FUNCTION_20	FOR_3
0x1acb	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       525	shallow.c	FUNCTION_20	FOR_3	CALL_19
0x1ace	            0x89c7	                            mov edi, eax	       525	shallow.c	FUNCTION_20	FOR_3	CALL_19
0x1ad0	      0xe800000000	                          call 0x4001b15	       525	shallow.c	FUNCTION_20	FOR_3	CALL_19
0x1ad5	        0x488945f0	             mov qword [rbp - 0x10], rax	       525	shallow.c	FUNCTION_20	FOR_3	CALL_19
0x1ad9	      0x48837df000	               cmp qword [rbp - 0x10], 0	       526	shallow.c	FUNCTION_20	FOR_3	IF_8
0x1ade	            0x743e	                            je 0x4001b5e	       526	shallow.c	FUNCTION_20	FOR_3	IF_8
0x1ae0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       526	shallow.c	FUNCTION_20	FOR_3	IF_8
0x1ae4	           0xfb600	                   movzx eax, byte [rax]	       526	shallow.c	FUNCTION_20	FOR_3	IF_8
0x1ae7	          0x83e00e	                            and eax, 0xe	       526	shallow.c	FUNCTION_20	FOR_3	IF_8
0x1aea	            0x3c02	                               cmp al, 2	       526	shallow.c	FUNCTION_20	FOR_3	IF_8
0x1aec	            0x7530	                           jne 0x4001b5e	       526	shallow.c	FUNCTION_20	FOR_3	IF_8
0x1aee	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       527	shallow.c	FUNCTION_20	FOR_3	IF_8
0x1af2	            0x8b00	                    mov eax, dword [rax]	       527	shallow.c	FUNCTION_20	FOR_3	IF_8
0x1af4	          0xc1e804	                              shr eax, 4	       527	shallow.c	FUNCTION_20	FOR_3	IF_8
0x1af7	      0x25ffffff07	                      and eax, 0x7ffffff	       527	shallow.c	FUNCTION_20	FOR_3	IF_8
0x1afc	      0x25feffff07	                      and eax, 0x7fffffe	       527	shallow.c	FUNCTION_20	FOR_3	IF_8
0x1b01	            0x89c2	                            mov edx, eax	       527	shallow.c	FUNCTION_20	FOR_3	IF_8
0x1b03	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       527	shallow.c	FUNCTION_20	FOR_3	IF_8
0x1b07	    0x81e2ffffff07	                      and edx, 0x7ffffff	       527	shallow.c	FUNCTION_20	FOR_3	IF_8
0x1b0d	            0x89d1	                            mov ecx, edx	       527	shallow.c	FUNCTION_20	FOR_3	IF_8
0x1b0f	          0xc1e104	                              shl ecx, 4	       527	shallow.c	FUNCTION_20	FOR_3	IF_8
0x1b12	            0x8b10	                    mov edx, dword [rax]	       527	shallow.c	FUNCTION_20	FOR_3	IF_8
0x1b14	    0x81e20f000080	                     and edx, 0x8000000f	       527	shallow.c	FUNCTION_20	FOR_3	IF_8
0x1b1a	             0x9ca	                             or edx, ecx	       527	shallow.c	FUNCTION_20	FOR_3	IF_8
0x1b1c	            0x8910	                    mov dword [rax], edx	       527	shallow.c	FUNCTION_20	FOR_3	IF_8
0x1b1e	        0x8345a401	               add dword [rbp - 0x5c], 1	       524	shallow.c	FUNCTION_20	FOR_3
0x1b22	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       524	shallow.c	FUNCTION_20	FOR_3
0x1b25	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	       524	shallow.c	FUNCTION_20	FOR_3
0x1b28	            0x72a1	                            jb 0x4001b0b	       524	shallow.c	FUNCTION_20	FOR_3
0x1b2a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       530	shallow.c	FUNCTION_20	CALL_20
0x1b2e	          0x4889c7	                            mov rdi, rax	       530	shallow.c	FUNCTION_20	CALL_20
0x1b31	      0xe800000000	                          call 0x4001b76	       530	shallow.c	FUNCTION_20	CALL_20
0x1b36	            0xeb01	                           jmp 0x4001b79	       530	shallow.c	FUNCTION_20	CALL_20
0x1b38	              0x90	                                     nop	       479	shallow.c	FUNCTION_20	IF_1
0x1b39	        0x488b45f8	                mov rax, qword [rbp - 8]	       531	shallow.c	FUNCTION_20
0x1b3d	    0x644833042528	                xor rax, qword fs:[0x28]	       531	shallow.c	FUNCTION_20
0x1b46	            0x7405	                            je 0x4001b8d	       531	shallow.c	FUNCTION_20
0x1b48	      0xe800000000	                          call 0x4001b8d	       531	shallow.c	FUNCTION_20
0x1b4d	              0xc9	                                   leave	       531	shallow.c	FUNCTION_20
0x1b4e	              0xc3	                                     ret	       531	shallow.c	FUNCTION_20
mark_uninteresting	FOR,0:CALL,2:SWITCH,0:DO,0:WHILE,0:ELSE,0:functions,0:IF,1	36
0x1b4f	              0x55	                                push rbp	       535	shallow.c	FUNCTION_21
0x1b50	          0x4889e5	                            mov rbp, rsp	       535	shallow.c	FUNCTION_21
0x1b53	        0x4883ec30	                           sub rsp, 0x30	       535	shallow.c	FUNCTION_21
0x1b57	        0x48897de8	             mov qword [rbp - 0x18], rdi	       535	shallow.c	FUNCTION_21
0x1b5b	        0x488975e0	             mov qword [rbp - 0x20], rsi	       535	shallow.c	FUNCTION_21
0x1b5f	          0x8955dc	             mov dword [rbp - 0x24], edx	       535	shallow.c	FUNCTION_21
0x1b62	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       535	shallow.c	FUNCTION_21
0x1b66	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       536	shallow.c	FUNCTION_21	CALL_1
0x1b6a	      0xbe01000000	                              mov esi, 1	       536	shallow.c	FUNCTION_21	CALL_1
0x1b6f	          0x4889c7	                            mov rdi, rax	       536	shallow.c	FUNCTION_21	CALL_1
0x1b72	      0xe800000000	                          call 0x4001bb7	       536	shallow.c	FUNCTION_21	CALL_1
0x1b77	        0x488945f8	                mov qword [rbp - 8], rax	       536	shallow.c	FUNCTION_21	CALL_1
0x1b7b	      0x48837df800	                  cmp qword [rbp - 8], 0	       537	shallow.c	FUNCTION_21	IF_1
0x1b80	            0x7507	                           jne 0x4001bc9	       537	shallow.c	FUNCTION_21	IF_1
0x1b82	      0xb800000000	                              mov eax, 0	       538	shallow.c	FUNCTION_21	IF_1
0x1b87	            0xeb3f	                           jmp 0x4001c08	       538	shallow.c	FUNCTION_21	IF_1
0x1b89	        0x488b45f8	                mov rax, qword [rbp - 8]	       539	shallow.c	FUNCTION_21
0x1b8d	            0x8b00	                    mov eax, dword [rax]	       539	shallow.c	FUNCTION_21
0x1b8f	          0xc1e804	                              shr eax, 4	       539	shallow.c	FUNCTION_21
0x1b92	      0x25ffffff07	                      and eax, 0x7ffffff	       539	shallow.c	FUNCTION_21
0x1b97	          0x83c802	                               or eax, 2	       539	shallow.c	FUNCTION_21
0x1b9a	            0x89c2	                            mov edx, eax	       539	shallow.c	FUNCTION_21
0x1b9c	        0x488b45f8	                mov rax, qword [rbp - 8]	       539	shallow.c	FUNCTION_21
0x1ba0	    0x81e2ffffff07	                      and edx, 0x7ffffff	       539	shallow.c	FUNCTION_21
0x1ba6	            0x89d1	                            mov ecx, edx	       539	shallow.c	FUNCTION_21
0x1ba8	          0xc1e104	                              shl ecx, 4	       539	shallow.c	FUNCTION_21
0x1bab	            0x8b10	                    mov edx, dword [rax]	       539	shallow.c	FUNCTION_21
0x1bad	    0x81e20f000080	                     and edx, 0x8000000f	       539	shallow.c	FUNCTION_21
0x1bb3	             0x9ca	                             or edx, ecx	       539	shallow.c	FUNCTION_21
0x1bb5	            0x8910	                    mov dword [rax], edx	       539	shallow.c	FUNCTION_21
0x1bb7	        0x488b45f8	                mov rax, qword [rbp - 8]	       540	shallow.c	FUNCTION_21	CALL_2
0x1bbb	          0x4889c7	                            mov rdi, rax	       540	shallow.c	FUNCTION_21	CALL_2
0x1bbe	      0xe800000000	                          call 0x4001c03	       540	shallow.c	FUNCTION_21	CALL_2
0x1bc3	      0xb800000000	                              mov eax, 0	       541	shallow.c	FUNCTION_21
0x1bc8	              0xc9	                                   leave	       542	shallow.c	FUNCTION_21
0x1bc9	              0xc3	                                     ret	       542	shallow.c	FUNCTION_21
setup_alternate_shallow	FOR,0:CALL,9:SWITCH,0:DO,0:WHILE,0:ELSE,1:functions,0:IF,2	62
0xea4	              0x55	                                push rbp	       314	shallow.c	FUNCTION_12
0xea5	          0x4889e5	                            mov rbp, rsp	       314	shallow.c	FUNCTION_12
0xea8	        0x4883ec50	                           sub rsp, 0x50	       314	shallow.c	FUNCTION_12
0xeac	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       314	shallow.c	FUNCTION_12
0xeb0	        0x488975c0	             mov qword [rbp - 0x40], rsi	       314	shallow.c	FUNCTION_12
0xeb4	        0x488955b8	             mov qword [rbp - 0x48], rdx	       314	shallow.c	FUNCTION_12
0xeb8	    0x64488b042528	                mov rax, qword fs:[0x28]	       314	shallow.c	FUNCTION_12
0xec1	        0x488945f8	                mov qword [rbp - 8], rax	       314	shallow.c	FUNCTION_12
0xec5	            0x31c0	                            xor eax, eax	       314	shallow.c	FUNCTION_12
0xec7	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       315	shallow.c	FUNCTION_12
0xecf	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       315	shallow.c	FUNCTION_12
0xed7	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       315	shallow.c	FUNCTION_12
0xedf	      0xe800000000	                          call 0x4000f24	       318	shallow.c	FUNCTION_12	CALL_2
0xee4	          0x4889c1	                            mov rcx, rax	       318	shallow.c	FUNCTION_12	CALL_2
0xee7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       318	shallow.c	FUNCTION_12	CALL_2
0xeeb	      0xba01000000	                              mov edx, 1	       318	shallow.c	FUNCTION_12	CALL_2
0xef0	          0x4889ce	                            mov rsi, rcx	       318	shallow.c	FUNCTION_12	CALL_2
0xef3	          0x4889c7	                            mov rdi, rax	       318	shallow.c	FUNCTION_12	CALL_2
0xef6	      0xe8f8f2ffff	      call sym.hold_lock_file_for_update	       318	shallow.c	FUNCTION_12	CALL_2
0xefb	          0x8945dc	             mov dword [rbp - 0x24], eax	       318	shallow.c	FUNCTION_12	CALL_2
0xefe	      0xe846fcffff	  call sym.check_shallow_file_for_update	       320	shallow.c	FUNCTION_12	CALL_3
0xf03	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       321	shallow.c	FUNCTION_12	IF_1	CALL_4
0xf07	        0x488d45e0	                   lea rax, [rbp - 0x20]	       321	shallow.c	FUNCTION_12	IF_1	CALL_4
0xf0b	      0xbe00000000	                              mov esi, 0	       321	shallow.c	FUNCTION_12	IF_1	CALL_4
0xf10	          0x4889c7	                            mov rdi, rax	       321	shallow.c	FUNCTION_12	IF_1	CALL_4
0xf13	      0xe800000000	                          call 0x4000f58	       321	shallow.c	FUNCTION_12	IF_1	CALL_4
0xf18	            0x85c0	                           test eax, eax	       321	shallow.c	FUNCTION_12	IF_1	CALL_4
0xf1a	            0x7450	                            je 0x4000fac	       321	shallow.c	FUNCTION_12	IF_1	CALL_4
0xf1c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       322	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_5
0xf20	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       322	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_5
0xf24	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       322	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_5
0xf27	          0x4889ce	                            mov rsi, rcx	       322	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_5
0xf2a	            0x89c7	                            mov edi, eax	       322	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_5
0xf2c	      0xe800000000	                          call 0x4000f71	       322	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_5
0xf31	          0x4885c0	                           test rax, rax	       322	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_5
0xf34	            0x791e	                           jns 0x4000f94	       322	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_5
0xf36	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       323	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_6
0xf3a	          0x4889c7	                            mov rdi, rax	       323	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_6
0xf3d	      0xe8def2ffff	             call sym.get_lock_file_path	       323	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_6
0xf42	          0x4889c6	                            mov rsi, rax	       323	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_6
0xf45	      0xbf00000000	                              mov edi, 0	       323	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_6
0xf4a	      0xb800000000	                              mov eax, 0	       323	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_6
0xf4f	      0xe800000000	                          call 0x4000f94	       323	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_6
0xf54	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       325	shallow.c	FUNCTION_12	IF_1	CALL_8
0xf58	          0x4889c7	                            mov rdi, rax	       325	shallow.c	FUNCTION_12	IF_1	CALL_8
0xf5b	      0xe8c0f2ffff	             call sym.get_lock_file_path	       325	shallow.c	FUNCTION_12	IF_1	CALL_8
0xf60	          0x4889c2	                            mov rdx, rax	       325	shallow.c	FUNCTION_12	IF_1	CALL_8
0xf63	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       325	shallow.c	FUNCTION_12	IF_1	CALL_8
0xf67	          0x488910	                    mov qword [rax], rdx	       325	shallow.c	FUNCTION_12	IF_1	CALL_8
0xf6a	            0xeb0b	                           jmp 0x4000fb7	       325	shallow.c	FUNCTION_12	IF_1	CALL_8
0xf6c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       331	shallow.c	FUNCTION_12	ELSE_1
0xf70	    0x48c700000000	                      mov qword [rax], 0	       331	shallow.c	FUNCTION_12	ELSE_1
0xf77	        0x488d45e0	                   lea rax, [rbp - 0x20]	       332	shallow.c	FUNCTION_12	CALL_9
0xf7b	          0x4889c7	                            mov rdi, rax	       332	shallow.c	FUNCTION_12	CALL_9
0xf7e	      0xe800000000	                          call 0x4000fc3	       332	shallow.c	FUNCTION_12	CALL_9
0xf83	              0x90	                                     nop	       333	shallow.c	FUNCTION_12
0xf84	        0x488b45f8	                mov rax, qword [rbp - 8]	       333	shallow.c	FUNCTION_12
0xf88	    0x644833042528	                xor rax, qword fs:[0x28]	       333	shallow.c	FUNCTION_12
0xf91	            0x7405	                            je 0x4000fd8	       333	shallow.c	FUNCTION_12
0xf93	      0xe800000000	                          call 0x4000fd8	       333	shallow.c	FUNCTION_12
0xf98	              0xc9	                                   leave	       333	shallow.c	FUNCTION_12
0xf99	              0xc3	                                     ret	       333	shallow.c	FUNCTION_12
setup_temporary_shallow	FOR,0:CALL,9:SWITCH,0:DO,0:WHILE,0:ELSE,0:functions,0:IF,2	58
0xdb8	              0x55	                                push rbp	       290	shallow.c	FUNCTION_11
0xdb9	          0x4889e5	                            mov rbp, rsp	       290	shallow.c	FUNCTION_11
0xdbc	        0x4883ec40	                           sub rsp, 0x40	       290	shallow.c	FUNCTION_11
0xdc0	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       290	shallow.c	FUNCTION_11
0xdc4	    0x64488b042528	                mov rax, qword fs:[0x28]	       290	shallow.c	FUNCTION_11
0xdcd	        0x488945f8	                mov qword [rbp - 8], rax	       290	shallow.c	FUNCTION_11
0xdd1	            0x31c0	                            xor eax, eax	       290	shallow.c	FUNCTION_11
0xdd3	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       292	shallow.c	FUNCTION_11
0xddb	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       292	shallow.c	FUNCTION_11
0xde3	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       292	shallow.c	FUNCTION_11
0xdeb	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       294	shallow.c	FUNCTION_11	IF_1	CALL_1
0xdef	        0x488d45e0	                   lea rax, [rbp - 0x20]	       294	shallow.c	FUNCTION_11	IF_1	CALL_1
0xdf3	      0xbe00000000	                              mov esi, 0	       294	shallow.c	FUNCTION_11	IF_1	CALL_1
0xdf8	          0x4889c7	                            mov rdi, rax	       294	shallow.c	FUNCTION_11	IF_1	CALL_1
0xdfb	      0xe800000000	                          call 0x4000e40	       294	shallow.c	FUNCTION_11	IF_1	CALL_1
0xe00	            0x85c0	                           test eax, eax	       294	shallow.c	FUNCTION_11	IF_1	CALL_1
0xe02	     0xf8481000000	                            je 0x4000ec9	       294	shallow.c	FUNCTION_11	IF_1	CALL_1
0xe08	      0xbf00000000	                              mov edi, 0	       295	shallow.c	FUNCTION_11	IF_1	CALL_3
0xe0d	      0xb800000000	                              mov eax, 0	       295	shallow.c	FUNCTION_11	IF_1	CALL_3
0xe12	      0xe800000000	                          call 0x4000e57	       295	shallow.c	FUNCTION_11	IF_1	CALL_3
0xe17	          0x4889c7	                            mov rdi, rax	       295	shallow.c	FUNCTION_11	IF_1	CALL_3
0xe1a	      0xe8b5f3ffff	                  call sym.xmks_tempfile	       295	shallow.c	FUNCTION_11	IF_1	CALL_3
0xe1f	        0x488945d8	             mov qword [rbp - 0x28], rax	       295	shallow.c	FUNCTION_11	IF_1	CALL_3
0xe23	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0xe27	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0xe2b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0xe2f	          0x8b4014	            mov eax, dword [rax + 0x14] 	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0xe32	          0x4889ce	                            mov rsi, rcx	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0xe35	            0x89c7	                            mov edi, eax	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0xe37	      0xe800000000	                          call 0x4000e7c	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0xe3c	          0x4885c0	                           test rax, rax	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0xe3f	            0x7810	                            js 0x4000e91	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0xe41	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       298	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_5
0xe45	          0x4889c7	                            mov rdi, rax	       298	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_5
0xe48	      0xe800000000	                          call 0x4000e8d	       298	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_5
0xe4d	            0x85c0	                           test eax, eax	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0xe4f	            0x791e	                           jns 0x4000eaf	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0xe51	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       299	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_6
0xe55	          0x4889c7	                            mov rdi, rax	       299	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_6
0xe58	      0xe800000000	                          call 0x4000e9d	       299	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_6
0xe5d	          0x4889c6	                            mov rsi, rax	       299	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_6
0xe60	      0xbf00000000	                              mov edi, 0	       299	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_6
0xe65	      0xb800000000	                              mov eax, 0	       299	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_6
0xe6a	      0xe800000000	                          call 0x4000eaf	       299	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_6
0xe6f	        0x488d45e0	                   lea rax, [rbp - 0x20]	       301	shallow.c	FUNCTION_11	IF_1	CALL_8
0xe73	          0x4889c7	                            mov rdi, rax	       301	shallow.c	FUNCTION_11	IF_1	CALL_8
0xe76	      0xe800000000	                          call 0x4000ebb	       301	shallow.c	FUNCTION_11	IF_1	CALL_8
0xe7b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       302	shallow.c	FUNCTION_11	IF_1	CALL_9
0xe7f	          0x4889c7	                            mov rdi, rax	       302	shallow.c	FUNCTION_11	IF_1	CALL_9
0xe82	      0xe800000000	                          call 0x4000ec7	       302	shallow.c	FUNCTION_11	IF_1	CALL_9
0xe87	            0xeb05	                           jmp 0x4000ece	       302	shallow.c	FUNCTION_11	IF_1	CALL_9
0xe89	      0xb800000000	                              mov eax, 0	       308	shallow.c	FUNCTION_11
0xe8e	        0x488b4df8	                mov rcx, qword [rbp - 8]	       309	shallow.c	FUNCTION_11
0xe92	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       309	shallow.c	FUNCTION_11
0xe9b	            0x7405	                            je 0x4000ee2	       309	shallow.c	FUNCTION_11
0xe9d	      0xe800000000	                          call 0x4000ee2	       309	shallow.c	FUNCTION_11
0xea2	              0xc9	                                   leave	       309	shallow.c	FUNCTION_11
0xea3	              0xc3	                                     ret	       309	shallow.c	FUNCTION_11
get_shallow_commits	FOR,1:CALL,9:SWITCH,0:DO,0:WHILE,1:ELSE,3:functions,0:IF,8	210
0x4b1	              0x55	                                push rbp	        79	shallow.c	FUNCTION_4
0x4b2	          0x4889e5	                            mov rbp, rsp	        79	shallow.c	FUNCTION_4
0x4b5	        0x4883c480	             add rsp, 0xffffffffffffff80	        79	shallow.c	FUNCTION_4
0x4b9	        0x48897d98	             mov qword [rbp - 0x68], rdi	        79	shallow.c	FUNCTION_4
0x4bd	          0x897594	             mov dword [rbp - 0x6c], esi	        79	shallow.c	FUNCTION_4
0x4c0	          0x895590	             mov dword [rbp - 0x70], edx	        79	shallow.c	FUNCTION_4
0x4c3	          0x894d8c	             mov dword [rbp - 0x74], ecx	        79	shallow.c	FUNCTION_4
0x4c6	    0x64488b042528	                mov rax, qword fs:[0x28]	        79	shallow.c	FUNCTION_4
0x4cf	        0x488945f8	                mov qword [rbp - 8], rax	        79	shallow.c	FUNCTION_4
0x4d3	            0x31c0	                            xor eax, eax	        79	shallow.c	FUNCTION_4
0x4d5	    0xc745a8000000	               mov dword [rbp - 0x58], 0	        80	shallow.c	FUNCTION_4
0x4dc	    0xc745ac000000	               mov dword [rbp - 0x54], 0	        80	shallow.c	FUNCTION_4
0x4e3	    0x48c745b00000	               mov qword [rbp - 0x50], 0	        81	shallow.c	FUNCTION_4
0x4eb	    0xc745e0000000	               mov dword [rbp - 0x20], 0	        82	shallow.c	FUNCTION_4
0x4f2	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	        82	shallow.c	FUNCTION_4
0x4f9	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        82	shallow.c	FUNCTION_4
0x501	    0x48c745b80000	               mov qword [rbp - 0x48], 0	        83	shallow.c	FUNCTION_4
0x509	      0xe981020000	                           jmp 0x40007cf	        86	shallow.c	FUNCTION_4	WHILE_1
0x50e	      0x48837db800	               cmp qword [rbp - 0x48], 0	        88	shallow.c	FUNCTION_4	WHILE_1	IF_1
0x513	     0xf85bc000000	                           jne 0x4000615	        88	shallow.c	FUNCTION_4	WHILE_1	IF_1
0x519	        0x488b4598	             mov rax, qword [rbp - 0x68]	        89	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x51d	            0x8b10	                    mov edx, dword [rax]	        89	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x51f	          0x8b45a8	             mov eax, dword [rbp - 0x58]	        89	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x522	            0x39c2	                            cmp edx, eax	        89	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x524	     0xf868e000000	                           jbe 0x40005f8	        89	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x52a	        0x488b4598	             mov rax, qword [rbp - 0x68]	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x52e	        0x488b4808	                mov rcx, qword [rax + 8]	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x532	          0x8b45a8	             mov eax, dword [rbp - 0x58]	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x535	          0x8d5001	                      lea edx, [rax + 1]	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x538	          0x8955a8	             mov dword [rbp - 0x58], edx	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x53b	            0x4898	                                    cdqe	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x53d	        0x48c1e005	                              shl rax, 5	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x541	          0x4801c8	                            add rax, rcx	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x544	          0x488b00	                    mov rax, qword [rax]	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x547	      0xba00000000	                              mov edx, 0	        90	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x54c	      0xbe00000000	                              mov esi, 0	        90	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x551	          0x4889c7	                            mov rdi, rax	        90	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x554	      0xe800000000	                          call 0x4000599	        90	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x559	        0x488945b8	             mov qword [rbp - 0x48], rax	        90	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x55d	      0x48837db800	               cmp qword [rbp - 0x48], 0	        92	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x562	            0x740e	                            je 0x40005b2	        92	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x564	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        92	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x568	           0xfb600	                   movzx eax, byte [rax]	        92	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x56b	          0x83e00e	                            and eax, 0xe	        92	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x56e	            0x3c02	                               cmp al, 2	        92	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x570	            0x740d	                            je 0x40005bf	        92	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x572	    0x48c745b80000	               mov qword [rbp - 0x48], 0	        93	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x57a	      0xe910020000	                           jmp 0x40007cf	        94	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x57f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        96	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_4
0x583	        0x488b4018	            mov rax, qword [rax + 0x18] 	        96	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_4
0x587	          0x4885c0	                           test rax, rax	        96	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_4
0x58a	            0x7515	                           jne 0x40005e1	        96	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_4
0x58c	      0xbf04000000	                              mov edi, 4	        97	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_2
0x591	      0xe800000000	                          call 0x40005d6	        97	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_2
0x596	          0x4889c2	                            mov rdx, rax	        97	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_2
0x599	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        97	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_2
0x59d	        0x48895018	             mov qword [rax + 0x18], rdx	        97	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_2
0x5a1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        98	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x5a5	        0x488b4018	            mov rax, qword [rax + 0x18] 	        98	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x5a9	    0xc70000000000	                      mov dword [rax], 0	        98	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x5af	    0xc745ac000000	               mov dword [rbp - 0x54], 0	        99	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x5b6	            0xeb1d	                           jmp 0x4000615	        99	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x5b8	        0x488d45e0	                   lea rax, [rbp - 0x20]	       101	shallow.c	FUNCTION_4	WHILE_1	IF_1	ELSE_1
0x5bc	          0x4889c7	                            mov rdi, rax	       101	shallow.c	FUNCTION_4	WHILE_1	IF_1	ELSE_1
0x5bf	      0xe800000000	                          call 0x4000604	       101	shallow.c	FUNCTION_4	WHILE_1	IF_1	ELSE_1
0x5c4	        0x488945b8	             mov qword [rbp - 0x48], rax	       101	shallow.c	FUNCTION_4	WHILE_1	IF_1	ELSE_1
0x5c8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       103	shallow.c	FUNCTION_4	WHILE_1	IF_1	ELSE_1
0x5cc	        0x488b4018	            mov rax, qword [rax + 0x18] 	       103	shallow.c	FUNCTION_4	WHILE_1	IF_1	ELSE_1
0x5d0	            0x8b00	                    mov eax, dword [rax]	       103	shallow.c	FUNCTION_4	WHILE_1	IF_1	ELSE_1
0x5d2	          0x8945ac	             mov dword [rbp - 0x54], eax	       103	shallow.c	FUNCTION_4	WHILE_1	IF_1	ELSE_1
0x5d5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       106	shallow.c	FUNCTION_4	WHILE_1	CALL_4
0x5d9	          0x4889c7	                            mov rdi, rax	       106	shallow.c	FUNCTION_4	WHILE_1	CALL_4
0x5dc	      0xe800000000	                          call 0x4000621	       106	shallow.c	FUNCTION_4	WHILE_1	CALL_4
0x5e1	        0x8345ac01	               add dword [rbp - 0x54], 1	       107	shallow.c	FUNCTION_4	WHILE_1
0x5e5	    0x817d94ffffff	     cmp dword [rbp - 0x6c], 0x7fffffff 	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x5ec	            0x7408	                            je 0x4000636	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x5ee	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x5f1	          0x3b4594	             cmp eax, dword [rbp - 0x6c]	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x5f4	            0x7d40	                           jge 0x4000676	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x5f6	      0xe800000000	                          call 0x400063b	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x5fb	            0x85c0	                           test eax, eax	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x5fd	     0xf8486000000	                            je 0x40006c9	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x603	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x607	        0x488b4030	            mov rax, qword [rax + 0x30] 	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x60b	          0x4885c0	                           test rax, rax	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x60e	            0x7579	                           jne 0x40006c9	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x610	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       110	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_6
0x614	        0x4883c004	                              add rax, 4	       110	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_6
0x618	          0x4889c7	                            mov rdi, rax	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x61b	      0xe800000000	                          call 0x4000660	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x620	        0x488945c8	             mov qword [rbp - 0x38], rax	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x624	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x629	            0x745e	                            je 0x40006c9	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x62b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       111	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x62f	          0x8b4014	            mov eax, dword [rax + 0x14] 	       111	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x632	            0x85c0	                           test eax, eax	       110	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_6
0x634	            0x7953	                           jns 0x40006c9	       110	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_6
0x636	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       112	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_7
0x63a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       112	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_7
0x63e	          0x4889d6	                            mov rsi, rdx	       112	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_7
0x641	          0x4889c7	                            mov rdi, rax	       112	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_7
0x644	      0xe800000000	                          call 0x4000689	       112	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_7
0x649	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x64d	            0x8b00	                    mov eax, dword [rax]	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x64f	          0xc1e804	                              shr eax, 4	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x652	      0x25ffffff07	                      and eax, 0x7ffffff	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x657	           0xb4590	              or eax, dword [rbp - 0x70]	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x65a	      0x25ffffff07	                      and eax, 0x7ffffff	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x65f	            0x89c2	                            mov edx, eax	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x661	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x665	    0x81e2ffffff07	                      and edx, 0x7ffffff	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x66b	            0x89d1	                            mov ecx, edx	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x66d	          0xc1e104	                              shl ecx, 4	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x670	            0x8b10	                    mov edx, dword [rax]	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x672	    0x81e20f000080	                     and edx, 0x8000000f	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x678	             0x9ca	                             or edx, ecx	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x67a	            0x8910	                    mov dword [rax], edx	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x67c	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       114	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x684	      0xe906010000	                           jmp 0x40007cf	       115	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x689	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       117	shallow.c	FUNCTION_4	WHILE_1
0x68d	            0x8b00	                    mov eax, dword [rax]	       117	shallow.c	FUNCTION_4	WHILE_1
0x68f	          0xc1e804	                              shr eax, 4	       117	shallow.c	FUNCTION_4	WHILE_1
0x692	      0x25ffffff07	                      and eax, 0x7ffffff	       117	shallow.c	FUNCTION_4	WHILE_1
0x697	           0xb458c	              or eax, dword [rbp - 0x74]	       117	shallow.c	FUNCTION_4	WHILE_1
0x69a	      0x25ffffff07	                      and eax, 0x7ffffff	       117	shallow.c	FUNCTION_4	WHILE_1
0x69f	            0x89c2	                            mov edx, eax	       117	shallow.c	FUNCTION_4	WHILE_1
0x6a1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       117	shallow.c	FUNCTION_4	WHILE_1
0x6a5	    0x81e2ffffff07	                      and edx, 0x7ffffff	       117	shallow.c	FUNCTION_4	WHILE_1
0x6ab	            0x89d1	                            mov ecx, edx	       117	shallow.c	FUNCTION_4	WHILE_1
0x6ad	          0xc1e104	                              shl ecx, 4	       117	shallow.c	FUNCTION_4	WHILE_1
0x6b0	            0x8b10	                    mov edx, dword [rax]	       117	shallow.c	FUNCTION_4	WHILE_1
0x6b2	    0x81e20f000080	                     and edx, 0x8000000f	       117	shallow.c	FUNCTION_4	WHILE_1
0x6b8	             0x9ca	                             or edx, ecx	       117	shallow.c	FUNCTION_4	WHILE_1
0x6ba	            0x8910	                    mov dword [rax], edx	       117	shallow.c	FUNCTION_4	WHILE_1
0x6bc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x6c0	        0x488b4030	            mov rax, qword [rax + 0x30] 	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x6c4	        0x488945c0	             mov qword [rbp - 0x40], rax	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x6c8	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x6d0	      0xe9af000000	                           jmp 0x40007c4	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x6d5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       119	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x6d9	          0x488b00	                    mov rax, qword [rax]	       119	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x6dc	        0x488b4018	            mov rax, qword [rax + 0x18] 	       119	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x6e0	          0x4885c0	                           test rax, rax	       119	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x6e3	            0x7528	                           jne 0x400074d	       119	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x6e5	      0xbf04000000	                              mov edi, 4	       120	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6	CALL_8
0x6ea	      0xe800000000	                          call 0x400072f	       120	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6	CALL_8
0x6ef	        0x488945d8	             mov qword [rbp - 0x28], rax	       120	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6	CALL_8
0x6f3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       121	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x6f7	          0x488b00	                    mov rax, qword [rax]	       121	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x6fa	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       121	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x6fe	        0x48895018	             mov qword [rax + 0x18], rdx	       121	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x702	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       122	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x706	          0x8b55ac	             mov edx, dword [rbp - 0x54]	       122	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x709	            0x8910	                    mov dword [rax], edx	       122	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x70b	            0xeb23	                           jmp 0x4000770	       122	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x70d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       124	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_2
0x711	          0x488b00	                    mov rax, qword [rax]	       124	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_2
0x714	        0x488b4018	            mov rax, qword [rax + 0x18] 	       124	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_2
0x718	        0x488945d0	             mov qword [rbp - 0x30], rax	       124	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_2
0x71c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       125	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_2	IF_7
0x720	            0x8b00	                    mov eax, dword [rax]	       125	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_2	IF_7
0x722	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	       125	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_2	IF_7
0x725	            0x7e50	                           jle 0x40007b7	       125	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_2	IF_7
0x727	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       127	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_2
0x72b	          0x8b55ac	             mov edx, dword [rbp - 0x54]	       127	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_2
0x72e	            0x8910	                    mov dword [rax], edx	       127	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_2
0x730	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       129	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8
0x734	        0x488b4008	                mov rax, qword [rax + 8]	       129	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8
0x738	          0x4885c0	                           test rax, rax	       129	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8
0x73b	            0x7420	                            je 0x400079d	       129	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8
0x73d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       130	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8	CALL_9
0x741	          0x488b00	                    mov rax, qword [rax]	       130	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8	CALL_9
0x744	          0x4889c1	                            mov rcx, rax	       130	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8	CALL_9
0x747	        0x488d45e0	                   lea rax, [rbp - 0x20]	       130	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8	CALL_9
0x74b	          0x4889c2	                            mov rdx, rax	       130	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8	CALL_9
0x74e	      0xbe00000000	                              mov esi, 0	       130	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8	CALL_9
0x753	          0x4889cf	                            mov rdi, rcx	       130	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8	CALL_9
0x756	      0xe800000000	                          call 0x400079b	       130	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8	CALL_9
0x75b	            0xeb1b	                           jmp 0x40007b8	       130	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8	CALL_9
0x75d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       133	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_3
0x761	          0x488b00	                    mov rax, qword [rax]	       133	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_3
0x764	        0x488945b8	             mov qword [rbp - 0x48], rax	       133	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_3
0x768	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       134	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_3
0x76c	        0x488b4018	            mov rax, qword [rax + 0x18] 	       134	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_3
0x770	            0x8b00	                    mov eax, dword [rax]	       134	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_3
0x772	          0x8945ac	             mov dword [rbp - 0x54], eax	       134	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_3
0x775	            0xeb01	                           jmp 0x40007b8	       134	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_3
0x777	              0x90	                                     nop	       126	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_2	IF_7
0x778	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x77c	        0x488b4008	                mov rax, qword [rax + 8]	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x780	        0x488945c0	             mov qword [rbp - 0x40], rax	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x784	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x789	     0xf8546ffffff	                           jne 0x4000715	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x78f	      0x48837db800	               cmp qword [rbp - 0x48], 0	        86	shallow.c	FUNCTION_4	WHILE_1
0x794	     0xf8574fdffff	                           jne 0x400054e	        86	shallow.c	FUNCTION_4	WHILE_1
0x79a	        0x488b4598	             mov rax, qword [rbp - 0x68]	        86	shallow.c	FUNCTION_4	WHILE_1
0x79e	            0x8b10	                    mov edx, dword [rax]	        86	shallow.c	FUNCTION_4	WHILE_1
0x7a0	          0x8b45a8	             mov eax, dword [rbp - 0x58]	        86	shallow.c	FUNCTION_4	WHILE_1
0x7a3	            0x39c2	                            cmp edx, eax	        86	shallow.c	FUNCTION_4	WHILE_1
0x7a5	     0xf8763fdffff	                            ja 0x400054e	        86	shallow.c	FUNCTION_4	WHILE_1
0x7ab	          0x8b45e0	             mov eax, dword [rbp - 0x20]	        86	shallow.c	FUNCTION_4	WHILE_1
0x7ae	            0x85c0	                           test eax, eax	        86	shallow.c	FUNCTION_4	WHILE_1
0x7b0	     0xf8558fdffff	                           jne 0x400054e	        86	shallow.c	FUNCTION_4	WHILE_1
0x7b6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       139	shallow.c	FUNCTION_4
0x7ba	        0x488b75f8	                mov rsi, qword [rbp - 8]	       140	shallow.c	FUNCTION_4
0x7be	    0x644833342528	                xor rsi, qword fs:[0x28]	       140	shallow.c	FUNCTION_4
0x7c7	            0x7405	                            je 0x400080e	       140	shallow.c	FUNCTION_4
0x7c9	      0xe800000000	                          call 0x400080e	       140	shallow.c	FUNCTION_4
0x7ce	              0xc9	                                   leave	       140	shallow.c	FUNCTION_4
0x7cf	              0xc3	                                     ret	       140	shallow.c	FUNCTION_4
advertise_shallow_grafts	FOR,0:CALL,2:SWITCH,0:DO,0:WHILE,0:ELSE,0:functions,0:IF,1	15
0xfe9	              0x55	                                push rbp	       344	shallow.c	FUNCTION_14
0xfea	          0x4889e5	                            mov rbp, rsp	       344	shallow.c	FUNCTION_14
0xfed	        0x4883ec10	                           sub rsp, 0x10	       344	shallow.c	FUNCTION_14
0xff1	          0x897dfc	                mov dword [rbp - 4], edi	       344	shallow.c	FUNCTION_14
0xff4	      0xe800000000	                          call 0x4001039	       345	shallow.c	FUNCTION_14	IF_1	CALL_1
0xff9	            0x85c0	                           test eax, eax	       345	shallow.c	FUNCTION_14	IF_1	CALL_1
0xffb	            0x7413	                            je 0x4001050	       345	shallow.c	FUNCTION_14	IF_1	CALL_1
0xffd	        0x488d45fc	                      lea rax, [rbp - 4]	       347	shallow.c	FUNCTION_14	CALL_2
0x1001	          0x4889c6	                            mov rsi, rax	       347	shallow.c	FUNCTION_14	CALL_2
0x1004	      0xbf00000000	                              mov edi, 0	       347	shallow.c	FUNCTION_14	CALL_2
0x1009	      0xe800000000	                          call 0x400104e	       347	shallow.c	FUNCTION_14	CALL_2
0x100e	            0xeb01	                           jmp 0x4001051	       347	shallow.c	FUNCTION_14	CALL_2
0x1010	              0x90	                                     nop	       346	shallow.c	FUNCTION_14	IF_1
0x1011	              0xc9	                                   leave	       348	shallow.c	FUNCTION_14
0x1012	              0xc3	                                     ret	       348	shallow.c	FUNCTION_14
hold_lock_file_for_update	FOR,0:CALL,1:SWITCH,0:DO,0:WHILE,0:ELSE,0:functions,0:IF,0	14
0x1f3	              0x55	                                push rbp	       174	lockfile.h	FUNCTION_27
0x1f4	          0x4889e5	                            mov rbp, rsp	       174	lockfile.h	FUNCTION_27
0x1f7	        0x4883ec20	                           sub rsp, 0x20	       174	lockfile.h	FUNCTION_27
0x1fb	        0x48897df8	                mov qword [rbp - 8], rdi	       174	lockfile.h	FUNCTION_27
0x1ff	        0x488975f0	             mov qword [rbp - 0x10], rsi	       174	lockfile.h	FUNCTION_27
0x203	          0x8955ec	             mov dword [rbp - 0x14], edx	       174	lockfile.h	FUNCTION_27
0x206	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       175	lockfile.h	FUNCTION_27	CALL_1
0x209	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       175	lockfile.h	FUNCTION_27	CALL_1
0x20d	        0x488b45f8	                mov rax, qword [rbp - 8]	       175	lockfile.h	FUNCTION_27	CALL_1
0x211	      0xb900000000	                              mov ecx, 0	       175	lockfile.h	FUNCTION_27	CALL_1
0x216	          0x4889c7	                            mov rdi, rax	       175	lockfile.h	FUNCTION_27	CALL_1
0x219	      0xe800000000	                          call 0x400025e	       175	lockfile.h	FUNCTION_27	CALL_1
0x21e	              0xc9	                                   leave	       176	lockfile.h	FUNCTION_27
0x21f	              0xc3	                                     ret	       176	lockfile.h	FUNCTION_27
update_refstatus	FOR,1:CALL,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:functions,0:IF,2	40
0x2210	              0x55	                                push rbp	       653	shallow.c	FUNCTION_24
0x2211	          0x4889e5	                            mov rbp, rsp	       653	shallow.c	FUNCTION_24
0x2214	        0x48897de8	             mov qword [rbp - 0x18], rdi	       653	shallow.c	FUNCTION_24
0x2218	          0x8975e4	             mov dword [rbp - 0x1c], esi	       653	shallow.c	FUNCTION_24
0x221b	        0x488955d8	             mov qword [rbp - 0x28], rdx	       653	shallow.c	FUNCTION_24
0x221f	      0x48837de800	               cmp qword [rbp - 0x18], 0	       655	shallow.c	FUNCTION_24	IF_1
0x2224	            0x7460	                            je 0x40022c6	       655	shallow.c	FUNCTION_24	IF_1
0x2226	    0xc745fc000000	                  mov dword [rbp - 4], 0	       657	shallow.c	FUNCTION_24	FOR_1
0x222d	            0xeb4d	                           jmp 0x40022bc	       657	shallow.c	FUNCTION_24	FOR_1
0x222f	          0x8b45fc	                mov eax, dword [rbp - 4]	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x2232	          0xc1e805	                              shr eax, 5	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x2235	            0x89c0	                            mov eax, eax	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x2237	    0x488d14850000	                        lea rdx, [rax*4]	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x223f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x2243	          0x4801d0	                            add rax, rdx	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x2246	            0x8b00	                    mov eax, dword [rax]	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x2248	          0x8b55fc	                mov edx, dword [rbp - 4]	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x224b	          0x83e21f	                           and edx, 0x1f	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x224e	      0xbe01000000	                              mov esi, 1	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x2253	            0x89d1	                            mov ecx, edx	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x2255	            0xd3e6	                             shl esi, cl	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x2257	            0x89f2	                            mov edx, esi	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x2259	            0x21d0	                            and eax, edx	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x225b	            0x85c0	                           test eax, eax	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x225d	            0x7419	                            je 0x40022b8	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x225f	          0x8b45fc	                mov eax, dword [rbp - 4]	       659	shallow.c	FUNCTION_24	FOR_1	IF_2
0x2262	    0x488d14850000	                        lea rdx, [rax*4]	       659	shallow.c	FUNCTION_24	FOR_1	IF_2
0x226a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       659	shallow.c	FUNCTION_24	FOR_1	IF_2
0x226e	          0x4801d0	                            add rax, rdx	       659	shallow.c	FUNCTION_24	FOR_1	IF_2
0x2271	            0x8b10	                    mov edx, dword [rax]	       659	shallow.c	FUNCTION_24	FOR_1	IF_2
0x2273	          0x83c201	                              add edx, 1	       659	shallow.c	FUNCTION_24	FOR_1	IF_2
0x2276	            0x8910	                    mov dword [rax], edx	       659	shallow.c	FUNCTION_24	FOR_1	IF_2
0x2278	        0x8345fc01	                  add dword [rbp - 4], 1	       657	shallow.c	FUNCTION_24	FOR_1
0x227c	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       657	shallow.c	FUNCTION_24	FOR_1
0x227f	          0x3945fc	                cmp dword [rbp - 4], eax	       657	shallow.c	FUNCTION_24	FOR_1
0x2282	            0x72ab	                            jb 0x400226f	       657	shallow.c	FUNCTION_24	FOR_1
0x2284	            0xeb01	                           jmp 0x40022c7	       657	shallow.c	FUNCTION_24	FOR_1
0x2286	              0x90	                                     nop	       656	shallow.c	FUNCTION_24	IF_1
0x2287	              0x5d	                                 pop rbp	       660	shallow.c	FUNCTION_24
0x2288	              0xc3	                                     ret	       660	shallow.c	FUNCTION_24
write_shallow_commits	FOR,0:CALL,1:SWITCH,0:DO,0:WHILE,0:ELSE,0:functions,0:IF,0	14
0xd8b	              0x55	                                push rbp	       285	shallow.c	FUNCTION_10
0xd8c	          0x4889e5	                            mov rbp, rsp	       285	shallow.c	FUNCTION_10
0xd8f	        0x4883ec20	                           sub rsp, 0x20	       285	shallow.c	FUNCTION_10
0xd93	        0x48897df8	                mov qword [rbp - 8], rdi	       285	shallow.c	FUNCTION_10
0xd97	          0x8975f4	              mov dword [rbp - 0xc], esi	       285	shallow.c	FUNCTION_10
0xd9a	        0x488955e8	             mov qword [rbp - 0x18], rdx	       285	shallow.c	FUNCTION_10
0xd9e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       286	shallow.c	FUNCTION_10	CALL_1
0xda2	          0x8b75f4	              mov esi, dword [rbp - 0xc]	       286	shallow.c	FUNCTION_10	CALL_1
0xda5	        0x488b45f8	                mov rax, qword [rbp - 8]	       286	shallow.c	FUNCTION_10	CALL_1
0xda9	      0xb900000000	                              mov ecx, 0	       286	shallow.c	FUNCTION_10	CALL_1
0xdae	          0x4889c7	                            mov rdi, rax	       286	shallow.c	FUNCTION_10	CALL_1
0xdb1	      0xe8f4feffff	        call sym.write_shallow_commits_1	       286	shallow.c	FUNCTION_10	CALL_1
0xdb6	              0xc9	                                   leave	       287	shallow.c	FUNCTION_10
0xdb7	              0xc3	                                     ret	       287	shallow.c	FUNCTION_10
add_ref	FOR,0:CALL,2:SWITCH,0:DO,0:WHILE,0:ELSE,0:functions,0:IF,1	99
0x20dc	              0x55	                                push rbp	       643	shallow.c	FUNCTION_23
0x20dd	          0x4889e5	                            mov rbp, rsp	       643	shallow.c	FUNCTION_23
0x20e0	              0x53	                                push rbx	       643	shallow.c	FUNCTION_23
0x20e1	        0x4883ec38	                           sub rsp, 0x38	       643	shallow.c	FUNCTION_23
0x20e5	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       643	shallow.c	FUNCTION_23
0x20e9	        0x488975d0	             mov qword [rbp - 0x30], rsi	       643	shallow.c	FUNCTION_23
0x20ed	          0x8955cc	             mov dword [rbp - 0x34], edx	       643	shallow.c	FUNCTION_23
0x20f0	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       643	shallow.c	FUNCTION_23
0x20f4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       644	shallow.c	FUNCTION_23
0x20f8	        0x488945e8	             mov qword [rbp - 0x18], rax	       644	shallow.c	FUNCTION_23
0x20fc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       645	shallow.c	FUNCTION_23	CALL_1
0x2100	          0x8b4008	                mov eax, dword [rax + 8]	       645	shallow.c	FUNCTION_23	CALL_1
0x2103	          0x8d5001	                      lea edx, [rax + 1]	       645	shallow.c	FUNCTION_23	CALL_1
0x2106	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       645	shallow.c	FUNCTION_23	CALL_1
0x210a	          0x8b400c	              mov eax, dword [rax + 0xc]	       645	shallow.c	FUNCTION_23	CALL_1
0x210d	            0x39c2	                            cmp edx, eax	       645	shallow.c	FUNCTION_23	CALL_1
0x210f	     0xf8e93000000	                           jle 0x40021e8	       645	shallow.c	FUNCTION_23	CALL_1
0x2115	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       645	shallow.c	FUNCTION_23	CALL_1
0x2119	          0x8b400c	              mov eax, dword [rax + 0xc]	       645	shallow.c	FUNCTION_23	CALL_1
0x211c	          0x8d5010	                   lea edx, [rax + 0x10]	       645	shallow.c	FUNCTION_23	CALL_1
0x211f	            0x89d0	                            mov eax, edx	       645	shallow.c	FUNCTION_23	CALL_1
0x2121	             0x1c0	                            add eax, eax	       645	shallow.c	FUNCTION_23	CALL_1
0x2123	             0x1d0	                            add eax, edx	       645	shallow.c	FUNCTION_23	CALL_1
0x2125	            0x89c2	                            mov edx, eax	       645	shallow.c	FUNCTION_23	CALL_1
0x2127	          0xc1ea1f	                           shr edx, 0x1f	       645	shallow.c	FUNCTION_23	CALL_1
0x212a	             0x1d0	                            add eax, edx	       645	shallow.c	FUNCTION_23	CALL_1
0x212c	            0xd1f8	                              sar eax, 1	       645	shallow.c	FUNCTION_23	CALL_1
0x212e	            0x89c2	                            mov edx, eax	       645	shallow.c	FUNCTION_23	CALL_1
0x2130	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       645	shallow.c	FUNCTION_23	CALL_1
0x2134	          0x8b4008	                mov eax, dword [rax + 8]	       645	shallow.c	FUNCTION_23	CALL_1
0x2137	          0x83c001	                              add eax, 1	       645	shallow.c	FUNCTION_23	CALL_1
0x213a	            0x39c2	                            cmp edx, eax	       645	shallow.c	FUNCTION_23	CALL_1
0x213c	            0x7d13	                           jge 0x4002191	       645	shallow.c	FUNCTION_23	CALL_1
0x213e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       645	shallow.c	FUNCTION_23	CALL_1
0x2142	          0x8b4008	                mov eax, dword [rax + 8]	       645	shallow.c	FUNCTION_23	CALL_1
0x2145	          0x8d5001	                      lea edx, [rax + 1]	       645	shallow.c	FUNCTION_23	CALL_1
0x2148	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       645	shallow.c	FUNCTION_23	CALL_1
0x214c	          0x89500c	              mov dword [rax + 0xc], edx	       645	shallow.c	FUNCTION_23	CALL_1
0x214f	            0xeb22	                           jmp 0x40021b3	       645	shallow.c	FUNCTION_23	CALL_1
0x2151	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       645	shallow.c	FUNCTION_23	CALL_1
0x2155	          0x8b400c	              mov eax, dword [rax + 0xc]	       645	shallow.c	FUNCTION_23	CALL_1
0x2158	          0x8d5010	                   lea edx, [rax + 0x10]	       645	shallow.c	FUNCTION_23	CALL_1
0x215b	            0x89d0	                            mov eax, edx	       645	shallow.c	FUNCTION_23	CALL_1
0x215d	             0x1c0	                            add eax, eax	       645	shallow.c	FUNCTION_23	CALL_1
0x215f	             0x1d0	                            add eax, edx	       645	shallow.c	FUNCTION_23	CALL_1
0x2161	            0x89c2	                            mov edx, eax	       645	shallow.c	FUNCTION_23	CALL_1
0x2163	          0xc1ea1f	                           shr edx, 0x1f	       645	shallow.c	FUNCTION_23	CALL_1
0x2166	             0x1d0	                            add eax, edx	       645	shallow.c	FUNCTION_23	CALL_1
0x2168	            0xd1f8	                              sar eax, 1	       645	shallow.c	FUNCTION_23	CALL_1
0x216a	            0x89c2	                            mov edx, eax	       645	shallow.c	FUNCTION_23	CALL_1
0x216c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       645	shallow.c	FUNCTION_23	CALL_1
0x2170	          0x89500c	              mov dword [rax + 0xc], edx	       645	shallow.c	FUNCTION_23	CALL_1
0x2173	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       645	shallow.c	FUNCTION_23	CALL_1
0x2177	          0x8b400c	              mov eax, dword [rax + 0xc]	       645	shallow.c	FUNCTION_23	CALL_1
0x217a	            0x4898	                                    cdqe	       645	shallow.c	FUNCTION_23	CALL_1
0x217c	          0x4889c6	                            mov rsi, rax	       645	shallow.c	FUNCTION_23	CALL_1
0x217f	      0xbf08000000	                              mov edi, 8	       645	shallow.c	FUNCTION_23	CALL_1
0x2184	      0xe877deffff	                        call sym.st_mult	       645	shallow.c	FUNCTION_23	CALL_1
0x2189	          0x4889c2	                            mov rdx, rax	       645	shallow.c	FUNCTION_23	CALL_1
0x218c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       645	shallow.c	FUNCTION_23	CALL_1
0x2190	          0x488b00	                    mov rax, qword [rax]	       645	shallow.c	FUNCTION_23	CALL_1
0x2193	          0x4889d6	                            mov rsi, rdx	       645	shallow.c	FUNCTION_23	CALL_1
0x2196	          0x4889c7	                            mov rdi, rax	       645	shallow.c	FUNCTION_23	CALL_1
0x2199	      0xe800000000	                          call 0x40021de	       645	shallow.c	FUNCTION_23	CALL_1
0x219e	          0x4889c2	                            mov rdx, rax	       645	shallow.c	FUNCTION_23	CALL_1
0x21a1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       645	shallow.c	FUNCTION_23	CALL_1
0x21a5	          0x488910	                    mov qword [rax], rdx	       645	shallow.c	FUNCTION_23	CALL_1
0x21a8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       646	shallow.c	FUNCTION_23	CALL_2
0x21ac	          0x488b10	                    mov rdx, qword [rax]	       646	shallow.c	FUNCTION_23	CALL_2
0x21af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       646	shallow.c	FUNCTION_23	CALL_2
0x21b3	          0x8b4008	                mov eax, dword [rax + 8]	       646	shallow.c	FUNCTION_23	CALL_2
0x21b6	            0x4898	                                    cdqe	       646	shallow.c	FUNCTION_23	CALL_2
0x21b8	        0x48c1e003	                              shl rax, 3	       646	shallow.c	FUNCTION_23	CALL_2
0x21bc	        0x488d1c02	                    lea rbx, [rdx + rax]	       646	shallow.c	FUNCTION_23	CALL_2
0x21c0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       646	shallow.c	FUNCTION_23	CALL_2
0x21c4	      0xbe01000000	                              mov esi, 1	       646	shallow.c	FUNCTION_23	CALL_2
0x21c9	          0x4889c7	                            mov rdi, rax	       646	shallow.c	FUNCTION_23	CALL_2
0x21cc	      0xe800000000	                          call 0x4002211	       646	shallow.c	FUNCTION_23	CALL_2
0x21d1	          0x488903	                    mov qword [rbx], rax	       646	shallow.c	FUNCTION_23	CALL_2
0x21d4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       647	shallow.c	FUNCTION_23	IF_1
0x21d8	          0x488b10	                    mov rdx, qword [rax]	       647	shallow.c	FUNCTION_23	IF_1
0x21db	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       647	shallow.c	FUNCTION_23	IF_1
0x21df	          0x8b4008	                mov eax, dword [rax + 8]	       647	shallow.c	FUNCTION_23	IF_1
0x21e2	            0x4898	                                    cdqe	       647	shallow.c	FUNCTION_23	IF_1
0x21e4	        0x48c1e003	                              shl rax, 3	       647	shallow.c	FUNCTION_23	IF_1
0x21e8	          0x4801d0	                            add rax, rdx	       647	shallow.c	FUNCTION_23	IF_1
0x21eb	          0x488b00	                    mov rax, qword [rax]	       647	shallow.c	FUNCTION_23	IF_1
0x21ee	          0x4885c0	                           test rax, rax	       647	shallow.c	FUNCTION_23	IF_1
0x21f1	            0x7411	                            je 0x4002244	       647	shallow.c	FUNCTION_23	IF_1
0x21f3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       648	shallow.c	FUNCTION_23	IF_1
0x21f7	          0x8b4008	                mov eax, dword [rax + 8]	       648	shallow.c	FUNCTION_23	IF_1
0x21fa	          0x8d5001	                      lea edx, [rax + 1]	       648	shallow.c	FUNCTION_23	IF_1
0x21fd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       648	shallow.c	FUNCTION_23	IF_1
0x2201	          0x895008	                mov dword [rax + 8], edx	       648	shallow.c	FUNCTION_23	IF_1
0x2204	      0xb800000000	                              mov eax, 0	       649	shallow.c	FUNCTION_23
0x2209	        0x4883c438	                           add rsp, 0x38	       650	shallow.c	FUNCTION_23
0x220d	              0x5b	                                 pop rbx	       650	shallow.c	FUNCTION_23
0x220e	              0x5d	                                 pop rbp	       650	shallow.c	FUNCTION_23
0x220f	              0xc3	                                     ret	       650	shallow.c	FUNCTION_23
register_shallow	FOR,0:CALL,4:SWITCH,0:DO,0:WHILE,0:ELSE,0:functions,0:IF,1	33
0x2d9	              0x55	                                push rbp	        31	shallow.c	FUNCTION_2
0x2da	          0x4889e5	                            mov rbp, rsp	        31	shallow.c	FUNCTION_2
0x2dd	        0x4883ec20	                           sub rsp, 0x20	        31	shallow.c	FUNCTION_2
0x2e1	        0x48897de8	             mov qword [rbp - 0x18], rdi	        31	shallow.c	FUNCTION_2
0x2e5	      0xbf18000000	                           mov edi, 0x18	        32	shallow.c	FUNCTION_2
0x2ea	      0xe800000000	                          call 0x400032f	        32	shallow.c	FUNCTION_2
0x2ef	        0x488945f0	             mov qword [rbp - 0x10], rax	        32	shallow.c	FUNCTION_2
0x2f3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        34	shallow.c	FUNCTION_2	CALL_2
0x2f7	          0x4889c7	                            mov rdi, rax	        34	shallow.c	FUNCTION_2	CALL_2
0x2fa	      0xe800000000	                          call 0x400033f	        34	shallow.c	FUNCTION_2	CALL_2
0x2ff	        0x488945f8	                mov qword [rbp - 8], rax	        34	shallow.c	FUNCTION_2	CALL_2
0x303	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        36	shallow.c	FUNCTION_2	CALL_3
0x307	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        36	shallow.c	FUNCTION_2	CALL_3
0x30b	          0x4889d6	                            mov rsi, rdx	        36	shallow.c	FUNCTION_2	CALL_3
0x30e	          0x4889c7	                            mov rdi, rax	        36	shallow.c	FUNCTION_2	CALL_3
0x311	      0xe898feffff	                         call sym.oidcpy	        36	shallow.c	FUNCTION_2	CALL_3
0x316	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        37	shallow.c	FUNCTION_2
0x31a	    0xc74014ffffff	     mov dword [rax + 0x14], 0xffffffff 	        37	shallow.c	FUNCTION_2
0x321	      0x48837df800	                  cmp qword [rbp - 8], 0	        38	shallow.c	FUNCTION_2	IF_1
0x326	            0x741a	                            je 0x4000382	        38	shallow.c	FUNCTION_2	IF_1
0x328	        0x488b45f8	                mov rax, qword [rbp - 8]	        38	shallow.c	FUNCTION_2	IF_1
0x32c	           0xfb600	                   movzx eax, byte [rax]	        38	shallow.c	FUNCTION_2	IF_1
0x32f	          0x83e001	                              and eax, 1	        38	shallow.c	FUNCTION_2	IF_1
0x332	            0x84c0	                             test al, al	        38	shallow.c	FUNCTION_2	IF_1
0x334	            0x740c	                            je 0x4000382	        38	shallow.c	FUNCTION_2	IF_1
0x336	        0x488b45f8	                mov rax, qword [rbp - 8]	        39	shallow.c	FUNCTION_2	IF_1
0x33a	    0x48c740300000	               mov qword [rax + 0x30], 0	        39	shallow.c	FUNCTION_2	IF_1
0x342	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        40	shallow.c	FUNCTION_2	CALL_4
0x346	      0xbe00000000	                              mov esi, 0	        40	shallow.c	FUNCTION_2	CALL_4
0x34b	          0x4889c7	                            mov rdi, rax	        40	shallow.c	FUNCTION_2	CALL_4
0x34e	      0xe800000000	                          call 0x4000393	        40	shallow.c	FUNCTION_2	CALL_4
0x353	              0xc9	                                   leave	        41	shallow.c	FUNCTION_2
0x354	              0xc3	                                     ret	        41	shallow.c	FUNCTION_2
get_shallow_commits_by_rev_list	FOR,4:CALL,12:SWITCH,0:DO,0:WHILE,0:ELSE,0:functions,0:IF,4	177
0x7f6	              0x55	                                push rbp	       156	shallow.c	FUNCTION_6
0x7f7	          0x4889e5	                            mov rbp, rsp	       156	shallow.c	FUNCTION_6
0x7fa	    0x4881ec200900	                          sub rsp, 0x920	       156	shallow.c	FUNCTION_6
0x801	    0x89bdfcf6ffff	            mov dword [rbp - 0x904], edi	       156	shallow.c	FUNCTION_6
0x807	    0x4889b5f0f6ff	            mov qword [rbp - 0x910], rsi	       156	shallow.c	FUNCTION_6
0x80e	    0x8995f8f6ffff	            mov dword [rbp - 0x908], edx	       156	shallow.c	FUNCTION_6
0x814	    0x898decf6ffff	            mov dword [rbp - 0x914], ecx	       156	shallow.c	FUNCTION_6
0x81a	    0x64488b042528	                mov rax, qword fs:[0x28]	       156	shallow.c	FUNCTION_6
0x823	        0x488945f8	                mov qword [rbp - 8], rax	       156	shallow.c	FUNCTION_6
0x827	            0x31c0	                            xor eax, eax	       156	shallow.c	FUNCTION_6
0x829	    0x48c78510f7ff	              mov qword [rbp - 0x8f0], 0	       157	shallow.c	FUNCTION_6
0x834	    0x48c78518f7ff	              mov qword [rbp - 0x8e8], 0	       158	shallow.c	FUNCTION_6
0x83f	    0x8b85f8f6ffff	            mov eax, dword [rbp - 0x908]	       160	shallow.c	FUNCTION_6
0x845	     0xb85ecf6ffff	             or eax, dword [rbp - 0x914]	       160	shallow.c	FUNCTION_6
0x84b	    0x89850cf7ffff	            mov dword [rbp - 0x8f4], eax	       160	shallow.c	FUNCTION_6
0x851	    0x8b850cf7ffff	            mov eax, dword [rbp - 0x8f4]	       166	shallow.c	FUNCTION_6	CALL_1
0x857	            0x89c7	                            mov edi, eax	       166	shallow.c	FUNCTION_6	CALL_1
0x859	      0xe800000000	                          call 0x400089e	       166	shallow.c	FUNCTION_6	CALL_1
0x85e	      0xe800000000	                          call 0x40008a3	       168	shallow.c	FUNCTION_6	CALL_2
0x863	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       170	shallow.c	FUNCTION_6	CALL_3
0x86a	      0xbe00000000	                              mov esi, 0	       170	shallow.c	FUNCTION_6	CALL_3
0x86f	          0x4889c7	                            mov rdi, rax	       170	shallow.c	FUNCTION_6	CALL_3
0x872	      0xe800000000	                          call 0x40008b7	       170	shallow.c	FUNCTION_6	CALL_3
0x877	    0xc70500000000	               mov dword [0x040008c1], 0	       171	shallow.c	FUNCTION_6
0x881	    0x488d9540f7ff	                  lea rdx, [rbp - 0x8c0]	       172	shallow.c	FUNCTION_6	CALL_4
0x888	    0x488bb5f0f6ff	            mov rsi, qword [rbp - 0x910]	       172	shallow.c	FUNCTION_6	CALL_4
0x88f	    0x8b85fcf6ffff	            mov eax, dword [rbp - 0x904]	       172	shallow.c	FUNCTION_6	CALL_4
0x895	      0xb900000000	                              mov ecx, 0	       172	shallow.c	FUNCTION_6	CALL_4
0x89a	            0x89c7	                            mov edi, eax	       172	shallow.c	FUNCTION_6	CALL_4
0x89c	      0xe800000000	                          call 0x40008e1	       172	shallow.c	FUNCTION_6	CALL_4
0x8a1	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       174	shallow.c	FUNCTION_6	IF_1	CALL_5
0x8a8	          0x4889c7	                            mov rdi, rax	       174	shallow.c	FUNCTION_6	IF_1	CALL_5
0x8ab	      0xe800000000	                          call 0x40008f0	       174	shallow.c	FUNCTION_6	IF_1	CALL_5
0x8b0	            0x85c0	                           test eax, eax	       174	shallow.c	FUNCTION_6	IF_1	CALL_5
0x8b2	            0x740f	                            je 0x4000903	       174	shallow.c	FUNCTION_6	IF_1	CALL_5
0x8b4	      0xbf00000000	                              mov edi, 0	       175	shallow.c	FUNCTION_6	CALL_6
0x8b9	      0xb800000000	                              mov eax, 0	       175	shallow.c	FUNCTION_6	CALL_6
0x8be	      0xe800000000	                          call 0x4000903	       175	shallow.c	FUNCTION_6	CALL_6
0x8c3	    0x488d9518f7ff	                  lea rdx, [rbp - 0x8e8]	       176	shallow.c	FUNCTION_6	CALL_7
0x8ca	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       176	shallow.c	FUNCTION_6	CALL_7
0x8d1	          0x4889d1	                            mov rcx, rdx	       176	shallow.c	FUNCTION_6	CALL_7
0x8d4	      0xba00000000	                              mov edx, 0	       176	shallow.c	FUNCTION_6	CALL_7
0x8d9	      0xbe00000000	                              mov esi, 0	       176	shallow.c	FUNCTION_6	CALL_7
0x8de	          0x4889c7	                            mov rdi, rax	       176	shallow.c	FUNCTION_6	CALL_7
0x8e1	      0xe800000000	                          call 0x4000926	       176	shallow.c	FUNCTION_6	CALL_7
0x8e6	    0x488b8518f7ff	            mov rax, qword [rbp - 0x8e8]	       179	shallow.c	FUNCTION_6	FOR_1
0x8ed	    0x48898520f7ff	            mov qword [rbp - 0x8e0], rax	       179	shallow.c	FUNCTION_6	FOR_1
0x8f4	            0xeb50	                           jmp 0x4000986	       179	shallow.c	FUNCTION_6	FOR_1
0x8f6	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	       180	shallow.c	FUNCTION_6	FOR_1
0x8fd	          0x488b10	                    mov rdx, qword [rax]	       180	shallow.c	FUNCTION_6	FOR_1
0x900	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	       180	shallow.c	FUNCTION_6	FOR_1
0x907	          0x488b00	                    mov rax, qword [rax]	       180	shallow.c	FUNCTION_6	FOR_1
0x90a	            0x8b00	                    mov eax, dword [rax]	       180	shallow.c	FUNCTION_6	FOR_1
0x90c	          0xc1e804	                              shr eax, 4	       180	shallow.c	FUNCTION_6	FOR_1
0x90f	      0x25ffffff07	                      and eax, 0x7ffffff	       180	shallow.c	FUNCTION_6	FOR_1
0x914	     0xb85ecf6ffff	             or eax, dword [rbp - 0x914]	       180	shallow.c	FUNCTION_6	FOR_1
0x91a	      0x25ffffff07	                      and eax, 0x7ffffff	       180	shallow.c	FUNCTION_6	FOR_1
0x91f	      0x25ffffff07	                      and eax, 0x7ffffff	       180	shallow.c	FUNCTION_6	FOR_1
0x924	          0xc1e004	                              shl eax, 4	       180	shallow.c	FUNCTION_6	FOR_1
0x927	            0x89c1	                            mov ecx, eax	       180	shallow.c	FUNCTION_6	FOR_1
0x929	            0x8b02	                    mov eax, dword [rdx]	       180	shallow.c	FUNCTION_6	FOR_1
0x92b	      0x250f000080	                     and eax, 0x8000000f	       180	shallow.c	FUNCTION_6	FOR_1
0x930	             0x9c8	                             or eax, ecx	       180	shallow.c	FUNCTION_6	FOR_1
0x932	            0x8902	                    mov dword [rdx], eax	       180	shallow.c	FUNCTION_6	FOR_1
0x934	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	       179	shallow.c	FUNCTION_6	FOR_1
0x93b	        0x488b4008	                mov rax, qword [rax + 8]	       179	shallow.c	FUNCTION_6	FOR_1
0x93f	    0x48898520f7ff	            mov qword [rbp - 0x8e0], rax	       179	shallow.c	FUNCTION_6	FOR_1
0x946	    0x4883bd20f7ff	              cmp qword [rbp - 0x8e0], 0	       179	shallow.c	FUNCTION_6	FOR_1
0x94e	            0x75a6	                           jne 0x4000936	       179	shallow.c	FUNCTION_6	FOR_1
0x950	    0x488b8518f7ff	            mov rax, qword [rbp - 0x8e8]	       189	shallow.c	FUNCTION_6	FOR_2
0x957	    0x48898520f7ff	            mov qword [rbp - 0x8e0], rax	       189	shallow.c	FUNCTION_6	FOR_2
0x95e	      0xe907010000	                           jmp 0x4000aaa	       189	shallow.c	FUNCTION_6	FOR_2
0x963	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	       190	shallow.c	FUNCTION_6	FOR_2
0x96a	          0x488b00	                    mov rax, qword [rax]	       190	shallow.c	FUNCTION_6	FOR_2
0x96d	    0x48898530f7ff	            mov qword [rbp - 0x8d0], rax	       190	shallow.c	FUNCTION_6	FOR_2
0x974	    0x488b8530f7ff	            mov rax, qword [rbp - 0x8d0]	       193	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_8
0x97b	          0x4889c7	                            mov rdi, rax	       193	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_8
0x97e	      0xe8d5f8ffff	                   call sym.parse_commit	       193	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_8
0x983	            0x85c0	                           test eax, eax	       193	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_8
0x985	            0x7425	                            je 0x40009ec	       193	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_8
0x987	    0x488b8530f7ff	            mov rax, qword [rbp - 0x8d0]	       195	shallow.c	FUNCTION_6	FOR_2	CALL_10
0x98e	        0x4883c004	                              add rax, 4	       195	shallow.c	FUNCTION_6	FOR_2	CALL_10
0x992	          0x4889c7	                            mov rdi, rax	       194	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_9
0x995	      0xe800000000	                          call 0x40009da	       194	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_9
0x99a	          0x4889c6	                            mov rsi, rax	       194	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_9
0x99d	      0xbf00000000	                              mov edi, 0	       194	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_9
0x9a2	      0xb800000000	                              mov eax, 0	       194	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_9
0x9a7	      0xe800000000	                          call 0x40009ec	       194	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_9
0x9ac	    0x488b8530f7ff	            mov rax, qword [rbp - 0x8d0]	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0x9b3	        0x488b4030	            mov rax, qword [rax + 0x30] 	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0x9b7	    0x48898528f7ff	            mov qword [rbp - 0x8d8], rax	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0x9be	      0xe987000000	                           jmp 0x4000a8a	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0x9c3	    0x488b8528f7ff	            mov rax, qword [rbp - 0x8d8]	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x9ca	          0x488b00	                    mov rax, qword [rax]	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x9cd	            0x8b00	                    mov eax, dword [rax]	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x9cf	          0xc1e804	                              shr eax, 4	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x9d2	      0x25ffffff07	                      and eax, 0x7ffffff	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x9d7	    0x2385ecf6ffff	            and eax, dword [rbp - 0x914]	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x9dd	            0x85c0	                           test eax, eax	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x9df	            0x7557	                           jne 0x4000a78	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x9e1	    0x488b8530f7ff	            mov rax, qword [rbp - 0x8d0]	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x9e8	            0x8b00	                    mov eax, dword [rax]	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x9ea	          0xc1e804	                              shr eax, 4	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x9ed	      0x25ffffff07	                      and eax, 0x7ffffff	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x9f2	     0xb85f8f6ffff	             or eax, dword [rbp - 0x908]	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x9f8	      0x25ffffff07	                      and eax, 0x7ffffff	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x9fd	            0x89c2	                            mov edx, eax	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x9ff	    0x488b8530f7ff	            mov rax, qword [rbp - 0x8d0]	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0xa06	    0x81e2ffffff07	                      and edx, 0x7ffffff	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0xa0c	            0x89d1	                            mov ecx, edx	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0xa0e	          0xc1e104	                              shl ecx, 4	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0xa11	            0x8b10	                    mov edx, dword [rax]	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0xa13	    0x81e20f000080	                     and edx, 0x8000000f	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0xa19	             0x9ca	                             or edx, ecx	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0xa1b	            0x8910	                    mov dword [rax], edx	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0xa1d	    0x488d9510f7ff	                  lea rdx, [rbp - 0x8f0]	       200	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3	CALL_11
0xa24	    0x488b8530f7ff	            mov rax, qword [rbp - 0x8d0]	       200	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3	CALL_11
0xa2b	          0x4889d6	                            mov rsi, rdx	       200	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3	CALL_11
0xa2e	          0x4889c7	                            mov rdi, rax	       200	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3	CALL_11
0xa31	      0xe800000000	                          call 0x4000a76	       200	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3	CALL_11
0xa36	            0xeb20	                           jmp 0x4000a98	       201	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0xa38	    0x488b8528f7ff	            mov rax, qword [rbp - 0x8d8]	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0xa3f	        0x488b4008	                mov rax, qword [rax + 8]	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0xa43	    0x48898528f7ff	            mov qword [rbp - 0x8d8], rax	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0xa4a	    0x4883bd28f7ff	              cmp qword [rbp - 0x8d8], 0	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0xa52	     0xf856bffffff	                           jne 0x4000a03	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0xa58	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	       189	shallow.c	FUNCTION_6	FOR_2
0xa5f	        0x488b4008	                mov rax, qword [rax + 8]	       189	shallow.c	FUNCTION_6	FOR_2
0xa63	    0x48898520f7ff	            mov qword [rbp - 0x8e0], rax	       189	shallow.c	FUNCTION_6	FOR_2
0xa6a	    0x4883bd20f7ff	              cmp qword [rbp - 0x8e0], 0	       189	shallow.c	FUNCTION_6	FOR_2
0xa72	     0xf85ebfeffff	                           jne 0x40009a3	       189	shallow.c	FUNCTION_6	FOR_2
0xa78	    0x488b8518f7ff	            mov rax, qword [rbp - 0x8e8]	       204	shallow.c	FUNCTION_6	CALL_12
0xa7f	          0x4889c7	                            mov rdi, rax	       204	shallow.c	FUNCTION_6	CALL_12
0xa82	      0xe800000000	                          call 0x4000ac7	       204	shallow.c	FUNCTION_6	CALL_12
0xa87	    0x488b8510f7ff	            mov rax, qword [rbp - 0x8f0]	       210	shallow.c	FUNCTION_6	FOR_4
0xa8e	    0x48898520f7ff	            mov qword [rbp - 0x8e0], rax	       210	shallow.c	FUNCTION_6	FOR_4
0xa95	      0xe984000000	                           jmp 0x4000b5e	       210	shallow.c	FUNCTION_6	FOR_4
0xa9a	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	       211	shallow.c	FUNCTION_6	FOR_4
0xaa1	          0x488b00	                    mov rax, qword [rax]	       211	shallow.c	FUNCTION_6	FOR_4
0xaa4	    0x48898538f7ff	            mov qword [rbp - 0x8c8], rax	       211	shallow.c	FUNCTION_6	FOR_4
0xaab	    0x488b8538f7ff	            mov rax, qword [rbp - 0x8c8]	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0xab2	            0x8b00	                    mov eax, dword [rax]	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0xab4	          0xc1e804	                              shr eax, 4	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0xab7	      0x25ffffff07	                      and eax, 0x7ffffff	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0xabc	    0x23850cf7ffff	            and eax, dword [rbp - 0x8f4]	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0xac2	    0x3b850cf7ffff	            cmp eax, dword [rbp - 0x8f4]	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0xac8	            0x7542	                           jne 0x4000b4c	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0xaca	    0x488b8538f7ff	            mov rax, qword [rbp - 0x8c8]	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0xad1	            0x8b00	                    mov eax, dword [rax]	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0xad3	          0xc1e804	                              shr eax, 4	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0xad6	      0x25ffffff07	                      and eax, 0x7ffffff	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0xadb	            0x89c2	                            mov edx, eax	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0xadd	    0x8b85ecf6ffff	            mov eax, dword [rbp - 0x914]	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0xae3	            0xf7d0	                                 not eax	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0xae5	            0x21d0	                            and eax, edx	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0xae7	      0x25ffffff07	                      and eax, 0x7ffffff	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0xaec	            0x89c2	                            mov edx, eax	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0xaee	    0x488b8538f7ff	            mov rax, qword [rbp - 0x8c8]	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0xaf5	    0x81e2ffffff07	                      and edx, 0x7ffffff	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0xafb	            0x89d1	                            mov ecx, edx	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0xafd	          0xc1e104	                              shl ecx, 4	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0xb00	            0x8b10	                    mov edx, dword [rax]	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0xb02	    0x81e20f000080	                     and edx, 0x8000000f	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0xb08	             0x9ca	                             or edx, ecx	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0xb0a	            0x8910	                    mov dword [rax], edx	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0xb0c	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	       210	shallow.c	FUNCTION_6	FOR_4
0xb13	        0x488b4008	                mov rax, qword [rax + 8]	       210	shallow.c	FUNCTION_6	FOR_4
0xb17	    0x48898520f7ff	            mov qword [rbp - 0x8e0], rax	       210	shallow.c	FUNCTION_6	FOR_4
0xb1e	    0x4883bd20f7ff	              cmp qword [rbp - 0x8e0], 0	       210	shallow.c	FUNCTION_6	FOR_4
0xb26	     0xf856effffff	                           jne 0x4000ada	       210	shallow.c	FUNCTION_6	FOR_4
0xb2c	    0x488b8510f7ff	            mov rax, qword [rbp - 0x8f0]	       215	shallow.c	FUNCTION_6
0xb33	        0x488b75f8	                mov rsi, qword [rbp - 8]	       216	shallow.c	FUNCTION_6
0xb37	    0x644833342528	                xor rsi, qword fs:[0x28]	       216	shallow.c	FUNCTION_6
0xb40	            0x7405	                            je 0x4000b87	       216	shallow.c	FUNCTION_6
0xb42	      0xe800000000	                          call 0x4000b87	       216	shallow.c	FUNCTION_6
0xb47	              0xc9	                                   leave	       216	shallow.c	FUNCTION_6
0xb48	              0xc3	                                     ret	       216	shallow.c	FUNCTION_6
prune_shallow	FOR,0:CALL,14:SWITCH,0:DO,0:WHILE,0:ELSE,1:functions,0:IF,3	68
0x1013	              0x55	                                push rbp	       355	shallow.c	FUNCTION_15
0x1014	          0x4889e5	                            mov rbp, rsp	       355	shallow.c	FUNCTION_15
0x1017	        0x4883ec40	                           sub rsp, 0x40	       355	shallow.c	FUNCTION_15
0x101b	          0x897dcc	             mov dword [rbp - 0x34], edi	       355	shallow.c	FUNCTION_15
0x101e	    0x64488b042528	                mov rax, qword fs:[0x28]	       355	shallow.c	FUNCTION_15
0x1027	        0x488945f8	                mov qword [rbp - 8], rax	       355	shallow.c	FUNCTION_15
0x102b	            0x31c0	                            xor eax, eax	       355	shallow.c	FUNCTION_15
0x102d	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       357	shallow.c	FUNCTION_15
0x1035	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       357	shallow.c	FUNCTION_15
0x103d	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       357	shallow.c	FUNCTION_15
0x1045	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       360	shallow.c	FUNCTION_15	IF_1
0x1049	            0x742c	                            je 0x40010b7	       360	shallow.c	FUNCTION_15	IF_1
0x104b	        0x488d45e0	                   lea rax, [rbp - 0x20]	       361	shallow.c	FUNCTION_15	IF_1	CALL_1
0x104f	      0xb903000000	                              mov ecx, 3	       361	shallow.c	FUNCTION_15	IF_1	CALL_1
0x1054	      0xba00000000	                              mov edx, 0	       361	shallow.c	FUNCTION_15	IF_1	CALL_1
0x1059	      0xbe00000000	                              mov esi, 0	       361	shallow.c	FUNCTION_15	IF_1	CALL_1
0x105e	          0x4889c7	                            mov rdi, rax	       361	shallow.c	FUNCTION_15	IF_1	CALL_1
0x1061	      0xe844fcffff	        call sym.write_shallow_commits_1	       361	shallow.c	FUNCTION_15	IF_1	CALL_1
0x1066	        0x488d45e0	                   lea rax, [rbp - 0x20]	       362	shallow.c	FUNCTION_15	IF_1	CALL_2
0x106a	          0x4889c7	                            mov rdi, rax	       362	shallow.c	FUNCTION_15	IF_1	CALL_2
0x106d	      0xe800000000	                          call 0x40010b2	       362	shallow.c	FUNCTION_15	IF_1	CALL_2
0x1072	      0xe9a3000000	                           jmp 0x400115a	       362	shallow.c	FUNCTION_15	IF_1	CALL_2
0x1077	      0xe800000000	                          call 0x40010bc	       365	shallow.c	FUNCTION_15	CALL_4
0x107c	      0xba01000000	                              mov edx, 1	       365	shallow.c	FUNCTION_15	CALL_4
0x1081	          0x4889c6	                            mov rsi, rax	       365	shallow.c	FUNCTION_15	CALL_4
0x1084	      0xbf00000000	                              mov edi, 0	       365	shallow.c	FUNCTION_15	CALL_4
0x1089	      0xe865f1ffff	      call sym.hold_lock_file_for_update	       365	shallow.c	FUNCTION_15	CALL_4
0x108e	          0x8945dc	             mov dword [rbp - 0x24], eax	       365	shallow.c	FUNCTION_15	CALL_4
0x1091	      0xe8b3faffff	  call sym.check_shallow_file_for_update	       367	shallow.c	FUNCTION_15	CALL_5
0x1096	        0x488d45e0	                   lea rax, [rbp - 0x20]	       368	shallow.c	FUNCTION_15	IF_2	CALL_6
0x109a	      0xb901000000	                              mov ecx, 1	       368	shallow.c	FUNCTION_15	IF_2	CALL_6
0x109f	      0xba00000000	                              mov edx, 0	       368	shallow.c	FUNCTION_15	IF_2	CALL_6
0x10a4	      0xbe00000000	                              mov esi, 0	       368	shallow.c	FUNCTION_15	IF_2	CALL_6
0x10a9	          0x4889c7	                            mov rdi, rax	       368	shallow.c	FUNCTION_15	IF_2	CALL_6
0x10ac	      0xe8f9fbffff	        call sym.write_shallow_commits_1	       368	shallow.c	FUNCTION_15	IF_2	CALL_6
0x10b1	            0x85c0	                           test eax, eax	       368	shallow.c	FUNCTION_15	IF_2	CALL_6
0x10b3	            0x7442	                            je 0x4001137	       368	shallow.c	FUNCTION_15	IF_2	CALL_6
0x10b5	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       369	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_7
0x10b9	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       369	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_7
0x10bd	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       369	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_7
0x10c0	          0x4889ce	                            mov rsi, rcx	       369	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_7
0x10c3	            0x89c7	                            mov edi, eax	       369	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_7
0x10c5	      0xe800000000	                          call 0x400110a	       369	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_7
0x10ca	          0x4885c0	                           test rax, rax	       369	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_7
0x10cd	            0x791c	                           jns 0x400112b	       369	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_7
0x10cf	      0xbf00000000	                              mov edi, 0	       370	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x10d4	      0xe847f1ffff	             call sym.get_lock_file_path	       370	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x10d9	          0x4889c6	                            mov rsi, rax	       370	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x10dc	      0xbf00000000	                              mov edi, 0	       370	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x10e1	      0xb800000000	                              mov eax, 0	       370	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x10e6	      0xe800000000	                          call 0x400112b	       370	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x10eb	      0xbf00000000	                              mov edi, 0	       372	shallow.c	FUNCTION_15	IF_2	CALL_10
0x10f0	      0xe800000000	                          call 0x4001135	       372	shallow.c	FUNCTION_15	IF_2	CALL_10
0x10f5	            0xeb17	                           jmp 0x400114e	       372	shallow.c	FUNCTION_15	IF_2	CALL_10
0x10f7	      0xe800000000	                          call 0x400113c	       374	shallow.c	FUNCTION_15	ELSE_1	CALL_12
0x10fc	          0x4889c7	                            mov rdi, rax	       374	shallow.c	FUNCTION_15	ELSE_1	CALL_12
0x10ff	      0xe800000000	                          call 0x4001144	       374	shallow.c	FUNCTION_15	ELSE_1	CALL_12
0x1104	      0xbf00000000	                              mov edi, 0	       375	shallow.c	FUNCTION_15	ELSE_1	CALL_13
0x1109	      0xe82ff1ffff	             call sym.rollback_lock_file	       375	shallow.c	FUNCTION_15	ELSE_1	CALL_13
0x110e	        0x488d45e0	                   lea rax, [rbp - 0x20]	       377	shallow.c	FUNCTION_15	CALL_14
0x1112	          0x4889c7	                            mov rdi, rax	       377	shallow.c	FUNCTION_15	CALL_14
0x1115	      0xe800000000	                          call 0x400115a	       377	shallow.c	FUNCTION_15	CALL_14
0x111a	        0x488b45f8	                mov rax, qword [rbp - 8]	       378	shallow.c	FUNCTION_15
0x111e	    0x644833042528	                xor rax, qword fs:[0x28]	       378	shallow.c	FUNCTION_15
0x1127	            0x7405	                            je 0x400116e	       378	shallow.c	FUNCTION_15
0x1129	      0xe800000000	                          call 0x400116e	       378	shallow.c	FUNCTION_15
0x112e	              0xc9	                                   leave	       378	shallow.c	FUNCTION_15
0x112f	              0xc3	                                     ret	       378	shallow.c	FUNCTION_15
write_shallow_commits_1	FOR,1:CALL,4:SWITCH,0:DO,0:WHILE,0:ELSE,0:functions,0:IF,1	62
0xcaa	              0x55	                                push rbp	       265	shallow.c	FUNCTION_9
0xcab	          0x4889e5	                            mov rbp, rsp	       265	shallow.c	FUNCTION_9
0xcae	        0x4883ec50	                           sub rsp, 0x50	       265	shallow.c	FUNCTION_9
0xcb2	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       265	shallow.c	FUNCTION_9
0xcb6	          0x8975c4	             mov dword [rbp - 0x3c], esi	       265	shallow.c	FUNCTION_9
0xcb9	        0x488955b8	             mov qword [rbp - 0x48], rdx	       265	shallow.c	FUNCTION_9
0xcbd	          0x894dc0	             mov dword [rbp - 0x40], ecx	       265	shallow.c	FUNCTION_9
0xcc0	    0x64488b042528	                mov rax, qword fs:[0x28]	       265	shallow.c	FUNCTION_9
0xcc9	        0x488945f8	                mov qword [rbp - 8], rax	       265	shallow.c	FUNCTION_9
0xccd	            0x31c0	                            xor eax, eax	       265	shallow.c	FUNCTION_9
0xccf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       268	shallow.c	FUNCTION_9
0xcd3	        0x488945e0	             mov qword [rbp - 0x20], rax	       268	shallow.c	FUNCTION_9
0xcd7	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       269	shallow.c	FUNCTION_9
0xcda	          0x8945e8	             mov dword [rbp - 0x18], eax	       269	shallow.c	FUNCTION_9
0xcdd	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       270	shallow.c	FUNCTION_9
0xce4	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       271	shallow.c	FUNCTION_9
0xce7	          0x8945f0	             mov dword [rbp - 0x10], eax	       271	shallow.c	FUNCTION_9
0xcea	        0x488d45e0	                   lea rax, [rbp - 0x20]	       272	shallow.c	FUNCTION_9	CALL_1
0xcee	          0x4889c6	                            mov rsi, rax	       272	shallow.c	FUNCTION_9	CALL_1
0xcf1	      0xbf00000000	                              mov edi, 0	       272	shallow.c	FUNCTION_9	CALL_1
0xcf6	      0xe800000000	                          call 0x4000d3b	       272	shallow.c	FUNCTION_9	CALL_1
0xcfb	      0x48837db800	               cmp qword [rbp - 0x48], 0	       273	shallow.c	FUNCTION_9	IF_1
0xd00	            0x7505	                           jne 0x4000d47	       273	shallow.c	FUNCTION_9	IF_1
0xd02	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       274	shallow.c	FUNCTION_9	IF_1
0xd05	            0xeb6e	                           jmp 0x4000db5	       274	shallow.c	FUNCTION_9	IF_1
0xd07	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       275	shallow.c	FUNCTION_9	FOR_1
0xd0e	            0xeb56	                           jmp 0x4000da6	       275	shallow.c	FUNCTION_9	FOR_1
0xd10	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0xd14	          0x488b08	                    mov rcx, qword [rax]	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0xd17	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0xd1a	          0x4863d0	                         movsxd rdx, eax	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0xd1d	          0x4889d0	                            mov rax, rdx	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0xd20	        0x48c1e002	                              shl rax, 2	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0xd24	          0x4801d0	                            add rax, rdx	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0xd27	        0x48c1e002	                              shl rax, 2	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0xd2b	          0x4801c8	                            add rax, rcx	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0xd2e	          0x4889c7	                            mov rdi, rax	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0xd31	      0xe800000000	                          call 0x4000d76	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0xd36	          0x4889c2	                            mov rdx, rax	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0xd39	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0xd3d	          0x4889d6	                            mov rsi, rdx	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0xd40	          0x4889c7	                            mov rdi, rax	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0xd43	      0xe8d6f3ffff	                  call sym.strbuf_addstr	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0xd48	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       277	shallow.c	FUNCTION_9	FOR_1	CALL_4
0xd4c	      0xbe0a000000	                            mov esi, 0xa	       277	shallow.c	FUNCTION_9	FOR_1	CALL_4
0xd51	          0x4889c7	                            mov rdi, rax	       277	shallow.c	FUNCTION_9	FOR_1	CALL_4
0xd54	      0xe857f3ffff	                   call sym.strbuf_addch	       277	shallow.c	FUNCTION_9	FOR_1	CALL_4
0xd59	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       278	shallow.c	FUNCTION_9	FOR_1
0xd5c	          0x83c001	                              add eax, 1	       278	shallow.c	FUNCTION_9	FOR_1
0xd5f	          0x8945ec	             mov dword [rbp - 0x14], eax	       278	shallow.c	FUNCTION_9	FOR_1
0xd62	        0x8345dc01	               add dword [rbp - 0x24], 1	       275	shallow.c	FUNCTION_9	FOR_1
0xd66	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       275	shallow.c	FUNCTION_9	FOR_1
0xd6a	          0x8b4008	                mov eax, dword [rax + 8]	       275	shallow.c	FUNCTION_9	FOR_1
0xd6d	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	       275	shallow.c	FUNCTION_9	FOR_1
0xd70	            0x7f9e	                            jg 0x4000d50	       275	shallow.c	FUNCTION_9	FOR_1
0xd72	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       280	shallow.c	FUNCTION_9
0xd75	        0x488b4df8	                mov rcx, qword [rbp - 8]	       281	shallow.c	FUNCTION_9
0xd79	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       281	shallow.c	FUNCTION_9
0xd82	            0x7405	                            je 0x4000dc9	       281	shallow.c	FUNCTION_9
0xd84	      0xe800000000	                          call 0x4000dc9	       281	shallow.c	FUNCTION_9
0xd89	              0xc9	                                   leave	       281	shallow.c	FUNCTION_9
0xd8a	              0xc3	                                     ret	       281	shallow.c	FUNCTION_9
get_lock_file_path	FOR,0:CALL,1:SWITCH,0:DO,0:WHILE,0:ELSE,0:functions,0:IF,0	10
0x220	              0x55	                                push rbp	       219	lockfile.h	FUNCTION_30
0x221	          0x4889e5	                            mov rbp, rsp	       219	lockfile.h	FUNCTION_30
0x224	        0x4883ec10	                           sub rsp, 0x10	       219	lockfile.h	FUNCTION_30
0x228	        0x48897df8	                mov qword [rbp - 8], rdi	       219	lockfile.h	FUNCTION_30
0x22c	        0x488b45f8	                mov rax, qword [rbp - 8]	       220	lockfile.h	FUNCTION_30	CALL_1
0x230	          0x488b00	                    mov rax, qword [rax]	       220	lockfile.h	FUNCTION_30	CALL_1
0x233	          0x4889c7	                            mov rdi, rax	       220	lockfile.h	FUNCTION_30	CALL_1
0x236	      0xe800000000	                          call 0x400027b	       220	lockfile.h	FUNCTION_30	CALL_1
0x23b	              0xc9	                                   leave	       221	lockfile.h	FUNCTION_30
0x23c	              0xc3	                                     ret	       221	lockfile.h	FUNCTION_30
strbuf_addstr	FOR,0:CALL,2:SWITCH,0:DO,0:WHILE,0:ELSE,0:functions,0:IF,0	17
0x11e	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_69
0x11f	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_69
0x122	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_69
0x126	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_69
0x12a	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_69
0x12e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_69	CALL_2
0x132	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_69	CALL_2
0x135	      0xe800000000	                          call 0x400017a	       279	strbuf.h	FUNCTION_69	CALL_2
0x13a	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_69	CALL_2
0x13d	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_69	CALL_2
0x141	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_69	CALL_2
0x145	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_69	CALL_2
0x148	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_69	CALL_2
0x14b	      0xe800000000	                          call 0x4000190	       279	strbuf.h	FUNCTION_69	CALL_2
0x150	              0x90	                                     nop	       280	strbuf.h	FUNCTION_69
0x151	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_69
0x152	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_69
parse_commit	FOR,0:CALL,1:SWITCH,0:DO,0:WHILE,0:ELSE,0:functions,0:IF,0	10
0x258	              0x55	                                push rbp	        74	commit.h	FUNCTION_76
0x259	          0x4889e5	                            mov rbp, rsp	        74	commit.h	FUNCTION_76
0x25c	        0x4883ec10	                           sub rsp, 0x10	        74	commit.h	FUNCTION_76
0x260	        0x48897df8	                mov qword [rbp - 8], rdi	        74	commit.h	FUNCTION_76
0x264	        0x488b45f8	                mov rax, qword [rbp - 8]	        75	commit.h	FUNCTION_76	CALL_1
0x268	      0xbe00000000	                              mov esi, 0	        75	commit.h	FUNCTION_76	CALL_1
0x26d	          0x4889c7	                            mov rdi, rax	        75	commit.h	FUNCTION_76	CALL_1
0x270	      0xe800000000	                          call 0x40002b5	        75	commit.h	FUNCTION_76	CALL_1
0x275	              0xc9	                                   leave	        76	commit.h	FUNCTION_76
0x276	              0xc3	                                     ret	        76	commit.h	FUNCTION_76
strbuf_avail	FOR,0:CALL,0:SWITCH,0:DO,0:WHILE,0:ELSE,0:functions,0:IF,0	18
0x7a	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_66
0x7b	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_66
0x7e	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_66
0x82	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_66
0x86	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_66
0x89	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_66
0x8c	            0x741b	                            je 0x40000e9	       141	strbuf.h	FUNCTION_66
0x8e	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_66
0x92	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_66
0x95	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_66
0x99	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_66
0x9d	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_66
0xa0	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_66
0xa3	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_66
0xa7	            0xeb05	                           jmp 0x40000ee	       141	strbuf.h	FUNCTION_66
0xa9	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_66
0xae	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_66
0xaf	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_66
advertise_shallow_grafts_cb	FOR,0:CALL,2:SWITCH,0:DO,0:WHILE,0:ELSE,0:functions,0:IF,1	24
0xf9a	              0x55	                                push rbp	       336	shallow.c	FUNCTION_13
0xf9b	          0x4889e5	                            mov rbp, rsp	       336	shallow.c	FUNCTION_13
0xf9e	        0x4883ec20	                           sub rsp, 0x20	       336	shallow.c	FUNCTION_13
0xfa2	        0x48897de8	             mov qword [rbp - 0x18], rdi	       336	shallow.c	FUNCTION_13
0xfa6	        0x488975e0	             mov qword [rbp - 0x20], rsi	       336	shallow.c	FUNCTION_13
0xfaa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       337	shallow.c	FUNCTION_13
0xfae	            0x8b00	                    mov eax, dword [rax]	       337	shallow.c	FUNCTION_13
0xfb0	          0x8945fc	                mov dword [rbp - 4], eax	       337	shallow.c	FUNCTION_13
0xfb3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       338	shallow.c	FUNCTION_13	IF_1
0xfb7	          0x8b4014	            mov eax, dword [rax + 0x14] 	       338	shallow.c	FUNCTION_13	IF_1
0xfba	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       338	shallow.c	FUNCTION_13	IF_1
0xfbd	            0x7523	                           jne 0x4001022	       338	shallow.c	FUNCTION_13	IF_1
0xfbf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       339	shallow.c	FUNCTION_13	CALL_2
0xfc3	          0x4889c7	                            mov rdi, rax	       339	shallow.c	FUNCTION_13	CALL_2
0xfc6	      0xe800000000	                          call 0x400100b	       339	shallow.c	FUNCTION_13	CALL_2
0xfcb	          0x4889c2	                            mov rdx, rax	       339	shallow.c	FUNCTION_13	CALL_2
0xfce	          0x8b45fc	                mov eax, dword [rbp - 4]	       339	shallow.c	FUNCTION_13	CALL_2
0xfd1	      0xbe00000000	                              mov esi, 0	       339	shallow.c	FUNCTION_13	CALL_2
0xfd6	            0x89c7	                            mov edi, eax	       339	shallow.c	FUNCTION_13	CALL_2
0xfd8	      0xb800000000	                              mov eax, 0	       339	shallow.c	FUNCTION_13	CALL_2
0xfdd	      0xe800000000	                          call 0x4001022	       339	shallow.c	FUNCTION_13	CALL_2
0xfe2	      0xb800000000	                              mov eax, 0	       340	shallow.c	FUNCTION_13
0xfe7	              0xc9	                                   leave	       341	shallow.c	FUNCTION_13
0xfe8	              0xc3	                                     ret	       341	shallow.c	FUNCTION_13
xmks_tempfile	FOR,0:CALL,1:SWITCH,0:DO,0:WHILE,0:ELSE,0:functions,0:IF,0	10
0x1d4	              0x55	                                push rbp	       188	tempfile.h	FUNCTION_83
0x1d5	          0x4889e5	                            mov rbp, rsp	       188	tempfile.h	FUNCTION_83
0x1d8	        0x4883ec10	                           sub rsp, 0x10	       188	tempfile.h	FUNCTION_83
0x1dc	        0x48897df8	                mov qword [rbp - 8], rdi	       188	tempfile.h	FUNCTION_83
0x1e0	        0x488b45f8	                mov rax, qword [rbp - 8]	       189	tempfile.h	FUNCTION_83	CALL_1
0x1e4	      0xbe80010000	                          mov esi, 0x180	       189	tempfile.h	FUNCTION_83	CALL_1
0x1e9	          0x4889c7	                            mov rdi, rax	       189	tempfile.h	FUNCTION_83	CALL_1
0x1ec	      0xe800000000	                          call 0x4000231	       189	tempfile.h	FUNCTION_83	CALL_1
0x1f1	              0xc9	                                   leave	       190	tempfile.h	FUNCTION_83
0x1f2	              0xc3	                                     ret	       190	tempfile.h	FUNCTION_83
write_one_shallow	FOR,0:CALL,7:SWITCH,0:DO,0:WHILE,0:ELSE,1:functions,0:IF,5	81
0xb8f	              0x55	                                push rbp	       238	shallow.c	FUNCTION_8
0xb90	          0x4889e5	                            mov rbp, rsp	       238	shallow.c	FUNCTION_8
0xb93	        0x4883ec30	                           sub rsp, 0x30	       238	shallow.c	FUNCTION_8
0xb97	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       238	shallow.c	FUNCTION_8
0xb9b	        0x488975d0	             mov qword [rbp - 0x30], rsi	       238	shallow.c	FUNCTION_8
0xb9f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       239	shallow.c	FUNCTION_8
0xba3	        0x488945e8	             mov qword [rbp - 0x18], rax	       239	shallow.c	FUNCTION_8
0xba7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       240	shallow.c	FUNCTION_8	CALL_1
0xbab	          0x4889c7	                            mov rdi, rax	       240	shallow.c	FUNCTION_8	CALL_1
0xbae	      0xe800000000	                          call 0x4000bf3	       240	shallow.c	FUNCTION_8	CALL_1
0xbb3	        0x488945f0	             mov qword [rbp - 0x10], rax	       240	shallow.c	FUNCTION_8	CALL_1
0xbb7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       241	shallow.c	FUNCTION_8	IF_1
0xbbb	          0x8b4014	            mov eax, dword [rax + 0x14] 	       241	shallow.c	FUNCTION_8	IF_1
0xbbe	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       241	shallow.c	FUNCTION_8	IF_1
0xbc1	            0x740a	                            je 0x4000c0d	       241	shallow.c	FUNCTION_8	IF_1
0xbc3	      0xb800000000	                              mov eax, 0	       242	shallow.c	FUNCTION_8	IF_1
0xbc8	      0xe9db000000	                           jmp 0x4000ce8	       242	shallow.c	FUNCTION_8	IF_1
0xbcd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       243	shallow.c	FUNCTION_8	IF_2
0xbd1	          0x8b4010	            mov eax, dword [rax + 0x10] 	       243	shallow.c	FUNCTION_8	IF_2
0xbd4	          0x83e001	                              and eax, 1	       243	shallow.c	FUNCTION_8	IF_2
0xbd7	            0x85c0	                           test eax, eax	       243	shallow.c	FUNCTION_8	IF_2
0xbd9	            0x7463	                            je 0x4000c7e	       243	shallow.c	FUNCTION_8	IF_2
0xbdb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       244	shallow.c	FUNCTION_8	IF_2	CALL_2
0xbdf	          0x4889c7	                            mov rdi, rax	       244	shallow.c	FUNCTION_8	IF_2	CALL_2
0xbe2	      0xe800000000	                          call 0x4000c27	       244	shallow.c	FUNCTION_8	IF_2	CALL_2
0xbe7	        0x488945f8	                mov qword [rbp - 8], rax	       244	shallow.c	FUNCTION_8	IF_2	CALL_2
0xbeb	      0x48837df800	                  cmp qword [rbp - 8], 0	       245	shallow.c	FUNCTION_8	IF_2	IF_3
0xbf0	            0x7415	                            je 0x4000c47	       245	shallow.c	FUNCTION_8	IF_2	IF_3
0xbf2	        0x488b45f8	                mov rax, qword [rbp - 8]	       245	shallow.c	FUNCTION_8	IF_2	IF_3
0xbf6	            0x8b00	                    mov eax, dword [rax]	       245	shallow.c	FUNCTION_8	IF_2	IF_3
0xbf8	          0xc1e804	                              shr eax, 4	       245	shallow.c	FUNCTION_8	IF_2	IF_3
0xbfb	      0x25ffffff07	                      and eax, 0x7ffffff	       245	shallow.c	FUNCTION_8	IF_2	IF_3
0xc00	          0x83e001	                              and eax, 1	       245	shallow.c	FUNCTION_8	IF_2	IF_3
0xc03	            0x85c0	                           test eax, eax	       245	shallow.c	FUNCTION_8	IF_2	IF_3
0xc05	            0x7537	                           jne 0x4000c7e	       245	shallow.c	FUNCTION_8	IF_2	IF_3
0xc07	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       246	shallow.c	FUNCTION_8	IF_2	IF_3	IF_4
0xc0b	          0x8b4010	            mov eax, dword [rax + 0x10] 	       246	shallow.c	FUNCTION_8	IF_2	IF_3	IF_4
0xc0e	          0x83e002	                              and eax, 2	       246	shallow.c	FUNCTION_8	IF_2	IF_3	IF_4
0xc11	            0x85c0	                           test eax, eax	       246	shallow.c	FUNCTION_8	IF_2	IF_3	IF_4
0xc13	            0x7422	                            je 0x4000c77	       246	shallow.c	FUNCTION_8	IF_2	IF_3	IF_4
0xc15	        0x488b45f8	                mov rax, qword [rbp - 8]	       248	shallow.c	FUNCTION_8	IF_2	IF_3	CALL_4
0xc19	        0x4883c004	                              add rax, 4	       248	shallow.c	FUNCTION_8	IF_2	IF_3	CALL_4
0xc1d	          0x4889c7	                            mov rdi, rax	       247	shallow.c	FUNCTION_8	IF_2	IF_3	IF_4	CALL_3
0xc20	      0xe800000000	                          call 0x4000c65	       247	shallow.c	FUNCTION_8	IF_2	IF_3	IF_4	CALL_3
0xc25	          0x4889c6	                            mov rsi, rax	       247	shallow.c	FUNCTION_8	IF_2	IF_3	IF_4	CALL_3
0xc28	      0xbf00000000	                              mov edi, 0	       247	shallow.c	FUNCTION_8	IF_2	IF_3	IF_4	CALL_3
0xc2d	      0xb800000000	                              mov eax, 0	       247	shallow.c	FUNCTION_8	IF_2	IF_3	IF_4	CALL_3
0xc32	      0xe800000000	                          call 0x4000c77	       247	shallow.c	FUNCTION_8	IF_2	IF_3	IF_4	CALL_3
0xc37	      0xb800000000	                              mov eax, 0	       249	shallow.c	FUNCTION_8	IF_2	IF_3
0xc3c	            0xeb6a	                           jmp 0x4000ce8	       249	shallow.c	FUNCTION_8	IF_2	IF_3
0xc3e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       252	shallow.c	FUNCTION_8
0xc42	          0x8b400c	              mov eax, dword [rax + 0xc]	       252	shallow.c	FUNCTION_8
0xc45	          0x8d5001	                      lea edx, [rax + 1]	       252	shallow.c	FUNCTION_8
0xc48	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       252	shallow.c	FUNCTION_8
0xc4c	          0x89500c	              mov dword [rax + 0xc], edx	       252	shallow.c	FUNCTION_8
0xc4f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       253	shallow.c	FUNCTION_8	IF_5
0xc53	          0x8b4008	                mov eax, dword [rax + 8]	       253	shallow.c	FUNCTION_8	IF_5
0xc56	            0x85c0	                           test eax, eax	       253	shallow.c	FUNCTION_8	IF_5
0xc58	            0x741f	                            je 0x4000cb9	       253	shallow.c	FUNCTION_8	IF_5
0xc5a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       254	shallow.c	FUNCTION_8	CALL_5
0xc5e	          0x488b00	                    mov rax, qword [rax]	       254	shallow.c	FUNCTION_8	CALL_5
0xc61	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       254	shallow.c	FUNCTION_8	CALL_5
0xc65	      0xbe00000000	                              mov esi, 0	       254	shallow.c	FUNCTION_8	CALL_5
0xc6a	          0x4889c7	                            mov rdi, rax	       254	shallow.c	FUNCTION_8	CALL_5
0xc6d	      0xb800000000	                              mov eax, 0	       254	shallow.c	FUNCTION_8	CALL_5
0xc72	      0xe800000000	                          call 0x4000cb7	       254	shallow.c	FUNCTION_8	CALL_5
0xc77	            0xeb2a	                           jmp 0x4000ce3	       254	shallow.c	FUNCTION_8	CALL_5
0xc79	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       256	shallow.c	FUNCTION_8	ELSE_1	CALL_6
0xc7d	          0x488b00	                    mov rax, qword [rax]	       256	shallow.c	FUNCTION_8	ELSE_1	CALL_6
0xc80	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       256	shallow.c	FUNCTION_8	ELSE_1	CALL_6
0xc84	          0x4889d6	                            mov rsi, rdx	       256	shallow.c	FUNCTION_8	ELSE_1	CALL_6
0xc87	          0x4889c7	                            mov rdi, rax	       256	shallow.c	FUNCTION_8	ELSE_1	CALL_6
0xc8a	      0xe88ff4ffff	                  call sym.strbuf_addstr	       256	shallow.c	FUNCTION_8	ELSE_1	CALL_6
0xc8f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       257	shallow.c	FUNCTION_8	ELSE_1	CALL_7
0xc93	          0x488b00	                    mov rax, qword [rax]	       257	shallow.c	FUNCTION_8	ELSE_1	CALL_7
0xc96	      0xbe0a000000	                            mov esi, 0xa	       257	shallow.c	FUNCTION_8	ELSE_1	CALL_7
0xc9b	          0x4889c7	                            mov rdi, rax	       257	shallow.c	FUNCTION_8	ELSE_1	CALL_7
0xc9e	      0xe80df4ffff	                   call sym.strbuf_addch	       257	shallow.c	FUNCTION_8	ELSE_1	CALL_7
0xca3	      0xb800000000	                              mov eax, 0	       259	shallow.c	FUNCTION_8
0xca8	              0xc9	                                   leave	       260	shallow.c	FUNCTION_8
0xca9	              0xc3	                                     ret	       260	shallow.c	FUNCTION_8
show_commit	FOR,0:CALL,1:SWITCH,0:DO,0:WHILE,0:ELSE,0:functions,0:IF,0	13
0x7d0	              0x55	                                push rbp	       143	shallow.c	FUNCTION_5
0x7d1	          0x4889e5	                            mov rbp, rsp	       143	shallow.c	FUNCTION_5
0x7d4	        0x4883ec10	                           sub rsp, 0x10	       143	shallow.c	FUNCTION_5
0x7d8	        0x48897df8	                mov qword [rbp - 8], rdi	       143	shallow.c	FUNCTION_5
0x7dc	        0x488975f0	             mov qword [rbp - 0x10], rsi	       143	shallow.c	FUNCTION_5
0x7e0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       144	shallow.c	FUNCTION_5	CALL_1
0x7e4	        0x488b45f8	                mov rax, qword [rbp - 8]	       144	shallow.c	FUNCTION_5	CALL_1
0x7e8	          0x4889d6	                            mov rsi, rdx	       144	shallow.c	FUNCTION_5	CALL_1
0x7eb	          0x4889c7	                            mov rdi, rax	       144	shallow.c	FUNCTION_5	CALL_1
0x7ee	      0xe800000000	                          call 0x4000833	       144	shallow.c	FUNCTION_5	CALL_1
0x7f3	              0x90	                                     nop	       145	shallow.c	FUNCTION_5
0x7f4	              0xc9	                                   leave	       145	shallow.c	FUNCTION_5
0x7f5	              0xc3	                                     ret	       145	shallow.c	FUNCTION_5
delayed_reachability_test	FOR,0:CALL,5:SWITCH,0:DO,0:WHILE,0:ELSE,0:functions,0:IF,2	91
0x25e1	              0x55	                                push rbp	       725	shallow.c	FUNCTION_26
0x25e2	          0x4889e5	                            mov rbp, rsp	       725	shallow.c	FUNCTION_26
0x25e5	              0x53	                                push rbx	       725	shallow.c	FUNCTION_26
0x25e6	        0x4883ec48	                           sub rsp, 0x48	       725	shallow.c	FUNCTION_26
0x25ea	        0x48897db8	             mov qword [rbp - 0x48], rdi	       725	shallow.c	FUNCTION_26
0x25ee	          0x8975b4	             mov dword [rbp - 0x4c], esi	       725	shallow.c	FUNCTION_26
0x25f1	    0x64488b042528	                mov rax, qword fs:[0x28]	       725	shallow.c	FUNCTION_26
0x25fa	        0x488945e8	             mov qword [rbp - 0x18], rax	       725	shallow.c	FUNCTION_26
0x25fe	            0x31c0	                            xor eax, eax	       725	shallow.c	FUNCTION_26
0x2600	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       726	shallow.c	FUNCTION_26	IF_1
0x2604	        0x488b4038	            mov rax, qword [rax + 0x38] 	       726	shallow.c	FUNCTION_26	IF_1
0x2608	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       726	shallow.c	FUNCTION_26	IF_1
0x260b	          0x4863d2	                         movsxd rdx, edx	       726	shallow.c	FUNCTION_26	IF_1
0x260e	        0x48c1e202	                              shl rdx, 2	       726	shallow.c	FUNCTION_26	IF_1
0x2612	          0x4801d0	                            add rax, rdx	       726	shallow.c	FUNCTION_26	IF_1
0x2615	            0x8b00	                    mov eax, dword [rax]	       726	shallow.c	FUNCTION_26	IF_1
0x2617	            0x85c0	                           test eax, eax	       726	shallow.c	FUNCTION_26	IF_1
0x2619	     0xf84d8000000	                            je 0x4002737	       726	shallow.c	FUNCTION_26	IF_1
0x261f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x2623	          0x488b00	                    mov rax, qword [rax]	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x2626	          0x488b08	                    mov rcx, qword [rax]	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x2629	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x262c	          0x4863d0	                         movsxd rdx, eax	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x262f	          0x4889d0	                            mov rax, rdx	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x2632	        0x48c1e002	                              shl rax, 2	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x2636	          0x4801d0	                            add rax, rdx	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x2639	        0x48c1e002	                              shl rax, 2	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x263d	          0x4801c8	                            add rax, rcx	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x2640	          0x4889c7	                            mov rdi, rax	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x2643	      0xe800000000	                          call 0x4002688	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x2648	        0x488945c8	             mov qword [rbp - 0x38], rax	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x264c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       729	shallow.c	FUNCTION_26	IF_1	IF_2
0x2650	        0x488b4050	            mov rax, qword [rax + 0x50] 	       729	shallow.c	FUNCTION_26	IF_1	IF_2
0x2654	          0x4885c0	                           test rax, rax	       729	shallow.c	FUNCTION_26	IF_1	IF_2
0x2657	            0x754e	                           jne 0x40026e7	       729	shallow.c	FUNCTION_26	IF_1	IF_2
0x2659	        0x488d45d0	                   lea rax, [rbp - 0x30]	       732	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_2
0x265d	      0xba10000000	                           mov edx, 0x10	       732	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_2
0x2662	      0xbe00000000	                              mov esi, 0	       732	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_2
0x2667	          0x4889c7	                            mov rdi, rax	       732	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_2
0x266a	      0xe800000000	                          call 0x40026af	       732	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_2
0x266f	        0x488d45d0	                   lea rax, [rbp - 0x30]	       733	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_3
0x2673	          0x4889c6	                            mov rsi, rax	       733	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_3
0x2676	      0xbf00000000	                              mov edi, 0	       733	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_3
0x267b	      0xe800000000	                          call 0x40026c0	       733	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_3
0x2680	        0x488d45d0	                   lea rax, [rbp - 0x30]	       734	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_4
0x2684	          0x4889c6	                            mov rsi, rax	       734	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_4
0x2687	      0xbf00000000	                              mov edi, 0	       734	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_4
0x268c	      0xe800000000	                          call 0x40026d1	       734	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_4
0x2691	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       735	shallow.c	FUNCTION_26	IF_1	IF_2
0x2695	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       735	shallow.c	FUNCTION_26	IF_1	IF_2
0x2699	        0x48895050	             mov qword [rax + 0x50], rdx	       735	shallow.c	FUNCTION_26	IF_1	IF_2
0x269d	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       736	shallow.c	FUNCTION_26	IF_1	IF_2
0x26a0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       736	shallow.c	FUNCTION_26	IF_1	IF_2
0x26a4	          0x895058	             mov dword [rax + 0x58], edx	       736	shallow.c	FUNCTION_26	IF_1	IF_2
0x26a7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x26ab	        0x488b4040	            mov rax, qword [rax + 0x40] 	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x26af	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x26b2	          0x4863d2	                         movsxd rdx, edx	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x26b5	        0x48c1e202	                              shl rdx, 2	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x26b9	        0x488d1c10	                    lea rbx, [rax + rdx]	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x26bd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x26c1	        0x488b5050	            mov rdx, qword [rax + 0x50] 	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x26c5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x26c9	          0x8b4858	            mov ecx, dword [rax + 0x58] 	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x26cc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x26d0	            0x89ce	                            mov esi, ecx	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x26d2	          0x4889c7	                            mov rdi, rax	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x26d5	      0xe800000000	                          call 0x400271a	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x26da	            0x8903	                    mov dword [rbx], eax	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x26dc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       742	shallow.c	FUNCTION_26	IF_1
0x26e0	        0x488b4038	            mov rax, qword [rax + 0x38] 	       742	shallow.c	FUNCTION_26	IF_1
0x26e4	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       742	shallow.c	FUNCTION_26	IF_1
0x26e7	          0x4863d2	                         movsxd rdx, edx	       742	shallow.c	FUNCTION_26	IF_1
0x26ea	        0x48c1e202	                              shl rdx, 2	       742	shallow.c	FUNCTION_26	IF_1
0x26ee	          0x4801d0	                            add rax, rdx	       742	shallow.c	FUNCTION_26	IF_1
0x26f1	    0xc70000000000	                      mov dword [rax], 0	       742	shallow.c	FUNCTION_26	IF_1
0x26f7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       744	shallow.c	FUNCTION_26
0x26fb	        0x488b4040	            mov rax, qword [rax + 0x40] 	       744	shallow.c	FUNCTION_26
0x26ff	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       744	shallow.c	FUNCTION_26
0x2702	          0x4863d2	                         movsxd rdx, edx	       744	shallow.c	FUNCTION_26
0x2705	        0x48c1e202	                              shl rdx, 2	       744	shallow.c	FUNCTION_26
0x2709	          0x4801d0	                            add rax, rdx	       744	shallow.c	FUNCTION_26
0x270c	            0x8b00	                    mov eax, dword [rax]	       744	shallow.c	FUNCTION_26
0x270e	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       745	shallow.c	FUNCTION_26
0x2712	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       745	shallow.c	FUNCTION_26
0x271b	            0x7405	                            je 0x4002762	       745	shallow.c	FUNCTION_26
0x271d	      0xe800000000	                          call 0x4002762	       745	shallow.c	FUNCTION_26
0x2722	        0x4883c448	                           add rsp, 0x48	       745	shallow.c	FUNCTION_26
0x2726	              0x5b	                                 pop rbx	       745	shallow.c	FUNCTION_26
0x2727	              0x5d	                                 pop rbp	       745	shallow.c	FUNCTION_26
0x2728	              0xc3	                                     ret	       745	shallow.c	FUNCTION_26
prepare_shallow_info	FOR,1:CALL,6:SWITCH,0:DO,0:WHILE,0:ELSE,1:functions,0:IF,3	116
0x1130	              0x55	                                push rbp	       387	shallow.c	FUNCTION_16
0x1131	          0x4889e5	                            mov rbp, rsp	       387	shallow.c	FUNCTION_16
0x1134	        0x4883ec20	                           sub rsp, 0x20	       387	shallow.c	FUNCTION_16
0x1138	        0x48897de8	             mov qword [rbp - 0x18], rdi	       387	shallow.c	FUNCTION_16
0x113c	        0x488975e0	             mov qword [rbp - 0x20], rsi	       387	shallow.c	FUNCTION_16
0x1140	      0xbf00000000	                              mov edi, 0	       389	shallow.c	FUNCTION_16	CALL_1
0x1145	      0xe809f0ffff	                  call sym.trace_pass_fl	       389	shallow.c	FUNCTION_16	CALL_1
0x114a	            0x85c0	                           test eax, eax	       389	shallow.c	FUNCTION_16	CALL_1
0x114c	            0x741e	                            je 0x40011ac	       389	shallow.c	FUNCTION_16	CALL_1
0x114e	      0xb900000000	                              mov ecx, 0	       389	shallow.c	FUNCTION_16	CALL_1
0x1153	      0xba00000000	                              mov edx, 0	       389	shallow.c	FUNCTION_16	CALL_1
0x1158	      0xbe85010000	                          mov esi, 0x185	       389	shallow.c	FUNCTION_16	CALL_1
0x115d	      0xbf00000000	                              mov edi, 0	       389	shallow.c	FUNCTION_16	CALL_1
0x1162	      0xb800000000	                              mov eax, 0	       389	shallow.c	FUNCTION_16	CALL_1
0x1167	      0xe800000000	                          call 0x40011ac	       389	shallow.c	FUNCTION_16	CALL_1
0x116c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	shallow.c	FUNCTION_16	CALL_2
0x1170	      0xba60000000	                           mov edx, 0x60	       390	shallow.c	FUNCTION_16	CALL_2
0x1175	      0xbe00000000	                              mov esi, 0	       390	shallow.c	FUNCTION_16	CALL_2
0x117a	          0x4889c7	                            mov rdi, rax	       390	shallow.c	FUNCTION_16	CALL_2
0x117d	      0xe800000000	                          call 0x40011c2	       390	shallow.c	FUNCTION_16	CALL_2
0x1182	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       391	shallow.c	FUNCTION_16
0x1186	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       391	shallow.c	FUNCTION_16
0x118a	          0x488910	                    mov qword [rax], rdx	       391	shallow.c	FUNCTION_16
0x118d	      0x48837de000	               cmp qword [rbp - 0x20], 0	       392	shallow.c	FUNCTION_16	IF_1
0x1192	     0xf842f010000	                            je 0x4001307	       392	shallow.c	FUNCTION_16	IF_1
0x1198	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       394	shallow.c	FUNCTION_16	CALL_3
0x119c	          0x8b4008	                mov eax, dword [rax + 8]	       394	shallow.c	FUNCTION_16	CALL_3
0x119f	            0x4898	                                    cdqe	       394	shallow.c	FUNCTION_16	CALL_3
0x11a1	          0x4889c6	                            mov rsi, rax	       394	shallow.c	FUNCTION_16	CALL_3
0x11a4	      0xbf04000000	                              mov edi, 4	       394	shallow.c	FUNCTION_16	CALL_3
0x11a9	      0xe852eeffff	                        call sym.st_mult	       394	shallow.c	FUNCTION_16	CALL_3
0x11ae	          0x4889c7	                            mov rdi, rax	       394	shallow.c	FUNCTION_16	CALL_3
0x11b1	      0xe800000000	                          call 0x40011f6	       394	shallow.c	FUNCTION_16	CALL_3
0x11b6	          0x4889c2	                            mov rdx, rax	       394	shallow.c	FUNCTION_16	CALL_3
0x11b9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       394	shallow.c	FUNCTION_16	CALL_3
0x11bd	        0x48895008	                mov qword [rax + 8], rdx	       394	shallow.c	FUNCTION_16	CALL_3
0x11c1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       395	shallow.c	FUNCTION_16	CALL_4
0x11c5	          0x8b4008	                mov eax, dword [rax + 8]	       395	shallow.c	FUNCTION_16	CALL_4
0x11c8	            0x4898	                                    cdqe	       395	shallow.c	FUNCTION_16	CALL_4
0x11ca	          0x4889c6	                            mov rsi, rax	       395	shallow.c	FUNCTION_16	CALL_4
0x11cd	      0xbf04000000	                              mov edi, 4	       395	shallow.c	FUNCTION_16	CALL_4
0x11d2	      0xe829eeffff	                        call sym.st_mult	       395	shallow.c	FUNCTION_16	CALL_4
0x11d7	          0x4889c7	                            mov rdi, rax	       395	shallow.c	FUNCTION_16	CALL_4
0x11da	      0xe800000000	                          call 0x400121f	       395	shallow.c	FUNCTION_16	CALL_4
0x11df	          0x4889c2	                            mov rdx, rax	       395	shallow.c	FUNCTION_16	CALL_4
0x11e2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       395	shallow.c	FUNCTION_16	CALL_4
0x11e6	        0x48895018	             mov qword [rax + 0x18], rdx	       395	shallow.c	FUNCTION_16	CALL_4
0x11ea	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       396	shallow.c	FUNCTION_16	FOR_1
0x11f1	      0xe9bf000000	                           jmp 0x40012f5	       396	shallow.c	FUNCTION_16	FOR_1
0x11f6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_5
0x11fa	          0x488b08	                    mov rcx, qword [rax]	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_5
0x11fd	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_5
0x1200	          0x4863d0	                         movsxd rdx, eax	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_5
0x1203	          0x4889d0	                            mov rax, rdx	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_5
0x1206	        0x48c1e002	                              shl rax, 2	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_5
0x120a	          0x4801d0	                            add rax, rdx	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_5
0x120d	        0x48c1e002	                              shl rax, 2	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_5
0x1211	          0x4801c8	                            add rax, rcx	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_5
0x1214	          0x4889c7	                            mov rdi, rax	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_5
0x1217	      0xe800000000	                          call 0x400125c	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_5
0x121c	            0x85c0	                           test eax, eax	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_5
0x121e	            0x7466	                            je 0x40012c6	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_5
0x1220	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       399	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_6
0x1224	          0x488b08	                    mov rcx, qword [rax]	       399	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_6
0x1227	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       399	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_6
0x122a	          0x4863d0	                         movsxd rdx, eax	       399	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_6
0x122d	          0x4889d0	                            mov rax, rdx	       399	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_6
0x1230	        0x48c1e002	                              shl rax, 2	       399	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_6
0x1234	          0x4801d0	                            add rax, rdx	       399	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_6
0x1237	        0x48c1e002	                              shl rax, 2	       399	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_6
0x123b	          0x4801c8	                            add rax, rcx	       399	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_6
0x123e	          0x4889c7	                            mov rdi, rax	       399	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_6
0x1241	      0xe800000000	                          call 0x4001286	       399	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_6
0x1246	        0x488945f8	                mov qword [rbp - 8], rax	       399	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_6
0x124a	      0x48837df800	                  cmp qword [rbp - 8], 0	       400	shallow.c	FUNCTION_16	FOR_1	IF_2	IF_3
0x124f	            0x740b	                            je 0x400129c	       400	shallow.c	FUNCTION_16	FOR_1	IF_2	IF_3
0x1251	        0x488b45f8	                mov rax, qword [rbp - 8]	       400	shallow.c	FUNCTION_16	FOR_1	IF_2	IF_3
0x1255	          0x8b4014	            mov eax, dword [rax + 0x14] 	       400	shallow.c	FUNCTION_16	FOR_1	IF_2	IF_3
0x1258	            0x85c0	                           test eax, eax	       400	shallow.c	FUNCTION_16	FOR_1	IF_2	IF_3
0x125a	            0x7854	                            js 0x40012f0	       400	shallow.c	FUNCTION_16	FOR_1	IF_2	IF_3
0x125c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x1260	        0x488b7008	                mov rsi, qword [rax + 8]	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x1264	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x1268	          0x8b4010	            mov eax, dword [rax + 0x10] 	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x126b	          0x8d4801	                      lea ecx, [rax + 1]	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x126e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x1272	          0x894a10	             mov dword [rdx + 0x10], ecx	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x1275	            0x4898	                                    cdqe	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x1277	        0x48c1e002	                              shl rax, 2	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x127b	        0x488d1406	                    lea rdx, [rsi + rax]	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x127f	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x1282	            0x8902	                    mov dword [rdx], eax	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x1284	            0xeb2b	                           jmp 0x40012f1	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x1286	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x128a	        0x488b7018	            mov rsi, qword [rax + 0x18] 	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x128e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x1292	          0x8b4020	            mov eax, dword [rax + 0x20] 	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x1295	          0x8d4801	                      lea ecx, [rax + 1]	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x1298	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x129c	          0x894a20	             mov dword [rdx + 0x20], ecx	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x129f	            0x4898	                                    cdqe	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x12a1	        0x48c1e002	                              shl rax, 2	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x12a5	        0x488d1406	                    lea rdx, [rsi + rax]	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x12a9	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x12ac	            0x8902	                    mov dword [rdx], eax	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x12ae	            0xeb01	                           jmp 0x40012f1	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x12b0	              0x90	                                     nop	       401	shallow.c	FUNCTION_16	FOR_1	IF_2	IF_3
0x12b1	        0x8345f401	                add dword [rbp - 0xc], 1	       396	shallow.c	FUNCTION_16	FOR_1
0x12b5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       396	shallow.c	FUNCTION_16	FOR_1
0x12b9	          0x8b4008	                mov eax, dword [rax + 8]	       396	shallow.c	FUNCTION_16	FOR_1
0x12bc	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       396	shallow.c	FUNCTION_16	FOR_1
0x12bf	     0xf8f31ffffff	                            jg 0x4001236	       396	shallow.c	FUNCTION_16	FOR_1
0x12c5	            0xeb01	                           jmp 0x4001308	       396	shallow.c	FUNCTION_16	FOR_1
0x12c7	              0x90	                                     nop	       393	shallow.c	FUNCTION_16	IF_1
0x12c8	              0xc9	                                   leave	       406	shallow.c	FUNCTION_16	ELSE_1
0x12c9	              0xc3	                                     ret	       406	shallow.c	FUNCTION_16	ELSE_1
