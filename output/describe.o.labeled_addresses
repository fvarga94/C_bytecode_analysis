skip_prefix	FOR,0:ELSE,0:DO,1:CALL,0:functions,0:IF,1:WHILE,0:SWITCH,0	27
0x0	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_7
0x1	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_7
0x4	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_7
0x8	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_7
0xc	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_7
0x10	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x14	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x17	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x19	            0x7512	                           jne 0x400006d	       484	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x1b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x1f	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x23	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x26	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x2b	            0xeb27	                           jmp 0x4000094	       486	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x2d	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_7	DO_1
0x31	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_7	DO_1
0x35	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_7	DO_1
0x39	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_7	DO_1
0x3c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_7	DO_1
0x40	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_7	DO_1
0x44	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_7	DO_1
0x48	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_7	DO_1
0x4b	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_7	DO_1
0x4d	            0x74c1	                            je 0x4000050	       488	git-compat-util.h	FUNCTION_7	DO_1
0x4f	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_7
0x54	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_7
0x55	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_7
strbuf_addstr	FOR,0:ELSE,0:DO,0:CALL,2:functions,0:IF,0:WHILE,0:SWITCH,0	17
0x90	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_32
0x91	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_32
0x94	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_32
0x98	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_32
0x9c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_32
0xa0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_32	CALL_2
0xa4	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_32	CALL_2
0xa7	      0xe800000000	                          call 0x40000ec	       279	strbuf.h	FUNCTION_32	CALL_2
0xac	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_32	CALL_2
0xaf	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_32	CALL_2
0xb3	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_32	CALL_2
0xb7	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_32	CALL_2
0xba	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_32	CALL_2
0xbd	      0xe800000000	                          call 0x4000102	       279	strbuf.h	FUNCTION_32	CALL_2
0xc2	              0x90	                                     nop	       280	strbuf.h	FUNCTION_32
0xc3	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_32
0xc4	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_32
process_commit	FOR,0:ELSE,0:DO,0:CALL,0:functions,0:IF,0:WHILE,0:SWITCH,0	17
0x1570	              0x55	                                push rbp	       451	describe.c	FUNCTION_49
0x1571	          0x4889e5	                            mov rbp, rsp	       451	describe.c	FUNCTION_49
0x1574	        0x48897de8	             mov qword [rbp - 0x18], rdi	       451	describe.c	FUNCTION_49
0x1578	        0x488975e0	             mov qword [rbp - 0x20], rsi	       451	describe.c	FUNCTION_49
0x157c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       452	describe.c	FUNCTION_49
0x1580	        0x488945f8	                mov qword [rbp - 8], rax	       452	describe.c	FUNCTION_49
0x1584	        0x488b45f8	                mov rax, qword [rbp - 8]	       453	describe.c	FUNCTION_49
0x1588	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       453	describe.c	FUNCTION_49
0x158c	        0x488b4a04	                mov rcx, qword [rdx + 4]	       453	describe.c	FUNCTION_49
0x1590	          0x488908	                    mov qword [rax], rcx	       453	describe.c	FUNCTION_49
0x1593	        0x488b4a0c	              mov rcx, qword [rdx + 0xc]	       453	describe.c	FUNCTION_49
0x1597	        0x48894808	                mov qword [rax + 8], rcx	       453	describe.c	FUNCTION_49
0x159b	          0x8b5214	            mov edx, dword [rdx + 0x14] 	       453	describe.c	FUNCTION_49
0x159e	          0x895010	             mov dword [rax + 0x10], edx	       453	describe.c	FUNCTION_49
0x15a1	              0x90	                                     nop	       454	describe.c	FUNCTION_49
0x15a2	              0x5d	                                 pop rbp	       454	describe.c	FUNCTION_49
0x15a3	              0xc3	                                     ret	       454	describe.c	FUNCTION_49
commit_name_cmp	FOR,0:ELSE,0:DO,0:CALL,1:functions,0:IF,0:WHILE,0:SWITCH,0	24
0x2e8	              0x55	                                push rbp	        64	describe.c	FUNCTION_39
0x2e9	          0x4889e5	                            mov rbp, rsp	        64	describe.c	FUNCTION_39
0x2ec	        0x4883ec30	                           sub rsp, 0x30	        64	describe.c	FUNCTION_39
0x2f0	        0x48897de8	             mov qword [rbp - 0x18], rdi	        64	describe.c	FUNCTION_39
0x2f4	        0x488975e0	             mov qword [rbp - 0x20], rsi	        64	describe.c	FUNCTION_39
0x2f8	        0x488955d8	             mov qword [rbp - 0x28], rdx	        64	describe.c	FUNCTION_39
0x2fc	        0x48894dd0	             mov qword [rbp - 0x30], rcx	        64	describe.c	FUNCTION_39
0x300	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        65	describe.c	FUNCTION_39
0x304	        0x488945f0	             mov qword [rbp - 0x10], rax	        65	describe.c	FUNCTION_39
0x308	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        66	describe.c	FUNCTION_39
0x30c	        0x488945f8	                mov qword [rbp - 8], rax	        66	describe.c	FUNCTION_39
0x310	      0x48837dd000	               cmp qword [rbp - 0x30], 0	        68	describe.c	FUNCTION_39	CALL_1
0x315	            0x750a	                           jne 0x4000361	        68	describe.c	FUNCTION_39	CALL_1
0x317	        0x488b45f8	                mov rax, qword [rbp - 8]	        68	describe.c	FUNCTION_39	CALL_1
0x31b	        0x4883c010	                           add rax, 0x10	        68	describe.c	FUNCTION_39	CALL_1
0x31f	            0xeb04	                           jmp 0x4000365	        68	describe.c	FUNCTION_39	CALL_1
0x321	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        68	describe.c	FUNCTION_39	CALL_1
0x325	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        68	describe.c	FUNCTION_39	CALL_1
0x329	        0x4883c210	                           add rdx, 0x10	        68	describe.c	FUNCTION_39	CALL_1
0x32d	          0x4889c6	                            mov rsi, rax	        68	describe.c	FUNCTION_39	CALL_1
0x330	          0x4889d7	                            mov rdi, rdx	        68	describe.c	FUNCTION_39	CALL_1
0x333	      0xe81bffffff	                         call sym.oidcmp	        68	describe.c	FUNCTION_39	CALL_1
0x338	              0xc9	                                   leave	        69	describe.c	FUNCTION_39
0x339	              0xc3	                                     ret	        69	describe.c	FUNCTION_39
hashmap_get_from_hash	FOR,0:ELSE,0:DO,0:CALL,2:functions,0:IF,0:WHILE,0:SWITCH,0	26
0x16c	              0x55	                                push rbp	       305	hashmap.h	FUNCTION_57
0x16d	          0x4889e5	                            mov rbp, rsp	       305	hashmap.h	FUNCTION_57
0x170	        0x4883ec40	                           sub rsp, 0x40	       305	hashmap.h	FUNCTION_57
0x174	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       305	hashmap.h	FUNCTION_57
0x178	          0x8975d4	             mov dword [rbp - 0x2c], esi	       305	hashmap.h	FUNCTION_57
0x17b	        0x488955c8	             mov qword [rbp - 0x38], rdx	       305	hashmap.h	FUNCTION_57
0x17f	    0x64488b042528	                mov rax, qword fs:[0x28]	       305	hashmap.h	FUNCTION_57
0x188	        0x488945f8	                mov qword [rbp - 8], rax	       305	hashmap.h	FUNCTION_57
0x18c	            0x31c0	                            xor eax, eax	       305	hashmap.h	FUNCTION_57
0x18e	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       307	hashmap.h	FUNCTION_57	CALL_1
0x191	        0x488d45e0	                   lea rax, [rbp - 0x20]	       307	hashmap.h	FUNCTION_57	CALL_1
0x195	            0x89d6	                            mov esi, edx	       307	hashmap.h	FUNCTION_57	CALL_1
0x197	          0x4889c7	                            mov rdi, rax	       307	hashmap.h	FUNCTION_57	CALL_1
0x19a	      0xe863ffffff	             call sym.hashmap_entry_init	       307	hashmap.h	FUNCTION_57	CALL_1
0x19f	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       308	hashmap.h	FUNCTION_57	CALL_2
0x1a3	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       308	hashmap.h	FUNCTION_57	CALL_2
0x1a7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       308	hashmap.h	FUNCTION_57	CALL_2
0x1ab	          0x4889ce	                            mov rsi, rcx	       308	hashmap.h	FUNCTION_57	CALL_2
0x1ae	          0x4889c7	                            mov rdi, rax	       308	hashmap.h	FUNCTION_57	CALL_2
0x1b1	      0xe800000000	                          call 0x40001f6	       308	hashmap.h	FUNCTION_57	CALL_2
0x1b6	        0x488b4df8	                mov rcx, qword [rbp - 8]	       309	hashmap.h	FUNCTION_57
0x1ba	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       309	hashmap.h	FUNCTION_57
0x1c3	            0x7405	                            je 0x400020a	       309	hashmap.h	FUNCTION_57
0x1c5	      0xe800000000	                          call 0x400020a	       309	hashmap.h	FUNCTION_57
0x1ca	              0xc9	                                   leave	       309	hashmap.h	FUNCTION_57
0x1cb	              0xc3	                                     ret	       309	hashmap.h	FUNCTION_57
cmd_describe	FOR,0:ELSE,7:DO,0:CALL,68:functions,0:IF,18:WHILE,1:SWITCH,1	400
0x1968	              0x55	                                push rbp	       519	describe.c	FUNCTION_53
0x1969	          0x4889e5	                            mov rbp, rsp	       519	describe.c	FUNCTION_53
0x196c	    0x4881ec200d00	                          sub rsp, 0xd20	       519	describe.c	FUNCTION_53
0x1973	    0x89bdfcf2ffff	            mov dword [rbp - 0xd04], edi	       519	describe.c	FUNCTION_53
0x1979	    0x4889b5f0f2ff	            mov qword [rbp - 0xd10], rsi	       519	describe.c	FUNCTION_53
0x1980	    0x488995e8f2ff	            mov qword [rbp - 0xd18], rdx	       519	describe.c	FUNCTION_53
0x1987	    0x64488b042528	                mov rax, qword fs:[0x28]	       519	describe.c	FUNCTION_53
0x1990	        0x488945f8	                mov qword [rbp - 8], rax	       519	describe.c	FUNCTION_53
0x1994	            0x31c0	                            xor eax, eax	       519	describe.c	FUNCTION_53
0x1996	    0xc7850cf3ffff	              mov dword [rbp - 0xcf4], 0	       520	describe.c	FUNCTION_53
0x19a0	    0x488d9580f3ff	                  lea rdx, [rbp - 0xc80]	       521	describe.c	FUNCTION_53
0x19a7	      0xb800000000	                              mov eax, 0	       521	describe.c	FUNCTION_53
0x19ac	      0xb978000000	                           mov ecx, 0x78	       521	describe.c	FUNCTION_53
0x19b1	          0x4889d7	                            mov rdi, rdx	       521	describe.c	FUNCTION_53
0x19b4	          0xf348ab	              rep stosq qword [rdi], rax	       521	describe.c	FUNCTION_53
0x19b7	    0xc78580f3ffff	              mov dword [rbp - 0xc80], 7	       521	describe.c	FUNCTION_53
0x19c1	    0x48c78588f3ff	              mov qword [rbp - 0xc78], 0	       521	describe.c	FUNCTION_53
0x19cc	    0x488d850cf3ff	                  lea rax, [rbp - 0xcf4]	       521	describe.c	FUNCTION_53
0x19d3	    0x48898590f3ff	            mov qword [rbp - 0xc70], rax	       521	describe.c	FUNCTION_53
0x19da	    0x48c785a0f3ff	              mov qword [rbp - 0xc60], 0	       521	describe.c	FUNCTION_53
0x19e5	    0xc785a8f3ffff	              mov dword [rbp - 0xc58], 2	       521	describe.c	FUNCTION_53
0x19ef	    0x48c785b8f3ff	              mov qword [rbp - 0xc48], 1	       521	describe.c	FUNCTION_53
0x19fa	    0xc785c0f3ffff	              mov dword [rbp - 0xc40], 7	       521	describe.c	FUNCTION_53
0x1a04	    0x48c785c8f3ff	              mov qword [rbp - 0xc38], 0	       521	describe.c	FUNCTION_53
0x1a0f	    0x48c785d0f3ff	              mov qword [rbp - 0xc30], 0	       521	describe.c	FUNCTION_53
0x1a1a	    0x48c785e0f3ff	              mov qword [rbp - 0xc20], 0	       521	describe.c	FUNCTION_53
0x1a25	    0xc785e8f3ffff	              mov dword [rbp - 0xc18], 2	       521	describe.c	FUNCTION_53
0x1a2f	    0x48c785f8f3ff	              mov qword [rbp - 0xc08], 1	       521	describe.c	FUNCTION_53
0x1a3a	    0xc78500f4ffff	              mov dword [rbp - 0xc00], 7	       521	describe.c	FUNCTION_53
0x1a44	    0x48c78508f4ff	              mov qword [rbp - 0xbf8], 0	       521	describe.c	FUNCTION_53
0x1a4f	    0x48c78510f4ff	              mov qword [rbp - 0xbf0], 0	       521	describe.c	FUNCTION_53
0x1a5a	    0x48c78520f4ff	              mov qword [rbp - 0xbe0], 0	       521	describe.c	FUNCTION_53
0x1a65	    0xc78528f4ffff	              mov dword [rbp - 0xbd8], 2	       521	describe.c	FUNCTION_53
0x1a6f	    0x48c78538f4ff	              mov qword [rbp - 0xbc8], 1	       521	describe.c	FUNCTION_53
0x1a7a	    0xc78540f4ffff	              mov dword [rbp - 0xbc0], 7	       521	describe.c	FUNCTION_53
0x1a84	    0x48c78548f4ff	              mov qword [rbp - 0xbb8], 0	       521	describe.c	FUNCTION_53
0x1a8f	    0x48c78550f4ff	              mov qword [rbp - 0xbb0], 0	       521	describe.c	FUNCTION_53
0x1a9a	    0x48c78560f4ff	              mov qword [rbp - 0xba0], 0	       521	describe.c	FUNCTION_53
0x1aa5	    0xc78568f4ffff	              mov dword [rbp - 0xb98], 2	       521	describe.c	FUNCTION_53
0x1aaf	    0x48c78578f4ff	              mov qword [rbp - 0xb88], 1	       521	describe.c	FUNCTION_53
0x1aba	    0xc78580f4ffff	              mov dword [rbp - 0xb80], 7	       521	describe.c	FUNCTION_53
0x1ac4	    0x48c78588f4ff	              mov qword [rbp - 0xb78], 0	       521	describe.c	FUNCTION_53
0x1acf	    0x48c78590f4ff	              mov qword [rbp - 0xb70], 0	       521	describe.c	FUNCTION_53
0x1ada	    0x48c785a0f4ff	              mov qword [rbp - 0xb60], 0	       521	describe.c	FUNCTION_53
0x1ae5	    0xc785a8f4ffff	              mov dword [rbp - 0xb58], 2	       521	describe.c	FUNCTION_53
0x1aef	    0x48c785b8f4ff	              mov qword [rbp - 0xb48], 1	       521	describe.c	FUNCTION_53
0x1afa	    0xc785c0f4ffff	              mov dword [rbp - 0xb40], 7	       521	describe.c	FUNCTION_53
0x1b04	    0x48c785c8f4ff	              mov qword [rbp - 0xb38], 0	       521	describe.c	FUNCTION_53
0x1b0f	    0x48c785d0f4ff	              mov qword [rbp - 0xb30], 0	       521	describe.c	FUNCTION_53
0x1b1a	    0x48c785e0f4ff	              mov qword [rbp - 0xb20], 0	       521	describe.c	FUNCTION_53
0x1b25	    0xc785e8f4ffff	              mov dword [rbp - 0xb18], 2	       521	describe.c	FUNCTION_53
0x1b2f	    0x48c785f8f4ff	              mov qword [rbp - 0xb08], 1	       521	describe.c	FUNCTION_53
0x1b3a	    0xc78500f5ffff	           mov dword [rbp - 0xb00], 0xc 	       521	describe.c	FUNCTION_53
0x1b44	    0x48c78508f5ff	              mov qword [rbp - 0xaf8], 0	       521	describe.c	FUNCTION_53
0x1b4f	    0x48c78510f5ff	              mov qword [rbp - 0xaf0], 0	       521	describe.c	FUNCTION_53
0x1b5a	    0x48c78518f5ff	              mov qword [rbp - 0xae8], 0	       521	describe.c	FUNCTION_53
0x1b65	    0x48c78520f5ff	              mov qword [rbp - 0xae0], 0	       521	describe.c	FUNCTION_53
0x1b70	    0xc78528f5ffff	              mov dword [rbp - 0xad8], 1	       521	describe.c	FUNCTION_53
0x1b7a	    0x48c78530f5ff	              mov qword [rbp - 0xad0], 0	       521	describe.c	FUNCTION_53
0x1b85	    0xc78540f5ffff	              mov dword [rbp - 0xac0], 7	       521	describe.c	FUNCTION_53
0x1b8f	    0x48c78548f5ff	              mov qword [rbp - 0xab8], 0	       521	describe.c	FUNCTION_53
0x1b9a	    0x48c78550f5ff	              mov qword [rbp - 0xab0], 0	       521	describe.c	FUNCTION_53
0x1ba5	    0x48c78560f5ff	              mov qword [rbp - 0xaa0], 0	       521	describe.c	FUNCTION_53
0x1bb0	    0xc78568f5ffff	              mov dword [rbp - 0xa98], 2	       521	describe.c	FUNCTION_53
0x1bba	    0xc78580f5ffff	            mov dword [rbp - 0xa80], 0xa	       521	describe.c	FUNCTION_53
0x1bc4	    0x48c78588f5ff	              mov qword [rbp - 0xa78], 0	       521	describe.c	FUNCTION_53
0x1bcf	    0x48c78590f5ff	              mov qword [rbp - 0xa70], 0	       521	describe.c	FUNCTION_53
0x1bda	    0x48c78598f5ff	              mov qword [rbp - 0xa68], 0	       521	describe.c	FUNCTION_53
0x1be5	    0x48c785a0f5ff	              mov qword [rbp - 0xa60], 0	       521	describe.c	FUNCTION_53
0x1bf0	    0xc785c0f5ffff	           mov dword [rbp - 0xa40], 0xc 	       521	describe.c	FUNCTION_53
0x1bfa	    0x48c785c8f5ff	              mov qword [rbp - 0xa38], 0	       521	describe.c	FUNCTION_53
0x1c05	    0x48c785d0f5ff	              mov qword [rbp - 0xa30], 0	       521	describe.c	FUNCTION_53
0x1c10	    0x48c785d8f5ff	              mov qword [rbp - 0xa28], 0	       521	describe.c	FUNCTION_53
0x1c1b	    0x48c785e0f5ff	              mov qword [rbp - 0xa20], 0	       521	describe.c	FUNCTION_53
0x1c26	    0x48c785f0f5ff	              mov qword [rbp - 0xa10], 0	       521	describe.c	FUNCTION_53
0x1c31	    0xc78500f6ffff	           mov dword [rbp - 0xa00], 0xc 	       521	describe.c	FUNCTION_53
0x1c3b	    0x48c78508f6ff	              mov qword [rbp - 0x9f8], 0	       521	describe.c	FUNCTION_53
0x1c46	    0x48c78510f6ff	              mov qword [rbp - 0x9f0], 0	       521	describe.c	FUNCTION_53
0x1c51	    0x48c78518f6ff	              mov qword [rbp - 0x9e8], 0	       521	describe.c	FUNCTION_53
0x1c5c	    0x48c78520f6ff	              mov qword [rbp - 0x9e0], 0	       521	describe.c	FUNCTION_53
0x1c67	    0x48c78530f6ff	              mov qword [rbp - 0x9d0], 0	       521	describe.c	FUNCTION_53
0x1c72	    0xc78540f6ffff	              mov dword [rbp - 0x9c0], 7	       521	describe.c	FUNCTION_53
0x1c7c	    0x48c78548f6ff	              mov qword [rbp - 0x9b8], 0	       521	describe.c	FUNCTION_53
0x1c87	    0x48c78550f6ff	              mov qword [rbp - 0x9b0], 0	       521	describe.c	FUNCTION_53
0x1c92	    0x48c78560f6ff	              mov qword [rbp - 0x9a0], 0	       521	describe.c	FUNCTION_53
0x1c9d	    0xc78568f6ffff	              mov dword [rbp - 0x998], 2	       521	describe.c	FUNCTION_53
0x1ca7	    0x48c78578f6ff	              mov qword [rbp - 0x988], 1	       521	describe.c	FUNCTION_53
0x1cb2	    0xc78580f6ffff	              mov dword [rbp - 0x980], 9	       521	describe.c	FUNCTION_53
0x1cbc	    0x48c78588f6ff	              mov qword [rbp - 0x978], 0	       521	describe.c	FUNCTION_53
0x1cc7	    0x48c78590f6ff	              mov qword [rbp - 0x970], 0	       521	describe.c	FUNCTION_53
0x1cd2	    0x48c78598f6ff	              mov qword [rbp - 0x968], 0	       521	describe.c	FUNCTION_53
0x1cdd	    0x48c785a0f6ff	              mov qword [rbp - 0x960], 0	       521	describe.c	FUNCTION_53
0x1ce8	    0xc785a8f6ffff	              mov dword [rbp - 0x958], 1	       521	describe.c	FUNCTION_53
0x1cf2	      0xb800000000	                              mov eax, 0	       541	describe.c	FUNCTION_53
0x1cf7	    0x488985b8f6ff	            mov qword [rbp - 0x948], rax	       521	describe.c	FUNCTION_53
0x1cfe	    0xc785c0f6ffff	              mov dword [rbp - 0x940], 9	       521	describe.c	FUNCTION_53
0x1d08	    0x48c785c8f6ff	              mov qword [rbp - 0x938], 0	       521	describe.c	FUNCTION_53
0x1d13	    0x48c785d0f6ff	              mov qword [rbp - 0x930], 0	       521	describe.c	FUNCTION_53
0x1d1e	    0x48c785d8f6ff	              mov qword [rbp - 0x928], 0	       521	describe.c	FUNCTION_53
0x1d29	    0x48c785e0f6ff	              mov qword [rbp - 0x920], 0	       521	describe.c	FUNCTION_53
0x1d34	    0xc785e8f6ffff	              mov dword [rbp - 0x918], 1	       521	describe.c	FUNCTION_53
0x1d3e	      0xb800000000	                              mov eax, 0	       544	describe.c	FUNCTION_53
0x1d43	    0x488985f8f6ff	            mov qword [rbp - 0x908], rax	       521	describe.c	FUNCTION_53
0x1d4a	      0xbe00000000	                              mov esi, 0	       548	describe.c	FUNCTION_53	CALL_31
0x1d4f	      0xbf00000000	                              mov edi, 0	       548	describe.c	FUNCTION_53	CALL_31
0x1d54	      0xe800000000	                          call 0x4001d99	       548	describe.c	FUNCTION_53	CALL_31
0x1d59	    0x488d8d80f3ff	                  lea rcx, [rbp - 0xc80]	       549	describe.c	FUNCTION_53	CALL_32
0x1d60	    0x488b95e8f2ff	            mov rdx, qword [rbp - 0xd18]	       549	describe.c	FUNCTION_53	CALL_32
0x1d67	    0x488bb5f0f2ff	            mov rsi, qword [rbp - 0xd10]	       549	describe.c	FUNCTION_53	CALL_32
0x1d6e	    0x8b85fcf2ffff	            mov eax, dword [rbp - 0xd04]	       549	describe.c	FUNCTION_53	CALL_32
0x1d74	    0x41b900000000	                              mov r9d, 0	       549	describe.c	FUNCTION_53	CALL_32
0x1d7a	    0x41b800000000	                              mov r8d, 0	       549	describe.c	FUNCTION_53	CALL_32
0x1d80	            0x89c7	                            mov edi, eax	       549	describe.c	FUNCTION_53	CALL_32
0x1d82	      0xe800000000	                          call 0x4001dc7	       549	describe.c	FUNCTION_53	CALL_32
0x1d87	    0x8985fcf2ffff	            mov dword [rbp - 0xd04], eax	       549	describe.c	FUNCTION_53	CALL_32
0x1d8d	    0x8b0500000000	            mov eax, dword [0x04001dd3] 	       550	describe.c	FUNCTION_53	IF_1
0x1d93	            0x85c0	                           test eax, eax	       550	describe.c	FUNCTION_53	IF_1
0x1d95	            0x790c	                           jns 0x4001de3	       550	describe.c	FUNCTION_53	IF_1
0x1d97	    0x8b0500000000	            mov eax, dword [0x04001ddd] 	       551	describe.c	FUNCTION_53	IF_1
0x1d9d	    0x890500000000	            mov dword [0x04001de3], eax 	       551	describe.c	FUNCTION_53	IF_1
0x1da3	    0x8b0500000000	            mov eax, dword [0x04001de9] 	       553	describe.c	FUNCTION_53	IF_2
0x1da9	            0x85c0	                           test eax, eax	       553	describe.c	FUNCTION_53	IF_2
0x1dab	            0x790c	                           jns 0x4001df9	       553	describe.c	FUNCTION_53	IF_2
0x1dad	    0xc70500000000	               mov dword [0x04001df7], 0	       554	describe.c	FUNCTION_53	IF_2
0x1db7	            0xeb15	                           jmp 0x4001e0e	       554	describe.c	FUNCTION_53	IF_2
0x1db9	    0x8b0500000000	            mov eax, dword [0x04001dff] 	       555	describe.c	FUNCTION_53	ELSE_1	IF_3
0x1dbf	          0x83f81a	                           cmp eax, 0x1a	       555	describe.c	FUNCTION_53	ELSE_1	IF_3
0x1dc2	            0x7e0a	                           jle 0x4001e0e	       555	describe.c	FUNCTION_53	ELSE_1	IF_3
0x1dc4	    0xc70500000000	           mov dword [0x04001e0e], 0x1a 	       556	describe.c	FUNCTION_53	ELSE_1	IF_3
0x1dce	    0xc70500000000	               mov dword [0x04001e18], 0	       558	describe.c	FUNCTION_53
0x1dd8	    0x8b0500000000	            mov eax, dword [0x04001e1e] 	       560	describe.c	FUNCTION_53	IF_4
0x1dde	            0x85c0	                           test eax, eax	       560	describe.c	FUNCTION_53	IF_4
0x1de0	            0x7421	                            je 0x4001e43	       560	describe.c	FUNCTION_53	IF_4
0x1de2	    0x8b0500000000	            mov eax, dword [0x04001e28] 	       560	describe.c	FUNCTION_53	IF_4
0x1de8	            0x85c0	                           test eax, eax	       560	describe.c	FUNCTION_53	IF_4
0x1dea	            0x7517	                           jne 0x4001e43	       560	describe.c	FUNCTION_53	IF_4
0x1dec	      0xbf00000000	                              mov edi, 0	       561	describe.c	FUNCTION_53	CALL_34
0x1df1	      0xe807e4ffff	                               call sym.	       561	describe.c	FUNCTION_53	CALL_34
0x1df6	          0x4889c7	                            mov rdi, rax	       561	describe.c	FUNCTION_53	CALL_34
0x1df9	      0xb800000000	                              mov eax, 0	       561	describe.c	FUNCTION_53	CALL_34
0x1dfe	      0xe800000000	                          call 0x4001e43	       561	describe.c	FUNCTION_53	CALL_34
0x1e03	    0x8b850cf3ffff	            mov eax, dword [rbp - 0xcf4]	       563	describe.c	FUNCTION_53	IF_5
0x1e09	            0x85c0	                           test eax, eax	       563	describe.c	FUNCTION_53	IF_5
0x1e0b	     0xf84a1010000	                            je 0x4001ff2	       563	describe.c	FUNCTION_53	IF_5
0x1e11	    0x488d8520f3ff	                  lea rax, [rbp - 0xce0]	       567	describe.c	FUNCTION_53	IF_5	CALL_35
0x1e18	          0x4889c7	                            mov rdi, rax	       567	describe.c	FUNCTION_53	IF_5	CALL_35
0x1e1b	      0xe800000000	                          call 0x4001e60	       567	describe.c	FUNCTION_53	IF_5	CALL_35
0x1e20	    0x488d8520f3ff	                  lea rax, [rbp - 0xce0]	       568	describe.c	FUNCTION_53	IF_5	CALL_36
0x1e27	    0x41b900000000	                              mov r9d, 0	       568	describe.c	FUNCTION_53	IF_5	CALL_36
0x1e2d	    0x41b800000000	                              mov r8d, 0	       568	describe.c	FUNCTION_53	IF_5	CALL_36
0x1e33	      0xb900000000	                              mov ecx, 0	       568	describe.c	FUNCTION_53	IF_5	CALL_36
0x1e38	      0xba00000000	                              mov edx, 0	       568	describe.c	FUNCTION_53	IF_5	CALL_36
0x1e3d	      0xbe00000000	                              mov esi, 0	       568	describe.c	FUNCTION_53	IF_5	CALL_36
0x1e42	          0x4889c7	                            mov rdi, rax	       568	describe.c	FUNCTION_53	IF_5	CALL_36
0x1e45	      0xb800000000	                              mov eax, 0	       568	describe.c	FUNCTION_53	IF_5	CALL_36
0x1e4a	      0xe800000000	                          call 0x4001e8f	       568	describe.c	FUNCTION_53	IF_5	CALL_36
0x1e4f	    0x8b0500000000	            mov eax, dword [0x04001e95] 	       571	describe.c	FUNCTION_53	IF_5	IF_6
0x1e55	            0x85c0	                           test eax, eax	       571	describe.c	FUNCTION_53	IF_5	IF_6
0x1e57	            0x7414	                            je 0x4001ead	       571	describe.c	FUNCTION_53	IF_5	IF_6
0x1e59	    0x488d8520f3ff	                  lea rax, [rbp - 0xce0]	       572	describe.c	FUNCTION_53	IF_5	CALL_37
0x1e60	      0xbe00000000	                              mov esi, 0	       572	describe.c	FUNCTION_53	IF_5	CALL_37
0x1e65	          0x4889c7	                            mov rdi, rax	       572	describe.c	FUNCTION_53	IF_5	CALL_37
0x1e68	      0xe800000000	                          call 0x4001ead	       572	describe.c	FUNCTION_53	IF_5	CALL_37
0x1e6d	    0x8b0500000000	            mov eax, dword [0x04001eb3] 	       573	describe.c	FUNCTION_53	IF_5	IF_7
0x1e73	            0x85c0	                           test eax, eax	       573	describe.c	FUNCTION_53	IF_5	IF_7
0x1e75	     0xf85dc000000	                           jne 0x4001f97	       573	describe.c	FUNCTION_53	IF_5	IF_7
0x1e7b	    0x488d8520f3ff	                  lea rax, [rbp - 0xce0]	       574	describe.c	FUNCTION_53	IF_5	IF_7	CALL_38
0x1e82	      0xbe00000000	                              mov esi, 0	       574	describe.c	FUNCTION_53	IF_5	IF_7	CALL_38
0x1e87	          0x4889c7	                            mov rdi, rax	       574	describe.c	FUNCTION_53	IF_5	IF_7	CALL_38
0x1e8a	      0xe800000000	                          call 0x4001ecf	       574	describe.c	FUNCTION_53	IF_5	IF_7	CALL_38
0x1e8f	    0x488b05000000	            mov rax, qword [0x04001ed6] 	       575	describe.c	FUNCTION_53	IF_5	IF_7	CALL_39
0x1e96	    0x48898518f3ff	            mov qword [rbp - 0xce8], rax	       575	describe.c	FUNCTION_53	IF_5	IF_7	CALL_39
0x1e9d	            0xeb2b	                           jmp 0x4001f0a	       575	describe.c	FUNCTION_53	IF_5	IF_7	CALL_39
0x1e9f	    0x488b8518f3ff	            mov rax, qword [rbp - 0xce8]	       576	describe.c	FUNCTION_53	IF_5	IF_7	CALL_40
0x1ea6	          0x488b10	                    mov rdx, qword [rax]	       576	describe.c	FUNCTION_53	IF_5	IF_7	CALL_40
0x1ea9	    0x488d8520f3ff	                  lea rax, [rbp - 0xce0]	       576	describe.c	FUNCTION_53	IF_5	IF_7	CALL_40
0x1eb0	      0xbe00000000	                              mov esi, 0	       576	describe.c	FUNCTION_53	IF_5	IF_7	CALL_40
0x1eb5	          0x4889c7	                            mov rdi, rax	       576	describe.c	FUNCTION_53	IF_5	IF_7	CALL_40
0x1eb8	      0xb800000000	                              mov eax, 0	       576	describe.c	FUNCTION_53	IF_5	IF_7	CALL_40
0x1ebd	      0xe800000000	                          call 0x4001f02	       576	describe.c	FUNCTION_53	IF_5	IF_7	CALL_40
0x1ec2	    0x48838518f3ff	           add qword [rbp - 0xce8], 0x10	       575	describe.c	FUNCTION_53	IF_5	IF_7	CALL_39
0x1eca	    0x4883bd18f3ff	              cmp qword [rbp - 0xce8], 0	       575	describe.c	FUNCTION_53	IF_5	IF_7	CALL_39
0x1ed2	            0x741f	                            je 0x4001f33	       575	describe.c	FUNCTION_53	IF_5	IF_7	CALL_39
0x1ed4	    0x488b05000000	            mov rax, qword [0x04001f1b] 	       575	describe.c	FUNCTION_53	IF_5	IF_7	CALL_39
0x1edb	    0x8b1500000000	            mov edx, dword [0x04001f21] 	       575	describe.c	FUNCTION_53	IF_5	IF_7	CALL_39
0x1ee1	            0x89d2	                            mov edx, edx	       575	describe.c	FUNCTION_53	IF_5	IF_7	CALL_39
0x1ee3	        0x48c1e204	                              shl rdx, 4	       575	describe.c	FUNCTION_53	IF_5	IF_7	CALL_39
0x1ee7	          0x4801d0	                            add rax, rdx	       575	describe.c	FUNCTION_53	IF_5	IF_7	CALL_39
0x1eea	    0x483b8518f3ff	            cmp rax, qword [rbp - 0xce8]	       575	describe.c	FUNCTION_53	IF_5	IF_7	CALL_39
0x1ef1	            0x77ac	                            ja 0x4001edf	       575	describe.c	FUNCTION_53	IF_5	IF_7	CALL_39
0x1ef3	    0x488b05000000	            mov rax, qword [0x04001f3a] 	       577	describe.c	FUNCTION_53	IF_5	IF_7	CALL_41
0x1efa	    0x48898518f3ff	            mov qword [rbp - 0xce8], rax	       577	describe.c	FUNCTION_53	IF_5	IF_7	CALL_41
0x1f01	            0xeb2b	                           jmp 0x4001f6e	       577	describe.c	FUNCTION_53	IF_5	IF_7	CALL_41
0x1f03	    0x488b8518f3ff	            mov rax, qword [rbp - 0xce8]	       578	describe.c	FUNCTION_53	IF_5	IF_7	CALL_42
0x1f0a	          0x488b10	                    mov rdx, qword [rax]	       578	describe.c	FUNCTION_53	IF_5	IF_7	CALL_42
0x1f0d	    0x488d8520f3ff	                  lea rax, [rbp - 0xce0]	       578	describe.c	FUNCTION_53	IF_5	IF_7	CALL_42
0x1f14	      0xbe00000000	                              mov esi, 0	       578	describe.c	FUNCTION_53	IF_5	IF_7	CALL_42
0x1f19	          0x4889c7	                            mov rdi, rax	       578	describe.c	FUNCTION_53	IF_5	IF_7	CALL_42
0x1f1c	      0xb800000000	                              mov eax, 0	       578	describe.c	FUNCTION_53	IF_5	IF_7	CALL_42
0x1f21	      0xe800000000	                          call 0x4001f66	       578	describe.c	FUNCTION_53	IF_5	IF_7	CALL_42
0x1f26	    0x48838518f3ff	           add qword [rbp - 0xce8], 0x10	       577	describe.c	FUNCTION_53	IF_5	IF_7	CALL_41
0x1f2e	    0x4883bd18f3ff	              cmp qword [rbp - 0xce8], 0	       577	describe.c	FUNCTION_53	IF_5	IF_7	CALL_41
0x1f36	            0x741f	                            je 0x4001f97	       577	describe.c	FUNCTION_53	IF_5	IF_7	CALL_41
0x1f38	    0x488b05000000	            mov rax, qword [0x04001f7f] 	       577	describe.c	FUNCTION_53	IF_5	IF_7	CALL_41
0x1f3f	    0x8b1500000000	            mov edx, dword [0x04001f85] 	       577	describe.c	FUNCTION_53	IF_5	IF_7	CALL_41
0x1f45	            0x89d2	                            mov edx, edx	       577	describe.c	FUNCTION_53	IF_5	IF_7	CALL_41
0x1f47	        0x48c1e204	                              shl rdx, 4	       577	describe.c	FUNCTION_53	IF_5	IF_7	CALL_41
0x1f4b	          0x4801d0	                            add rax, rdx	       577	describe.c	FUNCTION_53	IF_5	IF_7	CALL_41
0x1f4e	    0x483b8518f3ff	            cmp rax, qword [rbp - 0xce8]	       577	describe.c	FUNCTION_53	IF_5	IF_7	CALL_41
0x1f55	            0x77ac	                            ja 0x4001f43	       577	describe.c	FUNCTION_53	IF_5	IF_7	CALL_41
0x1f57	    0x83bdfcf2ffff	              cmp dword [rbp - 0xd04], 0	       580	describe.c	FUNCTION_53	IF_5	IF_8
0x1f5e	            0x741b	                            je 0x4001fbb	       580	describe.c	FUNCTION_53	IF_5	IF_8
0x1f60	    0x488b95f0f2ff	            mov rdx, qword [rbp - 0xd10]	       581	describe.c	FUNCTION_53	IF_5	CALL_43
0x1f67	    0x488d8520f3ff	                  lea rax, [rbp - 0xce0]	       581	describe.c	FUNCTION_53	IF_5	CALL_43
0x1f6e	          0x4889d6	                            mov rsi, rdx	       581	describe.c	FUNCTION_53	IF_5	CALL_43
0x1f71	          0x4889c7	                            mov rdi, rax	       581	describe.c	FUNCTION_53	IF_5	CALL_43
0x1f74	      0xe800000000	                          call 0x4001fb9	       581	describe.c	FUNCTION_53	IF_5	CALL_43
0x1f79	            0xeb14	                           jmp 0x4001fcf	       581	describe.c	FUNCTION_53	IF_5	CALL_43
0x1f7b	    0x488d8520f3ff	                  lea rax, [rbp - 0xce0]	       583	describe.c	FUNCTION_53	IF_5	CALL_44
0x1f82	      0xbe00000000	                              mov esi, 0	       583	describe.c	FUNCTION_53	IF_5	CALL_44
0x1f87	          0x4889c7	                            mov rdi, rax	       583	describe.c	FUNCTION_53	IF_5	CALL_44
0x1f8a	      0xe800000000	                          call 0x4001fcf	       583	describe.c	FUNCTION_53	IF_5	CALL_44
0x1f8f	    0x488b8d20f3ff	            mov rcx, qword [rbp - 0xce0]	       584	describe.c	FUNCTION_53	IF_5	CALL_45
0x1f96	    0x8b8528f3ffff	            mov eax, dword [rbp - 0xcd8]	       584	describe.c	FUNCTION_53	IF_5	CALL_45
0x1f9c	    0x488b95e8f2ff	            mov rdx, qword [rbp - 0xd18]	       584	describe.c	FUNCTION_53	IF_5	CALL_45
0x1fa3	          0x4889ce	                            mov rsi, rcx	       584	describe.c	FUNCTION_53	IF_5	CALL_45
0x1fa6	            0x89c7	                            mov edi, eax	       584	describe.c	FUNCTION_53	IF_5	CALL_45
0x1fa8	      0xe800000000	                          call 0x4001fed	       584	describe.c	FUNCTION_53	IF_5	CALL_45
0x1fad	      0xe93a030000	                           jmp 0x400232c	       584	describe.c	FUNCTION_53	IF_5	CALL_45
0x1fb2	      0xb900000000	                              mov ecx, 0	       587	describe.c	FUNCTION_53	CALL_46
0x1fb7	      0xba00000000	                              mov edx, 0	       587	describe.c	FUNCTION_53	CALL_46
0x1fbc	      0xbe00000000	                              mov esi, 0	       587	describe.c	FUNCTION_53	CALL_46
0x1fc1	      0xbf00000000	                              mov edi, 0	       587	describe.c	FUNCTION_53	CALL_46
0x1fc6	      0xe800000000	                          call 0x400200b	       587	describe.c	FUNCTION_53	CALL_46
0x1fcb	      0xbe00000000	                              mov esi, 0	       588	describe.c	FUNCTION_53	CALL_47
0x1fd0	      0xbf00000000	                              mov edi, 0	       588	describe.c	FUNCTION_53	CALL_47
0x1fd5	      0xe800000000	                          call 0x400201a	       588	describe.c	FUNCTION_53	CALL_47
0x1fda	      0xbf00000000	                              mov edi, 0	       589	describe.c	FUNCTION_53	IF_9	CALL_48
0x1fdf	      0xe849e1ffff	               call sym.hashmap_get_size	       589	describe.c	FUNCTION_53	IF_9	CALL_48
0x1fe4	            0x85c0	                           test eax, eax	       589	describe.c	FUNCTION_53	IF_9	CALL_48
0x1fe6	            0x7521	                           jne 0x4002049	       589	describe.c	FUNCTION_53	IF_9	CALL_48
0x1fe8	    0x8b0500000000	            mov eax, dword [0x0400202e] 	       589	describe.c	FUNCTION_53	IF_9	CALL_48
0x1fee	            0x85c0	                           test eax, eax	       589	describe.c	FUNCTION_53	IF_9	CALL_48
0x1ff0	            0x7517	                           jne 0x4002049	       589	describe.c	FUNCTION_53	IF_9	CALL_48
0x1ff2	      0xbf00000000	                              mov edi, 0	       590	describe.c	FUNCTION_53	CALL_50
0x1ff7	      0xe801e2ffff	                               call sym.	       590	describe.c	FUNCTION_53	CALL_50
0x1ffc	          0x4889c7	                            mov rdi, rax	       590	describe.c	FUNCTION_53	CALL_50
0x1fff	      0xb800000000	                              mov eax, 0	       590	describe.c	FUNCTION_53	CALL_50
0x2004	      0xe800000000	                          call 0x4002049	       590	describe.c	FUNCTION_53	CALL_50
0x2009	    0x83bdfcf2ffff	              cmp dword [rbp - 0xd04], 0	       592	describe.c	FUNCTION_53	IF_10
0x2010	     0xf854c020000	                           jne 0x40022a2	       592	describe.c	FUNCTION_53	IF_10
0x2016	    0x488b05000000	            mov rax, qword [0x0400205d] 	       593	describe.c	FUNCTION_53	IF_10	IF_11
0x201d	          0x4885c0	                           test rax, rax	       593	describe.c	FUNCTION_53	IF_10	IF_11
0x2020	     0xf84dc000000	                            je 0x4002142	       593	describe.c	FUNCTION_53	IF_10	IF_11
0x2026	    0x488d9520f3ff	                  lea rdx, [rbp - 0xce0]	       594	describe.c	FUNCTION_53	IF_10	IF_11
0x202d	      0xb800000000	                              mov eax, 0	       594	describe.c	FUNCTION_53	IF_10	IF_11
0x2032	      0xb90c000000	                            mov ecx, 0xc	       594	describe.c	FUNCTION_53	IF_10	IF_11
0x2037	          0x4889d7	                            mov rdi, rdx	       594	describe.c	FUNCTION_53	IF_10	IF_11
0x203a	          0xf348ab	              rep stosq qword [rdi], rax	       594	describe.c	FUNCTION_53	IF_10	IF_11
0x203d	    0x48c78528f3ff	              mov qword [rbp - 0xcd8], 0	       594	describe.c	FUNCTION_53	IF_10	IF_11
0x2048	    0x48c78538f3ff	              mov qword [rbp - 0xcc8], 0	       594	describe.c	FUNCTION_53	IF_10	IF_11
0x2053	    0x488d8520f3ff	                  lea rax, [rbp - 0xce0]	       595	describe.c	FUNCTION_53	IF_10	IF_11	CALL_51
0x205a	        0x4883c008	                              add rax, 8	       595	describe.c	FUNCTION_53	IF_10	IF_11	CALL_51
0x205e	      0xbe00000000	                              mov esi, 0	       595	describe.c	FUNCTION_53	IF_10	IF_11	CALL_51
0x2063	          0x4889c7	                            mov rdi, rax	       595	describe.c	FUNCTION_53	IF_10	IF_11	CALL_51
0x2066	      0xe800000000	                          call 0x40020ab	       595	describe.c	FUNCTION_53	IF_10	IF_11	CALL_51
0x206b	     0xfb68568f3ff	           movzx eax, byte [rbp - 0xc98]	       596	describe.c	FUNCTION_53	IF_10	IF_11
0x2072	          0x83c808	                               or eax, 8	       596	describe.c	FUNCTION_53	IF_10	IF_11
0x2075	    0x888568f3ffff	              mov byte [rbp - 0xc98], al	       596	describe.c	FUNCTION_53	IF_10	IF_11
0x207b	     0xfb68568f3ff	           movzx eax, byte [rbp - 0xc98]	       597	describe.c	FUNCTION_53	IF_10	IF_11
0x2082	          0x83c801	                               or eax, 1	       597	describe.c	FUNCTION_53	IF_10	IF_11
0x2085	    0x888568f3ffff	              mov byte [rbp - 0xc98], al	       597	describe.c	FUNCTION_53	IF_10	IF_11
0x208b	     0xfb68568f3ff	           movzx eax, byte [rbp - 0xc98]	       598	describe.c	FUNCTION_53	IF_10	IF_11
0x2092	          0x83c802	                               or eax, 2	       598	describe.c	FUNCTION_53	IF_10	IF_11
0x2095	    0x888568f3ffff	              mov byte [rbp - 0xc98], al	       598	describe.c	FUNCTION_53	IF_10	IF_11
0x209b	    0x488b05000000	            mov rax, qword [0x040020e2] 	       600	describe.c	FUNCTION_53	IF_10	IF_11	IF_12
0x20a2	          0x4885c0	                           test rax, rax	       600	describe.c	FUNCTION_53	IF_10	IF_11	IF_12
0x20a5	            0x750b	                           jne 0x40020f2	       600	describe.c	FUNCTION_53	IF_10	IF_11	IF_12
0x20a7	    0x48c705000000	               mov qword [0x040020f2], 0	       601	describe.c	FUNCTION_53	IF_10	IF_11	IF_12
0x20b2	    0x488d8520f3ff	                  lea rax, [rbp - 0xce0]	       603	describe.c	FUNCTION_53	IF_10	IF_11	SWITCH_1	CALL_52
0x20b9	          0x4889c7	                            mov rdi, rax	       603	describe.c	FUNCTION_53	IF_10	IF_11	SWITCH_1	CALL_52
0x20bc	      0xe800000000	                          call 0x4002101	       603	describe.c	FUNCTION_53	IF_10	IF_11	SWITCH_1	CALL_52
0x20c1	            0x85c0	                           test eax, eax	       603	describe.c	FUNCTION_53	IF_10	IF_11	SWITCH_1	CALL_52
0x20c3	            0x7407	                            je 0x400210c	       603	describe.c	FUNCTION_53	IF_10	IF_11	SWITCH_1	CALL_52
0x20c5	          0x83f801	                              cmp eax, 1	       603	describe.c	FUNCTION_53	IF_10	IF_11	SWITCH_1	CALL_52
0x20c8	            0x7412	                            je 0x400211c	       603	describe.c	FUNCTION_53	IF_10	IF_11	SWITCH_1	CALL_52
0x20ca	            0xeb23	                           jmp 0x400212f	       603	describe.c	FUNCTION_53	IF_10	IF_11	SWITCH_1	CALL_52
0x20cc	    0x48c705000000	               mov qword [0x04002117], 0	       605	describe.c	FUNCTION_53	IF_10	IF_11	SWITCH_1
0x20d7	      0xe972010000	                           jmp 0x400228e	       606	describe.c	FUNCTION_53	IF_10	IF_11	SWITCH_1
0x20dc	    0x488b05000000	            mov rax, qword [0x04002123] 	       608	describe.c	FUNCTION_53	IF_10	IF_11	SWITCH_1
0x20e3	    0x488905000000	            mov qword [0x0400212a], rax 	       608	describe.c	FUNCTION_53	IF_10	IF_11	SWITCH_1
0x20ea	      0xe95f010000	                           jmp 0x400228e	       609	describe.c	FUNCTION_53	IF_10	IF_11	SWITCH_1
0x20ef	    0x488b05000000	            mov rax, qword [0x04002136] 	       612	describe.c	FUNCTION_53	IF_10	IF_11	SWITCH_1
0x20f6	    0x488905000000	            mov qword [0x0400213d], rax 	       612	describe.c	FUNCTION_53	IF_10	IF_11	SWITCH_1
0x20fd	      0xe94c010000	                           jmp 0x400228e	       612	describe.c	FUNCTION_53	IF_10	IF_11	SWITCH_1
0x2102	    0x488b05000000	            mov rax, qword [0x04002149] 	       614	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13
0x2109	          0x4885c0	                           test rax, rax	       614	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13
0x210c	     0xf843c010000	                            je 0x400228e	       614	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13
0x2112	    0x48c78520f3ff	              mov qword [rbp - 0xce0], 0	       617	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13
0x211d	    0xc78528f3ffff	              mov dword [rbp - 0xcd8], 0	       617	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13
0x2127	    0xc7852cf3ffff	              mov dword [rbp - 0xcd4], 0	       617	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13
0x2131	      0xbe00000000	                              mov esi, 0	       620	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	CALL_53
0x2136	      0xbf00000000	                              mov edi, 0	       620	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	CALL_53
0x213b	      0xe800000000	                          call 0x4002180	       620	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	CALL_53
0x2140	    0x41b800000000	                              mov r8d, 0	       621	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	CALL_54
0x2146	      0xb900000000	                              mov ecx, 0	       621	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	CALL_54
0x214b	      0xba00000000	                              mov edx, 0	       621	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	CALL_54
0x2150	      0xbe06000000	                              mov esi, 6	       621	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	CALL_54
0x2155	      0xbf00000000	                              mov edi, 0	       621	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	CALL_54
0x215a	      0xe800000000	                          call 0x400219f	       621	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	CALL_54
0x215f	      0xbe00000000	                              mov esi, 0	       623	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	CALL_55
0x2164	      0xbf00000000	                              mov edi, 0	       623	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	CALL_55
0x2169	      0xe800000000	                          call 0x40021ae	       623	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	CALL_55
0x216e	    0x898510f3ffff	            mov dword [rbp - 0xcf0], eax	       623	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	CALL_55
0x2174	    0x83bd10f3ffff	              cmp dword [rbp - 0xcf0], 0	       624	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	IF_14
0x217b	            0x780f	                            js 0x40021cc	       624	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	IF_14
0x217d	      0xbe00000000	                              mov esi, 0	       625	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	CALL_56
0x2182	      0xbf00000000	                              mov edi, 0	       625	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	CALL_56
0x2187	      0xe800000000	                          call 0x40021cc	       625	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	CALL_56
0x218c	    0x488b95e8f2ff	            mov rdx, qword [rbp - 0xd18]	       627	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	CALL_57
0x2193	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       627	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	CALL_57
0x219a	          0x4889d6	                            mov rsi, rdx	       627	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	CALL_57
0x219d	          0x4889c7	                            mov rdi, rax	       627	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	CALL_57
0x21a0	      0xe800000000	                          call 0x40021e5	       627	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	CALL_57
0x21a5	    0x488d8520f3ff	                  lea rax, [rbp - 0xce0]	       628	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	CALL_58
0x21ac	      0xbe00000000	                              mov esi, 0	       628	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	CALL_58
0x21b1	          0x4889c7	                            mov rdi, rax	       628	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	CALL_58
0x21b4	      0xe800000000	                          call 0x40021f9	       628	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	CALL_58
0x21b9	    0x488bb520f3ff	            mov rsi, qword [rbp - 0xce0]	       629	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	IF_15	CALL_59
0x21c0	    0x8b8528f3ffff	            mov eax, dword [rbp - 0xcd8]	       629	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	IF_15	CALL_59
0x21c6	    0x488d9540f7ff	                  lea rdx, [rbp - 0x8c0]	       629	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	IF_15	CALL_59
0x21cd	      0xb900000000	                              mov ecx, 0	       629	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	IF_15	CALL_59
0x21d2	            0x89c7	                            mov edi, eax	       629	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	IF_15	CALL_59
0x21d4	      0xe800000000	                          call 0x4002219	       629	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	IF_15	CALL_59
0x21d9	          0x83f801	                              cmp eax, 1	       629	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	IF_15	CALL_59
0x21dc	            0x7419	                            je 0x4002237	       629	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	IF_15	CALL_59
0x21de	      0xba00000000	                              mov edx, 0	       630	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	CALL_60
0x21e3	      0xbe76020000	                          mov esi, 0x276	       630	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	CALL_60
0x21e8	      0xbf00000000	                              mov edi, 0	       630	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	CALL_60
0x21ed	      0xb800000000	                              mov eax, 0	       630	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	CALL_60
0x21f2	      0xe800000000	                          call 0x4002237	       630	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	CALL_60
0x21f7	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       631	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	CALL_61
0x21fe	      0xbe00000000	                              mov esi, 0	       631	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	CALL_61
0x2203	          0x4889c7	                            mov rdi, rax	       631	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	CALL_61
0x2206	      0xe800000000	                          call 0x400224b	       631	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	CALL_61
0x220b	    0x898514f3ffff	            mov dword [rbp - 0xcec], eax	       631	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	CALL_61
0x2211	    0x8b8514f3ffff	            mov eax, dword [rbp - 0xcec]	       633	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	IF_16	CALL_62
0x2217	    0x488d9540f7ff	                  lea rdx, [rbp - 0x8c0]	       633	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	IF_16	CALL_62
0x221e	    0x4881c2f80400	                          add rdx, 0x4f8	       633	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	IF_16	CALL_62
0x2225	            0x89c6	                            mov esi, eax	       633	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	IF_16	CALL_62
0x2227	          0x4889d7	                            mov rdi, rdx	       633	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	IF_16	CALL_62
0x222a	      0xe800000000	                          call 0x400226f	       633	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	IF_16	CALL_62
0x222f	            0x85c0	                           test eax, eax	       633	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	IF_16	CALL_62
0x2231	            0x750d	                           jne 0x4002280	       633	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	IF_16	CALL_62
0x2233	    0x48c705000000	               mov qword [0x0400227e], 0	       634	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	IF_16
0x223e	            0xeb0e	                           jmp 0x400228e	       634	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	IF_16
0x2240	    0x488b05000000	            mov rax, qword [0x04002287] 	       636	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	ELSE_4
0x2247	    0x488905000000	            mov qword [0x0400228e], rax 	       636	describe.c	FUNCTION_53	IF_10	ELSE_3	IF_13	ELSE_4
0x224e	      0xbe01000000	                              mov esi, 1	       638	describe.c	FUNCTION_53	IF_10	CALL_63
0x2253	      0xbf00000000	                              mov edi, 0	       638	describe.c	FUNCTION_53	IF_10	CALL_63
0x2258	      0xe881f5ffff	                       call sym.describe	       638	describe.c	FUNCTION_53	IF_10	CALL_63
0x225d	      0xe985000000	                           jmp 0x4002327	       638	describe.c	FUNCTION_53	IF_10	CALL_63
0x2262	    0x488b05000000	            mov rax, qword [0x040022a9] 	       639	describe.c	FUNCTION_53	ELSE_5	IF_17
0x2269	          0x4885c0	                           test rax, rax	       639	describe.c	FUNCTION_53	ELSE_5	IF_17
0x226c	            0x7417	                            je 0x40022c5	       639	describe.c	FUNCTION_53	ELSE_5	IF_17
0x226e	      0xbf00000000	                              mov edi, 0	       640	describe.c	FUNCTION_53	ELSE_5	IF_17	CALL_65
0x2273	      0xe885dfffff	                               call sym.	       640	describe.c	FUNCTION_53	ELSE_5	IF_17	CALL_65
0x2278	          0x4889c7	                            mov rdi, rax	       640	describe.c	FUNCTION_53	ELSE_5	IF_17	CALL_65
0x227b	      0xb800000000	                              mov eax, 0	       640	describe.c	FUNCTION_53	ELSE_5	IF_17	CALL_65
0x2280	      0xe800000000	                          call 0x40022c5	       640	describe.c	FUNCTION_53	ELSE_5	IF_17	CALL_65
0x2285	    0x488b05000000	            mov rax, qword [0x040022cc] 	       641	describe.c	FUNCTION_53	ELSE_6	IF_18
0x228c	          0x4885c0	                           test rax, rax	       641	describe.c	FUNCTION_53	ELSE_6	IF_18
0x228f	            0x7443	                            je 0x4002314	       641	describe.c	FUNCTION_53	ELSE_6	IF_18
0x2291	      0xbf00000000	                              mov edi, 0	       642	describe.c	FUNCTION_53	ELSE_6	IF_18	CALL_67
0x2296	      0xe862dfffff	                               call sym.	       642	describe.c	FUNCTION_53	ELSE_6	IF_18	CALL_67
0x229b	          0x4889c7	                            mov rdi, rax	       642	describe.c	FUNCTION_53	ELSE_6	IF_18	CALL_67
0x229e	      0xb800000000	                              mov eax, 0	       642	describe.c	FUNCTION_53	ELSE_6	IF_18	CALL_67
0x22a3	      0xe800000000	                          call 0x40022e8	       642	describe.c	FUNCTION_53	ELSE_6	IF_18	CALL_67
0x22a8	    0x83bdfcf2ffff	              cmp dword [rbp - 0xd04], 0	       645	describe.c	FUNCTION_53	ELSE_7	CALL_68
0x22af	           0xf94c0	                                 sete al	       645	describe.c	FUNCTION_53	ELSE_7	CALL_68
0x22b2	           0xfb6d0	                           movzx edx, al	       645	describe.c	FUNCTION_53	ELSE_7	CALL_68
0x22b5	    0x488b85f0f2ff	            mov rax, qword [rbp - 0xd10]	       645	describe.c	FUNCTION_53	ELSE_7	CALL_68
0x22bc	        0x488d4808	                      lea rcx, [rax + 8]	       645	describe.c	FUNCTION_53	ELSE_7	CALL_68
0x22c0	    0x48898df0f2ff	            mov qword [rbp - 0xd10], rcx	       645	describe.c	FUNCTION_53	ELSE_7	CALL_68
0x22c7	          0x488b00	                    mov rax, qword [rax]	       645	describe.c	FUNCTION_53	ELSE_7	CALL_68
0x22ca	            0x89d6	                            mov esi, edx	       645	describe.c	FUNCTION_53	ELSE_7	CALL_68
0x22cc	          0x4889c7	                            mov rdi, rax	       645	describe.c	FUNCTION_53	ELSE_7	CALL_68
0x22cf	      0xe80af5ffff	                       call sym.describe	       645	describe.c	FUNCTION_53	ELSE_7	CALL_68
0x22d4	    0x8b85fcf2ffff	            mov eax, dword [rbp - 0xd04]	       644	describe.c	FUNCTION_53	ELSE_7	WHILE_1
0x22da	          0x8d50ff	                      lea edx, [rax - 1]	       644	describe.c	FUNCTION_53	ELSE_7	WHILE_1
0x22dd	    0x8995fcf2ffff	            mov dword [rbp - 0xd04], edx	       644	describe.c	FUNCTION_53	ELSE_7	WHILE_1
0x22e3	            0x85c0	                           test eax, eax	       644	describe.c	FUNCTION_53	ELSE_7	WHILE_1
0x22e5	            0x7fc1	                            jg 0x40022e8	       644	describe.c	FUNCTION_53	ELSE_7	WHILE_1
0x22e7	      0xb800000000	                              mov eax, 0	       647	describe.c	FUNCTION_53
0x22ec	        0x488b4df8	                mov rcx, qword [rbp - 8]	       648	describe.c	FUNCTION_53
0x22f0	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       648	describe.c	FUNCTION_53
0x22f9	            0x7405	                            je 0x4002340	       648	describe.c	FUNCTION_53
0x22fb	      0xe800000000	                          call 0x4002340	       648	describe.c	FUNCTION_53
0x2300	              0xc9	                                   leave	       648	describe.c	FUNCTION_53
0x2301	              0xc3	                                     ret	       648	describe.c	FUNCTION_53
add_to_known_names	FOR,0:ELSE,0:DO,0:CALL,10:functions,0:IF,2:WHILE,0:SWITCH,0	88
0x470	              0x55	                                push rbp	       113	describe.c	FUNCTION_42
0x471	          0x4889e5	                            mov rbp, rsp	       113	describe.c	FUNCTION_42
0x474	        0x4883ec40	                           sub rsp, 0x40	       113	describe.c	FUNCTION_42
0x478	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       113	describe.c	FUNCTION_42
0x47c	        0x488975d0	             mov qword [rbp - 0x30], rsi	       113	describe.c	FUNCTION_42
0x480	          0x8955cc	             mov dword [rbp - 0x34], edx	       113	describe.c	FUNCTION_42
0x483	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       113	describe.c	FUNCTION_42
0x487	    0x64488b042528	                mov rax, qword fs:[0x28]	       113	describe.c	FUNCTION_42
0x490	        0x488945f8	                mov qword [rbp - 8], rax	       113	describe.c	FUNCTION_42
0x494	            0x31c0	                            xor eax, eax	       113	describe.c	FUNCTION_42
0x496	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       114	describe.c	FUNCTION_42	CALL_1
0x49a	          0x4889c7	                            mov rdi, rax	       114	describe.c	FUNCTION_42	CALL_1
0x49d	      0xe898feffff	               call sym.find_commit_name	       114	describe.c	FUNCTION_42	CALL_1
0x4a2	        0x488945f0	             mov qword [rbp - 0x10], rax	       114	describe.c	FUNCTION_42	CALL_1
0x4a6	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       115	describe.c	FUNCTION_42
0x4ae	        0x488d4de8	                   lea rcx, [rbp - 0x18]	       116	describe.c	FUNCTION_42	IF_1	CALL_2
0x4b2	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       116	describe.c	FUNCTION_42	IF_1	CALL_2
0x4b6	          0x8b75cc	             mov esi, dword [rbp - 0x34]	       116	describe.c	FUNCTION_42	IF_1	CALL_2
0x4b9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       116	describe.c	FUNCTION_42	IF_1	CALL_2
0x4bd	          0x4889c7	                            mov rdi, rax	       116	describe.c	FUNCTION_42	IF_1	CALL_2
0x4c0	      0xe8a8feffff	                   call sym.replace_name	       116	describe.c	FUNCTION_42	IF_1	CALL_2
0x4c5	            0x85c0	                           test eax, eax	       116	describe.c	FUNCTION_42	IF_1	CALL_2
0x4c7	     0xf84da000000	                            je 0x40005e7	       116	describe.c	FUNCTION_42	IF_1	CALL_2
0x4cd	      0x48837df000	               cmp qword [rbp - 0x10], 0	       117	describe.c	FUNCTION_42	IF_1	IF_2
0x4d2	            0x755e	                           jne 0x4000572	       117	describe.c	FUNCTION_42	IF_1	IF_2
0x4d4	      0xbf50000000	                           mov edi, 0x50	       118	describe.c	FUNCTION_42	IF_1	IF_2	CALL_3
0x4d9	      0xe800000000	                          call 0x400051e	       118	describe.c	FUNCTION_42	IF_1	IF_2	CALL_3
0x4de	        0x488945f0	             mov qword [rbp - 0x10], rax	       118	describe.c	FUNCTION_42	IF_1	IF_2	CALL_3
0x4e2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       119	describe.c	FUNCTION_42	IF_1	IF_2	CALL_4
0x4e6	        0x488d5010	                   lea rdx, [rax + 0x10]	       119	describe.c	FUNCTION_42	IF_1	IF_2	CALL_4
0x4ea	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       119	describe.c	FUNCTION_42	IF_1	IF_2	CALL_4
0x4ee	          0x4889c6	                            mov rsi, rax	       119	describe.c	FUNCTION_42	IF_1	IF_2	CALL_4
0x4f1	          0x4889d7	                            mov rdi, rdx	       119	describe.c	FUNCTION_42	IF_1	IF_2	CALL_4
0x4f4	      0xe8aafdffff	                         call sym.oidcpy	       119	describe.c	FUNCTION_42	IF_1	IF_2	CALL_4
0x4f9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       120	describe.c	FUNCTION_42	IF_1	IF_2	CALL_6
0x4fd	          0x4889c7	                            mov rdi, rax	       120	describe.c	FUNCTION_42	IF_1	IF_2	CALL_6
0x500	      0xe8c0fbffff	                       call sym.sha1hash	       120	describe.c	FUNCTION_42	IF_1	IF_2	CALL_6
0x505	            0x89c2	                            mov edx, eax	       120	describe.c	FUNCTION_42	IF_1	IF_2	CALL_6
0x507	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       120	describe.c	FUNCTION_42	IF_1	IF_2	CALL_6
0x50b	            0x89d6	                            mov esi, edx	       120	describe.c	FUNCTION_42	IF_1	IF_2	CALL_6
0x50d	          0x4889c7	                            mov rdi, rax	       120	describe.c	FUNCTION_42	IF_1	IF_2	CALL_6
0x510	      0xe8edfbffff	             call sym.hashmap_entry_init	       120	describe.c	FUNCTION_42	IF_1	IF_2	CALL_6
0x515	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       121	describe.c	FUNCTION_42	IF_1	IF_2	CALL_7
0x519	          0x4889c6	                            mov rsi, rax	       121	describe.c	FUNCTION_42	IF_1	IF_2	CALL_7
0x51c	      0xbf00000000	                              mov edi, 0	       121	describe.c	FUNCTION_42	IF_1	IF_2	CALL_7
0x521	      0xe800000000	                          call 0x4000566	       121	describe.c	FUNCTION_42	IF_1	IF_2	CALL_7
0x526	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       122	describe.c	FUNCTION_42	IF_1	IF_2
0x52a	    0x48c740480000	               mov qword [rax + 0x48], 0	       122	describe.c	FUNCTION_42	IF_1	IF_2
0x532	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       124	describe.c	FUNCTION_42	IF_1
0x536	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       124	describe.c	FUNCTION_42	IF_1
0x53a	        0x48895028	             mov qword [rax + 0x28], rdx	       124	describe.c	FUNCTION_42	IF_1
0x53e	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       125	describe.c	FUNCTION_42	IF_1
0x541	          0x83e003	                              and eax, 3	       125	describe.c	FUNCTION_42	IF_1
0x544	            0x89c2	                            mov edx, eax	       125	describe.c	FUNCTION_42	IF_1
0x546	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       125	describe.c	FUNCTION_42	IF_1
0x54a	            0x89d1	                            mov ecx, edx	       125	describe.c	FUNCTION_42	IF_1
0x54c	          0x83e103	                              and ecx, 3	       125	describe.c	FUNCTION_42	IF_1
0x54f	         0xfb65030	           movzx edx, byte [rax + 0x30] 	       125	describe.c	FUNCTION_42	IF_1
0x553	          0x83e2fc	                     and edx, 0xfffffffc	       125	describe.c	FUNCTION_42	IF_1
0x556	             0x9ca	                             or edx, ecx	       125	describe.c	FUNCTION_42	IF_1
0x558	          0x885030	               mov byte [rax + 0x30], dl	       125	describe.c	FUNCTION_42	IF_1
0x55b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       126	describe.c	FUNCTION_42	IF_1
0x55f	         0xfb65030	           movzx edx, byte [rax + 0x30] 	       126	describe.c	FUNCTION_42	IF_1
0x563	          0x83e2fb	                     and edx, 0xfffffffb	       126	describe.c	FUNCTION_42	IF_1
0x566	          0x885030	               mov byte [rax + 0x30], dl	       126	describe.c	FUNCTION_42	IF_1
0x569	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       127	describe.c	FUNCTION_42	IF_1	CALL_8
0x56d	        0x488d5031	                   lea rdx, [rax + 0x31]	       127	describe.c	FUNCTION_42	IF_1	CALL_8
0x571	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       127	describe.c	FUNCTION_42	IF_1	CALL_8
0x575	          0x4889c6	                            mov rsi, rax	       127	describe.c	FUNCTION_42	IF_1	CALL_8
0x578	          0x4889d7	                            mov rdi, rdx	       127	describe.c	FUNCTION_42	IF_1	CALL_8
0x57b	      0xe823fdffff	                         call sym.oidcpy	       127	describe.c	FUNCTION_42	IF_1	CALL_8
0x580	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       128	describe.c	FUNCTION_42	IF_1	CALL_9
0x584	        0x488b4048	            mov rax, qword [rax + 0x48] 	       128	describe.c	FUNCTION_42	IF_1	CALL_9
0x588	          0x4889c7	                            mov rdi, rax	       128	describe.c	FUNCTION_42	IF_1	CALL_9
0x58b	      0xe800000000	                          call 0x40005d0	       128	describe.c	FUNCTION_42	IF_1	CALL_9
0x590	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       129	describe.c	FUNCTION_42	IF_1	CALL_10
0x594	          0x4889c7	                            mov rdi, rax	       129	describe.c	FUNCTION_42	IF_1	CALL_10
0x597	      0xe800000000	                          call 0x40005dc	       129	describe.c	FUNCTION_42	IF_1	CALL_10
0x59c	          0x4889c2	                            mov rdx, rax	       129	describe.c	FUNCTION_42	IF_1	CALL_10
0x59f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       129	describe.c	FUNCTION_42	IF_1	CALL_10
0x5a3	        0x48895048	             mov qword [rax + 0x48], rdx	       129	describe.c	FUNCTION_42	IF_1	CALL_10
0x5a7	              0x90	                                     nop	       131	describe.c	FUNCTION_42
0x5a8	        0x488b45f8	                mov rax, qword [rbp - 8]	       131	describe.c	FUNCTION_42
0x5ac	    0x644833042528	                xor rax, qword fs:[0x28]	       131	describe.c	FUNCTION_42
0x5b5	            0x7405	                            je 0x40005fc	       131	describe.c	FUNCTION_42
0x5b7	      0xe800000000	                          call 0x40005fc	       131	describe.c	FUNCTION_42
0x5bc	              0xc9	                                   leave	       131	describe.c	FUNCTION_42
0x5bd	              0xc3	                                     ret	       131	describe.c	FUNCTION_42
process_object	FOR,0:ELSE,0:DO,0:CALL,5:functions,0:IF,1:WHILE,0:SWITCH,0	47
0x15a4	              0x55	                                push rbp	       457	describe.c	FUNCTION_50
0x15a5	          0x4889e5	                            mov rbp, rsp	       457	describe.c	FUNCTION_50
0x15a8	        0x4883ec30	                           sub rsp, 0x30	       457	describe.c	FUNCTION_50
0x15ac	        0x48897de8	             mov qword [rbp - 0x18], rdi	       457	describe.c	FUNCTION_50
0x15b0	        0x488975e0	             mov qword [rbp - 0x20], rsi	       457	describe.c	FUNCTION_50
0x15b4	        0x488955d8	             mov qword [rbp - 0x28], rdx	       457	describe.c	FUNCTION_50
0x15b8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       458	describe.c	FUNCTION_50
0x15bc	        0x488945f8	                mov qword [rbp - 8], rax	       458	describe.c	FUNCTION_50
0x15c0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       460	describe.c	FUNCTION_50	IF_1	CALL_1
0x15c4	        0x488d5004	                      lea rdx, [rax + 4]	       460	describe.c	FUNCTION_50	IF_1	CALL_1
0x15c8	        0x488b45f8	                mov rax, qword [rbp - 8]	       460	describe.c	FUNCTION_50	IF_1	CALL_1
0x15cc	        0x4883c014	                           add rax, 0x14	       460	describe.c	FUNCTION_50	IF_1	CALL_1
0x15d0	          0x4889d6	                            mov rsi, rdx	       460	describe.c	FUNCTION_50	IF_1	CALL_1
0x15d3	          0x4889c7	                            mov rdi, rax	       460	describe.c	FUNCTION_50	IF_1	CALL_1
0x15d6	      0xe878ecffff	                         call sym.oidcmp	       460	describe.c	FUNCTION_50	IF_1	CALL_1
0x15db	            0x85c0	                           test eax, eax	       460	describe.c	FUNCTION_50	IF_1	CALL_1
0x15dd	            0x756d	                           jne 0x400168c	       460	describe.c	FUNCTION_50	IF_1	CALL_1
0x15df	        0x488b45f8	                mov rax, qword [rbp - 8]	       460	describe.c	FUNCTION_50	IF_1	CALL_1
0x15e3	        0x488b4028	            mov rax, qword [rax + 0x28] 	       460	describe.c	FUNCTION_50	IF_1	CALL_1
0x15e7	        0x488b4008	                mov rax, qword [rax + 8]	       460	describe.c	FUNCTION_50	IF_1	CALL_1
0x15eb	          0x4885c0	                           test rax, rax	       460	describe.c	FUNCTION_50	IF_1	CALL_1
0x15ee	            0x755c	                           jne 0x400168c	       460	describe.c	FUNCTION_50	IF_1	CALL_1
0x15f0	      0xe800000000	                          call 0x4001635	       461	describe.c	FUNCTION_50	IF_1	CALL_2
0x15f5	        0x488b45f8	                mov rax, qword [rbp - 8]	       462	describe.c	FUNCTION_50	IF_1	CALL_3
0x15f9	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       462	describe.c	FUNCTION_50	IF_1	CALL_3
0x15fd	        0x488b45f8	                mov rax, qword [rbp - 8]	       462	describe.c	FUNCTION_50	IF_1	CALL_3
0x1601	          0x4889d6	                            mov rsi, rdx	       462	describe.c	FUNCTION_50	IF_1	CALL_3
0x1604	          0x4889c7	                            mov rdi, rax	       462	describe.c	FUNCTION_50	IF_1	CALL_3
0x1607	      0xe800f6ffff	                call sym.describe_commit	       462	describe.c	FUNCTION_50	IF_1	CALL_3
0x160c	        0x488b45f8	                mov rax, qword [rbp - 8]	       463	describe.c	FUNCTION_50	IF_1	CALL_4
0x1610	        0x488b4028	            mov rax, qword [rax + 0x28] 	       463	describe.c	FUNCTION_50	IF_1	CALL_4
0x1614	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       463	describe.c	FUNCTION_50	IF_1	CALL_4
0x1618	      0xbe00000000	                              mov esi, 0	       463	describe.c	FUNCTION_50	IF_1	CALL_4
0x161d	          0x4889c7	                            mov rdi, rax	       463	describe.c	FUNCTION_50	IF_1	CALL_4
0x1620	      0xb800000000	                              mov eax, 0	       463	describe.c	FUNCTION_50	IF_1	CALL_4
0x1625	      0xe800000000	                          call 0x400166a	       463	describe.c	FUNCTION_50	IF_1	CALL_4
0x162a	        0x488b45f8	                mov rax, qword [rbp - 8]	       464	describe.c	FUNCTION_50	IF_1	CALL_5
0x162e	        0x488b4030	            mov rax, qword [rax + 0x30] 	       464	describe.c	FUNCTION_50	IF_1	CALL_5
0x1632	          0x488b00	                    mov rax, qword [rax]	       464	describe.c	FUNCTION_50	IF_1	CALL_5
0x1635	          0x4889c7	                            mov rdi, rax	       464	describe.c	FUNCTION_50	IF_1	CALL_5
0x1638	      0xe800000000	                          call 0x400167d	       464	describe.c	FUNCTION_50	IF_1	CALL_5
0x163d	        0x488b45f8	                mov rax, qword [rbp - 8]	       465	describe.c	FUNCTION_50	IF_1
0x1641	        0x488b4030	            mov rax, qword [rax + 0x30] 	       465	describe.c	FUNCTION_50	IF_1
0x1645	    0x48c700000000	                      mov qword [rax], 0	       465	describe.c	FUNCTION_50	IF_1
0x164c	              0x90	                                     nop	       467	describe.c	FUNCTION_50
0x164d	              0xc9	                                   leave	       467	describe.c	FUNCTION_50
0x164e	              0xc3	                                     ret	       467	describe.c	FUNCTION_50
describe	FOR,0:ELSE,2:DO,0:CALL,14:functions,0:IF,5:WHILE,0:SWITCH,0	100
0x17de	              0x55	                                push rbp	       491	describe.c	FUNCTION_52
0x17df	          0x4889e5	                            mov rbp, rsp	       491	describe.c	FUNCTION_52
0x17e2	        0x4883ec60	                           sub rsp, 0x60	       491	describe.c	FUNCTION_52
0x17e6	        0x48897da8	             mov qword [rbp - 0x58], rdi	       491	describe.c	FUNCTION_52
0x17ea	          0x8975a4	             mov dword [rbp - 0x5c], esi	       491	describe.c	FUNCTION_52
0x17ed	    0x64488b042528	                mov rax, qword fs:[0x28]	       491	describe.c	FUNCTION_52
0x17f6	        0x488945f8	                mov qword [rbp - 8], rax	       491	describe.c	FUNCTION_52
0x17fa	            0x31c0	                            xor eax, eax	       491	describe.c	FUNCTION_52
0x17fc	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       494	describe.c	FUNCTION_52
0x1804	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       494	describe.c	FUNCTION_52
0x180c	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       494	describe.c	FUNCTION_52
0x1814	    0x8b0500000000	            mov eax, dword [0x0400185a] 	       496	describe.c	FUNCTION_52	IF_1
0x181a	            0x85c0	                           test eax, eax	       496	describe.c	FUNCTION_52	IF_1
0x181c	            0x7428	                            je 0x4001886	       496	describe.c	FUNCTION_52	IF_1
0x181e	      0xbf00000000	                              mov edi, 0	       497	describe.c	FUNCTION_52	CALL_2
0x1823	      0xe8d5e9ffff	                               call sym.	       497	describe.c	FUNCTION_52	CALL_2
0x1828	          0x4889c1	                            mov rcx, rax	       497	describe.c	FUNCTION_52	CALL_2
0x182b	    0x488b05000000	            mov rax, qword [0x04001872] 	       497	describe.c	FUNCTION_52	CALL_2
0x1832	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       497	describe.c	FUNCTION_52	CALL_2
0x1836	          0x4889ce	                            mov rsi, rcx	       497	describe.c	FUNCTION_52	CALL_2
0x1839	          0x4889c7	                            mov rdi, rax	       497	describe.c	FUNCTION_52	CALL_2
0x183c	      0xb800000000	                              mov eax, 0	       497	describe.c	FUNCTION_52	CALL_2
0x1841	      0xe800000000	                          call 0x4001886	       497	describe.c	FUNCTION_52	CALL_2
0x1846	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       499	describe.c	FUNCTION_52	IF_2	CALL_3
0x184a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       499	describe.c	FUNCTION_52	IF_2	CALL_3
0x184e	          0x4889d6	                            mov rsi, rdx	       499	describe.c	FUNCTION_52	IF_2	CALL_3
0x1851	          0x4889c7	                            mov rdi, rax	       499	describe.c	FUNCTION_52	IF_2	CALL_3
0x1854	      0xe800000000	                          call 0x4001899	       499	describe.c	FUNCTION_52	IF_2	CALL_3
0x1859	            0x85c0	                           test eax, eax	       499	describe.c	FUNCTION_52	IF_2	CALL_3
0x185b	            0x7421	                            je 0x40018be	       499	describe.c	FUNCTION_52	IF_2	CALL_3
0x185d	      0xbf00000000	                              mov edi, 0	       500	describe.c	FUNCTION_52	CALL_5
0x1862	      0xe896e9ffff	                               call sym.	       500	describe.c	FUNCTION_52	CALL_5
0x1867	          0x4889c2	                            mov rdx, rax	       500	describe.c	FUNCTION_52	CALL_5
0x186a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       500	describe.c	FUNCTION_52	CALL_5
0x186e	          0x4889c6	                            mov rsi, rax	       500	describe.c	FUNCTION_52	CALL_5
0x1871	          0x4889d7	                            mov rdi, rdx	       500	describe.c	FUNCTION_52	CALL_5
0x1874	      0xb800000000	                              mov eax, 0	       500	describe.c	FUNCTION_52	CALL_5
0x1879	      0xe800000000	                          call 0x40018be	       500	describe.c	FUNCTION_52	CALL_5
0x187e	        0x488d45e0	                   lea rax, [rbp - 0x20]	       501	describe.c	FUNCTION_52	CALL_6
0x1882	      0xbe01000000	                              mov esi, 1	       501	describe.c	FUNCTION_52	CALL_6
0x1887	          0x4889c7	                            mov rdi, rax	       501	describe.c	FUNCTION_52	CALL_6
0x188a	      0xe800000000	                          call 0x40018cf	       501	describe.c	FUNCTION_52	CALL_6
0x188f	        0x488945b8	             mov qword [rbp - 0x48], rax	       501	describe.c	FUNCTION_52	CALL_6
0x1893	      0x48837db800	               cmp qword [rbp - 0x48], 0	       503	describe.c	FUNCTION_52	IF_3
0x1898	            0x7415	                            je 0x40018ef	       503	describe.c	FUNCTION_52	IF_3
0x189a	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       504	describe.c	FUNCTION_52	CALL_7
0x189e	        0x488d45e0	                   lea rax, [rbp - 0x20]	       504	describe.c	FUNCTION_52	CALL_7
0x18a2	          0x4889d6	                            mov rsi, rdx	       504	describe.c	FUNCTION_52	CALL_7
0x18a5	          0x4889c7	                            mov rdi, rax	       504	describe.c	FUNCTION_52	CALL_7
0x18a8	      0xe85ff3ffff	                call sym.describe_commit	       504	describe.c	FUNCTION_52	CALL_7
0x18ad	            0xeb73	                           jmp 0x4001962	       504	describe.c	FUNCTION_52	CALL_7
0x18af	    0x488b05000000	            mov rax, qword [0x040018f6] 	       505	describe.c	FUNCTION_52	ELSE_1	IF_4	CALL_8
0x18b6	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       505	describe.c	FUNCTION_52	ELSE_1	IF_4	CALL_8
0x18ba	      0xba00000000	                              mov edx, 0	       505	describe.c	FUNCTION_52	ELSE_1	IF_4	CALL_8
0x18bf	          0x4889ce	                            mov rsi, rcx	       505	describe.c	FUNCTION_52	ELSE_1	IF_4	CALL_8
0x18c2	          0x4889c7	                            mov rdi, rax	       505	describe.c	FUNCTION_52	ELSE_1	IF_4	CALL_8
0x18c5	      0xe800000000	                          call 0x400190a	       505	describe.c	FUNCTION_52	ELSE_1	IF_4	CALL_8
0x18ca	          0x83f803	                              cmp eax, 3	       505	describe.c	FUNCTION_52	ELSE_1	IF_4	CALL_8
0x18cd	            0x7532	                           jne 0x4001941	       505	describe.c	FUNCTION_52	ELSE_1	IF_4	CALL_8
0x18cf	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       506	describe.c	FUNCTION_52	ELSE_1	IF_4
0x18d3	        0x4883ec08	                              sub rsp, 8	       506	describe.c	FUNCTION_52	ELSE_1	IF_4
0x18d7	        0x4883ec18	                           sub rsp, 0x18	       506	describe.c	FUNCTION_52	ELSE_1	IF_4
0x18db	          0x4889e0	                            mov rax, rsp	       506	describe.c	FUNCTION_52	ELSE_1	IF_4
0x18de	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       506	describe.c	FUNCTION_52	ELSE_1	IF_4
0x18e2	          0x488908	                    mov qword [rax], rcx	       506	describe.c	FUNCTION_52	ELSE_1	IF_4
0x18e5	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       506	describe.c	FUNCTION_52	ELSE_1	IF_4
0x18e9	        0x48894808	                mov qword [rax + 8], rcx	       506	describe.c	FUNCTION_52	ELSE_1	IF_4
0x18ed	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	       506	describe.c	FUNCTION_52	ELSE_1	IF_4
0x18f0	          0x894810	             mov dword [rax + 0x10], ecx	       506	describe.c	FUNCTION_52	ELSE_1	IF_4
0x18f3	          0x4889d7	                            mov rdi, rdx	       506	describe.c	FUNCTION_52	ELSE_1	IF_4
0x18f6	      0xe854fdffff	                  call sym.describe_blob	       506	describe.c	FUNCTION_52	ELSE_1	IF_4
0x18fb	        0x4883c420	                           add rsp, 0x20	       506	describe.c	FUNCTION_52	ELSE_1	IF_4
0x18ff	            0xeb21	                           jmp 0x4001962	       506	describe.c	FUNCTION_52	ELSE_1	IF_4
0x1901	      0xbf00000000	                              mov edi, 0	       508	describe.c	FUNCTION_52	CALL_11
0x1906	      0xe8f2e8ffff	                               call sym.	       508	describe.c	FUNCTION_52	CALL_11
0x190b	          0x4889c2	                            mov rdx, rax	       508	describe.c	FUNCTION_52	CALL_11
0x190e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       508	describe.c	FUNCTION_52	CALL_11
0x1912	          0x4889c6	                            mov rsi, rax	       508	describe.c	FUNCTION_52	CALL_11
0x1915	          0x4889d7	                            mov rdi, rdx	       508	describe.c	FUNCTION_52	CALL_11
0x1918	      0xb800000000	                              mov eax, 0	       508	describe.c	FUNCTION_52	CALL_11
0x191d	      0xe800000000	                          call 0x4001962	       508	describe.c	FUNCTION_52	CALL_11
0x1922	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       510	describe.c	FUNCTION_52	CALL_12
0x1926	          0x4889c7	                            mov rdi, rax	       510	describe.c	FUNCTION_52	CALL_12
0x1929	      0xe800000000	                          call 0x400196e	       510	describe.c	FUNCTION_52	CALL_12
0x192e	        0x837da400	               cmp dword [rbp - 0x5c], 0	       512	describe.c	FUNCTION_52	IF_5
0x1932	            0x7511	                           jne 0x4001985	       512	describe.c	FUNCTION_52	IF_5
0x1934	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       513	describe.c	FUNCTION_52	CALL_13
0x1938	      0xbeffffffff	                     mov esi, 0xffffffff	       513	describe.c	FUNCTION_52	CALL_13
0x193d	          0x4889c7	                            mov rdi, rax	       513	describe.c	FUNCTION_52	CALL_13
0x1940	      0xe800000000	                          call 0x4001985	       513	describe.c	FUNCTION_52	CALL_13
0x1945	        0x488d45c0	                   lea rax, [rbp - 0x40]	       515	describe.c	FUNCTION_52	CALL_14
0x1949	          0x4889c7	                            mov rdi, rax	       515	describe.c	FUNCTION_52	CALL_14
0x194c	      0xe800000000	                          call 0x4001991	       515	describe.c	FUNCTION_52	CALL_14
0x1951	              0x90	                                     nop	       516	describe.c	FUNCTION_52
0x1952	        0x488b45f8	                mov rax, qword [rbp - 8]	       516	describe.c	FUNCTION_52
0x1956	    0x644833042528	                xor rax, qword fs:[0x28]	       516	describe.c	FUNCTION_52
0x195f	            0x7405	                            je 0x40019a6	       516	describe.c	FUNCTION_52
0x1961	      0xe800000000	                          call 0x40019a6	       516	describe.c	FUNCTION_52
0x1966	              0xc9	                                   leave	       516	describe.c	FUNCTION_52
0x1967	              0xc3	                                     ret	       516	describe.c	FUNCTION_52
sha1hash	FOR,0:ELSE,0:DO,0:CALL,1:functions,0:IF,0:WHILE,0:SWITCH,0	17
0xc5	              0x55	                                push rbp	       122	hashmap.h	FUNCTION_54
0xc6	          0x4889e5	                            mov rbp, rsp	       122	hashmap.h	FUNCTION_54
0xc9	        0x4883ec20	                           sub rsp, 0x20	       122	hashmap.h	FUNCTION_54
0xcd	        0x48897de8	             mov qword [rbp - 0x18], rdi	       122	hashmap.h	FUNCTION_54
0xd1	    0x64488b042528	                mov rax, qword fs:[0x28]	       122	hashmap.h	FUNCTION_54
0xda	        0x488945f8	                mov qword [rbp - 8], rax	       122	hashmap.h	FUNCTION_54
0xde	            0x31c0	                            xor eax, eax	       122	hashmap.h	FUNCTION_54
0xe0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       128	hashmap.h	FUNCTION_54	CALL_1
0xe4	            0x8b00	                    mov eax, dword [rax]	       128	hashmap.h	FUNCTION_54	CALL_1
0xe6	          0x8945f4	              mov dword [rbp - 0xc], eax	       128	hashmap.h	FUNCTION_54	CALL_1
0xe9	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       129	hashmap.h	FUNCTION_54
0xec	        0x488b55f8	                mov rdx, qword [rbp - 8]	       130	hashmap.h	FUNCTION_54
0xf0	    0x644833142528	                xor rdx, qword fs:[0x28]	       130	hashmap.h	FUNCTION_54
0xf9	            0x7405	                            je 0x4000140	       130	hashmap.h	FUNCTION_54
0xfb	      0xe800000000	                          call 0x4000140	       130	hashmap.h	FUNCTION_54
0x100	              0xc9	                                   leave	       130	hashmap.h	FUNCTION_54
0x101	              0xc3	                                     ret	       130	hashmap.h	FUNCTION_54
describe_blob	FOR,0:ELSE,0:DO,0:CALL,8:functions,0:IF,2:WHILE,0:SWITCH,0	78
0x164f	              0x55	                                push rbp	       470	describe.c	FUNCTION_51
0x1650	          0x4889e5	                            mov rbp, rsp	       470	describe.c	FUNCTION_51
0x1653	    0x4881ec200900	                          sub rsp, 0x920	       470	describe.c	FUNCTION_51
0x165a	    0x4889bde8f6ff	            mov qword [rbp - 0x918], rdi	       470	describe.c	FUNCTION_51
0x1661	    0x64488b042528	                mov rax, qword fs:[0x28]	       470	describe.c	FUNCTION_51
0x166a	        0x488945f8	                mov qword [rbp - 8], rax	       470	describe.c	FUNCTION_51
0x166e	            0x31c0	                            xor eax, eax	       470	describe.c	FUNCTION_51
0x1670	    0x48c785f0f6ff	              mov qword [rbp - 0x910], 0	       472	describe.c	FUNCTION_51
0x167b	    0xc785f8f6ffff	              mov dword [rbp - 0x908], 0	       472	describe.c	FUNCTION_51
0x1685	    0xc785fcf6ffff	              mov dword [rbp - 0x904], 0	       472	describe.c	FUNCTION_51
0x168f	    0x488b05000000	            mov rax, qword [0x040016d6] 	       473	describe.c	FUNCTION_51
0x1696	    0x48898500f7ff	            mov qword [rbp - 0x900], rax	       473	describe.c	FUNCTION_51
0x169d	    0x488b05000000	            mov rax, qword [0x040016e4] 	       473	describe.c	FUNCTION_51
0x16a4	    0x48898508f7ff	            mov qword [rbp - 0x8f8], rax	       473	describe.c	FUNCTION_51
0x16ab	    0x8b0500000000	            mov eax, dword [0x040016f1] 	       473	describe.c	FUNCTION_51
0x16b1	    0x898510f7ffff	            mov dword [rbp - 0x8f0], eax	       473	describe.c	FUNCTION_51
0x16b7	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       473	describe.c	FUNCTION_51
0x16bb	    0x48898514f7ff	            mov qword [rbp - 0x8ec], rax	       473	describe.c	FUNCTION_51
0x16c2	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       473	describe.c	FUNCTION_51
0x16c6	    0x4889851cf7ff	            mov qword [rbp - 0x8e4], rax	       473	describe.c	FUNCTION_51
0x16cd	          0x8b4520	            mov eax, dword [rbp + 0x20] 	       473	describe.c	FUNCTION_51
0x16d0	    0x898524f7ffff	            mov dword [rbp - 0x8dc], eax	       473	describe.c	FUNCTION_51
0x16d6	    0x488b85e8f6ff	            mov rax, qword [rbp - 0x918]	       473	describe.c	FUNCTION_51
0x16dd	    0x48898528f7ff	            mov qword [rbp - 0x8d8], rax	       473	describe.c	FUNCTION_51
0x16e4	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       473	describe.c	FUNCTION_51
0x16eb	    0x48898530f7ff	            mov qword [rbp - 0x8d0], rax	       473	describe.c	FUNCTION_51
0x16f2	    0x488d85f0f6ff	                  lea rax, [rbp - 0x910]	       475	describe.c	FUNCTION_51	CALL_1
0x16f9	        0x4883ec08	                              sub rsp, 8	       475	describe.c	FUNCTION_51	CALL_1
0x16fd	            0x6a00	                                  push 0	       475	describe.c	FUNCTION_51	CALL_1
0x16ff	    0x41b900000000	                              mov r9d, 0	       475	describe.c	FUNCTION_51	CALL_1
0x1705	    0x41b800000000	                              mov r8d, 0	       475	describe.c	FUNCTION_51	CALL_1
0x170b	      0xb900000000	                              mov ecx, 0	       475	describe.c	FUNCTION_51	CALL_1
0x1710	      0xba00000000	                              mov edx, 0	       475	describe.c	FUNCTION_51	CALL_1
0x1715	      0xbe00000000	                              mov esi, 0	       475	describe.c	FUNCTION_51	CALL_1
0x171a	          0x4889c7	                            mov rdi, rax	       475	describe.c	FUNCTION_51	CALL_1
0x171d	      0xb800000000	                              mov eax, 0	       475	describe.c	FUNCTION_51	CALL_1
0x1722	      0xe800000000	                          call 0x4001767	       475	describe.c	FUNCTION_51	CALL_1
0x1727	        0x4883c410	                           add rsp, 0x10	       475	describe.c	FUNCTION_51	CALL_1
0x172b	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       479	describe.c	FUNCTION_51	CALL_2
0x1732	      0xbe00000000	                              mov esi, 0	       479	describe.c	FUNCTION_51	CALL_2
0x1737	          0x4889c7	                            mov rdi, rax	       479	describe.c	FUNCTION_51	CALL_2
0x173a	      0xe800000000	                          call 0x400177f	       479	describe.c	FUNCTION_51	CALL_2
0x173f	    0x488bb5f0f6ff	            mov rsi, qword [rbp - 0x910]	       480	describe.c	FUNCTION_51	IF_1	CALL_3
0x1746	    0x8b85f8f6ffff	            mov eax, dword [rbp - 0x908]	       480	describe.c	FUNCTION_51	IF_1	CALL_3
0x174c	    0x488d9540f7ff	                  lea rdx, [rbp - 0x8c0]	       480	describe.c	FUNCTION_51	IF_1	CALL_3
0x1753	      0xb900000000	                              mov ecx, 0	       480	describe.c	FUNCTION_51	IF_1	CALL_3
0x1758	            0x89c7	                            mov edi, eax	       480	describe.c	FUNCTION_51	IF_1	CALL_3
0x175a	      0xe800000000	                          call 0x400179f	       480	describe.c	FUNCTION_51	IF_1	CALL_3
0x175f	          0x83f801	                              cmp eax, 1	       480	describe.c	FUNCTION_51	IF_1	CALL_3
0x1762	            0x7e19	                           jle 0x40017bd	       480	describe.c	FUNCTION_51	IF_1	CALL_3
0x1764	      0xba00000000	                              mov edx, 0	       481	describe.c	FUNCTION_51	CALL_4
0x1769	      0xbee1010000	                          mov esi, 0x1e1	       481	describe.c	FUNCTION_51	CALL_4
0x176e	      0xbf00000000	                              mov edi, 0	       481	describe.c	FUNCTION_51	CALL_4
0x1773	      0xb800000000	                              mov eax, 0	       481	describe.c	FUNCTION_51	CALL_4
0x1778	      0xe800000000	                          call 0x40017bd	       481	describe.c	FUNCTION_51	CALL_4
0x177d	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       483	describe.c	FUNCTION_51	IF_2	CALL_5
0x1784	          0x4889c7	                            mov rdi, rax	       483	describe.c	FUNCTION_51	IF_2	CALL_5
0x1787	      0xe800000000	                          call 0x40017cc	       483	describe.c	FUNCTION_51	IF_2	CALL_5
0x178c	            0x85c0	                           test eax, eax	       483	describe.c	FUNCTION_51	IF_2	CALL_5
0x178e	            0x740f	                            je 0x40017df	       483	describe.c	FUNCTION_51	IF_2	CALL_5
0x1790	      0xbf00000000	                              mov edi, 0	       484	describe.c	FUNCTION_51	CALL_6
0x1795	      0xb800000000	                              mov eax, 0	       484	describe.c	FUNCTION_51	CALL_6
0x179a	      0xe800000000	                          call 0x40017df	       484	describe.c	FUNCTION_51	CALL_6
0x179f	    0x488d9500f7ff	                  lea rdx, [rbp - 0x900]	       486	describe.c	FUNCTION_51	CALL_7
0x17a6	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       486	describe.c	FUNCTION_51	CALL_7
0x17ad	          0x4889d1	                            mov rcx, rdx	       486	describe.c	FUNCTION_51	CALL_7
0x17b0	      0xba00000000	                              mov edx, 0	       486	describe.c	FUNCTION_51	CALL_7
0x17b5	      0xbe00000000	                              mov esi, 0	       486	describe.c	FUNCTION_51	CALL_7
0x17ba	          0x4889c7	                            mov rdi, rax	       486	describe.c	FUNCTION_51	CALL_7
0x17bd	      0xe800000000	                          call 0x4001802	       486	describe.c	FUNCTION_51	CALL_7
0x17c2	      0xe800000000	                          call 0x4001807	       487	describe.c	FUNCTION_51	CALL_8
0x17c7	              0x90	                                     nop	       488	describe.c	FUNCTION_51
0x17c8	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	describe.c	FUNCTION_51
0x17cc	    0x644833042528	                xor rax, qword fs:[0x28]	       488	describe.c	FUNCTION_51
0x17d5	            0x7405	                            je 0x400181c	       488	describe.c	FUNCTION_51
0x17d7	      0xe800000000	                          call 0x400181c	       488	describe.c	FUNCTION_51
0x17dc	              0xc9	                                   leave	       488	describe.c	FUNCTION_51
0x17dd	              0xc3	                                     ret	       488	describe.c	FUNCTION_51
get_name	FOR,0:ELSE,5:DO,0:CALL,7:functions,2:IF,9:WHILE,0:SWITCH,0	159
0x5be	              0x55	                                push rbp	       134	describe.c	FUNCTION_43
0x5bf	          0x4889e5	                            mov rbp, rsp	       134	describe.c	FUNCTION_43
0x5c2	        0x4883ec70	                           sub rsp, 0x70	       134	describe.c	FUNCTION_43
0x5c6	        0x48897da8	             mov qword [rbp - 0x58], rdi	       134	describe.c	FUNCTION_43
0x5ca	        0x488975a0	             mov qword [rbp - 0x60], rsi	       134	describe.c	FUNCTION_43
0x5ce	          0x89559c	             mov dword [rbp - 0x64], edx	       134	describe.c	FUNCTION_43
0x5d1	        0x48894d90	             mov qword [rbp - 0x70], rcx	       134	describe.c	FUNCTION_43
0x5d5	    0x64488b042528	                mov rax, qword fs:[0x28]	       134	describe.c	FUNCTION_43
0x5de	        0x488945f8	                mov qword [rbp - 8], rax	       134	describe.c	FUNCTION_43
0x5e2	            0x31c0	                            xor eax, eax	       134	describe.c	FUNCTION_43
0x5e4	    0xc745b8000000	               mov dword [rbp - 0x48], 0	       135	describe.c	FUNCTION_43
0x5eb	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       138	describe.c	FUNCTION_43
0x5f3	        0x488d55c8	                   lea rdx, [rbp - 0x38]	       140	describe.c	FUNCTION_43	IF_1	CALL_1
0x5f7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       140	describe.c	FUNCTION_43	IF_1	CALL_1
0x5fb	      0xbe00000000	                              mov esi, 0	       140	describe.c	FUNCTION_43	IF_1	CALL_1
0x600	          0x4889c7	                            mov rdi, rax	       140	describe.c	FUNCTION_43	IF_1	CALL_1
0x603	      0xe8f8f9ffff	                    call sym.skip_prefix	       140	describe.c	FUNCTION_43	IF_1	CALL_1
0x608	            0x85c0	                           test eax, eax	       140	describe.c	FUNCTION_43	IF_1	CALL_1
0x60a	            0x7409	                            je 0x4000655	       140	describe.c	FUNCTION_43	IF_1	CALL_1
0x60c	    0xc745b8010000	               mov dword [rbp - 0x48], 1	       141	describe.c	FUNCTION_43	IF_1
0x613	            0xeb64	                           jmp 0x40006b9	       141	describe.c	FUNCTION_43	IF_1
0x615	    0x8b0500000000	            mov eax, dword [0x0400065b] 	       142	describe.c	FUNCTION_43	ELSE_1	IF_2
0x61b	            0x85c0	                           test eax, eax	       142	describe.c	FUNCTION_43	ELSE_1	IF_2
0x61d	            0x7450	                            je 0x40006af	       142	describe.c	FUNCTION_43	ELSE_1	IF_2
0x61f	    0x8b0500000000	            mov eax, dword [0x04000665] 	       143	describe.c	FUNCTION_43	ELSE_1	IF_2	IF_3
0x625	            0x85c0	                           test eax, eax	       143	describe.c	FUNCTION_43	ELSE_1	IF_2	IF_3
0x627	            0x750a	                           jne 0x4000673	       143	describe.c	FUNCTION_43	ELSE_1	IF_2	IF_3
0x629	    0x8b0500000000	            mov eax, dword [0x0400066f] 	       143	describe.c	FUNCTION_43	ELSE_1	IF_2	IF_3
0x62f	            0x85c0	                           test eax, eax	       143	describe.c	FUNCTION_43	ELSE_1	IF_2	IF_3
0x631	            0x7446	                            je 0x40006b9	       143	describe.c	FUNCTION_43	ELSE_1	IF_2	IF_3
0x633	        0x488d55c8	                   lea rdx, [rbp - 0x38]	       144	describe.c	FUNCTION_43	ELSE_1	IF_2	IF_3	CALL_2
0x637	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       144	describe.c	FUNCTION_43	ELSE_1	IF_2	IF_3	CALL_2
0x63b	      0xbe00000000	                              mov esi, 0	       144	describe.c	FUNCTION_43	ELSE_1	IF_2	IF_3	CALL_2
0x640	          0x4889c7	                            mov rdi, rax	       144	describe.c	FUNCTION_43	ELSE_1	IF_2	IF_3	CALL_2
0x643	      0xe8b8f9ffff	                    call sym.skip_prefix	       144	describe.c	FUNCTION_43	ELSE_1	IF_2	IF_3	CALL_2
0x648	            0x85c0	                           test eax, eax	       143	describe.c	FUNCTION_43	ELSE_1	IF_2	IF_3
0x64a	            0x752d	                           jne 0x40006b9	       143	describe.c	FUNCTION_43	ELSE_1	IF_2	IF_3
0x64c	        0x488d55c8	                   lea rdx, [rbp - 0x38]	       145	describe.c	FUNCTION_43	ELSE_1	IF_2	IF_3	CALL_3
0x650	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       145	describe.c	FUNCTION_43	ELSE_1	IF_2	IF_3	CALL_3
0x654	      0xbe00000000	                              mov esi, 0	       145	describe.c	FUNCTION_43	ELSE_1	IF_2	IF_3	CALL_3
0x659	          0x4889c7	                            mov rdi, rax	       145	describe.c	FUNCTION_43	ELSE_1	IF_2	IF_3	CALL_3
0x65c	      0xe89ff9ffff	                    call sym.skip_prefix	       145	describe.c	FUNCTION_43	ELSE_1	IF_2	IF_3	CALL_3
0x661	            0x85c0	                           test eax, eax	       144	describe.c	FUNCTION_43	ELSE_1	IF_2	IF_3	CALL_2
0x663	            0x7514	                           jne 0x40006b9	       144	describe.c	FUNCTION_43	ELSE_1	IF_2	IF_3	CALL_2
0x665	      0xb800000000	                              mov eax, 0	       147	describe.c	FUNCTION_43	ELSE_1	IF_2	IF_3
0x66a	      0xe99a010000	                           jmp 0x4000849	       147	describe.c	FUNCTION_43	ELSE_1	IF_2	IF_3
0x66f	      0xb800000000	                              mov eax, 0	       151	describe.c	FUNCTION_43	ELSE_2
0x674	      0xe990010000	                           jmp 0x4000849	       151	describe.c	FUNCTION_43	ELSE_2
0x679	    0x8b0500000000	            mov eax, dword [0x040006bf] 	       158	describe.c	FUNCTION_43	IF_4
0x67f	            0x85c0	                           test eax, eax	       158	describe.c	FUNCTION_43	IF_4
0x681	            0x745e	                            je 0x4000721	       158	describe.c	FUNCTION_43	IF_4
0x683	    0x488b05000000	            mov rax, qword [0x040006ca] 	       161	describe.c	FUNCTION_43	IF_4	FUNCTION_1
0x68a	        0x488945d0	             mov qword [rbp - 0x30], rax	       161	describe.c	FUNCTION_43	IF_4	FUNCTION_1
0x68e	            0xeb2e	                           jmp 0x40006fe	       161	describe.c	FUNCTION_43	IF_4	FUNCTION_1
0x690	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       162	describe.c	FUNCTION_43	IF_4	FUNCTION_1	IF_1	CALL_1
0x694	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       162	describe.c	FUNCTION_43	IF_4	FUNCTION_1	IF_1	CALL_1
0x698	          0x488b00	                    mov rax, qword [rax]	       162	describe.c	FUNCTION_43	IF_4	FUNCTION_1	IF_1	CALL_1
0x69b	      0xba00000000	                              mov edx, 0	       162	describe.c	FUNCTION_43	IF_4	FUNCTION_1	IF_1	CALL_1
0x6a0	          0x4889ce	                            mov rsi, rcx	       162	describe.c	FUNCTION_43	IF_4	FUNCTION_1	IF_1	CALL_1
0x6a3	          0x4889c7	                            mov rdi, rax	       162	describe.c	FUNCTION_43	IF_4	FUNCTION_1	IF_1	CALL_1
0x6a6	      0xe800000000	                          call 0x40006eb	       162	describe.c	FUNCTION_43	IF_4	FUNCTION_1	IF_1	CALL_1
0x6ab	            0x85c0	                           test eax, eax	       162	describe.c	FUNCTION_43	IF_4	FUNCTION_1	IF_1	CALL_1
0x6ad	            0x750a	                           jne 0x40006f9	       162	describe.c	FUNCTION_43	IF_4	FUNCTION_1	IF_1	CALL_1
0x6af	      0xb800000000	                              mov eax, 0	       163	describe.c	FUNCTION_43	IF_4	FUNCTION_1	IF_1
0x6b4	      0xe950010000	                           jmp 0x4000849	       163	describe.c	FUNCTION_43	IF_4	FUNCTION_1	IF_1
0x6b9	      0x488345d010	            add qword [rbp - 0x30], 0x10	       161	describe.c	FUNCTION_43	IF_4	FUNCTION_1
0x6be	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       161	describe.c	FUNCTION_43	IF_4	FUNCTION_1
0x6c3	            0x741c	                            je 0x4000721	       161	describe.c	FUNCTION_43	IF_4	FUNCTION_1
0x6c5	    0x488b05000000	            mov rax, qword [0x0400070c] 	       161	describe.c	FUNCTION_43	IF_4	FUNCTION_1
0x6cc	    0x8b1500000000	            mov edx, dword [0x04000712] 	       161	describe.c	FUNCTION_43	IF_4	FUNCTION_1
0x6d2	            0x89d2	                            mov edx, edx	       161	describe.c	FUNCTION_43	IF_4	FUNCTION_1
0x6d4	        0x48c1e204	                              shl rdx, 4	       161	describe.c	FUNCTION_43	IF_4	FUNCTION_1
0x6d8	          0x4801d0	                            add rax, rdx	       161	describe.c	FUNCTION_43	IF_4	FUNCTION_1
0x6db	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       161	describe.c	FUNCTION_43	IF_4	FUNCTION_1
0x6df	            0x77af	                            ja 0x40006d0	       161	describe.c	FUNCTION_43	IF_4	FUNCTION_1
0x6e1	    0x8b0500000000	            mov eax, dword [0x04000727] 	       171	describe.c	FUNCTION_43	IF_5
0x6e7	            0x85c0	                           test eax, eax	       171	describe.c	FUNCTION_43	IF_5
0x6e9	            0x7474	                            je 0x400079f	       171	describe.c	FUNCTION_43	IF_5
0x6eb	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	       172	describe.c	FUNCTION_43	IF_5
0x6f2	    0x488b05000000	            mov rax, qword [0x04000739] 	       175	describe.c	FUNCTION_43	IF_5	FUNCTION_2
0x6f9	        0x488945d8	             mov qword [rbp - 0x28], rax	       175	describe.c	FUNCTION_43	IF_5	FUNCTION_2
0x6fd	            0xeb2d	                           jmp 0x400076c	       175	describe.c	FUNCTION_43	IF_5	FUNCTION_2
0x6ff	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       176	describe.c	FUNCTION_43	IF_5	FUNCTION_2	IF_1	CALL_1
0x703	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       176	describe.c	FUNCTION_43	IF_5	FUNCTION_2	IF_1	CALL_1
0x707	          0x488b00	                    mov rax, qword [rax]	       176	describe.c	FUNCTION_43	IF_5	FUNCTION_2	IF_1	CALL_1
0x70a	      0xba00000000	                              mov edx, 0	       176	describe.c	FUNCTION_43	IF_5	FUNCTION_2	IF_1	CALL_1
0x70f	          0x4889ce	                            mov rsi, rcx	       176	describe.c	FUNCTION_43	IF_5	FUNCTION_2	IF_1	CALL_1
0x712	          0x4889c7	                            mov rdi, rax	       176	describe.c	FUNCTION_43	IF_5	FUNCTION_2	IF_1	CALL_1
0x715	      0xe800000000	                          call 0x400075a	       176	describe.c	FUNCTION_43	IF_5	FUNCTION_2	IF_1	CALL_1
0x71a	            0x85c0	                           test eax, eax	       176	describe.c	FUNCTION_43	IF_5	FUNCTION_2	IF_1	CALL_1
0x71c	            0x7509	                           jne 0x4000767	       176	describe.c	FUNCTION_43	IF_5	FUNCTION_2	IF_1	CALL_1
0x71e	    0xc745c4010000	               mov dword [rbp - 0x3c], 1	       177	describe.c	FUNCTION_43	IF_5	FUNCTION_2	IF_1
0x725	            0xeb28	                           jmp 0x400078f	       178	describe.c	FUNCTION_43	IF_5	FUNCTION_2	IF_1
0x727	      0x488345d810	            add qword [rbp - 0x28], 0x10	       175	describe.c	FUNCTION_43	IF_5	FUNCTION_2
0x72c	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       175	describe.c	FUNCTION_43	IF_5	FUNCTION_2
0x731	            0x741c	                            je 0x400078f	       175	describe.c	FUNCTION_43	IF_5	FUNCTION_2
0x733	    0x488b05000000	            mov rax, qword [0x0400077a] 	       175	describe.c	FUNCTION_43	IF_5	FUNCTION_2
0x73a	    0x8b1500000000	            mov edx, dword [0x04000780] 	       175	describe.c	FUNCTION_43	IF_5	FUNCTION_2
0x740	            0x89d2	                            mov edx, edx	       175	describe.c	FUNCTION_43	IF_5	FUNCTION_2
0x742	        0x48c1e204	                              shl rdx, 4	       175	describe.c	FUNCTION_43	IF_5	FUNCTION_2
0x746	          0x4801d0	                            add rax, rdx	       175	describe.c	FUNCTION_43	IF_5	FUNCTION_2
0x749	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       175	describe.c	FUNCTION_43	IF_5	FUNCTION_2
0x74d	            0x77b0	                            ja 0x400073f	       175	describe.c	FUNCTION_43	IF_5	FUNCTION_2
0x74f	        0x837dc400	               cmp dword [rbp - 0x3c], 0	       182	describe.c	FUNCTION_43	IF_5	IF_6
0x753	            0x750a	                           jne 0x400079f	       182	describe.c	FUNCTION_43	IF_5	IF_6
0x755	      0xb800000000	                              mov eax, 0	       183	describe.c	FUNCTION_43	IF_5	IF_6
0x75a	      0xe9aa000000	                           jmp 0x4000849	       183	describe.c	FUNCTION_43	IF_5	IF_6
0x75f	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       187	describe.c	FUNCTION_43	IF_7	CALL_4
0x763	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       187	describe.c	FUNCTION_43	IF_7	CALL_4
0x767	          0x4889d6	                            mov rsi, rdx	       187	describe.c	FUNCTION_43	IF_7	CALL_4
0x76a	          0x4889c7	                            mov rdi, rax	       187	describe.c	FUNCTION_43	IF_7	CALL_4
0x76d	      0xe800000000	                          call 0x40007b2	       187	describe.c	FUNCTION_43	IF_7	CALL_4
0x772	            0x85c0	                           test eax, eax	       187	describe.c	FUNCTION_43	IF_7	CALL_4
0x774	            0x7520	                           jne 0x40007d6	       187	describe.c	FUNCTION_43	IF_7	CALL_4
0x776	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       188	describe.c	FUNCTION_43	IF_7	CALL_5
0x77a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       188	describe.c	FUNCTION_43	IF_7	CALL_5
0x77e	          0x4889d6	                            mov rsi, rdx	       188	describe.c	FUNCTION_43	IF_7	CALL_5
0x781	          0x4889c7	                            mov rdi, rax	       188	describe.c	FUNCTION_43	IF_7	CALL_5
0x784	      0xe8cafaffff	                         call sym.oidcmp	       188	describe.c	FUNCTION_43	IF_7	CALL_5
0x789	            0x85c0	                           test eax, eax	       188	describe.c	FUNCTION_43	IF_7	CALL_5
0x78b	           0xf95c0	                                setne al	       188	describe.c	FUNCTION_43	IF_7	CALL_5
0x78e	           0xfb6c0	                           movzx eax, al	       188	describe.c	FUNCTION_43	IF_7	CALL_5
0x791	          0x8945bc	             mov dword [rbp - 0x44], eax	       188	describe.c	FUNCTION_43	IF_7	CALL_5
0x794	            0xeb1a	                           jmp 0x40007f0	       188	describe.c	FUNCTION_43	IF_7	CALL_5
0x796	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       190	describe.c	FUNCTION_43	ELSE_3	CALL_6
0x79a	        0x488d45e0	                   lea rax, [rbp - 0x20]	       190	describe.c	FUNCTION_43	ELSE_3	CALL_6
0x79e	          0x4889d6	                            mov rsi, rdx	       190	describe.c	FUNCTION_43	ELSE_3	CALL_6
0x7a1	          0x4889c7	                            mov rdi, rax	       190	describe.c	FUNCTION_43	ELSE_3	CALL_6
0x7a4	      0xe8fafaffff	                         call sym.oidcpy	       190	describe.c	FUNCTION_43	ELSE_3	CALL_6
0x7a9	    0xc745bc000000	               mov dword [rbp - 0x44], 0	       191	describe.c	FUNCTION_43	ELSE_3
0x7b0	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       200	describe.c	FUNCTION_43	IF_8
0x7b4	            0x7409	                            je 0x40007ff	       200	describe.c	FUNCTION_43	IF_8
0x7b6	    0xc745c0020000	               mov dword [rbp - 0x40], 2	       201	describe.c	FUNCTION_43	IF_8
0x7bd	            0xeb16	                           jmp 0x4000815	       201	describe.c	FUNCTION_43	IF_8
0x7bf	        0x837db800	               cmp dword [rbp - 0x48], 0	       202	describe.c	FUNCTION_43	ELSE_4	IF_9
0x7c3	            0x7409	                            je 0x400080e	       202	describe.c	FUNCTION_43	ELSE_4	IF_9
0x7c5	    0xc745c0010000	               mov dword [rbp - 0x40], 1	       203	describe.c	FUNCTION_43	ELSE_4	IF_9
0x7cc	            0xeb07	                           jmp 0x4000815	       203	describe.c	FUNCTION_43	ELSE_4	IF_9
0x7ce	    0xc745c0000000	               mov dword [rbp - 0x40], 0	       205	describe.c	FUNCTION_43	ELSE_5
0x7d5	    0x8b0500000000	            mov eax, dword [0x0400081b] 	       207	describe.c	FUNCTION_43	CALL_7
0x7db	            0x85c0	                           test eax, eax	       207	describe.c	FUNCTION_43	CALL_7
0x7dd	            0x740a	                            je 0x4000829	       207	describe.c	FUNCTION_43	CALL_7
0x7df	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       207	describe.c	FUNCTION_43	CALL_7
0x7e3	        0x4883c005	                              add rax, 5	       207	describe.c	FUNCTION_43	CALL_7
0x7e7	            0xeb08	                           jmp 0x4000831	       207	describe.c	FUNCTION_43	CALL_7
0x7e9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       207	describe.c	FUNCTION_43	CALL_7
0x7ed	        0x4883c00a	                            add rax, 0xa	       207	describe.c	FUNCTION_43	CALL_7
0x7f1	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	       207	describe.c	FUNCTION_43	CALL_7
0x7f5	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       207	describe.c	FUNCTION_43	CALL_7
0x7f8	        0x488d75e0	                   lea rsi, [rbp - 0x20]	       207	describe.c	FUNCTION_43	CALL_7
0x7fc	          0x4889c7	                            mov rdi, rax	       207	describe.c	FUNCTION_43	CALL_7
0x7ff	      0xe86cfcffff	             call sym.add_to_known_names	       207	describe.c	FUNCTION_43	CALL_7
0x804	      0xb800000000	                              mov eax, 0	       208	describe.c	FUNCTION_43
0x809	        0x488b4df8	                mov rcx, qword [rbp - 8]	       209	describe.c	FUNCTION_43
0x80d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       209	describe.c	FUNCTION_43
0x816	            0x7405	                            je 0x400085d	       209	describe.c	FUNCTION_43
0x818	      0xe800000000	                          call 0x400085d	       209	describe.c	FUNCTION_43
0x81d	              0xc9	                                   leave	       209	describe.c	FUNCTION_43
0x81e	              0xc3	                                     ret	       209	describe.c	FUNCTION_43
parse_commit	FOR,0:ELSE,0:DO,0:CALL,1:functions,0:IF,0:WHILE,0:SWITCH,0	10
0x2c9	              0x55	                                push rbp	        74	commit.h	FUNCTION_62
0x2ca	          0x4889e5	                            mov rbp, rsp	        74	commit.h	FUNCTION_62
0x2cd	        0x4883ec10	                           sub rsp, 0x10	        74	commit.h	FUNCTION_62
0x2d1	        0x48897df8	                mov qword [rbp - 8], rdi	        74	commit.h	FUNCTION_62
0x2d5	        0x488b45f8	                mov rax, qword [rbp - 8]	        75	commit.h	FUNCTION_62	CALL_1
0x2d9	      0xbe00000000	                              mov esi, 0	        75	commit.h	FUNCTION_62	CALL_1
0x2de	          0x4889c7	                            mov rdi, rax	        75	commit.h	FUNCTION_62	CALL_1
0x2e1	      0xe800000000	                          call 0x4000326	        75	commit.h	FUNCTION_62	CALL_1
0x2e6	              0xc9	                                   leave	        76	commit.h	FUNCTION_62
0x2e7	              0xc3	                                     ret	        76	commit.h	FUNCTION_62
hashmap_entry_init	FOR,0:ELSE,0:DO,0:CALL,0:functions,0:IF,0:WHILE,0:SWITCH,0	14
0x102	              0x55	                                push rbp	       246	hashmap.h	FUNCTION_55
0x103	          0x4889e5	                            mov rbp, rsp	       246	hashmap.h	FUNCTION_55
0x106	        0x48897de8	             mov qword [rbp - 0x18], rdi	       246	hashmap.h	FUNCTION_55
0x10a	          0x8975e4	             mov dword [rbp - 0x1c], esi	       246	hashmap.h	FUNCTION_55
0x10d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       247	hashmap.h	FUNCTION_55
0x111	        0x488945f8	                mov qword [rbp - 8], rax	       247	hashmap.h	FUNCTION_55
0x115	        0x488b45f8	                mov rax, qword [rbp - 8]	       248	hashmap.h	FUNCTION_55
0x119	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       248	hashmap.h	FUNCTION_55
0x11c	          0x895008	                mov dword [rax + 8], edx	       248	hashmap.h	FUNCTION_55
0x11f	        0x488b45f8	                mov rax, qword [rbp - 8]	       249	hashmap.h	FUNCTION_55
0x123	    0x48c700000000	                      mov qword [rax], 0	       249	hashmap.h	FUNCTION_55
0x12a	              0x90	                                     nop	       250	hashmap.h	FUNCTION_55
0x12b	              0x5d	                                 pop rbp	       250	hashmap.h	FUNCTION_55
0x12c	              0xc3	                                     ret	       250	hashmap.h	FUNCTION_55
append_suffix	FOR,0:ELSE,0:DO,0:CALL,2:functions,0:IF,0:WHILE,0:SWITCH,0	21
0xbc6	              0x55	                                push rbp	       287	describe.c	FUNCTION_47
0xbc7	          0x4889e5	                            mov rbp, rsp	       287	describe.c	FUNCTION_47
0xbca	        0x4883ec20	                           sub rsp, 0x20	       287	describe.c	FUNCTION_47
0xbce	          0x897dfc	                mov dword [rbp - 4], edi	       287	describe.c	FUNCTION_47
0xbd1	        0x488975f0	             mov qword [rbp - 0x10], rsi	       287	describe.c	FUNCTION_47
0xbd5	        0x488955e8	             mov qword [rbp - 0x18], rdx	       287	describe.c	FUNCTION_47
0xbd9	    0x8b1500000000	            mov edx, dword [0x04000c1f] 	       288	describe.c	FUNCTION_47	CALL_2
0xbdf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       288	describe.c	FUNCTION_47	CALL_2
0xbe3	            0x89d6	                            mov esi, edx	       288	describe.c	FUNCTION_47	CALL_2
0xbe5	          0x4889c7	                            mov rdi, rax	       288	describe.c	FUNCTION_47	CALL_2
0xbe8	      0xe800000000	                          call 0x4000c2d	       288	describe.c	FUNCTION_47	CALL_2
0xbed	          0x4889c1	                            mov rcx, rax	       288	describe.c	FUNCTION_47	CALL_2
0xbf0	          0x8b55fc	                mov edx, dword [rbp - 4]	       288	describe.c	FUNCTION_47	CALL_2
0xbf3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       288	describe.c	FUNCTION_47	CALL_2
0xbf7	      0xbe00000000	                              mov esi, 0	       288	describe.c	FUNCTION_47	CALL_2
0xbfc	          0x4889c7	                            mov rdi, rax	       288	describe.c	FUNCTION_47	CALL_2
0xbff	      0xb800000000	                              mov eax, 0	       288	describe.c	FUNCTION_47	CALL_2
0xc04	      0xe800000000	                          call 0x4000c49	       288	describe.c	FUNCTION_47	CALL_2
0xc09	              0x90	                                     nop	       289	describe.c	FUNCTION_47
0xc0a	              0xc9	                                   leave	       289	describe.c	FUNCTION_47
0xc0b	              0xc3	                                     ret	       289	describe.c	FUNCTION_47
compare_pt	FOR,0:ELSE,0:DO,0:CALL,0:functions,0:IF,2:WHILE,0:SWITCH,0	37
0x81f	              0x55	                                push rbp	       219	describe.c	FUNCTION_44
0x820	          0x4889e5	                            mov rbp, rsp	       219	describe.c	FUNCTION_44
0x823	        0x48897de8	             mov qword [rbp - 0x18], rdi	       219	describe.c	FUNCTION_44
0x827	        0x488975e0	             mov qword [rbp - 0x20], rsi	       219	describe.c	FUNCTION_44
0x82b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       220	describe.c	FUNCTION_44
0x82f	        0x488945f0	             mov qword [rbp - 0x10], rax	       220	describe.c	FUNCTION_44
0x833	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       221	describe.c	FUNCTION_44
0x837	        0x488945f8	                mov qword [rbp - 8], rax	       221	describe.c	FUNCTION_44
0x83b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       222	describe.c	FUNCTION_44	IF_1
0x83f	          0x8b5008	                mov edx, dword [rax + 8]	       222	describe.c	FUNCTION_44	IF_1
0x842	        0x488b45f8	                mov rax, qword [rbp - 8]	       222	describe.c	FUNCTION_44	IF_1
0x846	          0x8b4008	                mov eax, dword [rax + 8]	       222	describe.c	FUNCTION_44	IF_1
0x849	            0x39c2	                            cmp edx, eax	       222	describe.c	FUNCTION_44	IF_1
0x84b	            0x7414	                            je 0x40008a1	       222	describe.c	FUNCTION_44	IF_1
0x84d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       223	describe.c	FUNCTION_44	IF_1
0x851	          0x8b5008	                mov edx, dword [rax + 8]	       223	describe.c	FUNCTION_44	IF_1
0x854	        0x488b45f8	                mov rax, qword [rbp - 8]	       223	describe.c	FUNCTION_44	IF_1
0x858	          0x8b4008	                mov eax, dword [rax + 8]	       223	describe.c	FUNCTION_44	IF_1
0x85b	            0x29c2	                            sub edx, eax	       223	describe.c	FUNCTION_44	IF_1
0x85d	            0x89d0	                            mov eax, edx	       223	describe.c	FUNCTION_44	IF_1
0x85f	            0xeb2b	                           jmp 0x40008cc	       223	describe.c	FUNCTION_44	IF_1
0x861	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       224	describe.c	FUNCTION_44	IF_2
0x865	          0x8b500c	              mov edx, dword [rax + 0xc]	       224	describe.c	FUNCTION_44	IF_2
0x868	        0x488b45f8	                mov rax, qword [rbp - 8]	       224	describe.c	FUNCTION_44	IF_2
0x86c	          0x8b400c	              mov eax, dword [rax + 0xc]	       224	describe.c	FUNCTION_44	IF_2
0x86f	            0x39c2	                            cmp edx, eax	       224	describe.c	FUNCTION_44	IF_2
0x871	            0x7414	                            je 0x40008c7	       224	describe.c	FUNCTION_44	IF_2
0x873	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       225	describe.c	FUNCTION_44	IF_2
0x877	          0x8b500c	              mov edx, dword [rax + 0xc]	       225	describe.c	FUNCTION_44	IF_2
0x87a	        0x488b45f8	                mov rax, qword [rbp - 8]	       225	describe.c	FUNCTION_44	IF_2
0x87e	          0x8b400c	              mov eax, dword [rax + 0xc]	       225	describe.c	FUNCTION_44	IF_2
0x881	            0x29c2	                            sub edx, eax	       225	describe.c	FUNCTION_44	IF_2
0x883	            0x89d0	                            mov eax, edx	       225	describe.c	FUNCTION_44	IF_2
0x885	            0xeb05	                           jmp 0x40008cc	       225	describe.c	FUNCTION_44	IF_2
0x887	      0xb800000000	                              mov eax, 0	       226	describe.c	FUNCTION_44
0x88c	              0x5d	                                 pop rbp	       227	describe.c	FUNCTION_44
0x88d	              0xc3	                                     ret	       227	describe.c	FUNCTION_44
sane_qsort	FOR,0:ELSE,0:DO,0:CALL,1:functions,0:IF,1:WHILE,0:SWITCH,0	18
0x56	              0x55	                                push rbp	      1047	git-compat-util.h	FUNCTION_25
0x57	          0x4889e5	                            mov rbp, rsp	      1047	git-compat-util.h	FUNCTION_25
0x5a	        0x4883ec20	                           sub rsp, 0x20	      1047	git-compat-util.h	FUNCTION_25
0x5e	        0x48897df8	                mov qword [rbp - 8], rdi	      1047	git-compat-util.h	FUNCTION_25
0x62	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1047	git-compat-util.h	FUNCTION_25
0x66	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1047	git-compat-util.h	FUNCTION_25
0x6a	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1047	git-compat-util.h	FUNCTION_25
0x6e	      0x48837df001	               cmp qword [rbp - 0x10], 1	      1048	git-compat-util.h	FUNCTION_25	IF_1
0x73	            0x7618	                           jbe 0x40000cd	      1048	git-compat-util.h	FUNCTION_25	IF_1
0x75	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1049	git-compat-util.h	FUNCTION_25	CALL_1
0x79	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1049	git-compat-util.h	FUNCTION_25	CALL_1
0x7d	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1049	git-compat-util.h	FUNCTION_25	CALL_1
0x81	        0x488b45f8	                mov rax, qword [rbp - 8]	      1049	git-compat-util.h	FUNCTION_25	CALL_1
0x85	          0x4889c7	                            mov rdi, rax	      1049	git-compat-util.h	FUNCTION_25	CALL_1
0x88	      0xe800000000	                          call 0x40000cd	      1049	git-compat-util.h	FUNCTION_25	CALL_1
0x8d	              0x90	                                     nop	      1050	git-compat-util.h	FUNCTION_25
0x8e	              0xc9	                                   leave	      1050	git-compat-util.h	FUNCTION_25
0x8f	              0xc3	                                     ret	      1050	git-compat-util.h	FUNCTION_25
_	FOR,0:ELSE,0:DO,0:CALL,2:functions,0:IF,1:WHILE,0:SWITCH,0	15
0x1fd	              0x55	                                push rbp	        51	gettext.h	FUNCTION_65
0x1fe	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_65
0x201	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_65
0x205	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_65
0x209	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_65	IF_1
0x20d	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_65	IF_1
0x210	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_65	IF_1
0x212	            0x7507	                           jne 0x400025b	        52	gettext.h	FUNCTION_65	IF_1
0x214	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_65	IF_1
0x219	            0xeb0c	                           jmp 0x4000267	        53	gettext.h	FUNCTION_65	IF_1
0x21b	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_65	CALL_2
0x21f	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_65	CALL_2
0x222	      0xe800000000	                          call 0x4000267	        54	gettext.h	FUNCTION_65	CALL_2
0x227	              0xc9	                                   leave	        55	gettext.h	FUNCTION_65
0x228	              0xc3	                                     ret	        55	gettext.h	FUNCTION_65
replace_name	FOR,0:ELSE,0:DO,0:CALL,4:functions,0:IF,6:WHILE,0:SWITCH,0	73
0x36d	              0x55	                                push rbp	        80	describe.c	FUNCTION_41
0x36e	          0x4889e5	                            mov rbp, rsp	        80	describe.c	FUNCTION_41
0x371	        0x4883ec30	                           sub rsp, 0x30	        80	describe.c	FUNCTION_41
0x375	        0x48897de8	             mov qword [rbp - 0x18], rdi	        80	describe.c	FUNCTION_41
0x379	          0x8975e4	             mov dword [rbp - 0x1c], esi	        80	describe.c	FUNCTION_41
0x37c	        0x488955d8	             mov qword [rbp - 0x28], rdx	        80	describe.c	FUNCTION_41
0x380	        0x48894dd0	             mov qword [rbp - 0x30], rcx	        80	describe.c	FUNCTION_41
0x384	      0x48837de800	               cmp qword [rbp - 0x18], 0	        81	describe.c	FUNCTION_41	IF_1
0x389	            0x7413	                            je 0x40003de	        81	describe.c	FUNCTION_41	IF_1
0x38b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        81	describe.c	FUNCTION_41	IF_1
0x38f	         0xfb64030	           movzx eax, byte [rax + 0x30] 	        81	describe.c	FUNCTION_41	IF_1
0x393	          0x83e003	                              and eax, 3	        81	describe.c	FUNCTION_41	IF_1
0x396	           0xfb6c0	                           movzx eax, al	        81	describe.c	FUNCTION_41	IF_1
0x399	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	        81	describe.c	FUNCTION_41	IF_1
0x39c	            0x7d0a	                           jge 0x40003e8	        81	describe.c	FUNCTION_41	IF_1
0x39e	      0xb801000000	                              mov eax, 1	        82	describe.c	FUNCTION_41	IF_1
0x3a3	      0xe9c6000000	                           jmp 0x40004ae	        82	describe.c	FUNCTION_41	IF_1
0x3a8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        84	describe.c	FUNCTION_41	IF_2
0x3ac	         0xfb64030	           movzx eax, byte [rax + 0x30] 	        84	describe.c	FUNCTION_41	IF_2
0x3b0	          0x83e003	                              and eax, 3	        84	describe.c	FUNCTION_41	IF_2
0x3b3	            0x3c02	                               cmp al, 2	        84	describe.c	FUNCTION_41	IF_2
0x3b5	     0xf85ae000000	                           jne 0x40004a9	        84	describe.c	FUNCTION_41	IF_2
0x3bb	        0x837de402	               cmp dword [rbp - 0x1c], 2	        84	describe.c	FUNCTION_41	IF_2
0x3bf	     0xf85a4000000	                           jne 0x40004a9	        84	describe.c	FUNCTION_41	IF_2
0x3c5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        90	describe.c	FUNCTION_41	IF_2	IF_3
0x3c9	        0x488b4028	            mov rax, qword [rax + 0x28] 	        90	describe.c	FUNCTION_41	IF_2	IF_3
0x3cd	          0x4885c0	                           test rax, rax	        90	describe.c	FUNCTION_41	IF_2	IF_3
0x3d0	            0x753e	                           jne 0x4000450	        90	describe.c	FUNCTION_41	IF_2	IF_3
0x3d2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        91	describe.c	FUNCTION_41	IF_2	IF_3	CALL_1
0x3d6	        0x4883c031	                           add rax, 0x31	        91	describe.c	FUNCTION_41	IF_2	IF_3	CALL_1
0x3da	          0x4889c7	                            mov rdi, rax	        91	describe.c	FUNCTION_41	IF_2	IF_3	CALL_1
0x3dd	      0xe800000000	                          call 0x4000422	        91	describe.c	FUNCTION_41	IF_2	IF_3	CALL_1
0x3e2	        0x488945f8	                mov qword [rbp - 8], rax	        91	describe.c	FUNCTION_41	IF_2	IF_3	CALL_1
0x3e6	      0x48837df800	                  cmp qword [rbp - 8], 0	        92	describe.c	FUNCTION_41	IF_2	IF_3	IF_4	CALL_2
0x3eb	            0x7410	                            je 0x400043d	        92	describe.c	FUNCTION_41	IF_2	IF_3	IF_4	CALL_2
0x3ed	        0x488b45f8	                mov rax, qword [rbp - 8]	        92	describe.c	FUNCTION_41	IF_2	IF_3	IF_4	CALL_2
0x3f1	          0x4889c7	                            mov rdi, rax	        92	describe.c	FUNCTION_41	IF_2	IF_3	IF_4	CALL_2
0x3f4	      0xe800000000	                          call 0x4000439	        92	describe.c	FUNCTION_41	IF_2	IF_3	IF_4	CALL_2
0x3f9	            0x85c0	                           test eax, eax	        92	describe.c	FUNCTION_41	IF_2	IF_3	IF_4	CALL_2
0x3fb	            0x7407	                            je 0x4000444	        92	describe.c	FUNCTION_41	IF_2	IF_3	IF_4	CALL_2
0x3fd	      0xb801000000	                              mov eax, 1	        93	describe.c	FUNCTION_41	IF_2	IF_3	IF_4
0x402	            0xeb6a	                           jmp 0x40004ae	        93	describe.c	FUNCTION_41	IF_2	IF_3	IF_4
0x404	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        94	describe.c	FUNCTION_41	IF_2	IF_3
0x408	        0x488b55f8	                mov rdx, qword [rbp - 8]	        94	describe.c	FUNCTION_41	IF_2	IF_3
0x40c	        0x48895028	             mov qword [rax + 0x28], rdx	        94	describe.c	FUNCTION_41	IF_2	IF_3
0x410	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        97	describe.c	FUNCTION_41	IF_2	CALL_3
0x414	          0x4889c7	                            mov rdi, rax	        97	describe.c	FUNCTION_41	IF_2	CALL_3
0x417	      0xe800000000	                          call 0x400045c	        97	describe.c	FUNCTION_41	IF_2	CALL_3
0x41c	        0x488945f8	                mov qword [rbp - 8], rax	        97	describe.c	FUNCTION_41	IF_2	CALL_3
0x420	      0x48837df800	                  cmp qword [rbp - 8], 0	        98	describe.c	FUNCTION_41	IF_2	IF_5	CALL_4
0x425	            0x7410	                            je 0x4000477	        98	describe.c	FUNCTION_41	IF_2	IF_5	CALL_4
0x427	        0x488b45f8	                mov rax, qword [rbp - 8]	        98	describe.c	FUNCTION_41	IF_2	IF_5	CALL_4
0x42b	          0x4889c7	                            mov rdi, rax	        98	describe.c	FUNCTION_41	IF_2	IF_5	CALL_4
0x42e	      0xe800000000	                          call 0x4000473	        98	describe.c	FUNCTION_41	IF_2	IF_5	CALL_4
0x433	            0x85c0	                           test eax, eax	        98	describe.c	FUNCTION_41	IF_2	IF_5	CALL_4
0x435	            0x7407	                            je 0x400047e	        98	describe.c	FUNCTION_41	IF_2	IF_5	CALL_4
0x437	      0xb800000000	                              mov eax, 0	        99	describe.c	FUNCTION_41	IF_2	IF_5
0x43c	            0xeb30	                           jmp 0x40004ae	        99	describe.c	FUNCTION_41	IF_2	IF_5
0x43e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       100	describe.c	FUNCTION_41	IF_2
0x442	        0x488b55f8	                mov rdx, qword [rbp - 8]	       100	describe.c	FUNCTION_41	IF_2
0x446	          0x488910	                    mov qword [rax], rdx	       100	describe.c	FUNCTION_41	IF_2
0x449	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       102	describe.c	FUNCTION_41	IF_2	IF_6
0x44d	        0x488b4028	            mov rax, qword [rax + 0x28] 	       102	describe.c	FUNCTION_41	IF_2	IF_6
0x451	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       102	describe.c	FUNCTION_41	IF_2	IF_6
0x455	        0x488b45f8	                mov rax, qword [rbp - 8]	       102	describe.c	FUNCTION_41	IF_2	IF_6
0x459	        0x488b4028	            mov rax, qword [rax + 0x28] 	       102	describe.c	FUNCTION_41	IF_2	IF_6
0x45d	          0x4839c2	                            cmp rdx, rax	       102	describe.c	FUNCTION_41	IF_2	IF_6
0x460	            0x7307	                           jae 0x40004a9	       102	describe.c	FUNCTION_41	IF_2	IF_6
0x462	      0xb801000000	                              mov eax, 1	       103	describe.c	FUNCTION_41	IF_2	IF_6
0x467	            0xeb05	                           jmp 0x40004ae	       103	describe.c	FUNCTION_41	IF_2	IF_6
0x469	      0xb800000000	                              mov eax, 0	       106	describe.c	FUNCTION_41
0x46e	              0xc9	                                   leave	       107	describe.c	FUNCTION_41
0x46f	              0xc3	                                     ret	       107	describe.c	FUNCTION_41
finish_depth_computation	FOR,0:ELSE,1:DO,0:CALL,3:functions,0:IF,4:WHILE,3:SWITCH,0	106
0x88e	              0x55	                                push rbp	       232	describe.c	FUNCTION_45
0x88f	          0x4889e5	                            mov rbp, rsp	       232	describe.c	FUNCTION_45
0x892	        0x4883ec40	                           sub rsp, 0x40	       232	describe.c	FUNCTION_45
0x896	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       232	describe.c	FUNCTION_45
0x89a	        0x488975c0	             mov qword [rbp - 0x40], rsi	       232	describe.c	FUNCTION_45
0x89e	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       233	describe.c	FUNCTION_45
0x8a6	      0xe941010000	                           jmp 0x4000a2c	       234	describe.c	FUNCTION_45	WHILE_1
0x8ab	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       235	describe.c	FUNCTION_45	WHILE_1	CALL_1
0x8af	          0x4889c7	                            mov rdi, rax	       235	describe.c	FUNCTION_45	WHILE_1	CALL_1
0x8b2	      0xe800000000	                          call 0x40008f7	       235	describe.c	FUNCTION_45	WHILE_1	CALL_1
0x8b7	        0x488945e8	             mov qword [rbp - 0x18], rax	       235	describe.c	FUNCTION_45	WHILE_1	CALL_1
0x8bb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       236	describe.c	FUNCTION_45	WHILE_1
0x8bf	        0x488b4030	            mov rax, qword [rax + 0x30] 	       236	describe.c	FUNCTION_45	WHILE_1
0x8c3	        0x488945d8	             mov qword [rbp - 0x28], rax	       236	describe.c	FUNCTION_45	WHILE_1
0x8c7	      0x488345d001	               add qword [rbp - 0x30], 1	       237	describe.c	FUNCTION_45	WHILE_1
0x8cc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       238	describe.c	FUNCTION_45	WHILE_1	IF_1
0x8d0	            0x8b00	                    mov eax, dword [rax]	       238	describe.c	FUNCTION_45	WHILE_1	IF_1
0x8d2	          0xc1e804	                              shr eax, 4	       238	describe.c	FUNCTION_45	WHILE_1	IF_1
0x8d5	      0x25ffffff07	                      and eax, 0x7ffffff	       238	describe.c	FUNCTION_45	WHILE_1	IF_1
0x8da	            0x89c2	                            mov edx, eax	       238	describe.c	FUNCTION_45	WHILE_1	IF_1
0x8dc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       238	describe.c	FUNCTION_45	WHILE_1	IF_1
0x8e0	          0x8b4010	            mov eax, dword [rax + 0x10] 	       238	describe.c	FUNCTION_45	WHILE_1	IF_1
0x8e3	            0x21d0	                            and eax, edx	       238	describe.c	FUNCTION_45	WHILE_1	IF_1
0x8e5	            0x85c0	                           test eax, eax	       238	describe.c	FUNCTION_45	WHILE_1	IF_1
0x8e7	            0x745b	                            je 0x4000984	       238	describe.c	FUNCTION_45	WHILE_1	IF_1
0x8e9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       239	describe.c	FUNCTION_45	WHILE_1	IF_1
0x8ed	          0x488b00	                    mov rax, qword [rax]	       239	describe.c	FUNCTION_45	WHILE_1	IF_1
0x8f0	        0x488945e0	             mov qword [rbp - 0x20], rax	       239	describe.c	FUNCTION_45	WHILE_1	IF_1
0x8f4	            0xeb34	                           jmp 0x400096a	       240	describe.c	FUNCTION_45	WHILE_1	IF_1	WHILE_2
0x8f6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       241	describe.c	FUNCTION_45	WHILE_1	IF_1	WHILE_2
0x8fa	          0x488b00	                    mov rax, qword [rax]	       241	describe.c	FUNCTION_45	WHILE_1	IF_1	WHILE_2
0x8fd	        0x488945f8	                mov qword [rbp - 8], rax	       241	describe.c	FUNCTION_45	WHILE_1	IF_1	WHILE_2
0x901	        0x488b45f8	                mov rax, qword [rbp - 8]	       242	describe.c	FUNCTION_45	WHILE_1	IF_1	WHILE_2	IF_2
0x905	            0x8b00	                    mov eax, dword [rax]	       242	describe.c	FUNCTION_45	WHILE_1	IF_1	WHILE_2	IF_2
0x907	          0xc1e804	                              shr eax, 4	       242	describe.c	FUNCTION_45	WHILE_1	IF_1	WHILE_2	IF_2
0x90a	      0x25ffffff07	                      and eax, 0x7ffffff	       242	describe.c	FUNCTION_45	WHILE_1	IF_1	WHILE_2	IF_2
0x90f	            0x89c2	                            mov edx, eax	       242	describe.c	FUNCTION_45	WHILE_1	IF_1	WHILE_2	IF_2
0x911	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       242	describe.c	FUNCTION_45	WHILE_1	IF_1	WHILE_2	IF_2
0x915	          0x8b4010	            mov eax, dword [rax + 0x10] 	       242	describe.c	FUNCTION_45	WHILE_1	IF_1	WHILE_2	IF_2
0x918	            0x21d0	                            and eax, edx	       242	describe.c	FUNCTION_45	WHILE_1	IF_1	WHILE_2	IF_2
0x91a	            0x85c0	                           test eax, eax	       242	describe.c	FUNCTION_45	WHILE_1	IF_1	WHILE_2	IF_2
0x91c	            0x7415	                            je 0x4000973	       242	describe.c	FUNCTION_45	WHILE_1	IF_1	WHILE_2	IF_2
0x91e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       244	describe.c	FUNCTION_45	WHILE_1	IF_1	WHILE_2
0x922	        0x488b4008	                mov rax, qword [rax + 8]	       244	describe.c	FUNCTION_45	WHILE_1	IF_1	WHILE_2
0x926	        0x488945e0	             mov qword [rbp - 0x20], rax	       244	describe.c	FUNCTION_45	WHILE_1	IF_1	WHILE_2
0x92a	      0x48837de000	               cmp qword [rbp - 0x20], 0	       240	describe.c	FUNCTION_45	WHILE_1	IF_1	WHILE_2
0x92f	            0x75c5	                           jne 0x4000936	       240	describe.c	FUNCTION_45	WHILE_1	IF_1	WHILE_2
0x931	            0xeb01	                           jmp 0x4000974	       240	describe.c	FUNCTION_45	WHILE_1	IF_1	WHILE_2
0x933	              0x90	                                     nop	       243	describe.c	FUNCTION_45	WHILE_1	IF_1	WHILE_2	IF_2
0x934	      0x48837de000	               cmp qword [rbp - 0x20], 0	       246	describe.c	FUNCTION_45	WHILE_1	IF_1	IF_3
0x939	     0xf85a2000000	                           jne 0x4000a21	       246	describe.c	FUNCTION_45	WHILE_1	IF_1	IF_3
0x93f	      0xe9b8000000	                           jmp 0x4000a3c	       247	describe.c	FUNCTION_45	WHILE_1	IF_1	IF_3
0x944	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       249	describe.c	FUNCTION_45	WHILE_1	ELSE_1
0x948	          0x8b4008	                mov eax, dword [rax + 8]	       249	describe.c	FUNCTION_45	WHILE_1	ELSE_1
0x94b	          0x8d5001	                      lea edx, [rax + 1]	       249	describe.c	FUNCTION_45	WHILE_1	ELSE_1
0x94e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       249	describe.c	FUNCTION_45	WHILE_1	ELSE_1
0x952	          0x895008	                mov dword [rax + 8], edx	       249	describe.c	FUNCTION_45	WHILE_1	ELSE_1
0x955	      0xe987000000	                           jmp 0x4000a21	       250	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3
0x95a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       251	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3
0x95e	          0x488b00	                    mov rax, qword [rax]	       251	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3
0x961	        0x488945f0	             mov qword [rbp - 0x10], rax	       251	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3
0x965	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       252	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3	CALL_2
0x969	          0x4889c7	                            mov rdi, rax	       252	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3	CALL_2
0x96c	      0xe858f9ffff	                   call sym.parse_commit	       252	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3	CALL_2
0x971	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       253	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3	IF_4
0x975	            0x8b00	                    mov eax, dword [rax]	       253	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3	IF_4
0x977	          0xc1e804	                              shr eax, 4	       253	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3	IF_4
0x97a	      0x25ffffff07	                      and eax, 0x7ffffff	       253	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3	IF_4
0x97f	          0x83e001	                              and eax, 1	       253	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3	IF_4
0x982	            0x85c0	                           test eax, eax	       253	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3	IF_4
0x984	            0x7513	                           jne 0x40009d9	       253	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3	IF_4
0x986	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       254	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3	CALL_3
0x98a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       254	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3	CALL_3
0x98e	          0x4889d6	                            mov rsi, rdx	       254	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3	CALL_3
0x991	          0x4889c7	                            mov rdi, rax	       254	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3	CALL_3
0x994	      0xe800000000	                          call 0x40009d9	       254	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3	CALL_3
0x999	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       255	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3
0x99d	            0x8b00	                    mov eax, dword [rax]	       255	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3
0x99f	          0xc1e804	                              shr eax, 4	       255	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3
0x9a2	            0x89c2	                            mov edx, eax	       255	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3
0x9a4	    0x81e2ffffff07	                      and edx, 0x7ffffff	       255	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3
0x9aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       255	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3
0x9ae	            0x8b00	                    mov eax, dword [rax]	       255	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3
0x9b0	          0xc1e804	                              shr eax, 4	       255	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3
0x9b3	      0x25ffffff07	                      and eax, 0x7ffffff	       255	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3
0x9b8	             0x9c2	                             or edx, eax	       255	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3
0x9ba	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       255	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3
0x9be	    0x81e2ffffff07	                      and edx, 0x7ffffff	       255	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3
0x9c4	            0x89d1	                            mov ecx, edx	       255	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3
0x9c6	          0xc1e104	                              shl ecx, 4	       255	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3
0x9c9	            0x8b10	                    mov edx, dword [rax]	       255	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3
0x9cb	    0x81e20f000080	                     and edx, 0x8000000f	       255	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3
0x9d1	             0x9ca	                             or edx, ecx	       255	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3
0x9d3	            0x8910	                    mov dword [rax], edx	       255	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3
0x9d5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       256	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3
0x9d9	        0x488b4008	                mov rax, qword [rax + 8]	       256	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3
0x9dd	        0x488945d8	             mov qword [rbp - 0x28], rax	       256	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3
0x9e1	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       250	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3
0x9e6	     0xf856effffff	                           jne 0x400099a	       250	describe.c	FUNCTION_45	WHILE_1	ELSE_1	WHILE_3
0x9ec	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       234	describe.c	FUNCTION_45	WHILE_1
0x9f0	          0x488b00	                    mov rax, qword [rax]	       234	describe.c	FUNCTION_45	WHILE_1
0x9f3	          0x4885c0	                           test rax, rax	       234	describe.c	FUNCTION_45	WHILE_1
0x9f6	     0xf85affeffff	                           jne 0x40008eb	       234	describe.c	FUNCTION_45	WHILE_1
0x9fc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       259	describe.c	FUNCTION_45
0xa00	              0xc9	                                   leave	       260	describe.c	FUNCTION_45
0xa01	              0xc3	                                     ret	       260	describe.c	FUNCTION_45
hashmap_iter_first	FOR,0:ELSE,0:DO,0:CALL,2:functions,0:IF,0:WHILE,0:SWITCH,0	15
0x1cc	              0x55	                                push rbp	       376	hashmap.h	FUNCTION_58
0x1cd	          0x4889e5	                            mov rbp, rsp	       376	hashmap.h	FUNCTION_58
0x1d0	        0x4883ec10	                           sub rsp, 0x10	       376	hashmap.h	FUNCTION_58
0x1d4	        0x48897df8	                mov qword [rbp - 8], rdi	       376	hashmap.h	FUNCTION_58
0x1d8	        0x488975f0	             mov qword [rbp - 0x10], rsi	       376	hashmap.h	FUNCTION_58
0x1dc	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       377	hashmap.h	FUNCTION_58	CALL_1
0x1e0	        0x488b45f8	                mov rax, qword [rbp - 8]	       377	hashmap.h	FUNCTION_58	CALL_1
0x1e4	          0x4889d6	                            mov rsi, rdx	       377	hashmap.h	FUNCTION_58	CALL_1
0x1e7	          0x4889c7	                            mov rdi, rax	       377	hashmap.h	FUNCTION_58	CALL_1
0x1ea	      0xe800000000	                          call 0x400022f	       377	hashmap.h	FUNCTION_58	CALL_1
0x1ef	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       378	hashmap.h	FUNCTION_58	CALL_2
0x1f3	          0x4889c7	                            mov rdi, rax	       378	hashmap.h	FUNCTION_58	CALL_2
0x1f6	      0xe800000000	                          call 0x400023b	       378	hashmap.h	FUNCTION_58	CALL_2
0x1fb	              0xc9	                                   leave	       379	hashmap.h	FUNCTION_58
0x1fc	              0xc3	                                     ret	       379	hashmap.h	FUNCTION_58
append_name	FOR,0:ELSE,1:DO,0:CALL,12:functions,0:IF,7:WHILE,0:SWITCH,0	127
0xa02	              0x55	                                push rbp	       263	describe.c	FUNCTION_46
0xa03	          0x4889e5	                            mov rbp, rsp	       263	describe.c	FUNCTION_46
0xa06	            0x4154	                                push r12	       263	describe.c	FUNCTION_46
0xa08	              0x53	                                push rbx	       263	describe.c	FUNCTION_46
0xa09	        0x4883ec10	                           sub rsp, 0x10	       263	describe.c	FUNCTION_46
0xa0d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       263	describe.c	FUNCTION_46
0xa11	        0x488975e0	             mov qword [rbp - 0x20], rsi	       263	describe.c	FUNCTION_46
0xa15	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       264	describe.c	FUNCTION_46	IF_1
0xa19	         0xfb64030	           movzx eax, byte [rax + 0x30] 	       264	describe.c	FUNCTION_46	IF_1
0xa1d	          0x83e003	                              and eax, 3	       264	describe.c	FUNCTION_46	IF_1
0xa20	            0x3c02	                               cmp al, 2	       264	describe.c	FUNCTION_46	IF_1
0xa22	            0x756b	                           jne 0x4000acf	       264	describe.c	FUNCTION_46	IF_1
0xa24	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       264	describe.c	FUNCTION_46	IF_1
0xa28	        0x488b4028	            mov rax, qword [rax + 0x28] 	       264	describe.c	FUNCTION_46	IF_1
0xa2c	          0x4885c0	                           test rax, rax	       264	describe.c	FUNCTION_46	IF_1
0xa2f	            0x755e	                           jne 0x4000acf	       264	describe.c	FUNCTION_46	IF_1
0xa31	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       265	describe.c	FUNCTION_46	IF_1	CALL_1
0xa35	        0x4883c031	                           add rax, 0x31	       265	describe.c	FUNCTION_46	IF_1	CALL_1
0xa39	          0x4889c7	                            mov rdi, rax	       265	describe.c	FUNCTION_46	IF_1	CALL_1
0xa3c	      0xe800000000	                          call 0x4000a81	       265	describe.c	FUNCTION_46	IF_1	CALL_1
0xa41	          0x4889c2	                            mov rdx, rax	       265	describe.c	FUNCTION_46	IF_1	CALL_1
0xa44	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       265	describe.c	FUNCTION_46	IF_1	CALL_1
0xa48	        0x48895028	             mov qword [rax + 0x28], rdx	       265	describe.c	FUNCTION_46	IF_1	CALL_1
0xa4c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       266	describe.c	FUNCTION_46	IF_1	IF_2	CALL_2
0xa50	        0x488b4028	            mov rax, qword [rax + 0x28] 	       266	describe.c	FUNCTION_46	IF_1	IF_2	CALL_2
0xa54	          0x4885c0	                           test rax, rax	       266	describe.c	FUNCTION_46	IF_1	IF_2	CALL_2
0xa57	            0x7414	                            je 0x4000aad	       266	describe.c	FUNCTION_46	IF_1	IF_2	CALL_2
0xa59	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       266	describe.c	FUNCTION_46	IF_1	IF_2	CALL_2
0xa5d	        0x488b4028	            mov rax, qword [rax + 0x28] 	       266	describe.c	FUNCTION_46	IF_1	IF_2	CALL_2
0xa61	          0x4889c7	                            mov rdi, rax	       266	describe.c	FUNCTION_46	IF_1	IF_2	CALL_2
0xa64	      0xe800000000	                          call 0x4000aa9	       266	describe.c	FUNCTION_46	IF_1	IF_2	CALL_2
0xa69	            0x85c0	                           test eax, eax	       266	describe.c	FUNCTION_46	IF_1	IF_2	CALL_2
0xa6b	            0x7422	                            je 0x4000acf	       266	describe.c	FUNCTION_46	IF_1	IF_2	CALL_2
0xa6d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       267	describe.c	FUNCTION_46	IF_1	CALL_4
0xa71	        0x488b5848	            mov rbx, qword [rax + 0x48] 	       267	describe.c	FUNCTION_46	IF_1	CALL_4
0xa75	      0xbf00000000	                              mov edi, 0	       267	describe.c	FUNCTION_46	IF_1	CALL_4
0xa7a	      0xe87ef7ffff	                               call sym.	       267	describe.c	FUNCTION_46	IF_1	CALL_4
0xa7f	          0x4889de	                            mov rsi, rbx	       267	describe.c	FUNCTION_46	IF_1	CALL_4
0xa82	          0x4889c7	                            mov rdi, rax	       267	describe.c	FUNCTION_46	IF_1	CALL_4
0xa85	      0xb800000000	                              mov eax, 0	       267	describe.c	FUNCTION_46	IF_1	CALL_4
0xa8a	      0xe800000000	                          call 0x4000acf	       267	describe.c	FUNCTION_46	IF_1	CALL_4
0xa8f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       269	describe.c	FUNCTION_46	IF_3
0xa93	        0x488b4028	            mov rax, qword [rax + 0x28] 	       269	describe.c	FUNCTION_46	IF_3
0xa97	          0x4885c0	                           test rax, rax	       269	describe.c	FUNCTION_46	IF_3
0xa9a	     0xf84c0000000	                            je 0x4000ba0	       269	describe.c	FUNCTION_46	IF_3
0xaa0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       269	describe.c	FUNCTION_46	IF_3
0xaa4	         0xfb64030	           movzx eax, byte [rax + 0x30] 	       269	describe.c	FUNCTION_46	IF_3
0xaa8	          0x83e004	                              and eax, 4	       269	describe.c	FUNCTION_46	IF_3
0xaab	            0x84c0	                             test al, al	       269	describe.c	FUNCTION_46	IF_3
0xaad	     0xf85ad000000	                           jne 0x4000ba0	       269	describe.c	FUNCTION_46	IF_3
0xab3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       270	describe.c	FUNCTION_46	IF_3	IF_4
0xab7	        0x488b4028	            mov rax, qword [rax + 0x28] 	       270	describe.c	FUNCTION_46	IF_3	IF_4
0xabb	        0x488b4020	            mov rax, qword [rax + 0x20] 	       270	describe.c	FUNCTION_46	IF_3	IF_4
0xabf	          0x4885c0	                           test rax, rax	       270	describe.c	FUNCTION_46	IF_3	IF_4
0xac2	            0x7522	                           jne 0x4000b26	       270	describe.c	FUNCTION_46	IF_3	IF_4
0xac4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       271	describe.c	FUNCTION_46	IF_3	CALL_6
0xac8	        0x488b5848	            mov rbx, qword [rax + 0x48] 	       271	describe.c	FUNCTION_46	IF_3	CALL_6
0xacc	      0xbf00000000	                              mov edi, 0	       271	describe.c	FUNCTION_46	IF_3	CALL_6
0xad1	      0xe827f7ffff	                               call sym.	       271	describe.c	FUNCTION_46	IF_3	CALL_6
0xad6	          0x4889de	                            mov rsi, rbx	       271	describe.c	FUNCTION_46	IF_3	CALL_6
0xad9	          0x4889c7	                            mov rdi, rax	       271	describe.c	FUNCTION_46	IF_3	CALL_6
0xadc	      0xb800000000	                              mov eax, 0	       271	describe.c	FUNCTION_46	IF_3	CALL_6
0xae1	      0xe800000000	                          call 0x4000b26	       271	describe.c	FUNCTION_46	IF_3	CALL_6
0xae6	    0x8b0500000000	            mov eax, dword [0x04000b2c] 	       272	describe.c	FUNCTION_46	IF_3	IF_5	CALL_7
0xaec	            0x85c0	                           test eax, eax	       272	describe.c	FUNCTION_46	IF_3	IF_5	CALL_7
0xaee	            0x740e	                            je 0x4000b3e	       272	describe.c	FUNCTION_46	IF_3	IF_5	CALL_7
0xaf0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       272	describe.c	FUNCTION_46	IF_3	IF_5	CALL_7
0xaf4	        0x488b4048	            mov rax, qword [rax + 0x48] 	       272	describe.c	FUNCTION_46	IF_3	IF_5	CALL_7
0xaf8	        0x4883c005	                              add rax, 5	       272	describe.c	FUNCTION_46	IF_3	IF_5	CALL_7
0xafc	            0xeb08	                           jmp 0x4000b46	       272	describe.c	FUNCTION_46	IF_3	IF_5	CALL_7
0xafe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       272	describe.c	FUNCTION_46	IF_3	IF_5	CALL_7
0xb02	        0x488b4048	            mov rax, qword [rax + 0x48] 	       272	describe.c	FUNCTION_46	IF_3	IF_5	CALL_7
0xb06	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       272	describe.c	FUNCTION_46	IF_3	IF_5	CALL_7
0xb0a	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	       272	describe.c	FUNCTION_46	IF_3	IF_5	CALL_7
0xb0e	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	       272	describe.c	FUNCTION_46	IF_3	IF_5	CALL_7
0xb12	          0x4889c6	                            mov rsi, rax	       272	describe.c	FUNCTION_46	IF_3	IF_5	CALL_7
0xb15	          0x4889d7	                            mov rdi, rdx	       272	describe.c	FUNCTION_46	IF_3	IF_5	CALL_7
0xb18	      0xe800000000	                          call 0x4000b5d	       272	describe.c	FUNCTION_46	IF_3	IF_5	CALL_7
0xb1d	            0x85c0	                           test eax, eax	       272	describe.c	FUNCTION_46	IF_3	IF_5	CALL_7
0xb1f	            0x7431	                            je 0x4000b92	       272	describe.c	FUNCTION_46	IF_3	IF_5	CALL_7
0xb21	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       273	describe.c	FUNCTION_46	IF_3	CALL_9
0xb25	        0x4c8b6048	            mov r12, qword [rax + 0x48] 	       273	describe.c	FUNCTION_46	IF_3	CALL_9
0xb29	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       273	describe.c	FUNCTION_46	IF_3	CALL_9
0xb2d	        0x488b4028	            mov rax, qword [rax + 0x28] 	       273	describe.c	FUNCTION_46	IF_3	CALL_9
0xb31	        0x488b5820	            mov rbx, qword [rax + 0x20] 	       273	describe.c	FUNCTION_46	IF_3	CALL_9
0xb35	      0xbf00000000	                              mov edi, 0	       273	describe.c	FUNCTION_46	IF_3	CALL_9
0xb3a	      0xe8bef6ffff	                               call sym.	       273	describe.c	FUNCTION_46	IF_3	CALL_9
0xb3f	          0x4c89e2	                            mov rdx, r12	       273	describe.c	FUNCTION_46	IF_3	CALL_9
0xb42	          0x4889de	                            mov rsi, rbx	       273	describe.c	FUNCTION_46	IF_3	CALL_9
0xb45	          0x4889c7	                            mov rdi, rax	       273	describe.c	FUNCTION_46	IF_3	CALL_9
0xb48	      0xb800000000	                              mov eax, 0	       273	describe.c	FUNCTION_46	IF_3	CALL_9
0xb4d	      0xe800000000	                          call 0x4000b92	       273	describe.c	FUNCTION_46	IF_3	CALL_9
0xb52	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       274	describe.c	FUNCTION_46	IF_3
0xb56	         0xfb65030	           movzx edx, byte [rax + 0x30] 	       274	describe.c	FUNCTION_46	IF_3
0xb5a	          0x83ca04	                               or edx, 4	       274	describe.c	FUNCTION_46	IF_3
0xb5d	          0x885030	               mov byte [rax + 0x30], dl	       274	describe.c	FUNCTION_46	IF_3
0xb60	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       277	describe.c	FUNCTION_46	IF_6
0xb64	        0x488b4028	            mov rax, qword [rax + 0x28] 	       277	describe.c	FUNCTION_46	IF_6
0xb68	          0x4885c0	                           test rax, rax	       277	describe.c	FUNCTION_46	IF_6
0xb6b	            0x7438	                            je 0x4000be5	       277	describe.c	FUNCTION_46	IF_6
0xb6d	    0x8b0500000000	            mov eax, dword [0x04000bb3] 	       278	describe.c	FUNCTION_46	IF_6	IF_7
0xb73	            0x85c0	                           test eax, eax	       278	describe.c	FUNCTION_46	IF_6	IF_7
0xb75	            0x7411	                            je 0x4000bc8	       278	describe.c	FUNCTION_46	IF_6	IF_7
0xb77	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       279	describe.c	FUNCTION_46	IF_6	CALL_10
0xb7b	      0xbe00000000	                              mov esi, 0	       279	describe.c	FUNCTION_46	IF_6	CALL_10
0xb80	          0x4889c7	                            mov rdi, rax	       279	describe.c	FUNCTION_46	IF_6	CALL_10
0xb83	      0xe808f5ffff	                  call sym.strbuf_addstr	       279	describe.c	FUNCTION_46	IF_6	CALL_10
0xb88	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       280	describe.c	FUNCTION_46	IF_6	CALL_11
0xb8c	        0x488b4028	            mov rax, qword [rax + 0x28] 	       280	describe.c	FUNCTION_46	IF_6	CALL_11
0xb90	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       280	describe.c	FUNCTION_46	IF_6	CALL_11
0xb94	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       280	describe.c	FUNCTION_46	IF_6	CALL_11
0xb98	          0x4889d6	                            mov rsi, rdx	       280	describe.c	FUNCTION_46	IF_6	CALL_11
0xb9b	          0x4889c7	                            mov rdi, rax	       280	describe.c	FUNCTION_46	IF_6	CALL_11
0xb9e	      0xe8edf4ffff	                  call sym.strbuf_addstr	       280	describe.c	FUNCTION_46	IF_6	CALL_11
0xba3	            0xeb17	                           jmp 0x4000bfc	       284	describe.c	FUNCTION_46
0xba5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       282	describe.c	FUNCTION_46	ELSE_1	CALL_12
0xba9	        0x488b5048	            mov rdx, qword [rax + 0x48] 	       282	describe.c	FUNCTION_46	ELSE_1	CALL_12
0xbad	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       282	describe.c	FUNCTION_46	ELSE_1	CALL_12
0xbb1	          0x4889d6	                            mov rsi, rdx	       282	describe.c	FUNCTION_46	ELSE_1	CALL_12
0xbb4	          0x4889c7	                            mov rdi, rax	       282	describe.c	FUNCTION_46	ELSE_1	CALL_12
0xbb7	      0xe8d4f4ffff	                  call sym.strbuf_addstr	       282	describe.c	FUNCTION_46	ELSE_1	CALL_12
0xbbc	              0x90	                                     nop	       284	describe.c	FUNCTION_46
0xbbd	        0x4883c410	                           add rsp, 0x10	       284	describe.c	FUNCTION_46
0xbc1	              0x5b	                                 pop rbx	       284	describe.c	FUNCTION_46
0xbc2	            0x415c	                                 pop r12	       284	describe.c	FUNCTION_46
0xbc4	              0x5d	                                 pop rbp	       284	describe.c	FUNCTION_46
0xbc5	              0xc3	                                     ret	       284	describe.c	FUNCTION_46
find_commit_name	FOR,0:ELSE,0:DO,0:CALL,2:functions,0:IF,0:WHILE,0:SWITCH,0	17
0x33a	              0x55	                                push rbp	        72	describe.c	FUNCTION_40
0x33b	          0x4889e5	                            mov rbp, rsp	        72	describe.c	FUNCTION_40
0x33e	              0x53	                                push rbx	        72	describe.c	FUNCTION_40
0x33f	        0x4883ec18	                           sub rsp, 0x18	        72	describe.c	FUNCTION_40
0x343	        0x48897de8	             mov qword [rbp - 0x18], rdi	        72	describe.c	FUNCTION_40
0x347	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	        73	describe.c	FUNCTION_40	CALL_2
0x34b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        73	describe.c	FUNCTION_40	CALL_2
0x34f	          0x4889c7	                            mov rdi, rax	        73	describe.c	FUNCTION_40	CALL_2
0x352	      0xe86efdffff	                       call sym.sha1hash	        73	describe.c	FUNCTION_40	CALL_2
0x357	          0x4889da	                            mov rdx, rbx	        73	describe.c	FUNCTION_40	CALL_2
0x35a	            0x89c6	                            mov esi, eax	        73	describe.c	FUNCTION_40	CALL_2
0x35c	      0xbf00000000	                              mov edi, 0	        73	describe.c	FUNCTION_40	CALL_2
0x361	      0xe806feffff	          call sym.hashmap_get_from_hash	        73	describe.c	FUNCTION_40	CALL_2
0x366	        0x4883c418	                           add rsp, 0x18	        74	describe.c	FUNCTION_40
0x36a	              0x5b	                                 pop rbx	        74	describe.c	FUNCTION_40
0x36b	              0x5d	                                 pop rbp	        74	describe.c	FUNCTION_40
0x36c	              0xc3	                                     ret	        74	describe.c	FUNCTION_40
hashmap_get_size	FOR,0:ELSE,0:DO,0:CALL,1:functions,0:IF,1:WHILE,0:SWITCH,0	19
0x12d	              0x55	                                push rbp	       256	hashmap.h	FUNCTION_56
0x12e	          0x4889e5	                            mov rbp, rsp	       256	hashmap.h	FUNCTION_56
0x131	        0x4883ec10	                           sub rsp, 0x10	       256	hashmap.h	FUNCTION_56
0x135	        0x48897df8	                mov qword [rbp - 8], rdi	       256	hashmap.h	FUNCTION_56
0x139	        0x488b45f8	                mov rax, qword [rbp - 8]	       257	hashmap.h	FUNCTION_56	IF_1
0x13d	         0xfb64028	           movzx eax, byte [rax + 0x28] 	       257	hashmap.h	FUNCTION_56	IF_1
0x141	          0x83e001	                              and eax, 1	       257	hashmap.h	FUNCTION_56	IF_1
0x144	            0x84c0	                             test al, al	       257	hashmap.h	FUNCTION_56	IF_1
0x146	            0x7409	                            je 0x4000191	       257	hashmap.h	FUNCTION_56	IF_1
0x148	        0x488b45f8	                mov rax, qword [rbp - 8]	       258	hashmap.h	FUNCTION_56	IF_1
0x14c	          0x8b4018	            mov eax, dword [rax + 0x18] 	       258	hashmap.h	FUNCTION_56	IF_1
0x14f	            0xeb19	                           jmp 0x40001aa	       258	hashmap.h	FUNCTION_56	IF_1
0x151	      0xba00000000	                              mov edx, 0	       260	hashmap.h	FUNCTION_56	CALL_1
0x156	      0xbe04010000	                          mov esi, 0x104	       260	hashmap.h	FUNCTION_56	CALL_1
0x15b	      0xbf00000000	                              mov edi, 0	       260	hashmap.h	FUNCTION_56	CALL_1
0x160	      0xb800000000	                              mov eax, 0	       260	hashmap.h	FUNCTION_56	CALL_1
0x165	      0xe800000000	                          call 0x40001aa	       260	hashmap.h	FUNCTION_56	CALL_1
0x16a	              0xc9	                                   leave	       262	hashmap.h	FUNCTION_56
0x16b	              0xc3	                                     ret	       262	hashmap.h	FUNCTION_56
describe_commit	FOR,4:ELSE,3:DO,0:CALL,45:functions,0:IF,27:WHILE,2:SWITCH,0	516
0xc0c	              0x55	                                push rbp	       292	describe.c	FUNCTION_48
0xc0d	          0x4889e5	                            mov rbp, rsp	       292	describe.c	FUNCTION_48
0xc10	            0x4155	                                push r13	       292	describe.c	FUNCTION_48
0xc12	            0x4154	                                push r12	       292	describe.c	FUNCTION_48
0xc14	              0x53	                                push rbx	       292	describe.c	FUNCTION_48
0xc15	    0x4881ec380300	                          sub rsp, 0x338	       292	describe.c	FUNCTION_48
0xc1c	    0x4889bdb8fcff	            mov qword [rbp - 0x348], rdi	       292	describe.c	FUNCTION_48
0xc23	    0x4889b5b0fcff	            mov qword [rbp - 0x350], rsi	       292	describe.c	FUNCTION_48
0xc2a	    0x64488b042528	                mov rax, qword fs:[0x28]	       292	describe.c	FUNCTION_48
0xc33	        0x488945d8	             mov qword [rbp - 0x28], rax	       292	describe.c	FUNCTION_48
0xc37	            0x31c0	                            xor eax, eax	       292	describe.c	FUNCTION_48
0xc39	    0x48c785d8fcff	              mov qword [rbp - 0x328], 0	       293	describe.c	FUNCTION_48
0xc44	    0xc785c0fcffff	              mov dword [rbp - 0x340], 0	       297	describe.c	FUNCTION_48
0xc4e	    0xc785c4fcffff	              mov dword [rbp - 0x33c], 0	       297	describe.c	FUNCTION_48
0xc58	    0x48c785e0fcff	              mov qword [rbp - 0x320], 0	       298	describe.c	FUNCTION_48
0xc63	    0xc785ccfcffff	              mov dword [rbp - 0x334], 0	       299	describe.c	FUNCTION_48
0xc6d	    0x488b85b8fcff	            mov rax, qword [rbp - 0x348]	       301	describe.c	FUNCTION_48	CALL_1
0xc74	          0x4889c7	                            mov rdi, rax	       301	describe.c	FUNCTION_48	CALL_1
0xc77	      0xe800000000	                          call 0x4000cbc	       301	describe.c	FUNCTION_48	CALL_1
0xc7c	    0x488985f8fcff	            mov qword [rbp - 0x308], rax	       301	describe.c	FUNCTION_48	CALL_1
0xc83	    0x488b85f8fcff	            mov rax, qword [rbp - 0x308]	       303	describe.c	FUNCTION_48	CALL_2
0xc8a	        0x4883c004	                              add rax, 4	       303	describe.c	FUNCTION_48	CALL_2
0xc8e	          0x4889c7	                            mov rdi, rax	       303	describe.c	FUNCTION_48	CALL_2
0xc91	      0xe8a4f6ffff	               call sym.find_commit_name	       303	describe.c	FUNCTION_48	CALL_2
0xc96	    0x48898500fdff	            mov qword [rbp - 0x300], rax	       303	describe.c	FUNCTION_48	CALL_2
0xc9d	    0x4883bd00fdff	              cmp qword [rbp - 0x300], 0	       304	describe.c	FUNCTION_48	IF_1
0xca5	     0xf84bb000000	                            je 0x4000da6	       304	describe.c	FUNCTION_48	IF_1
0xcab	    0x8b0500000000	            mov eax, dword [0x04000cf1] 	       304	describe.c	FUNCTION_48	IF_1
0xcb1	            0x85c0	                           test eax, eax	       304	describe.c	FUNCTION_48	IF_1
0xcb3	            0x7520	                           jne 0x4000d15	       304	describe.c	FUNCTION_48	IF_1
0xcb5	    0x8b0500000000	            mov eax, dword [0x04000cfb] 	       304	describe.c	FUNCTION_48	IF_1
0xcbb	            0x85c0	                           test eax, eax	       304	describe.c	FUNCTION_48	IF_1
0xcbd	            0x7516	                           jne 0x4000d15	       304	describe.c	FUNCTION_48	IF_1
0xcbf	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       304	describe.c	FUNCTION_48	IF_1
0xcc6	         0xfb64030	           movzx eax, byte [rax + 0x30] 	       304	describe.c	FUNCTION_48	IF_1
0xcca	          0x83e003	                              and eax, 3	       304	describe.c	FUNCTION_48	IF_1
0xccd	            0x3c02	                               cmp al, 2	       304	describe.c	FUNCTION_48	IF_1
0xccf	     0xf8591000000	                           jne 0x4000da6	       304	describe.c	FUNCTION_48	IF_1
0xcd5	    0x488b95b0fcff	            mov rdx, qword [rbp - 0x350]	       308	describe.c	FUNCTION_48	IF_1	CALL_3
0xcdc	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       308	describe.c	FUNCTION_48	IF_1	CALL_3
0xce3	          0x4889d6	                            mov rsi, rdx	       308	describe.c	FUNCTION_48	IF_1	CALL_3
0xce6	          0x4889c7	                            mov rdi, rax	       308	describe.c	FUNCTION_48	IF_1	CALL_3
0xce9	      0xe814fdffff	                    call sym.append_name	       308	describe.c	FUNCTION_48	IF_1	CALL_3
0xcee	    0x8b0500000000	            mov eax, dword [0x04000d34] 	       309	describe.c	FUNCTION_48	IF_1	IF_2
0xcf4	            0x85c0	                           test eax, eax	       309	describe.c	FUNCTION_48	IF_1	IF_2
0xcf6	            0x7440	                            je 0x4000d78	       309	describe.c	FUNCTION_48	IF_1	IF_2
0xcf8	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       310	describe.c	FUNCTION_48	IF_1	CALL_4
0xcff	        0x488b4028	            mov rax, qword [rax + 0x28] 	       310	describe.c	FUNCTION_48	IF_1	CALL_4
0xd03	          0x4885c0	                           test rax, rax	       310	describe.c	FUNCTION_48	IF_1	CALL_4
0xd06	            0x7415	                            je 0x4000d5d	       310	describe.c	FUNCTION_48	IF_1	CALL_4
0xd08	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       310	describe.c	FUNCTION_48	IF_1	CALL_4
0xd0f	        0x488b4028	            mov rax, qword [rax + 0x28] 	       310	describe.c	FUNCTION_48	IF_1	CALL_4
0xd13	        0x488b4018	            mov rax, qword [rax + 0x18] 	       310	describe.c	FUNCTION_48	IF_1	CALL_4
0xd17	        0x4883c004	                              add rax, 4	       310	describe.c	FUNCTION_48	IF_1	CALL_4
0xd1b	            0xeb07	                           jmp 0x4000d64	       310	describe.c	FUNCTION_48	IF_1	CALL_4
0xd1d	    0x488b85b8fcff	            mov rax, qword [rbp - 0x348]	       310	describe.c	FUNCTION_48	IF_1	CALL_4
0xd24	    0x488b95b0fcff	            mov rdx, qword [rbp - 0x350]	       310	describe.c	FUNCTION_48	IF_1	CALL_4
0xd2b	          0x4889c6	                            mov rsi, rax	       310	describe.c	FUNCTION_48	IF_1	CALL_4
0xd2e	      0xbf00000000	                              mov edi, 0	       310	describe.c	FUNCTION_48	IF_1	CALL_4
0xd33	      0xe88efeffff	                  call sym.append_suffix	       310	describe.c	FUNCTION_48	IF_1	CALL_4
0xd38	    0x488b05000000	            mov rax, qword [0x04000d7f] 	       311	describe.c	FUNCTION_48	IF_1	IF_3
0xd3f	          0x4885c0	                           test rax, rax	       311	describe.c	FUNCTION_48	IF_1	IF_3
0xd42	     0xf8402080000	                            je 0x400158a	       311	describe.c	FUNCTION_48	IF_1	IF_3
0xd48	    0x488b15000000	            mov rdx, qword [0x04000d8f] 	       312	describe.c	FUNCTION_48	IF_1	CALL_5
0xd4f	    0x488b85b0fcff	            mov rax, qword [rbp - 0x350]	       312	describe.c	FUNCTION_48	IF_1	CALL_5
0xd56	          0x4889d6	                            mov rsi, rdx	       312	describe.c	FUNCTION_48	IF_1	CALL_5
0xd59	          0x4889c7	                            mov rdi, rax	       312	describe.c	FUNCTION_48	IF_1	CALL_5
0xd5c	      0xe82ff3ffff	                  call sym.strbuf_addstr	       312	describe.c	FUNCTION_48	IF_1	CALL_5
0xd61	      0xe9e4070000	                           jmp 0x400158a	       313	describe.c	FUNCTION_48	IF_1
0xd66	    0x8b0500000000	            mov eax, dword [0x04000dac] 	       316	describe.c	FUNCTION_48	IF_4
0xd6c	            0x85c0	                           test eax, eax	       316	describe.c	FUNCTION_48	IF_4
0xd6e	            0x7530	                           jne 0x4000de0	       316	describe.c	FUNCTION_48	IF_4
0xd70	    0x488b85f8fcff	            mov rax, qword [rbp - 0x308]	       317	describe.c	FUNCTION_48	CALL_8
0xd77	        0x4883c004	                              add rax, 4	       317	describe.c	FUNCTION_48	CALL_8
0xd7b	          0x4889c7	                            mov rdi, rax	       317	describe.c	FUNCTION_48	CALL_8
0xd7e	      0xe800000000	                          call 0x4000dc3	       317	describe.c	FUNCTION_48	CALL_8
0xd83	          0x4889c3	                            mov rbx, rax	       317	describe.c	FUNCTION_48	CALL_8
0xd86	      0xbf00000000	                              mov edi, 0	       317	describe.c	FUNCTION_48	CALL_8
0xd8b	      0xe86df4ffff	                               call sym.	       317	describe.c	FUNCTION_48	CALL_8
0xd90	          0x4889de	                            mov rsi, rbx	       317	describe.c	FUNCTION_48	CALL_8
0xd93	          0x4889c7	                            mov rdi, rax	       317	describe.c	FUNCTION_48	CALL_8
0xd96	      0xb800000000	                              mov eax, 0	       317	describe.c	FUNCTION_48	CALL_8
0xd9b	      0xe800000000	                          call 0x4000de0	       317	describe.c	FUNCTION_48	CALL_8
0xda0	    0x8b0500000000	            mov eax, dword [0x04000de6] 	       318	describe.c	FUNCTION_48	IF_5
0xda6	            0x85c0	                           test eax, eax	       318	describe.c	FUNCTION_48	IF_5
0xda8	            0x7424	                            je 0x4000e0e	       318	describe.c	FUNCTION_48	IF_5
0xdaa	      0xbf00000000	                              mov edi, 0	       319	describe.c	FUNCTION_48	CALL_10
0xdaf	      0xe849f4ffff	                               call sym.	       319	describe.c	FUNCTION_48	CALL_10
0xdb4	          0x4889c2	                            mov rdx, rax	       319	describe.c	FUNCTION_48	CALL_10
0xdb7	    0x488b05000000	            mov rax, qword [0x04000dfe] 	       319	describe.c	FUNCTION_48	CALL_10
0xdbe	          0x4889d6	                            mov rsi, rdx	       319	describe.c	FUNCTION_48	CALL_10
0xdc1	          0x4889c7	                            mov rdi, rax	       319	describe.c	FUNCTION_48	CALL_10
0xdc4	      0xb800000000	                              mov eax, 0	       319	describe.c	FUNCTION_48	CALL_10
0xdc9	      0xe800000000	                          call 0x4000e0e	       319	describe.c	FUNCTION_48	CALL_10
0xdce	    0x8b0500000000	            mov eax, dword [0x04000e14] 	       321	describe.c	FUNCTION_48	IF_6
0xdd4	            0x85c0	                           test eax, eax	       321	describe.c	FUNCTION_48	IF_6
0xdd6	     0xf8582000000	                           jne 0x4000e9e	       321	describe.c	FUNCTION_48	IF_6
0xddc	    0x488d8540fdff	                  lea rax, [rbp - 0x2c0]	       324	describe.c	FUNCTION_48	IF_6	CALL_11
0xde3	          0x4889c6	                            mov rsi, rax	       324	describe.c	FUNCTION_48	IF_6	CALL_11
0xde6	      0xbf00000000	                              mov edi, 0	       324	describe.c	FUNCTION_48	IF_6	CALL_11
0xdeb	      0xe8dcf3ffff	             call sym.hashmap_iter_first	       324	describe.c	FUNCTION_48	IF_6	CALL_11
0xdf0	    0x488985e8fcff	            mov qword [rbp - 0x318], rax	       324	describe.c	FUNCTION_48	IF_6	CALL_11
0xdf7	            0xeb51	                           jmp 0x4000e8a	       325	describe.c	FUNCTION_48	IF_6	FOR_1	CALL_12
0xdf9	    0x488b85e8fcff	            mov rax, qword [rbp - 0x318]	       326	describe.c	FUNCTION_48	IF_6	FOR_1	CALL_13
0xe00	        0x4883c010	                           add rax, 0x10	       326	describe.c	FUNCTION_48	IF_6	FOR_1	CALL_13
0xe04	      0xbe01000000	                              mov esi, 1	       326	describe.c	FUNCTION_48	IF_6	FOR_1	CALL_13
0xe09	          0x4889c7	                            mov rdi, rax	       326	describe.c	FUNCTION_48	IF_6	FOR_1	CALL_13
0xe0c	      0xe800000000	                          call 0x4000e51	       326	describe.c	FUNCTION_48	IF_6	FOR_1	CALL_13
0xe11	    0x48898508fdff	            mov qword [rbp - 0x2f8], rax	       326	describe.c	FUNCTION_48	IF_6	FOR_1	CALL_13
0xe18	    0x4883bd08fdff	              cmp qword [rbp - 0x2f8], 0	       327	describe.c	FUNCTION_48	IF_6	FOR_1	IF_7
0xe20	            0x7412	                            je 0x4000e74	       327	describe.c	FUNCTION_48	IF_6	FOR_1	IF_7
0xe22	    0x488b8508fdff	            mov rax, qword [rbp - 0x2f8]	       328	describe.c	FUNCTION_48	IF_6	FOR_1	IF_7
0xe29	    0x488b95e8fcff	            mov rdx, qword [rbp - 0x318]	       328	describe.c	FUNCTION_48	IF_6	FOR_1	IF_7
0xe30	        0x48895018	             mov qword [rax + 0x18], rdx	       328	describe.c	FUNCTION_48	IF_6	FOR_1	IF_7
0xe34	    0x488d8540fdff	                  lea rax, [rbp - 0x2c0]	       325	describe.c	FUNCTION_48	IF_6	FOR_1	CALL_12
0xe3b	          0x4889c7	                            mov rdi, rax	       325	describe.c	FUNCTION_48	IF_6	FOR_1	CALL_12
0xe3e	      0xe800000000	                          call 0x4000e83	       325	describe.c	FUNCTION_48	IF_6	FOR_1	CALL_12
0xe43	    0x488985e8fcff	            mov qword [rbp - 0x318], rax	       325	describe.c	FUNCTION_48	IF_6	FOR_1	CALL_12
0xe4a	    0x4883bde8fcff	              cmp qword [rbp - 0x318], 0	       325	describe.c	FUNCTION_48	IF_6	FOR_1	CALL_12
0xe52	            0x75a5	                           jne 0x4000e39	       325	describe.c	FUNCTION_48	IF_6	FOR_1	CALL_12
0xe54	    0xc70500000000	               mov dword [0x04000e9e], 1	       330	describe.c	FUNCTION_48	IF_6
0xe5e	    0x48c78540fdff	              mov qword [rbp - 0x2c0], 0	       333	describe.c	FUNCTION_48
0xe69	    0x488b85f8fcff	            mov rax, qword [rbp - 0x308]	       334	describe.c	FUNCTION_48
0xe70	            0x8b10	                    mov edx, dword [rax]	       334	describe.c	FUNCTION_48
0xe72	    0x81e20f000080	                     and edx, 0x8000000f	       334	describe.c	FUNCTION_48
0xe78	          0x83ca10	                            or edx, 0x10	       334	describe.c	FUNCTION_48
0xe7b	            0x8910	                    mov dword [rax], edx	       334	describe.c	FUNCTION_48
0xe7d	    0x488d9540fdff	                  lea rdx, [rbp - 0x2c0]	       335	describe.c	FUNCTION_48	CALL_14
0xe84	    0x488b85f8fcff	            mov rax, qword [rbp - 0x308]	       335	describe.c	FUNCTION_48	CALL_14
0xe8b	          0x4889d6	                            mov rsi, rdx	       335	describe.c	FUNCTION_48	CALL_14
0xe8e	          0x4889c7	                            mov rdi, rax	       335	describe.c	FUNCTION_48	CALL_14
0xe91	      0xe800000000	                          call 0x4000ed6	       335	describe.c	FUNCTION_48	CALL_14
0xe96	      0xe937030000	                           jmp 0x4001212	       336	describe.c	FUNCTION_48	WHILE_1
0xe9b	    0x488d8540fdff	                  lea rax, [rbp - 0x2c0]	       337	describe.c	FUNCTION_48	WHILE_1	CALL_15
0xea2	          0x4889c7	                            mov rdi, rax	       337	describe.c	FUNCTION_48	WHILE_1	CALL_15
0xea5	      0xe800000000	                          call 0x4000eea	       337	describe.c	FUNCTION_48	WHILE_1	CALL_15
0xeaa	    0x48898510fdff	            mov qword [rbp - 0x2f0], rax	       337	describe.c	FUNCTION_48	WHILE_1	CALL_15
0xeb1	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	       338	describe.c	FUNCTION_48	WHILE_1
0xeb8	        0x488b4030	            mov rax, qword [rax + 0x30] 	       338	describe.c	FUNCTION_48	WHILE_1
0xebc	    0x488985f0fcff	            mov qword [rbp - 0x310], rax	       338	describe.c	FUNCTION_48	WHILE_1
0xec3	    0x488385e0fcff	              add qword [rbp - 0x320], 1	       339	describe.c	FUNCTION_48	WHILE_1
0xecb	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	       340	describe.c	FUNCTION_48	WHILE_1
0xed2	        0x488b4018	            mov rax, qword [rax + 0x18] 	       340	describe.c	FUNCTION_48	WHILE_1
0xed6	    0x48898500fdff	            mov qword [rbp - 0x300], rax	       340	describe.c	FUNCTION_48	WHILE_1
0xedd	    0x4883bd00fdff	              cmp qword [rbp - 0x300], 0	       341	describe.c	FUNCTION_48	WHILE_1	IF_8
0xee5	     0xf8439010000	                            je 0x4001064	       341	describe.c	FUNCTION_48	WHILE_1	IF_8
0xeeb	    0x8b0500000000	            mov eax, dword [0x04000f31] 	       342	describe.c	FUNCTION_48	WHILE_1	IF_8	IF_9
0xef1	            0x85c0	                           test eax, eax	       342	describe.c	FUNCTION_48	WHILE_1	IF_8	IF_9
0xef3	            0x752c	                           jne 0x4000f61	       342	describe.c	FUNCTION_48	WHILE_1	IF_8	IF_9
0xef5	    0x8b0500000000	            mov eax, dword [0x04000f3b] 	       342	describe.c	FUNCTION_48	WHILE_1	IF_8	IF_9
0xefb	            0x85c0	                           test eax, eax	       342	describe.c	FUNCTION_48	WHILE_1	IF_8	IF_9
0xefd	            0x7522	                           jne 0x4000f61	       342	describe.c	FUNCTION_48	WHILE_1	IF_8	IF_9
0xeff	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       342	describe.c	FUNCTION_48	WHILE_1	IF_8	IF_9
0xf06	         0xfb64030	           movzx eax, byte [rax + 0x30] 	       342	describe.c	FUNCTION_48	WHILE_1	IF_8	IF_9
0xf0a	          0x83e003	                              and eax, 3	       342	describe.c	FUNCTION_48	WHILE_1	IF_8	IF_9
0xf0d	           0xfb6c0	                           movzx eax, al	       342	describe.c	FUNCTION_48	WHILE_1	IF_8	IF_9
0xf10	          0x83f801	                              cmp eax, 1	       342	describe.c	FUNCTION_48	WHILE_1	IF_8	IF_9
0xf13	            0x7f0c	                            jg 0x4000f61	       342	describe.c	FUNCTION_48	WHILE_1	IF_8	IF_9
0xf15	    0x8385ccfcffff	              add dword [rbp - 0x334], 1	       343	describe.c	FUNCTION_48	WHILE_1	IF_8	IF_9
0xf1c	      0xe903010000	                           jmp 0x4001064	       343	describe.c	FUNCTION_48	WHILE_1	IF_8	IF_9
0xf21	    0x8b0500000000	            mov eax, dword [0x04000f67] 	       344	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xf27	    0x3985c0fcffff	           cmp dword [rbp - 0x340], eax 	       344	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xf2d	     0xf83de000000	                           jae 0x4001051	       344	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xf33	    0x8b85c0fcffff	            mov eax, dword [rbp - 0x340]	       345	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xf39	          0x8d5001	                      lea edx, [rax + 1]	       345	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xf3c	    0x8995c0fcffff	            mov dword [rbp - 0x340], edx	       345	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xf42	    0x488d9560fdff	                  lea rdx, [rbp - 0x2a0]	       345	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xf49	            0x89c1	                            mov ecx, eax	       345	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xf4b	          0x4889c8	                            mov rax, rcx	       345	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xf4e	          0x4801c0	                            add rax, rax	       345	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xf51	          0x4801c8	                            add rax, rcx	       345	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xf54	        0x48c1e003	                              shl rax, 3	       345	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xf58	          0x4801d0	                            add rax, rdx	       345	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xf5b	    0x48898528fdff	            mov qword [rbp - 0x2d8], rax	       345	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xf62	    0x488b8528fdff	            mov rax, qword [rbp - 0x2d8]	       346	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xf69	    0x488b9500fdff	            mov rdx, qword [rbp - 0x300]	       346	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xf70	          0x488910	                    mov qword [rax], rdx	       346	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xf73	    0x488b85e0fcff	            mov rax, qword [rbp - 0x320]	       347	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xf7a	          0x83e801	                              sub eax, 1	       347	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xf7d	            0x89c2	                            mov edx, eax	       347	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xf7f	    0x488b8528fdff	            mov rax, qword [rbp - 0x2d8]	       347	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xf86	          0x895008	                mov dword [rax + 8], edx	       347	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xf89	    0x8b85c0fcffff	            mov eax, dword [rbp - 0x340]	       348	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xf8f	      0xba01000000	                              mov edx, 1	       348	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xf94	            0x89c1	                            mov ecx, eax	       348	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xf96	            0xd3e2	                             shl edx, cl	       348	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xf98	    0x488b8528fdff	            mov rax, qword [rbp - 0x2d8]	       348	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xf9f	          0x895010	             mov dword [rax + 0x10], edx	       348	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xfa2	    0x8b95c0fcffff	            mov edx, dword [rbp - 0x340]	       349	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xfa8	    0x488b8528fdff	            mov rax, qword [rbp - 0x2d8]	       349	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xfaf	          0x89500c	              mov dword [rax + 0xc], edx	       349	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xfb2	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	       350	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xfb9	            0x8b00	                    mov eax, dword [rax]	       350	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xfbb	          0xc1e804	                              shr eax, 4	       350	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xfbe	      0x25ffffff07	                      and eax, 0x7ffffff	       350	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xfc3	            0x89c2	                            mov edx, eax	       350	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xfc5	    0x488b8528fdff	            mov rax, qword [rbp - 0x2d8]	       350	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xfcc	          0x8b4010	            mov eax, dword [rax + 0x10] 	       350	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xfcf	             0x9d0	                             or eax, edx	       350	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xfd1	      0x25ffffff07	                      and eax, 0x7ffffff	       350	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xfd6	            0x89c2	                            mov edx, eax	       350	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xfd8	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	       350	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xfdf	    0x81e2ffffff07	                      and edx, 0x7ffffff	       350	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xfe5	            0x89d1	                            mov ecx, edx	       350	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xfe7	          0xc1e104	                              shl ecx, 4	       350	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xfea	            0x8b10	                    mov edx, dword [rax]	       350	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xfec	    0x81e20f000080	                     and edx, 0x8000000f	       350	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xff2	             0x9ca	                             or edx, ecx	       350	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xff4	            0x8910	                    mov dword [rax], edx	       350	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10
0xff6	    0x488b8500fdff	            mov rax, qword [rbp - 0x300]	       351	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0xffd	         0xfb64030	           movzx eax, byte [rax + 0x30] 	       351	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0x1001	          0x83e003	                              and eax, 3	       351	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0x1004	            0x3c02	                               cmp al, 2	       351	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0x1006	            0x751c	                           jne 0x4001064	       351	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0x1008	    0x8385c4fcffff	              add dword [rbp - 0x33c], 1	       352	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0x100f	            0xeb13	                           jmp 0x4001064	       352	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_1	IF_10	IF_11
0x1011	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	       355	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_2
0x1018	    0x488985d8fcff	            mov qword [rbp - 0x328], rax	       355	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_2
0x101f	      0xe9c1010000	                           jmp 0x4001225	       356	describe.c	FUNCTION_48	WHILE_1	IF_8	ELSE_2
0x1024	    0xc785c8fcffff	              mov dword [rbp - 0x338], 0	       359	describe.c	FUNCTION_48	WHILE_1	FOR_2
0x102e	            0xeb65	                           jmp 0x40010d5	       359	describe.c	FUNCTION_48	WHILE_1	FOR_2
0x1030	    0x488d8d60fdff	                  lea rcx, [rbp - 0x2a0]	       360	describe.c	FUNCTION_48	WHILE_1	FOR_2
0x1037	    0x8b95c8fcffff	            mov edx, dword [rbp - 0x338]	       360	describe.c	FUNCTION_48	WHILE_1	FOR_2
0x103d	          0x4889d0	                            mov rax, rdx	       360	describe.c	FUNCTION_48	WHILE_1	FOR_2
0x1040	          0x4801c0	                            add rax, rax	       360	describe.c	FUNCTION_48	WHILE_1	FOR_2
0x1043	          0x4801d0	                            add rax, rdx	       360	describe.c	FUNCTION_48	WHILE_1	FOR_2
0x1046	        0x48c1e003	                              shl rax, 3	       360	describe.c	FUNCTION_48	WHILE_1	FOR_2
0x104a	          0x4801c8	                            add rax, rcx	       360	describe.c	FUNCTION_48	WHILE_1	FOR_2
0x104d	    0x48898518fdff	            mov qword [rbp - 0x2e8], rax	       360	describe.c	FUNCTION_48	WHILE_1	FOR_2
0x1054	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	       361	describe.c	FUNCTION_48	WHILE_1	FOR_2	IF_12
0x105b	            0x8b00	                    mov eax, dword [rax]	       361	describe.c	FUNCTION_48	WHILE_1	FOR_2	IF_12
0x105d	          0xc1e804	                              shr eax, 4	       361	describe.c	FUNCTION_48	WHILE_1	FOR_2	IF_12
0x1060	      0x25ffffff07	                      and eax, 0x7ffffff	       361	describe.c	FUNCTION_48	WHILE_1	FOR_2	IF_12
0x1065	            0x89c2	                            mov edx, eax	       361	describe.c	FUNCTION_48	WHILE_1	FOR_2	IF_12
0x1067	    0x488b8518fdff	            mov rax, qword [rbp - 0x2e8]	       361	describe.c	FUNCTION_48	WHILE_1	FOR_2	IF_12
0x106e	          0x8b4010	            mov eax, dword [rax + 0x10] 	       361	describe.c	FUNCTION_48	WHILE_1	FOR_2	IF_12
0x1071	            0x21d0	                            and eax, edx	       361	describe.c	FUNCTION_48	WHILE_1	FOR_2	IF_12
0x1073	            0x85c0	                           test eax, eax	       361	describe.c	FUNCTION_48	WHILE_1	FOR_2	IF_12
0x1075	            0x7517	                           jne 0x40010ce	       361	describe.c	FUNCTION_48	WHILE_1	FOR_2	IF_12
0x1077	    0x488b8518fdff	            mov rax, qword [rbp - 0x2e8]	       362	describe.c	FUNCTION_48	WHILE_1	FOR_2	IF_12
0x107e	          0x8b4008	                mov eax, dword [rax + 8]	       362	describe.c	FUNCTION_48	WHILE_1	FOR_2	IF_12
0x1081	          0x8d5001	                      lea edx, [rax + 1]	       362	describe.c	FUNCTION_48	WHILE_1	FOR_2	IF_12
0x1084	    0x488b8518fdff	            mov rax, qword [rbp - 0x2e8]	       362	describe.c	FUNCTION_48	WHILE_1	FOR_2	IF_12
0x108b	          0x895008	                mov dword [rax + 8], edx	       362	describe.c	FUNCTION_48	WHILE_1	FOR_2	IF_12
0x108e	    0x8385c8fcffff	              add dword [rbp - 0x338], 1	       359	describe.c	FUNCTION_48	WHILE_1	FOR_2
0x1095	    0x8b85c8fcffff	            mov eax, dword [rbp - 0x338]	       359	describe.c	FUNCTION_48	WHILE_1	FOR_2
0x109b	    0x3b85c0fcffff	            cmp eax, dword [rbp - 0x340]	       359	describe.c	FUNCTION_48	WHILE_1	FOR_2
0x10a1	            0x728d	                            jb 0x4001070	       359	describe.c	FUNCTION_48	WHILE_1	FOR_2
0x10a3	    0x83bdc4fcffff	              cmp dword [rbp - 0x33c], 0	       364	describe.c	FUNCTION_48	WHILE_1	IF_13
0x10aa	     0xf8414010000	                            je 0x4001204	       364	describe.c	FUNCTION_48	WHILE_1	IF_13
0x10b0	    0x488b8540fdff	            mov rax, qword [rbp - 0x2c0]	       364	describe.c	FUNCTION_48	WHILE_1	IF_13
0x10b7	          0x4885c0	                           test rax, rax	       364	describe.c	FUNCTION_48	WHILE_1	IF_13
0x10ba	     0xf8504010000	                           jne 0x4001204	       364	describe.c	FUNCTION_48	WHILE_1	IF_13
0x10c0	    0x8b0500000000	            mov eax, dword [0x04001106] 	       365	describe.c	FUNCTION_48	WHILE_1	IF_13	IF_14
0x10c6	            0x85c0	                           test eax, eax	       365	describe.c	FUNCTION_48	WHILE_1	IF_13	IF_14
0x10c8	     0xf8416010000	                            je 0x4001224	       365	describe.c	FUNCTION_48	WHILE_1	IF_13	IF_14
0x10ce	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	       367	describe.c	FUNCTION_48	WHILE_1	IF_13	CALL_18
0x10d5	        0x4883c004	                              add rax, 4	       367	describe.c	FUNCTION_48	WHILE_1	IF_13	CALL_18
0x10d9	          0x4889c7	                            mov rdi, rax	       366	describe.c	FUNCTION_48	WHILE_1	IF_13	IF_14	CALL_17
0x10dc	      0xe800000000	                          call 0x4001121	       366	describe.c	FUNCTION_48	WHILE_1	IF_13	IF_14	CALL_17
0x10e1	          0x4889c3	                            mov rbx, rax	       366	describe.c	FUNCTION_48	WHILE_1	IF_13	IF_14	CALL_17
0x10e4	      0xbf00000000	                              mov edi, 0	       366	describe.c	FUNCTION_48	WHILE_1	IF_13	IF_14	CALL_17
0x10e9	      0xe80ff1ffff	                               call sym.	       366	describe.c	FUNCTION_48	WHILE_1	IF_13	IF_14	CALL_17
0x10ee	          0x4889c1	                            mov rcx, rax	       366	describe.c	FUNCTION_48	WHILE_1	IF_13	IF_14	CALL_17
0x10f1	    0x488b05000000	            mov rax, qword [0x04001138] 	       366	describe.c	FUNCTION_48	WHILE_1	IF_13	IF_14	CALL_17
0x10f8	          0x4889da	                            mov rdx, rbx	       366	describe.c	FUNCTION_48	WHILE_1	IF_13	IF_14	CALL_17
0x10fb	          0x4889ce	                            mov rsi, rcx	       366	describe.c	FUNCTION_48	WHILE_1	IF_13	IF_14	CALL_17
0x10fe	          0x4889c7	                            mov rdi, rax	       366	describe.c	FUNCTION_48	WHILE_1	IF_13	IF_14	CALL_17
0x1101	      0xb800000000	                              mov eax, 0	       366	describe.c	FUNCTION_48	WHILE_1	IF_13	IF_14	CALL_17
0x1106	      0xe800000000	                          call 0x400114b	       366	describe.c	FUNCTION_48	WHILE_1	IF_13	IF_14	CALL_17
0x110b	      0xe9d4000000	                           jmp 0x4001224	       368	describe.c	FUNCTION_48	WHILE_1	IF_13
0x1110	    0x488b85f0fcff	            mov rax, qword [rbp - 0x310]	       371	describe.c	FUNCTION_48	WHILE_1	WHILE_2
0x1117	          0x488b00	                    mov rax, qword [rax]	       371	describe.c	FUNCTION_48	WHILE_1	WHILE_2
0x111a	    0x48898520fdff	            mov qword [rbp - 0x2e0], rax	       371	describe.c	FUNCTION_48	WHILE_1	WHILE_2
0x1121	    0x488b8520fdff	            mov rax, qword [rbp - 0x2e0]	       372	describe.c	FUNCTION_48	WHILE_1	WHILE_2	CALL_19
0x1128	          0x4889c7	                            mov rdi, rax	       372	describe.c	FUNCTION_48	WHILE_1	WHILE_2	CALL_19
0x112b	      0xe899f1ffff	                   call sym.parse_commit	       372	describe.c	FUNCTION_48	WHILE_1	WHILE_2	CALL_19
0x1130	    0x488b8520fdff	            mov rax, qword [rbp - 0x2e0]	       373	describe.c	FUNCTION_48	WHILE_1	WHILE_2	IF_15
0x1137	            0x8b00	                    mov eax, dword [rax]	       373	describe.c	FUNCTION_48	WHILE_1	WHILE_2	IF_15
0x1139	          0xc1e804	                              shr eax, 4	       373	describe.c	FUNCTION_48	WHILE_1	WHILE_2	IF_15
0x113c	      0x25ffffff07	                      and eax, 0x7ffffff	       373	describe.c	FUNCTION_48	WHILE_1	WHILE_2	IF_15
0x1141	          0x83e001	                              and eax, 1	       373	describe.c	FUNCTION_48	WHILE_1	WHILE_2	IF_15
0x1144	            0x85c0	                           test eax, eax	       373	describe.c	FUNCTION_48	WHILE_1	WHILE_2	IF_15
0x1146	            0x7519	                           jne 0x40011a1	       373	describe.c	FUNCTION_48	WHILE_1	WHILE_2	IF_15
0x1148	    0x488d9540fdff	                  lea rdx, [rbp - 0x2c0]	       374	describe.c	FUNCTION_48	WHILE_1	WHILE_2	CALL_20
0x114f	    0x488b8520fdff	            mov rax, qword [rbp - 0x2e0]	       374	describe.c	FUNCTION_48	WHILE_1	WHILE_2	CALL_20
0x1156	          0x4889d6	                            mov rsi, rdx	       374	describe.c	FUNCTION_48	WHILE_1	WHILE_2	CALL_20
0x1159	          0x4889c7	                            mov rdi, rax	       374	describe.c	FUNCTION_48	WHILE_1	WHILE_2	CALL_20
0x115c	      0xe800000000	                          call 0x40011a1	       374	describe.c	FUNCTION_48	WHILE_1	WHILE_2	CALL_20
0x1161	    0x488b8520fdff	            mov rax, qword [rbp - 0x2e0]	       375	describe.c	FUNCTION_48	WHILE_1	WHILE_2
0x1168	            0x8b00	                    mov eax, dword [rax]	       375	describe.c	FUNCTION_48	WHILE_1	WHILE_2
0x116a	          0xc1e804	                              shr eax, 4	       375	describe.c	FUNCTION_48	WHILE_1	WHILE_2
0x116d	            0x89c2	                            mov edx, eax	       375	describe.c	FUNCTION_48	WHILE_1	WHILE_2
0x116f	    0x81e2ffffff07	                      and edx, 0x7ffffff	       375	describe.c	FUNCTION_48	WHILE_1	WHILE_2
0x1175	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	       375	describe.c	FUNCTION_48	WHILE_1	WHILE_2
0x117c	            0x8b00	                    mov eax, dword [rax]	       375	describe.c	FUNCTION_48	WHILE_1	WHILE_2
0x117e	          0xc1e804	                              shr eax, 4	       375	describe.c	FUNCTION_48	WHILE_1	WHILE_2
0x1181	      0x25ffffff07	                      and eax, 0x7ffffff	       375	describe.c	FUNCTION_48	WHILE_1	WHILE_2
0x1186	             0x9c2	                             or edx, eax	       375	describe.c	FUNCTION_48	WHILE_1	WHILE_2
0x1188	    0x488b8520fdff	            mov rax, qword [rbp - 0x2e0]	       375	describe.c	FUNCTION_48	WHILE_1	WHILE_2
0x118f	    0x81e2ffffff07	                      and edx, 0x7ffffff	       375	describe.c	FUNCTION_48	WHILE_1	WHILE_2
0x1195	            0x89d1	                            mov ecx, edx	       375	describe.c	FUNCTION_48	WHILE_1	WHILE_2
0x1197	          0xc1e104	                              shl ecx, 4	       375	describe.c	FUNCTION_48	WHILE_1	WHILE_2
0x119a	            0x8b10	                    mov edx, dword [rax]	       375	describe.c	FUNCTION_48	WHILE_1	WHILE_2
0x119c	    0x81e20f000080	                     and edx, 0x8000000f	       375	describe.c	FUNCTION_48	WHILE_1	WHILE_2
0x11a2	             0x9ca	                             or edx, ecx	       375	describe.c	FUNCTION_48	WHILE_1	WHILE_2
0x11a4	            0x8910	                    mov dword [rax], edx	       375	describe.c	FUNCTION_48	WHILE_1	WHILE_2
0x11a6	    0x488b85f0fcff	            mov rax, qword [rbp - 0x310]	       376	describe.c	FUNCTION_48	WHILE_1	WHILE_2
0x11ad	        0x488b4008	                mov rax, qword [rax + 8]	       376	describe.c	FUNCTION_48	WHILE_1	WHILE_2
0x11b1	    0x488985f0fcff	            mov qword [rbp - 0x310], rax	       376	describe.c	FUNCTION_48	WHILE_1	WHILE_2
0x11b8	    0x8b0500000000	            mov eax, dword [0x040011fe] 	       378	describe.c	FUNCTION_48	WHILE_1	WHILE_2	IF_16
0x11be	            0x85c0	                           test eax, eax	       378	describe.c	FUNCTION_48	WHILE_1	WHILE_2	IF_16
0x11c0	            0x7402	                            je 0x4001204	       378	describe.c	FUNCTION_48	WHILE_1	WHILE_2	IF_16
0x11c2	            0xeb0e	                           jmp 0x4001212	       379	describe.c	FUNCTION_48	WHILE_1	WHILE_2	IF_16
0x11c4	    0x4883bdf0fcff	              cmp qword [rbp - 0x310], 0	       370	describe.c	FUNCTION_48	WHILE_1	WHILE_2
0x11cc	     0xf853effffff	                           jne 0x4001150	       370	describe.c	FUNCTION_48	WHILE_1	WHILE_2
0x11d2	    0x488b8540fdff	            mov rax, qword [rbp - 0x2c0]	       336	describe.c	FUNCTION_48	WHILE_1
0x11d9	          0x4885c0	                           test rax, rax	       336	describe.c	FUNCTION_48	WHILE_1
0x11dc	     0xf85b9fcffff	                           jne 0x4000edb	       336	describe.c	FUNCTION_48	WHILE_1
0x11e2	            0xeb01	                           jmp 0x4001225	       336	describe.c	FUNCTION_48	WHILE_1
0x11e4	              0x90	                                     nop	       368	describe.c	FUNCTION_48	WHILE_1	IF_13
0x11e5	    0x83bdc0fcffff	              cmp dword [rbp - 0x340], 0	       383	describe.c	FUNCTION_48	IF_17
0x11ec	     0xf85ca000000	                           jne 0x40012fc	       383	describe.c	FUNCTION_48	IF_17
0x11f2	    0x488b85f8fcff	            mov rax, qword [rbp - 0x308]	       384	describe.c	FUNCTION_48	IF_17
0x11f9	        0x4883c004	                              add rax, 4	       384	describe.c	FUNCTION_48	IF_17
0x11fd	    0x48898538fdff	            mov qword [rbp - 0x2c8], rax	       384	describe.c	FUNCTION_48	IF_17
0x1204	    0x8b0500000000	            mov eax, dword [0x0400124a] 	       385	describe.c	FUNCTION_48	IF_17	IF_18
0x120a	            0x85c0	                           test eax, eax	       385	describe.c	FUNCTION_48	IF_17	IF_18
0x120c	            0x744d	                            je 0x400129b	       385	describe.c	FUNCTION_48	IF_17	IF_18
0x120e	    0x8b1500000000	            mov edx, dword [0x04001254] 	       386	describe.c	FUNCTION_48	IF_17	IF_18	CALL_21
0x1214	    0x488b8d38fdff	            mov rcx, qword [rbp - 0x2c8]	       386	describe.c	FUNCTION_48	IF_17	IF_18	CALL_21
0x121b	    0x488b85b0fcff	            mov rax, qword [rbp - 0x350]	       386	describe.c	FUNCTION_48	IF_17	IF_18	CALL_21
0x1222	          0x4889ce	                            mov rsi, rcx	       386	describe.c	FUNCTION_48	IF_17	IF_18	CALL_21
0x1225	          0x4889c7	                            mov rdi, rax	       386	describe.c	FUNCTION_48	IF_17	IF_18	CALL_21
0x1228	      0xe800000000	                          call 0x400126d	       386	describe.c	FUNCTION_48	IF_17	IF_18	CALL_21
0x122d	    0x488b05000000	            mov rax, qword [0x04001274] 	       387	describe.c	FUNCTION_48	IF_17	IF_18	IF_19
0x1234	          0x4885c0	                           test rax, rax	       387	describe.c	FUNCTION_48	IF_17	IF_18	IF_19
0x1237	     0xf8410030000	                            je 0x400158d	       387	describe.c	FUNCTION_48	IF_17	IF_18	IF_19
0x123d	    0x488b15000000	            mov rdx, qword [0x04001284] 	       388	describe.c	FUNCTION_48	IF_17	IF_18	CALL_22
0x1244	    0x488b85b0fcff	            mov rax, qword [rbp - 0x350]	       388	describe.c	FUNCTION_48	IF_17	IF_18	CALL_22
0x124b	          0x4889d6	                            mov rsi, rdx	       388	describe.c	FUNCTION_48	IF_17	IF_18	CALL_22
0x124e	          0x4889c7	                            mov rdi, rax	       388	describe.c	FUNCTION_48	IF_17	IF_18	CALL_22
0x1251	      0xe83aeeffff	                  call sym.strbuf_addstr	       388	describe.c	FUNCTION_48	IF_17	IF_18	CALL_22
0x1256	      0xe9f2020000	                           jmp 0x400158d	       389	describe.c	FUNCTION_48	IF_17	IF_18
0x125b	    0x83bdccfcffff	              cmp dword [rbp - 0x334], 0	       391	describe.c	FUNCTION_48	IF_17	IF_20
0x1262	            0x742c	                            je 0x40012d0	       391	describe.c	FUNCTION_48	IF_17	IF_20
0x1264	    0x488b8538fdff	            mov rax, qword [rbp - 0x2c8]	       392	describe.c	FUNCTION_48	IF_17	IF_20	CALL_24
0x126b	          0x4889c7	                            mov rdi, rax	       392	describe.c	FUNCTION_48	IF_17	IF_20	CALL_24
0x126e	      0xe800000000	                          call 0x40012b3	       392	describe.c	FUNCTION_48	IF_17	IF_20	CALL_24
0x1273	          0x4889c3	                            mov rbx, rax	       392	describe.c	FUNCTION_48	IF_17	IF_20	CALL_24
0x1276	      0xbf00000000	                              mov edi, 0	       392	describe.c	FUNCTION_48	IF_17	IF_20	CALL_24
0x127b	      0xe87defffff	                               call sym.	       392	describe.c	FUNCTION_48	IF_17	IF_20	CALL_24
0x1280	          0x4889de	                            mov rsi, rbx	       392	describe.c	FUNCTION_48	IF_17	IF_20	CALL_24
0x1283	          0x4889c7	                            mov rdi, rax	       392	describe.c	FUNCTION_48	IF_17	IF_20	CALL_24
0x1286	      0xb800000000	                              mov eax, 0	       392	describe.c	FUNCTION_48	IF_17	IF_20	CALL_24
0x128b	      0xe800000000	                          call 0x40012d0	       392	describe.c	FUNCTION_48	IF_17	IF_20	CALL_24
0x1290	    0x488b8538fdff	            mov rax, qword [rbp - 0x2c8]	       396	describe.c	FUNCTION_48	IF_17	ELSE_3	CALL_27
0x1297	          0x4889c7	                            mov rdi, rax	       396	describe.c	FUNCTION_48	IF_17	ELSE_3	CALL_27
0x129a	      0xe800000000	                          call 0x40012df	       396	describe.c	FUNCTION_48	IF_17	ELSE_3	CALL_27
0x129f	          0x4889c3	                            mov rbx, rax	       396	describe.c	FUNCTION_48	IF_17	ELSE_3	CALL_27
0x12a2	      0xbf00000000	                              mov edi, 0	       396	describe.c	FUNCTION_48	IF_17	ELSE_3	CALL_27
0x12a7	      0xe851efffff	                               call sym.	       396	describe.c	FUNCTION_48	IF_17	ELSE_3	CALL_27
0x12ac	          0x4889de	                            mov rsi, rbx	       396	describe.c	FUNCTION_48	IF_17	ELSE_3	CALL_27
0x12af	          0x4889c7	                            mov rdi, rax	       396	describe.c	FUNCTION_48	IF_17	ELSE_3	CALL_27
0x12b2	      0xb800000000	                              mov eax, 0	       396	describe.c	FUNCTION_48	IF_17	ELSE_3	CALL_27
0x12b7	      0xe800000000	                          call 0x40012fc	       396	describe.c	FUNCTION_48	IF_17	ELSE_3	CALL_27
0x12bc	    0x8bb5c0fcffff	            mov esi, dword [rbp - 0x340]	       401	describe.c	FUNCTION_48	CALL_29
0x12c2	    0x488d8560fdff	                  lea rax, [rbp - 0x2a0]	       401	describe.c	FUNCTION_48	CALL_29
0x12c9	      0xb900000000	                              mov ecx, 0	       401	describe.c	FUNCTION_48	CALL_29
0x12ce	      0xba18000000	                           mov edx, 0x18	       401	describe.c	FUNCTION_48	CALL_29
0x12d3	          0x4889c7	                            mov rdi, rax	       401	describe.c	FUNCTION_48	CALL_29
0x12d6	      0xe87bedffff	                     call sym.sane_qsort	       401	describe.c	FUNCTION_48	CALL_29
0x12db	    0x4883bdd8fcff	              cmp qword [rbp - 0x328], 0	       403	describe.c	FUNCTION_48	IF_21
0x12e3	            0x7421	                            je 0x4001346	       403	describe.c	FUNCTION_48	IF_21
0x12e5	    0x488d9540fdff	                  lea rdx, [rbp - 0x2c0]	       404	describe.c	FUNCTION_48	IF_21	CALL_30
0x12ec	    0x488b85d8fcff	            mov rax, qword [rbp - 0x328]	       404	describe.c	FUNCTION_48	IF_21	CALL_30
0x12f3	          0x4889d6	                            mov rsi, rdx	       404	describe.c	FUNCTION_48	IF_21	CALL_30
0x12f6	          0x4889c7	                            mov rdi, rax	       404	describe.c	FUNCTION_48	IF_21	CALL_30
0x12f9	      0xe800000000	                          call 0x400133e	       404	describe.c	FUNCTION_48	IF_21	CALL_30
0x12fe	    0x4883ade0fcff	              sub qword [rbp - 0x320], 1	       405	describe.c	FUNCTION_48	IF_21
0x1306	    0x488d9560fdff	                  lea rdx, [rbp - 0x2a0]	       407	describe.c	FUNCTION_48	CALL_31
0x130d	    0x488d8540fdff	                  lea rax, [rbp - 0x2c0]	       407	describe.c	FUNCTION_48	CALL_31
0x1314	          0x4889d6	                            mov rsi, rdx	       407	describe.c	FUNCTION_48	CALL_31
0x1317	          0x4889c7	                            mov rdi, rax	       407	describe.c	FUNCTION_48	CALL_31
0x131a	      0xe86ff5ffff	       call sym.finish_depth_computation	       407	describe.c	FUNCTION_48	CALL_31
0x131f	    0x480185e0fcff	           add qword [rbp - 0x320], rax 	       407	describe.c	FUNCTION_48	CALL_31
0x1326	    0x488b8540fdff	            mov rax, qword [rbp - 0x2c0]	       408	describe.c	FUNCTION_48	CALL_32
0x132d	          0x4889c7	                            mov rdi, rax	       408	describe.c	FUNCTION_48	CALL_32
0x1330	      0xe800000000	                          call 0x4001375	       408	describe.c	FUNCTION_48	CALL_32
0x1335	    0x8b0500000000	            mov eax, dword [0x0400137b] 	       410	describe.c	FUNCTION_48	IF_22
0x133b	            0x85c0	                           test eax, eax	       410	describe.c	FUNCTION_48	IF_22
0x133d	     0xf849b010000	                            je 0x400151e	       410	describe.c	FUNCTION_48	IF_22
0x1343	    0x8b0500000000	            mov eax, dword [0x04001389] 	       412	describe.c	FUNCTION_48	IF_22	IF_23
0x1349	            0x85c0	                           test eax, eax	       412	describe.c	FUNCTION_48	IF_22	IF_23
0x134b	            0x795e	                           jns 0x40013eb	       412	describe.c	FUNCTION_48	IF_22	IF_23
0x134d	    0xc785d0fcffff	              mov dword [rbp - 0x330], 0	       414	describe.c	FUNCTION_48	IF_22	IF_23	FOR_3	CALL_33
0x1357	            0xeb47	                           jmp 0x40013e0	       414	describe.c	FUNCTION_48	IF_22	IF_23	FOR_3	CALL_33
0x1359	    0x8b85d0fcffff	            mov eax, dword [rbp - 0x330]	       415	describe.c	FUNCTION_48	IF_22	IF_23	FOR_3	CALL_35
0x135f	            0x4898	                                    cdqe	       415	describe.c	FUNCTION_48	IF_22	IF_23	FOR_3	CALL_35
0x1361	    0x488b04c50000	                  mov rax, qword [rax*8]	       415	describe.c	FUNCTION_48	IF_22	IF_23	FOR_3	CALL_35
0x1369	          0x4889c7	                            mov rdi, rax	       415	describe.c	FUNCTION_48	IF_22	IF_23	FOR_3	CALL_35
0x136c	      0xe88ceeffff	                               call sym.	       415	describe.c	FUNCTION_48	IF_22	IF_23	FOR_3	CALL_35
0x1371	          0x4889c7	                            mov rdi, rax	       415	describe.c	FUNCTION_48	IF_22	IF_23	FOR_3	CALL_35
0x1374	      0xe800000000	                          call 0x40013b9	       415	describe.c	FUNCTION_48	IF_22	IF_23	FOR_3	CALL_35
0x1379	    0x8985d4fcffff	            mov dword [rbp - 0x32c], eax	       415	describe.c	FUNCTION_48	IF_22	IF_23	FOR_3	CALL_35
0x137f	    0x8b0500000000	            mov eax, dword [0x040013c5] 	       416	describe.c	FUNCTION_48	IF_22	IF_23	FOR_3	IF_24
0x1385	    0x3b85d4fcffff	            cmp eax, dword [rbp - 0x32c]	       416	describe.c	FUNCTION_48	IF_22	IF_23	FOR_3	IF_24
0x138b	            0x7d0c	                           jge 0x40013d9	       416	describe.c	FUNCTION_48	IF_22	IF_23	FOR_3	IF_24
0x138d	    0x8b85d4fcffff	            mov eax, dword [rbp - 0x32c]	       417	describe.c	FUNCTION_48	IF_22	IF_23	FOR_3	IF_24
0x1393	    0x890500000000	            mov dword [0x040013d9], eax 	       417	describe.c	FUNCTION_48	IF_22	IF_23	FOR_3	IF_24
0x1399	    0x8385d0fcffff	              add dword [rbp - 0x330], 1	       414	describe.c	FUNCTION_48	IF_22	IF_23	FOR_3	CALL_33
0x13a0	    0x8b85d0fcffff	            mov eax, dword [rbp - 0x330]	       414	describe.c	FUNCTION_48	IF_22	IF_23	FOR_3	CALL_33
0x13a6	          0x83f802	                              cmp eax, 2	       414	describe.c	FUNCTION_48	IF_22	IF_23	FOR_3	CALL_33
0x13a9	            0x76ae	                           jbe 0x4001399	       414	describe.c	FUNCTION_48	IF_22	IF_23	FOR_3	CALL_33
0x13ab	    0xc785c8fcffff	              mov dword [rbp - 0x338], 0	       420	describe.c	FUNCTION_48	IF_22	FOR_4
0x13b5	      0xe991000000	                           jmp 0x400148b	       420	describe.c	FUNCTION_48	IF_22	FOR_4
0x13ba	    0x488d8d60fdff	                  lea rcx, [rbp - 0x2a0]	       421	describe.c	FUNCTION_48	IF_22	FOR_4
0x13c1	    0x8b95c8fcffff	            mov edx, dword [rbp - 0x338]	       421	describe.c	FUNCTION_48	IF_22	FOR_4
0x13c7	          0x4889d0	                            mov rax, rdx	       421	describe.c	FUNCTION_48	IF_22	FOR_4
0x13ca	          0x4801c0	                            add rax, rax	       421	describe.c	FUNCTION_48	IF_22	FOR_4
0x13cd	          0x4801d0	                            add rax, rdx	       421	describe.c	FUNCTION_48	IF_22	FOR_4
0x13d0	        0x48c1e003	                              shl rax, 3	       421	describe.c	FUNCTION_48	IF_22	FOR_4
0x13d4	          0x4801c8	                            add rax, rcx	       421	describe.c	FUNCTION_48	IF_22	FOR_4
0x13d7	    0x48898530fdff	            mov qword [rbp - 0x2d0], rax	       421	describe.c	FUNCTION_48	IF_22	FOR_4
0x13de	    0x488b8530fdff	            mov rax, qword [rbp - 0x2d0]	       424	describe.c	FUNCTION_48	IF_22	FOR_4
0x13e5	          0x488b00	                    mov rax, qword [rax]	       424	describe.c	FUNCTION_48	IF_22	FOR_4
0x13e8	        0x4c8b6048	            mov r12, qword [rax + 0x48] 	       422	describe.c	FUNCTION_48	IF_22	FOR_4	CALL_36
0x13ec	    0x488b8530fdff	            mov rax, qword [rbp - 0x2d0]	       422	describe.c	FUNCTION_48	IF_22	FOR_4	CALL_36
0x13f3	          0x8b5808	                mov ebx, dword [rax + 8]	       422	describe.c	FUNCTION_48	IF_22	FOR_4	CALL_36
0x13f6	    0x488b8530fdff	            mov rax, qword [rbp - 0x2d0]	       423	describe.c	FUNCTION_48	IF_22	FOR_4	CALL_37
0x13fd	          0x488b00	                    mov rax, qword [rax]	       423	describe.c	FUNCTION_48	IF_22	FOR_4	CALL_37
0x1400	         0xfb64030	           movzx eax, byte [rax + 0x30] 	       423	describe.c	FUNCTION_48	IF_22	FOR_4	CALL_37
0x1404	          0x83e003	                              and eax, 3	       423	describe.c	FUNCTION_48	IF_22	FOR_4	CALL_37
0x1407	           0xfb6c0	                           movzx eax, al	       422	describe.c	FUNCTION_48	IF_22	FOR_4	CALL_36
0x140a	            0x4898	                                    cdqe	       422	describe.c	FUNCTION_48	IF_22	FOR_4	CALL_36
0x140c	    0x488b04c50000	                  mov rax, qword [rax*8]	       422	describe.c	FUNCTION_48	IF_22	FOR_4	CALL_36
0x1414	          0x4889c7	                            mov rdi, rax	       422	describe.c	FUNCTION_48	IF_22	FOR_4	CALL_36
0x1417	      0xe8e1edffff	                               call sym.	       422	describe.c	FUNCTION_48	IF_22	FOR_4	CALL_36
0x141c	          0x4889c1	                            mov rcx, rax	       422	describe.c	FUNCTION_48	IF_22	FOR_4	CALL_36
0x141f	    0x8b1500000000	            mov edx, dword [0x04001465] 	       422	describe.c	FUNCTION_48	IF_22	FOR_4	CALL_36
0x1425	    0x488b05000000	            mov rax, qword [0x0400146c] 	       422	describe.c	FUNCTION_48	IF_22	FOR_4	CALL_36
0x142c	          0x4d89e1	                             mov r9, r12	       422	describe.c	FUNCTION_48	IF_22	FOR_4	CALL_36
0x142f	          0x4189d8	                            mov r8d, ebx	       422	describe.c	FUNCTION_48	IF_22	FOR_4	CALL_36
0x1432	      0xbe00000000	                              mov esi, 0	       422	describe.c	FUNCTION_48	IF_22	FOR_4	CALL_36
0x1437	          0x4889c7	                            mov rdi, rax	       422	describe.c	FUNCTION_48	IF_22	FOR_4	CALL_36
0x143a	      0xb800000000	                              mov eax, 0	       422	describe.c	FUNCTION_48	IF_22	FOR_4	CALL_36
0x143f	      0xe800000000	                          call 0x4001484	       422	describe.c	FUNCTION_48	IF_22	FOR_4	CALL_36
0x1444	    0x8385c8fcffff	              add dword [rbp - 0x338], 1	       420	describe.c	FUNCTION_48	IF_22	FOR_4
0x144b	    0x8b85c8fcffff	            mov eax, dword [rbp - 0x338]	       420	describe.c	FUNCTION_48	IF_22	FOR_4
0x1451	    0x3b85c0fcffff	            cmp eax, dword [rbp - 0x340]	       420	describe.c	FUNCTION_48	IF_22	FOR_4
0x1457	     0xf825dffffff	                            jb 0x40013fa	       420	describe.c	FUNCTION_48	IF_22	FOR_4
0x145d	      0xbf00000000	                              mov edi, 0	       426	describe.c	FUNCTION_48	IF_22	CALL_39
0x1462	      0xe896edffff	                               call sym.	       426	describe.c	FUNCTION_48	IF_22	CALL_39
0x1467	          0x4889c1	                            mov rcx, rax	       426	describe.c	FUNCTION_48	IF_22	CALL_39
0x146a	    0x488b05000000	            mov rax, qword [0x040014b1] 	       426	describe.c	FUNCTION_48	IF_22	CALL_39
0x1471	    0x488b95e0fcff	            mov rdx, qword [rbp - 0x320]	       426	describe.c	FUNCTION_48	IF_22	CALL_39
0x1478	          0x4889ce	                            mov rsi, rcx	       426	describe.c	FUNCTION_48	IF_22	CALL_39
0x147b	          0x4889c7	                            mov rdi, rax	       426	describe.c	FUNCTION_48	IF_22	CALL_39
0x147e	      0xb800000000	                              mov eax, 0	       426	describe.c	FUNCTION_48	IF_22	CALL_39
0x1483	      0xe800000000	                          call 0x40014c8	       426	describe.c	FUNCTION_48	IF_22	CALL_39
0x1488	    0x4883bdd8fcff	              cmp qword [rbp - 0x328], 0	       427	describe.c	FUNCTION_48	IF_22	IF_25
0x1490	            0x744c	                            je 0x400151e	       427	describe.c	FUNCTION_48	IF_22	IF_25
0x1492	    0x488b85d8fcff	            mov rax, qword [rbp - 0x328]	       432	describe.c	FUNCTION_48	IF_22	IF_25	CALL_42
0x1499	        0x4883c004	                              add rax, 4	       432	describe.c	FUNCTION_48	IF_22	IF_25	CALL_42
0x149d	          0x4889c7	                            mov rdi, rax	       428	describe.c	FUNCTION_48	IF_22	IF_25	CALL_40
0x14a0	      0xe800000000	                          call 0x40014e5	       428	describe.c	FUNCTION_48	IF_22	IF_25	CALL_40
0x14a5	          0x4989c5	                            mov r13, rax	       428	describe.c	FUNCTION_48	IF_22	IF_25	CALL_40
0x14a8	    0x448b25000000	           mov r12d, dword [0x040014ef] 	       428	describe.c	FUNCTION_48	IF_22	IF_25	CALL_40
0x14af	    0x8b1d00000000	            mov ebx, dword [0x040014f5] 	       428	describe.c	FUNCTION_48	IF_22	IF_25	CALL_40
0x14b5	      0xbf00000000	                              mov edi, 0	       428	describe.c	FUNCTION_48	IF_22	IF_25	CALL_40
0x14ba	      0xe83eedffff	                               call sym.	       428	describe.c	FUNCTION_48	IF_22	IF_25	CALL_40
0x14bf	          0x4889c6	                            mov rsi, rax	       428	describe.c	FUNCTION_48	IF_22	IF_25	CALL_40
0x14c2	    0x488b05000000	            mov rax, qword [0x04001509] 	       428	describe.c	FUNCTION_48	IF_22	IF_25	CALL_40
0x14c9	          0x4d89e8	                             mov r8, r13	       428	describe.c	FUNCTION_48	IF_22	IF_25	CALL_40
0x14cc	          0x4489e1	                           mov ecx, r12d	       428	describe.c	FUNCTION_48	IF_22	IF_25	CALL_40
0x14cf	            0x89da	                            mov edx, ebx	       428	describe.c	FUNCTION_48	IF_22	IF_25	CALL_40
0x14d1	          0x4889c7	                            mov rdi, rax	       428	describe.c	FUNCTION_48	IF_22	IF_25	CALL_40
0x14d4	      0xb800000000	                              mov eax, 0	       428	describe.c	FUNCTION_48	IF_22	IF_25	CALL_40
0x14d9	      0xe800000000	                          call 0x400151e	       428	describe.c	FUNCTION_48	IF_22	IF_25	CALL_40
0x14de	    0x488b8560fdff	            mov rax, qword [rbp - 0x2a0]	       436	describe.c	FUNCTION_48	CALL_43
0x14e5	    0x488b95b0fcff	            mov rdx, qword [rbp - 0x350]	       436	describe.c	FUNCTION_48	CALL_43
0x14ec	          0x4889d6	                            mov rsi, rdx	       436	describe.c	FUNCTION_48	CALL_43
0x14ef	          0x4889c7	                            mov rdi, rax	       436	describe.c	FUNCTION_48	CALL_43
0x14f2	      0xe80bf5ffff	                    call sym.append_name	       436	describe.c	FUNCTION_48	CALL_43
0x14f7	    0x8b0500000000	            mov eax, dword [0x0400153d] 	       437	describe.c	FUNCTION_48	IF_26
0x14fd	            0x85c0	                           test eax, eax	       437	describe.c	FUNCTION_48	IF_26
0x14ff	            0x7422	                            je 0x4001563	       437	describe.c	FUNCTION_48	IF_26
0x1501	    0x488b85f8fcff	            mov rax, qword [rbp - 0x308]	       438	describe.c	FUNCTION_48	CALL_44
0x1508	        0x488d4804	                      lea rcx, [rax + 4]	       438	describe.c	FUNCTION_48	CALL_44
0x150c	    0x8b8568fdffff	            mov eax, dword [rbp - 0x298]	       438	describe.c	FUNCTION_48	CALL_44
0x1512	    0x488b95b0fcff	            mov rdx, qword [rbp - 0x350]	       438	describe.c	FUNCTION_48	CALL_44
0x1519	          0x4889ce	                            mov rsi, rcx	       438	describe.c	FUNCTION_48	CALL_44
0x151c	            0x89c7	                            mov edi, eax	       438	describe.c	FUNCTION_48	CALL_44
0x151e	      0xe8a3f6ffff	                  call sym.append_suffix	       438	describe.c	FUNCTION_48	CALL_44
0x1523	    0x488b05000000	            mov rax, qword [0x0400156a] 	       439	describe.c	FUNCTION_48	IF_27
0x152a	          0x4885c0	                           test rax, rax	       439	describe.c	FUNCTION_48	IF_27
0x152d	            0x741f	                            je 0x400158e	       439	describe.c	FUNCTION_48	IF_27
0x152f	    0x488b15000000	            mov rdx, qword [0x04001576] 	       440	describe.c	FUNCTION_48	CALL_45
0x1536	    0x488b85b0fcff	            mov rax, qword [rbp - 0x350]	       440	describe.c	FUNCTION_48	CALL_45
0x153d	          0x4889d6	                            mov rsi, rdx	       440	describe.c	FUNCTION_48	CALL_45
0x1540	          0x4889c7	                            mov rdi, rax	       440	describe.c	FUNCTION_48	CALL_45
0x1543	      0xe848ebffff	                  call sym.strbuf_addstr	       440	describe.c	FUNCTION_48	CALL_45
0x1548	            0xeb04	                           jmp 0x400158e	       440	describe.c	FUNCTION_48	CALL_45
0x154a	              0x90	                                     nop	       313	describe.c	FUNCTION_48	IF_1
0x154b	            0xeb01	                           jmp 0x400158e	       313	describe.c	FUNCTION_48	IF_1
0x154d	              0x90	                                     nop	       389	describe.c	FUNCTION_48	IF_17	IF_18
0x154e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       441	describe.c	FUNCTION_48
0x1552	    0x644833042528	                xor rax, qword fs:[0x28]	       441	describe.c	FUNCTION_48
0x155b	            0x7405	                            je 0x40015a2	       441	describe.c	FUNCTION_48
0x155d	      0xe800000000	                          call 0x40015a2	       441	describe.c	FUNCTION_48
0x1562	    0x4881c4380300	                          add rsp, 0x338	       441	describe.c	FUNCTION_48
0x1569	              0x5b	                                 pop rbx	       441	describe.c	FUNCTION_48
0x156a	            0x415c	                                 pop r12	       441	describe.c	FUNCTION_48
0x156c	            0x415d	                                 pop r13	       441	describe.c	FUNCTION_48
0x156e	              0x5d	                                 pop rbp	       441	describe.c	FUNCTION_48
0x156f	              0xc3	                                     ret	       441	describe.c	FUNCTION_48
