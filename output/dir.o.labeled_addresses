is_missing_file_error	FOR,0:ELSE,0:WHILE,0:DO,0:functions,0:CALL,0:IF,0:SWITCH,0	12
0x1b4	              0x55	                                push rbp	      1196	git-compat-util.h	FUNCTION_28
0x1b5	          0x4889e5	                            mov rbp, rsp	      1196	git-compat-util.h	FUNCTION_28
0x1b8	          0x897dfc	                mov dword [rbp - 4], edi	      1196	git-compat-util.h	FUNCTION_28
0x1bb	        0x837dfc02	                  cmp dword [rbp - 4], 2	      1197	git-compat-util.h	FUNCTION_28
0x1bf	            0x7406	                            je 0x4000207	      1197	git-compat-util.h	FUNCTION_28
0x1c1	        0x837dfc14	               cmp dword [rbp - 4], 0x14	      1197	git-compat-util.h	FUNCTION_28
0x1c5	            0x7507	                           jne 0x400020e	      1197	git-compat-util.h	FUNCTION_28
0x1c7	      0xb801000000	                              mov eax, 1	      1197	git-compat-util.h	FUNCTION_28
0x1cc	            0xeb05	                           jmp 0x4000213	      1197	git-compat-util.h	FUNCTION_28
0x1ce	      0xb800000000	                              mov eax, 0	      1197	git-compat-util.h	FUNCTION_28
0x1d3	              0x5d	                                 pop rbp	      1198	git-compat-util.h	FUNCTION_28
0x1d4	              0xc3	                                     ret	      1198	git-compat-util.h	FUNCTION_28
ps_strcmp	FOR,0:ELSE,1:WHILE,0:DO,0:functions,0:CALL,2:IF,1:SWITCH,0	24
0x5ef	              0x55	                                push rbp	       100	pathspec.h	FUNCTION_30
0x5f0	          0x4889e5	                            mov rbp, rsp	       100	pathspec.h	FUNCTION_30
0x5f3	        0x4883ec20	                           sub rsp, 0x20	       100	pathspec.h	FUNCTION_30
0x5f7	        0x48897df8	                mov qword [rbp - 8], rdi	       100	pathspec.h	FUNCTION_30
0x5fb	        0x488975f0	             mov qword [rbp - 0x10], rsi	       100	pathspec.h	FUNCTION_30
0x5ff	        0x488955e8	             mov qword [rbp - 0x18], rdx	       100	pathspec.h	FUNCTION_30
0x603	        0x488b45f8	                mov rax, qword [rbp - 8]	       101	pathspec.h	FUNCTION_30	IF_1
0x607	          0x8b4010	            mov eax, dword [rax + 0x10] 	       101	pathspec.h	FUNCTION_30	IF_1
0x60a	          0x83e010	                           and eax, 0x10	       101	pathspec.h	FUNCTION_30	IF_1
0x60d	            0x85c0	                           test eax, eax	       101	pathspec.h	FUNCTION_30	IF_1
0x60f	            0x7415	                            je 0x4000666	       101	pathspec.h	FUNCTION_30	IF_1
0x611	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       102	pathspec.h	FUNCTION_30	CALL_1
0x615	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       102	pathspec.h	FUNCTION_30	CALL_1
0x619	          0x4889d6	                            mov rsi, rdx	       102	pathspec.h	FUNCTION_30	CALL_1
0x61c	          0x4889c7	                            mov rdi, rax	       102	pathspec.h	FUNCTION_30	CALL_1
0x61f	      0xe800000000	                          call 0x4000664	       102	pathspec.h	FUNCTION_30	CALL_1
0x624	            0xeb13	                           jmp 0x4000679	       102	pathspec.h	FUNCTION_30	CALL_1
0x626	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       104	pathspec.h	FUNCTION_30	CALL_2
0x62a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       104	pathspec.h	FUNCTION_30	CALL_2
0x62e	          0x4889d6	                            mov rsi, rdx	       104	pathspec.h	FUNCTION_30	CALL_2
0x631	          0x4889c7	                            mov rdi, rax	       104	pathspec.h	FUNCTION_30	CALL_2
0x634	      0xe800000000	                          call 0x4000679	       104	pathspec.h	FUNCTION_30	CALL_2
0x639	              0xc9	                                   leave	       105	pathspec.h	FUNCTION_30
0x63a	              0xc3	                                     ret	       105	pathspec.h	FUNCTION_30
strbuf_avail	FOR,0:ELSE,0:WHILE,0:DO,0:functions,0:CALL,0:IF,0:SWITCH,0	18
0x1d5	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_32
0x1d6	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_32
0x1d9	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_32
0x1dd	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_32
0x1e1	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_32
0x1e4	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_32
0x1e7	            0x741b	                            je 0x4000244	       141	strbuf.h	FUNCTION_32
0x1e9	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_32
0x1ed	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_32
0x1f0	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_32
0x1f4	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_32
0x1f8	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_32
0x1fb	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_32
0x1fe	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_32
0x202	            0xeb05	                           jmp 0x4000249	       141	strbuf.h	FUNCTION_32
0x204	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_32
0x209	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_32
0x20a	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_32
sane_case	FOR,0:ELSE,0:WHILE,0:DO,0:functions,0:CALL,1:IF,1:SWITCH,0	19
0x146	              0x55	                                push rbp	       992	git-compat-util.h	FUNCTION_22
0x147	          0x4889e5	                            mov rbp, rsp	       992	git-compat-util.h	FUNCTION_22
0x14a	          0x897dfc	                mov dword [rbp - 4], edi	       992	git-compat-util.h	FUNCTION_22
0x14d	          0x8975f8	                mov dword [rbp - 8], esi	       992	git-compat-util.h	FUNCTION_22
0x150	          0x8b45fc	                mov eax, dword [rbp - 4]	       993	git-compat-util.h	FUNCTION_22	IF_1	CALL_1
0x153	           0xfb6c0	                           movzx eax, al	       993	git-compat-util.h	FUNCTION_22	IF_1	CALL_1
0x156	            0x4898	                                    cdqe	       993	git-compat-util.h	FUNCTION_22	IF_1	CALL_1
0x158	     0xfb680000000	                   movzx eax, byte [rax]	       993	git-compat-util.h	FUNCTION_22	IF_1	CALL_1
0x15f	           0xfb6c0	                           movzx eax, al	       993	git-compat-util.h	FUNCTION_22	IF_1	CALL_1
0x162	          0x83e004	                              and eax, 4	       993	git-compat-util.h	FUNCTION_22	IF_1	CALL_1
0x165	            0x85c0	                           test eax, eax	       993	git-compat-util.h	FUNCTION_22	IF_1	CALL_1
0x167	            0x740c	                            je 0x40001b5	       993	git-compat-util.h	FUNCTION_22	IF_1	CALL_1
0x169	          0x8b45fc	                mov eax, dword [rbp - 4]	       994	git-compat-util.h	FUNCTION_22	IF_1
0x16c	          0x83e0df	                     and eax, 0xffffffdf	       994	git-compat-util.h	FUNCTION_22	IF_1
0x16f	           0xb45f8	                 or eax, dword [rbp - 8]	       994	git-compat-util.h	FUNCTION_22	IF_1
0x172	          0x8945fc	                mov dword [rbp - 4], eax	       994	git-compat-util.h	FUNCTION_22	IF_1
0x175	          0x8b45fc	                mov eax, dword [rbp - 4]	       995	git-compat-util.h	FUNCTION_22
0x178	              0x5d	                                 pop rbp	       996	git-compat-util.h	FUNCTION_22
0x179	              0xc3	                                     ret	       996	git-compat-util.h	FUNCTION_22
git_bswap32	FOR,0:ELSE,1:WHILE,0:DO,0:functions,0:CALL,3:IF,1:SWITCH,0	9
0x13	              0x55	                                push rbp	        39	bswap.h	FUNCTION_44
0x14	          0x4889e5	                            mov rbp, rsp	        39	bswap.h	FUNCTION_44
0x17	          0x897dec	             mov dword [rbp - 0x14], edi	        39	bswap.h	FUNCTION_44
0x1a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        44	bswap.h	FUNCTION_44	CALL_3
0x1d	             0xfc8	                               bswap eax	        44	bswap.h	FUNCTION_44	CALL_3
0x1f	          0x8945fc	                mov dword [rbp - 4], eax	        44	bswap.h	FUNCTION_44	CALL_3
0x22	          0x8b45fc	                mov eax, dword [rbp - 4]	        45	bswap.h	FUNCTION_44
0x25	              0x5d	                                 pop rbp	        46	bswap.h	FUNCTION_44
0x26	              0xc3	                                     ret	        46	bswap.h	FUNCTION_44
_	FOR,0:ELSE,0:WHILE,0:DO,0:functions,0:CALL,2:IF,1:SWITCH,0	15
0x39a	              0x55	                                push rbp	        51	gettext.h	FUNCTION_54
0x39b	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_54
0x39e	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_54
0x3a2	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_54
0x3a6	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_54	IF_1
0x3aa	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_54	IF_1
0x3ad	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_54	IF_1
0x3af	            0x7507	                           jne 0x40003f8	        52	gettext.h	FUNCTION_54	IF_1
0x3b1	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_54	IF_1
0x3b6	            0xeb0c	                           jmp 0x4000404	        53	gettext.h	FUNCTION_54	IF_1
0x3b8	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_54	CALL_2
0x3bc	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_54	CALL_2
0x3bf	      0xe800000000	                          call 0x4000404	        54	gettext.h	FUNCTION_54	CALL_2
0x3c4	              0xc9	                                   leave	        55	gettext.h	FUNCTION_54
0x3c5	              0xc3	                                     ret	        55	gettext.h	FUNCTION_54
const_error	FOR,0:ELSE,0:WHILE,0:DO,0:functions,0:CALL,0:IF,0:SWITCH,0	5
0x27	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_7
0x28	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_7
0x2b	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_7
0x30	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_7
0x31	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_7
strbuf_addstr	FOR,0:ELSE,0:WHILE,0:DO,0:functions,0:CALL,2:IF,0:SWITCH,0	17
0x313	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_35
0x314	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_35
0x317	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_35
0x31b	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_35
0x31f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_35
0x323	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_35	CALL_2
0x327	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_35	CALL_2
0x32a	      0xe800000000	                          call 0x400036f	       279	strbuf.h	FUNCTION_35	CALL_2
0x32f	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_35	CALL_2
0x332	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_35	CALL_2
0x336	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_35	CALL_2
0x33a	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_35	CALL_2
0x33d	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_35	CALL_2
0x340	      0xe800000000	                          call 0x4000385	       279	strbuf.h	FUNCTION_35	CALL_2
0x345	              0x90	                                     nop	       280	strbuf.h	FUNCTION_35
0x346	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_35
0x347	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_35
strbuf_addch	FOR,0:ELSE,0:WHILE,0:DO,0:functions,0:CALL,2:IF,1:SWITCH,0	33
0x2a5	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_34
0x2a6	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_34
0x2a9	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_34
0x2ad	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_34
0x2b1	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_34
0x2b4	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_34	IF_1	CALL_1
0x2b8	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_34	IF_1	CALL_1
0x2bb	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_34	IF_1	CALL_1
0x2c0	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_34	IF_1	CALL_1
0x2c3	            0x7511	                           jne 0x4000316	       227	strbuf.h	FUNCTION_34	IF_1	CALL_1
0x2c5	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_34	CALL_2
0x2c9	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_34	CALL_2
0x2ce	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_34	CALL_2
0x2d1	      0xe800000000	                          call 0x4000316	       228	strbuf.h	FUNCTION_34	CALL_2
0x2d6	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_34
0x2da	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_34
0x2de	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_34
0x2e2	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_34
0x2e6	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_34
0x2ea	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_34
0x2ee	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_34
0x2f2	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_34
0x2f5	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_34
0x2f8	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_34
0x2fa	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_34
0x2fe	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_34
0x302	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_34
0x306	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_34
0x30a	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_34
0x30d	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_34
0x310	              0x90	                                     nop	       231	strbuf.h	FUNCTION_34
0x311	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_34
0x312	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_34
git_is_dir_sep	FOR,0:ELSE,0:WHILE,0:DO,0:functions,0:CALL,0:IF,0:SWITCH,0	8
0x0	              0x55	                                push rbp	       363	git-compat-util.h	FUNCTION_4
0x1	          0x4889e5	                            mov rbp, rsp	       363	git-compat-util.h	FUNCTION_4
0x4	          0x897dfc	                mov dword [rbp - 4], edi	       363	git-compat-util.h	FUNCTION_4
0x7	        0x837dfc2f	               cmp dword [rbp - 4], 0x2f	       364	git-compat-util.h	FUNCTION_4
0xb	           0xf94c0	                                 sete al	       364	git-compat-util.h	FUNCTION_4
0xe	           0xfb6c0	                           movzx eax, al	       364	git-compat-util.h	FUNCTION_4
0x11	              0x5d	                                 pop rbp	       365	git-compat-util.h	FUNCTION_4
0x12	              0xc3	                                     ret	       365	git-compat-util.h	FUNCTION_4
is_dot_or_dotdot	FOR,0:ELSE,0:WHILE,0:DO,0:functions,0:CALL,0:IF,0:SWITCH,0	27
0x549	              0x55	                                push rbp	       276	dir.h	FUNCTION_56
0x54a	          0x4889e5	                            mov rbp, rsp	       276	dir.h	FUNCTION_56
0x54d	        0x48897df8	                mov qword [rbp - 8], rdi	       276	dir.h	FUNCTION_56
0x551	        0x488b45f8	                mov rax, qword [rbp - 8]	       277	dir.h	FUNCTION_56
0x555	           0xfb600	                   movzx eax, byte [rax]	       277	dir.h	FUNCTION_56
0x558	            0x3c2e	                            cmp al, 0x2e	       277	dir.h	FUNCTION_56
0x55a	            0x7534	                           jne 0x40005d0	       277	dir.h	FUNCTION_56
0x55c	        0x488b45f8	                mov rax, qword [rbp - 8]	       278	dir.h	FUNCTION_56
0x560	        0x4883c001	                              add rax, 1	       278	dir.h	FUNCTION_56
0x564	           0xfb600	                   movzx eax, byte [rax]	       278	dir.h	FUNCTION_56
0x567	            0x84c0	                             test al, al	       277	dir.h	FUNCTION_56
0x569	            0x741e	                            je 0x40005c9	       277	dir.h	FUNCTION_56
0x56b	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	dir.h	FUNCTION_56
0x56f	        0x4883c001	                              add rax, 1	       279	dir.h	FUNCTION_56
0x573	           0xfb600	                   movzx eax, byte [rax]	       279	dir.h	FUNCTION_56
0x576	            0x3c2e	                            cmp al, 0x2e	       278	dir.h	FUNCTION_56
0x578	            0x7516	                           jne 0x40005d0	       278	dir.h	FUNCTION_56
0x57a	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	dir.h	FUNCTION_56
0x57e	        0x4883c002	                              add rax, 2	       279	dir.h	FUNCTION_56
0x582	           0xfb600	                   movzx eax, byte [rax]	       279	dir.h	FUNCTION_56
0x585	            0x84c0	                             test al, al	       279	dir.h	FUNCTION_56
0x587	            0x7507	                           jne 0x40005d0	       279	dir.h	FUNCTION_56
0x589	      0xb801000000	                              mov eax, 1	       277	dir.h	FUNCTION_56
0x58e	            0xeb05	                           jmp 0x40005d5	       277	dir.h	FUNCTION_56
0x590	      0xb800000000	                              mov eax, 0	       277	dir.h	FUNCTION_56
0x595	              0x5d	                                 pop rbp	       280	dir.h	FUNCTION_56
0x596	              0xc3	                                     ret	       280	dir.h	FUNCTION_56
sane_qsort	FOR,0:ELSE,0:WHILE,0:DO,0:functions,0:CALL,1:IF,1:SWITCH,0	18
0x17a	              0x55	                                push rbp	      1047	git-compat-util.h	FUNCTION_26
0x17b	          0x4889e5	                            mov rbp, rsp	      1047	git-compat-util.h	FUNCTION_26
0x17e	        0x4883ec20	                           sub rsp, 0x20	      1047	git-compat-util.h	FUNCTION_26
0x182	        0x48897df8	                mov qword [rbp - 8], rdi	      1047	git-compat-util.h	FUNCTION_26
0x186	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1047	git-compat-util.h	FUNCTION_26
0x18a	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1047	git-compat-util.h	FUNCTION_26
0x18e	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1047	git-compat-util.h	FUNCTION_26
0x192	      0x48837df001	               cmp qword [rbp - 0x10], 1	      1048	git-compat-util.h	FUNCTION_26	IF_1
0x197	            0x7618	                           jbe 0x40001f1	      1048	git-compat-util.h	FUNCTION_26	IF_1
0x199	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1049	git-compat-util.h	FUNCTION_26	CALL_1
0x19d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1049	git-compat-util.h	FUNCTION_26	CALL_1
0x1a1	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1049	git-compat-util.h	FUNCTION_26	CALL_1
0x1a5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1049	git-compat-util.h	FUNCTION_26	CALL_1
0x1a9	          0x4889c7	                            mov rdi, rax	      1049	git-compat-util.h	FUNCTION_26	CALL_1
0x1ac	      0xe800000000	                          call 0x40001f1	      1049	git-compat-util.h	FUNCTION_26	CALL_1
0x1b1	              0x90	                                     nop	      1050	git-compat-util.h	FUNCTION_26
0x1b2	              0xc9	                                   leave	      1050	git-compat-util.h	FUNCTION_26
0x1b3	              0xc3	                                     ret	      1050	git-compat-util.h	FUNCTION_26
would_convert_to_git	FOR,0:ELSE,0:WHILE,0:DO,0:functions,0:CALL,1:IF,0:SWITCH,0	15
0x3c6	              0x55	                                push rbp	        80	convert.h	FUNCTION_59
0x3c7	          0x4889e5	                            mov rbp, rsp	        80	convert.h	FUNCTION_59
0x3ca	        0x4883ec10	                           sub rsp, 0x10	        80	convert.h	FUNCTION_59
0x3ce	        0x48897df8	                mov qword [rbp - 8], rdi	        80	convert.h	FUNCTION_59
0x3d2	        0x488975f0	             mov qword [rbp - 0x10], rsi	        80	convert.h	FUNCTION_59
0x3d6	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	        81	convert.h	FUNCTION_59	CALL_1
0x3da	        0x488b45f8	                mov rax, qword [rbp - 8]	        81	convert.h	FUNCTION_59	CALL_1
0x3de	    0x41b900000000	                              mov r9d, 0	        81	convert.h	FUNCTION_59	CALL_1
0x3e4	    0x41b800000000	                              mov r8d, 0	        81	convert.h	FUNCTION_59	CALL_1
0x3ea	      0xb900000000	                              mov ecx, 0	        81	convert.h	FUNCTION_59	CALL_1
0x3ef	      0xba00000000	                              mov edx, 0	        81	convert.h	FUNCTION_59	CALL_1
0x3f4	          0x4889c7	                            mov rdi, rax	        81	convert.h	FUNCTION_59	CALL_1
0x3f7	      0xe800000000	                          call 0x400043c	        81	convert.h	FUNCTION_59	CALL_1
0x3fc	              0xc9	                                   leave	        82	convert.h	FUNCTION_59
0x3fd	              0xc3	                                     ret	        82	convert.h	FUNCTION_59
strbuf_complete	FOR,0:ELSE,0:WHILE,0:DO,0:functions,0:CALL,1:IF,1:SWITCH,0	27
0x348	              0x55	                                push rbp	       594	strbuf.h	FUNCTION_40
0x349	          0x4889e5	                            mov rbp, rsp	       594	strbuf.h	FUNCTION_40
0x34c	        0x4883ec10	                           sub rsp, 0x10	       594	strbuf.h	FUNCTION_40
0x350	        0x48897df8	                mov qword [rbp - 8], rdi	       594	strbuf.h	FUNCTION_40
0x354	            0x89f0	                            mov eax, esi	       594	strbuf.h	FUNCTION_40
0x356	          0x8845f4	                mov byte [rbp - 0xc], al	       594	strbuf.h	FUNCTION_40
0x359	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_40	IF_1
0x35d	        0x488b4008	                mov rax, qword [rax + 8]	       595	strbuf.h	FUNCTION_40	IF_1
0x361	          0x4885c0	                           test rax, rax	       595	strbuf.h	FUNCTION_40	IF_1
0x364	            0x7431	                            je 0x40003d7	       595	strbuf.h	FUNCTION_40	IF_1
0x366	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_40	IF_1
0x36a	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       595	strbuf.h	FUNCTION_40	IF_1
0x36e	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_40	IF_1
0x372	        0x488b4008	                mov rax, qword [rax + 8]	       595	strbuf.h	FUNCTION_40	IF_1
0x376	        0x4883e801	                              sub rax, 1	       595	strbuf.h	FUNCTION_40	IF_1
0x37a	          0x4801d0	                            add rax, rdx	       595	strbuf.h	FUNCTION_40	IF_1
0x37d	           0xfb600	                   movzx eax, byte [rax]	       595	strbuf.h	FUNCTION_40	IF_1
0x380	          0x3a45f4	                cmp al, byte [rbp - 0xc]	       595	strbuf.h	FUNCTION_40	IF_1
0x383	            0x7412	                            je 0x40003d7	       595	strbuf.h	FUNCTION_40	IF_1
0x385	         0xfbe55f4	             movsx edx, byte [rbp - 0xc]	       596	strbuf.h	FUNCTION_40	CALL_1
0x389	        0x488b45f8	                mov rax, qword [rbp - 8]	       596	strbuf.h	FUNCTION_40	CALL_1
0x38d	            0x89d6	                            mov esi, edx	       596	strbuf.h	FUNCTION_40	CALL_1
0x38f	          0x4889c7	                            mov rdi, rax	       596	strbuf.h	FUNCTION_40	CALL_1
0x392	      0xe80effffff	                   call sym.strbuf_addch	       596	strbuf.h	FUNCTION_40	CALL_1
0x397	              0x90	                                     nop	       597	strbuf.h	FUNCTION_40
0x398	              0xc9	                                   leave	       597	strbuf.h	FUNCTION_40
0x399	              0xc3	                                     ret	       597	strbuf.h	FUNCTION_40
move_array	FOR,0:ELSE,0:WHILE,0:DO,0:functions,0:CALL,2:IF,1:SWITCH,0	23
0xc8	              0x55	                                push rbp	       860	git-compat-util.h	FUNCTION_19
0xc9	          0x4889e5	                            mov rbp, rsp	       860	git-compat-util.h	FUNCTION_19
0xcc	        0x4883ec20	                           sub rsp, 0x20	       860	git-compat-util.h	FUNCTION_19
0xd0	        0x48897df8	                mov qword [rbp - 8], rdi	       860	git-compat-util.h	FUNCTION_19
0xd4	        0x488975f0	             mov qword [rbp - 0x10], rsi	       860	git-compat-util.h	FUNCTION_19
0xd8	        0x488955e8	             mov qword [rbp - 0x18], rdx	       860	git-compat-util.h	FUNCTION_19
0xdc	        0x48894de0	             mov qword [rbp - 0x20], rcx	       860	git-compat-util.h	FUNCTION_19
0xe0	      0x48837de800	               cmp qword [rbp - 0x18], 0	       861	git-compat-util.h	FUNCTION_19	IF_1
0xe5	            0x7429	                            je 0x4000150	       861	git-compat-util.h	FUNCTION_19	IF_1
0xe7	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       862	git-compat-util.h	FUNCTION_19	CALL_2
0xeb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       862	git-compat-util.h	FUNCTION_19	CALL_2
0xef	          0x4889d6	                            mov rsi, rdx	       862	git-compat-util.h	FUNCTION_19	CALL_2
0xf2	          0x4889c7	                            mov rdi, rax	       862	git-compat-util.h	FUNCTION_19	CALL_2
0xf5	      0xe87cffffff	                        call sym.st_mult	       862	git-compat-util.h	FUNCTION_19	CALL_2
0xfa	          0x4889c2	                            mov rdx, rax	       862	git-compat-util.h	FUNCTION_19	CALL_2
0xfd	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       862	git-compat-util.h	FUNCTION_19	CALL_2
0x101	        0x488b45f8	                mov rax, qword [rbp - 8]	       862	git-compat-util.h	FUNCTION_19	CALL_2
0x105	          0x4889ce	                            mov rsi, rcx	       862	git-compat-util.h	FUNCTION_19	CALL_2
0x108	          0x4889c7	                            mov rdi, rax	       862	git-compat-util.h	FUNCTION_19	CALL_2
0x10b	      0xe800000000	                          call 0x4000150	       862	git-compat-util.h	FUNCTION_19	CALL_2
0x110	              0x90	                                     nop	       863	git-compat-util.h	FUNCTION_19
0x111	              0xc9	                                   leave	       863	git-compat-util.h	FUNCTION_19
0x112	              0xc3	                                     ret	       863	git-compat-util.h	FUNCTION_19
xsize_t	FOR,0:ELSE,0:WHILE,0:DO,0:functions,0:CALL,1:IF,1:SWITCH,0	15
0x113	              0x55	                                push rbp	       928	git-compat-util.h	FUNCTION_21
0x114	          0x4889e5	                            mov rbp, rsp	       928	git-compat-util.h	FUNCTION_21
0x117	        0x4883ec20	                           sub rsp, 0x20	       928	git-compat-util.h	FUNCTION_21
0x11b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       928	git-compat-util.h	FUNCTION_21
0x11f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       929	git-compat-util.h	FUNCTION_21
0x123	        0x488945f8	                mov qword [rbp - 8], rax	       929	git-compat-util.h	FUNCTION_21
0x127	        0x488b45f8	                mov rax, qword [rbp - 8]	       931	git-compat-util.h	FUNCTION_21	IF_1
0x12b	        0x483945e8	            cmp qword [rbp - 0x18], rax 	       931	git-compat-util.h	FUNCTION_21	IF_1
0x12f	            0x740f	                            je 0x4000180	       931	git-compat-util.h	FUNCTION_21	IF_1
0x131	      0xbf00000000	                              mov edi, 0	       932	git-compat-util.h	FUNCTION_21	CALL_1
0x136	      0xb800000000	                              mov eax, 0	       932	git-compat-util.h	FUNCTION_21	CALL_1
0x13b	      0xe800000000	                          call 0x4000180	       932	git-compat-util.h	FUNCTION_21	CALL_1
0x140	        0x488b45f8	                mov rax, qword [rbp - 8]	       933	git-compat-util.h	FUNCTION_21
0x144	              0xc9	                                   leave	       934	git-compat-util.h	FUNCTION_21
0x145	              0xc3	                                     ret	       934	git-compat-util.h	FUNCTION_21
strbuf_setlen	FOR,0:ELSE,1:WHILE,0:DO,0:functions,0:CALL,2:IF,2:SWITCH,0	43
0x20b	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_33
0x20c	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_33
0x20f	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_33
0x213	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_33
0x217	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_33
0x21b	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_33	IF_1
0x21f	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_33	IF_1
0x222	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_33	IF_1
0x225	            0x740d	                            je 0x4000274	       162	strbuf.h	FUNCTION_33	IF_1
0x227	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_33	IF_1
0x22b	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_33	IF_1
0x22e	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_33	IF_1
0x232	            0xeb05	                           jmp 0x4000279	       162	strbuf.h	FUNCTION_33	IF_1
0x234	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_33	IF_1
0x239	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_33	IF_1
0x23d	            0x730f	                           jae 0x400028e	       162	strbuf.h	FUNCTION_33	IF_1
0x23f	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_33	CALL_1
0x244	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_33	CALL_1
0x249	      0xe800000000	                          call 0x400028e	       163	strbuf.h	FUNCTION_33	CALL_1
0x24e	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_33
0x252	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_33
0x256	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_33
0x25a	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_33	IF_2
0x25e	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_33	IF_2
0x262	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_33	IF_2
0x268	            0x7414	                            je 0x40002be	       165	strbuf.h	FUNCTION_33	IF_2
0x26a	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_33	IF_2
0x26e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_33	IF_2
0x272	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_33	IF_2
0x276	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_33	IF_2
0x279	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_33	IF_2
0x27c	            0xeb24	                           jmp 0x40002e2	       169	strbuf.h	FUNCTION_33
0x27e	     0xfb605000000	           movzx eax, byte [0x040002c5] 	       168	strbuf.h	FUNCTION_33	CALL_2
0x285	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_33	CALL_2
0x287	            0x7419	                            je 0x40002e2	       168	strbuf.h	FUNCTION_33	CALL_2
0x289	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_33	CALL_2
0x28e	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_33	CALL_2
0x293	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_33	CALL_2
0x298	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_33	CALL_2
0x29d	      0xe800000000	                          call 0x40002e2	       168	strbuf.h	FUNCTION_33	CALL_2
0x2a2	              0x90	                                     nop	       169	strbuf.h	FUNCTION_33
0x2a3	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_33
0x2a4	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_33
ps_strncmp	FOR,0:ELSE,1:WHILE,0:DO,0:functions,0:CALL,2:IF,1:SWITCH,0	27
0x597	              0x55	                                push rbp	        91	pathspec.h	FUNCTION_29
0x598	          0x4889e5	                            mov rbp, rsp	        91	pathspec.h	FUNCTION_29
0x59b	        0x4883ec20	                           sub rsp, 0x20	        91	pathspec.h	FUNCTION_29
0x59f	        0x48897df8	                mov qword [rbp - 8], rdi	        91	pathspec.h	FUNCTION_29
0x5a3	        0x488975f0	             mov qword [rbp - 0x10], rsi	        91	pathspec.h	FUNCTION_29
0x5a7	        0x488955e8	             mov qword [rbp - 0x18], rdx	        91	pathspec.h	FUNCTION_29
0x5ab	        0x48894de0	             mov qword [rbp - 0x20], rcx	        91	pathspec.h	FUNCTION_29
0x5af	        0x488b45f8	                mov rax, qword [rbp - 8]	        92	pathspec.h	FUNCTION_29	IF_1
0x5b3	          0x8b4010	            mov eax, dword [rax + 0x10] 	        92	pathspec.h	FUNCTION_29	IF_1
0x5b6	          0x83e010	                           and eax, 0x10	        92	pathspec.h	FUNCTION_29	IF_1
0x5b9	            0x85c0	                           test eax, eax	        92	pathspec.h	FUNCTION_29	IF_1
0x5bb	            0x7419	                            je 0x4000616	        92	pathspec.h	FUNCTION_29	IF_1
0x5bd	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        93	pathspec.h	FUNCTION_29	CALL_1
0x5c1	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	        93	pathspec.h	FUNCTION_29	CALL_1
0x5c5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        93	pathspec.h	FUNCTION_29	CALL_1
0x5c9	          0x4889ce	                            mov rsi, rcx	        93	pathspec.h	FUNCTION_29	CALL_1
0x5cc	          0x4889c7	                            mov rdi, rax	        93	pathspec.h	FUNCTION_29	CALL_1
0x5cf	      0xe800000000	                          call 0x4000614	        93	pathspec.h	FUNCTION_29	CALL_1
0x5d4	            0xeb17	                           jmp 0x400062d	        93	pathspec.h	FUNCTION_29	CALL_1
0x5d6	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        95	pathspec.h	FUNCTION_29	CALL_2
0x5da	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	        95	pathspec.h	FUNCTION_29	CALL_2
0x5de	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        95	pathspec.h	FUNCTION_29	CALL_2
0x5e2	          0x4889ce	                            mov rsi, rcx	        95	pathspec.h	FUNCTION_29	CALL_2
0x5e5	          0x4889c7	                            mov rdi, rax	        95	pathspec.h	FUNCTION_29	CALL_2
0x5e8	      0xe800000000	                          call 0x400062d	        95	pathspec.h	FUNCTION_29	CALL_2
0x5ed	              0xc9	                                   leave	        96	pathspec.h	FUNCTION_29
0x5ee	              0xc3	                                     ret	        96	pathspec.h	FUNCTION_29
st_add	FOR,0:ELSE,0:WHILE,0:DO,0:functions,0:CALL,2:IF,1:SWITCH,0	20
0x32	              0x55	                                push rbp	       784	git-compat-util.h	FUNCTION_15
0x33	          0x4889e5	                            mov rbp, rsp	       784	git-compat-util.h	FUNCTION_15
0x36	        0x4883ec10	                           sub rsp, 0x10	       784	git-compat-util.h	FUNCTION_15
0x3a	        0x48897df8	                mov qword [rbp - 8], rdi	       784	git-compat-util.h	FUNCTION_15
0x3e	        0x488975f0	             mov qword [rbp - 0x10], rsi	       784	git-compat-util.h	FUNCTION_15
0x42	        0x488b45f8	                mov rax, qword [rbp - 8]	       785	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x46	          0x48f7d0	                                 not rax	       785	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x49	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       785	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x4d	            0x731a	                           jae 0x40000a9	       785	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x4f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       786	git-compat-util.h	FUNCTION_15	IF_1	CALL_2
0x53	        0x488b45f8	                mov rax, qword [rbp - 8]	       786	git-compat-util.h	FUNCTION_15	IF_1	CALL_2
0x57	          0x4889c6	                            mov rsi, rax	       786	git-compat-util.h	FUNCTION_15	IF_1	CALL_2
0x5a	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_15	IF_1	CALL_2
0x5f	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_15	IF_1	CALL_2
0x64	      0xe800000000	                          call 0x40000a9	       786	git-compat-util.h	FUNCTION_15	IF_1	CALL_2
0x69	        0x488b55f8	                mov rdx, qword [rbp - 8]	       788	git-compat-util.h	FUNCTION_15
0x6d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       788	git-compat-util.h	FUNCTION_15
0x71	          0x4801d0	                            add rax, rdx	       788	git-compat-util.h	FUNCTION_15
0x74	              0xc9	                                   leave	       789	git-compat-util.h	FUNCTION_15
0x75	              0xc3	                                     ret	       789	git-compat-util.h	FUNCTION_15
st_mult	FOR,0:ELSE,0:WHILE,0:DO,0:functions,0:CALL,2:IF,1:SWITCH,0	22
0x76	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_16
0x77	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_16
0x7a	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_16
0x7e	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_16
0x82	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_16
0x86	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_16	IF_1	CALL_1
0x8b	            0x7430	                            je 0x40000fd	       795	git-compat-util.h	FUNCTION_16	IF_1	CALL_1
0x8d	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_16	IF_1	CALL_1
0x94	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_16	IF_1	CALL_1
0x99	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_16	IF_1	CALL_1
0x9d	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_16	IF_1	CALL_1
0xa1	            0x731a	                           jae 0x40000fd	       795	git-compat-util.h	FUNCTION_16	IF_1	CALL_1
0xa3	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_16	IF_1	CALL_2
0xa7	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_16	IF_1	CALL_2
0xab	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_16	IF_1	CALL_2
0xae	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_16	IF_1	CALL_2
0xb3	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_16	IF_1	CALL_2
0xb8	      0xe800000000	                          call 0x40000fd	       796	git-compat-util.h	FUNCTION_16	IF_1	CALL_2
0xbd	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_16
0xc1	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_16
0xc6	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_16
0xc7	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_16
trace_pass_fl	FOR,0:ELSE,0:WHILE,0:DO,0:functions,0:CALL,0:IF,0:SWITCH,0	17
0x3fe	              0x55	                                push rbp	       134	trace.h	FUNCTION_60
0x3ff	          0x4889e5	                            mov rbp, rsp	       134	trace.h	FUNCTION_60
0x402	        0x48897df8	                mov qword [rbp - 8], rdi	       134	trace.h	FUNCTION_60
0x406	        0x488b45f8	                mov rax, qword [rbp - 8]	       135	trace.h	FUNCTION_60
0x40a	          0x8b4008	                mov eax, dword [rax + 8]	       135	trace.h	FUNCTION_60
0x40d	            0x85c0	                           test eax, eax	       135	trace.h	FUNCTION_60
0x40f	            0x750f	                           jne 0x4000460	       135	trace.h	FUNCTION_60
0x411	        0x488b45f8	                mov rax, qword [rbp - 8]	       135	trace.h	FUNCTION_60
0x415	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	       135	trace.h	FUNCTION_60
0x419	          0x83e001	                              and eax, 1	       135	trace.h	FUNCTION_60
0x41c	            0x84c0	                             test al, al	       135	trace.h	FUNCTION_60
0x41e	            0x7507	                           jne 0x4000467	       135	trace.h	FUNCTION_60
0x420	      0xb801000000	                              mov eax, 1	       135	trace.h	FUNCTION_60
0x425	            0xeb05	                           jmp 0x400046c	       135	trace.h	FUNCTION_60
0x427	      0xb800000000	                              mov eax, 0	       135	trace.h	FUNCTION_60
0x42c	              0x5d	                                 pop rbp	       136	trace.h	FUNCTION_60
0x42d	              0xc3	                                     ret	       136	trace.h	FUNCTION_60
