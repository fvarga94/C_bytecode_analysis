_	SWITCH,0:WHILE,0:functions,0:IF,1:CALL,2:DO,0:ELSE,0:FOR,0	15
0x12e	              0x55	                                push rbp	        51	gettext.h	FUNCTION_3
0x12f	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_3
0x132	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_3
0x136	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_3
0x13a	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_3	IF_1
0x13e	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_3	IF_1
0x141	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_3	IF_1
0x143	            0x7507	                           jne 0x400018c	        52	gettext.h	FUNCTION_3	IF_1
0x145	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_3	IF_1
0x14a	            0xeb0c	                           jmp 0x4000198	        53	gettext.h	FUNCTION_3	IF_1
0x14c	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_3	CALL_2
0x150	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_3	CALL_2
0x153	      0xe800000000	                          call 0x4000198	        54	gettext.h	FUNCTION_3	CALL_2
0x158	              0xc9	                                   leave	        55	gettext.h	FUNCTION_3
0x159	              0xc3	                                     ret	        55	gettext.h	FUNCTION_3
output_exclude	SWITCH,0:WHILE,0:functions,0:IF,5:CALL,9:DO,0:ELSE,5:FOR,0	124
0x15a	              0x55	                                push rbp	        35	check-ignore.c	FUNCTION_5
0x15b	          0x4889e5	                            mov rbp, rsp	        35	check-ignore.c	FUNCTION_5
0x15e	        0x4883ec20	                           sub rsp, 0x20	        35	check-ignore.c	FUNCTION_5
0x162	        0x48897de8	             mov qword [rbp - 0x18], rdi	        35	check-ignore.c	FUNCTION_5
0x166	        0x488975e0	             mov qword [rbp - 0x20], rsi	        35	check-ignore.c	FUNCTION_5
0x16a	      0x48837de000	               cmp qword [rbp - 0x20], 0	        36	check-ignore.c	FUNCTION_5
0x16f	            0x7415	                            je 0x40001c6	        36	check-ignore.c	FUNCTION_5
0x171	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        36	check-ignore.c	FUNCTION_5
0x175	          0x8b4024	            mov eax, dword [rax + 0x24] 	        36	check-ignore.c	FUNCTION_5
0x178	          0x83e010	                           and eax, 0x10	        36	check-ignore.c	FUNCTION_5
0x17b	            0x85c0	                           test eax, eax	        36	check-ignore.c	FUNCTION_5
0x17d	            0x7407	                            je 0x40001c6	        36	check-ignore.c	FUNCTION_5
0x17f	      0xb800000000	                              mov eax, 0	        36	check-ignore.c	FUNCTION_5
0x184	            0xeb05	                           jmp 0x40001cb	        36	check-ignore.c	FUNCTION_5
0x186	      0xb800000000	                              mov eax, 0	        36	check-ignore.c	FUNCTION_5
0x18b	        0x488945f0	             mov qword [rbp - 0x10], rax	        36	check-ignore.c	FUNCTION_5
0x18f	      0x48837de000	               cmp qword [rbp - 0x20], 0	        37	check-ignore.c	FUNCTION_5
0x194	            0x7415	                            je 0x40001eb	        37	check-ignore.c	FUNCTION_5
0x196	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        37	check-ignore.c	FUNCTION_5
0x19a	          0x8b4024	            mov eax, dword [rax + 0x24] 	        37	check-ignore.c	FUNCTION_5
0x19d	          0x83e008	                              and eax, 8	        37	check-ignore.c	FUNCTION_5
0x1a0	            0x85c0	                           test eax, eax	        37	check-ignore.c	FUNCTION_5
0x1a2	            0x7407	                            je 0x40001eb	        37	check-ignore.c	FUNCTION_5
0x1a4	      0xb800000000	                              mov eax, 0	        37	check-ignore.c	FUNCTION_5
0x1a9	            0xeb05	                           jmp 0x40001f0	        37	check-ignore.c	FUNCTION_5
0x1ab	      0xb800000000	                              mov eax, 0	        37	check-ignore.c	FUNCTION_5
0x1b0	        0x488945f8	                mov qword [rbp - 8], rax	        37	check-ignore.c	FUNCTION_5
0x1b4	    0x8b0500000000	            mov eax, dword [0x040001fa] 	        38	check-ignore.c	FUNCTION_5	IF_1
0x1ba	            0x85c0	                           test eax, eax	        38	check-ignore.c	FUNCTION_5	IF_1
0x1bc	     0xf85c7000000	                           jne 0x40002c9	        38	check-ignore.c	FUNCTION_5	IF_1
0x1c2	    0x8b0500000000	            mov eax, dword [0x04000208] 	        39	check-ignore.c	FUNCTION_5	IF_1	IF_2
0x1c8	            0x85c0	                           test eax, eax	        39	check-ignore.c	FUNCTION_5	IF_1	IF_2
0x1ca	            0x7520	                           jne 0x400022c	        39	check-ignore.c	FUNCTION_5	IF_1	IF_2
0x1cc	    0x488b0d000000	            mov rcx, qword [0x04000213] 	        40	check-ignore.c	FUNCTION_5	IF_1	IF_2	CALL_1
0x1d3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        40	check-ignore.c	FUNCTION_5	IF_1	IF_2	CALL_1
0x1d7	      0xba0a000000	                            mov edx, 0xa	        40	check-ignore.c	FUNCTION_5	IF_1	IF_2	CALL_1
0x1dc	          0x4889ce	                            mov rsi, rcx	        40	check-ignore.c	FUNCTION_5	IF_1	IF_2	CALL_1
0x1df	          0x4889c7	                            mov rdi, rax	        40	check-ignore.c	FUNCTION_5	IF_1	IF_2	CALL_1
0x1e2	      0xe800000000	                          call 0x4000227	        40	check-ignore.c	FUNCTION_5	IF_1	IF_2	CALL_1
0x1e7	      0xe94e010000	                           jmp 0x400037a	        68	check-ignore.c	FUNCTION_5
0x1ec	      0x48837de000	               cmp qword [rbp - 0x20], 0	        42	check-ignore.c	FUNCTION_5	IF_1	ELSE_1	IF_3
0x1f1	            0x7451	                            je 0x4000284	        42	check-ignore.c	FUNCTION_5	IF_1	ELSE_1	IF_3
0x1f3	    0x488b15000000	            mov rdx, qword [0x0400023a] 	        43	check-ignore.c	FUNCTION_5	IF_1	ELSE_1	IF_3	CALL_2
0x1fa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        43	check-ignore.c	FUNCTION_5	IF_1	ELSE_1	IF_3	CALL_2
0x1fe	          0x488b00	                    mov rax, qword [rax]	        43	check-ignore.c	FUNCTION_5	IF_1	ELSE_1	IF_3	CALL_2
0x201	        0x488b4010	            mov rax, qword [rax + 0x10] 	        43	check-ignore.c	FUNCTION_5	IF_1	ELSE_1	IF_3	CALL_2
0x205	      0xb900000000	                              mov ecx, 0	        43	check-ignore.c	FUNCTION_5	IF_1	ELSE_1	IF_3	CALL_2
0x20a	      0xbe00000000	                              mov esi, 0	        43	check-ignore.c	FUNCTION_5	IF_1	ELSE_1	IF_3	CALL_2
0x20f	          0x4889c7	                            mov rdi, rax	        43	check-ignore.c	FUNCTION_5	IF_1	ELSE_1	IF_3	CALL_2
0x212	      0xe800000000	                          call 0x4000257	        43	check-ignore.c	FUNCTION_5	IF_1	ELSE_1	IF_3	CALL_2
0x217	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        44	check-ignore.c	FUNCTION_5	IF_1	ELSE_1	IF_3	CALL_3
0x21b	        0x488b4808	                mov rcx, qword [rax + 8]	        44	check-ignore.c	FUNCTION_5	IF_1	ELSE_1	IF_3	CALL_3
0x21f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        44	check-ignore.c	FUNCTION_5	IF_1	ELSE_1	IF_3	CALL_3
0x223	          0x8b4028	            mov eax, dword [rax + 0x28] 	        44	check-ignore.c	FUNCTION_5	IF_1	ELSE_1	IF_3	CALL_3
0x226	        0x488b75f8	                mov rsi, qword [rbp - 8]	        44	check-ignore.c	FUNCTION_5	IF_1	ELSE_1	IF_3	CALL_3
0x22a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        44	check-ignore.c	FUNCTION_5	IF_1	ELSE_1	IF_3	CALL_3
0x22e	          0x4989f0	                             mov r8, rsi	        44	check-ignore.c	FUNCTION_5	IF_1	ELSE_1	IF_3	CALL_3
0x231	            0x89c6	                            mov esi, eax	        44	check-ignore.c	FUNCTION_5	IF_1	ELSE_1	IF_3	CALL_3
0x233	      0xbf00000000	                              mov edi, 0	        44	check-ignore.c	FUNCTION_5	IF_1	ELSE_1	IF_3	CALL_3
0x238	      0xb800000000	                              mov eax, 0	        44	check-ignore.c	FUNCTION_5	IF_1	ELSE_1	IF_3	CALL_3
0x23d	      0xe800000000	                          call 0x4000282	        44	check-ignore.c	FUNCTION_5	IF_1	ELSE_1	IF_3	CALL_3
0x242	            0xeb0f	                           jmp 0x4000293	        44	check-ignore.c	FUNCTION_5	IF_1	ELSE_1	IF_3	CALL_3
0x244	      0xbf00000000	                              mov edi, 0	        49	check-ignore.c	FUNCTION_5	IF_1	ELSE_1	ELSE_2	CALL_4
0x249	      0xb800000000	                              mov eax, 0	        49	check-ignore.c	FUNCTION_5	IF_1	ELSE_1	ELSE_2	CALL_4
0x24e	      0xe800000000	                          call 0x4000293	        49	check-ignore.c	FUNCTION_5	IF_1	ELSE_1	ELSE_2	CALL_4
0x253	    0x488b15000000	            mov rdx, qword [0x0400029a] 	        51	check-ignore.c	FUNCTION_5	IF_1	ELSE_1	CALL_5
0x25a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        51	check-ignore.c	FUNCTION_5	IF_1	ELSE_1	CALL_5
0x25e	      0xb900000000	                              mov ecx, 0	        51	check-ignore.c	FUNCTION_5	IF_1	ELSE_1	CALL_5
0x263	      0xbe00000000	                              mov esi, 0	        51	check-ignore.c	FUNCTION_5	IF_1	ELSE_1	CALL_5
0x268	          0x4889c7	                            mov rdi, rax	        51	check-ignore.c	FUNCTION_5	IF_1	ELSE_1	CALL_5
0x26b	      0xe800000000	                          call 0x40002b0	        51	check-ignore.c	FUNCTION_5	IF_1	ELSE_1	CALL_5
0x270	    0x488b05000000	            mov rax, qword [0x040002b7] 	        52	check-ignore.c	FUNCTION_5	IF_1	ELSE_1	CALL_6
0x277	          0x4889c6	                            mov rsi, rax	        52	check-ignore.c	FUNCTION_5	IF_1	ELSE_1	CALL_6
0x27a	      0xbf0a000000	                            mov edi, 0xa	        52	check-ignore.c	FUNCTION_5	IF_1	ELSE_1	CALL_6
0x27f	      0xe800000000	                          call 0x40002c4	        52	check-ignore.c	FUNCTION_5	IF_1	ELSE_1	CALL_6
0x284	      0xe9b1000000	                           jmp 0x400037a	        68	check-ignore.c	FUNCTION_5
0x289	    0x8b0500000000	            mov eax, dword [0x040002cf] 	        55	check-ignore.c	FUNCTION_5	ELSE_3	IF_4
0x28f	            0x85c0	                           test eax, eax	        55	check-ignore.c	FUNCTION_5	ELSE_3	IF_4
0x291	            0x7520	                           jne 0x40002f3	        55	check-ignore.c	FUNCTION_5	ELSE_3	IF_4
0x293	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        56	check-ignore.c	FUNCTION_5	ELSE_3	IF_4	CALL_7
0x297	      0xba00000000	                              mov edx, 0	        56	check-ignore.c	FUNCTION_5	ELSE_3	IF_4	CALL_7
0x29c	          0x4889c6	                            mov rsi, rax	        56	check-ignore.c	FUNCTION_5	ELSE_3	IF_4	CALL_7
0x29f	      0xbf00000000	                              mov edi, 0	        56	check-ignore.c	FUNCTION_5	ELSE_3	IF_4	CALL_7
0x2a4	      0xb800000000	                              mov eax, 0	        56	check-ignore.c	FUNCTION_5	ELSE_3	IF_4	CALL_7
0x2a9	      0xe800000000	                          call 0x40002ee	        56	check-ignore.c	FUNCTION_5	ELSE_3	IF_4	CALL_7
0x2ae	      0xe987000000	                           jmp 0x400037a	        68	check-ignore.c	FUNCTION_5
0x2b3	      0x48837de000	               cmp qword [rbp - 0x20], 0	        58	check-ignore.c	FUNCTION_5	ELSE_3	ELSE_4	IF_5
0x2b8	            0x7455	                            je 0x400034f	        58	check-ignore.c	FUNCTION_5	ELSE_3	ELSE_4	IF_5
0x2ba	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        59	check-ignore.c	FUNCTION_5	ELSE_3	ELSE_4	IF_5	CALL_8
0x2be	        0x488b4808	                mov rcx, qword [rax + 8]	        59	check-ignore.c	FUNCTION_5	ELSE_3	ELSE_4	IF_5	CALL_8
0x2c2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        59	check-ignore.c	FUNCTION_5	ELSE_3	ELSE_4	IF_5	CALL_8
0x2c6	          0x8b5028	            mov edx, dword [rax + 0x28] 	        59	check-ignore.c	FUNCTION_5	ELSE_3	ELSE_4	IF_5	CALL_8
0x2c9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        60	check-ignore.c	FUNCTION_5	ELSE_3	ELSE_4	IF_5
0x2cd	          0x488b00	                    mov rax, qword [rax]	        60	check-ignore.c	FUNCTION_5	ELSE_3	ELSE_4	IF_5
0x2d0	        0x488b4010	            mov rax, qword [rax + 0x10] 	        59	check-ignore.c	FUNCTION_5	ELSE_3	ELSE_4	IF_5	CALL_8
0x2d4	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	        59	check-ignore.c	FUNCTION_5	ELSE_3	ELSE_4	IF_5	CALL_8
0x2d8	        0x4883ec08	                              sub rsp, 8	        59	check-ignore.c	FUNCTION_5	ELSE_3	ELSE_4	IF_5	CALL_8
0x2dc	            0x6a00	                                  push 0	        59	check-ignore.c	FUNCTION_5	ELSE_3	ELSE_4	IF_5	CALL_8
0x2de	          0xff75e8	                 push qword [rbp - 0x18]	        59	check-ignore.c	FUNCTION_5	ELSE_3	ELSE_4	IF_5	CALL_8
0x2e1	            0x6a00	                                  push 0	        59	check-ignore.c	FUNCTION_5	ELSE_3	ELSE_4	IF_5	CALL_8
0x2e3	          0xff75f8	                    push qword [rbp - 8]	        59	check-ignore.c	FUNCTION_5	ELSE_3	ELSE_4	IF_5	CALL_8
0x2e6	              0x51	                                push rcx	        59	check-ignore.c	FUNCTION_5	ELSE_3	ELSE_4	IF_5	CALL_8
0x2e7	          0x4989f1	                             mov r9, rsi	        59	check-ignore.c	FUNCTION_5	ELSE_3	ELSE_4	IF_5	CALL_8
0x2ea	    0x41b800000000	                              mov r8d, 0	        59	check-ignore.c	FUNCTION_5	ELSE_3	ELSE_4	IF_5	CALL_8
0x2f0	            0x89d1	                            mov ecx, edx	        59	check-ignore.c	FUNCTION_5	ELSE_3	ELSE_4	IF_5	CALL_8
0x2f2	      0xba00000000	                              mov edx, 0	        59	check-ignore.c	FUNCTION_5	ELSE_3	ELSE_4	IF_5	CALL_8
0x2f7	          0x4889c6	                            mov rsi, rax	        59	check-ignore.c	FUNCTION_5	ELSE_3	ELSE_4	IF_5	CALL_8
0x2fa	      0xbf00000000	                              mov edi, 0	        59	check-ignore.c	FUNCTION_5	ELSE_3	ELSE_4	IF_5	CALL_8
0x2ff	      0xb800000000	                              mov eax, 0	        59	check-ignore.c	FUNCTION_5	ELSE_3	ELSE_4	IF_5	CALL_8
0x304	      0xe800000000	                          call 0x4000349	        59	check-ignore.c	FUNCTION_5	ELSE_3	ELSE_4	IF_5	CALL_8
0x309	        0x4883c430	                           add rsp, 0x30	        59	check-ignore.c	FUNCTION_5	ELSE_3	ELSE_4	IF_5	CALL_8
0x30d	            0xeb2b	                           jmp 0x400037a	        68	check-ignore.c	FUNCTION_5
0x30f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        65	check-ignore.c	FUNCTION_5	ELSE_3	ELSE_4	CALL_9
0x313	    0x41b900000000	                              mov r9d, 0	        65	check-ignore.c	FUNCTION_5	ELSE_3	ELSE_4	CALL_9
0x319	          0x4989c0	                             mov r8, rax	        65	check-ignore.c	FUNCTION_5	ELSE_3	ELSE_4	CALL_9
0x31c	      0xb900000000	                              mov ecx, 0	        65	check-ignore.c	FUNCTION_5	ELSE_3	ELSE_4	CALL_9
0x321	      0xba00000000	                              mov edx, 0	        65	check-ignore.c	FUNCTION_5	ELSE_3	ELSE_4	CALL_9
0x326	      0xbe00000000	                              mov esi, 0	        65	check-ignore.c	FUNCTION_5	ELSE_3	ELSE_4	CALL_9
0x32b	      0xbf00000000	                              mov edi, 0	        65	check-ignore.c	FUNCTION_5	ELSE_3	ELSE_4	CALL_9
0x330	      0xb800000000	                              mov eax, 0	        65	check-ignore.c	FUNCTION_5	ELSE_3	ELSE_4	CALL_9
0x335	      0xe800000000	                          call 0x400037a	        65	check-ignore.c	FUNCTION_5	ELSE_3	ELSE_4	CALL_9
0x33a	              0x90	                                     nop	        68	check-ignore.c	FUNCTION_5
0x33b	              0xc9	                                   leave	        68	check-ignore.c	FUNCTION_5
0x33c	              0xc3	                                     ret	        68	check-ignore.c	FUNCTION_5
cmd_check_ignore	SWITCH,0:WHILE,0:functions,0:IF,10:CALL,23:DO,0:ELSE,2:FOR,0	128
0x65e	              0x55	                                push rbp	       148	check-ignore.c	FUNCTION_8
0x65f	          0x4889e5	                            mov rbp, rsp	       148	check-ignore.c	FUNCTION_8
0x662	    0x4881ec500100	                          sub rsp, 0x150	       148	check-ignore.c	FUNCTION_8
0x669	    0x89bdccfeffff	            mov dword [rbp - 0x134], edi	       148	check-ignore.c	FUNCTION_8
0x66f	    0x4889b5c0feff	            mov qword [rbp - 0x140], rsi	       148	check-ignore.c	FUNCTION_8
0x676	    0x488995b8feff	            mov qword [rbp - 0x148], rdx	       148	check-ignore.c	FUNCTION_8
0x67d	    0x64488b042528	                mov rax, qword fs:[0x28]	       148	check-ignore.c	FUNCTION_8
0x686	        0x488945f8	                mov qword [rbp - 8], rax	       148	check-ignore.c	FUNCTION_8
0x68a	            0x31c0	                            xor eax, eax	       148	check-ignore.c	FUNCTION_8
0x68c	      0xbe00000000	                              mov esi, 0	       152	check-ignore.c	FUNCTION_8	CALL_1
0x691	      0xbf00000000	                              mov edi, 0	       152	check-ignore.c	FUNCTION_8	CALL_1
0x696	      0xe800000000	                          call 0x40006db	       152	check-ignore.c	FUNCTION_8	CALL_1
0x69b	    0x488b95b8feff	            mov rdx, qword [rbp - 0x148]	       154	check-ignore.c	FUNCTION_8	CALL_2
0x6a2	    0x488bb5c0feff	            mov rsi, qword [rbp - 0x140]	       154	check-ignore.c	FUNCTION_8	CALL_2
0x6a9	    0x8b85ccfeffff	            mov eax, dword [rbp - 0x134]	       154	check-ignore.c	FUNCTION_8	CALL_2
0x6af	    0x41b900000000	                              mov r9d, 0	       154	check-ignore.c	FUNCTION_8	CALL_2
0x6b5	    0x41b800000000	                              mov r8d, 0	       154	check-ignore.c	FUNCTION_8	CALL_2
0x6bb	      0xb900000000	                              mov ecx, 0	       154	check-ignore.c	FUNCTION_8	CALL_2
0x6c0	            0x89c7	                            mov edi, eax	       154	check-ignore.c	FUNCTION_8	CALL_2
0x6c2	      0xe800000000	                          call 0x4000707	       154	check-ignore.c	FUNCTION_8	CALL_2
0x6c7	    0x8985ccfeffff	            mov dword [rbp - 0x134], eax	       154	check-ignore.c	FUNCTION_8	CALL_2
0x6cd	    0x8b0500000000	            mov eax, dword [0x04000713] 	       157	check-ignore.c	FUNCTION_8	IF_1
0x6d3	            0x85c0	                           test eax, eax	       157	check-ignore.c	FUNCTION_8	IF_1
0x6d5	            0x7420	                            je 0x4000737	       157	check-ignore.c	FUNCTION_8	IF_1
0x6d7	    0x83bdccfeffff	              cmp dword [rbp - 0x134], 0	       158	check-ignore.c	FUNCTION_8	IF_1	IF_2
0x6de	            0x7e58	                           jle 0x4000778	       158	check-ignore.c	FUNCTION_8	IF_1	IF_2
0x6e0	      0xbf00000000	                              mov edi, 0	       159	check-ignore.c	FUNCTION_8	IF_1	CALL_4
0x6e5	      0xe844faffff	                               call sym.	       159	check-ignore.c	FUNCTION_8	IF_1	CALL_4
0x6ea	          0x4889c7	                            mov rdi, rax	       159	check-ignore.c	FUNCTION_8	IF_1	CALL_4
0x6ed	      0xb800000000	                              mov eax, 0	       159	check-ignore.c	FUNCTION_8	IF_1	CALL_4
0x6f2	      0xe800000000	                          call 0x4000737	       159	check-ignore.c	FUNCTION_8	IF_1	CALL_4
0x6f7	    0x8b0500000000	            mov eax, dword [0x0400073d] 	       161	check-ignore.c	FUNCTION_8	ELSE_1	IF_3
0x6fd	            0x85c0	                           test eax, eax	       161	check-ignore.c	FUNCTION_8	ELSE_1	IF_3
0x6ff	            0x7417	                            je 0x4000758	       161	check-ignore.c	FUNCTION_8	ELSE_1	IF_3
0x701	      0xbf00000000	                              mov edi, 0	       162	check-ignore.c	FUNCTION_8	ELSE_1	CALL_6
0x706	      0xe823faffff	                               call sym.	       162	check-ignore.c	FUNCTION_8	ELSE_1	CALL_6
0x70b	          0x4889c7	                            mov rdi, rax	       162	check-ignore.c	FUNCTION_8	ELSE_1	CALL_6
0x70e	      0xb800000000	                              mov eax, 0	       162	check-ignore.c	FUNCTION_8	ELSE_1	CALL_6
0x713	      0xe800000000	                          call 0x4000758	       162	check-ignore.c	FUNCTION_8	ELSE_1	CALL_6
0x718	    0x83bdccfeffff	              cmp dword [rbp - 0x134], 0	       163	check-ignore.c	FUNCTION_8	ELSE_1	IF_4
0x71f	            0x7517	                           jne 0x4000778	       163	check-ignore.c	FUNCTION_8	ELSE_1	IF_4
0x721	      0xbf00000000	                              mov edi, 0	       164	check-ignore.c	FUNCTION_8	ELSE_1	CALL_8
0x726	      0xe803faffff	                               call sym.	       164	check-ignore.c	FUNCTION_8	ELSE_1	CALL_8
0x72b	          0x4889c7	                            mov rdi, rax	       164	check-ignore.c	FUNCTION_8	ELSE_1	CALL_8
0x72e	      0xb800000000	                              mov eax, 0	       164	check-ignore.c	FUNCTION_8	ELSE_1	CALL_8
0x733	      0xe800000000	                          call 0x4000778	       164	check-ignore.c	FUNCTION_8	ELSE_1	CALL_8
0x738	    0x8b0500000000	            mov eax, dword [0x0400077e] 	       166	check-ignore.c	FUNCTION_8	IF_5
0x73e	            0x85c0	                           test eax, eax	       166	check-ignore.c	FUNCTION_8	IF_5
0x740	            0x7441	                            je 0x40007c3	       166	check-ignore.c	FUNCTION_8	IF_5
0x742	    0x83bdccfeffff	              cmp dword [rbp - 0x134], 1	       167	check-ignore.c	FUNCTION_8	IF_5	IF_6
0x749	            0x7e17	                           jle 0x40007a2	       167	check-ignore.c	FUNCTION_8	IF_5	IF_6
0x74b	      0xbf00000000	                              mov edi, 0	       168	check-ignore.c	FUNCTION_8	IF_5	CALL_10
0x750	      0xe8d9f9ffff	                               call sym.	       168	check-ignore.c	FUNCTION_8	IF_5	CALL_10
0x755	          0x4889c7	                            mov rdi, rax	       168	check-ignore.c	FUNCTION_8	IF_5	CALL_10
0x758	      0xb800000000	                              mov eax, 0	       168	check-ignore.c	FUNCTION_8	IF_5	CALL_10
0x75d	      0xe800000000	                          call 0x40007a2	       168	check-ignore.c	FUNCTION_8	IF_5	CALL_10
0x762	    0x8b0500000000	            mov eax, dword [0x040007a8] 	       169	check-ignore.c	FUNCTION_8	IF_5	IF_7
0x768	            0x85c0	                           test eax, eax	       169	check-ignore.c	FUNCTION_8	IF_5	IF_7
0x76a	            0x7417	                            je 0x40007c3	       169	check-ignore.c	FUNCTION_8	IF_5	IF_7
0x76c	      0xbf00000000	                              mov edi, 0	       170	check-ignore.c	FUNCTION_8	IF_5	CALL_12
0x771	      0xe8b8f9ffff	                               call sym.	       170	check-ignore.c	FUNCTION_8	IF_5	CALL_12
0x776	          0x4889c7	                            mov rdi, rax	       170	check-ignore.c	FUNCTION_8	IF_5	CALL_12
0x779	      0xb800000000	                              mov eax, 0	       170	check-ignore.c	FUNCTION_8	IF_5	CALL_12
0x77e	      0xe800000000	                          call 0x40007c3	       170	check-ignore.c	FUNCTION_8	IF_5	CALL_12
0x783	    0x8b0500000000	            mov eax, dword [0x040007c9] 	       172	check-ignore.c	FUNCTION_8	IF_8
0x789	            0x85c0	                           test eax, eax	       172	check-ignore.c	FUNCTION_8	IF_8
0x78b	            0x7421	                            je 0x40007ee	       172	check-ignore.c	FUNCTION_8	IF_8
0x78d	    0x8b0500000000	            mov eax, dword [0x040007d3] 	       172	check-ignore.c	FUNCTION_8	IF_8
0x793	            0x85c0	                           test eax, eax	       172	check-ignore.c	FUNCTION_8	IF_8
0x795	            0x7517	                           jne 0x40007ee	       172	check-ignore.c	FUNCTION_8	IF_8
0x797	      0xbf00000000	                              mov edi, 0	       173	check-ignore.c	FUNCTION_8	CALL_14
0x79c	      0xe88df9ffff	                               call sym.	       173	check-ignore.c	FUNCTION_8	CALL_14
0x7a1	          0x4889c7	                            mov rdi, rax	       173	check-ignore.c	FUNCTION_8	CALL_14
0x7a4	      0xb800000000	                              mov eax, 0	       173	check-ignore.c	FUNCTION_8	CALL_14
0x7a9	      0xe800000000	                          call 0x40007ee	       173	check-ignore.c	FUNCTION_8	CALL_14
0x7ae	    0x8b0500000000	            mov eax, dword [0x040007f4] 	       176	check-ignore.c	FUNCTION_8	IF_9	CALL_15
0x7b4	            0x85c0	                           test eax, eax	       176	check-ignore.c	FUNCTION_8	IF_9	CALL_15
0x7b6	            0x7525	                           jne 0x400081d	       176	check-ignore.c	FUNCTION_8	IF_9	CALL_15
0x7b8	      0xbf00000000	                              mov edi, 0	       176	check-ignore.c	FUNCTION_8	IF_9	CALL_15
0x7bd	      0xe800000000	                          call 0x4000802	       176	check-ignore.c	FUNCTION_8	IF_9	CALL_15
0x7c2	            0x85c0	                           test eax, eax	       176	check-ignore.c	FUNCTION_8	IF_9	CALL_15
0x7c4	            0x7917	                           jns 0x400081d	       176	check-ignore.c	FUNCTION_8	IF_9	CALL_15
0x7c6	      0xbf00000000	                              mov edi, 0	       177	check-ignore.c	FUNCTION_8	CALL_17
0x7cb	      0xe85ef9ffff	                               call sym.	       177	check-ignore.c	FUNCTION_8	CALL_17
0x7d0	          0x4889c7	                            mov rdi, rax	       177	check-ignore.c	FUNCTION_8	CALL_17
0x7d3	      0xb800000000	                              mov eax, 0	       177	check-ignore.c	FUNCTION_8	CALL_17
0x7d8	      0xe800000000	                          call 0x400081d	       177	check-ignore.c	FUNCTION_8	CALL_17
0x7dd	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	       179	check-ignore.c	FUNCTION_8	CALL_18
0x7e4	      0xba10010000	                          mov edx, 0x110	       179	check-ignore.c	FUNCTION_8	CALL_18
0x7e9	      0xbe00000000	                              mov esi, 0	       179	check-ignore.c	FUNCTION_8	CALL_18
0x7ee	          0x4889c7	                            mov rdi, rax	       179	check-ignore.c	FUNCTION_8	CALL_18
0x7f1	      0xe800000000	                          call 0x4000836	       179	check-ignore.c	FUNCTION_8	CALL_18
0x7f6	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	       180	check-ignore.c	FUNCTION_8	CALL_19
0x7fd	          0x4889c7	                            mov rdi, rax	       180	check-ignore.c	FUNCTION_8	CALL_19
0x800	      0xe800000000	                          call 0x4000845	       180	check-ignore.c	FUNCTION_8	CALL_19
0x805	    0x8b0500000000	            mov eax, dword [0x0400084b] 	       182	check-ignore.c	FUNCTION_8	IF_10
0x80b	            0x85c0	                           test eax, eax	       182	check-ignore.c	FUNCTION_8	IF_10
0x80d	            0x7421	                            je 0x4000870	       182	check-ignore.c	FUNCTION_8	IF_10
0x80f	    0x488b95b8feff	            mov rdx, qword [rbp - 0x148]	       183	check-ignore.c	FUNCTION_8	IF_10	CALL_20
0x816	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	       183	check-ignore.c	FUNCTION_8	IF_10	CALL_20
0x81d	          0x4889d6	                            mov rsi, rdx	       183	check-ignore.c	FUNCTION_8	IF_10	CALL_20
0x820	          0x4889c7	                            mov rdi, rax	       183	check-ignore.c	FUNCTION_8	IF_10	CALL_20
0x823	      0xe8c1fcffff	       call sym.check_ignore_stdin_paths	       183	check-ignore.c	FUNCTION_8	IF_10	CALL_20
0x828	    0x8985dcfeffff	            mov dword [rbp - 0x124], eax	       183	check-ignore.c	FUNCTION_8	IF_10	CALL_20
0x82e	            0xeb3d	                           jmp 0x40008ad	       183	check-ignore.c	FUNCTION_8	IF_10	CALL_20
0x830	    0x488b8dc0feff	            mov rcx, qword [rbp - 0x140]	       185	check-ignore.c	FUNCTION_8	ELSE_2	CALL_21
0x837	    0x8b95ccfeffff	            mov edx, dword [rbp - 0x134]	       185	check-ignore.c	FUNCTION_8	ELSE_2	CALL_21
0x83d	    0x488bb5b8feff	            mov rsi, qword [rbp - 0x148]	       185	check-ignore.c	FUNCTION_8	ELSE_2	CALL_21
0x844	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	       185	check-ignore.c	FUNCTION_8	ELSE_2	CALL_21
0x84b	          0x4889c7	                            mov rdi, rax	       185	check-ignore.c	FUNCTION_8	ELSE_2	CALL_21
0x84e	      0xe8eafaffff	                   call sym.check_ignore	       185	check-ignore.c	FUNCTION_8	ELSE_2	CALL_21
0x853	    0x8985dcfeffff	            mov dword [rbp - 0x124], eax	       185	check-ignore.c	FUNCTION_8	ELSE_2	CALL_21
0x859	    0x488b05000000	            mov rax, qword [0x040008a0] 	       186	check-ignore.c	FUNCTION_8	ELSE_2	CALL_22
0x860	      0xbe00000000	                              mov esi, 0	       186	check-ignore.c	FUNCTION_8	ELSE_2	CALL_22
0x865	          0x4889c7	                            mov rdi, rax	       186	check-ignore.c	FUNCTION_8	ELSE_2	CALL_22
0x868	      0xe800000000	                          call 0x40008ad	       186	check-ignore.c	FUNCTION_8	ELSE_2	CALL_22
0x86d	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	       189	check-ignore.c	FUNCTION_8	CALL_23
0x874	          0x4889c7	                            mov rdi, rax	       189	check-ignore.c	FUNCTION_8	CALL_23
0x877	      0xe800000000	                          call 0x40008bc	       189	check-ignore.c	FUNCTION_8	CALL_23
0x87c	    0x83bddcfeffff	              cmp dword [rbp - 0x124], 0	       191	check-ignore.c	FUNCTION_8
0x883	           0xf94c0	                                 sete al	       191	check-ignore.c	FUNCTION_8
0x886	           0xfb6c0	                           movzx eax, al	       191	check-ignore.c	FUNCTION_8
0x889	        0x488b4df8	                mov rcx, qword [rbp - 8]	       192	check-ignore.c	FUNCTION_8
0x88d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       192	check-ignore.c	FUNCTION_8
0x896	            0x7405	                            je 0x40008dd	       192	check-ignore.c	FUNCTION_8
0x898	      0xe800000000	                          call 0x40008dd	       192	check-ignore.c	FUNCTION_8
0x89d	              0xc9	                                   leave	       192	check-ignore.c	FUNCTION_8
0x89e	              0xc3	                                     ret	       192	check-ignore.c	FUNCTION_8
strbuf_swap	SWITCH,0:WHILE,0:functions,0:IF,0:CALL,1:DO,0:ELSE,0:FOR,0	39
0x0	              0x55	                                push rbp	       126	strbuf.h	FUNCTION_9
0x1	          0x4889e5	                            mov rbp, rsp	       126	strbuf.h	FUNCTION_9
0x4	        0x4883ec40	                           sub rsp, 0x40	       126	strbuf.h	FUNCTION_9
0x8	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       126	strbuf.h	FUNCTION_9
0xc	        0x488975c0	             mov qword [rbp - 0x40], rsi	       126	strbuf.h	FUNCTION_9
0x10	    0x64488b042528	                mov rax, qword fs:[0x28]	       126	strbuf.h	FUNCTION_9
0x19	        0x488945f8	                mov qword [rbp - 8], rax	       126	strbuf.h	FUNCTION_9
0x1d	            0x31c0	                            xor eax, eax	       126	strbuf.h	FUNCTION_9
0x1f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       127	strbuf.h	FUNCTION_9	CALL_1
0x23	        0x488945d0	             mov qword [rbp - 0x30], rax	       127	strbuf.h	FUNCTION_9	CALL_1
0x27	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       127	strbuf.h	FUNCTION_9	CALL_1
0x2b	        0x488945d8	             mov qword [rbp - 0x28], rax	       127	strbuf.h	FUNCTION_9	CALL_1
0x2f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       127	strbuf.h	FUNCTION_9	CALL_1
0x33	          0x488b10	                    mov rdx, qword [rax]	       127	strbuf.h	FUNCTION_9	CALL_1
0x36	        0x488955e0	             mov qword [rbp - 0x20], rdx	       127	strbuf.h	FUNCTION_9	CALL_1
0x3a	        0x488b5008	                mov rdx, qword [rax + 8]	       127	strbuf.h	FUNCTION_9	CALL_1
0x3e	        0x488955e8	             mov qword [rbp - 0x18], rdx	       127	strbuf.h	FUNCTION_9	CALL_1
0x42	        0x488b4010	            mov rax, qword [rax + 0x10] 	       127	strbuf.h	FUNCTION_9	CALL_1
0x46	        0x488945f0	             mov qword [rbp - 0x10], rax	       127	strbuf.h	FUNCTION_9	CALL_1
0x4a	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       127	strbuf.h	FUNCTION_9	CALL_1
0x4e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       127	strbuf.h	FUNCTION_9	CALL_1
0x52	      0xba18000000	                           mov edx, 0x18	       127	strbuf.h	FUNCTION_9	CALL_1
0x57	          0x4889ce	                            mov rsi, rcx	       127	strbuf.h	FUNCTION_9	CALL_1
0x5a	          0x4889c7	                            mov rdi, rax	       127	strbuf.h	FUNCTION_9	CALL_1
0x5d	      0xe800000000	                          call 0x40000a2	       127	strbuf.h	FUNCTION_9	CALL_1
0x62	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       127	strbuf.h	FUNCTION_9	CALL_1
0x66	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       127	strbuf.h	FUNCTION_9	CALL_1
0x6a	          0x488910	                    mov qword [rax], rdx	       127	strbuf.h	FUNCTION_9	CALL_1
0x6d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       127	strbuf.h	FUNCTION_9	CALL_1
0x71	        0x48895008	                mov qword [rax + 8], rdx	       127	strbuf.h	FUNCTION_9	CALL_1
0x75	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       127	strbuf.h	FUNCTION_9	CALL_1
0x79	        0x48895010	             mov qword [rax + 0x10], rdx	       127	strbuf.h	FUNCTION_9	CALL_1
0x7d	              0x90	                                     nop	       128	strbuf.h	FUNCTION_9
0x7e	        0x488b45f8	                mov rax, qword [rbp - 8]	       128	strbuf.h	FUNCTION_9
0x82	    0x644833042528	                xor rax, qword fs:[0x28]	       128	strbuf.h	FUNCTION_9
0x8b	            0x7405	                            je 0x40000d2	       128	strbuf.h	FUNCTION_9
0x8d	      0xe800000000	                          call 0x40000d2	       128	strbuf.h	FUNCTION_9
0x92	              0xc9	                                   leave	       128	strbuf.h	FUNCTION_9
0x93	              0xc3	                                     ret	       128	strbuf.h	FUNCTION_9
strbuf_setlen	SWITCH,0:WHILE,0:functions,0:IF,2:CALL,2:DO,0:ELSE,1:FOR,0	43
0x94	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_11
0x95	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_11
0x98	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_11
0x9c	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_11
0xa0	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_11
0xa4	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_11	IF_1
0xa8	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_11	IF_1
0xab	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_11	IF_1
0xae	            0x740d	                            je 0x40000fd	       162	strbuf.h	FUNCTION_11	IF_1
0xb0	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_11	IF_1
0xb4	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_11	IF_1
0xb7	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_11	IF_1
0xbb	            0xeb05	                           jmp 0x4000102	       162	strbuf.h	FUNCTION_11	IF_1
0xbd	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_11	IF_1
0xc2	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_11	IF_1
0xc6	            0x730f	                           jae 0x4000117	       162	strbuf.h	FUNCTION_11	IF_1
0xc8	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_11	CALL_1
0xcd	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_11	CALL_1
0xd2	      0xe800000000	                          call 0x4000117	       163	strbuf.h	FUNCTION_11	CALL_1
0xd7	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_11
0xdb	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_11
0xdf	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_11
0xe3	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_11	IF_2
0xe7	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_11	IF_2
0xeb	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_11	IF_2
0xf1	            0x7414	                            je 0x4000147	       165	strbuf.h	FUNCTION_11	IF_2
0xf3	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_11	IF_2
0xf7	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_11	IF_2
0xfb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_11	IF_2
0xff	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_11	IF_2
0x102	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_11	IF_2
0x105	            0xeb24	                           jmp 0x400016b	       169	strbuf.h	FUNCTION_11
0x107	     0xfb605000000	           movzx eax, byte [0x0400014e] 	       168	strbuf.h	FUNCTION_11	CALL_2
0x10e	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_11	CALL_2
0x110	            0x7419	                            je 0x400016b	       168	strbuf.h	FUNCTION_11	CALL_2
0x112	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_11	CALL_2
0x117	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_11	CALL_2
0x11c	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_11	CALL_2
0x121	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_11	CALL_2
0x126	      0xe800000000	                          call 0x400016b	       168	strbuf.h	FUNCTION_11	CALL_2
0x12b	              0x90	                                     nop	       169	strbuf.h	FUNCTION_11
0x12c	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_11
0x12d	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_11
check_ignore_stdin_paths	SWITCH,0:WHILE,1:functions,0:IF,2:CALL,9:DO,0:ELSE,0:FOR,0	87
0x4e9	              0x55	                                push rbp	       122	check-ignore.c	FUNCTION_7
0x4ea	          0x4889e5	                            mov rbp, rsp	       122	check-ignore.c	FUNCTION_7
0x4ed	        0x4883c480	             add rsp, 0xffffffffffffff80	       122	check-ignore.c	FUNCTION_7
0x4f1	        0x48897d88	             mov qword [rbp - 0x78], rdi	       122	check-ignore.c	FUNCTION_7
0x4f5	        0x48897580	             mov qword [rbp - 0x80], rsi	       122	check-ignore.c	FUNCTION_7
0x4f9	    0x64488b042528	                mov rax, qword fs:[0x28]	       122	check-ignore.c	FUNCTION_7
0x502	        0x488945f8	                mov qword [rbp - 8], rax	       122	check-ignore.c	FUNCTION_7
0x506	            0x31c0	                            xor eax, eax	       122	check-ignore.c	FUNCTION_7
0x508	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       123	check-ignore.c	FUNCTION_7
0x510	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       123	check-ignore.c	FUNCTION_7
0x518	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       123	check-ignore.c	FUNCTION_7
0x520	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       124	check-ignore.c	FUNCTION_7
0x528	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       124	check-ignore.c	FUNCTION_7
0x530	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       124	check-ignore.c	FUNCTION_7
0x538	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       125	check-ignore.c	FUNCTION_7
0x540	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       125	check-ignore.c	FUNCTION_7
0x548	    0xc74594000000	               mov dword [rbp - 0x6c], 0	       127	check-ignore.c	FUNCTION_7
0x54f	    0x8b0500000000	            mov eax, dword [0x04000595] 	       129	check-ignore.c	FUNCTION_7
0x555	            0x85c0	                           test eax, eax	       129	check-ignore.c	FUNCTION_7
0x557	            0x7407	                            je 0x40005a0	       129	check-ignore.c	FUNCTION_7
0x559	      0xb800000000	                              mov eax, 0	       129	check-ignore.c	FUNCTION_7
0x55e	            0xeb05	                           jmp 0x40005a5	       129	check-ignore.c	FUNCTION_7
0x560	      0xb800000000	                              mov eax, 0	       129	check-ignore.c	FUNCTION_7
0x565	        0x48894598	             mov qword [rbp - 0x68], rax	       129	check-ignore.c	FUNCTION_7
0x569	      0xe99f000000	                           jmp 0x400064d	       130	check-ignore.c	FUNCTION_7	WHILE_1	CALL_1
0x56e	    0x8b0500000000	            mov eax, dword [0x040005b4] 	       131	check-ignore.c	FUNCTION_7	WHILE_1	IF_1
0x574	            0x85c0	                           test eax, eax	       131	check-ignore.c	FUNCTION_7	WHILE_1	IF_1
0x576	            0x755a	                           jne 0x4000612	       131	check-ignore.c	FUNCTION_7	WHILE_1	IF_1
0x578	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       131	check-ignore.c	FUNCTION_7	WHILE_1	IF_1
0x57c	           0xfb600	                   movzx eax, byte [rax]	       131	check-ignore.c	FUNCTION_7	WHILE_1	IF_1
0x57f	            0x3c22	                            cmp al, 0x22	       131	check-ignore.c	FUNCTION_7	WHILE_1	IF_1
0x581	            0x754f	                           jne 0x4000612	       131	check-ignore.c	FUNCTION_7	WHILE_1	IF_1
0x583	        0x488d45c0	                   lea rax, [rbp - 0x40]	       132	check-ignore.c	FUNCTION_7	WHILE_1	IF_1	CALL_2
0x587	      0xbe00000000	                              mov esi, 0	       132	check-ignore.c	FUNCTION_7	WHILE_1	IF_1	CALL_2
0x58c	          0x4889c7	                            mov rdi, rax	       132	check-ignore.c	FUNCTION_7	WHILE_1	IF_1	CALL_2
0x58f	      0xe800fbffff	                  call sym.strbuf_setlen	       132	check-ignore.c	FUNCTION_7	WHILE_1	IF_1	CALL_2
0x594	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       133	check-ignore.c	FUNCTION_7	WHILE_1	IF_1	IF_2	CALL_3
0x598	        0x488d45c0	                   lea rax, [rbp - 0x40]	       133	check-ignore.c	FUNCTION_7	WHILE_1	IF_1	IF_2	CALL_3
0x59c	      0xba00000000	                              mov edx, 0	       133	check-ignore.c	FUNCTION_7	WHILE_1	IF_1	IF_2	CALL_3
0x5a1	          0x4889ce	                            mov rsi, rcx	       133	check-ignore.c	FUNCTION_7	WHILE_1	IF_1	IF_2	CALL_3
0x5a4	          0x4889c7	                            mov rdi, rax	       133	check-ignore.c	FUNCTION_7	WHILE_1	IF_1	IF_2	CALL_3
0x5a7	      0xe800000000	                          call 0x40005ec	       133	check-ignore.c	FUNCTION_7	WHILE_1	IF_1	IF_2	CALL_3
0x5ac	            0x85c0	                           test eax, eax	       133	check-ignore.c	FUNCTION_7	WHILE_1	IF_1	IF_2	CALL_3
0x5ae	            0x740f	                            je 0x40005ff	       133	check-ignore.c	FUNCTION_7	WHILE_1	IF_1	IF_2	CALL_3
0x5b0	      0xbf00000000	                              mov edi, 0	       134	check-ignore.c	FUNCTION_7	WHILE_1	IF_1	CALL_4
0x5b5	      0xb800000000	                              mov eax, 0	       134	check-ignore.c	FUNCTION_7	WHILE_1	IF_1	CALL_4
0x5ba	      0xe800000000	                          call 0x40005ff	       134	check-ignore.c	FUNCTION_7	WHILE_1	IF_1	CALL_4
0x5bf	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       135	check-ignore.c	FUNCTION_7	WHILE_1	IF_1	CALL_5
0x5c3	        0x488d45a0	                   lea rax, [rbp - 0x60]	       135	check-ignore.c	FUNCTION_7	WHILE_1	IF_1	CALL_5
0x5c7	          0x4889d6	                            mov rsi, rdx	       135	check-ignore.c	FUNCTION_7	WHILE_1	IF_1	CALL_5
0x5ca	          0x4889c7	                            mov rdi, rax	       135	check-ignore.c	FUNCTION_7	WHILE_1	IF_1	CALL_5
0x5cd	      0xe82efaffff	                    call sym.strbuf_swap	       135	check-ignore.c	FUNCTION_7	WHILE_1	IF_1	CALL_5
0x5d2	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       137	check-ignore.c	FUNCTION_7	WHILE_1
0x5d6	        0x488945e0	             mov qword [rbp - 0x20], rax	       137	check-ignore.c	FUNCTION_7	WHILE_1
0x5da	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       138	check-ignore.c	FUNCTION_7	WHILE_1	CALL_6
0x5de	        0x488b7580	             mov rsi, qword [rbp - 0x80]	       138	check-ignore.c	FUNCTION_7	WHILE_1	CALL_6
0x5e2	        0x488b4588	             mov rax, qword [rbp - 0x78]	       138	check-ignore.c	FUNCTION_7	WHILE_1	CALL_6
0x5e6	          0x4889d1	                            mov rcx, rdx	       138	check-ignore.c	FUNCTION_7	WHILE_1	CALL_6
0x5e9	      0xba01000000	                              mov edx, 1	       138	check-ignore.c	FUNCTION_7	WHILE_1	CALL_6
0x5ee	          0x4889c7	                            mov rdi, rax	       138	check-ignore.c	FUNCTION_7	WHILE_1	CALL_6
0x5f1	      0xe847fdffff	                   call sym.check_ignore	       138	check-ignore.c	FUNCTION_7	WHILE_1	CALL_6
0x5f6	           0x14594	             add dword [rbp - 0x6c], eax	       138	check-ignore.c	FUNCTION_7	WHILE_1	CALL_6
0x5f9	    0x488b05000000	            mov rax, qword [0x04000640] 	       140	check-ignore.c	FUNCTION_7	WHILE_1	CALL_7
0x600	      0xbe00000000	                              mov esi, 0	       140	check-ignore.c	FUNCTION_7	WHILE_1	CALL_7
0x605	          0x4889c7	                            mov rdi, rax	       140	check-ignore.c	FUNCTION_7	WHILE_1	CALL_7
0x608	      0xe800000000	                          call 0x400064d	       140	check-ignore.c	FUNCTION_7	WHILE_1	CALL_7
0x60d	    0x488b0d000000	            mov rcx, qword [0x04000654] 	       130	check-ignore.c	FUNCTION_7	WHILE_1	CALL_1
0x614	        0x488d55a0	                   lea rdx, [rbp - 0x60]	       130	check-ignore.c	FUNCTION_7	WHILE_1	CALL_1
0x618	        0x488b4598	             mov rax, qword [rbp - 0x68]	       130	check-ignore.c	FUNCTION_7	WHILE_1	CALL_1
0x61c	          0x4889ce	                            mov rsi, rcx	       130	check-ignore.c	FUNCTION_7	WHILE_1	CALL_1
0x61f	          0x4889d7	                            mov rdi, rdx	       130	check-ignore.c	FUNCTION_7	WHILE_1	CALL_1
0x622	            0xffd0	                                call rax	       130	check-ignore.c	FUNCTION_7	WHILE_1	CALL_1
0x624	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       130	check-ignore.c	FUNCTION_7	WHILE_1	CALL_1
0x627	     0xf8541ffffff	                           jne 0x40005ae	       130	check-ignore.c	FUNCTION_7	WHILE_1	CALL_1
0x62d	        0x488d45a0	                   lea rax, [rbp - 0x60]	       142	check-ignore.c	FUNCTION_7	CALL_8
0x631	          0x4889c7	                            mov rdi, rax	       142	check-ignore.c	FUNCTION_7	CALL_8
0x634	      0xe800000000	                          call 0x4000679	       142	check-ignore.c	FUNCTION_7	CALL_8
0x639	        0x488d45c0	                   lea rax, [rbp - 0x40]	       143	check-ignore.c	FUNCTION_7	CALL_9
0x63d	          0x4889c7	                            mov rdi, rax	       143	check-ignore.c	FUNCTION_7	CALL_9
0x640	      0xe800000000	                          call 0x4000685	       143	check-ignore.c	FUNCTION_7	CALL_9
0x645	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       144	check-ignore.c	FUNCTION_7
0x648	        0x488b4df8	                mov rcx, qword [rbp - 8]	       145	check-ignore.c	FUNCTION_7
0x64c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       145	check-ignore.c	FUNCTION_7
0x655	            0x7405	                            je 0x400069c	       145	check-ignore.c	FUNCTION_7
0x657	      0xe800000000	                          call 0x400069c	       145	check-ignore.c	FUNCTION_7
0x65c	              0xc9	                                   leave	       145	check-ignore.c	FUNCTION_7
0x65d	              0xc3	                                     ret	       145	check-ignore.c	FUNCTION_7
check_ignore	SWITCH,0:WHILE,0:functions,0:IF,5:CALL,7:DO,0:ELSE,0:FOR,1	108
0x33d	              0x55	                                push rbp	        72	check-ignore.c	FUNCTION_6
0x33e	          0x4889e5	                            mov rbp, rsp	        72	check-ignore.c	FUNCTION_6
0x341	        0x4883ec70	                           sub rsp, 0x70	        72	check-ignore.c	FUNCTION_6
0x345	        0x48897da8	             mov qword [rbp - 0x58], rdi	        72	check-ignore.c	FUNCTION_6
0x349	        0x488975a0	             mov qword [rbp - 0x60], rsi	        72	check-ignore.c	FUNCTION_6
0x34d	          0x89559c	             mov dword [rbp - 0x64], edx	        72	check-ignore.c	FUNCTION_6
0x350	        0x48894d90	             mov qword [rbp - 0x70], rcx	        72	check-ignore.c	FUNCTION_6
0x354	    0x64488b042528	                mov rax, qword fs:[0x28]	        72	check-ignore.c	FUNCTION_6
0x35d	        0x488945f8	                mov qword [rbp - 8], rax	        72	check-ignore.c	FUNCTION_6
0x361	            0x31c0	                            xor eax, eax	        72	check-ignore.c	FUNCTION_6
0x363	    0xc745c0000000	               mov dword [rbp - 0x40], 0	        75	check-ignore.c	FUNCTION_6
0x36a	        0x837d9c00	               cmp dword [rbp - 0x64], 0	        79	check-ignore.c	FUNCTION_6	IF_1
0x36e	            0x7532	                           jne 0x40003e2	        79	check-ignore.c	FUNCTION_6	IF_1
0x370	    0x8b0500000000	            mov eax, dword [0x040003b6] 	        80	check-ignore.c	FUNCTION_6	IF_1	IF_2
0x376	            0x85c0	                           test eax, eax	        80	check-ignore.c	FUNCTION_6	IF_1	IF_2
0x378	            0x751e	                           jne 0x40003d8	        80	check-ignore.c	FUNCTION_6	IF_1	IF_2
0x37a	    0x488b05000000	            mov rax, qword [0x040003c1] 	        81	check-ignore.c	FUNCTION_6	IF_1	CALL_1
0x381	          0x4889c1	                            mov rcx, rax	        81	check-ignore.c	FUNCTION_6	IF_1	CALL_1
0x384	      0xba13000000	                           mov edx, 0x13	        81	check-ignore.c	FUNCTION_6	IF_1	CALL_1
0x389	      0xbe01000000	                              mov esi, 1	        81	check-ignore.c	FUNCTION_6	IF_1	CALL_1
0x38e	      0xbf00000000	                              mov edi, 0	        81	check-ignore.c	FUNCTION_6	IF_1	CALL_1
0x393	      0xe800000000	                          call 0x40003d8	        81	check-ignore.c	FUNCTION_6	IF_1	CALL_1
0x398	      0xb800000000	                              mov eax, 0	        82	check-ignore.c	FUNCTION_6	IF_1
0x39d	      0xe931010000	                           jmp 0x4000513	        82	check-ignore.c	FUNCTION_6	IF_1
0x3a2	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	        89	check-ignore.c	FUNCTION_6	CALL_2
0x3a6	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	        89	check-ignore.c	FUNCTION_6	CALL_2
0x3aa	        0x488d45e0	                   lea rax, [rbp - 0x20]	        89	check-ignore.c	FUNCTION_6	CALL_2
0x3ae	          0x4989c8	                             mov r8, rcx	        89	check-ignore.c	FUNCTION_6	CALL_2
0x3b1	          0x4889d1	                            mov rcx, rdx	        89	check-ignore.c	FUNCTION_6	CALL_2
0x3b4	      0xba28000000	                           mov edx, 0x28	        89	check-ignore.c	FUNCTION_6	CALL_2
0x3b9	      0xbe7e000000	                           mov esi, 0x7e	        89	check-ignore.c	FUNCTION_6	CALL_2
0x3be	          0x4889c7	                            mov rdi, rax	        89	check-ignore.c	FUNCTION_6	CALL_2
0x3c1	      0xe800000000	                          call 0x4000406	        89	check-ignore.c	FUNCTION_6	CALL_2
0x3c6	        0x488d45e0	                   lea rax, [rbp - 0x20]	        95	check-ignore.c	FUNCTION_6	CALL_3
0x3ca	          0x4889c6	                            mov rsi, rax	        95	check-ignore.c	FUNCTION_6	CALL_3
0x3cd	      0xbf00000000	                              mov edi, 0	        95	check-ignore.c	FUNCTION_6	CALL_3
0x3d2	      0xe800000000	                          call 0x4000417	        95	check-ignore.c	FUNCTION_6	CALL_3
0x3d7	        0x488d45e0	                   lea rax, [rbp - 0x20]	       102	check-ignore.c	FUNCTION_6	CALL_4
0x3db	      0xbe00000000	                              mov esi, 0	       102	check-ignore.c	FUNCTION_6	CALL_4
0x3e0	          0x4889c7	                            mov rdi, rax	       102	check-ignore.c	FUNCTION_6	CALL_4
0x3e3	      0xe800000000	                          call 0x4000428	       102	check-ignore.c	FUNCTION_6	CALL_4
0x3e8	        0x488945d0	             mov qword [rbp - 0x30], rax	       102	check-ignore.c	FUNCTION_6	CALL_4
0x3ec	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	       103	check-ignore.c	FUNCTION_6	FOR_1
0x3f3	      0xe9c0000000	                           jmp 0x40004f8	       103	check-ignore.c	FUNCTION_6	FOR_1
0x3f8	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       104	check-ignore.c	FUNCTION_6	FOR_1
0x3fc	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       104	check-ignore.c	FUNCTION_6	FOR_1
0x3ff	            0x4898	                                    cdqe	       104	check-ignore.c	FUNCTION_6	FOR_1
0x401	        0x48c1e003	                              shl rax, 3	       104	check-ignore.c	FUNCTION_6	FOR_1
0x405	    0x488d0cc50000	                        lea rcx, [rax*8]	       104	check-ignore.c	FUNCTION_6	FOR_1
0x40d	          0x4829c1	                            sub rcx, rax	       104	check-ignore.c	FUNCTION_6	FOR_1
0x410	          0x4889c8	                            mov rax, rcx	       104	check-ignore.c	FUNCTION_6	FOR_1
0x413	          0x4801d0	                            add rax, rdx	       104	check-ignore.c	FUNCTION_6	FOR_1
0x416	          0x488b00	                    mov rax, qword [rax]	       104	check-ignore.c	FUNCTION_6	FOR_1
0x419	        0x488945d8	             mov qword [rbp - 0x28], rax	       104	check-ignore.c	FUNCTION_6	FOR_1
0x41d	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       105	check-ignore.c	FUNCTION_6	FOR_1
0x425	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       106	check-ignore.c	FUNCTION_6	FOR_1	IF_3
0x428	          0x4863d0	                         movsxd rdx, eax	       106	check-ignore.c	FUNCTION_6	FOR_1	IF_3
0x42b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       106	check-ignore.c	FUNCTION_6	FOR_1	IF_3
0x42f	          0x4801d0	                            add rax, rdx	       106	check-ignore.c	FUNCTION_6	FOR_1	IF_3
0x432	           0xfb600	                   movzx eax, byte [rax]	       106	check-ignore.c	FUNCTION_6	FOR_1	IF_3
0x435	            0x84c0	                             test al, al	       106	check-ignore.c	FUNCTION_6	FOR_1	IF_3
0x437	            0x7524	                           jne 0x400049d	       106	check-ignore.c	FUNCTION_6	FOR_1	IF_3
0x439	    0xc745bc000000	               mov dword [rbp - 0x44], 0	       107	check-ignore.c	FUNCTION_6	FOR_1	IF_3
0x440	        0x488d4dbc	                   lea rcx, [rbp - 0x44]	       108	check-ignore.c	FUNCTION_6	FOR_1	IF_3	CALL_5
0x444	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       108	check-ignore.c	FUNCTION_6	FOR_1	IF_3	CALL_5
0x448	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       108	check-ignore.c	FUNCTION_6	FOR_1	IF_3	CALL_5
0x44c	      0xbe00000000	                              mov esi, 0	       108	check-ignore.c	FUNCTION_6	FOR_1	IF_3	CALL_5
0x451	          0x4889c7	                            mov rdi, rax	       108	check-ignore.c	FUNCTION_6	FOR_1	IF_3	CALL_5
0x454	      0xe800000000	                          call 0x4000499	       108	check-ignore.c	FUNCTION_6	FOR_1	IF_3	CALL_5
0x459	        0x488945c8	             mov qword [rbp - 0x38], rax	       108	check-ignore.c	FUNCTION_6	FOR_1	IF_3	CALL_5
0x45d	    0x8b0500000000	            mov eax, dword [0x040004a3] 	       111	check-ignore.c	FUNCTION_6	FOR_1	IF_4
0x463	            0x85c0	                           test eax, eax	       111	check-ignore.c	FUNCTION_6	FOR_1	IF_4
0x465	            0x7542	                           jne 0x40004e9	       111	check-ignore.c	FUNCTION_6	FOR_1	IF_4
0x467	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       111	check-ignore.c	FUNCTION_6	FOR_1	IF_4
0x46c	            0x750a	                           jne 0x40004b8	       111	check-ignore.c	FUNCTION_6	FOR_1	IF_4
0x46e	    0x8b0500000000	            mov eax, dword [0x040004b4] 	       111	check-ignore.c	FUNCTION_6	FOR_1	IF_4
0x474	            0x85c0	                           test eax, eax	       111	check-ignore.c	FUNCTION_6	FOR_1	IF_4
0x476	            0x7431	                            je 0x40004e9	       111	check-ignore.c	FUNCTION_6	FOR_1	IF_4
0x478	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       112	check-ignore.c	FUNCTION_6	FOR_1	CALL_6
0x47c	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       112	check-ignore.c	FUNCTION_6	FOR_1	CALL_6
0x47f	            0x4898	                                    cdqe	       112	check-ignore.c	FUNCTION_6	FOR_1	CALL_6
0x481	        0x48c1e003	                              shl rax, 3	       112	check-ignore.c	FUNCTION_6	FOR_1	CALL_6
0x485	    0x488d0cc50000	                        lea rcx, [rax*8]	       112	check-ignore.c	FUNCTION_6	FOR_1	CALL_6
0x48d	          0x4829c1	                            sub rcx, rax	       112	check-ignore.c	FUNCTION_6	FOR_1	CALL_6
0x490	          0x4889c8	                            mov rax, rcx	       112	check-ignore.c	FUNCTION_6	FOR_1	CALL_6
0x493	          0x4801d0	                            add rax, rdx	       112	check-ignore.c	FUNCTION_6	FOR_1	CALL_6
0x496	        0x488b4008	                mov rax, qword [rax + 8]	       112	check-ignore.c	FUNCTION_6	FOR_1	CALL_6
0x49a	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       112	check-ignore.c	FUNCTION_6	FOR_1	CALL_6
0x49e	          0x4889d6	                            mov rsi, rdx	       112	check-ignore.c	FUNCTION_6	FOR_1	CALL_6
0x4a1	          0x4889c7	                            mov rdi, rax	       112	check-ignore.c	FUNCTION_6	FOR_1	CALL_6
0x4a4	      0xe8b1fcffff	                 call sym.output_exclude	       112	check-ignore.c	FUNCTION_6	FOR_1	CALL_6
0x4a9	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       113	check-ignore.c	FUNCTION_6	FOR_1	IF_5
0x4ae	            0x7404	                            je 0x40004f4	       113	check-ignore.c	FUNCTION_6	FOR_1	IF_5
0x4b0	        0x8345c001	               add dword [rbp - 0x40], 1	       114	check-ignore.c	FUNCTION_6	FOR_1	IF_5
0x4b4	        0x8345c401	               add dword [rbp - 0x3c], 1	       103	check-ignore.c	FUNCTION_6	FOR_1
0x4b8	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       103	check-ignore.c	FUNCTION_6	FOR_1
0x4bb	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	       103	check-ignore.c	FUNCTION_6	FOR_1
0x4be	     0xf8f34ffffff	                            jg 0x4000438	       103	check-ignore.c	FUNCTION_6	FOR_1
0x4c4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       116	check-ignore.c	FUNCTION_6	CALL_7
0x4c8	          0x4889c7	                            mov rdi, rax	       116	check-ignore.c	FUNCTION_6	CALL_7
0x4cb	      0xe800000000	                          call 0x4000510	       116	check-ignore.c	FUNCTION_6	CALL_7
0x4d0	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       118	check-ignore.c	FUNCTION_6
0x4d3	        0x488b75f8	                mov rsi, qword [rbp - 8]	       119	check-ignore.c	FUNCTION_6
0x4d7	    0x644833342528	                xor rsi, qword fs:[0x28]	       119	check-ignore.c	FUNCTION_6
0x4e0	            0x7405	                            je 0x4000527	       119	check-ignore.c	FUNCTION_6
0x4e2	      0xe800000000	                          call 0x4000527	       119	check-ignore.c	FUNCTION_6
0x4e7	              0xc9	                                   leave	       119	check-ignore.c	FUNCTION_6
0x4e8	              0xc3	                                     ret	       119	check-ignore.c	FUNCTION_6
