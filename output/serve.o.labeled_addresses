serve	WHILE,0:ELSE,1:functions,0:IF,4:SWITCH,0:CALL,4:FOR,1:DO,0	36
0x7e4	              0x55	                                push rbp	       233	serve.c	FUNCTION_9
0x7e5	          0x4889e5	                            mov rbp, rsp	       233	serve.c	FUNCTION_9
0x7e8	        0x4883ec10	                           sub rsp, 0x10	       233	serve.c	FUNCTION_9
0x7ec	        0x48897df8	                mov qword [rbp - 8], rdi	       233	serve.c	FUNCTION_9
0x7f0	        0x488b45f8	                mov rax, qword [rbp - 8]	       234	serve.c	FUNCTION_9	IF_1
0x7f4	            0x8b00	                    mov eax, dword [rax]	       234	serve.c	FUNCTION_9	IF_1
0x7f6	            0x85c0	                           test eax, eax	       234	serve.c	FUNCTION_9	IF_1
0x7f8	            0x750b	                           jne 0x4000845	       234	serve.c	FUNCTION_9	IF_1
0x7fa	        0x488b45f8	                mov rax, qword [rbp - 8]	       234	serve.c	FUNCTION_9	IF_1
0x7fe	          0x8b4004	                mov eax, dword [rax + 4]	       234	serve.c	FUNCTION_9	IF_1
0x801	            0x85c0	                           test eax, eax	       234	serve.c	FUNCTION_9	IF_1
0x803	            0x7523	                           jne 0x4000868	       234	serve.c	FUNCTION_9	IF_1
0x805	      0xbe00000000	                              mov esi, 0	       236	serve.c	FUNCTION_9	IF_1	CALL_1
0x80a	      0xbf01000000	                              mov edi, 1	       236	serve.c	FUNCTION_9	IF_1	CALL_1
0x80f	      0xb800000000	                              mov eax, 0	       236	serve.c	FUNCTION_9	IF_1	CALL_1
0x814	      0xe800000000	                          call 0x4000859	       236	serve.c	FUNCTION_9	IF_1	CALL_1
0x819	      0xe8f3f9ffff	         call sym.advertise_capabilities	       238	serve.c	FUNCTION_9	IF_1	CALL_2
0x81e	        0x488b45f8	                mov rax, qword [rbp - 8]	       243	serve.c	FUNCTION_9	IF_1	IF_2
0x822	            0x8b00	                    mov eax, dword [rax]	       243	serve.c	FUNCTION_9	IF_1	IF_2
0x824	            0x85c0	                           test eax, eax	       243	serve.c	FUNCTION_9	IF_1	IF_2
0x826	            0x751d	                           jne 0x4000885	       243	serve.c	FUNCTION_9	IF_1	IF_2
0x828	        0x488b45f8	                mov rax, qword [rbp - 8]	       251	serve.c	FUNCTION_9	IF_3
0x82c	          0x8b4004	                mov eax, dword [rax + 4]	       251	serve.c	FUNCTION_9	IF_3
0x82f	            0x85c0	                           test eax, eax	       251	serve.c	FUNCTION_9	IF_3
0x831	            0x7407	                            je 0x400087a	       251	serve.c	FUNCTION_9	IF_3
0x833	      0xe8f5fdffff	                call sym.process_request	       252	serve.c	FUNCTION_9	IF_3	CALL_3
0x838	            0xeb0f	                           jmp 0x4000889	       252	serve.c	FUNCTION_9	IF_3	CALL_3
0x83a	      0xe8eefdffff	                call sym.process_request	       255	serve.c	FUNCTION_9	ELSE_1	FOR_1	IF_4	CALL_4
0x83f	            0x85c0	                           test eax, eax	       255	serve.c	FUNCTION_9	ELSE_1	FOR_1	IF_4	CALL_4
0x841	            0x7505	                           jne 0x4000888	       255	serve.c	FUNCTION_9	ELSE_1	FOR_1	IF_4	CALL_4
0x843	            0xebf5	                           jmp 0x400087a	       257	serve.c	FUNCTION_9	ELSE_1
0x845	              0x90	                                     nop	       244	serve.c	FUNCTION_9	IF_1	IF_2
0x846	            0xeb01	                           jmp 0x4000889	       244	serve.c	FUNCTION_9	IF_1	IF_2
0x848	              0x90	                                     nop	       256	serve.c	FUNCTION_9	ELSE_1	FOR_1	IF_4
0x849	              0xc9	                                   leave	       258	serve.c	FUNCTION_9
0x84a	              0xc3	                                     ret	       258	serve.c	FUNCTION_9
is_command	WHILE,0:ELSE,0:functions,0:IF,3:SWITCH,0:CALL,5:FOR,0:DO,0	62
0x472	              0x55	                                push rbp	       117	serve.c	FUNCTION_6
0x473	          0x4889e5	                            mov rbp, rsp	       117	serve.c	FUNCTION_6
0x476	        0x4883ec30	                           sub rsp, 0x30	       117	serve.c	FUNCTION_6
0x47a	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       117	serve.c	FUNCTION_6
0x47e	        0x488975d0	             mov qword [rbp - 0x30], rsi	       117	serve.c	FUNCTION_6
0x482	    0x64488b042528	                mov rax, qword fs:[0x28]	       117	serve.c	FUNCTION_6
0x48b	        0x488945f8	                mov qword [rbp - 8], rax	       117	serve.c	FUNCTION_6
0x48f	            0x31c0	                            xor eax, eax	       117	serve.c	FUNCTION_6
0x491	        0x488d55e8	                   lea rdx, [rbp - 0x18]	       120	serve.c	FUNCTION_6	IF_1	CALL_1
0x495	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       120	serve.c	FUNCTION_6	IF_1	CALL_1
0x499	      0xbe00000000	                              mov esi, 0	       120	serve.c	FUNCTION_6	IF_1	CALL_1
0x49e	          0x4889c7	                            mov rdi, rax	       120	serve.c	FUNCTION_6	IF_1	CALL_1
0x4a1	      0xe85afbffff	                    call sym.skip_prefix	       120	serve.c	FUNCTION_6	IF_1	CALL_1
0x4a6	            0x85c0	                           test eax, eax	       120	serve.c	FUNCTION_6	IF_1	CALL_1
0x4a8	     0xf8495000000	                            je 0x4000583	       120	serve.c	FUNCTION_6	IF_1	CALL_1
0x4ae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       121	serve.c	FUNCTION_6	IF_1	CALL_2
0x4b2	          0x4889c7	                            mov rdi, rax	       121	serve.c	FUNCTION_6	IF_1	CALL_2
0x4b5	      0xe8bafeffff	                 call sym.get_capability	       121	serve.c	FUNCTION_6	IF_1	CALL_2
0x4ba	        0x488945f0	             mov qword [rbp - 0x10], rax	       121	serve.c	FUNCTION_6	IF_1	CALL_2
0x4be	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       123	serve.c	FUNCTION_6	IF_1	IF_2
0x4c2	          0x488b00	                    mov rax, qword [rax]	       123	serve.c	FUNCTION_6	IF_1	IF_2
0x4c5	          0x4885c0	                           test rax, rax	       123	serve.c	FUNCTION_6	IF_1	IF_2
0x4c8	            0x7420	                            je 0x400052a	       123	serve.c	FUNCTION_6	IF_1	IF_2
0x4ca	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       125	serve.c	FUNCTION_6	IF_1	IF_2
0x4ce	          0x488b00	                    mov rax, qword [rax]	       125	serve.c	FUNCTION_6	IF_1	IF_2
0x4d1	          0x488b10	                    mov rdx, qword [rax]	       124	serve.c	FUNCTION_6	IF_1	IF_2	CALL_3
0x4d4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       124	serve.c	FUNCTION_6	IF_1	IF_2	CALL_3
0x4d8	          0x4889c6	                            mov rsi, rax	       124	serve.c	FUNCTION_6	IF_1	IF_2	CALL_3
0x4db	      0xbf00000000	                              mov edi, 0	       124	serve.c	FUNCTION_6	IF_1	IF_2	CALL_3
0x4e0	      0xb800000000	                              mov eax, 0	       124	serve.c	FUNCTION_6	IF_1	IF_2	CALL_3
0x4e5	      0xe800000000	                          call 0x400052a	       124	serve.c	FUNCTION_6	IF_1	IF_2	CALL_3
0x4ea	      0x48837df000	               cmp qword [rbp - 0x10], 0	       126	serve.c	FUNCTION_6	IF_1	IF_3	CALL_4
0x4ef	            0x742a	                            je 0x400055b	       126	serve.c	FUNCTION_6	IF_1	IF_3	CALL_4
0x4f1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       126	serve.c	FUNCTION_6	IF_1	IF_3	CALL_4
0x4f5	        0x488b4008	                mov rax, qword [rax + 8]	       126	serve.c	FUNCTION_6	IF_1	IF_3	CALL_4
0x4f9	    0x488b15000000	            mov rdx, qword [0x04000540] 	       126	serve.c	FUNCTION_6	IF_1	IF_3	CALL_4
0x500	      0xbe00000000	                              mov esi, 0	       126	serve.c	FUNCTION_6	IF_1	IF_3	CALL_4
0x505	          0x4889d7	                            mov rdi, rdx	       126	serve.c	FUNCTION_6	IF_1	IF_3	CALL_4
0x508	            0xffd0	                                call rax	       126	serve.c	FUNCTION_6	IF_1	IF_3	CALL_4
0x50a	            0x85c0	                           test eax, eax	       126	serve.c	FUNCTION_6	IF_1	IF_3	CALL_4
0x50c	            0x740d	                            je 0x400055b	       126	serve.c	FUNCTION_6	IF_1	IF_3	CALL_4
0x50e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       126	serve.c	FUNCTION_6	IF_1	IF_3	CALL_4
0x512	        0x488b4010	            mov rax, qword [rax + 0x10] 	       126	serve.c	FUNCTION_6	IF_1	IF_3	CALL_4
0x516	          0x4885c0	                           test rax, rax	       126	serve.c	FUNCTION_6	IF_1	IF_3	CALL_4
0x519	            0x7516	                           jne 0x4000571	       126	serve.c	FUNCTION_6	IF_1	IF_3	CALL_4
0x51b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       127	serve.c	FUNCTION_6	IF_1	CALL_5
0x51f	          0x4889c6	                            mov rsi, rax	       127	serve.c	FUNCTION_6	IF_1	CALL_5
0x522	      0xbf00000000	                              mov edi, 0	       127	serve.c	FUNCTION_6	IF_1	CALL_5
0x527	      0xb800000000	                              mov eax, 0	       127	serve.c	FUNCTION_6	IF_1	CALL_5
0x52c	      0xe800000000	                          call 0x4000571	       127	serve.c	FUNCTION_6	IF_1	CALL_5
0x531	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       129	serve.c	FUNCTION_6	IF_1
0x535	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       129	serve.c	FUNCTION_6	IF_1
0x539	          0x488910	                    mov qword [rax], rdx	       129	serve.c	FUNCTION_6	IF_1
0x53c	      0xb801000000	                              mov eax, 1	       130	serve.c	FUNCTION_6	IF_1
0x541	            0xeb05	                           jmp 0x4000588	       130	serve.c	FUNCTION_6	IF_1
0x543	      0xb800000000	                              mov eax, 0	       133	serve.c	FUNCTION_6
0x548	        0x488b4df8	                mov rcx, qword [rbp - 8]	       134	serve.c	FUNCTION_6
0x54c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       134	serve.c	FUNCTION_6
0x555	            0x7405	                            je 0x400059c	       134	serve.c	FUNCTION_6
0x557	      0xe800000000	                          call 0x400059c	       134	serve.c	FUNCTION_6
0x55c	              0xc9	                                   leave	       134	serve.c	FUNCTION_6
0x55d	              0xc3	                                     ret	       134	serve.c	FUNCTION_6
strbuf_addstr	WHILE,0:ELSE,0:functions,0:IF,0:SWITCH,0:CALL,2:FOR,0:DO,0	17
0x194	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_14
0x195	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_14
0x198	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_14
0x19c	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_14
0x1a0	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_14
0x1a4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_14	CALL_2
0x1a8	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_14	CALL_2
0x1ab	      0xe800000000	                          call 0x40001f0	       279	strbuf.h	FUNCTION_14	CALL_2
0x1b0	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_14	CALL_2
0x1b3	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_14	CALL_2
0x1b7	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_14	CALL_2
0x1bb	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_14	CALL_2
0x1be	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_14	CALL_2
0x1c1	      0xe800000000	                          call 0x4000206	       279	strbuf.h	FUNCTION_14	CALL_2
0x1c6	              0x90	                                     nop	       280	strbuf.h	FUNCTION_14
0x1c7	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_14
0x1c8	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_14
process_request	WHILE,1:ELSE,1:functions,0:IF,4:SWITCH,1:CALL,13:FOR,0:DO,0	107
0x62d	              0x55	                                push rbp	       162	serve.c	FUNCTION_8
0x62e	          0x4889e5	                            mov rbp, rsp	       162	serve.c	FUNCTION_8
0x631	        0x4883ec70	                           sub rsp, 0x70	       162	serve.c	FUNCTION_8
0x635	    0x64488b042528	                mov rax, qword fs:[0x28]	       162	serve.c	FUNCTION_8
0x63e	        0x488945f8	                mov qword [rbp - 8], rax	       162	serve.c	FUNCTION_8
0x642	            0x31c0	                            xor eax, eax	       162	serve.c	FUNCTION_8
0x644	    0xc74594000000	               mov dword [rbp - 0x6c], 0	       163	serve.c	FUNCTION_8
0x64b	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       165	serve.c	FUNCTION_8
0x653	    0xc745a8000000	               mov dword [rbp - 0x58], 0	       165	serve.c	FUNCTION_8
0x65a	    0xc745ac000000	               mov dword [rbp - 0x54], 0	       165	serve.c	FUNCTION_8
0x661	    0x48c745980000	               mov qword [rbp - 0x68], 0	       166	serve.c	FUNCTION_8
0x669	        0x488d45b0	                   lea rax, [rbp - 0x50]	       168	serve.c	FUNCTION_8	CALL_1
0x66d	    0x41b803000000	                              mov r8d, 3	       168	serve.c	FUNCTION_8	CALL_1
0x673	      0xb900000000	                              mov ecx, 0	       168	serve.c	FUNCTION_8	CALL_1
0x678	      0xba00000000	                              mov edx, 0	       168	serve.c	FUNCTION_8	CALL_1
0x67d	      0xbe00000000	                              mov esi, 0	       168	serve.c	FUNCTION_8	CALL_1
0x682	          0x4889c7	                            mov rdi, rax	       168	serve.c	FUNCTION_8	CALL_1
0x685	      0xe800000000	                          call 0x40006ca	       168	serve.c	FUNCTION_8	CALL_1
0x68a	        0x488d45b0	                   lea rax, [rbp - 0x50]	       176	serve.c	FUNCTION_8	IF_1	CALL_2
0x68e	          0x4889c7	                            mov rdi, rax	       176	serve.c	FUNCTION_8	IF_1	CALL_2
0x691	      0xe800000000	                          call 0x40006d6	       176	serve.c	FUNCTION_8	IF_1	CALL_2
0x696	            0x85c0	                           test eax, eax	       176	serve.c	FUNCTION_8	IF_1	CALL_2
0x698	            0x750a	                           jne 0x40006e4	       176	serve.c	FUNCTION_8	IF_1	CALL_2
0x69a	      0xb801000000	                              mov eax, 1	       177	serve.c	FUNCTION_8	IF_1
0x69f	      0xe92a010000	                           jmp 0x400080e	       177	serve.c	FUNCTION_8	IF_1
0x6a4	    0xc745d4020000	               mov dword [rbp - 0x2c], 2	       178	serve.c	FUNCTION_8
0x6ab	      0xe9cf000000	                           jmp 0x40007bf	       180	serve.c	FUNCTION_8	WHILE_1
0x6b0	        0x488d45b0	                   lea rax, [rbp - 0x50]	       181	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	CALL_3
0x6b4	          0x4889c7	                            mov rdi, rax	       181	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	CALL_3
0x6b7	      0xe800000000	                          call 0x40006fc	       181	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	CALL_3
0x6bc	          0x83f801	                              cmp eax, 1	       181	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	CALL_3
0x6bf	            0x7435	                            je 0x4000736	       181	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	CALL_3
0x6c1	          0x83f801	                              cmp eax, 1	       181	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	CALL_3
0x6c4	            0x7217	                            jb 0x400071d	       181	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	CALL_3
0x6c6	          0x83f802	                              cmp eax, 2	       181	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	CALL_3
0x6c9	     0xf8485000000	                            je 0x4000794	       181	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	CALL_3
0x6cf	          0x83f803	                              cmp eax, 3	       181	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	CALL_3
0x6d2	     0xf8493000000	                            je 0x40007ab	       181	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	CALL_3
0x6d8	      0xe9a2000000	                           jmp 0x40007bf	       181	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	CALL_3
0x6dd	      0xba00000000	                              mov edx, 0	       183	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	CALL_4
0x6e2	      0xbeb7000000	                           mov esi, 0xb7	       183	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	CALL_4
0x6e7	      0xbf00000000	                              mov edi, 0	       183	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	CALL_4
0x6ec	      0xb800000000	                              mov eax, 0	       183	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	CALL_4
0x6f1	      0xe800000000	                          call 0x4000736	       183	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	CALL_4
0x6f6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       186	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	IF_2	CALL_5
0x6fa	        0x488d5598	                   lea rdx, [rbp - 0x68]	       186	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	IF_2	CALL_5
0x6fe	          0x4889d6	                            mov rsi, rdx	       186	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	IF_2	CALL_5
0x701	          0x4889c7	                            mov rdi, rax	       186	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	IF_2	CALL_5
0x704	      0xe869fdffff	                     call sym.is_command	       186	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	IF_2	CALL_5
0x709	            0x85c0	                           test eax, eax	       186	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	IF_2	CALL_5
0x70b	            0x7510	                           jne 0x400075d	       186	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	IF_2	CALL_5
0x70d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       187	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	IF_2	CALL_6
0x711	          0x4889c7	                            mov rdi, rax	       187	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	IF_2	CALL_6
0x714	      0xe80bfdffff	            call sym.is_valid_capability	       187	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	IF_2	CALL_6
0x719	            0x85c0	                           test eax, eax	       186	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	IF_2	CALL_5
0x71b	            0x7421	                            je 0x400077e	       186	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	IF_2	CALL_5
0x71d	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       188	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	CALL_7
0x721	        0x488d45a0	                   lea rax, [rbp - 0x60]	       188	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	CALL_7
0x725	          0x4889d6	                            mov rsi, rdx	       188	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	CALL_7
0x728	          0x4889c7	                            mov rdi, rax	       188	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	CALL_7
0x72b	      0xe800000000	                          call 0x4000770	       188	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	CALL_7
0x730	        0x488d45b0	                   lea rax, [rbp - 0x50]	       193	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	CALL_9
0x734	          0x4889c7	                            mov rdi, rax	       193	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	CALL_9
0x737	      0xe800000000	                          call 0x400077c	       193	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	CALL_9
0x73c	            0xeb41	                           jmp 0x40007bf	       194	serve.c	FUNCTION_8	WHILE_1	SWITCH_1
0x73e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       190	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	CALL_8
0x742	          0x4889c6	                            mov rsi, rax	       190	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	CALL_8
0x745	      0xbf00000000	                              mov edi, 0	       190	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	CALL_8
0x74a	      0xb800000000	                              mov eax, 0	       190	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	CALL_8
0x74f	      0xe800000000	                          call 0x4000794	       190	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	CALL_8
0x754	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       200	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	IF_3
0x757	            0x85c0	                           test eax, eax	       200	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	IF_3
0x759	            0x7507	                           jne 0x40007a2	       200	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	IF_3
0x75b	      0xb801000000	                              mov eax, 1	       201	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	IF_3
0x760	            0xeb6c	                           jmp 0x400080e	       201	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	IF_3
0x762	    0xc74594010000	               mov dword [rbp - 0x6c], 1	       211	serve.c	FUNCTION_8	WHILE_1	SWITCH_1
0x769	            0xeb14	                           jmp 0x40007bf	       212	serve.c	FUNCTION_8	WHILE_1	SWITCH_1
0x76b	        0x488d45b0	                   lea rax, [rbp - 0x50]	       215	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	CALL_10
0x76f	          0x4889c7	                            mov rdi, rax	       215	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	CALL_10
0x772	      0xe800000000	                          call 0x40007b7	       215	serve.c	FUNCTION_8	WHILE_1	SWITCH_1	CALL_10
0x777	    0xc74594010000	               mov dword [rbp - 0x6c], 1	       217	serve.c	FUNCTION_8	WHILE_1	SWITCH_1
0x77e	              0x90	                                     nop	       218	serve.c	FUNCTION_8	WHILE_1	SWITCH_1
0x77f	        0x837d9401	               cmp dword [rbp - 0x6c], 1	       180	serve.c	FUNCTION_8	WHILE_1
0x783	     0xf8527ffffff	                           jne 0x40006f0	       180	serve.c	FUNCTION_8	WHILE_1
0x789	        0x488b4598	             mov rax, qword [rbp - 0x68]	       222	serve.c	FUNCTION_8	IF_4
0x78d	          0x4885c0	                           test rax, rax	       222	serve.c	FUNCTION_8	IF_4
0x790	            0x750f	                           jne 0x40007e1	       222	serve.c	FUNCTION_8	IF_4
0x792	      0xbf00000000	                              mov edi, 0	       223	serve.c	FUNCTION_8	CALL_11
0x797	      0xb800000000	                              mov eax, 0	       223	serve.c	FUNCTION_8	CALL_11
0x79c	      0xe800000000	                          call 0x40007e1	       223	serve.c	FUNCTION_8	CALL_11
0x7a1	        0x488b4598	             mov rax, qword [rbp - 0x68]	       225	serve.c	FUNCTION_8	CALL_12
0x7a5	        0x488b4010	            mov rax, qword [rax + 0x10] 	       225	serve.c	FUNCTION_8	CALL_12
0x7a9	    0x488b0d000000	            mov rcx, qword [0x040007f0] 	       225	serve.c	FUNCTION_8	CALL_12
0x7b0	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       225	serve.c	FUNCTION_8	CALL_12
0x7b4	        0x488d75a0	                   lea rsi, [rbp - 0x60]	       225	serve.c	FUNCTION_8	CALL_12
0x7b8	          0x4889cf	                            mov rdi, rcx	       225	serve.c	FUNCTION_8	CALL_12
0x7bb	            0xffd0	                                call rax	       225	serve.c	FUNCTION_8	CALL_12
0x7bd	        0x488d45a0	                   lea rax, [rbp - 0x60]	       227	serve.c	FUNCTION_8	CALL_13
0x7c1	          0x4889c7	                            mov rdi, rax	       227	serve.c	FUNCTION_8	CALL_13
0x7c4	      0xe800000000	                          call 0x4000809	       227	serve.c	FUNCTION_8	CALL_13
0x7c9	      0xb800000000	                              mov eax, 0	       228	serve.c	FUNCTION_8
0x7ce	        0x488b4df8	                mov rcx, qword [rbp - 8]	       229	serve.c	FUNCTION_8
0x7d2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       229	serve.c	FUNCTION_8
0x7db	            0x7405	                            je 0x4000822	       229	serve.c	FUNCTION_8
0x7dd	      0xe800000000	                          call 0x4000822	       229	serve.c	FUNCTION_8
0x7e2	              0xc9	                                   leave	       229	serve.c	FUNCTION_8
0x7e3	              0xc3	                                     ret	       229	serve.c	FUNCTION_8
has_capability	WHILE,0:ELSE,0:functions,0:IF,3:SWITCH,0:CALL,1:FOR,1:DO,0	59
0x55e	              0x55	                                push rbp	       138	serve.c	FUNCTION_7
0x55f	          0x4889e5	                            mov rbp, rsp	       138	serve.c	FUNCTION_7
0x562	        0x4883ec40	                           sub rsp, 0x40	       138	serve.c	FUNCTION_7
0x566	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       138	serve.c	FUNCTION_7
0x56a	        0x488975d0	             mov qword [rbp - 0x30], rsi	       138	serve.c	FUNCTION_7
0x56e	        0x488955c8	             mov qword [rbp - 0x38], rdx	       138	serve.c	FUNCTION_7
0x572	    0x64488b042528	                mov rax, qword fs:[0x28]	       138	serve.c	FUNCTION_7
0x57b	        0x488945f8	                mov qword [rbp - 8], rax	       138	serve.c	FUNCTION_7
0x57f	            0x31c0	                            xor eax, eax	       138	serve.c	FUNCTION_7
0x581	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       140	serve.c	FUNCTION_7	FOR_1
0x588	            0xeb78	                           jmp 0x4000642	       140	serve.c	FUNCTION_7	FOR_1
0x58a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       142	serve.c	FUNCTION_7	FOR_1	IF_1	CALL_1
0x58e	          0x488b00	                    mov rax, qword [rax]	       142	serve.c	FUNCTION_7	FOR_1	IF_1	CALL_1
0x591	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       142	serve.c	FUNCTION_7	FOR_1	IF_1	CALL_1
0x594	          0x4863d2	                         movsxd rdx, edx	       142	serve.c	FUNCTION_7	FOR_1	IF_1	CALL_1
0x597	        0x48c1e203	                              shl rdx, 3	       142	serve.c	FUNCTION_7	FOR_1	IF_1	CALL_1
0x59b	          0x4801d0	                            add rax, rdx	       142	serve.c	FUNCTION_7	FOR_1	IF_1	CALL_1
0x59e	          0x488b00	                    mov rax, qword [rax]	       142	serve.c	FUNCTION_7	FOR_1	IF_1	CALL_1
0x5a1	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       142	serve.c	FUNCTION_7	FOR_1	IF_1	CALL_1
0x5a5	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       142	serve.c	FUNCTION_7	FOR_1	IF_1	CALL_1
0x5a9	          0x4889ce	                            mov rsi, rcx	       142	serve.c	FUNCTION_7	FOR_1	IF_1	CALL_1
0x5ac	          0x4889c7	                            mov rdi, rax	       142	serve.c	FUNCTION_7	FOR_1	IF_1	CALL_1
0x5af	      0xe84cfaffff	                    call sym.skip_prefix	       142	serve.c	FUNCTION_7	FOR_1	IF_1	CALL_1
0x5b4	            0x85c0	                           test eax, eax	       142	serve.c	FUNCTION_7	FOR_1	IF_1	CALL_1
0x5b6	            0x7446	                            je 0x400063e	       142	serve.c	FUNCTION_7	FOR_1	IF_1	CALL_1
0x5b8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       143	serve.c	FUNCTION_7	FOR_1	IF_1
0x5bc	           0xfb600	                   movzx eax, byte [rax]	       143	serve.c	FUNCTION_7	FOR_1	IF_1
0x5bf	            0x84c0	                             test al, al	       142	serve.c	FUNCTION_7	FOR_1	IF_1	CALL_1
0x5c1	            0x740b	                            je 0x400060e	       142	serve.c	FUNCTION_7	FOR_1	IF_1	CALL_1
0x5c3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       143	serve.c	FUNCTION_7	FOR_1	IF_1
0x5c7	           0xfb600	                   movzx eax, byte [rax]	       143	serve.c	FUNCTION_7	FOR_1	IF_1
0x5ca	            0x3c3d	                            cmp al, 0x3d	       143	serve.c	FUNCTION_7	FOR_1	IF_1
0x5cc	            0x7530	                           jne 0x400063e	       143	serve.c	FUNCTION_7	FOR_1	IF_1
0x5ce	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       144	serve.c	FUNCTION_7	FOR_1	IF_1	IF_2
0x5d3	            0x7422	                            je 0x4000637	       144	serve.c	FUNCTION_7	FOR_1	IF_1	IF_2
0x5d5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       145	serve.c	FUNCTION_7	FOR_1	IF_1	IF_2	IF_3
0x5d9	           0xfb600	                   movzx eax, byte [rax]	       145	serve.c	FUNCTION_7	FOR_1	IF_1	IF_2	IF_3
0x5dc	            0x3c3d	                            cmp al, 0x3d	       145	serve.c	FUNCTION_7	FOR_1	IF_1	IF_2	IF_3
0x5de	            0x750c	                           jne 0x400062c	       145	serve.c	FUNCTION_7	FOR_1	IF_1	IF_2	IF_3
0x5e0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       146	serve.c	FUNCTION_7	FOR_1	IF_1	IF_2	IF_3
0x5e4	        0x4883c001	                              add rax, 1	       146	serve.c	FUNCTION_7	FOR_1	IF_1	IF_2	IF_3
0x5e8	        0x488945f0	             mov qword [rbp - 0x10], rax	       146	serve.c	FUNCTION_7	FOR_1	IF_1	IF_2	IF_3
0x5ec	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       147	serve.c	FUNCTION_7	FOR_1	IF_1	IF_2
0x5f0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       147	serve.c	FUNCTION_7	FOR_1	IF_1	IF_2
0x5f4	          0x488910	                    mov qword [rax], rdx	       147	serve.c	FUNCTION_7	FOR_1	IF_1	IF_2
0x5f7	      0xb801000000	                              mov eax, 1	       149	serve.c	FUNCTION_7	FOR_1	IF_1
0x5fc	            0xeb19	                           jmp 0x4000657	       149	serve.c	FUNCTION_7	FOR_1	IF_1
0x5fe	        0x8345ec01	               add dword [rbp - 0x14], 1	       140	serve.c	FUNCTION_7	FOR_1
0x602	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       140	serve.c	FUNCTION_7	FOR_1
0x606	          0x8b4008	                mov eax, dword [rax + 8]	       140	serve.c	FUNCTION_7	FOR_1
0x609	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	       140	serve.c	FUNCTION_7	FOR_1
0x60c	     0xf8f78ffffff	                            jg 0x40005ca	       140	serve.c	FUNCTION_7	FOR_1
0x612	      0xb800000000	                              mov eax, 0	       153	serve.c	FUNCTION_7
0x617	        0x488b4df8	                mov rcx, qword [rbp - 8]	       154	serve.c	FUNCTION_7
0x61b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       154	serve.c	FUNCTION_7
0x624	            0x7405	                            je 0x400066b	       154	serve.c	FUNCTION_7
0x626	      0xe800000000	                          call 0x400066b	       154	serve.c	FUNCTION_7
0x62b	              0xc9	                                   leave	       154	serve.c	FUNCTION_7
0x62c	              0xc3	                                     ret	       154	serve.c	FUNCTION_7
strbuf_setlen	WHILE,0:ELSE,1:functions,0:IF,2:SWITCH,0:CALL,2:FOR,0:DO,0	43
0x8c	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_12
0x8d	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_12
0x90	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_12
0x94	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_12
0x98	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_12
0x9c	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_12	IF_1
0xa0	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_12	IF_1
0xa3	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_12	IF_1
0xa6	            0x740d	                            je 0x40000f5	       162	strbuf.h	FUNCTION_12	IF_1
0xa8	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_12	IF_1
0xac	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_12	IF_1
0xaf	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_12	IF_1
0xb3	            0xeb05	                           jmp 0x40000fa	       162	strbuf.h	FUNCTION_12	IF_1
0xb5	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_12	IF_1
0xba	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_12	IF_1
0xbe	            0x730f	                           jae 0x400010f	       162	strbuf.h	FUNCTION_12	IF_1
0xc0	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_12	CALL_1
0xc5	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_12	CALL_1
0xca	      0xe800000000	                          call 0x400010f	       163	strbuf.h	FUNCTION_12	CALL_1
0xcf	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_12
0xd3	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_12
0xd7	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_12
0xdb	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_12	IF_2
0xdf	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_12	IF_2
0xe3	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_12	IF_2
0xe9	            0x7414	                            je 0x400013f	       165	strbuf.h	FUNCTION_12	IF_2
0xeb	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_12	IF_2
0xef	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_12	IF_2
0xf3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_12	IF_2
0xf7	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_12	IF_2
0xfa	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_12	IF_2
0xfd	            0xeb24	                           jmp 0x4000163	       169	strbuf.h	FUNCTION_12
0xff	     0xfb605000000	           movzx eax, byte [0x04000146] 	       168	strbuf.h	FUNCTION_12	CALL_2
0x106	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_12	CALL_2
0x108	            0x7419	                            je 0x4000163	       168	strbuf.h	FUNCTION_12	CALL_2
0x10a	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_12	CALL_2
0x10f	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_12	CALL_2
0x114	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_12	CALL_2
0x119	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_12	CALL_2
0x11e	      0xe800000000	                          call 0x4000163	       168	strbuf.h	FUNCTION_12	CALL_2
0x123	              0x90	                                     nop	       169	strbuf.h	FUNCTION_12
0x124	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_12
0x125	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_12
strbuf_avail	WHILE,0:ELSE,0:functions,0:IF,0:SWITCH,0:CALL,0:FOR,0:DO,0	18
0x56	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_11
0x57	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_11
0x5a	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_11
0x5e	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_11
0x62	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_11
0x65	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_11
0x68	            0x741b	                            je 0x40000c5	       141	strbuf.h	FUNCTION_11
0x6a	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_11
0x6e	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_11
0x71	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_11
0x75	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_11
0x79	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_11
0x7c	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_11
0x7f	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_11
0x83	            0xeb05	                           jmp 0x40000ca	       141	strbuf.h	FUNCTION_11
0x85	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_11
0x8a	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_11
0x8b	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_11
is_valid_capability	WHILE,0:ELSE,0:functions,0:IF,0:SWITCH,0:CALL,2:FOR,0:DO,0	23
0x424	              0x55	                                push rbp	       110	serve.c	FUNCTION_5
0x425	          0x4889e5	                            mov rbp, rsp	       110	serve.c	FUNCTION_5
0x428	        0x4883ec20	                           sub rsp, 0x20	       110	serve.c	FUNCTION_5
0x42c	        0x48897de8	             mov qword [rbp - 0x18], rdi	       110	serve.c	FUNCTION_5
0x430	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       111	serve.c	FUNCTION_5	CALL_1
0x434	          0x4889c7	                            mov rdi, rax	       111	serve.c	FUNCTION_5	CALL_1
0x437	      0xe838ffffff	                 call sym.get_capability	       111	serve.c	FUNCTION_5	CALL_1
0x43c	        0x488945f8	                mov qword [rbp - 8], rax	       111	serve.c	FUNCTION_5	CALL_1
0x440	      0x48837df800	                  cmp qword [rbp - 8], 0	       113	serve.c	FUNCTION_5	CALL_2
0x445	            0x7424	                            je 0x40004ab	       113	serve.c	FUNCTION_5	CALL_2
0x447	        0x488b45f8	                mov rax, qword [rbp - 8]	       113	serve.c	FUNCTION_5	CALL_2
0x44b	        0x488b4008	                mov rax, qword [rax + 8]	       113	serve.c	FUNCTION_5	CALL_2
0x44f	    0x488b15000000	            mov rdx, qword [0x04000496] 	       113	serve.c	FUNCTION_5	CALL_2
0x456	      0xbe00000000	                              mov esi, 0	       113	serve.c	FUNCTION_5	CALL_2
0x45b	          0x4889d7	                            mov rdi, rdx	       113	serve.c	FUNCTION_5	CALL_2
0x45e	            0xffd0	                                call rax	       113	serve.c	FUNCTION_5	CALL_2
0x460	            0x85c0	                           test eax, eax	       113	serve.c	FUNCTION_5	CALL_2
0x462	            0x7407	                            je 0x40004ab	       113	serve.c	FUNCTION_5	CALL_2
0x464	      0xb801000000	                              mov eax, 1	       113	serve.c	FUNCTION_5	CALL_2
0x469	            0xeb05	                           jmp 0x40004b0	       113	serve.c	FUNCTION_5	CALL_2
0x46b	      0xb800000000	                              mov eax, 0	       113	serve.c	FUNCTION_5	CALL_2
0x470	              0xc9	                                   leave	       114	serve.c	FUNCTION_5
0x471	              0xc3	                                     ret	       114	serve.c	FUNCTION_5
get_capability	WHILE,0:ELSE,0:functions,0:IF,2:SWITCH,0:CALL,2:FOR,1:DO,0	51
0x374	              0x55	                                push rbp	        93	serve.c	FUNCTION_4
0x375	          0x4889e5	                            mov rbp, rsp	        93	serve.c	FUNCTION_4
0x378	        0x4883ec30	                           sub rsp, 0x30	        93	serve.c	FUNCTION_4
0x37c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        93	serve.c	FUNCTION_4
0x380	    0x64488b042528	                mov rax, qword fs:[0x28]	        93	serve.c	FUNCTION_4
0x389	        0x488945f8	                mov qword [rbp - 8], rax	        93	serve.c	FUNCTION_4
0x38d	            0x31c0	                            xor eax, eax	        93	serve.c	FUNCTION_4
0x38f	      0x48837dd800	               cmp qword [rbp - 0x28], 0	        96	serve.c	FUNCTION_4	IF_1
0x394	            0x7507	                           jne 0x40003dd	        96	serve.c	FUNCTION_4	IF_1
0x396	      0xb800000000	                              mov eax, 0	        97	serve.c	FUNCTION_4	IF_1
0x39b	            0xeb71	                           jmp 0x400044e	        97	serve.c	FUNCTION_4	IF_1
0x39d	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	        99	serve.c	FUNCTION_4	FOR_1	CALL_1
0x3a4	            0xeb5b	                           jmp 0x4000441	        99	serve.c	FUNCTION_4	FOR_1	CALL_1
0x3a6	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       100	serve.c	FUNCTION_4	FOR_1
0x3a9	          0x4863d0	                         movsxd rdx, eax	       100	serve.c	FUNCTION_4	FOR_1
0x3ac	          0x4889d0	                            mov rax, rdx	       100	serve.c	FUNCTION_4	FOR_1
0x3af	          0x4801c0	                            add rax, rax	       100	serve.c	FUNCTION_4	FOR_1
0x3b2	          0x4801d0	                            add rax, rdx	       100	serve.c	FUNCTION_4	FOR_1
0x3b5	        0x48c1e003	                              shl rax, 3	       100	serve.c	FUNCTION_4	FOR_1
0x3b9	    0x480500000000	                              add rax, 0	       100	serve.c	FUNCTION_4	FOR_1
0x3bf	        0x488945f0	             mov qword [rbp - 0x10], rax	       100	serve.c	FUNCTION_4	FOR_1
0x3c3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       102	serve.c	FUNCTION_4	FOR_1	IF_2	CALL_2
0x3c7	          0x488b08	                    mov rcx, qword [rax]	       102	serve.c	FUNCTION_4	FOR_1	IF_2	CALL_2
0x3ca	        0x488d55e8	                   lea rdx, [rbp - 0x18]	       102	serve.c	FUNCTION_4	FOR_1	IF_2	CALL_2
0x3ce	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       102	serve.c	FUNCTION_4	FOR_1	IF_2	CALL_2
0x3d2	          0x4889ce	                            mov rsi, rcx	       102	serve.c	FUNCTION_4	FOR_1	IF_2	CALL_2
0x3d5	          0x4889c7	                            mov rdi, rax	       102	serve.c	FUNCTION_4	FOR_1	IF_2	CALL_2
0x3d8	      0xe823fcffff	                    call sym.skip_prefix	       102	serve.c	FUNCTION_4	FOR_1	IF_2	CALL_2
0x3dd	            0x85c0	                           test eax, eax	       102	serve.c	FUNCTION_4	FOR_1	IF_2	CALL_2
0x3df	            0x741c	                            je 0x400043d	       102	serve.c	FUNCTION_4	FOR_1	IF_2	CALL_2
0x3e1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       102	serve.c	FUNCTION_4	FOR_1	IF_2	CALL_2
0x3e5	           0xfb600	                   movzx eax, byte [rax]	       102	serve.c	FUNCTION_4	FOR_1	IF_2	CALL_2
0x3e8	            0x84c0	                             test al, al	       102	serve.c	FUNCTION_4	FOR_1	IF_2	CALL_2
0x3ea	            0x740b	                            je 0x4000437	       102	serve.c	FUNCTION_4	FOR_1	IF_2	CALL_2
0x3ec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       102	serve.c	FUNCTION_4	FOR_1	IF_2	CALL_2
0x3f0	           0xfb600	                   movzx eax, byte [rax]	       102	serve.c	FUNCTION_4	FOR_1	IF_2	CALL_2
0x3f3	            0x3c3d	                            cmp al, 0x3d	       102	serve.c	FUNCTION_4	FOR_1	IF_2	CALL_2
0x3f5	            0x7506	                           jne 0x400043d	       102	serve.c	FUNCTION_4	FOR_1	IF_2	CALL_2
0x3f7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       103	serve.c	FUNCTION_4	FOR_1	IF_2
0x3fb	            0xeb11	                           jmp 0x400044e	       103	serve.c	FUNCTION_4	FOR_1	IF_2
0x3fd	        0x8345e401	               add dword [rbp - 0x1c], 1	        99	serve.c	FUNCTION_4	FOR_1	CALL_1
0x401	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        99	serve.c	FUNCTION_4	FOR_1	CALL_1
0x404	          0x83f803	                              cmp eax, 3	        99	serve.c	FUNCTION_4	FOR_1	CALL_1
0x407	            0x769d	                           jbe 0x40003e6	        99	serve.c	FUNCTION_4	FOR_1	CALL_1
0x409	      0xb800000000	                              mov eax, 0	       106	serve.c	FUNCTION_4
0x40e	        0x488b75f8	                mov rsi, qword [rbp - 8]	       107	serve.c	FUNCTION_4
0x412	    0x644833342528	                xor rsi, qword fs:[0x28]	       107	serve.c	FUNCTION_4
0x41b	            0x7405	                            je 0x4000462	       107	serve.c	FUNCTION_4
0x41d	      0xe800000000	                          call 0x4000462	       107	serve.c	FUNCTION_4
0x422	              0xc9	                                   leave	       107	serve.c	FUNCTION_4
0x423	              0xc3	                                     ret	       107	serve.c	FUNCTION_4
advertise_capabilities	WHILE,0:ELSE,0:functions,0:IF,2:SWITCH,0:CALL,12:FOR,1:DO,0	85
0x211	              0x55	                                push rbp	        63	serve.c	FUNCTION_3
0x212	          0x4889e5	                            mov rbp, rsp	        63	serve.c	FUNCTION_3
0x215	        0x4883ec50	                           sub rsp, 0x50	        63	serve.c	FUNCTION_3
0x219	    0x64488b042528	                mov rax, qword fs:[0x28]	        63	serve.c	FUNCTION_3
0x222	        0x488945f8	                mov qword [rbp - 8], rax	        63	serve.c	FUNCTION_3
0x226	            0x31c0	                            xor eax, eax	        63	serve.c	FUNCTION_3
0x228	    0x48c745c00000	               mov qword [rbp - 0x40], 0	        64	serve.c	FUNCTION_3
0x230	    0x48c745c80000	               mov qword [rbp - 0x38], 0	        64	serve.c	FUNCTION_3
0x238	    0x48c745d00000	               mov qword [rbp - 0x30], 0	        64	serve.c	FUNCTION_3
0x240	    0x48c745e00000	               mov qword [rbp - 0x20], 0	        65	serve.c	FUNCTION_3
0x248	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        65	serve.c	FUNCTION_3
0x250	    0x48c745f00000	               mov qword [rbp - 0x10], 0	        65	serve.c	FUNCTION_3
0x258	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	        68	serve.c	FUNCTION_3	FOR_1	CALL_1
0x25f	      0xe9cb000000	                           jmp 0x400036f	        68	serve.c	FUNCTION_3	FOR_1	CALL_1
0x264	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	        69	serve.c	FUNCTION_3	FOR_1
0x267	          0x4863d0	                         movsxd rdx, eax	        69	serve.c	FUNCTION_3	FOR_1
0x26a	          0x4889d0	                            mov rax, rdx	        69	serve.c	FUNCTION_3	FOR_1
0x26d	          0x4801c0	                            add rax, rax	        69	serve.c	FUNCTION_3	FOR_1
0x270	          0x4801d0	                            add rax, rdx	        69	serve.c	FUNCTION_3	FOR_1
0x273	        0x48c1e003	                              shl rax, 3	        69	serve.c	FUNCTION_3	FOR_1
0x277	    0x480500000000	                              add rax, 0	        69	serve.c	FUNCTION_3	FOR_1
0x27d	        0x488945b8	             mov qword [rbp - 0x48], rax	        69	serve.c	FUNCTION_3	FOR_1
0x281	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        71	serve.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x285	        0x488b4008	                mov rax, qword [rax + 8]	        71	serve.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x289	    0x488b15000000	            mov rdx, qword [0x040002d0] 	        71	serve.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x290	        0x488d4de0	                   lea rcx, [rbp - 0x20]	        71	serve.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x294	          0x4889ce	                            mov rsi, rcx	        71	serve.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x297	          0x4889d7	                            mov rdi, rdx	        71	serve.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x29a	            0xffd0	                                call rax	        71	serve.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x29c	            0x85c0	                           test eax, eax	        71	serve.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x29e	            0x7469	                            je 0x4000349	        71	serve.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x2a0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        72	serve.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x2a4	          0x488b10	                    mov rdx, qword [rax]	        72	serve.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x2a7	        0x488d45c0	                   lea rax, [rbp - 0x40]	        72	serve.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x2ab	          0x4889d6	                            mov rsi, rdx	        72	serve.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x2ae	          0x4889c7	                            mov rdi, rax	        72	serve.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x2b1	      0xe8defeffff	                  call sym.strbuf_addstr	        72	serve.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x2b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        74	serve.c	FUNCTION_3	FOR_1	IF_1	IF_2
0x2ba	          0x4885c0	                           test rax, rax	        74	serve.c	FUNCTION_3	FOR_1	IF_1	IF_2
0x2bd	            0x7424	                            je 0x4000323	        74	serve.c	FUNCTION_3	FOR_1	IF_1	IF_2
0x2bf	        0x488d45c0	                   lea rax, [rbp - 0x40]	        75	serve.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_4
0x2c3	      0xbe3d000000	                           mov esi, 0x3d	        75	serve.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_4
0x2c8	          0x4889c7	                            mov rdi, rax	        75	serve.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_4
0x2cb	      0xe856feffff	                   call sym.strbuf_addch	        75	serve.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_4
0x2d0	        0x488d55e0	                   lea rdx, [rbp - 0x20]	        76	serve.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_5
0x2d4	        0x488d45c0	                   lea rax, [rbp - 0x40]	        76	serve.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_5
0x2d8	          0x4889d6	                            mov rsi, rdx	        76	serve.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_5
0x2db	          0x4889c7	                            mov rdi, rax	        76	serve.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_5
0x2de	      0xe800000000	                          call 0x4000323	        76	serve.c	FUNCTION_3	FOR_1	IF_1	IF_2	CALL_5
0x2e3	        0x488d45c0	                   lea rax, [rbp - 0x40]	        79	serve.c	FUNCTION_3	FOR_1	IF_1	CALL_6
0x2e7	      0xbe0a000000	                            mov esi, 0xa	        79	serve.c	FUNCTION_3	FOR_1	IF_1	CALL_6
0x2ec	          0x4889c7	                            mov rdi, rax	        79	serve.c	FUNCTION_3	FOR_1	IF_1	CALL_6
0x2ef	      0xe832feffff	                   call sym.strbuf_addch	        79	serve.c	FUNCTION_3	FOR_1	IF_1	CALL_6
0x2f4	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	        80	serve.c	FUNCTION_3	FOR_1	IF_1	CALL_7
0x2f8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        80	serve.c	FUNCTION_3	FOR_1	IF_1	CALL_7
0x2fc	          0x4889c6	                            mov rsi, rax	        80	serve.c	FUNCTION_3	FOR_1	IF_1	CALL_7
0x2ff	      0xbf01000000	                              mov edi, 1	        80	serve.c	FUNCTION_3	FOR_1	IF_1	CALL_7
0x304	      0xe800000000	                          call 0x4000349	        80	serve.c	FUNCTION_3	FOR_1	IF_1	CALL_7
0x309	        0x488d45c0	                   lea rax, [rbp - 0x40]	        83	serve.c	FUNCTION_3	FOR_1	CALL_8
0x30d	      0xbe00000000	                              mov esi, 0	        83	serve.c	FUNCTION_3	FOR_1	CALL_8
0x312	          0x4889c7	                            mov rdi, rax	        83	serve.c	FUNCTION_3	FOR_1	CALL_8
0x315	      0xe872fdffff	                  call sym.strbuf_setlen	        83	serve.c	FUNCTION_3	FOR_1	CALL_8
0x31a	        0x488d45e0	                   lea rax, [rbp - 0x20]	        84	serve.c	FUNCTION_3	FOR_1	CALL_9
0x31e	      0xbe00000000	                              mov esi, 0	        84	serve.c	FUNCTION_3	FOR_1	CALL_9
0x323	          0x4889c7	                            mov rdi, rax	        84	serve.c	FUNCTION_3	FOR_1	CALL_9
0x326	      0xe861fdffff	                  call sym.strbuf_setlen	        84	serve.c	FUNCTION_3	FOR_1	CALL_9
0x32b	        0x8345b401	               add dword [rbp - 0x4c], 1	        68	serve.c	FUNCTION_3	FOR_1	CALL_1
0x32f	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	        68	serve.c	FUNCTION_3	FOR_1	CALL_1
0x332	          0x83f803	                              cmp eax, 3	        68	serve.c	FUNCTION_3	FOR_1	CALL_1
0x335	     0xf8629ffffff	                           jbe 0x40002a4	        68	serve.c	FUNCTION_3	FOR_1	CALL_1
0x33b	      0xbf01000000	                              mov edi, 1	        87	serve.c	FUNCTION_3	CALL_10
0x340	      0xe800000000	                          call 0x4000385	        87	serve.c	FUNCTION_3	CALL_10
0x345	        0x488d45c0	                   lea rax, [rbp - 0x40]	        88	serve.c	FUNCTION_3	CALL_11
0x349	          0x4889c7	                            mov rdi, rax	        88	serve.c	FUNCTION_3	CALL_11
0x34c	      0xe800000000	                          call 0x4000391	        88	serve.c	FUNCTION_3	CALL_11
0x351	        0x488d45e0	                   lea rax, [rbp - 0x20]	        89	serve.c	FUNCTION_3	CALL_12
0x355	          0x4889c7	                            mov rdi, rax	        89	serve.c	FUNCTION_3	CALL_12
0x358	      0xe800000000	                          call 0x400039d	        89	serve.c	FUNCTION_3	CALL_12
0x35d	              0x90	                                     nop	        90	serve.c	FUNCTION_3
0x35e	        0x488b45f8	                mov rax, qword [rbp - 8]	        90	serve.c	FUNCTION_3
0x362	    0x644833042528	                xor rax, qword fs:[0x28]	        90	serve.c	FUNCTION_3
0x36b	            0x7405	                            je 0x40003b2	        90	serve.c	FUNCTION_3
0x36d	      0xe800000000	                          call 0x40003b2	        90	serve.c	FUNCTION_3
0x372	              0xc9	                                   leave	        90	serve.c	FUNCTION_3
0x373	              0xc3	                                     ret	        90	serve.c	FUNCTION_3
skip_prefix	WHILE,0:ELSE,0:functions,0:IF,1:SWITCH,0:CALL,0:FOR,0:DO,1	27
0x0	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_27
0x1	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_27
0x4	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_27
0x8	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_27
0xc	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_27
0x10	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_27	DO_1	IF_1
0x14	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_27	DO_1	IF_1
0x17	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_27	DO_1	IF_1
0x19	            0x7512	                           jne 0x400006d	       484	git-compat-util.h	FUNCTION_27	DO_1	IF_1
0x1b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_27	DO_1	IF_1
0x1f	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_27	DO_1	IF_1
0x23	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_27	DO_1	IF_1
0x26	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_27	DO_1	IF_1
0x2b	            0xeb27	                           jmp 0x4000094	       486	git-compat-util.h	FUNCTION_27	DO_1	IF_1
0x2d	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_27	DO_1
0x31	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_27	DO_1
0x35	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_27	DO_1
0x39	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_27	DO_1
0x3c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_27	DO_1
0x40	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_27	DO_1
0x44	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_27	DO_1
0x48	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_27	DO_1
0x4b	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_27	DO_1
0x4d	            0x74c1	                            je 0x4000050	       488	git-compat-util.h	FUNCTION_27	DO_1
0x4f	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_27
0x54	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_27
0x55	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_27
agent_advertise	WHILE,0:ELSE,0:functions,0:IF,1:SWITCH,0:CALL,2:FOR,0:DO,0	16
0x1dc	              0x55	                                push rbp	        19	serve.c	FUNCTION_2
0x1dd	          0x4889e5	                            mov rbp, rsp	        19	serve.c	FUNCTION_2
0x1e0	        0x4883ec10	                           sub rsp, 0x10	        19	serve.c	FUNCTION_2
0x1e4	        0x48897df8	                mov qword [rbp - 8], rdi	        19	serve.c	FUNCTION_2
0x1e8	        0x488975f0	             mov qword [rbp - 0x10], rsi	        19	serve.c	FUNCTION_2
0x1ec	      0x48837df000	               cmp qword [rbp - 0x10], 0	        20	serve.c	FUNCTION_2	IF_1
0x1f1	            0x7417	                            je 0x400024a	        20	serve.c	FUNCTION_2	IF_1
0x1f3	      0xe800000000	                          call 0x4000238	        21	serve.c	FUNCTION_2	CALL_2
0x1f8	          0x4889c2	                            mov rdx, rax	        21	serve.c	FUNCTION_2	CALL_2
0x1fb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        21	serve.c	FUNCTION_2	CALL_2
0x1ff	          0x4889d6	                            mov rsi, rdx	        21	serve.c	FUNCTION_2	CALL_2
0x202	          0x4889c7	                            mov rdi, rax	        21	serve.c	FUNCTION_2	CALL_2
0x205	      0xe88affffff	                  call sym.strbuf_addstr	        21	serve.c	FUNCTION_2	CALL_2
0x20a	      0xb801000000	                              mov eax, 1	        22	serve.c	FUNCTION_2
0x20f	              0xc9	                                   leave	        23	serve.c	FUNCTION_2
0x210	              0xc3	                                     ret	        23	serve.c	FUNCTION_2
always_advertise	WHILE,0:ELSE,0:functions,0:IF,0:SWITCH,0:CALL,0:FOR,0:DO,0	7
0x1c9	              0x55	                                push rbp	        13	serve.c	FUNCTION_1
0x1ca	          0x4889e5	                            mov rbp, rsp	        13	serve.c	FUNCTION_1
0x1cd	        0x48897df8	                mov qword [rbp - 8], rdi	        13	serve.c	FUNCTION_1
0x1d1	        0x488975f0	             mov qword [rbp - 0x10], rsi	        13	serve.c	FUNCTION_1
0x1d5	      0xb801000000	                              mov eax, 1	        14	serve.c	FUNCTION_1
0x1da	              0x5d	                                 pop rbp	        15	serve.c	FUNCTION_1
0x1db	              0xc3	                                     ret	        15	serve.c	FUNCTION_1
strbuf_addch	WHILE,0:ELSE,0:functions,0:IF,1:SWITCH,0:CALL,2:FOR,0:DO,0	33
0x126	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_13
0x127	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_13
0x12a	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_13
0x12e	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_13
0x132	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_13
0x135	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_13	IF_1	CALL_1
0x139	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_13	IF_1	CALL_1
0x13c	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_13	IF_1	CALL_1
0x141	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_13	IF_1	CALL_1
0x144	            0x7511	                           jne 0x4000197	       227	strbuf.h	FUNCTION_13	IF_1	CALL_1
0x146	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_13	CALL_2
0x14a	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_13	CALL_2
0x14f	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_13	CALL_2
0x152	      0xe800000000	                          call 0x4000197	       228	strbuf.h	FUNCTION_13	CALL_2
0x157	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_13
0x15b	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_13
0x15f	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_13
0x163	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_13
0x167	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_13
0x16b	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_13
0x16f	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_13
0x173	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_13
0x176	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_13
0x179	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_13
0x17b	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_13
0x17f	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_13
0x183	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_13
0x187	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_13
0x18b	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_13
0x18e	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_13
0x191	              0x90	                                     nop	       231	strbuf.h	FUNCTION_13
0x192	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_13
0x193	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_13
