cmd_for_each_ref	SWITCH,0:DO,0:IF,5:FOR,1:functions,0:ELSE,0:WHILE,0:CALL,49	277
0xb	              0x55	                                push rbp	        18	for-each-ref.c	FUNCTION_1
0xc	          0x4889e5	                            mov rbp, rsp	        18	for-each-ref.c	FUNCTION_1
0xf	    0x4881ecf00400	                          sub rsp, 0x4f0	        18	for-each-ref.c	FUNCTION_1
0x16	    0x89bd2cfbffff	            mov dword [rbp - 0x4d4], edi	        18	for-each-ref.c	FUNCTION_1
0x1c	    0x4889b520fbff	            mov qword [rbp - 0x4e0], rsi	        18	for-each-ref.c	FUNCTION_1
0x23	    0x48899518fbff	            mov qword [rbp - 0x4e8], rdx	        18	for-each-ref.c	FUNCTION_1
0x2a	    0x64488b042528	                mov rax, qword fs:[0x28]	        18	for-each-ref.c	FUNCTION_1
0x33	        0x488945f8	                mov qword [rbp - 8], rax	        18	for-each-ref.c	FUNCTION_1
0x37	            0x31c0	                            xor eax, eax	        18	for-each-ref.c	FUNCTION_1
0x39	    0x48c78540fbff	              mov qword [rbp - 0x4c0], 0	        20	for-each-ref.c	FUNCTION_1
0x44	    0x488d8540fbff	                  lea rax, [rbp - 0x4c0]	        20	for-each-ref.c	FUNCTION_1
0x4b	    0x48898548fbff	            mov qword [rbp - 0x4b8], rax	        20	for-each-ref.c	FUNCTION_1
0x52	    0xc78534fbffff	              mov dword [rbp - 0x4cc], 0	        21	for-each-ref.c	FUNCTION_1
0x5c	    0xc78538fbffff	              mov dword [rbp - 0x4c8], 0	        21	for-each-ref.c	FUNCTION_1
0x66	    0x48c78570fbff	              mov qword [rbp - 0x490], 0	        24	for-each-ref.c	FUNCTION_1
0x71	    0x48c78578fbff	              mov qword [rbp - 0x488], 0	        24	for-each-ref.c	FUNCTION_1
0x7c	    0x48c78580fbff	              mov qword [rbp - 0x480], 0	        24	for-each-ref.c	FUNCTION_1
0x87	    0xc7857cfbffff	    mov dword [rbp - 0x484], 0xffffffff 	        24	for-each-ref.c	FUNCTION_1
0x91	    0x488d95f0fbff	                  lea rdx, [rbp - 0x410]	        26	for-each-ref.c	FUNCTION_1
0x98	      0xb800000000	                              mov eax, 0	        26	for-each-ref.c	FUNCTION_1
0x9d	      0xb980000000	                           mov ecx, 0x80	        26	for-each-ref.c	FUNCTION_1
0xa2	          0x4889d7	                            mov rdi, rdx	        26	for-each-ref.c	FUNCTION_1
0xa5	          0xf348ab	              rep stosq qword [rdi], rax	        26	for-each-ref.c	FUNCTION_1
0xa8	    0xc785f0fbffff	              mov dword [rbp - 0x410], 4	        26	for-each-ref.c	FUNCTION_1
0xb2	    0xc785f4fbffff	          mov dword [rbp - 0x40c], 0x73 	        26	for-each-ref.c	FUNCTION_1
0xbc	    0x48c785f8fbff	              mov qword [rbp - 0x408], 0	        26	for-each-ref.c	FUNCTION_1
0xc7	    0x488d8570fbff	                  lea rax, [rbp - 0x490]	        26	for-each-ref.c	FUNCTION_1
0xce	        0x4883c008	                              add rax, 8	        26	for-each-ref.c	FUNCTION_1
0xd2	    0x48898500fcff	            mov qword [rbp - 0x400], rax	        26	for-each-ref.c	FUNCTION_1
0xd9	    0x48c78510fcff	              mov qword [rbp - 0x3f0], 0	        26	for-each-ref.c	FUNCTION_1
0xe4	    0xc78518fcffff	              mov dword [rbp - 0x3e8], 2	        26	for-each-ref.c	FUNCTION_1
0xee	    0x48c78528fcff	              mov qword [rbp - 0x3d8], 1	        26	for-each-ref.c	FUNCTION_1
0xf9	    0xc78530fcffff	              mov dword [rbp - 0x3d0], 4	        26	for-each-ref.c	FUNCTION_1
0x103	    0xc78534fcffff	          mov dword [rbp - 0x3cc], 0x70 	        26	for-each-ref.c	FUNCTION_1
0x10d	    0x48c78538fcff	              mov qword [rbp - 0x3c8], 0	        26	for-each-ref.c	FUNCTION_1
0x118	    0x488d8570fbff	                  lea rax, [rbp - 0x490]	        26	for-each-ref.c	FUNCTION_1
0x11f	        0x4883c008	                              add rax, 8	        26	for-each-ref.c	FUNCTION_1
0x123	    0x48898540fcff	            mov qword [rbp - 0x3c0], rax	        26	for-each-ref.c	FUNCTION_1
0x12a	    0x48c78550fcff	              mov qword [rbp - 0x3b0], 0	        26	for-each-ref.c	FUNCTION_1
0x135	    0xc78558fcffff	              mov dword [rbp - 0x3a8], 2	        26	for-each-ref.c	FUNCTION_1
0x13f	    0x48c78568fcff	              mov qword [rbp - 0x398], 2	        26	for-each-ref.c	FUNCTION_1
0x14a	    0xc78570fcffff	              mov dword [rbp - 0x390], 4	        26	for-each-ref.c	FUNCTION_1
0x154	    0x48c78578fcff	              mov qword [rbp - 0x388], 0	        26	for-each-ref.c	FUNCTION_1
0x15f	    0x488d8570fbff	                  lea rax, [rbp - 0x490]	        26	for-each-ref.c	FUNCTION_1
0x166	        0x4883c008	                              add rax, 8	        26	for-each-ref.c	FUNCTION_1
0x16a	    0x48898580fcff	            mov qword [rbp - 0x380], rax	        26	for-each-ref.c	FUNCTION_1
0x171	    0x48c78590fcff	              mov qword [rbp - 0x370], 0	        26	for-each-ref.c	FUNCTION_1
0x17c	    0xc78598fcffff	              mov dword [rbp - 0x368], 2	        26	for-each-ref.c	FUNCTION_1
0x186	    0x48c785a8fcff	              mov qword [rbp - 0x358], 4	        26	for-each-ref.c	FUNCTION_1
0x191	    0xc785b0fcffff	              mov dword [rbp - 0x350], 4	        26	for-each-ref.c	FUNCTION_1
0x19b	    0x48c785b8fcff	              mov qword [rbp - 0x348], 0	        26	for-each-ref.c	FUNCTION_1
0x1a6	    0x488d8570fbff	                  lea rax, [rbp - 0x490]	        26	for-each-ref.c	FUNCTION_1
0x1ad	        0x4883c008	                              add rax, 8	        26	for-each-ref.c	FUNCTION_1
0x1b1	    0x488985c0fcff	            mov qword [rbp - 0x340], rax	        26	for-each-ref.c	FUNCTION_1
0x1b8	    0x48c785d0fcff	              mov qword [rbp - 0x330], 0	        26	for-each-ref.c	FUNCTION_1
0x1c3	    0xc785d8fcffff	              mov dword [rbp - 0x328], 2	        26	for-each-ref.c	FUNCTION_1
0x1cd	    0x48c785e8fcff	              mov qword [rbp - 0x318], 8	        26	for-each-ref.c	FUNCTION_1
0x1d8	    0xc785f0fcffff	              mov dword [rbp - 0x310], 2	        26	for-each-ref.c	FUNCTION_1
0x1e2	    0x48c78510fdff	              mov qword [rbp - 0x2f0], 0	        26	for-each-ref.c	FUNCTION_1
0x1ed	    0xc78530fdffff	            mov dword [rbp - 0x2d0], 0xa	        26	for-each-ref.c	FUNCTION_1
0x1f7	    0x48c78538fdff	              mov qword [rbp - 0x2c8], 0	        26	for-each-ref.c	FUNCTION_1
0x202	    0x488d8534fbff	                  lea rax, [rbp - 0x4cc]	        26	for-each-ref.c	FUNCTION_1
0x209	    0x48898540fdff	            mov qword [rbp - 0x2c0], rax	        26	for-each-ref.c	FUNCTION_1
0x210	    0x48c78548fdff	              mov qword [rbp - 0x2b8], 0	        26	for-each-ref.c	FUNCTION_1
0x21b	    0x48c78550fdff	              mov qword [rbp - 0x2b0], 0	        26	for-each-ref.c	FUNCTION_1
0x226	    0xc78570fdffff	              mov dword [rbp - 0x290], 9	        26	for-each-ref.c	FUNCTION_1
0x230	    0x48c78578fdff	              mov qword [rbp - 0x288], 0	        26	for-each-ref.c	FUNCTION_1
0x23b	    0x488d8570fbff	                  lea rax, [rbp - 0x490]	        26	for-each-ref.c	FUNCTION_1
0x242	    0x48898580fdff	            mov qword [rbp - 0x280], rax	        26	for-each-ref.c	FUNCTION_1
0x249	    0x48c78588fdff	              mov qword [rbp - 0x278], 0	        26	for-each-ref.c	FUNCTION_1
0x254	    0x48c78590fdff	              mov qword [rbp - 0x270], 0	        26	for-each-ref.c	FUNCTION_1
0x25f	    0xc785b0fdffff	           mov dword [rbp - 0x250], 0xc 	        26	for-each-ref.c	FUNCTION_1
0x269	    0x48c785b8fdff	              mov qword [rbp - 0x248], 0	        26	for-each-ref.c	FUNCTION_1
0x274	    0x488d8570fbff	                  lea rax, [rbp - 0x490]	        26	for-each-ref.c	FUNCTION_1
0x27b	        0x4883c00c	                            add rax, 0xc	        26	for-each-ref.c	FUNCTION_1
0x27f	    0x488985c0fdff	            mov qword [rbp - 0x240], rax	        26	for-each-ref.c	FUNCTION_1
0x286	    0x48c785c8fdff	              mov qword [rbp - 0x238], 0	        26	for-each-ref.c	FUNCTION_1
0x291	    0x48c785d0fdff	              mov qword [rbp - 0x230], 0	        26	for-each-ref.c	FUNCTION_1
0x29c	    0xc785d8fdffff	              mov dword [rbp - 0x228], 1	        26	for-each-ref.c	FUNCTION_1
0x2a6	    0x48c785e0fdff	              mov qword [rbp - 0x220], 0	        26	for-each-ref.c	FUNCTION_1
0x2b1	      0xb800000000	                              mov eax, 0	        39	for-each-ref.c	FUNCTION_1	CALL_16
0x2b6	    0x488985e8fdff	            mov qword [rbp - 0x218], rax	        26	for-each-ref.c	FUNCTION_1
0x2bd	    0xc785f0fdffff	           mov dword [rbp - 0x210], 0xc 	        26	for-each-ref.c	FUNCTION_1
0x2c7	    0x48c785f8fdff	              mov qword [rbp - 0x208], 0	        26	for-each-ref.c	FUNCTION_1
0x2d2	    0x488b8548fbff	            mov rax, qword [rbp - 0x4b8]	        26	for-each-ref.c	FUNCTION_1
0x2d9	    0x48898500feff	            mov qword [rbp - 0x200], rax	        26	for-each-ref.c	FUNCTION_1
0x2e0	    0x48c78508feff	              mov qword [rbp - 0x1f8], 0	        26	for-each-ref.c	FUNCTION_1
0x2eb	    0x48c78510feff	              mov qword [rbp - 0x1f0], 0	        26	for-each-ref.c	FUNCTION_1
0x2f6	    0x48c78520feff	              mov qword [rbp - 0x1e0], 0	        26	for-each-ref.c	FUNCTION_1
0x301	    0xc78530feffff	           mov dword [rbp - 0x1d0], 0xc 	        26	for-each-ref.c	FUNCTION_1
0x30b	    0x48c78538feff	              mov qword [rbp - 0x1c8], 0	        26	for-each-ref.c	FUNCTION_1
0x316	    0x488d8590fbff	                  lea rax, [rbp - 0x470]	        26	for-each-ref.c	FUNCTION_1
0x31d	        0x4883c008	                              add rax, 8	        26	for-each-ref.c	FUNCTION_1
0x321	    0x48898540feff	            mov qword [rbp - 0x1c0], rax	        26	for-each-ref.c	FUNCTION_1
0x328	    0x48c78548feff	              mov qword [rbp - 0x1b8], 0	        26	for-each-ref.c	FUNCTION_1
0x333	    0x48c78550feff	              mov qword [rbp - 0x1b0], 0	        26	for-each-ref.c	FUNCTION_1
0x33e	    0x48c78560feff	              mov qword [rbp - 0x1a0], 0	        26	for-each-ref.c	FUNCTION_1
0x349	    0xc78570feffff	           mov dword [rbp - 0x190], 0xc 	        26	for-each-ref.c	FUNCTION_1
0x353	    0x48c78578feff	              mov qword [rbp - 0x188], 0	        26	for-each-ref.c	FUNCTION_1
0x35e	    0x488d8590fbff	                  lea rax, [rbp - 0x470]	        26	for-each-ref.c	FUNCTION_1
0x365	    0x48898580feff	            mov qword [rbp - 0x180], rax	        26	for-each-ref.c	FUNCTION_1
0x36c	    0x48c78588feff	              mov qword [rbp - 0x178], 0	        26	for-each-ref.c	FUNCTION_1
0x377	    0x48c78590feff	              mov qword [rbp - 0x170], 0	        26	for-each-ref.c	FUNCTION_1
0x382	    0xc78598feffff	          mov dword [rbp - 0x168], 0x14 	        26	for-each-ref.c	FUNCTION_1
0x38c	    0x48c785a0feff	              mov qword [rbp - 0x160], 0	        26	for-each-ref.c	FUNCTION_1
0x397	      0xb800000000	                              mov eax, 0	        45	for-each-ref.c	FUNCTION_1	CALL_24
0x39c	    0x488985a8feff	            mov qword [rbp - 0x158], rax	        26	for-each-ref.c	FUNCTION_1
0x3a3	    0xc785b0feffff	           mov dword [rbp - 0x150], 0xc 	        26	for-each-ref.c	FUNCTION_1
0x3ad	    0x48c785b8feff	              mov qword [rbp - 0x148], 0	        26	for-each-ref.c	FUNCTION_1
0x3b8	    0x488d8590fbff	                  lea rax, [rbp - 0x470]	        26	for-each-ref.c	FUNCTION_1
0x3bf	    0x488985c0feff	            mov qword [rbp - 0x140], rax	        26	for-each-ref.c	FUNCTION_1
0x3c6	    0x48c785c8feff	              mov qword [rbp - 0x138], 0	        26	for-each-ref.c	FUNCTION_1
0x3d1	    0x48c785d0feff	              mov qword [rbp - 0x130], 0	        26	for-each-ref.c	FUNCTION_1
0x3dc	    0xc785d8feffff	          mov dword [rbp - 0x128], 0x14 	        26	for-each-ref.c	FUNCTION_1
0x3e6	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	        26	for-each-ref.c	FUNCTION_1
0x3f1	      0xb800000000	                              mov eax, 0	        46	for-each-ref.c	FUNCTION_1	CALL_26
0x3f6	    0x488985e8feff	            mov qword [rbp - 0x118], rax	        26	for-each-ref.c	FUNCTION_1
0x3fd	    0xc785f0feffff	           mov dword [rbp - 0x110], 0xc 	        26	for-each-ref.c	FUNCTION_1
0x407	    0x48c785f8feff	              mov qword [rbp - 0x108], 0	        26	for-each-ref.c	FUNCTION_1
0x412	    0x488d8590fbff	                  lea rax, [rbp - 0x470]	        26	for-each-ref.c	FUNCTION_1
0x419	        0x4883c020	                           add rax, 0x20	        26	for-each-ref.c	FUNCTION_1
0x41d	    0x48898500ffff	            mov qword [rbp - 0x100], rax	        26	for-each-ref.c	FUNCTION_1
0x424	    0x48c78508ffff	               mov qword [rbp - 0xf8], 0	        26	for-each-ref.c	FUNCTION_1
0x42f	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	        26	for-each-ref.c	FUNCTION_1
0x43a	    0xc78518ffffff	           mov dword [rbp - 0xe8], 0x14 	        26	for-each-ref.c	FUNCTION_1
0x444	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	        26	for-each-ref.c	FUNCTION_1
0x44f	      0xb800000000	                              mov eax, 0	        47	for-each-ref.c	FUNCTION_1	CALL_28
0x454	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	        26	for-each-ref.c	FUNCTION_1
0x45b	    0xc78530ffffff	            mov dword [rbp - 0xd0], 0xc 	        26	for-each-ref.c	FUNCTION_1
0x465	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	        26	for-each-ref.c	FUNCTION_1
0x470	    0x488d8590fbff	                  lea rax, [rbp - 0x470]	        26	for-each-ref.c	FUNCTION_1
0x477	        0x4883c028	                           add rax, 0x28	        26	for-each-ref.c	FUNCTION_1
0x47b	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	        26	for-each-ref.c	FUNCTION_1
0x482	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	        26	for-each-ref.c	FUNCTION_1
0x48d	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	        26	for-each-ref.c	FUNCTION_1
0x498	    0xc78558ffffff	           mov dword [rbp - 0xa8], 0x14 	        26	for-each-ref.c	FUNCTION_1
0x4a2	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	        26	for-each-ref.c	FUNCTION_1
0x4ad	      0xb800000000	                              mov eax, 0	        48	for-each-ref.c	FUNCTION_1	CALL_30
0x4b2	    0x48898568ffff	             mov qword [rbp - 0x98], rax	        26	for-each-ref.c	FUNCTION_1
0x4b9	    0xc78570ffffff	               mov dword [rbp - 0x90], 7	        26	for-each-ref.c	FUNCTION_1
0x4c3	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	        26	for-each-ref.c	FUNCTION_1
0x4ce	    0x488d8538fbff	                  lea rax, [rbp - 0x4c8]	        26	for-each-ref.c	FUNCTION_1
0x4d5	        0x48894580	             mov qword [rbp - 0x80], rax	        26	for-each-ref.c	FUNCTION_1
0x4d9	    0x48c745900000	               mov qword [rbp - 0x70], 0	        26	for-each-ref.c	FUNCTION_1
0x4e1	    0xc74598020000	               mov dword [rbp - 0x68], 2	        26	for-each-ref.c	FUNCTION_1
0x4e8	    0x48c745a80100	               mov qword [rbp - 0x58], 1	        26	for-each-ref.c	FUNCTION_1
0x4f0	    0x488d8550fbff	                  lea rax, [rbp - 0x4b0]	        53	for-each-ref.c	FUNCTION_1	CALL_34
0x4f7	      0xba18000000	                           mov edx, 0x18	        53	for-each-ref.c	FUNCTION_1	CALL_34
0x4fc	      0xbe00000000	                              mov esi, 0	        53	for-each-ref.c	FUNCTION_1	CALL_34
0x501	          0x4889c7	                            mov rdi, rax	        53	for-each-ref.c	FUNCTION_1	CALL_34
0x504	      0xe800000000	                          call 0x4000549	        53	for-each-ref.c	FUNCTION_1	CALL_34
0x509	    0x488d8590fbff	                  lea rax, [rbp - 0x470]	        54	for-each-ref.c	FUNCTION_1	CALL_35
0x510	      0xba58000000	                           mov edx, 0x58	        54	for-each-ref.c	FUNCTION_1	CALL_35
0x515	      0xbe00000000	                              mov esi, 0	        54	for-each-ref.c	FUNCTION_1	CALL_35
0x51a	          0x4889c7	                            mov rdi, rax	        54	for-each-ref.c	FUNCTION_1	CALL_35
0x51d	      0xe800000000	                          call 0x4000562	        54	for-each-ref.c	FUNCTION_1	CALL_35
0x522	    0x48c78570fbff	              mov qword [rbp - 0x490], 0	        56	for-each-ref.c	FUNCTION_1
0x52d	      0xbe00000000	                              mov esi, 0	        58	for-each-ref.c	FUNCTION_1	CALL_36
0x532	      0xbf00000000	                              mov edi, 0	        58	for-each-ref.c	FUNCTION_1	CALL_36
0x537	      0xe800000000	                          call 0x400057c	        58	for-each-ref.c	FUNCTION_1	CALL_36
0x53c	    0x488d8df0fbff	                  lea rcx, [rbp - 0x410]	        60	for-each-ref.c	FUNCTION_1	CALL_37
0x543	    0x488b9518fbff	            mov rdx, qword [rbp - 0x4e8]	        60	for-each-ref.c	FUNCTION_1	CALL_37
0x54a	    0x488bb520fbff	            mov rsi, qword [rbp - 0x4e0]	        60	for-each-ref.c	FUNCTION_1	CALL_37
0x551	    0x8b852cfbffff	            mov eax, dword [rbp - 0x4d4]	        60	for-each-ref.c	FUNCTION_1	CALL_37
0x557	    0x41b900000000	                              mov r9d, 0	        60	for-each-ref.c	FUNCTION_1	CALL_37
0x55d	    0x41b800000000	                              mov r8d, 0	        60	for-each-ref.c	FUNCTION_1	CALL_37
0x563	            0x89c7	                            mov edi, eax	        60	for-each-ref.c	FUNCTION_1	CALL_37
0x565	      0xe800000000	                          call 0x40005aa	        60	for-each-ref.c	FUNCTION_1	CALL_37
0x56a	    0x8b8534fbffff	            mov eax, dword [rbp - 0x4cc]	        61	for-each-ref.c	FUNCTION_1	IF_1
0x570	            0x85c0	                           test eax, eax	        61	for-each-ref.c	FUNCTION_1	IF_1
0x572	            0x7930	                           jns 0x40005e4	        61	for-each-ref.c	FUNCTION_1	IF_1
0x574	    0x8b8534fbffff	            mov eax, dword [rbp - 0x4cc]	        62	for-each-ref.c	FUNCTION_1	IF_1	CALL_38
0x57a	            0x89c6	                            mov esi, eax	        62	for-each-ref.c	FUNCTION_1	IF_1	CALL_38
0x57c	      0xbf00000000	                              mov edi, 0	        62	for-each-ref.c	FUNCTION_1	IF_1	CALL_38
0x581	      0xb800000000	                              mov eax, 0	        62	for-each-ref.c	FUNCTION_1	IF_1	CALL_38
0x586	      0xe800000000	                          call 0x40005cb	        62	for-each-ref.c	FUNCTION_1	IF_1	CALL_38
0x58b	      0xe870faffff	                    call sym.const_error	        62	for-each-ref.c	FUNCTION_1	IF_1	CALL_38
0x590	    0x488d85f0fbff	                  lea rax, [rbp - 0x410]	        63	for-each-ref.c	FUNCTION_1	IF_1	CALL_39
0x597	          0x4889c6	                            mov rsi, rax	        63	for-each-ref.c	FUNCTION_1	IF_1	CALL_39
0x59a	      0xbf00000000	                              mov edi, 0	        63	for-each-ref.c	FUNCTION_1	IF_1	CALL_39
0x59f	      0xe800000000	                          call 0x40005e4	        63	for-each-ref.c	FUNCTION_1	IF_1	CALL_39
0x5a4	    0x8b8578fbffff	            mov eax, dword [rbp - 0x488]	        65	for-each-ref.c	FUNCTION_1	IF_2	CALL_40
0x5aa	    0x8b9578fbffff	            mov edx, dword [rbp - 0x488]	        65	for-each-ref.c	FUNCTION_1	IF_2	CALL_40
0x5b0	          0x83ea01	                              sub edx, 1	        65	for-each-ref.c	FUNCTION_1	IF_2	CALL_40
0x5b3	            0x21d0	                            and eax, edx	        65	for-each-ref.c	FUNCTION_1	IF_2	CALL_40
0x5b5	            0x85c0	                           test eax, eax	        65	for-each-ref.c	FUNCTION_1	IF_2	CALL_40
0x5b7	            0x7428	                            je 0x4000621	        65	for-each-ref.c	FUNCTION_1	IF_2	CALL_40
0x5b9	      0xbf00000000	                              mov edi, 0	        66	for-each-ref.c	FUNCTION_1	IF_2	CALL_41
0x5be	      0xb800000000	                              mov eax, 0	        66	for-each-ref.c	FUNCTION_1	IF_2	CALL_41
0x5c3	      0xe800000000	                          call 0x4000608	        66	for-each-ref.c	FUNCTION_1	IF_2	CALL_41
0x5c8	      0xe833faffff	                    call sym.const_error	        66	for-each-ref.c	FUNCTION_1	IF_2	CALL_41
0x5cd	    0x488d85f0fbff	                  lea rax, [rbp - 0x410]	        67	for-each-ref.c	FUNCTION_1	IF_2	CALL_42
0x5d4	          0x4889c6	                            mov rsi, rax	        67	for-each-ref.c	FUNCTION_1	IF_2	CALL_42
0x5d7	      0xbf00000000	                              mov edi, 0	        67	for-each-ref.c	FUNCTION_1	IF_2	CALL_42
0x5dc	      0xe800000000	                          call 0x4000621	        67	for-each-ref.c	FUNCTION_1	IF_2	CALL_42
0x5e1	    0x488d8570fbff	                  lea rax, [rbp - 0x490]	        69	for-each-ref.c	FUNCTION_1	IF_3	CALL_43
0x5e8	          0x4889c7	                            mov rdi, rax	        69	for-each-ref.c	FUNCTION_1	IF_3	CALL_43
0x5eb	      0xe800000000	                          call 0x4000630	        69	for-each-ref.c	FUNCTION_1	IF_3	CALL_43
0x5f0	            0x85c0	                           test eax, eax	        69	for-each-ref.c	FUNCTION_1	IF_3	CALL_43
0x5f2	            0x7414	                            je 0x4000648	        69	for-each-ref.c	FUNCTION_1	IF_3	CALL_43
0x5f4	    0x488d85f0fbff	                  lea rax, [rbp - 0x410]	        70	for-each-ref.c	FUNCTION_1	CALL_44
0x5fb	          0x4889c6	                            mov rsi, rax	        70	for-each-ref.c	FUNCTION_1	CALL_44
0x5fe	      0xbf00000000	                              mov edi, 0	        70	for-each-ref.c	FUNCTION_1	CALL_44
0x603	      0xe800000000	                          call 0x4000648	        70	for-each-ref.c	FUNCTION_1	CALL_44
0x608	    0x488b8540fbff	            mov rax, qword [rbp - 0x4c0]	        72	for-each-ref.c	FUNCTION_1	IF_4
0x60f	          0x4885c0	                           test rax, rax	        72	for-each-ref.c	FUNCTION_1	IF_4
0x612	            0x750c	                           jne 0x4000660	        72	for-each-ref.c	FUNCTION_1	IF_4
0x614	      0xe800000000	                          call 0x4000659	        73	for-each-ref.c	FUNCTION_1	CALL_45
0x619	    0x48898540fbff	            mov qword [rbp - 0x4c0], rax	        73	for-each-ref.c	FUNCTION_1	CALL_45
0x620	    0x488b8540fbff	            mov rax, qword [rbp - 0x4c0]	        74	for-each-ref.c	FUNCTION_1
0x627	    0x8b9538fbffff	            mov edx, dword [rbp - 0x4c8]	        74	for-each-ref.c	FUNCTION_1
0x62d	          0x83e201	                              and edx, 1	        74	for-each-ref.c	FUNCTION_1
0x630	          0x83e201	                              and edx, 1	        74	for-each-ref.c	FUNCTION_1
0x633	          0x8d0c12	                    lea ecx, [rdx + rdx]	        74	for-each-ref.c	FUNCTION_1
0x636	         0xfb6500c	            movzx edx, byte [rax + 0xc] 	        74	for-each-ref.c	FUNCTION_1
0x63a	          0x83e2fd	                     and edx, 0xfffffffd	        74	for-each-ref.c	FUNCTION_1
0x63d	             0x9ca	                             or edx, ecx	        74	for-each-ref.c	FUNCTION_1
0x63f	          0x88500c	                mov byte [rax + 0xc], dl	        74	for-each-ref.c	FUNCTION_1
0x642	    0x8b8538fbffff	            mov eax, dword [rbp - 0x4c8]	        75	for-each-ref.c	FUNCTION_1
0x648	          0x83e001	                              and eax, 1	        75	for-each-ref.c	FUNCTION_1
0x64b	          0x83e001	                              and eax, 1	        75	for-each-ref.c	FUNCTION_1
0x64e	    0x8d1485000000	                        lea edx, [rax*4]	        75	for-each-ref.c	FUNCTION_1
0x655	     0xfb685d0fbff	           movzx eax, byte [rbp - 0x430]	        75	for-each-ref.c	FUNCTION_1
0x65c	          0x83e0fb	                     and eax, 0xfffffffb	        75	for-each-ref.c	FUNCTION_1
0x65f	             0x9d0	                             or eax, edx	        75	for-each-ref.c	FUNCTION_1
0x661	    0x8885d0fbffff	              mov byte [rbp - 0x430], al	        75	for-each-ref.c	FUNCTION_1
0x667	    0x488b8520fbff	            mov rax, qword [rbp - 0x4e0]	        77	for-each-ref.c	FUNCTION_1
0x66e	    0x48898590fbff	            mov qword [rbp - 0x470], rax	        77	for-each-ref.c	FUNCTION_1
0x675	     0xfb685d0fbff	           movzx eax, byte [rbp - 0x430]	        78	for-each-ref.c	FUNCTION_1
0x67c	          0x83c802	                               or eax, 2	        78	for-each-ref.c	FUNCTION_1
0x67f	    0x8885d0fbffff	              mov byte [rbp - 0x430], al	        78	for-each-ref.c	FUNCTION_1
0x685	    0x488d8d90fbff	                  lea rcx, [rbp - 0x470]	        79	for-each-ref.c	FUNCTION_1	CALL_46
0x68c	    0x488d8550fbff	                  lea rax, [rbp - 0x4b0]	        79	for-each-ref.c	FUNCTION_1	CALL_46
0x693	      0xba1f000000	                           mov edx, 0x1f	        79	for-each-ref.c	FUNCTION_1	CALL_46
0x698	          0x4889ce	                            mov rsi, rcx	        79	for-each-ref.c	FUNCTION_1	CALL_46
0x69b	          0x4889c7	                            mov rdi, rax	        79	for-each-ref.c	FUNCTION_1	CALL_46
0x69e	      0xe800000000	                          call 0x40006e3	        79	for-each-ref.c	FUNCTION_1	CALL_46
0x6a3	    0x488b8540fbff	            mov rax, qword [rbp - 0x4c0]	        80	for-each-ref.c	FUNCTION_1	CALL_47
0x6aa	    0x488d9550fbff	                  lea rdx, [rbp - 0x4b0]	        80	for-each-ref.c	FUNCTION_1	CALL_47
0x6b1	          0x4889d6	                            mov rsi, rdx	        80	for-each-ref.c	FUNCTION_1	CALL_47
0x6b4	          0x4889c7	                            mov rdi, rax	        80	for-each-ref.c	FUNCTION_1	CALL_47
0x6b7	      0xe800000000	                          call 0x40006fc	        80	for-each-ref.c	FUNCTION_1	CALL_47
0x6bc	    0x8b8534fbffff	            mov eax, dword [rbp - 0x4cc]	        82	for-each-ref.c	FUNCTION_1	IF_5
0x6c2	            0x85c0	                           test eax, eax	        82	for-each-ref.c	FUNCTION_1	IF_5
0x6c4	            0x7410	                            je 0x4000716	        82	for-each-ref.c	FUNCTION_1	IF_5
0x6c6	    0x8b9550fbffff	            mov edx, dword [rbp - 0x4b0]	        82	for-each-ref.c	FUNCTION_1	IF_5
0x6cc	    0x8b8534fbffff	            mov eax, dword [rbp - 0x4cc]	        82	for-each-ref.c	FUNCTION_1	IF_5
0x6d2	            0x39c2	                            cmp edx, eax	        82	for-each-ref.c	FUNCTION_1	IF_5
0x6d4	            0x7d0c	                           jge 0x4000722	        82	for-each-ref.c	FUNCTION_1	IF_5
0x6d6	    0x8b8550fbffff	            mov eax, dword [rbp - 0x4b0]	        83	for-each-ref.c	FUNCTION_1	IF_5
0x6dc	    0x898534fbffff	            mov dword [rbp - 0x4cc], eax	        83	for-each-ref.c	FUNCTION_1	IF_5
0x6e2	    0xc7853cfbffff	              mov dword [rbp - 0x4c4], 0	        84	for-each-ref.c	FUNCTION_1	FOR_1
0x6ec	            0xeb33	                           jmp 0x4000761	        84	for-each-ref.c	FUNCTION_1	FOR_1
0x6ee	    0x488b8558fbff	            mov rax, qword [rbp - 0x4a8]	        85	for-each-ref.c	FUNCTION_1	CALL_48
0x6f5	    0x8b953cfbffff	            mov edx, dword [rbp - 0x4c4]	        85	for-each-ref.c	FUNCTION_1	CALL_48
0x6fb	          0x4863d2	                         movsxd rdx, edx	        85	for-each-ref.c	FUNCTION_1	CALL_48
0x6fe	        0x48c1e203	                              shl rdx, 3	        85	for-each-ref.c	FUNCTION_1	CALL_48
0x702	          0x4801d0	                            add rax, rdx	        85	for-each-ref.c	FUNCTION_1	CALL_48
0x705	          0x488b00	                    mov rax, qword [rax]	        85	for-each-ref.c	FUNCTION_1	CALL_48
0x708	    0x488d9570fbff	                  lea rdx, [rbp - 0x490]	        85	for-each-ref.c	FUNCTION_1	CALL_48
0x70f	          0x4889d6	                            mov rsi, rdx	        85	for-each-ref.c	FUNCTION_1	CALL_48
0x712	          0x4889c7	                            mov rdi, rax	        85	for-each-ref.c	FUNCTION_1	CALL_48
0x715	      0xe800000000	                          call 0x400075a	        85	for-each-ref.c	FUNCTION_1	CALL_48
0x71a	    0x83853cfbffff	              add dword [rbp - 0x4c4], 1	        84	for-each-ref.c	FUNCTION_1	FOR_1
0x721	    0x8b8534fbffff	            mov eax, dword [rbp - 0x4cc]	        84	for-each-ref.c	FUNCTION_1	FOR_1
0x727	    0x39853cfbffff	           cmp dword [rbp - 0x4c4], eax 	        84	for-each-ref.c	FUNCTION_1	FOR_1
0x72d	            0x7cbf	                            jl 0x400072e	        84	for-each-ref.c	FUNCTION_1	FOR_1
0x72f	    0x488d8550fbff	                  lea rax, [rbp - 0x4b0]	        86	for-each-ref.c	FUNCTION_1	CALL_49
0x736	          0x4889c7	                            mov rdi, rax	        86	for-each-ref.c	FUNCTION_1	CALL_49
0x739	      0xe800000000	                          call 0x400077e	        86	for-each-ref.c	FUNCTION_1	CALL_49
0x73e	      0xb800000000	                              mov eax, 0	        87	for-each-ref.c	FUNCTION_1
0x743	        0x488b4df8	                mov rcx, qword [rbp - 8]	        88	for-each-ref.c	FUNCTION_1
0x747	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        88	for-each-ref.c	FUNCTION_1
0x750	            0x7405	                            je 0x4000797	        88	for-each-ref.c	FUNCTION_1
0x752	      0xe800000000	                          call 0x4000797	        88	for-each-ref.c	FUNCTION_1
0x757	              0xc9	                                   leave	        88	for-each-ref.c	FUNCTION_1
0x758	              0xc3	                                     ret	        88	for-each-ref.c	FUNCTION_1
const_error	SWITCH,0:DO,0:IF,0:FOR,0:functions,0:ELSE,0:WHILE,0:CALL,0	5
0x0	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_7
0x1	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_7
0x4	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_7
0x9	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_7
0xa	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_7
