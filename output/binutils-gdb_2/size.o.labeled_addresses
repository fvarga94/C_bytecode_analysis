sysv_internal_sizer	IF,3:DO,0:functions,0:CALL,8:SWITCH,0:ELSE,0:FOR,0:WHILE,0	22
0x4000171	    0x4881fe000000	                              cmp rsi, 0	       519	size.c	FUNCTION_11	IF_1	CALL_2
0x4000178	            0x7454	                            je 0x40001ce	       519	size.c	FUNCTION_11	IF_1	CALL_2
0x400017a	        0xf6462110	           test byte [rsi + 0x21], 0x10 	       521	size.c	FUNCTION_11	IF_1	CALL_4
0x400017e	            0x754e	                           jne 0x40001ce	       521	size.c	FUNCTION_11	IF_1	CALL_4
0x4000180	    0x4881fe000000	                              cmp rsi, 0	       521	size.c	FUNCTION_11	IF_1	CALL_4
0x4000187	            0x7445	                            je 0x40001ce	       521	size.c	FUNCTION_11	IF_1	CALL_4
0x4000189	        0x488b5638	            mov rdx, qword [rsi + 0x38] 	       517	size.c	FUNCTION_11	CALL_1
0x400018d	          0x488b3e	                    mov rdi, qword [rsi]	       523	size.c	FUNCTION_11	IF_1	CALL_6
0x4000190	      0xb800000000	                              mov eax, 0	       523	size.c	FUNCTION_11	IF_1	CALL_6
0x4000195	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       523	size.c	FUNCTION_11	IF_1	CALL_6
0x400019c	            0xf2ae	              repne scasb al, byte [rdi]	       523	size.c	FUNCTION_11	IF_1	CALL_6
0x400019e	          0x48f7d1	                                 not rcx	       523	size.c	FUNCTION_11	IF_1	CALL_6
0x40001a1	        0x4883e901	                              sub rcx, 1	       523	size.c	FUNCTION_11	IF_1	CALL_6
0x40001a5	    0x3b0d00000000	            cmp ecx, dword [0x040001ab] 	       525	size.c	FUNCTION_11	IF_1	IF_2
0x40001ab	            0x7e06	                           jle 0x40001b3	       525	size.c	FUNCTION_11	IF_1	IF_2
0x40001ad	    0x890d00000000	            mov dword [0x040001b3], ecx 	       526	size.c	FUNCTION_11	IF_1	IF_2
0x40001b3	    0x480115000000	            add qword [0x040001ba], rdx 	       528	size.c	FUNCTION_11	IF_1
0x40001ba	        0x488b4628	            mov rax, qword [rsi + 0x28] 	       530	size.c	FUNCTION_11	IF_1	IF_3	CALL_7
0x40001be	    0x483b05000000	            cmp rax, qword [0x040001c5] 	       530	size.c	FUNCTION_11	IF_1	IF_3	CALL_7
0x40001c5	            0x7607	                           jbe 0x40001ce	       530	size.c	FUNCTION_11	IF_1	IF_3	CALL_7
0x40001c7	    0x488905000000	            mov qword [0x040001ce], rax 	       531	size.c	FUNCTION_11	IF_1	CALL_8
0x40001ce	            0xf3c3	                                     ret	       531	size.c	FUNCTION_11	IF_1	CALL_8
sysv_internal_printer	IF,1:DO,0:functions,0:CALL,7:SWITCH,0:ELSE,0:FOR,0:WHILE,0	15
0x4000344	    0x4881fe000000	                              cmp rsi, 0	       551	size.c	FUNCTION_13	IF_1	CALL_2
0x400034b	            0x7431	                            je 0x400037e	       551	size.c	FUNCTION_13	IF_1	CALL_2
0x400034d	        0xf6462110	           test byte [rsi + 0x21], 0x10 	       553	size.c	FUNCTION_13	IF_1	CALL_4
0x4000351	            0x752b	                           jne 0x400037e	       553	size.c	FUNCTION_13	IF_1	CALL_4
0x4000353	    0x4881fe000000	                              cmp rsi, 0	       553	size.c	FUNCTION_13	IF_1	CALL_4
0x400035a	            0x7422	                            je 0x400037e	       553	size.c	FUNCTION_13	IF_1	CALL_4
0x400035c	        0x4883ec08	                              sub rsp, 8	       548	size.c	FUNCTION_13
0x4000360	          0x4889f0	                            mov rax, rsi	       548	size.c	FUNCTION_13
0x4000363	        0x488b7638	            mov rsi, qword [rsi + 0x38] 	       549	size.c	FUNCTION_13	CALL_1
0x4000367	    0x480135000000	            add qword [0x0400036e], rsi 	       555	size.c	FUNCTION_13	IF_1
0x400036e	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       557	size.c	FUNCTION_13	IF_1	CALL_6
0x4000372	          0x488b38	                    mov rdi, qword [rax]	       557	size.c	FUNCTION_13	IF_1	CALL_6
0x4000375	      0xe860ffffff	                  call sym.sysv_one_line	       557	size.c	FUNCTION_13	IF_1	CALL_6
0x400037a	        0x4883c408	                              add rsp, 8	       561	size.c	FUNCTION_13
0x400037e	            0xf3c3	                                     ret	       561	size.c	FUNCTION_13
berkeley_sum	IF,3:DO,0:functions,0:CALL,2:SWITCH,0:ELSE,2:FOR,0:WHILE,0	14
0x4000040	          0x8b4620	            mov eax, dword [rsi + 0x20] 	       453	size.c	FUNCTION_9	CALL_1
0x4000043	            0xa801	                              test al, 1	       454	size.c	FUNCTION_9	IF_1
0x4000045	            0x7424	                            je 0x400006b	       454	size.c	FUNCTION_9	IF_1
0x4000047	        0x488b5638	            mov rdx, qword [rsi + 0x38] 	       457	size.c	FUNCTION_9	CALL_2
0x400004b	            0xa818	                           test al, 0x18	       458	size.c	FUNCTION_9	IF_2
0x400004d	            0x7408	                            je 0x4000057	       458	size.c	FUNCTION_9	IF_2
0x400004f	    0x480115000000	            add qword [0x04000056], rdx 	       459	size.c	FUNCTION_9	IF_2
0x4000056	              0xc3	                                     ret	       459	size.c	FUNCTION_9	IF_2
0x4000057	          0xf6c401	                              test ah, 1	       460	size.c	FUNCTION_9	ELSE_1	IF_3
0x400005a	            0x7408	                            je 0x4000064	       460	size.c	FUNCTION_9	ELSE_1	IF_3
0x400005c	    0x480115000000	            add qword [0x04000063], rdx 	       461	size.c	FUNCTION_9	ELSE_1	IF_3
0x4000063	              0xc3	                                     ret	       461	size.c	FUNCTION_9	ELSE_1	IF_3
0x4000064	    0x480115000000	            add qword [0x0400006b], rdx 	       463	size.c	FUNCTION_9	ELSE_2
0x400006b	            0xf3c3	                                     ret	       463	size.c	FUNCTION_9	ELSE_2
rprint_number	IF,0:DO,0:functions,0:CALL,0:SWITCH,0:ELSE,0:FOR,0:WHILE,0	33
0x4000255	              0x53	                                push rbx	       431	size.c	FUNCTION_8
0x4000256	        0x4883ec30	                           sub rsp, 0x30	       431	size.c	FUNCTION_8
0x400025a	            0x89fb	                            mov ebx, edi	       431	size.c	FUNCTION_8
0x400025c	          0x4989f0	                             mov r8, rsi	       431	size.c	FUNCTION_8
0x400025f	    0x64488b042528	                mov rax, qword fs:[0x28]	       431	size.c	FUNCTION_8
0x4000268	      0x4889442428	             mov qword [rsp + 0x28], rax	       431	size.c	FUNCTION_8
0x400026d	            0x31c0	                            xor eax, eax	       431	size.c	FUNCTION_8
0x400026f	    0x8b0500000000	            mov eax, dword [0x04000275] 	       435	size.c	FUNCTION_8
0x4000275	      0xb900000000	                              mov ecx, 0	       434	size.c	FUNCTION_8
0x400027a	            0x85c0	                           test eax, eax	       434	size.c	FUNCTION_8
0x400027c	            0x7411	                            je 0x400028f	       434	size.c	FUNCTION_8
0x400027e	          0x83f801	                              cmp eax, 1	       435	size.c	FUNCTION_8
0x4000281	      0xb900000000	                              mov ecx, 0	       435	size.c	FUNCTION_8
0x4000286	      0xb800000000	                              mov eax, 0	       435	size.c	FUNCTION_8
0x400028b	        0x480f44c8	                          cmove rcx, rax	       435	size.c	FUNCTION_8
0x400028f	      0xba28000000	                           mov edx, 0x28	        33	stdio2.h	FUNCTION_16	CALL_1
0x4000294	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_16	CALL_1
0x4000299	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_16	CALL_1
0x400029c	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_16	CALL_1
0x40002a1	      0xe800000000	                          call 0x40002a6	        33	stdio2.h	FUNCTION_16	CALL_1
0x40002a6	          0x4889e1	                            mov rcx, rsp	       104	stdio2.h	CALL_16
0x40002a9	            0x89da	                            mov edx, ebx	       104	stdio2.h	CALL_16
0x40002ab	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x40002b0	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40002b5	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_16
0x40002ba	      0xe800000000	                          call 0x40002bf	       104	stdio2.h	CALL_16
0x40002bf	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       440	size.c	FUNCTION_8
0x40002c4	    0x644833042528	                xor rax, qword fs:[0x28]	       440	size.c	FUNCTION_8
0x40002cd	            0x7405	                            je 0x40002d4	       440	size.c	FUNCTION_8
0x40002cf	      0xe800000000	                          call 0x40002d4	       440	size.c	FUNCTION_8
0x40002d4	        0x4883c430	                           add rsp, 0x30	       440	size.c	FUNCTION_8
0x40002d8	              0x5b	                                 pop rbx	       440	size.c	FUNCTION_8
0x40002d9	              0xc3	                                     ret	       440	size.c	FUNCTION_8
usage	IF,1:DO,0:functions,0:CALL,9:SWITCH,0:ELSE,0:FOR,1:WHILE,0	61
0x400006d	            0x4154	                                push r12	        75	size.c	FUNCTION_1
0x400006f	              0x55	                                push rbp	        75	size.c	FUNCTION_1
0x4000070	              0x53	                                push rbx	        75	size.c	FUNCTION_1
0x4000071	          0x4889fb	                            mov rbx, rdi	        75	size.c	FUNCTION_1
0x4000074	            0x89f5	                            mov ebp, esi	        75	size.c	FUNCTION_1
0x4000076	    0x4c8b25000000	            mov r12, qword [0x0400007d] 	        76	size.c	FUNCTION_1	CALL_1
0x400007d	      0xba05000000	                              mov edx, 5	        76	size.c	FUNCTION_1	CALL_1
0x4000082	      0xbe00000000	                              mov esi, 0	        76	size.c	FUNCTION_1	CALL_1
0x4000087	      0xbf00000000	                              mov edi, 0	        76	size.c	FUNCTION_1	CALL_1
0x400008c	      0xe800000000	                          call 0x4000091	        76	size.c	FUNCTION_1	CALL_1
0x4000091	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	CALL_13
0x4000094	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x4000097	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x400009c	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_13
0x400009f	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_13
0x40000a4	      0xe800000000	                          call 0x40000a9	        97	stdio2.h	CALL_13
0x40000a9	      0xba05000000	                              mov edx, 5	        77	size.c	FUNCTION_1	CALL_2
0x40000ae	      0xbe00000000	                              mov esi, 0	        77	size.c	FUNCTION_1	CALL_2
0x40000b3	      0xbf00000000	                              mov edi, 0	        77	size.c	FUNCTION_1	CALL_2
0x40000b8	      0xe800000000	                          call 0x40000bd	        77	size.c	FUNCTION_1	CALL_2
0x40000bd	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x40000c0	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x40000c5	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_13
0x40000c8	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_13
0x40000cd	      0xe800000000	                          call 0x40000d2	        97	stdio2.h	CALL_13
0x40000d2	      0xba05000000	                              mov edx, 5	        78	size.c	FUNCTION_1	CALL_3
0x40000d7	      0xbe00000000	                              mov esi, 0	        78	size.c	FUNCTION_1	CALL_3
0x40000dc	      0xbf00000000	                              mov edi, 0	        78	size.c	FUNCTION_1	CALL_3
0x40000e1	      0xe800000000	                          call 0x40000e6	        78	size.c	FUNCTION_1	CALL_3
0x40000e6	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x40000e9	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x40000ee	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_13
0x40000f1	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_13
0x40000f6	      0xe800000000	                          call 0x40000fb	        97	stdio2.h	CALL_13
0x40000fb	      0xba05000000	                              mov edx, 5	        79	size.c	FUNCTION_1	CALL_4
0x4000100	      0xbe00000000	                              mov esi, 0	        79	size.c	FUNCTION_1	CALL_4
0x4000105	      0xbf00000000	                              mov edi, 0	        79	size.c	FUNCTION_1	CALL_4
0x400010a	      0xe800000000	                          call 0x400010f	        79	size.c	FUNCTION_1	CALL_4
0x400010f	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_13
0x4000114	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x4000117	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x400011c	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_13
0x400011f	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_13
0x4000124	      0xe800000000	                          call 0x4000129	        97	stdio2.h	CALL_13
0x4000129	          0x4889de	                            mov rsi, rbx	        95	size.c	FUNCTION_1	FOR_1	CALL_7
0x400012c	    0x488b3d000000	            mov rdi, qword [0x04000133] 	        95	size.c	FUNCTION_1	FOR_1	CALL_7
0x4000133	      0xe800000000	                          call 0x4000138	        95	size.c	FUNCTION_1	FOR_1	CALL_7
0x4000138	            0x85ed	                           test ebp, ebp	        96	size.c	FUNCTION_1	FOR_1	IF_1
0x400013a	            0x752e	                           jne 0x400016a	        96	size.c	FUNCTION_1	FOR_1	IF_1
0x400013c	      0xba05000000	                              mov edx, 5	        97	size.c	FUNCTION_1	FOR_1	CALL_8
0x4000141	      0xbe00000000	                              mov esi, 0	        97	size.c	FUNCTION_1	FOR_1	CALL_8
0x4000146	      0xbf00000000	                              mov edi, 0	        97	size.c	FUNCTION_1	FOR_1	CALL_8
0x400014b	      0xe800000000	                          call 0x4000150	        97	size.c	FUNCTION_1	FOR_1	CALL_8
0x4000150	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_13
0x4000155	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_13
0x4000158	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_13
0x400015d	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_13
0x4000160	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_13
0x4000165	      0xe800000000	                          call 0x400016a	        97	stdio2.h	CALL_13
0x400016a	            0x89ef	                            mov edi, ebp	        98	size.c	FUNCTION_1	FOR_1	CALL_9
0x400016c	      0xe800000000	            call sym.sysv_internal_sizer	        98	size.c	FUNCTION_1	FOR_1	CALL_9
display_bfd	IF,6:DO,0:functions,0:CALL,18:SWITCH,0:ELSE,0:FOR,0:WHILE,0	74
0x400073f	              0x53	                                push rbx	       296	size.c	FUNCTION_4
0x4000740	        0x4883ec10	                           sub rsp, 0x10	       296	size.c	FUNCTION_4
0x4000744	          0x4889fb	                            mov rbx, rdi	       296	size.c	FUNCTION_4
0x4000747	    0x64488b042528	                mov rax, qword fs:[0x28]	       296	size.c	FUNCTION_4
0x4000750	      0x4889442408	                mov qword [rsp + 8], rax	       296	size.c	FUNCTION_4
0x4000755	            0x31c0	                            xor eax, eax	       296	size.c	FUNCTION_4
0x4000757	      0xbe02000000	                              mov esi, 2	       299	size.c	FUNCTION_4	IF_1	CALL_1
0x400075c	      0xe800000000	                          call 0x4000761	       299	size.c	FUNCTION_4	IF_1	CALL_1
0x4000761	            0x85c0	                           test eax, eax	       299	size.c	FUNCTION_4	IF_1	CALL_1
0x4000763	     0xf85f3000000	                           jne 0x400085c	       299	size.c	FUNCTION_4	IF_1	CALL_1
0x4000769	          0x4889e2	                            mov rdx, rsp	       303	size.c	FUNCTION_4	IF_2	CALL_2
0x400076c	      0xbe01000000	                              mov esi, 1	       303	size.c	FUNCTION_4	IF_2	CALL_2
0x4000771	          0x4889df	                            mov rdi, rbx	       303	size.c	FUNCTION_4	IF_2	CALL_2
0x4000774	      0xe800000000	                          call 0x4000779	       303	size.c	FUNCTION_4	IF_2	CALL_2
0x4000779	            0x85c0	                           test eax, eax	       303	size.c	FUNCTION_4	IF_2	CALL_2
0x400077b	            0x7417	                            je 0x4000794	       303	size.c	FUNCTION_4	IF_2	CALL_2
0x400077d	          0x4889df	                            mov rdi, rbx	       305	size.c	FUNCTION_4	IF_2	CALL_3
0x4000780	      0xe8fbfbffff	                    call sym.print_sizes	       305	size.c	FUNCTION_4	IF_2	CALL_3
0x4000785	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x400078a	      0xe800000000	                          call 0x400078f	       104	stdio2.h	CALL_16
0x400078f	      0xe9c8000000	                           jmp 0x400085c	       104	stdio2.h	CALL_16
0x4000794	      0xe800000000	                          call 0x4000799	       310	size.c	FUNCTION_4	IF_3	CALL_4
0x4000799	          0x83f80d	                            cmp eax, 0xd	       310	size.c	FUNCTION_4	IF_3	CALL_4
0x400079c	            0x7529	                           jne 0x40007c7	       310	size.c	FUNCTION_4	IF_3	CALL_4
0x400079e	          0x488b3b	                    mov rdi, qword [rbx]	       312	size.c	FUNCTION_4	IF_3	CALL_6
0x40007a1	      0xe800000000	                          call 0x40007a6	       312	size.c	FUNCTION_4	IF_3	CALL_6
0x40007a6	        0x488b3c24	                    mov rdi, qword [rsp]	       313	size.c	FUNCTION_4	IF_3	CALL_7
0x40007aa	      0xe800000000	                          call 0x40007af	       313	size.c	FUNCTION_4	IF_3	CALL_7
0x40007af	        0x488b3c24	                    mov rdi, qword [rsp]	       314	size.c	FUNCTION_4	IF_3	CALL_8
0x40007b3	      0xe800000000	                          call 0x40007b8	       314	size.c	FUNCTION_4	IF_3	CALL_8
0x40007b8	    0xc70500000000	               mov dword [0x040007c2], 3	       315	size.c	FUNCTION_4	IF_3
0x40007c2	      0xe995000000	                           jmp 0x400085c	       316	size.c	FUNCTION_4	IF_3
0x40007c7	          0x4889e2	                            mov rdx, rsp	       319	size.c	FUNCTION_4	IF_4	CALL_9
0x40007ca	      0xbe03000000	                              mov esi, 3	       319	size.c	FUNCTION_4	IF_4	CALL_9
0x40007cf	          0x4889df	                            mov rdi, rbx	       319	size.c	FUNCTION_4	IF_4	CALL_9
0x40007d2	      0xe800000000	                          call 0x40007d7	       319	size.c	FUNCTION_4	IF_4	CALL_9
0x40007d7	            0x85c0	                           test eax, eax	       319	size.c	FUNCTION_4	IF_4	CALL_9
0x40007d9	            0x7453	                            je 0x400082e	       319	size.c	FUNCTION_4	IF_4	CALL_9
0x40007db	          0x4889df	                            mov rdi, rbx	       323	size.c	FUNCTION_4	IF_4	CALL_10
0x40007de	      0xe89dfbffff	                    call sym.print_sizes	       323	size.c	FUNCTION_4	IF_4	CALL_10
0x40007e3	    0x488b0d000000	            mov rcx, qword [0x040007ea] 	       324	size.c	FUNCTION_4	IF_4	CALL_11
0x40007ea	      0xba0b000000	                            mov edx, 0xb	       324	size.c	FUNCTION_4	IF_4	CALL_11
0x40007ef	      0xbe01000000	                              mov esi, 1	       324	size.c	FUNCTION_4	IF_4	CALL_11
0x40007f4	      0xbf00000000	                              mov edi, 0	       324	size.c	FUNCTION_4	IF_4	CALL_11
0x40007f9	      0xe800000000	                          call 0x40007fe	       324	size.c	FUNCTION_4	IF_4	CALL_11
0x40007fe	          0x4889df	                            mov rdi, rbx	       326	size.c	FUNCTION_4	IF_4	CALL_12
0x4000801	      0xe800000000	                          call 0x4000806	       326	size.c	FUNCTION_4	IF_4	CALL_12
0x4000806	          0x4885c0	                           test rax, rax	       327	size.c	FUNCTION_4	IF_4	IF_5
0x4000809	            0x7417	                            je 0x4000822	       327	size.c	FUNCTION_4	IF_4	IF_5
0x400080b	          0x4889c2	                            mov rdx, rax	       104	stdio2.h	CALL_16
0x400080e	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4000813	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x4000818	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_16
0x400081d	      0xe800000000	                          call 0x4000822	       104	stdio2.h	CALL_16
0x4000822	      0xbf00000000	                              mov edi, 0	       330	size.c	FUNCTION_4	IF_4	CALL_13
0x4000827	      0xe800000000	                          call 0x400082c	       330	size.c	FUNCTION_4	IF_4	CALL_13
0x400082c	            0xeb2e	                           jmp 0x400085c	       331	size.c	FUNCTION_4	IF_4
0x400082e	          0x488b3b	                    mov rdi, qword [rbx]	       334	size.c	FUNCTION_4	CALL_15
0x4000831	      0xe800000000	                          call 0x4000836	       334	size.c	FUNCTION_4	CALL_15
0x4000836	      0xe800000000	                          call 0x400083b	       336	size.c	FUNCTION_4	IF_6	CALL_16
0x400083b	          0x83f80d	                            cmp eax, 0xd	       336	size.c	FUNCTION_4	IF_6	CALL_16
0x400083e	            0x7512	                           jne 0x4000852	       336	size.c	FUNCTION_4	IF_6	CALL_16
0x4000840	        0x488b3c24	                    mov rdi, qword [rsp]	       338	size.c	FUNCTION_4	IF_6	CALL_17
0x4000844	      0xe800000000	                          call 0x4000849	       338	size.c	FUNCTION_4	IF_6	CALL_17
0x4000849	        0x488b3c24	                    mov rdi, qword [rsp]	       339	size.c	FUNCTION_4	IF_6	CALL_18
0x400084d	      0xe800000000	                          call 0x4000852	       339	size.c	FUNCTION_4	IF_6	CALL_18
0x4000852	    0xc70500000000	               mov dword [0x0400085c], 3	       342	size.c	FUNCTION_4
0x400085c	      0x488b442408	                mov rax, qword [rsp + 8]	       343	size.c	FUNCTION_4
0x4000861	    0x644833042528	                xor rax, qword fs:[0x28]	       343	size.c	FUNCTION_4
0x400086a	            0x7405	                            je 0x4000871	       343	size.c	FUNCTION_4
0x400086c	      0xe800000000	                          call 0x4000871	       343	size.c	FUNCTION_4
0x4000871	        0x4883c410	                           add rsp, 0x10	       343	size.c	FUNCTION_4
0x4000875	              0x5b	                                 pop rbx	       343	size.c	FUNCTION_4
0x4000876	              0xc3	                                     ret	       343	size.c	FUNCTION_4
size_number	IF,0:DO,0:functions,0:CALL,1:SWITCH,0:ELSE,0:FOR,0:WHILE,0	33
0x40001d0	              0x53	                                push rbx	       418	size.c	FUNCTION_7
0x40001d1	        0x4883ec30	                           sub rsp, 0x30	       418	size.c	FUNCTION_7
0x40001d5	          0x4989f8	                             mov r8, rdi	       418	size.c	FUNCTION_7
0x40001d8	    0x64488b042528	                mov rax, qword fs:[0x28]	       418	size.c	FUNCTION_7
0x40001e1	      0x4889442428	             mov qword [rsp + 0x28], rax	       418	size.c	FUNCTION_7
0x40001e6	            0x31c0	                            xor eax, eax	       418	size.c	FUNCTION_7
0x40001e8	    0x8b0500000000	            mov eax, dword [0x040001ee] 	       422	size.c	FUNCTION_7
0x40001ee	      0xb900000000	                              mov ecx, 0	       421	size.c	FUNCTION_7
0x40001f3	            0x85c0	                           test eax, eax	       421	size.c	FUNCTION_7
0x40001f5	            0x7411	                            je 0x4000208	       421	size.c	FUNCTION_7
0x40001f7	          0x83f801	                              cmp eax, 1	       422	size.c	FUNCTION_7
0x40001fa	      0xb900000000	                              mov ecx, 0	       422	size.c	FUNCTION_7
0x40001ff	      0xb800000000	                              mov eax, 0	       422	size.c	FUNCTION_7
0x4000204	        0x480f44c8	                          cmove rcx, rax	       422	size.c	FUNCTION_7
0x4000208	      0xba28000000	                           mov edx, 0x28	        33	stdio2.h	FUNCTION_16	CALL_1
0x400020d	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_16	CALL_1
0x4000212	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_16	CALL_1
0x4000215	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_16	CALL_1
0x400021a	      0xe800000000	                          call 0x400021f	        33	stdio2.h	FUNCTION_16	CALL_1
0x400021f	      0xb800000000	                              mov eax, 0	       426	size.c	FUNCTION_7	CALL_1
0x4000224	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       426	size.c	FUNCTION_7	CALL_1
0x400022b	          0x4889e7	                            mov rdi, rsp	       426	size.c	FUNCTION_7	CALL_1
0x400022e	            0xf2ae	              repne scasb al, byte [rdi]	       426	size.c	FUNCTION_7	CALL_1
0x4000230	          0x4889c8	                            mov rax, rcx	       426	size.c	FUNCTION_7	CALL_1
0x4000233	          0x48f7d0	                                 not rax	       426	size.c	FUNCTION_7	CALL_1
0x4000236	        0x4883e801	                              sub rax, 1	       426	size.c	FUNCTION_7	CALL_1
0x400023a	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       427	size.c	FUNCTION_7
0x400023f	    0x644833142528	                xor rdx, qword fs:[0x28]	       427	size.c	FUNCTION_7
0x4000248	            0x7405	                            je 0x400024f	       427	size.c	FUNCTION_7
0x400024a	      0xe800000000	                          call 0x400024f	       427	size.c	FUNCTION_7
0x400024f	        0x4883c430	                           add rsp, 0x30	       427	size.c	FUNCTION_7
0x4000253	              0x5b	                                 pop rbx	       427	size.c	FUNCTION_7
0x4000254	              0xc3	                                     ret	       427	size.c	FUNCTION_7
sysv_one_line	IF,0:DO,0:functions,0:CALL,2:SWITCH,0:ELSE,0:FOR,0:WHILE,0	27
0x40002da	              0x55	                                push rbp	       537	size.c	FUNCTION_12
0x40002db	              0x53	                                push rbx	       537	size.c	FUNCTION_12
0x40002dc	        0x4883ec08	                              sub rsp, 8	       537	size.c	FUNCTION_12
0x40002e0	          0x4889f9	                            mov rcx, rdi	       537	size.c	FUNCTION_12
0x40002e3	          0x4889f5	                            mov rbp, rsi	       537	size.c	FUNCTION_12
0x40002e6	          0x4889d3	                            mov rbx, rdx	       537	size.c	FUNCTION_12
0x40002e9	    0x8b1500000000	            mov edx, dword [0x040002ef] 	       104	stdio2.h	CALL_16
0x40002ef	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x40002f4	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x40002f9	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_16
0x40002fe	      0xe800000000	                          call 0x4000303	       104	stdio2.h	CALL_16
0x4000303	          0x4889ee	                            mov rsi, rbp	       539	size.c	FUNCTION_12	CALL_1
0x4000306	    0x8b3d00000000	            mov edi, dword [0x0400030c] 	       539	size.c	FUNCTION_12	CALL_1
0x400030c	      0xe844ffffff	                  call sym.rprint_number	       539	size.c	FUNCTION_12	CALL_1
0x4000311	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	CALL_16
0x4000316	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_16
0x400031b	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_16
0x4000320	      0xe800000000	                          call 0x4000325	       104	stdio2.h	CALL_16
0x4000325	          0x4889de	                            mov rsi, rbx	       541	size.c	FUNCTION_12	CALL_2
0x4000328	    0x8b3d00000000	            mov edi, dword [0x0400032e] 	       541	size.c	FUNCTION_12	CALL_2
0x400032e	      0xe822ffffff	                  call sym.rprint_number	       541	size.c	FUNCTION_12	CALL_2
0x4000333	      0xbf0a000000	                            mov edi, 0xa	       104	stdio2.h	CALL_16
0x4000338	      0xe800000000	                          call 0x400033d	       104	stdio2.h	CALL_16
0x400033d	        0x4883c408	                              add rsp, 8	       543	size.c	FUNCTION_12
0x4000341	              0x5b	                                 pop rbx	       543	size.c	FUNCTION_12
0x4000342	              0x5d	                                 pop rbp	       543	size.c	FUNCTION_12
0x4000343	              0xc3	                                     ret	       543	size.c	FUNCTION_12
display_file	IF,4:DO,0:functions,0:CALL,8:SWITCH,0:ELSE,1:FOR,0:WHILE,0	74
0x4000877	            0x4155	                                push r13	       386	size.c	FUNCTION_6
0x4000879	            0x4154	                                push r12	       386	size.c	FUNCTION_6
0x400087b	              0x55	                                push rbp	       386	size.c	FUNCTION_6
0x400087c	              0x53	                                push rbx	       386	size.c	FUNCTION_6
0x400087d	        0x4883ec08	                              sub rsp, 8	       386	size.c	FUNCTION_6
0x4000881	          0x4989fd	                            mov r13, rdi	       386	size.c	FUNCTION_6
0x4000884	      0xe800000000	                          call 0x4000889	       389	size.c	FUNCTION_6	IF_1	CALL_1
0x4000889	          0x4885c0	                           test rax, rax	       389	size.c	FUNCTION_6	IF_1	CALL_1
0x400088c	            0x7f0f	                            jg 0x400089d	       389	size.c	FUNCTION_6	IF_1	CALL_1
0x400088e	    0xc70500000000	               mov dword [0x04000898], 1	       391	size.c	FUNCTION_6	IF_1
0x4000898	      0xe9d8000000	                           jmp 0x4000975	       392	size.c	FUNCTION_6	IF_1
0x400089d	    0x488b35000000	            mov rsi, qword [0x040008a4] 	       395	size.c	FUNCTION_6	CALL_2
0x40008a4	          0x4c89ef	                            mov rdi, r13	       395	size.c	FUNCTION_6	CALL_2
0x40008a7	      0xe800000000	                          call 0x40008ac	       395	size.c	FUNCTION_6	CALL_2
0x40008ac	          0x4989c4	                            mov r12, rax	       395	size.c	FUNCTION_6	CALL_2
0x40008af	          0x4885c0	                           test rax, rax	       396	size.c	FUNCTION_6	IF_2
0x40008b2	            0x7517	                           jne 0x40008cb	       396	size.c	FUNCTION_6	IF_2
0x40008b4	          0x4c89ef	                            mov rdi, r13	       398	size.c	FUNCTION_6	IF_2	CALL_3
0x40008b7	      0xe800000000	                          call 0x40008bc	       398	size.c	FUNCTION_6	IF_2	CALL_3
0x40008bc	    0xc70500000000	               mov dword [0x040008c6], 1	       399	size.c	FUNCTION_6	IF_2
0x40008c6	      0xe9aa000000	                           jmp 0x4000975	       400	size.c	FUNCTION_6	IF_2
0x40008cb	      0xbe02000000	                              mov esi, 2	       403	size.c	FUNCTION_6	IF_3	CALL_4
0x40008d0	          0x4889c7	                            mov rdi, rax	       403	size.c	FUNCTION_6	IF_3	CALL_4
0x40008d3	      0xe800000000	                          call 0x40008d8	       403	size.c	FUNCTION_6	IF_3	CALL_4
0x40008d8	            0x85c0	                           test eax, eax	       403	size.c	FUNCTION_6	IF_3	CALL_4
0x40008da	            0x7507	                           jne 0x40008e3	       403	size.c	FUNCTION_6	IF_3	CALL_4
0x40008dc	            0xeb71	                           jmp 0x400094f	       403	size.c	FUNCTION_6	IF_3	CALL_4
0x40008de	          0x4889dd	                            mov rbp, rbx	       403	size.c	FUNCTION_6	IF_3	CALL_4
0x40008e1	            0xeb05	                           jmp 0x40008e8	       403	size.c	FUNCTION_6	IF_3	CALL_4
0x40008e3	      0xbd00000000	                              mov ebp, 0	       403	size.c	FUNCTION_6	IF_3	CALL_4
0x40008e8	      0xbf00000000	                              mov edi, 0	       353	size.c	FUNCTION_5	FOR_1	CALL_1
0x40008ed	      0xe800000000	                          call 0x40008f2	       353	size.c	FUNCTION_5	FOR_1	CALL_1
0x40008f2	          0x4889ee	                            mov rsi, rbp	       355	size.c	FUNCTION_5	FOR_1	CALL_2
0x40008f5	          0x4c89e7	                            mov rdi, r12	       355	size.c	FUNCTION_5	FOR_1	CALL_2
0x40008f8	      0xe800000000	                          call 0x40008fd	       355	size.c	FUNCTION_5	FOR_1	CALL_2
0x40008fd	          0x4889c3	                            mov rbx, rax	       355	size.c	FUNCTION_5	FOR_1	CALL_2
0x4000900	          0x4885c0	                           test rax, rax	       356	size.c	FUNCTION_5	FOR_1	IF_1
0x4000903	            0x751f	                           jne 0x4000924	       356	size.c	FUNCTION_5	FOR_1	IF_1
0x4000905	      0xe800000000	                          call 0x400090a	       358	size.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_3
0x400090a	          0x83f809	                              cmp eax, 9	       358	size.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_3
0x400090d	            0x7431	                            je 0x4000940	       358	size.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_3
0x400090f	        0x498b3c24	                    mov rdi, qword [r12]	       360	size.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000913	      0xe800000000	                          call 0x4000918	       360	size.c	FUNCTION_5	FOR_1	IF_1	IF_2	CALL_5
0x4000918	    0xc70500000000	               mov dword [0x04000922], 2	       361	size.c	FUNCTION_5	FOR_1	IF_1	IF_2
0x4000922	            0xeb1c	                           jmp 0x4000940	       361	size.c	FUNCTION_5	FOR_1	IF_1	IF_2
0x4000924	          0x4889c7	                            mov rdi, rax	       366	size.c	FUNCTION_5	FOR_1	CALL_6
0x4000927	      0xe813feffff	                    call sym.display_bfd	       366	size.c	FUNCTION_5	FOR_1	CALL_6
0x400092c	          0x4885ed	                           test rbp, rbp	       368	size.c	FUNCTION_5	FOR_1	IF_3
0x400092f	            0x74ad	                            je 0x40008de	       368	size.c	FUNCTION_5	FOR_1	IF_3
0x4000931	          0x4889ef	                            mov rdi, rbp	       370	size.c	FUNCTION_5	FOR_1	IF_3	CALL_7
0x4000934	      0xe800000000	                          call 0x4000939	       370	size.c	FUNCTION_5	FOR_1	IF_3	CALL_7
0x4000939	          0x4839dd	                            cmp rbp, rbx	       373	size.c	FUNCTION_5	FOR_1	IF_3	IF_4
0x400093c	            0x75a0	                           jne 0x40008de	       373	size.c	FUNCTION_5	FOR_1	IF_3	IF_4
0x400093e	            0xeb17	                           jmp 0x4000957	       373	size.c	FUNCTION_5	FOR_1	IF_3	IF_4
0x4000940	          0x4885ed	                           test rbp, rbp	       380	size.c	FUNCTION_5	IF_5
0x4000943	            0x7412	                            je 0x4000957	       380	size.c	FUNCTION_5	IF_5
0x4000945	          0x4889ef	                            mov rdi, rbp	       381	size.c	FUNCTION_5	CALL_8
0x4000948	      0xe800000000	                          call 0x400094d	       381	size.c	FUNCTION_5	CALL_8
0x400094d	            0xeb08	                           jmp 0x4000957	       381	size.c	FUNCTION_5	CALL_8
0x400094f	          0x4c89e7	                            mov rdi, r12	       406	size.c	FUNCTION_6	CALL_6
0x4000952	      0xe8e8fdffff	                    call sym.display_bfd	       406	size.c	FUNCTION_6	CALL_6
0x4000957	          0x4c89e7	                            mov rdi, r12	       408	size.c	FUNCTION_6	IF_4	CALL_7
0x400095a	      0xe800000000	                          call 0x400095f	       408	size.c	FUNCTION_6	IF_4	CALL_7
0x400095f	            0x85c0	                           test eax, eax	       408	size.c	FUNCTION_6	IF_4	CALL_7
0x4000961	            0x7512	                           jne 0x4000975	       408	size.c	FUNCTION_6	IF_4	CALL_7
0x4000963	          0x4c89ef	                            mov rdi, r13	       410	size.c	FUNCTION_6	IF_4	CALL_8
0x4000966	      0xe800000000	                          call 0x400096b	       410	size.c	FUNCTION_6	IF_4	CALL_8
0x400096b	    0xc70500000000	               mov dword [0x04000975], 1	       411	size.c	FUNCTION_6	IF_4
0x4000975	        0x4883c408	                              add rsp, 8	       414	size.c	FUNCTION_6
0x4000979	              0x5b	                                 pop rbx	       414	size.c	FUNCTION_6
0x400097a	              0x5d	                                 pop rbp	       414	size.c	FUNCTION_6
0x400097b	            0x415c	                                 pop r12	       414	size.c	FUNCTION_6
0x400097d	            0x415d	                                 pop r13	       414	size.c	FUNCTION_6
0x400097f	              0xc3	                                     ret	       414	size.c	FUNCTION_6
