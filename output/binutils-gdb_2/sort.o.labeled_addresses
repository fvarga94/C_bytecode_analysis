sort_pointers	FOR,5:CALL,2:ELSE,1:DO,0:SWITCH,0:IF,2:WHILE,0:functions,0	76
0x4000040	            0x4156	                                push r14	        48	sort.c	FUNCTION_1
0x4000042	            0x4155	                                push r13	        48	sort.c	FUNCTION_1
0x4000044	            0x4154	                                push r12	        48	sort.c	FUNCTION_1
0x4000046	              0x55	                                push rbp	        48	sort.c	FUNCTION_1
0x4000047	              0x53	                                push rbx	        48	sort.c	FUNCTION_1
0x4000048	    0x4881ec200400	                          sub rsp, 0x420	        48	sort.c	FUNCTION_1
0x400004f	    0x64488b042528	                mov rax, qword fs:[0x28]	        48	sort.c	FUNCTION_1
0x4000058	    0x488984241804	            mov qword [rsp + 0x418], rax	        48	sort.c	FUNCTION_1
0x4000060	            0x31c0	                            xor eax, eax	        48	sort.c	FUNCTION_1
0x4000062	    0x41b900000000	                              mov r9d, 0	        48	sort.c	FUNCTION_1
0x4000068	        0x49c1e108	                               shl r9, 8	        77	sort.c	FUNCTION_1	FOR_1
0x400006c	          0x4901c1	                             add r9, rax	        77	sort.c	FUNCTION_1	FOR_1
0x400006f	        0x4883c001	                              add rax, 1	        74	sort.c	FUNCTION_1	FOR_1
0x4000073	        0x4883f808	                              cmp rax, 8	        74	sort.c	FUNCTION_1	FOR_1
0x4000077	            0x75ef	                           jne 0x4000068	        74	sort.c	FUNCTION_1	FOR_1
0x4000079	    0x488d2cfd0000	                        lea rbp, [rdi*8]	       106	sort.c	FUNCTION_1	FOR_2
0x4000081	        0x488d5df8	                      lea rbx, [rbp - 8]	       122	sort.c	FUNCTION_1	FOR_2	FOR_5
0x4000085	    0x41ba08000000	                             mov r10d, 8	       122	sort.c	FUNCTION_1	FOR_2	FOR_5
0x400008b	    0x41bc08000000	                             mov r12d, 8	       122	sort.c	FUNCTION_1	FOR_2	FOR_5
0x4000091	      0x4c8d5c2410	                   lea r11, [rsp + 0x10]	        90	string3.h	FUNCTION_7	CALL_6
0x4000096	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_7	CALL_6
0x400009b	    0x4d8d83000400	                   lea r8, [r11 + 0x400]	       118	sort.c	FUNCTION_1	FOR_2	FOR_4
0x40000a2	            0xeb03	                           jmp 0x40000a7	       118	sort.c	FUNCTION_1	FOR_2	FOR_4
0x40000a4	          0x4889ce	                            mov rsi, rcx	       118	sort.c	FUNCTION_1	FOR_2	FOR_4
0x40000a7	          0x4d89e5	                            mov r13, r12	       118	sort.c	FUNCTION_1	FOR_2	FOR_4
0x40000aa	          0x4d29d5	                            sub r13, r10	       118	sort.c	FUNCTION_1	FOR_2	FOR_4
0x40000ad	          0x4584c9	                           test r9b, r9b	        94	sort.c	FUNCTION_1	FOR_2	IF_2
0x40000b0	        0x4d0f44ea	                          cmove r13, r10	        94	sort.c	FUNCTION_1	FOR_2	IF_2
0x40000b4	      0x4c896c2408	                mov qword [rsp + 8], r13	        94	sort.c	FUNCTION_1	FOR_2	IF_2
0x40000b9	      0xb980000000	                           mov ecx, 0x80	        90	string3.h	FUNCTION_7	CALL_6
0x40000be	          0x4c89df	                            mov rdi, r11	        90	string3.h	FUNCTION_7	CALL_6
0x40000c1	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_7	CALL_6
0x40000c4	        0x4a8d0c2e	                    lea rcx, [rsi + r13]	       105	sort.c	FUNCTION_1	FOR_2
0x40000c8	      0x4d8d742d00	                    lea r14, [r13 + rbp]	       106	sort.c	FUNCTION_1	FOR_2
0x40000cd	          0x4901f6	                            add r14, rsi	       106	sort.c	FUNCTION_1	FOR_2
0x40000d0	          0x4c39f1	                            cmp rcx, r14	       111	sort.c	FUNCTION_1	FOR_2	FOR_3
0x40000d3	            0x7311	                           jae 0x40000e6	       111	sort.c	FUNCTION_1	FOR_2	FOR_3
0x40000d5	           0xfb639	                   movzx edi, byte [rcx]	       114	sort.c	FUNCTION_1	FOR_2	FOR_3
0x40000d8	      0x8344bc1001	       add dword [rsp + rdi*4 + 0x10], 1	       114	sort.c	FUNCTION_1	FOR_2	FOR_3
0x40000dd	        0x4883c108	                              add rcx, 8	       113	sort.c	FUNCTION_1	FOR_2	FOR_3
0x40000e1	          0x4939ce	                            cmp r14, rcx	       111	sort.c	FUNCTION_1	FOR_2	FOR_3
0x40000e4	            0x77ef	                            ja 0x40000d5	       111	sort.c	FUNCTION_1	FOR_2	FOR_3
0x40000e6	        0x498d4b04	                      lea rcx, [r11 + 4]	       122	sort.c	FUNCTION_1	FOR_2	FOR_5
0x40000ea	          0x8b79fc	                mov edi, dword [rcx - 4]	       119	sort.c	FUNCTION_1	FOR_2	FOR_4
0x40000ed	             0x139	                    add dword [rcx], edi	       119	sort.c	FUNCTION_1	FOR_2	FOR_4
0x40000ef	        0x4883c104	                              add rcx, 4	       118	sort.c	FUNCTION_1	FOR_2	FOR_4
0x40000f3	          0x4c39c1	                             cmp rcx, r8	       118	sort.c	FUNCTION_1	FOR_2	FOR_4
0x40000f6	            0x75f2	                           jne 0x40000ea	       118	sort.c	FUNCTION_1	FOR_2	FOR_4
0x40000f8	          0x4889f7	                            mov rdi, rsi	       122	sort.c	FUNCTION_1	FOR_2	FOR_5
0x40000fb	          0x4801df	                            add rdi, rbx	       122	sort.c	FUNCTION_1	FOR_2	FOR_5
0x40000fe	            0x7224	                            jb 0x4000124	       122	sort.c	FUNCTION_1	FOR_2	FOR_5
0x4000100	      0x460fb6342f	            movzx r14d, byte [rdi + r13]	       123	sort.c	FUNCTION_1	FOR_2	FOR_5
0x4000105	      0x428b4cb410	    mov ecx, dword [rsp + r14*4 + 0x10] 	       123	sort.c	FUNCTION_1	FOR_2	FOR_5
0x400010a	          0x83e901	                              sub ecx, 1	       123	sort.c	FUNCTION_1	FOR_2	FOR_5
0x400010d	      0x42894cb410	     mov dword [rsp + r14*4 + 0x10], ecx	       123	sort.c	FUNCTION_1	FOR_2	FOR_5
0x4000112	          0x4c8b37	                    mov r14, qword [rdi]	       123	sort.c	FUNCTION_1	FOR_2	FOR_5
0x4000115	            0x89c9	                            mov ecx, ecx	       123	sort.c	FUNCTION_1	FOR_2	FOR_5
0x4000117	        0x4c8934ca	            mov qword [rdx + rcx*8], r14	       123	sort.c	FUNCTION_1	FOR_2	FOR_5
0x400011b	        0x4883ef08	                              sub rdi, 8	       122	sort.c	FUNCTION_1	FOR_2	FOR_5
0x400011f	          0x4839f7	                            cmp rdi, rsi	       122	sort.c	FUNCTION_1	FOR_2	FOR_5
0x4000122	            0x73dc	                           jae 0x4000100	       122	sort.c	FUNCTION_1	FOR_2	FOR_5
0x4000124	          0x4889d1	                            mov rcx, rdx	       122	sort.c	FUNCTION_1	FOR_2	FOR_5
0x4000127	          0x4889f2	                            mov rdx, rsi	       122	sort.c	FUNCTION_1	FOR_2	FOR_5
0x400012a	        0x4983ea01	                              sub r10, 1	        83	sort.c	FUNCTION_1	FOR_2
0x400012e	     0xf8570ffffff	                           jne 0x40000a4	        83	sort.c	FUNCTION_1	FOR_2
0x4000134	    0x488b84241804	           mov rax, qword [rsp + 0x418] 	       131	sort.c	FUNCTION_1
0x400013c	    0x644833042528	                xor rax, qword fs:[0x28]	       131	sort.c	FUNCTION_1
0x4000145	            0x7405	                            je 0x400014c	       131	sort.c	FUNCTION_1
0x4000147	      0xe800000000	                          call 0x400014c	       131	sort.c	FUNCTION_1
0x400014c	    0x4881c4200400	                          add rsp, 0x420	       131	sort.c	FUNCTION_1
0x4000153	              0x5b	                                 pop rbx	       131	sort.c	FUNCTION_1
0x4000154	              0x5d	                                 pop rbp	       131	sort.c	FUNCTION_1
0x4000155	            0x415c	                                 pop r12	       131	sort.c	FUNCTION_1
0x4000157	            0x415d	                                 pop r13	       131	sort.c	FUNCTION_1
0x4000159	            0x415e	                                 pop r14	       131	sort.c	FUNCTION_1
0x400015b	              0xc3	                                     ret	       131	sort.c	FUNCTION_1
