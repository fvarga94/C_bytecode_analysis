md_show_usage	functions,0:ELSE,0:FOR,4:CALL,31:SWITCH,0:WHILE,0:IF,0:DO,0	250
0x400fee4	              0x53	                                push rbx	     10956	tc-i386.c	FUNCTION_127
0x400fee5	          0x4889fb	                            mov rbx, rdi	     10956	tc-i386.c	FUNCTION_127
0x400fee8	      0xba05000000	                              mov edx, 5	     10958	tc-i386.c	FUNCTION_127	CALL_1
0x400feed	      0xbe00000000	                              mov esi, 0	     10958	tc-i386.c	FUNCTION_127	CALL_1
0x400fef2	      0xbf00000000	                              mov edi, 0	     10958	tc-i386.c	FUNCTION_127	CALL_1
0x400fef7	      0xe800000000	                          call 0x400fefc	     10958	tc-i386.c	FUNCTION_127	CALL_1
0x400fefc	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_256
0x400feff	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_256
0x400ff04	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_256
0x400ff07	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_256
0x400ff0c	      0xe800000000	                          call 0x400ff11	        97	stdio2.h	CALL_256
0x400ff11	      0xba05000000	                              mov edx, 5	     10963	tc-i386.c	FUNCTION_127	CALL_2
0x400ff16	      0xbe00000000	                              mov esi, 0	     10963	tc-i386.c	FUNCTION_127	CALL_2
0x400ff1b	      0xbf00000000	                              mov edi, 0	     10963	tc-i386.c	FUNCTION_127	CALL_2
0x400ff20	      0xe800000000	                          call 0x400ff25	     10963	tc-i386.c	FUNCTION_127	CALL_2
0x400ff25	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_256
0x400ff28	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_256
0x400ff2d	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_256
0x400ff30	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_256
0x400ff35	      0xe800000000	                          call 0x400ff3a	        97	stdio2.h	CALL_256
0x400ff3a	      0xba05000000	                              mov edx, 5	     10967	tc-i386.c	FUNCTION_127	CALL_3
0x400ff3f	      0xbe00000000	                              mov esi, 0	     10967	tc-i386.c	FUNCTION_127	CALL_3
0x400ff44	      0xbf00000000	                              mov edi, 0	     10967	tc-i386.c	FUNCTION_127	CALL_3
0x400ff49	      0xe800000000	                          call 0x400ff4e	     10967	tc-i386.c	FUNCTION_127	CALL_3
0x400ff4e	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_256
0x400ff51	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_256
0x400ff56	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_256
0x400ff59	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_256
0x400ff5e	      0xe800000000	                          call 0x400ff63	        97	stdio2.h	CALL_256
0x400ff63	      0xba05000000	                              mov edx, 5	     10972	tc-i386.c	FUNCTION_127
0x400ff68	      0xbe00000000	                              mov esi, 0	     10972	tc-i386.c	FUNCTION_127
0x400ff6d	      0xbf00000000	                              mov edi, 0	     10972	tc-i386.c	FUNCTION_127
0x400ff72	      0xe800000000	                          call 0x400ff77	     10972	tc-i386.c	FUNCTION_127
0x400ff77	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_256
0x400ff7a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_256
0x400ff7f	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_256
0x400ff82	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_256
0x400ff87	      0xe800000000	                          call 0x400ff8c	        97	stdio2.h	CALL_256
0x400ff8c	      0xba05000000	                              mov edx, 5	     10979	tc-i386.c	FUNCTION_127
0x400ff91	      0xbe00000000	                              mov esi, 0	     10979	tc-i386.c	FUNCTION_127
0x400ff96	      0xbf00000000	                              mov edi, 0	     10979	tc-i386.c	FUNCTION_127
0x400ff9b	      0xe800000000	                          call 0x400ffa0	     10979	tc-i386.c	FUNCTION_127
0x400ffa0	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_256
0x400ffa3	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_256
0x400ffa8	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_256
0x400ffab	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_256
0x400ffb0	      0xe800000000	                          call 0x400ffb5	        97	stdio2.h	CALL_256
0x400ffb5	      0xba05000000	                              mov edx, 5	     10982	tc-i386.c	FUNCTION_127	FOR_1	CALL_9
0x400ffba	      0xbe00000000	                              mov esi, 0	     10982	tc-i386.c	FUNCTION_127	FOR_1	CALL_9
0x400ffbf	      0xbf00000000	                              mov edi, 0	     10982	tc-i386.c	FUNCTION_127	FOR_1	CALL_9
0x400ffc4	      0xe800000000	                          call 0x400ffc9	     10982	tc-i386.c	FUNCTION_127	FOR_1	CALL_9
0x400ffc9	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_256
0x400ffcc	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_256
0x400ffd1	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_256
0x400ffd4	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_256
0x400ffd9	      0xe800000000	                          call 0x400ffde	        97	stdio2.h	CALL_256
0x400ffde	      0xba01000000	                              mov edx, 1	     10985	tc-i386.c	FUNCTION_127	CALL_12
0x400ffe3	      0xbe00000000	                              mov esi, 0	     10985	tc-i386.c	FUNCTION_127	CALL_12
0x400ffe8	          0x4889df	                            mov rdi, rbx	     10985	tc-i386.c	FUNCTION_127	CALL_12
0x400ffeb	      0xe82b66ffff	                      call sym.show_arch	     10985	tc-i386.c	FUNCTION_127	CALL_12
0x400fff0	      0xba05000000	                              mov edx, 5	     10986	tc-i386.c	FUNCTION_127	CALL_13
0x400fff5	      0xbe00000000	                              mov esi, 0	     10986	tc-i386.c	FUNCTION_127	CALL_13
0x400fffa	      0xbf00000000	                              mov edi, 0	     10986	tc-i386.c	FUNCTION_127	CALL_13
0x400ffff	      0xe800000000	                          call 0x4010004	     10986	tc-i386.c	FUNCTION_127	CALL_13
0x4010004	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_256
0x4010007	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_256
0x401000c	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_256
0x401000f	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_256
0x4010014	      0xe800000000	                          call 0x4010019	        97	stdio2.h	CALL_256
0x4010019	      0xba00000000	                              mov edx, 0	     10988	tc-i386.c	FUNCTION_127
0x401001e	      0xbe01000000	                              mov esi, 1	     10988	tc-i386.c	FUNCTION_127
0x4010023	          0x4889df	                            mov rdi, rbx	     10988	tc-i386.c	FUNCTION_127
0x4010026	      0xe8f065ffff	                      call sym.show_arch	     10988	tc-i386.c	FUNCTION_127
0x401002b	      0xba05000000	                              mov edx, 5	     10989	tc-i386.c	FUNCTION_127
0x4010030	      0xbe00000000	                              mov esi, 0	     10989	tc-i386.c	FUNCTION_127
0x4010035	      0xbf00000000	                              mov edi, 0	     10989	tc-i386.c	FUNCTION_127
0x401003a	      0xe800000000	                          call 0x401003f	     10989	tc-i386.c	FUNCTION_127
0x401003f	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_256
0x4010042	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_256
0x4010047	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_256
0x401004a	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_256
0x401004f	      0xe800000000	                          call 0x4010054	        97	stdio2.h	CALL_256
0x4010054	      0xba00000000	                              mov edx, 0	     10991	tc-i386.c	FUNCTION_127
0x4010059	      0xbe00000000	                              mov esi, 0	     10991	tc-i386.c	FUNCTION_127
0x401005e	          0x4889df	                            mov rdi, rbx	     10991	tc-i386.c	FUNCTION_127
0x4010061	      0xe8b565ffff	                      call sym.show_arch	     10991	tc-i386.c	FUNCTION_127
0x4010066	      0xba05000000	                              mov edx, 5	     10992	tc-i386.c	FUNCTION_127	FOR_2
0x401006b	      0xbe00000000	                              mov esi, 0	     10992	tc-i386.c	FUNCTION_127	FOR_2
0x4010070	      0xbf00000000	                              mov edi, 0	     10992	tc-i386.c	FUNCTION_127	FOR_2
0x4010075	      0xe800000000	                          call 0x401007a	     10992	tc-i386.c	FUNCTION_127	FOR_2
0x401007a	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_256
0x401007d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_256
0x4010082	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_256
0x4010085	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_256
0x401008a	      0xe800000000	                          call 0x401008f	        97	stdio2.h	CALL_256
0x401008f	      0xba05000000	                              mov edx, 5	     10994	tc-i386.c	FUNCTION_127	FOR_2
0x4010094	      0xbe00000000	                              mov esi, 0	     10994	tc-i386.c	FUNCTION_127	FOR_2
0x4010099	      0xbf00000000	                              mov edi, 0	     10994	tc-i386.c	FUNCTION_127	FOR_2
0x401009e	      0xe800000000	                          call 0x40100a3	     10994	tc-i386.c	FUNCTION_127	FOR_2
0x40100a3	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_256
0x40100a6	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_256
0x40100ab	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_256
0x40100ae	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_256
0x40100b3	      0xe800000000	                          call 0x40100b8	        97	stdio2.h	CALL_256
0x40100b8	      0xba05000000	                              mov edx, 5	     10997	tc-i386.c	FUNCTION_127	FOR_2
0x40100bd	      0xbe00000000	                              mov esi, 0	     10997	tc-i386.c	FUNCTION_127	FOR_2
0x40100c2	      0xbf00000000	                              mov edi, 0	     10997	tc-i386.c	FUNCTION_127	FOR_2
0x40100c7	      0xe800000000	                          call 0x40100cc	     10997	tc-i386.c	FUNCTION_127	FOR_2
0x40100cc	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_256
0x40100cf	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_256
0x40100d4	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_256
0x40100d7	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_256
0x40100dc	      0xe800000000	                          call 0x40100e1	        97	stdio2.h	CALL_256
0x40100e1	      0xba05000000	                              mov edx, 5	     11000	tc-i386.c	FUNCTION_127	FOR_2
0x40100e6	      0xbe00000000	                              mov esi, 0	     11000	tc-i386.c	FUNCTION_127	FOR_2
0x40100eb	      0xbf00000000	                              mov edi, 0	     11000	tc-i386.c	FUNCTION_127	FOR_2
0x40100f0	      0xe800000000	                          call 0x40100f5	     11000	tc-i386.c	FUNCTION_127	FOR_2
0x40100f5	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_256
0x40100f8	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_256
0x40100fd	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_256
0x4010100	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_256
0x4010105	      0xe800000000	                          call 0x401010a	        97	stdio2.h	CALL_256
0x401010a	      0xba05000000	                              mov edx, 5	     11003	tc-i386.c	FUNCTION_127	FOR_2	FOR_3
0x401010f	      0xbe00000000	                              mov esi, 0	     11003	tc-i386.c	FUNCTION_127	FOR_2	FOR_3
0x4010114	      0xbf00000000	                              mov edi, 0	     11003	tc-i386.c	FUNCTION_127	FOR_2	FOR_3
0x4010119	      0xe800000000	                          call 0x401011e	     11003	tc-i386.c	FUNCTION_127	FOR_2	FOR_3
0x401011e	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_256
0x4010121	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_256
0x4010126	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_256
0x4010129	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_256
0x401012e	      0xe800000000	                          call 0x4010133	        97	stdio2.h	CALL_256
0x4010133	      0xba05000000	                              mov edx, 5	     11006	tc-i386.c	FUNCTION_127	FOR_2	FOR_3	FOR_4	CALL_20
0x4010138	      0xbe00000000	                              mov esi, 0	     11006	tc-i386.c	FUNCTION_127	FOR_2	FOR_3	FOR_4	CALL_20
0x401013d	      0xbf00000000	                              mov edi, 0	     11006	tc-i386.c	FUNCTION_127	FOR_2	FOR_3	FOR_4	CALL_20
0x4010142	      0xe800000000	                          call 0x4010147	     11006	tc-i386.c	FUNCTION_127	FOR_2	FOR_3	FOR_4	CALL_20
0x4010147	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_256
0x401014a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_256
0x401014f	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_256
0x4010152	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_256
0x4010157	      0xe800000000	                          call 0x401015c	        97	stdio2.h	CALL_256
0x401015c	      0xba05000000	                              mov edx, 5	     11009	tc-i386.c	FUNCTION_127	CALL_23
0x4010161	      0xbe00000000	                              mov esi, 0	     11009	tc-i386.c	FUNCTION_127	CALL_23
0x4010166	      0xbf00000000	                              mov edi, 0	     11009	tc-i386.c	FUNCTION_127	CALL_23
0x401016b	      0xe800000000	                          call 0x4010170	     11009	tc-i386.c	FUNCTION_127	CALL_23
0x4010170	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_256
0x4010173	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_256
0x4010178	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_256
0x401017b	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_256
0x4010180	      0xe800000000	                          call 0x4010185	        97	stdio2.h	CALL_256
0x4010185	      0xba05000000	                              mov edx, 5	     11013	tc-i386.c	FUNCTION_127	CALL_26
0x401018a	      0xbe00000000	                              mov esi, 0	     11013	tc-i386.c	FUNCTION_127	CALL_26
0x401018f	      0xbf00000000	                              mov edi, 0	     11013	tc-i386.c	FUNCTION_127	CALL_26
0x4010194	      0xe800000000	                          call 0x4010199	     11013	tc-i386.c	FUNCTION_127	CALL_26
0x4010199	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_256
0x401019c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_256
0x40101a1	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_256
0x40101a4	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_256
0x40101a9	      0xe800000000	                          call 0x40101ae	        97	stdio2.h	CALL_256
0x40101ae	      0xba05000000	                              mov edx, 5	     11015	tc-i386.c	FUNCTION_127	CALL_27
0x40101b3	      0xbe00000000	                              mov esi, 0	     11015	tc-i386.c	FUNCTION_127	CALL_27
0x40101b8	      0xbf00000000	                              mov edi, 0	     11015	tc-i386.c	FUNCTION_127	CALL_27
0x40101bd	      0xe800000000	                          call 0x40101c2	     11015	tc-i386.c	FUNCTION_127	CALL_27
0x40101c2	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_256
0x40101c5	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_256
0x40101ca	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_256
0x40101cd	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_256
0x40101d2	      0xe800000000	                          call 0x40101d7	        97	stdio2.h	CALL_256
0x40101d7	      0xba05000000	                              mov edx, 5	     11017	tc-i386.c	FUNCTION_127
0x40101dc	      0xbe00000000	                              mov esi, 0	     11017	tc-i386.c	FUNCTION_127
0x40101e1	      0xbf00000000	                              mov edi, 0	     11017	tc-i386.c	FUNCTION_127
0x40101e6	      0xe800000000	                          call 0x40101eb	     11017	tc-i386.c	FUNCTION_127
0x40101eb	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_256
0x40101ee	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_256
0x40101f3	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_256
0x40101f6	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_256
0x40101fb	      0xe800000000	                          call 0x4010200	        97	stdio2.h	CALL_256
0x4010200	      0xba05000000	                              mov edx, 5	     11019	tc-i386.c	FUNCTION_127
0x4010205	      0xbe00000000	                              mov esi, 0	     11019	tc-i386.c	FUNCTION_127
0x401020a	      0xbf00000000	                              mov edi, 0	     11019	tc-i386.c	FUNCTION_127
0x401020f	      0xe800000000	                          call 0x4010214	     11019	tc-i386.c	FUNCTION_127
0x4010214	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_256
0x4010217	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_256
0x401021c	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_256
0x401021f	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_256
0x4010224	      0xe800000000	                          call 0x4010229	        97	stdio2.h	CALL_256
0x4010229	      0xba05000000	                              mov edx, 5	     11021	tc-i386.c	FUNCTION_127
0x401022e	      0xbe00000000	                              mov esi, 0	     11021	tc-i386.c	FUNCTION_127
0x4010233	      0xbf00000000	                              mov edi, 0	     11021	tc-i386.c	FUNCTION_127
0x4010238	      0xe800000000	                          call 0x401023d	     11021	tc-i386.c	FUNCTION_127
0x401023d	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_256
0x4010240	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_256
0x4010245	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_256
0x4010248	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_256
0x401024d	      0xe800000000	                          call 0x4010252	        97	stdio2.h	CALL_256
0x4010252	      0xba05000000	                              mov edx, 5	     11023	tc-i386.c	FUNCTION_127
0x4010257	      0xbe00000000	                              mov esi, 0	     11023	tc-i386.c	FUNCTION_127
0x401025c	      0xbf00000000	                              mov edi, 0	     11023	tc-i386.c	FUNCTION_127
0x4010261	      0xe800000000	                          call 0x4010266	     11023	tc-i386.c	FUNCTION_127
0x4010266	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_256
0x4010269	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_256
0x401026e	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_256
0x4010271	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_256
0x4010276	      0xe800000000	                          call 0x401027b	        97	stdio2.h	CALL_256
0x401027b	      0xba05000000	                              mov edx, 5	     11029	tc-i386.c	
0x4010280	      0xbe00000000	                              mov esi, 0	     11029	tc-i386.c	
0x4010285	      0xbf00000000	                              mov edi, 0	     11029	tc-i386.c	
0x401028a	      0xe800000000	                          call 0x401028f	     11029	tc-i386.c	
0x401028f	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_256
0x4010292	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_256
0x4010297	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_256
0x401029a	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_256
0x401029f	      0xe800000000	                          call 0x40102a4	        97	stdio2.h	CALL_256
0x40102a4	      0xba05000000	                              mov edx, 5	     11032	tc-i386.c	
0x40102a9	      0xbe00000000	                              mov esi, 0	     11032	tc-i386.c	
0x40102ae	      0xbf00000000	                              mov edi, 0	     11032	tc-i386.c	
0x40102b3	      0xe800000000	                          call 0x40102b8	     11032	tc-i386.c	
0x40102b8	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_256
0x40102bb	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_256
0x40102c0	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_256
0x40102c3	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_256
0x40102c8	      0xe800000000	                          call 0x40102cd	        97	stdio2.h	CALL_256
0x40102cd	      0xba05000000	                              mov edx, 5	     11036	tc-i386.c	
0x40102d2	      0xbe00000000	                              mov esi, 0	     11036	tc-i386.c	
0x40102d7	      0xbf00000000	                              mov edi, 0	     11036	tc-i386.c	
0x40102dc	      0xe800000000	                          call 0x40102e1	     11036	tc-i386.c	
0x40102e1	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_256
0x40102e4	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_256
0x40102e9	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_256
0x40102ec	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_256
0x40102f1	      0xe800000000	                          call 0x40102f6	        97	stdio2.h	CALL_256
0x40102f6	      0xba05000000	                              mov edx, 5	     11039	tc-i386.c	FUNCTION_128	IF_1
0x40102fb	      0xbe00000000	                              mov esi, 0	     11039	tc-i386.c	FUNCTION_128	IF_1
0x4010300	      0xbf00000000	                              mov edi, 0	     11039	tc-i386.c	FUNCTION_128	IF_1
0x4010305	      0xe800000000	                          call 0x401030a	     11039	tc-i386.c	FUNCTION_128	IF_1
0x401030a	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_256
0x401030d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_256
0x4010312	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_256
0x4010315	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_256
0x401031a	      0xe800000000	                          call 0x401031f	        97	stdio2.h	CALL_256
0x401031f	      0xba05000000	                              mov edx, 5	     11041	tc-i386.c	FUNCTION_128	IF_1	IF_2
0x4010324	      0xbe00000000	                              mov esi, 0	     11041	tc-i386.c	FUNCTION_128	IF_1	IF_2
0x4010329	      0xbf00000000	                              mov edi, 0	     11041	tc-i386.c	FUNCTION_128	IF_1	IF_2
0x401032e	      0xe800000000	                          call 0x4010333	     11041	tc-i386.c	FUNCTION_128	IF_1	IF_2
0x4010333	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_256
0x4010336	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_256
0x401033b	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_256
0x401033e	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_256
0x4010343	      0xe800000000	                          call 0x4010348	        97	stdio2.h	CALL_256
0x4010348	              0x5b	                                 pop rbx	     11043	tc-i386.c	FUNCTION_128	IF_1	ELSE_1
0x4010349	              0xc3	                                     ret	     11043	tc-i386.c	FUNCTION_128	IF_1	ELSE_1
offset_in_range	functions,0:ELSE,0:FOR,0:CALL,5:SWITCH,1:WHILE,0:IF,3:DO,0	71
0x4006465	              0x55	                                push rbp	      2272	tc-i386.c	FUNCTION_39
0x4006466	              0x53	                                push rbx	      2272	tc-i386.c	FUNCTION_39
0x4006467	        0x4883ec68	                           sub rsp, 0x68	      2272	tc-i386.c	FUNCTION_39
0x400646b	    0x64488b042528	                mov rax, qword fs:[0x28]	      2272	tc-i386.c	FUNCTION_39
0x4006474	      0x4889442458	             mov qword [rsp + 0x58], rax	      2272	tc-i386.c	FUNCTION_39
0x4006479	            0x31c0	                            xor eax, eax	      2272	tc-i386.c	FUNCTION_39
0x400647b	          0x83fe02	                              cmp esi, 2	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x400647e	            0x7424	                            je 0x40064a4	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x4006480	          0x83fe02	                              cmp esi, 2	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x4006483	            0x7f0c	                            jg 0x4006491	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x4006485	      0xbbff000000	                           mov ebx, 0xff	      2277	tc-i386.c	FUNCTION_39	SWITCH_1
0x400648a	          0x83fe01	                              cmp esi, 1	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x400648d	            0x7435	                            je 0x40064c4	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x400648f	            0xeb1a	                           jmp 0x40064ab	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x4006491	          0x83fe04	                              cmp esi, 4	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x4006494	            0x7429	                            je 0x40064bf	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x4006496	    0x48c7c3ffffff	             mov rbx, 0xffffffffffffffff	      2281	tc-i386.c	FUNCTION_39	SWITCH_1
0x400649d	          0x83fe08	                              cmp esi, 8	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x40064a0	            0x7422	                            je 0x40064c4	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x40064a2	            0xeb07	                           jmp 0x40064ab	      2275	tc-i386.c	FUNCTION_39	SWITCH_1
0x40064a4	      0xbbffff0000	                         mov ebx, 0xffff	      2278	tc-i386.c	FUNCTION_39	SWITCH_1
0x40064a9	            0xeb19	                           jmp 0x40064c4	      2278	tc-i386.c	FUNCTION_39	SWITCH_1
0x40064ab	      0xba00000000	                              mov edx, 0	      2283	tc-i386.c	FUNCTION_39	SWITCH_1	CALL_1
0x40064b0	      0xbeeb080000	                          mov esi, 0x8eb	      2283	tc-i386.c	FUNCTION_39	SWITCH_1	CALL_1
0x40064b5	      0xbf00000000	                              mov edi, 0	      2283	tc-i386.c	FUNCTION_39	SWITCH_1	CALL_1
0x40064ba	      0xe800000000	                          call 0x40064bf	      2283	tc-i386.c	FUNCTION_39	SWITCH_1	CALL_1
0x40064bf	      0xbbffffffff	                     mov ebx, 0xffffffff	      2279	tc-i386.c	FUNCTION_39	SWITCH_1
0x40064c4	    0x833d00000000	               cmp dword [0x040064cb], 2	      2288	tc-i386.c	FUNCTION_39	IF_1
0x40064cb	            0x7509	                           jne 0x40064d6	      2288	tc-i386.c	FUNCTION_39	IF_1
0x40064cd	    0x803d00000000	                cmp byte [0x040064d4], 0	      2289	tc-i386.c	FUNCTION_39	IF_1
0x40064d4	            0x741e	                            je 0x40064f4	      2289	tc-i386.c	FUNCTION_39	IF_1
0x40064d6	    0x48b800000000	          movabs rax, 0xffffffff00000000	      2290	tc-i386.c	FUNCTION_39	IF_1	IF_2
0x40064e0	          0x4885c7	                           test rdi, rax	      2290	tc-i386.c	FUNCTION_39	IF_1	IF_2
0x40064e3	            0x750f	                           jne 0x40064f4	      2290	tc-i386.c	FUNCTION_39	IF_1	IF_2
0x40064e5	      0xb800000080	                     mov eax, 0x80000000	      2291	tc-i386.c	FUNCTION_39	IF_1	IF_2
0x40064ea	          0x4831c7	                            xor rdi, rax	      2291	tc-i386.c	FUNCTION_39	IF_1	IF_2
0x40064ed	    0x4881c7000000	             add rdi, 0xffffffff80000000	      2291	tc-i386.c	FUNCTION_39	IF_1	IF_2
0x40064f4	          0x4889fd	                            mov rbp, rdi	      2294	tc-i386.c	FUNCTION_39	IF_3
0x40064f7	          0x4889da	                            mov rdx, rbx	      2294	tc-i386.c	FUNCTION_39	IF_3
0x40064fa	          0x48f7d2	                                 not rdx	      2294	tc-i386.c	FUNCTION_39	IF_3
0x40064fd	          0x4821d7	                            and rdi, rdx	      2294	tc-i386.c	FUNCTION_39	IF_3
0x4006500	          0x4839fa	                            cmp rdx, rdi	      2294	tc-i386.c	FUNCTION_39	IF_3
0x4006503	            0x7449	                            je 0x400654e	      2294	tc-i386.c	FUNCTION_39	IF_3
0x4006505	          0x4885ff	                           test rdi, rdi	      2294	tc-i386.c	FUNCTION_39	IF_3
0x4006508	            0x7444	                            je 0x400654e	      2294	tc-i386.c	FUNCTION_39	IF_3
0x400650a	          0x4889ee	                            mov rsi, rbp	      2298	tc-i386.c	FUNCTION_39	IF_3	CALL_2
0x400650d	          0x4889e7	                            mov rdi, rsp	      2298	tc-i386.c	FUNCTION_39	IF_3	CALL_2
0x4006510	      0xe800000000	                          call 0x4006515	      2298	tc-i386.c	FUNCTION_39	IF_3	CALL_2
0x4006515	          0x4889de	                            mov rsi, rbx	      2299	tc-i386.c	FUNCTION_39	IF_3	CALL_3
0x4006518	          0x4821ee	                            and rsi, rbp	      2299	tc-i386.c	FUNCTION_39	IF_3	CALL_3
0x400651b	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2299	tc-i386.c	FUNCTION_39	IF_3	CALL_3
0x4006520	      0xe800000000	                          call 0x4006525	      2299	tc-i386.c	FUNCTION_39	IF_3	CALL_3
0x4006525	      0xba05000000	                              mov edx, 5	      2300	tc-i386.c	FUNCTION_39	IF_3	CALL_5
0x400652a	      0xbe00000000	                              mov esi, 0	      2300	tc-i386.c	FUNCTION_39	IF_3	CALL_5
0x400652f	      0xbf00000000	                              mov edi, 0	      2300	tc-i386.c	FUNCTION_39	IF_3	CALL_5
0x4006534	      0xe800000000	                          call 0x4006539	      2300	tc-i386.c	FUNCTION_39	IF_3	CALL_5
0x4006539	      0x488d542430	                   lea rdx, [rsp + 0x30]	      2300	tc-i386.c	FUNCTION_39	IF_3	CALL_5
0x400653e	          0x4889e6	                            mov rsi, rsp	      2300	tc-i386.c	FUNCTION_39	IF_3	CALL_5
0x4006541	          0x4889c7	                            mov rdi, rax	      2300	tc-i386.c	FUNCTION_39	IF_3	CALL_5
0x4006544	      0xb800000000	                              mov eax, 0	      2300	tc-i386.c	FUNCTION_39	IF_3	CALL_5
0x4006549	      0xe800000000	                          call 0x400654e	      2300	tc-i386.c	FUNCTION_39	IF_3	CALL_5
0x400654e	          0x4889d8	                            mov rax, rbx	      2302	tc-i386.c	FUNCTION_39
0x4006551	          0x4821e8	                            and rax, rbp	      2302	tc-i386.c	FUNCTION_39
0x4006554	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	      2303	tc-i386.c	FUNCTION_39
0x4006559	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2303	tc-i386.c	FUNCTION_39
0x4006562	            0x7405	                            je 0x4006569	      2303	tc-i386.c	FUNCTION_39
0x4006564	      0xe800000000	                          call 0x4006569	      2303	tc-i386.c	FUNCTION_39
0x4006569	        0x4883c468	                           add rsp, 0x68	      2303	tc-i386.c	FUNCTION_39
0x400656d	              0x5b	                                 pop rbx	      2303	tc-i386.c	FUNCTION_39
0x400656e	              0x5d	                                 pop rbp	      2303	tc-i386.c	FUNCTION_39
0x400656f	              0xc3	                                     ret	      2303	tc-i386.c	FUNCTION_39
parse_real_register	functions,0:ELSE,0:FOR,0:CALL,4:SWITCH,0:WHILE,1:IF,27:DO,0	204
0x4002dc2	              0x55	                                push rbp	     10161	tc-i386.c	FUNCTION_120
0x4002dc3	              0x53	                                push rbx	     10161	tc-i386.c	FUNCTION_120
0x4002dc4	        0x4883ec28	                           sub rsp, 0x28	     10161	tc-i386.c	FUNCTION_120
0x4002dc8	          0x4889fb	                            mov rbx, rdi	     10161	tc-i386.c	FUNCTION_120
0x4002dcb	          0x4889f5	                            mov rbp, rsi	     10161	tc-i386.c	FUNCTION_120
0x4002dce	    0x64488b042528	                mov rax, qword fs:[0x28]	     10161	tc-i386.c	FUNCTION_120
0x4002dd7	      0x4889442418	             mov qword [rsp + 0x18], rax	     10161	tc-i386.c	FUNCTION_120
0x4002ddc	            0x31c0	                            xor eax, eax	     10161	tc-i386.c	FUNCTION_120
0x4002dde	          0x803f25	                    cmp byte [rdi], 0x25	     10169	tc-i386.c	FUNCTION_120	IF_1
0x4002de1	           0xf94c0	                                 sete al	     10169	tc-i386.c	FUNCTION_120	IF_1
0x4002de4	           0xfb6c0	                           movzx eax, al	     10169	tc-i386.c	FUNCTION_120	IF_1
0x4002de7	          0x4801c3	                            add rbx, rax	     10169	tc-i386.c	FUNCTION_120	IF_1
0x4002dea	           0xfb613	                   movzx edx, byte [rbx]	     10171	tc-i386.c	FUNCTION_120	IF_2
0x4002ded	          0x80fa20	                            cmp dl, 0x20	     10171	tc-i386.c	FUNCTION_120	IF_2
0x4002df0	     0xf85e3020000	                           jne 0x40030d9	     10171	tc-i386.c	FUNCTION_120	IF_2
0x4002df6	        0x488d4b01	                      lea rcx, [rbx + 1]	     10172	tc-i386.c	FUNCTION_120	IF_2
0x4002dfa	         0xfb65301	               movzx edx, byte [rbx + 1]	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4002dfe	          0x4863c2	                         movsxd rax, edx	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4002e01	     0xfb680000000	                   movzx eax, byte [rax]	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4002e08	          0x880424	                      mov byte [rsp], al	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4002e0b	          0x4889cb	                            mov rbx, rcx	     10172	tc-i386.c	FUNCTION_120	IF_2
0x4002e0e	            0x84c0	                             test al, al	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4002e10	            0x750c	                           jne 0x4002e1e	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4002e12	            0xeb2f	                           jmp 0x4002e43	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4002e14	          0x4839f3	                            cmp rbx, rsi	     10177	tc-i386.c	FUNCTION_120	WHILE_1	IF_3
0x4002e17	            0x750e	                           jne 0x4002e27	     10177	tc-i386.c	FUNCTION_120	WHILE_1	IF_3
0x4002e19	      0xe942020000	                           jmp 0x4003060	     10177	tc-i386.c	FUNCTION_120	WHILE_1	IF_3
0x4002e1e	        0x488d7307	                      lea rsi, [rbx + 7]	     10177	tc-i386.c	FUNCTION_120	WHILE_1	IF_3
0x4002e22	      0x488d442401	                      lea rax, [rsp + 1]	     10172	tc-i386.c	FUNCTION_120	IF_2
0x4002e27	        0x4883c301	                              add rbx, 1	     10179	tc-i386.c	FUNCTION_120	WHILE_1
0x4002e2b	        0x4883c001	                              add rax, 1	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4002e2f	           0xfb613	                   movzx edx, byte [rbx]	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4002e32	          0x4863ca	                         movsxd rcx, edx	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4002e35	     0xfb689000000	                   movzx ecx, byte [rcx]	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4002e3c	          0x8848ff	                  mov byte [rax - 1], cl	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4002e3f	            0x84c9	                             test cl, cl	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4002e41	            0x75d1	                           jne 0x4002e14	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x4002e43	    0x833d00000000	               cmp dword [0x04002e4a], 0	     10185	tc-i386.c	FUNCTION_120	IF_4
0x4002e4a	            0x7410	                            je 0x4002e5c	     10185	tc-i386.c	FUNCTION_120	IF_4
0x4002e4c	          0x4863d2	                         movsxd rdx, edx	     10185	tc-i386.c	FUNCTION_120	IF_4
0x4002e4f	    0x80ba00000000	                       cmp byte [rdx], 0	     10185	tc-i386.c	FUNCTION_120	IF_4
0x4002e56	     0xf850b020000	                           jne 0x4003067	     10185	tc-i386.c	FUNCTION_120	IF_4
0x4002e5c	        0x48895d00	                    mov qword [rbp], rbx	     10188	tc-i386.c	FUNCTION_120
0x4002e60	          0x4889e6	                            mov rsi, rsp	     10190	tc-i386.c	FUNCTION_120	CALL_1
0x4002e63	    0x488b3d000000	            mov rdi, qword [0x04002e6a] 	     10190	tc-i386.c	FUNCTION_120	CALL_1
0x4002e6a	      0xe800000000	                          call 0x4002e6f	     10190	tc-i386.c	FUNCTION_120	CALL_1
0x4002e6f	          0x4889c1	                            mov rcx, rax	     10190	tc-i386.c	FUNCTION_120	CALL_1
0x4002e72	    0x483d00000000	                              cmp rax, 0	     10193	tc-i386.c	FUNCTION_120	IF_5
0x4002e78	     0xf85a1000000	                           jne 0x4002f1f	     10193	tc-i386.c	FUNCTION_120	IF_5
0x4002e7e	    0xf60500000000	            test byte [0x04002e85], 0xe 	     10195	tc-i386.c	FUNCTION_120	IF_5	IF_6
0x4002e85	     0xf84e3010000	                            je 0x400306e	     10195	tc-i386.c	FUNCTION_120	IF_5	IF_6
0x4002e8b	          0x803b20	                    cmp byte [rbx], 0x20	     10201	tc-i386.c	FUNCTION_120	IF_5	IF_7
0x4002e8e	           0xf94c0	                                 sete al	     10201	tc-i386.c	FUNCTION_120	IF_5	IF_7
0x4002e91	           0xfb6c0	                           movzx eax, al	     10201	tc-i386.c	FUNCTION_120	IF_5	IF_7
0x4002e94	          0x4801c3	                            add rbx, rax	     10201	tc-i386.c	FUNCTION_120	IF_5	IF_7
0x4002e97	          0x803b28	                    cmp byte [rbx], 0x28	     10202	tc-i386.c	FUNCTION_120	IF_5	IF_8
0x4002e9a	     0xf8588000000	                           jne 0x4002f28	     10202	tc-i386.c	FUNCTION_120	IF_5	IF_8
0x4002ea0	        0x488d5302	                      lea rdx, [rbx + 2]	     10206	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_9
0x4002ea4	        0x488d4301	                      lea rax, [rbx + 1]	     10206	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_9
0x4002ea8	        0x807b0120	                cmp byte [rbx + 1], 0x20	     10206	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_9
0x4002eac	        0x480f45d0	                         cmovne rdx, rax	     10206	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_9
0x4002eb0	           0xfb61a	                   movzx ebx, byte [rdx]	     10207	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10
0x4002eb3	          0x8d43d0	                   lea eax, [rbx - 0x30]	     10207	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10
0x4002eb6	            0x3c07	                               cmp al, 7	     10207	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10
0x4002eb8	     0xf87b7010000	                            ja 0x4003075	     10207	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10
0x4002ebe	        0x488d4a01	                      lea rcx, [rdx + 1]	     10210	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10
0x4002ec2	        0x488d4202	                      lea rax, [rdx + 2]	     10210	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10
0x4002ec6	        0x807a0120	                cmp byte [rdx + 1], 0x20	     10210	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10
0x4002eca	        0x480f45c1	                         cmovne rax, rcx	     10210	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10
0x4002ece	          0x803829	                    cmp byte [rax], 0x29	     10213	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x4002ed1	     0xf85a5010000	                           jne 0x400307c	     10213	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x4002ed7	        0x4883c001	                              add rax, 1	     10215	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x4002edb	        0x48894500	                    mov qword [rbp], rax	     10215	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x4002edf	      0xbe00000000	                              mov esi, 0	     10216	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12	CALL_2
0x4002ee4	    0x488b3d000000	            mov rdi, qword [0x04002eeb] 	     10216	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12	CALL_2
0x4002eeb	      0xe800000000	                          call 0x4002ef0	     10216	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12	CALL_2
0x4002ef0	          0x4885c0	                           test rax, rax	     10217	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12	CALL_3
0x4002ef3	            0x7514	                           jne 0x4002f09	     10217	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12	CALL_3
0x4002ef5	      0xba00000000	                              mov edx, 0	     10217	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12	CALL_3
0x4002efa	      0xbee9270000	                         mov esi, 0x27e9	     10217	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12	CALL_3
0x4002eff	      0xbf00000000	                              mov edi, 0	     10217	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12	CALL_3
0x4002f04	      0xe800000000	                          call 0x4002f09	     10217	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12	CALL_3
0x4002f09	           0xfbed3	                           movsx edx, bl	     10218	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x4002f0c	          0x83ea30	                           sub edx, 0x30	     10218	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x4002f0f	          0x4863d2	                         movsxd rdx, edx	     10218	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x4002f12	        0x488d1452	                  lea rdx, [rdx + rdx*2]	     10218	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x4002f16	        0x488d04d0	                  lea rax, [rax + rdx*8]	     10218	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x4002f1a	      0xe9a8010000	                           jmp 0x40030c7	     10218	tc-i386.c	FUNCTION_120	IF_5	IF_8	IF_10	IF_12
0x4002f1f	          0x4885c0	                           test rax, rax	     10226	tc-i386.c	FUNCTION_120	IF_13
0x4002f22	     0xf845b010000	                            je 0x4003083	     10226	tc-i386.c	FUNCTION_120	IF_13
0x4002f28	          0x4889c8	                            mov rax, rcx	     10227	tc-i386.c	FUNCTION_120	IF_13
0x4002f2b	    0x833d00000000	               cmp dword [0x04002f32], 0	     10226	tc-i386.c	FUNCTION_120	IF_13
0x4002f32	     0xf858f010000	                           jne 0x40030c7	     10226	tc-i386.c	FUNCTION_120	IF_13
0x4002f38	        0x83790c00	                cmp dword [rcx + 0xc], 0	      1514	tc-i386.c	FUNCTION_7	SWITCH_1	IF_2
0x4002f3c	            0x750a	                           jne 0x4002f48	      1514	tc-i386.c	FUNCTION_7	SWITCH_1	IF_2
0x4002f3e	        0x83790800	                  cmp dword [rcx + 8], 0	     10229	tc-i386.c	FUNCTION_120	IF_14	CALL_4
0x4002f42	     0xf8442010000	                            je 0x400308a	     10229	tc-i386.c	FUNCTION_120	IF_14	CALL_4
0x4002f48	    0xf74108700100	       test dword [rcx + 8], 0x80000170 	     10232	tc-i386.c	FUNCTION_120	IF_15
0x4002f4f	            0x740d	                            je 0x4002f5e	     10232	tc-i386.c	FUNCTION_120	IF_15
0x4002f51	    0xf60500000000	               test byte [0x04002f58], 4	     10237	tc-i386.c	FUNCTION_120	IF_15
0x4002f58	     0xf8433010000	                            je 0x4003091	     10237	tc-i386.c	FUNCTION_120	IF_15
0x4002f5e	        0xf6410802	                  test byte [rcx + 8], 2	     10240	tc-i386.c	FUNCTION_120	IF_16
0x4002f62	            0x740d	                            je 0x4002f71	     10240	tc-i386.c	FUNCTION_120	IF_16
0x4002f64	    0xf60500000000	           test byte [0x04002f6b], 0x40 	     10240	tc-i386.c	FUNCTION_120	IF_16
0x4002f6b	     0xf8427010000	                            je 0x4003098	     10240	tc-i386.c	FUNCTION_120	IF_16
0x4002f71	     0xfb605000000	           movzx eax, byte [0x04002f78] 	     10243	tc-i386.c	FUNCTION_120	IF_17
0x4002f78	            0x84c0	                             test al, al	     10243	tc-i386.c	FUNCTION_120	IF_17
0x4002f7a	            0x7835	                            js 0x4002fb1	     10243	tc-i386.c	FUNCTION_120	IF_17
0x4002f7c	    0x48ba08000000	                movabs rdx, 0x2000000008	     10245	tc-i386.c	FUNCTION_120	IF_17	IF_18
0x4002f86	        0x48855108	               test qword [rcx + 8], rdx	     10245	tc-i386.c	FUNCTION_120	IF_17	IF_18
0x4002f8a	     0xf850f010000	                           jne 0x400309f	     10245	tc-i386.c	FUNCTION_120	IF_17	IF_18
0x4002f90	            0xa820	                           test al, 0x20	     10248	tc-i386.c	FUNCTION_120	IF_17	IF_19
0x4002f92	            0x751d	                           jne 0x4002fb1	     10248	tc-i386.c	FUNCTION_120	IF_17	IF_19
0x4002f94	         0xfb6410c	            movzx eax, byte [rcx + 0xc] 	     10250	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_20
0x4002f98	            0xa810	                           test al, 0x10	     10250	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_20
0x4002f9a	     0xf8506010000	                           jne 0x40030a6	     10250	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_20
0x4002fa0	    0x803d00000000	                cmp byte [0x04002fa7], 0	     10253	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_21
0x4002fa7	            0x7808	                            js 0x4002fb1	     10253	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_21
0x4002fa9	            0xa808	                              test al, 8	     10253	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_21
0x4002fab	     0xf85fc000000	                           jne 0x40030ad	     10253	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_21
0x4002fb1	        0xf6410d02	                test byte [rcx + 0xd], 2	     10258	tc-i386.c	FUNCTION_120	IF_22
0x4002fb5	            0x740d	                            je 0x4002fc4	     10258	tc-i386.c	FUNCTION_120	IF_22
0x4002fb7	    0xf60500000000	               test byte [0x04002fbe], 1	     10258	tc-i386.c	FUNCTION_120	IF_22
0x4002fbe	     0xf84f0000000	                            je 0x40030b4	     10258	tc-i386.c	FUNCTION_120	IF_22
0x4002fc4	    0x833d00000000	               cmp dword [0x04002fcb], 0	     10262	tc-i386.c	FUNCTION_120	IF_23
0x4002fcb	            0x750f	                           jne 0x4002fdc	     10262	tc-i386.c	FUNCTION_120	IF_23
0x4002fcd	         0xfb64111	           movzx eax, byte [rcx + 0x11] 	     10263	tc-i386.c	FUNCTION_120	IF_23
0x4002fd1	          0x83c004	                              add eax, 4	     10263	tc-i386.c	FUNCTION_120	IF_23
0x4002fd4	            0x3c01	                               cmp al, 1	     10263	tc-i386.c	FUNCTION_120	IF_23
0x4002fd6	     0xf86df000000	                           jbe 0x40030bb	     10263	tc-i386.c	FUNCTION_120	IF_23
0x4002fdc	        0xf6411004	               test byte [rcx + 0x10], 4	     10268	tc-i386.c	FUNCTION_120	IF_24
0x4002fe0	            0x7429	                            je 0x400300b	     10268	tc-i386.c	FUNCTION_120	IF_24
0x4002fe2	    0x803d00000000	                cmp byte [0x04002fe9], 0	     10270	tc-i386.c	FUNCTION_120	IF_24	IF_25
0x4002fe9	     0xf89d3000000	                           jns 0x40030c2	     10270	tc-i386.c	FUNCTION_120	IF_24	IF_25
0x4002fef	      0xb800000000	                              mov eax, 0	     10272	tc-i386.c	FUNCTION_120	IF_24	IF_25
0x4002ff4	    0x833d00000000	               cmp dword [0x04002ffb], 2	     10271	tc-i386.c	FUNCTION_120	IF_24	IF_25
0x4002ffb	     0xf85c6000000	                           jne 0x40030c7	     10271	tc-i386.c	FUNCTION_120	IF_24	IF_25
0x4003001	    0xc70500000000	               mov dword [0x0400300b], 3	     10274	tc-i386.c	FUNCTION_120	IF_24
0x400300b	        0xf6411003	               test byte [rcx + 0x10], 3	     10277	tc-i386.c	FUNCTION_120	IF_26
0x400300f	            0x7506	                           jne 0x4003017	     10277	tc-i386.c	FUNCTION_120	IF_26
0x4003011	        0xf6410c02	                test byte [rcx + 0xc], 2	     10277	tc-i386.c	FUNCTION_120	IF_26
0x4003015	            0x7421	                            je 0x4003038	     10277	tc-i386.c	FUNCTION_120	IF_26
0x4003017	    0xf60500000000	               test byte [0x0400301e], 2	     10278	tc-i386.c	FUNCTION_120	IF_26
0x400301e	            0x7406	                            je 0x4003026	     10278	tc-i386.c	FUNCTION_120	IF_26
0x4003020	        0xf6410810	               test byte [rcx + 8], 0x10	     10278	tc-i386.c	FUNCTION_120	IF_26
0x4003024	            0x7512	                           jne 0x4003038	     10278	tc-i386.c	FUNCTION_120	IF_26
0x4003026	      0xb800000000	                              mov eax, 0	     10280	tc-i386.c	FUNCTION_120	IF_26
0x400302b	    0x833d00000000	               cmp dword [0x04003032], 2	     10279	tc-i386.c	FUNCTION_120	IF_26
0x4003032	     0xf858f000000	                           jne 0x40030c7	     10279	tc-i386.c	FUNCTION_120	IF_26
0x4003038	          0x4889c8	                            mov rax, rcx	     10285	tc-i386.c	FUNCTION_120
0x400303b	        0xf6410901	                  test byte [rcx + 9], 1	     10282	tc-i386.c	FUNCTION_120	IF_27
0x400303f	     0xf8482000000	                            je 0x40030c7	     10282	tc-i386.c	FUNCTION_120	IF_27
0x4003045	        0x807911ff	            cmp byte [rcx + 0x11], 0xff 	     10282	tc-i386.c	FUNCTION_120	IF_27
0x4003049	            0x757c	                           jne 0x40030c7	     10282	tc-i386.c	FUNCTION_120	IF_27
0x400304b	    0x833d00000000	               cmp dword [0x04003052], 0	     10283	tc-i386.c	FUNCTION_120	IF_27
0x4003052	      0xba00000000	                              mov edx, 0	     10283	tc-i386.c	FUNCTION_120	IF_27
0x4003057	          0x4889d0	                            mov rax, rdx	     10283	tc-i386.c	FUNCTION_120	IF_27
0x400305a	        0x480f45c1	                         cmovne rax, rcx	     10283	tc-i386.c	FUNCTION_120	IF_27
0x400305e	            0xeb67	                           jmp 0x40030c7	     10283	tc-i386.c	FUNCTION_120	IF_27
0x4003060	      0xb800000000	                              mov eax, 0	     10178	tc-i386.c	FUNCTION_120	WHILE_1	IF_3
0x4003065	            0xeb60	                           jmp 0x40030c7	     10178	tc-i386.c	FUNCTION_120	WHILE_1	IF_3
0x4003067	      0xb800000000	                              mov eax, 0	     10186	tc-i386.c	FUNCTION_120	IF_4
0x400306c	            0xeb59	                           jmp 0x40030c7	     10186	tc-i386.c	FUNCTION_120	IF_4
0x400306e	      0xb800000000	                              mov eax, 0	     10198	tc-i386.c	FUNCTION_120	IF_5	IF_6
0x4003073	            0xeb52	                           jmp 0x40030c7	     10198	tc-i386.c	FUNCTION_120	IF_5	IF_6
0x4003075	      0xb800000000	                              mov eax, 0	     10222	tc-i386.c	FUNCTION_120	IF_5	IF_8
0x400307a	            0xeb4b	                           jmp 0x40030c7	     10222	tc-i386.c	FUNCTION_120	IF_5	IF_8
0x400307c	      0xb800000000	                              mov eax, 0	     10222	tc-i386.c	FUNCTION_120	IF_5	IF_8
0x4003081	            0xeb44	                           jmp 0x40030c7	     10222	tc-i386.c	FUNCTION_120	IF_5	IF_8
0x4003083	      0xb800000000	                              mov eax, 0	     10227	tc-i386.c	FUNCTION_120	IF_13
0x4003088	            0xeb3d	                           jmp 0x40030c7	     10227	tc-i386.c	FUNCTION_120	IF_13
0x400308a	      0xb800000000	                              mov eax, 0	     10230	tc-i386.c	FUNCTION_120	IF_14
0x400308f	            0xeb36	                           jmp 0x40030c7	     10230	tc-i386.c	FUNCTION_120	IF_14
0x4003091	      0xb800000000	                              mov eax, 0	     10238	tc-i386.c	FUNCTION_120	IF_15
0x4003096	            0xeb2f	                           jmp 0x40030c7	     10238	tc-i386.c	FUNCTION_120	IF_15
0x4003098	      0xb800000000	                              mov eax, 0	     10241	tc-i386.c	FUNCTION_120	IF_16
0x400309d	            0xeb28	                           jmp 0x40030c7	     10241	tc-i386.c	FUNCTION_120	IF_16
0x400309f	      0xb800000000	                              mov eax, 0	     10246	tc-i386.c	FUNCTION_120	IF_17	IF_18
0x40030a4	            0xeb21	                           jmp 0x40030c7	     10246	tc-i386.c	FUNCTION_120	IF_17	IF_18
0x40030a6	      0xb800000000	                              mov eax, 0	     10251	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_20
0x40030ab	            0xeb1a	                           jmp 0x40030c7	     10251	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_20
0x40030ad	      0xb800000000	                              mov eax, 0	     10254	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_21
0x40030b2	            0xeb13	                           jmp 0x40030c7	     10254	tc-i386.c	FUNCTION_120	IF_17	IF_19	IF_21
0x40030b4	      0xb800000000	                              mov eax, 0	     10259	tc-i386.c	FUNCTION_120	IF_22
0x40030b9	            0xeb0c	                           jmp 0x40030c7	     10259	tc-i386.c	FUNCTION_120	IF_22
0x40030bb	      0xb800000000	                              mov eax, 0	     10264	tc-i386.c	FUNCTION_120	IF_23
0x40030c0	            0xeb05	                           jmp 0x40030c7	     10264	tc-i386.c	FUNCTION_120	IF_23
0x40030c2	      0xb800000000	                              mov eax, 0	     10272	tc-i386.c	FUNCTION_120	IF_24	IF_25
0x40030c7	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	     10286	tc-i386.c	FUNCTION_120
0x40030cc	    0x6448333c2528	                xor rdi, qword fs:[0x28]	     10286	tc-i386.c	FUNCTION_120
0x40030d5	            0x7424	                            je 0x40030fb	     10286	tc-i386.c	FUNCTION_120
0x40030d7	            0xeb1d	                           jmp 0x40030f6	     10286	tc-i386.c	FUNCTION_120
0x40030d9	           0xfb6d2	                           movzx edx, dl	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x40030dc	          0x4863c2	                         movsxd rax, edx	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x40030df	     0xfb680000000	                   movzx eax, byte [rax]	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x40030e6	          0x880424	                      mov byte [rsp], al	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x40030e9	            0x84c0	                             test al, al	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x40030eb	     0xf852dfdffff	                           jne 0x4002e1e	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x40030f1	      0xe94dfdffff	                           jmp 0x4002e43	     10175	tc-i386.c	FUNCTION_120	WHILE_1
0x40030f6	      0xe800000000	                          call 0x40030fb	     10286	tc-i386.c	FUNCTION_120
0x40030fb	        0x4883c428	                           add rsp, 0x28	     10286	tc-i386.c	FUNCTION_120
0x40030ff	              0x5b	                                 pop rbx	     10286	tc-i386.c	FUNCTION_120
0x4003100	              0x5d	                                 pop rbp	     10286	tc-i386.c	FUNCTION_120
0x4003101	              0xc3	                                     ret	     10286	tc-i386.c	FUNCTION_120
x86_64_section_word	functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0:IF,1:DO,0	19
0x4011213	          0x4889fa	                            mov rdx, rdi	     11625	tc-i386.c	FUNCTION_143	ELSE_1
0x4011216	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	     11629	tc-i386.c	FUNCTION_143	ELSE_1
0x401121d	        0x4883fe05	                              cmp rsi, 5	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x4011221	            0x7532	                           jne 0x4011255	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x4011223	    0x833d00000000	               cmp dword [0x0401122a], 2	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x401122a	            0x7529	                           jne 0x4011255	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x401122c	      0xbf00000000	                              mov edi, 0	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x4011231	      0xb905000000	                              mov ecx, 5	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x4011236	          0x4889d6	                            mov rsi, rdx	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x4011239	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x401123b	           0xf97c0	                                 seta al	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x401123e	           0xf92c2	                                 setb dl	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x4011241	            0x29d0	                            sub eax, edx	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x4011243	           0xfbec0	                           movsx eax, al	     11626	tc-i386.c	FUNCTION_143	ELSE_1
0x4011246	          0x83f801	                              cmp eax, 1	     11627	tc-i386.c	FUNCTION_143	ELSE_1
0x4011249	          0x4819c0	                            sbb rax, rax	     11627	tc-i386.c	FUNCTION_143	ELSE_1
0x401124c	      0x2501000010	                     and eax, 0x10000001	     11627	tc-i386.c	FUNCTION_143	ELSE_1
0x4011251	        0x4883e801	                              sub rax, 1	     11627	tc-i386.c	FUNCTION_143	ELSE_1
0x4011255	            0xf3c3	                                     ret	     11630	tc-i386.c	FUNCTION_143	ELSE_1	IF_2
tc_gen_reloc	functions,0:ELSE,6:FOR,0:CALL,26:SWITCH,5:WHILE,0:IF,13:DO,0	312
0x4010824	            0x4156	                                push r14	     11290	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	IF_2	CALL_4
0x4010826	            0x4155	                                push r13	     11290	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	IF_2	CALL_4
0x4010828	            0x4154	                                push r12	     11290	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	IF_2	CALL_4
0x401082a	              0x55	                                push rbp	     11290	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	IF_2	CALL_4
0x401082b	              0x53	                                push rbx	     11290	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	IF_2	CALL_4
0x401082c	        0x4883ec10	                           sub rsp, 0x10	     11290	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	IF_2	CALL_4
0x4010830	          0x4889fd	                            mov rbp, rdi	     11290	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	IF_2	CALL_4
0x4010833	          0x4889f3	                            mov rbx, rsi	     11290	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	IF_2	CALL_4
0x4010836	    0x64488b042528	                mov rax, qword fs:[0x28]	     11290	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	IF_2	CALL_4
0x401083f	      0x4889442408	                mov qword [rsp + 8], rax	     11290	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	IF_2	CALL_4
0x4010844	            0x31c0	                            xor eax, eax	     11290	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	IF_2	CALL_4
0x4010846	          0x8b4650	            mov eax, dword [rsi + 0x50] 	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010849	      0x3d79010000	                          cmp eax, 0x179	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x401084e	            0x7766	                            ja 0x40108b6	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010850	      0x3d78010000	                          cmp eax, 0x178	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010855	     0xf8363010000	                           jae 0x40109be	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x401085b	      0x3d65010000	                          cmp eax, 0x165	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010860	            0x772b	                            ja 0x401088d	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010862	      0x3d64010000	                          cmp eax, 0x164	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010867	     0xf8351010000	                           jae 0x40109be	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x401086d	          0x83f824	                           cmp eax, 0x24	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010870	     0xf825f010000	                            jb 0x40109d5	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010876	          0x83f825	                           cmp eax, 0x25	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010879	     0xf86a7000000	                           jbe 0x4010926	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x401087f	          0x83f83e	                           cmp eax, 0x3e	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010882	     0xf854d010000	                           jne 0x40109d5	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010888	      0xe931010000	                           jmp 0x40109be	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x401088d	      0x3d6a010000	                          cmp eax, 0x16a	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010892	     0xf823d010000	                            jb 0x40109d5	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010898	      0x3d6b010000	                          cmp eax, 0x16b	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x401089d	     0xf861b010000	                           jbe 0x40109be	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x40108a3	      0x2d6d010000	                          sub eax, 0x16d	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x40108a8	          0x83f807	                              cmp eax, 7	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x40108ab	     0xf8724010000	                            ja 0x40109d5	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x40108b1	      0xe908010000	                           jmp 0x40109be	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x40108b6	      0x3d95010000	                          cmp eax, 0x195	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x40108bb	            0x7740	                            ja 0x40108fd	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x40108bd	      0x3d86010000	                          cmp eax, 0x186	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x40108c2	     0xf83f6000000	                           jae 0x40109be	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x40108c8	      0x3d83010000	                          cmp eax, 0x183	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x40108cd	     0xf84eb000000	                            je 0x40109be	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x40108d3	      0x3d83010000	                          cmp eax, 0x183	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x40108d8	            0x7713	                            ja 0x40108ed	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x40108da	      0x2d7c010000	                          sub eax, 0x17c	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x40108df	          0x83f802	                              cmp eax, 2	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x40108e2	     0xf87ed000000	                            ja 0x40109d5	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x40108e8	      0xe9d1000000	                           jmp 0x40109be	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x40108ed	      0x3d84010000	                          cmp eax, 0x184	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x40108f2	     0xf84cf000000	                            je 0x40109c7	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x40108f8	      0xe9d8000000	                           jmp 0x40109d5	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x40108fd	      0x3d9a010000	                          cmp eax, 0x19a	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010902	     0xf82cd000000	                            jb 0x40109d5	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010908	      0x3d9b010000	                          cmp eax, 0x19b	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x401090d	     0xf86ab000000	                           jbe 0x40109be	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010913	      0x2da3050000	                          sub eax, 0x5a3	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010918	          0x83f801	                              cmp eax, 1	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x401091b	     0xf87b4000000	                            ja 0x40109d5	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010921	      0xe998000000	                           jmp 0x40109be	     11294	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1
0x4010926	        0x488b7e18	            mov rdi, qword [rsi + 0x18] 	     11299	tc-i386.c	FUNCTION_134	SWITCH_1
0x401092a	      0xe800000000	                          call 0x401092f	     11299	tc-i386.c	FUNCTION_134	SWITCH_1
0x401092f	            0x85c0	                           test eax, eax	     11299	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010931	     0xf8487000000	                            je 0x40109be	     11299	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010937	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	     11300	tc-i386.c	FUNCTION_134	SWITCH_1
0x401093b	      0xe800000000	                          call 0x4010940	     11300	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010940	            0x85c0	                           test eax, eax	     11300	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010942	            0x757a	                           jne 0x40109be	     11300	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010944	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	     11304	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010948	      0xe800000000	                          call 0x401094d	     11304	tc-i386.c	FUNCTION_134	SWITCH_1
0x401094d	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	     11304	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010951	        0x48035038	             add rdx, qword [rax + 0x38]	     11304	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010955	          0x4889d0	                            mov rax, rdx	     11304	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010958	        0x48891424	                    mov qword [rsp], rdx	     11304	tc-i386.c	FUNCTION_134	SWITCH_1
0x401095c	        0x837b5024	           cmp dword [rbx + 0x50], 0x24 	     11306	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010960	            0x7532	                           jne 0x4010994	     11306	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010962	      0xbaffffffff	                     mov edx, 0xffffffff	     11306	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010967	          0x4839d0	                            cmp rax, rdx	     11306	tc-i386.c	FUNCTION_134	SWITCH_1
0x401096a	            0x7628	                           jbe 0x4010994	     11306	tc-i386.c	FUNCTION_134	SWITCH_1
0x401096c	      0xba05000000	                              mov edx, 5	     11308	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010971	      0xbe00000000	                              mov esi, 0	     11308	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010976	      0xbf00000000	                              mov edi, 0	     11308	tc-i386.c	FUNCTION_134	SWITCH_1
0x401097b	      0xe800000000	                          call 0x4010980	     11308	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010980	          0x8b7368	            mov esi, dword [rbx + 0x68] 	     11307	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010983	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	     11307	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010987	          0x4889c2	                            mov rdx, rax	     11307	tc-i386.c	FUNCTION_134	SWITCH_1
0x401098a	      0xb800000000	                              mov eax, 0	     11307	tc-i386.c	FUNCTION_134	SWITCH_1
0x401098f	      0xe800000000	                          call 0x4010994	     11307	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010994	    0x48c743180000	               mov qword [rbx + 0x18], 0	     11309	tc-i386.c	FUNCTION_134	SWITCH_1
0x401099c	    0x48c743200000	               mov qword [rbx + 0x20], 0	     11310	tc-i386.c	FUNCTION_134	SWITCH_1
0x40109a4	      0xba00000000	                              mov edx, 0	     11311	tc-i386.c	FUNCTION_134	SWITCH_1
0x40109a9	          0x4889e6	                            mov rsi, rsp	     11311	tc-i386.c	FUNCTION_134	SWITCH_1
0x40109ac	          0x4889df	                            mov rdi, rbx	     11311	tc-i386.c	FUNCTION_134	SWITCH_1
0x40109af	      0xe800000000	                          call 0x40109b4	     11311	tc-i386.c	FUNCTION_134	SWITCH_1
0x40109b4	      0xb800000000	                              mov eax, 0	     11312	tc-i386.c	FUNCTION_134	SWITCH_1
0x40109b9	      0xe9e8020000	                           jmp 0x4010ca6	     11312	tc-i386.c	FUNCTION_134	SWITCH_1
0x40109be	        0x448b6b50	           mov r13d, dword [rbx + 0x50] 	     11359	tc-i386.c	FUNCTION_134	SWITCH_1	IF_4	SWITCH_2	CALL_8
0x40109c2	      0xe9bc000000	                           jmp 0x4010a83	     11360	tc-i386.c	FUNCTION_134	SWITCH_1	IF_4	SWITCH_2	CALL_9
0x40109c7	          0xf60601	                      test byte [rsi], 1	     11362	tc-i386.c	FUNCTION_134	SWITCH_1	IF_4	SWITCH_2
0x40109ca	     0xf84e8020000	                            je 0x4010cb8	     11362	tc-i386.c	FUNCTION_134	SWITCH_1	IF_4	SWITCH_2
0x40109d0	      0xe91a030000	                           jmp 0x4010cef	     11362	tc-i386.c	FUNCTION_134	SWITCH_1	IF_4	SWITCH_2
0x40109d5	          0xf60301	                      test byte [rbx], 1	     11370	tc-i386.c	FUNCTION_134	SWITCH_1	IF_4	SWITCH_2
0x40109d8	            0x743c	                            je 0x4010a16	     11370	tc-i386.c	FUNCTION_134	SWITCH_1	IF_4	SWITCH_2
0x40109da	      0xe910030000	                           jmp 0x4010cef	     11370	tc-i386.c	FUNCTION_134	SWITCH_1	IF_4	SWITCH_2
0x40109df	      0xba05000000	                              mov edx, 5	     11376	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x40109e4	      0xbe00000000	                              mov esi, 0	     11376	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x40109e9	      0xbf00000000	                              mov edi, 0	     11376	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x40109ee	      0xe800000000	                          call 0x40109f3	     11376	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x40109f3	        0x410fb6cc	                         movzx ecx, r12b	     11375	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x40109f7	          0x8b7368	            mov esi, dword [rbx + 0x68] 	     11375	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x40109fa	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	     11375	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x40109fe	          0x4889c2	                            mov rdx, rax	     11375	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4010a01	      0xb800000000	                              mov eax, 0	     11375	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4010a06	      0xe800000000	                          call 0x4010a0b	     11375	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4010a0b	    0x41bd09000000	                             mov r13d, 9	     11378	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3	CALL_11
0x4010a11	      0xe988000000	                           jmp 0x4010a9e	     11379	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4010a16	      0x440fb66302	              movzx r12d, byte [rbx + 2]	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010a1b	        0x4180fc02	                             cmp r12b, 2	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010a1f	     0xf84b4020000	                            je 0x4010cd9	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010a25	        0x4180fc02	                             cmp r12b, 2	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010a29	            0x770e	                            ja 0x4010a39	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010a2b	    0x41bd07000000	                             mov r13d, 7	     11398	tc-i386.c	FUNCTION_134	IF_5
0x4010a31	        0x4180fc01	                             cmp r12b, 1	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010a35	            0x744c	                            je 0x4010a83	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010a37	            0xeb16	                           jmp 0x4010a4f	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010a39	        0x4180fc04	                             cmp r12b, 4	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010a3d	     0xf8480020000	                            je 0x4010cc3	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010a43	    0x41bd01000000	                             mov r13d, 1	     11402	tc-i386.c	FUNCTION_134	IF_5	ELSE_2
0x4010a49	        0x4180fc08	                             cmp r12b, 8	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010a4d	            0x7478	                            je 0x4010ac7	     11390	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010a4f	      0xba05000000	                              mov edx, 5	     11394	tc-i386.c	FUNCTION_134	IF_5
0x4010a54	      0xbe00000000	                              mov esi, 0	     11394	tc-i386.c	FUNCTION_134	IF_5
0x4010a59	      0xbf00000000	                              mov edi, 0	     11394	tc-i386.c	FUNCTION_134	IF_5
0x4010a5e	      0xe800000000	                          call 0x4010a63	     11394	tc-i386.c	FUNCTION_134	IF_5
0x4010a63	        0x410fb6cc	                         movzx ecx, r12b	     11393	tc-i386.c	FUNCTION_134	IF_5
0x4010a67	          0x8b7368	            mov esi, dword [rbx + 0x68] 	     11393	tc-i386.c	FUNCTION_134	IF_5
0x4010a6a	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	     11393	tc-i386.c	FUNCTION_134	IF_5
0x4010a6e	          0x4889c2	                            mov rdx, rax	     11393	tc-i386.c	FUNCTION_134	IF_5
0x4010a71	      0xb800000000	                              mov eax, 0	     11393	tc-i386.c	FUNCTION_134	IF_5
0x4010a76	      0xe800000000	                          call 0x4010a7b	     11393	tc-i386.c	FUNCTION_134	IF_5
0x4010a7b	    0x41bd02000000	                             mov r13d, 2	     11396	tc-i386.c	FUNCTION_134	IF_5
0x4010a81	            0xeb1b	                           jmp 0x4010a9e	     11397	tc-i386.c	FUNCTION_134	IF_5
0x4010a83	        0x4183fd02	                             cmp r13d, 2	     11411	tc-i386.c	FUNCTION_134	CALL_12
0x4010a87	           0xf94c2	                                 sete dl	     11411	tc-i386.c	FUNCTION_134	CALL_12
0x4010a8a	        0x4183fd09	                             cmp r13d, 9	     11411	tc-i386.c	FUNCTION_134	CALL_12
0x4010a8e	           0xf94c0	                                 sete al	     11411	tc-i386.c	FUNCTION_134	CALL_12
0x4010a91	             0x8c2	                               or dl, al	     11411	tc-i386.c	FUNCTION_134	CALL_12
0x4010a93	            0x7509	                           jne 0x4010a9e	     11411	tc-i386.c	FUNCTION_134	CALL_12
0x4010a95	    0x4181fd840100	                         cmp r13d, 0x184	     11411	tc-i386.c	FUNCTION_134	CALL_12
0x4010a9c	            0x7529	                           jne 0x4010ac7	     11411	tc-i386.c	FUNCTION_134	CALL_12
0x4010a9e	    0x488b05000000	            mov rax, qword [0x04010aa5] 	     11412	tc-i386.c	FUNCTION_134	CALL_13
0x4010aa5	          0x4885c0	                           test rax, rax	     11412	tc-i386.c	FUNCTION_134	CALL_13
0x4010aa8	            0x7442	                            je 0x4010aec	     11412	tc-i386.c	FUNCTION_134	CALL_13
0x4010aaa	        0x483b4318	            cmp rax, qword [rbx + 0x18] 	     11413	tc-i386.c	FUNCTION_134	CALL_14
0x4010aae	            0x753c	                           jne 0x4010aec	     11413	tc-i386.c	FUNCTION_134	CALL_14
0x4010ab0	    0x833d00000000	               cmp dword [0x04010ab7], 1	     11418	tc-i386.c	FUNCTION_134	IF_8
0x4010ab7	          0x4519ed	                          sbb r13d, r13d	     11418	tc-i386.c	FUNCTION_134	IF_8
0x4010aba	        0x4183e5dd	                    and r13d, 0xffffffdd	     11418	tc-i386.c	FUNCTION_134	IF_8
0x4010abe	    0x4181c58e0100	                         add r13d, 0x18e	     11418	tc-i386.c	FUNCTION_134	IF_8
0x4010ac5	            0xeb25	                           jmp 0x4010aec	     11418	tc-i386.c	FUNCTION_134	IF_8
0x4010ac7	        0x4183fd01	                             cmp r13d, 1	     11420	tc-i386.c	FUNCTION_134	IF_8
0x4010acb	            0x7406	                            je 0x4010ad3	     11420	tc-i386.c	FUNCTION_134	IF_8
0x4010acd	        0x4183fd08	                             cmp r13d, 8	     11420	tc-i386.c	FUNCTION_134	IF_8
0x4010ad1	            0x7519	                           jne 0x4010aec	     11420	tc-i386.c	FUNCTION_134	IF_8
0x4010ad3	    0x488b05000000	            mov rax, qword [0x04010ada] 	     11421	tc-i386.c	FUNCTION_134	IF_8	IF_9
0x4010ada	          0x4885c0	                           test rax, rax	     11421	tc-i386.c	FUNCTION_134	IF_8	IF_9
0x4010add	            0x740d	                            je 0x4010aec	     11421	tc-i386.c	FUNCTION_134	IF_8	IF_9
0x4010adf	        0x483b4318	            cmp rax, qword [rbx + 0x18] 	     11424	tc-i386.c	FUNCTION_134	IF_8	ELSE_3	IF_10	CALL_15
0x4010ae3	      0xb891010000	                          mov eax, 0x191	     11424	tc-i386.c	FUNCTION_134	IF_8	ELSE_3	IF_10	CALL_15
0x4010ae8	        0x440f44e8	                         cmove r13d, eax	     11424	tc-i386.c	FUNCTION_134	IF_8	ELSE_3	IF_10	CALL_15
0x4010aec	      0xbf20000000	                           mov edi, 0x20	     11427	tc-i386.c	FUNCTION_134	IF_8	ELSE_4
0x4010af1	      0xe800000000	                          call 0x4010af6	     11427	tc-i386.c	FUNCTION_134	IF_8	ELSE_4
0x4010af6	          0x4989c4	                            mov r12, rax	     11427	tc-i386.c	FUNCTION_134	IF_8	ELSE_4
0x4010af9	      0xbf08000000	                              mov edi, 8	     11428	tc-i386.c	FUNCTION_134	IF_8	ELSE_4
0x4010afe	      0xe800000000	                          call 0x4010b03	     11428	tc-i386.c	FUNCTION_134	IF_8	ELSE_4
0x4010b03	          0x4989c6	                            mov r14, rax	     11428	tc-i386.c	FUNCTION_134	IF_8	ELSE_4
0x4010b06	        0x49890424	                    mov qword [r12], rax	     11428	tc-i386.c	FUNCTION_134	IF_8	ELSE_4
0x4010b0a	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	     11429	tc-i386.c	FUNCTION_134	IF_8
0x4010b0e	      0xe800000000	                          call 0x4010b13	     11429	tc-i386.c	FUNCTION_134	IF_8
0x4010b13	          0x498906	                    mov qword [r14], rax	     11429	tc-i386.c	FUNCTION_134	IF_8
0x4010b16	        0x488b5308	                mov rdx, qword [rbx + 8]	     11431	tc-i386.c	FUNCTION_134	ELSE_5
0x4010b1a	        0x488b4310	            mov rax, qword [rbx + 0x10] 	     11431	tc-i386.c	FUNCTION_134	ELSE_5
0x4010b1e	          0x480302	                    add rax, qword [rdx]	     11431	tc-i386.c	FUNCTION_134	ELSE_5
0x4010b21	      0x4989442408	                mov qword [r12 + 8], rax	     11431	tc-i386.c	FUNCTION_134	ELSE_5
0x4010b26	    0x833d00000000	               cmp dword [0x04010b2d], 0	     11433	tc-i386.c	FUNCTION_134	ELSE_5	IF_11
0x4010b2d	            0x7520	                           jne 0x4010b4f	     11433	tc-i386.c	FUNCTION_134	ELSE_5	IF_11
0x4010b2f	    0x817b50a40500	          cmp dword [rbx + 0x50], 0x5a4 	     11437	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010b36	            0x7509	                           jne 0x4010b41	     11437	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010b38	        0x488b4328	            mov rax, qword [rbx + 0x28] 	     11438	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010b3c	      0x4989442408	                mov qword [r12 + 8], rax	     11438	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010b41	    0x49c744241000	               mov qword [r12 + 0x10], 0	     11444	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010b4a	      0xe9d0000000	                           jmp 0x4010c1f	     11444	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010b4f	    0x833d00000000	               cmp dword [0x04010b56], 0	     11449	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010b56	            0x746e	                            je 0x4010bc6	     11449	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010b58	    0x4181fd870100	                         cmp r13d, 0x187	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010b5f	            0x7711	                            ja 0x4010b72	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010b61	    0x4181fd860100	                         cmp r13d, 0x186	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010b68	            0x7326	                           jae 0x4010b90	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010b6a	        0x4183fd08	                             cmp r13d, 8	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010b6e	            0x7556	                           jne 0x4010bc6	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010b70	            0xeb1e	                           jmp 0x4010b90	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010b72	    0x4181fd8d0100	                         cmp r13d, 0x18d	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010b79	            0x7415	                            je 0x4010b90	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010b7b	    0x4181fd8d0100	                         cmp r13d, 0x18d	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010b82	            0x7242	                            jb 0x4010bc6	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010b84	    0x418d8571feff	                  lea eax, [r13 - 0x18f]	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010b8b	          0x83f804	                              cmp eax, 4	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010b8e	            0x7736	                            ja 0x4010bc6	     11450	tc-i386.c	FUNCTION_134	ELSE_5	IF_11	SWITCH_4
0x4010b90	          0x4489ef	                           mov edi, r13d	     11461	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010b93	      0xe800000000	                          call 0x4010b98	     11461	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010b98	          0x4989c6	                            mov r14, rax	     11461	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010b9b	      0xba05000000	                              mov edx, 5	     11462	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010ba0	      0xbe00000000	                              mov esi, 0	     11462	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010ba5	      0xbf00000000	                              mov edi, 0	     11462	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010baa	      0xe800000000	                          call 0x4010baf	     11462	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010baf	          0x8b7368	            mov esi, dword [rbx + 0x68] 	     11461	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010bb2	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	     11461	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010bb6	          0x4c89f1	                            mov rcx, r14	     11461	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010bb9	          0x4889c2	                            mov rdx, rax	     11461	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010bbc	      0xb800000000	                              mov eax, 0	     11461	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010bc1	      0xe800000000	                          call 0x4010bc6	     11461	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010bc6	          0xf60301	                      test byte [rbx], 1	     11469	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010bc9	            0x750b	                           jne 0x4010bd6	     11469	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010bcb	        0x488b4328	            mov rax, qword [rbx + 0x28] 	     11470	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010bcf	      0x4989442410	             mov qword [r12 + 0x10], rax	     11470	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010bd4	            0xeb49	                           jmp 0x4010c1f	     11470	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010bd6	    0x418d8583feff	                  lea eax, [r13 - 0x17d]	     11472	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010bdd	          0x83f81e	                           cmp eax, 0x1e	     11472	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010be0	            0x771b	                            ja 0x4010bfd	     11472	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010be2	            0x89c0	                            mov eax, eax	     11472	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010be4	    0xff24c5000000	                       jmp qword [rax*8]	     11472	tc-i386.c	FUNCTION_134	ELSE_5	ELSE_6	SWITCH_5
0x4010beb	         0xfb64302	               movzx eax, byte [rbx + 2]	     11484	tc-i386.c	FUNCTION_134	IF_13	CALL_24
0x4010bef	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	     11484	tc-i386.c	FUNCTION_134	IF_13	CALL_24
0x4010bf3	          0x4829c1	                            sub rcx, rax	     11484	tc-i386.c	FUNCTION_134	IF_13	CALL_24
0x4010bf6	      0x49894c2410	             mov qword [r12 + 0x10], rcx	     11484	tc-i386.c	FUNCTION_134	IF_13	CALL_24
0x4010bfb	            0xeb22	                           jmp 0x4010c1f	     11485	tc-i386.c	FUNCTION_134	IF_13
0x4010bfd	        0x488b4358	            mov rax, qword [rbx + 0x58] 	     11489	tc-i386.c	FUNCTION_134
0x4010c01	        0x48034528	             add rax, qword [rbp + 0x28]	     11489	tc-i386.c	FUNCTION_134
0x4010c05	          0x4889c5	                            mov rbp, rax	     11489	tc-i386.c	FUNCTION_134
0x4010c08	         0xfb64302	               movzx eax, byte [rbx + 2]	     11489	tc-i386.c	FUNCTION_134
0x4010c0c	          0x4829c5	                            sub rbp, rax	     11489	tc-i386.c	FUNCTION_134
0x4010c0f	          0x4889df	                            mov rdi, rbx	     11490	tc-i386.c	FUNCTION_134
0x4010c12	      0xe800000000	                          call 0x4010c17	     11490	tc-i386.c	FUNCTION_134
0x4010c17	          0x4801c5	                            add rbp, rax	     11487	tc-i386.c	FUNCTION_134	IF_13	CALL_26
0x4010c1a	      0x49896c2410	             mov qword [r12 + 0x10], rbp	     11487	tc-i386.c	FUNCTION_134	IF_13	CALL_26
0x4010c1f	          0x4489ee	                           mov esi, r13d	     11495	tc-i386.c	
0x4010c22	    0x488b3d000000	            mov rdi, qword [0x04010c29] 	     11495	tc-i386.c	
0x4010c29	      0xe800000000	                          call 0x4010c2e	     11495	tc-i386.c	
0x4010c2e	          0x4889c2	                            mov rdx, rax	     11495	tc-i386.c	
0x4010c31	      0x4989442418	             mov qword [r12 + 0x18], rax	     11495	tc-i386.c	
0x4010c36	          0x4c89e0	                            mov rax, r12	     11506	tc-i386.c	FUNCTION_135	CALL_1
0x4010c39	          0x4885d2	                           test rdx, rdx	     11496	tc-i386.c	
0x4010c3c	            0x7568	                           jne 0x4010ca6	     11496	tc-i386.c	
0x4010c3e	          0x4489ef	                           mov edi, r13d	     11498	tc-i386.c	FUNCTION_135
0x4010c41	      0xe800000000	                          call 0x4010c46	     11498	tc-i386.c	FUNCTION_135
0x4010c46	          0x4889c5	                            mov rbp, rax	     11498	tc-i386.c	FUNCTION_135
0x4010c49	      0xba05000000	                              mov edx, 5	     11499	tc-i386.c	FUNCTION_135
0x4010c4e	      0xbe00000000	                              mov esi, 0	     11499	tc-i386.c	FUNCTION_135
0x4010c53	      0xbf00000000	                              mov edi, 0	     11499	tc-i386.c	FUNCTION_135
0x4010c58	      0xe800000000	                          call 0x4010c5d	     11499	tc-i386.c	FUNCTION_135
0x4010c5d	          0x8b7368	            mov esi, dword [rbx + 0x68] 	     11498	tc-i386.c	FUNCTION_135
0x4010c60	        0x488b7b60	            mov rdi, qword [rbx + 0x60] 	     11498	tc-i386.c	FUNCTION_135
0x4010c64	          0x4889e9	                            mov rcx, rbp	     11498	tc-i386.c	FUNCTION_135
0x4010c67	          0x4889c2	                            mov rdx, rax	     11498	tc-i386.c	FUNCTION_135
0x4010c6a	      0xb800000000	                              mov eax, 0	     11498	tc-i386.c	FUNCTION_135
0x4010c6f	      0xe800000000	                          call 0x4010c74	     11498	tc-i386.c	FUNCTION_135
0x4010c74	      0xbe02000000	                              mov esi, 2	     11502	tc-i386.c	FUNCTION_135
0x4010c79	    0x488b3d000000	            mov rdi, qword [0x04010c80] 	     11502	tc-i386.c	FUNCTION_135
0x4010c80	      0xe800000000	                          call 0x4010c85	     11502	tc-i386.c	FUNCTION_135
0x4010c85	      0x4989442418	             mov qword [r12 + 0x18], rax	     11502	tc-i386.c	FUNCTION_135
0x4010c8a	          0x4885c0	                           test rax, rax	     11503	tc-i386.c	FUNCTION_135
0x4010c8d	            0x7514	                           jne 0x4010ca3	     11503	tc-i386.c	FUNCTION_135
0x4010c8f	      0xba00000000	                              mov edx, 0	     11503	tc-i386.c	FUNCTION_135
0x4010c94	      0xbeef2c0000	                         mov esi, 0x2cef	     11503	tc-i386.c	FUNCTION_135
0x4010c99	      0xbf00000000	                              mov edi, 0	     11503	tc-i386.c	FUNCTION_135
0x4010c9e	      0xe800000000	                          call 0x4010ca3	     11503	tc-i386.c	FUNCTION_135
0x4010ca3	          0x4c89e0	                            mov rax, r12	     11506	tc-i386.c	FUNCTION_135	CALL_1
0x4010ca6	      0x488b4c2408	                mov rcx, qword [rsp + 8]	     11507	tc-i386.c	FUNCTION_135
0x4010cab	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     11507	tc-i386.c	FUNCTION_135
0x4010cb4	            0x747f	                            je 0x4010d35	     11507	tc-i386.c	FUNCTION_135
0x4010cb6	            0xeb78	                           jmp 0x4010d30	     11507	tc-i386.c	FUNCTION_135
0x4010cb8	    0x41bd84010000	                         mov r13d, 0x184	     11365	tc-i386.c	FUNCTION_134	SWITCH_1	IF_4	SWITCH_2
0x4010cbe	      0xe9dbfdffff	                           jmp 0x4010a9e	     11365	tc-i386.c	FUNCTION_134	SWITCH_1	IF_4	SWITCH_2
0x4010cc3	    0x41bd02000000	                             mov r13d, 2	     11400	tc-i386.c	FUNCTION_134	IF_5	IF_6
0x4010cc9	      0xe9d0fdffff	                           jmp 0x4010a9e	     11400	tc-i386.c	FUNCTION_134	IF_5	IF_6
0x4010cce	    0x41bd09000000	                             mov r13d, 9	     11382	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4010cd4	      0xe9c5fdffff	                           jmp 0x4010a9e	     11382	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4010cd9	    0x41bd05000000	                             mov r13d, 5	     11399	tc-i386.c	FUNCTION_134	IF_5	IF_6
0x4010cdf	      0xe9e3fdffff	                           jmp 0x4010ac7	     11399	tc-i386.c	FUNCTION_134	IF_5	IF_6
0x4010ce4	    0x41bd0b000000	                           mov r13d, 0xb	     11381	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4010cea	      0xe9d8fdffff	                           jmp 0x4010ac7	     11381	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4010cef	      0x440fb66302	              movzx r12d, byte [rbx + 2]	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x4010cf4	        0x4180fc02	                             cmp r12b, 2	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x4010cf8	            0x74ea	                            je 0x4010ce4	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x4010cfa	        0x4180fc02	                             cmp r12b, 2	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x4010cfe	            0x7715	                            ja 0x4010d15	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x4010d00	    0x41bd0d000000	                           mov r13d, 0xd	     11380	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4010d06	        0x4180fc01	                             cmp r12b, 1	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x4010d0a	     0xf84b7fdffff	                            je 0x4010ac7	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x4010d10	      0xe9cafcffff	                           jmp 0x40109df	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x4010d15	        0x4180fc04	                             cmp r12b, 4	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x4010d19	            0x74b3	                            je 0x4010cce	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x4010d1b	    0x41bd08000000	                             mov r13d, 8	     11384	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1	SWITCH_3
0x4010d21	        0x4180fc08	                             cmp r12b, 8	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x4010d25	     0xf849cfdffff	                            je 0x4010ac7	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x4010d2b	      0xe9affcffff	                           jmp 0x40109df	     11372	tc-i386.c	FUNCTION_134	SWITCH_1	ELSE_1
0x4010d30	      0xe800000000	                          call 0x4010d35	     11507	tc-i386.c	FUNCTION_135
0x4010d35	        0x4883c410	                           add rsp, 0x10	     11507	tc-i386.c	FUNCTION_135
0x4010d39	              0x5b	                                 pop rbx	     11507	tc-i386.c	FUNCTION_135
0x4010d3a	              0x5d	                                 pop rbp	     11507	tc-i386.c	FUNCTION_135
0x4010d3b	            0x415c	                                 pop r12	     11507	tc-i386.c	FUNCTION_135
0x4010d3d	            0x415d	                                 pop r13	     11507	tc-i386.c	FUNCTION_135
0x4010d3f	            0x415e	                                 pop r14	     11507	tc-i386.c	FUNCTION_135
0x4010d41	              0xc3	                                     ret	     11507	tc-i386.c	FUNCTION_135
build_evex_prefix	functions,0:ELSE,9:FOR,1:CALL,5:SWITCH,3:WHILE,0:IF,21:DO,0	245
0x4002164	        0x4883ec08	                              sub rsp, 8	      3480	tc-i386.c	FUNCTION_64
0x4002168	    0x488b15000000	            mov rdx, qword [0x0400216f] 	      3487	tc-i386.c	FUNCTION_64	IF_1
0x400216f	          0x4885d2	                           test rdx, rdx	      3487	tc-i386.c	FUNCTION_64	IF_1
0x4002172	            0x744b	                            je 0x40021bf	      3487	tc-i386.c	FUNCTION_64	IF_1
0x4002174	    0xf60500000000	               test byte [0x0400217b], 2	      3489	tc-i386.c	FUNCTION_64	IF_1	CALL_1
0x400217b	            0x7414	                            je 0x4002191	      3489	tc-i386.c	FUNCTION_64	IF_1	CALL_1
0x400217d	      0xba00000000	                              mov edx, 0	      3489	tc-i386.c	FUNCTION_64	IF_1	CALL_1
0x4002182	      0xbea10d0000	                          mov esi, 0xda1	      3489	tc-i386.c	FUNCTION_64	IF_1	CALL_1
0x4002187	      0xbf00000000	                              mov edi, 0	      3489	tc-i386.c	FUNCTION_64	IF_1	CALL_1
0x400218c	      0xe800000000	                          call 0x4002191	      3489	tc-i386.c	FUNCTION_64	IF_1	CALL_1
0x4002191	         0xfb64211	           movzx eax, byte [rdx + 0x11] 	      3491	tc-i386.c	FUNCTION_64	IF_1
0x4002195	         0xfb65210	           movzx edx, byte [rdx + 0x10] 	      3492	tc-i386.c	FUNCTION_64	IF_1	IF_2
0x4002199	            0x89d6	                            mov esi, edx	      3492	tc-i386.c	FUNCTION_64	IF_1	IF_2
0x400219b	          0x83e601	                              and esi, 1	      3492	tc-i386.c	FUNCTION_64	IF_1	IF_2
0x400219e	          0x8d4808	                      lea ecx, [rax + 8]	      3493	tc-i386.c	FUNCTION_64	IF_1	IF_2
0x40021a1	          0x4084f6	                           test sil, sil	      3493	tc-i386.c	FUNCTION_64	IF_1	IF_2
0x40021a4	           0xf45c1	                         cmovne eax, ecx	      3493	tc-i386.c	FUNCTION_64	IF_1	IF_2
0x40021a7	          0xf6c204	                              test dl, 4	      3496	tc-i386.c	FUNCTION_64	IF_1	IF_3
0x40021aa	            0x7507	                           jne 0x40021b3	      3496	tc-i386.c	FUNCTION_64	IF_1	IF_3
0x40021ac	    0xc60500000000	                mov byte [0x040021b3], 8	      3497	tc-i386.c	FUNCTION_64	IF_1	IF_3
0x40021b3	            0xf7d0	                                 not eax	      3498	tc-i386.c	FUNCTION_64	IF_1
0x40021b5	          0x83e00f	                            and eax, 0xf	      3498	tc-i386.c	FUNCTION_64	IF_1
0x40021b8	      0xbe00000000	                              mov esi, 0	      3484	tc-i386.c	FUNCTION_64
0x40021bd	            0xeb26	                           jmp 0x40021e5	      3484	tc-i386.c	FUNCTION_64
0x40021bf	    0xf60500000000	               test byte [0x040021c6], 2	      3506	tc-i386.c	FUNCTION_64	ELSE_1	IF_4
0x40021c6	            0x7513	                           jne 0x40021db	      3506	tc-i386.c	FUNCTION_64	ELSE_1	IF_4
0x40021c8	    0xc60500000000	                mov byte [0x040021cf], 8	      3507	tc-i386.c	FUNCTION_64	ELSE_1	IF_4
0x40021cf	      0xbe00000000	                              mov esi, 0	      3484	tc-i386.c	FUNCTION_64
0x40021d4	      0xb80f000000	                            mov eax, 0xf	      3502	tc-i386.c	FUNCTION_64	ELSE_1
0x40021d9	            0xeb0a	                           jmp 0x40021e5	      3502	tc-i386.c	FUNCTION_64	ELSE_1
0x40021db	      0xbe02000000	                              mov esi, 2	      3509	tc-i386.c	FUNCTION_64	ELSE_1	ELSE_2
0x40021e0	      0xb80f000000	                            mov eax, 0xf	      3502	tc-i386.c	FUNCTION_64	ELSE_1
0x40021e5	     0xfb615000000	           movzx edx, byte [0x040021ec] 	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x40021ec	          0x83fa66	                           cmp edx, 0x66	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x40021ef	            0x7427	                            je 0x4002218	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x40021f1	          0x83fa66	                           cmp edx, 0x66	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x40021f4	            0x770b	                            ja 0x4002201	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x40021f6	      0xb900000000	                              mov ecx, 0	      3515	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x40021fb	            0x85d2	                           test edx, edx	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x40021fd	            0x743b	                            je 0x400223a	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x40021ff	            0xeb25	                           jmp 0x4002226	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x4002201	    0x81faf2000000	                           cmp edx, 0xf2	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x4002207	            0x7416	                            je 0x400221f	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x4002209	      0xb902000000	                              mov ecx, 2	      3521	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x400220e	    0x81faf3000000	                           cmp edx, 0xf3	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x4002214	            0x7424	                            je 0x400223a	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x4002216	            0xeb0e	                           jmp 0x4002226	      3512	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x4002218	      0xb901000000	                              mov ecx, 1	      3518	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x400221d	            0xeb1b	                           jmp 0x400223a	      3518	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x400221f	      0xb903000000	                              mov ecx, 3	      3524	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x4002224	            0xeb14	                           jmp 0x400223a	      3525	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1
0x4002226	      0xba00000000	                              mov edx, 0	      3527	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1	CALL_2
0x400222b	      0xbec70d0000	                          mov esi, 0xdc7	      3527	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1	CALL_2
0x4002230	      0xbf00000000	                              mov edi, 0	      3527	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1	CALL_2
0x4002235	      0xe800000000	                          call 0x400223a	      3527	tc-i386.c	FUNCTION_64	ELSE_2	SWITCH_1	CALL_2
0x400223a	    0xc70500000000	               mov dword [0x04002244], 4	      3531	tc-i386.c	FUNCTION_64
0x4002244	    0xc60500000000	            mov byte [0x0400224b], 0x62 	      3532	tc-i386.c	FUNCTION_64
0x400224b	    0x8b1500000000	            mov edx, dword [0x04002251] 	      3535	tc-i386.c	FUNCTION_64	SWITCH_2
0x4002251	          0xc1ea0f	                            shr edx, 0xf	      3535	tc-i386.c	FUNCTION_64	SWITCH_2
0x4002254	          0x83e207	                              and edx, 7	      3535	tc-i386.c	FUNCTION_64	SWITCH_2
0x4002257	          0x80fa01	                               cmp dl, 1	      3535	tc-i386.c	FUNCTION_64	SWITCH_2
0x400225a	            0x740c	                            je 0x4002268	      3535	tc-i386.c	FUNCTION_64	SWITCH_2
0x400225c	          0x80fa01	                               cmp dl, 1	      3535	tc-i386.c	FUNCTION_64	SWITCH_2
0x400225f	            0x7222	                            jb 0x4002283	      3535	tc-i386.c	FUNCTION_64	SWITCH_2
0x4002261	          0x80fa02	                               cmp dl, 2	      3535	tc-i386.c	FUNCTION_64	SWITCH_2
0x4002264	            0x7424	                            je 0x400228a	      3535	tc-i386.c	FUNCTION_64	SWITCH_2
0x4002266	            0xeb07	                           jmp 0x400226f	      3535	tc-i386.c	FUNCTION_64	SWITCH_2
0x4002268	      0xba02000000	                              mov edx, 2	      3541	tc-i386.c	FUNCTION_64	SWITCH_2
0x400226d	            0xeb20	                           jmp 0x400228f	      3541	tc-i386.c	FUNCTION_64	SWITCH_2
0x400226f	      0xba00000000	                              mov edx, 0	      3547	tc-i386.c	FUNCTION_64	SWITCH_2	CALL_3
0x4002274	      0xbedb0d0000	                          mov esi, 0xddb	      3547	tc-i386.c	FUNCTION_64	SWITCH_2	CALL_3
0x4002279	      0xbf00000000	                              mov edi, 0	      3547	tc-i386.c	FUNCTION_64	SWITCH_2	CALL_3
0x400227e	      0xe800000000	                          call 0x4002283	      3547	tc-i386.c	FUNCTION_64	SWITCH_2	CALL_3
0x4002283	      0xba01000000	                              mov edx, 1	      3538	tc-i386.c	FUNCTION_64	SWITCH_2
0x4002288	            0xeb05	                           jmp 0x400228f	      3538	tc-i386.c	FUNCTION_64	SWITCH_2
0x400228a	      0xba03000000	                              mov edx, 3	      3544	tc-i386.c	FUNCTION_64	SWITCH_2
0x400228f	    0x8b3d00000000	            mov edi, dword [0x04002295] 	      3553	tc-i386.c	FUNCTION_64
0x4002295	          0x4189f8	                            mov r8d, edi	      3553	tc-i386.c	FUNCTION_64
0x4002298	          0x41f7d0	                                 not r8d	      3553	tc-i386.c	FUNCTION_64
0x400229b	        0x41c1e005	                              shl r8d, 5	      3553	tc-i386.c	FUNCTION_64
0x400229f	          0x4109d0	                             or r8d, edx	      3553	tc-i386.c	FUNCTION_64
0x40022a2	    0x448805000000	              mov byte [0x040022a9], r8b	      3553	tc-i386.c	FUNCTION_64
0x40022a9	    0x8b1500000000	            mov edx, dword [0x040022af] 	      3557	tc-i386.c	FUNCTION_64	IF_5
0x40022af	          0xf6c204	                              test dl, 4	      3557	tc-i386.c	FUNCTION_64	IF_5
0x40022b2	            0x750d	                           jne 0x40022c1	      3557	tc-i386.c	FUNCTION_64	IF_5
0x40022b4	        0x4183c810	                            or r8d, 0x10	      3558	tc-i386.c	FUNCTION_64	IF_5
0x40022b8	    0x448805000000	              mov byte [0x040022bf], r8b	      3558	tc-i386.c	FUNCTION_64	IF_5
0x40022bf	            0xeb03	                           jmp 0x40022c4	      3558	tc-i386.c	FUNCTION_64	IF_5
0x40022c1	          0x83ce04	                               or esi, 4	      3560	tc-i386.c	FUNCTION_64	ELSE_3
0x40022c4	    0x448b05000000	            mov r8d, dword [0x040022cb] 	      3562	tc-i386.c	FUNCTION_64	ELSE_3	IF_6
0x40022cb	    0x440305000000	             add r8d, dword [0x040022d2]	      3562	tc-i386.c	FUNCTION_64	ELSE_3	IF_6
0x40022d2	    0x443b05000000	            cmp r8d, dword [0x040022d9] 	      3562	tc-i386.c	FUNCTION_64	ELSE_3	IF_6
0x40022d9	            0x750f	                           jne 0x40022ea	      3562	tc-i386.c	FUNCTION_64	ELSE_3	IF_6
0x40022db	          0xf6c201	                              test dl, 1	      3568	tc-i386.c	FUNCTION_64	ELSE_3	IF_6	IF_7
0x40022de	            0x740a	                            je 0x40022ea	      3568	tc-i386.c	FUNCTION_64	ELSE_3	IF_6	IF_7
0x40022e0	          0x83ce01	                               or esi, 1	      3570	tc-i386.c	FUNCTION_64	ELSE_3	IF_6	IF_7
0x40022e3	    0x802500000000	             and byte [0x040022ea], 0xbf	      3571	tc-i386.c	FUNCTION_64	ELSE_3	IF_6	IF_7
0x40022ea	            0xf7d6	                                 not esi	      3576	tc-i386.c	FUNCTION_64
0x40022ec	            0x21f2	                            and edx, esi	      3576	tc-i386.c	FUNCTION_64
0x40022ee	    0x891500000000	            mov dword [0x040022f4], edx 	      3576	tc-i386.c	FUNCTION_64
0x40022f4	            0x85d2	                           test edx, edx	      3577	tc-i386.c	FUNCTION_64	CALL_4
0x40022f6	            0x7414	                            je 0x400230c	      3577	tc-i386.c	FUNCTION_64	CALL_4
0x40022f8	      0xba00000000	                              mov edx, 0	      3577	tc-i386.c	FUNCTION_64	CALL_4
0x40022fd	      0xbef90d0000	                          mov esi, 0xdf9	      3577	tc-i386.c	FUNCTION_64	CALL_4
0x4002302	      0xbf00000000	                              mov edi, 0	      3577	tc-i386.c	FUNCTION_64	CALL_4
0x4002307	      0xe800000000	                          call 0x400230c	      3577	tc-i386.c	FUNCTION_64	CALL_4
0x400230c	          0x83e708	                              and edi, 8	      3580	tc-i386.c	FUNCTION_64
0x400230f	           0xf95c2	                                setne dl	      3580	tc-i386.c	FUNCTION_64
0x4002312	           0xfb6d2	                           movzx edx, dl	      3580	tc-i386.c	FUNCTION_64
0x4002315	     0xfb635000000	           movzx esi, byte [0x0400231c] 	      3581	tc-i386.c	FUNCTION_64	IF_8
0x400231c	          0x83e660	                           and esi, 0x60	      3581	tc-i386.c	FUNCTION_64	IF_8
0x400231f	            0x740e	                            je 0x400232f	      3581	tc-i386.c	FUNCTION_64	IF_8
0x4002321	        0x4080fe40	                           cmp sil, 0x40	      3584	tc-i386.c	FUNCTION_64	IF_8	IF_9
0x4002325	      0xbe01000000	                              mov esi, 1	      3584	tc-i386.c	FUNCTION_64	IF_8	IF_9
0x400232a	           0xf44d6	                          cmove edx, esi	      3584	tc-i386.c	FUNCTION_64	IF_8	IF_9
0x400232d	            0xeb13	                           jmp 0x4002342	      3584	tc-i386.c	FUNCTION_64	IF_8	IF_9
0x400232f	            0x85ff	                           test edi, edi	      3587	tc-i386.c	FUNCTION_64	ELSE_4	IF_10
0x4002331	            0x750f	                           jne 0x4002342	      3587	tc-i386.c	FUNCTION_64	ELSE_4	IF_10
0x4002333	    0x833d00000000	               cmp dword [0x0400233a], 1	      3590	tc-i386.c	FUNCTION_64	ELSE_4	IF_10	IF_11
0x400233a	      0xbe01000000	                              mov esi, 1	      3590	tc-i386.c	FUNCTION_64	ELSE_4	IF_10	IF_11
0x400233f	           0xf44d6	                          cmove edx, esi	      3590	tc-i386.c	FUNCTION_64	ELSE_4	IF_10	IF_11
0x4002342	          0xc1e003	                              shl eax, 3	      3597	tc-i386.c	FUNCTION_64
0x4002345	          0x83c904	                               or ecx, 4	      3597	tc-i386.c	FUNCTION_64
0x4002348	             0x9c8	                             or eax, ecx	      3597	tc-i386.c	FUNCTION_64
0x400234a	          0xc1e207	                              shl edx, 7	      3597	tc-i386.c	FUNCTION_64
0x400234d	             0x9c2	                             or edx, eax	      3597	tc-i386.c	FUNCTION_64
0x400234f	    0x881500000000	               mov byte [0x04002355], dl	      3597	tc-i386.c	FUNCTION_64
0x4002355	    0x488b05000000	            mov rax, qword [0x0400235c] 	      3601	tc-i386.c	FUNCTION_64	IF_12
0x400235c	          0x4885c0	                           test rax, rax	      3601	tc-i386.c	FUNCTION_64	IF_12
0x400235f	            0x740d	                            je 0x400236e	      3601	tc-i386.c	FUNCTION_64	IF_12
0x4002361	        0x83780800	                  cmp dword [rax + 8], 0	      3601	tc-i386.c	FUNCTION_64	IF_12
0x4002365	            0x7407	                            je 0x400236e	      3601	tc-i386.c	FUNCTION_64	IF_12
0x4002367	    0x800d00000000	              or byte [0x0400236e], 0x80	      3602	tc-i386.c	FUNCTION_64	IF_12
0x400236e	    0x488b05000000	            mov rax, qword [0x04002375] 	      3605	tc-i386.c	FUNCTION_64	IF_13
0x4002375	          0x4885c0	                           test rax, rax	      3605	tc-i386.c	FUNCTION_64	IF_13
0x4002378	     0xf8540010000	                           jne 0x40024be	      3605	tc-i386.c	FUNCTION_64	IF_13
0x400237e	     0xfb605000000	           movzx eax, byte [0x04002385] 	      3610	tc-i386.c	FUNCTION_64	IF_13	IF_14
0x4002385	          0x83e007	                              and eax, 7	      3610	tc-i386.c	FUNCTION_64	IF_13	IF_14
0x4002388	            0x7408	                            je 0x4002392	      3610	tc-i386.c	FUNCTION_64	IF_13	IF_14
0x400238a	            0x3c05	                               cmp al, 5	      3610	tc-i386.c	FUNCTION_64	IF_13	IF_14
0x400238c	     0xf85b4000000	                           jne 0x4002446	      3610	tc-i386.c	FUNCTION_64	IF_13	IF_14
0x4002392	    0x8b3d00000000	            mov edi, dword [0x04002398] 	      3616	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1
0x4002398	            0x85ff	                           test edi, edi	      3616	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1
0x400239a	     0xf84a6000000	                            je 0x4002446	      3616	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1
0x40023a0	      0xb900000000	                              mov ecx, 0	      3616	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1
0x40023a5	            0x89c8	                            mov eax, ecx	      3617	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x40023a7	     0xfb604c50000	                 movzx eax, byte [rax*8]	      3617	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x40023af	            0x89c2	                            mov edx, eax	      3617	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x40023b1	          0xc0ea03	                               shr dl, 3	      3617	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x40023b4	            0x89d6	                            mov esi, edx	      3617	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x40023b6	          0x83e601	                              and esi, 1	      3617	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x40023b9	            0x89c2	                            mov edx, eax	      3618	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x40023bb	          0xc0ea04	                               shr dl, 4	      3618	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x40023be	          0x83e201	                              and edx, 1	      3617	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x40023c1	             0x1f2	                            add edx, esi	      3617	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x40023c3	          0xc0e805	                               shr al, 5	      3619	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x40023c6	          0x83e001	                              and eax, 1	      3617	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x40023c9	             0x1d0	                            add eax, edx	      3617	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x40023cb	          0x83f801	                              cmp eax, 1	      3617	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x40023ce	            0x7e6b	                           jle 0x400243b	      3617	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15
0x40023d0	            0x89c8	                            mov eax, ecx	      3621	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	IF_16
0x40023d2	    0xf604c5000000	                 test byte [rax*8], 0x20	      3621	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	IF_16
0x40023da	            0x7418	                            je 0x40023f4	      3621	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	IF_16
0x40023dc	     0xfb605000000	           movzx eax, byte [0x040023e3] 	      3622	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	IF_16
0x40023e3	          0x83e0f8	                     and eax, 0xfffffff8	      3622	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	IF_16
0x40023e6	          0x83c801	                               or eax, 1	      3622	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	IF_16
0x40023e9	    0x880500000000	               mov byte [0x040023ef], al	      3622	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	IF_16
0x40023ef	      0xe989000000	                           jmp 0x400247d	      3622	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	IF_16
0x40023f4	            0x89c8	                            mov eax, ecx	      3623	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_5	IF_17
0x40023f6	    0xf604c5000000	                 test byte [rax*8], 0x10	      3623	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_5	IF_17
0x40023fe	            0x7415	                            je 0x4002415	      3623	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_5	IF_17
0x4002400	     0xfb605000000	           movzx eax, byte [0x04002407] 	      3624	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_5	IF_17
0x4002407	          0x83e0f8	                     and eax, 0xfffffff8	      3624	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_5	IF_17
0x400240a	          0x83c803	                               or eax, 3	      3624	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_5	IF_17
0x400240d	    0x880500000000	               mov byte [0x04002413], al	      3624	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_5	IF_17
0x4002413	            0xeb61	                           jmp 0x4002476	      3624	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_5	IF_17
0x4002415	            0x89c8	                            mov eax, ecx	      3625	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_6	IF_18
0x4002417	    0xf604c5000000	                    test byte [rax*8], 8	      3625	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_6	IF_18
0x400241f	            0x741a	                            je 0x400243b	      3625	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_6	IF_18
0x4002421	     0xfb605000000	           movzx eax, byte [0x04002428] 	      3626	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_6	IF_18
0x4002428	          0x83e0f8	                     and eax, 0xfffffff8	      3626	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_6	IF_18
0x400242b	          0x83c802	                               or eax, 2	      3626	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_6	IF_18
0x400242e	    0x880500000000	               mov byte [0x04002434], al	      3626	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1	IF_15	ELSE_6	IF_18
0x4002434	      0xb800000000	                              mov eax, 0	      3639	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4002439	            0xeb62	                           jmp 0x400249d	      3639	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x400243b	          0x83c101	                              add ecx, 1	      3616	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1
0x400243e	            0x39f9	                            cmp ecx, edi	      3616	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1
0x4002440	     0xf855fffffff	                           jne 0x40023a5	      3616	tc-i386.c	FUNCTION_64	IF_13	IF_14	FOR_1
0x4002446	     0xfb615000000	           movzx edx, byte [0x0400244d] 	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x400244d	          0x83e207	                              and edx, 7	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4002450	          0x80fa02	                               cmp dl, 2	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4002453	            0x7443	                            je 0x4002498	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4002455	          0x80fa02	                               cmp dl, 2	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4002458	            0x7707	                            ja 0x4002461	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x400245a	          0x80fa01	                               cmp dl, 1	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x400245d	            0x741e	                            je 0x400247d	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x400245f	            0xeb23	                           jmp 0x4002484	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4002461	          0x80fa03	                               cmp dl, 3	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4002464	            0x7410	                            je 0x4002476	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4002466	    0x8b0500000000	            mov eax, dword [0x0400246c] 	      3636	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x400246c	          0xc1e005	                              shl eax, 5	      3636	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x400246f	          0x80fa04	                               cmp dl, 4	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4002472	            0x7429	                            je 0x400249d	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4002474	            0xeb0e	                           jmp 0x4002484	      3633	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4002476	      0xb820000000	                           mov eax, 0x20	      3642	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x400247b	            0xeb20	                           jmp 0x400249d	      3643	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x400247d	      0xb840000000	                           mov eax, 0x40	      3645	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4002482	            0xeb19	                           jmp 0x400249d	      3646	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x4002484	      0xba00000000	                              mov edx, 0	      3648	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3	CALL_5
0x4002489	      0xbe400e0000	                          mov esi, 0xe40	      3648	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3	CALL_5
0x400248e	      0xbf00000000	                              mov edi, 0	      3648	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3	CALL_5
0x4002493	      0xe800000000	                          call 0x4002498	      3648	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3	CALL_5
0x4002498	      0xb800000000	                              mov eax, 0	      3639	tc-i386.c	FUNCTION_64	IF_13	ELSE_7	SWITCH_3
0x400249d	     0xa0500000000	                or al, byte [0x040024a3]	      3651	tc-i386.c	FUNCTION_64	IF_13
0x40024a3	    0x880500000000	               mov byte [0x040024a9], al	      3651	tc-i386.c	FUNCTION_64	IF_13
0x40024a9	    0x48833d000000	               cmp qword [0x040024b1], 0	      3653	tc-i386.c	FUNCTION_64	IF_13	IF_19
0x40024b1	            0x7442	                            je 0x40024f5	      3653	tc-i386.c	FUNCTION_64	IF_13	IF_19
0x40024b3	          0x83c810	                            or eax, 0x10	      3654	tc-i386.c	FUNCTION_64	IF_13	IF_19
0x40024b6	    0x880500000000	               mov byte [0x040024bc], al	      3654	tc-i386.c	FUNCTION_64	IF_13	IF_19
0x40024bc	            0xeb37	                           jmp 0x40024f5	      3654	tc-i386.c	FUNCTION_64	IF_13	IF_19
0x40024be	            0x8b00	                    mov eax, dword [rax]	      3658	tc-i386.c	FUNCTION_64	ELSE_8	IF_20
0x40024c0	          0x83f804	                              cmp eax, 4	      3658	tc-i386.c	FUNCTION_64	ELSE_8	IF_20
0x40024c3	            0x7417	                            je 0x40024dc	      3658	tc-i386.c	FUNCTION_64	ELSE_8	IF_20
0x40024c5	     0xfb615000000	           movzx edx, byte [0x040024cc] 	      3659	tc-i386.c	FUNCTION_64	ELSE_8	IF_20
0x40024cc	          0x83ca10	                            or edx, 0x10	      3659	tc-i386.c	FUNCTION_64	ELSE_8	IF_20
0x40024cf	          0xc1e005	                              shl eax, 5	      3659	tc-i386.c	FUNCTION_64	ELSE_8	IF_20
0x40024d2	             0x9d0	                             or eax, edx	      3659	tc-i386.c	FUNCTION_64	ELSE_8	IF_20
0x40024d4	    0x880500000000	               mov byte [0x040024da], al	      3659	tc-i386.c	FUNCTION_64	ELSE_8	IF_20
0x40024da	            0xeb19	                           jmp 0x40024f5	      3659	tc-i386.c	FUNCTION_64	ELSE_8	IF_20
0x40024dc	     0xfb605000000	           movzx eax, byte [0x040024e3] 	      3661	tc-i386.c	FUNCTION_64	ELSE_8	ELSE_9
0x40024e3	          0xc1e005	                              shl eax, 5	      3661	tc-i386.c	FUNCTION_64	ELSE_8	ELSE_9
0x40024e6	     0xa0500000000	                or al, byte [0x040024ec]	      3661	tc-i386.c	FUNCTION_64	ELSE_8	ELSE_9
0x40024ec	          0x83c810	                            or eax, 0x10	      3661	tc-i386.c	FUNCTION_64	ELSE_8	ELSE_9
0x40024ef	    0x880500000000	               mov byte [0x040024f5], al	      3661	tc-i386.c	FUNCTION_64	ELSE_8	ELSE_9
0x40024f5	    0x488b05000000	            mov rax, qword [0x040024fc] 	      3664	tc-i386.c	FUNCTION_64	IF_21
0x40024fc	          0x4885c0	                           test rax, rax	      3664	tc-i386.c	FUNCTION_64	IF_21
0x40024ff	            0x7418	                            je 0x4002519	      3664	tc-i386.c	FUNCTION_64	IF_21
0x4002501	          0x488b10	                    mov rdx, qword [rax]	      3664	tc-i386.c	FUNCTION_64	IF_21
0x4002504	          0x4885d2	                           test rdx, rdx	      3664	tc-i386.c	FUNCTION_64	IF_21
0x4002507	            0x7410	                            je 0x4002519	      3664	tc-i386.c	FUNCTION_64	IF_21
0x4002509	     0xfb605000000	           movzx eax, byte [0x04002510] 	      3665	tc-i386.c	FUNCTION_64	IF_21
0x4002510	           0xa4211	                or al, byte [rdx + 0x11]	      3665	tc-i386.c	FUNCTION_64	IF_21
0x4002513	    0x880500000000	               mov byte [0x04002519], al	      3665	tc-i386.c	FUNCTION_64	IF_21
0x4002519	        0x4883c408	                              add rsp, 8	      3666	tc-i386.c	FUNCTION_64
0x400251d	              0xc3	                                     ret	      3666	tc-i386.c	FUNCTION_64
check_hle	functions,0:ELSE,0:FOR,0:CALL,10:SWITCH,1:WHILE,0:IF,3:DO,0	89
0x4001972	              0x55	                                push rbp	      3746	tc-i386.c	FUNCTION_66
0x4001973	              0x53	                                push rbx	      3746	tc-i386.c	FUNCTION_66
0x4001974	        0x4883ec18	                           sub rsp, 0x18	      3746	tc-i386.c	FUNCTION_66
0x4001978	    0x64488b042528	                mov rax, qword fs:[0x28]	      3746	tc-i386.c	FUNCTION_66
0x4001981	      0x4889442408	                mov qword [rsp + 8], rax	      3746	tc-i386.c	FUNCTION_66
0x4001986	            0x31c0	                            xor eax, eax	      3746	tc-i386.c	FUNCTION_66
0x4001988	     0xfb605000000	           movzx eax, byte [0x0400198f] 	      3747	tc-i386.c	FUNCTION_66	SWITCH_1
0x400198f	          0xc0e806	                               shr al, 6	      3747	tc-i386.c	FUNCTION_66	SWITCH_1
0x4001992	            0x3c01	                               cmp al, 1	      3747	tc-i386.c	FUNCTION_66	SWITCH_1
0x4001994	            0x7467	                            je 0x40019fd	      3747	tc-i386.c	FUNCTION_66	SWITCH_1
0x4001996	            0x3c01	                               cmp al, 1	      3747	tc-i386.c	FUNCTION_66	SWITCH_1
0x4001998	            0x7224	                            jb 0x40019be	      3747	tc-i386.c	FUNCTION_66	SWITCH_1
0x400199a	            0x3c02	                               cmp al, 2	      3747	tc-i386.c	FUNCTION_66	SWITCH_1
0x400199c	     0xf8437010000	                            je 0x4001ad9	      3747	tc-i386.c	FUNCTION_66	SWITCH_1
0x40019a2	            0x3c03	                               cmp al, 3	      3747	tc-i386.c	FUNCTION_66	SWITCH_1
0x40019a4	     0xf849a000000	                            je 0x4001a44	      3747	tc-i386.c	FUNCTION_66	SWITCH_1
0x40019aa	      0xba00000000	                              mov edx, 0	      3750	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_1
0x40019af	      0xbea60e0000	                          mov esi, 0xea6	      3750	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_1
0x40019b4	      0xbf00000000	                              mov edi, 0	      3750	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_1
0x40019b9	      0xe800000000	                          call 0x40019be	      3750	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_1
0x40019be	    0x488b2d000000	            mov rbp, qword [0x040019c5] 	      3752	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_3
0x40019c5	    0x488b1d000000	            mov rbx, qword [0x040019cc] 	      3752	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_3
0x40019cc	      0xba05000000	                              mov edx, 5	      3752	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_3
0x40019d1	      0xbe00000000	                              mov esi, 0	      3752	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_3
0x40019d6	      0xbf00000000	                              mov edi, 0	      3752	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_3
0x40019db	      0xe800000000	                          call 0x40019e0	      3752	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_3
0x40019e0	          0x4889ea	                            mov rdx, rbp	      3752	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_3
0x40019e3	          0x4889de	                            mov rsi, rbx	      3752	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_3
0x40019e6	          0x4889c7	                            mov rdi, rax	      3752	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_3
0x40019e9	      0xb800000000	                              mov eax, 0	      3752	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_3
0x40019ee	      0xe800000000	                          call 0x40019f3	      3752	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_3
0x40019f3	      0xb800000000	                              mov eax, 0	      3754	tc-i386.c	FUNCTION_66	SWITCH_1
0x40019f8	      0xe9e1000000	                           jmp 0x4001ade	      3754	tc-i386.c	FUNCTION_66	SWITCH_1
0x40019fd	      0xb801000000	                              mov eax, 1	      3757	tc-i386.c	FUNCTION_66	SWITCH_1	IF_1
0x4001a02	    0x803d00000000	                cmp byte [0x04001a09], 0	      3756	tc-i386.c	FUNCTION_66	SWITCH_1	IF_1
0x4001a09	     0xf85cf000000	                           jne 0x4001ade	      3756	tc-i386.c	FUNCTION_66	SWITCH_1	IF_1
0x4001a0f	    0x488b1d000000	            mov rbx, qword [0x04001a16] 	      3758	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_5
0x4001a16	      0xba05000000	                              mov edx, 5	      3758	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_5
0x4001a1b	      0xbe00000000	                              mov esi, 0	      3758	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_5
0x4001a20	      0xbf00000000	                              mov edi, 0	      3758	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_5
0x4001a25	      0xe800000000	                          call 0x4001a2a	      3758	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_5
0x4001a2a	          0x4889de	                            mov rsi, rbx	      3758	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_5
0x4001a2d	          0x4889c7	                            mov rdi, rax	      3758	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_5
0x4001a30	      0xb800000000	                              mov eax, 0	      3758	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_5
0x4001a35	      0xe800000000	                          call 0x4001a3a	      3758	tc-i386.c	FUNCTION_66	SWITCH_1	CALL_5
0x4001a3a	      0xb800000000	                              mov eax, 0	      3759	tc-i386.c	FUNCTION_66	SWITCH_1
0x4001a3f	      0xe99a000000	                           jmp 0x4001ade	      3759	tc-i386.c	FUNCTION_66	SWITCH_1
0x4001a44	    0x803d00000000	            cmp byte [0x04001a4b], 0xf3 	      3763	tc-i386.c	FUNCTION_66	SWITCH_1	IF_2
0x4001a4b	            0x7432	                            je 0x4001a7f	      3763	tc-i386.c	FUNCTION_66	SWITCH_1	IF_2
0x4001a4d	    0x488b1d000000	            mov rbx, qword [0x04001a54] 	      3765	tc-i386.c	FUNCTION_66	SWITCH_1	IF_2	CALL_7
0x4001a54	      0xba05000000	                              mov edx, 5	      3765	tc-i386.c	FUNCTION_66	SWITCH_1	IF_2	CALL_7
0x4001a59	      0xbe00000000	                              mov esi, 0	      3765	tc-i386.c	FUNCTION_66	SWITCH_1	IF_2	CALL_7
0x4001a5e	      0xbf00000000	                              mov edi, 0	      3765	tc-i386.c	FUNCTION_66	SWITCH_1	IF_2	CALL_7
0x4001a63	      0xe800000000	                          call 0x4001a68	      3765	tc-i386.c	FUNCTION_66	SWITCH_1	IF_2	CALL_7
0x4001a68	          0x4889de	                            mov rsi, rbx	      3765	tc-i386.c	FUNCTION_66	SWITCH_1	IF_2	CALL_7
0x4001a6b	          0x4889c7	                            mov rdi, rax	      3765	tc-i386.c	FUNCTION_66	SWITCH_1	IF_2	CALL_7
0x4001a6e	      0xb800000000	                              mov eax, 0	      3765	tc-i386.c	FUNCTION_66	SWITCH_1	IF_2	CALL_7
0x4001a73	      0xe800000000	                          call 0x4001a78	      3765	tc-i386.c	FUNCTION_66	SWITCH_1	IF_2	CALL_7
0x4001a78	      0xb800000000	                              mov eax, 0	      3767	tc-i386.c	FUNCTION_66	SWITCH_1	IF_2
0x4001a7d	            0xeb5f	                           jmp 0x4001ade	      3767	tc-i386.c	FUNCTION_66	SWITCH_1	IF_2
0x4001a7f	    0x833d00000000	               cmp dword [0x04001a86], 0	      3769	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3
0x4001a86	            0x741f	                            je 0x4001aa7	      3769	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3
0x4001a88	    0x8b0500000000	            mov eax, dword [0x04001a8e] 	      3769	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3
0x4001a8e	          0x8d40ff	                      lea eax, [rax - 1]	      3769	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3
0x4001a91	    0x488b14c50000	                  mov rdx, qword [rax*8]	      3769	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3
0x4001a99	        0x48c1ea10	                           shr rdx, 0x10	      1895	tc-i386.c	FUNCTION_21	SWITCH_1
0x4001a9d	      0xb801000000	                              mov eax, 1	      3776	tc-i386.c	FUNCTION_66	SWITCH_1
0x4001aa2	          0xf6c25f	                           test dl, 0x5f	      3770	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3	CALL_8
0x4001aa5	            0x7537	                           jne 0x4001ade	      3770	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3	CALL_8
0x4001aa7	    0x488b1d000000	            mov rbx, qword [0x04001aae] 	      3772	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3	CALL_10
0x4001aae	      0xba05000000	                              mov edx, 5	      3772	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3	CALL_10
0x4001ab3	      0xbe00000000	                              mov esi, 0	      3772	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3	CALL_10
0x4001ab8	      0xbf00000000	                              mov edi, 0	      3772	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3	CALL_10
0x4001abd	      0xe800000000	                          call 0x4001ac2	      3772	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3	CALL_10
0x4001ac2	          0x4889de	                            mov rsi, rbx	      3772	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3	CALL_10
0x4001ac5	          0x4889c7	                            mov rdi, rax	      3772	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3	CALL_10
0x4001ac8	      0xb800000000	                              mov eax, 0	      3772	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3	CALL_10
0x4001acd	      0xe800000000	                          call 0x4001ad2	      3772	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3	CALL_10
0x4001ad2	      0xb800000000	                              mov eax, 0	      3774	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3
0x4001ad7	            0xeb05	                           jmp 0x4001ade	      3774	tc-i386.c	FUNCTION_66	SWITCH_1	IF_3
0x4001ad9	      0xb801000000	                              mov eax, 1	      3761	tc-i386.c	FUNCTION_66	SWITCH_1
0x4001ade	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3778	tc-i386.c	FUNCTION_66
0x4001ae3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3778	tc-i386.c	FUNCTION_66
0x4001aec	            0x7405	                            je 0x4001af3	      3778	tc-i386.c	FUNCTION_66
0x4001aee	      0xe800000000	                          call 0x4001af3	      3778	tc-i386.c	FUNCTION_66
0x4001af3	        0x4883c418	                           add rsp, 0x18	      3778	tc-i386.c	FUNCTION_66
0x4001af7	              0x5b	                                 pop rbx	      3778	tc-i386.c	FUNCTION_66
0x4001af8	              0x5d	                                 pop rbp	      3778	tc-i386.c	FUNCTION_66
0x4001af9	              0xc3	                                     ret	      3778	tc-i386.c	FUNCTION_66
parse_register	functions,0:ELSE,1:FOR,0:CALL,7:SWITCH,0:WHILE,0:IF,4:DO,0	68
0x40057b9	            0x4155	                                push r13	     10292	tc-i386.c	FUNCTION_121
0x40057bb	            0x4154	                                push r12	     10292	tc-i386.c	FUNCTION_121
0x40057bd	              0x55	                                push rbp	     10292	tc-i386.c	FUNCTION_121
0x40057be	              0x53	                                push rbx	     10292	tc-i386.c	FUNCTION_121
0x40057bf	        0x4883ec18	                           sub rsp, 0x18	     10292	tc-i386.c	FUNCTION_121
0x40057c3	      0x48897c2408	                mov qword [rsp + 8], rdi	     10292	tc-i386.c	FUNCTION_121
0x40057c8	          0x4889f3	                            mov rbx, rsi	     10292	tc-i386.c	FUNCTION_121
0x40057cb	          0x803f25	                    cmp byte [rdi], 0x25	     10295	tc-i386.c	FUNCTION_121	IF_1
0x40057ce	            0x7409	                            je 0x40057d9	     10295	tc-i386.c	FUNCTION_121	IF_1
0x40057d0	    0x833d00000000	               cmp dword [0x040057d7], 0	     10295	tc-i386.c	FUNCTION_121	IF_1
0x40057d7	            0x7411	                            je 0x40057ea	     10295	tc-i386.c	FUNCTION_121	IF_1
0x40057d9	          0x4889de	                            mov rsi, rbx	     10296	tc-i386.c	FUNCTION_121	CALL_1
0x40057dc	      0xe8e1d5ffff	            call sym.parse_real_register	     10296	tc-i386.c	FUNCTION_121	CALL_1
0x40057e1	          0x4885c0	                           test rax, rax	     10299	tc-i386.c	FUNCTION_121	ELSE_1	IF_2
0x40057e4	     0xf85d7000000	                           jne 0x40058c1	     10299	tc-i386.c	FUNCTION_121	ELSE_1	IF_2
0x40057ea	    0x4c8b25000000	            mov r12, qword [0x040057f1] 	     10301	tc-i386.c	FUNCTION_121	ELSE_1	IF_2
0x40057f1	      0x488b442408	                mov rax, qword [rsp + 8]	     10305	tc-i386.c	FUNCTION_121	ELSE_1	IF_2
0x40057f6	    0x488905000000	            mov qword [0x040057fd], rax 	     10305	tc-i386.c	FUNCTION_121	ELSE_1	IF_2
0x40057fd	      0x488d7c2408	                      lea rdi, [rsp + 8]	     10306	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	CALL_2
0x4005802	      0xe800000000	                          call 0x4005807	     10306	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	CALL_2
0x4005807	          0x4189c5	                           mov r13d, eax	     10306	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	CALL_2
0x400580a	      0x488b7c2408	                mov rdi, qword [rsp + 8]	     10307	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	CALL_3
0x400580f	      0xe800000000	                          call 0x4005814	     10307	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	CALL_3
0x4005814	          0x4889c5	                            mov rbp, rax	     10307	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	CALL_3
0x4005817	          0x4885c0	                           test rax, rax	     10308	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_4
0x400581a	     0xf848b000000	                            je 0x40058ab	     10308	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_4
0x4005820	          0x4889c7	                            mov rdi, rax	     10308	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_4
0x4005823	      0xe800000000	                          call 0x4005828	     10308	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_4
0x4005828	          0x4889c2	                            mov rdx, rax	     10308	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_4
0x400582b	      0xb800000000	                              mov eax, 0	     10308	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_4
0x4005830	    0x483b15000000	            cmp rdx, qword [0x04005837] 	     10308	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_4
0x4005837	            0x7577	                           jne 0x40058b0	     10308	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_4
0x4005839	          0x4889ef	                            mov rdi, rbp	     10310	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_5
0x400583c	      0xe800000000	                          call 0x4005841	     10310	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_5
0x4005841	        0x80781805	                cmp byte [rax + 0x18], 5	     10312	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_6
0x4005845	            0x7414	                            je 0x400585b	     10312	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_6
0x4005847	      0xba00000000	                              mov edx, 0	     10312	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_6
0x400584c	      0xbe48280000	                         mov esi, 0x2848	     10312	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_6
0x4005851	      0xbf00000000	                              mov edi, 0	     10312	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_6
0x4005856	      0xe800000000	                          call 0x400585b	     10312	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_6
0x400585b	        0x488b4010	            mov rax, qword [rax + 0x10] 	     10313	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_7
0x400585f	          0x4885c0	                           test rax, rax	     10313	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_7
0x4005862	            0x780b	                            js 0x400586f	     10313	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_7
0x4005864	    0x8b1500000000	            mov edx, dword [0x0400586a] 	     10313	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_7
0x400586a	          0x4839d0	                            cmp rax, rdx	     10313	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_7
0x400586d	            0x7214	                            jb 0x4005883	     10313	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_7
0x400586f	      0xba00000000	                              mov edx, 0	     10313	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_7
0x4005874	      0xbe4a280000	                         mov esi, 0x284a	     10313	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_7
0x4005879	      0xbf00000000	                              mov edi, 0	     10313	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_7
0x400587e	      0xe800000000	                          call 0x4005883	     10313	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	CALL_7
0x4005883	        0x488d0440	                  lea rax, [rax + rax*2]	     10315	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3
0x4005887	    0x488d04c50000	                        lea rax, [rax*8]	     10315	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3
0x400588f	        0xf6401004	               test byte [rax + 0x10], 4	     10316	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	IF_4
0x4005893	            0x740a	                            je 0x400589f	     10316	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	IF_4
0x4005895	    0xc70500000000	               mov dword [0x0400589f], 3	     10317	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3	IF_4
0x400589f	    0x488b15000000	            mov rdx, qword [0x040058a6] 	     10318	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3
0x40058a6	          0x488913	                    mov qword [rbx], rdx	     10318	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3
0x40058a9	            0xeb05	                           jmp 0x40058b0	     10318	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3
0x40058ab	      0xb800000000	                              mov eax, 0	     10318	tc-i386.c	FUNCTION_121	ELSE_1	IF_2	IF_3
0x40058b0	    0x488b15000000	            mov rdx, qword [0x040058b7] 	     10320	tc-i386.c	FUNCTION_121	ELSE_1	IF_2
0x40058b7	          0x44882a	                    mov byte [rdx], r13b	     10320	tc-i386.c	FUNCTION_121	ELSE_1	IF_2
0x40058ba	    0x4c8925000000	            mov qword [0x040058c1], r12 	     10321	tc-i386.c	FUNCTION_121	ELSE_1	IF_2
0x40058c1	        0x4883c418	                           add rsp, 0x18	     10324	tc-i386.c	FUNCTION_121
0x40058c5	              0x5b	                                 pop rbx	     10324	tc-i386.c	FUNCTION_121
0x40058c6	              0x5d	                                 pop rbp	     10324	tc-i386.c	FUNCTION_121
0x40058c7	            0x415c	                                 pop r12	     10324	tc-i386.c	FUNCTION_121
0x40058c9	            0x415d	                                 pop r13	     10324	tc-i386.c	FUNCTION_121
0x40058cb	              0xc3	                                     ret	     10324	tc-i386.c	FUNCTION_121
build_vex_prefix	functions,0:ELSE,4:FOR,1:CALL,5:SWITCH,2:WHILE,0:IF,7:DO,0	217
0x4001d85	        0x4883ec18	                           sub rsp, 0x18	      3313	tc-i386.c	FUNCTION_62
0x4001d89	    0x64488b042528	                mov rax, qword fs:[0x28]	      3313	tc-i386.c	FUNCTION_62
0x4001d92	      0x4889442408	                mov qword [rsp + 8], rax	      3313	tc-i386.c	FUNCTION_62
0x4001d97	            0x31c0	                            xor eax, eax	      3313	tc-i386.c	FUNCTION_62
0x4001d99	    0x488b15000000	            mov rdx, qword [0x04001da0] 	      3319	tc-i386.c	FUNCTION_62	IF_1
0x4001da0	          0x4885d2	                           test rdx, rdx	      3319	tc-i386.c	FUNCTION_62	IF_1
0x4001da3	            0x7433	                            je 0x4001dd8	      3319	tc-i386.c	FUNCTION_62	IF_1
0x4001da5	         0xfb64211	           movzx eax, byte [rdx + 0x11] 	      2123	tc-i386.c	FUNCTION_28
0x4001da9	         0xfb65210	           movzx edx, byte [rdx + 0x10] 	      2125	tc-i386.c	FUNCTION_28	IF_1
0x4001dad	            0x89d6	                            mov esi, edx	      2125	tc-i386.c	FUNCTION_28	IF_1
0x4001daf	          0x83e601	                              and esi, 1	      2125	tc-i386.c	FUNCTION_28	IF_1
0x4001db2	          0x8d4808	                      lea ecx, [rax + 8]	      2126	tc-i386.c	FUNCTION_28	IF_1
0x4001db5	          0x4084f6	                           test sil, sil	      2126	tc-i386.c	FUNCTION_28	IF_1
0x4001db8	           0xf45c1	                         cmovne eax, ecx	      2126	tc-i386.c	FUNCTION_28	IF_1
0x4001dbb	          0xf6c204	                              test dl, 4	      2128	tc-i386.c	FUNCTION_28	IF_2
0x4001dbe	     0xf847a030000	                            je 0x400213e	      2128	tc-i386.c	FUNCTION_28	IF_2
0x4001dc4	      0xba00000000	                              mov edx, 0	      3323	tc-i386.c	FUNCTION_62	IF_1	CALL_2
0x4001dc9	      0xbefb0c0000	                          mov esi, 0xcfb	      3323	tc-i386.c	FUNCTION_62	IF_1	CALL_2
0x4001dce	      0xbf00000000	                              mov edi, 0	      3323	tc-i386.c	FUNCTION_62	IF_1	CALL_2
0x4001dd3	      0xe800000000	                          call 0x4001dd8	      3323	tc-i386.c	FUNCTION_62	IF_1	CALL_2
0x4001dd8	      0xbe0f000000	                            mov esi, 0xf	      3326	tc-i386.c	FUNCTION_62	ELSE_1
0x4001ddd	    0x448b15000000	           mov r10d, dword [0x04001de4] 	      3330	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001de4	        0x4183fa02	                             cmp r10d, 2	      3330	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001de8	     0xf8469010000	                            je 0x4001f57	      3330	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001dee	    0x833d00000000	               cmp dword [0x04001df5], 0	      3331	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001df5	     0xf855c010000	                           jne 0x4001f57	      3331	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001dfb	    0x8b0500000000	            mov eax, dword [0x04001e01] 	      3332	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001e01	    0x3b0500000000	            cmp eax, dword [0x04001e07] 	      3332	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001e07	     0xf854a010000	                           jne 0x4001f57	      3332	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001e0d	    0x48ba04000000	            movabs rdx, 0x3800000000004 	      3334	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001e17	    0x482315000000	             and rdx, qword [0x04001e1e]	      3334	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001e1e	        0x4883fa04	                              cmp rdx, 4	      3334	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001e22	     0xf852f010000	                           jne 0x4001f57	      3334	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001e28	    0x833d00000000	               cmp dword [0x04001e2f], 1	      3335	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001e2f	     0xf8522010000	                           jne 0x4001f57	      3335	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001e35	          0x8d40ff	                      lea eax, [rax - 1]	      3341	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001e38	        0x488d500e	                    lea rdx, [rax + 0xe]	      3341	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001e3c	    0x488b0cd50000	                  mov rcx, qword [rdx*8]	      3341	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001e44	    0x4c8b05000000	              mov r8, qword [0x04001e4b]	      3342	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001e4b	    0x4c8904d50000	                   mov qword [rdx*8], r8	      3342	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001e53	    0x48890d000000	            mov qword [0x04001e5a], rcx 	      3343	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001e5a	        0x4883c014	                           add rax, 0x14	      3344	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001e5e	    0x488b14c50000	                  mov rdx, qword [rax*8]	      3344	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001e66	    0x488b0d000000	            mov rcx, qword [0x04001e6d] 	      3345	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001e6d	    0x48890cc50000	                  mov qword [rax*8], rcx	      3345	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001e75	    0x488915000000	            mov qword [0x04001e7c], rdx 	      3346	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001e7c	    0x833d00000000	               cmp dword [0x04001e83], 3	      3348	tc-i386.c	FUNCTION_62	ELSE_1	IF_2	CALL_3
0x4001e83	            0x7414	                            je 0x4001e99	      3348	tc-i386.c	FUNCTION_62	ELSE_1	IF_2	CALL_3
0x4001e85	      0xba00000000	                              mov edx, 0	      3348	tc-i386.c	FUNCTION_62	ELSE_1	IF_2	CALL_3
0x4001e8a	      0xbe140d0000	                          mov esi, 0xd14	      3348	tc-i386.c	FUNCTION_62	ELSE_1	IF_2	CALL_3
0x4001e8f	      0xbf00000000	                              mov edi, 0	      3348	tc-i386.c	FUNCTION_62	ELSE_1	IF_2	CALL_3
0x4001e94	      0xe800000000	                          call 0x4001e99	      3348	tc-i386.c	FUNCTION_62	ELSE_1	IF_2	CALL_3
0x4001e99	    0xc70500000000	               mov dword [0x04001ea3], 4	      3350	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001ea3	    0x8b0500000000	            mov eax, dword [0x04001ea9] 	      3351	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001ea9	    0x8b1500000000	            mov edx, dword [0x04001eaf] 	      3352	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001eaf	    0x891500000000	            mov dword [0x04001eb5], edx 	      3352	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001eb5	    0x890500000000	            mov dword [0x04001ebb], eax 	      3353	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001ebb	        0x488b4760	            mov rax, qword [rdi + 0x60] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001ebf	    0x488905000000	            mov qword [0x04001ec6], rax 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001ec6	        0x488b4768	            mov rax, qword [rdi + 0x68] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001eca	    0x488905000000	            mov qword [0x04001ed1], rax 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001ed1	        0x488b4770	            mov rax, qword [rdi + 0x70] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001ed5	    0x488905000000	            mov qword [0x04001edc], rax 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001edc	        0x488b4778	            mov rax, qword [rdi + 0x78] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001ee0	    0x488905000000	            mov qword [0x04001ee7], rax 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001ee7	    0x488b87800000	            mov rax, qword [rdi + 0x80] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001eee	    0x488905000000	            mov qword [0x04001ef5], rax 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001ef5	    0x488b87880000	            mov rax, qword [rdi + 0x88] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001efc	    0x488905000000	            mov qword [0x04001f03], rax 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001f03	    0x488b87900000	            mov rax, qword [rdi + 0x90] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001f0a	    0x488905000000	            mov qword [0x04001f11], rax 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001f11	    0x488b87980000	            mov rax, qword [rdi + 0x98] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001f18	    0x488905000000	            mov qword [0x04001f1f], rax 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001f1f	    0x488b87a00000	            mov rax, qword [rdi + 0xa0] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001f26	    0x488905000000	            mov qword [0x04001f2d], rax 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001f2d	    0x488b87a80000	            mov rax, qword [rdi + 0xa8] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001f34	    0x488905000000	            mov qword [0x04001f3b], rax 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001f3b	    0x488b87b00000	            mov rax, qword [rdi + 0xb0] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001f42	    0x488905000000	            mov qword [0x04001f49], rax 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001f49	    0x488b87b80000	            mov rax, qword [rdi + 0xb8] 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001f50	    0x488905000000	            mov qword [0x04001f57], rax 	      3356	tc-i386.c	FUNCTION_62	ELSE_1	IF_2
0x4001f57	    0x440fb6050000	           movzx r8d, byte [0x04001f5f] 	      3359	tc-i386.c	FUNCTION_62	IF_3
0x4001f5f	          0x4489c0	                            mov eax, r8d	      3359	tc-i386.c	FUNCTION_62	IF_3
0x4001f62	          0x83e006	                              and eax, 6	      3359	tc-i386.c	FUNCTION_62	IF_3
0x4001f65	    0x8b1500000000	            mov edx, dword [0x04001f6b] 	      3360	tc-i386.c	FUNCTION_62	IF_3
0x4001f6b	            0x3c06	                               cmp al, 6	      3359	tc-i386.c	FUNCTION_62	IF_3
0x4001f6d	            0x7449	                            je 0x4001fb8	      3359	tc-i386.c	FUNCTION_62	IF_3
0x4001f6f	      0xba01000000	                              mov edx, 1	      3362	tc-i386.c	FUNCTION_62	ELSE_2	IF_4
0x4001f74	            0x3c04	                               cmp al, 4	      3361	tc-i386.c	FUNCTION_62	ELSE_2	IF_4
0x4001f76	            0x7440	                            je 0x4001fb8	      3361	tc-i386.c	FUNCTION_62	ELSE_2	IF_4
0x4001f78	          0x8b4f08	                mov ecx, dword [rdi + 8]	      3368	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1
0x4001f7b	            0x85c9	                           test ecx, ecx	      3368	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1
0x4001f7d	            0x742d	                            je 0x4001fac	      3368	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1
0x4001f7f	      0xb800000000	                              mov eax, 0	      3368	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1
0x4001f84	            0x89c2	                            mov edx, eax	      3369	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x4001f86	      0xf644d73808	      test byte [rdi + rdx*8 + 0x38], 8 	      3369	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x4001f8b	            0x7411	                            je 0x4001f9e	      3369	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x4001f8d	      0xf644d73810	   test byte [rdi + rdx*8 + 0x38], 0x10 	      3370	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x4001f92	            0x740a	                            je 0x4001f9e	      3370	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x4001f94	    0xf604d5000000	                 test byte [rdx*8], 0x10	      3371	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x4001f9c	            0x7515	                           jne 0x4001fb3	      3371	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x4001f9e	          0x83c001	                              add eax, 1	      3368	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1
0x4001fa1	            0x39c8	                            cmp eax, ecx	      3368	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1
0x4001fa3	            0x75df	                           jne 0x4001f84	      3368	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1
0x4001fa5	      0xba00000000	                              mov edx, 0	      3367	tc-i386.c	FUNCTION_62	ELSE_3
0x4001faa	            0xeb0c	                           jmp 0x4001fb8	      3367	tc-i386.c	FUNCTION_62	ELSE_3
0x4001fac	      0xba00000000	                              mov edx, 0	      3367	tc-i386.c	FUNCTION_62	ELSE_3
0x4001fb1	            0xeb05	                           jmp 0x4001fb8	      3367	tc-i386.c	FUNCTION_62	ELSE_3
0x4001fb3	      0xba01000000	                              mov edx, 1	      3373	tc-i386.c	FUNCTION_62	ELSE_3	FOR_1	IF_5
0x4001fb8	     0xfb605000000	           movzx eax, byte [0x04001fbf] 	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x4001fbf	          0x83f866	                           cmp eax, 0x66	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x4001fc2	            0x7427	                            je 0x4001feb	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x4001fc4	          0x83f866	                           cmp eax, 0x66	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x4001fc7	            0x770c	                            ja 0x4001fd5	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x4001fc9	    0x41b900000000	                              mov r9d, 0	      3381	tc-i386.c	FUNCTION_62	SWITCH_1
0x4001fcf	            0x85c0	                           test eax, eax	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x4001fd1	            0x743c	                            je 0x400200f	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x4001fd3	            0xeb26	                           jmp 0x4001ffb	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x4001fd5	      0x3df2000000	                           cmp eax, 0xf2	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x4001fda	            0x7417	                            je 0x4001ff3	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x4001fdc	    0x41b902000000	                              mov r9d, 2	      3387	tc-i386.c	FUNCTION_62	SWITCH_1
0x4001fe2	      0x3df3000000	                           cmp eax, 0xf3	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x4001fe7	            0x7426	                            je 0x400200f	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x4001fe9	            0xeb10	                           jmp 0x4001ffb	      3378	tc-i386.c	FUNCTION_62	SWITCH_1
0x4001feb	    0x41b901000000	                              mov r9d, 1	      3384	tc-i386.c	FUNCTION_62	SWITCH_1
0x4001ff1	            0xeb1c	                           jmp 0x400200f	      3384	tc-i386.c	FUNCTION_62	SWITCH_1
0x4001ff3	    0x41b903000000	                              mov r9d, 3	      3390	tc-i386.c	FUNCTION_62	SWITCH_1
0x4001ff9	            0xeb14	                           jmp 0x400200f	      3391	tc-i386.c	FUNCTION_62	SWITCH_1
0x4001ffb	      0xba00000000	                              mov edx, 0	      3393	tc-i386.c	FUNCTION_62	SWITCH_1	CALL_4
0x4002000	      0xbe410d0000	                          mov esi, 0xd41	      3393	tc-i386.c	FUNCTION_62	SWITCH_1	CALL_4
0x4002005	      0xbf00000000	                              mov edi, 0	      3393	tc-i386.c	FUNCTION_62	SWITCH_1	CALL_4
0x400200a	      0xe800000000	                          call 0x400200f	      3393	tc-i386.c	FUNCTION_62	SWITCH_1	CALL_4
0x400200f	        0x4183fa02	                             cmp r10d, 2	      3397	tc-i386.c	FUNCTION_62	IF_6
0x4002013	            0x7453	                            je 0x4002068	      3397	tc-i386.c	FUNCTION_62	IF_6
0x4002015	    0xf70500000000	       test dword [0x0400201f], 0x38000 	      3398	tc-i386.c	FUNCTION_62	IF_6
0x400201f	            0x7547	                           jne 0x4002068	      3398	tc-i386.c	FUNCTION_62	IF_6
0x4002021	          0x4489c0	                            mov eax, r8d	      3399	tc-i386.c	FUNCTION_62	IF_6
0x4002024	          0x83e060	                           and eax, 0x60	      3399	tc-i386.c	FUNCTION_62	IF_6
0x4002027	            0x3c40	                            cmp al, 0x40	      3399	tc-i386.c	FUNCTION_62	IF_6
0x4002029	            0x743d	                            je 0x4002068	      3399	tc-i386.c	FUNCTION_62	IF_6
0x400202b	    0x8b0500000000	            mov eax, dword [0x04002031] 	      3400	tc-i386.c	FUNCTION_62	IF_6
0x4002031	            0xa80b	                            test al, 0xb	      3400	tc-i386.c	FUNCTION_62	IF_6
0x4002033	            0x7533	                           jne 0x4002068	      3400	tc-i386.c	FUNCTION_62	IF_6
0x4002035	    0xc70500000000	               mov dword [0x0400203f], 2	      3405	tc-i386.c	FUNCTION_62	IF_6
0x400203f	    0xc60500000000	            mov byte [0x04002046], 0xc5 	      3406	tc-i386.c	FUNCTION_62	IF_6
0x4002046	          0xc1e802	                              shr eax, 2	      3410	tc-i386.c	FUNCTION_62	IF_6
0x4002049	          0x83f001	                              xor eax, 1	      3410	tc-i386.c	FUNCTION_62	IF_6
0x400204c	          0xc1e007	                              shl eax, 7	      3410	tc-i386.c	FUNCTION_62	IF_6
0x400204f	          0xc1e603	                              shl esi, 3	      3410	tc-i386.c	FUNCTION_62	IF_6
0x4002052	             0x9f0	                             or eax, esi	      3410	tc-i386.c	FUNCTION_62	IF_6
0x4002054	          0xc1e202	                              shl edx, 2	      3410	tc-i386.c	FUNCTION_62	IF_6
0x4002057	             0x9c2	                             or edx, eax	      3410	tc-i386.c	FUNCTION_62	IF_6
0x4002059	          0x4109d1	                             or r9d, edx	      3410	tc-i386.c	FUNCTION_62	IF_6
0x400205c	    0x44880d000000	              mov byte [0x04002063], r9b	      3410	tc-i386.c	FUNCTION_62	IF_6
0x4002063	      0xe9e2000000	                           jmp 0x400214a	      3401	tc-i386.c	FUNCTION_62	IF_6
0x4002068	    0xc70500000000	               mov dword [0x04002072], 3	      3420	tc-i386.c	FUNCTION_62	ELSE_4
0x4002072	    0x8b0500000000	            mov eax, dword [0x04002078] 	      3422	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x4002078	          0xc1e80f	                            shr eax, 0xf	      3422	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400207b	          0x83e007	                              and eax, 7	      3422	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400207e	            0x3c05	                               cmp al, 5	      3422	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x4002080	            0x775e	                            ja 0x40020e0	      3422	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x4002082	           0xfb6c0	                           movzx eax, al	      3422	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x4002085	    0xff24c5000000	                       jmp qword [rax*8]	      3422	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400208c	    0xc60500000000	            mov byte [0x04002093], 0xc4 	      3426	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x4002093	      0xbf01000000	                              mov edi, 1	      3425	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x4002098	            0xeb5a	                           jmp 0x40020f4	      3427	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x400209a	    0xc60500000000	            mov byte [0x040020a1], 0xc4 	      3430	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x40020a1	      0xbf02000000	                              mov edi, 2	      3429	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x40020a6	            0xeb4c	                           jmp 0x40020f4	      3431	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x40020a8	    0xc60500000000	            mov byte [0x040020af], 0xc4 	      3434	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x40020af	      0xbf03000000	                              mov edi, 3	      3433	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x40020b4	            0xeb3e	                           jmp 0x40020f4	      3435	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x40020b6	    0xc60500000000	            mov byte [0x040020bd], 0x8f 	      3438	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x40020bd	      0xbf08000000	                              mov edi, 8	      3437	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x40020c2	            0xeb30	                           jmp 0x40020f4	      3439	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x40020c4	    0xc60500000000	            mov byte [0x040020cb], 0x8f 	      3442	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x40020cb	      0xbf09000000	                              mov edi, 9	      3441	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x40020d0	            0xeb22	                           jmp 0x40020f4	      3443	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x40020d2	    0xc60500000000	            mov byte [0x040020d9], 0x8f 	      3446	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x40020d9	      0xbf0a000000	                            mov edi, 0xa	      3445	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x40020de	            0xeb14	                           jmp 0x40020f4	      3447	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2
0x40020e0	      0xba00000000	                              mov edx, 0	      3449	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2	CALL_5
0x40020e5	      0xbe790d0000	                          mov esi, 0xd79	      3449	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2	CALL_5
0x40020ea	      0xbf00000000	                              mov edi, 0	      3449	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2	CALL_5
0x40020ef	      0xe800000000	                          call 0x40020f4	      3449	tc-i386.c	FUNCTION_62	ELSE_4	SWITCH_2	CALL_5
0x40020f4	    0x8b0500000000	            mov eax, dword [0x040020fa] 	      3454	tc-i386.c	FUNCTION_62	ELSE_4
0x40020fa	            0x89c1	                            mov ecx, eax	      3454	tc-i386.c	FUNCTION_62	ELSE_4
0x40020fc	            0xf7d1	                                 not ecx	      3454	tc-i386.c	FUNCTION_62	ELSE_4
0x40020fe	          0xc1e105	                              shl ecx, 5	      3454	tc-i386.c	FUNCTION_62	ELSE_4
0x4002101	             0x9f9	                             or ecx, edi	      3454	tc-i386.c	FUNCTION_62	ELSE_4
0x4002103	    0x880d00000000	               mov byte [0x04002109], cl	      3454	tc-i386.c	FUNCTION_62	ELSE_4
0x4002109	        0x4183e060	                           and r8d, 0x60	      3458	tc-i386.c	FUNCTION_62	ELSE_4	IF_7
0x400210d	      0xbf01000000	                              mov edi, 1	      3459	tc-i386.c	FUNCTION_62	ELSE_4	IF_7
0x4002112	        0x4180f840	                           cmp r8b, 0x40	      3458	tc-i386.c	FUNCTION_62	ELSE_4	IF_7
0x4002116	            0x7408	                            je 0x4002120	      3458	tc-i386.c	FUNCTION_62	ELSE_4	IF_7
0x4002118	          0xc1e803	                              shr eax, 3	      3457	tc-i386.c	FUNCTION_62	ELSE_4
0x400211b	            0x89c7	                            mov edi, eax	      3457	tc-i386.c	FUNCTION_62	ELSE_4
0x400211d	          0x83e701	                              and edi, 1	      3457	tc-i386.c	FUNCTION_62	ELSE_4
0x4002120	          0xc1e603	                              shl esi, 3	      3461	tc-i386.c	FUNCTION_62	ELSE_4
0x4002123	    0x8d0c95000000	                        lea ecx, [rdx*4]	      3461	tc-i386.c	FUNCTION_62	ELSE_4
0x400212a	             0x9ce	                             or esi, ecx	      3461	tc-i386.c	FUNCTION_62	ELSE_4
0x400212c	            0x89f2	                            mov edx, esi	      3461	tc-i386.c	FUNCTION_62	ELSE_4
0x400212e	          0x4409ca	                             or edx, r9d	      3461	tc-i386.c	FUNCTION_62	ELSE_4
0x4002131	          0xc1e707	                              shl edi, 7	      3461	tc-i386.c	FUNCTION_62	ELSE_4
0x4002134	             0x9fa	                             or edx, edi	      3461	tc-i386.c	FUNCTION_62	ELSE_4
0x4002136	    0x881500000000	               mov byte [0x0400213c], dl	      3461	tc-i386.c	FUNCTION_62	ELSE_4
0x400213c	            0xeb0c	                           jmp 0x400214a	      3466	tc-i386.c	FUNCTION_62
0x400213e	            0xf7d0	                                 not eax	      3321	tc-i386.c	FUNCTION_62	IF_1
0x4002140	          0x83e00f	                            and eax, 0xf	      3321	tc-i386.c	FUNCTION_62	IF_1
0x4002143	            0x89c6	                            mov esi, eax	      3321	tc-i386.c	FUNCTION_62	IF_1
0x4002145	      0xe993fcffff	                           jmp 0x4001ddd	      3321	tc-i386.c	FUNCTION_62	IF_1
0x400214a	      0x488b442408	                mov rax, qword [rsp + 8]	      3466	tc-i386.c	FUNCTION_62
0x400214f	    0x644833042528	                xor rax, qword fs:[0x28]	      3466	tc-i386.c	FUNCTION_62
0x4002158	            0x7405	                            je 0x400215f	      3466	tc-i386.c	FUNCTION_62
0x400215a	      0xe800000000	                          call 0x400215f	      3466	tc-i386.c	FUNCTION_62
0x400215f	        0x4883c418	                           add rsp, 0x18	      3466	tc-i386.c	FUNCTION_62
0x4002163	              0xc3	                                     ret	      3466	tc-i386.c	FUNCTION_62
i386_target_format	functions,0:ELSE,10:FOR,0:CALL,19:SWITCH,2:WHILE,0:IF,17:DO,0	187
0x401034a	              0x53	                                push rbx	     11053	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x401034b	    0x488b05000000	            mov rax, qword [0x04010352] 	     11054	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x4010352	      0xbf00000000	                              mov edi, 0	     11054	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x4010357	      0xb906000000	                              mov ecx, 6	     11054	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x401035c	          0x4889c6	                            mov rsi, rax	     11054	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x401035f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11054	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x4010361	           0xf97c1	                                 seta cl	     11054	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x4010364	           0xf92c2	                                 setb dl	     11054	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x4010367	            0x38d1	                              cmp cl, dl	     11054	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x4010369	            0x752a	                           jne 0x4010395	     11054	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x401036b	      0xbe01000000	                              mov esi, 1	     11056	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x4010370	      0xbf02000000	                              mov edi, 2	     11056	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x4010375	      0xe84209ffff	               call sym.update_code_flag	     11056	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x401037a	    0x488b05000000	            mov rax, qword [0x04010381] 	     11057	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x4010381	        0x80780601	                   cmp byte [rax + 6], 1	     11058	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x4010385	            0x19c0	                            sbb eax, eax	     11058	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x4010387	          0x83c002	                              add eax, 2	     11058	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x401038a	    0x890500000000	            mov dword [0x04010390], eax 	     11058	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x4010390	      0xe943010000	                           jmp 0x40104d8	     11058	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x4010395	      0xbf00000000	                              mov edi, 0	     11062	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x401039a	      0xb905000000	                              mov ecx, 5	     11062	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x401039f	          0x4889c6	                            mov rsi, rax	     11062	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x40103a2	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11062	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x40103a4	           0xf97c1	                                 seta cl	     11062	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x40103a7	           0xf92c2	                                 setb dl	     11062	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x40103aa	            0x38d1	                              cmp cl, dl	     11062	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x40103ac	            0x7514	                           jne 0x40103c2	     11062	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x40103ae	      0xbe01000000	                              mov esi, 1	     11063	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x40103b3	      0xbf00000000	                              mov edi, 0	     11063	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x40103b8	      0xe8ff08ffff	               call sym.update_code_flag	     11063	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x40103bd	      0xe916010000	                           jmp 0x40104d8	     11063	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5	IF_6
0x40103c2	      0xbf00000000	                              mov edi, 0	     11064	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x40103c7	      0xb906000000	                              mov ecx, 6	     11064	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x40103cc	          0x4889c6	                            mov rsi, rax	     11064	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x40103cf	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11064	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x40103d1	           0xf97c2	                                 seta dl	     11064	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x40103d4	           0xf92c0	                                 setb al	     11064	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x40103d7	            0x38c2	                              cmp dl, al	     11064	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x40103d9	     0xf85d8000000	                           jne 0x40104b7	     11064	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	IF_5
0x40103df	      0xbe01000000	                              mov esi, 1	     11066	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	ELSE_4	IF_7	CALL_8
0x40103e4	      0xbf00000000	                              mov edi, 0	     11066	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	ELSE_4	IF_7	CALL_8
0x40103e9	      0xe8ce08ffff	               call sym.update_code_flag	     11066	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	ELSE_4	IF_7	CALL_8
0x40103ee	    0x8b0500000000	            mov eax, dword [0x040103f4] 	     11067	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	ELSE_4	IF_7
0x40103f4	            0x85c0	                           test eax, eax	     11067	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	ELSE_4	IF_7
0x40103f6	     0xf858b000000	                           jne 0x4010487	     11067	tc-i386.c	FUNCTION_128	ELSE_3	IF_4	ELSE_4	IF_7
0x40103fc	    0x48c705000000	               mov qword [0x04010407], 0	     11070	tc-i386.c	FUNCTION_128	CALL_10
0x4010407	    0x48c705000000	               mov qword [0x04010412], 0	     11071	tc-i386.c	FUNCTION_128
0x4010412	    0x48c705000000	               mov qword [0x0401041d], 0	     11072	tc-i386.c	FUNCTION_128	IF_8	CALL_11
0x401041d	    0x48c705000000	               mov qword [0x04010428], 0	     11072	tc-i386.c	FUNCTION_128	IF_8	CALL_11
0x4010428	    0xc60500000000	            mov byte [0x0401042f], 0x1f 	     11072	tc-i386.c	FUNCTION_128	IF_8	CALL_11
0x401042f	    0xc70500000000	            mov dword [0x04010439], 0xc 	     11073	tc-i386.c	FUNCTION_128	IF_8
0x4010439	    0x48c705000000	               mov qword [0x04010444], 0	     11074	tc-i386.c	FUNCTION_128	IF_9	CALL_12
0x4010444	    0x48c705000000	               mov qword [0x0401044f], 0	     11074	tc-i386.c	FUNCTION_128	IF_9	CALL_12
0x401044f	    0xc60500000000	            mov byte [0x04010456], 0x1f 	     11074	tc-i386.c	FUNCTION_128	IF_9	CALL_12
0x4010456	    0x833d00000000	               cmp dword [0x0401045d], 0	     11075	tc-i386.c	FUNCTION_128	IF_9
0x401045d	            0x7579	                           jne 0x40104d8	     11075	tc-i386.c	FUNCTION_128	IF_9
0x401045f	    0xc70500000000	            mov dword [0x04010469], 0xc 	     11077	tc-i386.c	FUNCTION_128	SWITCH_1
0x4010469	    0x488b05000000	            mov rax, qword [0x04010470] 	     11078	tc-i386.c	FUNCTION_128	SWITCH_1
0x4010470	    0x488b15000000	            mov rdx, qword [0x04010477] 	     11078	tc-i386.c	FUNCTION_128	SWITCH_1
0x4010477	    0x488905000000	            mov qword [0x0401047e], rax 	     11078	tc-i386.c	FUNCTION_128	SWITCH_1
0x401047e	    0x488915000000	            mov qword [0x04010485], rdx 	     11078	tc-i386.c	FUNCTION_128	SWITCH_1
0x4010485	            0xeb51	                           jmp 0x40104d8	     11078	tc-i386.c	FUNCTION_128	SWITCH_1
0x4010487	          0x83f80c	                            cmp eax, 0xc	     11081	tc-i386.c	FUNCTION_128	SWITCH_1
0x401048a	            0x744c	                            je 0x40104d8	     11081	tc-i386.c	FUNCTION_128	SWITCH_1
0x401048c	    0x488b1d000000	            mov rbx, qword [0x04010493] 	     11082	tc-i386.c	FUNCTION_128	SWITCH_1
0x4010493	      0xba05000000	                              mov edx, 5	     11082	tc-i386.c	FUNCTION_128	SWITCH_1
0x4010498	      0xbe00000000	                              mov esi, 0	     11082	tc-i386.c	FUNCTION_128	SWITCH_1
0x401049d	      0xbf00000000	                              mov edi, 0	     11082	tc-i386.c	FUNCTION_128	SWITCH_1
0x40104a2	      0xe800000000	                          call 0x40104a7	     11082	tc-i386.c	FUNCTION_128	SWITCH_1
0x40104a7	          0x4889de	                            mov rsi, rbx	     11082	tc-i386.c	FUNCTION_128	SWITCH_1
0x40104aa	          0x4889c7	                            mov rdi, rax	     11082	tc-i386.c	FUNCTION_128	SWITCH_1
0x40104ad	      0xb800000000	                              mov eax, 0	     11082	tc-i386.c	FUNCTION_128	SWITCH_1
0x40104b2	      0xe800000000	                          call 0x40104b7	     11082	tc-i386.c	FUNCTION_128	SWITCH_1
0x40104b7	      0xba05000000	                              mov edx, 5	     11086	tc-i386.c	FUNCTION_128	SWITCH_1	IF_10
0x40104bc	      0xbe00000000	                              mov esi, 0	     11086	tc-i386.c	FUNCTION_128	SWITCH_1	IF_10
0x40104c1	      0xbf00000000	                              mov edi, 0	     11086	tc-i386.c	FUNCTION_128	SWITCH_1	IF_10
0x40104c6	      0xe800000000	                          call 0x40104cb	     11086	tc-i386.c	FUNCTION_128	SWITCH_1	IF_10
0x40104cb	          0x4889c7	                            mov rdi, rax	     11086	tc-i386.c	FUNCTION_128	SWITCH_1	IF_10
0x40104ce	      0xb800000000	                              mov eax, 0	     11086	tc-i386.c	FUNCTION_128	SWITCH_1	IF_10
0x40104d3	      0xe800000000	                          call 0x40104d8	     11086	tc-i386.c	FUNCTION_128	SWITCH_1	IF_10
0x40104d8	    0x833d00000000	               cmp dword [0x040104df], 0	      1572	tc-i386.c	FUNCTION_10	SWITCH_1	IF_1
0x40104df	            0x7551	                           jne 0x4010532	      1572	tc-i386.c	FUNCTION_10	SWITCH_1	IF_1
0x40104e1	    0x833d00000000	               cmp dword [0x040104e8], 0	      1576	tc-i386.c	FUNCTION_10	SWITCH_1	IF_2
0x40104e8	            0x7548	                           jne 0x4010532	      1576	tc-i386.c	FUNCTION_10	SWITCH_1	IF_2
0x40104ea	    0x833d00000000	               cmp dword [0x040104f1], 0	      1580	tc-i386.c	FUNCTION_10	SWITCH_1	IF_3
0x40104f1	            0x753f	                           jne 0x4010532	      1580	tc-i386.c	FUNCTION_10	SWITCH_1	IF_3
0x40104f3	    0x833d00000000	               cmp dword [0x040104fa], 0	     11088	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40104fa	            0x7536	                           jne 0x4010532	     11088	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x40104fc	    0x833d00000000	               cmp dword [0x04010503], 2	     11089	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x4010503	           0xf94c0	                                 sete al	     11089	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x4010506	           0xfb6c0	                           movzx eax, al	     11089	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x4010509	    0x488d14850000	                        lea rdx, [rax*4]	     11089	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x4010511	          0x4801d0	                            add rax, rdx	     11089	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x4010514	    0x488b14c50000	                  mov rdx, qword [rax*8]	     11089	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x401051c	    0x488b04c50000	                  mov rax, qword [rax*8]	     11089	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x4010524	    0x488905000000	            mov qword [0x0401052b], rax 	     11089	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x401052b	    0x488915000000	            mov qword [0x04010532], rdx 	     11089	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x4010532	    0x833d00000000	               cmp dword [0x04010539], 0	      1572	tc-i386.c	FUNCTION_10	SWITCH_1	IF_1
0x4010539	            0x7551	                           jne 0x401058c	      1572	tc-i386.c	FUNCTION_10	SWITCH_1	IF_1
0x401053b	    0x833d00000000	               cmp dword [0x04010542], 0	      1576	tc-i386.c	FUNCTION_10	SWITCH_1	IF_2
0x4010542	            0x7548	                           jne 0x401058c	      1576	tc-i386.c	FUNCTION_10	SWITCH_1	IF_2
0x4010544	    0x833d00000000	               cmp dword [0x0401054b], 0	      1580	tc-i386.c	FUNCTION_10	SWITCH_1	IF_3
0x401054b	            0x753f	                           jne 0x401058c	      1580	tc-i386.c	FUNCTION_10	SWITCH_1	IF_3
0x401054d	    0x833d00000000	               cmp dword [0x04010554], 0	     11090	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x4010554	            0x7536	                           jne 0x401058c	     11090	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x4010556	    0x833d00000000	               cmp dword [0x0401055d], 2	     11091	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x401055d	           0xf94c0	                                 sete al	     11091	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x4010560	           0xfb6c0	                           movzx eax, al	     11091	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x4010563	    0x488d14850000	                        lea rdx, [rax*4]	     11091	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x401056b	          0x4801d0	                            add rax, rdx	     11091	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x401056e	    0x488b14c50000	                  mov rdx, qword [rax*8]	     11091	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x4010576	    0x488b04c50000	                  mov rax, qword [rax*8]	     11091	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x401057e	    0x488905000000	            mov qword [0x04010585], rax 	     11091	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x4010585	    0x488915000000	            mov qword [0x0401058c], rdx 	     11091	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6
0x401058c	    0x8b0d00000000	            mov ecx, dword [0x04010592] 	     11119	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6	SWITCH_2
0x4010592	          0x83f901	                              cmp ecx, 1	     11119	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6	SWITCH_2
0x4010595	            0x7407	                            je 0x401059e	     11119	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6	SWITCH_2
0x4010597	          0x83f902	                              cmp ecx, 2	     11119	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6	SWITCH_2
0x401059a	            0x742a	                            je 0x40105c6	     11119	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6	SWITCH_2
0x401059c	            0xeb57	                           jmp 0x40105f5	     11119	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_6	SWITCH_2
0x401059e	    0xc70500000000	               mov dword [0x040105a8], 1	     11125	tc-i386.c	FUNCTION_128	SWITCH_1	IF_11
0x40105a8	    0xc70500000000	               mov dword [0x040105b2], 1	     11126	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_7	IF_13
0x40105b2	    0x8b1500000000	            mov edx, dword [0x040105b8] 	     11136	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_8	IF_15
0x40105b8	          0x83fa0a	                            cmp edx, 0xa	     11136	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_8	IF_15
0x40105bb	     0xf85df000000	                           jne 0x40106a0	     11136	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_8	IF_15
0x40105c1	      0xe9be000000	                           jmp 0x4010684	     11136	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_8	IF_15
0x40105c6	    0xc70500000000	               mov dword [0x040105d0], 1	     11130	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_7	IF_13
0x40105d0	    0xc70500000000	               mov dword [0x040105da], 1	     11131	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_7	IF_13
0x40105da	    0xc70500000000	               mov dword [0x040105e4], 1	     11132	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_8	IF_15
0x40105e4	    0x8b1500000000	            mov edx, dword [0x040105ea] 	     11136	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_8	IF_15
0x40105ea	          0x83fa0a	                            cmp edx, 0xa	     11136	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_8	IF_15
0x40105ed	     0xf85be000000	                           jne 0x40106b1	     11136	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_8	IF_15
0x40105f3	            0xeb14	                           jmp 0x4010609	     11136	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_8	IF_15
0x40105f5	    0x8b1500000000	            mov edx, dword [0x040105fb] 	     11136	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_8	IF_15
0x40105fb	          0x83fa0a	                            cmp edx, 0xa	     11136	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_8	IF_15
0x40105fe	            0x752a	                           jne 0x401062a	     11136	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_8	IF_15
0x4010600	          0x83f901	                              cmp ecx, 1	     11138	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x4010603	     0xf8482000000	                            je 0x401068b	     11138	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x4010609	      0xba05000000	                              mov edx, 5	     11139	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x401060e	      0xbe00000000	                              mov esi, 0	     11139	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x4010613	      0xbf00000000	                              mov edi, 0	     11139	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x4010618	      0xe800000000	                          call 0x401061d	     11139	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x401061d	          0x4889c7	                            mov rdi, rax	     11139	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x4010620	      0xb800000000	                              mov eax, 0	     11139	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x4010625	      0xe800000000	                          call 0x401062a	     11139	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x401062a	          0x83fa0b	                            cmp edx, 0xb	     11142	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x401062d	            0x7526	                           jne 0x4010655	     11142	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x401062f	          0x83f901	                              cmp ecx, 1	     11144	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x4010632	            0x745e	                            je 0x4010692	     11144	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x4010634	      0xba05000000	                              mov edx, 5	     11145	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x4010639	      0xbe00000000	                              mov esi, 0	     11145	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x401063e	      0xbf00000000	                              mov edi, 0	     11145	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x4010643	      0xe800000000	                          call 0x4010648	     11145	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x4010648	          0x4889c7	                            mov rdi, rax	     11145	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x401064b	      0xb800000000	                              mov eax, 0	     11145	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x4010650	      0xe800000000	                          call 0x4010655	     11145	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x4010655	      0xb800000000	                              mov eax, 0	     11122	tc-i386.c	FUNCTION_128	SWITCH_1	IF_11	IF_12
0x401065a	          0x83fa0c	                            cmp edx, 0xc	     11148	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x401065d	            0x7562	                           jne 0x40106c1	     11148	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x401065f	            0x85c9	                           test ecx, ecx	     11150	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_10
0x4010661	            0x7436	                            je 0x4010699	     11150	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_10
0x4010663	      0xba05000000	                              mov edx, 5	     11151	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_10
0x4010668	      0xbe00000000	                              mov esi, 0	     11151	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_10
0x401066d	      0xbf00000000	                              mov edi, 0	     11151	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_10
0x4010672	      0xe800000000	                          call 0x4010677	     11151	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_10
0x4010677	          0x4889c7	                            mov rdi, rax	     11151	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_10
0x401067a	      0xb800000000	                              mov eax, 0	     11151	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_10
0x401067f	      0xe800000000	                          call 0x4010684	     11151	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_10
0x4010684	      0xb800000000	                              mov eax, 0	     11140	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x4010689	            0xeb36	                           jmp 0x40106c1	     11140	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x401068b	      0xb800000000	                              mov eax, 0	     11140	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x4010690	            0xeb2f	                           jmp 0x40106c1	     11140	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x4010692	      0xb800000000	                              mov eax, 0	     11146	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x4010697	            0xeb28	                           jmp 0x40106c1	     11146	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x4010699	      0xb800000000	                              mov eax, 0	     11152	tc-i386.c	FUNCTION_128	SWITCH_1
0x401069e	            0xeb21	                           jmp 0x40106c1	     11152	tc-i386.c	FUNCTION_128	SWITCH_1
0x40106a0	      0xb800000000	                              mov eax, 0	     11146	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9	IF_17
0x40106a5	          0x83fa0b	                            cmp edx, 0xb	     11142	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x40106a8	            0x7417	                            je 0x40106c1	     11142	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x40106aa	      0xb800000000	                              mov eax, 0	     11127	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_7	IF_13
0x40106af	            0xeba9	                           jmp 0x401065a	     11127	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_7	IF_13
0x40106b1	          0x83fa0b	                            cmp edx, 0xb	     11142	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x40106b4	     0xf847affffff	                            je 0x4010634	     11142	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_9
0x40106ba	      0xb800000000	                              mov eax, 0	     11133	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_8	IF_15
0x40106bf	            0xeb99	                           jmp 0x401065a	     11133	tc-i386.c	FUNCTION_128	SWITCH_1	ELSE_8	IF_15
0x40106c1	              0x5b	                                 pop rbx	     11173	tc-i386.c	FUNCTION_129	IF_1	IF_2	CALL_5
0x40106c2	              0xc3	                                     ret	     11173	tc-i386.c	FUNCTION_129	IF_1	IF_2	CALL_5
process_immext	functions,0:ELSE,0:FOR,2:CALL,10:SWITCH,0:WHILE,0:IF,6:DO,0	159
0x4001afa	            0x4156	                                push r14	      3670	tc-i386.c	FUNCTION_65
0x4001afc	            0x4155	                                push r13	      3670	tc-i386.c	FUNCTION_65
0x4001afe	            0x4154	                                push r12	      3670	tc-i386.c	FUNCTION_65
0x4001b00	              0x55	                                push rbp	      3670	tc-i386.c	FUNCTION_65
0x4001b01	              0x53	                                push rbx	      3670	tc-i386.c	FUNCTION_65
0x4001b02	    0xf60500000000	           test byte [0x04001b09], 0x28 	      3673	tc-i386.c	FUNCTION_65	IF_1
0x4001b09	     0xf849f000000	                            je 0x4001bae	      3673	tc-i386.c	FUNCTION_65	IF_1
0x4001b0f	    0x833d00000000	               cmp dword [0x04001b16], 0	      3674	tc-i386.c	FUNCTION_65	IF_1
0x4001b16	     0xf8452020000	                            je 0x4001d6e	      3674	tc-i386.c	FUNCTION_65	IF_1
0x4001b1c	      0xbd00000000	                              mov ebp, 0	      3674	tc-i386.c	FUNCTION_65	IF_1
0x4001b21	      0xbb00000000	                              mov ebx, 0	      3674	tc-i386.c	FUNCTION_65	IF_1
0x4001b26	    0x488b8da00000	            mov rcx, qword [rbp + 0xa0] 	      3683	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_1
0x4001b2d	         0xfb64111	           movzx eax, byte [rcx + 0x11] 	      2123	tc-i386.c	FUNCTION_28
0x4001b31	         0xfb65110	           movzx edx, byte [rcx + 0x10] 	      2125	tc-i386.c	FUNCTION_28	IF_1
0x4001b35	            0x89d7	                            mov edi, edx	      2125	tc-i386.c	FUNCTION_28	IF_1
0x4001b37	          0x83e701	                              and edi, 1	      2125	tc-i386.c	FUNCTION_28	IF_1
0x4001b3a	          0x8d7008	                      lea esi, [rax + 8]	      2126	tc-i386.c	FUNCTION_28	IF_1
0x4001b3d	          0x4084ff	                           test dil, dil	      2126	tc-i386.c	FUNCTION_28	IF_1
0x4001b40	           0xf45c6	                         cmovne eax, esi	      2126	tc-i386.c	FUNCTION_28	IF_1
0x4001b43	          0x83e204	                              and edx, 4	      2128	tc-i386.c	FUNCTION_28	IF_2
0x4001b46	          0x8d7010	                   lea esi, [rax + 0x10]	      2129	tc-i386.c	FUNCTION_28	IF_2
0x4001b49	            0x84d2	                             test dl, dl	      2129	tc-i386.c	FUNCTION_28	IF_2
0x4001b4b	           0xf45c6	                         cmovne eax, esi	      2129	tc-i386.c	FUNCTION_28	IF_2
0x4001b4e	            0x39d8	                            cmp eax, ebx	      3683	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_1
0x4001b50	            0x743e	                            je 0x4001b90	      3683	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_1
0x4001b52	    0x4c8b2d000000	            mov r13, qword [0x04001b59] 	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x4001b59	          0x4c8b31	                    mov r14, qword [rcx]	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x4001b5c	    0x4c8b25000000	            mov r12, qword [0x04001b63] 	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x4001b63	      0xba05000000	                              mov edx, 5	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x4001b68	      0xbe00000000	                              mov esi, 0	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x4001b6d	      0xbf00000000	                              mov edi, 0	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x4001b72	      0xe800000000	                          call 0x4001b77	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x4001b77	          0x8d4b01	                      lea ecx, [rbx + 1]	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x4001b7a	          0x4d89e8	                             mov r8, r13	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x4001b7d	          0x4c89f2	                            mov rdx, r14	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x4001b80	          0x4c89e6	                            mov rsi, r12	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x4001b83	          0x4889c7	                            mov rdi, rax	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x4001b86	      0xb800000000	                              mov eax, 0	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x4001b8b	      0xe800000000	                          call 0x4001b90	      3684	tc-i386.c	FUNCTION_65	IF_1	FOR_1	IF_2	CALL_3
0x4001b90	          0x83c301	                              add ebx, 1	      3682	tc-i386.c	FUNCTION_65	IF_1	FOR_1
0x4001b93	        0x4883c508	                              add rbp, 8	      3682	tc-i386.c	FUNCTION_65	IF_1	FOR_1
0x4001b97	    0x391d00000000	            cmp dword [0x04001b9d], ebx 	      3682	tc-i386.c	FUNCTION_65	IF_1	FOR_1
0x4001b9d	            0x7787	                            ja 0x4001b26	      3682	tc-i386.c	FUNCTION_65	IF_1	FOR_1
0x4001b9f	    0xc70500000000	               mov dword [0x04001ba9], 0	      3688	tc-i386.c	FUNCTION_65	IF_1
0x4001ba9	      0xe9c0010000	                           jmp 0x4001d6e	      3688	tc-i386.c	FUNCTION_65	IF_1
0x4001bae	    0xf60500000000	           test byte [0x04001bb5], 0x40 	      3691	tc-i386.c	FUNCTION_65	IF_3
0x4001bb5	     0xf84ff000000	                            je 0x4001cba	      3691	tc-i386.c	FUNCTION_65	IF_3
0x4001bbb	    0x8b0500000000	            mov eax, dword [0x04001bc1] 	      3691	tc-i386.c	FUNCTION_65	IF_3
0x4001bc1	            0x85c0	                           test eax, eax	      3691	tc-i386.c	FUNCTION_65	IF_3
0x4001bc3	     0xf848f010000	                            je 0x4001d58	      3691	tc-i386.c	FUNCTION_65	IF_3
0x4001bc9	          0x83f803	                              cmp eax, 3	      3699	tc-i386.c	FUNCTION_65	IF_3	IF_4
0x4001bcc	            0x7414	                            je 0x4001be2	      3699	tc-i386.c	FUNCTION_65	IF_3	IF_4
0x4001bce	      0xba00000000	                              mov edx, 0	      3700	tc-i386.c	FUNCTION_65	IF_3	CALL_4
0x4001bd3	      0xbe740e0000	                          mov esi, 0xe74	      3700	tc-i386.c	FUNCTION_65	IF_3	CALL_4
0x4001bd8	      0xbf00000000	                              mov edi, 0	      3700	tc-i386.c	FUNCTION_65	IF_3	CALL_4
0x4001bdd	      0xe800000000	                          call 0x4001be2	      3700	tc-i386.c	FUNCTION_65	IF_3	CALL_4
0x4001be2	      0xb900000000	                              mov ecx, 0	      3700	tc-i386.c	FUNCTION_65	IF_3	CALL_4
0x4001be7	      0xbb00000000	                              mov ebx, 0	      3699	tc-i386.c	FUNCTION_65	IF_3	IF_4
0x4001bec	    0x488b91a00000	            mov rdx, qword [rcx + 0xa0] 	      3703	tc-i386.c	FUNCTION_65	IF_3	FOR_2	IF_5	CALL_5
0x4001bf3	         0xfb64211	           movzx eax, byte [rdx + 0x11] 	      2123	tc-i386.c	FUNCTION_28
0x4001bf7	         0xfb65210	           movzx edx, byte [rdx + 0x10] 	      2125	tc-i386.c	FUNCTION_28	IF_1
0x4001bfb	            0x89d7	                            mov edi, edx	      2125	tc-i386.c	FUNCTION_28	IF_1
0x4001bfd	          0x83e701	                              and edi, 1	      2125	tc-i386.c	FUNCTION_28	IF_1
0x4001c00	          0x8d7008	                      lea esi, [rax + 8]	      2126	tc-i386.c	FUNCTION_28	IF_1
0x4001c03	          0x4084ff	                           test dil, dil	      2126	tc-i386.c	FUNCTION_28	IF_1
0x4001c06	           0xf45c6	                         cmovne eax, esi	      2126	tc-i386.c	FUNCTION_28	IF_1
0x4001c09	          0x83e204	                              and edx, 4	      2128	tc-i386.c	FUNCTION_28	IF_2
0x4001c0c	          0x8d7010	                   lea esi, [rax + 0x10]	      2129	tc-i386.c	FUNCTION_28	IF_2
0x4001c0f	            0x84d2	                             test dl, dl	      2129	tc-i386.c	FUNCTION_28	IF_2
0x4001c11	           0xf45c6	                         cmovne eax, esi	      2129	tc-i386.c	FUNCTION_28	IF_2
0x4001c14	            0x39d8	                            cmp eax, ebx	      3703	tc-i386.c	FUNCTION_65	IF_3	FOR_2	IF_5	CALL_5
0x4001c16	            0x754b	                           jne 0x4001c63	      3703	tc-i386.c	FUNCTION_65	IF_3	FOR_2	IF_5	CALL_5
0x4001c18	          0x83c301	                              add ebx, 1	      3702	tc-i386.c	FUNCTION_65	IF_3	FOR_2
0x4001c1b	        0x4883c108	                              add rcx, 8	      3702	tc-i386.c	FUNCTION_65	IF_3	FOR_2
0x4001c1f	          0x83fb02	                              cmp ebx, 2	      3702	tc-i386.c	FUNCTION_65	IF_3	FOR_2
0x4001c22	            0x75c8	                           jne 0x4001bec	      3702	tc-i386.c	FUNCTION_65	IF_3	FOR_2
0x4001c24	    0x488b15000000	            mov rdx, qword [0x04001c2b] 	      3707	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_6
0x4001c2b	         0xfb64211	           movzx eax, byte [rdx + 0x11] 	      2123	tc-i386.c	FUNCTION_28
0x4001c2f	         0xfb65210	           movzx edx, byte [rdx + 0x10] 	      2125	tc-i386.c	FUNCTION_28	IF_1
0x4001c33	            0x89d6	                            mov esi, edx	      2125	tc-i386.c	FUNCTION_28	IF_1
0x4001c35	          0x83e601	                              and esi, 1	      2125	tc-i386.c	FUNCTION_28	IF_1
0x4001c38	          0x8d4808	                      lea ecx, [rax + 8]	      2126	tc-i386.c	FUNCTION_28	IF_1
0x4001c3b	          0x4084f6	                           test sil, sil	      2126	tc-i386.c	FUNCTION_28	IF_1
0x4001c3e	           0xf45c1	                         cmovne eax, ecx	      2126	tc-i386.c	FUNCTION_28	IF_1
0x4001c41	          0x83e204	                              and edx, 4	      2128	tc-i386.c	FUNCTION_28	IF_2
0x4001c44	          0x8d4810	                   lea ecx, [rax + 0x10]	      2129	tc-i386.c	FUNCTION_28	IF_2
0x4001c47	            0x84d2	                             test dl, dl	      2129	tc-i386.c	FUNCTION_28	IF_2
0x4001c49	           0xf45c1	                         cmovne eax, ecx	      2129	tc-i386.c	FUNCTION_28	IF_2
0x4001c4c	    0x813d00000000	           cmp dword [0x04001c56], 0xfb 	      3707	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_6
0x4001c56	           0xf94c2	                                 sete dl	      3707	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_6
0x4001c59	           0xfb6d2	                           movzx edx, dl	      3707	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_6
0x4001c5c	          0x83c202	                              add edx, 2	      3707	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_6
0x4001c5f	            0x39c2	                            cmp edx, eax	      3707	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_6
0x4001c61	            0x7448	                            je 0x4001cab	      3707	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_6
0x4001c63	    0x4c8b2d000000	            mov r13, qword [0x04001c6a] 	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4001c6a	            0x89d8	                            mov eax, ebx	      3712	tc-i386.c	FUNCTION_65	IF_3	IF_6
0x4001c6c	    0x488b04c50000	                  mov rax, qword [rax*8]	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4001c74	          0x4c8b20	                    mov r12, qword [rax]	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4001c77	    0x488b2d000000	            mov rbp, qword [0x04001c7e] 	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4001c7e	      0xba05000000	                              mov edx, 5	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4001c83	      0xbe00000000	                              mov esi, 0	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4001c88	      0xbf00000000	                              mov edi, 0	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4001c8d	      0xe800000000	                          call 0x4001c92	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4001c92	          0x8d4b01	                      lea ecx, [rbx + 1]	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4001c95	          0x4d89e8	                             mov r8, r13	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4001c98	          0x4c89e2	                            mov rdx, r12	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4001c9b	          0x4889ee	                            mov rsi, rbp	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4001c9e	          0x4889c7	                            mov rdi, rax	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4001ca1	      0xb800000000	                              mov eax, 0	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4001ca6	      0xe800000000	                          call 0x4001cab	      3711	tc-i386.c	FUNCTION_65	IF_3	IF_6	CALL_8
0x4001cab	    0xc70500000000	               mov dword [0x04001cb5], 0	      3716	tc-i386.c	FUNCTION_65	IF_3
0x4001cb5	      0xe99e000000	                           jmp 0x4001d58	      3716	tc-i386.c	FUNCTION_65	IF_3
0x4001cba	    0x8b0500000000	            mov eax, dword [0x04001cc0] 	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4001cc0	          0x83f801	                              cmp eax, 1	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4001cc3	            0x7725	                            ja 0x4001cea	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4001cc5	    0x8b0d00000000	            mov ecx, dword [0x04001ccb] 	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4001ccb	          0x83f902	                              cmp ecx, 2	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4001cce	            0x762e	                           jbe 0x4001cfe	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4001cd0	    0xf70500000000	       test dword [0x04001cda], 0x38600 	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4001cda	            0x7509	                           jne 0x4001ce5	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4001cdc	    0x803d00000000	                cmp byte [0x04001ce3], 0	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4001ce3	            0x7405	                            je 0x4001cea	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4001ce5	          0x83f904	                              cmp ecx, 4	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4001ce8	            0x7614	                           jbe 0x4001cfe	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4001cea	      0xba00000000	                              mov edx, 0	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4001cef	      0xbe940e0000	                          mov esi, 0xe94	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4001cf4	      0xbf00000000	                              mov edi, 0	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4001cf9	      0xe800000000	                          call 0x4001cfe	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4001cfe	          0x8d5001	                      lea edx, [rax + 1]	      3734	tc-i386.c	FUNCTION_65
0x4001d01	    0x891500000000	            mov dword [0x04001d07], edx 	      3734	tc-i386.c	FUNCTION_65
0x4001d07	            0x89ca	                            mov edx, ecx	      3735	tc-i386.c	FUNCTION_65
0x4001d09	            0x89c0	                            mov eax, eax	      3734	tc-i386.c	FUNCTION_65
0x4001d0b	        0x48c1e005	                              shl rax, 5	      3734	tc-i386.c	FUNCTION_65
0x4001d0f	    0x480500000000	                              add rax, 0	      3734	tc-i386.c	FUNCTION_65
0x4001d15	    0x488904d50000	                  mov qword [rdx*8], rax	      3734	tc-i386.c	FUNCTION_65
0x4001d1d	        0x4883c20e	                            add rdx, 0xe	      3736	tc-i386.c	FUNCTION_65
0x4001d21	    0x48c704d50000	                    mov qword [rdx*8], 0	      3736	tc-i386.c	FUNCTION_65
0x4001d2d	    0x800cd5000000	                      or byte [rdx*8], 4	      3736	tc-i386.c	FUNCTION_65
0x4001d35	          0x83c101	                              add ecx, 1	      3737	tc-i386.c	FUNCTION_65
0x4001d38	    0x890d00000000	            mov dword [0x04001d3e], ecx 	      3737	tc-i386.c	FUNCTION_65
0x4001d3e	        0xc6401802	                mov byte [rax + 0x18], 2	      3738	tc-i386.c	FUNCTION_65
0x4001d42	    0x8b1d00000000	            mov ebx, dword [0x04001d48] 	      3739	tc-i386.c	FUNCTION_65
0x4001d48	        0x48895810	             mov qword [rax + 0x10], rbx	      3739	tc-i386.c	FUNCTION_65
0x4001d4c	    0xc70500000000	         mov dword [0x04001d56], 0xffff 	      3740	tc-i386.c	FUNCTION_65
0x4001d56	            0xeb24	                           jmp 0x4001d7c	      3741	tc-i386.c	FUNCTION_65
0x4001d58	    0x8b0500000000	            mov eax, dword [0x04001d5e] 	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4001d5e	    0x8b0d00000000	            mov ecx, dword [0x04001d64] 	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4001d64	          0x83f801	                              cmp eax, 1	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4001d67	            0x7695	                           jbe 0x4001cfe	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4001d69	      0xe97cffffff	                           jmp 0x4001cea	      3727	tc-i386.c	FUNCTION_65	CALL_9
0x4001d6e	    0xf60500000000	           test byte [0x04001d75], 0x40 	      3691	tc-i386.c	FUNCTION_65	IF_3
0x4001d75	            0x75e1	                           jne 0x4001d58	      3691	tc-i386.c	FUNCTION_65	IF_3
0x4001d77	      0xe93effffff	                           jmp 0x4001cba	      3691	tc-i386.c	FUNCTION_65	IF_3
0x4001d7c	              0x5b	                                 pop rbx	      3741	tc-i386.c	FUNCTION_65
0x4001d7d	              0x5d	                                 pop rbp	      3741	tc-i386.c	FUNCTION_65
0x4001d7e	            0x415c	                                 pop r12	      3741	tc-i386.c	FUNCTION_65
0x4001d80	            0x415d	                                 pop r13	      3741	tc-i386.c	FUNCTION_65
0x4001d82	            0x415e	                                 pop r14	      3741	tc-i386.c	FUNCTION_65
0x4001d84	              0xc3	                                     ret	      3741	tc-i386.c	FUNCTION_65
maybe_adjust_templates	functions,0:ELSE,0:FOR,2:CALL,2:SWITCH,0:WHILE,0:IF,5:DO,0	55
0x4003575	        0x4883ec08	                              sub rsp, 8	      9297	tc-i386.c	FUNCTION_111
0x4003579	    0x833d00000000	               cmp dword [0x04003580], 1	      9300	tc-i386.c	FUNCTION_111	CALL_1
0x4003580	            0x7414	                            je 0x4003596	      9300	tc-i386.c	FUNCTION_111	CALL_1
0x4003582	      0xba00000000	                              mov edx, 0	      9300	tc-i386.c	FUNCTION_111	CALL_1
0x4003587	      0xbe54240000	                         mov esi, 0x2454	      9300	tc-i386.c	FUNCTION_111	CALL_1
0x400358c	      0xbf00000000	                              mov edi, 0	      9300	tc-i386.c	FUNCTION_111	CALL_1
0x4003591	      0xe800000000	                          call 0x4003596	      9300	tc-i386.c	FUNCTION_111	CALL_1
0x4003596	    0x488b35000000	            mov rsi, qword [0x0400359d] 	      9302	tc-i386.c	FUNCTION_111	FOR_1
0x400359d	          0x488b06	                    mov rax, qword [rsi]	      9302	tc-i386.c	FUNCTION_111	FOR_1
0x40035a0	        0x488b4e08	                mov rcx, qword [rsi + 8]	      9302	tc-i386.c	FUNCTION_111	FOR_1
0x40035a4	          0x4839c8	                            cmp rax, rcx	      9302	tc-i386.c	FUNCTION_111	FOR_1
0x40035a7	     0xf8387000000	                           jae 0x4003634	      9302	tc-i386.c	FUNCTION_111	FOR_1
0x40035ad	        0xf6402b01	               test byte [rax + 0x2b], 1	      9303	tc-i386.c	FUNCTION_111	FOR_1	IF_1
0x40035b1	            0x740f	                            je 0x40035c2	      9303	tc-i386.c	FUNCTION_111	FOR_1	IF_1
0x40035b3	      0xe997000000	                           jmp 0x400364f	      9303	tc-i386.c	FUNCTION_111	FOR_1	IF_1
0x40035b8	        0xf6402b01	               test byte [rax + 0x2b], 1	      9303	tc-i386.c	FUNCTION_111	FOR_1	IF_1
0x40035bc	     0xf858d000000	                           jne 0x400364f	      9303	tc-i386.c	FUNCTION_111	FOR_1	IF_1
0x40035c2	        0x4883c060	                           add rax, 0x60	      9302	tc-i386.c	FUNCTION_111	FOR_1
0x40035c6	          0x4839c8	                            cmp rax, rcx	      9302	tc-i386.c	FUNCTION_111	FOR_1
0x40035c9	            0x72ed	                            jb 0x40035b8	      9302	tc-i386.c	FUNCTION_111	FOR_1
0x40035cb	      0xb801000000	                              mov eax, 1	      9333	tc-i386.c	FUNCTION_111
0x40035d0	      0xe986000000	                           jmp 0x400365b	      9333	tc-i386.c	FUNCTION_111
0x40035d5	        0xf6422b01	               test byte [rdx + 0x2b], 1	      9313	tc-i386.c	FUNCTION_111	IF_2	FOR_2	IF_3
0x40035d9	            0x7409	                            je 0x40035e4	      9313	tc-i386.c	FUNCTION_111	IF_2	FOR_2	IF_3
0x40035db	        0x4883c260	                           add rdx, 0x60	      9312	tc-i386.c	FUNCTION_111	IF_2	FOR_2
0x40035df	          0x4839ca	                            cmp rdx, rcx	      9312	tc-i386.c	FUNCTION_111	IF_2	FOR_2
0x40035e2	            0x72f1	                            jb 0x40035d5	      9312	tc-i386.c	FUNCTION_111	IF_2	FOR_2
0x40035e4	    0x488915000000	            mov qword [0x040035eb], rdx 	      9315	tc-i386.c	FUNCTION_111	IF_2
0x40035eb	          0x483906	                    cmp qword [rsi], rax	      9319	tc-i386.c	FUNCTION_111	IF_2
0x40035ee	            0x7552	                           jne 0x4003642	      9319	tc-i386.c	FUNCTION_111	IF_2
0x40035f0	        0x488b4608	                mov rax, qword [rsi + 8]	      9319	tc-i386.c	FUNCTION_111	IF_2
0x40035f4	    0x48c705000000	               mov qword [0x040035ff], 0	      9321	tc-i386.c	FUNCTION_111	IF_2
0x40035ff	          0x4839c2	                            cmp rdx, rax	      9323	tc-i386.c	FUNCTION_111	IF_2	IF_4
0x4003602	            0x7437	                            je 0x400363b	      9323	tc-i386.c	FUNCTION_111	IF_2	IF_4
0x4003604	    0xc70500000000	               mov dword [0x0400360e], 0	      9325	tc-i386.c	FUNCTION_111	IF_2	IF_4
0x400360e	    0x488b3d000000	            mov rdi, qword [0x04003615] 	      9326	tc-i386.c	FUNCTION_111	IF_2	IF_4	IF_5
0x4003615	          0x4885ff	                           test rdi, rdi	      9326	tc-i386.c	FUNCTION_111	IF_2	IF_4	IF_5
0x4003618	            0x7409	                            je 0x4003623	      9326	tc-i386.c	FUNCTION_111	IF_2	IF_4	IF_5
0x400361a	      0xe8e3faffff	               call sym.i386_index_check	      9327	tc-i386.c	FUNCTION_111	IF_2	IF_4	IF_5	CALL_2
0x400361f	            0x85c0	                           test eax, eax	      9327	tc-i386.c	FUNCTION_111	IF_2	IF_4	IF_5	CALL_2
0x4003621	            0x7438	                            je 0x400365b	      9327	tc-i386.c	FUNCTION_111	IF_2	IF_4	IF_5	CALL_2
0x4003623	    0xc70500000000	               mov dword [0x0400362d], 1	      9329	tc-i386.c	FUNCTION_111	IF_2	IF_4
0x400362d	      0xb801000000	                              mov eax, 1	      9333	tc-i386.c	FUNCTION_111
0x4003632	            0xeb27	                           jmp 0x400365b	      9333	tc-i386.c	FUNCTION_111
0x4003634	      0xb801000000	                              mov eax, 1	      9333	tc-i386.c	FUNCTION_111
0x4003639	            0xeb20	                           jmp 0x400365b	      9333	tc-i386.c	FUNCTION_111
0x400363b	      0xb801000000	                              mov eax, 1	      9333	tc-i386.c	FUNCTION_111
0x4003640	            0xeb19	                           jmp 0x400365b	      9333	tc-i386.c	FUNCTION_111
0x4003642	    0x48c705000000	               mov qword [0x0400364d], 0	      9321	tc-i386.c	FUNCTION_111	IF_2
0x400364d	            0xebb5	                           jmp 0x4003604	      9321	tc-i386.c	FUNCTION_111	IF_2
0x400364f	    0x488905000000	            mov qword [0x04003656], rax 	      9311	tc-i386.c	FUNCTION_111	IF_2
0x4003656	          0x4889c2	                            mov rdx, rax	      9311	tc-i386.c	FUNCTION_111	IF_2
0x4003659	            0xeb80	                           jmp 0x40035db	      9311	tc-i386.c	FUNCTION_111	IF_2
0x400365b	        0x4883c408	                              add rsp, 8	      9334	tc-i386.c	FUNCTION_111
0x400365f	              0xc3	                                     ret	      9334	tc-i386.c	FUNCTION_111
imm_size	functions,0:ELSE,2:FOR,0:CALL,0:SWITCH,0:WHILE,0:IF,3:DO,0	18
0x4000b6c	            0x89fa	                            mov edx, edi	      7836	tc-i386.c	FUNCTION_94	IF_1
0x4000b6e	      0xb808000000	                              mov eax, 8	      7837	tc-i386.c	FUNCTION_94	IF_1
0x4000b73	    0x803cd5000000	                     cmp byte [rdx*8], 0	      7836	tc-i386.c	FUNCTION_94	IF_1
0x4000b7b	            0x7833	                            js 0x4000bb0	      7836	tc-i386.c	FUNCTION_94	IF_1
0x4000b7d	      0xb801000000	                              mov eax, 1	      7839	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x4000b82	    0xf604d5000000	                    test byte [rdx*8], 4	      7838	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x4000b8a	            0x7524	                           jne 0x4000bb0	      7838	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x4000b8c	    0xf604d5000000	                    test byte [rdx*8], 8	      7838	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x4000b94	            0x751a	                           jne 0x4000bb0	      7838	tc-i386.c	FUNCTION_94	ELSE_1	IF_2
0x4000b96	            0x89ff	                            mov edi, edi	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4000b98	     0xfb604fd0000	                 movzx eax, byte [rdi*8]	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4000ba0	          0xc0e804	                               shr al, 4	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4000ba3	          0x83e001	                              and eax, 1	      7840	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4000ba6	            0x3c01	                               cmp al, 1	      7841	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4000ba8	            0x19c0	                            sbb eax, eax	      7841	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4000baa	          0x83e002	                              and eax, 2	      7841	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4000bad	          0x83c002	                              add eax, 2	      7841	tc-i386.c	FUNCTION_94	ELSE_2	IF_3
0x4000bb0	            0xf3c3	                                     ret	      7843	tc-i386.c	FUNCTION_94
tc_x86_parse_to_dw2regnum	functions,0:ELSE,1:FOR,0:CALL,1:SWITCH,0:WHILE,0:IF,2:DO,0	37
0x4010fdc	            0x4154	                                push r12	     11513	tc-i386.c	FUNCTION_135	IF_1	IF_2
0x4010fde	              0x55	                                push rbp	     11513	tc-i386.c	FUNCTION_135	IF_1	IF_2
0x4010fdf	              0x53	                                push rbx	     11513	tc-i386.c	FUNCTION_135	IF_1	IF_2
0x4010fe0	          0x4889fb	                            mov rbx, rdi	     11513	tc-i386.c	FUNCTION_135	IF_1	IF_2
0x4010fe3	    0x8b2d00000000	            mov ebp, dword [0x04010fe9] 	     11517	tc-i386.c	FUNCTION_135	IF_1	IF_2
0x4010fe9	    0xc70500000000	               mov dword [0x04010ff3], 1	     11518	tc-i386.c	FUNCTION_135	IF_1	IF_2
0x4010ff3	    0x440fb6250000	          movzx r12d, byte [0x04010ffb] 	     11519	tc-i386.c	FUNCTION_135	IF_1	ELSE_1
0x4010ffb	    0xc60500000000	            mov byte [0x04011002], 0x2e 	     11520	tc-i386.c	FUNCTION_135	IF_1	ELSE_1
0x4011002	    0xc70500000000	               mov dword [0x0401100c], 1	     11521	tc-i386.c	FUNCTION_135	IF_1	ELSE_1
0x401100c	      0xba00000000	                              mov edx, 0	     11522	tc-i386.c	FUNCTION_135	ELSE_1
0x4011011	          0x4889fe	                            mov rsi, rdi	     11522	tc-i386.c	FUNCTION_135	ELSE_1
0x4011014	      0xbf00000000	                              mov edi, 0	     11522	tc-i386.c	FUNCTION_135	ELSE_1
0x4011019	      0xe800000000	                          call 0x401101e	     11522	tc-i386.c	FUNCTION_135	ELSE_1
0x401101e	    0xc70500000000	               mov dword [0x04011028], 0	     11523	tc-i386.c	ELSE_1
0x4011028	    0x448825000000	            mov byte [0x0401102f], r12b 	     11524	tc-i386.c	ELSE_1
0x401102f	    0x892d00000000	            mov dword [0x04011035], ebp 	     11525	tc-i386.c	ELSE_1
0x4011035	        0x807b1805	                cmp byte [rbx + 0x18], 5	     11527	tc-i386.c	ELSE_1	FUNCTION_136
0x4011039	            0x7539	                           jne 0x4011074	     11527	tc-i386.c	ELSE_1	FUNCTION_136
0x401103b	        0x488b4310	            mov rax, qword [rbx + 0x10] 	     11527	tc-i386.c	ELSE_1	FUNCTION_136
0x401103f	          0x4885c0	                           test rax, rax	     11527	tc-i386.c	ELSE_1	FUNCTION_136
0x4011042	            0x7830	                            js 0x4011074	     11527	tc-i386.c	ELSE_1	FUNCTION_136
0x4011044	    0x8b1500000000	            mov edx, dword [0x0401104a] 	     11529	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x401104a	          0x4839d0	                            cmp rax, rdx	     11529	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x401104d	            0x7321	                           jae 0x4011070	     11529	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x401104f	        0xc6431802	                mov byte [rbx + 0x18], 2	     11531	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x4011053	    0x8b1500000000	            mov edx, dword [0x04011059] 	     11533	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x4011059	            0xd1ea	                              shr edx, 1	     11533	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x401105b	            0x89d2	                            mov edx, edx	     11533	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x401105d	        0x488d0440	                  lea rax, [rax + rax*2]	     11533	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x4011061	    0x480fbe84c200	           movsx rax, byte [rdx + rax*8]	     11532	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x401106a	        0x48894310	             mov qword [rbx + 0x10], rax	     11532	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x401106e	            0xeb04	                           jmp 0x4011074	     11532	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x4011070	        0xc6431800	                mov byte [rbx + 0x18], 0	     11536	tc-i386.c	ELSE_1	FUNCTION_136	IF_1	CALL_1
0x4011074	              0x5b	                                 pop rbx	     11538	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x4011075	              0x5d	                                 pop rbp	     11538	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x4011076	            0x415c	                                 pop r12	     11538	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
0x4011078	              0xc3	                                     ret	     11538	tc-i386.c	ELSE_1	FUNCTION_136	IF_1
tc_x86_frame_initial_instructions	functions,0:ELSE,0:FOR,0:CALL,4:SWITCH,0:WHILE,0:IF,1:DO,0	48
0x4011079	              0x53	                                push rbx	     11542	tc-i386.c	ELSE_1	FUNCTION_136	CALL_3
0x401107a	        0x4883ec30	                           sub rsp, 0x30	     11542	tc-i386.c	ELSE_1	FUNCTION_136	CALL_3
0x401107e	    0x64488b042528	                mov rax, qword fs:[0x28]	     11542	tc-i386.c	ELSE_1	FUNCTION_136	CALL_3
0x4011087	      0x4889442428	             mov qword [rsp + 0x28], rax	     11542	tc-i386.c	ELSE_1	FUNCTION_136	CALL_3
0x401108c	            0x31c0	                            xor eax, eax	     11542	tc-i386.c	ELSE_1	FUNCTION_136	CALL_3
0x401108e	    0x8b0500000000	            mov eax, dword [0x04011094] 	     11545	tc-i386.c	
0x4011094	            0xd1e8	                              shr eax, 1	     11545	tc-i386.c	
0x4011096	            0x89c2	                            mov edx, eax	     11545	tc-i386.c	
0x4011098	    0x833c95000000	                    cmp dword [rdx*4], 0	     11545	tc-i386.c	
0x40110a0	            0x7565	                           jne 0x4011107	     11545	tc-i386.c	
0x40110a2	    0x488b1d000000	            mov rbx, qword [0x040110a9] 	     11547	tc-i386.c	
0x40110a9	    0xc74424206573	       mov dword [rsp + 0x20], 0x707365 	     11548	tc-i386.c	FUNCTION_137
0x40110b1	    0xc74424247273	       mov dword [rsp + 0x24], 0x707372 	     11548	tc-i386.c	FUNCTION_137
0x40110b9	            0x89c0	                            mov eax, eax	     11551	tc-i386.c	FUNCTION_137	IF_1
0x40110bb	      0x488d448420	          lea rax, [rsp + rax*4 + 0x20] 	     11551	tc-i386.c	FUNCTION_137	IF_1
0x40110c0	    0x488905000000	            mov qword [0x040110c7], rax 	     11551	tc-i386.c	FUNCTION_137	IF_1
0x40110c7	          0x4889e7	                            mov rdi, rsp	     11552	tc-i386.c	FUNCTION_137
0x40110ca	      0xe800000000	                          call 0x40110cf	     11552	tc-i386.c	FUNCTION_137
0x40110cf	      0x807c241802	                cmp byte [rsp + 0x18], 2	     11553	tc-i386.c	FUNCTION_137	CALL_1
0x40110d4	            0x7414	                            je 0x40110ea	     11553	tc-i386.c	FUNCTION_137	CALL_1
0x40110d6	      0xba00000000	                              mov edx, 0	     11553	tc-i386.c	FUNCTION_137	CALL_1
0x40110db	      0xbe212d0000	                         mov esi, 0x2d21	     11553	tc-i386.c	FUNCTION_137	CALL_1
0x40110e0	      0xbf00000000	                              mov edi, 0	     11553	tc-i386.c	FUNCTION_137	CALL_1
0x40110e5	      0xe800000000	                          call 0x40110ea	     11553	tc-i386.c	FUNCTION_137	CALL_1
0x40110ea	    0x8b0500000000	            mov eax, dword [0x040110f0] 	     11554	tc-i386.c	FUNCTION_137
0x40110f0	            0xd1e8	                              shr eax, 1	     11554	tc-i386.c	FUNCTION_137
0x40110f2	            0x89c0	                            mov eax, eax	     11554	tc-i386.c	FUNCTION_137
0x40110f4	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	     11554	tc-i386.c	FUNCTION_137
0x40110f9	    0x891485000000	                  mov dword [rax*4], edx	     11554	tc-i386.c	FUNCTION_137
0x4011100	    0x48891d000000	            mov qword [0x04011107], rbx 	     11555	tc-i386.c	
0x4011107	    0x8b3500000000	            mov esi, dword [0x0401110d] 	     11558	tc-i386.c	FUNCTION_138
0x401110d	            0xf7de	                                 neg esi	     11558	tc-i386.c	FUNCTION_138
0x401110f	          0x4863f6	                         movsxd rsi, esi	     11558	tc-i386.c	FUNCTION_138
0x4011112	    0x8b0500000000	            mov eax, dword [0x04011118] 	     11558	tc-i386.c	FUNCTION_138
0x4011118	            0xd1e8	                              shr eax, 1	     11558	tc-i386.c	FUNCTION_138
0x401111a	            0x89c0	                            mov eax, eax	     11558	tc-i386.c	FUNCTION_138
0x401111c	    0x8b3c85000000	                  mov edi, dword [rax*4]	     11558	tc-i386.c	FUNCTION_138
0x4011123	      0xe800000000	                          call 0x4011128	     11558	tc-i386.c	FUNCTION_138
0x4011128	    0x486335000000	         movsxd rsi, dword [0x0401112f] 	     11559	tc-i386.c	FUNCTION_138	IF_1
0x401112f	    0x8b3d00000000	            mov edi, dword [0x04011135] 	     11559	tc-i386.c	FUNCTION_138	IF_1
0x4011135	      0xe800000000	                          call 0x401113a	     11559	tc-i386.c	FUNCTION_138	IF_1
0x401113a	      0x488b442428	            mov rax, qword [rsp + 0x28] 	     11560	tc-i386.c	FUNCTION_138	IF_1
0x401113f	    0x644833042528	                xor rax, qword fs:[0x28]	     11560	tc-i386.c	FUNCTION_138	IF_1
0x4011148	            0x7405	                            je 0x401114f	     11560	tc-i386.c	FUNCTION_138	IF_1
0x401114a	      0xe800000000	                          call 0x401114f	     11560	tc-i386.c	FUNCTION_138	IF_1
0x401114f	        0x4883c430	                           add rsp, 0x30	     11560	tc-i386.c	FUNCTION_138	IF_1
0x4011153	              0x5b	                                 pop rbx	     11560	tc-i386.c	FUNCTION_138	IF_1
0x4011154	              0xc3	                                     ret	     11560	tc-i386.c	FUNCTION_138	IF_1
i386_generate_nops	functions,0:ELSE,9:FOR,0:CALL,9:SWITCH,3:WHILE,0:IF,13:DO,0	237
0x400b0b6	            0x4157	                                push r15	      1301	tc-i386.c	FUNCTION_6
0x400b0b8	            0x4156	                                push r14	      1301	tc-i386.c	FUNCTION_6
0x400b0ba	            0x4155	                                push r13	      1301	tc-i386.c	FUNCTION_6
0x400b0bc	            0x4154	                                push r12	      1301	tc-i386.c	FUNCTION_6
0x400b0be	              0x55	                                push rbp	      1301	tc-i386.c	FUNCTION_6
0x400b0bf	              0x53	                                push rbx	      1301	tc-i386.c	FUNCTION_6
0x400b0c0	        0x4883ec18	                           sub rsp, 0x18	      1301	tc-i386.c	FUNCTION_6
0x400b0c4	          0x4989fe	                            mov r14, rdi	      1301	tc-i386.c	FUNCTION_6
0x400b0c7	          0x4989f5	                            mov r13, rsi	      1301	tc-i386.c	FUNCTION_6
0x400b0ca	          0x4889d5	                            mov rbp, rdx	      1301	tc-i386.c	FUNCTION_6
0x400b0cd	          0x4189cc	                           mov r12d, ecx	      1301	tc-i386.c	FUNCTION_6
0x400b0d0	          0x8b475c	            mov eax, dword [rdi + 0x5c] 	      1307	tc-i386.c	FUNCTION_6	SWITCH_1
0x400b0d3	          0x83f803	                              cmp eax, 3	      1307	tc-i386.c	FUNCTION_6	SWITCH_1
0x400b0d6	            0x7409	                            je 0x400b0e1	      1307	tc-i386.c	FUNCTION_6	SWITCH_1
0x400b0d8	          0x83f80a	                            cmp eax, 0xa	      1307	tc-i386.c	FUNCTION_6	SWITCH_1
0x400b0db	     0xf8534030000	                           jne 0x400b415	      1307	tc-i386.c	FUNCTION_6	SWITCH_1
0x400b0e1	    0x8b3500000000	            mov esi, dword [0x0400b0e7] 	      1330	tc-i386.c	FUNCTION_6	IF_1
0x400b0e7	          0x83fe01	                              cmp esi, 1	      1330	tc-i386.c	FUNCTION_6	IF_1
0x400b0ea	     0xf8419010000	                            je 0x400b209	      1330	tc-i386.c	FUNCTION_6	IF_1
0x400b0f0	      0x41837e6400	               cmp dword [r14 + 0x64], 0	      1339	tc-i386.c	FUNCTION_6	ELSE_1	IF_2
0x400b0f5	            0x7567	                           jne 0x400b15e	      1339	tc-i386.c	FUNCTION_6	ELSE_1	IF_2
0x400b0f7	    0x833d00000000	           cmp dword [0x0400b0fe], 0x15 	      1342	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2
0x400b0fe	            0x770d	                            ja 0x400b10d	      1342	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2
0x400b100	    0x8b1500000000	            mov edx, dword [0x0400b106] 	      1342	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2
0x400b106	    0xff24d5000000	                       jmp qword [rdx*8]	      1342	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2
0x400b10d	      0xb907000000	                              mov ecx, 7	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b112	      0xbb0b000000	                            mov ebx, 0xb	      1435	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b117	    0x48c704240000	                      mov qword [rsp], 0	      1342	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2
0x400b11f	      0xe91f010000	                           jmp 0x400b243	      1342	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2
0x400b124	      0x410fb65668	           movzx edx, byte [r14 + 0x68] 	      1347	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2	IF_3
0x400b129	    0x81e280000000	                           and edx, 0x80	      1347	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2	IF_3
0x400b12f	          0x80fa01	                               cmp dl, 1	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b132	            0x19c9	                            sbb ecx, ecx	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b134	          0x83e1fb	                     and ecx, 0xfffffffb	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b137	          0x83c107	                              add ecx, 7	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b13a	          0x80fa01	                               cmp dl, 1	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b13d	            0x19db	                            sbb ebx, ebx	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b13f	          0x83e3fc	                     and ebx, 0xfffffffc	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b142	          0x83c30b	                            add ebx, 0xb	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b145	            0x84d2	                             test dl, dl	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b147	      0xba00000000	                              mov edx, 0	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b14c	      0xbf00000000	                              mov edi, 0	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b151	        0x480f44d7	                          cmove rdx, rdi	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b155	        0x48891424	                    mov qword [rsp], rdx	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b159	      0xe9e5000000	                           jmp 0x400b243	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b15e	      0x41837e7815	           cmp dword [r14 + 0x78], 0x15 	      1381	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3
0x400b163	            0x770b	                            ja 0x400b170	      1381	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3
0x400b165	        0x418b5678	            mov edx, dword [r14 + 0x78] 	      1381	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3
0x400b169	    0xff24d5000000	                       jmp qword [rdx*8]	      1381	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3
0x400b170	      0xb907000000	                              mov ecx, 7	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b175	      0xbb0b000000	                            mov ebx, 0xb	      1435	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b17a	    0x48c704240000	                      mov qword [rsp], 0	      1381	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3
0x400b182	      0xe9bc000000	                           jmp 0x400b243	      1381	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3
0x400b187	      0xba00000000	                              mov edx, 0	      1386	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	CALL_1
0x400b18c	      0xbe6a050000	                          mov esi, 0x56a	      1386	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	CALL_1
0x400b191	      0xbf00000000	                              mov edi, 0	      1386	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	CALL_1
0x400b196	      0xe800000000	                          call 0x400b19b	      1386	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	CALL_1
0x400b19b	      0x410fb65668	           movzx edx, byte [r14 + 0x68] 	      1403	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	IF_4
0x400b1a0	    0x81e280000000	                           and edx, 0x80	      1403	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	IF_4
0x400b1a6	          0x80fa01	                               cmp dl, 1	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b1a9	            0x19c9	                            sbb ecx, ecx	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b1ab	          0x83e1fb	                     and ecx, 0xfffffffb	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b1ae	          0x83c107	                              add ecx, 7	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b1b1	          0x80fa01	                               cmp dl, 1	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b1b4	            0x19db	                            sbb ebx, ebx	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b1b6	          0x83e3fc	                     and ebx, 0xfffffffc	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b1b9	          0x83c30b	                            add ebx, 0xb	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b1bc	            0x84d2	                             test dl, dl	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b1be	      0xba00000000	                              mov edx, 0	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b1c3	      0xbf00000000	                              mov edi, 0	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b1c8	        0x480f44d7	                          cmove rdx, rdi	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b1cc	        0x48891424	                    mov qword [rsp], rdx	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b1d0	            0xeb71	                           jmp 0x400b243	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b1d2	      0x410fb65668	           movzx edx, byte [r14 + 0x68] 	      1416	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	IF_5
0x400b1d7	    0x81e280000000	                           and edx, 0x80	      1416	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3	IF_5
0x400b1dd	          0x80fa01	                               cmp dl, 1	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b1e0	            0x19c9	                            sbb ecx, ecx	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b1e2	          0x83e1fb	                     and ecx, 0xfffffffb	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b1e5	          0x83c107	                              add ecx, 7	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b1e8	          0x80fa01	                               cmp dl, 1	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b1eb	            0x19db	                            sbb ebx, ebx	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b1ed	          0x83e3fc	                     and ebx, 0xfffffffc	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b1f0	          0x83c30b	                            add ebx, 0xb	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b1f3	            0x84d2	                             test dl, dl	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b1f5	      0xba00000000	                              mov edx, 0	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b1fa	      0xbf00000000	                              mov edi, 0	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b1ff	        0x480f44d7	                          cmove rdx, rdi	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b203	        0x48891424	                    mov qword [rsp], rdx	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b207	            0xeb3a	                           jmp 0x400b243	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b209	      0xb902000000	                              mov ecx, 2	      1335	tc-i386.c	FUNCTION_6	IF_1
0x400b20e	      0xbb04000000	                              mov ebx, 4	      1333	tc-i386.c	FUNCTION_6	IF_1
0x400b213	    0x48c704240000	                      mov qword [rsp], 0	      1332	tc-i386.c	FUNCTION_6	IF_1
0x400b21b	            0xeb26	                           jmp 0x400b243	      1332	tc-i386.c	FUNCTION_6	IF_1
0x400b21d	      0xb907000000	                              mov ecx, 7	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b222	      0xbb0b000000	                            mov ebx, 0xb	      1435	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b227	    0x48c704240000	                      mov qword [rsp], 0	      1342	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2
0x400b22f	            0xeb12	                           jmp 0x400b243	      1342	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2
0x400b231	      0xb907000000	                              mov ecx, 7	      1437	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b236	      0xbb0b000000	                            mov ebx, 0xb	      1435	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_6
0x400b23b	    0x48c704240000	                      mov qword [rsp], 0	      1381	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_2	ELSE_3	SWITCH_3
0x400b243	          0x4585e4	                         test r12d, r12d	      1441	tc-i386.c	FUNCTION_6	IF_7
0x400b246	     0xf84b8010000	                            je 0x400b404	      1441	tc-i386.c	FUNCTION_6	IF_7
0x400b24c	          0x83f80a	                            cmp eax, 0xa	      1444	tc-i386.c	FUNCTION_6	IF_8
0x400b24f	            0x7539	                           jne 0x400b28a	      1444	tc-i386.c	FUNCTION_6	IF_8
0x400b251	          0x4439e3	                           cmp ebx, r12d	      1447	tc-i386.c	FUNCTION_6	IF_8	IF_9
0x400b254	            0x7d38	                           jge 0x400b28e	      1447	tc-i386.c	FUNCTION_6	IF_8	IF_9
0x400b256	      0xba05000000	                              mov edx, 5	      1450	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_3
0x400b25b	      0xbe00000000	                              mov esi, 0	      1450	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_3
0x400b260	      0xbf00000000	                              mov edi, 0	      1450	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_3
0x400b265	      0xe800000000	                          call 0x400b26a	      1450	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_3
0x400b26a	        0x418b7648	            mov esi, dword [r14 + 0x48] 	      1449	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_2
0x400b26e	        0x498b7e40	            mov rdi, qword [r14 + 0x40] 	      1449	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_2
0x400b272	          0x4189d8	                            mov r8d, ebx	      1449	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_2
0x400b275	          0x4489e1	                           mov ecx, r12d	      1449	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_2
0x400b278	          0x4889c2	                            mov rdx, rax	      1449	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_2
0x400b27b	      0xb800000000	                              mov eax, 0	      1449	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_2
0x400b280	      0xe800000000	                          call 0x400b285	      1449	tc-i386.c	FUNCTION_6	IF_8	IF_9	CALL_2
0x400b285	      0xe98b010000	                           jmp 0x400b415	      1453	tc-i386.c	FUNCTION_6	IF_8	IF_9
0x400b28a	        0x49896e18	             mov qword [r14 + 0x18], rbp	      1457	tc-i386.c	FUNCTION_6	ELSE_7
0x400b28e	          0x4863db	                         movsxd rbx, ebx	      1459	tc-i386.c	FUNCTION_6	ELSE_7	IF_10
0x400b291	          0x4889e8	                            mov rax, rbp	      1459	tc-i386.c	FUNCTION_6	ELSE_7	IF_10
0x400b294	            0x4899	                                     cqo	      1459	tc-i386.c	FUNCTION_6	ELSE_7	IF_10
0x400b296	          0x48f7fb	                                idiv rbx	      1459	tc-i386.c	FUNCTION_6	ELSE_7	IF_10
0x400b299	          0x4863c9	                         movsxd rcx, ecx	      1459	tc-i386.c	FUNCTION_6	ELSE_7	IF_10
0x400b29c	          0x4839c8	                            cmp rax, rcx	      1459	tc-i386.c	FUNCTION_6	ELSE_7	IF_10
0x400b29f	     0xf8e9e000000	                           jle 0x400b343	      1459	tc-i386.c	FUNCTION_6	ELSE_7	IF_10
0x400b2a5	        0x488d45fe	                      lea rax, [rbp - 2]	      1462	tc-i386.c	FUNCTION_6	ELSE_7	IF_10
0x400b2a9	          0x4889c2	                            mov rdx, rax	      1463	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11	CALL_4
0x400b2ac	          0x83e27f	                           and edx, 0x7f	      1463	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11	CALL_4
0x400b2af	          0x4839d0	                            cmp rax, rdx	      1463	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11	CALL_4
0x400b2b2	            0x7512	                           jne 0x400b2c6	      1463	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11	CALL_4
0x400b2b4	      0x41c64500eb	                    mov byte [r13], 0xeb	      1467	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11
0x400b2b9	        0x41884501	                  mov byte [r13 + 1], al	      1468	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11
0x400b2bd	        0x4983c502	                              add r13, 2	      1469	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11
0x400b2c1	          0x4889c5	                            mov rbp, rax	      1466	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11
0x400b2c4	            0xeb7d	                           jmp 0x400b343	      1466	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	IF_11
0x400b2c6	          0x83fe01	                              cmp esi, 1	      1475	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_12
0x400b2c9	            0x7511	                           jne 0x400b2dc	      1475	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_12
0x400b2cb	      0x41c6450066	                    mov byte [r13], 0x66	      1477	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_12
0x400b2d0	      0x41c64501e9	                mov byte [r13 + 1], 0xe9	      1478	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_12
0x400b2d5	      0xb802000000	                              mov eax, 2	      1479	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_12
0x400b2da	            0xeb0a	                           jmp 0x400b2e6	      1479	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_12
0x400b2dc	      0x41c64500e9	                    mov byte [r13], 0xe9	      1483	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	ELSE_9
0x400b2e1	      0xb801000000	                              mov eax, 1	      1484	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	ELSE_9
0x400b2e6	          0x8d5804	                      lea ebx, [rax + 4]	      1487	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8
0x400b2e9	            0x89da	                            mov edx, ebx	      1487	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8
0x400b2eb	          0x4829d5	                            sub rbp, rdx	      1487	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8
0x400b2ee	          0x4889ea	                            mov rdx, rbp	      1488	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_5
0x400b2f1	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      1488	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_5
0x400b2f7	          0x4839d5	                            cmp rbp, rdx	      1488	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_5
0x400b2fa	            0x742e	                            je 0x400b32a	      1488	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_5
0x400b2fc	      0xba05000000	                              mov edx, 5	      1491	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_7
0x400b301	      0xbe00000000	                              mov esi, 0	      1491	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_7
0x400b306	      0xbf00000000	                              mov edi, 0	      1491	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_7
0x400b30b	      0xe800000000	                          call 0x400b310	      1491	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_7
0x400b310	        0x418b7648	            mov esi, dword [r14 + 0x48] 	      1490	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_6
0x400b314	        0x498b7e40	            mov rdi, qword [r14 + 0x40] 	      1490	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_6
0x400b318	          0x4889c2	                            mov rdx, rax	      1490	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_6
0x400b31b	      0xb800000000	                              mov eax, 0	      1490	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_6
0x400b320	      0xe800000000	                          call 0x400b325	      1490	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13	CALL_6
0x400b325	      0xe9eb000000	                           jmp 0x400b415	      1492	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	IF_13
0x400b32a	            0x89c0	                            mov eax, eax	      1495	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	CALL_8
0x400b32c	      0x498d7c0500	                    lea rdi, [r13 + rax]	      1495	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	CALL_8
0x400b331	      0xba04000000	                              mov edx, 4	      1495	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	CALL_8
0x400b336	          0x4889ee	                            mov rsi, rbp	      1495	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	CALL_8
0x400b339	      0xe800000000	                          call 0x400b33e	      1495	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8	CALL_8
0x400b33e	            0x89db	                            mov ebx, ebx	      1496	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8
0x400b340	          0x4901dd	                            add r13, rbx	      1496	tc-i386.c	FUNCTION_6	ELSE_7	IF_10	ELSE_8
0x400b343	          0x4963c4	                        movsxd rax, r12d	      1252	tc-i386.c	FUNCTION_3
0x400b346	        0x488b0c24	                    mov rcx, qword [rsp]	      1252	tc-i386.c	FUNCTION_3
0x400b34a	      0x4c8b74c1f8	        mov r14, qword [rcx + rax*8 - 8]	      1252	tc-i386.c	FUNCTION_3
0x400b34f	          0x4d85f6	                           test r14, r14	      1255	tc-i386.c	FUNCTION_3	IF_1
0x400b352	            0x750c	                           jne 0x400b360	      1255	tc-i386.c	FUNCTION_3	IF_1
0x400b354	        0x4183ec01	                             sub r12d, 1	      1257	tc-i386.c	FUNCTION_3	IF_1
0x400b358	          0x4963c4	                        movsxd rax, r12d	      1258	tc-i386.c	FUNCTION_3	IF_1
0x400b35b	      0x4c8b74c1f8	        mov r14, qword [rcx + rax*8 - 8]	      1258	tc-i386.c	FUNCTION_3	IF_1
0x400b360	            0x89e8	                            mov eax, ebp	      1261	tc-i386.c	FUNCTION_3
0x400b362	              0x99	                                     cdq	      1261	tc-i386.c	FUNCTION_3
0x400b363	          0x41f7fc	                               idiv r12d	      1261	tc-i386.c	FUNCTION_3
0x400b366	        0x8954240c	              mov dword [rsp + 0xc], edx	      1261	tc-i386.c	FUNCTION_3
0x400b36a	            0x29d5	                            sub ebp, edx	      1263	tc-i386.c	FUNCTION_3
0x400b36c	            0x85ed	                           test ebp, ebp	      1264	tc-i386.c	FUNCTION_3	FOR_1
0x400b36e	            0x7e22	                           jle 0x400b392	      1264	tc-i386.c	FUNCTION_3	FOR_1
0x400b370	      0xbb00000000	                              mov ebx, 0	      1264	tc-i386.c	FUNCTION_3	FOR_1
0x400b375	          0x4d63fc	                        movsxd r15, r12d	        53	string3.h	FUNCTION_161	CALL_3
0x400b378	          0x4863fb	                         movsxd rdi, ebx	        53	string3.h	FUNCTION_161	CALL_3
0x400b37b	          0x4c01ef	                            add rdi, r13	        53	string3.h	FUNCTION_161	CALL_3
0x400b37e	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_161	CALL_3
0x400b381	          0x4c89f6	                            mov rsi, r14	        53	string3.h	FUNCTION_161	CALL_3
0x400b384	      0xe800000000	                          call 0x400b389	        53	string3.h	FUNCTION_161	CALL_3
0x400b389	          0x4401e3	                           add ebx, r12d	      1264	tc-i386.c	FUNCTION_3	FOR_1
0x400b38c	            0x39dd	                            cmp ebp, ebx	      1264	tc-i386.c	FUNCTION_3	FOR_1
0x400b38e	            0x7fe8	                            jg 0x400b378	      1264	tc-i386.c	FUNCTION_3	FOR_1
0x400b390	            0xeb05	                           jmp 0x400b397	      1264	tc-i386.c	FUNCTION_3	FOR_1
0x400b392	      0xbb00000000	                              mov ebx, 0	      1264	tc-i386.c	FUNCTION_3	FOR_1
0x400b397	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      1267	tc-i386.c	FUNCTION_3	IF_2
0x400b39b	            0x85c0	                           test eax, eax	      1267	tc-i386.c	FUNCTION_3	IF_2
0x400b39d	            0x7476	                            je 0x400b415	      1267	tc-i386.c	FUNCTION_3	IF_2
0x400b39f	          0x4863d0	                         movsxd rdx, eax	      1269	tc-i386.c	FUNCTION_3	IF_2
0x400b3a2	        0x488b0424	                    mov rax, qword [rsp]	      1269	tc-i386.c	FUNCTION_3	IF_2
0x400b3a6	      0x488b74d0f8	        mov rsi, qword [rax + rdx*8 - 8]	      1269	tc-i386.c	FUNCTION_3	IF_2
0x400b3ab	          0x4885f6	                           test rsi, rsi	      1270	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x400b3ae	            0x7530	                           jne 0x400b3e0	      1270	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x400b3b0	        0x8b6c240c	              mov ebp, dword [rsp + 0xc]	      1274	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x400b3b4	          0x83ed01	                              sub ebp, 1	      1274	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x400b3b7	          0x4863d5	                         movsxd rdx, ebp	      1275	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x400b3ba	          0x4863fb	                         movsxd rdi, ebx	        53	string3.h	FUNCTION_161	CALL_3
0x400b3bd	          0x4c01ef	                            add rdi, r13	        53	string3.h	FUNCTION_161	CALL_3
0x400b3c0	          0x4989c7	                            mov r15, rax	        53	string3.h	FUNCTION_161	CALL_3
0x400b3c3	      0x488b74d0f8	        mov rsi, qword [rax + rdx*8 - 8]	        53	string3.h	FUNCTION_161	CALL_3
0x400b3c8	      0xe800000000	                          call 0x400b3cd	        53	string3.h	FUNCTION_161	CALL_3
0x400b3cd	        0x8d441d00	                    lea eax, [rbp + rbx]	      1277	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x400b3d1	            0x4898	                                    cdqe	      1277	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x400b3d3	          0x498b17	                    mov rdx, qword [r15]	      1277	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x400b3d6	           0xfb612	                   movzx edx, byte [rdx]	      1277	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x400b3d9	      0x4188540500	                mov byte [r13 + rax], dl	      1277	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x400b3de	            0xeb35	                           jmp 0x400b415	      1277	tc-i386.c	FUNCTION_3	IF_2	IF_3
0x400b3e0	          0x4863fb	                         movsxd rdi, ebx	        53	string3.h	FUNCTION_161	CALL_3
0x400b3e3	          0x4c01ef	                            add rdi, r13	        53	string3.h	FUNCTION_161	CALL_3
0x400b3e6	      0xe800000000	                          call 0x400b3eb	        53	string3.h	FUNCTION_161	CALL_3
0x400b3eb	            0xeb28	                           jmp 0x400b415	        53	string3.h	FUNCTION_161	CALL_3
0x400b3ed	      0xb902000000	                              mov ecx, 2	      1431	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_5	IF_6
0x400b3f2	      0xbb07000000	                              mov ebx, 7	      1429	tc-i386.c	FUNCTION_6	ELSE_1	ELSE_5	IF_6
0x400b3f7	    0x48c704240000	                      mov qword [rsp], 0	      1342	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2
0x400b3ff	      0xe93ffeffff	                           jmp 0x400b243	      1342	tc-i386.c	FUNCTION_6	ELSE_1	IF_2	SWITCH_2
0x400b404	          0x4189dc	                           mov r12d, ebx	      1442	tc-i386.c	FUNCTION_6	IF_7
0x400b407	          0x83f80a	                            cmp eax, 0xa	      1444	tc-i386.c	FUNCTION_6	IF_8
0x400b40a	     0xf847efeffff	                            je 0x400b28e	      1444	tc-i386.c	FUNCTION_6	IF_8
0x400b410	      0xe975feffff	                           jmp 0x400b28a	      1444	tc-i386.c	FUNCTION_6	IF_8
0x400b415	        0x4883c418	                           add rsp, 0x18	      1502	tc-i386.c	FUNCTION_6
0x400b419	              0x5b	                                 pop rbx	      1502	tc-i386.c	FUNCTION_6
0x400b41a	              0x5d	                                 pop rbp	      1502	tc-i386.c	FUNCTION_6
0x400b41b	            0x415c	                                 pop r12	      1502	tc-i386.c	FUNCTION_6
0x400b41d	            0x415d	                                 pop r13	      1502	tc-i386.c	FUNCTION_6
0x400b41f	            0x415e	                                 pop r14	      1502	tc-i386.c	FUNCTION_6
0x400b421	            0x415f	                                 pop r15	      1502	tc-i386.c	FUNCTION_6
0x400b423	              0xc3	                                     ret	      1502	tc-i386.c	FUNCTION_6
md_pcrel_from	functions,0:ELSE,0:FOR,0:CALL,0:SWITCH,0:WHILE,0:IF,0:DO,0	5
0x4010779	         0xfb64702	               movzx eax, byte [rdi + 2]	     11227	tc-i386.c	FUNCTION_132	CALL_4
0x401077d	        0x48034710	             add rax, qword [rdi + 0x10]	     11227	tc-i386.c	FUNCTION_132	CALL_4
0x4010781	        0x488b5708	                mov rdx, qword [rdi + 8]	     11227	tc-i386.c	FUNCTION_132	CALL_4
0x4010785	          0x480302	                    add rax, qword [rdx]	     11227	tc-i386.c	FUNCTION_132	CALL_4
0x4010788	              0xc3	                                     ret	     11228	tc-i386.c	FUNCTION_132
i386_addressing_mode	functions,0:ELSE,2:FOR,0:CALL,1:SWITCH,0:WHILE,0:IF,8:DO,0	56
0x4000bb2	    0x803d00000000	                cmp byte [0x04000bb9], 0	      9049	tc-i386.c	FUNCTION_108	IF_1
0x4000bb9	            0x740e	                            je 0x4000bc9	      9049	tc-i386.c	FUNCTION_108	IF_1
0x4000bbb	    0x833d00000000	               cmp dword [0x04000bc2], 0	      9050	tc-i386.c	FUNCTION_108	IF_1
0x4000bc2	           0xf94c0	                                 sete al	      9050	tc-i386.c	FUNCTION_108	IF_1
0x4000bc5	           0xfb6c0	                           movzx eax, al	      9050	tc-i386.c	FUNCTION_108	IF_1
0x4000bc8	              0xc3	                                     ret	      9050	tc-i386.c	FUNCTION_108	IF_1
0x4000bc9	    0x8b0500000000	            mov eax, dword [0x04000bcf] 	      9053	tc-i386.c	FUNCTION_108	ELSE_1
0x4000bcf	    0x833d00000000	               cmp dword [0x04000bd6], 0	      9056	tc-i386.c	FUNCTION_108	ELSE_1	IF_2
0x4000bd6	     0xf85b3000000	                           jne 0x4000c8f	      9056	tc-i386.c	FUNCTION_108	ELSE_1	IF_2
0x4000bdc	    0x488b15000000	            mov rdx, qword [0x04000be3] 	      9059	tc-i386.c	FUNCTION_108	ELSE_1	IF_2
0x4000be3	          0x4885d2	                           test rdx, rdx	      9061	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_3
0x4000be6	            0x7510	                           jne 0x4000bf8	      9061	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_3
0x4000be8	    0x488b15000000	            mov rdx, qword [0x04000bef] 	      9062	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_3
0x4000bef	          0x4885d2	                           test rdx, rdx	      9064	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4
0x4000bf2	     0xf8497000000	                            je 0x4000c8f	      9064	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4
0x4000bf8	         0xfb67a11	           movzx edi, byte [rdx + 0x11] 	      9066	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_5
0x4000bfc	          0x8d4f03	                      lea ecx, [rdi + 3]	      9066	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_5
0x4000bff	          0x80f901	                               cmp cl, 1	      9066	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_5
0x4000c02	            0x760f	                           jbe 0x4000c13	      9066	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_5
0x4000c04	         0xfb6520b	            movzx edx, byte [rdx + 0xb] 	      9068	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_5
0x4000c08	            0x84d2	                             test dl, dl	      9068	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_5
0x4000c0a	            0x7807	                            js 0x4000c13	      9068	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_5
0x4000c0c	          0xf6c240	                           test dl, 0x40	      9071	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	ELSE_2	IF_6
0x4000c0f	            0x7576	                           jne 0x4000c87	      9071	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	ELSE_2	IF_6
0x4000c11	            0xf3c3	                                     ret	      9071	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	ELSE_2	IF_6
0x4000c13	            0x85c0	                           test eax, eax	      9074	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7
0x4000c15	            0x7478	                            je 0x4000c8f	      9074	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7
0x4000c17	    0xc60500000000	            mov byte [0x04000c1e], 0x67 	      9076	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7
0x4000c1e	    0x830500000000	               add dword [0x04000c25], 1	      9077	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7
0x4000c25	          0x83f802	                              cmp eax, 2	      9084	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	IF_8
0x4000c28	            0x7442	                            je 0x4000c6c	      9084	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	IF_8
0x4000c2a	      0xb800000000	                              mov eax, 0	      9084	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	IF_8
0x4000c2f	    0x8b1500000000	            mov edx, dword [0x04000c35] 	      9085	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	IF_8
0x4000c35	          0x4863ca	                         movsxd rcx, edx	      9085	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	IF_8
0x4000c38	    0xf604cd000000	                    test byte [rcx*8], 2	      9085	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	IF_8
0x4000c40	            0x750a	                           jne 0x4000c4c	      9085	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	IF_8
0x4000c42	    0xf604cd000000	                    test byte [rcx*8], 4	      9086	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	IF_8
0x4000c4a	            0x7443	                            je 0x4000c8f	      9086	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	IF_8
0x4000c4c	          0x4863d2	                         movsxd rdx, edx	      9086	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	IF_8
0x4000c4f	    0x488d14d50000	                        lea rdx, [rdx*8]	      9086	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	IF_8
0x4000c57	          0x8b4a04	                mov ecx, dword [rdx + 4]	      1822	tc-i386.c	FUNCTION_20	SWITCH_1
0x4000c5a	    0x330d00000000	             xor ecx, dword [0x04000c60]	      1822	tc-i386.c	FUNCTION_20	SWITCH_1
0x4000c60	    0x8b3500000000	            mov esi, dword [0x04000c66] 	      9088	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	CALL_1
0x4000c66	            0x3132	                    xor dword [rdx], esi	      9088	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	CALL_1
0x4000c68	          0x894a04	                mov dword [rdx + 4], ecx	      9088	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	CALL_1
0x4000c6b	              0xc3	                                     ret	      9088	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	CALL_1
0x4000c6c	      0xb800000000	                              mov eax, 0	      9088	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	CALL_1
0x4000c71	              0xc3	                                     ret	      9088	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7	CALL_1
0x4000c72	    0xc60500000000	            mov byte [0x04000c79], 0x67 	      9076	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7
0x4000c79	    0x830500000000	               add dword [0x04000c80], 1	      9077	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7
0x4000c80	      0xb801000000	                              mov eax, 1	      9072	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	ELSE_2	IF_6
0x4000c85	            0xeba8	                           jmp 0x4000c2f	      9072	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	ELSE_2	IF_6
0x4000c87	          0x8d50ff	                      lea edx, [rax - 1]	      9074	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7
0x4000c8a	          0x83fa01	                              cmp edx, 1	      9074	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7
0x4000c8d	            0x77e3	                            ja 0x4000c72	      9074	tc-i386.c	FUNCTION_108	ELSE_1	IF_2	IF_4	IF_7
0x4000c8f	            0xf3c3	                                     ret	      9096	tc-i386.c	FUNCTION_108
set_16bit_gcc_code_flag	functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0:IF,1:DO,0	14
0x4001564	    0x893d00000000	            mov dword [0x0400156a], edi 	      2442	tc-i386.c	FUNCTION_43
0x400156a	          0x83ff01	                              cmp edi, 1	      2443	tc-i386.c	FUNCTION_43	IF_1
0x400156d	            0x7418	                            je 0x4001587	      2443	tc-i386.c	FUNCTION_43	IF_1
0x400156f	        0x4883ec08	                              sub rsp, 8	      2441	tc-i386.c	FUNCTION_43
0x4001573	      0xba00000000	                              mov edx, 0	      2444	tc-i386.c	FUNCTION_43	CALL_1
0x4001578	      0xbe8c090000	                          mov esi, 0x98c	      2444	tc-i386.c	FUNCTION_43	CALL_1
0x400157d	      0xbf00000000	                              mov edi, 0	      2444	tc-i386.c	FUNCTION_43	CALL_1
0x4001582	      0xe800000000	                          call 0x4001587	      2444	tc-i386.c	FUNCTION_43	CALL_1
0x4001587	     0xfb605000000	           movzx eax, byte [0x0400158e] 	      2445	tc-i386.c	FUNCTION_43
0x400158e	          0x83e0bf	                     and eax, 0xffffffbf	      2445	tc-i386.c	FUNCTION_43
0x4001591	          0x83c880	                      or eax, 0xffffff80	      2446	tc-i386.c	FUNCTION_43
0x4001594	    0x880500000000	               mov byte [0x0400159a], al	      2446	tc-i386.c	FUNCTION_43
0x400159a	    0xc60500000000	            mov byte [0x040015a1], 0x6c 	      2447	tc-i386.c	FUNCTION_43
0x40015a1	              0xc3	                                     ret	      2447	tc-i386.c	FUNCTION_43
i386_arch	functions,0:ELSE,3:FOR,0:CALL,6:SWITCH,0:WHILE,0:IF,6:DO,0	43
0x400b424	        0x4883ec08	                              sub rsp, 8	      2712	tc-i386.c	FUNCTION_50
0x400b428	    0x8b1500000000	            mov edx, dword [0x0400b42e] 	      2713	tc-i386.c	FUNCTION_50	IF_1
0x400b42e	          0x83fa0a	                            cmp edx, 0xa	      2713	tc-i386.c	FUNCTION_50	IF_1
0x400b431	            0x752e	                           jne 0x400b461	      2713	tc-i386.c	FUNCTION_50	IF_1
0x400b433	    0x833d00000000	               cmp dword [0x0400b43a], 2	      2715	tc-i386.c	FUNCTION_50	IF_1	IF_2
0x400b43a	     0xf8484000000	                            je 0x400b4c4	      2715	tc-i386.c	FUNCTION_50	IF_1	IF_2
0x400b440	      0xba05000000	                              mov edx, 5	      2717	tc-i386.c	FUNCTION_50	IF_1	CALL_2
0x400b445	      0xbe00000000	                              mov esi, 0	      2717	tc-i386.c	FUNCTION_50	IF_1	CALL_2
0x400b44a	      0xbf00000000	                              mov edi, 0	      2717	tc-i386.c	FUNCTION_50	IF_1	CALL_2
0x400b44f	      0xe800000000	                          call 0x400b454	      2717	tc-i386.c	FUNCTION_50	IF_1	CALL_2
0x400b454	          0x4889c7	                            mov rdi, rax	      2717	tc-i386.c	FUNCTION_50	IF_1	CALL_2
0x400b457	      0xb800000000	                              mov eax, 0	      2717	tc-i386.c	FUNCTION_50	IF_1	CALL_2
0x400b45c	      0xe800000000	                          call 0x400b461	      2717	tc-i386.c	FUNCTION_50	IF_1	CALL_2
0x400b461	          0x83fa0b	                            cmp edx, 0xb	      2720	tc-i386.c	FUNCTION_50	ELSE_1	IF_3
0x400b464	            0x752a	                           jne 0x400b490	      2720	tc-i386.c	FUNCTION_50	ELSE_1	IF_3
0x400b466	    0x833d00000000	               cmp dword [0x0400b46d], 2	      2722	tc-i386.c	FUNCTION_50	ELSE_1	IF_3	IF_4
0x400b46d	            0x745c	                            je 0x400b4cb	      2722	tc-i386.c	FUNCTION_50	ELSE_1	IF_3	IF_4
0x400b46f	      0xba05000000	                              mov edx, 5	      2724	tc-i386.c	FUNCTION_50	ELSE_1	IF_3	CALL_4
0x400b474	      0xbe00000000	                              mov esi, 0	      2724	tc-i386.c	FUNCTION_50	ELSE_1	IF_3	CALL_4
0x400b479	      0xbf00000000	                              mov edi, 0	      2724	tc-i386.c	FUNCTION_50	ELSE_1	IF_3	CALL_4
0x400b47e	      0xe800000000	                          call 0x400b483	      2724	tc-i386.c	FUNCTION_50	ELSE_1	IF_3	CALL_4
0x400b483	          0x4889c7	                            mov rdi, rax	      2724	tc-i386.c	FUNCTION_50	ELSE_1	IF_3	CALL_4
0x400b486	      0xb800000000	                              mov eax, 0	      2724	tc-i386.c	FUNCTION_50	ELSE_1	IF_3	CALL_4
0x400b48b	      0xe800000000	                          call 0x400b490	      2724	tc-i386.c	FUNCTION_50	ELSE_1	IF_3	CALL_4
0x400b490	      0xb808000000	                              mov eax, 8	      2735	tc-i386.c	FUNCTION_50	ELSE_3
0x400b495	          0x83fa0c	                            cmp edx, 0xc	      2727	tc-i386.c	FUNCTION_50	ELSE_2	IF_5
0x400b498	            0x753d	                           jne 0x400b4d7	      2727	tc-i386.c	FUNCTION_50	ELSE_2	IF_5
0x400b49a	    0x833d00000000	               cmp dword [0x0400b4a1], 2	      2729	tc-i386.c	FUNCTION_50	ELSE_2	IF_5	IF_6
0x400b4a1	            0x752f	                           jne 0x400b4d2	      2729	tc-i386.c	FUNCTION_50	ELSE_2	IF_5	IF_6
0x400b4a3	      0xba05000000	                              mov edx, 5	      2731	tc-i386.c	FUNCTION_50	ELSE_2	IF_5	CALL_6
0x400b4a8	      0xbe00000000	                              mov esi, 0	      2731	tc-i386.c	FUNCTION_50	ELSE_2	IF_5	CALL_6
0x400b4ad	      0xbf00000000	                              mov edi, 0	      2731	tc-i386.c	FUNCTION_50	ELSE_2	IF_5	CALL_6
0x400b4b2	      0xe800000000	                          call 0x400b4b7	      2731	tc-i386.c	FUNCTION_50	ELSE_2	IF_5	CALL_6
0x400b4b7	          0x4889c7	                            mov rdi, rax	      2731	tc-i386.c	FUNCTION_50	ELSE_2	IF_5	CALL_6
0x400b4ba	      0xb800000000	                              mov eax, 0	      2731	tc-i386.c	FUNCTION_50	ELSE_2	IF_5	CALL_6
0x400b4bf	      0xe800000000	                          call 0x400b4c4	      2731	tc-i386.c	FUNCTION_50	ELSE_2	IF_5	CALL_6
0x400b4c4	      0xb809000000	                              mov eax, 9	      2718	tc-i386.c	FUNCTION_50	IF_1
0x400b4c9	            0xeb0c	                           jmp 0x400b4d7	      2718	tc-i386.c	FUNCTION_50	IF_1
0x400b4cb	      0xb80a000000	                            mov eax, 0xa	      2725	tc-i386.c	FUNCTION_50	ELSE_1	IF_3
0x400b4d0	            0xeb05	                           jmp 0x400b4d7	      2725	tc-i386.c	FUNCTION_50	ELSE_1	IF_3
0x400b4d2	      0xb80b000000	                            mov eax, 0xb	      2732	tc-i386.c	FUNCTION_50	ELSE_2	IF_5
0x400b4d7	        0x4883c408	                              add rsp, 8	      2736	tc-i386.c	FUNCTION_50	ELSE_3
0x400b4db	              0xc3	                                     ret	      2736	tc-i386.c	FUNCTION_50	ELSE_3
reloc	functions,0:ELSE,6:FOR,0:CALL,19:SWITCH,4:WHILE,0:IF,13:DO,0	211
0x4006128	            0x4156	                                push r14	      3087	tc-i386.c	FUNCTION_59
0x400612a	            0x4155	                                push r13	      3087	tc-i386.c	FUNCTION_59
0x400612c	            0x4154	                                push r12	      3087	tc-i386.c	FUNCTION_59
0x400612e	              0x55	                                push rbp	      3087	tc-i386.c	FUNCTION_59
0x400612f	              0x53	                                push rbx	      3087	tc-i386.c	FUNCTION_59
0x4006130	            0x89fd	                            mov ebp, edi	      3087	tc-i386.c	FUNCTION_59
0x4006132	          0x4189f6	                           mov r14d, esi	      3087	tc-i386.c	FUNCTION_59
0x4006135	          0x4189d5	                           mov r13d, edx	      3087	tc-i386.c	FUNCTION_59
0x4006138	          0x83f947	                           cmp ecx, 0x47	      3088	tc-i386.c	FUNCTION_59	IF_1
0x400613b	     0xf84ae010000	                            je 0x40062ef	      3088	tc-i386.c	FUNCTION_59	IF_1
0x4006141	            0x89cb	                            mov ebx, ecx	      3088	tc-i386.c	FUNCTION_59	IF_1
0x4006143	          0x83ff08	                              cmp edi, 8	      3092	tc-i386.c	FUNCTION_59	IF_1	IF_2
0x4006146	     0xf85ef020000	                           jne 0x400643b	      3092	tc-i386.c	FUNCTION_59	IF_1	IF_2
0x400614c	    0x8d8183feffff	                  lea eax, [rcx - 0x17d]	      3093	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4006152	          0x83f816	                           cmp eax, 0x16	      3093	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4006155	            0x772b	                            ja 0x4006182	      3093	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4006157	            0x89c0	                            mov eax, eax	      3093	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4006159	    0xff24c5000000	                       jmp qword [rax*8]	      3093	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4006160	      0xb892010000	                          mov eax, 0x192	      3099	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4006165	      0xe9f2020000	                           jmp 0x400645c	      3099	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x400616a	      0xbb90010000	                          mov ebx, 0x190	      3108	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x400616f	            0xeb72	                           jmp 0x40061e3	      3108	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4006171	      0xb893010000	                          mov eax, 0x193	      3102	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4006176	      0xe9e1020000	                           jmp 0x400645c	      3102	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x400617b	      0xbb86010000	                          mov ebx, 0x186	      3114	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4006180	            0xeb61	                           jmp 0x40061e3	      3115	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4006182	          0x83fb24	                           cmp ebx, 0x24	      3121	tc-i386.c	FUNCTION_59	IF_1	IF_3
0x4006185	     0xf84be020000	                            je 0x4006449	      3121	tc-i386.c	FUNCTION_59	IF_1	IF_3
0x400618b	            0xeb56	                           jmp 0x40061e3	      3121	tc-i386.c	FUNCTION_59	IF_1	IF_3
0x400618d	          0x4585f6	                         test r14d, r14d	      3125	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_5
0x4006190	            0x742b	                            je 0x40061bd	      3125	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_5
0x4006192	      0xba05000000	                              mov edx, 5	      3127	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_5	CALL_2
0x4006197	      0xbe00000000	                              mov esi, 0	      3127	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_5	CALL_2
0x400619c	      0xbf00000000	                              mov edi, 0	      3127	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_5	CALL_2
0x40061a1	      0xe800000000	                          call 0x40061a6	      3127	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_5	CALL_2
0x40061a6	          0x4889c7	                            mov rdi, rax	      3127	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_5	CALL_2
0x40061a9	      0xb800000000	                              mov eax, 0	      3127	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_5	CALL_2
0x40061ae	      0xe800000000	                          call 0x40061b3	      3127	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_5	CALL_2
0x40061b3	      0xb847000000	                           mov eax, 0x47	      3128	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_5
0x40061b8	      0xe99f020000	                           jmp 0x400645c	      3128	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_5
0x40061bd	          0x83fd04	                              cmp ebp, 4	      3134	tc-i386.c	FUNCTION_59	IF_1	IF_6
0x40061c0	            0x7521	                           jne 0x40061e3	      3134	tc-i386.c	FUNCTION_59	IF_1	IF_6
0x40061c2	    0x833d00000000	               cmp dword [0x040061c9], 2	      3134	tc-i386.c	FUNCTION_59	IF_1	IF_6
0x40061c9	            0x7512	                           jne 0x40061dd	      3134	tc-i386.c	FUNCTION_59	IF_1	IF_6
0x40061cb	    0x833d00000000	               cmp dword [0x040061d2], 0	      3135	tc-i386.c	FUNCTION_59	IF_1	IF_6
0x40061d2	      0xb8ffffffff	                     mov eax, 0xffffffff	      3135	tc-i386.c	FUNCTION_59	IF_1	IF_6
0x40061d7	        0x440f45e8	                        cmovne r13d, eax	      3135	tc-i386.c	FUNCTION_59	IF_1	IF_6
0x40061db	            0xeb06	                           jmp 0x40061e3	      3135	tc-i386.c	FUNCTION_59	IF_1	IF_6
0x40061dd	    0x41bdffffffff	                    mov r13d, 0xffffffff	      3135	tc-i386.c	FUNCTION_59	IF_1	IF_6
0x40061e3	            0x89de	                            mov esi, ebx	      3137	tc-i386.c	FUNCTION_59	IF_1	CALL_3
0x40061e5	    0x488b3d000000	            mov rdi, qword [0x040061ec] 	      3137	tc-i386.c	FUNCTION_59	IF_1	CALL_3
0x40061ec	      0xe800000000	                          call 0x40061f1	      3137	tc-i386.c	FUNCTION_59	IF_1	CALL_3
0x40061f1	          0x4989c4	                            mov r12, rax	      3137	tc-i386.c	FUNCTION_59	IF_1	CALL_3
0x40061f4	          0x4885c0	                           test rax, rax	      3138	tc-i386.c	FUNCTION_59	IF_1	IF_7
0x40061f7	            0x752d	                           jne 0x4006226	      3138	tc-i386.c	FUNCTION_59	IF_1	IF_7
0x40061f9	      0xba05000000	                              mov edx, 5	      3139	tc-i386.c	FUNCTION_59	IF_1	CALL_5
0x40061fe	      0xbe00000000	                              mov esi, 0	      3139	tc-i386.c	FUNCTION_59	IF_1	CALL_5
0x4006203	      0xbf00000000	                              mov edi, 0	      3139	tc-i386.c	FUNCTION_59	IF_1	CALL_5
0x4006208	      0xe800000000	                          call 0x400620d	      3139	tc-i386.c	FUNCTION_59	IF_1	CALL_5
0x400620d	            0x89de	                            mov esi, ebx	      3139	tc-i386.c	FUNCTION_59	IF_1	CALL_5
0x400620f	          0x4889c7	                            mov rdi, rax	      3139	tc-i386.c	FUNCTION_59	IF_1	CALL_5
0x4006212	      0xb800000000	                              mov eax, 0	      3139	tc-i386.c	FUNCTION_59	IF_1	CALL_5
0x4006217	      0xe800000000	                          call 0x400621c	      3139	tc-i386.c	FUNCTION_59	IF_1	CALL_5
0x400621c	      0xb847000000	                           mov eax, 0x47	      3153	tc-i386.c	FUNCTION_59	IF_1	ELSE_4
0x4006221	      0xe936020000	                           jmp 0x400645c	      3153	tc-i386.c	FUNCTION_59	IF_1	ELSE_4
0x4006226	          0x4889c7	                            mov rdi, rax	      3140	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_6
0x4006229	      0xe800000000	                          call 0x400622e	      3140	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_6
0x400622e	            0x39c5	                            cmp ebp, eax	      3140	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_6
0x4006230	            0x7439	                            je 0x400626b	      3140	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_6
0x4006232	          0x4c89e7	                            mov rdi, r12	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x4006235	      0xe800000000	                          call 0x400623a	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x400623a	            0x89c3	                            mov ebx, eax	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x400623c	      0xba05000000	                              mov edx, 5	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x4006241	      0xbe00000000	                              mov esi, 0	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x4006246	      0xbf00000000	                              mov edi, 0	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x400624b	      0xe800000000	                          call 0x4006250	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x4006250	            0x89ea	                            mov edx, ebp	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x4006252	            0x89de	                            mov esi, ebx	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x4006254	          0x4889c7	                            mov rdi, rax	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x4006257	      0xb800000000	                              mov eax, 0	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x400625c	      0xe800000000	                          call 0x4006261	      3141	tc-i386.c	FUNCTION_59	IF_1	ELSE_1	IF_8	CALL_8
0x4006261	      0xb847000000	                           mov eax, 0x47	      3153	tc-i386.c	FUNCTION_59	IF_1	ELSE_4
0x4006266	      0xe9f1010000	                           jmp 0x400645c	      3153	tc-i386.c	FUNCTION_59	IF_1	ELSE_4
0x400626b	          0x4585f6	                         test r14d, r14d	      3144	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x400626e	            0x7433	                            je 0x40062a3	      3144	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x4006270	    0x41837c241000	               cmp dword [r12 + 0x10], 0	      3144	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x4006276	            0x752b	                           jne 0x40062a3	      3144	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x4006278	      0xba05000000	                              mov edx, 5	      3145	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x400627d	      0xbe00000000	                              mov esi, 0	      3145	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x4006282	      0xbf00000000	                              mov edi, 0	      3145	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x4006287	      0xe800000000	                          call 0x400628c	      3145	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x400628c	          0x4889c7	                            mov rdi, rax	      3145	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x400628f	      0xb800000000	                              mov eax, 0	      3145	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x4006294	      0xe800000000	                          call 0x4006299	      3145	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x4006299	      0xb847000000	                           mov eax, 0x47	      3153	tc-i386.c	FUNCTION_59	IF_1	ELSE_4
0x400629e	      0xe9b9010000	                           jmp 0x400645c	      3145	tc-i386.c	FUNCTION_59	IF_1	ELSE_2	IF_9
0x40062a3	      0x418b442418	            mov eax, dword [r12 + 0x18] 	      3146	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x40062a8	          0x4585ed	                         test r13d, r13d	      3147	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x40062ab	            0x7505	                           jne 0x40062b2	      3147	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x40062ad	          0x83f802	                              cmp eax, 2	      3147	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x40062b0	            0x7412	                            je 0x40062c4	      3147	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x40062b2	          0x4585ed	                         test r13d, r13d	      3149	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x40062b5	     0xf8e68010000	                           jle 0x4006423	      3149	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x40062bb	          0x83f803	                              cmp eax, 3	      3149	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x40062be	     0xf855f010000	                           jne 0x4006423	      3149	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x40062c4	      0xba05000000	                              mov edx, 5	      3150	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x40062c9	      0xbe00000000	                              mov esi, 0	      3150	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x40062ce	      0xbf00000000	                              mov edi, 0	      3150	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x40062d3	      0xe800000000	                          call 0x40062d8	      3150	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x40062d8	          0x4889c7	                            mov rdi, rax	      3150	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x40062db	      0xb800000000	                              mov eax, 0	      3150	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x40062e0	      0xe800000000	                          call 0x40062e5	      3150	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x40062e5	      0xb847000000	                           mov eax, 0x47	      3153	tc-i386.c	FUNCTION_59	IF_1	ELSE_4
0x40062ea	      0xe96d010000	                           jmp 0x400645c	      3150	tc-i386.c	FUNCTION_59	IF_1	ELSE_3	IF_10
0x40062ef	            0x85f6	                           test esi, esi	      3156	tc-i386.c	FUNCTION_59	ELSE_4	IF_11
0x40062f1	     0xf8494000000	                            je 0x400638b	      3156	tc-i386.c	FUNCTION_59	ELSE_4	IF_11
0x40062f7	            0x85d2	                           test edx, edx	      3158	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	IF_12
0x40062f9	            0x7521	                           jne 0x400631c	      3158	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	IF_12
0x40062fb	      0xba05000000	                              mov edx, 5	      3159	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_15
0x4006300	      0xbe00000000	                              mov esi, 0	      3159	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_15
0x4006305	      0xbf00000000	                              mov edi, 0	      3159	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_15
0x400630a	      0xe800000000	                          call 0x400630f	      3159	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_15
0x400630f	          0x4889c7	                            mov rdi, rax	      3159	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_15
0x4006312	      0xb800000000	                              mov eax, 0	      3159	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_15
0x4006317	      0xe800000000	                          call 0x400631c	      3159	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_15
0x400631c	          0x83fd02	                              cmp ebp, 2	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x400631f	            0x7433	                            je 0x4006354	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x4006321	          0x83fd02	                              cmp ebp, 2	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x4006324	            0x7710	                            ja 0x4006336	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x4006326	      0xb80d000000	                            mov eax, 0xd	      3162	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x400632b	          0x83fd01	                              cmp ebp, 1	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x400632e	     0xf8428010000	                            je 0x400645c	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x4006334	            0xeb28	                           jmp 0x400635e	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x4006336	      0xb809000000	                              mov eax, 9	      3164	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x400633b	          0x83fd04	                              cmp ebp, 4	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x400633e	     0xf8418010000	                            je 0x400645c	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x4006344	      0xb808000000	                              mov eax, 8	      3165	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x4006349	          0x83fd08	                              cmp ebp, 8	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x400634c	     0xf840a010000	                            je 0x400645c	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x4006352	            0xeb0a	                           jmp 0x400635e	      3160	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x4006354	      0xb80b000000	                            mov eax, 0xb	      3163	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x4006359	      0xe9fe000000	                           jmp 0x400645c	      3163	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	SWITCH_2
0x400635e	      0xba05000000	                              mov edx, 5	      3167	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_17
0x4006363	      0xbe00000000	                              mov esi, 0	      3167	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_17
0x4006368	      0xbf00000000	                              mov edi, 0	      3167	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_17
0x400636d	      0xe800000000	                          call 0x4006372	      3167	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_17
0x4006372	            0x89ee	                            mov esi, ebp	      3167	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_17
0x4006374	          0x4889c7	                            mov rdi, rax	      3167	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_17
0x4006377	      0xb800000000	                              mov eax, 0	      3167	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_17
0x400637c	      0xe800000000	                          call 0x4006381	      3167	tc-i386.c	FUNCTION_59	ELSE_4	IF_11	CALL_17
0x4006381	      0xb847000000	                           mov eax, 0x47	      3188	tc-i386.c	FUNCTION_59
0x4006386	      0xe9d1000000	                           jmp 0x400645c	      3188	tc-i386.c	FUNCTION_59
0x400638b	            0x85d2	                           test edx, edx	      3171	tc-i386.c	FUNCTION_59	ELSE_5	IF_13
0x400638d	            0x7e10	                           jle 0x400639f	      3171	tc-i386.c	FUNCTION_59	ELSE_5	IF_13
0x400638f	      0xb884010000	                          mov eax, 0x184	      3174	tc-i386.c	FUNCTION_59	ELSE_5	IF_13	SWITCH_3
0x4006394	          0x83ff04	                              cmp edi, 4	      3172	tc-i386.c	FUNCTION_59	ELSE_5	IF_13	SWITCH_3
0x4006397	     0xf84bf000000	                            je 0x400645c	      3172	tc-i386.c	FUNCTION_59	ELSE_5	IF_13	SWITCH_3
0x400639d	            0xeb3f	                           jmp 0x40063de	      3172	tc-i386.c	FUNCTION_59	ELSE_5	IF_13	SWITCH_3
0x400639f	          0x83ff02	                              cmp edi, 2	      3177	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x40063a2	            0x7433	                            je 0x40063d7	      3177	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x40063a4	          0x83ff02	                              cmp edi, 2	      3177	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x40063a7	            0x7710	                            ja 0x40063b9	      3177	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x40063a9	      0xb807000000	                              mov eax, 7	      3179	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x40063ae	          0x83ff01	                              cmp edi, 1	      3177	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x40063b1	     0xf84a5000000	                            je 0x400645c	      3177	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x40063b7	            0xeb25	                           jmp 0x40063de	      3177	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x40063b9	      0xb802000000	                              mov eax, 2	      3181	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x40063be	          0x83ff04	                              cmp edi, 4	      3177	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x40063c1	     0xf8495000000	                            je 0x400645c	      3177	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x40063c7	      0xb801000000	                              mov eax, 1	      3182	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x40063cc	          0x83ff08	                              cmp edi, 8	      3177	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x40063cf	     0xf8487000000	                            je 0x400645c	      3177	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x40063d5	            0xeb07	                           jmp 0x40063de	      3177	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x40063d7	      0xb805000000	                              mov eax, 5	      3180	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x40063dc	            0xeb7e	                           jmp 0x400645c	      3180	tc-i386.c	FUNCTION_59	ELSE_5	ELSE_6	SWITCH_4
0x40063de	          0x4585ed	                         test r13d, r13d	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x40063e1	      0xbb00000000	                              mov ebx, 0	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x40063e6	      0xb800000000	                              mov eax, 0	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x40063eb	        0x480f4fd8	                          cmovg rbx, rax	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x40063ef	      0xba05000000	                              mov edx, 5	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x40063f4	      0xbe00000000	                              mov esi, 0	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x40063f9	      0xbf00000000	                              mov edi, 0	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x40063fe	      0xe800000000	                          call 0x4006403	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x4006403	            0x89ea	                            mov edx, ebp	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x4006405	          0x4889de	                            mov rsi, rbx	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x4006408	          0x4889c7	                            mov rdi, rax	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x400640b	      0xb800000000	                              mov eax, 0	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x4006410	      0xe800000000	                          call 0x4006415	      3184	tc-i386.c	FUNCTION_59	ELSE_5	CALL_19
0x4006415	      0xb847000000	                           mov eax, 0x47	      3188	tc-i386.c	FUNCTION_59
0x400641a	            0xeb40	                           jmp 0x400645c	      3188	tc-i386.c	FUNCTION_59
0x400641c	      0xb88f010000	                          mov eax, 0x18f	      3096	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4006421	            0xeb39	                           jmp 0x400645c	      3096	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4006423	            0x89d8	                            mov eax, ebx	      3096	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4006425	            0xeb35	                           jmp 0x400645c	      3096	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4006427	      0xbb91010000	                          mov ebx, 0x191	      3105	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x400642c	      0xe9b2fdffff	                           jmp 0x40061e3	      3105	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4006431	      0xbb87010000	                          mov ebx, 0x187	      3111	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x4006436	      0xe9a8fdffff	                           jmp 0x40061e3	      3111	tc-i386.c	FUNCTION_59	IF_1	IF_2	SWITCH_1
0x400643b	          0x83f924	                           cmp ecx, 0x24	      3121	tc-i386.c	FUNCTION_59	IF_1	IF_3
0x400643e	     0xf8579fdffff	                           jne 0x40061bd	      3121	tc-i386.c	FUNCTION_59	IF_1	IF_3
0x4006444	      0xe944fdffff	                           jmp 0x400618d	      3121	tc-i386.c	FUNCTION_59	IF_1	IF_3
0x4006449	      0xbb25000000	                           mov ebx, 0x25	      3124	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_4
0x400644e	          0x4585f6	                         test r14d, r14d	      3125	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_5
0x4006451	     0xf848cfdffff	                            je 0x40061e3	      3125	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_5
0x4006457	      0xe936fdffff	                           jmp 0x4006192	      3125	tc-i386.c	FUNCTION_59	IF_1	IF_3	IF_5
0x400645c	              0x5b	                                 pop rbx	      3189	tc-i386.c	FUNCTION_59
0x400645d	              0x5d	                                 pop rbp	      3189	tc-i386.c	FUNCTION_59
0x400645e	            0x415c	                                 pop r12	      3189	tc-i386.c	FUNCTION_59
0x4006460	            0x415d	                                 pop r13	      3189	tc-i386.c	FUNCTION_59
0x4006462	            0x415e	                                 pop r14	      3189	tc-i386.c	FUNCTION_59
0x4006464	              0xc3	                                     ret	      3189	tc-i386.c	FUNCTION_59
output_invalid	functions,0:ELSE,1:FOR,0:CALL,1:SWITCH,0:WHILE,0:IF,1:DO,0	24
0x4004fbd	        0x4883ec08	                              sub rsp, 8	     10147	tc-i386.c	FUNCTION_119
0x4004fc1	        0x440fb6cf	                          movzx r9d, dil	     10148	tc-i386.c	FUNCTION_119	IF_1	CALL_1
0x4004fc5	          0x4963c1	                         movsxd rax, r9d	     10148	tc-i386.c	FUNCTION_119	IF_1	CALL_1
0x4004fc8	    0xf68400000000	            test byte [rax + rax], 0x10 	     10148	tc-i386.c	FUNCTION_119	IF_1	CALL_1
0x4004fd0	            0x7429	                            je 0x4004ffb	     10148	tc-i386.c	FUNCTION_119	IF_1	CALL_1
0x4004fd2	          0x4189f9	                            mov r9d, edi	        64	stdio2.h	FUNCTION_146	CALL_1
0x4004fd5	    0x41b800000000	                              mov r8d, 0	        64	stdio2.h	FUNCTION_146	CALL_1
0x4004fdb	      0xb908000000	                              mov ecx, 8	        64	stdio2.h	FUNCTION_146	CALL_1
0x4004fe0	      0xba01000000	                              mov edx, 1	        64	stdio2.h	FUNCTION_146	CALL_1
0x4004fe5	      0xbe08000000	                              mov esi, 8	        64	stdio2.h	FUNCTION_146	CALL_1
0x4004fea	      0xbf00000000	                              mov edi, 0	        64	stdio2.h	FUNCTION_146	CALL_1
0x4004fef	      0xb800000000	                              mov eax, 0	        64	stdio2.h	FUNCTION_146	CALL_1
0x4004ff4	      0xe800000000	                          call 0x4004ff9	        64	stdio2.h	FUNCTION_146	CALL_1
0x4004ff9	            0xeb24	                           jmp 0x400501f	        64	stdio2.h	FUNCTION_146	CALL_1
0x4004ffb	    0x41b800000000	                              mov r8d, 0	        64	stdio2.h	FUNCTION_146	CALL_1
0x4005001	      0xb908000000	                              mov ecx, 8	        64	stdio2.h	FUNCTION_146	CALL_1
0x4005006	      0xba01000000	                              mov edx, 1	        64	stdio2.h	FUNCTION_146	CALL_1
0x400500b	      0xbe08000000	                              mov esi, 8	        64	stdio2.h	FUNCTION_146	CALL_1
0x4005010	      0xbf00000000	                              mov edi, 0	        64	stdio2.h	FUNCTION_146	CALL_1
0x4005015	      0xb800000000	                              mov eax, 0	        64	stdio2.h	FUNCTION_146	CALL_1
0x400501a	      0xe800000000	                          call 0x400501f	        64	stdio2.h	FUNCTION_146	CALL_1
0x400501f	      0xb800000000	                              mov eax, 0	     10155	tc-i386.c	FUNCTION_119
0x4005024	        0x4883c408	                              add rsp, 8	     10155	tc-i386.c	FUNCTION_119
0x4005028	              0xc3	                                     ret	     10155	tc-i386.c	FUNCTION_119
i386_validate_fix	functions,0:ELSE,4:FOR,0:CALL,1:SWITCH,0:WHILE,0:IF,8:DO,0	40
0x4010789	        0x488b4720	            mov rax, qword [rdi + 0x20] 	     11251	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3
0x401078d	          0x4885c0	                           test rax, rax	     11251	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3
0x4010790	            0x7472	                            je 0x4010804	     11251	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3
0x4010792	    0x483b05000000	            cmp rax, qword [0x04010799] 	     11253	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2
0x4010799	     0xf8583000000	                           jne 0x4010822	     11253	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2
0x401079f	        0x837f5009	               cmp dword [rdi + 0x50], 9	     11255	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2	IF_6
0x40107a3	            0x7542	                           jne 0x40107e7	     11255	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2	IF_6
0x40107a5	    0x833d00000000	               cmp dword [0x040107ac], 0	     11257	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2	ELSE_3
0x40107ac	            0x7518	                           jne 0x40107c6	     11257	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2	ELSE_3
0x40107ae	        0x4883ec08	                              sub rsp, 8	     11250	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3	ELSE_1
0x40107b2	      0xba00000000	                              mov edx, 0	     11258	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2	ELSE_3
0x40107b7	      0xbefa2b0000	                         mov esi, 0x2bfa	     11258	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2	ELSE_3
0x40107bc	      0xbf00000000	                              mov edi, 0	     11258	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2	ELSE_3
0x40107c1	      0xe800000000	                          call 0x40107c6	     11258	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_2	ELSE_3
0x40107c6	           0xfb607	                   movzx eax, byte [rdi]	     11260	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_3
0x40107c9	            0xa810	                           test al, 0x10	     11260	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_3
0x40107cb	            0x7411	                            je 0x40107de	     11260	tc-i386.c	FUNCTION_133	IF_1	IF_2	ELSE_3
0x40107cd	          0x83e008	                              and eax, 8	     11261	tc-i386.c	FUNCTION_133	IF_1	ELSE_3
0x40107d0	            0x3c01	                               cmp al, 1	     11261	tc-i386.c	FUNCTION_133	IF_1	ELSE_3
0x40107d2	            0x19c0	                            sbb eax, eax	     11261	tc-i386.c	FUNCTION_133	IF_1	ELSE_3
0x40107d4	       0x59b010000	                          add eax, 0x19b	     11261	tc-i386.c	FUNCTION_133	IF_1	ELSE_3
0x40107d9	          0x894750	             mov dword [rdi + 0x50], eax	     11261	tc-i386.c	FUNCTION_133	IF_1	ELSE_3
0x40107dc	            0xeb1d	                           jmp 0x40107fb	     11261	tc-i386.c	FUNCTION_133	IF_1	ELSE_3
0x40107de	    0xc74750830100	          mov dword [rdi + 0x50], 0x183 	     11266	tc-i386.c	FUNCTION_133	ELSE_3	ELSE_4	IF_7	IF_8
0x40107e5	            0xeb14	                           jmp 0x40107fb	     11266	tc-i386.c	FUNCTION_133	ELSE_3	ELSE_4	IF_7	IF_8
0x40107e7	    0x833d00000000	               cmp dword [0x040107ee], 1	     11271	tc-i386.c	
0x40107ee	            0x19c0	                            sbb eax, eax	     11271	tc-i386.c	
0x40107f0	          0x83e0dd	                     and eax, 0xffffffdd	     11271	tc-i386.c	
0x40107f3	       0x58d010000	                          add eax, 0x18d	     11271	tc-i386.c	
0x40107f8	          0x894750	             mov dword [rdi + 0x50], eax	     11271	tc-i386.c	
0x40107fb	    0x48c747200000	               mov qword [rdi + 0x20], 0	     11275	tc-i386.c	FUNCTION_134
0x4010803	              0xc3	                                     ret	     11275	tc-i386.c	FUNCTION_134
0x4010804	    0x833d00000000	               cmp dword [0x0401080b], 0	     11279	tc-i386.c	FUNCTION_134	SWITCH_1
0x401080b	            0x7515	                           jne 0x4010822	     11279	tc-i386.c	FUNCTION_134	SWITCH_1
0x401080d	    0x817f50640100	          cmp dword [rdi + 0x50], 0x164 	     11281	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010814	            0x750c	                           jne 0x4010822	     11281	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010816	          0xf60710	                   test byte [rdi], 0x10	     11282	tc-i386.c	FUNCTION_134	SWITCH_1
0x4010819	            0x7407	                            je 0x4010822	     11282	tc-i386.c	FUNCTION_134	SWITCH_1
0x401081b	    0xc747507c0100	          mov dword [rdi + 0x50], 0x17c 	     11283	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	CALL_1
0x4010822	            0xf3c3	                                     ret	     11283	tc-i386.c	FUNCTION_134	SWITCH_1	IF_1	CALL_1
RC_SAE_immediate	functions,0:ELSE,1:FOR,1:CALL,8:SWITCH,0:WHILE,0:IF,6:DO,0	93
0x4002c31	            0x4157	                                push r15	      9236	tc-i386.c	FUNCTION_110
0x4002c33	            0x4156	                                push r14	      9236	tc-i386.c	FUNCTION_110
0x4002c35	            0x4155	                                push r13	      9236	tc-i386.c	FUNCTION_110
0x4002c37	            0x4154	                                push r12	      9236	tc-i386.c	FUNCTION_110
0x4002c39	              0x55	                                push rbp	      9236	tc-i386.c	FUNCTION_110
0x4002c3a	              0x53	                                push rbx	      9236	tc-i386.c	FUNCTION_110
0x4002c3b	        0x4883ec08	                              sub rsp, 8	      9236	tc-i386.c	FUNCTION_110
0x4002c3f	    0x41bc00000000	                             mov r12d, 0	      9242	tc-i386.c	FUNCTION_110	IF_1
0x4002c45	          0x803f7b	                    cmp byte [rdi], 0x7b	      9241	tc-i386.c	FUNCTION_110	IF_1
0x4002c48	     0xf8562010000	                           jne 0x4002db0	      9241	tc-i386.c	FUNCTION_110	IF_1
0x4002c4e	          0x4989fe	                            mov r14, rdi	      9241	tc-i386.c	FUNCTION_110	IF_1
0x4002c51	        0x4c8d7f01	                      lea r15, [rdi + 1]	      9244	tc-i386.c	FUNCTION_110
0x4002c55	      0xbb00000000	                              mov ebx, 0	      9244	tc-i386.c	FUNCTION_110
0x4002c5a	      0xbd00000000	                              mov ebp, 0	      9246	tc-i386.c	FUNCTION_110	FOR_1	CALL_1
0x4002c5f	        0x448b6b10	           mov r13d, dword [rbx + 0x10] 	      9248	tc-i386.c	FUNCTION_110	FOR_1	IF_2	CALL_2
0x4002c63	        0x488b7308	                mov rsi, qword [rbx + 8]	      9248	tc-i386.c	FUNCTION_110	FOR_1	IF_2	CALL_2
0x4002c67	          0x4c89ea	                            mov rdx, r13	      9248	tc-i386.c	FUNCTION_110	FOR_1	IF_2	CALL_2
0x4002c6a	          0x4c89ff	                            mov rdi, r15	      9248	tc-i386.c	FUNCTION_110	FOR_1	IF_2	CALL_2
0x4002c6d	      0xe800000000	                          call 0x4002c72	      9248	tc-i386.c	FUNCTION_110	FOR_1	IF_2	CALL_2
0x4002c72	          0x4189c4	                           mov r12d, eax	      9248	tc-i386.c	FUNCTION_110	FOR_1	IF_2	CALL_2
0x4002c75	            0x85c0	                           test eax, eax	      9248	tc-i386.c	FUNCTION_110	FOR_1	IF_2	CALL_2
0x4002c77	            0x756a	                           jne 0x4002ce3	      9248	tc-i386.c	FUNCTION_110	FOR_1	IF_2	CALL_2
0x4002c79	    0x48833d000000	               cmp qword [0x04002c81], 0	      9250	tc-i386.c	FUNCTION_110	FOR_1	IF_2	IF_3
0x4002c81	            0x7537	                           jne 0x4002cba	      9250	tc-i386.c	FUNCTION_110	FOR_1	IF_2	IF_3
0x4002c83	            0x89ed	                            mov ebp, ebp	      9252	tc-i386.c	FUNCTION_110	FOR_1	IF_2	IF_3
0x4002c85	      0x488d446d00	                  lea rax, [rbp + rbp*2]	      9252	tc-i386.c	FUNCTION_110	FOR_1	IF_2	IF_3
0x4002c8a	    0x8b04c5000000	                  mov eax, dword [rax*8]	      9252	tc-i386.c	FUNCTION_110	FOR_1	IF_2	IF_3
0x4002c91	    0x890500000000	            mov dword [0x04002c97], eax 	      9252	tc-i386.c	FUNCTION_110	FOR_1	IF_2	IF_3
0x4002c97	    0x8b0500000000	            mov eax, dword [0x04002c9d] 	      9253	tc-i386.c	FUNCTION_110	FOR_1	IF_2	IF_3
0x4002c9d	    0x890500000000	            mov dword [0x04002ca3], eax 	      9253	tc-i386.c	FUNCTION_110	FOR_1	IF_2	IF_3
0x4002ca3	    0x48c705000000	               mov qword [0x04002cae], 0	      9254	tc-i386.c	FUNCTION_110	FOR_1	IF_2	IF_3
0x4002cae	          0x4d01fd	                            add r13, r15	      9261	tc-i386.c	FUNCTION_110	FOR_1	IF_2
0x4002cb1	      0x41807d007d	                    cmp byte [r13], 0x7d	      9269	tc-i386.c	FUNCTION_110	IF_5
0x4002cb6	            0x746f	                            je 0x4002d27	      9269	tc-i386.c	FUNCTION_110	IF_5
0x4002cb8	            0xeb44	                           jmp 0x4002cfe	      9269	tc-i386.c	FUNCTION_110	IF_5
0x4002cba	      0xba05000000	                              mov edx, 5	      9258	tc-i386.c	FUNCTION_110	FOR_1	IF_2	ELSE_1	CALL_4
0x4002cbf	      0xbe00000000	                              mov esi, 0	      9258	tc-i386.c	FUNCTION_110	FOR_1	IF_2	ELSE_1	CALL_4
0x4002cc4	      0xbf00000000	                              mov edi, 0	      9258	tc-i386.c	FUNCTION_110	FOR_1	IF_2	ELSE_1	CALL_4
0x4002cc9	      0xe800000000	                          call 0x4002cce	      9258	tc-i386.c	FUNCTION_110	FOR_1	IF_2	ELSE_1	CALL_4
0x4002cce	          0x4c89f6	                            mov rsi, r14	      9258	tc-i386.c	FUNCTION_110	FOR_1	IF_2	ELSE_1	CALL_4
0x4002cd1	          0x4889c7	                            mov rdi, rax	      9258	tc-i386.c	FUNCTION_110	FOR_1	IF_2	ELSE_1	CALL_4
0x4002cd4	      0xb800000000	                              mov eax, 0	      9258	tc-i386.c	FUNCTION_110	FOR_1	IF_2	ELSE_1	CALL_4
0x4002cd9	      0xe800000000	                          call 0x4002cde	      9258	tc-i386.c	FUNCTION_110	FOR_1	IF_2	ELSE_1	CALL_4
0x4002cde	      0xe9cd000000	                           jmp 0x4002db0	      9259	tc-i386.c	FUNCTION_110	FOR_1	IF_2	ELSE_1
0x4002ce3	          0x83c501	                              add ebp, 1	      9246	tc-i386.c	FUNCTION_110	FOR_1	CALL_1
0x4002ce6	        0x4883c318	                           add rbx, 0x18	      9246	tc-i386.c	FUNCTION_110	FOR_1	CALL_1
0x4002cea	          0x83fd05	                              cmp ebp, 5	      9246	tc-i386.c	FUNCTION_110	FOR_1	CALL_1
0x4002ced	     0xf856cffffff	                           jne 0x4002c5f	      9246	tc-i386.c	FUNCTION_110	FOR_1	CALL_1
0x4002cf3	    0x41bc00000000	                             mov r12d, 0	      9267	tc-i386.c	FUNCTION_110	IF_4
0x4002cf9	      0xe9b2000000	                           jmp 0x4002db0	      9267	tc-i386.c	FUNCTION_110	IF_4
0x4002cfe	      0xba05000000	                              mov edx, 5	      9271	tc-i386.c	FUNCTION_110	IF_5	CALL_6
0x4002d03	      0xbe00000000	                              mov esi, 0	      9271	tc-i386.c	FUNCTION_110	IF_5	CALL_6
0x4002d08	      0xbf00000000	                              mov edi, 0	      9271	tc-i386.c	FUNCTION_110	IF_5	CALL_6
0x4002d0d	      0xe800000000	                          call 0x4002d12	      9271	tc-i386.c	FUNCTION_110	IF_5	CALL_6
0x4002d12	          0x4c89f6	                            mov rsi, r14	      9271	tc-i386.c	FUNCTION_110	IF_5	CALL_6
0x4002d15	          0x4889c7	                            mov rdi, rax	      9271	tc-i386.c	FUNCTION_110	IF_5	CALL_6
0x4002d18	      0xb800000000	                              mov eax, 0	      9271	tc-i386.c	FUNCTION_110	IF_5	CALL_6
0x4002d1d	      0xe800000000	                          call 0x4002d22	      9271	tc-i386.c	FUNCTION_110	IF_5	CALL_6
0x4002d22	      0xe989000000	                           jmp 0x4002db0	      9272	tc-i386.c	FUNCTION_110	IF_5
0x4002d27	      0x41807d0100	                   cmp byte [r13 + 1], 0	      9275	tc-i386.c	FUNCTION_110	IF_6
0x4002d2c	            0x7426	                            je 0x4002d54	      9275	tc-i386.c	FUNCTION_110	IF_6
0x4002d2e	      0xba05000000	                              mov edx, 5	      9277	tc-i386.c	FUNCTION_110	IF_6	CALL_8
0x4002d33	      0xbe00000000	                              mov esi, 0	      9277	tc-i386.c	FUNCTION_110	IF_6	CALL_8
0x4002d38	      0xbf00000000	                              mov edi, 0	      9277	tc-i386.c	FUNCTION_110	IF_6	CALL_8
0x4002d3d	      0xe800000000	                          call 0x4002d42	      9277	tc-i386.c	FUNCTION_110	IF_6	CALL_8
0x4002d42	          0x4c89f6	                            mov rsi, r14	      9277	tc-i386.c	FUNCTION_110	IF_6	CALL_8
0x4002d45	          0x4889c7	                            mov rdi, rax	      9277	tc-i386.c	FUNCTION_110	IF_6	CALL_8
0x4002d48	      0xb800000000	                              mov eax, 0	      9277	tc-i386.c	FUNCTION_110	IF_6	CALL_8
0x4002d4d	      0xe800000000	                          call 0x4002d52	      9277	tc-i386.c	FUNCTION_110	IF_6	CALL_8
0x4002d52	            0xeb5c	                           jmp 0x4002db0	      9278	tc-i386.c	FUNCTION_110	IF_6
0x4002d54	    0x8b1500000000	            mov edx, dword [0x04002d5a] 	      9281	tc-i386.c	FUNCTION_110
0x4002d5a	          0x8d4a01	                      lea ecx, [rdx + 1]	      9281	tc-i386.c	FUNCTION_110
0x4002d5d	    0x890d00000000	            mov dword [0x04002d63], ecx 	      9281	tc-i386.c	FUNCTION_110
0x4002d63	            0x4898	                                    cdqe	      9282	tc-i386.c	FUNCTION_110
0x4002d65	            0x89d2	                            mov edx, edx	      9281	tc-i386.c	FUNCTION_110
0x4002d67	        0x48c1e205	                              shl rdx, 5	      9281	tc-i386.c	FUNCTION_110
0x4002d6b	    0x488d8a000000	                          lea rcx, [rdx]	      9281	tc-i386.c	FUNCTION_110
0x4002d72	    0x48890cc50000	                  mov qword [rax*8], rcx	      9281	tc-i386.c	FUNCTION_110
0x4002d7a	    0xc68200000000	                       mov byte [rdx], 2	      9284	tc-i386.c	FUNCTION_110
0x4002d81	    0x48c782000000	                      mov qword [rdx], 0	      9285	tc-i386.c	FUNCTION_110
0x4002d8c	    0x48c782000000	                      mov qword [rdx], 0	      9286	tc-i386.c	FUNCTION_110
0x4002d97	    0x48c782000000	                      mov qword [rdx], 0	      9287	tc-i386.c	FUNCTION_110
0x4002da2	    0x800cc5000000	                      or byte [rax*8], 4	      9289	tc-i386.c	FUNCTION_110
0x4002daa	    0x41bc01000000	                             mov r12d, 1	      9290	tc-i386.c	FUNCTION_110
0x4002db0	          0x4489e0	                           mov eax, r12d	      9291	tc-i386.c	FUNCTION_110
0x4002db3	        0x4883c408	                              add rsp, 8	      9291	tc-i386.c	FUNCTION_110
0x4002db7	              0x5b	                                 pop rbx	      9291	tc-i386.c	FUNCTION_110
0x4002db8	              0x5d	                                 pop rbp	      9291	tc-i386.c	FUNCTION_110
0x4002db9	            0x415c	                                 pop r12	      9291	tc-i386.c	FUNCTION_110
0x4002dbb	            0x415d	                                 pop r13	      9291	tc-i386.c	FUNCTION_110
0x4002dbd	            0x415e	                                 pop r14	      9291	tc-i386.c	FUNCTION_110
0x4002dbf	            0x415f	                                 pop r15	      9291	tc-i386.c	FUNCTION_110
0x4002dc1	              0xc3	                                     ret	      9291	tc-i386.c	FUNCTION_110
md_begin	functions,0:ELSE,5:FOR,3:CALL,17:SWITCH,0:WHILE,1:IF,11:DO,0	144
0x400b5f2	            0x4154	                                push r12	      2780	tc-i386.c	FUNCTION_52
0x400b5f4	              0x55	                                push rbp	      2780	tc-i386.c	FUNCTION_52
0x400b5f5	              0x53	                                push rbx	      2780	tc-i386.c	FUNCTION_52
0x400b5f6	    0xc60500000000	                mov byte [0x0400b5fd], 2	      2784	tc-i386.c	FUNCTION_52
0x400b5fd	      0xe800000000	                          call 0x400b602	      2787	tc-i386.c	FUNCTION_52	CALL_1
0x400b602	    0x488905000000	            mov qword [0x0400b609], rax 	      2787	tc-i386.c	FUNCTION_52	CALL_1
0x400b609	      0xbf10000000	                           mov edi, 0x10	      2795	tc-i386.c	FUNCTION_52	CALL_2
0x400b60e	      0xe800000000	                          call 0x400b613	      2795	tc-i386.c	FUNCTION_52	CALL_2
0x400b613	          0x4889c5	                            mov rbp, rax	      2795	tc-i386.c	FUNCTION_52	CALL_2
0x400b616	    0x48c700000000	                      mov qword [rax], 0	      2796	tc-i386.c	FUNCTION_52
0x400b61d	      0xbb00000000	                              mov ebx, 0	      2794	tc-i386.c	FUNCTION_52
0x400b622	        0x4883c360	                           add rbx, 0x60	      2800	tc-i386.c	FUNCTION_52	WHILE_1
0x400b626	          0x488b3b	                    mov rdi, qword [rbx]	      2801	tc-i386.c	FUNCTION_52	WHILE_1	IF_1
0x400b629	          0x4885ff	                           test rdi, rdi	      2801	tc-i386.c	FUNCTION_52	WHILE_1	IF_1
0x400b62c	            0x740d	                            je 0x400b63b	      2801	tc-i386.c	FUNCTION_52	WHILE_1	IF_1
0x400b62e	        0x488b73a0	             mov rsi, qword [rbx - 0x60]	      2802	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_3
0x400b632	      0xe800000000	                          call 0x400b637	      2802	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_3
0x400b637	            0x85c0	                           test eax, eax	      2802	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_3
0x400b639	            0x74e7	                            je 0x400b622	      2802	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_3
0x400b63b	        0x48895d08	                mov qword [rbp + 8], rbx	      2806	tc-i386.c	FUNCTION_52	WHILE_1	IF_1
0x400b63f	        0x488b73a0	             mov rsi, qword [rbx - 0x60]	      2807	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_4
0x400b643	          0x4889ea	                            mov rdx, rbp	      2807	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_4
0x400b646	    0x488b3d000000	            mov rdi, qword [0x0400b64d] 	      2807	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_4
0x400b64d	      0xe800000000	                          call 0x400b652	      2807	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_4
0x400b652	          0x4889c5	                            mov rbp, rax	      2807	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_4
0x400b655	          0x4885c0	                           test rax, rax	      2810	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_2
0x400b658	            0x742b	                            je 0x400b685	      2810	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_2
0x400b65a	        0x488b5ba0	             mov rbx, qword [rbx - 0x60]	      2812	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_2	CALL_6
0x400b65e	      0xba05000000	                              mov edx, 5	      2812	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_2	CALL_6
0x400b663	      0xbe00000000	                              mov esi, 0	      2812	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_2	CALL_6
0x400b668	      0xbf00000000	                              mov edi, 0	      2812	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_2	CALL_6
0x400b66d	      0xe800000000	                          call 0x400b672	      2812	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_2	CALL_6
0x400b672	          0x4889ea	                            mov rdx, rbp	      2812	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_2	CALL_6
0x400b675	          0x4889de	                            mov rsi, rbx	      2812	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_2	CALL_6
0x400b678	          0x4889c7	                            mov rdi, rax	      2812	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_2	CALL_6
0x400b67b	      0xb800000000	                              mov eax, 0	      2812	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_2	CALL_6
0x400b680	      0xe800000000	                          call 0x400b685	      2812	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_2	CALL_6
0x400b685	        0x48833b00	                      cmp qword [rbx], 0	      2816	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_3
0x400b689	            0x7412	                            je 0x400b69d	      2816	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	IF_3
0x400b68b	      0xbf10000000	                           mov edi, 0x10	      2818	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_7
0x400b690	      0xe800000000	                          call 0x400b695	      2818	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_7
0x400b695	          0x4889c5	                            mov rbp, rax	      2818	tc-i386.c	FUNCTION_52	WHILE_1	IF_1	CALL_7
0x400b698	          0x488918	                    mov qword [rax], rbx	      2819	tc-i386.c	FUNCTION_52	WHILE_1	IF_1
0x400b69b	            0xeb85	                           jmp 0x400b622	      2819	tc-i386.c	FUNCTION_52	WHILE_1	IF_1
0x400b69d	      0xe800000000	                          call 0x400b6a2	      2825	tc-i386.c	FUNCTION_52	CALL_8
0x400b6a2	    0x488905000000	            mov qword [0x0400b6a9], rax 	      2825	tc-i386.c	FUNCTION_52	CALL_8
0x400b6a9	    0x8b1500000000	            mov edx, dword [0x0400b6af] 	      2828	tc-i386.c	FUNCTION_52
0x400b6af	          0x8d42ff	                      lea eax, [rdx - 1]	      2830	tc-i386.c	FUNCTION_52	FOR_1
0x400b6b2	            0x85d2	                           test edx, edx	      2830	tc-i386.c	FUNCTION_52	FOR_1
0x400b6b4	            0x7461	                            je 0x400b717	      2830	tc-i386.c	FUNCTION_52	FOR_1
0x400b6b6	            0x89c0	                            mov eax, eax	      2830	tc-i386.c	FUNCTION_52	FOR_1
0x400b6b8	      0x488d444003	              lea rax, [rax + rax*2 + 3]	      2830	tc-i386.c	FUNCTION_52	FOR_1
0x400b6bd	    0x4c8d24c50000	                        lea r12, [rax*8]	      2830	tc-i386.c	FUNCTION_52	FOR_1
0x400b6c5	      0xbb00000000	                              mov ebx, 0	      2830	tc-i386.c	FUNCTION_52	FOR_1
0x400b6ca	          0x4889da	                            mov rdx, rbx	      2832	tc-i386.c	FUNCTION_52	FOR_1	CALL_9
0x400b6cd	          0x488b33	                    mov rsi, qword [rbx]	      2832	tc-i386.c	FUNCTION_52	FOR_1	CALL_9
0x400b6d0	    0x488b3d000000	            mov rdi, qword [0x0400b6d7] 	      2832	tc-i386.c	FUNCTION_52	FOR_1	CALL_9
0x400b6d7	      0xe800000000	                          call 0x400b6dc	      2832	tc-i386.c	FUNCTION_52	FOR_1	CALL_9
0x400b6dc	          0x4889c5	                            mov rbp, rax	      2832	tc-i386.c	FUNCTION_52	FOR_1	CALL_9
0x400b6df	          0x4885c0	                           test rax, rax	      2833	tc-i386.c	FUNCTION_52	FOR_1	IF_4
0x400b6e2	            0x742a	                            je 0x400b70e	      2833	tc-i386.c	FUNCTION_52	FOR_1	IF_4
0x400b6e4	          0x488b1b	                    mov rbx, qword [rbx]	      2834	tc-i386.c	FUNCTION_52	FOR_1	IF_4	CALL_11
0x400b6e7	      0xba05000000	                              mov edx, 5	      2834	tc-i386.c	FUNCTION_52	FOR_1	IF_4	CALL_11
0x400b6ec	      0xbe00000000	                              mov esi, 0	      2834	tc-i386.c	FUNCTION_52	FOR_1	IF_4	CALL_11
0x400b6f1	      0xbf00000000	                              mov edi, 0	      2834	tc-i386.c	FUNCTION_52	FOR_1	IF_4	CALL_11
0x400b6f6	      0xe800000000	                          call 0x400b6fb	      2834	tc-i386.c	FUNCTION_52	FOR_1	IF_4	CALL_11
0x400b6fb	          0x4889ea	                            mov rdx, rbp	      2834	tc-i386.c	FUNCTION_52	FOR_1	IF_4	CALL_11
0x400b6fe	          0x4889de	                            mov rsi, rbx	      2834	tc-i386.c	FUNCTION_52	FOR_1	IF_4	CALL_11
0x400b701	          0x4889c7	                            mov rdi, rax	      2834	tc-i386.c	FUNCTION_52	FOR_1	IF_4	CALL_11
0x400b704	      0xb800000000	                              mov eax, 0	      2834	tc-i386.c	FUNCTION_52	FOR_1	IF_4	CALL_11
0x400b709	      0xe800000000	                          call 0x400b70e	      2834	tc-i386.c	FUNCTION_52	FOR_1	IF_4	CALL_11
0x400b70e	        0x4883c318	                           add rbx, 0x18	      2830	tc-i386.c	FUNCTION_52	FOR_1
0x400b712	          0x4939dc	                            cmp r12, rbx	      2830	tc-i386.c	FUNCTION_52	FOR_1
0x400b715	            0x75b3	                           jne 0x400b6ca	      2830	tc-i386.c	FUNCTION_52	FOR_1
0x400b717	      0xba00000000	                              mov edx, 0	      2830	tc-i386.c	FUNCTION_52	FOR_1
0x400b71c	      0xb800000000	                              mov eax, 0	      2830	tc-i386.c	FUNCTION_52	FOR_1
0x400b721	           0xfb6f0	                           movzx esi, al	      2847	tc-i386.c	FUNCTION_52	FOR_2	IF_5	CALL_12
0x400b724	          0x4863ce	                         movsxd rcx, esi	      2847	tc-i386.c	FUNCTION_52	FOR_2	IF_5	CALL_12
0x400b727	     0xfb78c090000	             movzx ecx, word [rcx + rcx]	      2847	tc-i386.c	FUNCTION_52	FOR_2	IF_5	CALL_12
0x400b72f	          0xf6c104	                              test cl, 4	      2847	tc-i386.c	FUNCTION_52	FOR_2	IF_5	CALL_12
0x400b732	            0x741a	                            je 0x400b74e	      2847	tc-i386.c	FUNCTION_52	FOR_2	IF_5	CALL_12
0x400b734	    0x888200000000	                      mov byte [rdx], al	      2849	tc-i386.c	FUNCTION_52	FOR_2	IF_5
0x400b73a	    0x888200000000	                      mov byte [rdx], al	      2850	tc-i386.c	FUNCTION_52	FOR_2	IF_5
0x400b740	    0x888200000000	                      mov byte [rdx], al	      2851	tc-i386.c	FUNCTION_52	FOR_2	IF_5
0x400b746	    0x888200000000	                      mov byte [rdx], al	      2852	tc-i386.c	FUNCTION_52	FOR_2	IF_5
0x400b74c	            0xeb55	                           jmp 0x400b7a3	      2852	tc-i386.c	FUNCTION_52	FOR_2	IF_5
0x400b74e	          0xf6c108	                              test cl, 8	      2854	tc-i386.c	FUNCTION_52	FOR_2	ELSE_1	IF_6	CALL_13
0x400b751	            0x7414	                            je 0x400b767	      2854	tc-i386.c	FUNCTION_52	FOR_2	ELSE_1	IF_6	CALL_13
0x400b753	    0x888200000000	                      mov byte [rdx], al	      2856	tc-i386.c	FUNCTION_52	FOR_2	ELSE_1	IF_6
0x400b759	    0x888200000000	                      mov byte [rdx], al	      2857	tc-i386.c	FUNCTION_52	FOR_2	ELSE_1	IF_6
0x400b75f	    0x888200000000	                      mov byte [rdx], al	      2858	tc-i386.c	FUNCTION_52	FOR_2	ELSE_1	IF_6
0x400b765	            0xeb3c	                           jmp 0x400b7a3	      2858	tc-i386.c	FUNCTION_52	FOR_2	ELSE_1	IF_6
0x400b767	          0xf6c180	                           test cl, 0x80	      2860	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7	CALL_14
0x400b76a	            0x7420	                            je 0x400b78c	      2860	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7	CALL_14
0x400b76c	          0x4863f6	                         movsxd rsi, esi	      2862	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7	CALL_15
0x400b76f	     0xfb6b6000000	                   movzx esi, byte [rsi]	      2862	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7	CALL_15
0x400b776	    0x4088b2000000	                     mov byte [rdx], sil	      2862	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7	CALL_15
0x400b77d	    0x4088b2000000	                     mov byte [rdx], sil	      2863	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7
0x400b784	    0x888200000000	                      mov byte [rdx], al	      2864	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7
0x400b78a	            0xeb17	                           jmp 0x400b7a3	      2864	tc-i386.c	FUNCTION_52	FOR_2	ELSE_2	IF_7
0x400b78c	          0x8d7085	                   lea esi, [rax - 0x7b]	      2866	tc-i386.c	FUNCTION_52	FOR_2	ELSE_3	IF_8
0x400b78f	    0xf7c6fdffffff	                    test esi, 0xfffffffd	      2866	tc-i386.c	FUNCTION_52	FOR_2	ELSE_3	IF_8
0x400b795	            0x750c	                           jne 0x400b7a3	      2866	tc-i386.c	FUNCTION_52	FOR_2	ELSE_3	IF_8
0x400b797	    0x888200000000	                      mov byte [rdx], al	      2868	tc-i386.c	FUNCTION_52	FOR_2	ELSE_3	IF_8
0x400b79d	    0x888200000000	                      mov byte [rdx], al	      2869	tc-i386.c	FUNCTION_52	FOR_2	ELSE_3	IF_8
0x400b7a3	          0xf6c18c	                           test cl, 0x8c	      2872	tc-i386.c	FUNCTION_52	FOR_2	IF_9	CALL_17
0x400b7a6	            0x7408	                            je 0x400b7b0	      2872	tc-i386.c	FUNCTION_52	FOR_2	IF_9	CALL_17
0x400b7a8	    0x888200000000	                      mov byte [rdx], al	      2873	tc-i386.c	FUNCTION_52	FOR_2	IF_9
0x400b7ae	            0xeb11	                           jmp 0x400b7c1	      2873	tc-i386.c	FUNCTION_52	FOR_2	IF_9
0x400b7b0	          0x83f87f	                           cmp eax, 0x7f	      2874	tc-i386.c	FUNCTION_52	FOR_2	ELSE_4	IF_10
0x400b7b3	            0x7e0c	                           jle 0x400b7c1	      2874	tc-i386.c	FUNCTION_52	FOR_2	ELSE_4	IF_10
0x400b7b5	    0x888200000000	                      mov byte [rdx], al	      2876	tc-i386.c	FUNCTION_52	FOR_2	ELSE_4	IF_10
0x400b7bb	    0x888200000000	                      mov byte [rdx], al	      2877	tc-i386.c	FUNCTION_52	FOR_2	ELSE_4	IF_10
0x400b7c1	          0x83c001	                              add eax, 1	      2845	tc-i386.c	FUNCTION_52	FOR_2
0x400b7c4	        0x4883c201	                              add rdx, 1	      2845	tc-i386.c	FUNCTION_52	FOR_2
0x400b7c8	      0x3d00010000	                          cmp eax, 0x100	      2845	tc-i386.c	FUNCTION_52	FOR_2
0x400b7cd	     0xf854effffff	                           jne 0x400b721	      2845	tc-i386.c	FUNCTION_52	FOR_2
0x400b7d3	    0xc60500000000	            mov byte [0x0400b7da], 0x2d 	      2888	tc-i386.c	FUNCTION_52
0x400b7da	    0xc60500000000	            mov byte [0x0400b7e1], 0x5f 	      2889	tc-i386.c	FUNCTION_52
0x400b7e1	    0xc60500000000	            mov byte [0x0400b7e8], 0x2d 	      2890	tc-i386.c	FUNCTION_52
0x400b7e8	    0xc60500000000	            mov byte [0x0400b7ef], 0x2e 	      2891	tc-i386.c	FUNCTION_52
0x400b7ef	    0xc60500000000	            mov byte [0x0400b7f6], 0x5f 	      2892	tc-i386.c	FUNCTION_52
0x400b7f6	    0xc60500000000	            mov byte [0x0400b7fd], 0x2e 	      2893	tc-i386.c	FUNCTION_52
0x400b7fd	     0xfb605000000	           movzx eax, byte [0x0400b804] 	      2895	tc-i386.c	FUNCTION_52	FOR_3
0x400b804	            0x84c0	                             test al, al	      2895	tc-i386.c	FUNCTION_52	FOR_3
0x400b806	            0x7419	                            je 0x400b821	      2895	tc-i386.c	FUNCTION_52	FOR_3
0x400b808	      0xba00000000	                              mov edx, 0	      2895	tc-i386.c	FUNCTION_52	FOR_3
0x400b80d	           0xfb6c8	                           movzx ecx, al	      2896	tc-i386.c	FUNCTION_52	FOR_3
0x400b810	    0x888100000000	                      mov byte [rcx], al	      2896	tc-i386.c	FUNCTION_52	FOR_3
0x400b816	        0x4883c201	                              add rdx, 1	      2895	tc-i386.c	FUNCTION_52	FOR_3
0x400b81a	           0xfb602	                   movzx eax, byte [rdx]	      2895	tc-i386.c	FUNCTION_52	FOR_3
0x400b81d	            0x84c0	                             test al, al	      2895	tc-i386.c	FUNCTION_52	FOR_3
0x400b81f	            0x75ec	                           jne 0x400b80d	      2895	tc-i386.c	FUNCTION_52	FOR_3
0x400b821	    0x833d00000000	               cmp dword [0x0400b828], 2	      2899	tc-i386.c	FUNCTION_52	IF_11
0x400b828	            0x7516	                           jne 0x400b840	      2899	tc-i386.c	FUNCTION_52	IF_11
0x400b82a	    0xc70500000000	           mov dword [0x0400b834], 0x10 	      2905	tc-i386.c	FUNCTION_52	IF_11
0x400b834	    0xc70500000000	     mov dword [0x0400b83e], 0xfffffff8 	      2907	tc-i386.c	FUNCTION_52	IF_11
0x400b83e	            0xeb14	                           jmp 0x400b854	      2907	tc-i386.c	FUNCTION_52	IF_11
0x400b840	    0xc70500000000	               mov dword [0x0400b84a], 8	      2911	tc-i386.c	FUNCTION_52	ELSE_5
0x400b84a	    0xc70500000000	     mov dword [0x0400b854], 0xfffffffc 	      2912	tc-i386.c	FUNCTION_52	ELSE_5
0x400b854	              0x5b	                                 pop rbx	      2914	tc-i386.c	FUNCTION_52
0x400b855	              0x5d	                                 pop rbp	      2914	tc-i386.c	FUNCTION_52
0x400b856	            0x415c	                                 pop r12	      2914	tc-i386.c	FUNCTION_52
0x400b858	              0xc3	                                     ret	      2914	tc-i386.c	FUNCTION_52
md_operand	functions,0:ELSE,1:FOR,0:CALL,4:SWITCH,1:WHILE,0:IF,2:DO,0	61
0x400f011	              0x53	                                push rbx	     10349	tc-i386.c	FUNCTION_123
0x400f012	        0x4883ec10	                           sub rsp, 0x10	     10349	tc-i386.c	FUNCTION_123
0x400f016	          0x4889fb	                            mov rbx, rdi	     10349	tc-i386.c	FUNCTION_123
0x400f019	    0x64488b042528	                mov rax, qword fs:[0x28]	     10349	tc-i386.c	FUNCTION_123
0x400f022	      0x4889442408	                mov qword [rsp + 8], rax	     10349	tc-i386.c	FUNCTION_123
0x400f027	            0x31c0	                            xor eax, eax	     10349	tc-i386.c	FUNCTION_123
0x400f029	    0x488b3d000000	            mov rdi, qword [0x0400f030] 	     10353	tc-i386.c	FUNCTION_123	SWITCH_1
0x400f030	           0xfb607	                   movzx eax, byte [rdi]	     10353	tc-i386.c	FUNCTION_123	SWITCH_1
0x400f033	            0x3c25	                            cmp al, 0x25	     10353	tc-i386.c	FUNCTION_123	SWITCH_1
0x400f035	            0x7409	                            je 0x400f040	     10353	tc-i386.c	FUNCTION_123	SWITCH_1
0x400f037	            0x3c5b	                            cmp al, 0x5b	     10353	tc-i386.c	FUNCTION_123	SWITCH_1
0x400f039	            0x7446	                            je 0x400f081	     10353	tc-i386.c	FUNCTION_123	SWITCH_1
0x400f03b	      0xe9c6000000	                           jmp 0x400f106	     10353	tc-i386.c	FUNCTION_123	SWITCH_1
0x400f040	          0x4889e6	                            mov rsi, rsp	     10356	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_1
0x400f043	      0xe87a3dffff	            call sym.parse_real_register	     10356	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_1
0x400f048	          0x4885c0	                           test rax, rax	     10357	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x400f04b	     0xf84b5000000	                            je 0x400f106	     10357	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x400f051	        0xc6431805	                mov byte [rbx + 0x18], 5	     10359	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x400f055	    0x482d00000000	                              sub rax, 0	     10360	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x400f05b	        0x48c1f803	                              sar rax, 3	     10360	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x400f05f	    0x48baabaaaaaa	          movabs rdx, 0xaaaaaaaaaaaaaaab	     10360	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x400f069	        0x480fafc2	                           imul rax, rdx	     10360	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x400f06d	        0x48894310	             mov qword [rbx + 0x10], rax	     10360	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x400f071	        0x488b0424	                    mov rax, qword [rsp]	     10361	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x400f075	    0x488905000000	            mov qword [0x0400f07c], rax 	     10361	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x400f07c	      0xe985000000	                           jmp 0x400f106	     10361	tc-i386.c	FUNCTION_123	SWITCH_1	IF_1
0x400f081	    0x833d00000000	               cmp dword [0x0400f088], 0	     10366	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_2
0x400f088	            0x7514	                           jne 0x400f09e	     10366	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_2
0x400f08a	      0xba00000000	                              mov edx, 0	     10366	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_2
0x400f08f	      0xbe7e280000	                         mov esi, 0x287e	     10366	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_2
0x400f094	      0xbf00000000	                              mov edi, 0	     10366	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_2
0x400f099	      0xe800000000	                          call 0x400f09e	     10366	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_2
0x400f09e	        0x488d4701	                      lea rax, [rdi + 1]	     10367	tc-i386.c	FUNCTION_123	SWITCH_1
0x400f0a2	    0x488905000000	            mov qword [0x0400f0a9], rax 	     10367	tc-i386.c	FUNCTION_123	SWITCH_1
0x400f0a9	        0x48893c24	                    mov qword [rsp], rdi	     10367	tc-i386.c	FUNCTION_123	SWITCH_1
0x400f0ad	      0xba01000000	                              mov edx, 1	     10368	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_3
0x400f0b2	          0x4889de	                            mov rsi, rbx	     10368	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_3
0x400f0b5	      0xbf00000000	                              mov edi, 0	     10368	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_3
0x400f0ba	      0xe800000000	                          call 0x400f0bf	     10368	tc-i386.c	FUNCTION_123	SWITCH_1	CALL_3
0x400f0bf	    0x488b05000000	            mov rax, qword [0x0400f0c6] 	     10369	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2
0x400f0c6	          0x80385d	                    cmp byte [rax], 0x5d	     10369	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2
0x400f0c9	            0x752c	                           jne 0x400f0f7	     10369	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2
0x400f0cb	        0x4883c001	                              add rax, 1	     10371	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2
0x400f0cf	    0x488905000000	            mov qword [0x0400f0d6], rax 	     10371	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2
0x400f0d6	          0x4889df	                            mov rdi, rbx	     10372	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2	CALL_4
0x400f0d9	      0xe800000000	                          call 0x400f0de	     10372	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2	CALL_4
0x400f0de	        0x48894308	                mov qword [rbx + 8], rax	     10372	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2	CALL_4
0x400f0e2	    0x48c703000000	                      mov qword [rbx], 0	     10373	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2
0x400f0e9	    0x48c743100000	               mov qword [rbx + 0x10], 0	     10374	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2
0x400f0f1	        0xc643181d	            mov byte [rbx + 0x18], 0x1d 	     10375	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2
0x400f0f5	            0xeb0f	                           jmp 0x400f106	     10375	tc-i386.c	FUNCTION_123	SWITCH_1	IF_2
0x400f0f7	        0xc6431801	                mov byte [rbx + 0x18], 1	     10379	tc-i386.c	FUNCTION_123	SWITCH_1	ELSE_1
0x400f0fb	        0x488b0424	                    mov rax, qword [rsp]	     10380	tc-i386.c	FUNCTION_123	SWITCH_1	ELSE_1
0x400f0ff	    0x488905000000	            mov qword [0x0400f106], rax 	     10380	tc-i386.c	FUNCTION_123	SWITCH_1	ELSE_1
0x400f106	      0x488b442408	                mov rax, qword [rsp + 8]	     10384	tc-i386.c	FUNCTION_123
0x400f10b	    0x644833042528	                xor rax, qword fs:[0x28]	     10384	tc-i386.c	FUNCTION_123
0x400f114	            0x7405	                            je 0x400f11b	     10384	tc-i386.c	FUNCTION_123
0x400f116	      0xe800000000	                          call 0x400f11b	     10384	tc-i386.c	FUNCTION_123
0x400f11b	        0x4883c410	                           add rsp, 0x10	     10384	tc-i386.c	FUNCTION_123
0x400f11f	              0x5b	                                 pop rbx	     10384	tc-i386.c	FUNCTION_123
0x400f120	              0xc3	                                     ret	     10384	tc-i386.c	FUNCTION_123
need_plt32_p	functions,0:ELSE,0:FOR,0:CALL,3:SWITCH,0:WHILE,0:IF,4:DO,0	23
0x40060e0	      0xb800000000	                              mov eax, 0	      7433	tc-i386.c	FUNCTION_89	IF_2
0x40060e5	    0x833d00000000	               cmp dword [0x040060ec], 0	      7432	tc-i386.c	FUNCTION_89	IF_2
0x40060ec	            0x7438	                            je 0x4006126	      7432	tc-i386.c	FUNCTION_89	IF_2
0x40060ee	              0x53	                                push rbx	      7424	tc-i386.c	FUNCTION_89
0x40060ef	          0x4889fb	                            mov rbx, rdi	      7424	tc-i386.c	FUNCTION_89
0x40060f2	      0xe800000000	                          call 0x40060f7	      7436	tc-i386.c	FUNCTION_89	IF_3	CALL_2
0x40060f7	            0x89c2	                            mov edx, eax	      7436	tc-i386.c	FUNCTION_89	IF_3	CALL_2
0x40060f9	      0xb801000000	                              mov eax, 1	      7437	tc-i386.c	FUNCTION_89	IF_3
0x40060fe	            0x85d2	                           test edx, edx	      7436	tc-i386.c	FUNCTION_89	IF_3	CALL_2
0x4006100	            0x7523	                           jne 0x4006125	      7436	tc-i386.c	FUNCTION_89	IF_3	CALL_2
0x4006102	          0x4889df	                            mov rdi, rbx	      7436	tc-i386.c	FUNCTION_89	IF_3	CALL_2
0x4006105	      0xe800000000	                          call 0x400610a	      7436	tc-i386.c	FUNCTION_89	IF_3	CALL_2
0x400610a	            0x89c2	                            mov edx, eax	      7436	tc-i386.c	FUNCTION_89	IF_3	CALL_2
0x400610c	      0xb801000000	                              mov eax, 1	      7437	tc-i386.c	FUNCTION_89	IF_3
0x4006111	            0x85d2	                           test edx, edx	      7436	tc-i386.c	FUNCTION_89	IF_3	CALL_2
0x4006113	            0x7410	                            je 0x4006125	      7436	tc-i386.c	FUNCTION_89	IF_3	CALL_2
0x4006115	          0x4889df	                            mov rdi, rbx	      7440	tc-i386.c	FUNCTION_89	IF_4	CALL_3
0x4006118	      0xe800000000	                          call 0x400611d	      7440	tc-i386.c	FUNCTION_89	IF_4	CALL_3
0x400611d	            0x85c0	                           test eax, eax	      7447	tc-i386.c	FUNCTION_89
0x400611f	           0xf95c0	                                setne al	      7447	tc-i386.c	FUNCTION_89
0x4006122	           0xfb6c0	                           movzx eax, al	      7447	tc-i386.c	FUNCTION_89
0x4006125	              0x5b	                                 pop rbx	      7448	tc-i386.c	FUNCTION_89
0x4006126	            0xf3c3	                                     ret	      7448	tc-i386.c	FUNCTION_89
cpu_flags_match	functions,0:ELSE,3:FOR,0:CALL,4:SWITCH,0:WHILE,0:IF,7:DO,0	155
0x4000040	            0x4156	                                push r14	      1702	tc-i386.c	FUNCTION_16
0x4000042	            0x4155	                                push r13	      1702	tc-i386.c	FUNCTION_16
0x4000044	            0x4154	                                push r12	      1702	tc-i386.c	FUNCTION_16
0x4000046	              0x55	                                push rbp	      1702	tc-i386.c	FUNCTION_16
0x4000047	              0x53	                                push rbx	      1702	tc-i386.c	FUNCTION_16
0x4000048	        0x4883ec10	                           sub rsp, 0x10	      1702	tc-i386.c	FUNCTION_16
0x400004c	    0x64488b042528	                mov rax, qword fs:[0x28]	      1702	tc-i386.c	FUNCTION_16
0x4000055	      0x4889442408	                mov qword [rsp + 8], rax	      1702	tc-i386.c	FUNCTION_16
0x400005a	            0x31c0	                            xor eax, eax	      1702	tc-i386.c	FUNCTION_16
0x400005c	        0x4c8b5f18	            mov r11, qword [rdi + 0x18] 	      1703	tc-i386.c	FUNCTION_16
0x4000060	        0x488b7720	            mov rsi, qword [rdi + 0x20] 	      1703	tc-i386.c	FUNCTION_16
0x4000064	          0x8b4f18	            mov ecx, dword [rdi + 0x18] 	      1703	tc-i386.c	FUNCTION_16
0x4000067	        0x448b4720	            mov r8d, dword [rdi + 0x20] 	      1703	tc-i386.c	FUNCTION_16
0x400006b	          0x4889f0	                            mov rax, rsi	      1703	tc-i386.c	FUNCTION_16
0x400006e	        0x48c1e820	                           shr rax, 0x20	      1703	tc-i386.c	FUNCTION_16
0x4000072	    0x833d00000000	               cmp dword [0x04000079], 2	      1619	tc-i386.c	FUNCTION_12
0x4000079	     0xf85cf010000	                           jne 0x400024e	      1619	tc-i386.c	FUNCTION_12
0x400007f	          0x83e080	                     and eax, 0xffffff80	      1619	tc-i386.c	FUNCTION_12
0x4000082	            0x3c01	                               cmp al, 1	      1704	tc-i386.c	FUNCTION_16	CALL_1
0x4000084	            0x19c0	                            sbb eax, eax	      1704	tc-i386.c	FUNCTION_16	CALL_1
0x4000086	          0x83e002	                              and eax, 2	      1704	tc-i386.c	FUNCTION_16	CALL_1
0x4000089	    0x48baffffffff	          movabs rdx, 0xffffffbfffffffff	      1706	tc-i386.c	FUNCTION_16
0x4000093	          0x4821f2	                            and rdx, rsi	      1706	tc-i386.c	FUNCTION_16
0x4000096	    0x48beffffffff	          movabs rsi, 0xffffff7fffffffff	      1707	tc-i386.c	FUNCTION_16
0x40000a0	          0x4821f2	                            and rdx, rsi	      1707	tc-i386.c	FUNCTION_16
0x40000a3	          0x4989d4	                            mov r12, rdx	      1572	tc-i386.c	FUNCTION_10	SWITCH_1	IF_1
0x40000a6	        0x49c1ec20	                           shr r12, 0x20	      1572	tc-i386.c	FUNCTION_10	SWITCH_1	IF_1
0x40000aa	          0x4585c0	                           test r8d, r8d	      1576	tc-i386.c	FUNCTION_10	SWITCH_1	IF_2
0x40000ad	            0x751c	                           jne 0x40000cb	      1576	tc-i386.c	FUNCTION_10	SWITCH_1	IF_2
0x40000af	          0x4d85e4	                           test r12, r12	      1576	tc-i386.c	FUNCTION_10	SWITCH_1	IF_2
0x40000b2	            0x7517	                           jne 0x40000cb	      1576	tc-i386.c	FUNCTION_10	SWITCH_1	IF_2
0x40000b4	          0x4c89de	                            mov rsi, r11	      1580	tc-i386.c	FUNCTION_10	SWITCH_1	IF_3
0x40000b7	        0x48c1ee20	                           shr rsi, 0x20	      1580	tc-i386.c	FUNCTION_10	SWITCH_1	IF_3
0x40000bb	            0x85f6	                           test esi, esi	      1580	tc-i386.c	FUNCTION_10	SWITCH_1	IF_3
0x40000bd	            0x750c	                           jne 0x40000cb	      1580	tc-i386.c	FUNCTION_10	SWITCH_1	IF_3
0x40000bf	            0x85c9	                           test ecx, ecx	      1709	tc-i386.c	FUNCTION_16	IF_1	CALL_2
0x40000c1	            0x7508	                           jne 0x40000cb	      1709	tc-i386.c	FUNCTION_16	IF_1	CALL_2
0x40000c3	          0x83c801	                               or eax, 1	      1712	tc-i386.c	FUNCTION_16	IF_1
0x40000c6	      0xe971010000	                           jmp 0x400023c	      1712	tc-i386.c	FUNCTION_16	IF_1
0x40000cb	    0x8b3500000000	            mov esi, dword [0x040000d1] 	      1717	tc-i386.c	FUNCTION_16	ELSE_1
0x40000d1	    0x8b2d00000000	            mov ebp, dword [0x040000d7] 	      1717	tc-i386.c	FUNCTION_16	ELSE_1
0x40000d7	    0x8b1d00000000	            mov ebx, dword [0x040000dd] 	      1717	tc-i386.c	FUNCTION_16	ELSE_1
0x40000dd	    0x448b2d000000	           mov r13d, dword [0x040000e4] 	      1717	tc-i386.c	FUNCTION_16	ELSE_1
0x40000e4	          0x4d89de	                            mov r14, r11	      1720	tc-i386.c	FUNCTION_16	ELSE_1	IF_2
0x40000e7	        0x49c1ee20	                           shr r14, 0x20	      1720	tc-i386.c	FUNCTION_16	ELSE_1	IF_2
0x40000eb	        0x41f6c608	                            test r14b, 8	      1720	tc-i386.c	FUNCTION_16	ELSE_1	IF_2
0x40000ef	            0x7418	                            je 0x4000109	      1720	tc-i386.c	FUNCTION_16	ELSE_1	IF_2
0x40000f1	          0x4989ee	                            mov r14, rbp	      1720	tc-i386.c	FUNCTION_16	ELSE_1	IF_2
0x40000f4	        0x49c1e620	                           shl r14, 0x20	      1720	tc-i386.c	FUNCTION_16	ELSE_1	IF_2
0x40000f8	          0x4d89f1	                             mov r9, r14	      1720	tc-i386.c	FUNCTION_16	ELSE_1	IF_2
0x40000fb	        0x49c1ee20	                           shr r14, 0x20	      1720	tc-i386.c	FUNCTION_16	ELSE_1	IF_2
0x40000ff	        0x41f6c608	                            test r14b, 8	      1720	tc-i386.c	FUNCTION_16	ELSE_1	IF_2
0x4000103	     0xf8433010000	                            je 0x400023c	      1720	tc-i386.c	FUNCTION_16	ELSE_1	IF_2
0x4000109	    0x49beffffffff	          movabs r14, 0xfffffff7ffffffff	      1722	tc-i386.c	FUNCTION_16	ELSE_1
0x4000113	          0x4d21f3	                            and r11, r14	      1722	tc-i386.c	FUNCTION_16	ELSE_1
0x4000116	          0x4421c3	                            and ebx, r8d	      1632	tc-i386.c	FUNCTION_13	SWITCH_1
0x4000119	          0x4d89de	                            mov r14, r11	      1632	tc-i386.c	FUNCTION_13	SWITCH_1
0x400011c	        0x49c1ee20	                           shr r14, 0x20	      1632	tc-i386.c	FUNCTION_13	SWITCH_1
0x4000120	          0x4421f5	                           and ebp, r14d	      1635	tc-i386.c	FUNCTION_13	SWITCH_1
0x4000123	            0x21ce	                            and esi, ecx	      1638	tc-i386.c	FUNCTION_13	SWITCH_1
0x4000125	          0x4585e5	                         test r13d, r12d	      1572	tc-i386.c	FUNCTION_10	SWITCH_1	IF_1
0x4000128	            0x7510	                           jne 0x400013a	      1572	tc-i386.c	FUNCTION_10	SWITCH_1	IF_1
0x400012a	            0x85db	                           test ebx, ebx	      1576	tc-i386.c	FUNCTION_10	SWITCH_1	IF_2
0x400012c	            0x750c	                           jne 0x400013a	      1576	tc-i386.c	FUNCTION_10	SWITCH_1	IF_2
0x400012e	            0x85ed	                           test ebp, ebp	      1580	tc-i386.c	FUNCTION_10	SWITCH_1	IF_3
0x4000130	            0x7508	                           jne 0x400013a	      1580	tc-i386.c	FUNCTION_10	SWITCH_1	IF_3
0x4000132	            0x85f6	                           test esi, esi	      1725	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	CALL_4
0x4000134	     0xf8402010000	                            je 0x400023c	      1725	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	CALL_4
0x400013a	          0x4189cc	                           mov r12d, ecx	      1727	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x400013d	    0x48b900000000	          movabs rcx, 0xffffffff00000000	      1727	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x4000147	          0x4921cb	                            and r11, rcx	      1727	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x400014a	          0x4d09e3	                             or r11, r12	      1727	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x400014d	          0x4c89d9	                            mov rcx, r11	      1727	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x4000150	        0x48c1e918	                           shr rcx, 0x18	      1727	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x4000154	          0xf6c120	                           test cl, 0x20	      1727	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x4000157	            0x7479	                            je 0x40001d2	      1727	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4
0x4000159	            0x89f2	                            mov edx, esi	      1730	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x400015b	    0x48be00000000	          movabs rsi, 0xffffffff00000000	      1730	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4000165	          0x4c21ce	                             and rsi, r9	      1730	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4000168	          0x4809d6	                             or rsi, rdx	      1730	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x400016b	    0xf7c600000020	                    test esi, 0x20000000	      1730	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4000171	     0xf84c5000000	                            je 0x400023c	      1730	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4000177	        0xf6472e40	           test byte [rdi + 0x2e], 0x40 	      1731	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x400017b	            0x740d	                            je 0x400018a	      1731	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x400017d	    0x833d00000000	               cmp dword [0x04000184], 0	      1731	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4000184	     0xf84b2000000	                            je 0x400023c	      1731	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x400018a	        0x49c1eb28	                           shr r11, 0x28	      1732	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x400018e	        0x41f6c308	                            test r11b, 8	      1732	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4000192	            0x741a	                            je 0x40001ae	      1732	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4000194	          0x4889ea	                            mov rdx, rbp	      1732	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x4000197	        0x48c1e220	                           shl rdx, 0x20	      1732	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x400019b	            0x89f6	                            mov esi, esi	      1732	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x400019d	          0x4809d6	                             or rsi, rdx	      1732	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x40001a0	        0x48c1ee28	                           shr rsi, 0x28	      1732	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x40001a4	        0x40f6c608	                             test sil, 8	      1732	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x40001a8	     0xf848e000000	                            je 0x400023c	      1732	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x40001ae	    0x41f7c0000000	                    test r8d, 0x20000000	      1733	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x40001b5	            0x7408	                            je 0x40001bf	      1733	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x40001b7	    0xf7c300000020	                    test ebx, 0x20000000	      1733	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x40001bd	            0x747d	                            je 0x400023c	      1733	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x40001bf	        0x41f6c310	                         test r11b, 0x10	      1734	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x40001c3	            0x7408	                            je 0x40001cd	      1734	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x40001c5	    0xf7c500100000	                        test ebp, 0x1000	      1734	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x40001cb	            0x746f	                            je 0x400023c	      1734	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x40001cd	          0x83c801	                               or eax, 1	      1735	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x40001d0	            0xeb6a	                           jmp 0x400023c	      1735	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	IF_4	IF_5
0x40001d2	            0x84c9	                             test cl, cl	      1737	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6
0x40001d4	            0x7963	                           jns 0x4000239	      1737	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6
0x40001d6	        0x48c1ee18	                           shr rsi, 0x18	      1740	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x40001da	          0x4084f6	                           test sil, sil	      1740	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x40001dd	            0x795d	                           jns 0x400023c	      1740	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x40001df	          0x4589c0	                            mov r8d, r8d	      1741	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x40001e2	    0x48b900000000	          movabs rcx, 0xffffffff00000000	      1741	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x40001ec	          0x4821ca	                            and rdx, rcx	      1741	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x40001ef	          0x4c09c2	                              or rdx, r8	      1741	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x40001f2	        0x48c1ea18	                           shr rdx, 0x18	      1741	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x40001f6	          0xf6c220	                           test dl, 0x20	      1741	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x40001f9	            0x740d	                            je 0x4000208	      1741	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x40001fb	            0x89d9	                            mov ecx, ebx	      1741	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x40001fd	          0x4989ca	                            mov r10, rcx	      1741	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4000200	    0xf7c100000020	                    test ecx, 0x20000000	      1741	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4000206	            0x7434	                            je 0x400023c	      1741	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4000208	          0xf6c240	                           test dl, 0x40	      1742	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x400020b	            0x741b	                            je 0x4000228	      1742	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x400020d	            0x89d9	                            mov ecx, ebx	      1742	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x400020f	    0x48be00000000	          movabs rsi, 0xffffffff00000000	      1742	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4000219	          0x4921f2	                            and r10, rsi	      1742	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x400021c	          0x4909ca	                             or r10, rcx	      1742	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x400021f	    0x41f7c2000000	                   test r10d, 0x40000000	      1742	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4000226	            0x7414	                            je 0x400023c	      1742	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4000228	            0x84d2	                             test dl, dl	      1743	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x400022a	            0x7908	                           jns 0x4000234	      1743	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x400022c	        0x48c1eb18	                           shr rbx, 0x18	      1743	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4000230	            0x84db	                             test bl, bl	      1743	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4000232	            0x7908	                           jns 0x400023c	      1743	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4000234	          0x83c801	                               or eax, 1	      1744	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4000237	            0xeb03	                           jmp 0x400023c	      1744	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_2	IF_6	IF_7
0x4000239	          0x83c801	                               or eax, 1	      1747	tc-i386.c	FUNCTION_16	ELSE_1	IF_3	ELSE_3
0x400023c	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      1751	tc-i386.c	FUNCTION_16	ELSE_3
0x4000241	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1751	tc-i386.c	FUNCTION_16	ELSE_3
0x400024a	            0x7416	                            je 0x4000262	      1751	tc-i386.c	FUNCTION_16	ELSE_3
0x400024c	            0xeb0f	                           jmp 0x400025d	      1751	tc-i386.c	FUNCTION_16	ELSE_3
0x400024e	          0x83e040	                           and eax, 0x40	      1704	tc-i386.c	FUNCTION_16	CALL_1
0x4000251	            0x3c01	                               cmp al, 1	      1704	tc-i386.c	FUNCTION_16	CALL_1
0x4000253	            0x19c0	                            sbb eax, eax	      1704	tc-i386.c	FUNCTION_16	CALL_1
0x4000255	          0x83e002	                              and eax, 2	      1704	tc-i386.c	FUNCTION_16	CALL_1
0x4000258	      0xe92cfeffff	                           jmp 0x4000089	      1704	tc-i386.c	FUNCTION_16	CALL_1
0x400025d	      0xe800000000	                          call 0x4000262	      1751	tc-i386.c	FUNCTION_16	ELSE_3
0x4000262	        0x4883c410	                           add rsp, 0x10	      1751	tc-i386.c	FUNCTION_16	ELSE_3
0x4000266	              0x5b	                                 pop rbx	      1751	tc-i386.c	FUNCTION_16	ELSE_3
0x4000267	              0x5d	                                 pop rbp	      1751	tc-i386.c	FUNCTION_16	ELSE_3
0x4000268	            0x415c	                                 pop r12	      1751	tc-i386.c	FUNCTION_16	ELSE_3
0x400026a	            0x415d	                                 pop r13	      1751	tc-i386.c	FUNCTION_16	ELSE_3
0x400026c	            0x415e	                                 pop r14	      1751	tc-i386.c	FUNCTION_16	ELSE_3
0x400026e	              0xc3	                                     ret	      1751	tc-i386.c	FUNCTION_16	ELSE_3
x86_cons	functions,0:ELSE,1:FOR,0:CALL,6:SWITCH,0:WHILE,0:IF,5:DO,0	86
0x400e691	            0x4154	                                push r12	      8406	tc-i386.c	FUNCTION_99
0x400e693	              0x55	                                push rbp	      8406	tc-i386.c	FUNCTION_99
0x400e694	              0x53	                                push rbx	      8406	tc-i386.c	FUNCTION_99
0x400e695	        0x4883ec10	                           sub rsp, 0x10	      8406	tc-i386.c	FUNCTION_99
0x400e699	          0x4889fb	                            mov rbx, rdi	      8406	tc-i386.c	FUNCTION_99
0x400e69c	    0x64488b042528	                mov rax, qword fs:[0x28]	      8406	tc-i386.c	FUNCTION_99
0x400e6a5	      0x4889442408	                mov qword [rsp + 8], rax	      8406	tc-i386.c	FUNCTION_99
0x400e6aa	            0x31c0	                            xor eax, eax	      8406	tc-i386.c	FUNCTION_99
0x400e6ac	    0xc70424470000	                   mov dword [rsp], 0x47	      8407	tc-i386.c	FUNCTION_99
0x400e6b3	    0xf71d00000000	                  neg dword [0x0400e6b9]	      8409	tc-i386.c	FUNCTION_99
0x400e6b9	    0x66c7471a0000	                mov word [rdi + 0x1a], 0	      8411	tc-i386.c	FUNCTION_99
0x400e6bf	          0x83fe04	                              cmp esi, 4	      8412	tc-i386.c	FUNCTION_99	IF_1
0x400e6c2	            0x7416	                            je 0x400e6da	      8412	tc-i386.c	FUNCTION_99	IF_1
0x400e6c4	    0x833d00000000	               cmp dword [0x0400e6cb], 0	      8412	tc-i386.c	FUNCTION_99	IF_1
0x400e6cb	     0xf84c0000000	                            je 0x400e791	      8412	tc-i386.c	FUNCTION_99	IF_1
0x400e6d1	          0x83fe08	                              cmp esi, 8	      8412	tc-i386.c	FUNCTION_99	IF_1
0x400e6d4	     0xf85b7000000	                           jne 0x400e791	      8412	tc-i386.c	FUNCTION_99	IF_1
0x400e6da	    0xc74424040000	                  mov dword [rsp + 4], 0	      8417	tc-i386.c	FUNCTION_99	IF_1
0x400e6e2	    0x4c8b25000000	            mov r12, qword [0x0400e6e9] 	      8419	tc-i386.c	FUNCTION_99	IF_1
0x400e6e9	      0xba00000000	                              mov edx, 0	      8420	tc-i386.c	FUNCTION_99	IF_1
0x400e6ee	      0x488d742404	                      lea rsi, [rsp + 4]	      8420	tc-i386.c	FUNCTION_99	IF_1
0x400e6f3	          0x4889e7	                            mov rdi, rsp	      8420	tc-i386.c	FUNCTION_99	IF_1
0x400e6f6	      0xe89177ffff	                        call sym.lex_got	      8420	tc-i386.c	FUNCTION_99	IF_1
0x400e6fb	          0x4889c5	                            mov rbp, rax	      8420	tc-i386.c	FUNCTION_99	IF_1
0x400e6fe	          0x4885c0	                           test rax, rax	      8421	tc-i386.c	FUNCTION_99	IF_1	IF_2
0x400e701	     0xf84cb000000	                            je 0x400e7d2	      8421	tc-i386.c	FUNCTION_99	IF_1	IF_2
0x400e707	    0x488905000000	            mov qword [0x0400e70e], rax 	      8422	tc-i386.c	FUNCTION_99	IF_1	IF_2
0x400e70e	      0xba01000000	                              mov edx, 1	      8424	tc-i386.c	FUNCTION_99	IF_1	CALL_1
0x400e713	          0x4889de	                            mov rsi, rbx	      8424	tc-i386.c	FUNCTION_99	IF_1	CALL_1
0x400e716	      0xbf00000000	                              mov edi, 0	      8424	tc-i386.c	FUNCTION_99	IF_1	CALL_1
0x400e71b	      0xe800000000	                          call 0x400e720	      8424	tc-i386.c	FUNCTION_99	IF_1	CALL_1
0x400e720	    0x488b15000000	            mov rdx, qword [0x0400e727] 	      8431	tc-i386.c	FUNCTION_99	IF_1	IF_3
0x400e727	          0x4829ea	                            sub rdx, rbp	      8431	tc-i386.c	FUNCTION_99	IF_1	IF_3
0x400e72a	      0x4863442404	            movsxd rax, dword [rsp + 4] 	      8431	tc-i386.c	FUNCTION_99	IF_1	IF_3
0x400e72f	          0x4801d0	                            add rax, rdx	      8431	tc-i386.c	FUNCTION_99	IF_1	IF_3
0x400e732	          0x4c01e0	                            add rax, r12	      8431	tc-i386.c	FUNCTION_99	IF_1	IF_3
0x400e735	    0x488905000000	            mov qword [0x0400e73c], rax 	      8431	tc-i386.c	FUNCTION_99	IF_1	IF_3
0x400e73c	          0x4889ef	                            mov rdi, rbp	      8434	tc-i386.c	FUNCTION_99	IF_1	IF_3	CALL_2
0x400e73f	      0xe800000000	                          call 0x400e744	      8434	tc-i386.c	FUNCTION_99	IF_1	IF_3	CALL_2
0x400e744	         0xfb64318	           movzx eax, byte [rbx + 0x18] 	      8435	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e748	          0x8d50fb	                      lea edx, [rax - 5]	      8439	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e74b	          0x80fa01	                               cmp dl, 1	      8439	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e74e	            0x7604	                           jbe 0x400e754	      8439	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e750	            0x3c02	                               cmp al, 2	      8439	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e752	            0x774f	                            ja 0x400e7a3	      8439	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e754	    0x488b05000000	            mov rax, qword [0x0400e75b] 	      8441	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e75b	           0xfb628	                   movzx ebp, byte [rax]	      8441	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e75e	          0xc60000	                       mov byte [rax], 0	      8442	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e761	      0xba05000000	                              mov edx, 5	      8443	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4	CALL_4
0x400e766	      0xbe00000000	                              mov esi, 0	      8443	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4	CALL_4
0x400e76b	      0xbf00000000	                              mov edi, 0	      8443	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4	CALL_4
0x400e770	      0xe800000000	                          call 0x400e775	      8443	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4	CALL_4
0x400e775	          0x4c89e6	                            mov rsi, r12	      8443	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4	CALL_4
0x400e778	          0x4889c7	                            mov rdi, rax	      8443	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4	CALL_4
0x400e77b	      0xb800000000	                              mov eax, 0	      8443	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4	CALL_4
0x400e780	      0xe800000000	                          call 0x400e785	      8443	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4	CALL_4
0x400e785	    0x488b05000000	            mov rax, qword [0x0400e78c] 	      8444	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e78c	          0x408828	                     mov byte [rax], bpl	      8444	tc-i386.c	FUNCTION_99	IF_1	IF_3	IF_4
0x400e78f	            0xeb12	                           jmp 0x400e7a3	      8413	tc-i386.c	FUNCTION_99	IF_1
0x400e791	      0xba01000000	                              mov edx, 1	      8449	tc-i386.c	FUNCTION_99	CALL_5
0x400e796	          0x4889de	                            mov rsi, rbx	      8449	tc-i386.c	FUNCTION_99	CALL_5
0x400e799	      0xbf00000000	                              mov edi, 0	      8449	tc-i386.c	FUNCTION_99	CALL_5
0x400e79e	      0xe800000000	                          call 0x400e7a3	      8449	tc-i386.c	FUNCTION_99	CALL_5
0x400e7a3	    0x8b0500000000	            mov eax, dword [0x0400e7a9] 	      8451	tc-i386.c	FUNCTION_99
0x400e7a9	            0xf7d8	                                 neg eax	      8451	tc-i386.c	FUNCTION_99
0x400e7ab	    0x890500000000	            mov dword [0x0400e7b1], eax 	      8451	tc-i386.c	FUNCTION_99
0x400e7b1	            0x85c0	                           test eax, eax	      8453	tc-i386.c	FUNCTION_99	IF_5
0x400e7b3	            0x7408	                            je 0x400e7bd	      8453	tc-i386.c	FUNCTION_99	IF_5
0x400e7b5	          0x4889df	                            mov rdi, rbx	      8454	tc-i386.c	FUNCTION_99	CALL_6
0x400e7b8	      0xe88f7fffff	            call sym.i386_intel_simplify	      8454	tc-i386.c	FUNCTION_99	CALL_6
0x400e7bd	          0x8b0424	                    mov eax, dword [rsp]	      8457	tc-i386.c	FUNCTION_99
0x400e7c0	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      8457	tc-i386.c	FUNCTION_99
0x400e7c5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8457	tc-i386.c	FUNCTION_99
0x400e7ce	            0x741b	                            je 0x400e7eb	      8457	tc-i386.c	FUNCTION_99
0x400e7d0	            0xeb14	                           jmp 0x400e7e6	      8457	tc-i386.c	FUNCTION_99
0x400e7d2	      0xba01000000	                              mov edx, 1	      8424	tc-i386.c	FUNCTION_99	IF_1	CALL_1
0x400e7d7	          0x4889de	                            mov rsi, rbx	      8424	tc-i386.c	FUNCTION_99	IF_1	CALL_1
0x400e7da	      0xbf00000000	                              mov edi, 0	      8424	tc-i386.c	FUNCTION_99	IF_1	CALL_1
0x400e7df	      0xe800000000	                          call 0x400e7e4	      8424	tc-i386.c	FUNCTION_99	IF_1	CALL_1
0x400e7e4	            0xebbd	                           jmp 0x400e7a3	      8424	tc-i386.c	FUNCTION_99	IF_1	CALL_1
0x400e7e6	      0xe800000000	                          call 0x400e7eb	      8457	tc-i386.c	FUNCTION_99
0x400e7eb	        0x4883c410	                           add rsp, 0x10	      8457	tc-i386.c	FUNCTION_99
0x400e7ef	              0x5b	                                 pop rbx	      8457	tc-i386.c	FUNCTION_99
0x400e7f0	              0x5d	                                 pop rbp	      8457	tc-i386.c	FUNCTION_99
0x400e7f1	            0x415c	                                 pop r12	      8457	tc-i386.c	FUNCTION_99
0x400e7f3	              0xc3	                                     ret	      8457	tc-i386.c	FUNCTION_99
i386_finalize_displacement	functions,0:ELSE,5:FOR,0:CALL,15:SWITCH,0:WHILE,0:IF,11:DO,0	129
0x4005c52	            0x4154	                                push r12	      8954	tc-i386.c	FUNCTION_107
0x4005c54	              0x55	                                push rbp	      8954	tc-i386.c	FUNCTION_107
0x4005c55	              0x53	                                push rbx	      8954	tc-i386.c	FUNCTION_107
0x4005c56	        0x4883ec10	                           sub rsp, 0x10	      8954	tc-i386.c	FUNCTION_107
0x4005c5a	          0x4889f5	                            mov rbp, rsi	      8954	tc-i386.c	FUNCTION_107
0x4005c5d	          0x4889d3	                            mov rbx, rdx	      8954	tc-i386.c	FUNCTION_107
0x4005c60	          0x4989cc	                            mov r12, rcx	      8954	tc-i386.c	FUNCTION_107
0x4005c63	    0x64488b042528	                mov rax, qword fs:[0x28]	      8954	tc-i386.c	FUNCTION_107
0x4005c6c	      0x4889442408	                mov qword [rsp + 8], rax	      8954	tc-i386.c	FUNCTION_107
0x4005c71	            0x31c0	                            xor eax, eax	      8954	tc-i386.c	FUNCTION_107
0x4005c73	    0x8b1500000000	            mov edx, dword [0x04005c79] 	      8961	tc-i386.c	FUNCTION_107	IF_1
0x4005c79	          0x4863c2	                         movsxd rax, edx	      8961	tc-i386.c	FUNCTION_107	IF_1
0x4005c7c	    0x8b0485000000	                  mov eax, dword [rax*4]	      8962	tc-i386.c	FUNCTION_107	IF_1
0x4005c83	      0x2d6a010000	                          sub eax, 0x16a	      8962	tc-i386.c	FUNCTION_107	IF_1
0x4005c88	          0x83f823	                           cmp eax, 0x23	      8962	tc-i386.c	FUNCTION_107	IF_1
0x4005c8b	     0xf87d2000000	                            ja 0x4005d63	      8962	tc-i386.c	FUNCTION_107	IF_1
0x4005c91	    0x48b901000002	                 movabs rcx, 0x802000001	      8963	tc-i386.c	FUNCTION_107	IF_1
0x4005c9b	        0x480fa3c1	                             bt rcx, rax	      8963	tc-i386.c	FUNCTION_107	IF_1
0x4005c9f	     0xf83be000000	                           jae 0x4005d63	      8963	tc-i386.c	FUNCTION_107	IF_1
0x4005ca5	        0x807e1803	                cmp byte [rsi + 0x18], 3	      8965	tc-i386.c	FUNCTION_107	IF_1	IF_2
0x4005ca9	     0xf85c2000000	                           jne 0x4005d71	      8965	tc-i386.c	FUNCTION_107	IF_1	IF_2
0x4005caf	          0x488b3e	                    mov rdi, qword [rsi]	      8968	tc-i386.c	FUNCTION_107	IF_1	IF_3	CALL_1
0x4005cb2	      0xe800000000	                          call 0x4005cb7	      8968	tc-i386.c	FUNCTION_107	IF_1	IF_3	CALL_1
0x4005cb7	            0x85c0	                           test eax, eax	      8968	tc-i386.c	FUNCTION_107	IF_1	IF_3	CALL_1
0x4005cb9	            0x7434	                            je 0x4005cef	      8968	tc-i386.c	FUNCTION_107	IF_1	IF_3	CALL_1
0x4005cbb	        0x488b7d00	                    mov rdi, qword [rbp]	      8969	tc-i386.c	FUNCTION_107	IF_1	IF_3	CALL_2
0x4005cbf	      0xe800000000	                          call 0x4005cc4	      8969	tc-i386.c	FUNCTION_107	IF_1	IF_3	CALL_2
0x4005cc4	    0x483d00000000	                              cmp rax, 0	      8969	tc-i386.c	FUNCTION_107	IF_1	IF_3	CALL_2
0x4005cca	            0x7423	                            je 0x4005cef	      8969	tc-i386.c	FUNCTION_107	IF_1	IF_3	CALL_2
0x4005ccc	        0x488b7d00	                    mov rdi, qword [rbp]	      8970	tc-i386.c	FUNCTION_107	IF_1	IF_3	CALL_3
0x4005cd0	      0xe800000000	                          call 0x4005cd5	      8970	tc-i386.c	FUNCTION_107	IF_1	IF_3	CALL_3
0x4005cd5	    0x483b05000000	            cmp rax, qword [0x04005cdc] 	      8970	tc-i386.c	FUNCTION_107	IF_1	IF_3	CALL_3
0x4005cdc	            0x7411	                            je 0x4005cef	      8970	tc-i386.c	FUNCTION_107	IF_1	IF_3	CALL_3
0x4005cde	        0x488b7d00	                    mov rdi, qword [rbp]	      8971	tc-i386.c	FUNCTION_107	IF_1	CALL_5
0x4005ce2	      0xe800000000	                          call 0x4005ce7	      8971	tc-i386.c	FUNCTION_107	IF_1	CALL_5
0x4005ce7	          0x4889c7	                            mov rdi, rax	      8971	tc-i386.c	FUNCTION_107	IF_1	CALL_5
0x4005cea	      0xe800000000	                          call 0x4005cef	      8971	tc-i386.c	FUNCTION_107	IF_1	CALL_5
0x4005cef	        0xc6451814	            mov byte [rbp + 0x18], 0x14 	      8972	tc-i386.c	FUNCTION_107	IF_1
0x4005cf3	    0x488b05000000	            mov rax, qword [0x04005cfa] 	      8973	tc-i386.c	FUNCTION_107	IF_1
0x4005cfa	        0x48894508	                mov qword [rbp + 8], rax	      8973	tc-i386.c	FUNCTION_107	IF_1
0x4005cfe	    0x8b0500000000	            mov eax, dword [0x04005d04] 	      8974	tc-i386.c	FUNCTION_107	IF_1	IF_4
0x4005d04	          0x4863d0	                         movsxd rdx, eax	      8974	tc-i386.c	FUNCTION_107	IF_1	IF_4
0x4005d07	    0x8b1495000000	                  mov edx, dword [rdx*4]	      8974	tc-i386.c	FUNCTION_107	IF_1	IF_4
0x4005d0e	    0x81fa83010000	                          cmp edx, 0x183	      8974	tc-i386.c	FUNCTION_107	IF_1	IF_4
0x4005d14	            0x7517	                           jne 0x4005d2d	      8974	tc-i386.c	FUNCTION_107	IF_1	IF_4
0x4005d16	            0x4898	                                    cdqe	      8975	tc-i386.c	FUNCTION_107	IF_1	IF_4
0x4005d18	    0xc70485000000	                    mov dword [rax*4], 9	      8975	tc-i386.c	FUNCTION_107	IF_1	IF_4
0x4005d23	      0xb801000000	                              mov eax, 1	      8956	tc-i386.c	FUNCTION_107
0x4005d28	      0xe90c010000	                           jmp 0x4005e39	      8956	tc-i386.c	FUNCTION_107
0x4005d2d	    0x81fa8d010000	                          cmp edx, 0x18d	      8976	tc-i386.c	FUNCTION_107	IF_1	ELSE_1	IF_5
0x4005d33	            0x7517	                           jne 0x4005d4c	      8976	tc-i386.c	FUNCTION_107	IF_1	ELSE_1	IF_5
0x4005d35	            0x4898	                                    cdqe	      8977	tc-i386.c	FUNCTION_107	IF_1	ELSE_1	IF_5
0x4005d37	    0xc70485000000	                    mov dword [rax*4], 1	      8977	tc-i386.c	FUNCTION_107	IF_1	ELSE_1	IF_5
0x4005d42	      0xb801000000	                              mov eax, 1	      8956	tc-i386.c	FUNCTION_107
0x4005d47	      0xe9ed000000	                           jmp 0x4005e39	      8956	tc-i386.c	FUNCTION_107
0x4005d4c	            0x4898	                                    cdqe	      8979	tc-i386.c	FUNCTION_107	IF_1	ELSE_2
0x4005d4e	    0xc70485000000	                    mov dword [rax*4], 2	      8979	tc-i386.c	FUNCTION_107	IF_1	ELSE_2
0x4005d59	      0xb801000000	                              mov eax, 1	      8956	tc-i386.c	FUNCTION_107
0x4005d5e	      0xe9d6000000	                           jmp 0x4005e39	      8956	tc-i386.c	FUNCTION_107
0x4005d63	         0xfb64d18	           movzx ecx, byte [rbp + 0x18] 	      8982	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6
0x4005d67	          0x80f901	                               cmp cl, 1	      8982	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6
0x4005d6a	            0x7605	                           jbe 0x4005d71	      8982	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6
0x4005d6c	          0x80f906	                               cmp cl, 6	      8982	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6
0x4005d6f	            0x752e	                           jne 0x4005d9f	      8982	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6
0x4005d71	      0xba05000000	                              mov edx, 5	      8987	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6	CALL_7
0x4005d76	      0xbe00000000	                              mov esi, 0	      8987	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6	CALL_7
0x4005d7b	      0xbf00000000	                              mov edi, 0	      8987	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6	CALL_7
0x4005d80	      0xe800000000	                          call 0x4005d85	      8987	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6	CALL_7
0x4005d85	          0x4c89e6	                            mov rsi, r12	      8987	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6	CALL_7
0x4005d88	          0x4889c7	                            mov rdi, rax	      8987	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6	CALL_7
0x4005d8b	      0xb800000000	                              mov eax, 0	      8987	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6	CALL_7
0x4005d90	      0xe800000000	                          call 0x4005d95	      8987	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6	CALL_7
0x4005d95	      0xb800000000	                              mov eax, 0	      8989	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6
0x4005d9a	      0xe99a000000	                           jmp 0x4005e39	      8989	tc-i386.c	FUNCTION_107	ELSE_2	ELSE_3	IF_6
0x4005d9f	      0xb801000000	                              mov eax, 1	      8956	tc-i386.c	FUNCTION_107
0x4005da4	    0x833d00000000	               cmp dword [0x04005dab], 2	      8992	tc-i386.c	FUNCTION_107	ELSE_4	IF_7
0x4005dab	     0xf8588000000	                           jne 0x4005e39	      8992	tc-i386.c	FUNCTION_107	ELSE_4	IF_7
0x4005db1	    0x803d00000000	                cmp byte [0x04005db8], 0	      8994	tc-i386.c	FUNCTION_107	ELSE_4	IF_7
0x4005db8	            0x757a	                           jne 0x4005e34	      8994	tc-i386.c	FUNCTION_107	ELSE_4	IF_7
0x4005dba	          0x80f902	                               cmp cl, 2	      8994	tc-i386.c	FUNCTION_107	ELSE_4	IF_7
0x4005dbd	            0x7575	                           jne 0x4005e34	      8994	tc-i386.c	FUNCTION_107	ELSE_4	IF_7
0x4005dbf	          0x4863c2	                         movsxd rax, edx	      8998	tc-i386.c	FUNCTION_107	ELSE_4	IF_7
0x4005dc2	    0x8024c5000000	                  and byte [rax*8], 0xfb	      8998	tc-i386.c	FUNCTION_107	ELSE_4	IF_7
0x4005dca	      0xb900000080	                     mov ecx, 0x80000000	      8999	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	CALL_8
0x4005dcf	        0x48034d10	             add rcx, qword [rbp + 0x10]	      8999	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	CALL_8
0x4005dd3	      0xb801000000	                              mov eax, 1	      8956	tc-i386.c	FUNCTION_107
0x4005dd8	      0xbeffffffff	                     mov esi, 0xffffffff	      8999	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	CALL_8
0x4005ddd	          0x4839f1	                            cmp rcx, rsi	      8999	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	CALL_8
0x4005de0	            0x7657	                           jbe 0x4005e39	      8999	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	CALL_8
0x4005de2	          0x4863c2	                         movsxd rax, edx	      9001	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8
0x4005de5	        0x4883c00e	                            add rax, 0xe	      9001	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8
0x4005de9	     0xfb614c50000	                 movzx edx, byte [rax*8]	      9001	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8
0x4005df1	          0x83e2f7	                     and edx, 0xfffffff7	      9001	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8
0x4005df4	    0x8814c5000000	                    mov byte [rax*8], dl	      9001	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8
0x4005dfb	      0xb801000000	                              mov eax, 1	      8956	tc-i386.c	FUNCTION_107
0x4005e00	          0xf6c240	                           test dl, 0x40	      9002	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	IF_9
0x4005e03	            0x7434	                            je 0x4005e39	      9002	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	IF_9
0x4005e05	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      9005	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	IF_9
0x4005e09	      0xba05000000	                              mov edx, 5	      9004	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	IF_9	CALL_10
0x4005e0e	      0xbe00000000	                              mov esi, 0	      9004	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	IF_9	CALL_10
0x4005e13	      0xbf00000000	                              mov edi, 0	      9004	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	IF_9	CALL_10
0x4005e18	      0xe800000000	                          call 0x4005e1d	      9004	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	IF_9	CALL_10
0x4005e1d	          0x4889ee	                            mov rsi, rbp	      9004	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	IF_9	CALL_10
0x4005e20	          0x4889c7	                            mov rdi, rax	      9004	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	IF_9	CALL_10
0x4005e23	      0xb800000000	                              mov eax, 0	      9004	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	IF_9	CALL_10
0x4005e28	      0xe800000000	                          call 0x4005e2d	      9004	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	IF_9	CALL_10
0x4005e2d	      0xb800000000	                              mov eax, 0	      9006	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	IF_9
0x4005e32	            0xeb05	                           jmp 0x4005e39	      9006	tc-i386.c	FUNCTION_107	ELSE_4	IF_7	IF_8	IF_9
0x4005e34	      0xb801000000	                              mov eax, 1	      8956	tc-i386.c	FUNCTION_107
0x4005e39	    0x486315000000	         movsxd rdx, dword [0x04005e40] 	      9027	tc-i386.c	FUNCTION_107
0x4005e40	        0x4883c20e	                            add rdx, 0xe	      9027	tc-i386.c	FUNCTION_107
0x4005e44	    0x488b0cd50000	                  mov rcx, qword [rdx*8]	      9027	tc-i386.c	FUNCTION_107
0x4005e4c	    0x488d14d50000	                        lea rdx, [rdx*8]	      9027	tc-i386.c	FUNCTION_107
0x4005e54	    0x4881e1ffffe0	             and rcx, 0xffffffffffe0ffff	      9032	tc-i386.c	FUNCTION_107
0x4005e5b	        0x837a0400	                  cmp dword [rdx + 4], 0	      1514	tc-i386.c	FUNCTION_7	SWITCH_1	IF_2
0x4005e5f	            0x750d	                           jne 0x4005e6e	      1514	tc-i386.c	FUNCTION_7	SWITCH_1	IF_2
0x4005e61	            0x85c9	                           test ecx, ecx	      9033	tc-i386.c	FUNCTION_107	IF_11	CALL_14
0x4005e63	            0x7509	                           jne 0x4005e6e	      9033	tc-i386.c	FUNCTION_107	IF_11	CALL_14
0x4005e65	            0x211a	                    and dword [rdx], ebx	      9034	tc-i386.c	FUNCTION_107	IF_11	CALL_15
0x4005e67	    0xc74204000000	                  mov dword [rdx + 4], 0	      9034	tc-i386.c	FUNCTION_107	IF_11	CALL_15
0x4005e6e	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      9038	tc-i386.c	FUNCTION_107
0x4005e73	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      9038	tc-i386.c	FUNCTION_107
0x4005e7c	            0x7405	                            je 0x4005e83	      9038	tc-i386.c	FUNCTION_107
0x4005e7e	      0xe800000000	                          call 0x4005e83	      9038	tc-i386.c	FUNCTION_107
0x4005e83	        0x4883c410	                           add rsp, 0x10	      9038	tc-i386.c	FUNCTION_107
0x4005e87	              0x5b	                                 pop rbx	      9038	tc-i386.c	FUNCTION_107
0x4005e88	              0x5d	                                 pop rbp	      9038	tc-i386.c	FUNCTION_107
0x4005e89	            0x415c	                                 pop r12	      9038	tc-i386.c	FUNCTION_107
0x4005e8b	              0xc3	                                     ret	      9038	tc-i386.c	FUNCTION_107
set_code_flag	functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0:IF,0:DO,0	5
0x4000daa	        0x4883ec08	                              sub rsp, 8	      2435	tc-i386.c	FUNCTION_42
0x4000dae	      0xbe00000000	                              mov esi, 0	      2436	tc-i386.c	FUNCTION_42	CALL_1
0x4000db3	      0xe804ffffff	               call sym.update_code_flag	      2436	tc-i386.c	FUNCTION_42	CALL_1
0x4000db8	        0x4883c408	                              add rsp, 8	      2437	tc-i386.c	FUNCTION_42
0x4000dbc	              0xc3	                                     ret	      2437	tc-i386.c	FUNCTION_42
md_atof	functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0:IF,0:DO,0	5
0x400eedd	        0x4883ec08	                              sub rsp, 8	     10137	tc-i386.c	FUNCTION_118
0x400eee1	      0xb900000000	                              mov ecx, 0	     10140	tc-i386.c	FUNCTION_118	CALL_1
0x400eee6	      0xe800000000	                          call 0x400eeeb	     10140	tc-i386.c	FUNCTION_118	CALL_1
0x400eeeb	        0x4883c408	                              add rsp, 8	     10141	tc-i386.c	FUNCTION_118
0x400eeef	              0xc3	                                     ret	     10141	tc-i386.c	FUNCTION_118
output_message	functions,0:ELSE,1:FOR,0:CALL,3:SWITCH,0:WHILE,0:IF,2:DO,0	56
0x4006570	            0x4157	                                push r15	     10858	tc-i386.c	FUNCTION_125
0x4006572	            0x4156	                                push r14	     10858	tc-i386.c	FUNCTION_125
0x4006574	            0x4155	                                push r13	     10858	tc-i386.c	FUNCTION_125
0x4006576	            0x4154	                                push r12	     10858	tc-i386.c	FUNCTION_125
0x4006578	              0x55	                                push rbp	     10858	tc-i386.c	FUNCTION_125
0x4006579	              0x53	                                push rbx	     10858	tc-i386.c	FUNCTION_125
0x400657a	        0x4883ec08	                              sub rsp, 8	     10858	tc-i386.c	FUNCTION_125
0x400657e	          0x4989cd	                            mov r13, rcx	     10858	tc-i386.c	FUNCTION_125
0x4006581	          0x4d89c4	                             mov r12, r8	     10858	tc-i386.c	FUNCTION_125
0x4006584	          0x4d89ce	                             mov r14, r9	     10858	tc-i386.c	FUNCTION_125
0x4006587	        0x8b6c2440	            mov ebp, dword [rsp + 0x40] 	     10858	tc-i386.c	FUNCTION_125
0x400658b	          0x8d4502	                      lea eax, [rbp + 2]	     10863	tc-i386.c	FUNCTION_125
0x400658e	          0x418b18	                     mov ebx, dword [r8]	     10866	tc-i386.c	FUNCTION_125	IF_1
0x4006591	            0x29c3	                            sub ebx, eax	     10866	tc-i386.c	FUNCTION_125	IF_1
0x4006593	            0x7822	                            js 0x40065b7	     10866	tc-i386.c	FUNCTION_125	IF_1
0x4006595	          0x4839ce	                            cmp rsi, rcx	     10868	tc-i386.c	FUNCTION_125	IF_1	IF_2
0x4006598	            0x740d	                            je 0x40065a7	     10868	tc-i386.c	FUNCTION_125	IF_1	IF_2
0x400659a	          0xc6062c	                    mov byte [rsi], 0x2c	     10870	tc-i386.c	FUNCTION_125	IF_1	IF_2
0x400659d	        0x488d7e02	                      lea rdi, [rsi + 2]	     10871	tc-i386.c	FUNCTION_125	IF_1	IF_2
0x40065a1	        0xc6460120	                mov byte [rsi + 1], 0x20	     10871	tc-i386.c	FUNCTION_125	IF_1	IF_2
0x40065a5	            0xeb03	                           jmp 0x40065aa	     10871	tc-i386.c	FUNCTION_125	IF_1	IF_2
0x40065a7	          0x4889f7	                            mov rdi, rsi	     10871	tc-i386.c	FUNCTION_125	IF_1	IF_2
0x40065aa	          0x4863d5	                         movsxd rdx, ebp	        67	string3.h	FUNCTION_163	CALL_3
0x40065ad	          0x4c89f6	                            mov rsi, r14	        67	string3.h	FUNCTION_163	CALL_3
0x40065b0	      0xe800000000	                          call 0x40065b5	        67	string3.h	FUNCTION_163	CALL_3
0x40065b5	            0xeb51	                           jmp 0x4006608	        67	string3.h	FUNCTION_163	CALL_3
0x40065b7	          0x4989d7	                            mov r15, rdx	        67	string3.h	FUNCTION_163	CALL_3
0x40065ba	          0xc6062c	                    mov byte [rsi], 0x2c	     10878	tc-i386.c	FUNCTION_125	ELSE_1
0x40065bd	        0xc6460100	                   mov byte [rsi + 1], 0	     10879	tc-i386.c	FUNCTION_125	ELSE_1
0x40065c1	          0x4889d1	                            mov rcx, rdx	        97	stdio2.h	CALL_256
0x40065c4	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_256
0x40065c9	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_256
0x40065ce	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_256
0x40065d3	      0xe800000000	                          call 0x40065d8	        97	stdio2.h	CALL_256
0x40065d8	          0x4529ef	                          sub r15d, r13d	     10882	tc-i386.c	FUNCTION_125	ELSE_1
0x40065db	          0x4129ef	                           sub r15d, ebp	     10882	tc-i386.c	FUNCTION_125	ELSE_1
0x40065de	          0x4489fb	                           mov ebx, r15d	     10884	tc-i386.c	FUNCTION_125	ELSE_1	CALL_2
0x40065e1	          0x83c34f	                           add ebx, 0x4f	     10884	tc-i386.c	FUNCTION_125	ELSE_1	CALL_2
0x40065e4	            0x7914	                           jns 0x40065fa	     10884	tc-i386.c	FUNCTION_125	ELSE_1	CALL_2
0x40065e6	      0xba00000000	                              mov edx, 0	     10884	tc-i386.c	FUNCTION_125	ELSE_1	CALL_2
0x40065eb	      0xbe842a0000	                         mov esi, 0x2a84	     10884	tc-i386.c	FUNCTION_125	ELSE_1	CALL_2
0x40065f0	      0xbf00000000	                              mov edi, 0	     10884	tc-i386.c	FUNCTION_125	ELSE_1	CALL_2
0x40065f5	      0xe800000000	                          call 0x40065fa	     10884	tc-i386.c	FUNCTION_125	ELSE_1	CALL_2
0x40065fa	          0x4863d5	                         movsxd rdx, ebp	        67	string3.h	FUNCTION_163	CALL_3
0x40065fd	          0x4c89f6	                            mov rsi, r14	        67	string3.h	FUNCTION_163	CALL_3
0x4006600	          0x4c89ef	                            mov rdi, r13	        67	string3.h	FUNCTION_163	CALL_3
0x4006603	      0xe800000000	                          call 0x4006608	        67	string3.h	FUNCTION_163	CALL_3
0x4006608	        0x41891c24	                    mov dword [r12], ebx	     10889	tc-i386.c	FUNCTION_125
0x400660c	        0x4883c408	                              add rsp, 8	     10891	tc-i386.c	FUNCTION_125
0x4006610	              0x5b	                                 pop rbx	     10891	tc-i386.c	FUNCTION_125
0x4006611	              0x5d	                                 pop rbp	     10891	tc-i386.c	FUNCTION_125
0x4006612	            0x415c	                                 pop r12	     10891	tc-i386.c	FUNCTION_125
0x4006614	            0x415d	                                 pop r13	     10891	tc-i386.c	FUNCTION_125
0x4006616	            0x415e	                                 pop r14	     10891	tc-i386.c	FUNCTION_125
0x4006618	            0x415f	                                 pop r15	     10891	tc-i386.c	FUNCTION_125
0x400661a	              0xc3	                                     ret	     10891	tc-i386.c	FUNCTION_125
parse_insn	functions,0:ELSE,12:FOR,1:CALL,39:SWITCH,3:WHILE,2:IF,32:DO,0	453
0x4005029	            0x4157	                                push r15	      4279	tc-i386.c	FUNCTION_69
0x400502b	            0x4156	                                push r14	      4279	tc-i386.c	FUNCTION_69
0x400502d	            0x4155	                                push r13	      4279	tc-i386.c	FUNCTION_69
0x400502f	            0x4154	                                push r12	      4279	tc-i386.c	FUNCTION_69
0x4005031	              0x55	                                push rbp	      4279	tc-i386.c	FUNCTION_69
0x4005032	              0x53	                                push rbx	      4279	tc-i386.c	FUNCTION_69
0x4005033	        0x4883ec18	                           sub rsp, 0x18	      4279	tc-i386.c	FUNCTION_69
0x4005037	          0x4989fd	                            mov r13, rdi	      4279	tc-i386.c	FUNCTION_69
0x400503a	          0x4989f6	                            mov r14, rsi	      4279	tc-i386.c	FUNCTION_69
0x400503d	    0x64488b042528	                mov rax, qword fs:[0x28]	      4279	tc-i386.c	FUNCTION_69
0x4005046	      0x4889442408	                mov qword [rsp + 8], rax	      4279	tc-i386.c	FUNCTION_69
0x400504b	            0x31c0	                            xor eax, eax	      4279	tc-i386.c	FUNCTION_69
0x400504d	    0x41bc00000000	                             mov r12d, 0	      4285	tc-i386.c	FUNCTION_69
0x4005053	      0x410fb64500	                   movzx eax, byte [r13]	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x4005058	     0xfb680000000	                   movzx eax, byte [rax]	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x400505f	          0x418806	                      mov byte [r14], al	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x4005062	            0x84c0	                             test al, al	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x4005064	     0xf84c4060000	                            je 0x400572e	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x400506a	        0x498d5513	                   lea rdx, [r13 + 0x13]	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x400506e	          0x4c89f5	                            mov rbp, r14	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x4005071	          0x4c89eb	                            mov rbx, r13	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x4005074	            0x3c2e	                            cmp al, 0x2e	      4292	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_1
0x4005076	        0x4c0f44e5	                          cmove r12, rbp	      4292	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_1
0x400507a	        0x4883c501	                              add rbp, 1	      4294	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x400507e	          0x4839d3	                            cmp rbx, rdx	      4295	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_2
0x4005081	            0x752e	                           jne 0x40050b1	      4295	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_2
0x4005083	      0xba05000000	                              mov edx, 5	      4297	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_2	CALL_2
0x4005088	      0xbe00000000	                              mov esi, 0	      4297	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_2	CALL_2
0x400508d	      0xbf00000000	                              mov edi, 0	      4297	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_2	CALL_2
0x4005092	      0xe800000000	                          call 0x4005097	      4297	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_2	CALL_2
0x4005097	          0x4c89ee	                            mov rsi, r13	      4297	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_2	CALL_2
0x400509a	          0x4889c7	                            mov rdi, rax	      4297	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_2	CALL_2
0x400509d	      0xb800000000	                              mov eax, 0	      4297	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_2	CALL_2
0x40050a2	      0xe800000000	                          call 0x40050a7	      4297	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_2	CALL_2
0x40050a7	      0xb800000000	                              mov eax, 0	      4298	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_2
0x40050ac	      0xe96b060000	                           jmp 0x400571c	      4298	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2	IF_2
0x40050b1	        0x4883c301	                              add rbx, 1	      4300	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x40050b5	           0xfb603	                   movzx eax, byte [rbx]	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x40050b8	     0xfb680000000	                   movzx eax, byte [rax]	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x40050bf	          0x884500	                      mov byte [rbp], al	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x40050c2	            0x84c0	                             test al, al	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x40050c4	            0x75ae	                           jne 0x4005074	      4290	tc-i386.c	FUNCTION_69	WHILE_1	WHILE_2
0x40050c6	           0xfb603	                   movzx eax, byte [rbx]	      4302	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x40050c9	            0xa8df	                           test al, 0xdf	      4302	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x40050cb	            0x7452	                            je 0x400511f	      4302	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x40050cd	            0xeb06	                           jmp 0x40050d5	      4302	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x40050cf	          0x4c89f5	                            mov rbp, r14	      4289	tc-i386.c	FUNCTION_69	WHILE_1
0x40050d2	          0x4c89eb	                            mov rbx, r13	      4302	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x40050d5	    0x833d00000000	               cmp dword [0x040050dc], 0	      4304	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x40050dc	            0x7508	                           jne 0x40050e6	      4304	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x40050de	            0x3c2f	                            cmp al, 0x2f	      4305	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x40050e0	            0x743d	                            je 0x400511f	      4305	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x40050e2	            0x3c2c	                            cmp al, 0x2c	      4305	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x40050e4	            0x7439	                            je 0x400511f	      4305	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x40050e6	           0xfbef8	                           movsx edi, al	      4308	tc-i386.c	FUNCTION_69	WHILE_1	IF_3	CALL_4
0x40050e9	      0xe8cffeffff	                 call sym.output_invalid	      4308	tc-i386.c	FUNCTION_69	WHILE_1	IF_3	CALL_4
0x40050ee	          0x4889c3	                            mov rbx, rax	      4308	tc-i386.c	FUNCTION_69	WHILE_1	IF_3	CALL_4
0x40050f1	      0xba05000000	                              mov edx, 5	      4308	tc-i386.c	FUNCTION_69	WHILE_1	IF_3	CALL_4
0x40050f6	      0xbe00000000	                              mov esi, 0	      4308	tc-i386.c	FUNCTION_69	WHILE_1	IF_3	CALL_4
0x40050fb	      0xbf00000000	                              mov edi, 0	      4308	tc-i386.c	FUNCTION_69	WHILE_1	IF_3	CALL_4
0x4005100	      0xe800000000	                          call 0x4005105	      4308	tc-i386.c	FUNCTION_69	WHILE_1	IF_3	CALL_4
0x4005105	          0x4889de	                            mov rsi, rbx	      4308	tc-i386.c	FUNCTION_69	WHILE_1	IF_3	CALL_4
0x4005108	          0x4889c7	                            mov rdi, rax	      4308	tc-i386.c	FUNCTION_69	WHILE_1	IF_3	CALL_4
0x400510b	      0xb800000000	                              mov eax, 0	      4308	tc-i386.c	FUNCTION_69	WHILE_1	IF_3	CALL_4
0x4005110	      0xe800000000	                          call 0x4005115	      4308	tc-i386.c	FUNCTION_69	WHILE_1	IF_3	CALL_4
0x4005115	      0xb800000000	                              mov eax, 0	      4310	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x400511a	      0xe9fd050000	                           jmp 0x400571c	      4310	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x400511f	          0x4939dd	                            cmp r13, rbx	      4312	tc-i386.c	FUNCTION_69	WHILE_1	IF_4
0x4005122	            0x7563	                           jne 0x4005187	      4312	tc-i386.c	FUNCTION_69	WHILE_1	IF_4
0x4005124	    0x833d00000000	               cmp dword [0x0400512b], 0	      4314	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	IF_5
0x400512b	            0x752f	                           jne 0x400515c	      4314	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	IF_5
0x400512d	            0x3c2f	                            cmp al, 0x2f	      4314	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	IF_5
0x400512f	            0x752b	                           jne 0x400515c	      4314	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	IF_5
0x4005131	      0xba05000000	                              mov edx, 5	      4315	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_7
0x4005136	      0xbe00000000	                              mov esi, 0	      4315	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_7
0x400513b	      0xbf00000000	                              mov edi, 0	      4315	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_7
0x4005140	      0xe800000000	                          call 0x4005145	      4315	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_7
0x4005145	          0x4889c7	                            mov rdi, rax	      4315	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_7
0x4005148	      0xb800000000	                              mov eax, 0	      4315	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_7
0x400514d	      0xe800000000	                          call 0x4005152	      4315	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_7
0x4005152	      0xb800000000	                              mov eax, 0	      4318	tc-i386.c	FUNCTION_69	WHILE_1	IF_4
0x4005157	      0xe9c0050000	                           jmp 0x400571c	      4315	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_7
0x400515c	      0xba05000000	                              mov edx, 5	      4317	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_9
0x4005161	      0xbe00000000	                              mov esi, 0	      4317	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_9
0x4005166	      0xbf00000000	                              mov edi, 0	      4317	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_9
0x400516b	      0xe800000000	                          call 0x4005170	      4317	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_9
0x4005170	          0x4889c7	                            mov rdi, rax	      4317	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_9
0x4005173	      0xb800000000	                              mov eax, 0	      4317	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_9
0x4005178	      0xe800000000	                          call 0x400517d	      4317	tc-i386.c	FUNCTION_69	WHILE_1	IF_4	CALL_9
0x400517d	      0xb800000000	                              mov eax, 0	      4318	tc-i386.c	FUNCTION_69	WHILE_1	IF_4
0x4005182	      0xe995050000	                           jmp 0x400571c	      4318	tc-i386.c	FUNCTION_69	WHILE_1	IF_4
0x4005187	          0x4c89f6	                            mov rsi, r14	      4322	tc-i386.c	FUNCTION_69	WHILE_1	CALL_10
0x400518a	    0x488b3d000000	            mov rdi, qword [0x04005191] 	      4322	tc-i386.c	FUNCTION_69	WHILE_1	CALL_10
0x4005191	      0xe800000000	                          call 0x4005196	      4322	tc-i386.c	FUNCTION_69	WHILE_1	CALL_10
0x4005196	    0x488905000000	            mov qword [0x0400519d], rax 	      4322	tc-i386.c	FUNCTION_69	WHILE_1	CALL_10
0x400519d	           0xfb613	                   movzx edx, byte [rbx]	      4324	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x40051a0	            0x84d2	                             test dl, dl	      4324	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x40051a2	     0xf84f1010000	                            je 0x4005399	      4324	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x40051a8	          0x80fa20	                            cmp dl, 0x20	      4325	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x40051ab	            0x750a	                           jne 0x40051b7	      4325	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x40051ad	        0x807b0100	                   cmp byte [rbx + 1], 0	      4325	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x40051b1	     0xf84e2010000	                            je 0x4005399	      4325	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x40051b7	          0x4885c0	                           test rax, rax	      4326	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x40051ba	     0xf84e2010000	                            je 0x40053a2	      4326	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x40051c0	          0x488b00	                    mov rax, qword [rax]	      4327	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x40051c3	        0xf6402c10	           test byte [rax + 0x2c], 0x10 	      4327	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x40051c7	     0xf8477030000	                            je 0x4005544	      4327	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x40051cd	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      4327	tc-i386.c	FUNCTION_69	WHILE_1	IF_6
0x40051d1	    0x8b1500000000	            mov edx, dword [0x040051d7] 	      1619	tc-i386.c	FUNCTION_12
0x40051d7	          0x83fa02	                              cmp edx, 2	      1619	tc-i386.c	FUNCTION_12
0x40051da	            0x7511	                           jne 0x40051ed	      1619	tc-i386.c	FUNCTION_12
0x40051dc	        0x48c1e920	                           shr rcx, 0x20	      1619	tc-i386.c	FUNCTION_12
0x40051e0	            0x84c9	                             test cl, cl	      1619	tc-i386.c	FUNCTION_12
0x40051e2	     0xf8980000000	                           jns 0x4005268	      1619	tc-i386.c	FUNCTION_12
0x40051e8	      0xe99c050000	                           jmp 0x4005789	      1619	tc-i386.c	FUNCTION_12
0x40051ed	        0x48c1e920	                           shr rcx, 0x20	      1620	tc-i386.c	FUNCTION_12
0x40051f1	          0xf6c140	                           test cl, 0x40	      1620	tc-i386.c	FUNCTION_12
0x40051f4	            0x741f	                            je 0x4005215	      1620	tc-i386.c	FUNCTION_12
0x40051f6	      0xe972050000	                           jmp 0x400576d	      1620	tc-i386.c	FUNCTION_12
0x40051fb	          0x4889de	                            mov rsi, rbx	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x40051fe	          0x4889c7	                            mov rdi, rax	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x4005201	      0xb800000000	                              mov eax, 0	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x4005206	      0xe800000000	                          call 0x400520b	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x400520b	      0xb800000000	                              mov eax, 0	      4335	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7
0x4005210	      0xe907050000	                           jmp 0x400571c	      4335	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7
0x4005215	        0xf6402918	           test byte [rax + 0x29], 0x18 	      4341	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x4005219	            0x744d	                            je 0x4005268	      4341	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x400521b	          0x83fa02	                              cmp edx, 2	      4341	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x400521e	            0x7448	                            je 0x4005268	      4341	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x4005220	         0xfb64829	           movzx ecx, byte [rax + 0x29] 	      4342	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x4005224	          0xc0e904	                               shr cl, 4	      4342	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x4005227	          0x83e101	                              and ecx, 1	      4342	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x400522a	          0x83fa01	                              cmp edx, 1	      4342	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x400522d	           0xf94c2	                                 sete dl	      4342	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x4005230	           0xfb6d2	                           movzx edx, dl	      4342	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x4005233	            0x39d1	                            cmp ecx, edx	      4342	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x4005235	            0x7431	                            je 0x4005268	      4342	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x4005237	          0x488b18	                    mov rbx, qword [rax]	      4345	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8	CALL_16
0x400523a	      0xba05000000	                              mov edx, 5	      4345	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8	CALL_16
0x400523f	      0xbe00000000	                              mov esi, 0	      4345	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8	CALL_16
0x4005244	      0xbf00000000	                              mov edi, 0	      4345	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8	CALL_16
0x4005249	      0xe800000000	                          call 0x400524e	      4345	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8	CALL_16
0x400524e	          0x4889de	                            mov rsi, rbx	      4345	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8	CALL_16
0x4005251	          0x4889c7	                            mov rdi, rax	      4345	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8	CALL_16
0x4005254	      0xb800000000	                              mov eax, 0	      4345	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8	CALL_16
0x4005259	      0xe800000000	                          call 0x400525e	      4345	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8	CALL_16
0x400525e	      0xb800000000	                              mov eax, 0	      4347	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x4005263	      0xe9b4040000	                           jmp 0x400571c	      4347	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_8
0x4005268	        0x80781400	                cmp byte [rax + 0x14], 0	      4349	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9
0x400526c	     0xf85af000000	                           jne 0x4005321	      4349	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9
0x4005272	        0x83780c08	                cmp dword [rax + 0xc], 8	      4352	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x4005276	     0xf8791000000	                            ja 0x400530d	      4352	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x400527c	          0x8b400c	              mov eax, dword [rax + 0xc]	      4352	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x400527f	    0xff24c5000000	                       jmp qword [rax*8]	      4352	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x4005286	    0xc70500000000	               mov dword [0x04005290], 1	      4356	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x4005290	      0xe9fb000000	                           jmp 0x4005390	      4357	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x4005295	    0xc70500000000	               mov dword [0x0400529f], 2	      4360	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x400529f	      0xe9ec000000	                           jmp 0x4005390	      4361	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40052a4	    0xc70500000000	               mov dword [0x040052ae], 1	      4364	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40052ae	      0xe9dd000000	                           jmp 0x4005390	      4365	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40052b3	    0xc70500000000	               mov dword [0x040052bd], 2	      4368	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40052bd	      0xe9ce000000	                           jmp 0x4005390	      4369	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40052c2	    0xc70500000000	               mov dword [0x040052cc], 1	      4372	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40052cc	      0xe9bf000000	                           jmp 0x4005390	      4373	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40052d1	    0xc70500000000	               mov dword [0x040052db], 2	      4376	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40052db	      0xe9b0000000	                           jmp 0x4005390	      4377	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40052e0	    0xc70500000000	               mov dword [0x040052ea], 3	      4380	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40052ea	      0xe9a1000000	                           jmp 0x4005390	      4381	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40052ef	    0xc70500000000	               mov dword [0x040052f9], 1	      4384	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40052f9	      0xe992000000	                           jmp 0x4005390	      4385	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x40052fe	    0xc70500000000	               mov dword [0x04005308], 1	      4388	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x4005308	      0xe983000000	                           jmp 0x4005390	      4389	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1
0x400530d	      0xba00000000	                              mov edx, 0	      4391	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1	CALL_17
0x4005312	      0xbe27110000	                         mov esi, 0x1127	      4391	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1	CALL_17
0x4005317	      0xbf00000000	                              mov edi, 0	      4391	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1	CALL_17
0x400531c	      0xe800000000	                          call 0x4005321	      4391	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_9	SWITCH_1	CALL_17
0x4005321	          0x8b780c	              mov edi, dword [rax + 0xc]	      4397	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	CALL_18
0x4005324	      0xe8f5d1ffff	                     call sym.add_prefix	      4397	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	CALL_18
0x4005329	          0x83f802	                              cmp eax, 2	      4397	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	CALL_18
0x400532c	            0x742a	                            je 0x4005358	      4397	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	CALL_18
0x400532e	          0x83f803	                              cmp eax, 3	      4397	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	CALL_18
0x4005331	            0x7409	                            je 0x400533c	      4397	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	CALL_18
0x4005333	            0x85c0	                           test eax, eax	      4397	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	CALL_18
0x4005335	            0x7559	                           jne 0x4005390	      4397	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	CALL_18
0x4005337	      0xe9cd030000	                           jmp 0x4005709	      4397	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	CALL_18
0x400533c	    0x488b05000000	            mov rax, qword [0x04005343] 	      4402	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_10
0x4005343	          0x488b00	                    mov rax, qword [rax]	      4402	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_10
0x4005346	        0xf6402308	               test byte [rax + 0x23], 8	      4402	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_10
0x400534a	            0x7444	                            je 0x4005390	      4402	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_10
0x400534c	          0x488b00	                    mov rax, qword [rax]	      4403	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_10
0x400534f	    0x488905000000	            mov qword [0x04005356], rax 	      4403	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_10
0x4005356	            0xeb38	                           jmp 0x4005390	      4403	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_10
0x4005358	    0x488b05000000	            mov rax, qword [0x0400535f] 	      4406	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_11
0x400535f	          0x488b00	                    mov rax, qword [rax]	      4406	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_11
0x4005362	        0xf6401f10	           test byte [rax + 0x1f], 0x10 	      4406	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_11
0x4005366	            0x740c	                            je 0x4005374	      4406	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_11
0x4005368	          0x488b00	                    mov rax, qword [rax]	      4407	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_11
0x400536b	    0x488905000000	            mov qword [0x04005372], rax 	      4407	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_11
0x4005372	            0xeb1c	                           jmp 0x4005390	      4407	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	IF_11
0x4005374	        0xf6402001	               test byte [rax + 0x20], 1	      4408	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	ELSE_3	IF_12
0x4005378	            0x740c	                            je 0x4005386	      4408	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	ELSE_3	IF_12
0x400537a	          0x488b00	                    mov rax, qword [rax]	      4409	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	ELSE_3	IF_12
0x400537d	    0x488905000000	            mov qword [0x04005384], rax 	      4409	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	ELSE_3	IF_12
0x4005384	            0xeb0a	                           jmp 0x4005390	      4409	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	ELSE_3	IF_12
0x4005386	          0x488b00	                    mov rax, qword [rax]	      4411	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	ELSE_4
0x4005389	    0x488905000000	            mov qword [0x04005390], rax 	      4411	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2	ELSE_4
0x4005390	        0x4c8d6b01	                      lea r13, [rbx + 1]	      4418	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_4
0x4005394	      0xe9bafcffff	                           jmp 0x4005053	      4422	tc-i386.c	FUNCTION_69	WHILE_1	ELSE_4	ELSE_5
0x4005399	          0x4885c0	                           test rax, rax	      4424	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13
0x400539c	     0xf85a2010000	                           jne 0x4005544	      4424	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13
0x40053a2	        0x488d45fe	                      lea rax, [rbp - 2]	      4428	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	IF_14
0x40053a6	          0x4939c4	                            cmp r12, rax	      4428	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	IF_14
0x40053a9	            0x7512	                           jne 0x40053bd	      4428	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	IF_14
0x40053ab	        0x807dff73	                cmp byte [rbp - 1], 0x73	      4428	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	IF_14
0x40053af	            0x750c	                           jne 0x40053bd	      4428	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	IF_14
0x40053b1	    0xc70500000000	               mov dword [0x040053bb], 2	      4429	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	IF_14
0x40053bb	            0xeb5f	                           jmp 0x400541c	      4429	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	IF_14
0x40053bd	        0x488d45fd	                      lea rax, [rbp - 3]	      4430	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x40053c1	          0x4c39e0	                            cmp rax, r12	      4430	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x40053c4	            0x7521	                           jne 0x40053e7	      4430	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x40053c6	        0x807dfe64	                cmp byte [rbp - 2], 0x64	      4431	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x40053ca	            0x751b	                           jne 0x40053e7	      4431	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x40053cc	      0x440fb67dff	              movzx r15d, byte [rbp - 1]	      4432	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x40053d1	        0x4180ff38	                          cmp r15b, 0x38	      4432	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x40053d5	     0xf8565030000	                           jne 0x4005740	      4432	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x40053db	    0xc70500000000	               mov dword [0x040053e5], 1	      4433	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x40053e5	            0xeb35	                           jmp 0x400541c	      4433	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_6	IF_15
0x40053e7	        0x488d45fc	                      lea rax, [rbp - 4]	      4434	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x40053eb	          0x4c39e0	                            cmp rax, r12	      4434	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x40053ee	     0xf855e030000	                           jne 0x4005752	      4434	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x40053f4	        0x807dfd64	                cmp byte [rbp - 3], 0x64	      4435	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x40053f8	     0xf8554030000	                           jne 0x4005752	      4435	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x40053fe	        0x80780233	                cmp byte [rax + 2], 0x33	      4436	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x4005402	     0xf854a030000	                           jne 0x4005752	      4436	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x4005408	        0x80780332	                cmp byte [rax + 3], 0x32	      4437	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x400540c	     0xf8540030000	                           jne 0x4005752	      4437	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x4005412	    0xc70500000000	               mov dword [0x0400541c], 2	      4438	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x400541c	      0x41c6042400	                       mov byte [r12], 0	      4442	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13
0x4005421	          0x4c89f6	                            mov rsi, r14	      4443	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	CALL_19
0x4005424	    0x488b3d000000	            mov rdi, qword [0x0400542b] 	      4443	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	CALL_19
0x400542b	      0xe800000000	                          call 0x4005430	      4443	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	CALL_19
0x4005430	    0x488905000000	            mov qword [0x04005437], rax 	      4443	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	CALL_19
0x4005437	          0x4c89e5	                            mov rbp, r12	      4443	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	CALL_19
0x400543a	          0x4885c0	                           test rax, rax	      4446	tc-i386.c	FUNCTION_69	IF_17
0x400543d	     0xf840f030000	                            je 0x4005752	      4446	tc-i386.c	FUNCTION_69	IF_17
0x4005443	      0xe9fc000000	                           jmp 0x4005544	      4446	tc-i386.c	FUNCTION_69	IF_17
0x4005448	        0x418d479e	                   lea eax, [r15 - 0x62]	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x400544c	            0x3c15	                            cmp al, 0x15	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x400544e	     0xf87b8000000	                            ja 0x400550c	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x4005454	           0xfb6c0	                           movzx eax, al	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x4005457	    0xff24c5000000	                       jmp qword [rax*8]	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x400545e	    0x833d00000000	               cmp dword [0x04005465], 0	      4453	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_18	CALL_20
0x4005465	            0x7415	                            je 0x400547c	      4453	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_18	CALL_20
0x4005467	          0x4c89f7	                            mov rdi, r14	      4453	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_18	CALL_20
0x400546a	      0xe859b0ffff	            call sym.intel_float_operand	      4453	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_18	CALL_20
0x400546f	            0xa802	                              test al, 2	      4453	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_18	CALL_20
0x4005471	            0x7409	                            je 0x400547c	      4453	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_18	CALL_20
0x4005473	    0xc60500000000	            mov byte [0x0400547a], 0x73 	      4454	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_18
0x400547a	            0xeb07	                           jmp 0x4005483	      4454	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_18
0x400547c	    0x44883d000000	            mov byte [0x04005483], r15b 	      4459	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	ELSE_9
0x4005483	        0xc645ff00	                   mov byte [rbp - 1], 0	      4460	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x4005487	          0x4c89f6	                            mov rsi, r14	      4461	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	CALL_21
0x400548a	    0x488b3d000000	            mov rdi, qword [0x04005491] 	      4461	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	CALL_21
0x4005491	      0xe800000000	                          call 0x4005496	      4461	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	CALL_21
0x4005496	    0x488905000000	            mov qword [0x0400549d], rax 	      4461	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	CALL_21
0x400549d	            0xeb6d	                           jmp 0x400550c	      4463	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x400549f	    0x833d00000000	               cmp dword [0x040054a6], 0	      4466	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_19
0x40054a6	            0x7564	                           jne 0x400550c	      4466	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_19
0x40054a8	    0x44883d000000	            mov byte [0x040054af], r15b 	      4468	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_19
0x40054af	        0xc645ff00	                   mov byte [rbp - 1], 0	      4469	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_19
0x40054b3	          0x4c89f6	                            mov rsi, r14	      4470	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_19	CALL_22
0x40054b6	    0x488b3d000000	            mov rdi, qword [0x040054bd] 	      4470	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_19	CALL_22
0x40054bd	      0xe800000000	                          call 0x40054c2	      4470	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_19	CALL_22
0x40054c2	    0x488905000000	            mov qword [0x040054c9], rax 	      4470	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_19	CALL_22
0x40054c9	            0xeb41	                           jmp 0x400550c	      4470	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_19	CALL_22
0x40054cb	    0x833d00000000	               cmp dword [0x040054d2], 0	      4477	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20
0x40054d2	            0x7438	                            je 0x400550c	      4477	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20
0x40054d4	          0x4c89f7	                            mov rdi, r14	      4479	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	IF_21	CALL_23
0x40054d7	      0xe8ecafffff	            call sym.intel_float_operand	      4479	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	IF_21	CALL_23
0x40054dc	          0x83f801	                              cmp eax, 1	      4480	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	IF_21
0x40054df	      0xba73000000	                           mov edx, 0x73	      4480	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	IF_21
0x40054e4	      0xb86c000000	                           mov eax, 0x6c	      4480	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	IF_21
0x40054e9	           0xf44c2	                          cmove eax, edx	      4480	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	IF_21
0x40054ec	    0x880500000000	               mov byte [0x040054f2], al	      4480	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	IF_21
0x40054f2	        0xc645ff00	                   mov byte [rbp - 1], 0	      4483	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20
0x40054f6	          0x4c89f6	                            mov rsi, r14	      4484	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	CALL_24
0x40054f9	    0x488b3d000000	            mov rdi, qword [0x04005500] 	      4484	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	CALL_24
0x4005500	      0xe800000000	                          call 0x4005505	      4484	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	CALL_24
0x4005505	    0x488905000000	            mov qword [0x0400550c], rax 	      4484	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3	IF_20	CALL_24
0x400550c	    0x48833d000000	               cmp qword [0x04005514], 0	      4489	tc-i386.c	FUNCTION_69	IF_17	IF_22
0x4005514	            0x752e	                           jne 0x4005544	      4489	tc-i386.c	FUNCTION_69	IF_17	IF_22
0x4005516	      0xba05000000	                              mov edx, 5	      4491	tc-i386.c	FUNCTION_69	IF_17	IF_22	CALL_26
0x400551b	      0xbe00000000	                              mov esi, 0	      4491	tc-i386.c	FUNCTION_69	IF_17	IF_22	CALL_26
0x4005520	      0xbf00000000	                              mov edi, 0	      4491	tc-i386.c	FUNCTION_69	IF_17	IF_22	CALL_26
0x4005525	      0xe800000000	                          call 0x400552a	      4491	tc-i386.c	FUNCTION_69	IF_17	IF_22	CALL_26
0x400552a	          0x4c89ee	                            mov rsi, r13	      4491	tc-i386.c	FUNCTION_69	IF_17	IF_22	CALL_26
0x400552d	          0x4889c7	                            mov rdi, rax	      4491	tc-i386.c	FUNCTION_69	IF_17	IF_22	CALL_26
0x4005530	      0xb800000000	                              mov eax, 0	      4491	tc-i386.c	FUNCTION_69	IF_17	IF_22	CALL_26
0x4005535	      0xe800000000	                          call 0x400553a	      4491	tc-i386.c	FUNCTION_69	IF_17	IF_22	CALL_26
0x400553a	      0xb800000000	                              mov eax, 0	      4492	tc-i386.c	FUNCTION_69	IF_17	IF_22
0x400553f	      0xe9d8010000	                           jmp 0x400571c	      4492	tc-i386.c	FUNCTION_69	IF_17	IF_22
0x4005544	    0x488b05000000	            mov rax, qword [0x0400554b] 	      4496	tc-i386.c	FUNCTION_69	IF_23
0x400554b	          0x488b00	                    mov rax, qword [rax]	      4497	tc-i386.c	FUNCTION_69	IF_23
0x400554e	        0xf64028a0	           test byte [rax + 0x28], 0xa0 	      4496	tc-i386.c	FUNCTION_69	IF_23
0x4005552	            0x7449	                            je 0x400559d	      4496	tc-i386.c	FUNCTION_69	IF_23
0x4005554	          0x803b2c	                    cmp byte [rbx], 0x2c	      4505	tc-i386.c	FUNCTION_69	IF_23	IF_24
0x4005557	     0xf8580000000	                           jne 0x40055dd	      4505	tc-i386.c	FUNCTION_69	IF_23	IF_24
0x400555d	        0x807b0170	                cmp byte [rbx + 1], 0x70	      4505	tc-i386.c	FUNCTION_69	IF_23	IF_24
0x4005561	            0x753f	                           jne 0x40055a2	      4505	tc-i386.c	FUNCTION_69	IF_23	IF_24
0x4005563	         0xfb64302	               movzx eax, byte [rbx + 2]	      4507	tc-i386.c	FUNCTION_69	IF_23	IF_24	IF_25
0x4005567	            0x3c74	                            cmp al, 0x74	      4507	tc-i386.c	FUNCTION_69	IF_23	IF_24	IF_25
0x4005569	            0x7518	                           jne 0x4005583	      4507	tc-i386.c	FUNCTION_69	IF_23	IF_24	IF_25
0x400556b	      0xbf3e000000	                           mov edi, 0x3e	      4509	tc-i386.c	FUNCTION_69	IF_23	IF_24	IF_25	IF_26	CALL_27
0x4005570	      0xe8a9cfffff	                     call sym.add_prefix	      4509	tc-i386.c	FUNCTION_69	IF_23	IF_24	IF_25	IF_26	CALL_27
0x4005575	            0x85c0	                           test eax, eax	      4509	tc-i386.c	FUNCTION_69	IF_23	IF_24	IF_25	IF_26	CALL_27
0x4005577	     0xf8493010000	                            je 0x4005710	      4509	tc-i386.c	FUNCTION_69	IF_23	IF_24	IF_25	IF_26	CALL_27
0x400557d	        0x4883c303	                              add rbx, 3	      4511	tc-i386.c	FUNCTION_69	IF_23	IF_24	IF_25
0x4005581	            0xeb1a	                           jmp 0x400559d	      4511	tc-i386.c	FUNCTION_69	IF_23	IF_24	IF_25
0x4005583	            0x3c6e	                            cmp al, 0x6e	      4513	tc-i386.c	FUNCTION_69	IF_23	IF_24	ELSE_11	IF_27
0x4005585	            0x751b	                           jne 0x40055a2	      4513	tc-i386.c	FUNCTION_69	IF_23	IF_24	ELSE_11	IF_27
0x4005587	      0xbf2e000000	                           mov edi, 0x2e	      4515	tc-i386.c	FUNCTION_69	IF_23	IF_24	ELSE_11	IF_27	IF_28	CALL_28
0x400558c	      0xe88dcfffff	                     call sym.add_prefix	      4515	tc-i386.c	FUNCTION_69	IF_23	IF_24	ELSE_11	IF_27	IF_28	CALL_28
0x4005591	            0x85c0	                           test eax, eax	      4515	tc-i386.c	FUNCTION_69	IF_23	IF_24	ELSE_11	IF_27	IF_28	CALL_28
0x4005593	     0xf847e010000	                            je 0x4005717	      4515	tc-i386.c	FUNCTION_69	IF_23	IF_24	ELSE_11	IF_27	IF_28	CALL_28
0x4005599	        0x4883c303	                              add rbx, 3	      4517	tc-i386.c	FUNCTION_69	IF_23	IF_24	ELSE_11	IF_27
0x400559d	          0x803b2c	                    cmp byte [rbx], 0x2c	      4522	tc-i386.c	FUNCTION_69	IF_29
0x40055a0	            0x753b	                           jne 0x40055dd	      4522	tc-i386.c	FUNCTION_69	IF_29
0x40055a2	      0xbf2c000000	                           mov edi, 0x2c	      4524	tc-i386.c	FUNCTION_69	IF_29	CALL_30
0x40055a7	      0xe811faffff	                 call sym.output_invalid	      4524	tc-i386.c	FUNCTION_69	IF_29	CALL_30
0x40055ac	          0x4889c3	                            mov rbx, rax	      4524	tc-i386.c	FUNCTION_69	IF_29	CALL_30
0x40055af	      0xba05000000	                              mov edx, 5	      4524	tc-i386.c	FUNCTION_69	IF_29	CALL_30
0x40055b4	      0xbe00000000	                              mov esi, 0	      4524	tc-i386.c	FUNCTION_69	IF_29	CALL_30
0x40055b9	      0xbf00000000	                              mov edi, 0	      4524	tc-i386.c	FUNCTION_69	IF_29	CALL_30
0x40055be	      0xe800000000	                          call 0x40055c3	      4524	tc-i386.c	FUNCTION_69	IF_29	CALL_30
0x40055c3	          0x4889de	                            mov rsi, rbx	      4524	tc-i386.c	FUNCTION_69	IF_29	CALL_30
0x40055c6	          0x4889c7	                            mov rdi, rax	      4524	tc-i386.c	FUNCTION_69	IF_29	CALL_30
0x40055c9	      0xb800000000	                              mov eax, 0	      4524	tc-i386.c	FUNCTION_69	IF_29	CALL_30
0x40055ce	      0xe800000000	                          call 0x40055d3	      4524	tc-i386.c	FUNCTION_69	IF_29	CALL_30
0x40055d3	      0xb800000000	                              mov eax, 0	      4526	tc-i386.c	FUNCTION_69	IF_29
0x40055d8	      0xe93f010000	                           jmp 0x400571c	      4526	tc-i386.c	FUNCTION_69	IF_29
0x40055dd	    0x4c8b2d000000	            mov r13, qword [0x040055e4] 	      4531	tc-i386.c	FUNCTION_69	FOR_1
0x40055e4	        0x498b6d00	                    mov rbp, qword [r13]	      4531	tc-i386.c	FUNCTION_69	FOR_1
0x40055e8	        0x493b6d08	                cmp rbp, qword [r13 + 8]	      4531	tc-i386.c	FUNCTION_69	FOR_1
0x40055ec	            0x736d	                           jae 0x400565b	      4531	tc-i386.c	FUNCTION_69	FOR_1
0x40055ee	    0x41bc00000000	                             mov r12d, 0	      4531	tc-i386.c	FUNCTION_69	FOR_1
0x40055f4	          0x4889ef	                            mov rdi, rbp	      4533	tc-i386.c	FUNCTION_69	FOR_1	CALL_32
0x40055f7	      0xe844aaffff	                call sym.cpu_flags_match	      4533	tc-i386.c	FUNCTION_69	FOR_1	CALL_32
0x40055fc	          0x4109c4	                            or r12d, eax	      4533	tc-i386.c	FUNCTION_69	FOR_1	CALL_32
0x40055ff	        0x4183fc03	                             cmp r12d, 3	      4534	tc-i386.c	FUNCTION_69	FOR_1	IF_30
0x4005603	            0x7546	                           jne 0x400564b	      4534	tc-i386.c	FUNCTION_69	FOR_1	IF_30
0x4005605	          0x4889d8	                            mov rax, rbx	      4534	tc-i386.c	FUNCTION_69	FOR_1	IF_30
0x4005608	    0xf60500000000	               test byte [0x0400560f], 4	      4536	tc-i386.c	FUNCTION_69	FOR_1	IF_30	IF_31
0x400560f	     0xf8507010000	                           jne 0x400571c	      4536	tc-i386.c	FUNCTION_69	FOR_1	IF_30	IF_31
0x4005615	    0x833d00000000	               cmp dword [0x0400561c], 1	      4536	tc-i386.c	FUNCTION_69	FOR_1	IF_30	IF_31
0x400561c	     0xf84fa000000	                            je 0x400571c	      4536	tc-i386.c	FUNCTION_69	FOR_1	IF_30	IF_31
0x4005622	      0xba05000000	                              mov edx, 5	      4537	tc-i386.c	FUNCTION_69	FOR_1	IF_30	CALL_34
0x4005627	      0xbe00000000	                              mov esi, 0	      4537	tc-i386.c	FUNCTION_69	FOR_1	IF_30	CALL_34
0x400562c	      0xbf00000000	                              mov edi, 0	      4537	tc-i386.c	FUNCTION_69	FOR_1	IF_30	CALL_34
0x4005631	      0xe800000000	                          call 0x4005636	      4537	tc-i386.c	FUNCTION_69	FOR_1	IF_30	CALL_34
0x4005636	          0x4889c7	                            mov rdi, rax	      4537	tc-i386.c	FUNCTION_69	FOR_1	IF_30	CALL_34
0x4005639	      0xb800000000	                              mov eax, 0	      4537	tc-i386.c	FUNCTION_69	FOR_1	IF_30	CALL_34
0x400563e	      0xe800000000	                          call 0x4005643	      4537	tc-i386.c	FUNCTION_69	FOR_1	IF_30	CALL_34
0x4005643	          0x4889d8	                            mov rax, rbx	      4537	tc-i386.c	FUNCTION_69	FOR_1	IF_30	CALL_34
0x4005646	      0xe9d1000000	                           jmp 0x400571c	      4537	tc-i386.c	FUNCTION_69	FOR_1	IF_30	CALL_34
0x400564b	        0x4883c560	                           add rbp, 0x60	      4531	tc-i386.c	FUNCTION_69	FOR_1
0x400564f	        0x49396d08	                cmp qword [r13 + 8], rbp	      4531	tc-i386.c	FUNCTION_69	FOR_1
0x4005653	            0x779f	                            ja 0x40055f4	      4531	tc-i386.c	FUNCTION_69	FOR_1
0x4005655	        0x41f6c402	                            test r12b, 2	      4543	tc-i386.c	FUNCTION_69	IF_32
0x4005659	            0x7551	                           jne 0x40056ac	      4543	tc-i386.c	FUNCTION_69	IF_32
0x400565b	        0x498b4500	                    mov rax, qword [r13]	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x400565f	          0x488b18	                    mov rbx, qword [rax]	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x4005662	    0x833d00000000	               cmp dword [0x04005669], 2	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x4005669	            0x7516	                           jne 0x4005681	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x400566b	      0xba05000000	                              mov edx, 5	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x4005670	      0xbe00000000	                              mov esi, 0	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x4005675	      0xbf00000000	                              mov edi, 0	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x400567a	      0xe800000000	                          call 0x400567f	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x400567f	            0xeb14	                           jmp 0x4005695	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x4005681	      0xba05000000	                              mov edx, 5	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x4005686	      0xbe00000000	                              mov esi, 0	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x400568b	      0xbf00000000	                              mov edi, 0	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x4005690	      0xe800000000	                          call 0x4005695	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x4005695	          0x4889de	                            mov rsi, rbx	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x4005698	          0x4889c7	                            mov rdi, rax	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x400569b	      0xb800000000	                              mov eax, 0	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x40056a0	      0xe800000000	                          call 0x40056a5	      4544	tc-i386.c	FUNCTION_69	IF_32	CALL_35
0x40056a5	      0xb800000000	                              mov eax, 0	      4554	tc-i386.c	FUNCTION_69
0x40056aa	            0xeb70	                           jmp 0x400571c	      4554	tc-i386.c	FUNCTION_69
0x40056ac	    0x488b05000000	            mov rax, qword [0x040056b3] 	      4552	tc-i386.c	FUNCTION_69	ELSE_12
0x40056b3	          0x4885c0	                           test rax, rax	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x40056b6	      0xbd00000000	                              mov ebp, 0	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x40056bb	        0x480f45e8	                         cmovne rbp, rax	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x40056bf	    0x488b1d000000	            mov rbx, qword [0x040056c6] 	      4551	tc-i386.c	FUNCTION_69	ELSE_12
0x40056c6	          0x4885db	                           test rbx, rbx	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x40056c9	    0x480f441d0000	           cmove rbx, qword [0x040056d1]	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x40056d1	        0x498b4500	                    mov rax, qword [r13]	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x40056d5	          0x4c8b20	                    mov r12, qword [rax]	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x40056d8	      0xba05000000	                              mov edx, 5	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x40056dd	      0xbe00000000	                              mov esi, 0	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x40056e2	      0xbf00000000	                              mov edi, 0	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x40056e7	      0xe800000000	                          call 0x40056ec	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x40056ec	          0x4889e9	                            mov rcx, rbp	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x40056ef	          0x4889da	                            mov rdx, rbx	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x40056f2	          0x4c89e6	                            mov rsi, r12	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x40056f5	          0x4889c7	                            mov rdi, rax	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x40056f8	      0xb800000000	                              mov eax, 0	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x40056fd	      0xe800000000	                          call 0x4005702	      4549	tc-i386.c	FUNCTION_69	ELSE_12	CALL_39
0x4005702	      0xb800000000	                              mov eax, 0	      4554	tc-i386.c	FUNCTION_69
0x4005707	            0xeb13	                           jmp 0x400571c	      4554	tc-i386.c	FUNCTION_69
0x4005709	      0xb800000000	                              mov eax, 0	      4400	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2
0x400570e	            0xeb0c	                           jmp 0x400571c	      4400	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	ELSE_2	SWITCH_2
0x4005710	      0xb800000000	                              mov eax, 0	      4510	tc-i386.c	FUNCTION_69	IF_23	IF_24	IF_25	IF_26
0x4005715	            0xeb05	                           jmp 0x400571c	      4510	tc-i386.c	FUNCTION_69	IF_23	IF_24	IF_25	IF_26
0x4005717	      0xb800000000	                              mov eax, 0	      4516	tc-i386.c	FUNCTION_69	IF_23	IF_24	ELSE_11	IF_27	IF_28
0x400571c	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      4555	tc-i386.c	FUNCTION_69
0x4005721	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4555	tc-i386.c	FUNCTION_69
0x400572a	            0x747e	                            je 0x40057aa	      4555	tc-i386.c	FUNCTION_69
0x400572c	            0xeb77	                           jmp 0x40057a5	      4555	tc-i386.c	FUNCTION_69
0x400572e	      0x410fb64500	                   movzx eax, byte [r13]	      4302	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x4005733	            0xa8df	                           test al, 0xdf	      4302	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x4005735	     0xf8594f9ffff	                           jne 0x40050cf	      4302	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x400573b	      0xe9e4f9ffff	                           jmp 0x4005124	      4302	tc-i386.c	FUNCTION_69	WHILE_1	IF_3
0x4005740	        0x488d55fc	                      lea rdx, [rbp - 4]	      4434	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x4005744	          0x4939d4	                            cmp r12, rdx	      4434	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x4005747	     0xf85fbfcffff	                           jne 0x4005448	      4434	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x400574d	      0xe9acfcffff	                           jmp 0x40053fe	      4434	tc-i386.c	FUNCTION_69	ELSE_4	ELSE_5	IF_13	ELSE_7	IF_16
0x4005752	      0x440fb67dff	              movzx r15d, byte [rbp - 1]	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x4005757	        0x418d479e	                   lea eax, [r15 - 0x62]	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x400575b	            0x3c15	                            cmp al, 0x15	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x400575d	     0xf87b3fdffff	                            ja 0x4005516	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x4005763	           0xfb6c0	                           movzx eax, al	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x4005766	    0xff24c5000000	                       jmp qword [rax*8]	      4450	tc-i386.c	FUNCTION_69	IF_17	SWITCH_3
0x400576d	          0x488b18	                    mov rbx, qword [rax]	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x4005770	      0xba05000000	                              mov edx, 5	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x4005775	      0xbe00000000	                              mov esi, 0	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x400577a	      0xbf00000000	                              mov edi, 0	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x400577f	      0xe800000000	                          call 0x4005784	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x4005784	      0xe972faffff	                           jmp 0x40051fb	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x4005789	          0x488b18	                    mov rbx, qword [rax]	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x400578c	      0xba05000000	                              mov edx, 5	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x4005791	      0xbe00000000	                              mov esi, 0	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x4005796	      0xbf00000000	                              mov edi, 0	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x400579b	      0xe800000000	                          call 0x40057a0	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x40057a0	      0xe956faffff	                           jmp 0x40051fb	      4331	tc-i386.c	FUNCTION_69	WHILE_1	IF_6	IF_7	CALL_12
0x40057a5	      0xe800000000	                          call 0x40057aa	      4555	tc-i386.c	FUNCTION_69
0x40057aa	        0x4883c418	                           add rsp, 0x18	      4555	tc-i386.c	FUNCTION_69
0x40057ae	              0x5b	                                 pop rbx	      4555	tc-i386.c	FUNCTION_69
0x40057af	              0x5d	                                 pop rbp	      4555	tc-i386.c	FUNCTION_69
0x40057b0	            0x415c	                                 pop r12	      4555	tc-i386.c	FUNCTION_69
0x40057b2	            0x415d	                                 pop r13	      4555	tc-i386.c	FUNCTION_69
0x40057b4	            0x415e	                                 pop r14	      4555	tc-i386.c	FUNCTION_69
0x40057b6	            0x415f	                                 pop r15	      4555	tc-i386.c	FUNCTION_69
0x40057b8	              0xc3	                                     ret	      4555	tc-i386.c	FUNCTION_69
swap_2_operands	functions,0:ELSE,3:FOR,0:CALL,0:SWITCH,0:WHILE,0:IF,9:DO,0	63
0x4000a65	        0x4883ec18	                           sub rsp, 0x18	      4678	tc-i386.c	FUNCTION_71
0x4000a69	    0x64488b042528	                mov rax, qword fs:[0x28]	      4678	tc-i386.c	FUNCTION_71
0x4000a72	      0x4889442408	                mov qword [rsp + 8], rax	      4678	tc-i386.c	FUNCTION_71
0x4000a77	            0x31c0	                            xor eax, eax	      4678	tc-i386.c	FUNCTION_71
0x4000a79	          0x4863d6	                         movsxd rdx, esi	      4683	tc-i386.c	FUNCTION_71
0x4000a7c	        0x4c8d420e	                     lea r8, [rdx + 0xe]	      4683	tc-i386.c	FUNCTION_71
0x4000a80	    0x4e8b0cc50000	                    mov r9, qword [r8*8]	      4683	tc-i386.c	FUNCTION_71
0x4000a88	          0x4863c7	                         movsxd rax, edi	      4684	tc-i386.c	FUNCTION_71
0x4000a8b	        0x488d480e	                    lea rcx, [rax + 0xe]	      4684	tc-i386.c	FUNCTION_71
0x4000a8f	    0x4c8b14cd0000	                  mov r10, qword [rcx*8]	      4684	tc-i386.c	FUNCTION_71
0x4000a97	    0x4e8914c50000	                   mov qword [r8*8], r10	      4684	tc-i386.c	FUNCTION_71
0x4000a9f	    0x4c890ccd0000	                   mov qword [rcx*8], r9	      4685	tc-i386.c	FUNCTION_71
0x4000aa7	        0x4c8d4214	                    lea r8, [rdx + 0x14]	      4686	tc-i386.c	FUNCTION_71
0x4000aab	    0x4e8b0cc50000	                    mov r9, qword [r8*8]	      4686	tc-i386.c	FUNCTION_71
0x4000ab3	        0x488d4814	                   lea rcx, [rax + 0x14]	      4687	tc-i386.c	FUNCTION_71
0x4000ab7	    0x4c8b14cd0000	                  mov r10, qword [rcx*8]	      4687	tc-i386.c	FUNCTION_71
0x4000abf	    0x4e8914c50000	                   mov qword [r8*8], r10	      4687	tc-i386.c	FUNCTION_71
0x4000ac7	    0x4c890ccd0000	                   mov qword [rcx*8], r9	      4688	tc-i386.c	FUNCTION_71
0x4000acf	        0x4883c234	                           add rdx, 0x34	      4689	tc-i386.c	FUNCTION_71
0x4000ad3	    0x8b0c95000000	                  mov ecx, dword [rdx*4]	      4689	tc-i386.c	FUNCTION_71
0x4000ada	        0x4883c034	                           add rax, 0x34	      4690	tc-i386.c	FUNCTION_71
0x4000ade	    0x448b04850000	                  mov r8d, dword [rax*4]	      4690	tc-i386.c	FUNCTION_71
0x4000ae6	    0x448904950000	                  mov dword [rdx*4], r8d	      4690	tc-i386.c	FUNCTION_71
0x4000aee	    0x890c85000000	                  mov dword [rax*4], ecx	      4691	tc-i386.c	FUNCTION_71
0x4000af5	    0x488b05000000	            mov rax, qword [0x04000afc] 	      4693	tc-i386.c	FUNCTION_71	IF_1
0x4000afc	          0x4885c0	                           test rax, rax	      4693	tc-i386.c	FUNCTION_71	IF_1
0x4000aff	            0x7413	                            je 0x4000b14	      4693	tc-i386.c	FUNCTION_71	IF_1
0x4000b01	          0x8b500c	              mov edx, dword [rax + 0xc]	      4695	tc-i386.c	FUNCTION_71	IF_1	IF_2
0x4000b04	            0x39d7	                            cmp edi, edx	      4695	tc-i386.c	FUNCTION_71	IF_1	IF_2
0x4000b06	            0x7505	                           jne 0x4000b0d	      4695	tc-i386.c	FUNCTION_71	IF_1	IF_2
0x4000b08	          0x89700c	              mov dword [rax + 0xc], esi	      4696	tc-i386.c	FUNCTION_71	IF_1	IF_2
0x4000b0b	            0xeb07	                           jmp 0x4000b14	      4696	tc-i386.c	FUNCTION_71	IF_1	IF_2
0x4000b0d	            0x39d6	                            cmp esi, edx	      4697	tc-i386.c	FUNCTION_71	IF_1	ELSE_1	IF_3
0x4000b0f	            0x7503	                           jne 0x4000b14	      4697	tc-i386.c	FUNCTION_71	IF_1	ELSE_1	IF_3
0x4000b11	          0x89780c	              mov dword [rax + 0xc], edi	      4698	tc-i386.c	FUNCTION_71	IF_1	ELSE_1	IF_3
0x4000b14	    0x488b05000000	            mov rax, qword [0x04000b1b] 	      4700	tc-i386.c	FUNCTION_71	IF_4
0x4000b1b	          0x4885c0	                           test rax, rax	      4700	tc-i386.c	FUNCTION_71	IF_4
0x4000b1e	            0x7413	                            je 0x4000b33	      4700	tc-i386.c	FUNCTION_71	IF_4
0x4000b20	          0x8b5004	                mov edx, dword [rax + 4]	      4702	tc-i386.c	FUNCTION_71	IF_4	IF_5
0x4000b23	            0x39d7	                            cmp edi, edx	      4702	tc-i386.c	FUNCTION_71	IF_4	IF_5
0x4000b25	            0x7505	                           jne 0x4000b2c	      4702	tc-i386.c	FUNCTION_71	IF_4	IF_5
0x4000b27	          0x897004	                mov dword [rax + 4], esi	      4703	tc-i386.c	FUNCTION_71	IF_4	IF_5
0x4000b2a	            0xeb07	                           jmp 0x4000b33	      4703	tc-i386.c	FUNCTION_71	IF_4	IF_5
0x4000b2c	            0x39d6	                            cmp esi, edx	      4704	tc-i386.c	FUNCTION_71	IF_4	ELSE_2	IF_6
0x4000b2e	            0x7503	                           jne 0x4000b33	      4704	tc-i386.c	FUNCTION_71	IF_4	ELSE_2	IF_6
0x4000b30	          0x897804	                mov dword [rax + 4], edi	      4705	tc-i386.c	FUNCTION_71	IF_4	ELSE_2	IF_6
0x4000b33	    0x488b05000000	            mov rax, qword [0x04000b3a] 	      4707	tc-i386.c	FUNCTION_71	IF_7
0x4000b3a	          0x4885c0	                           test rax, rax	      4707	tc-i386.c	FUNCTION_71	IF_7
0x4000b3d	            0x7413	                            je 0x4000b52	      4707	tc-i386.c	FUNCTION_71	IF_7
0x4000b3f	          0x8b5004	                mov edx, dword [rax + 4]	      4709	tc-i386.c	FUNCTION_71	IF_7	IF_8
0x4000b42	            0x39d7	                            cmp edi, edx	      4709	tc-i386.c	FUNCTION_71	IF_7	IF_8
0x4000b44	            0x7505	                           jne 0x4000b4b	      4709	tc-i386.c	FUNCTION_71	IF_7	IF_8
0x4000b46	          0x897004	                mov dword [rax + 4], esi	      4710	tc-i386.c	FUNCTION_71	IF_7	IF_8
0x4000b49	            0xeb07	                           jmp 0x4000b52	      4710	tc-i386.c	FUNCTION_71	IF_7	IF_8
0x4000b4b	            0x39d6	                            cmp esi, edx	      4711	tc-i386.c	FUNCTION_71	IF_7	ELSE_3	IF_9
0x4000b4d	            0x7503	                           jne 0x4000b52	      4711	tc-i386.c	FUNCTION_71	IF_7	ELSE_3	IF_9
0x4000b4f	          0x897804	                mov dword [rax + 4], edi	      4712	tc-i386.c	FUNCTION_71	IF_7	ELSE_3	IF_9
0x4000b52	      0x488b442408	                mov rax, qword [rsp + 8]	      4714	tc-i386.c	FUNCTION_71
0x4000b57	    0x644833042528	                xor rax, qword fs:[0x28]	      4714	tc-i386.c	FUNCTION_71
0x4000b60	            0x7405	                            je 0x4000b67	      4714	tc-i386.c	FUNCTION_71
0x4000b62	      0xe800000000	                          call 0x4000b67	      4714	tc-i386.c	FUNCTION_71
0x4000b67	        0x4883c418	                           add rsp, 0x18	      4714	tc-i386.c	FUNCTION_71
0x4000b6b	              0xc3	                                     ret	      4714	tc-i386.c	FUNCTION_71
show_arch	functions,0:ELSE,3:FOR,2:CALL,4:SWITCH,0:WHILE,0:IF,6:DO,0	87
0x400661b	            0x4157	                                push r15	     10895	tc-i386.c	FUNCTION_126
0x400661d	            0x4156	                                push r14	     10895	tc-i386.c	FUNCTION_126
0x400661f	            0x4155	                                push r13	     10895	tc-i386.c	FUNCTION_126
0x4006621	            0x4154	                                push r12	     10895	tc-i386.c	FUNCTION_126
0x4006623	              0x55	                                push rbp	     10895	tc-i386.c	FUNCTION_126
0x4006624	              0x53	                                push rbx	     10895	tc-i386.c	FUNCTION_126
0x4006625	        0x4883ec18	                           sub rsp, 0x18	     10895	tc-i386.c	FUNCTION_126
0x4006629	          0x4989fe	                            mov r14, rdi	     10895	tc-i386.c	FUNCTION_126
0x400662c	          0x4189f5	                           mov r13d, esi	     10895	tc-i386.c	FUNCTION_126
0x400662f	          0x4189d7	                           mov r15d, edx	     10895	tc-i386.c	FUNCTION_126
0x4006632	    0x64488b042528	                mov rax, qword fs:[0x28]	     10895	tc-i386.c	FUNCTION_126
0x400663b	      0x4889442408	                mov qword [rsp + 8], rax	     10895	tc-i386.c	FUNCTION_126
0x4006640	            0x31c0	                            xor eax, eax	     10895	tc-i386.c	FUNCTION_126
0x4006642	    0xc74424043600	               mov dword [rsp + 4], 0x36	     10906	tc-i386.c	FUNCTION_126
0x400664a	      0xbb00000000	                              mov ebx, 0	     10906	tc-i386.c	FUNCTION_126
0x400664f	    0x41bc00000000	                             mov r12d, 0	     10906	tc-i386.c	FUNCTION_126
0x4006655	      0xbd00000000	                              mov ebp, 0	     10907	tc-i386.c	FUNCTION_126	FOR_1	CALL_1
0x400665a	      0xb800000000	                              mov eax, 0	     10905	tc-i386.c	FUNCTION_126
0x400665f	          0x833b00	                      cmp dword [rbx], 0	     10910	tc-i386.c	FUNCTION_126	FOR_1	IF_1
0x4006662	            0x7558	                           jne 0x40066bc	     10910	tc-i386.c	FUNCTION_126	FOR_1	IF_1
0x4006664	        0x4c8b4be0	              mov r9, qword [rbx - 0x20]	     10913	tc-i386.c	FUNCTION_126	FOR_1
0x4006668	          0x8b53e8	             mov edx, dword [rbx - 0x18]	     10914	tc-i386.c	FUNCTION_126	FOR_1
0x400666b	        0x4180392e	                     cmp byte [r9], 0x2e	     10915	tc-i386.c	FUNCTION_126	FOR_1	IF_2
0x400666f	            0x750e	                           jne 0x400667f	     10915	tc-i386.c	FUNCTION_126	FOR_1	IF_2
0x4006671	          0x4585ed	                         test r13d, r13d	     10918	tc-i386.c	FUNCTION_126	FOR_1	IF_2	IF_3
0x4006674	            0x7446	                            je 0x40066bc	     10918	tc-i386.c	FUNCTION_126	FOR_1	IF_2	IF_3
0x4006676	        0x4983c101	                               add r9, 1	     10920	tc-i386.c	FUNCTION_126	FOR_1	IF_2	IF_3
0x400667a	          0x83ea01	                              sub edx, 1	     10921	tc-i386.c	FUNCTION_126	FOR_1	IF_2	IF_3
0x400667d	            0xeb1a	                           jmp 0x4006699	     10921	tc-i386.c	FUNCTION_126	FOR_1	IF_2	IF_3
0x400667f	          0x4585ed	                         test r13d, r13d	     10926	tc-i386.c	FUNCTION_126	FOR_1	ELSE_1	ELSE_2	IF_4
0x4006682	            0x7538	                           jne 0x40066bc	     10926	tc-i386.c	FUNCTION_126	FOR_1	ELSE_1	ELSE_2	IF_4
0x4006684	          0x4585ff	                         test r15d, r15d	     10931	tc-i386.c	FUNCTION_126	FOR_1	ELSE_3	IF_5
0x4006687	            0x7410	                            je 0x4006699	     10931	tc-i386.c	FUNCTION_126	FOR_1	ELSE_3	IF_5
0x4006689	            0x89e9	                            mov ecx, ebp	     10931	tc-i386.c	FUNCTION_126	FOR_1	ELSE_3	IF_5
0x400668b	        0x488d0c89	                  lea rcx, [rcx + rcx*4]	     10931	tc-i386.c	FUNCTION_126	FOR_1	ELSE_3	IF_5
0x400668f	    0xf604cd000000	                    test byte [rcx*8], 4	     10931	tc-i386.c	FUNCTION_126	FOR_1	ELSE_3	IF_5
0x4006697	            0x7423	                            je 0x40066bc	     10931	tc-i386.c	FUNCTION_126	FOR_1	ELSE_3	IF_5
0x4006699	        0x4883ec08	                              sub rsp, 8	     10937	tc-i386.c	FUNCTION_126	FOR_1	CALL_2
0x400669d	              0x52	                                push rdx	     10937	tc-i386.c	FUNCTION_126	FOR_1	CALL_2
0x400669e	      0x4c8d442414	                    lea r8, [rsp + 0x14]	     10937	tc-i386.c	FUNCTION_126	FOR_1	CALL_2
0x40066a3	      0xb900000000	                              mov ecx, 0	     10937	tc-i386.c	FUNCTION_126	FOR_1	CALL_2
0x40066a8	      0xba00000000	                              mov edx, 0	     10937	tc-i386.c	FUNCTION_126	FOR_1	CALL_2
0x40066ad	          0x4889c6	                            mov rsi, rax	     10937	tc-i386.c	FUNCTION_126	FOR_1	CALL_2
0x40066b0	          0x4c89f7	                            mov rdi, r14	     10937	tc-i386.c	FUNCTION_126	FOR_1	CALL_2
0x40066b3	      0xe8b8feffff	                 call sym.output_message	     10937	tc-i386.c	FUNCTION_126	FOR_1	CALL_2
0x40066b8	        0x4883c410	                           add rsp, 0x10	     10937	tc-i386.c	FUNCTION_126	FOR_1	CALL_2
0x40066bc	          0x83c501	                              add ebp, 1	     10907	tc-i386.c	FUNCTION_126	FOR_1	CALL_1
0x40066bf	        0x4883c328	                           add rbx, 0x28	     10907	tc-i386.c	FUNCTION_126	FOR_1	CALL_1
0x40066c3	          0x4c39e3	                            cmp rbx, r12	     10907	tc-i386.c	FUNCTION_126	FOR_1	CALL_1
0x40066c6	            0x7597	                           jne 0x400665f	     10907	tc-i386.c	FUNCTION_126	FOR_1	CALL_1
0x40066c8	          0x4585ed	                         test r13d, r13d	     10941	tc-i386.c	FUNCTION_126	IF_6
0x40066cb	            0x743c	                            je 0x4006709	     10941	tc-i386.c	FUNCTION_126	IF_6
0x40066cd	      0xbb00000000	                              mov ebx, 0	     10941	tc-i386.c	FUNCTION_126	IF_6
0x40066d2	      0xbd00000000	                              mov ebp, 0	     10941	tc-i386.c	FUNCTION_126	IF_6
0x40066d7	        0x4883ec08	                              sub rsp, 8	     10946	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_4
0x40066db	          0x8b5308	                mov edx, dword [rbx + 8]	     10946	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_4
0x40066de	              0x52	                                push rdx	     10946	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_4
0x40066df	          0x4c8b0b	                     mov r9, qword [rbx]	     10946	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_4
0x40066e2	      0x4c8d442414	                    lea r8, [rsp + 0x14]	     10946	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_4
0x40066e7	      0xb900000000	                              mov ecx, 0	     10946	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_4
0x40066ec	      0xba00000000	                              mov edx, 0	     10946	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_4
0x40066f1	          0x4889c6	                            mov rsi, rax	     10946	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_4
0x40066f4	          0x4c89f7	                            mov rdi, r14	     10946	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_4
0x40066f7	      0xe874feffff	                 call sym.output_message	     10946	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_4
0x40066fc	        0x4883c320	                           add rbx, 0x20	     10946	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_4
0x4006700	        0x4883c410	                           add rsp, 0x10	     10942	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_3
0x4006704	          0x4839eb	                            cmp rbx, rbp	     10942	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_3
0x4006707	            0x75ce	                           jne 0x40066d7	     10942	tc-i386.c	FUNCTION_126	IF_6	FOR_2	CALL_3
0x4006709	          0xc60000	                       mov byte [rax], 0	     10950	tc-i386.c	FUNCTION_126
0x400670c	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_256
0x4006711	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_256
0x4006716	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_256
0x400671b	          0x4c89f7	                            mov rdi, r14	        97	stdio2.h	CALL_256
0x400671e	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_256
0x4006723	      0xe800000000	                          call 0x4006728	        97	stdio2.h	CALL_256
0x4006728	      0x488b442408	                mov rax, qword [rsp + 8]	     10952	tc-i386.c	FUNCTION_126
0x400672d	    0x644833042528	                xor rax, qword fs:[0x28]	     10952	tc-i386.c	FUNCTION_126
0x4006736	            0x7405	                            je 0x400673d	     10952	tc-i386.c	FUNCTION_126
0x4006738	      0xe800000000	                          call 0x400673d	     10952	tc-i386.c	FUNCTION_126
0x400673d	        0x4883c418	                           add rsp, 0x18	     10952	tc-i386.c	FUNCTION_126
0x4006741	              0x5b	                                 pop rbx	     10952	tc-i386.c	FUNCTION_126
0x4006742	              0x5d	                                 pop rbp	     10952	tc-i386.c	FUNCTION_126
0x4006743	            0x415c	                                 pop r12	     10952	tc-i386.c	FUNCTION_126
0x4006745	            0x415d	                                 pop r13	     10952	tc-i386.c	FUNCTION_126
0x4006747	            0x415e	                                 pop r14	     10952	tc-i386.c	FUNCTION_126
0x4006749	            0x415f	                                 pop r15	     10952	tc-i386.c	FUNCTION_126
0x400674b	              0xc3	                                     ret	     10952	tc-i386.c	FUNCTION_126
s_bss	functions,0:ELSE,0:FOR,0:CALL,4:SWITCH,0:WHILE,0:IF,1:DO,0	9
0x40026a6	        0x4883ec08	                              sub rsp, 8	     11234	tc-i386.c	FUNCTION_133
0x40026aa	      0xe800000000	                          call 0x40026af	     11239	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3
0x40026af	      0xe800000000	                          call 0x40026b4	     11241	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3	IF_4
0x40026b4	            0x89c6	                            mov esi, eax	     11242	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3	CALL_1
0x40026b6	    0x488b3d000000	            mov rdi, qword [0x040026bd] 	     11242	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3	CALL_1
0x40026bd	      0xe800000000	                          call 0x40026c2	     11242	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3	CALL_1
0x40026c2	      0xe800000000	                          call 0x40026c7	     11243	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3
0x40026c7	        0x4883c408	                              add rsp, 8	     11244	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3	IF_5
0x40026cb	              0xc3	                                     ret	     11244	tc-i386.c	FUNCTION_133	IF_1	IF_2	IF_3	IF_5
i386_print_statistics	functions,0:ELSE,0:FOR,0:CALL,2:SWITCH,0:WHILE,0:IF,0:DO,0	11
0x400b859	              0x53	                                push rbx	      2918	tc-i386.c	FUNCTION_53
0x400b85a	          0x4889fb	                            mov rbx, rdi	      2918	tc-i386.c	FUNCTION_53
0x400b85d	    0x488b15000000	            mov rdx, qword [0x0400b864] 	      2919	tc-i386.c	FUNCTION_53	CALL_1
0x400b864	      0xbe00000000	                              mov esi, 0	      2919	tc-i386.c	FUNCTION_53	CALL_1
0x400b869	      0xe800000000	                          call 0x400b86e	      2919	tc-i386.c	FUNCTION_53	CALL_1
0x400b86e	    0x488b15000000	            mov rdx, qword [0x0400b875] 	      2920	tc-i386.c	FUNCTION_53	CALL_2
0x400b875	      0xbe00000000	                              mov esi, 0	      2920	tc-i386.c	FUNCTION_53	CALL_2
0x400b87a	          0x4889df	                            mov rdi, rbx	      2920	tc-i386.c	FUNCTION_53	CALL_2
0x400b87d	      0xe800000000	                          call 0x400b882	      2920	tc-i386.c	FUNCTION_53	CALL_2
0x400b882	              0x5b	                                 pop rbx	      2921	tc-i386.c	FUNCTION_53
0x400b883	              0xc3	                                     ret	      2921	tc-i386.c	FUNCTION_53
md_section_align	functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0:IF,1:DO,0	2
0x4010775	          0x4889f0	                            mov rax, rsi	     11201	tc-i386.c	FUNCTION_130
0x4010778	              0xc3	                                     ret	     11218	tc-i386.c	FUNCTION_132
process_operands	functions,0:ELSE,13:FOR,3:CALL,22:SWITCH,0:WHILE,0:IF,24:DO,0	1435
0x4003660	            0x4155	                                push r13	      6418	tc-i386.c	FUNCTION_86
0x4003662	            0x4154	                                push r12	      6418	tc-i386.c	FUNCTION_86
0x4003664	              0x55	                                push rbp	      6418	tc-i386.c	FUNCTION_86
0x4003665	              0x53	                                push rbx	      6418	tc-i386.c	FUNCTION_86
0x4003666	        0x4883ec18	                           sub rsp, 0x18	      6418	tc-i386.c	FUNCTION_86
0x400366a	    0x64488b042528	                mov rax, qword fs:[0x28]	      6418	tc-i386.c	FUNCTION_86
0x4003673	      0x4889442408	                mov qword [rsp + 8], rax	      6418	tc-i386.c	FUNCTION_86
0x4003678	            0x31c0	                            xor eax, eax	      6418	tc-i386.c	FUNCTION_86
0x400367a	     0xfb605000000	           movzx eax, byte [0x04003681] 	      6424	tc-i386.c	FUNCTION_86	IF_1
0x4003681	            0xa840	                           test al, 0x40	      6424	tc-i386.c	FUNCTION_86	IF_1
0x4003683	     0xf843a020000	                            je 0x40038c3	      6424	tc-i386.c	FUNCTION_86	IF_1
0x4003689	    0xf60500000000	           test byte [0x04003690], 0x18 	      6424	tc-i386.c	FUNCTION_86	IF_1
0x4003690	     0xf842d020000	                            je 0x40038c3	      6424	tc-i386.c	FUNCTION_86	IF_1
0x4003696	    0x8b1d00000000	            mov ebx, dword [0x0400369c] 	      6426	tc-i386.c	FUNCTION_86	IF_1
0x400369c	          0x8d53ff	                      lea edx, [rbx - 1]	      6427	tc-i386.c	FUNCTION_86	IF_1
0x400369f	    0x8b0d00000000	            mov ecx, dword [0x040036a5] 	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x40036a5	            0x85c9	                           test ecx, ecx	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x40036a7	            0x7425	                            je 0x40036ce	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x40036a9	          0x83fb04	                              cmp ebx, 4	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x40036ac	            0x7720	                            ja 0x40036ce	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x40036ae	            0x89d6	                            mov esi, edx	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x40036b0	    0x8b3cf5000000	                  mov edi, dword [rsi*8]	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x40036b7	    0x393d00000000	            cmp dword [0x040036bd], edi 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x40036bd	            0x750f	                           jne 0x40036ce	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x40036bf	    0x8b3cf5000000	                  mov edi, dword [rsi*8]	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x40036c6	    0x393d00000000	            cmp dword [0x040036cc], edi 	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x40036cc	            0x7414	                            je 0x40036e2	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x40036ce	      0xba00000000	                              mov edx, 0	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x40036d3	      0xbe21190000	                         mov esi, 0x1921	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x40036d8	      0xbf00000000	                              mov edi, 0	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x40036dd	      0xe800000000	                          call 0x40036e2	      6431	tc-i386.c	FUNCTION_86	IF_1	CALL_1
0x40036e2	    0xf60500000000	           test byte [0x040036e9], 0x20 	      6435	tc-i386.c	FUNCTION_86	IF_1	IF_2
0x40036e9	            0x746c	                            je 0x4003757	      6435	tc-i386.c	FUNCTION_86	IF_1	IF_2
0x40036eb	    0xf60500000000	               test byte [0x040036f2], 8	      6436	tc-i386.c	FUNCTION_86	IF_1	IF_2
0x40036f2	            0x7463	                            je 0x4003757	      6436	tc-i386.c	FUNCTION_86	IF_1	IF_2
0x40036f4	          0x83e00c	                            and eax, 0xc	      6438	tc-i386.c	FUNCTION_86	IF_1	IF_2	IF_3
0x40036f7	            0x3c08	                               cmp al, 8	      6438	tc-i386.c	FUNCTION_86	IF_1	IF_2	IF_3
0x40036f9	            0x740a	                            je 0x4003705	      6438	tc-i386.c	FUNCTION_86	IF_1	IF_2	IF_3
0x40036fb	          0x83fb01	                              cmp ebx, 1	      6451	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x40036fe	            0x7718	                            ja 0x4003718	      6451	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x4003700	      0xe9a7010000	                           jmp 0x40038ac	      6451	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x4003705	    0x802500000000	             and byte [0x0400370c], 0xdf	      6442	tc-i386.c	FUNCTION_86	IF_1	IF_2	IF_3
0x400370c	    0x800d00000000	                 or byte [0x04003713], 4	      6443	tc-i386.c	FUNCTION_86	IF_1	IF_2	IF_3
0x4003713	      0xe947010000	                           jmp 0x400385f	      6444	tc-i386.c	FUNCTION_86	IF_1	IF_2	IF_3
0x4003718	      0xb800000000	                              mov eax, 0	      6444	tc-i386.c	FUNCTION_86	IF_1	IF_2	IF_3
0x400371d	          0x8d53fe	                      lea edx, [rbx - 2]	      6444	tc-i386.c	FUNCTION_86	IF_1	IF_2	IF_3
0x4003720	    0x488d0cd50000	                        lea rcx, [rdx*8]	      6444	tc-i386.c	FUNCTION_86	IF_1	IF_2	IF_3
0x4003728	    0x488b90a80000	            mov rdx, qword [rax + 0xa8] 	      6453	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400372f	    0x488990a00000	             mov qword [rax + 0xa0], rdx	      6453	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x4003736	    0x488b90800000	            mov rdx, qword [rax + 0x80] 	      6454	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400373d	        0x48895078	             mov qword [rax + 0x78], rdx	      6454	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x4003741	        0x488b503c	            mov rdx, qword [rax + 0x3c] 	      6455	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x4003745	        0x48895034	             mov qword [rax + 0x34], rdx	      6455	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x4003749	        0x4883c008	                              add rax, 8	      6455	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x400374d	          0x4839c1	                            cmp rcx, rax	      6451	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x4003750	            0x75d6	                           jne 0x4003728	      6451	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x4003752	      0xe955010000	                           jmp 0x40038ac	      6451	tc-i386.c	FUNCTION_86	IF_1	IF_2	ELSE_1	FOR_1
0x4003757	    0xf60500000000	           test byte [0x0400375e], 0x20 	      6459	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400375e	     0xf84fb000000	                            je 0x400385f	      6459	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x4003764	          0x83fb03	                              cmp ebx, 3	      6461	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_3
0x4003767	            0x770f	                            ja 0x4003778	      6461	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_3
0x4003769	          0x83e00c	                            and eax, 0xc	      6461	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_3
0x400376c	            0x3c08	                               cmp al, 8	      6461	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_3
0x400376e	            0x7508	                           jne 0x4003778	      6461	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_3
0x4003770	            0x89d8	                            mov eax, ebx	      6467	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x4003772	            0x85db	                           test ebx, ebx	      6467	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x4003774	            0x7516	                           jne 0x400378c	      6467	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x4003776	            0xeb51	                           jmp 0x40037c9	      6467	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x4003778	      0xba00000000	                              mov edx, 0	      6461	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_3
0x400377d	      0xbe3f190000	                         mov esi, 0x193f	      6461	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_3
0x4003782	      0xbf00000000	                              mov edi, 0	      6461	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_3
0x4003787	      0xe800000000	                          call 0x400378c	      6461	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_3
0x400378c	          0x8d50ff	                      lea edx, [rax - 1]	      6469	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400378f	            0x89c0	                            mov eax, eax	      6469	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x4003791	            0x89d1	                            mov ecx, edx	      6469	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x4003793	    0x488b34cd0000	                  mov rsi, qword [rcx*8]	      6469	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x400379b	    0x488934c50000	                  mov qword [rax*8], rsi	      6469	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x40037a3	    0x488b34cd0000	                  mov rsi, qword [rcx*8]	      6470	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x40037ab	    0x488934c50000	                  mov qword [rax*8], rsi	      6470	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x40037b3	    0x488b0ccd0000	                  mov rcx, qword [rcx*8]	      6471	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x40037bb	    0x48890cc50000	                  mov qword [rax*8], rcx	      6471	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x40037c3	            0x89d0	                            mov eax, edx	      6467	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x40037c5	            0x85d2	                           test edx, edx	      6467	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x40037c7	            0x75c3	                           jne 0x400378c	      6467	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	FOR_2
0x40037c9	      0xbe00000000	                              mov esi, 0	      6474	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_4
0x40037ce	    0x488b3d000000	            mov rdi, qword [0x040037d5] 	      6474	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_4
0x40037d5	      0xe800000000	                          call 0x40037da	      6474	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_4
0x40037da	    0x488905000000	            mov qword [0x040037e1], rax 	      6474	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4	CALL_4
0x40037e1	    0x48c705000000	               mov qword [0x040037ec], 0	      6475	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x40037ec	    0xc60500000000	                mov byte [0x040037f3], 4	      6475	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x40037f3	    0xc60500000000	                mov byte [0x040037fa], 8	      6475	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x40037fa	    0x48c705000000	               mov qword [0x04003805], 0	      6476	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x4003805	    0xc60500000000	                mov byte [0x0400380c], 4	      6476	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400380c	    0xc60500000000	                mov byte [0x04003813], 8	      6476	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x4003813	    0x830500000000	               add dword [0x0400381a], 2	      6478	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400381a	    0x830500000000	               add dword [0x04003821], 2	      6479	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x4003821	    0x830500000000	               add dword [0x04003828], 2	      6480	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x4003828	          0x8d4301	                      lea eax, [rbx + 1]	      6484	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400382b	            0x89db	                            mov ebx, ebx	      6484	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400382d	    0x488b14dd0000	                  mov rdx, qword [rbx*8]	      6484	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x4003835	    0x488914c50000	                  mov qword [rax*8], rdx	      6484	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400383d	    0x488b14dd0000	                  mov rdx, qword [rbx*8]	      6485	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x4003845	    0x488914c50000	                  mov qword [rax*8], rdx	      6485	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400384d	    0x488b14dd0000	                  mov rdx, qword [rbx*8]	      6486	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x4003855	    0x488914c50000	                  mov qword [rax*8], rdx	      6486	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400385d	            0xeb4d	                           jmp 0x40038ac	      6486	tc-i386.c	FUNCTION_86	IF_1	ELSE_2	IF_4
0x400385f	          0x8d4301	                      lea eax, [rbx + 1]	      6491	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x4003862	    0x890500000000	            mov dword [0x04003868], eax 	      6491	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x4003868	          0x83c101	                              add ecx, 1	      6492	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400386b	    0x890d00000000	            mov dword [0x04003871], ecx 	      6492	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x4003871	    0x830500000000	               add dword [0x04003878], 1	      6493	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x4003878	            0x89db	                            mov ebx, ebx	      6495	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400387a	            0x89d2	                            mov edx, edx	      6495	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400387c	    0x488b04d50000	                  mov rax, qword [rdx*8]	      6495	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x4003884	    0x488904dd0000	                  mov qword [rbx*8], rax	      6495	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400388c	    0x488b04d50000	                  mov rax, qword [rdx*8]	      6496	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x4003894	    0x488904dd0000	                  mov qword [rbx*8], rax	      6496	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x400389c	    0x488b04d50000	                  mov rax, qword [rdx*8]	      6497	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x40038a4	    0x488904dd0000	                  mov qword [rbx*8], rax	      6497	tc-i386.c	FUNCTION_86	IF_1	ELSE_3
0x40038ac	    0xf60500000000	           test byte [0x040038b3], 0x20 	      6500	tc-i386.c	FUNCTION_86	IF_1	IF_5
0x40038b3	     0xf84ad010000	                            je 0x4003a66	      6500	tc-i386.c	FUNCTION_86	IF_1	IF_5
0x40038b9	      0xe83ce2ffff	                 call sym.process_immext	      6501	tc-i386.c	FUNCTION_86	IF_1	CALL_5
0x40038be	      0xe9a3010000	                           jmp 0x4003a66	      6501	tc-i386.c	FUNCTION_86	IF_1	CALL_5
0x40038c3	    0xf60500000000	           test byte [0x040038ca], 0x20 	      6503	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x40038ca	            0x746a	                            je 0x4003936	      6503	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x40038cc	    0xf60500000000	               test byte [0x040038d3], 8	      6504	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x40038d3	            0x7461	                            je 0x4003936	      6504	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x40038d5	    0x8b0d00000000	            mov ecx, dword [0x040038db] 	      6508	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x40038db	          0x83f901	                              cmp ecx, 1	      6508	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x40038de	            0x763a	                           jbe 0x400391a	      6508	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x40038e0	      0xb800000000	                              mov eax, 0	      6508	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x40038e5	          0x8d51fe	                      lea edx, [rcx - 2]	      6508	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x40038e8	    0x488d34d50000	                        lea rsi, [rdx*8]	      6508	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x40038f0	    0x488b90a80000	            mov rdx, qword [rax + 0xa8] 	      6510	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x40038f7	    0x488990a00000	             mov qword [rax + 0xa0], rdx	      6510	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x40038fe	    0x488b90800000	            mov rdx, qword [rax + 0x80] 	      6511	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x4003905	        0x48895078	             mov qword [rax + 0x78], rdx	      6511	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x4003909	        0x488b503c	            mov rdx, qword [rax + 0x3c] 	      6515	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400390d	        0x48895034	             mov qword [rax + 0x34], rdx	      6515	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x4003911	        0x4883c008	                              add rax, 8	      6515	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x4003915	          0x4839f0	                            cmp rax, rsi	      6508	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x4003918	            0x75d6	                           jne 0x40038f0	      6508	tc-i386.c	FUNCTION_86	ELSE_4	IF_6	FOR_3
0x400391a	          0x83e901	                              sub ecx, 1	      6518	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x400391d	    0x890d00000000	            mov dword [0x04003923], ecx 	      6518	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x4003923	    0x832d00000000	               sub dword [0x0400392a], 1	      6519	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x400392a	    0x832d00000000	               sub dword [0x04003931], 1	      6520	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x4003931	      0xe930010000	                           jmp 0x4003a66	      6505	tc-i386.c	FUNCTION_86	ELSE_4	IF_6
0x4003936	    0xf60500000000	           test byte [0x0400393d], 0x10 	      6522	tc-i386.c	FUNCTION_86	ELSE_5	IF_7
0x400393d	     0xf84a4000000	                            je 0x40039e7	      6522	tc-i386.c	FUNCTION_86	ELSE_5	IF_7
0x4003943	    0x833d00000000	               cmp dword [0x0400394a], 1	      6527	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	CALL_6
0x400394a	            0x7609	                           jbe 0x4003955	      6527	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	CALL_6
0x400394c	    0xf60500000000	               test byte [0x04003953], 4	      6527	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	CALL_6
0x4003953	            0x7514	                           jne 0x4003969	      6527	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	CALL_6
0x4003955	      0xba00000000	                              mov edx, 0	      6527	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	CALL_6
0x400395a	      0xbe7f190000	                         mov esi, 0x197f	      6527	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	CALL_6
0x400395f	      0xbf00000000	                              mov edi, 0	      6527	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	CALL_6
0x4003964	      0xe800000000	                          call 0x4003969	      6527	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	CALL_6
0x4003969	    0x488b15000000	            mov rdx, qword [0x04003970] 	      6528	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	CALL_7
0x4003970	         0xfb64211	           movzx eax, byte [rdx + 0x11] 	      2123	tc-i386.c	FUNCTION_28
0x4003974	         0xfb64a10	           movzx ecx, byte [rdx + 0x10] 	      2125	tc-i386.c	FUNCTION_28	IF_1
0x4003978	          0x8d7008	                      lea esi, [rax + 8]	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400397b	          0xf6c101	                              test cl, 1	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400397e	           0xf45c6	                         cmovne eax, esi	      2126	tc-i386.c	FUNCTION_28	IF_1
0x4003981	          0x8d7010	                   lea esi, [rax + 0x10]	      2129	tc-i386.c	FUNCTION_28	IF_2
0x4003984	          0xf6c104	                              test cl, 4	      2129	tc-i386.c	FUNCTION_28	IF_2
0x4003987	           0xf45c6	                         cmovne eax, esi	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400398a	            0x89c3	                            mov ebx, eax	      6529	tc-i386.c	FUNCTION_86	ELSE_5	IF_7
0x400398c	          0x83e3fc	                     and ebx, 0xfffffffc	      6529	tc-i386.c	FUNCTION_86	ELSE_5	IF_7
0x400398f	            0x39c3	                            cmp ebx, eax	      6531	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8
0x4003991	     0xf84cf000000	                            je 0x4003a66	      6531	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8
0x4003997	    0x4c8b2d000000	            mov r13, qword [0x0400399e] 	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x400399e	          0x4c8b22	                    mov r12, qword [rdx]	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x40039a1	    0x488b2d000000	            mov rbp, qword [0x040039a8] 	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x40039a8	      0xba05000000	                              mov edx, 5	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x40039ad	      0xbe00000000	                              mov esi, 0	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x40039b2	      0xbf00000000	                              mov edi, 0	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x40039b7	      0xe800000000	                          call 0x40039bc	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x40039bc	            0x4155	                                push r13	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x40039be	          0x8d5303	                      lea edx, [rbx + 3]	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x40039c1	              0x52	                                push rdx	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x40039c2	            0x4154	                                push r12	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x40039c4	              0x55	                                push rbp	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x40039c5	          0x4189d9	                            mov r9d, ebx	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x40039c8	          0x4d89e0	                             mov r8, r12	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x40039cb	          0x4889e9	                            mov rcx, rbp	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x40039ce	          0x4c89e2	                            mov rdx, r12	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x40039d1	          0x4889ee	                            mov rsi, rbp	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x40039d4	          0x4889c7	                            mov rdi, rax	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x40039d7	      0xb800000000	                              mov eax, 0	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x40039dc	      0xe800000000	                          call 0x40039e1	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x40039e1	        0x4883c420	                           add rsp, 0x20	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x40039e5	            0xeb7f	                           jmp 0x4003a66	      6532	tc-i386.c	FUNCTION_86	ELSE_5	IF_7	IF_8	CALL_9
0x40039e7	    0xf60500000000	           test byte [0x040039ee], 0x10 	      6539	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x40039ee	            0x7476	                            je 0x4003a66	      6539	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x40039f0	     0xfb605000000	           movzx eax, byte [0x040039f7] 	      6539	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x40039f7	            0xf7d0	                                 not eax	      6548	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	IF_10
0x40039f9	          0x83e001	                              and eax, 1	      6548	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	IF_10
0x40039fc	    0x833d00000000	               cmp dword [0x04003a03], 1	      6552	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	CALL_11
0x4003a03	            0x7510	                           jne 0x4003a15	      6552	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	CALL_11
0x4003a05	          0x8d5001	                      lea edx, [rax + 1]	      6552	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	CALL_11
0x4003a08	            0x89d1	                            mov ecx, edx	      6552	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	CALL_11
0x4003a0a	    0x48833ccd0000	                    cmp qword [rcx*8], 0	      6552	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	CALL_11
0x4003a13	            0x7414	                            je 0x4003a29	      6552	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	CALL_11
0x4003a15	      0xba00000000	                              mov edx, 0	      6552	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	CALL_11
0x4003a1a	      0xbe99190000	                         mov esi, 0x1999	      6552	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	CALL_11
0x4003a1f	      0xbf00000000	                              mov edi, 0	      6552	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	CALL_11
0x4003a24	      0xe800000000	                          call 0x4003a29	      6552	tc-i386.c	FUNCTION_86	ELSE_6	IF_9	CALL_11
0x4003a29	            0x89c0	                            mov eax, eax	      6554	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x4003a2b	        0x488d4814	                   lea rcx, [rax + 0x14]	      6554	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x4003a2f	    0x488b0ccd0000	                  mov rcx, qword [rcx*8]	      6554	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x4003a37	            0x89d2	                            mov edx, edx	      6554	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x4003a39	    0x48890cd50000	                  mov qword [rdx*8], rcx	      6554	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x4003a41	        0x4883c00e	                            add rax, 0xe	      6555	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x4003a45	    0x488b04c50000	                  mov rax, qword [rax*8]	      6555	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x4003a4d	    0x488904d50000	                  mov qword [rdx*8], rax	      6555	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x4003a55	    0x830500000000	               add dword [0x04003a5c], 1	      6556	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x4003a5c	    0xc70500000000	               mov dword [0x04003a66], 2	      6557	tc-i386.c	FUNCTION_86	ELSE_6	IF_9
0x4003a66	     0xfb605000000	           movzx eax, byte [0x04003a6d] 	      6560	tc-i386.c	FUNCTION_86	IF_11
0x4003a6d	            0xa810	                           test al, 0x10	      6560	tc-i386.c	FUNCTION_86	IF_11
0x4003a6f	     0xf84bf010000	                            je 0x4003c34	      6560	tc-i386.c	FUNCTION_86	IF_11
0x4003a75	    0x66f705000000	          test word [0x04003a7e], 0x180 	      6562	tc-i386.c	FUNCTION_86	IF_11	IF_12
0x4003a7e	            0x747e	                            je 0x4003afe	      6562	tc-i386.c	FUNCTION_86	IF_11	IF_12
0x4003a80	    0x8b0500000000	            mov eax, dword [0x04003a86] 	      6565	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13
0x4003a86	          0x83f807	                              cmp eax, 7	      6565	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13
0x4003a89	            0x7542	                           jne 0x4003acd	      6565	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13
0x4003a8b	    0x488b15000000	            mov rdx, qword [0x04003a92] 	      6566	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13
0x4003a92	        0x807a1101	                cmp byte [rdx + 0x11], 1	      6566	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13
0x4003a96	            0x7535	                           jne 0x4003acd	      6566	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13
0x4003a98	    0x488b1d000000	            mov rbx, qword [0x04003a9f] 	      6568	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13	CALL_13
0x4003a9f	      0xba05000000	                              mov edx, 5	      6568	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13	CALL_13
0x4003aa4	      0xbe00000000	                              mov esi, 0	      6568	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13	CALL_13
0x4003aa9	      0xbf00000000	                              mov edi, 0	      6568	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13	CALL_13
0x4003aae	      0xe800000000	                          call 0x4003ab3	      6568	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13	CALL_13
0x4003ab3	          0x4889de	                            mov rsi, rbx	      6568	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13	CALL_13
0x4003ab6	          0x4889c7	                            mov rdi, rax	      6568	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13	CALL_13
0x4003ab9	      0xb800000000	                              mov eax, 0	      6568	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13	CALL_13
0x4003abe	      0xe800000000	                          call 0x4003ac3	      6568	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13	CALL_13
0x4003ac3	      0xb800000000	                              mov eax, 0	      6569	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13
0x4003ac8	      0xe989140000	                           jmp 0x4004f56	      6569	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13
0x4003acd	    0x488b0d000000	            mov rcx, qword [0x04003ad4] 	      6571	tc-i386.c	FUNCTION_86	IF_11	IF_12
0x4003ad4	         0xfb65111	           movzx edx, byte [rcx + 0x11] 	      6571	tc-i386.c	FUNCTION_86	IF_11	IF_12
0x4003ad8	          0xc1e203	                              shl edx, 3	      6571	tc-i386.c	FUNCTION_86	IF_11	IF_12
0x4003adb	             0x9d0	                             or eax, edx	      6571	tc-i386.c	FUNCTION_86	IF_11	IF_12
0x4003add	    0x890500000000	            mov dword [0x04003ae3], eax 	      6571	tc-i386.c	FUNCTION_86	IF_11	IF_12
0x4003ae3	      0xbb00000000	                              mov ebx, 0	      6422	tc-i386.c	FUNCTION_86
0x4003ae8	        0xf6411001	               test byte [rcx + 0x10], 1	      6572	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_14
0x4003aec	     0xf84eb130000	                            je 0x4004edd	      6572	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_14
0x4003af2	    0x830d00000000	                or dword [0x04003af9], 1	      6573	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_14
0x4003af9	      0xe9df130000	                           jmp 0x4004edd	      6573	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_14
0x4003afe	    0x48ba01000000	                 movabs rdx, 0x400000001	      6581	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_15
0x4003b08	          0x4889d1	                            mov rcx, rdx	      6581	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_15
0x4003b0b	    0x48230d000000	             and rcx, qword [0x04003b12]	      6581	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_15
0x4003b12	      0xb800000000	                              mov eax, 0	      6583	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_15
0x4003b17	          0x4839d1	                            cmp rcx, rdx	      6581	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_15
0x4003b1a	            0x740c	                            je 0x4003b28	      6581	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_15
0x4003b1c	     0xfb605000000	           movzx eax, byte [0x04003b23] 	      6581	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_15
0x4003b23	            0xf7d0	                                 not eax	      6583	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_15
0x4003b25	          0x83e001	                              and eax, 1	      6583	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_15
0x4003b28	            0x89c0	                            mov eax, eax	      6587	tc-i386.c	FUNCTION_86	IF_11	ELSE_8
0x4003b2a	        0x4883c014	                           add rax, 0x14	      6587	tc-i386.c	FUNCTION_86	IF_11	ELSE_8
0x4003b2e	    0x488b04c50000	                  mov rax, qword [rax*8]	      6587	tc-i386.c	FUNCTION_86	IF_11	ELSE_8
0x4003b36	         0xfb65011	           movzx edx, byte [rax + 0x11] 	      6587	tc-i386.c	FUNCTION_86	IF_11	ELSE_8
0x4003b3a	     0x91500000000	              or dword [0x04003b40], edx	      6587	tc-i386.c	FUNCTION_86	IF_11	ELSE_8
0x4003b40	        0xf6401001	               test byte [rax + 0x10], 1	      6588	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_16
0x4003b44	            0x7407	                            je 0x4003b4d	      6588	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_16
0x4003b46	    0x830d00000000	                or dword [0x04003b4d], 1	      6589	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_16
0x4003b4d	      0xbb00000000	                              mov ebx, 0	      6422	tc-i386.c	FUNCTION_86
0x4003b52	    0x833d00000000	               cmp dword [0x04003b59], 0	      6590	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17
0x4003b59	     0xf857e130000	                           jne 0x4004edd	      6590	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17
0x4003b5f	    0xf60500000000	               test byte [0x04003b66], 1	      6590	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17
0x4003b66	     0xf8471130000	                            je 0x4004edd	      6590	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17
0x4003b6c	    0x833d00000000	               cmp dword [0x04003b73], 2	      6594	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18
0x4003b73	            0x7573	                           jne 0x4003be8	      6594	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18
0x4003b75	    0x8b0500000000	            mov eax, dword [0x04003b7b] 	      6599	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18
0x4003b7b	          0x4863d0	                         movsxd rdx, eax	      6599	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18
0x4003b7e	    0x488b14d50000	                  mov rdx, qword [rdx*8]	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x4003b86	          0x488b2a	                    mov rbp, qword [rdx]	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x4003b89	            0x85c0	                           test eax, eax	      6598	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18
0x4003b8b	           0xf94c0	                                 sete al	      6598	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18
0x4003b8e	           0xfb6c0	                           movzx eax, al	      6598	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18
0x4003b91	        0x4883c014	                           add rax, 0x14	      6598	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18
0x4003b95	    0x488b04c50000	                  mov rax, qword [rax*8]	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x4003b9d	          0x4c8b28	                    mov r13, qword [rax]	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x4003ba0	    0x488b1d000000	            mov rbx, qword [0x04003ba7] 	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x4003ba7	    0x4c8b25000000	            mov r12, qword [0x04003bae] 	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x4003bae	      0xba05000000	                              mov edx, 5	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x4003bb3	      0xbe00000000	                              mov esi, 0	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x4003bb8	      0xbf00000000	                              mov edi, 0	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x4003bbd	      0xe800000000	                          call 0x4003bc2	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x4003bc2	          0x4989e9	                             mov r9, rbp	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x4003bc5	          0x4989d8	                             mov r8, rbx	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x4003bc8	          0x4c89e9	                            mov rcx, r13	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x4003bcb	          0x4889da	                            mov rdx, rbx	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x4003bce	          0x4c89e6	                            mov rsi, r12	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x4003bd1	          0x4889c7	                            mov rdi, rax	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x4003bd4	      0xb800000000	                              mov eax, 0	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x4003bd9	      0xe800000000	                          call 0x4003bde	      6597	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	IF_18	CALL_16
0x4003bde	      0xbb00000000	                              mov ebx, 0	      6422	tc-i386.c	FUNCTION_86
0x4003be3	      0xe9f5120000	                           jmp 0x4004edd	      6422	tc-i386.c	FUNCTION_86
0x4003be8	    0x488b05000000	            mov rax, qword [0x04003bef] 	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x4003bef	          0x4c8b20	                    mov r12, qword [rax]	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x4003bf2	    0x488b2d000000	            mov rbp, qword [0x04003bf9] 	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x4003bf9	    0x488b1d000000	            mov rbx, qword [0x04003c00] 	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x4003c00	      0xba05000000	                              mov edx, 5	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x4003c05	      0xbe00000000	                              mov esi, 0	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x4003c0a	      0xbf00000000	                              mov edi, 0	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x4003c0f	      0xe800000000	                          call 0x4003c14	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x4003c14	          0x4c89e1	                            mov rcx, r12	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x4003c17	          0x4889ea	                            mov rdx, rbp	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x4003c1a	          0x4889de	                            mov rsi, rbx	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x4003c1d	          0x4889c7	                            mov rdi, rax	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x4003c20	      0xb800000000	                              mov eax, 0	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x4003c25	      0xe800000000	                          call 0x4003c2a	      6604	tc-i386.c	FUNCTION_86	IF_11	ELSE_8	IF_17	ELSE_10	CALL_18
0x4003c2a	      0xbb00000000	                              mov ebx, 0	      6422	tc-i386.c	FUNCTION_86
0x4003c2f	      0xe9a9120000	                           jmp 0x4004edd	      6422	tc-i386.c	FUNCTION_86
0x4003c34	            0xa808	                              test al, 8	      6610	tc-i386.c	FUNCTION_86	ELSE_11	IF_19
0x4003c36	     0xf846e120000	                            je 0x4004eaa	      6610	tc-i386.c	FUNCTION_86	ELSE_11	IF_19
0x4003c3c	     0xfb63d000000	           movzx edi, byte [0x04003c43] 	      6654	tc-i386.c	FUNCTION_87
0x4003c43	          0x83e70c	                            and edi, 0xc	      6654	tc-i386.c	FUNCTION_87
0x4003c46	    0x41b800000000	                              mov r8d, 0	      6735	tc-i386.c	FUNCTION_87	ELSE_4
0x4003c4c	      0xb800000000	                              mov eax, 0	      6735	tc-i386.c	FUNCTION_87	ELSE_4
0x4003c51	        0x4080ff08	                              cmp dil, 8	      6655	tc-i386.c	FUNCTION_87	IF_1
0x4003c55	     0xf8532020000	                           jne 0x4003e8d	      6655	tc-i386.c	FUNCTION_87	IF_1
0x4003c5b	    0x448b0d000000	            mov r9d, dword [0x04003c62] 	      6660	tc-i386.c	FUNCTION_87	IF_1
0x4003c62	        0x458d41ff	                       lea r8d, [r9 - 1]	      6660	tc-i386.c	FUNCTION_87	IF_1
0x4003c66	        0x418d71fe	                       lea esi, [r9 - 2]	      6661	tc-i386.c	FUNCTION_87	IF_1
0x4003c6a	    0x8b0500000000	            mov eax, dword [0x04003c70] 	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x4003c70	          0x83f804	                              cmp eax, 4	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x4003c73	            0x740e	                            je 0x4003c83	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x4003c75	          0x83f803	                              cmp eax, 3	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x4003c78	            0x752e	                           jne 0x4003ca8	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x4003c7a	    0x833d00000000	               cmp dword [0x04003c81], 1	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x4003c81	            0x7525	                           jne 0x4003ca8	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x4003c83	     0xfb605000000	           movzx eax, byte [0x04003c8a] 	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x4003c8a	            0x89c2	                            mov edx, eax	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x4003c8c	          0x83e218	                           and edx, 0x18	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x4003c8f	          0x80fa08	                               cmp dl, 8	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x4003c92	            0x7514	                           jne 0x4003ca8	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x4003c94	          0x83e060	                           and eax, 0x60	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x4003c97	            0x89c1	                            mov ecx, eax	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x4003c99	            0x740d	                            je 0x4003ca8	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x4003c9b	          0x4489c0	                            mov eax, r8d	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x4003c9e	    0xf604c5000000	                    test byte [rax*8], 4	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x4003ca6	            0x7514	                           jne 0x4003cbc	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x4003ca8	      0xba00000000	                              mov edx, 0	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x4003cad	      0xbe121a0000	                         mov esi, 0x1a12	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x4003cb2	      0xbf00000000	                              mov edi, 0	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x4003cb7	      0xe800000000	                          call 0x4003cbc	      6670	tc-i386.c	FUNCTION_87	IF_1	CALL_1
0x4003cbc	    0x8b1500000000	            mov edx, dword [0x04003cc2] 	      6685	tc-i386.c	FUNCTION_87	IF_1	ELSE_1
0x4003cc2	          0x8d4201	                      lea eax, [rdx + 1]	      6685	tc-i386.c	FUNCTION_87	IF_1	ELSE_1
0x4003cc5	          0x80f940	                            cmp cl, 0x40	      6678	tc-i386.c	FUNCTION_87	IF_1	IF_2
0x4003cc8	            0x7505	                           jne 0x4003ccf	      6678	tc-i386.c	FUNCTION_87	IF_1	IF_2
0x4003cca	            0x89d0	                            mov eax, edx	      6680	tc-i386.c	FUNCTION_87	IF_1	IF_2
0x4003ccc	          0x8d5201	                      lea edx, [rdx + 1]	      6681	tc-i386.c	FUNCTION_87	IF_1	IF_2
0x4003ccf	    0x8b0d00000000	            mov ecx, dword [0x04003cd5] 	      6689	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x4003cd5	            0x85c9	                           test ecx, ecx	      6689	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x4003cd7	     0xf85b8000000	                           jne 0x4003d95	      6689	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x4003cdd	    0xc70500000000	               mov dword [0x04003ce7], 1	      6693	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x4003ce7	          0x4489c9	                            mov ecx, r9d	      6694	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x4003cea	    0x48c704cd0000	                    mov qword [rcx*8], 0	      6694	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x4003cf6	        0x4883c10e	                            add rcx, 0xe	      6695	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x4003cfa	    0x48c704cd0000	                    mov qword [rcx*8], 0	      6695	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x4003d06	    0x800ccd000000	                      or byte [rcx*8], 4	      6695	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x4003d0e	        0x4183c101	                              add r9d, 1	      6696	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x4003d12	    0x44890d000000	            mov dword [0x04003d19], r9d 	      6696	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x4003d19	            0x89d1	                            mov ecx, edx	      6698	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_2
0x4003d1b	    0xf604cd000000	                    test byte [rcx*8], 4	      6698	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_2
0x4003d23	            0x7514	                           jne 0x4003d39	      6698	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_2
0x4003d25	      0xba00000000	                              mov edx, 0	      6698	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_2
0x4003d2a	      0xbe2a1a0000	                         mov esi, 0x1a2a	      6698	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_2
0x4003d2f	      0xbf00000000	                              mov edi, 0	      6698	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_2
0x4003d34	      0xe800000000	                          call 0x4003d39	      6698	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_2
0x4003d39	    0xc60500000000	                mov byte [0x04003d40], 2	      6699	tc-i386.c	FUNCTION_87	IF_1	IF_3
0x4003d40	            0x89d2	                            mov edx, edx	      6700	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_3
0x4003d42	    0x488b0cd50000	                  mov rcx, qword [rdx*8]	      6700	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_3
0x4003d4a	         0xfb65111	           movzx edx, byte [rcx + 0x11] 	      2123	tc-i386.c	FUNCTION_28
0x4003d4e	      0x440fb64910	           movzx r9d, byte [rcx + 0x10] 	      2125	tc-i386.c	FUNCTION_28	IF_1
0x4003d53	        0x448d5208	                     lea r10d, [rdx + 8]	      2126	tc-i386.c	FUNCTION_28	IF_1
0x4003d57	        0x41f6c101	                             test r9b, 1	      2126	tc-i386.c	FUNCTION_28	IF_1
0x4003d5b	        0x410f45d2	                        cmovne edx, r10d	      2126	tc-i386.c	FUNCTION_28	IF_1
0x4003d5f	        0x448d5210	                  lea r10d, [rdx + 0x10]	      2129	tc-i386.c	FUNCTION_28	IF_2
0x4003d63	        0x41f6c104	                             test r9b, 4	      2129	tc-i386.c	FUNCTION_28	IF_2
0x4003d67	        0x410f45d2	                        cmovne edx, r10d	      2129	tc-i386.c	FUNCTION_28	IF_2
0x4003d6b	          0xc1e204	                              shl edx, 4	      6700	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_3
0x4003d6e	            0x89d3	                            mov ebx, edx	      6700	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_3
0x4003d70	    0x48891d000000	            mov qword [0x04003d77], rbx 	      6700	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_3
0x4003d77	        0xf6411004	               test byte [rcx + 0x10], 4	      6701	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_4
0x4003d7b	     0xf84db000000	                            je 0x4003e5c	      6701	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_4
0x4003d81	      0xba00000000	                              mov edx, 0	      6701	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_4
0x4003d86	      0xbe2d1a0000	                         mov esi, 0x1a2d	      6701	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_4
0x4003d8b	      0xbf00000000	                              mov edi, 0	      6701	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_4
0x4003d90	      0xe800000000	                          call 0x4003d95	      6701	tc-i386.c	FUNCTION_87	IF_1	IF_3	CALL_4
0x4003d95	          0x83f901	                              cmp ecx, 1	      6707	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_5
0x4003d98	            0x7509	                           jne 0x4003da3	      6707	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_5
0x4003d9a	    0xf60500000000	               test byte [0x04003da1], 1	      6707	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_5
0x4003da1	            0x7514	                           jne 0x4003db7	      6707	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_5
0x4003da3	      0xba00000000	                              mov edx, 0	      6707	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_5
0x4003da8	      0xbe331a0000	                         mov esi, 0x1a33	      6707	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_5
0x4003dad	      0xbf00000000	                              mov edi, 0	      6707	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_5
0x4003db2	      0xe800000000	                          call 0x4003db7	      6707	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_5
0x4003db7	    0xf60500000000	           test byte [0x04003dbe], 0x20 	      6709	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	IF_4
0x4003dbe	            0x740b	                            je 0x4003dcb	      6709	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	IF_4
0x4003dc0	          0x83e801	                              sub eax, 1	      6714	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	IF_4
0x4003dc3	          0x83ea01	                              sub edx, 1	      6715	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	IF_4
0x4003dc6	          0x4589c1	                            mov r9d, r8d	      6713	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	IF_4
0x4003dc9	            0xeb0d	                           jmp 0x4003dd8	      6713	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	IF_4
0x4003dcb	    0x800d00000000	                 or byte [0x04003dd2], 4	      6722	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	ELSE_3
0x4003dd2	    0x41b900000000	                              mov r9d, 0	      6719	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	ELSE_3
0x4003dd8	            0x89d1	                            mov ecx, edx	      6725	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_6
0x4003dda	    0xf604cd000000	                    test byte [rcx*8], 4	      6725	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_6
0x4003de2	            0x7514	                           jne 0x4003df8	      6725	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_6
0x4003de4	      0xba00000000	                              mov edx, 0	      6725	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_6
0x4003de9	      0xbe451a0000	                         mov esi, 0x1a45	      6725	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_6
0x4003dee	      0xbf00000000	                              mov edi, 0	      6725	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_6
0x4003df3	      0xe800000000	                          call 0x4003df8	      6725	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_6
0x4003df8	            0x89d1	                            mov ecx, edx	      6727	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_7
0x4003dfa	    0x4c8b14cd0000	                  mov r10, qword [rcx*8]	      6727	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_7
0x4003e02	      0x410fb64a11	           movzx ecx, byte [r10 + 0x11] 	      2123	tc-i386.c	FUNCTION_28
0x4003e07	      0x450fb65210	          movzx r10d, byte [r10 + 0x10] 	      2125	tc-i386.c	FUNCTION_28	IF_1
0x4003e0c	        0x448d5908	                     lea r11d, [rcx + 8]	      2126	tc-i386.c	FUNCTION_28	IF_1
0x4003e10	        0x41f6c201	                            test r10b, 1	      2126	tc-i386.c	FUNCTION_28	IF_1
0x4003e14	        0x410f45cb	                        cmovne ecx, r11d	      2126	tc-i386.c	FUNCTION_28	IF_1
0x4003e18	        0x448d5910	                  lea r11d, [rcx + 0x10]	      2129	tc-i386.c	FUNCTION_28	IF_2
0x4003e1c	        0x41f6c204	                            test r10b, 4	      2129	tc-i386.c	FUNCTION_28	IF_2
0x4003e20	        0x410f45cb	                        cmovne ecx, r11d	      2129	tc-i386.c	FUNCTION_28	IF_2
0x4003e24	          0x4589c9	                            mov r9d, r9d	      6726	tc-i386.c	FUNCTION_87	IF_1	ELSE_2
0x4003e27	    0x4e8b0ccd0000	                    mov r9, qword [r9*8]	      6726	tc-i386.c	FUNCTION_87	IF_1	ELSE_2
0x4003e2f	          0xc1e104	                              shl ecx, 4	      6727	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_7
0x4003e32	            0x89c9	                            mov ecx, ecx	      6727	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_7
0x4003e34	        0x49094910	               or qword [r9 + 0x10], rcx	      6727	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_7
0x4003e38	            0x89d2	                            mov edx, edx	      6728	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_8
0x4003e3a	    0x488b14d50000	                  mov rdx, qword [rdx*8]	      6728	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_8
0x4003e42	        0xf6421004	               test byte [rdx + 0x10], 4	      6728	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_8
0x4003e46	            0x7414	                            je 0x4003e5c	      6728	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_8
0x4003e48	      0xba00000000	                              mov edx, 0	      6728	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_8
0x4003e4d	      0xbe481a0000	                         mov esi, 0x1a48	      6728	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_8
0x4003e52	      0xbf00000000	                              mov edi, 0	      6728	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_8
0x4003e57	      0xe800000000	                          call 0x4003e5c	      6728	tc-i386.c	FUNCTION_87	IF_1	ELSE_2	CALL_8
0x4003e5c	            0x89f2	                            mov edx, esi	      6731	tc-i386.c	FUNCTION_87	IF_1	CALL_9
0x4003e5e	    0xf604d5000000	                    test byte [rdx*8], 4	      6731	tc-i386.c	FUNCTION_87	IF_1	CALL_9
0x4003e66	            0x7514	                           jne 0x4003e7c	      6731	tc-i386.c	FUNCTION_87	IF_1	CALL_9
0x4003e68	      0xba00000000	                              mov edx, 0	      6731	tc-i386.c	FUNCTION_87	IF_1	CALL_9
0x4003e6d	      0xbe4b1a0000	                         mov esi, 0x1a4b	      6731	tc-i386.c	FUNCTION_87	IF_1	CALL_9
0x4003e72	      0xbf00000000	                              mov edi, 0	      6731	tc-i386.c	FUNCTION_87	IF_1	CALL_9
0x4003e77	      0xe800000000	                          call 0x4003e7c	      6731	tc-i386.c	FUNCTION_87	IF_1	CALL_9
0x4003e7c	            0x89f6	                            mov esi, esi	      6732	tc-i386.c	FUNCTION_87	IF_1
0x4003e7e	    0x488b14f50000	                  mov rdx, qword [rsi*8]	      6732	tc-i386.c	FUNCTION_87	IF_1
0x4003e86	    0x488915000000	            mov qword [0x04003e8d], rdx 	      6732	tc-i386.c	FUNCTION_87	IF_1
0x4003e8d	    0x833d00000000	               cmp dword [0x04003e94], 0	      6743	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4003e94	     0xf8511040000	                           jne 0x40042ab	      6743	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4003e9a	    0x8b1500000000	            mov edx, dword [0x04003ea0] 	      6744	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4003ea0	          0x83fa02	                              cmp edx, 2	      6744	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4003ea3	            0x7521	                           jne 0x4003ec6	      6744	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4003ea5	     0xfb615000000	           movzx edx, byte [0x04003eac] 	      6745	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4003eac	          0xc0ea03	                               shr dl, 3	      6745	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4003eaf	          0x83e203	                              and edx, 3	      6745	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4003eb2	          0x83fa01	                              cmp edx, 1	      6745	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4003eb5	            0x7e45	                           jle 0x4003efc	      6745	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4003eb7	      0xbaffffffff	                     mov edx, 0xffffffff	      7161	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29
0x4003ebc	      0xbb00000000	                              mov ebx, 0	      6650	tc-i386.c	FUNCTION_87
0x4003ec1	      0xe9f80a0000	                           jmp 0x40049be	      6650	tc-i386.c	FUNCTION_87
0x4003ec6	          0x83fa03	                              cmp edx, 3	      6746	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4003ec9	            0x751e	                           jne 0x4003ee9	      6746	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4003ecb	     0xfb615000000	           movzx edx, byte [0x04003ed2] 	      6747	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4003ed2	          0x83e218	                           and edx, 0x18	      6747	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4003ed5	          0x80fa08	                               cmp dl, 8	      6747	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4003ed8	            0x7422	                            je 0x4003efc	      6747	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4003eda	      0xbaffffffff	                     mov edx, 0xffffffff	      7161	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29
0x4003edf	      0xbb00000000	                              mov ebx, 0	      6650	tc-i386.c	FUNCTION_87
0x4003ee4	      0xe9d50a0000	                           jmp 0x40049be	      6650	tc-i386.c	FUNCTION_87
0x4003ee9	          0x83fa04	                              cmp edx, 4	      6748	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4003eec	     0xf85c20a0000	                           jne 0x40049b4	      6748	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4003ef2	        0x4080ff08	                              cmp dil, 8	      6748	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4003ef6	     0xf85b80a0000	                           jne 0x40049b4	      6748	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4003efc	    0x8b1500000000	            mov edx, dword [0x04003f02] 	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x4003f02	          0x83fa03	                              cmp edx, 3	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x4003f05	            0x742b	                            je 0x4003f32	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x4003f07	          0x83fa03	                              cmp edx, 3	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x4003f0a	            0x7713	                            ja 0x4003f1f	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x4003f0c	      0xb800000000	                              mov eax, 0	      6753	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x4003f11	          0x83fa02	                              cmp edx, 2	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x4003f14	     0xf845f010000	                            je 0x4004079	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x4003f1a	      0xe941010000	                           jmp 0x4004060	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x4003f1f	          0x83fa04	                              cmp edx, 4	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x4003f22	            0x7469	                            je 0x4003f8d	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x4003f24	          0x83fa05	                              cmp edx, 5	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x4003f27	     0xf84d3000000	                            je 0x4004000	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x4003f2d	      0xe92e010000	                           jmp 0x4004060	      6750	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x4003f32	    0x8b0500000000	            mov eax, dword [0x04003f38] 	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x4003f38	          0x83f801	                              cmp eax, 1	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x4003f3b	            0x742f	                            je 0x4003f6c	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x4003f3d	            0x85c0	                           test eax, eax	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x4003f3f	            0x7517	                           jne 0x4003f58	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x4003f41	     0xfb605000000	           movzx eax, byte [0x04003f48] 	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x4003f48	          0x83e018	                           and eax, 0x18	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x4003f4b	            0x3c08	                               cmp al, 8	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x4003f4d	            0x741d	                            je 0x4003f6c	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x4003f4f	    0xf60500000000	               test byte [0x04003f56], 1	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x4003f56	            0x7514	                           jne 0x4003f6c	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x4003f58	      0xba00000000	                              mov edx, 0	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x4003f5d	      0xbe6b1a0000	                         mov esi, 0x1a6b	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x4003f62	      0xbf00000000	                              mov edi, 0	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x4003f67	      0xe800000000	                          call 0x4003f6c	      6760	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_10
0x4003f6c	      0xb801000000	                              mov eax, 1	      6766	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	IF_6
0x4003f71	    0xf60500000000	           test byte [0x04003f78], 0xfc 	      6764	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	IF_6	CALL_11
0x4003f78	     0xf85fb000000	                           jne 0x4004079	      6764	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	IF_6	CALL_11
0x4003f7e	     0xfb605000000	           movzx eax, byte [0x04003f85] 	      6753	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x4003f85	          0x83e001	                              and eax, 1	      6753	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x4003f88	      0xe9ec000000	                           jmp 0x4004079	      6753	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x4003f8d	    0x8b0500000000	            mov eax, dword [0x04003f93] 	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4003f93	          0x83f802	                              cmp eax, 2	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4003f96	            0x7517	                           jne 0x4003faf	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4003f98	    0xf60500000000	               test byte [0x04003f9f], 4	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4003f9f	            0x7441	                            je 0x4003fe2	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4003fa1	    0xf60500000000	               test byte [0x04003fa8], 4	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4003fa8	            0x7438	                            je 0x4003fe2	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4003faa	      0xe9ca000000	                           jmp 0x4004079	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4003faf	     0xfb60d000000	           movzx ecx, byte [0x04003fb6] 	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4003fb6	          0x83e118	                           and ecx, 0x18	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4003fb9	          0x80f908	                               cmp cl, 8	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4003fbc	            0x7524	                           jne 0x4003fe2	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4003fbe	          0x83f801	                              cmp eax, 1	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4003fc1	            0x751f	                           jne 0x4003fe2	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4003fc3	     0xfb605000000	           movzx eax, byte [0x04003fca] 	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4003fca	          0x83e004	                              and eax, 4	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4003fcd	            0x7527	                           jne 0x4003ff6	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4003fcf	    0xf60500000000	               test byte [0x04003fd6], 4	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4003fd6	            0x751e	                           jne 0x4003ff6	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4003fd8	    0x48833d000000	               cmp qword [0x04003fe0], 0	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4003fe0	            0x7514	                           jne 0x4003ff6	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4003fe2	      0xba00000000	                              mov edx, 0	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4003fe7	      0xbe811a0000	                         mov esi, 0x1a81	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4003fec	      0xbf00000000	                              mov edi, 0	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4003ff1	      0xe800000000	                          call 0x4003ff6	      6778	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_12
0x4003ff6	            0x84c0	                             test al, al	      6753	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x4003ff8	           0xf95c0	                                setne al	      6753	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x4003ffb	           0xfb6c0	                           movzx eax, al	      6753	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x4003ffe	            0xeb79	                           jmp 0x4004079	      6753	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1
0x4004000	     0xfb60d000000	           movzx ecx, byte [0x04004007] 	      3473	tc-i386.c	FUNCTION_63
0x4004007	            0x84c9	                             test cl, cl	      6797	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_13
0x4004009	            0x746e	                            je 0x4004079	      6797	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_13
0x400400b	    0x833d00000000	               cmp dword [0x04004012], 2	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x4004012	            0x750d	                           jne 0x4004021	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x4004014	            0x84c9	                             test cl, cl	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x4004016	            0x7909	                           jns 0x4004021	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x4004018	    0xf60500000000	           test byte [0x0400401f], 0xfc 	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x400401f	            0x7514	                           jne 0x4004035	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x4004021	      0xba00000000	                              mov edx, 0	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x4004026	      0xbe961a0000	                         mov esi, 0x1a96	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x400402b	      0xbf00000000	                              mov edi, 0	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x4004030	      0xe800000000	                          call 0x4004035	      6804	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_14
0x4004035	    0xf60500000000	           test byte [0x0400403c], 0xfc 	      6807	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	IF_10	CALL_16
0x400403c	            0x7536	                           jne 0x4004074	      6807	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	IF_10	CALL_16
0x400403e	      0xb801000000	                              mov eax, 1	      6810	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	ELSE_8	IF_11
0x4004043	    0xf60500000000	           test byte [0x0400404a], 0xfc 	      6809	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	ELSE_8	IF_11	CALL_17
0x400404a	            0x752d	                           jne 0x4004079	      6809	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	ELSE_8	IF_11	CALL_17
0x400404c	      0xba00000000	                              mov edx, 0	      6812	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_18
0x4004051	      0xbe9c1a0000	                         mov esi, 0x1a9c	      6812	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_18
0x4004056	      0xbf00000000	                              mov edi, 0	      6812	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_18
0x400405b	      0xe800000000	                          call 0x4004060	      6812	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	CALL_18
0x4004060	      0xba00000000	                              mov edx, 0	      6816	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_19
0x4004065	      0xbea01a0000	                         mov esi, 0x1aa0	      6816	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_19
0x400406a	      0xbf00000000	                              mov edi, 0	      6816	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_19
0x400406f	      0xe800000000	                          call 0x4004074	      6816	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	CALL_19
0x4004074	      0xb802000000	                              mov eax, 2	      6808	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	SWITCH_1	ELSE_7	IF_9	IF_10
0x4004079	        0x4080ff08	                              cmp dil, 8	      6819	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12
0x400407d	     0xf84dc000000	                            je 0x400415f	      6819	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12
0x4004083	        0x448d4001	                      lea r8d, [rax + 1]	      6821	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12
0x4004087	    0x488b0d000000	            mov rcx, qword [0x0400408e] 	      6826	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_13
0x400408e	          0x4885c9	                           test rcx, rcx	      6826	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_13
0x4004091	            0x740b	                            je 0x400409e	      6826	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_13
0x4004093	          0x8d7002	                      lea esi, [rax + 2]	      6827	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_13
0x4004096	        0x44394104	                cmp dword [rcx + 4], r8d	      6827	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_13
0x400409a	        0x440f44c6	                          cmove r8d, esi	      6827	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_13
0x400409e	     0xfb60d000000	           movzx ecx, byte [0x040040a5] 	      6829	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x40040a5	          0x83e118	                           and ecx, 0x18	      6829	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x40040a8	          0x80f908	                               cmp cl, 8	      6829	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x40040ab	     0xf85ae000000	                           jne 0x400415f	      6829	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x40040b1	            0x89c1	                            mov ecx, eax	      6841	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_15
0x40040b3	          0x4489c7	                            mov edi, r8d	      6848	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	ELSE_10
0x40040b6	    0xf604cd000000	                 test byte [rcx*8], 0x40	      6841	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_15
0x40040be	            0x7512	                           jne 0x40040d2	      6841	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_15
0x40040c0	          0x4489c1	                            mov ecx, r8d	      6842	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_15
0x40040c3	    0xf604cd000000	                 test byte [rcx*8], 0x40	      6842	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_15
0x40040cb	            0x7405	                            je 0x40040d2	      6842	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_15
0x40040cd	            0x89c7	                            mov edi, eax	      6844	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_15
0x40040cf	          0x4489c0	                            mov eax, r8d	      6845	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_15
0x40040d2	            0x89f9	                            mov ecx, edi	      6850	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x40040d4	        0x4883c106	                              add rcx, 6	      6850	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x40040d8	    0x488b34cd0000	                  mov rsi, qword [rcx*8]	      6850	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x40040e0	    0x448b0ccd0000	                  mov r9d, dword [rcx*8]	      6850	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x40040e8	    0x4881e6ffffff	             and rsi, 0xfffffffff7ffffff	      6851	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x40040ef	          0x4889f1	                            mov rcx, rsi	      6851	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x40040f2	        0x4183c001	                              add r8d, 1	      6852	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x40040f6	          0x4439c2	                            cmp edx, r8d	      6852	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x40040f9	            0x763f	                           jbe 0x400413a	      6852	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x40040fb	            0x89f2	                            mov edx, esi	      6853	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x40040fd	        0x40f6c601	                             test sil, 1	      6853	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x4004101	            0x7421	                            je 0x4004124	      6853	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x4004103	        0x48c1ee18	                           shr rsi, 0x18	      6854	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x4004107	          0x4084f6	                           test sil, sil	      6854	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x400410a	            0x7842	                            js 0x400414e	      6854	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x400410c	          0x4c89ce	                             mov rsi, r9	      6854	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x400410f	        0x48c1e620	                           shl rsi, 0x20	      6854	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x4004113	            0x89c9	                            mov ecx, ecx	      6854	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x4004115	          0x4809f1	                             or rcx, rsi	      6854	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x4004118	          0x4889ce	                            mov rsi, rcx	      6854	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x400411b	        0x48c1e920	                           shr rcx, 0x20	      6854	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x400411f	          0xf6c102	                              test cl, 2	      6854	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x4004122	            0x752a	                           jne 0x400414e	      6854	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x4004124	          0xf6c204	                              test dl, 4	      6855	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x4004127	            0x7525	                           jne 0x400414e	      6855	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16
0x4004129	    0x44390d000000	            cmp dword [0x04004130], r9d 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x4004130	            0x7508	                           jne 0x400413a	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x4004132	    0x393500000000	            cmp dword [0x04004138], esi 	      6856	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16	CALL_20
0x4004138	            0x7414	                            je 0x400414e	      6856	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	IF_16	CALL_20
0x400413a	      0xba00000000	                              mov edx, 0	      6857	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	CALL_21
0x400413f	      0xbec91a0000	                         mov esi, 0x1ac9	      6857	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	CALL_21
0x4004144	      0xbf00000000	                              mov edi, 0	      6857	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	CALL_21
0x4004149	      0xe800000000	                          call 0x400414e	      6857	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14	CALL_21
0x400414e	            0x89fa	                            mov edx, edi	      6858	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x4004150	    0x488b14d50000	                  mov rdx, qword [rdx*8]	      6858	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x4004158	    0x488915000000	            mov qword [0x0400415f], rdx 	      6858	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_12	IF_14
0x400415f	    0xc70500000000	               mov dword [0x04004169], 3	      6863	tc-i386.c	FUNCTION_87	ELSE_4	IF_5
0x4004169	          0x4489c2	                            mov edx, r8d	      6870	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x400416c	    0xf604d5000000	                    test byte [rdx*8], 8	      6870	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x4004174	            0x7570	                           jne 0x40041e6	      6870	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x4004176	    0x488b14d50000	                  mov rdx, qword [rdx*8]	      6870	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x400417e	        0x48c1ea10	                           shr rdx, 0x10	      1895	tc-i386.c	FUNCTION_21	SWITCH_1
0x4004182	          0xf6c25f	                           test dl, 0x5f	      6871	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	CALL_22
0x4004185	            0x755f	                           jne 0x40041e6	      6871	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	CALL_22
0x4004187	          0x4589c0	                            mov r8d, r8d	      6873	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x400418a	    0x4a8b14c50000	                   mov rdx, qword [r8*8]	      6873	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x4004192	         0xfb64a11	           movzx ecx, byte [rdx + 0x11] 	      6873	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x4004196	    0x890d00000000	            mov dword [0x0400419c], ecx 	      6873	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x400419c	            0x89c0	                            mov eax, eax	      6874	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x400419e	    0x488b04c50000	                  mov rax, qword [rax*8]	      6874	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x40041a6	         0xfb64811	           movzx ecx, byte [rax + 0x11] 	      6874	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x40041aa	    0x890d00000000	            mov dword [0x040041b0], ecx 	      6874	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17
0x40041b0	        0xf6421001	               test byte [rdx + 0x10], 1	      6875	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_18
0x40041b4	            0x7407	                            je 0x40041bd	      6875	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_18
0x40041b6	    0x830d00000000	                or dword [0x040041bd], 4	      6876	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_18
0x40041bd	        0xf6421004	               test byte [rdx + 0x10], 4	      6877	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_19
0x40041c1	            0x7407	                            je 0x40041ca	      6877	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_19
0x40041c3	    0x830d00000000	                or dword [0x040041ca], 4	      6878	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_19
0x40041ca	        0xf6401001	               test byte [rax + 0x10], 1	      6879	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_20
0x40041ce	            0x7407	                            je 0x40041d7	      6879	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_20
0x40041d0	    0x830d00000000	                or dword [0x040041d7], 1	      6880	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_20
0x40041d7	        0xf6401004	               test byte [rax + 0x10], 4	      6881	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_21
0x40041db	            0x7466	                            je 0x4004243	      6881	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_21
0x40041dd	    0x830d00000000	                or dword [0x040041e4], 1	      6882	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_21
0x40041e4	            0xeb5d	                           jmp 0x4004243	      6882	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_17	IF_21
0x40041e6	            0x89c0	                            mov eax, eax	      6886	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11
0x40041e8	    0x488b04c50000	                  mov rax, qword [rax*8]	      6886	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11
0x40041f0	         0xfb65011	           movzx edx, byte [rax + 0x11] 	      6886	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11
0x40041f4	    0x891500000000	            mov dword [0x040041fa], edx 	      6886	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11
0x40041fa	          0x4589c0	                            mov r8d, r8d	      6887	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11
0x40041fd	    0x4a8b14c50000	                   mov rdx, qword [r8*8]	      6887	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11
0x4004205	         0xfb64a11	           movzx ecx, byte [rdx + 0x11] 	      6887	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11
0x4004209	    0x890d00000000	            mov dword [0x0400420f], ecx 	      6887	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11
0x400420f	        0xf6421001	               test byte [rdx + 0x10], 1	      6888	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_22
0x4004213	            0x7407	                            je 0x400421c	      6888	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_22
0x4004215	    0x830d00000000	                or dword [0x0400421c], 1	      6889	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_22
0x400421c	        0xf6421004	               test byte [rdx + 0x10], 4	      6890	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_23
0x4004220	            0x7407	                            je 0x4004229	      6890	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_23
0x4004222	    0x830d00000000	                or dword [0x04004229], 1	      6891	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_23
0x4004229	        0xf6401001	               test byte [rax + 0x10], 1	      6892	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_24
0x400422d	            0x7407	                            je 0x4004236	      6892	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_24
0x400422f	    0x830d00000000	                or dword [0x04004236], 4	      6893	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_24
0x4004236	        0xf6401004	               test byte [rax + 0x10], 4	      6894	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_25
0x400423a	            0x7407	                            je 0x4004243	      6894	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_25
0x400423c	    0x830d00000000	                or dword [0x04004243], 4	      6895	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	ELSE_11	IF_25
0x4004243	    0x833d00000000	               cmp dword [0x0400424a], 2	      6897	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26
0x400424a	     0xf84810c0000	                            je 0x4004ed1	      6897	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26
0x4004250	    0x8b1500000000	            mov edx, dword [0x04004256] 	      6897	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26
0x4004256	          0xf6c204	                              test dl, 4	      6897	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26
0x4004259	     0xf84790c0000	                            je 0x4004ed8	      6897	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26
0x400425f	     0xfb605000000	           movzx eax, byte [0x04004266] 	      6899	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	IF_27
0x4004266	          0xc0e803	                               shr al, 3	      6899	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	IF_27
0x4004269	          0x83e001	                              and eax, 1	      6899	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	IF_27
0x400426c	        0x4883c00e	                            add rax, 0xe	      6899	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	IF_27
0x4004270	    0xf604c5000000	                 test byte [rax*8], 0x10	      6899	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	IF_27
0x4004278	            0x7514	                           jne 0x400428e	      6899	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	IF_27
0x400427a	      0xba00000000	                              mov edx, 0	      6900	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	CALL_23
0x400427f	      0xbef41a0000	                         mov esi, 0x1af4	      6900	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	CALL_23
0x4004284	      0xbf00000000	                              mov edi, 0	      6900	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	CALL_23
0x4004289	      0xe800000000	                          call 0x400428e	      6900	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	CALL_23
0x400428e	          0x83e2fb	                     and edx, 0xfffffffb	      6901	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26
0x4004291	    0x891500000000	            mov dword [0x04004297], edx 	      6901	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26
0x4004297	      0xbff0000000	                           mov edi, 0xf0	      6902	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	CALL_24
0x400429c	      0xe87de2ffff	                     call sym.add_prefix	      6902	tc-i386.c	FUNCTION_87	ELSE_4	IF_5	IF_26	CALL_24
0x40042a1	      0xbb00000000	                              mov ebx, 0	      6650	tc-i386.c	FUNCTION_87
0x40042a6	      0xe9320c0000	                           jmp 0x4004edd	      6650	tc-i386.c	FUNCTION_87
0x40042ab	    0x8b3500000000	            mov esi, dword [0x040042b1] 	      6914	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1
0x40042b1	            0x85f6	                           test esi, esi	      6914	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1
0x40042b3	     0xf84af0c0000	                            je 0x4004f68	      6914	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1
0x40042b9	    0x488b05000000	            mov rax, qword [0x040042c0] 	      6914	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1
0x40042c0	        0x48c1e810	                           shr rax, 0x10	      1895	tc-i386.c	FUNCTION_21	SWITCH_1
0x40042c4	            0xa85f	                           test al, 0x5f	      6915	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1	IF_29	CALL_25
0x40042c6	            0x752b	                           jne 0x40042f3	      6915	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1	IF_29	CALL_25
0x40042c8	      0xb900000000	                              mov ecx, 0	      6915	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1	IF_29	CALL_25
0x40042cd	      0xba00000000	                              mov edx, 0	      6915	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1	IF_29	CALL_25
0x40042d2	            0xeb13	                           jmp 0x40042e7	      6915	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1	IF_29	CALL_25
0x40042d4	    0x488b81800000	            mov rax, qword [rcx + 0x80] 	      6915	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1	IF_29	CALL_25
0x40042db	        0x4883c108	                              add rcx, 8	      6915	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1	IF_29	CALL_25
0x40042df	        0x48c1e810	                           shr rax, 0x10	      1895	tc-i386.c	FUNCTION_21	SWITCH_1
0x40042e3	            0xa85f	                           test al, 0x5f	      6915	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1	IF_29	CALL_25
0x40042e5	            0x7511	                           jne 0x40042f8	      6915	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1	IF_29	CALL_25
0x40042e7	          0x83c201	                              add edx, 1	      6914	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1
0x40042ea	            0x39f2	                            cmp edx, esi	      6914	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1
0x40042ec	            0x75e6	                           jne 0x40042d4	      6914	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1
0x40042ee	      0xe9750c0000	                           jmp 0x4004f68	      6914	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1
0x40042f3	      0xba00000000	                              mov edx, 0	      6915	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	FOR_1	IF_29	CALL_25
0x40042f8	     0xfb605000000	           movzx eax, byte [0x040042ff] 	      6919	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30
0x40042ff	          0x83e030	                           and eax, 0x30	      6919	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30
0x4004302	     0xf84d0000000	                            je 0x40043d8	      6919	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30
0x4004308	    0x488b0d000000	            mov rcx, qword [0x0400430f] 	      6921	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_31
0x400430f	         0xfb65911	           movzx ebx, byte [rcx + 0x11] 	      6921	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_31
0x4004313	          0x8d7304	                      lea esi, [rbx + 4]	      6921	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_31
0x4004316	        0x4080fe01	                              cmp sil, 1	      6921	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_31
0x400431a	            0x7714	                            ja 0x4004330	      6921	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_31
0x400431c	      0xba00000000	                              mov edx, 0	      6923	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	CALL_27
0x4004321	      0xbe0b1b0000	                         mov esi, 0x1b0b	      6923	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	CALL_27
0x4004326	      0xbf00000000	                              mov edi, 0	      6923	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	CALL_27
0x400432b	      0xe800000000	                          call 0x4004330	      6923	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	CALL_27
0x4004330	    0xc70500000000	               mov dword [0x0400433a], 4	      6925	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30
0x400433a	    0x48833d000000	               cmp qword [0x04004342], 0	      6926	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x4004342	            0x7570	                           jne 0x40043b4	      6926	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x4004344	    0xc70500000000	               mov dword [0x0400434e], 5	      6928	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x400434e	    0x8b3500000000	            mov esi, dword [0x04004354] 	      6929	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x4004354	    0x893500000000	            mov dword [0x0400435a], esi 	      6929	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x400435a	            0x89d6	                            mov esi, edx	      6930	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x400435c	    0x8024f5000000	                  and byte [rsi*8], 0xec	      6932	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32
0x4004364	    0x833d00000000	               cmp dword [0x0400436b], 2	      6933	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x400436b	            0x7509	                           jne 0x4004376	      6933	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x400436d	    0x803d00000000	                cmp byte [0x04004374], 0	      6933	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x4004374	            0x7420	                            je 0x4004396	      6933	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x4004376	          0x4189d1	                            mov r9d, edx	      6936	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x4004379	        0x4983c10e	                             add r9, 0xe	      6936	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x400437d	    0x420fb634cd00	                  movzx esi, byte [r9*8]	      6936	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x4004386	          0x83ce04	                               or esi, 4	      6936	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x4004389	          0x83e6f7	                     and esi, 0xfffffff7	      6937	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x400438c	    0x428834cd0000	                    mov byte [r9*8], sil	      6937	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x4004394	            0xeb1e	                           jmp 0x40043b4	      6937	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	IF_33
0x4004396	          0x4189d1	                            mov r9d, edx	      6941	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	ELSE_13
0x4004399	        0x4983c10e	                             add r9, 0xe	      6941	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	ELSE_13
0x400439d	    0x420fb634cd00	                  movzx esi, byte [r9*8]	      6941	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	ELSE_13
0x40043a6	          0x83e6fb	                     and esi, 0xfffffffb	      6941	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	ELSE_13
0x40043a9	          0x83ce08	                               or esi, 8	      6942	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	ELSE_13
0x40043ac	    0x428834cd0000	                    mov byte [r9*8], sil	      6942	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_32	ELSE_13
0x40043b4	         0xfb67111	           movzx esi, byte [rcx + 0x11] 	      6945	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30
0x40043b8	    0x893500000000	            mov dword [0x040043be], esi 	      6945	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30
0x40043be	        0xf6411001	               test byte [rcx + 0x10], 1	      6946	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_34
0x40043c2	            0x7407	                            je 0x40043cb	      6946	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_34
0x40043c4	    0x830d00000000	                or dword [0x040043cb], 2	      6947	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_34
0x40043cb	        0xf6411004	               test byte [rcx + 0x10], 4	      6948	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_35
0x40043cf	            0x7407	                            je 0x40043d8	      6948	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_35
0x40043d1	    0x830d00000000	                or dword [0x040043d8], 2	      6949	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_30	IF_35
0x40043d8	    0x488b0d000000	            mov rcx, qword [0x040043df] 	      6954	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36
0x40043df	          0x4885c9	                           test rcx, rcx	      6954	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36
0x40043e2	     0xf8505020000	                           jne 0x40045ed	      6954	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36
0x40043e8	    0xc70500000000	               mov dword [0x040043f2], 0	      6956	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36
0x40043f2	    0x833d00000000	               cmp dword [0x040043f9], 0	      6911	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x40043f9	        0x400f94c6	                                sete sil	      6911	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x40043fd	        0x400fb6f6	                          movzx esi, sil	      6911	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x4004401	    0x488b0d000000	            mov rcx, qword [0x04004408] 	      6959	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38
0x4004408	          0x4885c9	                           test rcx, rcx	      6959	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38
0x400440b	     0xf8518010000	                           jne 0x4004529	      6959	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38
0x4004411	            0x84c0	                             test al, al	      6963	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_28
0x4004413	            0x7414	                            je 0x4004429	      6963	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_28
0x4004415	      0xba00000000	                              mov edx, 0	      6963	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_28
0x400441a	      0xbe331b0000	                         mov esi, 0x1b33	      6963	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_28
0x400441f	      0xbf00000000	                              mov edi, 0	      6963	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_28
0x4004424	      0xe800000000	                          call 0x4004429	      6963	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_28
0x4004429	    0x8b0500000000	            mov eax, dword [0x0400442f] 	      6965	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x400442f	          0x83f802	                              cmp eax, 2	      6965	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x4004432	            0x753c	                           jne 0x4004470	      6965	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x4004434	    0xc70500000000	               mov dword [0x0400443e], 4	      6971	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x400443e	    0xc70500000000	               mov dword [0x04004448], 5	      6972	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x4004448	    0xc70500000000	               mov dword [0x04004452], 4	      6973	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x4004452	      0xbd00000000	                              mov ebp, 0	      6974	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x4004457	    0x803d00000000	                cmp byte [0x0400445e], 1	      6974	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x400445e	           0xf92c1	                                 setb cl	      6974	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x4004461	          0x4519c9	                            sbb r9d, r9d	      6974	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x4004464	        0x4183c101	                              add r9d, 1	      6974	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x4004468	    0x41ba00000000	                             mov r10d, 0	      6974	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x400446e	            0xeb56	                           jmp 0x40044c6	      6974	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	IF_39
0x4004470	          0x83f801	                              cmp eax, 1	      6976	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x4004473	           0xf94c1	                                 sete cl	      6976	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x4004476	    0x803d00000000	                cmp byte [0x0400447d], 0	      6976	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x400447d	           0xf95c0	                                setne al	      6976	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x4004480	            0x38c1	                              cmp cl, al	      6976	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x4004482	            0x7422	                            je 0x40044a6	      6976	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x4004484	    0xc70500000000	               mov dword [0x0400448e], 6	      6979	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x400448e	      0xbd00000000	                              mov ebp, 0	      6980	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x4004493	      0xb900000000	                              mov ecx, 0	      6980	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x4004498	    0x41b900000000	                              mov r9d, 0	      6980	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x400449e	    0x41ba01000000	                             mov r10d, 1	      6980	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x40044a4	            0xeb20	                           jmp 0x40044c6	      6980	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_14	IF_40
0x40044a6	    0xc70500000000	               mov dword [0x040044b0], 5	      6984	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_15
0x40044b0	      0xbd00000000	                              mov ebp, 0	      6985	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_15
0x40044b5	      0xb900000000	                              mov ecx, 0	      6985	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_15
0x40044ba	    0x41b901000000	                              mov r9d, 1	      6985	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_15
0x40044c0	    0x41ba00000000	                             mov r10d, 0	      6985	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_15
0x40044c6	            0x89d0	                            mov eax, edx	      6985	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_15
0x40044c8	    0x4c8d1cc50000	                        lea r11, [rax*8]	      6985	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	ELSE_15
0x40044d0	    0x8b0500000000	            mov eax, dword [0x040044d6] 	      1785	tc-i386.c	FUNCTION_18	SWITCH_1
0x40044d6	            0xf7d0	                                 not eax	      1785	tc-i386.c	FUNCTION_18	SWITCH_1
0x40044d8	        0x41234308	                and eax, dword [r11 + 8]	      1785	tc-i386.c	FUNCTION_18	SWITCH_1
0x40044dc	            0x89c3	                            mov ebx, eax	      1785	tc-i386.c	FUNCTION_18	SWITCH_1
0x40044de	    0x8b0500000000	            mov eax, dword [0x040044e4] 	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x40044e4	            0xf7d0	                                 not eax	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x40044e6	        0x4121430c	              and dword [r11 + 0xc], eax	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x40044ea	          0x4c89d0	                            mov rax, r10	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x40044ed	          0x83e001	                              and eax, 1	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x40044f0	        0x48c1e011	                           shl rax, 0x11	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x40044f4	    0x4881e5fffffd	             and rbp, 0xfffffffffffdffff	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x40044fb	          0x4809e8	                             or rax, rbp	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x40044fe	        0x4183e101	                              and r9d, 1	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x4004502	        0x49c1e112	                            shl r9, 0x12	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x4004506	    0x4825fffff3ff	             and rax, 0xfffffffffff3ffff	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x400450c	          0x83e101	                              and ecx, 1	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x400450f	        0x48c1e113	                           shl rcx, 0x13	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x4004513	          0x4c09c8	                              or rax, r9	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x4004516	          0x4809c8	                             or rax, rcx	      6987	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_29
0x4004519	             0x9d8	                             or eax, ebx	      6988	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_30
0x400451b	        0x41894308	                mov dword [r11 + 8], eax	      6988	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	IF_38	CALL_30
0x400451f	      0xbb00000000	                              mov ebx, 0	      6952	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x4004524	      0xe916040000	                           jmp 0x400493f	      6952	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x4004529	      0xbb00000000	                              mov ebx, 0	      6952	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x400452e	            0x84c0	                             test al, al	      6990	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41
0x4004530	     0xf8509040000	                           jne 0x400493f	      6990	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41
0x4004536	         0xfb64111	           movzx eax, byte [rcx + 0x11] 	      6993	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_42
0x400453a	          0x8d4804	                      lea ecx, [rax + 4]	      6993	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_42
0x400453d	          0x80f901	                               cmp cl, 1	      6993	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_42
0x4004540	            0x770c	                            ja 0x400454e	      6993	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_42
0x4004542	    0xc70500000000	               mov dword [0x0400454c], 4	      6995	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_42
0x400454c	            0xeb09	                           jmp 0x4004557	      6995	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_42
0x400454e	           0xfb6c0	                           movzx eax, al	      6997	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x4004551	    0x890500000000	            mov dword [0x04004557], eax 	      6997	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x4004557	    0xc70500000000	               mov dword [0x04004561], 5	      6998	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x4004561	    0x8b0500000000	            mov eax, dword [0x04004567] 	      6999	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x4004567	    0x890500000000	            mov dword [0x0400456d], eax 	      6999	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x400456d	    0xc70500000000	               mov dword [0x04004577], 4	      7000	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x4004577	            0x89d0	                            mov eax, edx	      7001	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x4004579	    0x8024c5000000	                  and byte [rax*8], 0xec	      7003	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17
0x4004581	    0x833d00000000	               cmp dword [0x04004588], 2	      7004	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x4004588	            0x7509	                           jne 0x4004593	      7004	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x400458a	    0x803d00000000	                cmp byte [0x04004591], 0	      7004	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x4004591	            0x741d	                            je 0x40045b0	      7004	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x4004593	            0x89d1	                            mov ecx, edx	      7007	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x4004595	        0x4883c10e	                            add rcx, 0xe	      7007	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x4004599	     0xfb604cd0000	                 movzx eax, byte [rcx*8]	      7007	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x40045a1	          0x83c804	                               or eax, 4	      7007	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x40045a4	          0x83e0f7	                     and eax, 0xfffffff7	      7008	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x40045a7	    0x8804cd000000	                    mov byte [rcx*8], al	      7008	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x40045ae	            0xeb1b	                           jmp 0x40045cb	      7008	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_17	IF_43
0x40045b0	            0x89d1	                            mov ecx, edx	      7012	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_18
0x40045b2	        0x4883c10e	                            add rcx, 0xe	      7012	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_18
0x40045b6	     0xfb604cd0000	                 movzx eax, byte [rcx*8]	      7012	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_18
0x40045be	          0x83e0fb	                     and eax, 0xfffffffb	      7012	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_18
0x40045c1	          0x83c808	                               or eax, 8	      7013	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_18
0x40045c4	    0x8804cd000000	                    mov byte [rcx*8], al	      7013	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	ELSE_18
0x40045cb	      0xbb00000000	                              mov ebx, 0	      6952	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x40045d0	    0x488b05000000	            mov rax, qword [0x040045d7] 	      7015	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_44
0x40045d7	        0xf6401001	               test byte [rax + 0x10], 1	      7015	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_44
0x40045db	     0xf845e030000	                            je 0x400493f	      7015	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_44
0x40045e1	    0x830d00000000	                or dword [0x040045e8], 2	      7016	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_44
0x40045e8	      0xe952030000	                           jmp 0x400493f	      7016	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_36	ELSE_16	IF_41	IF_44
0x40045ed	         0xfb67111	           movzx esi, byte [rcx + 0x11] 	      7020	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x40045f1	        0x448d4e02	                      lea r9d, [rsi + 2]	      7020	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x40045f5	        0x4180f901	                              cmp r9b, 1	      7020	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x40045f9	            0x775e	                            ja 0x4004659	      7020	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x40045fb	            0x84c0	                             test al, al	      7023	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45	CALL_31
0x40045fd	            0x7414	                            je 0x4004613	      7023	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45	CALL_31
0x40045ff	      0xba00000000	                              mov edx, 0	      7023	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45	CALL_31
0x4004604	      0xbe6f1b0000	                         mov esi, 0x1b6f	      7023	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45	CALL_31
0x4004609	      0xbf00000000	                              mov edi, 0	      7023	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45	CALL_31
0x400460e	      0xe800000000	                          call 0x4004613	      7023	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45	CALL_31
0x4004613	    0xc70500000000	               mov dword [0x0400461d], 5	      7024	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400461d	            0x89d1	                            mov ecx, edx	      7025	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400461f	        0x488d710e	                    lea rsi, [rcx + 0xe]	      7025	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x4004623	     0xfb604f50000	                 movzx eax, byte [rsi*8]	      7028	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400462b	          0x83e0e0	                     and eax, 0xffffffe0	      7028	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400462e	          0x83c808	                               or eax, 8	      7029	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x4004631	    0x8804f5000000	                    mov byte [rsi*8], al	      7029	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x4004638	    0x830c8d000000	                     or dword [rcx*4], 1	      7030	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x4004640	    0x833d00000000	               cmp dword [0x04004647], 0	      7030	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x4004647	        0x400f94c6	                                sete sil	      7030	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400464b	        0x400fb6f6	                          movzx esi, sil	      7030	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_19	IF_45
0x400464f	      0xbb00000000	                              mov ebx, 0	      6952	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x4004654	      0xe9e6020000	                           jmp 0x400493f	      6952	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x4004659	        0xf6410b40	            test byte [rcx + 0xb], 0x40 	      7034	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47
0x400465d	     0xf8407010000	                            je 0x400476a	      7034	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47
0x4004663	            0x84c0	                             test al, al	      7036	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	CALL_32
0x4004665	            0x7414	                            je 0x400467b	      7036	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	CALL_32
0x4004667	      0xba00000000	                              mov edx, 0	      7036	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	CALL_32
0x400466c	      0xbe7c1b0000	                         mov esi, 0x1b7c	      7036	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	CALL_32
0x4004671	      0xbf00000000	                              mov edi, 0	      7036	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	CALL_32
0x4004676	      0xe800000000	                          call 0x400467b	      7036	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	CALL_32
0x400467b	        0x4080fe03	                              cmp sil, 3	      7037	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2
0x400467f	            0x740b	                            je 0x400468c	      7037	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2
0x4004681	        0x4080fe05	                              cmp sil, 5	      7037	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2
0x4004685	            0x7443	                            je 0x40046ca	      7037	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2
0x4004687	      0xe98d000000	                           jmp 0x4004719	      7037	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2
0x400468c	    0x488b05000000	            mov rax, qword [0x04004693] 	      7040	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	IF_48
0x4004693	          0x4885c0	                           test rax, rax	      7040	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	IF_48
0x4004696	            0x7519	                           jne 0x40046b1	      7040	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	IF_48
0x4004698	    0xc70500000000	               mov dword [0x040046a2], 7	      7041	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	IF_48
0x40046a2	      0xbe00000000	                              mov esi, 0	      6911	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x40046a7	      0xbb00000000	                              mov ebx, 0	      6952	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x40046ac	      0xe98b000000	                           jmp 0x400473c	      6952	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x40046b1	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      7043	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21
0x40046b5	          0x83e806	                              sub eax, 6	      7043	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21
0x40046b8	    0x890500000000	            mov dword [0x040046be], eax 	      7043	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21
0x40046be	      0xbe00000000	                              mov esi, 0	      6911	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x40046c3	      0xbb00000000	                              mov ebx, 0	      6952	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x40046c8	            0xeb72	                           jmp 0x400473c	      6952	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x40046ca	    0x488b05000000	            mov rax, qword [0x040046d1] 	      7047	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49
0x40046d1	          0x4885c0	                           test rax, rax	      7047	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49
0x40046d4	            0x752a	                           jne 0x4004700	      7047	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49
0x40046d6	    0xc70500000000	               mov dword [0x040046e0], 6	      7049	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49
0x40046e0	            0x89d0	                            mov eax, edx	      7049	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49
0x40046e2	    0xf604c5000000	                 test byte [rax*8], 0x1f	      7050	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49	IF_50	CALL_33
0x40046ea	            0x7546	                           jne 0x4004732	      7050	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49	IF_50	CALL_33
0x40046ec	    0x800cc5000000	                      or byte [rax*8], 1	      7053	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49	IF_50
0x40046f4	      0xbe01000000	                              mov esi, 1	      7054	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21	IF_49	IF_50
0x40046f9	      0xbb00000000	                              mov ebx, 0	      7046	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21
0x40046fe	            0xeb3c	                           jmp 0x400473c	      7046	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21
0x4004700	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      7058	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_22
0x4004704	          0x83e804	                              sub eax, 4	      7058	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_22
0x4004707	    0x890500000000	            mov dword [0x0400470d], eax 	      7058	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_22
0x400470d	      0xbe00000000	                              mov esi, 0	      6911	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x4004712	      0xbb00000000	                              mov ebx, 0	      7046	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21
0x4004717	            0xeb23	                           jmp 0x400473c	      7046	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21
0x4004719	        0x400fb6c6	                          movzx eax, sil	      7061	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2
0x400471d	          0x83e802	                              sub eax, 2	      7061	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2
0x4004720	    0x890500000000	            mov dword [0x04004726], eax 	      7061	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2
0x4004726	      0xbe00000000	                              mov esi, 0	      6911	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x400472b	      0xbb00000000	                              mov ebx, 0	      6952	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x4004730	            0xeb0a	                           jmp 0x400473c	      6952	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x4004732	      0xbe00000000	                              mov esi, 0	      6911	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x4004737	      0xbb00000000	                              mov ebx, 0	      7046	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21
0x400473c	            0x89d0	                            mov eax, edx	      7046	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21
0x400473e	    0x488b04c50000	                  mov rax, qword [rax*8]	      7046	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	SWITCH_2	ELSE_21
0x4004746	        0x48c1e810	                           shr rax, 0x10	      2137	tc-i386.c	FUNCTION_29	IF_1
0x400474a	      0xb901000000	                              mov ecx, 1	      2138	tc-i386.c	FUNCTION_29	IF_1
0x400474f	            0xa801	                              test al, 1	      2137	tc-i386.c	FUNCTION_29	IF_1
0x4004751	            0x750c	                           jne 0x400475f	      2137	tc-i386.c	FUNCTION_29	IF_1
0x4004753	          0x83e00e	                            and eax, 0xe	      2139	tc-i386.c	FUNCTION_29	ELSE_1	IF_2
0x4004756	            0x3c01	                               cmp al, 1	      2144	tc-i386.c	FUNCTION_29	ELSE_2
0x4004758	            0x19c9	                            sbb ecx, ecx	      2144	tc-i386.c	FUNCTION_29	ELSE_2
0x400475a	            0xf7d1	                                 not ecx	      2144	tc-i386.c	FUNCTION_29	ELSE_2
0x400475c	          0x83e102	                              and ecx, 2	      2144	tc-i386.c	FUNCTION_29	ELSE_2
0x400475f	    0x890d00000000	            mov dword [0x04004765], ecx 	      7063	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	CALL_34
0x4004765	      0xe9d5010000	                           jmp 0x400493f	      7063	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_20	IF_47	CALL_34
0x400476a	    0x833d00000000	               cmp dword [0x04004771], 2	      7067	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51
0x4004771	            0x755b	                           jne 0x40047ce	      7067	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51
0x4004773	            0x89d6	                            mov esi, edx	      7067	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51
0x4004775	    0xf604f5000000	                 test byte [rsi*8], 0x1f	      7068	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	CALL_35
0x400477d	            0x744f	                            je 0x40047ce	      7068	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	CALL_35
0x400477f	    0x8024f5000000	                  and byte [rsi*8], 0xed	      7071	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51
0x4004787	    0x803d00000000	                cmp byte [0x0400478e], 0	      7072	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	IF_52
0x400478e	            0x7520	                           jne 0x40047b0	      7072	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	IF_52
0x4004790	          0x4189d1	                            mov r9d, edx	      7074	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	IF_52
0x4004793	        0x4983c10e	                             add r9, 0xe	      7074	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	IF_52
0x4004797	    0x420fb634cd00	                  movzx esi, byte [r9*8]	      7074	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	IF_52
0x40047a0	          0x83e6fb	                     and esi, 0xfffffffb	      7074	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	IF_52
0x40047a3	          0x83ce08	                               or esi, 8	      7075	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	IF_52
0x40047a6	    0x428834cd0000	                    mov byte [r9*8], sil	      7075	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	IF_52
0x40047ae	            0xeb1e	                           jmp 0x40047ce	      7075	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	IF_52
0x40047b0	          0x4189d1	                            mov r9d, edx	      7079	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	ELSE_24
0x40047b3	        0x4983c10e	                             add r9, 0xe	      7079	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	ELSE_24
0x40047b7	    0x420fb634cd00	                  movzx esi, byte [r9*8]	      7079	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	ELSE_24
0x40047c0	          0x83ce04	                               or esi, 4	      7079	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	ELSE_24
0x40047c3	          0x83e6f7	                     and esi, 0xfffffff7	      7080	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	ELSE_24
0x40047c6	    0x428834cd0000	                    mov byte [r9*8], sil	      7080	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_51	ELSE_24
0x40047ce	            0x84c0	                             test al, al	      7084	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_53
0x40047d0	            0x750a	                           jne 0x40047dc	      7084	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_53
0x40047d2	         0xfb67111	           movzx esi, byte [rcx + 0x11] 	      7085	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_53
0x40047d6	    0x893500000000	            mov dword [0x040047dc], esi 	      7085	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_53
0x40047dc	        0xf6411001	               test byte [rcx + 0x10], 1	      7086	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_54
0x40047e0	            0x7407	                            je 0x40047e9	      7086	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_54
0x40047e2	    0x830d00000000	                or dword [0x040047e9], 1	      7087	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_54
0x40047e9	         0xfb67111	           movzx esi, byte [rcx + 0x11] 	      7088	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23
0x40047ed	    0x893500000000	            mov dword [0x040047f3], esi 	      7088	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23
0x40047f3	      0xbb00000000	                              mov ebx, 0	      6952	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x40047f8	        0xf6411001	               test byte [rcx + 0x10], 1	      7091	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_55
0x40047fc	            0x7519	                           jne 0x4004817	      7091	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_55
0x40047fe	         0xfb65911	           movzx ebx, byte [rcx + 0x11] 	      7092	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_55
0x4004802	          0x8d73fc	                      lea esi, [rbx - 4]	      7092	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_55
0x4004805	        0x4080fe01	                              cmp sil, 1	      7094	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_55
0x4004809	      0xbe00000000	                              mov esi, 0	      7094	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_55
0x400480e	      0xbb00000000	                              mov ebx, 0	      7094	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_55
0x4004813	        0x480f46de	                         cmovbe rbx, rsi	      7094	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_55
0x4004817	      0xbe00000000	                              mov esi, 0	      6911	tc-i386.c	FUNCTION_87	ELSE_12	IF_28
0x400481c	        0x80791105	                cmp byte [rcx + 0x11], 5	      7095	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_56
0x4004820	            0x7518	                           jne 0x400483a	      7095	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_56
0x4004822	    0x833d00000000	               cmp dword [0x04004829], 0	      7095	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_56
0x4004829	            0x750f	                           jne 0x400483a	      7095	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_56
0x400482b	            0x89d1	                            mov ecx, edx	      7098	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_56
0x400482d	    0x800ccd000000	                      or byte [rcx*8], 1	      7098	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_56
0x4004835	      0xbe01000000	                              mov esi, 1	      7097	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_56
0x400483a	    0x8b0d00000000	            mov ecx, dword [0x04004840] 	      7100	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23
0x4004840	    0x890d00000000	            mov dword [0x04004846], ecx 	      7100	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23
0x4004846	    0x488b0d000000	            mov rcx, qword [0x0400484d] 	      7101	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57
0x400484d	          0x4885c9	                           test rcx, rcx	      7101	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57
0x4004850	            0x7524	                           jne 0x4004876	      7101	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57
0x4004852	            0x84c0	                             test al, al	      7103	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57	CALL_36
0x4004854	            0x7414	                            je 0x400486a	      7103	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57	CALL_36
0x4004856	      0xba00000000	                              mov edx, 0	      7103	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57	CALL_36
0x400485b	      0xbebf1b0000	                         mov esi, 0x1bbf	      7103	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57	CALL_36
0x4004860	      0xbf00000000	                              mov edi, 0	      7103	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57	CALL_36
0x4004865	      0xe800000000	                          call 0x400486a	      7103	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57	CALL_36
0x400486a	    0xc70500000000	               mov dword [0x04004874], 4	      7109	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57
0x4004874	            0xeb3e	                           jmp 0x40048b4	      7109	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_57
0x4004876	            0x84c0	                             test al, al	      7111	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58
0x4004878	            0x753a	                           jne 0x40048b4	      7111	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58
0x400487a	         0xfb64111	           movzx eax, byte [rcx + 0x11] 	      7113	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_59
0x400487e	        0x448d4804	                      lea r9d, [rax + 4]	      7113	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_59
0x4004882	        0x4180f901	                              cmp r9b, 1	      7113	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_59
0x4004886	            0x770c	                            ja 0x4004894	      7113	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_59
0x4004888	    0xc70500000000	               mov dword [0x04004892], 4	      7115	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_59
0x4004892	            0xeb09	                           jmp 0x400489d	      7115	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_59
0x4004894	           0xfb6c0	                           movzx eax, al	      7117	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	ELSE_26
0x4004897	    0x890500000000	            mov dword [0x0400489d], eax 	      7117	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	ELSE_26
0x400489d	    0xc70500000000	               mov dword [0x040048a7], 4	      7118	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58
0x40048a7	        0xf6411001	               test byte [rcx + 0x10], 1	      7119	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_60
0x40048ab	            0x7407	                            je 0x40048b4	      7119	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_60
0x40048ad	    0x830d00000000	                or dword [0x040048b4], 2	      7120	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_25	IF_58	IF_60
0x40048b4	    0x8b0500000000	            mov eax, dword [0x040048ba] 	      7123	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x40048ba	            0x85c0	                           test eax, eax	      7123	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x40048bc	            0x7425	                            je 0x40048e3	      7123	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x40048be	            0x89d1	                            mov ecx, edx	      7124	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x40048c0	    0x8b0c8d000000	                  mov ecx, dword [rcx*4]	      7124	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x40048c7	    0x81f979010000	                          cmp ecx, 0x179	      7124	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x40048cd	            0x7408	                            je 0x40048d7	      7124	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x40048cf	    0x81f995010000	                          cmp ecx, 0x195	      7124	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x40048d5	            0x750c	                           jne 0x40048e3	      7124	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x40048d7	    0xc70500000000	               mov dword [0x040048e1], 0	      7126	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x40048e1	            0xeb5c	                           jmp 0x400493f	      7126	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	IF_61
0x40048e3	             0x9f0	                             or eax, esi	      7130	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62
0x40048e5	            0x752f	                           jne 0x4004916	      7130	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62
0x40048e7	    0x8b0500000000	            mov eax, dword [0x040048ed] 	      7131	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62
0x40048ed	            0x85c0	                           test eax, eax	      7131	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62
0x40048ef	            0x7425	                            je 0x4004916	      7131	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62
0x40048f1	          0x83f801	                              cmp eax, 1	      7134	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62	IF_63
0x40048f4	            0x7511	                           jne 0x4004907	      7134	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62	IF_63
0x40048f6	            0x89d0	                            mov eax, edx	      7135	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62	IF_63
0x40048f8	    0x800cc5000000	                      or byte [rax*8], 1	      7135	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62	IF_63
0x4004900	      0xbe01000000	                              mov esi, 1	      7133	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62
0x4004905	            0xeb0f	                           jmp 0x4004916	      7133	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62
0x4004907	            0x89d0	                            mov eax, edx	      7137	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62	ELSE_28
0x4004909	    0x800cc5000000	                      or byte [rax*8], 4	      7137	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62	ELSE_28
0x4004911	      0xbe01000000	                              mov esi, 1	      7133	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62
0x4004916	            0x89d0	                            mov eax, edx	      7133	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62
0x4004918	    0x488b04c50000	                  mov rax, qword [rax*8]	      7133	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	IF_62
0x4004920	        0x48c1e810	                           shr rax, 0x10	      2137	tc-i386.c	FUNCTION_29	IF_1
0x4004924	      0xb901000000	                              mov ecx, 1	      2138	tc-i386.c	FUNCTION_29	IF_1
0x4004929	            0xa801	                              test al, 1	      2137	tc-i386.c	FUNCTION_29	IF_1
0x400492b	            0x750c	                           jne 0x4004939	      2137	tc-i386.c	FUNCTION_29	IF_1
0x400492d	          0x83e00e	                            and eax, 0xe	      2139	tc-i386.c	FUNCTION_29	ELSE_1	IF_2
0x4004930	            0x3c01	                               cmp al, 1	      2144	tc-i386.c	FUNCTION_29	ELSE_2
0x4004932	            0x19c9	                            sbb ecx, ecx	      2144	tc-i386.c	FUNCTION_29	ELSE_2
0x4004934	            0xf7d1	                                 not ecx	      2144	tc-i386.c	FUNCTION_29	ELSE_2
0x4004936	          0x83e102	                              and ecx, 2	      2144	tc-i386.c	FUNCTION_29	ELSE_2
0x4004939	    0x890d00000000	            mov dword [0x0400493f], ecx 	      7139	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	ELSE_23	ELSE_27	CALL_37
0x400493f	            0x85f6	                           test esi, esi	      7143	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x4004941	            0x747b	                            je 0x40049be	      7143	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x4004943	            0x89d0	                            mov eax, edx	      7149	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64	CALL_38
0x4004945	    0x48833cc50000	                    cmp qword [rax*8], 0	      7149	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64	CALL_38
0x400494e	            0x7414	                            je 0x4004964	      7149	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64	CALL_38
0x4004950	      0xba00000000	                              mov edx, 0	      7149	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64	CALL_38
0x4004955	      0xbeed1b0000	                         mov esi, 0x1bed	      7149	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64	CALL_38
0x400495a	      0xbf00000000	                              mov edi, 0	      7149	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64	CALL_38
0x400495f	      0xe800000000	                          call 0x4004964	      7149	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64	CALL_38
0x4004964	    0x8b0500000000	            mov eax, dword [0x0400496a] 	      7150	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x400496a	          0x8d4801	                      lea ecx, [rax + 1]	      7150	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x400496d	    0x890d00000000	            mov dword [0x04004973], ecx 	      7150	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x4004973	            0x89d6	                            mov esi, edx	      7151	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x4004975	            0x89c0	                            mov eax, eax	      7150	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x4004977	        0x48c1e005	                              shl rax, 5	      7150	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x400497b	    0x488d88000000	                          lea rcx, [rax]	      7150	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x4004982	    0x48890cf50000	                  mov qword [rsi*8], rcx	      7150	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x400498a	    0xc68000000000	                       mov byte [rax], 2	      7152	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x4004991	    0x48c780000000	                      mov qword [rax], 0	      7153	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x400499c	    0x48c780000000	                      mov qword [rax], 0	      7154	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x40049a7	    0x48c780000000	                      mov qword [rax], 0	      7155	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x40049b2	            0xeb0a	                           jmp 0x40049be	      7155	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	IF_64
0x40049b4	      0xbaffffffff	                     mov edx, 0xffffffff	      7161	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29
0x40049b9	      0xbb00000000	                              mov ebx, 0	      6650	tc-i386.c	FUNCTION_87
0x40049be	     0xfb605000000	           movzx eax, byte [0x040049c5] 	      7163	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65
0x40049c5	          0x83e00c	                            and eax, 0xc	      7163	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65
0x40049c8	            0x3c04	                               cmp al, 4	      7163	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65
0x40049ca	     0xf85c6000000	                           jne 0x4004a96	      7163	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65
0x40049d0	    0xf60500000000	           test byte [0x040049d7], 0xfc 	      7165	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_66	CALL_39
0x40049d7	            0x740d	                            je 0x40049e6	      7165	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_66	CALL_39
0x40049d9	    0x48c705000000	               mov qword [0x040049e4], 0	      7166	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_66
0x40049e4	            0xeb2c	                           jmp 0x4004a12	      7166	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_66
0x40049e6	     0xfb605000000	           movzx eax, byte [0x040049ed] 	      7171	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	ELSE_30	IF_67
0x40049ed	          0x83e060	                           and eax, 0x60	      7171	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	ELSE_30	IF_67
0x40049f0	            0x3c20	                            cmp al, 0x20	      7171	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	ELSE_30	IF_67
0x40049f2	            0x7510	                           jne 0x4004a04	      7171	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	ELSE_30	IF_67
0x40049f4	    0x488b05000000	            mov rax, qword [0x040049fb] 	      7172	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	ELSE_30	IF_67
0x40049fb	    0x488905000000	            mov qword [0x04004a02], rax 	      7172	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	ELSE_30	IF_67
0x4004a02	            0xeb0e	                           jmp 0x4004a12	      7172	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	ELSE_30	IF_67
0x4004a04	    0x488b05000000	            mov rax, qword [0x04004a0b] 	      7174	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	ELSE_30	ELSE_31
0x4004a0b	    0x488905000000	            mov qword [0x04004a12], rax 	      7174	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	ELSE_30	ELSE_31
0x4004a12	    0x488b05000000	            mov rax, qword [0x04004a19] 	      7179	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65
0x4004a19	         0xfb65011	           movzx edx, byte [rax + 0x11] 	      7179	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65
0x4004a1d	    0x891500000000	            mov dword [0x04004a23], edx 	      7179	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65
0x4004a23	        0xf6401001	               test byte [rax + 0x10], 1	      7180	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_68
0x4004a27	            0x7407	                            je 0x4004a30	      7180	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_68
0x4004a29	    0x830d00000000	                or dword [0x04004a30], 4	      7181	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_68
0x4004a30	    0x833d00000000	               cmp dword [0x04004a37], 0	      7184	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69
0x4004a37	     0xf8557040000	                           jne 0x4004e94	      7184	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69
0x4004a3d	    0xc70500000000	               mov dword [0x04004a47], 3	      7186	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69
0x4004a47	     0xfb605000000	           movzx eax, byte [0x04004a4e] 	      7188	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_70
0x4004a4e	          0x83e060	                           and eax, 0x60	      7188	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_70
0x4004a51	            0x3c20	                            cmp al, 0x20	      7188	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_70
0x4004a53	            0x7513	                           jne 0x4004a68	      7188	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_70
0x4004a55	    0x488b05000000	            mov rax, qword [0x04004a5c] 	      7189	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_70
0x4004a5c	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      7189	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_70
0x4004a60	    0x890500000000	            mov dword [0x04004a66], eax 	      7189	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_70
0x4004a66	            0xeb11	                           jmp 0x4004a79	      7189	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_70
0x4004a68	    0x488b05000000	            mov rax, qword [0x04004a6f] 	      7191	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	ELSE_32
0x4004a6f	         0xfb64011	           movzx eax, byte [rax + 0x11] 	      7191	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	ELSE_32
0x4004a73	    0x890500000000	            mov dword [0x04004a79], eax 	      7191	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	ELSE_32
0x4004a79	    0x488b05000000	            mov rax, qword [0x04004a80] 	      7193	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_71
0x4004a80	        0xf6401001	               test byte [rax + 0x10], 1	      7193	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_71
0x4004a84	     0xf840a040000	                            je 0x4004e94	      7193	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_71
0x4004a8a	    0x830d00000000	                or dword [0x04004a91], 1	      7194	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_71
0x4004a91	      0xe9fe030000	                           jmp 0x4004e94	      7194	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_29	IF_65	IF_69	IF_71
0x4004a96	     0xfb60d000000	           movzx ecx, byte [0x04004a9d] 	      7197	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72
0x4004a9d	          0x83e118	                           and ecx, 0x18	      7197	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72
0x4004aa0	          0x80f918	                            cmp cl, 0x18	      7197	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72
0x4004aa3	            0x754c	                           jne 0x4004af1	      7197	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72
0x4004aa5	    0x488b05000000	            mov rax, qword [0x04004aac] 	      7199	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72
0x4004aac	    0x488905000000	            mov qword [0x04004ab3], rax 	      7199	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72
0x4004ab3	    0x833d00000000	               cmp dword [0x04004aba], 0	      7200	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73
0x4004aba	     0xf85d4030000	                           jne 0x4004e94	      7200	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73
0x4004ac0	    0xc70500000000	               mov dword [0x04004aca], 3	      7202	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73
0x4004aca	    0x488b05000000	            mov rax, qword [0x04004ad1] 	      7203	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73
0x4004ad1	         0xfb65011	           movzx edx, byte [rax + 0x11] 	      7203	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73
0x4004ad5	    0x891500000000	            mov dword [0x04004adb], edx 	      7203	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73
0x4004adb	        0xf6401001	               test byte [rax + 0x10], 1	      7204	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73	IF_74
0x4004adf	     0xf84af030000	                            je 0x4004e94	      7204	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73	IF_74
0x4004ae5	    0x830d00000000	                or dword [0x04004aec], 1	      7205	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73	IF_74
0x4004aec	      0xe9a3030000	                           jmp 0x4004e94	      7205	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_33	IF_72	IF_73	IF_74
0x4004af1	    0x833d00000000	               cmp dword [0x04004af8], 0	      7212	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75
0x4004af8	     0xf8496030000	                            je 0x4004e94	      7212	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75
0x4004afe	    0x448b0d000000	            mov r9d, dword [0x04004b05] 	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x4004b05	          0x4585c9	                           test r9d, r9d	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x4004b08	     0xf84e8000000	                            je 0x4004bf6	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x4004b0e	    0xf60500000000	               test byte [0x04004b15], 1	      7218	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004b15	     0xf85e5000000	                           jne 0x4004c00	      7218	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004b1b	    0xf60500000000	               test byte [0x04004b22], 2	      7219	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004b22	     0xf85e2000000	                           jne 0x4004c0a	      7219	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004b28	    0xf60500000000	               test byte [0x04004b2f], 4	      7220	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004b2f	     0xf85df000000	                           jne 0x4004c14	      7220	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004b35	    0xf60500000000	               test byte [0x04004b3c], 2	      7221	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004b3c	     0xf85dc000000	                           jne 0x4004c1e	      7221	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004b42	    0xf60500000000	               test byte [0x04004b49], 8	      7222	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004b49	     0xf85d9000000	                           jne 0x4004c28	      7222	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004b4f	      0xb800000000	                              mov eax, 0	      7222	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004b54	            0xeb48	                           jmp 0x4004b9e	      7222	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004b56	            0x89c6	                            mov esi, eax	      7218	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004b58	    0xf604f5000000	                    test byte [rsi*8], 1	      7218	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004b60	     0xf85cc000000	                           jne 0x4004c32	      7218	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004b66	    0xf604f5000000	                    test byte [rsi*8], 2	      7219	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004b6e	     0xf85c3000000	                           jne 0x4004c37	      7219	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004b74	    0xf604f5000000	                    test byte [rsi*8], 4	      7220	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004b7c	     0xf85ba000000	                           jne 0x4004c3c	      7220	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004b82	    0xf604f5000000	                    test byte [rsi*8], 2	      7221	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004b8a	     0xf85b1000000	                           jne 0x4004c41	      7221	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004b90	    0xf604f5000000	                    test byte [rsi*8], 8	      7222	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004b98	     0xf85a8000000	                           jne 0x4004c46	      7222	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004b9e	            0x89c6	                            mov esi, eax	      7223	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004ba0	    0x803cf5000000	                     cmp byte [rsi*8], 0	      7223	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004ba8	     0xf889d000000	                            js 0x4004c4b	      7223	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004bae	    0xf604f5000000	                    test byte [rsi*8], 1	      7224	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004bb6	     0xf8594000000	                           jne 0x4004c50	      7224	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004bbc	    0xf604f5000000	                 test byte [rsi*8], 0x10	      7225	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004bc4	     0xf858b000000	                           jne 0x4004c55	      7225	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004bca	    0xf604f5000000	                 test byte [rsi*8], 0x20	      7226	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004bd2	     0xf8582000000	                           jne 0x4004c5a	      7226	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004bd8	    0xf604f5000000	                 test byte [rsi*8], 0x40	      7227	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004be0	            0x757d	                           jne 0x4004c5f	      7227	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004be2	          0x83c001	                              add eax, 1	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x4004be5	          0x4439c8	                            cmp eax, r9d	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x4004be8	     0xf8568ffffff	                           jne 0x4004b56	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x4004bee	          0x4489ce	                            mov esi, r9d	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x4004bf1	          0x4489c8	                            mov eax, r9d	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x4004bf4	            0xeb6c	                           jmp 0x4004c62	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x4004bf6	          0x4489c8	                            mov eax, r9d	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x4004bf9	      0xbe00000000	                              mov esi, 0	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x4004bfe	            0xeb62	                           jmp 0x4004c62	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x4004c00	          0x4489ce	                            mov esi, r9d	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x4004c03	      0xb800000000	                              mov eax, 0	      7218	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004c08	            0xeb58	                           jmp 0x4004c62	      7218	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004c0a	          0x4489ce	                            mov esi, r9d	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x4004c0d	      0xb800000000	                              mov eax, 0	      7219	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004c12	            0xeb4e	                           jmp 0x4004c62	      7219	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004c14	          0x4489ce	                            mov esi, r9d	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x4004c17	      0xb800000000	                              mov eax, 0	      7220	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004c1c	            0xeb44	                           jmp 0x4004c62	      7220	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004c1e	          0x4489ce	                            mov esi, r9d	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x4004c21	      0xb800000000	                              mov eax, 0	      7221	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004c26	            0xeb3a	                           jmp 0x4004c62	      7221	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004c28	          0x4489ce	                            mov esi, r9d	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x4004c2b	      0xb800000000	                              mov eax, 0	      7222	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004c30	            0xeb30	                           jmp 0x4004c62	      7222	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004c32	          0x4489ce	                            mov esi, r9d	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x4004c35	            0xeb2b	                           jmp 0x4004c62	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x4004c37	          0x4489ce	                            mov esi, r9d	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x4004c3a	            0xeb26	                           jmp 0x4004c62	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x4004c3c	          0x4489ce	                            mov esi, r9d	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x4004c3f	            0xeb21	                           jmp 0x4004c62	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x4004c41	          0x4489ce	                            mov esi, r9d	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x4004c44	            0xeb1c	                           jmp 0x4004c62	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x4004c46	          0x4489ce	                            mov esi, r9d	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x4004c49	            0xeb17	                           jmp 0x4004c62	      7217	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2
0x4004c4b	          0x4489ce	                            mov esi, r9d	      7223	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004c4e	            0xeb12	                           jmp 0x4004c62	      7223	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004c50	          0x4489ce	                            mov esi, r9d	      7224	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004c53	            0xeb0d	                           jmp 0x4004c62	      7224	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004c55	          0x4489ce	                            mov esi, r9d	      7225	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004c58	            0xeb08	                           jmp 0x4004c62	      7225	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004c5a	          0x4489ce	                            mov esi, r9d	      7226	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004c5d	            0xeb03	                           jmp 0x4004c62	      7226	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004c5f	          0x4489ce	                            mov esi, r9d	      7227	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	FOR_2	IF_76
0x4004c62	        0x4080ff08	                              cmp dil, 8	      7230	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_77
0x4004c66	     0xf8410030000	                            je 0x4004f7c	      7230	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_77
0x4004c6c	          0x80f908	                               cmp cl, 8	      7232	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78
0x4004c6f	     0xf85a0000000	                           jne 0x4004d15	      7232	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78
0x4004c75	          0x83faff	             cmp edx, 0xffffffffffffffff	      7236	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	CALL_40
0x4004c78	            0x7514	                           jne 0x4004c8e	      7236	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	CALL_40
0x4004c7a	      0xba00000000	                              mov edx, 0	      7236	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	CALL_40
0x4004c7f	      0xbe441c0000	                         mov esi, 0x1c44	      7236	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	CALL_40
0x4004c84	      0xbf00000000	                              mov edi, 0	      7236	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	CALL_40
0x4004c89	      0xe800000000	                          call 0x4004c8e	      7236	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	CALL_40
0x4004c8e	            0x39c2	                            cmp edx, eax	      7238	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79
0x4004c90	            0x731f	                           jae 0x4004cb1	      7238	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79
0x4004c92	          0x8d5001	                      lea edx, [rax + 1]	      7240	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79
0x4004c95	            0x39f2	                            cmp edx, esi	      7241	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79	CALL_41
0x4004c97	     0xf82ec000000	                            jb 0x4004d89	      7241	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79	CALL_41
0x4004c9d	      0xba00000000	                              mov edx, 0	      7241	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79	CALL_41
0x4004ca2	      0xbe491c0000	                         mov esi, 0x1c49	      7241	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79	CALL_41
0x4004ca7	      0xbf00000000	                              mov edi, 0	      7241	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79	CALL_41
0x4004cac	      0xe800000000	                          call 0x4004cb1	      7241	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79	CALL_41
0x4004cb1	            0x89c1	                            mov ecx, eax	      7247	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x4004cb3	    0xf604cd000000	                 test byte [rcx*8], 0x40	      7247	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x4004cbb	            0x7539	                           jne 0x4004cf6	      7247	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x4004cbd	          0x8d7801	                      lea edi, [rax + 1]	      7248	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x4004cc0	            0x89f9	                            mov ecx, edi	      7248	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x4004cc2	    0xf604cd000000	                 test byte [rcx*8], 0x40	      7248	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x4004cca	            0x742a	                            je 0x4004cf6	      7248	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x4004ccc	        0x448d4002	                      lea r8d, [rax + 2]	      7251	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x4004cd0	          0x4139f0	                            cmp r8d, esi	      7252	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80	CALL_42
0x4004cd3	            0x730d	                           jae 0x4004ce2	      7252	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80	CALL_42
0x4004cd5	            0x89c1	                            mov ecx, eax	      7252	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80	CALL_42
0x4004cd7	          0x4489c0	                            mov eax, r8d	      7251	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x4004cda	            0x39fa	                            cmp edx, edi	      7252	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80	CALL_42
0x4004cdc	     0xf84ab000000	                            je 0x4004d8d	      7252	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80	CALL_42
0x4004ce2	      0xba00000000	                              mov edx, 0	      7252	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80	CALL_42
0x4004ce7	      0xbe551c0000	                         mov esi, 0x1c55	      7252	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80	CALL_42
0x4004cec	      0xbf00000000	                              mov edi, 0	      7252	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80	CALL_42
0x4004cf1	      0xe800000000	                          call 0x4004cf6	      7252	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80	CALL_42
0x4004cf6	          0x8d4801	                      lea ecx, [rax + 1]	      7257	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	ELSE_37
0x4004cf9	            0x39f1	                            cmp ecx, esi	      7258	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	ELSE_37	CALL_43
0x4004cfb	     0xf828c000000	                            jb 0x4004d8d	      7258	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	ELSE_37	CALL_43
0x4004d01	      0xba00000000	                              mov edx, 0	      7258	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	ELSE_37	CALL_43
0x4004d06	      0xbe5a1c0000	                         mov esi, 0x1c5a	      7258	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	ELSE_37	CALL_43
0x4004d0b	      0xbf00000000	                              mov edi, 0	      7258	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	ELSE_37	CALL_43
0x4004d10	      0xe800000000	                          call 0x4004d15	      7258	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	ELSE_37	CALL_43
0x4004d15	          0x80f910	                            cmp cl, 0x10	      7262	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81
0x4004d18	            0x7553	                           jne 0x4004d6d	      7262	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81
0x4004d1a	    0x833d00000000	               cmp dword [0x04004d21], 0	      7266	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82
0x4004d21	            0x7520	                           jne 0x4004d43	      7266	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82
0x4004d23	          0x8d5002	                      lea edx, [rax + 2]	      7269	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82	CALL_44
0x4004d26	            0x39f2	                            cmp edx, esi	      7269	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82	CALL_44
0x4004d28	            0x7414	                            je 0x4004d3e	      7269	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82	CALL_44
0x4004d2a	      0xba00000000	                              mov edx, 0	      7269	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82	CALL_44
0x4004d2f	      0xbe651c0000	                         mov esi, 0x1c65	      7269	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82	CALL_44
0x4004d34	      0xbf00000000	                              mov edi, 0	      7269	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82	CALL_44
0x4004d39	      0xe800000000	                          call 0x4004d3e	      7269	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82	CALL_44
0x4004d3e	          0x8d4801	                      lea ecx, [rax + 1]	      7270	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82
0x4004d41	            0xeb4a	                           jmp 0x4004d8d	      7270	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	IF_82
0x4004d43	    0x8b0d00000000	            mov ecx, dword [0x04004d49] 	      7275	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39	CALL_45
0x4004d49	          0x8d5102	                      lea edx, [rcx + 2]	      7275	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39	CALL_45
0x4004d4c	            0x39f2	                            cmp edx, esi	      7275	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39	CALL_45
0x4004d4e	            0x7504	                           jne 0x4004d54	      7275	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39	CALL_45
0x4004d50	            0x39c2	                            cmp edx, eax	      7275	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39	CALL_45
0x4004d52	            0x7714	                            ja 0x4004d68	      7275	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39	CALL_45
0x4004d54	      0xba00000000	                              mov edx, 0	      7275	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39	CALL_45
0x4004d59	      0xbe6c1c0000	                         mov esi, 0x1c6c	      7275	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39	CALL_45
0x4004d5e	      0xbf00000000	                              mov edi, 0	      7275	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39	CALL_45
0x4004d63	      0xe800000000	                          call 0x4004d68	      7275	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39	CALL_45
0x4004d68	          0x83c101	                              add ecx, 1	      7277	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39
0x4004d6b	            0xeb20	                           jmp 0x4004d8d	      7277	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_38	IF_81	ELSE_39
0x4004d6d	            0x39f0	                            cmp eax, esi	      7281	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	CALL_46
0x4004d6f	     0xf820a020000	                            jb 0x4004f7f	      7281	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	CALL_46
0x4004d75	      0xba00000000	                              mov edx, 0	      7281	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	CALL_46
0x4004d7a	      0xbe711c0000	                         mov esi, 0x1c71	      7281	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	CALL_46
0x4004d7f	      0xbf00000000	                              mov edi, 0	      7281	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	CALL_46
0x4004d84	      0xe800000000	                          call 0x4004d89	      7281	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	CALL_46
0x4004d89	            0x89c1	                            mov ecx, eax	      7241	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79	CALL_41
0x4004d8b	            0x89d0	                            mov eax, edx	      7240	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	IF_79
0x4004d8d	          0x83f9ff	             cmp ecx, 0xffffffffffffffff	      7283	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83
0x4004d90	            0x746f	                            je 0x4004e01	      7283	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83
0x4004d92	            0x89ca	                            mov edx, ecx	      7287	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x4004d94	     0xfb614d50000	                 movzx edx, byte [rdx*8]	      7287	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x4004d9c	          0xf6c201	                              test dl, 1	      7287	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x4004d9f	            0x7416	                            je 0x4004db7	      7287	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x4004da1	            0x89ce	                            mov esi, ecx	      7288	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x4004da3	    0x803cf5000000	                     cmp byte [rsi*8], 0	      7288	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x4004dab	            0x7843	                            js 0x4004df0	      7288	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x4004dad	    0xf604f5000000	                    test byte [rsi*8], 2	      7288	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x4004db5	            0x7539	                           jne 0x4004df0	      7288	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x4004db7	          0xf6c204	                              test dl, 4	      7289	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x4004dba	            0x7534	                           jne 0x4004df0	      7289	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84
0x4004dbc	            0x89ca	                            mov edx, ecx	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x4004dbe	    0x8b3d00000000	            mov edi, dword [0x04004dc4] 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x4004dc4	    0x393cd5000000	                  cmp dword [rdx*8], edi	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x4004dcb	            0x750f	                           jne 0x4004ddc	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x4004dcd	    0x8b3d00000000	            mov edi, dword [0x04004dd3] 	      7290	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84	CALL_47
0x4004dd3	    0x393cd5000000	                  cmp dword [rdx*8], edi	      7290	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84	CALL_47
0x4004dda	            0x7414	                            je 0x4004df0	      7290	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	IF_84	CALL_47
0x4004ddc	      0xba00000000	                              mov edx, 0	      7291	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	CALL_48
0x4004de1	      0xbe7b1c0000	                         mov esi, 0x1c7b	      7291	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	CALL_48
0x4004de6	      0xbf00000000	                              mov edi, 0	      7291	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	CALL_48
0x4004deb	      0xe800000000	                          call 0x4004df0	      7291	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83	CALL_48
0x4004df0	            0x89ca	                            mov edx, ecx	      7293	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83
0x4004df2	    0x488b14d50000	                  mov rdx, qword [rdx*8]	      7293	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83
0x4004dfa	    0x488915000000	            mov qword [0x04004e01], rdx 	      7293	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_83
0x4004e01	            0x39c1	                            cmp ecx, eax	      7297	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85
0x4004e03	            0x747c	                            je 0x4004e81	      7297	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85
0x4004e05	    0x8b1500000000	            mov edx, dword [0x04004e0b] 	      7301	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86
0x4004e0b	    0x81faffff0000	                         cmp edx, 0xffff	      7301	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86
0x4004e11	            0x7437	                            je 0x4004e4a	      7301	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86
0x4004e13	            0x89c0	                            mov eax, eax	      7303	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86
0x4004e15	    0x488b04c50000	                  mov rax, qword [rax*8]	      7303	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86
0x4004e1d	         0xfb64811	           movzx ecx, byte [rax + 0x11] 	      7303	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86
0x4004e21	    0x890d00000000	            mov dword [0x04004e27], ecx 	      7303	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86
0x4004e27	        0xf6401001	               test byte [rax + 0x10], 1	      7304	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_87
0x4004e2b	            0x7407	                            je 0x4004e34	      7304	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_87
0x4004e2d	    0x830d00000000	                or dword [0x04004e34], 1	      7305	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_87
0x4004e34	        0xf6401004	               test byte [rax + 0x10], 4	      7306	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_88
0x4004e38	     0xf844b010000	                            je 0x4004f89	      7306	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_88
0x4004e3e	    0x830d00000000	                or dword [0x04004e45], 1	      7307	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_88
0x4004e45	      0xe93f010000	                           jmp 0x4004f89	      7307	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	IF_86	IF_88
0x4004e4a	            0x89c0	                            mov eax, eax	      7311	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41
0x4004e4c	    0x488b04c50000	                  mov rax, qword [rax*8]	      7311	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41
0x4004e54	         0xfb65011	           movzx edx, byte [rax + 0x11] 	      7311	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41
0x4004e58	    0x891500000000	            mov dword [0x04004e5e], edx 	      7311	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41
0x4004e5e	        0xf6401001	               test byte [rax + 0x10], 1	      7312	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_89
0x4004e62	            0x7407	                            je 0x4004e6b	      7312	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_89
0x4004e64	    0x830d00000000	                or dword [0x04004e6b], 4	      7313	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_89
0x4004e6b	        0xf6401004	               test byte [rax + 0x10], 4	      7314	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_90
0x4004e6f	     0xf8426010000	                            je 0x4004f9b	      7314	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_90
0x4004e75	    0x830d00000000	                or dword [0x04004e7c], 4	      7315	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_90
0x4004e7c	      0xe91a010000	                           jmp 0x4004f9b	      7315	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_85	ELSE_41	IF_90
0x4004e81	    0x833d00000000	               cmp dword [0x04004e88], 0	      7322	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_91
0x4004e88	            0x750a	                           jne 0x4004e94	      7322	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_91
0x4004e8a	    0xc70500000000	               mov dword [0x04004e94], 3	      7323	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_91
0x4004e94	    0x8b1500000000	            mov edx, dword [0x04004e9a] 	      7327	tc-i386.c	FUNCTION_87	ELSE_12	IF_92
0x4004e9a	    0x81faffff0000	                         cmp edx, 0xffff	      7327	tc-i386.c	FUNCTION_87	ELSE_12	IF_92
0x4004ea0	            0x743b	                            je 0x4004edd	      7327	tc-i386.c	FUNCTION_87	ELSE_12	IF_92
0x4004ea2	    0x891500000000	            mov dword [0x04004ea8], edx 	      7328	tc-i386.c	FUNCTION_87	ELSE_12	IF_92
0x4004ea8	            0xeb33	                           jmp 0x4004edd	      7328	tc-i386.c	FUNCTION_87	ELSE_12	IF_92
0x4004eaa	    0x8b0500000000	            mov eax, dword [0x04004eb0] 	      6618	tc-i386.c	FUNCTION_86	ELSE_12	IF_20
0x4004eb0	          0x83e0fc	                     and eax, 0xfffffffc	      6618	tc-i386.c	FUNCTION_86	ELSE_12	IF_20
0x4004eb3	      0xbb00000000	                              mov ebx, 0	      6620	tc-i386.c	FUNCTION_86	ELSE_12	IF_20
0x4004eb8	      0x3da0000000	                           cmp eax, 0xa0	      6618	tc-i386.c	FUNCTION_86	ELSE_12	IF_20
0x4004ebd	            0x741e	                            je 0x4004edd	      6618	tc-i386.c	FUNCTION_86	ELSE_12	IF_20
0x4004ebf	    0xf60500000000	               test byte [0x04004ec6], 1	      6626	tc-i386.c	FUNCTION_86	ELSE_13	IF_21
0x4004ec6	      0xb800000000	                              mov eax, 0	      6626	tc-i386.c	FUNCTION_86	ELSE_13	IF_21
0x4004ecb	        0x480f44d8	                          cmove rbx, rax	      6626	tc-i386.c	FUNCTION_86	ELSE_13	IF_21
0x4004ecf	            0xeb0c	                           jmp 0x4004edd	      6626	tc-i386.c	FUNCTION_86	ELSE_13	IF_21
0x4004ed1	      0xbb00000000	                              mov ebx, 0	      6650	tc-i386.c	FUNCTION_87
0x4004ed6	            0xeb05	                           jmp 0x4004edd	      6650	tc-i386.c	FUNCTION_87
0x4004ed8	      0xbb00000000	                              mov ebx, 0	      6650	tc-i386.c	FUNCTION_87
0x4004edd	    0x813d00000000	           cmp dword [0x04004ee7], 0x8d 	      6629	tc-i386.c	FUNCTION_86	IF_22
0x4004ee7	            0x753e	                           jne 0x4004f27	      6629	tc-i386.c	FUNCTION_86	IF_22
0x4004ee9	    0x48833d000000	               cmp qword [0x04004ef1], 0	      6630	tc-i386.c	FUNCTION_86	IF_22
0x4004ef1	            0x7457	                            je 0x4004f4a	      6630	tc-i386.c	FUNCTION_86	IF_22
0x4004ef3	    0x833d00000000	               cmp dword [0x04004efa], 0	      6631	tc-i386.c	FUNCTION_86	IF_22
0x4004efa	            0x752b	                           jne 0x4004f27	      6631	tc-i386.c	FUNCTION_86	IF_22
0x4004efc	    0x488b2d000000	            mov rbp, qword [0x04004f03] 	      6632	tc-i386.c	FUNCTION_86	CALL_21
0x4004f03	      0xba05000000	                              mov edx, 5	      6632	tc-i386.c	FUNCTION_86	CALL_21
0x4004f08	      0xbe00000000	                              mov esi, 0	      6632	tc-i386.c	FUNCTION_86	CALL_21
0x4004f0d	      0xbf00000000	                              mov edi, 0	      6632	tc-i386.c	FUNCTION_86	CALL_21
0x4004f12	      0xe800000000	                          call 0x4004f17	      6632	tc-i386.c	FUNCTION_86	CALL_21
0x4004f17	          0x4889ee	                            mov rsi, rbp	      6632	tc-i386.c	FUNCTION_86	CALL_21
0x4004f1a	          0x4889c7	                            mov rdi, rax	      6632	tc-i386.c	FUNCTION_86	CALL_21
0x4004f1d	      0xb800000000	                              mov eax, 0	      6632	tc-i386.c	FUNCTION_86	CALL_21
0x4004f22	      0xe800000000	                          call 0x4004f27	      6632	tc-i386.c	FUNCTION_86	CALL_21
0x4004f27	    0x488b05000000	            mov rax, qword [0x04004f2e] 	      6639	tc-i386.c	FUNCTION_86	IF_23
0x4004f2e	          0x4839c3	                            cmp rbx, rax	      6639	tc-i386.c	FUNCTION_86	IF_23
0x4004f31	            0x741e	                            je 0x4004f51	      6639	tc-i386.c	FUNCTION_86	IF_23
0x4004f33	          0x4885c0	                           test rax, rax	      6639	tc-i386.c	FUNCTION_86	IF_23
0x4004f36	            0x7419	                            je 0x4004f51	      6639	tc-i386.c	FUNCTION_86	IF_23
0x4004f38	          0x8b7808	                mov edi, dword [rax + 8]	      6641	tc-i386.c	FUNCTION_86	IF_23	IF_24	CALL_22
0x4004f3b	      0xe8ded5ffff	                     call sym.add_prefix	      6641	tc-i386.c	FUNCTION_86	IF_23	IF_24	CALL_22
0x4004f40	            0x85c0	                           test eax, eax	      6569	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13
0x4004f42	           0xf95c0	                                setne al	      6569	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13
0x4004f45	           0xfb6c0	                           movzx eax, al	      6569	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13
0x4004f48	            0xeb0c	                           jmp 0x4004f56	      6569	tc-i386.c	FUNCTION_86	IF_11	IF_12	IF_13
0x4004f4a	      0xb801000000	                              mov eax, 1	      6644	tc-i386.c	FUNCTION_86
0x4004f4f	            0xeb05	                           jmp 0x4004f56	      6644	tc-i386.c	FUNCTION_86
0x4004f51	      0xb801000000	                              mov eax, 1	      6644	tc-i386.c	FUNCTION_86
0x4004f56	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      6645	tc-i386.c	FUNCTION_86
0x4004f5b	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      6645	tc-i386.c	FUNCTION_86
0x4004f64	            0x744c	                            je 0x4004fb2	      6645	tc-i386.c	FUNCTION_86
0x4004f66	            0xeb45	                           jmp 0x4004fad	      6645	tc-i386.c	FUNCTION_86
0x4004f68	      0xba00000000	                              mov edx, 0	      6917	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	CALL_26
0x4004f6d	      0xbe051b0000	                         mov esi, 0x1b05	      6917	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	CALL_26
0x4004f72	      0xbf00000000	                              mov edi, 0	      6917	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	CALL_26
0x4004f77	      0xe800000000	                          call 0x4004f7c	      6917	tc-i386.c	FUNCTION_87	ELSE_12	IF_28	CALL_26
0x4004f7c	          0x4489c0	                            mov eax, r8d	      7231	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_77
0x4004f7f	      0xb9ffffffff	                     mov ecx, 0xffffffff	      7251	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x4004f84	      0xe978feffff	                           jmp 0x4004e01	      7251	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	ELSE_35	IF_78	ELSE_36	IF_80
0x4004f89	    0x833d00000000	               cmp dword [0x04004f90], 0	      7322	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_91
0x4004f90	     0xf850cffffff	                           jne 0x4004ea2	      7322	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_91
0x4004f96	      0xe9effeffff	                           jmp 0x4004e8a	      7322	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_91
0x4004f9b	    0x833d00000000	               cmp dword [0x04004fa2], 0	      7322	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_91
0x4004fa2	     0xf8535ffffff	                           jne 0x4004edd	      7322	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_91
0x4004fa8	      0xe9ddfeffff	                           jmp 0x4004e8a	      7322	tc-i386.c	FUNCTION_87	ELSE_12	ELSE_34	IF_75	IF_91
0x4004fad	      0xe800000000	                          call 0x4004fb2	      6645	tc-i386.c	FUNCTION_86
0x4004fb2	        0x4883c418	                           add rsp, 0x18	      6645	tc-i386.c	FUNCTION_86
0x4004fb6	              0x5b	                                 pop rbx	      6645	tc-i386.c	FUNCTION_86
0x4004fb7	              0x5d	                                 pop rbp	      6645	tc-i386.c	FUNCTION_86
0x4004fb8	            0x415c	                                 pop r12	      6645	tc-i386.c	FUNCTION_86
0x4004fba	            0x415d	                                 pop r13	      6645	tc-i386.c	FUNCTION_86
0x4004fbc	              0xc3	                                     ret	      6645	tc-i386.c	FUNCTION_86
i386_intel_simplify	functions,0:ELSE,2:FOR,0:CALL,32:SWITCH,2:WHILE,0:IF,31:DO,0	648
0x400674c	            0x4157	                                push r15	       334	tc-i386-intel.c	FUNCTION_179
0x400674e	            0x4156	                                push r14	       334	tc-i386-intel.c	FUNCTION_179
0x4006750	            0x4155	                                push r13	       334	tc-i386-intel.c	FUNCTION_179
0x4006752	            0x4154	                                push r12	       334	tc-i386-intel.c	FUNCTION_179
0x4006754	              0x55	                                push rbp	       334	tc-i386-intel.c	FUNCTION_179
0x4006755	              0x53	                                push rbx	       334	tc-i386-intel.c	FUNCTION_179
0x4006756	        0x4883ec38	                           sub rsp, 0x38	       334	tc-i386-intel.c	FUNCTION_179
0x400675a	          0x4889fb	                            mov rbx, rdi	       334	tc-i386-intel.c	FUNCTION_179
0x400675d	    0x64488b042528	                mov rax, qword fs:[0x28]	       334	tc-i386-intel.c	FUNCTION_179
0x4006766	      0x4889442428	             mov qword [rsp + 0x28], rax	       334	tc-i386-intel.c	FUNCTION_179
0x400676b	            0x31c0	                            xor eax, eax	       334	tc-i386-intel.c	FUNCTION_179
0x400676d	    0x8b0500000000	            mov eax, dword [0x04006773] 	       335	tc-i386-intel.c	FUNCTION_179
0x4006773	      0xbd00000000	                              mov ebp, 0	       336	tc-i386-intel.c	FUNCTION_179
0x4006778	            0x85c0	                           test eax, eax	       336	tc-i386-intel.c	FUNCTION_179
0x400677a	            0x780b	                            js 0x4006787	       336	tc-i386-intel.c	FUNCTION_179
0x400677c	          0x4863d0	                         movsxd rdx, eax	       336	tc-i386-intel.c	FUNCTION_179
0x400677f	    0x488b2cd50000	                  mov rbp, qword [rdx*8]	       336	tc-i386-intel.c	FUNCTION_179
0x4006787	    0x833d00000000	               cmp dword [0x0400678e], 0	       341	tc-i386-intel.c	FUNCTION_179	IF_1
0x400678e	     0xf843e090000	                            je 0x40070d2	       341	tc-i386-intel.c	FUNCTION_179	IF_1
0x4006794	    0x4c8b25000000	            mov r12, qword [0x0400679b] 	       337	tc-i386-intel.c	FUNCTION_179
0x400679b	    0x4c8b2d000000	            mov r13, qword [0x040067a2] 	       338	tc-i386-intel.c	FUNCTION_179
0x40067a2	         0xfb65318	           movzx edx, byte [rbx + 0x18] 	       344	tc-i386-intel.c	FUNCTION_179	SWITCH_1
0x40067a6	          0x80fa3d	                            cmp dl, 0x3d	       344	tc-i386-intel.c	FUNCTION_179	SWITCH_1
0x40067a9	     0xf8767070000	                            ja 0x4006f16	       344	tc-i386-intel.c	FUNCTION_179	SWITCH_1
0x40067af	           0xfb6ca	                           movzx ecx, dl	       344	tc-i386-intel.c	FUNCTION_179	SWITCH_1
0x40067b2	    0xff24cd000000	                       jmp qword [rcx*8]	       344	tc-i386-intel.c	FUNCTION_179	SWITCH_1
0x40067b9	          0x4c8b23	                    mov r12, qword [rbx]	       347	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_2
0x40067bc	          0x4d85e4	                           test r12, r12	       347	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_2
0x40067bf	            0x7474	                            je 0x4006835	       347	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_2
0x40067c1	          0x4c89e7	                            mov rdi, r12	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x40067c4	      0xe800000000	                          call 0x40067c9	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x40067c9	          0x4889c7	                            mov rdi, rax	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x40067cc	      0xe87bffffff	            call sym.i386_intel_simplify	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x40067d1	            0x89c2	                            mov edx, eax	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x40067d3	          0x83f802	                              cmp eax, 2	       325	tc-i386-intel.c	FUNCTION_178	IF_1
0x40067d6	            0x750f	                           jne 0x40067e7	       325	tc-i386-intel.c	FUNCTION_178	IF_1
0x40067d8	      0xbe00000000	                              mov esi, 0	       327	tc-i386-intel.c	FUNCTION_178	IF_1	CALL_3
0x40067dd	          0x4c89e7	                            mov rdi, r12	       327	tc-i386-intel.c	FUNCTION_178	IF_1	CALL_3
0x40067e0	      0xe800000000	                          call 0x40067e5	       327	tc-i386-intel.c	FUNCTION_178	IF_1	CALL_3
0x40067e5	            0xeb0d	                           jmp 0x40067f4	       327	tc-i386-intel.c	FUNCTION_178	IF_1	CALL_3
0x40067e7	      0xb800000000	                              mov eax, 0	       352	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_2	IF_3
0x40067ec	            0x85d2	                           test edx, edx	       349	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_2	IF_3	CALL_1
0x40067ee	     0xf8406090000	                            je 0x40070fa	       349	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_2	IF_3	CALL_1
0x40067f4	    0x8b0500000000	            mov eax, dword [0x040067fa] 	       224	tc-i386-intel.c	FUNCTION_175	IF_1
0x40067fa	            0x85c0	                           test eax, eax	       224	tc-i386-intel.c	FUNCTION_175	IF_1
0x40067fc	            0x7837	                            js 0x4006835	       224	tc-i386-intel.c	FUNCTION_175	IF_1
0x40067fe	            0x4898	                                    cdqe	       225	tc-i386-intel.c	FUNCTION_175	IF_1
0x4006800	    0x483b2cc50000	                  cmp rbp, qword [rax*8]	       225	tc-i386-intel.c	FUNCTION_175	IF_1
0x4006808	            0x742b	                            je 0x4006835	       225	tc-i386-intel.c	FUNCTION_175	IF_1
0x400680a	      0xba05000000	                              mov edx, 5	       229	tc-i386-intel.c	FUNCTION_175	IF_1	CALL_2
0x400680f	      0xbe00000000	                              mov esi, 0	       229	tc-i386-intel.c	FUNCTION_175	IF_1	CALL_2
0x4006814	      0xbf00000000	                              mov edi, 0	       229	tc-i386-intel.c	FUNCTION_175	IF_1	CALL_2
0x4006819	      0xe800000000	                          call 0x400681e	       229	tc-i386-intel.c	FUNCTION_175	IF_1	CALL_2
0x400681e	          0x4889c7	                            mov rdi, rax	       229	tc-i386-intel.c	FUNCTION_175	IF_1	CALL_2
0x4006821	      0xb800000000	                              mov eax, 0	       229	tc-i386-intel.c	FUNCTION_175	IF_1	CALL_2
0x4006826	      0xe800000000	                          call 0x400682b	       229	tc-i386-intel.c	FUNCTION_175	IF_1	CALL_2
0x400682b	      0xb800000000	                              mov eax, 0	       352	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_2	IF_3
0x4006830	      0xe9c5080000	                           jmp 0x40070fa	       352	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_2	IF_3
0x4006835	    0x833d00000000	               cmp dword [0x0400683c], 0	       354	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_4
0x400683c	            0x7507	                           jne 0x4006845	       354	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_4
0x400683e	    0x830500000000	               add dword [0x04006845], 1	       355	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_4
0x4006845	        0x488b6b08	                mov rbp, qword [rbx + 8]	       356	tc-i386-intel.c	FUNCTION_179	SWITCH_1	CALL_3
0x4006849	          0x4889ef	                            mov rdi, rbp	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x400684c	      0xe800000000	                          call 0x4006851	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006851	          0x4889c7	                            mov rdi, rax	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006854	      0xe8f3feffff	            call sym.i386_intel_simplify	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006859	            0x89c2	                            mov edx, eax	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x400685b	          0x83f802	                              cmp eax, 2	       325	tc-i386-intel.c	FUNCTION_178	IF_1
0x400685e	            0x751d	                           jne 0x400687d	       325	tc-i386-intel.c	FUNCTION_178	IF_1
0x4006860	      0xbe00000000	                              mov esi, 0	       327	tc-i386-intel.c	FUNCTION_178	IF_1	CALL_3
0x4006865	          0x4889ef	                            mov rdi, rbp	       327	tc-i386-intel.c	FUNCTION_178	IF_1	CALL_3
0x4006868	      0xe800000000	                          call 0x400686d	       327	tc-i386-intel.c	FUNCTION_178	IF_1	CALL_3
0x400686d	      0xba01000000	                              mov edx, 1	       328	tc-i386-intel.c	FUNCTION_178	IF_1
0x4006872	    0x833d00000000	               cmp dword [0x04006879], 0	       357	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_5
0x4006879	            0x740b	                            je 0x4006886	       357	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_5
0x400687b	            0xeb1d	                           jmp 0x400689a	       357	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_5
0x400687d	    0x833d00000000	               cmp dword [0x04006884], 0	       357	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_5
0x4006884	            0x7507	                           jne 0x400688d	       357	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_5
0x4006886	    0x832d00000000	               sub dword [0x0400688d], 1	       358	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_5
0x400688d	      0xb800000000	                              mov eax, 0	       360	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_6
0x4006892	            0x85d2	                           test edx, edx	       359	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_6
0x4006894	     0xf8460080000	                            je 0x40070fa	       359	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_6
0x400689a	        0x48833b00	                      cmp qword [rbx], 0	       361	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_7
0x400689e	            0x740e	                            je 0x40068ae	       361	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_7
0x40068a0	        0xc6431813	            mov byte [rbx + 0x18], 0x13 	       362	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_7
0x40068a4	      0xb801000000	                              mov eax, 1	       538	tc-i386-intel.c	FUNCTION_179
0x40068a9	      0xe94c080000	                           jmp 0x40070fa	       538	tc-i386-intel.c	FUNCTION_179
0x40068ae	        0x4c8b6308	                mov r12, qword [rbx + 8]	       364	tc-i386-intel.c	FUNCTION_179	SWITCH_1	CALL_4
0x40068b2	          0x4c89e7	                            mov rdi, r12	       237	tc-i386-intel.c	FUNCTION_176	CALL_1
0x40068b5	      0xe800000000	                          call 0x40068ba	       237	tc-i386-intel.c	FUNCTION_176	CALL_1
0x40068ba	          0x4889c5	                            mov rbp, rax	       237	tc-i386-intel.c	FUNCTION_176	CALL_1
0x40068bd	          0x4c89e7	                            mov rdi, r12	       238	tc-i386-intel.c	FUNCTION_176	IF_1	CALL_2
0x40068c0	      0xe800000000	                          call 0x40068c5	       238	tc-i386-intel.c	FUNCTION_176	IF_1	CALL_2
0x40068c5	    0x483d00000000	                              cmp rax, 0	       238	tc-i386-intel.c	FUNCTION_176	IF_1	CALL_2
0x40068cb	            0x751a	                           jne 0x40068e7	       238	tc-i386-intel.c	FUNCTION_176	IF_1	CALL_2
0x40068cd	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       240	tc-i386-intel.c	FUNCTION_176	IF_1
0x40068d1	      0xb908000000	                              mov ecx, 8	       242	tc-i386-intel.c	FUNCTION_176	IF_1
0x40068d6	          0x4889df	                            mov rdi, rbx	       242	tc-i386-intel.c	FUNCTION_176	IF_1
0x40068d9	          0x4889ee	                            mov rsi, rbp	       242	tc-i386-intel.c	FUNCTION_176	IF_1
0x40068dc	            0xf3a5	  rep movsd dword [rdi], dword ptr [rsi]	       242	tc-i386-intel.c	FUNCTION_176	IF_1
0x40068de	        0x48014310	            add qword [rbx + 0x10], rax 	       243	tc-i386-intel.c	FUNCTION_176	IF_1
0x40068e2	      0xe993070000	                           jmp 0x400707a	       243	tc-i386-intel.c	FUNCTION_176	IF_1
0x40068e7	        0x807d1803	                cmp byte [rbp + 0x18], 3	       247	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2
0x40068eb	            0x751e	                           jne 0x400690b	       247	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2
0x40068ed	        0x488b7d00	                    mov rdi, qword [rbp]	       248	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2	CALL_4
0x40068f1	      0xe800000000	                          call 0x40068f6	       248	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2	CALL_4
0x40068f6	      0xbe00000000	                              mov esi, 0	       248	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2	CALL_4
0x40068fb	          0x4889c7	                            mov rdi, rax	       248	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2	CALL_4
0x40068fe	      0xe800000000	                          call 0x4006903	       248	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2	CALL_4
0x4006903	            0x85c0	                           test eax, eax	       248	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2	CALL_4
0x4006905	            0x7504	                           jne 0x400690b	       248	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2	CALL_4
0x4006907	        0x4c8b6500	                    mov r12, qword [rbp]	       250	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2
0x400690b	          0x4c8923	                    mov qword [rbx], r12	       251	tc-i386-intel.c	FUNCTION_176	ELSE_1
0x400690e	    0x48c743080000	                  mov qword [rbx + 8], 0	       252	tc-i386-intel.c	FUNCTION_176	ELSE_1
0x4006916	        0xc6431803	                mov byte [rbx + 0x18], 3	       253	tc-i386-intel.c	FUNCTION_176	ELSE_1
0x400691a	      0xe94d080000	                           jmp 0x400716c	       253	tc-i386-intel.c	FUNCTION_176	ELSE_1
0x400691f	    0xc70500000000	               mov dword [0x04006929], 1	       368	tc-i386-intel.c	FUNCTION_179	SWITCH_1
0x4006929	    0x830500000000	               add dword [0x04006930], 1	       369	tc-i386-intel.c	FUNCTION_179	SWITCH_1
0x4006930	          0x4c8b3b	                    mov r15, qword [rbx]	       370	tc-i386-intel.c	FUNCTION_179	SWITCH_1	CALL_5
0x4006933	          0x4c89ff	                            mov rdi, r15	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006936	      0xe800000000	                          call 0x400693b	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x400693b	          0x4889c7	                            mov rdi, rax	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x400693e	      0xe809feffff	            call sym.i386_intel_simplify	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006943	          0x4189c6	                           mov r14d, eax	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006946	          0x83f802	                              cmp eax, 2	       325	tc-i386-intel.c	FUNCTION_178	IF_1
0x4006949	            0x751c	                           jne 0x4006967	       325	tc-i386-intel.c	FUNCTION_178	IF_1
0x400694b	      0xbe00000000	                              mov esi, 0	       327	tc-i386-intel.c	FUNCTION_178	IF_1	CALL_3
0x4006950	          0x4c89ff	                            mov rdi, r15	       327	tc-i386-intel.c	FUNCTION_178	IF_1	CALL_3
0x4006953	      0xe800000000	                          call 0x4006958	       327	tc-i386-intel.c	FUNCTION_178	IF_1	CALL_3
0x4006958	    0x832d00000000	               sub dword [0x0400695f], 1	       371	tc-i386-intel.c	FUNCTION_179	SWITCH_1
0x400695f	    0x41be01000000	                             mov r14d, 1	       328	tc-i386-intel.c	FUNCTION_178	IF_1
0x4006965	            0xeb15	                           jmp 0x400697c	       328	tc-i386-intel.c	FUNCTION_178	IF_1
0x4006967	    0x832d00000000	               sub dword [0x0400696e], 1	       371	tc-i386-intel.c	FUNCTION_179	SWITCH_1
0x400696e	      0xb800000000	                              mov eax, 0	       373	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_8
0x4006973	          0x4585f6	                         test r14d, r14d	       372	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_8	CALL_6
0x4006976	     0xf847e070000	                            je 0x40070fa	       372	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_8	CALL_6
0x400697c	    0x8b0500000000	            mov eax, dword [0x04006982] 	       224	tc-i386-intel.c	FUNCTION_175	IF_1
0x4006982	            0x85c0	                           test eax, eax	       224	tc-i386-intel.c	FUNCTION_175	IF_1
0x4006984	            0x780c	                            js 0x4006992	       224	tc-i386-intel.c	FUNCTION_175	IF_1
0x4006986	            0x4898	                                    cdqe	       225	tc-i386-intel.c	FUNCTION_175	IF_1
0x4006988	    0x483b2cc50000	                  cmp rbp, qword [rax*8]	       225	tc-i386-intel.c	FUNCTION_175	IF_1
0x4006990	            0x7516	                           jne 0x40069a8	       225	tc-i386-intel.c	FUNCTION_175	IF_1
0x4006992	    0x4c3b25000000	            cmp r12, qword [0x04006999] 	       226	tc-i386-intel.c	FUNCTION_175	IF_1
0x4006999	            0x750d	                           jne 0x40069a8	       226	tc-i386-intel.c	FUNCTION_175	IF_1
0x400699b	    0x4c3b2d000000	            cmp r13, qword [0x040069a2] 	       227	tc-i386-intel.c	FUNCTION_175	IF_1
0x40069a2	     0xf846b070000	                            je 0x4007113	       227	tc-i386-intel.c	FUNCTION_175	IF_1
0x40069a8	      0xba05000000	                              mov edx, 5	       229	tc-i386-intel.c	FUNCTION_175	IF_1	CALL_2
0x40069ad	      0xbe00000000	                              mov esi, 0	       229	tc-i386-intel.c	FUNCTION_175	IF_1	CALL_2
0x40069b2	      0xbf00000000	                              mov edi, 0	       229	tc-i386-intel.c	FUNCTION_175	IF_1	CALL_2
0x40069b7	      0xe800000000	                          call 0x40069bc	       229	tc-i386-intel.c	FUNCTION_175	IF_1	CALL_2
0x40069bc	          0x4889c7	                            mov rdi, rax	       229	tc-i386-intel.c	FUNCTION_175	IF_1	CALL_2
0x40069bf	      0xb800000000	                              mov eax, 0	       229	tc-i386-intel.c	FUNCTION_175	IF_1	CALL_2
0x40069c4	      0xe800000000	                          call 0x40069c9	       229	tc-i386-intel.c	FUNCTION_175	IF_1	CALL_2
0x40069c9	      0xb800000000	                              mov eax, 0	       373	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_8
0x40069ce	      0xe927070000	                           jmp 0x40070fa	       373	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_8
0x40069d3	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       240	tc-i386-intel.c	FUNCTION_176	IF_1
0x40069d7	      0xb908000000	                              mov ecx, 8	       242	tc-i386-intel.c	FUNCTION_176	IF_1
0x40069dc	          0x4889df	                            mov rdi, rbx	       242	tc-i386-intel.c	FUNCTION_176	IF_1
0x40069df	          0x4c89e6	                            mov rsi, r12	       242	tc-i386-intel.c	FUNCTION_176	IF_1
0x40069e2	            0xf3a5	  rep movsd dword [rdi], dword ptr [rsi]	       242	tc-i386-intel.c	FUNCTION_176	IF_1
0x40069e4	        0x48014310	            add qword [rbx + 0x10], rax 	       243	tc-i386-intel.c	FUNCTION_176	IF_1
0x40069e8	          0x4489f0	                           mov eax, r14d	       243	tc-i386-intel.c	FUNCTION_176	IF_1
0x40069eb	      0xe90a070000	                           jmp 0x40070fa	       243	tc-i386-intel.c	FUNCTION_176	IF_1
0x40069f0	    0x41807c241803	                cmp byte [r12 + 0x18], 3	       247	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2
0x40069f6	            0x751e	                           jne 0x4006a16	       247	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2
0x40069f8	        0x498b3c24	                    mov rdi, qword [r12]	       248	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2	CALL_4
0x40069fc	      0xe800000000	                          call 0x4006a01	       248	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2	CALL_4
0x4006a01	      0xbe00000000	                              mov esi, 0	       248	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2	CALL_4
0x4006a06	          0x4889c7	                            mov rdi, rax	       248	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2	CALL_4
0x4006a09	      0xe800000000	                          call 0x4006a0e	       248	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2	CALL_4
0x4006a0e	            0x85c0	                           test eax, eax	       248	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2	CALL_4
0x4006a10	            0x7504	                           jne 0x4006a16	       248	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2	CALL_4
0x4006a12	        0x498b2c24	                    mov rbp, qword [r12]	       250	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2
0x4006a16	          0x48892b	                    mov qword [rbx], rbp	       251	tc-i386-intel.c	FUNCTION_176	ELSE_1
0x4006a19	    0x48c743080000	                  mov qword [rbx + 8], 0	       252	tc-i386-intel.c	FUNCTION_176	ELSE_1
0x4006a21	        0xc6431803	                mov byte [rbx + 0x18], 3	       253	tc-i386-intel.c	FUNCTION_176	ELSE_1
0x4006a25	          0x4489f0	                           mov eax, r14d	       253	tc-i386-intel.c	FUNCTION_176	ELSE_1
0x4006a28	      0xe9cd060000	                           jmp 0x40070fa	       253	tc-i386-intel.c	FUNCTION_176	ELSE_1
0x4006a2d	    0x833d00000000	               cmp dword [0x04006a34], 1	       389	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_9
0x4006a34	            0x7509	                           jne 0x4006a3f	       389	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_9
0x4006a36	           0xfb6d2	                           movzx edx, dl	       390	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_9
0x4006a39	    0x891500000000	            mov dword [0x04006a3f], edx 	       390	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_9
0x4006a3f	          0x488b3b	                    mov rdi, qword [rbx]	       393	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_10	CALL_8
0x4006a42	      0xe800000000	                          call 0x4006a47	       393	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_10	CALL_8
0x4006a47	        0x80781805	                cmp byte [rax + 0x18], 5	       393	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_10	CALL_8
0x4006a4b	            0x752b	                           jne 0x4006a78	       393	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_10	CALL_8
0x4006a4d	      0xba05000000	                              mov edx, 5	       396	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_10	CALL_10
0x4006a52	      0xbe00000000	                              mov esi, 0	       396	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_10	CALL_10
0x4006a57	      0xbf00000000	                              mov edi, 0	       396	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_10	CALL_10
0x4006a5c	      0xe800000000	                          call 0x4006a61	       396	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_10	CALL_10
0x4006a61	          0x4889c7	                            mov rdi, rax	       396	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_10	CALL_10
0x4006a64	      0xb800000000	                              mov eax, 0	       396	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_10	CALL_10
0x4006a69	      0xe800000000	                          call 0x4006a6e	       396	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_10	CALL_10
0x4006a6e	      0xb800000000	                              mov eax, 0	       397	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_10
0x4006a73	      0xe982060000	                           jmp 0x40070fa	       397	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_10
0x4006a78	          0x488b2b	                    mov rbp, qword [rbx]	       399	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_11	CALL_11
0x4006a7b	          0x4889ef	                            mov rdi, rbp	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006a7e	      0xe800000000	                          call 0x4006a83	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006a83	          0x4889c7	                            mov rdi, rax	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006a86	      0xe8c1fcffff	            call sym.i386_intel_simplify	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006a8b	            0x89c2	                            mov edx, eax	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006a8d	          0x83f802	                              cmp eax, 2	       325	tc-i386-intel.c	FUNCTION_178	IF_1
0x4006a90	            0x750f	                           jne 0x4006aa1	       325	tc-i386-intel.c	FUNCTION_178	IF_1
0x4006a92	      0xbe00000000	                              mov esi, 0	       327	tc-i386-intel.c	FUNCTION_178	IF_1	CALL_3
0x4006a97	          0x4889ef	                            mov rdi, rbp	       327	tc-i386-intel.c	FUNCTION_178	IF_1	CALL_3
0x4006a9a	      0xe800000000	                          call 0x4006a9f	       327	tc-i386-intel.c	FUNCTION_178	IF_1	CALL_3
0x4006a9f	            0xeb0d	                           jmp 0x4006aae	       327	tc-i386-intel.c	FUNCTION_178	IF_1	CALL_3
0x4006aa1	      0xb800000000	                              mov eax, 0	       400	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_11
0x4006aa6	            0x85d2	                           test edx, edx	       399	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_11	CALL_11
0x4006aa8	     0xf844c060000	                            je 0x40070fa	       399	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_11	CALL_11
0x4006aae	          0x488b2b	                    mov rbp, qword [rbx]	       401	tc-i386-intel.c	FUNCTION_179	SWITCH_1	CALL_12
0x4006ab1	          0x4889ef	                            mov rdi, rbp	       237	tc-i386-intel.c	FUNCTION_176	CALL_1
0x4006ab4	      0xe800000000	                          call 0x4006ab9	       237	tc-i386-intel.c	FUNCTION_176	CALL_1
0x4006ab9	          0x4989c4	                            mov r12, rax	       237	tc-i386-intel.c	FUNCTION_176	CALL_1
0x4006abc	          0x4889ef	                            mov rdi, rbp	       238	tc-i386-intel.c	FUNCTION_176	IF_1	CALL_2
0x4006abf	      0xe800000000	                          call 0x4006ac4	       238	tc-i386-intel.c	FUNCTION_176	IF_1	CALL_2
0x4006ac4	    0x483d00000000	                              cmp rax, 0	       238	tc-i386-intel.c	FUNCTION_176	IF_1	CALL_2
0x4006aca	            0x752f	                           jne 0x4006afb	       238	tc-i386-intel.c	FUNCTION_176	IF_1	CALL_2
0x4006acc	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       240	tc-i386-intel.c	FUNCTION_176	IF_1
0x4006ad0	        0x498b1424	                    mov rdx, qword [r12]	       242	tc-i386-intel.c	FUNCTION_176	IF_1
0x4006ad4	          0x488913	                    mov qword [rbx], rdx	       242	tc-i386-intel.c	FUNCTION_176	IF_1
0x4006ad7	      0x498b542408	                mov rdx, qword [r12 + 8]	       242	tc-i386-intel.c	FUNCTION_176	IF_1
0x4006adc	        0x48895308	                mov qword [rbx + 8], rdx	       242	tc-i386-intel.c	FUNCTION_176	IF_1
0x4006ae0	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       242	tc-i386-intel.c	FUNCTION_176	IF_1
0x4006ae5	        0x48895310	             mov qword [rbx + 0x10], rdx	       242	tc-i386-intel.c	FUNCTION_176	IF_1
0x4006ae9	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	       242	tc-i386-intel.c	FUNCTION_176	IF_1
0x4006aee	        0x48895318	             mov qword [rbx + 0x18], rdx	       242	tc-i386-intel.c	FUNCTION_176	IF_1
0x4006af2	        0x48014310	            add qword [rbx + 0x10], rax 	       243	tc-i386-intel.c	FUNCTION_176	IF_1
0x4006af6	      0xe97f050000	                           jmp 0x400707a	       243	tc-i386-intel.c	FUNCTION_176	IF_1
0x4006afb	    0x41807c241803	                cmp byte [r12 + 0x18], 3	       247	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2
0x4006b01	            0x7526	                           jne 0x4006b29	       247	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2
0x4006b03	        0x498b3c24	                    mov rdi, qword [r12]	       248	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2	CALL_4
0x4006b07	      0xe800000000	                          call 0x4006b0c	       248	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2	CALL_4
0x4006b0c	      0xbf00000000	                              mov edi, 0	       248	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2	CALL_4
0x4006b11	      0xb916000000	                           mov ecx, 0x16	       248	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2	CALL_4
0x4006b16	          0x4889c6	                            mov rsi, rax	       248	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2	CALL_4
0x4006b19	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       248	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2	CALL_4
0x4006b1b	           0xf97c2	                                 seta dl	       248	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2	CALL_4
0x4006b1e	           0xf92c0	                                 setb al	       248	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2	CALL_4
0x4006b21	            0x38c2	                              cmp dl, al	       248	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2	CALL_4
0x4006b23	            0x7504	                           jne 0x4006b29	       248	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2	CALL_4
0x4006b25	        0x498b2c24	                    mov rbp, qword [r12]	       250	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2
0x4006b29	          0x48892b	                    mov qword [rbx], rbp	       251	tc-i386-intel.c	FUNCTION_176	ELSE_1
0x4006b2c	    0x48c743080000	                  mov qword [rbx + 8], 0	       252	tc-i386-intel.c	FUNCTION_176	ELSE_1
0x4006b34	        0xc6431803	                mov byte [rbx + 0x18], 3	       253	tc-i386-intel.c	FUNCTION_176	ELSE_1
0x4006b38	      0xe92f060000	                           jmp 0x400716c	       253	tc-i386-intel.c	FUNCTION_176	ELSE_1
0x4006b3d	        0x488b7b08	                mov rdi, qword [rbx + 8]	       405	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_12	CALL_13
0x4006b41	      0xe800000000	                          call 0x4006b46	       405	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_12	CALL_13
0x4006b46	        0x80781805	                cmp byte [rax + 0x18], 5	       405	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_12	CALL_13
0x4006b4a	            0x752b	                           jne 0x4006b77	       405	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_12	CALL_13
0x4006b4c	      0xba05000000	                              mov edx, 5	       408	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_12	CALL_15
0x4006b51	      0xbe00000000	                              mov esi, 0	       408	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_12	CALL_15
0x4006b56	      0xbf00000000	                              mov edi, 0	       408	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_12	CALL_15
0x4006b5b	      0xe800000000	                          call 0x4006b60	       408	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_12	CALL_15
0x4006b60	          0x4889c7	                            mov rdi, rax	       408	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_12	CALL_15
0x4006b63	      0xb800000000	                              mov eax, 0	       408	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_12	CALL_15
0x4006b68	      0xe800000000	                          call 0x4006b6d	       408	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_12	CALL_15
0x4006b6d	      0xb800000000	                              mov eax, 0	       409	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_12
0x4006b72	      0xe983050000	                           jmp 0x40070fa	       409	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_12
0x4006b77	        0x4c8b6308	                mov r12, qword [rbx + 8]	       411	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_13	CALL_16
0x4006b7b	          0x4c89e7	                            mov rdi, r12	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006b7e	      0xe800000000	                          call 0x4006b83	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006b83	          0x4889c7	                            mov rdi, rax	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006b86	      0xe8c1fbffff	            call sym.i386_intel_simplify	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006b8b	            0x89c2	                            mov edx, eax	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006b8d	          0x83f802	                              cmp eax, 2	       325	tc-i386-intel.c	FUNCTION_178	IF_1
0x4006b90	            0x750f	                           jne 0x4006ba1	       325	tc-i386-intel.c	FUNCTION_178	IF_1
0x4006b92	      0xbe00000000	                              mov esi, 0	       327	tc-i386-intel.c	FUNCTION_178	IF_1	CALL_3
0x4006b97	          0x4c89e7	                            mov rdi, r12	       327	tc-i386-intel.c	FUNCTION_178	IF_1	CALL_3
0x4006b9a	      0xe800000000	                          call 0x4006b9f	       327	tc-i386-intel.c	FUNCTION_178	IF_1	CALL_3
0x4006b9f	            0xeb0d	                           jmp 0x4006bae	       327	tc-i386-intel.c	FUNCTION_178	IF_1	CALL_3
0x4006ba1	      0xb800000000	                              mov eax, 0	       414	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_13
0x4006ba6	            0x85d2	                           test edx, edx	       411	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_13	CALL_16
0x4006ba8	     0xf844c050000	                            je 0x40070fa	       411	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_13	CALL_16
0x4006bae	    0x8b0500000000	            mov eax, dword [0x04006bb4] 	       224	tc-i386-intel.c	FUNCTION_175	IF_1
0x4006bb4	            0x85c0	                           test eax, eax	       224	tc-i386-intel.c	FUNCTION_175	IF_1
0x4006bb6	     0xf887e050000	                            js 0x400713a	       224	tc-i386-intel.c	FUNCTION_175	IF_1
0x4006bbc	            0x4898	                                    cdqe	       225	tc-i386-intel.c	FUNCTION_175	IF_1
0x4006bbe	    0x483b2cc50000	                  cmp rbp, qword [rax*8]	       225	tc-i386-intel.c	FUNCTION_175	IF_1
0x4006bc6	     0xf846e050000	                            je 0x400713a	       225	tc-i386-intel.c	FUNCTION_175	IF_1
0x4006bcc	      0xba05000000	                              mov edx, 5	       229	tc-i386-intel.c	FUNCTION_175	IF_1	CALL_2
0x4006bd1	      0xbe00000000	                              mov esi, 0	       229	tc-i386-intel.c	FUNCTION_175	IF_1	CALL_2
0x4006bd6	      0xbf00000000	                              mov edi, 0	       229	tc-i386-intel.c	FUNCTION_175	IF_1	CALL_2
0x4006bdb	      0xe800000000	                          call 0x4006be0	       229	tc-i386-intel.c	FUNCTION_175	IF_1	CALL_2
0x4006be0	          0x4889c7	                            mov rdi, rax	       229	tc-i386-intel.c	FUNCTION_175	IF_1	CALL_2
0x4006be3	      0xb800000000	                              mov eax, 0	       229	tc-i386-intel.c	FUNCTION_175	IF_1	CALL_2
0x4006be8	      0xe800000000	                          call 0x4006bed	       229	tc-i386-intel.c	FUNCTION_175	IF_1	CALL_2
0x4006bed	      0xb800000000	                              mov eax, 0	       414	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_13
0x4006bf2	      0xe903050000	                           jmp 0x40070fa	       414	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_13
0x4006bf7	    0x488b05000000	            mov rax, qword [0x04006bfe] 	       417	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_14	IF_15
0x4006bfe	          0x4885c0	                           test rax, rax	       417	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_14	IF_15
0x4006c01	            0x750c	                           jne 0x4006c0f	       417	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_14	IF_15
0x4006c03	          0x488b03	                    mov rax, qword [rbx]	       418	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_14	IF_15
0x4006c06	    0x488905000000	            mov qword [0x04006c0d], rax 	       418	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_14	IF_15
0x4006c0d	            0xeb20	                           jmp 0x4006c2f	       418	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_14	IF_15
0x4006c0f	      0xc64424181f	            mov byte [rsp + 0x18], 0x1f 	       423	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_14	ELSE_2
0x4006c14	          0x488b13	                    mov rdx, qword [rbx]	       424	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_14	ELSE_2
0x4006c17	        0x48891424	                    mov qword [rsp], rdx	       424	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_14	ELSE_2
0x4006c1b	      0x4889442408	                mov qword [rsp + 8], rax	       425	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_14	ELSE_2
0x4006c20	          0x4889e7	                            mov rdi, rsp	       426	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_14	ELSE_2	CALL_18
0x4006c23	      0xe800000000	                          call 0x4006c28	       426	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_14	ELSE_2	CALL_18
0x4006c28	    0x488905000000	            mov qword [0x04006c2f], rax 	       426	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_14	ELSE_2	CALL_18
0x4006c2f	        0x488b6b08	                mov rbp, qword [rbx + 8]	       429	tc-i386-intel.c	FUNCTION_179	SWITCH_1	CALL_19
0x4006c33	          0x4889ef	                            mov rdi, rbp	       237	tc-i386-intel.c	FUNCTION_176	CALL_1
0x4006c36	      0xe800000000	                          call 0x4006c3b	       237	tc-i386-intel.c	FUNCTION_176	CALL_1
0x4006c3b	          0x4989c4	                            mov r12, rax	       237	tc-i386-intel.c	FUNCTION_176	CALL_1
0x4006c3e	          0x4889ef	                            mov rdi, rbp	       238	tc-i386-intel.c	FUNCTION_176	IF_1	CALL_2
0x4006c41	      0xe800000000	                          call 0x4006c46	       238	tc-i386-intel.c	FUNCTION_176	IF_1	CALL_2
0x4006c46	    0x483d00000000	                              cmp rax, 0	       238	tc-i386-intel.c	FUNCTION_176	IF_1	CALL_2
0x4006c4c	            0x752f	                           jne 0x4006c7d	       238	tc-i386-intel.c	FUNCTION_176	IF_1	CALL_2
0x4006c4e	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       240	tc-i386-intel.c	FUNCTION_176	IF_1
0x4006c52	        0x498b1424	                    mov rdx, qword [r12]	       242	tc-i386-intel.c	FUNCTION_176	IF_1
0x4006c56	          0x488913	                    mov qword [rbx], rdx	       242	tc-i386-intel.c	FUNCTION_176	IF_1
0x4006c59	      0x498b542408	                mov rdx, qword [r12 + 8]	       242	tc-i386-intel.c	FUNCTION_176	IF_1
0x4006c5e	        0x48895308	                mov qword [rbx + 8], rdx	       242	tc-i386-intel.c	FUNCTION_176	IF_1
0x4006c62	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       242	tc-i386-intel.c	FUNCTION_176	IF_1
0x4006c67	        0x48895310	             mov qword [rbx + 0x10], rdx	       242	tc-i386-intel.c	FUNCTION_176	IF_1
0x4006c6b	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	       242	tc-i386-intel.c	FUNCTION_176	IF_1
0x4006c70	        0x48895318	             mov qword [rbx + 0x18], rdx	       242	tc-i386-intel.c	FUNCTION_176	IF_1
0x4006c74	        0x48014310	            add qword [rbx + 0x10], rax 	       243	tc-i386-intel.c	FUNCTION_176	IF_1
0x4006c78	      0xe9fd030000	                           jmp 0x400707a	       243	tc-i386-intel.c	FUNCTION_176	IF_1
0x4006c7d	    0x41807c241803	                cmp byte [r12 + 0x18], 3	       247	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2
0x4006c83	            0x7526	                           jne 0x4006cab	       247	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2
0x4006c85	        0x498b3c24	                    mov rdi, qword [r12]	       248	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2	CALL_4
0x4006c89	      0xe800000000	                          call 0x4006c8e	       248	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2	CALL_4
0x4006c8e	      0xbf00000000	                              mov edi, 0	       248	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2	CALL_4
0x4006c93	      0xb916000000	                           mov ecx, 0x16	       248	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2	CALL_4
0x4006c98	          0x4889c6	                            mov rsi, rax	       248	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2	CALL_4
0x4006c9b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       248	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2	CALL_4
0x4006c9d	           0xf97c2	                                 seta dl	       248	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2	CALL_4
0x4006ca0	           0xf92c0	                                 setb al	       248	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2	CALL_4
0x4006ca3	            0x38c2	                              cmp dl, al	       248	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2	CALL_4
0x4006ca5	            0x7504	                           jne 0x4006cab	       248	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2	CALL_4
0x4006ca7	        0x498b2c24	                    mov rbp, qword [r12]	       250	tc-i386-intel.c	FUNCTION_176	ELSE_1	IF_2
0x4006cab	          0x48892b	                    mov qword [rbx], rbp	       251	tc-i386-intel.c	FUNCTION_176	ELSE_1
0x4006cae	    0x48c743080000	                  mov qword [rbx + 8], 0	       252	tc-i386-intel.c	FUNCTION_176	ELSE_1
0x4006cb6	        0xc6431803	                mov byte [rbx + 0x18], 3	       253	tc-i386-intel.c	FUNCTION_176	ELSE_1
0x4006cba	      0xe9ad040000	                           jmp 0x400716c	       253	tc-i386-intel.c	FUNCTION_176	ELSE_1
0x4006cbf	            0x85c0	                           test eax, eax	       433	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16
0x4006cc1	     0xf8885040000	                            js 0x400714c	       433	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16
0x4006cc7	    0x833d00000000	               cmp dword [0x04006cce], 0	       433	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16
0x4006cce	     0xf8478040000	                            je 0x400714c	       433	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16
0x4006cd4	    0x8b0500000000	            mov eax, dword [0x04006cda] 	       438	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_17
0x4006cda	          0x8d5001	                      lea edx, [rax + 1]	       438	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_17
0x4006cdd	    0x891500000000	            mov dword [0x04006ce3], edx 	       438	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_17
0x4006ce3	            0x85c0	                           test eax, eax	       438	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_17
0x4006ce5	            0x750b	                           jne 0x4006cf2	       438	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_17
0x4006ce7	    0x48c705000000	               mov qword [0x04006cf2], 1	       439	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_17
0x4006cf2	          0x4c8b23	                    mov r12, qword [rbx]	       441	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	CALL_20
0x4006cf5	          0x4c89e7	                            mov rdi, r12	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006cf8	      0xe800000000	                          call 0x4006cfd	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006cfd	          0x4889c7	                            mov rdi, rax	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006d00	      0xe847faffff	            call sym.i386_intel_simplify	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006d05	            0x89c5	                            mov ebp, eax	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006d07	          0x83f802	                              cmp eax, 2	       325	tc-i386-intel.c	FUNCTION_178	IF_1
0x4006d0a	            0x751e	                           jne 0x4006d2a	       325	tc-i386-intel.c	FUNCTION_178	IF_1
0x4006d0c	      0xbe00000000	                              mov esi, 0	       327	tc-i386-intel.c	FUNCTION_178	IF_1	CALL_3
0x4006d11	          0x4c89e7	                            mov rdi, r12	       327	tc-i386-intel.c	FUNCTION_178	IF_1	CALL_3
0x4006d14	      0xe800000000	                          call 0x4006d19	       327	tc-i386-intel.c	FUNCTION_178	IF_1	CALL_3
0x4006d19	    0x41bc00000000	                             mov r12d, 0	       435	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16
0x4006d1f	          0x4d85ed	                           test r13, r13	       442	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_18
0x4006d22	        0x410f94c7	                               sete r15b	       442	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_18
0x4006d26	            0x7553	                           jne 0x4006d7b	       442	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_18
0x4006d28	            0xeb19	                           jmp 0x4006d43	       442	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_18
0x4006d2a	            0x85c0	                           test eax, eax	       442	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_18
0x4006d2c	        0x410f95c6	                              setne r14b	       442	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_18
0x4006d30	          0x4d85ed	                           test r13, r13	       442	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_18
0x4006d33	        0x410f94c7	                               sete r15b	       442	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_18
0x4006d37	          0x4584f6	                         test r14b, r14b	       442	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_18
0x4006d3a	            0x7430	                            je 0x4006d6c	       442	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_18
0x4006d3c	          0x4584ff	                         test r15b, r15b	       442	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_18
0x4006d3f	            0x750d	                           jne 0x4006d4e	       442	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_18
0x4006d41	            0xeb29	                           jmp 0x4006d6c	       442	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_18
0x4006d43	      0xbd01000000	                              mov ebp, 1	       328	tc-i386-intel.c	FUNCTION_178	IF_1
0x4006d48	    0x41be01000000	                             mov r14d, 1	       442	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_18
0x4006d4e	    0x41bc00000000	                             mov r12d, 0	       435	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16
0x4006d54	    0x48833d000000	               cmp qword [0x04006d5c], 0	       442	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_18
0x4006d5c	            0x7414	                            je 0x4006d72	       442	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_18
0x4006d5e	        0x488b7b08	                mov rdi, qword [rbx + 8]	       443	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	CALL_21
0x4006d62	      0xe800000000	                          call 0x4006d67	       443	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	CALL_21
0x4006d67	          0x4989c4	                            mov r12, rax	       443	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	CALL_21
0x4006d6a	            0xeb06	                           jmp 0x4006d72	       443	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	CALL_21
0x4006d6c	    0x41bc00000000	                             mov r12d, 0	       435	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16
0x4006d72	          0x4584f6	                         test r14b, r14b	       445	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_19
0x4006d75	     0xf849c000000	                            je 0x4006e17	       445	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_19
0x4006d7b	        0x4c8b6b08	                mov r13, qword [rbx + 8]	       446	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	CALL_22
0x4006d7f	          0x4c89ef	                            mov rdi, r13	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006d82	      0xe800000000	                          call 0x4006d87	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006d87	          0x4889c7	                            mov rdi, rax	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006d8a	      0xe8bdf9ffff	            call sym.i386_intel_simplify	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006d8f	            0x89c5	                            mov ebp, eax	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006d91	          0x83f802	                              cmp eax, 2	       325	tc-i386-intel.c	FUNCTION_178	IF_1
0x4006d94	            0x7512	                           jne 0x4006da8	       325	tc-i386-intel.c	FUNCTION_178	IF_1
0x4006d96	      0xbe00000000	                              mov esi, 0	       327	tc-i386-intel.c	FUNCTION_178	IF_1	CALL_3
0x4006d9b	          0x4c89ef	                            mov rdi, r13	       327	tc-i386-intel.c	FUNCTION_178	IF_1	CALL_3
0x4006d9e	      0xe800000000	                          call 0x4006da3	       327	tc-i386-intel.c	FUNCTION_178	IF_1	CALL_3
0x4006da3	      0xbd01000000	                              mov ebp, 1	       328	tc-i386-intel.c	FUNCTION_178	IF_1
0x4006da8	            0x85ed	                           test ebp, ebp	       447	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_20
0x4006daa	        0x410f95c5	                              setne r13b	       447	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_20
0x4006dae	          0x4d85e4	                           test r12, r12	       447	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_20
0x4006db1	           0xf94c0	                                 sete al	       447	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_20
0x4006db4	          0x4484e8	                           test al, r13b	       447	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_20
0x4006db7	            0x741a	                            je 0x4006dd3	       447	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_20
0x4006db9	          0x4584ff	                         test r15b, r15b	       447	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_20
0x4006dbc	            0x7415	                            je 0x4006dd3	       447	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_20
0x4006dbe	    0x48833d000000	               cmp qword [0x04006dc6], 0	       447	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_20
0x4006dc6	            0x740b	                            je 0x4006dd3	       447	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_20
0x4006dc8	          0x488b3b	                    mov rdi, qword [rbx]	       448	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	CALL_23
0x4006dcb	      0xe800000000	                          call 0x4006dd0	       448	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	CALL_23
0x4006dd0	          0x4989c4	                            mov r12, rax	       448	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	CALL_23
0x4006dd3	          0x4d85e4	                           test r12, r12	       450	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_21
0x4006dd6	            0x743f	                            je 0x4006e17	       450	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_21
0x4006dd8	          0x4584ed	                         test r13b, r13b	       450	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_21
0x4006ddb	            0x743a	                            je 0x4006e17	       450	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_21
0x4006ddd	          0x4c89e7	                            mov rdi, r12	       452	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_21	CALL_24
0x4006de0	      0xe800000000	                          call 0x4006de5	       452	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_21	CALL_24
0x4006de5	    0x41807c241802	                cmp byte [r12 + 0x18], 2	       453	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_21	IF_22
0x4006deb	            0x750d	                           jne 0x4006dfa	       453	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_21	IF_22
0x4006ded	    0x488b05000000	            mov rax, qword [0x04006df4] 	       454	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_21	IF_22
0x4006df4	        0xf6400b40	            test byte [rax + 0xb], 0x40 	       454	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_21	IF_22
0x4006df8	            0x7409	                            je 0x4006e03	       454	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_21	IF_22
0x4006dfa	    0x49c744241000	               mov qword [r12 + 0x10], 0	       455	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_21	IF_22
0x4006e03	    0x488b05000000	            mov rax, qword [0x04006e0a] 	       456	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_21
0x4006e0a	    0x490faf442410	            imul rax, qword [r12 + 0x10]	       456	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_21
0x4006e10	    0x488905000000	            mov qword [0x04006e17], rax 	       456	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_21
0x4006e17	    0x8b0500000000	            mov eax, dword [0x04006e1d] 	       459	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16
0x4006e1d	          0x8d50ff	                      lea edx, [rax - 1]	       459	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16
0x4006e20	    0x891500000000	            mov dword [0x04006e26], edx 	       459	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16
0x4006e26	      0xb800000000	                              mov eax, 0	       461	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_23
0x4006e2b	            0x85ed	                           test ebp, ebp	       460	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_23
0x4006e2d	     0xf84c7020000	                            je 0x40070fa	       460	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_23
0x4006e33	            0x85d2	                           test edx, edx	       463	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_24
0x4006e35	     0xf853f020000	                           jne 0x400707a	       463	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_24
0x4006e3b	    0x488b05000000	            mov rax, qword [0x04006e42] 	       464	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4006e42	        0x4883f802	                              cmp rax, 2	       464	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4006e46	            0x742b	                            je 0x4006e73	       464	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4006e48	        0x4883f802	                              cmp rax, 2	       464	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4006e4c	            0x7f08	                            jg 0x4006e56	       464	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4006e4e	        0x4883f801	                              cmp rax, 1	       464	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4006e52	            0x7410	                            je 0x4006e64	       464	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4006e54	            0xeb4a	                           jmp 0x4006ea0	       464	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4006e56	        0x4883f804	                              cmp rax, 4	       464	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4006e5a	            0x7426	                            je 0x4006e82	       464	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4006e5c	        0x4883f808	                              cmp rax, 8	       464	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4006e60	            0x742f	                            je 0x4006e91	       464	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4006e62	            0xeb3c	                           jmp 0x4006ea0	       464	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4006e64	    0xc70500000000	               mov dword [0x04006e6e], 0	       467	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4006e6e	      0xe907020000	                           jmp 0x400707a	       468	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4006e73	    0xc70500000000	               mov dword [0x04006e7d], 1	       470	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4006e7d	      0xe9f8010000	                           jmp 0x400707a	       471	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4006e82	    0xc70500000000	               mov dword [0x04006e8c], 2	       473	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4006e8c	      0xe9e9010000	                           jmp 0x400707a	       474	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4006e91	    0xc70500000000	               mov dword [0x04006e9b], 3	       476	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4006e9b	      0xe9da010000	                           jmp 0x400707a	       477	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4006ea0	    0x48c705000000	               mov qword [0x04006eab], 0	       480	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4006eab	      0xe9ca010000	                           jmp 0x400707a	       481	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_16	IF_24	SWITCH_2
0x4006eb0	          0x4889df	                            mov rdi, rbx	       489	tc-i386-intel.c	FUNCTION_179	SWITCH_1	CALL_25
0x4006eb3	      0xe800a0ffff	   call sym.i386_intel_simplify_register	       489	tc-i386-intel.c	FUNCTION_179	SWITCH_1	CALL_25
0x4006eb8	          0x83f802	                              cmp eax, 2	       490	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_25
0x4006ebb	     0xf8539020000	                           jne 0x40070fa	       490	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_25
0x4006ec1	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       492	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_25	CALL_26
0x4006ec5	    0x483dfeff0000	                         cmp rax, 0xfffe	       492	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_25	CALL_26
0x4006ecb	            0x7e14	                           jle 0x4006ee1	       492	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_25	CALL_26
0x4006ecd	      0xba00000000	                              mov edx, 0	       492	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_25	CALL_26
0x4006ed2	      0xbeec010000	                          mov esi, 0x1ec	       492	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_25	CALL_26
0x4006ed7	      0xbf00000000	                              mov edi, 0	       492	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_25	CALL_26
0x4006edc	      0xe800000000	                          call 0x4006ee1	       492	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_25	CALL_26
0x4006ee1	          0x83c001	                              add eax, 1	       493	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_25
0x4006ee4	        0x6689431a	               mov word [rbx + 0x1a], ax	       493	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_25
0x4006ee8	        0xc6431802	                mov byte [rbx + 0x18], 2	       494	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_25
0x4006eec	    0x48c743100000	               mov qword [rbx + 0x10], 0	       495	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_25
0x4006ef4	      0xb802000000	                              mov eax, 2	       497	tc-i386-intel.c	FUNCTION_179	SWITCH_1
0x4006ef9	      0xe9fc010000	                           jmp 0x40070fa	       497	tc-i386-intel.c	FUNCTION_179	SWITCH_1
0x4006efe	      0x66837b1a00	                cmp word [rbx + 0x1a], 0	       500	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_26
0x4006f03	     0xf8443020000	                            je 0x400714c	       500	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_26
0x4006f09	          0x4889df	                            mov rdi, rbx	       501	tc-i386-intel.c	FUNCTION_179	SWITCH_1	CALL_27
0x4006f0c	      0xe8a79fffff	   call sym.i386_intel_simplify_register	       501	tc-i386-intel.c	FUNCTION_179	SWITCH_1	CALL_27
0x4006f11	      0xe9e4010000	                           jmp 0x40070fa	       501	tc-i386-intel.c	FUNCTION_179	SWITCH_1	CALL_27
0x4006f16	          0x4c8b33	                    mov r14, qword [rbx]	       506	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_27
0x4006f19	          0x4d85f6	                           test r14, r14	       506	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_27
0x4006f1c	            0x7433	                            je 0x4006f51	       506	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_27
0x4006f1e	          0x4c89f7	                            mov rdi, r14	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006f21	      0xe800000000	                          call 0x4006f26	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006f26	          0x4889c7	                            mov rdi, rax	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006f29	      0xe81ef8ffff	            call sym.i386_intel_simplify	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006f2e	            0x89c2	                            mov edx, eax	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006f30	          0x83f802	                              cmp eax, 2	       325	tc-i386-intel.c	FUNCTION_178	IF_1
0x4006f33	            0x750f	                           jne 0x4006f44	       325	tc-i386-intel.c	FUNCTION_178	IF_1
0x4006f35	      0xbe00000000	                              mov esi, 0	       327	tc-i386-intel.c	FUNCTION_178	IF_1	CALL_3
0x4006f3a	          0x4c89f7	                            mov rdi, r14	       327	tc-i386-intel.c	FUNCTION_178	IF_1	CALL_3
0x4006f3d	      0xe800000000	                          call 0x4006f42	       327	tc-i386-intel.c	FUNCTION_178	IF_1	CALL_3
0x4006f42	            0xeb0d	                           jmp 0x4006f51	       327	tc-i386-intel.c	FUNCTION_178	IF_1	CALL_3
0x4006f44	      0xb800000000	                              mov eax, 0	       508	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_27
0x4006f49	            0x85d2	                           test edx, edx	       507	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_27	CALL_28
0x4006f4b	     0xf84a9010000	                            je 0x40070fa	       507	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_27	CALL_28
0x4006f51	         0xfb64318	           movzx eax, byte [rbx + 0x18] 	       509	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_28
0x4006f55	          0x83e813	                           sub eax, 0x13	       509	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_28
0x4006f58	            0x3c01	                               cmp al, 1	       509	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_28
0x4006f5a	            0x7721	                            ja 0x4006f7d	       509	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_28
0x4006f5c	    0x4c8b25000000	            mov r12, qword [0x04006f63] 	       511	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_28
0x4006f63	    0x4c8b2d000000	            mov r13, qword [0x04006f6a] 	       512	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_28
0x4006f6a	    0x8b0500000000	            mov eax, dword [0x04006f70] 	       224	tc-i386-intel.c	FUNCTION_175	IF_1
0x4006f70	            0x85c0	                           test eax, eax	       224	tc-i386-intel.c	FUNCTION_175	IF_1
0x4006f72	     0xf891a020000	                           jns 0x4007192	       224	tc-i386-intel.c	FUNCTION_175	IF_1
0x4006f78	      0xe92a020000	                           jmp 0x40071a7	       224	tc-i386-intel.c	FUNCTION_175	IF_1
0x4006f7d	    0x8b0500000000	            mov eax, dword [0x04006f83] 	       224	tc-i386-intel.c	FUNCTION_175	IF_1
0x4006f83	            0x85c0	                           test eax, eax	       224	tc-i386-intel.c	FUNCTION_175	IF_1
0x4006f85	            0x780c	                            js 0x4006f93	       224	tc-i386-intel.c	FUNCTION_175	IF_1
0x4006f87	            0x4898	                                    cdqe	       225	tc-i386-intel.c	FUNCTION_175	IF_1
0x4006f89	    0x483b2cc50000	                  cmp rbp, qword [rax*8]	       225	tc-i386-intel.c	FUNCTION_175	IF_1
0x4006f91	            0x7519	                           jne 0x4006fac	       225	tc-i386-intel.c	FUNCTION_175	IF_1
0x4006f93	    0x4c3b25000000	            cmp r12, qword [0x04006f9a] 	       226	tc-i386-intel.c	FUNCTION_175	IF_1
0x4006f9a	            0x7510	                           jne 0x4006fac	       226	tc-i386-intel.c	FUNCTION_175	IF_1
0x4006f9c	    0x4c8b35000000	            mov r14, qword [0x04006fa3] 	       227	tc-i386-intel.c	FUNCTION_175	IF_1
0x4006fa3	          0x4d39ee	                            cmp r14, r13	       227	tc-i386-intel.c	FUNCTION_175	IF_1
0x4006fa6	     0xf84ae010000	                            je 0x400715a	       227	tc-i386-intel.c	FUNCTION_175	IF_1
0x4006fac	      0xba05000000	                              mov edx, 5	       229	tc-i386-intel.c	FUNCTION_175	IF_1	CALL_2
0x4006fb1	      0xbe00000000	                              mov esi, 0	       229	tc-i386-intel.c	FUNCTION_175	IF_1	CALL_2
0x4006fb6	      0xbf00000000	                              mov edi, 0	       229	tc-i386-intel.c	FUNCTION_175	IF_1	CALL_2
0x4006fbb	      0xe800000000	                          call 0x4006fc0	       229	tc-i386-intel.c	FUNCTION_175	IF_1	CALL_2
0x4006fc0	          0x4889c7	                            mov rdi, rax	       229	tc-i386-intel.c	FUNCTION_175	IF_1	CALL_2
0x4006fc3	      0xb800000000	                              mov eax, 0	       229	tc-i386-intel.c	FUNCTION_175	IF_1	CALL_2
0x4006fc8	      0xe800000000	                          call 0x4006fcd	       229	tc-i386-intel.c	FUNCTION_175	IF_1	CALL_2
0x4006fcd	      0xb800000000	                              mov eax, 0	       522	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_29
0x4006fd2	      0xe923010000	                           jmp 0x40070fa	       522	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_29
0x4006fd7	          0x4c89ef	                            mov rdi, r13	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006fda	      0xe800000000	                          call 0x4006fdf	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006fdf	          0x4889c7	                            mov rdi, rax	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006fe2	      0xe865f7ffff	            call sym.i386_intel_simplify	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006fe7	            0x89c2	                            mov edx, eax	       323	tc-i386-intel.c	FUNCTION_178	CALL_2
0x4006fe9	          0x83f802	                              cmp eax, 2	       325	tc-i386-intel.c	FUNCTION_178	IF_1
0x4006fec	            0x750f	                           jne 0x4006ffd	       325	tc-i386-intel.c	FUNCTION_178	IF_1
0x4006fee	      0xbe00000000	                              mov esi, 0	       327	tc-i386-intel.c	FUNCTION_178	IF_1	CALL_3
0x4006ff3	          0x4c89ef	                            mov rdi, r13	       327	tc-i386-intel.c	FUNCTION_178	IF_1	CALL_3
0x4006ff6	      0xe800000000	                          call 0x4006ffb	       327	tc-i386-intel.c	FUNCTION_178	IF_1	CALL_3
0x4006ffb	            0xeb0d	                           jmp 0x400700a	       327	tc-i386-intel.c	FUNCTION_178	IF_1	CALL_3
0x4006ffd	      0xb800000000	                              mov eax, 0	       522	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_29
0x4007002	            0x85d2	                           test edx, edx	       516	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_29	CALL_30
0x4007004	     0xf84f0000000	                            je 0x40070fa	       516	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_29	CALL_30
0x400700a	        0x807b1813	            cmp byte [rbx + 0x18], 0x13 	       517	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_29	CALL_31
0x400700e	            0x7517	                           jne 0x4007027	       517	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_29	CALL_31
0x4007010	    0x4c8b35000000	            mov r14, qword [0x04007017] 	       517	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_29	CALL_31
0x4007017	    0x8b0500000000	            mov eax, dword [0x0400701d] 	       224	tc-i386-intel.c	FUNCTION_175	IF_1
0x400701d	            0x85c0	                           test eax, eax	       224	tc-i386-intel.c	FUNCTION_175	IF_1
0x400701f	     0xf898b010000	                           jns 0x40071b0	       224	tc-i386-intel.c	FUNCTION_175	IF_1
0x4007025	            0xeb53	                           jmp 0x400707a	       224	tc-i386-intel.c	FUNCTION_175	IF_1
0x4007027	    0x8b0500000000	            mov eax, dword [0x0400702d] 	       224	tc-i386-intel.c	FUNCTION_175	IF_1
0x400702d	            0x85c0	                           test eax, eax	       224	tc-i386-intel.c	FUNCTION_175	IF_1
0x400702f	            0x780c	                            js 0x400703d	       224	tc-i386-intel.c	FUNCTION_175	IF_1
0x4007031	            0x4898	                                    cdqe	       225	tc-i386-intel.c	FUNCTION_175	IF_1
0x4007033	    0x483b2cc50000	                  cmp rbp, qword [rax*8]	       225	tc-i386-intel.c	FUNCTION_175	IF_1
0x400703b	            0x7512	                           jne 0x400704f	       225	tc-i386-intel.c	FUNCTION_175	IF_1
0x400703d	    0x4c3925000000	            cmp qword [0x04007044], r12 	       226	tc-i386-intel.c	FUNCTION_175	IF_1
0x4007044	            0x7509	                           jne 0x400704f	       226	tc-i386-intel.c	FUNCTION_175	IF_1
0x4007046	    0x4c3935000000	            cmp qword [0x0400704d], r14 	       227	tc-i386-intel.c	FUNCTION_175	IF_1
0x400704d	            0x742b	                            je 0x400707a	       227	tc-i386-intel.c	FUNCTION_175	IF_1
0x400704f	      0xba05000000	                              mov edx, 5	       229	tc-i386-intel.c	FUNCTION_175	IF_1	CALL_2
0x4007054	      0xbe00000000	                              mov esi, 0	       229	tc-i386-intel.c	FUNCTION_175	IF_1	CALL_2
0x4007059	      0xbf00000000	                              mov edi, 0	       229	tc-i386-intel.c	FUNCTION_175	IF_1	CALL_2
0x400705e	      0xe800000000	                          call 0x4007063	       229	tc-i386-intel.c	FUNCTION_175	IF_1	CALL_2
0x4007063	          0x4889c7	                            mov rdi, rax	       229	tc-i386-intel.c	FUNCTION_175	IF_1	CALL_2
0x4007066	      0xb800000000	                              mov eax, 0	       229	tc-i386-intel.c	FUNCTION_175	IF_1	CALL_2
0x400706b	      0xe800000000	                          call 0x4007070	       229	tc-i386-intel.c	FUNCTION_175	IF_1	CALL_2
0x4007070	      0xb800000000	                              mov eax, 0	       522	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_29
0x4007075	      0xe980000000	                           jmp 0x40070fa	       522	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_29
0x400707a	    0x833d00000000	               cmp dword [0x04007081], 0	       526	tc-i386-intel.c	FUNCTION_179	IF_30
0x4007081	            0x7856	                            js 0x40070d9	       526	tc-i386-intel.c	FUNCTION_179	IF_30
0x4007083	        0x807b1803	                cmp byte [rbx + 0x18], 3	       527	tc-i386-intel.c	FUNCTION_179	IF_30
0x4007087	            0x7557	                           jne 0x40070e0	       527	tc-i386-intel.c	FUNCTION_179	IF_30
0x4007089	      0xb801000000	                              mov eax, 1	       538	tc-i386-intel.c	FUNCTION_179
0x400708e	    0x833d00000000	               cmp dword [0x04007095], 0	       528	tc-i386-intel.c	FUNCTION_179	IF_30
0x4007095	            0x7563	                           jne 0x40070fa	       528	tc-i386-intel.c	FUNCTION_179	IF_30
0x4007097	          0x488b3b	                    mov rdi, qword [rbx]	       530	tc-i386-intel.c	FUNCTION_179	IF_30	CALL_32
0x400709a	      0xe800000000	                          call 0x400709f	       530	tc-i386-intel.c	FUNCTION_179	IF_30	CALL_32
0x400709f	    0x483d00000000	                              cmp rax, 0	       532	tc-i386-intel.c	FUNCTION_179	IF_30	IF_31
0x40070a5	            0x7440	                            je 0x40070e7	       532	tc-i386-intel.c	FUNCTION_179	IF_30	IF_31
0x40070a7	    0x483b05000000	            cmp rax, qword [0x040070ae] 	       533	tc-i386-intel.c	FUNCTION_179	IF_30	IF_31
0x40070ae	            0x743e	                            je 0x40070ee	       533	tc-i386-intel.c	FUNCTION_179	IF_30	IF_31
0x40070b0	    0x483b05000000	            cmp rax, qword [0x040070b7] 	       534	tc-i386-intel.c	FUNCTION_179	IF_30	IF_31
0x40070b7	            0x743c	                            je 0x40070f5	       534	tc-i386-intel.c	FUNCTION_179	IF_30	IF_31
0x40070b9	    0x833d00000000	               cmp dword [0x040070c0], 1	       535	tc-i386-intel.c	FUNCTION_179	IF_30	IF_31
0x40070c0	            0x19c0	                            sbb eax, eax	       535	tc-i386-intel.c	FUNCTION_179	IF_30	IF_31
0x40070c2	          0x83c002	                              add eax, 2	       535	tc-i386-intel.c	FUNCTION_179	IF_30	IF_31
0x40070c5	     0x90500000000	              or dword [0x040070cb], eax	       535	tc-i386-intel.c	FUNCTION_179	IF_30	IF_31
0x40070cb	      0xb801000000	                              mov eax, 1	       538	tc-i386-intel.c	FUNCTION_179
0x40070d0	            0xeb28	                           jmp 0x40070fa	       538	tc-i386-intel.c	FUNCTION_179
0x40070d2	      0xb801000000	                              mov eax, 1	       342	tc-i386-intel.c	FUNCTION_179	IF_1
0x40070d7	            0xeb21	                           jmp 0x40070fa	       342	tc-i386-intel.c	FUNCTION_179	IF_1
0x40070d9	      0xb801000000	                              mov eax, 1	       538	tc-i386-intel.c	FUNCTION_179
0x40070de	            0xeb1a	                           jmp 0x40070fa	       538	tc-i386-intel.c	FUNCTION_179
0x40070e0	      0xb801000000	                              mov eax, 1	       538	tc-i386-intel.c	FUNCTION_179
0x40070e5	            0xeb13	                           jmp 0x40070fa	       538	tc-i386-intel.c	FUNCTION_179
0x40070e7	      0xb801000000	                              mov eax, 1	       538	tc-i386-intel.c	FUNCTION_179
0x40070ec	            0xeb0c	                           jmp 0x40070fa	       538	tc-i386-intel.c	FUNCTION_179
0x40070ee	      0xb801000000	                              mov eax, 1	       538	tc-i386-intel.c	FUNCTION_179
0x40070f3	            0xeb05	                           jmp 0x40070fa	       538	tc-i386-intel.c	FUNCTION_179
0x40070f5	      0xb801000000	                              mov eax, 1	       538	tc-i386-intel.c	FUNCTION_179
0x40070fa	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       539	tc-i386-intel.c	FUNCTION_179
0x40070ff	    0x644833342528	                xor rsi, qword fs:[0x28]	       539	tc-i386-intel.c	FUNCTION_179
0x4007108	     0xf84bc000000	                            je 0x40071ca	       539	tc-i386-intel.c	FUNCTION_179
0x400710e	      0xe9b2000000	                           jmp 0x40071c5	       539	tc-i386-intel.c	FUNCTION_179
0x4007113	          0x488b2b	                    mov rbp, qword [rbx]	       374	tc-i386-intel.c	FUNCTION_179	SWITCH_1	CALL_7
0x4007116	          0x4889ef	                            mov rdi, rbp	       237	tc-i386-intel.c	FUNCTION_176	CALL_1
0x4007119	      0xe800000000	                          call 0x400711e	       237	tc-i386-intel.c	FUNCTION_176	CALL_1
0x400711e	          0x4989c4	                            mov r12, rax	       237	tc-i386-intel.c	FUNCTION_176	CALL_1
0x4007121	          0x4889ef	                            mov rdi, rbp	       238	tc-i386-intel.c	FUNCTION_176	IF_1	CALL_2
0x4007124	      0xe800000000	                          call 0x4007129	       238	tc-i386-intel.c	FUNCTION_176	IF_1	CALL_2
0x4007129	    0x483d00000000	                              cmp rax, 0	       238	tc-i386-intel.c	FUNCTION_176	IF_1	CALL_2
0x400712f	     0xf85bbf8ffff	                           jne 0x40069f0	       238	tc-i386-intel.c	FUNCTION_176	IF_1	CALL_2
0x4007135	      0xe999f8ffff	                           jmp 0x40069d3	       238	tc-i386-intel.c	FUNCTION_176	IF_1	CALL_2
0x400713a	    0x833d00000000	               cmp dword [0x04007141], 0	       415	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_14
0x4007141	     0xf84b0faffff	                            je 0x4006bf7	       415	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_14
0x4007147	      0xe9e3faffff	                           jmp 0x4006c2f	       415	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_14
0x400714c	          0x4c8b33	                    mov r14, qword [rbx]	       506	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_27
0x400714f	          0x4d85f6	                           test r14, r14	       506	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_27
0x4007152	     0xf85c6fdffff	                           jne 0x4006f1e	       506	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_27
0x4007158	            0xeb25	                           jmp 0x400717f	       506	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_27
0x400715a	        0x4c8b6b08	                mov r13, qword [rbx + 8]	       515	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_29
0x400715e	          0x4d85ed	                           test r13, r13	       515	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_29
0x4007161	     0xf8570feffff	                           jne 0x4006fd7	       515	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_29
0x4007167	      0xe99efeffff	                           jmp 0x400700a	       515	tc-i386-intel.c	FUNCTION_179	SWITCH_1	IF_29
0x400716c	      0xb801000000	                              mov eax, 1	       538	tc-i386-intel.c	FUNCTION_179
0x4007171	    0x833d00000000	               cmp dword [0x04007178], 0	       526	tc-i386-intel.c	FUNCTION_179	IF_30
0x4007178	            0x7880	                            js 0x40070fa	       526	tc-i386-intel.c	FUNCTION_179	IF_30
0x400717a	      0xe90affffff	                           jmp 0x4007089	       526	tc-i386-intel.c	FUNCTION_179	IF_30
0x400717f	    0x8b0500000000	            mov eax, dword [0x04007185] 	       224	tc-i386-intel.c	FUNCTION_175	IF_1
0x4007185	            0x85c0	                           test eax, eax	       224	tc-i386-intel.c	FUNCTION_175	IF_1
0x4007187	     0xf89fafdffff	                           jns 0x4006f87	       224	tc-i386-intel.c	FUNCTION_175	IF_1
0x400718d	      0xe90afeffff	                           jmp 0x4006f9c	       224	tc-i386-intel.c	FUNCTION_175	IF_1
0x4007192	            0x4898	                                    cdqe	       225	tc-i386-intel.c	FUNCTION_175	IF_1
0x4007194	    0x483b2cc50000	                  cmp rbp, qword [rax*8]	       225	tc-i386-intel.c	FUNCTION_175	IF_1
0x400719c	     0xf850afeffff	                           jne 0x4006fac	       225	tc-i386-intel.c	FUNCTION_175	IF_1
0x40071a2	      0xe9f5fdffff	                           jmp 0x4006f9c	       225	tc-i386-intel.c	FUNCTION_175	IF_1
0x40071a7	    0x4c8b35000000	            mov r14, qword [0x040071ae] 	       227	tc-i386-intel.c	FUNCTION_175	IF_1
0x40071ae	            0xebaa	                           jmp 0x400715a	       227	tc-i386-intel.c	FUNCTION_175	IF_1
0x40071b0	            0x4898	                                    cdqe	       225	tc-i386-intel.c	FUNCTION_175	IF_1
0x40071b2	    0x483b2cc50000	                  cmp rbp, qword [rax*8]	       225	tc-i386-intel.c	FUNCTION_175	IF_1
0x40071ba	     0xf858ffeffff	                           jne 0x400704f	       225	tc-i386-intel.c	FUNCTION_175	IF_1
0x40071c0	      0xe981feffff	                           jmp 0x4007046	       225	tc-i386-intel.c	FUNCTION_175	IF_1
0x40071c5	      0xe800000000	                          call 0x40071ca	       539	tc-i386-intel.c	FUNCTION_179
0x40071ca	        0x4883c438	                           add rsp, 0x38	       539	tc-i386-intel.c	FUNCTION_179
0x40071ce	              0x5b	                                 pop rbx	       539	tc-i386-intel.c	FUNCTION_179
0x40071cf	              0x5d	                                 pop rbp	       539	tc-i386-intel.c	FUNCTION_179
0x40071d0	            0x415c	                                 pop r12	       539	tc-i386-intel.c	FUNCTION_179
0x40071d2	            0x415d	                                 pop r13	       539	tc-i386-intel.c	FUNCTION_179
0x40071d4	            0x415e	                                 pop r14	       539	tc-i386-intel.c	FUNCTION_179
0x40071d6	            0x415f	                                 pop r15	       539	tc-i386-intel.c	FUNCTION_179
0x40071d8	              0xc3	                                     ret	       539	tc-i386-intel.c	FUNCTION_179
i386_index_check	functions,0:ELSE,4:FOR,0:CALL,12:SWITCH,0:WHILE,0:IF,11:DO,0	271
0x4003102	            0x4156	                                push r14	      9103	tc-i386.c	FUNCTION_109
0x4003104	            0x4155	                                push r13	      9103	tc-i386.c	FUNCTION_109
0x4003106	            0x4154	                                push r12	      9103	tc-i386.c	FUNCTION_109
0x4003108	              0x55	                                push rbp	      9103	tc-i386.c	FUNCTION_109
0x4003109	              0x53	                                push rbx	      9103	tc-i386.c	FUNCTION_109
0x400310a	        0x4883ec10	                           sub rsp, 0x10	      9103	tc-i386.c	FUNCTION_109
0x400310e	          0x4889fd	                            mov rbp, rdi	      9103	tc-i386.c	FUNCTION_109
0x4003111	    0x64488b042528	                mov rax, qword fs:[0x28]	      9103	tc-i386.c	FUNCTION_109
0x400311a	      0x4889442408	                mov qword [rsp + 8], rax	      9103	tc-i386.c	FUNCTION_109
0x400311f	            0x31c0	                            xor eax, eax	      9103	tc-i386.c	FUNCTION_109
0x4003121	      0xe88cdaffff	           call sym.i386_addressing_mode	      9105	tc-i386.c	FUNCTION_109	CALL_1
0x4003126	            0x89c3	                            mov ebx, eax	      9105	tc-i386.c	FUNCTION_109	CALL_1
0x4003128	    0x488b0d000000	            mov rcx, qword [0x0400312f] 	      9107	tc-i386.c	FUNCTION_109	IF_1
0x400312f	          0x488b11	                    mov rdx, qword [rcx]	      9107	tc-i386.c	FUNCTION_109	IF_1
0x4003132	    0x48b800000001	                movabs rax, 0x2001000000	      9107	tc-i386.c	FUNCTION_109	IF_1
0x400313c	        0x48234228	             and rax, qword [rdx + 0x28]	      9107	tc-i386.c	FUNCTION_109	IF_1
0x4003140	    0x483d00000001	                      cmp rax, 0x1000000	      9107	tc-i386.c	FUNCTION_109	IF_1
0x4003146	     0xf85a8010000	                           jne 0x40032f4	      9107	tc-i386.c	FUNCTION_109	IF_1
0x400314c	        0x488b4908	                mov rcx, qword [rcx + 8]	      9109	tc-i386.c	FUNCTION_109	IF_1
0x4003150	        0xf641cb01	               test byte [rcx - 0x35], 1	      9109	tc-i386.c	FUNCTION_109	IF_1
0x4003154	            0x750d	                           jne 0x4003163	      9109	tc-i386.c	FUNCTION_109	IF_1
0x4003156	    0x833d00000000	               cmp dword [0x0400315d], 0	      9110	tc-i386.c	FUNCTION_109	IF_1
0x400315d	     0xf8491010000	                            je 0x40032f4	      9110	tc-i386.c	FUNCTION_109	IF_1
0x4003163	        0xf6422c01	               test byte [rdx + 0x2c], 1	      9125	tc-i386.c	FUNCTION_109	IF_1	IF_2
0x4003167	            0x745c	                            je 0x40031c5	      9125	tc-i386.c	FUNCTION_109	IF_1	IF_2
0x4003169	        0xf641d640	           test byte [rcx - 0x2a], 0x40 	      9129	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400316d	            0x742a	                            je 0x4003199	      9129	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400316f	         0xfb641d7	            movzx eax, byte [rcx - 0x29]	      9127	tc-i386.c	FUNCTION_109	IF_1	IF_2
0x4003173	          0xc0e802	                               shr al, 2	      9127	tc-i386.c	FUNCTION_109	IF_1	IF_2
0x4003176	          0x83e001	                              and eax, 1	      9127	tc-i386.c	FUNCTION_109	IF_1	IF_2
0x4003179	    0x833d00000000	               cmp dword [0x04003180], 0	      9130	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x4003180	        0x400f94c6	                                sete sil	      9130	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x4003184	    0x833d00000000	               cmp dword [0x0400318b], 0	      9130	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400318b	           0xf94c2	                                 sete dl	      9130	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400318e	          0x4038d6	                             cmp sil, dl	      9130	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x4003191	            0x7410	                            je 0x40031a3	      9130	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x4003193	        0xf641de40	           test byte [rcx - 0x22], 0x40 	      9131	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x4003197	            0x740a	                            je 0x40031a3	      9131	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x4003199	         0xfb641df	            movzx eax, byte [rcx - 0x21]	      9133	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400319d	          0xc0e802	                               shr al, 2	      9133	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x40031a0	          0x83e001	                              and eax, 1	      9133	tc-i386.c	FUNCTION_109	IF_1	IF_2	IF_3
0x40031a3	          0x83e03f	                           and eax, 0x3f	      9134	tc-i386.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x40031a6	            0x89da	                            mov edx, ebx	      9134	tc-i386.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x40031a8	        0x488d0450	                  lea rax, [rax + rdx*2]	      9134	tc-i386.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x40031ac	    0x488b34c50000	                  mov rsi, qword [rax*8]	      9134	tc-i386.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x40031b4	    0x488b3d000000	            mov rdi, qword [0x040031bb] 	      9134	tc-i386.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x40031bb	      0xe800000000	                          call 0x40031c0	      9134	tc-i386.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x40031c0	          0x4889c1	                            mov rcx, rax	      9134	tc-i386.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x40031c3	            0xeb19	                           jmp 0x40031de	      9134	tc-i386.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x40031c5	            0x89d8	                            mov eax, ebx	      9139	tc-i386.c	FUNCTION_109	IF_1	CALL_3
0x40031c7	    0x488b34c50000	                  mov rsi, qword [rax*8]	      9139	tc-i386.c	FUNCTION_109	IF_1	CALL_3
0x40031cf	    0x488b3d000000	            mov rdi, qword [0x040031d6] 	      9139	tc-i386.c	FUNCTION_109	IF_1	CALL_3
0x40031d6	      0xe800000000	                          call 0x40031db	      9139	tc-i386.c	FUNCTION_109	IF_1	CALL_3
0x40031db	          0x4889c1	                            mov rcx, rax	      9139	tc-i386.c	FUNCTION_109	IF_1	CALL_3
0x40031de	    0x488b15000000	            mov rdx, qword [0x040031e5] 	      9141	tc-i386.c	FUNCTION_109	IF_1	IF_4
0x40031e5	          0x4839d1	                            cmp rcx, rdx	      9141	tc-i386.c	FUNCTION_109	IF_1	IF_4
0x40031e8	            0x7524	                           jne 0x400320e	      9141	tc-i386.c	FUNCTION_109	IF_1	IF_4
0x40031ea	    0x48833d000000	               cmp qword [0x040031f2], 0	      9142	tc-i386.c	FUNCTION_109	IF_1	IF_4
0x40031f2	            0x751a	                           jne 0x400320e	      9142	tc-i386.c	FUNCTION_109	IF_1	IF_4
0x40031f4	    0x486335000000	         movsxd rsi, dword [0x040031fb] 	      9142	tc-i386.c	FUNCTION_109	IF_1	IF_4
0x40031fb	      0xb801000000	                              mov eax, 1	      9165	tc-i386.c	FUNCTION_109	IF_1	ELSE_2
0x4003200	    0xf604f5000000	                 test byte [rsi*8], 0x1f	      9143	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_4
0x4003208	     0xf8475020000	                            je 0x4003483	      9143	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_4
0x400320e	    0x833d00000000	               cmp dword [0x04003215], 0	      9148	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x4003215	            0x7432	                            je 0x4003249	      9148	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x4003217	          0x4885d2	                           test rdx, rdx	      9148	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400321a	            0x742d	                            je 0x4003249	      9148	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400321c	          0x83fb02	                              cmp ebx, 2	      9149	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400321f	            0x7508	                           jne 0x4003229	      9149	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x4003221	        0xf6420c02	                test byte [rdx + 0xc], 2	      9150	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x4003225	            0x7411	                            je 0x4003238	      9150	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x4003227	            0xeb20	                           jmp 0x4003249	      9150	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x4003229	            0x85db	                           test ebx, ebx	      9151	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400322b	            0x750b	                           jne 0x4003238	      9151	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400322d	         0xfb6420b	            movzx eax, byte [rdx + 0xb] 	      9151	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x4003231	            0xf7d0	                                 not eax	      9151	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x4003233	          0xc0e807	                               shr al, 7	      9151	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x4003236	            0xeb0d	                           jmp 0x4003245	      9151	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x4003238	         0xfb6420b	            movzx eax, byte [rdx + 0xb] 	      9151	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400323c	          0xc0e806	                               shr al, 6	      9151	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x400323f	          0x83f001	                              xor eax, 1	      9151	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x4003242	          0x83e001	                              and eax, 1	      9151	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x4003245	            0x84c0	                             test al, al	      9149	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x4003247	            0x754b	                           jne 0x4003294	      9149	tc-i386.c	FUNCTION_109	IF_1	IF_4	IF_5
0x4003249	    0x833d00000000	               cmp dword [0x04003250], 0	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x4003250	     0xf8560020000	                           jne 0x40034b6	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x4003256	      0xe941020000	                           jmp 0x400349c	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400325b	      0xba05000000	                              mov edx, 5	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x4003260	      0xbe00000000	                              mov esi, 0	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x4003265	      0xbf00000000	                              mov edi, 0	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400326a	      0xe800000000	                          call 0x400326f	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400326f	          0x4589e1	                           mov r9d, r12d	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x4003272	          0x4d89f0	                             mov r8, r14	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x4003275	          0x4c89e9	                            mov rcx, r13	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x4003278	            0x89da	                            mov edx, ebx	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400327a	          0x4889ee	                            mov rsi, rbp	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400327d	          0x4889c7	                            mov rdi, rax	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x4003280	      0xb800000000	                              mov eax, 0	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x4003285	      0xe800000000	                          call 0x400328a	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400328a	      0xb801000000	                              mov eax, 1	      9162	tc-i386.c	FUNCTION_109	IF_1	IF_4
0x400328f	      0xe9ef010000	                           jmp 0x4003483	      9162	tc-i386.c	FUNCTION_109	IF_1	IF_4
0x4003294	      0xbb00000000	                              mov ebx, 0	      9123	tc-i386.c	FUNCTION_109	IF_1
0x4003299	            0xeb28	                           jmp 0x40032c3	      9123	tc-i386.c	FUNCTION_109	IF_1
0x400329b	      0xbb00000000	                              mov ebx, 0	      9104	tc-i386.c	FUNCTION_109
0x40032a0	            0xeb21	                           jmp 0x40032c3	      9104	tc-i386.c	FUNCTION_109
0x40032a2	      0xbb00000000	                              mov ebx, 0	      9104	tc-i386.c	FUNCTION_109
0x40032a7	            0xeb1a	                           jmp 0x40032c3	      9104	tc-i386.c	FUNCTION_109
0x40032a9	      0xbb00000000	                              mov ebx, 0	      9104	tc-i386.c	FUNCTION_109
0x40032ae	            0xeb13	                           jmp 0x40032c3	      9104	tc-i386.c	FUNCTION_109
0x40032b0	      0xbb00000000	                              mov ebx, 0	      9104	tc-i386.c	FUNCTION_109
0x40032b5	            0xeb0c	                           jmp 0x40032c3	      9104	tc-i386.c	FUNCTION_109
0x40032b7	      0xbb00000000	                              mov ebx, 0	      9104	tc-i386.c	FUNCTION_109
0x40032bc	            0xeb05	                           jmp 0x40032c3	      9104	tc-i386.c	FUNCTION_109
0x40032be	      0xbb00000000	                              mov ebx, 0	      9104	tc-i386.c	FUNCTION_109
0x40032c3	      0xba05000000	                              mov edx, 5	      9168	tc-i386.c	FUNCTION_109	IF_1	CALL_8
0x40032c8	      0xbe00000000	                              mov esi, 0	      9168	tc-i386.c	FUNCTION_109	IF_1	CALL_8
0x40032cd	      0xbf00000000	                              mov edi, 0	      9168	tc-i386.c	FUNCTION_109	IF_1	CALL_8
0x40032d2	      0xe800000000	                          call 0x40032d7	      9168	tc-i386.c	FUNCTION_109	IF_1	CALL_8
0x40032d7	          0x4889da	                            mov rdx, rbx	      9168	tc-i386.c	FUNCTION_109	IF_1	CALL_8
0x40032da	          0x4889ee	                            mov rsi, rbp	      9168	tc-i386.c	FUNCTION_109	IF_1	CALL_8
0x40032dd	          0x4889c7	                            mov rdi, rax	      9168	tc-i386.c	FUNCTION_109	IF_1	CALL_8
0x40032e0	      0xb800000000	                              mov eax, 0	      9168	tc-i386.c	FUNCTION_109	IF_1	CALL_8
0x40032e5	      0xe800000000	                          call 0x40032ea	      9168	tc-i386.c	FUNCTION_109	IF_1	CALL_8
0x40032ea	      0xb800000000	                              mov eax, 0	      9170	tc-i386.c	FUNCTION_109	IF_1
0x40032ef	      0xe98f010000	                           jmp 0x4003483	      9170	tc-i386.c	FUNCTION_109	IF_1
0x40032f4	          0x83fb01	                              cmp ebx, 1	      9174	tc-i386.c	FUNCTION_109	ELSE_3	IF_6
0x40032f7	     0xf8415010000	                            je 0x4003412	      9174	tc-i386.c	FUNCTION_109	ELSE_3	IF_6
0x40032fd	    0x488b05000000	            mov rax, qword [0x04003304] 	      9177	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4003304	          0x4885c0	                           test rax, rax	      9177	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4003307	            0x7428	                            je 0x4003331	      9177	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4003309	          0x83fb02	                              cmp ebx, 2	      9177	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400330c	            0x750c	                           jne 0x400331a	      9177	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400330e	        0xf6400c02	                test byte [rax + 0xc], 2	      9178	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4003312	     0xf8413020000	                            je 0x400352b	      9178	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4003318	            0xeb17	                           jmp 0x4003331	      9178	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400331a	        0x80780b00	                 cmp byte [rax + 0xb], 0	      9178	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400331e	     0xf89e4010000	                           jns 0x4003508	      9178	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4003324	            0xeb0b	                           jmp 0x4003331	      9178	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4003326	      0xbb00000000	                              mov ebx, 0	      9104	tc-i386.c	FUNCTION_109
0x400332b	            0x39f1	                            cmp ecx, esi	      9182	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400332d	            0x7594	                           jne 0x40032c3	      9182	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400332f	            0xeb51	                           jmp 0x4003382	      9182	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4003331	    0x488b0d000000	            mov rcx, qword [0x04003338] 	      9184	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4003338	          0x4885c9	                           test rcx, rcx	      9184	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400333b	            0x7445	                            je 0x4003382	      9184	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400333d	         0xfb6710c	            movzx esi, byte [rcx + 0xc] 	      9187	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4003341	        0x40f6c638	                          test sil, 0x38	      9187	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4003345	            0x753b	                           jne 0x4003382	      9187	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4003347	          0x83fb02	                              cmp ebx, 2	      9177	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400334a	            0x7517	                           jne 0x4003363	      9177	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400334c	        0x40f6c602	                             test sil, 2	      9189	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4003350	            0x7526	                           jne 0x4003378	      9189	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4003352	      0xbb00000000	                              mov ebx, 0	      9104	tc-i386.c	FUNCTION_109
0x4003357	        0x807911fc	            cmp byte [rcx + 0x11], 0xfc 	      9189	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400335b	     0xf8562ffffff	                           jne 0x40032c3	      9189	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4003361	            0xeb15	                           jmp 0x4003378	      9189	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4003363	        0x80790b00	                 cmp byte [rcx + 0xb], 0	      9191	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4003367	            0x780f	                            js 0x4003378	      9191	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4003369	      0xbb00000000	                              mov ebx, 0	      9104	tc-i386.c	FUNCTION_109
0x400336e	        0x807911fd	            cmp byte [rcx + 0x11], 0xfd 	      9191	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4003372	     0xf854bffffff	                           jne 0x40032c3	      9191	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4003378	        0xf6410a40	            test byte [rcx + 0xa], 0x40 	      9193	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400337c	     0xf8419ffffff	                            je 0x400329b	      9193	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4003382	          0x8b520c	              mov edx, dword [rdx + 0xc]	      9197	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8
0x4003385	    0x81fa1b0ff300	                       cmp edx, 0xf30f1b	      9197	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8
0x400338b	     0xf843f010000	                            je 0x40034d0	      9197	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8
0x4003391	          0x83e2fe	                     and edx, 0xfffffffe	      9198	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8
0x4003394	    0x81fa1a0f0000	                          cmp edx, 0xf1a	      9198	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8
0x400339a	     0xf843c010000	                            je 0x40034dc	      9198	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8
0x40033a0	      0xb801000000	                              mov eax, 1	      9229	tc-i386.c	FUNCTION_109
0x40033a5	      0xe9d9000000	                           jmp 0x4003483	      9229	tc-i386.c	FUNCTION_109
0x40033aa	      0xba05000000	                              mov edx, 5	      9203	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9	CALL_10
0x40033af	      0xbe00000000	                              mov esi, 0	      9203	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9	CALL_10
0x40033b4	      0xbf00000000	                              mov edi, 0	      9203	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9	CALL_10
0x40033b9	      0xe800000000	                          call 0x40033be	      9203	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9	CALL_10
0x40033be	          0x4889ee	                            mov rsi, rbp	      9203	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9	CALL_10
0x40033c1	          0x4889c7	                            mov rdi, rax	      9203	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9	CALL_10
0x40033c4	      0xb800000000	                              mov eax, 0	      9203	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9	CALL_10
0x40033c9	      0xe800000000	                          call 0x40033ce	      9203	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9	CALL_10
0x40033ce	      0xb800000000	                              mov eax, 0	      9204	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9
0x40033d3	      0xe9ab000000	                           jmp 0x4003483	      9204	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9
0x40033d8	      0xb801000000	                              mov eax, 1	      9229	tc-i386.c	FUNCTION_109
0x40033dd	    0x833d00000000	               cmp dword [0x040033e4], 0	      9209	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_10
0x40033e4	     0xf8499000000	                            je 0x4003483	      9209	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_10
0x40033ea	      0xba05000000	                              mov edx, 5	      9210	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	CALL_12
0x40033ef	      0xbe00000000	                              mov esi, 0	      9210	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	CALL_12
0x40033f4	      0xbf00000000	                              mov edi, 0	      9210	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	CALL_12
0x40033f9	      0xe800000000	                          call 0x40033fe	      9210	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	CALL_12
0x40033fe	          0x4889c7	                            mov rdi, rax	      9210	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	CALL_12
0x4003401	      0xb800000000	                              mov eax, 0	      9210	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	CALL_12
0x4003406	      0xe800000000	                          call 0x400340b	      9210	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	CALL_12
0x400340b	      0xb801000000	                              mov eax, 1	      9229	tc-i386.c	FUNCTION_109
0x4003410	            0xeb71	                           jmp 0x4003483	      9229	tc-i386.c	FUNCTION_109
0x4003412	    0x488b15000000	            mov rdx, qword [0x04003419] 	      9216	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x4003419	          0x4885d2	                           test rdx, rdx	      9216	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400341c	     0xf84c4000000	                            je 0x40034e6	      9216	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x4003422	         0xfb7420a	            movzx eax, word [rdx + 0xa] 	      9217	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x4003426	        0x66254040	                          and ax, 0x4040	      9217	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400342a	      0xbb00000000	                              mov ebx, 0	      9104	tc-i386.c	FUNCTION_109
0x400342f	        0x663d4040	                          cmp ax, 0x4040	      9217	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x4003433	     0xf858afeffff	                           jne 0x40032c3	      9217	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x4003439	    0x488b0d000000	            mov rcx, qword [0x04003440] 	      9219	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x4003440	          0x4885c9	                           test rcx, rcx	      9219	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x4003443	            0x7439	                            je 0x400347e	      9219	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x4003445	         0xfb7410a	            movzx eax, word [rcx + 0xa] 	      9222	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x4003449	        0x66254040	                          and ax, 0x4040	      9222	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400344d	        0x663d4040	                          cmp ax, 0x4040	      9222	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x4003451	     0xf854bfeffff	                           jne 0x40032a2	      9222	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x4003457	        0x807a1105	                cmp byte [rdx + 0x11], 5	      9223	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400345b	     0xf8748feffff	                            ja 0x40032a9	      9223	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x4003461	        0x80791105	                cmp byte [rcx + 0x11], 5	      9224	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x4003465	     0xf8645feffff	                           jbe 0x40032b0	      9224	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400346b	      0xb801000000	                              mov eax, 1	      9229	tc-i386.c	FUNCTION_109
0x4003470	    0x833d00000000	               cmp dword [0x04003477], 0	      9222	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x4003477	            0x740a	                            je 0x4003483	      9222	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x4003479	      0xe939feffff	                           jmp 0x40032b7	      9222	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x400347e	      0xb801000000	                              mov eax, 1	      9229	tc-i386.c	FUNCTION_109
0x4003483	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      9230	tc-i386.c	FUNCTION_109
0x4003488	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      9230	tc-i386.c	FUNCTION_109
0x4003491	     0xf84d1000000	                            je 0x4003568	      9230	tc-i386.c	FUNCTION_109
0x4003497	      0xe9c7000000	                           jmp 0x4003563	      9230	tc-i386.c	FUNCTION_109
0x400349c	          0x4c8b31	                    mov r14, qword [rcx]	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x400349f	    0x4c8b2d000000	            mov r13, qword [0x040034a6] 	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x40034a6	    0x41bc29000000	                          mov r12d, 0x29	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x40034ac	      0xbb28000000	                           mov ebx, 0x28	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x40034b1	      0xe9a5fdffff	                           jmp 0x400325b	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x40034b6	          0x4c8b31	                    mov r14, qword [rcx]	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x40034b9	    0x4c8b2d000000	            mov r13, qword [0x040034c0] 	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x40034c0	    0x41bc5d000000	                          mov r12d, 0x5d	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x40034c6	      0xbb5b000000	                           mov ebx, 0x5b	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x40034cb	      0xe98bfdffff	                           jmp 0x400325b	      9156	tc-i386.c	FUNCTION_109	IF_1	IF_4	CALL_6
0x40034d0	          0x4885c0	                           test rax, rax	      9201	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9
0x40034d3	            0x756b	                           jne 0x4003540	      9201	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9
0x40034d5	      0xb801000000	                              mov eax, 1	      9229	tc-i386.c	FUNCTION_109
0x40034da	            0xeba7	                           jmp 0x4003483	      9229	tc-i386.c	FUNCTION_109
0x40034dc	          0x4885c0	                           test rax, rax	      9201	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9
0x40034df	            0x7573	                           jne 0x4003554	      9201	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9
0x40034e1	      0xe9f2feffff	                           jmp 0x40033d8	      9201	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9
0x40034e6	      0xb801000000	                              mov eax, 1	      9229	tc-i386.c	FUNCTION_109
0x40034eb	    0x48833d000000	               cmp qword [0x040034f3], 0	      9219	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x40034f3	            0x748e	                            je 0x4003483	      9219	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x40034f5	      0xe9c4fdffff	                           jmp 0x40032be	      9219	tc-i386.c	FUNCTION_109	ELSE_3	ELSE_4	IF_11
0x40034fa	         0xfb67011	           movzx esi, byte [rax + 0x11] 	      9183	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x40034fe	      0xb9fe000000	                           mov ecx, 0xfe	      9183	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4003503	      0xe91efeffff	                           jmp 0x4003326	      9183	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4003508	      0xbb00000000	                              mov ebx, 0	      9104	tc-i386.c	FUNCTION_109
0x400350d	    0x48833d000000	               cmp qword [0x04003515], 0	      9181	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4003515	     0xf85a8fdffff	                           jne 0x40032c3	      9181	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400351b	            0xebdd	                           jmp 0x40034fa	      9181	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400351d	         0xfb67011	           movzx esi, byte [rax + 0x11] 	      9183	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4003521	      0xb9ff000000	                           mov ecx, 0xff	      9183	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4003526	      0xe9fbfdffff	                           jmp 0x4003326	      9183	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400352b	      0xbb00000000	                              mov ebx, 0	      9104	tc-i386.c	FUNCTION_109
0x4003530	    0x48833d000000	               cmp qword [0x04003538], 0	      9181	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4003538	     0xf8585fdffff	                           jne 0x40032c3	      9181	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x400353e	            0xebdd	                           jmp 0x400351d	      9181	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_7
0x4003540	        0x807811ff	            cmp byte [rax + 0x11], 0xff 	      9201	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9
0x4003544	     0xf8460feffff	                            je 0x40033aa	      9201	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9
0x400354a	      0xb801000000	                              mov eax, 1	      9229	tc-i386.c	FUNCTION_109
0x400354f	      0xe92fffffff	                           jmp 0x4003483	      9229	tc-i386.c	FUNCTION_109
0x4003554	        0x807811ff	            cmp byte [rax + 0x11], 0xff 	      9201	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9
0x4003558	     0xf857afeffff	                           jne 0x40033d8	      9201	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9
0x400355e	      0xe947feffff	                           jmp 0x40033aa	      9201	tc-i386.c	FUNCTION_109	ELSE_3	IF_6	IF_8	IF_9
0x4003563	      0xe800000000	                          call 0x4003568	      9230	tc-i386.c	FUNCTION_109
0x4003568	        0x4883c410	                           add rsp, 0x10	      9230	tc-i386.c	FUNCTION_109
0x400356c	              0x5b	                                 pop rbx	      9230	tc-i386.c	FUNCTION_109
0x400356d	              0x5d	                                 pop rbp	      9230	tc-i386.c	FUNCTION_109
0x400356e	            0x415c	                                 pop r12	      9230	tc-i386.c	FUNCTION_109
0x4003570	            0x415d	                                 pop r13	      9230	tc-i386.c	FUNCTION_109
0x4003572	            0x415e	                                 pop r14	      9230	tc-i386.c	FUNCTION_109
0x4003574	              0xc3	                                     ret	      9230	tc-i386.c	FUNCTION_109
i386_mach	functions,0:ELSE,6:FOR,0:CALL,11:SWITCH,0:WHILE,0:IF,9:DO,0	71
0x400b4dc	        0x4883ec08	                              sub rsp, 8	      2740	tc-i386.c	ELSE_3	FUNCTION_51
0x400b4e0	    0x488b05000000	            mov rax, qword [0x0400b4e7] 	      2741	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	CALL_1
0x400b4e7	      0xbf00000000	                              mov edi, 0	      2741	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	CALL_1
0x400b4ec	      0xb906000000	                              mov ecx, 6	      2741	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	CALL_1
0x400b4f1	          0x4889c6	                            mov rsi, rax	      2741	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	CALL_1
0x400b4f4	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2741	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	CALL_1
0x400b4f6	           0xf97c1	                                 seta cl	      2741	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	CALL_1
0x400b4f9	           0xf92c2	                                 setb dl	      2741	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	CALL_1
0x400b4fc	            0x38d1	                              cmp cl, dl	      2741	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	CALL_1
0x400b4fe	            0x7577	                           jne 0x400b577	      2741	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	CALL_1
0x400b500	    0x8b1500000000	            mov edx, dword [0x0400b506] 	      2743	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2
0x400b506	          0x83fa0a	                            cmp edx, 0xa	      2743	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2
0x400b509	            0x752b	                           jne 0x400b536	      2743	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2
0x400b50b	        0x80780600	                   cmp byte [rax + 6], 0	      2745	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2	IF_3
0x400b50f	     0xf84cc000000	                            je 0x400b5e1	      2745	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2	IF_3
0x400b515	      0xba05000000	                              mov edx, 5	      2747	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2	CALL_3
0x400b51a	      0xbe00000000	                              mov esi, 0	      2747	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2	CALL_3
0x400b51f	      0xbf00000000	                              mov edi, 0	      2747	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2	CALL_3
0x400b524	      0xe800000000	                          call 0x400b529	      2747	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2	CALL_3
0x400b529	          0x4889c7	                            mov rdi, rax	      2747	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2	CALL_3
0x400b52c	      0xb800000000	                              mov eax, 0	      2747	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2	CALL_3
0x400b531	      0xe800000000	                          call 0x400b536	      2747	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2	CALL_3
0x400b536	          0x83fa0b	                            cmp edx, 0xb	      2750	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4
0x400b539	            0x752b	                           jne 0x400b566	      2750	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4
0x400b53b	        0x80780600	                   cmp byte [rax + 6], 0	      2752	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4	IF_5
0x400b53f	     0xf84a3000000	                            je 0x400b5e8	      2752	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4	IF_5
0x400b545	      0xba05000000	                              mov edx, 5	      2754	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4	CALL_5
0x400b54a	      0xbe00000000	                              mov esi, 0	      2754	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4	CALL_5
0x400b54f	      0xbf00000000	                              mov edi, 0	      2754	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4	CALL_5
0x400b554	      0xe800000000	                          call 0x400b559	      2754	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4	CALL_5
0x400b559	          0x4889c7	                            mov rdi, rax	      2754	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4	CALL_5
0x400b55c	      0xb800000000	                              mov eax, 0	      2754	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4	CALL_5
0x400b561	      0xe800000000	                          call 0x400b566	      2754	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4	CALL_5
0x400b566	        0x80780601	                   cmp byte [rax + 6], 1	      2760	tc-i386.c	FUNCTION_51	IF_1
0x400b56a	          0x4819c0	                            sbb rax, rax	      2760	tc-i386.c	FUNCTION_51	IF_1
0x400b56d	        0x4883e0f8	             and rax, 0xfffffffffffffff8	      2760	tc-i386.c	FUNCTION_51	IF_1
0x400b571	        0x4883c010	                           add rax, 0x10	      2760	tc-i386.c	FUNCTION_51	IF_1
0x400b575	            0xeb76	                           jmp 0x400b5ed	      2760	tc-i386.c	FUNCTION_51	IF_1
0x400b577	      0xbf00000000	                              mov edi, 0	      2762	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_6
0x400b57c	      0xb905000000	                              mov ecx, 5	      2762	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_6
0x400b581	          0x4889c6	                            mov rsi, rax	      2762	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_6
0x400b584	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2762	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_6
0x400b586	           0xf97c1	                                 seta cl	      2762	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_6
0x400b589	           0xf92c2	                                 setb dl	      2762	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_6
0x400b58c	            0x38d1	                              cmp cl, dl	      2762	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_6
0x400b58e	            0x7419	                            je 0x400b5a9	      2762	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_6
0x400b590	      0xbf00000000	                              mov edi, 0	      2763	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_7
0x400b595	      0xb906000000	                              mov ecx, 6	      2763	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_7
0x400b59a	          0x4889c6	                            mov rsi, rax	      2763	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_7
0x400b59d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2763	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_7
0x400b59f	           0xf97c2	                                 seta dl	      2763	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_7
0x400b5a2	           0xf92c0	                                 setb al	      2763	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_7
0x400b5a5	            0x38c2	                              cmp dl, al	      2763	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_7
0x400b5a7	            0x7517	                           jne 0x400b5c0	      2763	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	CALL_7
0x400b5a9	    0x833d00000000	            cmp dword [0x0400b5b0], 0xc 	      2772	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	ELSE_5
0x400b5b0	      0xba04000000	                              mov edx, 4	      2772	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	ELSE_5
0x400b5b5	      0xb804010000	                          mov eax, 0x104	      2772	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	ELSE_5
0x400b5ba	        0x480f45c2	                         cmovne rax, rdx	      2772	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	ELSE_5
0x400b5be	            0xeb2d	                           jmp 0x400b5ed	      2772	tc-i386.c	FUNCTION_51	ELSE_4	IF_7	ELSE_5
0x400b5c0	      0xba05000000	                              mov edx, 5	      2775	tc-i386.c	FUNCTION_51	ELSE_3	CALL_11
0x400b5c5	      0xbe00000000	                              mov esi, 0	      2775	tc-i386.c	FUNCTION_51	ELSE_3	CALL_11
0x400b5ca	      0xbf00000000	                              mov edi, 0	      2775	tc-i386.c	FUNCTION_51	ELSE_3	CALL_11
0x400b5cf	      0xe800000000	                          call 0x400b5d4	      2775	tc-i386.c	FUNCTION_51	ELSE_3	CALL_11
0x400b5d4	          0x4889c7	                            mov rdi, rax	      2775	tc-i386.c	FUNCTION_51	ELSE_3	CALL_11
0x400b5d7	      0xb800000000	                              mov eax, 0	      2775	tc-i386.c	FUNCTION_51	ELSE_3	CALL_11
0x400b5dc	      0xe800000000	                          call 0x400b5e1	      2775	tc-i386.c	FUNCTION_51	ELSE_3	CALL_11
0x400b5e1	      0xb820000000	                           mov eax, 0x20	      2748	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2
0x400b5e6	            0xeb05	                           jmp 0x400b5ed	      2748	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	IF_2
0x400b5e8	      0xb840000000	                           mov eax, 0x40	      2755	tc-i386.c	ELSE_3	FUNCTION_51	IF_1	ELSE_1	IF_4
0x400b5ed	        0x4883c408	                              add rsp, 8	      2776	tc-i386.c	FUNCTION_51	ELSE_3
0x400b5f1	              0xc3	                                     ret	      2776	tc-i386.c	FUNCTION_51	ELSE_3
md_convert_frag	functions,0:ELSE,1:FOR,0:CALL,7:SWITCH,1:WHILE,0:IF,3:DO,0	125
0x400eaa1	            0x4156	                                push r14	      9857	tc-i386.c	FUNCTION_116
0x400eaa3	            0x4155	                                push r13	      9857	tc-i386.c	FUNCTION_116
0x400eaa5	            0x4154	                                push r12	      9857	tc-i386.c	FUNCTION_116
0x400eaa7	              0x55	                                push rbp	      9857	tc-i386.c	FUNCTION_116
0x400eaa8	              0x53	                                push rbx	      9857	tc-i386.c	FUNCTION_116
0x400eaa9	          0x4889d3	                            mov rbx, rdx	      9857	tc-i386.c	FUNCTION_116
0x400eaac	        0x4c8b6230	            mov r12, qword [rdx + 0x30] 	      9865	tc-i386.c	FUNCTION_116
0x400eab0	        0x488b7a28	            mov rdi, qword [rdx + 0x28] 	      9868	tc-i386.c	FUNCTION_116	CALL_1
0x400eab4	      0xe800000000	                          call 0x400eab9	      9868	tc-i386.c	FUNCTION_116	CALL_1
0x400eab9	        0x48034320	             add rax, qword [rbx + 0x20]	      9874	tc-i386.c	FUNCTION_116
0x400eabd	          0x4889c5	                            mov rbp, rax	      9874	tc-i386.c	FUNCTION_116
0x400eac0	        0x482b6b10	             sub rbp, qword [rbx + 0x10]	      9874	tc-i386.c	FUNCTION_116
0x400eac4	          0x482b2b	                    sub rbp, qword [rbx]	      9874	tc-i386.c	FUNCTION_116
0x400eac7	          0x8b4360	            mov eax, dword [rbx + 0x60] 	      9876	tc-i386.c	FUNCTION_116	IF_1
0x400eaca	            0xa802	                              test al, 2	      9876	tc-i386.c	FUNCTION_116	IF_1
0x400eacc	            0x750f	                           jne 0x400eadd	      9876	tc-i386.c	FUNCTION_116	IF_1
0x400eace	        0x4983c401	                              add r12, 1	      9880	tc-i386.c	FUNCTION_116	IF_1
0x400ead2	    0x41bd01000000	                             mov r13d, 1	      9879	tc-i386.c	FUNCTION_116	IF_1
0x400ead8	      0xe9ff000000	                           jmp 0x400ebdc	      9879	tc-i386.c	FUNCTION_116	IF_1
0x400eadd	    0x833d00000000	               cmp dword [0x0400eae4], 0	      9884	tc-i386.c	FUNCTION_116	ELSE_1	IF_2
0x400eae4	            0x742f	                            je 0x400eb15	      9884	tc-i386.c	FUNCTION_116	ELSE_1	IF_2
0x400eae6	          0xc1e802	                              shr eax, 2	      9885	tc-i386.c	FUNCTION_116	ELSE_1	IF_2
0x400eae9	            0x85c0	                           test eax, eax	      9885	tc-i386.c	FUNCTION_116	ELSE_1	IF_2
0x400eaeb	            0x7428	                            je 0x400eb15	      9885	tc-i386.c	FUNCTION_116	ELSE_1	IF_2
0x400eaed	      0xba05000000	                              mov edx, 5	      9887	tc-i386.c	FUNCTION_116	ELSE_1	CALL_3
0x400eaf2	      0xbe00000000	                              mov esi, 0	      9887	tc-i386.c	FUNCTION_116	ELSE_1	CALL_3
0x400eaf7	      0xbf00000000	                              mov edi, 0	      9887	tc-i386.c	FUNCTION_116	ELSE_1	CALL_3
0x400eafc	      0xe800000000	                          call 0x400eb01	      9887	tc-i386.c	FUNCTION_116	ELSE_1	CALL_3
0x400eb01	          0x8b7348	            mov esi, dword [rbx + 0x48] 	      9886	tc-i386.c	FUNCTION_116	ELSE_1	IF_2	CALL_2
0x400eb04	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	      9886	tc-i386.c	FUNCTION_116	ELSE_1	IF_2	CALL_2
0x400eb08	          0x4889c2	                            mov rdx, rax	      9886	tc-i386.c	FUNCTION_116	ELSE_1	IF_2	CALL_2
0x400eb0b	      0xb800000000	                              mov eax, 0	      9886	tc-i386.c	FUNCTION_116	ELSE_1	IF_2	CALL_2
0x400eb10	      0xe800000000	                          call 0x400eb15	      9886	tc-i386.c	FUNCTION_116	ELSE_1	IF_2	CALL_2
0x400eb15	        0x448b6b60	           mov r13d, dword [rbx + 0x60] 	      9889	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb19	        0x4183fd0b	                           cmp r13d, 0xb	      9889	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb1d	     0xf878b000000	                            ja 0x400ebae	      9889	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb23	          0x4489e8	                           mov eax, r13d	      9889	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb26	    0xff24c5000000	                       jmp qword [rax*8]	      9889	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb2d	      0x41c60424e9	                    mov byte [r12], 0xe9	      9893	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb32	        0x4983c401	                              add r12, 1	      9894	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb36	    0x41bd04000000	                             mov r13d, 4	      9892	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb3c	      0xe99b000000	                           jmp 0x400ebdc	      9895	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb41	      0x41c60424e9	                    mov byte [r12], 0xe9	      9899	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb46	        0x4983c401	                              add r12, 1	      9900	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb4a	    0x41bd02000000	                             mov r13d, 2	      9898	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb50	      0xe987000000	                           jmp 0x400ebdc	      9901	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb55	      0x410fb60424	                   movzx eax, byte [r12]	      9906	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb5a	          0x83c010	                           add eax, 0x10	      9906	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb5d	      0x4188442401	                  mov byte [r12 + 1], al	      9906	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb62	      0x41c604240f	                     mov byte [r12], 0xf	      9907	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb67	        0x4983c402	                              add r12, 2	      9908	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb6b	    0x41bd05000000	                             mov r13d, 5	      9905	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb71	            0xeb69	                           jmp 0x400ebdc	      9909	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb73	      0x410fb60424	                   movzx eax, byte [r12]	      9913	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb78	          0x83c010	                           add eax, 0x10	      9913	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb7b	      0x4188442401	                  mov byte [r12 + 1], al	      9913	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb80	      0x41c604240f	                     mov byte [r12], 0xf	      9914	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb85	        0x4983c402	                              add r12, 2	      9915	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb89	    0x41bd03000000	                             mov r13d, 3	      9912	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb8f	            0xeb4b	                           jmp 0x400ebdc	      9916	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb91	      0x4180342401	                       xor byte [r12], 1	      9920	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb96	    0x41c644240103	                   mov byte [r12 + 1], 3	      9921	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eb9c	    0x41c6442402e9	                mov byte [r12 + 2], 0xe9	      9922	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eba2	        0x4983c403	                              add r12, 3	      9923	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400eba6	    0x41bd04000000	                             mov r13d, 4	      9919	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400ebac	            0xeb2e	                           jmp 0x400ebdc	      9924	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1
0x400ebae	      0xba05000000	                              mov edx, 5	      9927	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1	CALL_4
0x400ebb3	      0xbe00000000	                              mov esi, 0	      9927	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1	CALL_4
0x400ebb8	      0xbf00000000	                              mov edi, 0	      9927	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1	CALL_4
0x400ebbd	      0xe800000000	                          call 0x400ebc2	      9927	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1	CALL_4
0x400ebc2	          0x4489ee	                           mov esi, r13d	      9927	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1	CALL_4
0x400ebc5	      0xb900000000	                              mov ecx, 0	      9927	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1	CALL_4
0x400ebca	      0xbac7260000	                         mov edx, 0x26c7	      9927	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1	CALL_4
0x400ebcf	          0x4889c7	                            mov rdi, rax	      9927	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1	CALL_4
0x400ebd2	      0xb800000000	                              mov eax, 0	      9927	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1	CALL_4
0x400ebd7	      0xe800000000	                          call 0x400ebdc	      9927	tc-i386.c	FUNCTION_116	ELSE_1	SWITCH_1	CALL_4
0x400ebdc	          0x8b4360	            mov eax, dword [rbx + 0x60] 	      9935	tc-i386.c	FUNCTION_116	IF_3
0x400ebdf	          0x83e003	                              and eax, 3	      9935	tc-i386.c	FUNCTION_116	IF_3
0x400ebe2	          0x83f802	                              cmp eax, 2	      9935	tc-i386.c	FUNCTION_116	IF_3
0x400ebe5	            0x7564	                           jne 0x400ec4b	      9935	tc-i386.c	FUNCTION_116	IF_3
0x400ebe7	      0xba04000000	                              mov edx, 4	      9947	tc-i386.c	FUNCTION_116	CALL_7
0x400ebec	    0x833d00000000	               cmp dword [0x0400ebf3], 0	      9936	tc-i386.c	FUNCTION_116	IF_3
0x400ebf3	            0x746c	                            je 0x400ec61	      9936	tc-i386.c	FUNCTION_116	IF_3
0x400ebf5	          0x4589ee	                          mov r14d, r13d	      9937	tc-i386.c	FUNCTION_116	IF_3
0x400ebf8	          0x4889ea	                            mov rdx, rbp	      9937	tc-i386.c	FUNCTION_116	IF_3
0x400ebfb	          0x4c29f2	                            sub rdx, r14	      9937	tc-i386.c	FUNCTION_116	IF_3
0x400ebfe	      0xb800000080	                     mov eax, 0x80000000	      9937	tc-i386.c	FUNCTION_116	IF_3
0x400ec03	          0x4801d0	                            add rax, rdx	      9937	tc-i386.c	FUNCTION_116	IF_3
0x400ec06	      0xba04000000	                              mov edx, 4	      9947	tc-i386.c	FUNCTION_116	CALL_7
0x400ec0b	      0xb9ffffffff	                     mov ecx, 0xffffffff	      9937	tc-i386.c	FUNCTION_116	IF_3
0x400ec10	          0x4839c8	                            cmp rax, rcx	      9937	tc-i386.c	FUNCTION_116	IF_3
0x400ec13	            0x764c	                           jbe 0x400ec61	      9937	tc-i386.c	FUNCTION_116	IF_3
0x400ec15	      0xba05000000	                              mov edx, 5	      9942	tc-i386.c	FUNCTION_116	IF_3	CALL_6
0x400ec1a	      0xbe00000000	                              mov esi, 0	      9942	tc-i386.c	FUNCTION_116	IF_3	CALL_6
0x400ec1f	      0xbf00000000	                              mov edi, 0	      9942	tc-i386.c	FUNCTION_116	IF_3	CALL_6
0x400ec24	      0xe800000000	                          call 0x400ec29	      9942	tc-i386.c	FUNCTION_116	IF_3	CALL_6
0x400ec29	          0x8b7348	            mov esi, dword [rbx + 0x48] 	      9941	tc-i386.c	FUNCTION_116	IF_3	CALL_5
0x400ec2c	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	      9941	tc-i386.c	FUNCTION_116	IF_3	CALL_5
0x400ec30	          0x4889c2	                            mov rdx, rax	      9941	tc-i386.c	FUNCTION_116	IF_3	CALL_5
0x400ec33	      0xb800000000	                              mov eax, 0	      9941	tc-i386.c	FUNCTION_116	IF_3	CALL_5
0x400ec38	      0xe800000000	                          call 0x400ec3d	      9941	tc-i386.c	FUNCTION_116	IF_3	CALL_5
0x400ec3d	          0x8b4360	            mov eax, dword [rbx + 0x60] 	      9949	tc-i386.c	FUNCTION_116
0x400ec40	          0x83e003	                              and eax, 3	      9949	tc-i386.c	FUNCTION_116
0x400ec43	          0x83f802	                              cmp eax, 2	      9947	tc-i386.c	FUNCTION_116	CALL_7
0x400ec46	            0x7411	                            je 0x400ec59	      9947	tc-i386.c	FUNCTION_116	CALL_7
0x400ec48	          0x4c89f5	                            mov rbp, r14	      9944	tc-i386.c	FUNCTION_116	IF_3
0x400ec4b	          0x83f803	                              cmp eax, 3	      9949	tc-i386.c	FUNCTION_116
0x400ec4e	           0xf94c2	                                 sete dl	      9949	tc-i386.c	FUNCTION_116
0x400ec51	           0xfb6d2	                           movzx edx, dl	      9949	tc-i386.c	FUNCTION_116
0x400ec54	          0x83c201	                              add edx, 1	      9949	tc-i386.c	FUNCTION_116
0x400ec57	            0xeb08	                           jmp 0x400ec61	      9949	tc-i386.c	FUNCTION_116
0x400ec59	          0x4c89f5	                            mov rbp, r14	      9944	tc-i386.c	FUNCTION_116	IF_3
0x400ec5c	      0xba04000000	                              mov edx, 4	      9947	tc-i386.c	FUNCTION_116	CALL_7
0x400ec61	          0x4589ed	                          mov r13d, r13d	      9948	tc-i386.c	FUNCTION_116
0x400ec64	          0x4889ee	                            mov rsi, rbp	      9947	tc-i386.c	FUNCTION_116	CALL_7
0x400ec67	          0x4c29ee	                            sub rsi, r13	      9947	tc-i386.c	FUNCTION_116	CALL_7
0x400ec6a	          0x4c89e7	                            mov rdi, r12	      9947	tc-i386.c	FUNCTION_116	CALL_7
0x400ec6d	      0xe800000000	                          call 0x400ec72	      9947	tc-i386.c	FUNCTION_116	CALL_7
0x400ec72	        0x4c016b10	            add qword [rbx + 0x10], r13 	      9950	tc-i386.c	FUNCTION_116
0x400ec76	              0x5b	                                 pop rbx	      9951	tc-i386.c	FUNCTION_116
0x400ec77	              0x5d	                                 pop rbp	      9951	tc-i386.c	FUNCTION_116
0x400ec78	            0x415c	                                 pop r12	      9951	tc-i386.c	FUNCTION_116
0x400ec7a	            0x415d	                                 pop r13	      9951	tc-i386.c	FUNCTION_116
0x400ec7c	            0x415e	                                 pop r14	      9951	tc-i386.c	FUNCTION_116
0x400ec7e	              0xc3	                                     ret	      9951	tc-i386.c	FUNCTION_116
x86_dwarf2_addr_size	functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0:IF,1:DO,0	9
0x4011155	      0xb804000000	                              mov eax, 4	     11567	tc-i386.c	
0x401115a	    0x833d00000000	               cmp dword [0x04011161], 2	     11566	tc-i386.c	
0x4011161	            0x7417	                            je 0x401117a	     11566	tc-i386.c	
0x4011163	        0x4883ec08	                              sub rsp, 8	     11564	tc-i386.c	FUNCTION_138
0x4011167	    0x488b3d000000	            mov rdi, qword [0x0401116e] 	     11569	tc-i386.c	
0x401116e	      0xe800000000	                          call 0x4011173	     11569	tc-i386.c	
0x4011173	          0xc1e803	                              shr eax, 3	     11569	tc-i386.c	
0x4011176	        0x4883c408	                              add rsp, 8	     11570	tc-i386.c	FUNCTION_139
0x401117a	            0xf3c3	                                     ret	     11570	tc-i386.c	FUNCTION_139
parse_operands	functions,0:ELSE,6:FOR,0:CALL,19:SWITCH,0:WHILE,2:IF,19:DO,0	1731
0x40071d9	            0x4157	                                push r15	      4559	tc-i386.c	FUNCTION_70
0x40071db	            0x4156	                                push r14	      4559	tc-i386.c	FUNCTION_70
0x40071dd	            0x4155	                                push r13	      4559	tc-i386.c	FUNCTION_70
0x40071df	            0x4154	                                push r12	      4559	tc-i386.c	FUNCTION_70
0x40071e1	              0x55	                                push rbp	      4559	tc-i386.c	FUNCTION_70
0x40071e2	              0x53	                                push rbx	      4559	tc-i386.c	FUNCTION_70
0x40071e3	    0x4881ec880000	                           sub rsp, 0x88	      4559	tc-i386.c	FUNCTION_70
0x40071ea	          0x4989ff	                            mov r15, rdi	      4559	tc-i386.c	FUNCTION_70
0x40071ed	      0x4889742410	             mov qword [rsp + 0x10], rsi	      4559	tc-i386.c	FUNCTION_70
0x40071f2	    0x64488b042528	                mov rax, qword fs:[0x28]	      4559	tc-i386.c	FUNCTION_70
0x40071fb	      0x4889442478	             mov qword [rsp + 0x78], rax	      4559	tc-i386.c	FUNCTION_70
0x4007200	            0x31c0	                            xor eax, eax	      4559	tc-i386.c	FUNCTION_70
0x4007202	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      4563	tc-i386.c	FUNCTION_70
0x400720a	      0xe9fc1d0000	                           jmp 0x400900b	      4568	tc-i386.c	FUNCTION_70	WHILE_1
0x400720f	            0x3c20	                            cmp al, 0x20	      4572	tc-i386.c	FUNCTION_70	WHILE_1	IF_1
0x4007211	           0xf94c0	                                 sete al	      4572	tc-i386.c	FUNCTION_70	WHILE_1	IF_1
0x4007214	           0xfb6c0	                           movzx eax, al	      4572	tc-i386.c	FUNCTION_70	WHILE_1	IF_1
0x4007217	          0x4901c7	                            add r15, rax	      4572	tc-i386.c	FUNCTION_70	WHILE_1	IF_1
0x400721a	        0x410fb607	                   movzx eax, byte [r15]	      4573	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x400721e	            0x3c22	                            cmp al, 0x22	      4573	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x4007220	           0xf95c1	                                setne cl	      4573	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x4007223	            0x84c0	                             test al, al	      4573	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x4007225	           0xf95c2	                                setne dl	      4573	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x4007228	            0x84d1	                             test cl, dl	      4573	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x400722a	            0x740c	                            je 0x4007238	      4573	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x400722c	           0xfb6d0	                           movzx edx, al	      4573	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x400722f	    0x80ba00000000	                       cmp byte [rdx], 0	      4573	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x4007236	            0x7413	                            je 0x400724b	      4573	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x4007238	    0x8b2d00000000	            mov ebp, dword [0x0400723e] 	      4606	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7
0x400723e	          0x4c89fb	                            mov rbx, r15	      4606	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7
0x4007241	      0xba00000000	                              mov edx, 0	      4606	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7
0x4007246	      0xe947010000	                           jmp 0x4007392	      4606	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7
0x400724b	    0x8b3500000000	            mov esi, dword [0x04007251] 	      4575	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_2
0x4007251	          0x8d5e01	                      lea ebx, [rsi + 1]	      4575	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_2
0x4007254	           0xfbef8	                           movsx edi, al	      4575	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_2
0x4007257	      0xe861ddffff	                 call sym.output_invalid	      4575	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_2
0x400725c	          0x4889c5	                            mov rbp, rax	      4575	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_2
0x400725f	      0xba05000000	                              mov edx, 5	      4575	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_2
0x4007264	      0xbe00000000	                              mov esi, 0	      4575	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_2
0x4007269	      0xbf00000000	                              mov edi, 0	      4575	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_2
0x400726e	      0xe800000000	                          call 0x4007273	      4575	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_2
0x4007273	            0x89da	                            mov edx, ebx	      4575	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_2
0x4007275	          0x4889ee	                            mov rsi, rbp	      4575	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_2
0x4007278	          0x4889c7	                            mov rdi, rax	      4575	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_2
0x400727b	      0xb800000000	                              mov eax, 0	      4575	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_2
0x4007280	      0xe800000000	                          call 0x4007285	      4575	tc-i386.c	FUNCTION_70	WHILE_1	IF_2	CALL_2
0x4007285	      0xb800000000	                              mov eax, 0	      4578	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x400728a	      0xe9921d0000	                           jmp 0x4009021	      4578	tc-i386.c	FUNCTION_70	WHILE_1	IF_2
0x400728f	            0x84c0	                             test al, al	      4584	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3
0x4007291	            0x7575	                           jne 0x4007308	      4584	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3
0x4007293	      0xe90d010000	                           jmp 0x40073a5	      4584	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3
0x4007298	            0x85ed	                           test ebp, ebp	      4588	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	IF_5
0x400729a	            0x7536	                           jne 0x40072d2	      4588	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	IF_5
0x400729c	    0x8b0500000000	            mov eax, dword [0x040072a2] 	      4589	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	IF_5	CALL_5
0x40072a2	          0x8d5801	                      lea ebx, [rax + 1]	      4589	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	IF_5	CALL_5
0x40072a5	      0xba05000000	                              mov edx, 5	      4589	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	IF_5	CALL_5
0x40072aa	      0xbe00000000	                              mov esi, 0	      4589	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	IF_5	CALL_5
0x40072af	      0xbf00000000	                              mov edi, 0	      4589	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	IF_5	CALL_5
0x40072b4	      0xe800000000	                          call 0x40072b9	      4589	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	IF_5	CALL_5
0x40072b9	            0x89de	                            mov esi, ebx	      4589	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	IF_5	CALL_5
0x40072bb	          0x4889c7	                            mov rdi, rax	      4589	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	IF_5	CALL_5
0x40072be	      0xb800000000	                              mov eax, 0	      4589	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	IF_5	CALL_5
0x40072c3	      0xe800000000	                          call 0x40072c8	      4589	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	IF_5	CALL_5
0x40072c8	      0xb800000000	                              mov eax, 0	      4594	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4
0x40072cd	      0xe94f1d0000	                           jmp 0x4009021	      4594	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4
0x40072d2	    0x8b0500000000	            mov eax, dword [0x040072d8] 	      4592	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	ELSE_1	CALL_7
0x40072d8	          0x8d5801	                      lea ebx, [rax + 1]	      4592	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	ELSE_1	CALL_7
0x40072db	      0xba05000000	                              mov edx, 5	      4592	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	ELSE_1	CALL_7
0x40072e0	      0xbe00000000	                              mov esi, 0	      4592	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	ELSE_1	CALL_7
0x40072e5	      0xbf00000000	                              mov edi, 0	      4592	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	ELSE_1	CALL_7
0x40072ea	      0xe800000000	                          call 0x40072ef	      4592	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	ELSE_1	CALL_7
0x40072ef	            0x89de	                            mov esi, ebx	      4592	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	ELSE_1	CALL_7
0x40072f1	          0x4889c7	                            mov rdi, rax	      4592	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	ELSE_1	CALL_7
0x40072f4	      0xb800000000	                              mov eax, 0	      4592	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	ELSE_1	CALL_7
0x40072f9	      0xe800000000	                          call 0x40072fe	      4592	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4	ELSE_1	CALL_7
0x40072fe	      0xb800000000	                              mov eax, 0	      4594	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4
0x4007303	      0xe9191d0000	                           jmp 0x4009021	      4594	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3	IF_4
0x4007308	           0xfb6c8	                           movzx ecx, al	      4599	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6
0x400730b	    0x80b900000000	                       cmp byte [rcx], 0	      4599	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6
0x4007312	            0x754e	                           jne 0x4007362	      4599	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6
0x4007314	            0x89c1	                            mov ecx, eax	      4599	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6
0x4007316	          0x83e1fd	                     and ecx, 0xfffffffd	      4599	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6
0x4007319	          0x80f920	                            cmp cl, 0x20	      4599	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6
0x400731c	            0x7444	                            je 0x4007362	      4599	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6
0x400731e	    0x8b3500000000	            mov esi, dword [0x04007324] 	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x4007324	          0x8d5e01	                      lea ebx, [rsi + 1]	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x4007327	           0xfbef8	                           movsx edi, al	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x400732a	      0xe88edcffff	                 call sym.output_invalid	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x400732f	          0x4889c5	                            mov rbp, rax	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x4007332	      0xba05000000	                              mov edx, 5	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x4007337	      0xbe00000000	                              mov esi, 0	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x400733c	      0xbf00000000	                              mov edi, 0	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x4007341	      0xe800000000	                          call 0x4007346	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x4007346	            0x89da	                            mov edx, ebx	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x4007348	          0x4889ee	                            mov rsi, rbp	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x400734b	          0x4889c7	                            mov rdi, rax	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x400734e	      0xb800000000	                              mov eax, 0	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x4007353	      0xe800000000	                          call 0x4007358	      4601	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6	CALL_9
0x4007358	      0xb800000000	                              mov eax, 0	      4604	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6
0x400735d	      0xe9bf1c0000	                           jmp 0x4009021	      4604	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_2	ELSE_3	IF_6
0x4007362	            0x85ed	                           test ebp, ebp	      4606	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7
0x4007364	            0x7515	                           jne 0x400737b	      4606	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7
0x4007366	            0x3c28	                            cmp al, 0x28	      4608	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7	IF_8
0x4007368	            0x7505	                           jne 0x400736f	      4608	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7	IF_8
0x400736a	          0x83c201	                              add edx, 1	      4609	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7	IF_8
0x400736d	            0xeb1f	                           jmp 0x400738e	      4609	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7	IF_8
0x400736f	            0x3c29	                            cmp al, 0x29	      4611	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7	IF_9
0x4007371	           0xf94c0	                                 sete al	      4611	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7	IF_9
0x4007374	           0xfb6c0	                           movzx eax, al	      4611	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7	IF_9
0x4007377	            0x29c2	                            sub edx, eax	      4611	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7	IF_9
0x4007379	            0xeb13	                           jmp 0x400738e	      4611	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_7	IF_9
0x400737b	            0x3c5b	                            cmp al, 0x5b	      4615	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_4	IF_10
0x400737d	            0x7505	                           jne 0x4007384	      4615	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_4	IF_10
0x400737f	          0x83c201	                              add edx, 1	      4616	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_4	IF_10
0x4007382	            0xeb0a	                           jmp 0x400738e	      4616	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_4	IF_10
0x4007384	            0x3c5d	                            cmp al, 0x5d	      4618	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_4	IF_11
0x4007386	           0xf94c0	                                 sete al	      4618	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_4	IF_11
0x4007389	           0xfb6c0	                           movzx eax, al	      4618	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_4	IF_11
0x400738c	            0x29c2	                            sub edx, eax	      4618	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	ELSE_4	IF_11
0x400738e	        0x4883c301	                              add rbx, 1	      4620	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2
0x4007392	            0x85d2	                           test edx, edx	      4582	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2
0x4007394	     0xf85a01c0000	                           jne 0x400903a	      4582	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2
0x400739a	           0xfb603	                   movzx eax, byte [rbx]	      4582	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2
0x400739d	            0x3c2c	                            cmp al, 0x2c	      4582	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2
0x400739f	     0xf85eafeffff	                           jne 0x400728f	      4582	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2
0x40073a5	          0x4939df	                            cmp r15, rbx	      4622	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x40073a8	     0xf84e41b0000	                            je 0x4008f92	      4622	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x40073ae	    0x8b0500000000	            mov eax, dword [0x040073b4] 	      4625	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x40073b4	          0x8d5001	                      lea edx, [rax + 1]	      4625	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x40073b7	    0x891500000000	            mov dword [0x040073bd], edx 	      4625	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x40073bd	    0x890500000000	            mov dword [0x040073c3], eax 	      4625	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x40073c3	          0x83fa05	                              cmp edx, 5	      4626	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_13
0x40073c6	            0x7630	                           jbe 0x40073f8	      4626	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_13
0x40073c8	      0xba05000000	                              mov edx, 5	      4628	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_13	CALL_12
0x40073cd	      0xbe00000000	                              mov esi, 0	      4628	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_13	CALL_12
0x40073d2	      0xbf00000000	                              mov edi, 0	      4628	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_13	CALL_12
0x40073d7	      0xe800000000	                          call 0x40073dc	      4628	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_13	CALL_12
0x40073dc	      0xbe05000000	                              mov esi, 5	      4628	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_13	CALL_12
0x40073e1	          0x4889c7	                            mov rdi, rax	      4628	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_13	CALL_12
0x40073e4	      0xb800000000	                              mov eax, 0	      4628	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_13	CALL_12
0x40073e9	      0xe800000000	                          call 0x40073ee	      4628	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_13	CALL_12
0x40073ee	      0xb800000000	                              mov eax, 0	      4630	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_13
0x40073f3	      0xe9291c0000	                           jmp 0x4009021	      4630	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_13
0x40073f8	          0x4863d0	                         movsxd rdx, eax	      4632	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x40073fb	    0x800cd5000000	                   or byte [rdx*8], 0x40	      4632	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x4007403	    0x488b15000000	            mov rdx, qword [0x0400740a] 	      4634	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x400740a	        0x488d4a01	                      lea rcx, [rdx + 1]	      4634	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x400740e	    0x48890d000000	            mov qword [0x04007415], rcx 	      4634	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x4007415	           0xfb60b	                   movzx ecx, byte [rbx]	      4634	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x4007418	            0x880a	                      mov byte [rdx], cl	      4634	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x400741a	          0xc60300	                       mov byte [rbx], 0	      4634	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x400741d	            0x85ed	                           test ebp, ebp	      4636	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_14
0x400741f	     0xf84620e0000	                            je 0x4008287	      4636	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_14
0x4007425	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4638	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_14	CALL_13
0x400742a	      0xe89990ffff	            call sym.intel_float_operand	      4638	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_14	CALL_13
0x400742f	        0x89442420	             mov dword [rsp + 0x20], eax	      4638	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_14	CALL_13
0x4007433	          0x4c89ff	                            mov rdi, r15	       556	tc-i386-intel.c	FUNCTION_181	IF_1	CALL_1
0x4007436	      0xe8f6b7ffff	               call sym.RC_SAE_immediate	       556	tc-i386-intel.c	FUNCTION_181	IF_1	CALL_1
0x400743b	            0x89c5	                            mov ebp, eax	       556	tc-i386-intel.c	FUNCTION_181	IF_1	CALL_1
0x400743d	            0x85c0	                           test eax, eax	       556	tc-i386-intel.c	FUNCTION_181	IF_1	CALL_1
0x400743f	     0xf852a0e0000	                           jne 0x400826f	       556	tc-i386-intel.c	FUNCTION_181	IF_1	CALL_1
0x4007445	    0xc70500000000	               mov dword [0x0400744f], 1	       560	tc-i386-intel.c	FUNCTION_181
0x400744f	    0xc70500000000	               mov dword [0x04007459], 0	       561	tc-i386-intel.c	FUNCTION_181
0x4007459	    0xc70500000000	               mov dword [0x04007463], 0	       562	tc-i386-intel.c	FUNCTION_181
0x4007463	    0xc70500000000	               mov dword [0x0400746d], 0	       563	tc-i386-intel.c	FUNCTION_181
0x400746d	    0x48c705000000	               mov qword [0x04007478], 0	       564	tc-i386-intel.c	FUNCTION_181
0x4007478	    0x48c705000000	               mov qword [0x04007483], 0	       565	tc-i386-intel.c	FUNCTION_181
0x4007483	    0x48c705000000	               mov qword [0x0400748e], 0	       566	tc-i386-intel.c	FUNCTION_181
0x400748e	    0xc70500000000	     mov dword [0x04007498], 0xffffffff 	      1533	tc-i386.c	FUNCTION_8	SWITCH_1
0x4007498	    0xc70500000000	     mov dword [0x040074a2], 0xffffffff 	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x40074a2	    0x833d00000000	               cmp dword [0x040074a9], 0	       568	tc-i386-intel.c	FUNCTION_181	CALL_3
0x40074a9	            0x7414	                            je 0x40074bf	       568	tc-i386-intel.c	FUNCTION_181	CALL_3
0x40074ab	      0xba00000000	                              mov edx, 0	       568	tc-i386-intel.c	FUNCTION_181	CALL_3
0x40074b0	      0xbe38020000	                          mov esi, 0x238	       568	tc-i386-intel.c	FUNCTION_181	CALL_3
0x40074b5	      0xbf00000000	                              mov edi, 0	       568	tc-i386-intel.c	FUNCTION_181	CALL_3
0x40074ba	      0xe800000000	                          call 0x40074bf	       568	tc-i386-intel.c	FUNCTION_181	CALL_3
0x40074bf	    0x833d00000000	               cmp dword [0x040074c6], 0	       569	tc-i386-intel.c	FUNCTION_181	CALL_4
0x40074c6	            0x7414	                            je 0x40074dc	       569	tc-i386-intel.c	FUNCTION_181	CALL_4
0x40074c8	      0xba00000000	                              mov edx, 0	       569	tc-i386-intel.c	FUNCTION_181	CALL_4
0x40074cd	      0xbe39020000	                          mov esi, 0x239	       569	tc-i386-intel.c	FUNCTION_181	CALL_4
0x40074d2	      0xbf00000000	                              mov edi, 0	       569	tc-i386-intel.c	FUNCTION_181	CALL_4
0x40074d7	      0xe800000000	                          call 0x40074dc	       569	tc-i386-intel.c	FUNCTION_181	CALL_4
0x40074dc	    0x833d00000000	               cmp dword [0x040074e3], 0	       570	tc-i386-intel.c	FUNCTION_181	CALL_5
0x40074e3	            0x7414	                            je 0x40074f9	       570	tc-i386-intel.c	FUNCTION_181	CALL_5
0x40074e5	      0xba00000000	                              mov edx, 0	       570	tc-i386-intel.c	FUNCTION_181	CALL_5
0x40074ea	      0xbe3a020000	                          mov esi, 0x23a	       570	tc-i386-intel.c	FUNCTION_181	CALL_5
0x40074ef	      0xbf00000000	                              mov edi, 0	       570	tc-i386-intel.c	FUNCTION_181	CALL_5
0x40074f4	      0xe800000000	                          call 0x40074f9	       570	tc-i386-intel.c	FUNCTION_181	CALL_5
0x40074f9	    0x4c8b2d000000	            mov r13, qword [0x04007500] 	       572	tc-i386-intel.c	FUNCTION_181
0x4007500	          0x4c89ff	                            mov rdi, r15	       573	tc-i386-intel.c	FUNCTION_181	CALL_6
0x4007503	      0xe800000000	                          call 0x4007508	       573	tc-i386-intel.c	FUNCTION_181	CALL_6
0x4007508	          0x4989c4	                            mov r12, rax	       573	tc-i386-intel.c	FUNCTION_181	CALL_6
0x400750b	    0x488905000000	            mov qword [0x04007512], rax 	       573	tc-i386-intel.c	FUNCTION_181	CALL_6
0x4007512	    0xc70500000000	     mov dword [0x0400751c], 0xffffffff 	       575	tc-i386-intel.c	FUNCTION_181
0x400751c	    0x48c744245000	               mov qword [rsp + 0x50], 0	        90	string3.h	FUNCTION_164	CALL_6
0x4007525	    0x48c744245800	               mov qword [rsp + 0x58], 0	        90	string3.h	FUNCTION_164	CALL_6
0x400752e	    0x48c744246000	               mov qword [rsp + 0x60], 0	        90	string3.h	FUNCTION_164	CALL_6
0x4007537	    0x48c744246800	               mov qword [rsp + 0x68], 0	        90	string3.h	FUNCTION_164	CALL_6
0x4007540	      0xba01000000	                              mov edx, 1	       577	tc-i386-intel.c	FUNCTION_181	CALL_8
0x4007545	      0x488d742450	                   lea rsi, [rsp + 0x50]	       577	tc-i386-intel.c	FUNCTION_181	CALL_8
0x400754a	      0xbf00000000	                              mov edi, 0	       577	tc-i386-intel.c	FUNCTION_181	CALL_8
0x400754f	      0xe800000000	                          call 0x4007554	       577	tc-i386-intel.c	FUNCTION_181	CALL_8
0x4007554	      0x4889442428	             mov qword [rsp + 0x28], rax	       577	tc-i386-intel.c	FUNCTION_181	CALL_8
0x4007559	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	       578	tc-i386-intel.c	FUNCTION_181	CALL_9
0x400755e	      0xe8e9f1ffff	            call sym.i386_intel_simplify	       578	tc-i386-intel.c	FUNCTION_181	CALL_9
0x4007563	        0x89442408	                mov dword [rsp + 8], eax	       578	tc-i386-intel.c	FUNCTION_181	CALL_9
0x4007567	    0xc70500000000	               mov dword [0x04007571], 1	       579	tc-i386-intel.c	FUNCTION_181
0x4007571	    0x488b05000000	            mov rax, qword [0x04007578] 	       581	tc-i386-intel.c	FUNCTION_181	CALL_10
0x4007578	          0x803820	                    cmp byte [rax], 0x20	       581	tc-i386-intel.c	FUNCTION_181	CALL_10
0x400757b	            0x750b	                           jne 0x4007588	       581	tc-i386-intel.c	FUNCTION_181	CALL_10
0x400757d	        0x4883c001	                              add rax, 1	       581	tc-i386-intel.c	FUNCTION_181	CALL_10
0x4007581	    0x488905000000	            mov qword [0x04007588], rax 	       581	tc-i386-intel.c	FUNCTION_181	CALL_10
0x4007588	    0x488b3d000000	            mov rdi, qword [0x0400758f] 	       584	tc-i386-intel.c	FUNCTION_181	IF_2
0x400758f	          0x803f7b	                    cmp byte [rdi], 0x7b	       584	tc-i386-intel.c	FUNCTION_181	IF_2
0x4007592	            0x751a	                           jne 0x40075ae	       584	tc-i386-intel.c	FUNCTION_181	IF_2
0x4007594	      0xbe00000000	                              mov esi, 0	       586	tc-i386-intel.c	FUNCTION_181	IF_2	CALL_11
0x4007599	      0xe82ee3ffff	            call sym.check_VecOperations	       586	tc-i386-intel.c	FUNCTION_181	IF_2	CALL_11
0x400759e	          0x4885c0	                           test rax, rax	       587	tc-i386-intel.c	FUNCTION_181	IF_2	IF_3
0x40075a1	     0xf84a31a0000	                            je 0x400904a	       587	tc-i386-intel.c	FUNCTION_181	IF_2	IF_3
0x40075a7	    0x488905000000	            mov qword [0x040075ae], rax 	       588	tc-i386-intel.c	FUNCTION_181	IF_2	IF_3
0x40075ae	    0x4c8b35000000	            mov r14, qword [0x040075b5] 	       593	tc-i386-intel.c	FUNCTION_181	ELSE_1	IF_4
0x40075b5	        0x410fb606	                   movzx eax, byte [r14]	       593	tc-i386-intel.c	FUNCTION_181	ELSE_1	IF_4
0x40075b9	    0x80b800000000	                       cmp byte [rax], 0	       593	tc-i386-intel.c	FUNCTION_181	ELSE_1	IF_4
0x40075c0	            0x7539	                           jne 0x40075fb	       593	tc-i386-intel.c	FUNCTION_181	ELSE_1	IF_4
0x40075c2	      0x837c240800	                  cmp dword [rsp + 8], 0	       595	tc-i386-intel.c	FUNCTION_181	ELSE_1	IF_4	IF_5
0x40075c7	     0xf848d000000	                            je 0x400765a	       595	tc-i386-intel.c	FUNCTION_181	ELSE_1	IF_4	IF_5
0x40075cd	      0xba05000000	                              mov edx, 5	       596	tc-i386-intel.c	FUNCTION_181	ELSE_1	IF_4	CALL_13
0x40075d2	      0xbe00000000	                              mov esi, 0	       596	tc-i386-intel.c	FUNCTION_181	ELSE_1	IF_4	CALL_13
0x40075d7	      0xbf00000000	                              mov edi, 0	       596	tc-i386-intel.c	FUNCTION_181	ELSE_1	IF_4	CALL_13
0x40075dc	      0xe800000000	                          call 0x40075e1	       596	tc-i386-intel.c	FUNCTION_181	ELSE_1	IF_4	CALL_13
0x40075e1	          0x4c89f6	                            mov rsi, r14	       596	tc-i386-intel.c	FUNCTION_181	ELSE_1	IF_4	CALL_13
0x40075e4	          0x4889c7	                            mov rdi, rax	       596	tc-i386-intel.c	FUNCTION_181	ELSE_1	IF_4	CALL_13
0x40075e7	      0xb800000000	                              mov eax, 0	       596	tc-i386-intel.c	FUNCTION_181	ELSE_1	IF_4	CALL_13
0x40075ec	      0xe800000000	                          call 0x40075f1	       596	tc-i386-intel.c	FUNCTION_181	ELSE_1	IF_4	CALL_13
0x40075f1	    0xc74424080000	                  mov dword [rsp + 8], 0	       597	tc-i386-intel.c	FUNCTION_181	ELSE_1	IF_4
0x40075f9	            0xeb5f	                           jmp 0x400765a	       597	tc-i386-intel.c	FUNCTION_181	ELSE_1	IF_4
0x40075fb	      0x807c246801	                cmp byte [rsp + 0x68], 1	       599	tc-i386-intel.c	FUNCTION_181	ELSE_2	IF_6
0x4007600	            0x7732	                            ja 0x4007634	       599	tc-i386-intel.c	FUNCTION_181	ELSE_2	IF_6
0x4007602	      0x837c240800	                  cmp dword [rsp + 8], 0	       601	tc-i386-intel.c	FUNCTION_181	ELSE_2	IF_6	IF_7
0x4007607	            0x7451	                            je 0x400765a	       601	tc-i386-intel.c	FUNCTION_181	ELSE_2	IF_6	IF_7
0x4007609	      0xba05000000	                              mov edx, 5	       602	tc-i386-intel.c	FUNCTION_181	ELSE_2	IF_6	CALL_15
0x400760e	      0xbe00000000	                              mov esi, 0	       602	tc-i386-intel.c	FUNCTION_181	ELSE_2	IF_6	CALL_15
0x4007613	      0xbf00000000	                              mov edi, 0	       602	tc-i386-intel.c	FUNCTION_181	ELSE_2	IF_6	CALL_15
0x4007618	      0xe800000000	                          call 0x400761d	       602	tc-i386-intel.c	FUNCTION_181	ELSE_2	IF_6	CALL_15
0x400761d	          0x4889c7	                            mov rdi, rax	       602	tc-i386-intel.c	FUNCTION_181	ELSE_2	IF_6	CALL_15
0x4007620	      0xb800000000	                              mov eax, 0	       602	tc-i386-intel.c	FUNCTION_181	ELSE_2	IF_6	CALL_15
0x4007625	      0xe800000000	                          call 0x400762a	       602	tc-i386-intel.c	FUNCTION_181	ELSE_2	IF_6	CALL_15
0x400762a	    0xc74424080000	                  mov dword [rsp + 8], 0	       603	tc-i386-intel.c	FUNCTION_181	ELSE_2	IF_6
0x4007632	            0xeb26	                           jmp 0x400765a	       603	tc-i386-intel.c	FUNCTION_181	ELSE_2	IF_6
0x4007634	    0x833d00000000	               cmp dword [0x0400763b], 0	       606	tc-i386-intel.c	FUNCTION_181	ELSE_3	IF_8
0x400763b	            0x751d	                           jne 0x400765a	       606	tc-i386-intel.c	FUNCTION_181	ELSE_3	IF_8
0x400763d	          0x4d39f4	                            cmp r12, r14	       606	tc-i386-intel.c	FUNCTION_181	ELSE_3	IF_8
0x4007640	            0x7318	                           jae 0x400765a	       606	tc-i386-intel.c	FUNCTION_181	ELSE_3	IF_8
0x4007642	      0x41807eff5d	                cmp byte [r14 - 1], 0x5d	       607	tc-i386-intel.c	FUNCTION_181	ELSE_3	IF_8
0x4007647	            0x7511	                           jne 0x400765a	       607	tc-i386-intel.c	FUNCTION_181	ELSE_3	IF_8
0x4007649	    0x830d00000000	                or dword [0x04007650], 1	       609	tc-i386-intel.c	FUNCTION_181	ELSE_3	IF_8
0x4007650	    0xc70500000000	               mov dword [0x0400765a], 1	       610	tc-i386-intel.c	FUNCTION_181	ELSE_3	IF_8
0x400765a	    0x4c892d000000	            mov qword [0x04007661], r13 	       613	tc-i386-intel.c	FUNCTION_181
0x4007661	          0x4c89e7	                            mov rdi, r12	       614	tc-i386-intel.c	FUNCTION_181	CALL_16
0x4007664	      0xe800000000	                          call 0x4007669	       614	tc-i386-intel.c	FUNCTION_181	CALL_16
0x4007669	    0x833d00000000	               cmp dword [0x04007670], 0	       616	tc-i386-intel.c	FUNCTION_181	CALL_17
0x4007670	            0x7414	                            je 0x4007686	       616	tc-i386-intel.c	FUNCTION_181	CALL_17
0x4007672	      0xba00000000	                              mov edx, 0	       616	tc-i386-intel.c	FUNCTION_181	CALL_17
0x4007677	      0xbe68020000	                          mov esi, 0x268	       616	tc-i386-intel.c	FUNCTION_181	CALL_17
0x400767c	      0xbf00000000	                              mov edi, 0	       616	tc-i386-intel.c	FUNCTION_181	CALL_17
0x4007681	      0xe800000000	                          call 0x4007686	       616	tc-i386-intel.c	FUNCTION_181	CALL_17
0x4007686	    0x833d00000000	               cmp dword [0x0400768d], 0	       617	tc-i386-intel.c	FUNCTION_181	CALL_18
0x400768d	            0x7414	                            je 0x40076a3	       617	tc-i386-intel.c	FUNCTION_181	CALL_18
0x400768f	      0xba00000000	                              mov edx, 0	       617	tc-i386-intel.c	FUNCTION_181	CALL_18
0x4007694	      0xbe69020000	                          mov esi, 0x269	       617	tc-i386-intel.c	FUNCTION_181	CALL_18
0x4007699	      0xbf00000000	                              mov edi, 0	       617	tc-i386-intel.c	FUNCTION_181	CALL_18
0x400769e	      0xe800000000	                          call 0x40076a3	       617	tc-i386-intel.c	FUNCTION_181	CALL_18
0x40076a3	    0x833d00000000	               cmp dword [0x040076aa], 0	       618	tc-i386-intel.c	FUNCTION_181	CALL_19
0x40076aa	            0x7414	                            je 0x40076c0	       618	tc-i386-intel.c	FUNCTION_181	CALL_19
0x40076ac	      0xba00000000	                              mov edx, 0	       618	tc-i386-intel.c	FUNCTION_181	CALL_19
0x40076b1	      0xbe6a020000	                          mov esi, 0x26a	       618	tc-i386-intel.c	FUNCTION_181	CALL_19
0x40076b6	      0xbf00000000	                              mov edi, 0	       618	tc-i386-intel.c	FUNCTION_181	CALL_19
0x40076bb	      0xe800000000	                          call 0x40076c0	       618	tc-i386-intel.c	FUNCTION_181	CALL_19
0x40076c0	      0x837c240800	                  cmp dword [rsp + 8], 0	       620	tc-i386-intel.c	FUNCTION_181	IF_9
0x40076c5	     0xf84a6180000	                            je 0x4008f71	       620	tc-i386-intel.c	FUNCTION_181	IF_9
0x40076cb	    0x448b25000000	           mov r12d, dword [0x040076d2] 	       623	tc-i386-intel.c	FUNCTION_181	IF_10
0x40076d2	        0x4183fc01	                             cmp r12d, 1	       623	tc-i386-intel.c	FUNCTION_181	IF_10
0x40076d6	     0xf8495020000	                            je 0x4007971	       623	tc-i386-intel.c	FUNCTION_181	IF_10
0x40076dc	    0x488b0d000000	            mov rcx, qword [0x040076e3] 	       624	tc-i386-intel.c	FUNCTION_181	IF_10
0x40076e3	          0x488b01	                    mov rax, qword [rcx]	       624	tc-i386-intel.c	FUNCTION_181	IF_10
0x40076e6	    0x81780c8d0000	            cmp dword [rax + 0xc], 0x8d 	       624	tc-i386-intel.c	FUNCTION_181	IF_10
0x40076ed	     0xf8486020000	                            je 0x4007979	       624	tc-i386-intel.c	FUNCTION_181	IF_10
0x40076f3	    0x8b0500000000	            mov eax, dword [0x040076f9] 	       626	tc-i386-intel.c	FUNCTION_181	IF_10
0x40076f9	          0x4863d0	                         movsxd rdx, eax	       626	tc-i386-intel.c	FUNCTION_181	IF_10
0x40076fc	    0x8024d5000000	                  and byte [rdx*8], 0xbf	       626	tc-i386-intel.c	FUNCTION_181	IF_10
0x4007704	      0x418d5424d0	                   lea edx, [r12 - 0x30]	       628	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1
0x4007709	          0x83fa0b	                            cmp edx, 0xb	       628	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1
0x400770c	     0xf87ec010000	                            ja 0x40078fe	       628	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1
0x4007712	            0x89d2	                            mov edx, edx	       628	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1
0x4007714	    0xff24d5000000	                       jmp qword [rdx*8]	       628	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1
0x400771b	            0x4898	                                    cdqe	       631	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1
0x400771d	    0x800cc5000000	                   or byte [rax*8], 0x20	       631	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1
0x4007725	    0x41bc62000000	                          mov r12d, 0x62	       632	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1
0x400772b	      0xe902020000	                           jmp 0x4007932	       632	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1
0x4007730	            0x4898	                                    cdqe	       636	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1
0x4007732	    0x800cc5000000	                   or byte [rax*8], 0x40	       636	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1
0x400773a	          0x488b11	                    mov rdx, qword [rcx]	       637	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_11
0x400773d	          0x488b02	                    mov rax, qword [rdx]	       637	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_11
0x4007740	          0x80386c	                    cmp byte [rax], 0x6c	       637	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_11
0x4007743	            0x7516	                           jne 0x400775b	       637	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_11
0x4007745	        0x80780273	                cmp byte [rax + 2], 0x73	       638	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_11
0x4007749	            0x7510	                           jne 0x400775b	       638	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_11
0x400774b	    0x41bc62000000	                          mov r12d, 0x62	       641	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_11
0x4007751	        0x80780300	                   cmp byte [rax + 3], 0	       639	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_11
0x4007755	     0xf84d7010000	                            je 0x4007932	       639	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_11
0x400775b	    0x41bc62000000	                          mov r12d, 0x62	       641	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_11
0x4007761	        0x837a0c62	            cmp dword [rdx + 0xc], 0x62 	       640	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_11
0x4007765	     0xf84c7010000	                            je 0x4007932	       640	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_11
0x400776b	      0x837c242002	               cmp dword [rsp + 0x20], 2	       645	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	ELSE_5
0x4007770	        0x410f95c4	                              setne r12b	       645	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	ELSE_5
0x4007774	    0x468d24a57300	                lea r12d, [r12*4 + 0x73]	       645	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	ELSE_5
0x400777c	      0xe9b1010000	                           jmp 0x4007932	       645	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	ELSE_5
0x4007781	            0x4898	                                    cdqe	       649	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1
0x4007783	    0x800cc5000000	                   or byte [rax*8], 0x80	       649	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1
0x400778b	          0x488b01	                    mov rax, qword [rcx]	       650	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_13
0x400778e	          0x488b10	                    mov rdx, qword [rax]	       650	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_13
0x4007791	          0x803a6c	                    cmp byte [rdx], 0x6c	       650	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_13
0x4007794	            0x7516	                           jne 0x40077ac	       650	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_13
0x4007796	        0x807a0273	                cmp byte [rdx + 2], 0x73	       651	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_13
0x400779a	            0x7510	                           jne 0x40077ac	       651	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_13
0x400779c	    0x41bc77000000	                          mov r12d, 0x77	       654	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_13
0x40077a2	        0x807a0300	                   cmp byte [rdx + 3], 0	       652	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_13
0x40077a6	     0xf8486010000	                            je 0x4007932	       652	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_13
0x40077ac	    0x41bc77000000	                          mov r12d, 0x77	       654	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_13
0x40077b2	        0x83780c62	            cmp dword [rax + 0xc], 0x62 	       653	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_13
0x40077b6	     0xf8476010000	                            je 0x4007932	       653	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_13
0x40077bc	    0x833d00000000	               cmp dword [0x040077c3], 1	       655	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	ELSE_6	IF_14
0x40077c3	            0x7510	                           jne 0x40077d5	       655	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	ELSE_6	IF_14
0x40077c5	    0x41bc01000000	                             mov r12d, 1	       658	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	ELSE_6	IF_14
0x40077cb	        0xf6402860	           test byte [rax + 0x28], 0x60 	       656	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	ELSE_6	IF_14
0x40077cf	     0xf855d010000	                           jne 0x4007932	       656	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	ELSE_6	IF_14
0x40077d5	      0x837c242001	               cmp dword [rsp + 0x20], 1	       662	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	ELSE_8
0x40077da	      0xb86c000000	                           mov eax, 0x6c	       662	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	ELSE_8
0x40077df	    0x41bc73000000	                          mov r12d, 0x73	       662	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	ELSE_8
0x40077e5	        0x440f45e0	                        cmovne r12d, eax	       662	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	ELSE_8
0x40077e9	      0xe944010000	                           jmp 0x4007932	       662	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	ELSE_8
0x40077ee	            0x4898	                                    cdqe	       666	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1
0x40077f0	    0x800cc5000000	                      or byte [rax*8], 1	       666	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1
0x40077f8	          0x488b01	                    mov rax, qword [rcx]	       667	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_16
0x40077fb	          0x488b00	                    mov rax, qword [rax]	       667	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_16
0x40077fe	          0x80386c	                    cmp byte [rax], 0x6c	       667	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_16
0x4007801	            0x7516	                           jne 0x4007819	       667	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_16
0x4007803	        0x80780273	                cmp byte [rax + 2], 0x73	       668	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_16
0x4007807	            0x7510	                           jne 0x4007819	       668	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_16
0x4007809	    0x41bc6c000000	                          mov r12d, 0x6c	       670	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_16
0x400780f	        0x80780300	                   cmp byte [rax + 3], 0	       669	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_16
0x4007813	     0xf8419010000	                            je 0x4007932	       669	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_16
0x4007819	    0x41bc62000000	                          mov r12d, 0x62	       678	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	ELSE_10
0x400781f	      0x837c242000	               cmp dword [rsp + 0x20], 0	       671	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	ELSE_9	IF_17
0x4007824	     0xf8508010000	                           jne 0x4007932	       671	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	ELSE_9	IF_17
0x400782a	    0x41bc01000000	                             mov r12d, 1	       675	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	ELSE_9	IF_17
0x4007830	    0x833d00000000	               cmp dword [0x04007837], 1	       673	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	ELSE_9	IF_17	IF_18
0x4007837	     0xf85f5000000	                           jne 0x4007932	       673	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	ELSE_9	IF_17	IF_18
0x400783d	      0xbf66000000	                           mov edi, 0x66	       674	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	ELSE_9	IF_17	CALL_20
0x4007842	      0xe8d7acffff	                     call sym.add_prefix	       674	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	ELSE_9	IF_17	CALL_20
0x4007847	      0xe9e6000000	                           jmp 0x4007932	       674	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	ELSE_9	IF_17	CALL_20
0x400784c	            0x4898	                                    cdqe	       682	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1
0x400784e	    0x800cc5000000	                      or byte [rax*8], 2	       682	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1
0x4007856	          0x488b01	                    mov rax, qword [rcx]	       683	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_19
0x4007859	        0x83780c62	            cmp dword [rax + 0xc], 0x62 	       684	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_19
0x400785d	     0xf84c9000000	                            je 0x400792c	       684	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_19
0x4007863	      0x837c242001	               cmp dword [rsp + 0x20], 1	       684	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_19
0x4007868	     0xf84be000000	                            je 0x400792c	       684	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_19
0x400786e	    0x41bc71000000	                          mov r12d, 0x71	       687	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	ELSE_11
0x4007874	      0xe9b9000000	                           jmp 0x4007932	       687	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	ELSE_11
0x4007879	            0x4898	                                    cdqe	       691	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1
0x400787b	    0x800cc5000000	                      or byte [rax*8], 4	       691	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1
0x4007883	      0x837c242001	               cmp dword [rsp + 0x20], 1	       695	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	ELSE_12
0x4007888	      0xb862000000	                           mov eax, 0x62	       695	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	ELSE_12
0x400788d	    0x41bc01000000	                             mov r12d, 1	       695	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	ELSE_12
0x4007893	        0x440f45e0	                        cmovne r12d, eax	       695	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	ELSE_12
0x4007897	      0xe996000000	                           jmp 0x4007932	       695	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	ELSE_12
0x400789c	            0x4898	                                    cdqe	       700	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1
0x400789e	    0x800cc5000000	                      or byte [rax*8], 8	       700	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1
0x40078a6	    0x41bc00000000	                             mov r12d, 0	       552	tc-i386-intel.c	FUNCTION_181
0x40078ac	      0xe981000000	                           jmp 0x4007932	       552	tc-i386-intel.c	FUNCTION_181
0x40078b1	            0x4898	                                    cdqe	       704	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1
0x40078b3	    0x800cc5000000	                   or byte [rax*8], 0x10	       704	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1
0x40078bb	    0x41bc00000000	                             mov r12d, 0	       552	tc-i386-intel.c	FUNCTION_181
0x40078c1	            0xeb6f	                           jmp 0x4007932	       552	tc-i386-intel.c	FUNCTION_181
0x40078c3	            0x4898	                                    cdqe	       708	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1
0x40078c5	    0x800cc5000000	                   or byte [rax*8], 0x20	       708	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1
0x40078cd	    0x41bc00000000	                             mov r12d, 0	       552	tc-i386-intel.c	FUNCTION_181
0x40078d3	            0xeb5d	                           jmp 0x4007932	       552	tc-i386-intel.c	FUNCTION_181
0x40078d5	    0x41bc01000000	                             mov r12d, 1	       712	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1
0x40078db	            0xeb06	                           jmp 0x40078e3	       712	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1
0x40078dd	    0x41bc00000000	                             mov r12d, 0	       552	tc-i386-intel.c	FUNCTION_181
0x40078e3	          0x488b01	                    mov rax, qword [rcx]	       716	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_21
0x40078e6	        0xf6402860	           test byte [rax + 0x28], 0x60 	       715	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_21
0x40078ea	            0x7546	                           jne 0x4007932	       715	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_21
0x40078ec	      0x837c242001	               cmp dword [rsp + 0x20], 1	       717	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_21
0x40078f1	          0x4519e4	                          sbb r12d, r12d	       717	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_21
0x40078f4	        0x4183e49f	                    and r12d, 0xffffff9f	       717	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_21
0x40078f8	        0x4183c462	                          add r12d, 0x62	       717	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_21
0x40078fc	            0xeb34	                           jmp 0x4007932	       717	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_21
0x40078fe	      0xba05000000	                              mov edx, 5	       723	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	CALL_21
0x4007903	      0xbe00000000	                              mov esi, 0	       723	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	CALL_21
0x4007908	      0xbf00000000	                              mov edi, 0	       723	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	CALL_21
0x400790d	      0xe800000000	                          call 0x4007912	       723	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	CALL_21
0x4007912	          0x4489e6	                           mov esi, r12d	       723	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	CALL_21
0x4007915	      0xb900000000	                              mov ecx, 0	       723	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	CALL_21
0x400791a	      0xbad3020000	                          mov edx, 0x2d3	       723	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	CALL_21
0x400791f	          0x4889c7	                            mov rdi, rax	       723	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	CALL_21
0x4007922	      0xb800000000	                              mov eax, 0	       723	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	CALL_21
0x4007927	      0xe800000000	                          call 0x400792c	       723	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	CALL_21
0x400792c	    0x41bc6c000000	                          mov r12d, 0x6c	       685	tc-i386-intel.c	FUNCTION_181	IF_10	SWITCH_1	IF_19
0x4007932	     0xfb605000000	           movzx eax, byte [0x04007939] 	       727	tc-i386-intel.c	FUNCTION_181	IF_10	IF_22
0x4007939	            0x84c0	                             test al, al	       727	tc-i386-intel.c	FUNCTION_181	IF_10	IF_22
0x400793b	            0x7509	                           jne 0x4007946	       727	tc-i386-intel.c	FUNCTION_181	IF_10	IF_22
0x400793d	    0x448825000000	            mov byte [0x04007944], r12b 	       728	tc-i386-intel.c	FUNCTION_181	IF_10	IF_22
0x4007944	            0xeb39	                           jmp 0x400797f	       728	tc-i386-intel.c	FUNCTION_181	IF_10	IF_22
0x4007946	          0x4438e0	                            cmp al, r12b	       729	tc-i386-intel.c	FUNCTION_181	IF_10	ELSE_13	IF_23
0x4007949	            0x7434	                            je 0x400797f	       729	tc-i386-intel.c	FUNCTION_181	IF_10	ELSE_13	IF_23
0x400794b	      0xba05000000	                              mov edx, 5	       731	tc-i386-intel.c	FUNCTION_181	IF_10	ELSE_13	IF_23	CALL_23
0x4007950	      0xbe00000000	                              mov esi, 0	       731	tc-i386-intel.c	FUNCTION_181	IF_10	ELSE_13	IF_23	CALL_23
0x4007955	      0xbf00000000	                              mov edi, 0	       731	tc-i386-intel.c	FUNCTION_181	IF_10	ELSE_13	IF_23	CALL_23
0x400795a	      0xe800000000	                          call 0x400795f	       731	tc-i386-intel.c	FUNCTION_181	IF_10	ELSE_13	IF_23	CALL_23
0x400795f	          0x4889c7	                            mov rdi, rax	       731	tc-i386-intel.c	FUNCTION_181	IF_10	ELSE_13	IF_23	CALL_23
0x4007962	      0xb800000000	                              mov eax, 0	       731	tc-i386-intel.c	FUNCTION_181	IF_10	ELSE_13	IF_23	CALL_23
0x4007967	      0xe800000000	                          call 0x400796c	       731	tc-i386-intel.c	FUNCTION_181	IF_10	ELSE_13	IF_23	CALL_23
0x400796c	      0xe900160000	                           jmp 0x4008f71	       731	tc-i386-intel.c	FUNCTION_181	IF_10	ELSE_13	IF_23	CALL_23
0x4007971	    0x41bc00000000	                             mov r12d, 0	       552	tc-i386-intel.c	FUNCTION_181
0x4007977	            0xeb06	                           jmp 0x400797f	       552	tc-i386-intel.c	FUNCTION_181
0x4007979	    0x41bc00000000	                             mov r12d, 0	       552	tc-i386-intel.c	FUNCTION_181
0x400797f	    0x488b05000000	            mov rax, qword [0x04007986] 	       737	tc-i386-intel.c	FUNCTION_181	IF_24
0x4007986	          0x488b00	                    mov rax, qword [rax]	       739	tc-i386-intel.c	FUNCTION_181	IF_24
0x4007989	    0x66f740286001	          test word [rax + 0x28], 0x160 	       737	tc-i386-intel.c	FUNCTION_181	IF_24
0x400798f	     0xf8448020000	                            je 0x4007bdd	       737	tc-i386-intel.c	FUNCTION_181	IF_24
0x4007995	    0x8b0500000000	            mov eax, dword [0x0400799b] 	       741	tc-i386-intel.c	FUNCTION_181	IF_24	IF_25
0x400799b	          0x4863d0	                         movsxd rdx, eax	       741	tc-i386-intel.c	FUNCTION_181	IF_24	IF_25
0x400799e	    0x48833cd50000	                    cmp qword [rdx*8], 0	       741	tc-i386-intel.c	FUNCTION_181	IF_24	IF_25
0x40079a7	            0x751d	                           jne 0x40079c6	       741	tc-i386-intel.c	FUNCTION_181	IF_24	IF_25
0x40079a9	    0x48833d000000	               cmp qword [0x040079b1], 0	       742	tc-i386-intel.c	FUNCTION_181	IF_24	IF_25
0x40079b1	            0x7513	                           jne 0x40079c6	       742	tc-i386-intel.c	FUNCTION_181	IF_24	IF_25
0x40079b3	    0x48833d000000	               cmp qword [0x040079bb], 0	       743	tc-i386-intel.c	FUNCTION_181	IF_24	IF_25
0x40079bb	            0x7509	                           jne 0x40079c6	       743	tc-i386-intel.c	FUNCTION_181	IF_24	IF_25
0x40079bd	    0x833d00000000	               cmp dword [0x040079c4], 1	       744	tc-i386-intel.c	FUNCTION_181	IF_24	IF_25
0x40079c4	            0x7e0f	                           jle 0x40079d5	       744	tc-i386-intel.c	FUNCTION_181	IF_24	IF_25
0x40079c6	            0x4898	                                    cdqe	       745	tc-i386-intel.c	FUNCTION_181	IF_24	IF_25
0x40079c8	    0x800cc5000000	                      or byte [rax*8], 2	       745	tc-i386-intel.c	FUNCTION_181	IF_24	IF_25
0x40079d0	      0xe9ff010000	                           jmp 0x4007bd4	       745	tc-i386-intel.c	FUNCTION_181	IF_24	IF_25
0x40079d5	    0x8b1500000000	            mov edx, dword [0x040079db] 	       747	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2
0x40079db	          0x83fa3a	                           cmp edx, 0x3a	       747	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2
0x40079de	            0x7438	                            je 0x4007a18	       747	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2
0x40079e0	          0x83fa3b	                           cmp edx, 0x3b	       747	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2
0x40079e3	            0x740b	                            je 0x40079f0	       747	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2
0x40079e5	          0x83fa01	                              cmp edx, 1	       747	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2
0x40079e8	     0xf85dc010000	                           jne 0x4007bca	       747	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2
0x40079ee	            0xeb28	                           jmp 0x4007a18	       747	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2
0x40079f0	    0x48833d000000	               cmp qword [0x040079f8], 0	       750	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	IF_26
0x40079f8	            0x740f	                            je 0x4007a09	       750	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	IF_26
0x40079fa	            0x4898	                                    cdqe	       751	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	IF_26
0x40079fc	    0x800cc5000000	                      or byte [rax*8], 2	       751	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	IF_26
0x4007a04	      0xe9cb010000	                           jmp 0x4007bd4	       751	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	IF_26
0x4007a09	    0xc70500000000	               mov dword [0x04007a13], 1	       753	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_15
0x4007a13	      0xe954160000	                           jmp 0x400906c	       753	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_15
0x4007a18	    0x488b3d000000	            mov rdi, qword [0x04007a1f] 	       757	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27
0x4007a1f	          0x4885ff	                           test rdi, rdi	       757	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27
0x4007a22	            0x7551	                           jne 0x4007a75	       757	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27
0x4007a24	    0xc70500000000	               mov dword [0x04007a2e], 1	       759	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27
0x4007a2e	          0x83fa01	                              cmp edx, 1	       760	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	IF_28
0x4007a31	            0x751c	                           jne 0x4007a4f	       760	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	IF_28
0x4007a33	    0x833d00000000	               cmp dword [0x04007a3a], 1	       762	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	IF_28	IF_29
0x4007a3a	     0xf852c160000	                           jne 0x400906c	       762	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	IF_28	IF_29
0x4007a40	            0x4898	                                    cdqe	       763	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	IF_28	IF_29
0x4007a42	    0x800cc5000000	                      or byte [rax*8], 2	       763	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	IF_28	IF_29
0x4007a4a	      0xe985010000	                           jmp 0x4007bd4	       763	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	IF_28	IF_29
0x4007a4f	      0xba05000000	                              mov edx, 5	       766	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	CALL_25
0x4007a54	      0xbe00000000	                              mov esi, 0	       766	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	CALL_25
0x4007a59	      0xbf00000000	                              mov edi, 0	       766	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	CALL_25
0x4007a5e	      0xe800000000	                          call 0x4007a63	       766	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	CALL_25
0x4007a63	          0x4889c7	                            mov rdi, rax	       766	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	CALL_25
0x4007a66	      0xb800000000	                              mov eax, 0	       766	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	CALL_25
0x4007a6b	      0xe800000000	                          call 0x4007a70	       766	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	CALL_25
0x4007a70	      0xe9fc140000	                           jmp 0x4008f71	       766	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_15	IF_27	CALL_25
0x4007a75	      0xe800000000	                          call 0x4007a7a	       769	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_16	IF_30	CALL_26
0x4007a7a	    0x483b05000000	            cmp rax, qword [0x04007a81] 	       769	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_16	IF_30	CALL_26
0x4007a81	            0x7514	                           jne 0x4007a97	       769	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_16	IF_30	CALL_26
0x4007a83	    0x486305000000	         movsxd rax, dword [0x04007a8a] 	       770	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_16	IF_30
0x4007a8a	    0x800cc5000000	                      or byte [rax*8], 2	       770	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_16	IF_30
0x4007a92	      0xe93d010000	                           jmp 0x4007bd4	       770	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_16	IF_30
0x4007a97	    0x8b0500000000	            mov eax, dword [0x04007a9d] 	       775	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_31
0x4007a9d	          0x83f801	                              cmp eax, 1	       775	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_31
0x4007aa0	            0x762b	                           jbe 0x4007acd	       775	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_31
0x4007aa2	      0xba05000000	                              mov edx, 5	       777	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_31	CALL_28
0x4007aa7	      0xbe00000000	                              mov esi, 0	       777	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_31	CALL_28
0x4007aac	      0xbf00000000	                              mov edi, 0	       777	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_31	CALL_28
0x4007ab1	      0xe800000000	                          call 0x4007ab6	       777	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_31	CALL_28
0x4007ab6	      0xbe02000000	                              mov esi, 2	       777	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_31	CALL_28
0x4007abb	          0x4889c7	                            mov rdi, rax	       777	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_31	CALL_28
0x4007abe	      0xb800000000	                              mov eax, 0	       777	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_31	CALL_28
0x4007ac3	      0xe800000000	                          call 0x4007ac8	       777	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_31	CALL_28
0x4007ac8	      0xe9a4140000	                           jmp 0x4008f71	       777	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_31	CALL_28
0x4007acd	          0x8d5001	                      lea edx, [rax + 1]	       781	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4007ad0	    0x891500000000	            mov dword [0x04007ad6], edx 	       781	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4007ad6	            0x89c0	                            mov eax, eax	       781	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4007ad8	        0x48c1e005	                              shl rax, 5	       781	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4007adc	    0x4c8da8000000	                          lea r13, [rax]	       781	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4007ae3	    0x48c780000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_164	CALL_6
0x4007aee	    0x48c780000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_164	CALL_6
0x4007af9	    0x48c780000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_164	CALL_6
0x4007b04	    0xc68000000000	                       mov byte [rax], 3	       783	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4007b0b	    0x488b15000000	            mov rdx, qword [0x04007b12] 	       784	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4007b12	    0x488990000000	                    mov qword [rax], rdx	       784	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4007b19	    0x486305000000	         movsxd rax, dword [0x04007b20] 	       785	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4007b20	    0x4c892cc50000	                  mov qword [rax*8], r13	       785	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4007b28	          0x4c89ef	                            mov rdi, r13	       787	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17	CALL_30
0x4007b2b	      0xe800000000	                          call 0x4007b30	       787	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17	CALL_30
0x4007b30	    0x49be00000000	          movabs r14, 0xffffffff00000000	      1533	tc-i386.c	FUNCTION_8	SWITCH_1
0x4007b3a	      0x4c0b742448	              or r14, qword [rsp + 0x48]	      1533	tc-i386.c	FUNCTION_8	SWITCH_1
0x4007b3f	      0xb8ffffffff	                     mov eax, 0xffffffff	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x4007b44	          0x4909c6	                             or r14, rax	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x4007b47	      0x4c89742448	             mov qword [rsp + 0x48], r14	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x4007b4c	    0x488b3d000000	            mov rdi, qword [0x04007b53] 	       789	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_32	CALL_33
0x4007b53	      0xe800000000	                          call 0x4007b58	       789	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_32	CALL_33
0x4007b58	          0x4c89f9	                            mov rcx, r15	       789	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_32	CALL_33
0x4007b5b	          0x4c89f2	                            mov rdx, r14	       789	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_32	CALL_33
0x4007b5e	          0x4c89ee	                            mov rsi, r13	       789	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_32	CALL_33
0x4007b61	          0x4889c7	                            mov rdi, rax	       789	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_32	CALL_33
0x4007b64	      0xe8c195ffff	        call sym.i386_finalize_immediate	       789	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_32	CALL_33
0x4007b69	            0x85c0	                           test eax, eax	       789	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_32	CALL_33
0x4007b6b	     0xf8400140000	                            je 0x4008f71	       789	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_32	CALL_33
0x4007b71	    0x8b0500000000	            mov eax, dword [0x04007b77] 	       792	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_33
0x4007b77	          0x83f804	                              cmp eax, 4	       792	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_33
0x4007b7a	            0x7719	                            ja 0x4007b95	       792	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_33
0x4007b7c	          0x8d5001	                      lea edx, [rax + 1]	       794	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_33
0x4007b7f	    0x891500000000	            mov dword [0x04007b85], edx 	       794	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_33
0x4007b85	    0x890500000000	            mov dword [0x04007b8b], eax 	       794	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_33
0x4007b8b	            0x4898	                                    cdqe	       795	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_33
0x4007b8d	    0x800cc5000000	                   or byte [rax*8], 0x40	       795	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_33
0x4007b95	        0x4180fc01	                             cmp r12b, 1	       797	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_34
0x4007b99	            0x7507	                           jne 0x4007ba2	       797	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_34
0x4007b9b	    0xc60500000000	                mov byte [0x04007ba2], 0	       798	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17	IF_34
0x4007ba2	    0x48c705000000	               mov qword [0x04007bad], 0	       799	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4007bad	    0xc70500000000	               mov dword [0x04007bb7], 0	       800	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2	ELSE_17
0x4007bb7	    0x486305000000	         movsxd rax, dword [0x04007bbe] 	       807	tc-i386-intel.c	FUNCTION_181	IF_24	IF_35
0x4007bbe	    0xf604c5000000	                    test byte [rax*8], 2	       807	tc-i386-intel.c	FUNCTION_181	IF_24	IF_35
0x4007bc6	            0x7426	                            je 0x4007bee	       807	tc-i386-intel.c	FUNCTION_181	IF_24	IF_35
0x4007bc8	            0xeb0a	                           jmp 0x4007bd4	       807	tc-i386-intel.c	FUNCTION_181	IF_24	IF_35
0x4007bca	            0x4898	                                    cdqe	       804	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2
0x4007bcc	    0x800cc5000000	                      or byte [rax*8], 2	       804	tc-i386-intel.c	FUNCTION_181	IF_24	ELSE_14	SWITCH_2
0x4007bd4	    0x830d00000000	                or dword [0x04007bdb], 1	       808	tc-i386-intel.c	FUNCTION_181	IF_24	IF_35
0x4007bdb	            0xeb11	                           jmp 0x4007bee	       808	tc-i386-intel.c	FUNCTION_181	IF_24	IF_35
0x4007bdd	    0x48833d000000	               cmp qword [0x04007be5], 0	       810	tc-i386-intel.c	FUNCTION_181	ELSE_18	IF_36
0x4007be5	            0x7407	                            je 0x4007bee	       810	tc-i386-intel.c	FUNCTION_181	ELSE_18	IF_36
0x4007be7	    0x830d00000000	                or dword [0x04007bee], 1	       811	tc-i386-intel.c	FUNCTION_181	ELSE_18	IF_36
0x4007bee	    0x8b0500000000	            mov eax, dword [0x04007bf4] 	       813	tc-i386-intel.c	FUNCTION_181	IF_37
0x4007bf4	          0x4863d0	                         movsxd rdx, eax	       813	tc-i386-intel.c	FUNCTION_181	IF_37
0x4007bf7	    0x488b14d50000	                  mov rdx, qword [rdx*8]	       813	tc-i386-intel.c	FUNCTION_181	IF_37
0x4007bff	          0x4885d2	                           test rdx, rdx	       813	tc-i386-intel.c	FUNCTION_181	IF_37
0x4007c02	     0xf8486000000	                            je 0x4007c8e	       813	tc-i386-intel.c	FUNCTION_181	IF_37
0x4007c08	    0x48833d000000	               cmp qword [0x04007c10], 0	       818	tc-i386-intel.c	FUNCTION_181	IF_37	IF_38
0x4007c10	            0x7514	                           jne 0x4007c26	       818	tc-i386-intel.c	FUNCTION_181	IF_37	IF_38
0x4007c12	    0x48833d000000	               cmp qword [0x04007c1a], 0	       818	tc-i386-intel.c	FUNCTION_181	IF_37	IF_38
0x4007c1a	            0x750a	                           jne 0x4007c26	       818	tc-i386-intel.c	FUNCTION_181	IF_37	IF_38
0x4007c1c	    0x48833d000000	               cmp qword [0x04007c24], 0	       818	tc-i386-intel.c	FUNCTION_181	IF_37	IF_38
0x4007c24	            0x7426	                            je 0x4007c4c	       818	tc-i386-intel.c	FUNCTION_181	IF_37	IF_38
0x4007c26	      0xba05000000	                              mov edx, 5	       820	tc-i386-intel.c	FUNCTION_181	IF_37	IF_38	CALL_35
0x4007c2b	      0xbe00000000	                              mov esi, 0	       820	tc-i386-intel.c	FUNCTION_181	IF_37	IF_38	CALL_35
0x4007c30	      0xbf00000000	                              mov edi, 0	       820	tc-i386-intel.c	FUNCTION_181	IF_37	IF_38	CALL_35
0x4007c35	      0xe800000000	                          call 0x4007c3a	       820	tc-i386-intel.c	FUNCTION_181	IF_37	IF_38	CALL_35
0x4007c3a	          0x4889c7	                            mov rdi, rax	       820	tc-i386-intel.c	FUNCTION_181	IF_37	IF_38	CALL_35
0x4007c3d	      0xb800000000	                              mov eax, 0	       820	tc-i386-intel.c	FUNCTION_181	IF_37	IF_38	CALL_35
0x4007c42	      0xe800000000	                          call 0x4007c47	       820	tc-i386-intel.c	FUNCTION_181	IF_37	IF_38	CALL_35
0x4007c47	      0xe925130000	                           jmp 0x4008f71	       820	tc-i386-intel.c	FUNCTION_181	IF_37	IF_38	CALL_35
0x4007c4c	        0x488b7208	                mov rsi, qword [rdx + 8]	       824	tc-i386-intel.c	FUNCTION_181	IF_37
0x4007c50	          0x8b520c	              mov edx, dword [rdx + 0xc]	       824	tc-i386-intel.c	FUNCTION_181	IF_37
0x4007c53	            0x4898	                                    cdqe	       824	tc-i386-intel.c	FUNCTION_181	IF_37
0x4007c55	        0x4883c00e	                            add rax, 0xe	       824	tc-i386-intel.c	FUNCTION_181	IF_37
0x4007c59	    0x488d0cc50000	                        lea rcx, [rax*8]	       824	tc-i386-intel.c	FUNCTION_181	IF_37
0x4007c61	        0x448b410c	              mov r8d, dword [rcx + 0xc]	       824	tc-i386-intel.c	FUNCTION_181	IF_37
0x4007c65	    0x4881e6ffffbf	             and rsi, 0xffffffffffbfffff	       824	tc-i386-intel.c	FUNCTION_181	IF_37
0x4007c6c	           0x97108	                 or dword [rcx + 8], esi	       826	tc-i386-intel.c	FUNCTION_181	IF_37	CALL_36
0x4007c6f	          0x4409c2	                             or edx, r8d	       826	tc-i386-intel.c	FUNCTION_181	IF_37	CALL_36
0x4007c72	          0x89510c	              mov dword [rcx + 0xc], edx	       826	tc-i386-intel.c	FUNCTION_181	IF_37	CALL_36
0x4007c75	    0x8024c5000000	                  and byte [rax*8], 0xbf	       828	tc-i386-intel.c	FUNCTION_181	IF_37
0x4007c7d	    0x830500000000	               add dword [0x04007c84], 1	       829	tc-i386-intel.c	FUNCTION_181	IF_37
0x4007c84	      0xbd01000000	                              mov ebp, 1	      1035	tc-i386-intel.c	FUNCTION_181
0x4007c89	      0xe9e3120000	                           jmp 0x4008f71	      1035	tc-i386-intel.c	FUNCTION_181
0x4007c8e	    0x48833d000000	               cmp qword [0x04007c96], 0	       831	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39
0x4007c96	            0x7524	                           jne 0x4007cbc	       831	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39
0x4007c98	    0x48833d000000	               cmp qword [0x04007ca0], 0	       832	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39
0x4007ca0	            0x751a	                           jne 0x4007cbc	       832	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39
0x4007ca2	    0x48833d000000	               cmp qword [0x04007caa], 0	       833	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39
0x4007caa	            0x7510	                           jne 0x4007cbc	       833	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39
0x4007cac	    0x448b25000000	           mov r12d, dword [0x04007cb3] 	       834	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39
0x4007cb3	          0x4585e4	                         test r12d, r12d	       834	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39
0x4007cb6	     0xf8418050000	                            je 0x40081d4	       834	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39
0x4007cbc	    0x833d00000000	               cmp dword [0x04007cc3], 1	       837	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_40	CALL_37
0x4007cc3	            0x750d	                           jne 0x4007cd2	       837	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_40	CALL_37
0x4007cc5	      0xe8abb8ffff	         call sym.maybe_adjust_templates	       837	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_40	CALL_37
0x4007cca	            0x85c0	                           test eax, eax	       837	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_40	CALL_37
0x4007ccc	     0xf84a7050000	                            je 0x4008279	       837	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_40	CALL_37
0x4007cd2	    0x8b1500000000	            mov edx, dword [0x04007cd8] 	       839	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41
0x4007cd8	    0x488b05000000	            mov rax, qword [0x04007cdf] 	       840	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41
0x4007cdf	          0x488b08	                    mov rcx, qword [rax]	       840	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41
0x4007ce2	         0xfb6412b	           movzx eax, byte [rcx + 0x2b] 	       840	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41
0x4007ce6	          0x83e001	                              and eax, 1	       840	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41
0x4007ce9	            0x3c01	                               cmp al, 1	       840	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41
0x4007ceb	            0x19c0	                            sbb eax, eax	       840	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41
0x4007ced	          0x83c002	                              add eax, 2	       840	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41
0x4007cf0	            0x39c2	                            cmp edx, eax	       839	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41
0x4007cf2	     0xf8c4b010000	                            jl 0x4007e43	       839	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41
0x4007cf8	    0x66f741286001	          test word [rcx + 0x28], 0x160 	       850	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42
0x4007cfe	     0xf8409010000	                            je 0x4007e0d	       850	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42
0x4007d04	    0x448b25000000	           mov r12d, dword [0x04007d0b] 	       853	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42
0x4007d0b	        0x4183fc01	                             cmp r12d, 1	       853	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42
0x4007d0f	     0xf85f8000000	                           jne 0x4007e0d	       853	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42
0x4007d15	    0x48833d000000	               cmp qword [0x04007d1d], 0	       855	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42
0x4007d1d	     0xf85ea000000	                           jne 0x4007e0d	       855	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42
0x4007d23	          0x83fa01	                              cmp edx, 1	       855	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42
0x4007d26	     0xf85e1000000	                           jne 0x4007e0d	       855	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42
0x4007d2c	    0x833d00000000	               cmp dword [0x04007d33], 1	       856	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42
0x4007d33	     0xf85d4000000	                           jne 0x4007e0d	       856	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42
0x4007d39	    0x833d00000000	               cmp dword [0x04007d40], 1	       857	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42
0x4007d40	     0xf85c7000000	                           jne 0x4007e0d	       857	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42
0x4007d46	    0xc70500000000	               mov dword [0x04007d50], 0	       860	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42
0x4007d50	      0xb900000000	                              mov ecx, 0	       861	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42	IF_43	CALL_38
0x4007d55	    0x488b15000000	            mov rdx, qword [0x04007d5c] 	       861	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42	IF_43	CALL_38
0x4007d5c	    0x488b35000000	            mov rsi, qword [0x04007d63] 	       861	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42	IF_43	CALL_38
0x4007d63	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       861	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42	IF_43	CALL_38
0x4007d68	      0xe8bd93ffff	        call sym.i386_finalize_immediate	       861	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42	IF_43	CALL_38
0x4007d6d	            0x85c0	                           test eax, eax	       861	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42	IF_43	CALL_38
0x4007d6f	     0xf8498000000	                            je 0x4007e0d	       861	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42	IF_43	CALL_38
0x4007d75	    0xc70500000000	               mov dword [0x04007d7f], 1	       865	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42	IF_43
0x4007d7f	    0x48c705000000	               mov qword [0x04007d8a], 0	       867	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42	IF_43
0x4007d8a	      0x488b442450	            mov rax, qword [rsp + 0x50] 	       868	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42	IF_43
0x4007d8f	    0x488905000000	            mov qword [0x04007d96], rax 	       868	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42	IF_43
0x4007d96	      0x488b442458	            mov rax, qword [rsp + 0x58] 	       868	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42	IF_43
0x4007d9b	    0x488905000000	            mov qword [0x04007da2], rax 	       868	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42	IF_43
0x4007da2	      0x488b442460	            mov rax, qword [rsp + 0x60] 	       868	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42	IF_43
0x4007da7	    0x488905000000	            mov qword [0x04007dae], rax 	       868	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42	IF_43
0x4007dae	      0x488b442468	            mov rax, qword [rsp + 0x68] 	       868	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42	IF_43
0x4007db3	    0x488905000000	            mov qword [0x04007dba], rax 	       868	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42	IF_43
0x4007dba	      0xb900000000	                              mov ecx, 0	       871	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44	CALL_39
0x4007dbf	    0x488b15000000	            mov rdx, qword [0x04007dc6] 	       871	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44	CALL_39
0x4007dc6	      0xbe00000000	                              mov esi, 0	       871	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44	CALL_39
0x4007dcb	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       871	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44	CALL_39
0x4007dd0	      0xe85593ffff	        call sym.i386_finalize_immediate	       871	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44	CALL_39
0x4007dd5	            0x85c0	                           test eax, eax	       871	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44	CALL_39
0x4007dd7	            0x7434	                            je 0x4007e0d	       871	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44	CALL_39
0x4007dd9	    0xc70500000000	               mov dword [0x04007de3], 0	       875	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44
0x4007de3	    0xc70500000000	               mov dword [0x04007ded], 0	       876	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44
0x4007ded	    0xc70500000000	               mov dword [0x04007df7], 2	       877	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44
0x4007df7	    0x802500000000	             and byte [0x04007dfe], 0xef	       878	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44
0x4007dfe	    0x802500000000	             and byte [0x04007e05], 0xf1	       881	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44
0x4007e05	          0x4489e5	                           mov ebp, r12d	       882	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44
0x4007e08	      0xe964110000	                           jmp 0x4008f71	       882	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	IF_42	IF_43	IF_44
0x4007e0d	    0x488b05000000	            mov rax, qword [0x04007e14] 	       888	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41
0x4007e14	          0x488b00	                    mov rax, qword [rax]	       887	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	CALL_41
0x4007e17	          0x4c8b20	                    mov r12, qword [rax]	       887	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	CALL_41
0x4007e1a	      0xba05000000	                              mov edx, 5	       887	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	CALL_41
0x4007e1f	      0xbe00000000	                              mov esi, 0	       887	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	CALL_41
0x4007e24	      0xbf00000000	                              mov edi, 0	       887	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	CALL_41
0x4007e29	      0xe800000000	                          call 0x4007e2e	       887	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	CALL_41
0x4007e2e	          0x4c89e6	                            mov rsi, r12	       887	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	CALL_41
0x4007e31	          0x4889c7	                            mov rdi, rax	       887	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	CALL_41
0x4007e34	      0xb800000000	                              mov eax, 0	       887	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	CALL_41
0x4007e39	      0xe800000000	                          call 0x4007e3e	       887	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	CALL_41
0x4007e3e	      0xe92e110000	                           jmp 0x4008f71	       887	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_41	CALL_41
0x4007e43	    0x488b05000000	            mov rax, qword [0x04007e4a] 	       895	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_45
0x4007e4a	          0x4885c0	                           test rax, rax	       895	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_45
0x4007e4d	     0xf8488120000	                            je 0x40090db	       895	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_45
0x4007e53	    0x488b15000000	            mov rdx, qword [0x04007e5a] 	       896	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_45
0x4007e5a	          0x4885d2	                           test rdx, rdx	       896	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_45
0x4007e5d	            0x7428	                            je 0x4007e87	       896	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_45
0x4007e5f	        0xf6400b40	            test byte [rax + 0xb], 0x40 	       897	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_45
0x4007e63	            0x7422	                            je 0x4007e87	       897	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_45
0x4007e65	        0xf6420b40	            test byte [rdx + 0xb], 0x40 	       898	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_45
0x4007e69	            0x741c	                            je 0x4007e87	       898	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_45
0x4007e6b	        0x80781105	                cmp byte [rax + 0x11], 5	       899	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_45
0x4007e6f	            0x7616	                           jbe 0x4007e87	       899	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_45
0x4007e71	        0x807a1105	                cmp byte [rdx + 0x11], 5	       900	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_45
0x4007e75	            0x7710	                            ja 0x4007e87	       900	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_45
0x4007e77	    0x488915000000	            mov qword [0x04007e7e], rdx 	       902	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_45
0x4007e7e	    0x488905000000	            mov qword [0x04007e85], rax 	       903	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_45
0x4007e85	            0xeb1f	                           jmp 0x4007ea6	       903	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_45
0x4007e87	    0x488905000000	            mov qword [0x04007e8e], rax 	       907	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	ELSE_20
0x4007e8e	    0x488b15000000	            mov rdx, qword [0x04007e95] 	       908	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	ELSE_20
0x4007e95	    0x488915000000	            mov qword [0x04007e9c], rdx 	       908	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	ELSE_20
0x4007e9c	          0x4885c0	                           test rax, rax	       911	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_46
0x4007e9f	            0x7505	                           jne 0x4007ea6	       911	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_46
0x4007ea1	          0x4885d2	                           test rdx, rdx	       911	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_46
0x4007ea4	            0x740f	                            je 0x4007eb5	       911	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_46
0x4007ea6	    0x486305000000	         movsxd rax, dword [0x04007ead] 	       912	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_46
0x4007ead	    0x800cc5000000	                   or byte [rax*8], 0x40	       912	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_46
0x4007eb5	    0x448b2d000000	           mov r13d, dword [0x04007ebc] 	       914	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39
0x4007ebc	          0x4489e8	                           mov eax, r13d	       914	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39
0x4007ebf	        0x48c1e005	                              shl rax, 5	       914	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39
0x4007ec3	    0x4c8da0000000	                          lea r12, [rax]	       914	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39
0x4007eca	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	        53	string3.h	FUNCTION_161	CALL_3
0x4007ecf	    0x488990000000	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_161	CALL_3
0x4007ed6	      0x488b442458	            mov rax, qword [rsp + 0x58] 	        53	string3.h	FUNCTION_161	CALL_3
0x4007edb	      0x4989442408	                mov qword [r12 + 8], rax	        53	string3.h	FUNCTION_161	CALL_3
0x4007ee0	      0x488b442460	            mov rax, qword [rsp + 0x60] 	        53	string3.h	FUNCTION_161	CALL_3
0x4007ee5	      0x4989442410	             mov qword [r12 + 0x10], rax	        53	string3.h	FUNCTION_161	CALL_3
0x4007eea	      0x488b442468	            mov rax, qword [rsp + 0x68] 	        53	string3.h	FUNCTION_161	CALL_3
0x4007eef	      0x4989442418	             mov qword [r12 + 0x18], rax	        53	string3.h	FUNCTION_161	CALL_3
0x4007ef4	          0x4c89e7	                            mov rdi, r12	       916	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	CALL_43
0x4007ef7	      0xe800000000	                          call 0x4007efc	       916	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	CALL_43
0x4007efc	    0x41807c241802	                cmp byte [r12 + 0x18], 2	       918	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47
0x4007f02	            0x7526	                           jne 0x4007f2a	       918	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47
0x4007f04	          0x4489e8	                           mov eax, r13d	       919	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47
0x4007f07	        0x48c1e005	                              shl rax, 5	       919	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47
0x4007f0b	    0x4883b8000000	                      cmp qword [rax], 0	       919	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47
0x4007f13	            0x7515	                           jne 0x4007f2a	       919	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47
0x4007f15	    0x486305000000	         movsxd rax, dword [0x04007f1c] 	       920	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47
0x4007f1c	    0xf604c5000000	                 test byte [rax*8], 0x40	       920	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47
0x4007f24	     0xf8592000000	                           jne 0x4007fbc	       920	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47
0x4007f2a	    0x448b2d000000	           mov r13d, dword [0x04007f31] 	       922	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47
0x4007f31	          0x4963c5	                        movsxd rax, r13d	       922	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47
0x4007f34	    0x4c8924c50000	                  mov qword [rax*8], r12	       922	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47
0x4007f3c	    0x830500000000	               add dword [0x04007f43], 1	       923	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47
0x4007f43	      0xe86a8cffff	           call sym.i386_addressing_mode	       925	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47	CALL_44
0x4007f48	    0x8b0500000000	            mov eax, dword [0x04007f4e] 	       927	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47	IF_48
0x4007f4e	          0x83f802	                              cmp eax, 2	       927	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47	IF_48
0x4007f51	            0x751e	                           jne 0x4007f71	       927	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47	IF_48
0x4007f53	          0x4963c5	                        movsxd rax, r13d	       929	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47	IF_48
0x4007f56	    0x800cc5000000	                      or byte [rax*8], 4	       929	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47	IF_48
0x4007f5e	    0x803d00000000	                cmp byte [0x04007f65], 0	       930	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47	IF_48	IF_49
0x4007f65	            0x7536	                           jne 0x4007f9d	       930	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47	IF_48	IF_49
0x4007f67	    0x800cc5000000	                   or byte [rax*8], 0x18	       933	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47	IF_48	IF_49
0x4007f6f	            0xeb2c	                           jmp 0x4007f9d	       933	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47	IF_48	IF_49
0x4007f71	    0x803d00000000	                cmp byte [0x04007f78], 0	       936	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47	ELSE_21	IF_50
0x4007f78	           0xf94c2	                                 sete dl	       936	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47	ELSE_21	IF_50
0x4007f7b	          0x83f801	                              cmp eax, 1	       936	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47	ELSE_21	IF_50
0x4007f7e	           0xf94c0	                                 sete al	       936	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47	ELSE_21	IF_50
0x4007f81	            0x38c2	                              cmp dl, al	       936	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47	ELSE_21	IF_50
0x4007f83	            0x740d	                            je 0x4007f92	       936	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47	ELSE_21	IF_50
0x4007f85	          0x4963c5	                        movsxd rax, r13d	       937	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47	ELSE_21	IF_50
0x4007f88	    0x800cc5000000	                      or byte [rax*8], 4	       937	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47	ELSE_21	IF_50
0x4007f90	            0xeb0b	                           jmp 0x4007f9d	       937	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47	ELSE_21	IF_50
0x4007f92	          0x4963c5	                        movsxd rax, r13d	       939	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47	ELSE_22
0x4007f95	    0x800cc5000000	                      or byte [rax*8], 2	       939	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47	ELSE_22
0x4007f9d	          0x4c89f9	                            mov rcx, r15	       960	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47	IF_52	CALL_45
0x4007fa0	    0x488b15000000	            mov rdx, qword [0x04007fa7] 	       960	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47	IF_52	CALL_45
0x4007fa7	          0x4c89e6	                            mov rsi, r12	       960	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47	IF_52	CALL_45
0x4007faa	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       960	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47	IF_52	CALL_45
0x4007faf	      0xe89edcffff	     call sym.i386_finalize_displacement	       960	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47	IF_52	CALL_45
0x4007fb4	            0x85c0	                           test eax, eax	       960	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47	IF_52	CALL_45
0x4007fb6	     0xf84c4020000	                            je 0x4008280	       960	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47	IF_52	CALL_45
0x4007fbc	    0x48833d000000	               cmp qword [0x04007fc4], 0	       966	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53
0x4007fc4	     0xf84c0010000	                            je 0x400818a	       966	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53
0x4007fca	    0x41bd00000000	                             mov r13d, 0	       966	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53
0x4007fd0	    0x488b3d000000	            mov rdi, qword [0x04007fd7] 	       970	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	FOR_1	CALL_46
0x4007fd7	      0xe800000000	                          call 0x4007fdc	       970	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	FOR_1	CALL_46
0x4007fdc	          0x4989c4	                            mov r12, rax	       970	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	FOR_1	CALL_46
0x4007fdf	        0x8078181f	            cmp byte [rax + 0x18], 0x1f 	       971	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	FOR_1	IF_54
0x4007fe3	            0x7523	                           jne 0x4008008	       971	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	FOR_1	IF_54
0x4007fe5	        0x488b7808	                mov rdi, qword [rax + 8]	       972	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	FOR_1	IF_54	CALL_47
0x4007fe9	      0xe800000000	                          call 0x4007fee	       972	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	FOR_1	IF_54	CALL_47
0x4007fee	        0x80781805	                cmp byte [rax + 0x18], 5	       972	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	FOR_1	IF_54	CALL_47
0x4007ff2	            0x7514	                           jne 0x4008008	       972	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	FOR_1	IF_54	CALL_47
0x4007ff4	        0x498b0424	                    mov rax, qword [r12]	       975	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	FOR_1
0x4007ff8	    0x488905000000	            mov qword [0x04007fff], rax 	       975	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	FOR_1
0x4007fff	    0x448b2d000000	           mov r13d, dword [0x04008006] 	       968	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	FOR_1
0x4008006	            0xebc8	                           jmp 0x4007fd0	       968	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	FOR_1
0x4008008	    0x41807c241805	                cmp byte [r12 + 0x18], 5	       977	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	IF_55
0x400800e	            0x7426	                            je 0x4008036	       977	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	IF_55
0x4008010	      0xba05000000	                              mov edx, 5	       979	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	IF_55	CALL_49
0x4008015	      0xbe00000000	                              mov esi, 0	       979	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	IF_55	CALL_49
0x400801a	      0xbf00000000	                              mov edi, 0	       979	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	IF_55	CALL_49
0x400801f	      0xe800000000	                          call 0x4008024	       979	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	IF_55	CALL_49
0x4008024	          0x4889c7	                            mov rdi, rax	       979	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	IF_55	CALL_49
0x4008027	      0xb800000000	                              mov eax, 0	       979	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	IF_55	CALL_49
0x400802c	      0xe800000000	                          call 0x4008031	       979	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	IF_55	CALL_49
0x4008031	      0xe93b0f0000	                           jmp 0x4008f71	       979	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	IF_55	CALL_49
0x4008036	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       982	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	IF_56
0x400803b	        0x488d1440	                  lea rdx, [rax + rax*2]	       982	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	IF_56
0x400803f	    0x803cd5000000	                     cmp byte [rdx*8], 0	       982	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	IF_56
0x4008047	            0x7830	                            js 0x4008079	       982	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	IF_56
0x4008049	    0xf604d5000000	                    test byte [rdx*8], 1	       983	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	IF_56
0x4008051	            0x7526	                           jne 0x4008079	       983	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	IF_56
0x4008053	      0xba05000000	                              mov edx, 5	       985	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	IF_56	CALL_51
0x4008058	      0xbe00000000	                              mov esi, 0	       985	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	IF_56	CALL_51
0x400805d	      0xbf00000000	                              mov edi, 0	       985	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	IF_56	CALL_51
0x4008062	      0xe800000000	                          call 0x4008067	       985	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	IF_56	CALL_51
0x4008067	          0x4889c7	                            mov rdi, rax	       985	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	IF_56	CALL_51
0x400806a	      0xb800000000	                              mov eax, 0	       985	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	IF_56	CALL_51
0x400806f	      0xe800000000	                          call 0x4008074	       985	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	IF_56	CALL_51
0x4008074	      0xe9f80e0000	                           jmp 0x4008f71	       985	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	IF_56	CALL_51
0x4008079	        0x4183fd01	                             cmp r13d, 1	       988	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_3
0x400807d	            0x742c	                            je 0x40080ab	       988	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_3
0x400807f	        0x4183fd02	                             cmp r13d, 2	       988	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_3
0x4008083	            0x7547	                           jne 0x40080cc	       988	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_3
0x4008085	      0xba05000000	                              mov edx, 5	       991	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_53
0x400808a	      0xbe00000000	                              mov esi, 0	       991	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_53
0x400808f	      0xbf00000000	                              mov edi, 0	       991	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_53
0x4008094	      0xe800000000	                          call 0x4008099	       991	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_53
0x4008099	          0x4889c7	                            mov rdi, rax	       991	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_53
0x400809c	      0xb800000000	                              mov eax, 0	       991	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_53
0x40080a1	      0xe800000000	                          call 0x40080a6	       991	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_53
0x40080a6	      0xe9c60e0000	                           jmp 0x4008f71	       991	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_53
0x40080ab	      0xba05000000	                              mov edx, 5	       994	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_55
0x40080b0	      0xbe00000000	                              mov esi, 0	       994	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_55
0x40080b5	      0xbf00000000	                              mov edi, 0	       994	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_55
0x40080ba	      0xe800000000	                          call 0x40080bf	       994	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_55
0x40080bf	          0x4889c7	                            mov rdi, rax	       994	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_55
0x40080c2	      0xb800000000	                              mov eax, 0	       994	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_55
0x40080c7	      0xe800000000	                          call 0x40080cc	       994	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_3	CALL_55
0x40080cc	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       997	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x40080d1	        0x488d0440	                  lea rax, [rax + rax*2]	       997	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x40080d5	     0xfb604c50000	                 movzx eax, byte [rax*8]	       997	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x40080dd	            0x3c03	                               cmp al, 3	       997	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x40080df	            0x745b	                            je 0x400813c	       997	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x40080e1	            0x3c03	                               cmp al, 3	       997	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x40080e3	            0x770a	                            ja 0x40080ef	       997	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x40080e5	            0x3c01	                               cmp al, 1	       997	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x40080e7	            0x742b	                            je 0x4008114	       997	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x40080e9	            0x3c01	                               cmp al, 1	       997	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x40080eb	            0x7613	                           jbe 0x4008100	       997	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x40080ed	            0xeb39	                           jmp 0x4008128	       997	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x40080ef	            0x3c05	                               cmp al, 5	       997	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x40080f1	            0x7471	                            je 0x4008164	       997	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x40080f3	            0x3c05	                               cmp al, 5	       997	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x40080f5	            0x7259	                            jb 0x4008150	       997	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x40080f7	            0x3cff	                            cmp al, 0xff	       997	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x40080f9	            0x747d	                            je 0x4008178	       997	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x40080fb	      0xe98a000000	                           jmp 0x400818a	       997	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x4008100	    0x8b0500000000	            mov eax, dword [0x04008106] 	       999	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x4008106	    0x48c704c50000	                    mov qword [rax*8], 0	       999	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x4008112	            0xeb76	                           jmp 0x400818a	       999	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x4008114	    0x8b0500000000	            mov eax, dword [0x0400811a] 	      1000	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x400811a	    0x48c704c50000	                    mov qword [rax*8], 0	      1000	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x4008126	            0xeb62	                           jmp 0x400818a	      1000	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x4008128	    0x8b0500000000	            mov eax, dword [0x0400812e] 	      1001	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x400812e	    0x48c704c50000	                    mov qword [rax*8], 0	      1001	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x400813a	            0xeb4e	                           jmp 0x400818a	      1001	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x400813c	    0x8b0500000000	            mov eax, dword [0x04008142] 	      1002	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x4008142	    0x48c704c50000	                    mov qword [rax*8], 0	      1002	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x400814e	            0xeb3a	                           jmp 0x400818a	      1002	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x4008150	    0x8b0500000000	            mov eax, dword [0x04008156] 	      1003	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x4008156	    0x48c704c50000	                    mov qword [rax*8], 0	      1003	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x4008162	            0xeb26	                           jmp 0x400818a	      1003	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x4008164	    0x8b0500000000	            mov eax, dword [0x0400816a] 	      1004	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x400816a	    0x48c704c50000	                    mov qword [rax*8], 0	      1004	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x4008176	            0xeb12	                           jmp 0x400818a	      1004	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x4008178	    0x8b0500000000	            mov eax, dword [0x0400817e] 	      1005	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x400817e	    0x48c704c50000	                    mov qword [rax*8], 0	      1005	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_53	SWITCH_4
0x400818a	          0x4c89ff	                            mov rdi, r15	      1009	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_57	CALL_56
0x400818d	      0xe870afffff	               call sym.i386_index_check	      1009	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_57	CALL_56
0x4008192	            0x89c5	                            mov ebp, eax	      1009	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_57	CALL_56
0x4008194	            0x85c0	                           test eax, eax	      1009	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_57	CALL_56
0x4008196	     0xf84d50d0000	                            je 0x4008f71	      1009	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_57	CALL_56
0x400819c	    0x486305000000	         movsxd rax, dword [0x040081a3] 	      1012	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39
0x40081a3	    0x800cc5000000	                   or byte [rax*8], 0x10	      1012	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39
0x40081ab	    0x833d00000000	               cmp dword [0x040081b2], 0	      1013	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_58
0x40081b2	            0x750f	                           jne 0x40081c3	      1013	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_58
0x40081b4	          0x4c89ff	                            mov rdi, r15	      1014	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	CALL_57
0x40081b7	      0xe800000000	                          call 0x40081bc	      1014	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	CALL_57
0x40081bc	    0x488905000000	            mov qword [0x040081c3], rax 	      1014	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	CALL_57
0x40081c3	    0x830500000000	               add dword [0x040081ca], 1	      1015	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39
0x40081ca	      0xbd01000000	                              mov ebp, 1	      1035	tc-i386-intel.c	FUNCTION_181
0x40081cf	      0xe99d0d0000	                           jmp 0x4008f71	      1035	tc-i386-intel.c	FUNCTION_181
0x40081d4	    0x8b1500000000	            mov edx, dword [0x040081da] 	      1020	tc-i386-intel.c	FUNCTION_181	ELSE_23	IF_59
0x40081da	          0x83fa01	                              cmp edx, 1	      1020	tc-i386-intel.c	FUNCTION_181	ELSE_23	IF_59
0x40081dd	            0x762e	                           jbe 0x400820d	      1020	tc-i386-intel.c	FUNCTION_181	ELSE_23	IF_59
0x40081df	      0xba05000000	                              mov edx, 5	      1022	tc-i386-intel.c	FUNCTION_181	ELSE_23	IF_59	CALL_59
0x40081e4	      0xbe00000000	                              mov esi, 0	      1022	tc-i386-intel.c	FUNCTION_181	ELSE_23	IF_59	CALL_59
0x40081e9	      0xbf00000000	                              mov edi, 0	      1022	tc-i386-intel.c	FUNCTION_181	ELSE_23	IF_59	CALL_59
0x40081ee	      0xe800000000	                          call 0x40081f3	      1022	tc-i386-intel.c	FUNCTION_181	ELSE_23	IF_59	CALL_59
0x40081f3	      0xbe02000000	                              mov esi, 2	      1022	tc-i386-intel.c	FUNCTION_181	ELSE_23	IF_59	CALL_59
0x40081f8	          0x4889c7	                            mov rdi, rax	      1022	tc-i386-intel.c	FUNCTION_181	ELSE_23	IF_59	CALL_59
0x40081fb	      0xb800000000	                              mov eax, 0	      1022	tc-i386-intel.c	FUNCTION_181	ELSE_23	IF_59	CALL_59
0x4008200	      0xe800000000	                          call 0x4008205	      1022	tc-i386-intel.c	FUNCTION_181	ELSE_23	IF_59	CALL_59
0x4008205	          0x4489e5	                           mov ebp, r12d	      1024	tc-i386-intel.c	FUNCTION_181	ELSE_23	IF_59
0x4008208	      0xe9640d0000	                           jmp 0x4008f71	      1024	tc-i386-intel.c	FUNCTION_181	ELSE_23	IF_59
0x400820d	          0x8d4a01	                      lea ecx, [rdx + 1]	      1027	tc-i386-intel.c	FUNCTION_181	ELSE_23
0x4008210	    0x890d00000000	            mov dword [0x04008216], ecx 	      1027	tc-i386-intel.c	FUNCTION_181	ELSE_23
0x4008216	            0x89d2	                            mov edx, edx	      1027	tc-i386-intel.c	FUNCTION_181	ELSE_23
0x4008218	        0x48c1e205	                              shl rdx, 5	      1027	tc-i386-intel.c	FUNCTION_181	ELSE_23
0x400821c	    0x488db2000000	                          lea rsi, [rdx]	      1027	tc-i386-intel.c	FUNCTION_181	ELSE_23
0x4008223	            0x4898	                                    cdqe	      1028	tc-i386-intel.c	FUNCTION_181	ELSE_23
0x4008225	    0x488934c50000	                  mov qword [rax*8], rsi	      1028	tc-i386-intel.c	FUNCTION_181	ELSE_23
0x400822d	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      1029	tc-i386-intel.c	FUNCTION_181	ELSE_23
0x4008232	    0x488982000000	                    mov qword [rdx], rax	      1029	tc-i386-intel.c	FUNCTION_181	ELSE_23
0x4008239	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      1029	tc-i386-intel.c	FUNCTION_181	ELSE_23
0x400823e	        0x48894608	                mov qword [rsi + 8], rax	      1029	tc-i386-intel.c	FUNCTION_181	ELSE_23
0x4008242	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      1029	tc-i386-intel.c	FUNCTION_181	ELSE_23
0x4008247	        0x48894610	             mov qword [rsi + 0x10], rax	      1029	tc-i386-intel.c	FUNCTION_181	ELSE_23
0x400824b	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      1029	tc-i386-intel.c	FUNCTION_181	ELSE_23
0x4008250	        0x48894618	             mov qword [rsi + 0x18], rax	      1029	tc-i386-intel.c	FUNCTION_181	ELSE_23
0x4008254	          0x4c89f9	                            mov rcx, r15	      1031	tc-i386-intel.c	FUNCTION_181	ELSE_23	CALL_60
0x4008257	    0x488b15000000	            mov rdx, qword [0x0400825e] 	      1031	tc-i386-intel.c	FUNCTION_181	ELSE_23	CALL_60
0x400825e	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      1031	tc-i386-intel.c	FUNCTION_181	ELSE_23	CALL_60
0x4008263	      0xe8c28effff	        call sym.i386_finalize_immediate	      1031	tc-i386-intel.c	FUNCTION_181	ELSE_23	CALL_60
0x4008268	            0x89c5	                            mov ebp, eax	      1031	tc-i386-intel.c	FUNCTION_181	ELSE_23	CALL_60
0x400826a	      0xe9020d0000	                           jmp 0x4008f71	      1031	tc-i386-intel.c	FUNCTION_181	ELSE_23	CALL_60
0x400826f	      0xbd01000000	                              mov ebp, 1	       557	tc-i386-intel.c	FUNCTION_181	IF_1
0x4008274	      0xe9f80c0000	                           jmp 0x4008f71	       557	tc-i386-intel.c	FUNCTION_181	IF_1
0x4008279	            0x89c5	                            mov ebp, eax	       838	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_40
0x400827b	      0xe9f10c0000	                           jmp 0x4008f71	       838	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_40
0x4008280	            0x89c5	                            mov ebp, eax	       963	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47	IF_52
0x4008282	      0xe9ea0c0000	                           jmp 0x4008f71	       963	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	IF_47	IF_52
0x4008287	        0x41803f20	                    cmp byte [r15], 0x20	      9347	tc-i386.c	FUNCTION_112	IF_1
0x400828b	        0x410f94c4	                               sete r12b	      9347	tc-i386.c	FUNCTION_112	IF_1
0x400828f	        0x450fb6e4	                        movzx r12d, r12b	      9347	tc-i386.c	FUNCTION_112	IF_1
0x4008293	          0x4d01fc	                            add r12, r15	      9347	tc-i386.c	FUNCTION_112	IF_1
0x4008296	      0x41803c242a	                    cmp byte [r12], 0x2a	      9351	tc-i386.c	FUNCTION_112	IF_2
0x400829b	            0x7521	                           jne 0x40082be	      9351	tc-i386.c	FUNCTION_112	IF_2
0x400829d	      0x498d542401	                      lea rdx, [r12 + 1]	      9353	tc-i386.c	FUNCTION_112	IF_2
0x40082a2	      0x498d4c2402	                      lea rcx, [r12 + 2]	      9353	tc-i386.c	FUNCTION_112	IF_2
0x40082a7	    0x41807c240120	                cmp byte [r12 + 1], 0x20	      9353	tc-i386.c	FUNCTION_112	IF_2
0x40082ad	        0x480f44d1	                          cmove rdx, rcx	      9353	tc-i386.c	FUNCTION_112	IF_2
0x40082b1	          0x4989d4	                            mov r12, rdx	      9353	tc-i386.c	FUNCTION_112	IF_2
0x40082b4	            0x4898	                                    cdqe	      9356	tc-i386.c	FUNCTION_112	IF_2
0x40082b6	    0x800cc5000000	                      or byte [rax*8], 2	      9356	tc-i386.c	FUNCTION_112	IF_2
0x40082be	      0x488d742450	                   lea rsi, [rsp + 0x50]	      9360	tc-i386.c	FUNCTION_112	IF_4	CALL_1
0x40082c3	          0x4c89e7	                            mov rdi, r12	      9360	tc-i386.c	FUNCTION_112	IF_4	CALL_1
0x40082c6	      0xe8eed4ffff	                 call sym.parse_register	      9360	tc-i386.c	FUNCTION_112	IF_4	CALL_1
0x40082cb	          0x4989c6	                            mov r14, rax	      9360	tc-i386.c	FUNCTION_112	IF_4	CALL_1
0x40082ce	          0x4885c0	                           test rax, rax	      9360	tc-i386.c	FUNCTION_112	IF_4	CALL_1
0x40082d1	     0xf84ee010000	                            je 0x40084c5	      9360	tc-i386.c	FUNCTION_112	IF_4	CALL_1
0x40082d7	      0x4c8b6c2450	            mov r13, qword [rsp + 0x50] 	      9366	tc-i386.c	FUNCTION_112	IF_4
0x40082dc	      0x41807d0020	                    cmp byte [r13], 0x20	      9368	tc-i386.c	FUNCTION_112	IF_4	IF_5
0x40082e1	           0xf94c0	                                 sete al	      9368	tc-i386.c	FUNCTION_112	IF_4	IF_5
0x40082e4	           0xfb6c0	                           movzx eax, al	      9368	tc-i386.c	FUNCTION_112	IF_4	IF_5
0x40082e7	          0x4901c5	                            add r13, rax	      9368	tc-i386.c	FUNCTION_112	IF_4	IF_5
0x40082ea	      0x410fb64500	                   movzx eax, byte [r13]	      9369	tc-i386.c	FUNCTION_112	IF_4	IF_6
0x40082ef	            0x3c3a	                            cmp al, 0x3a	      9369	tc-i386.c	FUNCTION_112	IF_4	IF_6
0x40082f1	     0xf8531010000	                           jne 0x4008428	      9369	tc-i386.c	FUNCTION_112	IF_4	IF_6
0x40082f7	    0x6641f7460880	              test word [r14 + 8], 0x180	      9370	tc-i386.c	FUNCTION_112	IF_4	IF_6
0x40082fe	     0xf8448010000	                            je 0x400844c	      9370	tc-i386.c	FUNCTION_112	IF_4	IF_6
0x4008304	      0x41807e1105	                cmp byte [r14 + 0x11], 5	      9373	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4008309	     0xf8782000000	                            ja 0x4008391	      9373	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x400830f	      0x410fb64611	           movzx eax, byte [r14 + 0x11] 	      9373	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4008314	    0xff24c5000000	                       jmp qword [rax*8]	      9373	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x400831b	    0x8b0500000000	            mov eax, dword [0x04008321] 	      9376	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4008321	    0x48c704c50000	                    mov qword [rax*8], 0	      9376	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x400832d	            0xeb62	                           jmp 0x4008391	      9376	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x400832f	    0x8b0500000000	            mov eax, dword [0x04008335] 	      9379	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4008335	    0x48c704c50000	                    mov qword [rax*8], 0	      9379	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4008341	            0xeb4e	                           jmp 0x4008391	      9379	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4008343	    0x8b0500000000	            mov eax, dword [0x04008349] 	      9382	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4008349	    0x48c704c50000	                    mov qword [rax*8], 0	      9382	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4008355	            0xeb3a	                           jmp 0x4008391	      9382	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4008357	    0x8b0500000000	            mov eax, dword [0x0400835d] 	      9385	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x400835d	    0x48c704c50000	                    mov qword [rax*8], 0	      9385	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4008369	            0xeb26	                           jmp 0x4008391	      9385	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x400836b	    0x8b0500000000	            mov eax, dword [0x04008371] 	      9388	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4008371	    0x48c704c50000	                    mov qword [rax*8], 0	      9388	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x400837d	            0xeb12	                           jmp 0x4008391	      9388	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x400837f	    0x8b0500000000	            mov eax, dword [0x04008385] 	      9391	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4008385	    0x48c704c50000	                    mov qword [rax*8], 0	      9391	tc-i386.c	FUNCTION_112	IF_4	IF_6	SWITCH_1
0x4008391	        0x498d4501	                      lea rax, [r13 + 1]	      9396	tc-i386.c	FUNCTION_112	IF_4	IF_6
0x4008395	        0x4d8d6502	                      lea r12, [r13 + 2]	      9396	tc-i386.c	FUNCTION_112	IF_4	IF_6
0x4008399	      0x41807d0120	                cmp byte [r13 + 1], 0x20	      9396	tc-i386.c	FUNCTION_112	IF_4	IF_6
0x400839e	        0x4c0f45e0	                         cmovne r12, rax	      9396	tc-i386.c	FUNCTION_112	IF_4	IF_6
0x40083a2	      0x410fb60424	                   movzx eax, byte [r12]	      9400	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x40083a7	           0xfb6d0	                           movzx edx, al	      9400	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x40083aa	          0x4863ca	                         movsxd rcx, edx	      9400	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x40083ad	    0x80b900000000	                       cmp byte [rcx], 0	      9400	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x40083b4	            0x753f	                           jne 0x40083f5	      9400	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x40083b6	            0x89c1	                            mov ecx, eax	      9403	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x40083b8	          0x83e1fd	                     and ecx, 0xfffffffd	      9403	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x40083bb	          0x80f928	                            cmp cl, 0x28	      9403	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x40083be	            0x7435	                            je 0x40083f5	      9403	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x40083c0	          0x4863d2	                         movsxd rdx, edx	      9401	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x40083c3	    0x80ba00000000	                       cmp byte [rdx], 0	      9403	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x40083ca	            0x7529	                           jne 0x40083f5	      9403	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8
0x40083cc	      0xba05000000	                              mov edx, 5	      9405	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8	CALL_3
0x40083d1	      0xbe00000000	                              mov esi, 0	      9405	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8	CALL_3
0x40083d6	      0xbf00000000	                              mov edi, 0	      9405	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8	CALL_3
0x40083db	      0xe800000000	                          call 0x40083e0	      9405	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8	CALL_3
0x40083e0	          0x4c89e6	                            mov rsi, r12	      9405	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8	CALL_3
0x40083e3	          0x4889c7	                            mov rdi, rax	      9405	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8	CALL_3
0x40083e6	      0xb800000000	                              mov eax, 0	      9405	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8	CALL_3
0x40083eb	      0xe800000000	                          call 0x40083f0	      9405	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8	CALL_3
0x40083f0	      0xe97c0b0000	                           jmp 0x4008f71	      9405	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_8	CALL_3
0x40083f5	            0x3c2a	                            cmp al, 0x2a	      9409	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9
0x40083f7	     0xf8527030000	                           jne 0x4008724	      9409	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9
0x40083fd	      0x498d442401	                      lea rax, [r12 + 1]	      9411	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9
0x4008402	      0x498d542402	                      lea rdx, [r12 + 2]	      9411	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9
0x4008407	    0x41807c240120	                cmp byte [r12 + 1], 0x20	      9411	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9
0x400840d	        0x480f44c2	                          cmove rax, rdx	      9411	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9
0x4008411	          0x4989c4	                            mov r12, rax	      9411	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9
0x4008414	    0x486305000000	         movsxd rax, dword [0x0400841b] 	      9414	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9
0x400841b	    0x800cc5000000	                      or byte [rax*8], 2	      9414	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9
0x4008423	      0xe9fc020000	                           jmp 0x4008724	      9414	tc-i386.c	FUNCTION_112	IF_4	IF_6	IF_9
0x4008428	            0x3c7b	                            cmp al, 0x7b	      9420	tc-i386.c	FUNCTION_112	IF_4	IF_11
0x400842a	            0x7519	                           jne 0x4008445	      9420	tc-i386.c	FUNCTION_112	IF_4	IF_11
0x400842c	      0xbe00000000	                              mov esi, 0	      9422	tc-i386.c	FUNCTION_112	IF_4	IF_11	CALL_4
0x4008431	          0x4c89ef	                            mov rdi, r13	      9422	tc-i386.c	FUNCTION_112	IF_4	IF_11	CALL_4
0x4008434	      0xe893d4ffff	            call sym.check_VecOperations	      9422	tc-i386.c	FUNCTION_112	IF_4	IF_11	CALL_4
0x4008439	          0x4989c5	                            mov r13, rax	      9422	tc-i386.c	FUNCTION_112	IF_4	IF_11	CALL_4
0x400843c	          0x4885c0	                           test rax, rax	      9423	tc-i386.c	FUNCTION_112	IF_4	IF_11	IF_12
0x400843f	     0xf842c0b0000	                            je 0x4008f71	      9423	tc-i386.c	FUNCTION_112	IF_4	IF_11	IF_12
0x4008445	      0x41807d0000	                       cmp byte [r13], 0	      9427	tc-i386.c	FUNCTION_112	IF_4	IF_13
0x400844a	            0x7429	                            je 0x4008475	      9427	tc-i386.c	FUNCTION_112	IF_4	IF_13
0x400844c	      0xba05000000	                              mov edx, 5	      9429	tc-i386.c	FUNCTION_112	IF_4	IF_13	CALL_6
0x4008451	      0xbe00000000	                              mov esi, 0	      9429	tc-i386.c	FUNCTION_112	IF_4	IF_13	CALL_6
0x4008456	      0xbf00000000	                              mov edi, 0	      9429	tc-i386.c	FUNCTION_112	IF_4	IF_13	CALL_6
0x400845b	      0xe800000000	                          call 0x4008460	      9429	tc-i386.c	FUNCTION_112	IF_4	IF_13	CALL_6
0x4008460	          0x4c89ee	                            mov rsi, r13	      9429	tc-i386.c	FUNCTION_112	IF_4	IF_13	CALL_6
0x4008463	          0x4889c7	                            mov rdi, rax	      9429	tc-i386.c	FUNCTION_112	IF_4	IF_13	CALL_6
0x4008466	      0xb800000000	                              mov eax, 0	      9429	tc-i386.c	FUNCTION_112	IF_4	IF_13	CALL_6
0x400846b	      0xe800000000	                          call 0x4008470	      9429	tc-i386.c	FUNCTION_112	IF_4	IF_13	CALL_6
0x4008470	      0xe9fc0a0000	                           jmp 0x4008f71	      9429	tc-i386.c	FUNCTION_112	IF_4	IF_13	CALL_6
0x4008475	        0x418b560c	              mov edx, dword [r14 + 0xc]	      9432	tc-i386.c	FUNCTION_112	IF_4
0x4008479	    0x48633d000000	         movsxd rdi, dword [0x04008480] 	      9432	tc-i386.c	FUNCTION_112	IF_4
0x4008480	        0x488d470e	                    lea rax, [rdi + 0xe]	      9432	tc-i386.c	FUNCTION_112	IF_4
0x4008484	    0x488d0cc50000	                        lea rcx, [rax*8]	      9432	tc-i386.c	FUNCTION_112	IF_4
0x400848c	        0x448b490c	              mov r9d, dword [rcx + 0xc]	      9432	tc-i386.c	FUNCTION_112	IF_4
0x4008490	        0x498b7608	                mov rsi, qword [r14 + 8]	      9432	tc-i386.c	FUNCTION_112	IF_4
0x4008494	    0x4881e6ffffbf	             and rsi, 0xffffffffffbfffff	      9432	tc-i386.c	FUNCTION_112	IF_4
0x400849b	           0x97108	                 or dword [rcx + 8], esi	      9434	tc-i386.c	FUNCTION_112	IF_4	CALL_7
0x400849e	          0x4409ca	                             or edx, r9d	      9434	tc-i386.c	FUNCTION_112	IF_4	CALL_7
0x40084a1	          0x89510c	              mov dword [rcx + 0xc], edx	      9434	tc-i386.c	FUNCTION_112	IF_4	CALL_7
0x40084a4	    0x8024c5000000	                  and byte [rax*8], 0xbf	      9436	tc-i386.c	FUNCTION_112	IF_4
0x40084ac	    0x4c8934fd0000	                  mov qword [rdi*8], r14	      9437	tc-i386.c	FUNCTION_112	IF_4
0x40084b4	    0x830500000000	               add dword [0x040084bb], 1	      9438	tc-i386.c	FUNCTION_112	IF_4
0x40084bb	      0xbd01000000	                              mov ebp, 1	      9667	tc-i386.c	FUNCTION_112
0x40084c0	      0xe9ac0a0000	                           jmp 0x4008f71	      9667	tc-i386.c	FUNCTION_112
0x40084c5	      0x410fb60424	                   movzx eax, byte [r12]	      9440	tc-i386.c	FUNCTION_112	ELSE_1	IF_14
0x40084ca	            0x3c25	                            cmp al, 0x25	      9440	tc-i386.c	FUNCTION_112	ELSE_1	IF_14
0x40084cc	            0x7529	                           jne 0x40084f7	      9440	tc-i386.c	FUNCTION_112	ELSE_1	IF_14
0x40084ce	      0xba05000000	                              mov edx, 5	      9442	tc-i386.c	FUNCTION_112	ELSE_1	IF_14	CALL_9
0x40084d3	      0xbe00000000	                              mov esi, 0	      9442	tc-i386.c	FUNCTION_112	ELSE_1	IF_14	CALL_9
0x40084d8	      0xbf00000000	                              mov edi, 0	      9442	tc-i386.c	FUNCTION_112	ELSE_1	IF_14	CALL_9
0x40084dd	      0xe800000000	                          call 0x40084e2	      9442	tc-i386.c	FUNCTION_112	ELSE_1	IF_14	CALL_9
0x40084e2	          0x4c89e6	                            mov rsi, r12	      9442	tc-i386.c	FUNCTION_112	ELSE_1	IF_14	CALL_9
0x40084e5	          0x4889c7	                            mov rdi, rax	      9442	tc-i386.c	FUNCTION_112	ELSE_1	IF_14	CALL_9
0x40084e8	      0xb800000000	                              mov eax, 0	      9442	tc-i386.c	FUNCTION_112	ELSE_1	IF_14	CALL_9
0x40084ed	      0xe800000000	                          call 0x40084f2	      9442	tc-i386.c	FUNCTION_112	ELSE_1	IF_14	CALL_9
0x40084f2	      0xe97a0a0000	                           jmp 0x4008f71	      9442	tc-i386.c	FUNCTION_112	ELSE_1	IF_14	CALL_9
0x40084f7	            0x3c24	                            cmp al, 0x24	      9445	tc-i386.c	FUNCTION_112	ELSE_2	IF_15
0x40084f9	     0xf85de010000	                           jne 0x40086dd	      9445	tc-i386.c	FUNCTION_112	ELSE_2	IF_15
0x40084ff	    0x8b0500000000	            mov eax, dword [0x04008505] 	      9448	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16
0x4008505	          0x4863d0	                         movsxd rdx, eax	      9448	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16
0x4008508	    0xf604d5000000	                    test byte [rdx*8], 2	      9448	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16
0x4008510	            0x7426	                            je 0x4008538	      9448	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16
0x4008512	      0xba05000000	                              mov edx, 5	      9450	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16	CALL_11
0x4008517	      0xbe00000000	                              mov esi, 0	      9450	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16	CALL_11
0x400851c	      0xbf00000000	                              mov edi, 0	      9450	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16	CALL_11
0x4008521	      0xe800000000	                          call 0x4008526	      9450	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16	CALL_11
0x4008526	          0x4889c7	                            mov rdi, rax	      9450	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16	CALL_11
0x4008529	      0xb800000000	                              mov eax, 0	      9450	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16	CALL_11
0x400852e	      0xe800000000	                          call 0x4008533	      9450	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16	CALL_11
0x4008533	      0xe9390a0000	                           jmp 0x4008f71	      9450	tc-i386.c	FUNCTION_112	ELSE_2	IF_15	IF_16	CALL_11
0x4008538	    0xc7442474ffff	     mov dword [rsp + 0x74], 0xffffffff 	      1533	tc-i386.c	FUNCTION_8	SWITCH_1
0x4008540	    0xc7442470ffff	     mov dword [rsp + 0x70], 0xffffffff 	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x4008548	    0x448b2d000000	           mov r13d, dword [0x0400854f] 	      8650	tc-i386.c	FUNCTION_103	IF_1
0x400854f	        0x4183fd02	                             cmp r13d, 2	      8650	tc-i386.c	FUNCTION_103	IF_1
0x4008553	            0x752b	                           jne 0x4008580	      8650	tc-i386.c	FUNCTION_103	IF_1
0x4008555	      0xba05000000	                              mov edx, 5	      8652	tc-i386.c	FUNCTION_103	IF_1	CALL_3
0x400855a	      0xbe00000000	                              mov esi, 0	      8652	tc-i386.c	FUNCTION_103	IF_1	CALL_3
0x400855f	      0xbf00000000	                              mov edi, 0	      8652	tc-i386.c	FUNCTION_103	IF_1	CALL_3
0x4008564	      0xe800000000	                          call 0x4008569	      8652	tc-i386.c	FUNCTION_103	IF_1	CALL_3
0x4008569	      0xbe02000000	                              mov esi, 2	      8652	tc-i386.c	FUNCTION_103	IF_1	CALL_3
0x400856e	          0x4889c7	                            mov rdi, rax	      8652	tc-i386.c	FUNCTION_103	IF_1	CALL_3
0x4008571	      0xb800000000	                              mov eax, 0	      8652	tc-i386.c	FUNCTION_103	IF_1	CALL_3
0x4008576	      0xe800000000	                          call 0x400857b	      8652	tc-i386.c	FUNCTION_103	IF_1	CALL_3
0x400857b	      0xe94e010000	                           jmp 0x40086ce	      8652	tc-i386.c	FUNCTION_103	IF_1	CALL_3
0x4008580	        0x418d5501	                      lea edx, [r13 + 1]	      8657	tc-i386.c	FUNCTION_103
0x4008584	    0x891500000000	            mov dword [0x0400858a], edx 	      8657	tc-i386.c	FUNCTION_103
0x400858a	          0x4589ee	                          mov r14d, r13d	      8657	tc-i386.c	FUNCTION_103
0x400858d	        0x49c1e605	                              shl r14, 5	      8657	tc-i386.c	FUNCTION_103
0x4008591	    0x4981c6000000	                              add r14, 0	      8657	tc-i386.c	FUNCTION_103
0x4008598	          0x4863d0	                         movsxd rdx, eax	      8658	tc-i386.c	FUNCTION_103
0x400859b	    0x4c8934d50000	                  mov qword [rdx*8], r14	      8658	tc-i386.c	FUNCTION_103
0x40085a3	      0x498d542401	                      lea rdx, [r12 + 1]	      9447	tc-i386.c	FUNCTION_112	ELSE_2	IF_15
0x40085a8	      0x498d4c2402	                      lea rcx, [r12 + 2]	      9447	tc-i386.c	FUNCTION_112	ELSE_2	IF_15
0x40085ad	    0x41807c240120	                cmp byte [r12 + 1], 0x20	      9447	tc-i386.c	FUNCTION_112	ELSE_2	IF_15
0x40085b3	        0x480f44d1	                          cmove rdx, rcx	      9447	tc-i386.c	FUNCTION_112	ELSE_2	IF_15
0x40085b7	          0x4989d4	                            mov r12, rdx	      9447	tc-i386.c	FUNCTION_112	ELSE_2	IF_15
0x40085ba	    0x488b35000000	            mov rsi, qword [0x040085c1] 	      8663	tc-i386.c	FUNCTION_103
0x40085c1	      0x4889742408	                mov qword [rsp + 8], rsi	      8663	tc-i386.c	FUNCTION_103
0x40085c6	    0x488915000000	            mov qword [0x040085cd], rdx 	      8664	tc-i386.c	FUNCTION_103
0x40085cd	            0x4898	                                    cdqe	      8666	tc-i386.c	FUNCTION_103
0x40085cf	    0x488d3c850000	                        lea rdi, [rax*4]	      8666	tc-i386.c	FUNCTION_103
0x40085d7	      0x488d542470	                   lea rdx, [rsp + 0x70]	      8666	tc-i386.c	FUNCTION_103
0x40085dc	      0xbe00000000	                              mov esi, 0	      8666	tc-i386.c	FUNCTION_103
0x40085e1	      0xe8a6d8ffff	                        call sym.lex_got	      8666	tc-i386.c	FUNCTION_103
0x40085e6	          0x4989c7	                            mov r15, rax	      8666	tc-i386.c	FUNCTION_103
0x40085e9	          0x4885c0	                           test rax, rax	      8667	tc-i386.c	FUNCTION_103	IF_3
0x40085ec	            0x7407	                            je 0x40085f5	      8667	tc-i386.c	FUNCTION_103	IF_3
0x40085ee	    0x488905000000	            mov qword [0x040085f5], rax 	      8668	tc-i386.c	FUNCTION_103	IF_3
0x40085f5	      0xba01000000	                              mov edx, 1	      8670	tc-i386.c	FUNCTION_103	CALL_4
0x40085fa	          0x4c89f6	                            mov rsi, r14	      8670	tc-i386.c	FUNCTION_103	CALL_4
0x40085fd	      0xbf00000000	                              mov edi, 0	      8670	tc-i386.c	FUNCTION_103	CALL_4
0x4008602	      0xe800000000	                          call 0x4008607	      8670	tc-i386.c	FUNCTION_103	CALL_4
0x4008607	      0x4889442420	             mov qword [rsp + 0x20], rax	      8670	tc-i386.c	FUNCTION_103	CALL_4
0x400860c	    0x488b05000000	            mov rax, qword [0x04008613] 	      8672	tc-i386.c	FUNCTION_103	CALL_5
0x4008613	          0x803820	                    cmp byte [rax], 0x20	      8672	tc-i386.c	FUNCTION_103	CALL_5
0x4008616	            0x750b	                           jne 0x4008623	      8672	tc-i386.c	FUNCTION_103	CALL_5
0x4008618	        0x4883c001	                              add rax, 1	      8672	tc-i386.c	FUNCTION_103	CALL_5
0x400861c	    0x488905000000	            mov qword [0x04008623], rax 	      8672	tc-i386.c	FUNCTION_103	CALL_5
0x4008623	    0x488b3d000000	            mov rdi, qword [0x0400862a] 	      8675	tc-i386.c	FUNCTION_103	IF_4
0x400862a	          0x803f7b	                    cmp byte [rdi], 0x7b	      8675	tc-i386.c	FUNCTION_103	IF_4
0x400862d	            0x751a	                           jne 0x4008649	      8675	tc-i386.c	FUNCTION_103	IF_4
0x400862f	      0xbe00000000	                              mov esi, 0	      8677	tc-i386.c	FUNCTION_103	IF_4	CALL_6
0x4008634	      0xe893d2ffff	            call sym.check_VecOperations	      8677	tc-i386.c	FUNCTION_103	IF_4	CALL_6
0x4008639	    0x488905000000	            mov qword [0x04008640], rax 	      8677	tc-i386.c	FUNCTION_103	IF_4	CALL_6
0x4008640	          0x4885c0	                           test rax, rax	      8679	tc-i386.c	FUNCTION_103	IF_4	IF_5
0x4008643	     0xf8485000000	                            je 0x40086ce	      8679	tc-i386.c	FUNCTION_103	IF_4	IF_5
0x4008649	    0x488b2d000000	            mov rbp, qword [0x04008650] 	      8683	tc-i386.c	FUNCTION_103	IF_6
0x4008650	        0x807d0000	                       cmp byte [rbp], 0	      8683	tc-i386.c	FUNCTION_103	IF_6
0x4008654	            0x7424	                            je 0x400867a	      8683	tc-i386.c	FUNCTION_103	IF_6
0x4008656	      0xba05000000	                              mov edx, 5	      8684	tc-i386.c	FUNCTION_103	CALL_8
0x400865b	      0xbe00000000	                              mov esi, 0	      8684	tc-i386.c	FUNCTION_103	CALL_8
0x4008660	      0xbf00000000	                              mov edi, 0	      8684	tc-i386.c	FUNCTION_103	CALL_8
0x4008665	      0xe800000000	                          call 0x400866a	      8684	tc-i386.c	FUNCTION_103	CALL_8
0x400866a	          0x4889ee	                            mov rsi, rbp	      8684	tc-i386.c	FUNCTION_103	CALL_8
0x400866d	          0x4889c7	                            mov rdi, rax	      8684	tc-i386.c	FUNCTION_103	CALL_8
0x4008670	      0xb800000000	                              mov eax, 0	      8684	tc-i386.c	FUNCTION_103	CALL_8
0x4008675	      0xe800000000	                          call 0x400867a	      8684	tc-i386.c	FUNCTION_103	CALL_8
0x400867a	      0x488b442408	                mov rax, qword [rsp + 8]	      8686	tc-i386.c	FUNCTION_103
0x400867f	    0x488905000000	            mov qword [0x04008686], rax 	      8686	tc-i386.c	FUNCTION_103
0x4008686	          0x4d85ff	                           test r15, r15	      8687	tc-i386.c	FUNCTION_103	IF_7
0x4008689	            0x742c	                            je 0x40086b7	      8687	tc-i386.c	FUNCTION_103	IF_7
0x400868b	          0x4c89ff	                            mov rdi, r15	      8689	tc-i386.c	FUNCTION_103	IF_7	CALL_9
0x400868e	      0xe800000000	                          call 0x4008693	      8689	tc-i386.c	FUNCTION_103	IF_7	CALL_9
0x4008693	          0x4489e8	                           mov eax, r13d	      8691	tc-i386.c	FUNCTION_103	IF_7	IF_8
0x4008696	        0x48c1e005	                              shl rax, 5	      8691	tc-i386.c	FUNCTION_103	IF_7	IF_8
0x400869a	     0xfb680000000	                   movzx eax, byte [rax]	      8691	tc-i386.c	FUNCTION_103	IF_7	IF_8
0x40086a1	            0x3c02	                               cmp al, 2	      8691	tc-i386.c	FUNCTION_103	IF_7	IF_8
0x40086a3	            0x7404	                            je 0x40086a9	      8691	tc-i386.c	FUNCTION_103	IF_7	IF_8
0x40086a5	            0x3c05	                               cmp al, 5	      8691	tc-i386.c	FUNCTION_103	IF_7	IF_8
0x40086a7	            0x750e	                           jne 0x40086b7	      8691	tc-i386.c	FUNCTION_103	IF_7	IF_8
0x40086a9	          0x4489e8	                           mov eax, r13d	      8692	tc-i386.c	FUNCTION_103	IF_7	IF_8
0x40086ac	        0x48c1e005	                              shl rax, 5	      8692	tc-i386.c	FUNCTION_103	IF_7	IF_8
0x40086b0	    0xc68000000000	                       mov byte [rax], 0	      8692	tc-i386.c	FUNCTION_103	IF_7	IF_8
0x40086b7	          0x4c89e1	                            mov rcx, r12	      8695	tc-i386.c	FUNCTION_103	CALL_10
0x40086ba	      0x488b542470	            mov rdx, qword [rsp + 0x70] 	      8695	tc-i386.c	FUNCTION_103	CALL_10
0x40086bf	          0x4c89f6	                            mov rsi, r14	      8695	tc-i386.c	FUNCTION_103	CALL_10
0x40086c2	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      8695	tc-i386.c	FUNCTION_103	CALL_10
0x40086c7	      0xe85e8affff	        call sym.i386_finalize_immediate	      8695	tc-i386.c	FUNCTION_103	CALL_10
0x40086cc	            0x89c5	                            mov ebp, eax	      8695	tc-i386.c	FUNCTION_103	CALL_10
0x40086ce	            0x85ed	                           test ebp, ebp	      9667	tc-i386.c	FUNCTION_112
0x40086d0	        0x400f95c5	                               setne bpl	      9667	tc-i386.c	FUNCTION_112
0x40086d4	        0x400fb6ed	                          movzx ebp, bpl	      9667	tc-i386.c	FUNCTION_112
0x40086d8	      0xe994080000	                           jmp 0x4008f71	      9667	tc-i386.c	FUNCTION_112
0x40086dd	          0x4c89ff	                            mov rdi, r15	      9456	tc-i386.c	FUNCTION_112	ELSE_3	IF_18	CALL_13
0x40086e0	      0xe84ca5ffff	               call sym.RC_SAE_immediate	      9456	tc-i386.c	FUNCTION_112	ELSE_3	IF_18	CALL_13
0x40086e5	          0x4189c5	                           mov r13d, eax	      9456	tc-i386.c	FUNCTION_112	ELSE_3	IF_18	CALL_13
0x40086e8	            0x85c0	                           test eax, eax	      9456	tc-i386.c	FUNCTION_112	ELSE_3	IF_18	CALL_13
0x40086ea	     0xf8578080000	                           jne 0x4008f68	      9456	tc-i386.c	FUNCTION_112	ELSE_3	IF_18	CALL_13
0x40086f0	      0x410fb60424	                   movzx eax, byte [r12]	      9461	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40086f5	           0xfb6d0	                           movzx edx, al	      9461	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40086f8	          0x4863ca	                         movsxd rcx, edx	      9461	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40086fb	    0x80b900000000	                       cmp byte [rcx], 0	      9461	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x4008702	            0x7520	                           jne 0x4008724	      9461	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x4008704	            0x3c22	                            cmp al, 0x22	      9464	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x4008706	        0x400f94c6	                                sete sil	      9464	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x400870a	            0x3c28	                            cmp al, 0x28	      9464	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x400870c	           0xf94c1	                                 sete cl	      9464	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x400870f	          0x4008ce	                              or sil, cl	      9464	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x4008712	            0x7510	                           jne 0x4008724	      9464	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x4008714	          0x4863d2	                         movsxd rdx, edx	      9462	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x4008717	    0x80ba00000000	                       cmp byte [rdx], 0	      9464	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x400871e	     0xf8402080000	                            je 0x4008f26	      9464	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x4008724	    0x8b0500000000	            mov eax, dword [0x0400872a] 	      9475	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_20	CALL_14
0x400872a	          0x83f801	                              cmp eax, 1	      9475	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_20	CALL_14
0x400872d	            0x752a	                           jne 0x4008759	      9475	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_20	CALL_14
0x400872f	      0xe841aeffff	         call sym.maybe_adjust_templates	      9475	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_20	CALL_14
0x4008734	            0x85c0	                           test eax, eax	      9475	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_20	CALL_14
0x4008736	     0xf8433080000	                            je 0x4008f6f	      9475	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_20	CALL_14
0x400873c	    0x8b0500000000	            mov eax, dword [0x04008742] 	      9477	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x4008742	          0x83f801	                              cmp eax, 1	      9477	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x4008745	            0x7512	                           jne 0x4008759	      9477	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x4008747	    0x488b05000000	            mov rax, qword [0x0400874e] 	      9478	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x400874e	          0x488b00	                    mov rax, qword [rax]	      9478	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x4008751	        0xf6402b01	               test byte [rax + 0x2b], 1	      9478	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x4008755	            0x753d	                           jne 0x4008794	      9478	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x4008757	            0xeb05	                           jmp 0x400875e	      9478	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x4008759	          0x83f802	                              cmp eax, 2	      9479	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x400875c	            0x7536	                           jne 0x4008794	      9479	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x400875e	    0x488b05000000	            mov rax, qword [0x04008765] 	      9482	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21
0x4008765	          0x488b00	                    mov rax, qword [rax]	      9481	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21	CALL_16
0x4008768	          0x4c8b20	                    mov r12, qword [rax]	      9481	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21	CALL_16
0x400876b	      0xba05000000	                              mov edx, 5	      9481	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21	CALL_16
0x4008770	      0xbe00000000	                              mov esi, 0	      9481	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21	CALL_16
0x4008775	      0xbf00000000	                              mov edi, 0	      9481	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21	CALL_16
0x400877a	      0xe800000000	                          call 0x400877f	      9481	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21	CALL_16
0x400877f	          0x4c89e6	                            mov rsi, r12	      9481	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21	CALL_16
0x4008782	          0x4889c7	                            mov rdi, rax	      9481	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21	CALL_16
0x4008785	      0xb800000000	                              mov eax, 0	      9481	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21	CALL_16
0x400878a	      0xe800000000	                          call 0x400878f	      9481	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21	CALL_16
0x400878f	      0xe9dd070000	                           jmp 0x4008f71	      9481	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_21	CALL_16
0x4008794	      0xb800000000	                              mov eax, 0	      9490	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_17
0x4008799	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      9490	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_17
0x40087a0	          0x4c89e7	                            mov rdi, r12	      9490	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_17
0x40087a3	            0xf2ae	              repne scasb al, byte [rdi]	      9490	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_17
0x40087a5	          0x4889c8	                            mov rax, rcx	      9490	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_17
0x40087a8	          0x48f7d0	                                 not rax	      9490	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_17
0x40087ab	      0x4d8d6c04ff	                lea r13, [r12 + rax - 1]	      9490	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_17
0x40087b0	      0xbe7b000000	                           mov esi, 0x7b	      9493	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_18
0x40087b5	          0x4c89e7	                            mov rdi, r12	      9493	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_18
0x40087b8	      0xe800000000	                          call 0x40087bd	      9493	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_18
0x40087bd	          0x4989c6	                            mov r14, rax	      9493	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_18
0x40087c0	          0x4885c0	                           test rax, rax	      9494	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22
0x40087c3	            0x741c	                            je 0x40087e1	      9494	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22
0x40087c5	          0x4939c5	                            cmp r13, rax	      9494	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22
0x40087c8	            0x7617	                           jbe 0x40087e1	      9494	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22
0x40087ca	          0x4c89ee	                            mov rsi, r13	      9496	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22	IF_23	CALL_19
0x40087cd	          0x4889c7	                            mov rdi, rax	      9496	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22	IF_23	CALL_19
0x40087d0	      0xe8f7d0ffff	            call sym.check_VecOperations	      9496	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22	IF_23	CALL_19
0x40087d5	          0x4885c0	                           test rax, rax	      9496	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22	IF_23	CALL_19
0x40087d8	     0xf8493070000	                            je 0x4008f71	      9496	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22	IF_23	CALL_19
0x40087de	          0x4d89f5	                            mov r13, r14	      9498	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_22
0x40087e1	        0x498d45ff	                      lea rax, [r13 - 1]	      9501	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40087e5	        0x4d8d75fe	                      lea r14, [r13 - 2]	      9501	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40087e9	      0x41807dff20	                cmp byte [r13 - 1], 0x20	      9501	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40087ee	        0x4c0f45f0	                         cmovne r14, rax	      9501	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40087f2	        0x498d4601	                      lea rax, [r14 + 1]	      9507	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40087f6	      0x4889442408	                mov qword [rsp + 8], rax	      9507	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x40087fb	      0xb801000000	                              mov eax, 1	      9509	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25
0x4008800	        0x41803e29	                    cmp byte [r14], 0x29	      9509	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25
0x4008804	            0x7408	                            je 0x400880e	      9509	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25
0x4008806	      0xe978030000	                           jmp 0x4008b83	      9509	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25
0x400880b	          0x4d89ee	                            mov r14, r13	      9517	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1
0x400880e	        0x4d8d6eff	                      lea r13, [r14 - 1]	      9517	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1
0x4008812	      0x410fb656ff	               movzx edx, byte [r14 - 1]	      9518	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1	IF_26
0x4008817	          0x80fa29	                            cmp dl, 0x29	      9518	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1	IF_26
0x400881a	            0x7505	                           jne 0x4008821	      9518	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1	IF_26
0x400881c	          0x83c001	                              add eax, 1	      9519	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1	IF_26
0x400881f	            0xeb0b	                           jmp 0x400882c	      9519	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1	IF_26
0x4008821	          0x80fa28	                            cmp dl, 0x28	      9521	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1	IF_27
0x4008824	           0xf94c2	                                 sete dl	      9521	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1	IF_27
0x4008827	           0xfb6d2	                           movzx edx, dl	      9521	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1	IF_27
0x400882a	            0x29d0	                            sub eax, edx	      9521	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1	IF_27
0x400882c	            0x85c0	                           test eax, eax	      9523	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25
0x400882e	            0x75db	                           jne 0x400880b	      9523	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25
0x4008830	        0x498d4502	                      lea rax, [r13 + 2]	      9530	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_28
0x4008834	      0x41807d0120	                cmp byte [r13 + 1], 0x20	      9530	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_28
0x4008839	        0x4c0f44f0	                          cmove r14, rax	      9530	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_28
0x400883d	        0x41803e2c	                    cmp byte [r14], 0x2c	      9532	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29
0x4008841	            0x741d	                            je 0x4008860	      9532	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29
0x4008843	      0x488d742450	                   lea rsi, [rsp + 0x50]	      9533	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	CALL_20
0x4008848	          0x4c89f7	                            mov rdi, r14	      9533	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	CALL_20
0x400884b	      0xe869cfffff	                 call sym.parse_register	      9533	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	CALL_20
0x4008850	    0x488905000000	            mov qword [0x04008857], rax 	      9533	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	CALL_20
0x4008857	          0x4885c0	                           test rax, rax	      9533	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	CALL_20
0x400885a	     0xf84d6020000	                            je 0x4008b36	      9533	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	CALL_20
0x4008860	    0x486305000000	         movsxd rax, dword [0x04008867] 	      9538	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29
0x4008867	    0x800cc5000000	                   or byte [rax*8], 0x40	      9538	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29
0x400886f	    0x48833d000000	               cmp qword [0x04008877], 0	      9540	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_30
0x4008877	            0x7412	                            je 0x400888b	      9540	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_30
0x4008879	      0x4c8b742450	            mov r14, qword [rsp + 0x50] 	      9542	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_30
0x400887e	        0x41803e20	                    cmp byte [r14], 0x20	      9544	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_30	IF_31
0x4008882	           0xf94c0	                                 sete al	      9544	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_30	IF_31
0x4008885	           0xfb6c0	                           movzx eax, al	      9544	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_30	IF_31
0x4008888	          0x4901c6	                            add r14, rax	      9544	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_30	IF_31
0x400888b	        0x410fb606	                   movzx eax, byte [r14]	      9548	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32
0x400888f	            0x3c2c	                            cmp al, 0x2c	      9548	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32
0x4008891	     0xf856d020000	                           jne 0x4008b04	      9548	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32
0x4008897	        0x498d4602	                      lea rax, [r14 + 2]	      9552	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_33
0x400889b	        0x498d5601	                      lea rdx, [r14 + 1]	      9552	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_33
0x400889f	      0x41807e0120	                cmp byte [r14 + 1], 0x20	      9552	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_33
0x40088a4	        0x480f45c2	                         cmovne rax, rdx	      9552	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_33
0x40088a8	          0x4989c6	                            mov r14, rax	      9552	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_33
0x40088ab	      0x488d742450	                   lea rsi, [rsp + 0x50]	      9554	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	CALL_21
0x40088b0	          0x4889c7	                            mov rdi, rax	      9554	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	CALL_21
0x40088b3	      0xe801cfffff	                 call sym.parse_register	      9554	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	CALL_21
0x40088b8	    0x488905000000	            mov qword [0x040088bf], rax 	      9554	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	CALL_21
0x40088bf	          0x4885c0	                           test rax, rax	      9554	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	CALL_21
0x40088c2	            0x746f	                            je 0x4008933	      9554	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	CALL_21
0x40088c4	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      9557	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34
0x40088c9	          0x803820	                    cmp byte [rax], 0x20	      9559	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_35
0x40088cc	           0xf94c2	                                 sete dl	      9559	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_35
0x40088cf	           0xfb6d2	                           movzx edx, dl	      9559	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_35
0x40088d2	          0x4801d0	                            add rax, rdx	      9559	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_35
0x40088d5	           0xfb610	                   movzx edx, byte [rax]	      9560	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_36
0x40088d8	          0x80fa2c	                            cmp dl, 0x2c	      9560	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_36
0x40088db	            0x751f	                           jne 0x40088fc	      9560	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_36
0x40088dd	        0x488d5002	                      lea rdx, [rax + 2]	      9564	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_36	IF_37
0x40088e1	        0x4c8d7001	                      lea r14, [rax + 1]	      9564	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_36	IF_37
0x40088e5	        0x80780120	                cmp byte [rax + 1], 0x20	      9564	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_36	IF_37
0x40088e9	        0x4c0f44f2	                          cmove r14, rdx	      9564	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	IF_36	IF_37
0x40088ed	        0x41803e29	                    cmp byte [r14], 0x29	      9584	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41
0x40088f1	     0xf858b000000	                           jne 0x4008982	      9584	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41
0x40088f7	      0xe986070000	                           jmp 0x4009082	      9584	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41
0x40088fc	      0x4c896c2408	                mov qword [rsp + 8], r13	      9517	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1
0x4008901	          0x80fa29	                            cmp dl, 0x29	      9566	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	ELSE_5	IF_38
0x4008904	     0xf8479020000	                            je 0x4008b83	      9566	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	ELSE_5	IF_38
0x400890a	      0xba05000000	                              mov edx, 5	      9568	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	ELSE_5	IF_38	CALL_23
0x400890f	      0xbe00000000	                              mov esi, 0	      9568	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	ELSE_5	IF_38	CALL_23
0x4008914	      0xbf00000000	                              mov edi, 0	      9568	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	ELSE_5	IF_38	CALL_23
0x4008919	      0xe800000000	                          call 0x400891e	      9568	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	ELSE_5	IF_38	CALL_23
0x400891e	          0x4c89fe	                            mov rsi, r15	      9568	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	ELSE_5	IF_38	CALL_23
0x4008921	          0x4889c7	                            mov rdi, rax	      9568	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	ELSE_5	IF_38	CALL_23
0x4008924	      0xb800000000	                              mov eax, 0	      9568	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	ELSE_5	IF_38	CALL_23
0x4008929	      0xe800000000	                          call 0x400892e	      9568	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	ELSE_5	IF_38	CALL_23
0x400892e	      0xe93e060000	                           jmp 0x4008f71	      9568	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_34	ELSE_5	IF_38	CALL_23
0x4008933	        0x410fb606	                   movzx eax, byte [r14]	      9574	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39
0x4008937	            0x3c25	                            cmp al, 0x25	      9574	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39
0x4008939	     0xf854d070000	                           jne 0x400908c	      9574	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39
0x400893f	      0xbe2c000000	                           mov esi, 0x2c	      9576	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39	CALL_24
0x4008944	          0x4c89f7	                            mov rdi, r14	      9576	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39	CALL_24
0x4008947	      0xe800000000	                          call 0x400894c	      9576	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39	CALL_24
0x400894c	      0x4889442450	             mov qword [rsp + 0x50], rax	      9576	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39	CALL_24
0x4008951	          0x4885c0	                           test rax, rax	      9577	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39	IF_40
0x4008954	            0x7403	                            je 0x4008959	      9577	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39	IF_40
0x4008956	          0xc60000	                       mov byte [rax], 0	      9578	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39	IF_40
0x4008959	      0xba05000000	                              mov edx, 5	      9579	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39	CALL_26
0x400895e	      0xbe00000000	                              mov esi, 0	      9579	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39	CALL_26
0x4008963	      0xbf00000000	                              mov edi, 0	      9579	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39	CALL_26
0x4008968	      0xe800000000	                          call 0x400896d	      9579	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39	CALL_26
0x400896d	          0x4c89f6	                            mov rsi, r14	      9579	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39	CALL_26
0x4008970	          0x4889c7	                            mov rdi, rax	      9579	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39	CALL_26
0x4008973	      0xb800000000	                              mov eax, 0	      9579	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39	CALL_26
0x4008978	      0xe800000000	                          call 0x400897d	      9579	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39	CALL_26
0x400897d	      0xe9ef050000	                           jmp 0x4008f71	      9579	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_6	IF_39	CALL_26
0x4008982	    0x488b05000000	            mov rax, qword [0x04008989] 	      8759	tc-i386.c	FUNCTION_105
0x4008989	      0x4889442408	                mov qword [rsp + 8], rax	      8759	tc-i386.c	FUNCTION_105
0x400898e	    0x4c8935000000	            mov qword [0x04008995], r14 	      8761	tc-i386.c	FUNCTION_105
0x4008995	      0xe800000000	                          call 0x400899a	      8762	tc-i386.c	FUNCTION_105	CALL_1
0x400899a	        0x4883f802	                              cmp rax, 2	      8764	tc-i386.c	FUNCTION_105	SWITCH_1
0x400899e	            0x742b	                            je 0x40089cb	      8764	tc-i386.c	FUNCTION_105	SWITCH_1
0x40089a0	        0x4883f802	                              cmp rax, 2	      8764	tc-i386.c	FUNCTION_105	SWITCH_1
0x40089a4	            0x7f08	                            jg 0x40089ae	      8764	tc-i386.c	FUNCTION_105	SWITCH_1
0x40089a6	        0x4883f801	                              cmp rax, 1	      8764	tc-i386.c	FUNCTION_105	SWITCH_1
0x40089aa	            0x7410	                            je 0x40089bc	      8764	tc-i386.c	FUNCTION_105	SWITCH_1
0x40089ac	            0xeb4a	                           jmp 0x40089f8	      8764	tc-i386.c	FUNCTION_105	SWITCH_1
0x40089ae	        0x4883f804	                              cmp rax, 4	      8764	tc-i386.c	FUNCTION_105	SWITCH_1
0x40089b2	            0x7426	                            je 0x40089da	      8764	tc-i386.c	FUNCTION_105	SWITCH_1
0x40089b4	        0x4883f808	                              cmp rax, 8	      8764	tc-i386.c	FUNCTION_105	SWITCH_1
0x40089b8	            0x742f	                            je 0x40089e9	      8764	tc-i386.c	FUNCTION_105	SWITCH_1
0x40089ba	            0xeb3c	                           jmp 0x40089f8	      8764	tc-i386.c	FUNCTION_105	SWITCH_1
0x40089bc	    0xc70500000000	               mov dword [0x040089c6], 0	      8767	tc-i386.c	FUNCTION_105	SWITCH_1
0x40089c6	      0xe9b1000000	                           jmp 0x4008a7c	      8767	tc-i386.c	FUNCTION_105	SWITCH_1
0x40089cb	    0xc70500000000	               mov dword [0x040089d5], 1	      8770	tc-i386.c	FUNCTION_105	SWITCH_1
0x40089d5	      0xe9bf060000	                           jmp 0x4009099	      8770	tc-i386.c	FUNCTION_105	SWITCH_1
0x40089da	    0xc70500000000	               mov dword [0x040089e4], 2	      8773	tc-i386.c	FUNCTION_105	SWITCH_1
0x40089e4	      0xe9b0060000	                           jmp 0x4009099	      8773	tc-i386.c	FUNCTION_105	SWITCH_1
0x40089e9	    0xc70500000000	               mov dword [0x040089f3], 3	      8776	tc-i386.c	FUNCTION_105	SWITCH_1
0x40089f3	      0xe9a1060000	                           jmp 0x4009099	      8776	tc-i386.c	FUNCTION_105	SWITCH_1
0x40089f8	    0x488b05000000	            mov rax, qword [0x040089ff] 	      8780	tc-i386.c	FUNCTION_105	SWITCH_1
0x40089ff	        0x440fb620	                  movzx r12d, byte [rax]	      8780	tc-i386.c	FUNCTION_105	SWITCH_1
0x4008a03	          0xc60000	                       mov byte [rax], 0	      8782	tc-i386.c	FUNCTION_105	SWITCH_1
0x4008a06	      0xba05000000	                              mov edx, 5	      8783	tc-i386.c	FUNCTION_105	SWITCH_1	CALL_3
0x4008a0b	      0xbe00000000	                              mov esi, 0	      8783	tc-i386.c	FUNCTION_105	SWITCH_1	CALL_3
0x4008a10	      0xbf00000000	                              mov edi, 0	      8783	tc-i386.c	FUNCTION_105	SWITCH_1	CALL_3
0x4008a15	      0xe800000000	                          call 0x4008a1a	      8783	tc-i386.c	FUNCTION_105	SWITCH_1	CALL_3
0x4008a1a	          0x4c89f6	                            mov rsi, r14	      8783	tc-i386.c	FUNCTION_105	SWITCH_1	CALL_3
0x4008a1d	          0x4889c7	                            mov rdi, rax	      8783	tc-i386.c	FUNCTION_105	SWITCH_1	CALL_3
0x4008a20	      0xb800000000	                              mov eax, 0	      8783	tc-i386.c	FUNCTION_105	SWITCH_1	CALL_3
0x4008a25	      0xe800000000	                          call 0x4008a2a	      8783	tc-i386.c	FUNCTION_105	SWITCH_1	CALL_3
0x4008a2a	    0x488b05000000	            mov rax, qword [0x04008a31] 	      8785	tc-i386.c	FUNCTION_105	SWITCH_1
0x4008a31	          0x448820	                    mov byte [rax], r12b	      8785	tc-i386.c	FUNCTION_105	SWITCH_1
0x4008a34	      0x488b442408	                mov rax, qword [rsp + 8]	      8786	tc-i386.c	FUNCTION_105	SWITCH_1
0x4008a39	    0x488905000000	            mov qword [0x04008a40], rax 	      8786	tc-i386.c	FUNCTION_105	SWITCH_1
0x4008a40	      0xe92c050000	                           jmp 0x4008f71	      8786	tc-i386.c	FUNCTION_105	SWITCH_1
0x4008a45	      0xba05000000	                              mov edx, 5	      8792	tc-i386.c	FUNCTION_105	IF_1	CALL_5
0x4008a4a	      0xbe00000000	                              mov esi, 0	      8792	tc-i386.c	FUNCTION_105	IF_1	CALL_5
0x4008a4f	      0xbf00000000	                              mov edi, 0	      8792	tc-i386.c	FUNCTION_105	IF_1	CALL_5
0x4008a54	      0xe800000000	                          call 0x4008a59	      8792	tc-i386.c	FUNCTION_105	IF_1	CALL_5
0x4008a59	      0xba01000000	                              mov edx, 1	      8792	tc-i386.c	FUNCTION_105	IF_1	CALL_5
0x4008a5e	            0x89d6	                            mov esi, edx	      8792	tc-i386.c	FUNCTION_105	IF_1	CALL_5
0x4008a60	          0x4489f1	                           mov ecx, r14d	      8792	tc-i386.c	FUNCTION_105	IF_1	CALL_5
0x4008a63	            0xd3e6	                             shl esi, cl	      8792	tc-i386.c	FUNCTION_105	IF_1	CALL_5
0x4008a65	          0x4889c7	                            mov rdi, rax	      8792	tc-i386.c	FUNCTION_105	IF_1	CALL_5
0x4008a68	      0xb800000000	                              mov eax, 0	      8792	tc-i386.c	FUNCTION_105	IF_1	CALL_5
0x4008a6d	      0xe800000000	                          call 0x4008a72	      8792	tc-i386.c	FUNCTION_105	IF_1	CALL_5
0x4008a72	    0xc70500000000	               mov dword [0x04008a7c], 0	      8794	tc-i386.c	FUNCTION_105	IF_1
0x4008a7c	    0x488b05000000	            mov rax, qword [0x04008a83] 	      8796	tc-i386.c	FUNCTION_105
0x4008a83	      0x488b742408	                mov rsi, qword [rsp + 8]	      8797	tc-i386.c	FUNCTION_105
0x4008a88	    0x488935000000	            mov qword [0x04008a8f], rsi 	      8797	tc-i386.c	FUNCTION_105
0x4008a8f	          0x4885c0	                           test rax, rax	      9588	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_42
0x4008a92	     0xf84d9040000	                            je 0x4008f71	      9588	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_42
0x4008a98	          0x803820	                    cmp byte [rax], 0x20	      9593	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_43
0x4008a9b	           0xf94c2	                                 sete dl	      9593	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_43
0x4008a9e	           0xfb6d2	                           movzx edx, dl	      9593	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_43
0x4008aa1	      0x4c896c2408	                mov qword [rsp + 8], r13	      9517	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1
0x4008aa6	        0x803c1029	              cmp byte [rax + rdx], 0x29	      9594	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44
0x4008aaa	     0xf84d3000000	                            je 0x4008b83	      9594	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44
0x4008ab0	      0xba05000000	                              mov edx, 5	      9596	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44	CALL_29
0x4008ab5	      0xbe00000000	                              mov esi, 0	      9596	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44	CALL_29
0x4008aba	      0xbf00000000	                              mov edi, 0	      9596	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44	CALL_29
0x4008abf	      0xe800000000	                          call 0x4008ac4	      9596	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44	CALL_29
0x4008ac4	          0x4c89fe	                            mov rsi, r15	      9596	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44	CALL_29
0x4008ac7	          0x4889c7	                            mov rdi, rax	      9596	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44	CALL_29
0x4008aca	      0xb800000000	                              mov eax, 0	      9596	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44	CALL_29
0x4008acf	      0xe800000000	                          call 0x4008ad4	      9596	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44	CALL_29
0x4008ad4	      0xe998040000	                           jmp 0x4008f71	      9596	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41	IF_44	CALL_29
0x4008ad9	      0xba05000000	                              mov edx, 5	      9604	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_7	IF_45	CALL_31
0x4008ade	      0xbe00000000	                              mov esi, 0	      9604	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_7	IF_45	CALL_31
0x4008ae3	      0xbf00000000	                              mov edi, 0	      9604	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_7	IF_45	CALL_31
0x4008ae8	      0xe800000000	                          call 0x4008aed	      9604	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_7	IF_45	CALL_31
0x4008aed	      0xbe29000000	                           mov esi, 0x29	      9604	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_7	IF_45	CALL_31
0x4008af2	          0x4889c7	                            mov rdi, rax	      9604	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_7	IF_45	CALL_31
0x4008af5	      0xb800000000	                              mov eax, 0	      9604	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_7	IF_45	CALL_31
0x4008afa	      0xe800000000	                          call 0x4008aff	      9604	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_7	IF_45	CALL_31
0x4008aff	      0xe96d040000	                           jmp 0x4008f71	      9604	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	ELSE_7	IF_45	CALL_31
0x4008b04	      0x4c896c2408	                mov qword [rsp + 8], r13	      9517	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1
0x4008b09	            0x3c29	                            cmp al, 0x29	      9610	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	ELSE_8	IF_46
0x4008b0b	            0x7476	                            je 0x4008b83	      9610	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	ELSE_8	IF_46
0x4008b0d	      0xba05000000	                              mov edx, 5	      9612	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	ELSE_8	IF_46	CALL_33
0x4008b12	      0xbe00000000	                              mov esi, 0	      9612	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	ELSE_8	IF_46	CALL_33
0x4008b17	      0xbf00000000	                              mov edi, 0	      9612	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	ELSE_8	IF_46	CALL_33
0x4008b1c	      0xe800000000	                          call 0x4008b21	      9612	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	ELSE_8	IF_46	CALL_33
0x4008b21	          0x4c89fe	                            mov rsi, r15	      9612	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	ELSE_8	IF_46	CALL_33
0x4008b24	          0x4889c7	                            mov rdi, rax	      9612	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	ELSE_8	IF_46	CALL_33
0x4008b27	      0xb800000000	                              mov eax, 0	      9612	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	ELSE_8	IF_46	CALL_33
0x4008b2c	      0xe800000000	                          call 0x4008b31	      9612	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	ELSE_8	IF_46	CALL_33
0x4008b31	      0xe93b040000	                           jmp 0x4008f71	      9612	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	ELSE_8	IF_46	CALL_33
0x4008b36	        0x41803e25	                    cmp byte [r14], 0x25	      9618	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47
0x4008b3a	     0xf8573050000	                           jne 0x40090b3	      9618	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47
0x4008b40	      0xbe2c000000	                           mov esi, 0x2c	      9620	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_34
0x4008b45	          0x4c89f7	                            mov rdi, r14	      9620	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_34
0x4008b48	      0xe800000000	                          call 0x4008b4d	      9620	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_34
0x4008b4d	      0x4889442450	             mov qword [rsp + 0x50], rax	      9620	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_34
0x4008b52	          0x4885c0	                           test rax, rax	      9621	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	IF_48
0x4008b55	            0x7403	                            je 0x4008b5a	      9621	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	IF_48
0x4008b57	          0xc60000	                       mov byte [rax], 0	      9622	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	IF_48
0x4008b5a	      0xba05000000	                              mov edx, 5	      9623	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_36
0x4008b5f	      0xbe00000000	                              mov esi, 0	      9623	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_36
0x4008b64	      0xbf00000000	                              mov edi, 0	      9623	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_36
0x4008b69	      0xe800000000	                          call 0x4008b6e	      9623	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_36
0x4008b6e	          0x4c89f6	                            mov rsi, r14	      9623	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_36
0x4008b71	          0x4889c7	                            mov rdi, rax	      9623	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_36
0x4008b74	      0xb800000000	                              mov eax, 0	      9623	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_36
0x4008b79	      0xe800000000	                          call 0x4008b7e	      9623	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_36
0x4008b7e	      0xe9ee030000	                           jmp 0x4008f71	      9623	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	ELSE_9	IF_47	CALL_36
0x4008b83	      0x4c3b642408	                cmp r12, qword [rsp + 8]	      9631	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_49
0x4008b88	     0xf84d3020000	                            je 0x4008e61	      9631	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_49
0x4008b8e	    0x48c744247000	               mov qword [rsp + 0x70], 0	      8809	tc-i386.c	FUNCTION_106
0x4008b97	      0xc64424721f	            mov byte [rsp + 0x72], 0x1f 	      8809	tc-i386.c	FUNCTION_106
0x4008b9c	    0x833d00000000	               cmp dword [0x04008ba3], 2	      8812	tc-i386.c	FUNCTION_106	IF_1
0x4008ba3	            0x752b	                           jne 0x4008bd0	      8812	tc-i386.c	FUNCTION_106	IF_1
0x4008ba5	      0xba05000000	                              mov edx, 5	      8814	tc-i386.c	FUNCTION_106	IF_1	CALL_2
0x4008baa	      0xbe00000000	                              mov esi, 0	      8814	tc-i386.c	FUNCTION_106	IF_1	CALL_2
0x4008baf	      0xbf00000000	                              mov edi, 0	      8814	tc-i386.c	FUNCTION_106	IF_1	CALL_2
0x4008bb4	      0xe800000000	                          call 0x4008bb9	      8814	tc-i386.c	FUNCTION_106	IF_1	CALL_2
0x4008bb9	      0xbe02000000	                              mov esi, 2	      8814	tc-i386.c	FUNCTION_106	IF_1	CALL_2
0x4008bbe	          0x4889c7	                            mov rdi, rax	      8814	tc-i386.c	FUNCTION_106	IF_1	CALL_2
0x4008bc1	      0xb800000000	                              mov eax, 0	      8814	tc-i386.c	FUNCTION_106	IF_1	CALL_2
0x4008bc6	      0xe800000000	                          call 0x4008bcb	      8814	tc-i386.c	FUNCTION_106	IF_1	CALL_2
0x4008bcb	      0xe9a1030000	                           jmp 0x4008f71	      8814	tc-i386.c	FUNCTION_106	IF_1	CALL_2
0x4008bd0	    0x48b800000000	          movabs rax, 0xffffffff00000000	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x4008bda	      0x4823442430	             and rax, qword [rsp + 0x30]	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x4008bdf	    0x8b1500000000	            mov edx, dword [0x04008be5] 	      8820	tc-i386.c	FUNCTION_106	IF_2
0x4008be5	          0x4863ca	                         movsxd rcx, edx	      8820	tc-i386.c	FUNCTION_106	IF_2
0x4008be8	    0xf604cd000000	                    test byte [rcx*8], 2	      8820	tc-i386.c	FUNCTION_106	IF_2
0x4008bf0	            0x7510	                           jne 0x4008c02	      8820	tc-i386.c	FUNCTION_106	IF_2
0x4008bf2	    0x488b0d000000	            mov rcx, qword [0x04008bf9] 	      8821	tc-i386.c	FUNCTION_106	IF_2
0x4008bf9	          0x488b09	                    mov rcx, qword [rcx]	      8822	tc-i386.c	FUNCTION_106	IF_2
0x4008bfc	        0xf6412860	           test byte [rcx + 0x28], 0x60 	      8821	tc-i386.c	FUNCTION_106	IF_2
0x4008c00	            0x7560	                           jne 0x4008c62	      8821	tc-i386.c	FUNCTION_106	IF_2
0x4008c02	    0x480d00000400	                         or rax, 0x40000	      8824	tc-i386.c	FUNCTION_106	IF_2
0x4008c08	      0x4889442430	             mov qword [rsp + 0x30], rax	      8824	tc-i386.c	FUNCTION_106	IF_2
0x4008c0d	     0xfb60d000000	           movzx ecx, byte [0x04008c14] 	      8825	tc-i386.c	FUNCTION_106	IF_2
0x4008c14	    0x8b3500000000	            mov esi, dword [0x04008c1a] 	      8826	tc-i386.c	FUNCTION_106	IF_2	IF_3
0x4008c1a	          0x83fe02	                              cmp esi, 2	      8826	tc-i386.c	FUNCTION_106	IF_2	IF_3
0x4008c1d	            0x7518	                           jne 0x4008c37	      8826	tc-i386.c	FUNCTION_106	IF_2	IF_3
0x4008c1f	    0x480d00001800	                        or rax, 0x180000	      8831	tc-i386.c	FUNCTION_106	IF_2	IF_3	IF_4
0x4008c25	            0x84c9	                             test cl, cl	      8831	tc-i386.c	FUNCTION_106	IF_2	IF_3	IF_4
0x4008c27	    0x480f45442430	          cmovne rax, qword [rsp + 0x30]	      8831	tc-i386.c	FUNCTION_106	IF_2	IF_3	IF_4
0x4008c2d	      0x4889442430	             mov qword [rsp + 0x30], rax	      8831	tc-i386.c	FUNCTION_106	IF_2	IF_3	IF_4
0x4008c32	      0xe9b8000000	                           jmp 0x4008cef	      8831	tc-i386.c	FUNCTION_106	IF_2	IF_3	IF_4
0x4008c37	            0x84c9	                             test cl, cl	      8834	tc-i386.c	FUNCTION_106	IF_2	ELSE_1	IF_5
0x4008c39	        0x400f95c7	                               setne dil	      8834	tc-i386.c	FUNCTION_106	IF_2	ELSE_1	IF_5
0x4008c3d	          0x83fe01	                              cmp esi, 1	      8834	tc-i386.c	FUNCTION_106	IF_2	ELSE_1	IF_5
0x4008c40	           0xf94c1	                                 sete cl	      8834	tc-i386.c	FUNCTION_106	IF_2	ELSE_1	IF_5
0x4008c43	          0x4038cf	                             cmp dil, cl	      8834	tc-i386.c	FUNCTION_106	IF_2	ELSE_1	IF_5
0x4008c46	     0xf84a3000000	                            je 0x4008cef	      8834	tc-i386.c	FUNCTION_106	IF_2	ELSE_1	IF_5
0x4008c4c	    0x4825fffffbff	             and rax, 0xfffffffffffbffff	      8836	tc-i386.c	FUNCTION_106	IF_2	ELSE_1	IF_5
0x4008c52	    0x480d00000200	                         or rax, 0x20000	      8837	tc-i386.c	FUNCTION_106	IF_2	ELSE_1	IF_5
0x4008c58	      0x4889442430	             mov qword [rsp + 0x30], rax	      8837	tc-i386.c	FUNCTION_106	IF_2	ELSE_1	IF_5
0x4008c5d	      0xe98d000000	                           jmp 0x4008cef	      8837	tc-i386.c	FUNCTION_106	IF_2	ELSE_1	IF_5
0x4008c62	     0xfb63d000000	           movzx edi, byte [0x04008c69] 	      8844	tc-i386.c	FUNCTION_106	ELSE_2
0x4008c69	    0x8b3500000000	            mov esi, dword [0x04008c6f] 	      8845	tc-i386.c	FUNCTION_106	ELSE_2	IF_6
0x4008c6f	          0x83fe02	                              cmp esi, 2	      8845	tc-i386.c	FUNCTION_106	ELSE_2	IF_6
0x4008c72	            0x752a	                           jne 0x4008c9e	      8845	tc-i386.c	FUNCTION_106	ELSE_2	IF_6
0x4008c74	          0x4084ff	                           test dil, dil	      8847	tc-i386.c	FUNCTION_106	ELSE_2	IF_6	IF_7
0x4008c77	            0x7518	                           jne 0x4008c91	      8847	tc-i386.c	FUNCTION_106	ELSE_2	IF_6	IF_7
0x4008c79	          0x4889c6	                            mov rsi, rax	      8852	tc-i386.c	FUNCTION_106	ELSE_2	IF_6	ELSE_3
0x4008c7c	    0x4881ce00000c	                         or rsi, 0xc0000	      8852	tc-i386.c	FUNCTION_106	ELSE_2	IF_6	ELSE_3
0x4008c83	      0x4889742430	             mov qword [rsp + 0x30], rsi	      8852	tc-i386.c	FUNCTION_106	ELSE_2	IF_6	ELSE_3
0x4008c88	    0x803d00000000	            cmp byte [0x04008c8f], 0x77 	      8847	tc-i386.c	FUNCTION_106	ELSE_2	IF_6	IF_7
0x4008c8f	            0x755e	                           jne 0x4008cef	      8847	tc-i386.c	FUNCTION_106	ELSE_2	IF_6	IF_7
0x4008c91	    0x480d00000200	                         or rax, 0x20000	      8848	tc-i386.c	FUNCTION_106	ELSE_2	IF_6	IF_7
0x4008c97	      0x4889442430	             mov qword [rsp + 0x30], rax	      8848	tc-i386.c	FUNCTION_106	ELSE_2	IF_6	IF_7
0x4008c9c	            0xeb51	                           jmp 0x4008cef	      8848	tc-i386.c	FUNCTION_106	ELSE_2	IF_6	IF_7
0x4008c9e	      0xb901000000	                              mov ecx, 1	      8844	tc-i386.c	FUNCTION_106	ELSE_2
0x4008ca3	          0x4084ff	                           test dil, dil	      8857	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_8
0x4008ca6	            0x7521	                           jne 0x4008cc9	      8857	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_8
0x4008ca8	     0xfbe3d000000	           movsx edi, byte [0x04008caf] 	      8858	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_8
0x4008caf	          0x83fe01	                              cmp esi, 1	      8860	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_8
0x4008cb2	    0x41b86c000000	                           mov r8d, 0x6c	      8860	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_8
0x4008cb8	      0xb977000000	                           mov ecx, 0x77	      8860	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_8
0x4008cbd	        0x410f44c8	                          cmove ecx, r8d	      8860	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_8
0x4008cc1	            0x39cf	                            cmp edi, ecx	      8858	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_8
0x4008cc3	           0xf94c1	                                 sete cl	      8858	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_8
0x4008cc6	           0xfb6c9	                           movzx ecx, cl	      8858	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_8
0x4008cc9	          0x83fe01	                              cmp esi, 1	      8862	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_9
0x4008ccc	        0x400f94c6	                                sete sil	      8862	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_9
0x4008cd0	        0x400fb6f6	                          movzx esi, sil	      8862	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4	IF_9
0x4008cd4	          0x4889c7	                            mov rdi, rax	      8861	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4
0x4008cd7	    0x4881cf000004	                         or rdi, 0x40000	      8861	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4
0x4008cde	    0x480d00000200	                         or rax, 0x20000	      8861	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4
0x4008ce4	            0x39ce	                            cmp esi, ecx	      8861	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4
0x4008ce6	        0x480f45f8	                         cmovne rdi, rax	      8861	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4
0x4008cea	      0x48897c2430	             mov qword [rsp + 0x30], rdi	      8861	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4
0x4008cef	          0x4863c2	                         movsxd rax, edx	      8861	tc-i386.c	FUNCTION_106	ELSE_2	ELSE_4
0x4008cf2	        0x8b742430	            mov esi, dword [rsp + 0x30] 	      8869	tc-i386.c	FUNCTION_106	CALL_4
0x4008cf6	     0x934c5000000	                   or dword [rax*8], esi	      8869	tc-i386.c	FUNCTION_106	CALL_4
0x4008cfd	    0x448b2d000000	           mov r13d, dword [0x04008d04] 	      8872	tc-i386.c	FUNCTION_106
0x4008d04	          0x4489ea	                           mov edx, r13d	      8872	tc-i386.c	FUNCTION_106
0x4008d07	        0x48c1e205	                              shl rdx, 5	      8872	tc-i386.c	FUNCTION_106
0x4008d0b	    0x488db2000000	                          lea rsi, [rdx]	      8872	tc-i386.c	FUNCTION_106
0x4008d12	      0x4889742420	             mov qword [rsp + 0x20], rsi	      8872	tc-i386.c	FUNCTION_106
0x4008d17	    0x488934c50000	                  mov qword [rax*8], rsi	      8873	tc-i386.c	FUNCTION_106
0x4008d1f	        0x418d5501	                      lea edx, [r13 + 1]	      8874	tc-i386.c	FUNCTION_106
0x4008d23	    0x891500000000	            mov dword [0x04008d29], edx 	      8874	tc-i386.c	FUNCTION_106
0x4008d29	    0x488b35000000	            mov rsi, qword [0x04008d30] 	      8875	tc-i386.c	FUNCTION_106
0x4008d30	      0x4889742428	             mov qword [rsp + 0x28], rsi	      8875	tc-i386.c	FUNCTION_106
0x4008d35	    0x4c8925000000	            mov qword [0x04008d3c], r12 	      8876	tc-i386.c	FUNCTION_106
0x4008d3c	    0x488b15000000	            mov rdx, qword [0x04008d43] 	      8877	tc-i386.c	FUNCTION_106
0x4008d43	        0x488d4a01	                      lea rcx, [rdx + 1]	      8877	tc-i386.c	FUNCTION_106
0x4008d47	    0x48890d000000	            mov qword [0x04008d4e], rcx 	      8877	tc-i386.c	FUNCTION_106
0x4008d4e	      0x488b742408	                mov rsi, qword [rsp + 8]	      8877	tc-i386.c	FUNCTION_106
0x4008d53	           0xfb60e	                   movzx ecx, byte [rsi]	      8877	tc-i386.c	FUNCTION_106
0x4008d56	            0x880a	                      mov byte [rdx], cl	      8877	tc-i386.c	FUNCTION_106
0x4008d58	          0xc60600	                       mov byte [rsi], 0	      8877	tc-i386.c	FUNCTION_106
0x4008d5b	    0x488d3c850000	                        lea rdi, [rax*4]	      8923	tc-i386.c	FUNCTION_106
0x4008d63	      0x488d542470	                   lea rdx, [rsp + 0x70]	      8923	tc-i386.c	FUNCTION_106
0x4008d68	      0xbe00000000	                              mov esi, 0	      8923	tc-i386.c	FUNCTION_106
0x4008d6d	      0xe81ad1ffff	                        call sym.lex_got	      8923	tc-i386.c	FUNCTION_106
0x4008d72	          0x4989c6	                            mov r14, rax	      8923	tc-i386.c	FUNCTION_106
0x4008d75	          0x4885c0	                           test rax, rax	      8924	tc-i386.c	FUNCTION_106	IF_11
0x4008d78	            0x7407	                            je 0x4008d81	      8924	tc-i386.c	FUNCTION_106	IF_11
0x4008d7a	    0x488905000000	            mov qword [0x04008d81], rax 	      8925	tc-i386.c	FUNCTION_106	IF_11
0x4008d81	      0xba01000000	                              mov edx, 1	      8927	tc-i386.c	FUNCTION_106	CALL_5
0x4008d86	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      8927	tc-i386.c	FUNCTION_106	CALL_5
0x4008d8b	      0xbf00000000	                              mov edi, 0	      8927	tc-i386.c	FUNCTION_106	CALL_5
0x4008d90	      0xe800000000	                          call 0x4008d95	      8927	tc-i386.c	FUNCTION_106	CALL_5
0x4008d95	      0x4889442438	             mov qword [rsp + 0x38], rax	      8927	tc-i386.c	FUNCTION_106	CALL_5
0x4008d9a	    0x488b05000000	            mov rax, qword [0x04008da1] 	      8929	tc-i386.c	FUNCTION_106	CALL_6
0x4008da1	          0x803820	                    cmp byte [rax], 0x20	      8929	tc-i386.c	FUNCTION_106	CALL_6
0x4008da4	            0x750b	                           jne 0x4008db1	      8929	tc-i386.c	FUNCTION_106	CALL_6
0x4008da6	        0x4883c001	                              add rax, 1	      8929	tc-i386.c	FUNCTION_106	CALL_6
0x4008daa	    0x488905000000	            mov qword [0x04008db1], rax 	      8929	tc-i386.c	FUNCTION_106	CALL_6
0x4008db1	    0x488b05000000	            mov rax, qword [0x04008db8] 	      8930	tc-i386.c	FUNCTION_106	IF_12
0x4008db8	      0x4889442440	             mov qword [rsp + 0x40], rax	      8930	tc-i386.c	FUNCTION_106	IF_12
0x4008dbd	          0x803800	                       cmp byte [rax], 0	      8930	tc-i386.c	FUNCTION_106	IF_12
0x4008dc0	            0x7426	                            je 0x4008de8	      8930	tc-i386.c	FUNCTION_106	IF_12
0x4008dc2	      0xba05000000	                              mov edx, 5	      8931	tc-i386.c	FUNCTION_106	CALL_8
0x4008dc7	      0xbe00000000	                              mov esi, 0	      8931	tc-i386.c	FUNCTION_106	CALL_8
0x4008dcc	      0xbf00000000	                              mov edi, 0	      8931	tc-i386.c	FUNCTION_106	CALL_8
0x4008dd1	      0xe800000000	                          call 0x4008dd6	      8931	tc-i386.c	FUNCTION_106	CALL_8
0x4008dd6	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	      8931	tc-i386.c	FUNCTION_106	CALL_8
0x4008ddb	          0x4889c7	                            mov rdi, rax	      8931	tc-i386.c	FUNCTION_106	CALL_8
0x4008dde	      0xb800000000	                              mov eax, 0	      8931	tc-i386.c	FUNCTION_106	CALL_8
0x4008de3	      0xe800000000	                          call 0x4008de8	      8931	tc-i386.c	FUNCTION_106	CALL_8
0x4008de8	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      8935	tc-i386.c	FUNCTION_106
0x4008ded	    0x488905000000	            mov qword [0x04008df4], rax 	      8935	tc-i386.c	FUNCTION_106
0x4008df4	          0x4d85f6	                           test r14, r14	      8936	tc-i386.c	FUNCTION_106	IF_13
0x4008df7	            0x742c	                            je 0x4008e25	      8936	tc-i386.c	FUNCTION_106	IF_13
0x4008df9	          0x4c89f7	                            mov rdi, r14	      8938	tc-i386.c	FUNCTION_106	IF_13	CALL_9
0x4008dfc	      0xe800000000	                          call 0x4008e01	      8938	tc-i386.c	FUNCTION_106	IF_13	CALL_9
0x4008e01	          0x4489e8	                           mov eax, r13d	      8940	tc-i386.c	FUNCTION_106	IF_13	IF_14
0x4008e04	        0x48c1e005	                              shl rax, 5	      8940	tc-i386.c	FUNCTION_106	IF_13	IF_14
0x4008e08	     0xfb680000000	                   movzx eax, byte [rax]	      8940	tc-i386.c	FUNCTION_106	IF_13	IF_14
0x4008e0f	            0x3c02	                               cmp al, 2	      8940	tc-i386.c	FUNCTION_106	IF_13	IF_14
0x4008e11	            0x7404	                            je 0x4008e17	      8940	tc-i386.c	FUNCTION_106	IF_13	IF_14
0x4008e13	            0x3c05	                               cmp al, 5	      8940	tc-i386.c	FUNCTION_106	IF_13	IF_14
0x4008e15	            0x750e	                           jne 0x4008e25	      8940	tc-i386.c	FUNCTION_106	IF_13	IF_14
0x4008e17	          0x4489e8	                           mov eax, r13d	      8941	tc-i386.c	FUNCTION_106	IF_13	IF_14
0x4008e1a	        0x48c1e005	                              shl rax, 5	      8941	tc-i386.c	FUNCTION_106	IF_13	IF_14
0x4008e1e	    0xc68000000000	                       mov byte [rax], 0	      8941	tc-i386.c	FUNCTION_106	IF_13	IF_14
0x4008e25	          0x4c89e1	                            mov rcx, r12	      8944	tc-i386.c	FUNCTION_106	CALL_10
0x4008e28	      0x488b542470	            mov rdx, qword [rsp + 0x70] 	      8944	tc-i386.c	FUNCTION_106	CALL_10
0x4008e2d	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      8944	tc-i386.c	FUNCTION_106	CALL_10
0x4008e32	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      8944	tc-i386.c	FUNCTION_106	CALL_10
0x4008e37	      0xe816ceffff	     call sym.i386_finalize_displacement	      8944	tc-i386.c	FUNCTION_106	CALL_10
0x4008e3c	    0x488b15000000	            mov rdx, qword [0x04008e43] 	      8946	tc-i386.c	FUNCTION_106
0x4008e43	        0x488d4aff	                      lea rcx, [rdx - 1]	      8946	tc-i386.c	FUNCTION_106
0x4008e47	    0x48890d000000	            mov qword [0x04008e4e], rcx 	      8946	tc-i386.c	FUNCTION_106
0x4008e4e	         0xfb652ff	               movzx edx, byte [rdx - 1]	      8946	tc-i386.c	FUNCTION_106
0x4008e52	      0x488b742408	                mov rsi, qword [rsp + 8]	      8946	tc-i386.c	FUNCTION_106
0x4008e57	            0x8816	                      mov byte [rsi], dl	      8946	tc-i386.c	FUNCTION_106
0x4008e59	            0x85c0	                           test eax, eax	      9633	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_49	IF_50	CALL_37
0x4008e5b	     0xf8410010000	                            je 0x4008f71	      9633	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_49	IF_50	CALL_37
0x4008e61	    0x488b05000000	            mov rax, qword [0x04008e68] 	      9639	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4008e68	          0x4885c0	                           test rax, rax	      9639	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4008e6b	            0x7472	                            je 0x4008edf	      9639	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4008e6d	    0x8b3500000000	            mov esi, dword [0x04008e73] 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x4008e73	          0x39700c	              cmp dword [rax + 0xc], esi	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x4008e76	            0x7567	                           jne 0x4008edf	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x4008e78	    0x8b3500000000	            mov esi, dword [0x04008e7e] 	      9640	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51	CALL_38
0x4008e7e	          0x397008	                cmp dword [rax + 8], esi	      9640	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51	CALL_38
0x4008e81	            0x755c	                           jne 0x4008edf	      9640	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51	CALL_38
0x4008e83	    0x48833d000000	               cmp qword [0x04008e8b], 0	      9642	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4008e8b	            0x7552	                           jne 0x4008edf	      9642	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4008e8d	    0x833d00000000	               cmp dword [0x04008e94], 0	      9643	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4008e94	            0x7549	                           jne 0x4008edf	      9643	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4008e96	    0x8b0500000000	            mov eax, dword [0x04008e9c] 	      9644	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4008e9c	    0x48833cc50000	                    cmp qword [rax*8], 0	      9644	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4008ea5	            0x7538	                           jne 0x4008edf	      9644	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4008ea7	    0x8b0500000000	            mov eax, dword [0x04008ead] 	      9645	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51	CALL_39
0x4008ead	          0x4863d0	                         movsxd rdx, eax	      9645	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51	CALL_39
0x4008eb0	    0xf604d5000000	                 test byte [rdx*8], 0x1f	      9645	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51	CALL_39
0x4008eb8	            0x7525	                           jne 0x4008edf	      9645	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51	CALL_39
0x4008eba	          0x4889d0	                            mov rax, rdx	      9647	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4008ebd	        0x4883c00e	                            add rax, 0xe	      9647	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4008ec1	    0x48c704c50000	                    mov qword [rax*8], 0	      9647	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4008ecd	    0x800cc5000000	                   or byte [rax*8], 0x80	      9647	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4008ed5	      0xbd01000000	                              mov ebp, 1	      9648	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4008eda	      0xe992000000	                           jmp 0x4008f71	      9648	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_51
0x4008edf	          0x4c89ff	                            mov rdi, r15	      9651	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_52	CALL_40
0x4008ee2	      0xe81ba2ffff	               call sym.i386_index_check	      9651	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_52	CALL_40
0x4008ee7	            0x89c5	                            mov ebp, eax	      9651	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_52	CALL_40
0x4008ee9	            0x85c0	                           test eax, eax	      9651	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_52	CALL_40
0x4008eeb	     0xf8480000000	                            je 0x4008f71	      9651	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_52	CALL_40
0x4008ef1	    0x486305000000	         movsxd rax, dword [0x04008ef8] 	      9653	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x4008ef8	    0x800cc5000000	                   or byte [rax*8], 0x10	      9653	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x4008f00	    0x833d00000000	               cmp dword [0x04008f07], 0	      9654	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_53
0x4008f07	            0x750f	                           jne 0x4008f18	      9654	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_53
0x4008f09	          0x4c89ff	                            mov rdi, r15	      9655	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_41
0x4008f0c	      0xe800000000	                          call 0x4008f11	      9655	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_41
0x4008f11	    0x488905000000	            mov qword [0x04008f18], rax 	      9655	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	CALL_41
0x4008f18	    0x830500000000	               add dword [0x04008f1f], 1	      9656	tc-i386.c	FUNCTION_112	ELSE_4	IF_19
0x4008f1f	      0xbd01000000	                              mov ebp, 1	      9667	tc-i386.c	FUNCTION_112
0x4008f24	            0xeb4b	                           jmp 0x4008f71	      9667	tc-i386.c	FUNCTION_112
0x4008f26	    0x8b3500000000	            mov esi, dword [0x04008f2c] 	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4008f2c	          0x8d6e01	                      lea ebp, [rsi + 1]	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4008f2f	           0xfbef8	                           movsx edi, al	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4008f32	      0xe886c0ffff	                 call sym.output_invalid	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4008f37	          0x4989c6	                            mov r14, rax	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4008f3a	      0xba05000000	                              mov edx, 5	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4008f3f	      0xbe00000000	                              mov esi, 0	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4008f44	      0xbf00000000	                              mov edi, 0	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4008f49	      0xe800000000	                          call 0x4008f4e	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4008f4e	          0x4c89e1	                            mov rcx, r12	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4008f51	            0x89ea	                            mov edx, ebp	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4008f53	          0x4c89f6	                            mov rsi, r14	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4008f56	          0x4889c7	                            mov rdi, rax	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4008f59	      0xb800000000	                              mov eax, 0	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4008f5e	      0xe800000000	                          call 0x4008f63	      9661	tc-i386.c	FUNCTION_112	ELSE_10	CALL_43
0x4008f63	          0x4489ed	                           mov ebp, r13d	      9665	tc-i386.c	FUNCTION_112	ELSE_10
0x4008f66	            0xeb09	                           jmp 0x4008f71	      9665	tc-i386.c	FUNCTION_112	ELSE_10
0x4008f68	      0xbd01000000	                              mov ebp, 1	      9667	tc-i386.c	FUNCTION_112
0x4008f6d	            0xeb02	                           jmp 0x4008f71	      9667	tc-i386.c	FUNCTION_112
0x4008f6f	            0x89c5	                            mov ebp, eax	      9476	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_20
0x4008f71	    0x488b05000000	            mov rax, qword [0x04008f78] 	      4643	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x4008f78	        0x488d50ff	                      lea rdx, [rax - 1]	      4643	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x4008f7c	    0x488915000000	            mov qword [0x04008f83], rdx 	      4643	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x4008f83	         0xfb640ff	               movzx eax, byte [rax - 1]	      4643	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x4008f87	            0x8803	                      mov byte [rbx], al	      4643	tc-i386.c	FUNCTION_70	WHILE_1	IF_12
0x4008f89	            0x85ed	                           test ebp, ebp	      4644	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_15
0x4008f8b	            0x7561	                           jne 0x4008fee	      4644	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_15
0x4008f8d	      0xe98a000000	                           jmp 0x400901c	      4644	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_15
0x4008f92	      0x837c241c00	               cmp dword [rsp + 0x1c], 0	      4649	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_16
0x4008f97	            0x7428	                            je 0x4008fc1	      4649	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_16
0x4008f99	      0xba05000000	                              mov edx, 5	      4652	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_16	CALL_17
0x4008f9e	      0xbe00000000	                              mov esi, 0	      4652	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_16	CALL_17
0x4008fa3	      0xbf00000000	                              mov edi, 0	      4652	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_16	CALL_17
0x4008fa8	      0xe800000000	                          call 0x4008fad	      4652	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_16	CALL_17
0x4008fad	          0x4889c7	                            mov rdi, rax	      4652	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_16	CALL_17
0x4008fb0	      0xb800000000	                              mov eax, 0	      4652	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_16	CALL_17
0x4008fb5	      0xe800000000	                          call 0x4008fba	      4652	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_16	CALL_17
0x4008fba	      0xb800000000	                              mov eax, 0	      4653	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_16
0x4008fbf	            0xeb60	                           jmp 0x4009021	      4653	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_16
0x4008fc1	          0x803b2c	                    cmp byte [rbx], 0x2c	      4655	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_17
0x4008fc4	            0x7542	                           jne 0x4009008	      4655	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_17
0x4008fc6	      0xba05000000	                              mov edx, 5	      4657	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_17	CALL_19
0x4008fcb	      0xbe00000000	                              mov esi, 0	      4657	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_17	CALL_19
0x4008fd0	      0xbf00000000	                              mov edi, 0	      4657	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_17	CALL_19
0x4008fd5	      0xe800000000	                          call 0x4008fda	      4657	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_17	CALL_19
0x4008fda	          0x4889c7	                            mov rdi, rax	      4657	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_17	CALL_19
0x4008fdd	      0xb800000000	                              mov eax, 0	      4657	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_17	CALL_19
0x4008fe2	      0xe800000000	                          call 0x4008fe7	      4657	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_17	CALL_19
0x4008fe7	      0xb800000000	                              mov eax, 0	      4658	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_17
0x4008fec	            0xeb33	                           jmp 0x4009021	      4658	tc-i386.c	FUNCTION_70	WHILE_1	ELSE_6	IF_17
0x4008fee	          0x803b2c	                    cmp byte [rbx], 0x2c	      4663	tc-i386.c	FUNCTION_70	WHILE_1	IF_18
0x4008ff1	            0x7515	                           jne 0x4009008	      4663	tc-i386.c	FUNCTION_70	WHILE_1	IF_18
0x4008ff3	        0x488d4301	                      lea rax, [rbx + 1]	      4665	tc-i386.c	FUNCTION_70	WHILE_1	IF_18	IF_19
0x4008ff7	        0x807b0100	                   cmp byte [rbx + 1], 0	      4665	tc-i386.c	FUNCTION_70	WHILE_1	IF_18	IF_19
0x4008ffb	            0x749c	                            je 0x4008f99	      4665	tc-i386.c	FUNCTION_70	WHILE_1	IF_18	IF_19
0x4008ffd	          0x4889c3	                            mov rbx, rax	      4665	tc-i386.c	FUNCTION_70	WHILE_1	IF_18	IF_19
0x4009000	    0xc744241c0100	               mov dword [rsp + 0x1c], 1	      4670	tc-i386.c	FUNCTION_70	WHILE_1	IF_18
0x4009008	          0x4989df	                            mov r15, rbx	      4670	tc-i386.c	FUNCTION_70	WHILE_1	IF_18
0x400900b	        0x410fb607	                   movzx eax, byte [r15]	      4568	tc-i386.c	FUNCTION_70	WHILE_1
0x400900f	            0x84c0	                             test al, al	      4568	tc-i386.c	FUNCTION_70	WHILE_1
0x4009011	     0xf85f8e1ffff	                           jne 0x400720f	      4568	tc-i386.c	FUNCTION_70	WHILE_1
0x4009017	          0x4c89f8	                            mov rax, r15	      4568	tc-i386.c	FUNCTION_70	WHILE_1
0x400901a	            0xeb05	                           jmp 0x4009021	      4568	tc-i386.c	FUNCTION_70	WHILE_1
0x400901c	      0xb800000000	                              mov eax, 0	      4645	tc-i386.c	FUNCTION_70	WHILE_1	IF_12	IF_15
0x4009021	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	      4674	tc-i386.c	FUNCTION_70
0x4009026	    0x644833342528	                xor rsi, qword fs:[0x28]	      4674	tc-i386.c	FUNCTION_70
0x400902f	     0xf84c5000000	                            je 0x40090fa	      4674	tc-i386.c	FUNCTION_70
0x4009035	      0xe9bb000000	                           jmp 0x40090f5	      4674	tc-i386.c	FUNCTION_70
0x400903a	           0xfb603	                   movzx eax, byte [rbx]	      4584	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3
0x400903d	            0x84c0	                             test al, al	      4584	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3
0x400903f	     0xf85c3e2ffff	                           jne 0x4007308	      4584	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3
0x4009045	      0xe94ee2ffff	                           jmp 0x4007298	      4584	tc-i386.c	FUNCTION_70	WHILE_1	WHILE_2	IF_3
0x400904a	    0x4c8b35000000	            mov r14, qword [0x04009051] 	       593	tc-i386-intel.c	FUNCTION_181	ELSE_1	IF_4
0x4009051	        0x410fb606	                   movzx eax, byte [r14]	       593	tc-i386-intel.c	FUNCTION_181	ELSE_1	IF_4
0x4009055	    0xc74424080000	                  mov dword [rsp + 8], 0	       597	tc-i386-intel.c	FUNCTION_181	ELSE_1	IF_4
0x400905d	    0x80b800000000	                       cmp byte [rax], 0	       593	tc-i386-intel.c	FUNCTION_181	ELSE_1	IF_4
0x4009064	     0xf84f0e5ffff	                            je 0x400765a	       593	tc-i386-intel.c	FUNCTION_181	ELSE_1	IF_4
0x400906a	            0xeb57	                           jmp 0x40090c3	       593	tc-i386-intel.c	FUNCTION_181	ELSE_1	IF_4
0x400906c	          0x4863d0	                         movsxd rdx, eax	       807	tc-i386-intel.c	FUNCTION_181	IF_24	IF_35
0x400906f	    0xf604d5000000	                    test byte [rdx*8], 2	       807	tc-i386-intel.c	FUNCTION_181	IF_24	IF_35
0x4009077	     0xf841becffff	                            je 0x4007c98	       807	tc-i386-intel.c	FUNCTION_181	IF_24	IF_35
0x400907d	      0xe952ebffff	                           jmp 0x4007bd4	       807	tc-i386-intel.c	FUNCTION_181	IF_24	IF_35
0x4009082	      0x4c896c2408	                mov qword [rsp + 8], r13	      9517	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1
0x4009087	      0xe9f7faffff	                           jmp 0x4008b83	      9517	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	DO_1
0x400908c	            0x3c29	                            cmp al, 0x29	      9584	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41
0x400908e	     0xf85eef8ffff	                           jne 0x4008982	      9584	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41
0x4009094	      0xe940faffff	                           jmp 0x4008ad9	      9584	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_25	IF_29	IF_32	IF_41
0x4009099	    0x448b35000000	           mov r14d, dword [0x040090a0] 	      8790	tc-i386.c	FUNCTION_105	IF_1
0x40090a0	    0x48833d000000	               cmp qword [0x040090a8], 0	      8790	tc-i386.c	FUNCTION_105	IF_1
0x40090a8	     0xf85cef9ffff	                           jne 0x4008a7c	      8790	tc-i386.c	FUNCTION_105	IF_1
0x40090ae	      0xe992f9ffff	                           jmp 0x4008a45	      8790	tc-i386.c	FUNCTION_105	IF_1
0x40090b3	      0x4c3b642408	                cmp r12, qword [rsp + 8]	      9631	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_49
0x40090b8	     0xf85d0faffff	                           jne 0x4008b8e	      9631	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_49
0x40090be	      0xe91cfeffff	                           jmp 0x4008edf	      9631	tc-i386.c	FUNCTION_112	ELSE_4	IF_19	IF_49
0x40090c3	    0xc74424080000	                  mov dword [rsp + 8], 0	       603	tc-i386-intel.c	FUNCTION_181	ELSE_2	IF_6
0x40090cb	      0x807c246801	                cmp byte [rsp + 0x68], 1	       599	tc-i386-intel.c	FUNCTION_181	ELSE_2	IF_6
0x40090d0	     0xf8684e5ffff	                           jbe 0x400765a	       599	tc-i386-intel.c	FUNCTION_181	ELSE_2	IF_6
0x40090d6	      0xe959e5ffff	                           jmp 0x4007634	       599	tc-i386-intel.c	FUNCTION_181	ELSE_2	IF_6
0x40090db	    0x488905000000	            mov qword [0x040090e2], rax 	       907	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	ELSE_20
0x40090e2	    0x488b15000000	            mov rdx, qword [0x040090e9] 	       908	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	ELSE_20
0x40090e9	    0x488915000000	            mov qword [0x040090f0], rdx 	       908	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	ELSE_20
0x40090f0	      0xe9acedffff	                           jmp 0x4007ea1	       908	tc-i386-intel.c	FUNCTION_181	ELSE_19	IF_39	ELSE_20
0x40090f5	      0xe800000000	                          call 0x40090fa	      4674	tc-i386.c	FUNCTION_70
0x40090fa	    0x4881c4880000	                           add rsp, 0x88	      4674	tc-i386.c	FUNCTION_70
0x4009101	              0x5b	                                 pop rbx	      4674	tc-i386.c	FUNCTION_70
0x4009102	              0x5d	                                 pop rbp	      4674	tc-i386.c	FUNCTION_70
0x4009103	            0x415c	                                 pop r12	      4674	tc-i386.c	FUNCTION_70
0x4009105	            0x415d	                                 pop r13	      4674	tc-i386.c	FUNCTION_70
0x4009107	            0x415e	                                 pop r14	      4674	tc-i386.c	FUNCTION_70
0x4009109	            0x415f	                                 pop r15	      4674	tc-i386.c	FUNCTION_70
0x400910b	              0xc3	                                     ret	      4674	tc-i386.c	FUNCTION_70
add_prefix	functions,0:ELSE,2:FOR,0:CALL,3:SWITCH,1:WHILE,0:IF,5:DO,0	97
0x400251e	        0x4883ec08	                              sub rsp, 8	      2325	tc-i386.c	FUNCTION_40
0x4002522	          0x8d47c0	                   lea eax, [rdi - 0x40]	      2329	tc-i386.c	FUNCTION_40	IF_1
0x4002525	          0x83f80f	                            cmp eax, 0xf	      2329	tc-i386.c	FUNCTION_40	IF_1
0x4002528	            0x7722	                            ja 0x400254c	      2329	tc-i386.c	FUNCTION_40	IF_1
0x400252a	    0x833d00000000	               cmp dword [0x04002531], 2	      2330	tc-i386.c	FUNCTION_40	IF_1
0x4002531	            0x7519	                           jne 0x400254c	      2330	tc-i386.c	FUNCTION_40	IF_1
0x4002533	     0xfb60d000000	           movzx ecx, byte [0x0400253a] 	      2332	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x400253a	            0x89c8	                            mov eax, ecx	      2332	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x400253c	          0x83e00f	                            and eax, 0xf	      2332	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x400253f	            0x85f8	                           test eax, edi	      2332	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x4002541	     0xf842c010000	                            je 0x4002673	      2332	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x4002547	      0xe9ff000000	                           jmp 0x400264b	      2332	tc-i386.c	FUNCTION_40	IF_1	IF_2
0x400254c	          0x83ff65	                           cmp edi, 0x65	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x400254f	            0x7740	                            ja 0x4002591	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4002551	          0x83ff64	                           cmp edi, 0x64	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4002554	     0xf83be000000	                           jae 0x4002618	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x400255a	          0x83ff2e	                           cmp edi, 0x2e	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x400255d	     0xf84b5000000	                            je 0x4002618	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4002563	          0x83ff2e	                           cmp edi, 0x2e	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4002566	            0x770b	                            ja 0x4002573	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4002568	          0x83ff26	                           cmp edi, 0x26	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x400256b	     0xf84a7000000	                            je 0x4002618	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4002571	            0xeb67	                           jmp 0x40025da	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4002573	          0x83ff36	                           cmp edi, 0x36	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4002576	     0xf849c000000	                            je 0x4002618	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x400257c	      0xba01000000	                              mov edx, 1	      2354	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4002581	      0xb803000000	                              mov eax, 3	      2347	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4002586	          0x83ff3e	                           cmp edi, 0x3e	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4002589	     0xf8405010000	                            je 0x4002694	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x400258f	            0xeb49	                           jmp 0x40025da	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4002591	    0x81ff9b000000	                           cmp edi, 0x9b	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4002597	            0x7464	                            je 0x40025fd	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4002599	    0x81ff9b000000	                           cmp edi, 0x9b	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x400259f	            0x771a	                            ja 0x40025bb	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x40025a1	          0x83ff66	                           cmp edi, 0x66	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x40025a4	            0x7466	                            je 0x400260c	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x40025a6	      0xba02000000	                              mov edx, 2	      2373	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x40025ab	      0xb804000000	                              mov eax, 4	      2326	tc-i386.c	FUNCTION_40
0x40025b0	          0x83ff67	                           cmp edi, 0x67	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x40025b3	     0xf84db000000	                            je 0x4002694	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x40025b9	            0xeb1f	                           jmp 0x40025da	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x40025bb	    0x81fff0000000	                           cmp edi, 0xf0	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x40025c1	            0x742b	                            je 0x40025ee	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x40025c3	    0x81fff0000000	                           cmp edi, 0xf0	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x40025c9	            0x720f	                            jb 0x40025da	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x40025cb	    0x8d870effffff	                   lea eax, [rdi - 0xf2]	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x40025d1	          0x83f801	                              cmp eax, 1	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x40025d4	     0xf86b0000000	                           jbe 0x400268a	      2341	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x40025da	      0xba00000000	                              mov edx, 0	      2344	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1	CALL_1
0x40025df	      0xbe28090000	                          mov esi, 0x928	      2344	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1	CALL_1
0x40025e4	      0xbf00000000	                              mov edi, 0	      2344	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1	CALL_1
0x40025e9	      0xe800000000	                          call 0x40025ee	      2344	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1	CALL_1
0x40025ee	      0xba05000000	                              mov edx, 5	      2364	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x40025f3	      0xb801000000	                              mov eax, 1	      2365	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x40025f8	      0xe997000000	                           jmp 0x4002694	      2366	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x40025fd	      0xba00000000	                              mov edx, 0	      2369	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4002602	      0xb804000000	                              mov eax, 4	      2326	tc-i386.c	FUNCTION_40
0x4002607	      0xe988000000	                           jmp 0x4002694	      2370	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x400260c	      0xba03000000	                              mov edx, 3	      2377	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4002611	      0xb804000000	                              mov eax, 4	      2326	tc-i386.c	FUNCTION_40
0x4002616	            0xeb7c	                           jmp 0x4002694	      2378	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4002618	    0x803d00000000	                cmp byte [0x0400261f], 0	      2380	tc-i386.c	FUNCTION_40	ELSE_1	IF_3
0x400261f	            0x752a	                           jne 0x400264b	      2380	tc-i386.c	FUNCTION_40	ELSE_1	IF_3
0x4002621	      0xba01000000	                              mov edx, 1	      2354	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4002626	      0xb804000000	                              mov eax, 4	      2326	tc-i386.c	FUNCTION_40
0x400262b	            0xeb56	                           jmp 0x4002683	      2326	tc-i386.c	FUNCTION_40
0x400262d	      0xba06000000	                              mov edx, 6	      2337	tc-i386.c	FUNCTION_40	IF_1
0x4002632	      0xb804000000	                              mov eax, 4	      2326	tc-i386.c	FUNCTION_40
0x4002637	    0x830500000000	               add dword [0x0400263e], 1	      2387	tc-i386.c	FUNCTION_40	IF_4	IF_5
0x400263e	            0x89d2	                            mov edx, edx	      2388	tc-i386.c	FUNCTION_40	IF_4
0x4002640	             0x9cf	                             or edi, ecx	      2388	tc-i386.c	FUNCTION_40	IF_4
0x4002642	    0x4088ba000000	                     mov byte [rdx], dil	      2388	tc-i386.c	FUNCTION_40	IF_4
0x4002649	            0xeb56	                           jmp 0x40026a1	      2388	tc-i386.c	FUNCTION_40	IF_4
0x400264b	      0xba05000000	                              mov edx, 5	      2391	tc-i386.c	FUNCTION_40	CALL_3
0x4002650	      0xbe00000000	                              mov esi, 0	      2391	tc-i386.c	FUNCTION_40	CALL_3
0x4002655	      0xbf00000000	                              mov edi, 0	      2391	tc-i386.c	FUNCTION_40	CALL_3
0x400265a	      0xe800000000	                          call 0x400265f	      2391	tc-i386.c	FUNCTION_40	CALL_3
0x400265f	          0x4889c7	                            mov rdi, rax	      2391	tc-i386.c	FUNCTION_40	CALL_3
0x4002662	      0xb800000000	                              mov eax, 0	      2391	tc-i386.c	FUNCTION_40	CALL_3
0x4002667	      0xe800000000	                          call 0x400266c	      2391	tc-i386.c	FUNCTION_40	CALL_3
0x400266c	      0xb800000000	                              mov eax, 0	      2391	tc-i386.c	FUNCTION_40	CALL_3
0x4002671	            0xeb2e	                           jmp 0x40026a1	      2393	tc-i386.c	FUNCTION_40
0x4002673	            0x84c9	                             test cl, cl	      2386	tc-i386.c	FUNCTION_40	IF_4	IF_5
0x4002675	            0x74b6	                            je 0x400262d	      2386	tc-i386.c	FUNCTION_40	IF_4	IF_5
0x4002677	      0xba06000000	                              mov edx, 6	      2337	tc-i386.c	FUNCTION_40	IF_1
0x400267c	      0xb804000000	                              mov eax, 4	      2326	tc-i386.c	FUNCTION_40
0x4002681	            0xebbb	                           jmp 0x400263e	      2326	tc-i386.c	FUNCTION_40
0x4002683	      0xb900000000	                              mov ecx, 0	      2386	tc-i386.c	FUNCTION_40	IF_4	IF_5
0x4002688	            0xebad	                           jmp 0x4002637	      2386	tc-i386.c	FUNCTION_40	IF_4	IF_5
0x400268a	      0xba04000000	                              mov edx, 4	      2359	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x400268f	      0xb802000000	                              mov eax, 2	      2360	tc-i386.c	FUNCTION_40	ELSE_1	SWITCH_1
0x4002694	            0x89d1	                            mov ecx, edx	      2380	tc-i386.c	FUNCTION_40	ELSE_1	IF_3
0x4002696	    0x80b900000000	                       cmp byte [rcx], 0	      2380	tc-i386.c	FUNCTION_40	ELSE_1	IF_3
0x400269d	            0x75ac	                           jne 0x400264b	      2380	tc-i386.c	FUNCTION_40	ELSE_1	IF_3
0x400269f	            0xebe2	                           jmp 0x4002683	      2380	tc-i386.c	FUNCTION_40	ELSE_1	IF_3
0x40026a1	        0x4883c408	                              add rsp, 8	      2394	tc-i386.c	FUNCTION_40
0x40026a5	              0xc3	                                     ret	      2394	tc-i386.c	FUNCTION_40
optimize_encoding	functions,0:ELSE,6:FOR,1:CALL,5:SWITCH,0:WHILE,0:IF,12:DO,0	248
0x400057c	    0x833d00000000	               cmp dword [0x04000583], 0	      3787	tc-i386.c	FUNCTION_67	IF_1
0x4000583	     0xf84e8000000	                            je 0x4000671	      3787	tc-i386.c	FUNCTION_67	IF_1
0x4000589	    0x833d00000000	               cmp dword [0x04000590], 1	      3788	tc-i386.c	FUNCTION_67	IF_1
0x4000590	     0xf85db000000	                           jne 0x4000671	      3788	tc-i386.c	FUNCTION_67	IF_1
0x4000596	    0x833d00000000	               cmp dword [0x0400059d], 1	      3789	tc-i386.c	FUNCTION_67	IF_1
0x400059d	     0xf85ce000000	                           jne 0x4000671	      3789	tc-i386.c	FUNCTION_67	IF_1
0x40005a3	    0xf60500000000	           test byte [0x040005aa], 0x20 	      3790	tc-i386.c	FUNCTION_67	IF_1
0x40005aa	     0xf85c1000000	                           jne 0x4000671	      3790	tc-i386.c	FUNCTION_67	IF_1
0x40005b0	    0x488b05000000	            mov rax, qword [0x040005b7] 	      3791	tc-i386.c	FUNCTION_67	IF_1
0x40005b7	        0x80781802	                cmp byte [rax + 0x18], 2	      3791	tc-i386.c	FUNCTION_67	IF_1
0x40005bb	     0xf85b0000000	                           jne 0x4000671	      3791	tc-i386.c	FUNCTION_67	IF_1
0x40005c1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3792	tc-i386.c	FUNCTION_67	IF_1	CALL_1
0x40005c5	          0x4889c2	                            mov rdx, rax	      3792	tc-i386.c	FUNCTION_67	IF_1	CALL_1
0x40005c8	          0x83e27f	                           and edx, 0x7f	      3792	tc-i386.c	FUNCTION_67	IF_1	CALL_1
0x40005cb	          0x4839d0	                            cmp rax, rdx	      3792	tc-i386.c	FUNCTION_67	IF_1	CALL_1
0x40005ce	     0xf859d000000	                           jne 0x4000671	      3792	tc-i386.c	FUNCTION_67	IF_1	CALL_1
0x40005d4	    0x8b0500000000	            mov eax, dword [0x040005da] 	      3793	tc-i386.c	FUNCTION_67	IF_1
0x40005da	      0x3da8000000	                           cmp eax, 0xa8	      3793	tc-i386.c	FUNCTION_67	IF_1
0x40005df	            0x7512	                           jne 0x40005f3	      3793	tc-i386.c	FUNCTION_67	IF_1
0x40005e1	    0x813d00000000	         cmp dword [0x040005eb], 0xffff 	      3794	tc-i386.c	FUNCTION_67	IF_1
0x40005eb	     0xf8580000000	                           jne 0x4000671	      3794	tc-i386.c	FUNCTION_67	IF_1
0x40005f1	            0xeb10	                           jmp 0x4000603	      3794	tc-i386.c	FUNCTION_67	IF_1
0x40005f3	      0x3df6000000	                           cmp eax, 0xf6	      3795	tc-i386.c	FUNCTION_67	IF_1
0x40005f8	            0x7577	                           jne 0x4000671	      3795	tc-i386.c	FUNCTION_67	IF_1
0x40005fa	    0x833d00000000	               cmp dword [0x04000601], 0	      3796	tc-i386.c	FUNCTION_67	IF_1
0x4000601	            0x756e	                           jne 0x4000671	      3796	tc-i386.c	FUNCTION_67	IF_1
0x4000603	    0x488b15000000	            mov rdx, qword [0x0400060a] 	      3801	tc-i386.c	FUNCTION_67	IF_1
0x400060a	         0xfb64211	           movzx eax, byte [rdx + 0x11] 	      3801	tc-i386.c	FUNCTION_67	IF_1
0x400060e	    0x833d00000000	               cmp dword [0x04000615], 2	      3802	tc-i386.c	FUNCTION_67	IF_1	IF_2
0x4000615	            0x7409	                            je 0x4000620	      3802	tc-i386.c	FUNCTION_67	IF_1	IF_2
0x4000617	          0x83f803	                              cmp eax, 3	      3802	tc-i386.c	FUNCTION_67	IF_1	IF_2
0x400061a	     0xf8743040000	                            ja 0x4000a63	      3802	tc-i386.c	FUNCTION_67	IF_1	IF_2
0x4000620	    0x800d00000000	              or byte [0x04000627], 0x20	      3804	tc-i386.c	FUNCTION_67	IF_1	IF_2
0x4000627	    0xc60500000000	                mov byte [0x0400062e], 0	      3806	tc-i386.c	FUNCTION_67	IF_1	IF_2
0x400062e	          0x83f803	                              cmp eax, 3	      3807	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3
0x4000631	     0xf862c040000	                           jbe 0x4000a63	      3807	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3
0x4000637	        0xf6421001	               test byte [rdx + 0x10], 1	      3808	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3
0x400063b	     0xf8522040000	                           jne 0x4000a63	      3808	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3
0x4000641	     0xfb60d000000	           movzx ecx, byte [0x04000648] 	      3811	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	IF_4
0x4000648	      0xb810000000	                           mov eax, 0x10	      3812	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	IF_4
0x400064d	          0xf6c140	                           test cl, 0x40	      3811	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	IF_4
0x4000650	            0x750e	                           jne 0x4000660	      3811	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	IF_4
0x4000652	          0x83e180	                     and ecx, 0xffffff80	      3813	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	ELSE_1	IF_5
0x4000655	          0x80f901	                               cmp cl, 1	      3816	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	ELSE_2
0x4000658	            0x19c0	                            sbb eax, eax	      3816	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	ELSE_2
0x400065a	          0x83e010	                           and eax, 0x10	      3816	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	ELSE_2
0x400065d	          0x83c020	                           add eax, 0x20	      3816	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	ELSE_2
0x4000660	            0x4898	                                    cdqe	      3817	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	ELSE_2
0x4000662	        0x486bc018	                     imul rax, rax, 0x18	      3817	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	ELSE_2
0x4000666	          0x4829c2	                            sub rdx, rax	      3817	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	ELSE_2
0x4000669	    0x488915000000	            mov qword [0x04000670], rdx 	      3817	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	ELSE_2
0x4000670	              0xc3	                                     ret	      3817	tc-i386.c	FUNCTION_67	IF_1	IF_2	IF_3	ELSE_2
0x4000671	    0x833d00000000	               cmp dword [0x04000678], 2	      3821	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4000678	     0xf85f0010000	                           jne 0x400086e	      3821	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400067e	    0xf60500000000	               test byte [0x04000685], 2	      3822	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4000685	     0xf84d0000000	                            je 0x400075b	      3822	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400068b	    0x833d00000000	               cmp dword [0x04000692], 1	      3823	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4000692	     0xf85c3000000	                           jne 0x400075b	      3823	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4000698	    0x833d00000000	               cmp dword [0x0400069f], 1	      3824	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400069f	     0xf8559030000	                           jne 0x40009fe	      3824	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40006a5	    0x488b05000000	            mov rax, qword [0x040006ac] 	      3825	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40006ac	        0x80781802	                cmp byte [rax + 0x18], 2	      3825	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40006b0	     0xf8548030000	                           jne 0x40009fe	      3825	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40006b6	    0x8b1500000000	            mov edx, dword [0x040006bc] 	      3826	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40006bc	    0x81fab0000000	                           cmp edx, 0xb0	      3826	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40006c2	            0x7524	                           jne 0x40006e8	      3826	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40006c4	    0x813d00000000	         cmp dword [0x040006ce], 0xffff 	      3827	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40006ce	     0xf8518030000	                           jne 0x40009ec	      3827	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40006d4	      0xbaffffffff	                     mov edx, 0xffffffff	      3828	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_2
0x40006d9	        0x48395010	            cmp qword [rax + 0x10], rdx 	      3828	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_2
0x40006dd	     0xf862a030000	                           jbe 0x4000a0d	      3828	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_2
0x40006e3	      0xe904030000	                           jmp 0x40009ec	      3828	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_2
0x40006e8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3829	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_3
0x40006ec	          0x4889c1	                            mov rcx, rax	      3829	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_3
0x40006ef	    0x81e1ffffff7f	                     and ecx, 0x7fffffff	      3829	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_3
0x40006f5	          0x4839c8	                            cmp rax, rcx	      3829	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_3
0x40006f8	     0xf8500030000	                           jne 0x40009fe	      3829	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_3
0x40006fe	          0x83fa24	                           cmp edx, 0x24	      3830	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4000701	            0x7408	                            je 0x400070b	      3830	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4000703	    0x81faa8000000	                           cmp edx, 0xa8	      3830	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4000709	            0x7510	                           jne 0x400071b	      3830	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400070b	    0x813d00000000	         cmp dword [0x04000715], 0xffff 	      3832	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4000715	     0xf84ca000000	                            je 0x40007e5	      3832	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400071b	    0x81fa80000000	                           cmp edx, 0x80	      3833	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4000721	            0x7512	                           jne 0x4000735	      3833	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4000723	    0x833d00000000	               cmp dword [0x0400072a], 4	      3834	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400072a	     0xf8521030000	                           jne 0x4000a51	      3834	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4000730	      0xe914030000	                           jmp 0x4000a49	      3834	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4000735	    0x81faf6000000	                           cmp edx, 0xf6	      3835	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400073b	            0x740c	                            je 0x4000749	      3835	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400073d	    0x81fac6000000	                           cmp edx, 0xc6	      3835	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4000743	     0xf85b5020000	                           jne 0x40009fe	      3835	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4000749	    0x833d00000000	               cmp dword [0x04000750], 0	      3837	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4000750	     0xf848f000000	                            je 0x40007e5	      3837	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4000756	      0xe9a3020000	                           jmp 0x40009fe	      3837	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400075b	    0xf60500000000	               test byte [0x04000762], 2	      3838	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4000762	     0xf8406010000	                            je 0x400086e	      3838	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4000768	    0x8b0500000000	            mov eax, dword [0x0400076e] 	      3839	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400076e	          0x83f802	                              cmp eax, 2	      3839	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4000771	            0x753a	                           jne 0x40007ad	      3839	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4000773	    0x488b05000000	            mov rax, qword [0x0400077a] 	      3840	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400077a	    0x483905000000	            cmp qword [0x04000781], rax 	      3840	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4000781	     0xf85dc020000	                           jne 0x4000a63	      3840	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4000787	    0x8b0500000000	            mov eax, dword [0x0400078d] 	      3841	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400078d	          0x83e828	                           sub eax, 0x28	      3841	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4000790	      0xa9f7ffffff	                    test eax, 0xfffffff7	      3841	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4000795	     0xf85c8020000	                           jne 0x4000a63	      3841	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x400079b	    0x813d00000000	         cmp dword [0x040007a5], 0xffff 	      3843	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40007a5	     0xf85b8020000	                           jne 0x4000a63	      3843	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40007ab	            0xeb38	                           jmp 0x40007e5	      3843	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40007ad	          0x83f801	                              cmp eax, 1	      3844	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40007b0	     0xf85b8000000	                           jne 0x400086e	      3844	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40007b6	    0x833d00000000	               cmp dword [0x040007bd], 1	      3845	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40007bd	     0xf85a0020000	                           jne 0x4000a63	      3845	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40007c3	    0x833d00000000	           cmp dword [0x040007ca], 0x30 	      3846	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40007ca	     0xf8593020000	                           jne 0x4000a63	      3846	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40007d0	    0x813d00000000	         cmp dword [0x040007da], 0xffff 	      3847	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40007da	     0xf8583020000	                           jne 0x4000a63	      3847	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40007e0	      0xe964020000	                           jmp 0x4000a49	      3847	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40007e5	    0x800d00000000	              or byte [0x040007ec], 0x40	      3857	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x40007ec	    0x8b1500000000	            mov edx, dword [0x040007f2] 	      3858	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x40007f2	    0x81fab0000000	                           cmp edx, 0xb0	      3858	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x40007f8	            0x740c	                            je 0x4000806	      3858	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x40007fa	    0x81fac6000000	                           cmp edx, 0xc6	      3858	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4000800	     0xf855d020000	                           jne 0x4000a63	      3858	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4000806	     0xfb605000000	           movzx eax, byte [0x0400080d] 	      3864	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400080d	          0x83c820	                            or eax, 0x20	      3864	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4000810	          0x83e03f	                           and eax, 0x3f	      3866	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4000813	    0x880500000000	               mov byte [0x04000819], al	      3866	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4000819	     0xfb605000000	           movzx eax, byte [0x04000820] 	      3867	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4000820	          0x83c820	                            or eax, 0x20	      3867	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4000823	          0x83e03f	                           and eax, 0x3f	      3869	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4000826	    0x880500000000	               mov byte [0x0400082c], al	      3869	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400082c	    0x800d00000000	              or byte [0x04000833], 0x80	      3870	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4000833	    0x802500000000	             and byte [0x0400083a], 0xfd	      3871	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x400083a	    0x81fac6000000	                           cmp edx, 0xc6	      3872	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4000840	     0xf851d020000	                           jne 0x4000a63	      3872	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4000846	    0xc70500000000	           mov dword [0x04000850], 0xb0 	      3877	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4000850	    0xc70500000000	         mov dword [0x0400085a], 0xffff 	      3878	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x400085a	     0xfb605000000	           movzx eax, byte [0x04000861] 	      3879	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4000861	          0x83c810	                            or eax, 0x10	      3879	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4000864	          0x83e0f7	                     and eax, 0xfffffff7	      3880	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x4000867	    0x880500000000	               mov byte [0x0400086d], al	      3880	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x400086d	              0xc3	                                     ret	      3880	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7	IF_8
0x400086e	    0x833d00000000	               cmp dword [0x04000875], 1	      3884	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4000875	     0xf8ee8010000	                           jle 0x4000a63	      3884	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400087b	    0x833d00000000	               cmp dword [0x04000882], 3	      3885	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4000882	     0xf85db010000	                           jne 0x4000a63	      3885	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4000888	    0x488b05000000	            mov rax, qword [0x0400088f] 	      3886	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400088f	    0x483905000000	            cmp qword [0x04000896], rax 	      3886	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4000896	     0xf85c7010000	                           jne 0x4000a63	      3886	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400089c	    0xf60500000000	               test byte [0x040008a3], 8	      3887	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40008a3	     0xf85ba010000	                           jne 0x4000a63	      3887	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40008a9	    0xf60500000000	               test byte [0x040008b0], 6	      3888	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40008b0	            0x7550	                           jne 0x4000902	      3888	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40008b2	    0x488b05000000	            mov rax, qword [0x040008b9] 	      3889	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40008b9	          0x4885c0	                           test rax, rax	      3889	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40008bc	            0x740a	                            je 0x40008c8	      3889	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40008be	        0x83780800	                  cmp dword [rax + 8], 0	      3889	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40008c2	     0xf849b010000	                            je 0x4000a63	      3889	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40008c8	    0x48833d000000	               cmp qword [0x040008d0], 0	      3890	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40008d0	     0xf858d010000	                           jne 0x4000a63	      3890	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40008d6	    0x803d00000000	                cmp byte [0x040008dd], 0	      3891	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	CALL_4
0x40008dd	     0xf8480010000	                            je 0x4000a63	      3891	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	CALL_4
0x40008e3	    0x833d00000000	               cmp dword [0x040008ea], 3	      3892	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40008ea	            0x7516	                           jne 0x4000902	      3892	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40008ec	    0xf60500000000	               test byte [0x040008f3], 8	      3893	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40008f3	            0x750d	                           jne 0x4000902	      3893	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40008f5	    0xf60500000000	               test byte [0x040008fc], 8	      3894	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x40008fc	     0xf8461010000	                            je 0x4000a63	      3894	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4000902	    0x8b0500000000	            mov eax, dword [0x04000908] 	      3895	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4000908	            0x89c1	                            mov ecx, eax	      3896	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400090a	          0x83e1fd	                     and ecx, 0xfffffffd	      3896	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400090d	          0x83f955	                           cmp ecx, 0x55	      3904	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4000910	        0x400f94c6	                                sete sil	      3904	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4000914	    0x81f955660000	                         cmp ecx, 0x6655	      3904	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400091a	           0xf94c2	                                 sete dl	      3904	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400091d	             0x9f2	                             or edx, esi	      3904	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400091f	    0x8d880899ffff	                 lea ecx, [rax - 0x66f8]	      3904	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4000925	          0x83f903	                              cmp ecx, 3	      3904	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4000928	           0xf96c1	                                setbe cl	      3904	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400092b	             0x8ca	                               or dl, cl	      3904	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400092d	            0x7510	                           jne 0x400093f	      3904	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400092f	      0x2ddf660000	                         sub eax, 0x66df	      3904	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4000934	      0xa9efffffff	                    test eax, 0xffffffef	      3904	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4000939	     0xf8524010000	                           jne 0x4000a63	      3904	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400093f	    0x813d00000000	         cmp dword [0x04000949], 0xffff 	      3905	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x4000949	     0xf8514010000	                           jne 0x4000a63	      3905	tc-i386.c	FUNCTION_67	ELSE_4	IF_9
0x400094f	    0x803d00000000	                cmp byte [0x04000956], 0	      3936	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	CALL_5
0x4000956	            0x743a	                            je 0x4000992	      3936	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	CALL_5
0x4000958	    0x833d00000000	               cmp dword [0x0400095f], 3	      3938	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	IF_11
0x400095f	            0x7515	                           jne 0x4000976	      3938	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	IF_11
0x4000961	     0xfb605000000	           movzx eax, byte [0x04000968] 	      3939	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	IF_11
0x4000968	          0x83e0f8	                     and eax, 0xfffffff8	      3939	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	IF_11
0x400096b	          0x83c802	                               or eax, 2	      3939	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	IF_11
0x400096e	    0x880500000000	               mov byte [0x04000974], al	      3939	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	IF_11
0x4000974	            0xeb2f	                           jmp 0x40009a5	      3939	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	IF_11
0x4000976	     0xfb605000000	           movzx eax, byte [0x0400097d] 	      3942	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	ELSE_5
0x400097d	          0x83e099	                     and eax, 0xffffff99	      3942	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	ELSE_5
0x4000980	          0x83c822	                            or eax, 0x22	      3943	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	ELSE_5
0x4000983	    0x880500000000	               mov byte [0x04000989], al	      3943	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	ELSE_5
0x4000989	    0x802500000000	             and byte [0x04000990], 0xf8	      3944	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	ELSE_5
0x4000990	            0xeb13	                           jmp 0x40009a5	      3944	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_10	ELSE_5
0x4000992	     0xfb605000000	           movzx eax, byte [0x04000999] 	      3948	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	ELSE_6
0x4000999	          0x83e0f9	                     and eax, 0xfffffff9	      3948	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	ELSE_6
0x400099c	          0x83c802	                               or eax, 2	      3948	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	ELSE_6
0x400099f	    0x880500000000	               mov byte [0x040009a5], al	      3948	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	ELSE_6
0x40009a5	    0xf60500000000	               test byte [0x040009ac], 6	      3950	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12
0x40009ac	     0xf84b1000000	                            je 0x4000a63	      3950	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12
0x40009b2	     0xfb605000000	           movzx eax, byte [0x040009b9] 	      3953	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x40009b9	          0x83c808	                               or eax, 8	      3953	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x40009bc	          0x83e0ef	                     and eax, 0xffffffef	      3954	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x40009bf	    0x880500000000	               mov byte [0x040009c5], al	      3954	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x40009c5	     0xfb605000000	           movzx eax, byte [0x040009cc] 	      3953	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x40009cc	          0x83c808	                               or eax, 8	      3953	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x40009cf	          0x83e0ef	                     and eax, 0xffffffef	      3954	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x40009d2	    0x880500000000	               mov byte [0x040009d8], al	      3954	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x40009d8	     0xfb605000000	           movzx eax, byte [0x040009df] 	      3953	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x40009df	          0x83c808	                               or eax, 8	      3953	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x40009e2	          0x83e0ef	                     and eax, 0xffffffef	      3954	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x40009e5	    0x880500000000	               mov byte [0x040009eb], al	      3954	tc-i386.c	FUNCTION_67	ELSE_4	IF_9	IF_12	FOR_1
0x40009eb	              0xc3	                                     ret	      3957	tc-i386.c	FUNCTION_67
0x40009ec	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3829	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_3
0x40009f0	          0x4889c2	                            mov rdx, rax	      3829	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_3
0x40009f3	    0x81e2ffffff7f	                     and edx, 0x7fffffff	      3829	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_3
0x40009f9	          0x4839d0	                            cmp rax, rdx	      3829	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_3
0x40009fc	            0x7553	                           jne 0x4000a51	      3829	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	CALL_3
0x40009fe	    0xf60500000000	               test byte [0x04000a05], 2	      3838	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4000a05	     0xf85abfdffff	                           jne 0x40007b6	      3838	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4000a0b	            0xf3c3	                                     ret	      3838	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4000a0d	    0x800d00000000	              or byte [0x04000a14], 0x40	      3857	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4000a14	     0xfb605000000	           movzx eax, byte [0x04000a1b] 	      3864	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4000a1b	          0x83c820	                            or eax, 0x20	      3864	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4000a1e	          0x83e03f	                           and eax, 0x3f	      3866	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4000a21	    0x880500000000	               mov byte [0x04000a27], al	      3866	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4000a27	     0xfb605000000	           movzx eax, byte [0x04000a2e] 	      3867	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4000a2e	          0x83c820	                            or eax, 0x20	      3867	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4000a31	          0x83e03f	                           and eax, 0x3f	      3869	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4000a34	    0x880500000000	               mov byte [0x04000a3a], al	      3869	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4000a3a	    0x800d00000000	              or byte [0x04000a41], 0x80	      3870	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4000a41	    0x802500000000	             and byte [0x04000a48], 0xfd	      3871	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4000a48	              0xc3	                                     ret	      3871	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6	IF_7
0x4000a49	    0x800d00000000	              or byte [0x04000a50], 0x40	      3857	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4000a50	              0xc3	                                     ret	      3857	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4000a51	    0xf60500000000	               test byte [0x04000a58], 2	      3838	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4000a58	     0xf8558fdffff	                           jne 0x40007b6	      3838	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4000a5e	      0xe90bfeffff	                           jmp 0x400086e	      3838	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
0x4000a63	            0xf3c3	                                     ret	      3838	tc-i386.c	FUNCTION_67	ELSE_2	ELSE_3	IF_6
swap_operands	functions,0:ELSE,0:FOR,0:CALL,3:SWITCH,1:WHILE,0:IF,1:DO,0	28
0x40015a2	        0x4883ec08	                              sub rsp, 8	      4718	tc-i386.c	FUNCTION_72
0x40015a6	    0x8b3500000000	            mov esi, dword [0x040015ac] 	      4719	tc-i386.c	FUNCTION_72	SWITCH_1
0x40015ac	          0x83fe02	                              cmp esi, 2	      4719	tc-i386.c	FUNCTION_72	SWITCH_1
0x40015af	            0x7235	                            jb 0x40015e6	      4719	tc-i386.c	FUNCTION_72	SWITCH_1
0x40015b1	          0x83fe03	                              cmp esi, 3	      4719	tc-i386.c	FUNCTION_72	SWITCH_1
0x40015b4	            0x7612	                           jbe 0x40015c8	      4719	tc-i386.c	FUNCTION_72	SWITCH_1
0x40015b6	          0x83fe05	                              cmp esi, 5	      4719	tc-i386.c	FUNCTION_72	SWITCH_1
0x40015b9	            0x772b	                            ja 0x40015e6	      4719	tc-i386.c	FUNCTION_72	SWITCH_1
0x40015bb	          0x83ee02	                              sub esi, 2	      4723	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_1
0x40015be	      0xbf01000000	                              mov edi, 1	      4723	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_1
0x40015c3	      0xe89df4ffff	                call sym.swap_2_operands	      4723	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_1
0x40015c8	    0x8b0500000000	            mov eax, dword [0x040015ce] 	      4727	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_2
0x40015ce	          0x8d70ff	                      lea esi, [rax - 1]	      4727	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_2
0x40015d1	      0xbf00000000	                              mov edi, 0	      4727	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_2
0x40015d6	      0xe88af4ffff	                call sym.swap_2_operands	      4727	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_2
0x40015db	    0x833d00000000	               cmp dword [0x040015e2], 2	      4733	tc-i386.c	FUNCTION_72	IF_1
0x40015e2	            0x7532	                           jne 0x4001616	      4733	tc-i386.c	FUNCTION_72	IF_1
0x40015e4	            0xeb14	                           jmp 0x40015fa	      4733	tc-i386.c	FUNCTION_72	IF_1
0x40015e6	      0xba00000000	                              mov edx, 0	      4730	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_3
0x40015eb	      0xbe7a120000	                         mov esi, 0x127a	      4730	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_3
0x40015f0	      0xbf00000000	                              mov edi, 0	      4730	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_3
0x40015f5	      0xe800000000	                          call 0x40015fa	      4730	tc-i386.c	FUNCTION_72	SWITCH_1	CALL_3
0x40015fa	    0x488b05000000	            mov rax, qword [0x04001601] 	      4736	tc-i386.c	FUNCTION_72	IF_1
0x4001601	    0x488b15000000	            mov rdx, qword [0x04001608] 	      4737	tc-i386.c	FUNCTION_72	IF_1
0x4001608	    0x488915000000	            mov qword [0x0400160f], rdx 	      4737	tc-i386.c	FUNCTION_72	IF_1
0x400160f	    0x488905000000	            mov qword [0x04001616], rax 	      4738	tc-i386.c	FUNCTION_72	IF_1
0x4001616	        0x4883c408	                              add rsp, 8	      4740	tc-i386.c	FUNCTION_72
0x400161a	              0xc3	                                     ret	      4740	tc-i386.c	FUNCTION_72
set_check	functions,0:ELSE,5:FOR,0:CALL,11:SWITCH,0:WHILE,0:IF,5:DO,0	86
0x4001243	            0x4154	                                push r12	      2501	tc-i386.c	FUNCTION_47
0x4001245	              0x55	                                push rbp	      2501	tc-i386.c	FUNCTION_47
0x4001246	              0x53	                                push rbx	      2501	tc-i386.c	FUNCTION_47
0x4001247	        0x4883ec10	                           sub rsp, 0x10	      2501	tc-i386.c	FUNCTION_47
0x400124b	    0x64488b042528	                mov rax, qword fs:[0x28]	      2501	tc-i386.c	FUNCTION_47
0x4001254	      0x4889442408	                mov qword [rsp + 8], rax	      2501	tc-i386.c	FUNCTION_47
0x4001259	            0x31c0	                            xor eax, eax	      2501	tc-i386.c	FUNCTION_47
0x400125b	            0x85ff	                           test edi, edi	      2513	tc-i386.c	FUNCTION_47	ELSE_1
0x400125d	      0xb800000000	                              mov eax, 0	      2513	tc-i386.c	FUNCTION_47	ELSE_1
0x4001262	      0xbb00000000	                              mov ebx, 0	      2513	tc-i386.c	FUNCTION_47	ELSE_1
0x4001267	        0x480f44d8	                          cmove rbx, rax	      2513	tc-i386.c	FUNCTION_47	ELSE_1
0x400126b	      0xb800000000	                              mov eax, 0	      2513	tc-i386.c	FUNCTION_47	ELSE_1
0x4001270	      0xbd00000000	                              mov ebp, 0	      2513	tc-i386.c	FUNCTION_47	ELSE_1
0x4001275	        0x480f44e8	                          cmove rbp, rax	      2513	tc-i386.c	FUNCTION_47	ELSE_1
0x4001279	    0x488b05000000	            mov rax, qword [0x04001280] 	      2516	tc-i386.c	FUNCTION_47	CALL_1
0x4001280	          0x803820	                    cmp byte [rax], 0x20	      2516	tc-i386.c	FUNCTION_47	CALL_1
0x4001283	            0x750b	                           jne 0x4001290	      2516	tc-i386.c	FUNCTION_47	CALL_1
0x4001285	        0x4883c001	                              add rax, 1	      2516	tc-i386.c	FUNCTION_47	CALL_1
0x4001289	    0x488905000000	            mov qword [0x04001290], rax 	      2516	tc-i386.c	FUNCTION_47	CALL_1
0x4001290	    0x488b05000000	            mov rax, qword [0x04001297] 	      2518	tc-i386.c	FUNCTION_47	IF_2
0x4001297	           0xfb600	                   movzx eax, byte [rax]	      2518	tc-i386.c	FUNCTION_47	IF_2
0x400129a	    0x80b800000000	                       cmp byte [rax], 0	      2518	tc-i386.c	FUNCTION_47	IF_2
0x40012a1	     0xf85a4000000	                           jne 0x400134b	      2518	tc-i386.c	FUNCTION_47	IF_2
0x40012a7	          0x4889e7	                            mov rdi, rsp	      2521	tc-i386.c	FUNCTION_47	IF_2	CALL_2
0x40012aa	      0xe800000000	                          call 0x40012af	      2521	tc-i386.c	FUNCTION_47	IF_2	CALL_2
0x40012af	          0x4189c4	                           mov r12d, eax	      2521	tc-i386.c	FUNCTION_47	IF_2	CALL_2
0x40012b2	        0x488b0424	                    mov rax, qword [rsp]	      2523	tc-i386.c	FUNCTION_47	IF_2	IF_3	CALL_3
0x40012b6	      0xbf00000000	                              mov edi, 0	      2523	tc-i386.c	FUNCTION_47	IF_2	IF_3	CALL_3
0x40012bb	      0xb905000000	                              mov ecx, 5	      2523	tc-i386.c	FUNCTION_47	IF_2	IF_3	CALL_3
0x40012c0	          0x4889c6	                            mov rsi, rax	      2523	tc-i386.c	FUNCTION_47	IF_2	IF_3	CALL_3
0x40012c3	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2523	tc-i386.c	FUNCTION_47	IF_2	IF_3	CALL_3
0x40012c5	           0xf97c1	                                 seta cl	      2523	tc-i386.c	FUNCTION_47	IF_2	IF_3	CALL_3
0x40012c8	           0xf92c2	                                 setb dl	      2523	tc-i386.c	FUNCTION_47	IF_2	IF_3	CALL_3
0x40012cb	            0x38d1	                              cmp cl, dl	      2523	tc-i386.c	FUNCTION_47	IF_2	IF_3	CALL_3
0x40012cd	            0x7509	                           jne 0x40012d8	      2523	tc-i386.c	FUNCTION_47	IF_2	IF_3	CALL_3
0x40012cf	    0xc74500000000	                      mov dword [rbp], 0	      2524	tc-i386.c	FUNCTION_47	IF_2	IF_3
0x40012d6	            0xeb68	                           jmp 0x4001340	      2524	tc-i386.c	FUNCTION_47	IF_2	IF_3
0x40012d8	      0xbf00000000	                              mov edi, 0	      2525	tc-i386.c	FUNCTION_47	IF_2	ELSE_2	IF_4	CALL_4
0x40012dd	      0xb908000000	                              mov ecx, 8	      2525	tc-i386.c	FUNCTION_47	IF_2	ELSE_2	IF_4	CALL_4
0x40012e2	          0x4889c6	                            mov rsi, rax	      2525	tc-i386.c	FUNCTION_47	IF_2	ELSE_2	IF_4	CALL_4
0x40012e5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2525	tc-i386.c	FUNCTION_47	IF_2	ELSE_2	IF_4	CALL_4
0x40012e7	           0xf97c1	                                 seta cl	      2525	tc-i386.c	FUNCTION_47	IF_2	ELSE_2	IF_4	CALL_4
0x40012ea	           0xf92c2	                                 setb dl	      2525	tc-i386.c	FUNCTION_47	IF_2	ELSE_2	IF_4	CALL_4
0x40012ed	            0x38d1	                              cmp cl, dl	      2525	tc-i386.c	FUNCTION_47	IF_2	ELSE_2	IF_4	CALL_4
0x40012ef	            0x7509	                           jne 0x40012fa	      2525	tc-i386.c	FUNCTION_47	IF_2	ELSE_2	IF_4	CALL_4
0x40012f1	    0xc74500010000	                      mov dword [rbp], 1	      2526	tc-i386.c	FUNCTION_47	IF_2	ELSE_2	IF_4
0x40012f8	            0xeb46	                           jmp 0x4001340	      2526	tc-i386.c	FUNCTION_47	IF_2	ELSE_2	IF_4
0x40012fa	      0xbf00000000	                              mov edi, 0	      2527	tc-i386.c	FUNCTION_47	IF_2	ELSE_3	IF_5	CALL_5
0x40012ff	      0xb906000000	                              mov ecx, 6	      2527	tc-i386.c	FUNCTION_47	IF_2	ELSE_3	IF_5	CALL_5
0x4001304	          0x4889c6	                            mov rsi, rax	      2527	tc-i386.c	FUNCTION_47	IF_2	ELSE_3	IF_5	CALL_5
0x4001307	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2527	tc-i386.c	FUNCTION_47	IF_2	ELSE_3	IF_5	CALL_5
0x4001309	           0xf97c2	                                 seta dl	      2527	tc-i386.c	FUNCTION_47	IF_2	ELSE_3	IF_5	CALL_5
0x400130c	           0xf92c0	                                 setb al	      2527	tc-i386.c	FUNCTION_47	IF_2	ELSE_3	IF_5	CALL_5
0x400130f	            0x38c2	                              cmp dl, al	      2527	tc-i386.c	FUNCTION_47	IF_2	ELSE_3	IF_5	CALL_5
0x4001311	            0x7509	                           jne 0x400131c	      2527	tc-i386.c	FUNCTION_47	IF_2	ELSE_3	IF_5	CALL_5
0x4001313	    0xc74500020000	                      mov dword [rbp], 2	      2528	tc-i386.c	FUNCTION_47	IF_2	ELSE_3	IF_5
0x400131a	            0xeb24	                           jmp 0x4001340	      2528	tc-i386.c	FUNCTION_47	IF_2	ELSE_3	IF_5
0x400131c	      0xba05000000	                              mov edx, 5	      2530	tc-i386.c	FUNCTION_47	IF_2	CALL_7
0x4001321	      0xbe00000000	                              mov esi, 0	      2530	tc-i386.c	FUNCTION_47	IF_2	CALL_7
0x4001326	      0xbf00000000	                              mov edi, 0	      2530	tc-i386.c	FUNCTION_47	IF_2	CALL_7
0x400132b	      0xe800000000	                          call 0x4001330	      2530	tc-i386.c	FUNCTION_47	IF_2	CALL_7
0x4001330	          0x4889de	                            mov rsi, rbx	      2530	tc-i386.c	FUNCTION_47	IF_2	CALL_7
0x4001333	          0x4889c7	                            mov rdi, rax	      2530	tc-i386.c	FUNCTION_47	IF_2	CALL_7
0x4001336	      0xb800000000	                              mov eax, 0	      2530	tc-i386.c	FUNCTION_47	IF_2	CALL_7
0x400133b	      0xe800000000	                          call 0x4001340	      2530	tc-i386.c	FUNCTION_47	IF_2	CALL_7
0x4001340	        0x410fbefc	                         movsx edi, r12b	      2531	tc-i386.c	FUNCTION_47	IF_2	CALL_8
0x4001344	      0xe800000000	                          call 0x4001349	      2531	tc-i386.c	FUNCTION_47	IF_2	CALL_8
0x4001349	            0xeb24	                           jmp 0x400136f	      2531	tc-i386.c	FUNCTION_47	IF_2	CALL_8
0x400134b	      0xba05000000	                              mov edx, 5	      2534	tc-i386.c	FUNCTION_47	CALL_10
0x4001350	      0xbe00000000	                              mov esi, 0	      2534	tc-i386.c	FUNCTION_47	CALL_10
0x4001355	      0xbf00000000	                              mov edi, 0	      2534	tc-i386.c	FUNCTION_47	CALL_10
0x400135a	      0xe800000000	                          call 0x400135f	      2534	tc-i386.c	FUNCTION_47	CALL_10
0x400135f	          0x4889de	                            mov rsi, rbx	      2534	tc-i386.c	FUNCTION_47	CALL_10
0x4001362	          0x4889c7	                            mov rdi, rax	      2534	tc-i386.c	FUNCTION_47	CALL_10
0x4001365	      0xb800000000	                              mov eax, 0	      2534	tc-i386.c	FUNCTION_47	CALL_10
0x400136a	      0xe800000000	                          call 0x400136f	      2534	tc-i386.c	FUNCTION_47	CALL_10
0x400136f	      0xe800000000	                          call 0x4001374	      2536	tc-i386.c	FUNCTION_47	CALL_11
0x4001374	      0x488b442408	                mov rax, qword [rsp + 8]	      2537	tc-i386.c	FUNCTION_47
0x4001379	    0x644833042528	                xor rax, qword fs:[0x28]	      2537	tc-i386.c	FUNCTION_47
0x4001382	            0x7405	                            je 0x4001389	      2537	tc-i386.c	FUNCTION_47
0x4001384	      0xe800000000	                          call 0x4001389	      2537	tc-i386.c	FUNCTION_47
0x4001389	        0x4883c410	                           add rsp, 0x10	      2537	tc-i386.c	FUNCTION_47
0x400138d	              0x5b	                                 pop rbx	      2537	tc-i386.c	FUNCTION_47
0x400138e	              0x5d	                                 pop rbp	      2537	tc-i386.c	FUNCTION_47
0x400138f	            0x415c	                                 pop r12	      2537	tc-i386.c	FUNCTION_47
0x4001391	              0xc3	                                     ret	      2537	tc-i386.c	FUNCTION_47
x86_64_section_letter	functions,0:ELSE,1:FOR,0:CALL,2:SWITCH,0:WHILE,0:IF,2:DO,0	22
0x40111bc	              0x53	                                push rbx	     11610	tc-i386.c	FUNCTION_142	IF_1	CALL_1
0x40111bd	          0x4889f3	                            mov rbx, rsi	     11610	tc-i386.c	FUNCTION_142	IF_1	CALL_1
0x40111c0	    0x833d00000000	               cmp dword [0x040111c7], 2	     11611	tc-i386.c	FUNCTION_142	IF_1
0x40111c7	            0x752a	                           jne 0x40111f3	     11611	tc-i386.c	FUNCTION_142	IF_1
0x40111c9	      0xb800000010	                     mov eax, 0x10000000	     11614	tc-i386.c	FUNCTION_142
0x40111ce	          0x83ff6c	                           cmp edi, 0x6c	     11613	tc-i386.c	FUNCTION_142
0x40111d1	            0x743e	                            je 0x4011211	     11613	tc-i386.c	FUNCTION_142
0x40111d3	      0xba05000000	                              mov edx, 5	     11616	tc-i386.c	
0x40111d8	      0xbe00000000	                              mov esi, 0	     11616	tc-i386.c	
0x40111dd	      0xbf00000000	                              mov edi, 0	     11616	tc-i386.c	
0x40111e2	      0xe800000000	                          call 0x40111e7	     11616	tc-i386.c	
0x40111e7	          0x488903	                    mov qword [rbx], rax	     11616	tc-i386.c	
0x40111ea	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	     11620	tc-i386.c	FUNCTION_143	IF_1
0x40111f1	            0xeb1e	                           jmp 0x4011211	     11620	tc-i386.c	FUNCTION_143	IF_1
0x40111f3	      0xba05000000	                              mov edx, 5	     11619	tc-i386.c	FUNCTION_143	IF_1
0x40111f8	      0xbe00000000	                              mov esi, 0	     11619	tc-i386.c	FUNCTION_143	IF_1
0x40111fd	      0xbf00000000	                              mov edi, 0	     11619	tc-i386.c	FUNCTION_143	IF_1
0x4011202	      0xe800000000	                          call 0x4011207	     11619	tc-i386.c	FUNCTION_143	IF_1
0x4011207	          0x488903	                    mov qword [rbx], rax	     11619	tc-i386.c	FUNCTION_143	IF_1
0x401120a	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	     11620	tc-i386.c	FUNCTION_143	IF_1
0x4011211	              0x5b	                                 pop rbx	     11621	tc-i386.c	FUNCTION_143	IF_1	CALL_1
0x4011212	              0xc3	                                     ret	     11621	tc-i386.c	FUNCTION_143	IF_1	CALL_1
tc_i386_fix_adjustable	functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0:IF,4:DO,0	42
0x400b884	              0x53	                                push rbx	      3198	tc-i386.c	FUNCTION_60
0x400b885	          0x4889fb	                            mov rbx, rdi	      3198	tc-i386.c	FUNCTION_60
0x400b888	    0x833d00000000	               cmp dword [0x0400b88f], 0	      3205	tc-i386.c	FUNCTION_60	IF_2
0x400b88f	            0x7419	                            je 0x400b8aa	      3205	tc-i386.c	FUNCTION_60	IF_2
0x400b891	        0x488b7f18	            mov rdi, qword [rdi + 0x18] 	      3206	tc-i386.c	FUNCTION_60	IF_2	CALL_1
0x400b895	      0xe800000000	                          call 0x400b89a	      3206	tc-i386.c	FUNCTION_60	IF_2	CALL_1
0x400b89a	        0xf6402280	           test byte [rax + 0x22], 0x80 	      3206	tc-i386.c	FUNCTION_60	IF_2	CALL_1
0x400b89e	            0x740a	                            je 0x400b8aa	      3206	tc-i386.c	FUNCTION_60	IF_2	CALL_1
0x400b8a0	      0xb800000000	                              mov eax, 0	      3208	tc-i386.c	FUNCTION_60	IF_2
0x400b8a5	          0xf60301	                      test byte [rbx], 1	      3207	tc-i386.c	FUNCTION_60	IF_2
0x400b8a8	            0x7568	                           jne 0x400b912	      3207	tc-i386.c	FUNCTION_60	IF_2
0x400b8aa	    0x488b05000000	            mov rax, qword [0x0400b8b1] 	      3212	tc-i386.c	FUNCTION_60	IF_3
0x400b8b1	          0x4885c0	                           test rax, rax	      3212	tc-i386.c	FUNCTION_60	IF_3
0x400b8b4	            0x740c	                            je 0x400b8c2	      3212	tc-i386.c	FUNCTION_60	IF_3
0x400b8b6	        0x483b4320	            cmp rax, qword [rbx + 0x20] 	      3212	tc-i386.c	FUNCTION_60	IF_3
0x400b8ba	            0x7506	                           jne 0x400b8c2	      3212	tc-i386.c	FUNCTION_60	IF_3
0x400b8bc	        0x837b5009	               cmp dword [rbx + 0x50], 9	      3213	tc-i386.c	FUNCTION_60	IF_3
0x400b8c0	            0x744b	                            je 0x400b90d	      3213	tc-i386.c	FUNCTION_60	IF_3
0x400b8c2	          0x8b7350	            mov esi, dword [rbx + 0x50] 	      3218	tc-i386.c	FUNCTION_60	IF_4
0x400b8c5	          0x8d46dc	                   lea eax, [rsi - 0x24]	      3220	tc-i386.c	FUNCTION_60	IF_4
0x400b8c8	          0x83f801	                              cmp eax, 1	      3220	tc-i386.c	FUNCTION_60	IF_4
0x400b8cb	           0xf96c0	                                setbe al	      3220	tc-i386.c	FUNCTION_60	IF_4
0x400b8ce	    0x8d8e9cfeffff	                  lea ecx, [rsi - 0x164]	      3222	tc-i386.c	FUNCTION_60	IF_4
0x400b8d4	      0xba01000000	                              mov edx, 1	      3222	tc-i386.c	FUNCTION_60	IF_4
0x400b8d9	          0x83f937	                           cmp ecx, 0x37	      3222	tc-i386.c	FUNCTION_60	IF_4
0x400b8dc	            0x7714	                            ja 0x400b8f2	      3222	tc-i386.c	FUNCTION_60	IF_4
0x400b8de	    0x48ba43fe3187	            movabs rdx, 0xc303fc8731fe43	      3222	tc-i386.c	FUNCTION_60	IF_4
0x400b8e8	          0x48d3ea	                             shr rdx, cl	      3222	tc-i386.c	FUNCTION_60	IF_4
0x400b8eb	        0x4883f201	                              xor rdx, 1	      3222	tc-i386.c	FUNCTION_60	IF_4
0x400b8ef	          0x83e201	                              and edx, 1	      3222	tc-i386.c	FUNCTION_60	IF_4
0x400b8f2	    0x81eea3050000	                          sub esi, 0x5a3	      3253	tc-i386.c	FUNCTION_60
0x400b8f8	          0x83fe01	                              cmp esi, 1	      3253	tc-i386.c	FUNCTION_60
0x400b8fb	           0xf96c1	                                setbe cl	      3253	tc-i386.c	FUNCTION_60
0x400b8fe	             0x9c8	                             or eax, ecx	      3253	tc-i386.c	FUNCTION_60
0x400b900	          0x83f201	                              xor edx, 1	      3253	tc-i386.c	FUNCTION_60
0x400b903	             0x9d0	                             or eax, edx	      3253	tc-i386.c	FUNCTION_60
0x400b905	          0x83f001	                              xor eax, 1	      3253	tc-i386.c	FUNCTION_60
0x400b908	           0xfb6c0	                           movzx eax, al	      3253	tc-i386.c	FUNCTION_60
0x400b90b	            0xeb05	                           jmp 0x400b912	      3253	tc-i386.c	FUNCTION_60
0x400b90d	      0xb800000000	                              mov eax, 0	      3214	tc-i386.c	FUNCTION_60	IF_3
0x400b912	              0x5b	                                 pop rbx	      3254	tc-i386.c	FUNCTION_60
0x400b913	              0xc3	                                     ret	      3254	tc-i386.c	FUNCTION_60
match_template	functions,0:ELSE,13:FOR,5:CALL,65:SWITCH,6:WHILE,0:IF,48:DO,0	1868
0x400910c	            0x4157	                                push r15	      5277	tc-i386.c	FUNCTION_77
0x400910e	            0x4156	                                push r14	      5277	tc-i386.c	FUNCTION_77
0x4009110	            0x4155	                                push r13	      5277	tc-i386.c	FUNCTION_77
0x4009112	            0x4154	                                push r12	      5277	tc-i386.c	FUNCTION_77
0x4009114	              0x55	                                push rbp	      5277	tc-i386.c	FUNCTION_77
0x4009115	              0x53	                                push rbx	      5277	tc-i386.c	FUNCTION_77
0x4009116	    0x4881eca80000	                           sub rsp, 0xa8	      5277	tc-i386.c	FUNCTION_77
0x400911d	    0x64488b042528	                mov rax, qword fs:[0x28]	      5277	tc-i386.c	FUNCTION_77
0x4009126	    0x488984249800	             mov qword [rsp + 0x98], rax	      5277	tc-i386.c	FUNCTION_77
0x400912e	            0x31c0	                            xor eax, eax	      5277	tc-i386.c	FUNCTION_77
0x4009130	    0x48c744245000	               mov qword [rsp + 0x50], 0	        90	string3.h	FUNCTION_164	CALL_6
0x4009139	    0xc74424580000	               mov dword [rsp + 0x58], 0	        90	string3.h	FUNCTION_164	CALL_6
0x4009141	    0x8b0500000000	            mov eax, dword [0x04009147] 	      5299	tc-i386.c	FUNCTION_77	IF_1
0x4009147	            0x85c0	                           test eax, eax	      5299	tc-i386.c	FUNCTION_77	IF_1
0x4009149	            0x740e	                            je 0x4009159	      5299	tc-i386.c	FUNCTION_77	IF_1
0x400914b	    0x48833d000000	               cmp qword [0x04009153], 0	      5299	tc-i386.c	FUNCTION_77	IF_1
0x4009153	     0xf85991d0000	                           jne 0x400aef2	      5299	tc-i386.c	FUNCTION_77	IF_1
0x4009159	     0xfb615000000	           movzx edx, byte [0x04009160] 	      5301	tc-i386.c	FUNCTION_77	ELSE_1	IF_2
0x4009160	          0x80fa62	                            cmp dl, 0x62	      5301	tc-i386.c	FUNCTION_77	ELSE_1	IF_2
0x4009163	            0x7507	                           jne 0x400916c	      5301	tc-i386.c	FUNCTION_77	ELSE_1	IF_2
0x4009165	      0x804c245202	                 or byte [rsp + 0x52], 2	      5302	tc-i386.c	FUNCTION_77	ELSE_1	IF_2
0x400916a	            0xeb3a	                           jmp 0x40091a6	      5302	tc-i386.c	FUNCTION_77	ELSE_1	IF_2
0x400916c	          0x80fa77	                            cmp dl, 0x77	      5303	tc-i386.c	FUNCTION_77	ELSE_2	IF_3
0x400916f	            0x7507	                           jne 0x4009178	      5303	tc-i386.c	FUNCTION_77	ELSE_2	IF_3
0x4009171	      0x804c245204	                 or byte [rsp + 0x52], 4	      5304	tc-i386.c	FUNCTION_77	ELSE_2	IF_3
0x4009176	            0xeb2e	                           jmp 0x40091a6	      5304	tc-i386.c	FUNCTION_77	ELSE_2	IF_3
0x4009178	          0x80fa73	                            cmp dl, 0x73	      5305	tc-i386.c	FUNCTION_77	ELSE_3	IF_4
0x400917b	            0x7507	                           jne 0x4009184	      5305	tc-i386.c	FUNCTION_77	ELSE_3	IF_4
0x400917d	      0x804c245210	              or byte [rsp + 0x52], 0x10	      5306	tc-i386.c	FUNCTION_77	ELSE_3	IF_4
0x4009182	            0xeb22	                           jmp 0x40091a6	      5306	tc-i386.c	FUNCTION_77	ELSE_3	IF_4
0x4009184	          0x80fa6c	                            cmp dl, 0x6c	      5307	tc-i386.c	FUNCTION_77	ELSE_4	IF_5
0x4009187	            0x7507	                           jne 0x4009190	      5307	tc-i386.c	FUNCTION_77	ELSE_4	IF_5
0x4009189	      0x804c245208	                 or byte [rsp + 0x52], 8	      5308	tc-i386.c	FUNCTION_77	ELSE_4	IF_5
0x400918e	            0xeb16	                           jmp 0x40091a6	      5308	tc-i386.c	FUNCTION_77	ELSE_4	IF_5
0x4009190	          0x80fa71	                            cmp dl, 0x71	      5309	tc-i386.c	FUNCTION_77	ELSE_5	IF_6
0x4009193	            0x7507	                           jne 0x400919c	      5309	tc-i386.c	FUNCTION_77	ELSE_5	IF_6
0x4009195	      0x804c245220	              or byte [rsp + 0x52], 0x20	      5310	tc-i386.c	FUNCTION_77	ELSE_5	IF_6
0x400919a	            0xeb0a	                           jmp 0x40091a6	      5310	tc-i386.c	FUNCTION_77	ELSE_5	IF_6
0x400919c	          0x80fa01	                               cmp dl, 1	      5311	tc-i386.c	FUNCTION_77	ELSE_6	IF_7
0x400919f	            0x7505	                           jne 0x40091a6	      5311	tc-i386.c	FUNCTION_77	ELSE_6	IF_7
0x40091a1	      0x804c245240	              or byte [rsp + 0x52], 0x40	      5312	tc-i386.c	FUNCTION_77	ELSE_6	IF_7
0x40091a6	    0x48c744246000	               mov qword [rsp + 0x60], 0	        90	string3.h	FUNCTION_164	CALL_6
0x40091af	    0xc74424680000	               mov dword [rsp + 0x68], 0	        90	string3.h	FUNCTION_164	CALL_6
0x40091b7	            0x85c0	                           test eax, eax	      5315	tc-i386.c	FUNCTION_77	IF_8
0x40091b9	            0x7435	                            je 0x40091f0	      5315	tc-i386.c	FUNCTION_77	IF_8
0x40091bb	          0x83ef62	                           sub edi, 0x62	      5317	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x40091be	        0x4080ff15	                           cmp dil, 0x15	      5317	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x40091c2	            0x772c	                            ja 0x40091f0	      5317	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x40091c4	        0x400fb6ff	                          movzx edi, dil	      5317	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x40091c8	    0xff24fd000000	                       jmp qword [rdi*8]	      5317	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x40091cf	      0x804c246202	                 or byte [rsp + 0x62], 2	      5319	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x40091d4	            0xeb1a	                           jmp 0x40091f0	      5319	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x40091d6	      0x804c246204	                 or byte [rsp + 0x62], 4	      5320	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x40091db	            0xeb13	                           jmp 0x40091f0	      5320	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x40091dd	      0x804c246210	              or byte [rsp + 0x62], 0x10	      5321	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x40091e2	            0xeb0c	                           jmp 0x40091f0	      5321	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x40091e4	      0x804c246208	                 or byte [rsp + 0x62], 8	      5322	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x40091e9	            0xeb05	                           jmp 0x40091f0	      5322	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x40091eb	      0x804c246220	              or byte [rsp + 0x62], 0x20	      5323	tc-i386.c	FUNCTION_77	IF_8	SWITCH_1
0x40091f0	    0xc70500000000	               mov dword [0x040091fa], 3	      5328	tc-i386.c	FUNCTION_77
0x40091fa	    0x4c8b25000000	            mov r12, qword [0x04009201] 	      5330	tc-i386.c	FUNCTION_77	FOR_1
0x4009201	        0x498b1c24	                    mov rbx, qword [r12]	      5330	tc-i386.c	FUNCTION_77	FOR_1
0x4009205	      0x498b442408	                mov rax, qword [r12 + 8]	      5330	tc-i386.c	FUNCTION_77	FOR_1
0x400920a	          0x4839c3	                            cmp rbx, rax	      5330	tc-i386.c	FUNCTION_77	FOR_1
0x400920d	     0xf83de1d0000	                           jae 0x400aff1	      5330	tc-i386.c	FUNCTION_77	FOR_1
0x4009213	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      5330	tc-i386.c	FUNCTION_77	FOR_1
0x400921b	    0x41bf00000000	                             mov r15d, 0	      5330	tc-i386.c	FUNCTION_77	FOR_1
0x4009221	    0x49bcffffffff	          movabs r12, 0xffffffbfffffffff	      2050	tc-i386.c	FUNCTION_26
0x400922b	    0x49beffffff7f	          movabs r14, 0xffffffff7fffffff	      2053	tc-i386.c	FUNCTION_26
0x4009235	    0x49bdffffffff	          movabs r13, 0xfffffffeffffffff	      2054	tc-i386.c	FUNCTION_26
0x400923f	      0xbdffffffff	                     mov ebp, 0xffffffff	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x4009244	          0x8b4308	                mov eax, dword [rbx + 8]	      5334	tc-i386.c	FUNCTION_77	FOR_1	IF_9
0x4009247	    0x390500000000	            cmp dword [0x0400924d], eax 	      5334	tc-i386.c	FUNCTION_77	FOR_1	IF_9
0x400924d	     0xf850f180000	                           jne 0x400aa62	      5334	tc-i386.c	FUNCTION_77	FOR_1	IF_9
0x4009253	    0xc70500000000	               mov dword [0x0400925d], 8	      5338	tc-i386.c	FUNCTION_77	FOR_1
0x400925d	          0x4889df	                            mov rdi, rbx	      5339	tc-i386.c	FUNCTION_77	FOR_1	CALL_3
0x4009260	      0xe8db6dffff	                call sym.cpu_flags_match	      5339	tc-i386.c	FUNCTION_77	FOR_1	CALL_3
0x4009265	          0x83f803	                              cmp eax, 3	      5341	tc-i386.c	FUNCTION_77	FOR_1	IF_10
0x4009268	     0xf85f4170000	                           jne 0x400aa62	      5341	tc-i386.c	FUNCTION_77	FOR_1	IF_10
0x400926e	    0xc70500000000	               mov dword [0x04009278], 6	      5345	tc-i386.c	FUNCTION_77	FOR_1
0x4009278	    0x833d00000000	               cmp dword [0x0400927f], 0	      5346	tc-i386.c	FUNCTION_77	FOR_1	IF_11
0x400927f	            0x740a	                            je 0x400928b	      5346	tc-i386.c	FUNCTION_77	FOR_1	IF_11
0x4009281	        0xf6433040	           test byte [rbx + 0x30], 0x40 	      5346	tc-i386.c	FUNCTION_77	FOR_1	IF_11
0x4009285	     0xf8554170000	                           jne 0x400a9df	      5346	tc-i386.c	FUNCTION_77	FOR_1	IF_11
0x400928b	    0xc70500000000	               mov dword [0x04009295], 7	      5350	tc-i386.c	FUNCTION_77	FOR_1
0x4009295	    0x8b1500000000	            mov edx, dword [0x0400929b] 	      5351	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x400929b	            0x85d2	                           test edx, edx	      5351	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x400929d	            0x740c	                            je 0x40092ab	      5351	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x400929f	        0x807b3000	                cmp byte [rbx + 0x30], 0	      5351	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x40092a3	     0xf883d170000	                            js 0x400a9e6	      5351	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x40092a9	            0xeb0a	                           jmp 0x40092b5	      5351	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x40092ab	        0xf6433101	               test byte [rbx + 0x31], 1	      5352	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x40092af	     0xf8538170000	                           jne 0x400a9ed	      5352	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x40092b5	    0x833d00000000	               cmp dword [0x040092bc], 0	      5353	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x40092bc	            0x740c	                            je 0x40092ca	      5353	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x40092be	        0xf6433102	               test byte [rbx + 0x31], 2	      5353	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x40092c2	     0xf852c170000	                           jne 0x400a9f4	      5353	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x40092c8	            0xeb0a	                           jmp 0x40092d4	      5353	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x40092ca	        0xf6433104	               test byte [rbx + 0x31], 4	      5354	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x40092ce	     0xf8527170000	                           jne 0x400a9fb	      5354	tc-i386.c	FUNCTION_77	FOR_1	IF_12
0x40092d4	    0xc70500000000	               mov dword [0x040092de], 4	      5358	tc-i386.c	FUNCTION_77	FOR_1
0x40092de	            0x85d2	                           test edx, edx	      5359	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x40092e0	            0x7406	                            je 0x40092e8	      5359	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x40092e2	        0x807b2900	                cmp byte [rbx + 0x29], 0	      5359	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x40092e6	            0x785e	                            js 0x4009346	      5359	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x40092e8	         0xfb6432a	           movzx eax, byte [rbx + 0x2a] 	      5360	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x40092ec	            0xa802	                              test al, 2	      5360	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x40092ee	            0x740b	                            je 0x40092fb	      5360	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x40092f0	      0xf644245202	               test byte [rsp + 0x52], 2	      5360	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x40092f5	     0xf8507170000	                           jne 0x400aa02	      5360	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x40092fb	            0xa804	                              test al, 4	      5361	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x40092fd	            0x740b	                            je 0x400930a	      5361	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x40092ff	      0xf644245204	               test byte [rsp + 0x52], 4	      5361	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4009304	     0xf85ff160000	                           jne 0x400aa09	      5361	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x400930a	            0xa808	                              test al, 8	      5362	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x400930c	            0x740b	                            je 0x4009319	      5362	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x400930e	      0xf644245208	               test byte [rsp + 0x52], 8	      5362	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4009313	     0xf85f7160000	                           jne 0x400aa10	      5362	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4009319	            0xa810	                           test al, 0x10	      5363	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x400931b	            0x740b	                            je 0x4009328	      5363	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x400931d	      0xf644245210	           test byte [rsp + 0x52], 0x10 	      5363	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4009322	     0xf85ef160000	                           jne 0x400aa17	      5363	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4009328	            0xa820	                           test al, 0x20	      5364	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x400932a	            0x740b	                            je 0x4009337	      5364	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x400932c	      0xf644245220	           test byte [rsp + 0x52], 0x20 	      5364	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4009331	     0xf85e7160000	                           jne 0x400aa1e	      5364	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4009337	            0xa840	                           test al, 0x40	      5365	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4009339	            0x740b	                            je 0x4009346	      5365	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x400933b	      0xf644245240	           test byte [rsp + 0x52], 0x40 	      5365	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4009340	     0xf85df160000	                           jne 0x400aa25	      5365	tc-i386.c	FUNCTION_77	FOR_1	IF_13
0x4009346	         0xfb6432a	           movzx eax, byte [rbx + 0x2a] 	      5368	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x400934a	            0xa802	                              test al, 2	      5368	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x400934c	            0x740b	                            je 0x4009359	      5368	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x400934e	      0xf644246202	               test byte [rsp + 0x62], 2	      5368	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4009353	     0xf85d3160000	                           jne 0x400aa2c	      5368	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4009359	            0xa804	                              test al, 4	      5369	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x400935b	            0x740b	                            je 0x4009368	      5369	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x400935d	      0xf644246204	               test byte [rsp + 0x62], 4	      5369	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4009362	     0xf85cb160000	                           jne 0x400aa33	      5369	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4009368	            0xa808	                              test al, 8	      5370	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x400936a	            0x740b	                            je 0x4009377	      5370	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x400936c	      0xf644246208	               test byte [rsp + 0x62], 8	      5370	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4009371	     0xf85c3160000	                           jne 0x400aa3a	      5370	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4009377	            0xa810	                           test al, 0x10	      5371	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4009379	            0x740b	                            je 0x4009386	      5371	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x400937b	      0xf644246210	           test byte [rsp + 0x62], 0x10 	      5371	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4009380	     0xf85bb160000	                           jne 0x400aa41	      5371	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4009386	            0xa820	                           test al, 0x20	      5372	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4009388	            0x740b	                            je 0x4009395	      5372	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x400938a	      0xf644246220	           test byte [rsp + 0x62], 0x20 	      5372	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x400938f	     0xf85b3160000	                           jne 0x400aa48	      5372	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4009395	            0xa840	                           test al, 0x40	      5373	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4009397	            0x740b	                            je 0x40093a4	      5373	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x4009399	      0xf644246240	           test byte [rsp + 0x62], 0x40 	      5373	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x400939e	     0xf85ab160000	                           jne 0x400aa4f	      5373	tc-i386.c	FUNCTION_77	FOR_1	IF_14
0x40093a4	    0x66f74328e001	          test word [rbx + 0x28], 0x1e0 	      1974	tc-i386.c	FUNCTION_25	IF_1
0x40093aa	     0xf8585060000	                           jne 0x4009a35	      1974	tc-i386.c	FUNCTION_25	IF_1
0x40093b0	    0x8b3d00000000	            mov edi, dword [0x040093b6] 	      1981	tc-i386.c	FUNCTION_25	FOR_1
0x40093b6	            0x85ff	                           test edi, edi	      1981	tc-i386.c	FUNCTION_25	FOR_1
0x40093b8	     0xf847e060000	                            je 0x4009a3c	      1981	tc-i386.c	FUNCTION_25	FOR_1
0x40093be	    0x488b35000000	            mov rsi, qword [0x040093c5] 	      1944	tc-i386.c	FUNCTION_24
0x40093c5	      0xb800000000	                              mov eax, 0	      1944	tc-i386.c	FUNCTION_24
0x40093ca	            0x89c1	                            mov ecx, eax	      1983	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x40093cc	    0xf604cd000000	                    test byte [rcx*8], 1	      1983	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x40093d4	            0x7515	                           jne 0x40093eb	      1983	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x40093d6	    0xf604cd000000	                    test byte [rcx*8], 4	      1983	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x40093de	            0x750b	                           jne 0x40093eb	      1983	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x40093e0	      0x807ccb3800	        cmp byte [rbx + rcx*8 + 0x38], 0	      1984	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x40093e5	     0xf8832030000	                            js 0x400971d	      1984	tc-i386.c	FUNCTION_25	FOR_1	IF_2
0x40093eb	            0x89c1	                            mov ecx, eax	      1987	tc-i386.c	FUNCTION_25	FOR_1	IF_3
0x40093ed	      0xf644cb3401	      test byte [rbx + rcx*8 + 0x34], 1 	      1987	tc-i386.c	FUNCTION_25	FOR_1	IF_3
0x40093f2	            0x7471	                            je 0x4009465	      1987	tc-i386.c	FUNCTION_25	FOR_1	IF_3
0x40093f4	    0xf604cd000000	                 test byte [rcx*8], 0x20	      1910	tc-i386.c	FUNCTION_22
0x40093fc	            0x740b	                            je 0x4009409	      1910	tc-i386.c	FUNCTION_22
0x40093fe	      0xf644cb3720	   test byte [rbx + rcx*8 + 0x37], 0x20 	      1911	tc-i386.c	FUNCTION_22
0x4009403	     0xf8429030000	                            je 0x4009732	      1911	tc-i386.c	FUNCTION_22
0x4009409	            0x89c1	                            mov ecx, eax	      1912	tc-i386.c	FUNCTION_22
0x400940b	    0xf604cd000000	                 test byte [rcx*8], 0x40	      1912	tc-i386.c	FUNCTION_22
0x4009413	            0x740b	                            je 0x4009420	      1912	tc-i386.c	FUNCTION_22
0x4009415	      0xf644cb3740	   test byte [rbx + rcx*8 + 0x37], 0x40 	      1913	tc-i386.c	FUNCTION_22
0x400941a	     0xf8412030000	                            je 0x4009732	      1913	tc-i386.c	FUNCTION_22
0x4009420	            0x89c1	                            mov ecx, eax	      1914	tc-i386.c	FUNCTION_22
0x4009422	    0x803ccd000000	                     cmp byte [rcx*8], 0	      1914	tc-i386.c	FUNCTION_22
0x400942a	            0x790b	                           jns 0x4009437	      1914	tc-i386.c	FUNCTION_22
0x400942c	      0x807ccb3700	        cmp byte [rbx + rcx*8 + 0x37], 0	      1915	tc-i386.c	FUNCTION_22
0x4009431	     0xf89fb020000	                           jns 0x4009732	      1915	tc-i386.c	FUNCTION_22
0x4009437	            0x89c1	                            mov ecx, eax	      1916	tc-i386.c	FUNCTION_22
0x4009439	    0xf604cd000000	                    test byte [rcx*8], 2	      1916	tc-i386.c	FUNCTION_22
0x4009441	            0x740b	                            je 0x400944e	      1916	tc-i386.c	FUNCTION_22
0x4009443	      0xf644cb3802	      test byte [rbx + rcx*8 + 0x38], 2 	      1917	tc-i386.c	FUNCTION_22
0x4009448	     0xf84e4020000	                            je 0x4009732	      1917	tc-i386.c	FUNCTION_22
0x400944e	            0x89c1	                            mov ecx, eax	      1918	tc-i386.c	FUNCTION_22
0x4009450	    0xf604cd000000	                    test byte [rcx*8], 4	      1910	tc-i386.c	FUNCTION_22
0x4009458	            0x740b	                            je 0x4009465	      1910	tc-i386.c	FUNCTION_22
0x400945a	      0xf644cb3804	      test byte [rbx + rcx*8 + 0x38], 4 	      1919	tc-i386.c	FUNCTION_22
0x400945f	     0xf84cd020000	                            je 0x4009732	      1919	tc-i386.c	FUNCTION_22
0x4009465	            0x89c1	                            mov ecx, eax	      1994	tc-i386.c	FUNCTION_25	FOR_1	IF_4
0x4009467	       0xfb64ccb34	   movzx ecx, byte [rbx + rcx*8 + 0x34] 	      1994	tc-i386.c	FUNCTION_25	FOR_1	IF_4
0x400946c	          0xc0e902	                               shr cl, 2	      1994	tc-i386.c	FUNCTION_25	FOR_1	IF_4
0x400946f	          0x83e101	                              and ecx, 1	      1994	tc-i386.c	FUNCTION_25	FOR_1	IF_4
0x4009472	            0x744e	                            je 0x40094c2	      1994	tc-i386.c	FUNCTION_25	FOR_1	IF_4
0x4009474	          0x4189c0	                            mov r8d, eax	      1928	tc-i386.c	FUNCTION_23
0x4009477	    0x42f604c50000	                     test byte [r8*8], 8	      1928	tc-i386.c	FUNCTION_23
0x4009480	            0x740c	                            je 0x400948e	      1928	tc-i386.c	FUNCTION_23
0x4009482	    0x42f644c33808	       test byte [rbx + r8*8 + 0x38], 8 	      1929	tc-i386.c	FUNCTION_23
0x4009488	     0xf84a4020000	                            je 0x4009732	      1929	tc-i386.c	FUNCTION_23
0x400948e	          0x4189c0	                            mov r8d, eax	      1930	tc-i386.c	FUNCTION_23
0x4009491	    0x42f604c50000	                  test byte [r8*8], 0x10	      1930	tc-i386.c	FUNCTION_23
0x400949a	            0x740c	                            je 0x40094a8	      1930	tc-i386.c	FUNCTION_23
0x400949c	    0x42f644c33810	    test byte [rbx + r8*8 + 0x38], 0x10 	      1931	tc-i386.c	FUNCTION_23
0x40094a2	     0xf848a020000	                            je 0x4009732	      1931	tc-i386.c	FUNCTION_23
0x40094a8	          0x4189c0	                            mov r8d, eax	      1932	tc-i386.c	FUNCTION_23
0x40094ab	    0x42f604c50000	                  test byte [r8*8], 0x20	      1928	tc-i386.c	FUNCTION_23
0x40094b4	            0x740c	                            je 0x40094c2	      1928	tc-i386.c	FUNCTION_23
0x40094b6	    0x42f644c33820	    test byte [rbx + r8*8 + 0x38], 0x20 	      1933	tc-i386.c	FUNCTION_23
0x40094bc	     0xf8470020000	                            je 0x4009732	      1933	tc-i386.c	FUNCTION_23
0x40094c2	          0x4189c0	                            mov r8d, eax	      2001	tc-i386.c	FUNCTION_25	FOR_1	IF_5
0x40094c5	    0x42f644c33620	    test byte [rbx + r8*8 + 0x36], 0x20 	      2001	tc-i386.c	FUNCTION_25	FOR_1	IF_5
0x40094cb	     0xf84cb000000	                            je 0x400959c	      2001	tc-i386.c	FUNCTION_25	FOR_1	IF_5
0x40094d1	    0x42f604c50000	                  test byte [r8*8], 0x20	      1910	tc-i386.c	FUNCTION_22
0x40094da	            0x740c	                            je 0x40094e8	      1910	tc-i386.c	FUNCTION_22
0x40094dc	    0x42f644c33720	    test byte [rbx + r8*8 + 0x37], 0x20 	      1911	tc-i386.c	FUNCTION_22
0x40094e2	     0xf844a020000	                            je 0x4009732	      1911	tc-i386.c	FUNCTION_22
0x40094e8	          0x4189c0	                            mov r8d, eax	      1912	tc-i386.c	FUNCTION_22
0x40094eb	    0x42f604c50000	                  test byte [r8*8], 0x40	      1912	tc-i386.c	FUNCTION_22
0x40094f4	            0x740c	                            je 0x4009502	      1912	tc-i386.c	FUNCTION_22
0x40094f6	    0x42f644c33740	    test byte [rbx + r8*8 + 0x37], 0x40 	      1913	tc-i386.c	FUNCTION_22
0x40094fc	     0xf8430020000	                            je 0x4009732	      1913	tc-i386.c	FUNCTION_22
0x4009502	          0x4189c0	                            mov r8d, eax	      1914	tc-i386.c	FUNCTION_22
0x4009505	    0x42803cc50000	                      cmp byte [r8*8], 0	      1914	tc-i386.c	FUNCTION_22
0x400950e	            0x790c	                           jns 0x400951c	      1914	tc-i386.c	FUNCTION_22
0x4009510	    0x42807cc33700	         cmp byte [rbx + r8*8 + 0x37], 0	      1915	tc-i386.c	FUNCTION_22
0x4009516	     0xf8916020000	                           jns 0x4009732	      1915	tc-i386.c	FUNCTION_22
0x400951c	          0x4189c0	                            mov r8d, eax	      1916	tc-i386.c	FUNCTION_22
0x400951f	    0x42f604c50000	                     test byte [r8*8], 2	      1916	tc-i386.c	FUNCTION_22
0x4009528	            0x740c	                            je 0x4009536	      1916	tc-i386.c	FUNCTION_22
0x400952a	    0x42f644c33802	       test byte [rbx + r8*8 + 0x38], 2 	      1917	tc-i386.c	FUNCTION_22
0x4009530	     0xf84fc010000	                            je 0x4009732	      1917	tc-i386.c	FUNCTION_22
0x4009536	          0x4189c0	                            mov r8d, eax	      1918	tc-i386.c	FUNCTION_22
0x4009539	    0x42f604c50000	                     test byte [r8*8], 4	      1910	tc-i386.c	FUNCTION_22
0x4009542	     0xf84c0190000	                            je 0x400af08	      1910	tc-i386.c	FUNCTION_22
0x4009548	    0x42f644c33804	       test byte [rbx + r8*8 + 0x38], 4 	      1919	tc-i386.c	FUNCTION_22
0x400954e	     0xf84de010000	                            je 0x4009732	      1919	tc-i386.c	FUNCTION_22
0x4009554	      0xe9af190000	                           jmp 0x400af08	      1919	tc-i386.c	FUNCTION_22
0x4009559	          0x4189c0	                            mov r8d, eax	      1929	tc-i386.c	FUNCTION_23
0x400955c	    0x42f644c33808	       test byte [rbx + r8*8 + 0x38], 8 	      1929	tc-i386.c	FUNCTION_23
0x4009562	     0xf84ca010000	                            je 0x4009732	      1929	tc-i386.c	FUNCTION_23
0x4009568	          0x4189c0	                            mov r8d, eax	      1930	tc-i386.c	FUNCTION_23
0x400956b	    0x42f604c50000	                  test byte [r8*8], 0x10	      1930	tc-i386.c	FUNCTION_23
0x4009574	            0x740c	                            je 0x4009582	      1930	tc-i386.c	FUNCTION_23
0x4009576	    0x42f644c33810	    test byte [rbx + r8*8 + 0x38], 0x10 	      1931	tc-i386.c	FUNCTION_23
0x400957c	     0xf84b0010000	                            je 0x4009732	      1931	tc-i386.c	FUNCTION_23
0x4009582	          0x4189c0	                            mov r8d, eax	      1932	tc-i386.c	FUNCTION_23
0x4009585	    0x42f604c50000	                  test byte [r8*8], 0x20	      1928	tc-i386.c	FUNCTION_23
0x400958e	            0x740c	                            je 0x400959c	      1928	tc-i386.c	FUNCTION_23
0x4009590	    0x42f644c33820	    test byte [rbx + r8*8 + 0x38], 0x20 	      1933	tc-i386.c	FUNCTION_23
0x4009596	     0xf8496010000	                            je 0x4009732	      1933	tc-i386.c	FUNCTION_23
0x400959c	          0x4189c0	                            mov r8d, eax	      2008	tc-i386.c	FUNCTION_25	FOR_1	IF_6	CALL_5
0x400959f	    0x42f604c50000	                  test byte [r8*8], 0x10	      2008	tc-i386.c	FUNCTION_25	FOR_1	IF_6	CALL_5
0x40095a8	     0xf846f010000	                            je 0x400971d	      2008	tc-i386.c	FUNCTION_25	FOR_1	IF_6	CALL_5
0x40095ae	    0x42f604c50000	                  test byte [r8*8], 0x20	      1910	tc-i386.c	FUNCTION_22
0x40095b7	            0x740c	                            je 0x40095c5	      1910	tc-i386.c	FUNCTION_22
0x40095b9	    0x42f644c33720	    test byte [rbx + r8*8 + 0x37], 0x20 	      1911	tc-i386.c	FUNCTION_22
0x40095bf	     0xf846d010000	                            je 0x4009732	      1911	tc-i386.c	FUNCTION_22
0x40095c5	          0x4189c0	                            mov r8d, eax	      1912	tc-i386.c	FUNCTION_22
0x40095c8	    0x42f604c50000	                  test byte [r8*8], 0x40	      1912	tc-i386.c	FUNCTION_22
0x40095d1	            0x740c	                            je 0x40095df	      1912	tc-i386.c	FUNCTION_22
0x40095d3	    0x42f644c33740	    test byte [rbx + r8*8 + 0x37], 0x40 	      1913	tc-i386.c	FUNCTION_22
0x40095d9	     0xf8453010000	                            je 0x4009732	      1913	tc-i386.c	FUNCTION_22
0x40095df	          0x4189c0	                            mov r8d, eax	      1914	tc-i386.c	FUNCTION_22
0x40095e2	    0x42803cc50000	                      cmp byte [r8*8], 0	      1914	tc-i386.c	FUNCTION_22
0x40095eb	            0x790c	                           jns 0x40095f9	      1914	tc-i386.c	FUNCTION_22
0x40095ed	    0x42807cc33700	         cmp byte [rbx + r8*8 + 0x37], 0	      1915	tc-i386.c	FUNCTION_22
0x40095f3	     0xf8939010000	                           jns 0x4009732	      1915	tc-i386.c	FUNCTION_22
0x40095f9	          0x4189c0	                            mov r8d, eax	      1916	tc-i386.c	FUNCTION_22
0x40095fc	    0x42f604c50000	                     test byte [r8*8], 2	      1916	tc-i386.c	FUNCTION_22
0x4009605	            0x740c	                            je 0x4009613	      1916	tc-i386.c	FUNCTION_22
0x4009607	    0x42f644c33802	       test byte [rbx + r8*8 + 0x38], 2 	      1917	tc-i386.c	FUNCTION_22
0x400960d	     0xf841f010000	                            je 0x4009732	      1917	tc-i386.c	FUNCTION_22
0x4009613	          0x4189c0	                            mov r8d, eax	      1918	tc-i386.c	FUNCTION_22
0x4009616	    0x42f604c50000	                     test byte [r8*8], 4	      1910	tc-i386.c	FUNCTION_22
0x400961f	     0xf84fa180000	                            je 0x400af1f	      1910	tc-i386.c	FUNCTION_22
0x4009625	    0x42f644c33804	       test byte [rbx + r8*8 + 0x38], 4 	      1919	tc-i386.c	FUNCTION_22
0x400962b	     0xf8401010000	                            je 0x4009732	      1919	tc-i386.c	FUNCTION_22
0x4009631	      0xe9e9180000	                           jmp 0x400af1f	      1919	tc-i386.c	FUNCTION_22
0x4009636	          0x4885f6	                           test rsi, rsi	      1944	tc-i386.c	FUNCTION_24
0x4009639	            0x750f	                           jne 0x400964a	      1944	tc-i386.c	FUNCTION_24
0x400963b	          0x4189c0	                            mov r8d, eax	      1945	tc-i386.c	FUNCTION_24
0x400963e	    0x42f644c33840	    test byte [rbx + r8*8 + 0x38], 0x40 	      1945	tc-i386.c	FUNCTION_24
0x4009644	     0xf84e8000000	                            je 0x4009732	      1945	tc-i386.c	FUNCTION_24
0x400964a	          0x4189c0	                            mov r8d, eax	      1946	tc-i386.c	FUNCTION_24
0x400964d	    0x42f604c50000	                     test byte [r8*8], 1	      1946	tc-i386.c	FUNCTION_24
0x4009656	            0x740c	                            je 0x4009664	      1946	tc-i386.c	FUNCTION_24
0x4009658	    0x42f644c33801	       test byte [rbx + r8*8 + 0x38], 1 	      1947	tc-i386.c	FUNCTION_24
0x400965e	     0xf84ce000000	                            je 0x4009732	      1947	tc-i386.c	FUNCTION_24
0x4009664	            0x84c9	                             test cl, cl	      1943	tc-i386.c	FUNCTION_24
0x4009666	            0x7459	                            je 0x40096c1	      1943	tc-i386.c	FUNCTION_24
0x4009668	        0xf6432f20	           test byte [rbx + 0x2f], 0x20 	      1953	tc-i386.c	FUNCTION_24
0x400966c	            0x7553	                           jne 0x40096c1	      1953	tc-i386.c	FUNCTION_24
0x400966e	            0x89c1	                            mov ecx, eax	      1954	tc-i386.c	FUNCTION_24
0x4009670	      0xf644cb3720	   test byte [rbx + rcx*8 + 0x37], 0x20 	      1954	tc-i386.c	FUNCTION_24
0x4009675	            0x7515	                           jne 0x400968c	      1954	tc-i386.c	FUNCTION_24
0x4009677	      0xf644cb3740	   test byte [rbx + rcx*8 + 0x37], 0x40 	      1955	tc-i386.c	FUNCTION_24
0x400967c	            0x750e	                           jne 0x400968c	      1955	tc-i386.c	FUNCTION_24
0x400967e	      0x807ccb3700	        cmp byte [rbx + rcx*8 + 0x37], 0	      1956	tc-i386.c	FUNCTION_24
0x4009683	            0x7807	                            js 0x400968c	      1956	tc-i386.c	FUNCTION_24
0x4009685	      0xf644cb3802	      test byte [rbx + rcx*8 + 0x38], 2 	      1957	tc-i386.c	FUNCTION_24
0x400968a	            0x7435	                            je 0x40096c1	      1957	tc-i386.c	FUNCTION_24
0x400968c	          0x4189c0	                            mov r8d, eax	      1958	tc-i386.c	FUNCTION_24
0x400968f	      0xb900000000	                              mov ecx, 0	      1960	tc-i386.c	FUNCTION_24
0x4009694	    0x42f604c50000	                     test byte [r8*8], 8	      1960	tc-i386.c	FUNCTION_24
0x400969d	            0x751d	                           jne 0x40096bc	      1960	tc-i386.c	FUNCTION_24
0x400969f	    0x42f604c50000	                  test byte [r8*8], 0x10	      1959	tc-i386.c	FUNCTION_24
0x40096a8	            0x7512	                           jne 0x40096bc	      1959	tc-i386.c	FUNCTION_24
0x40096aa	            0x89c1	                            mov ecx, eax	      1960	tc-i386.c	FUNCTION_24
0x40096ac	     0xfb60ccd0000	                 movzx ecx, byte [rcx*8]	      1960	tc-i386.c	FUNCTION_24
0x40096b4	          0xc0e905	                               shr cl, 5	      1960	tc-i386.c	FUNCTION_24
0x40096b7	            0xf7d1	                                 not ecx	      1960	tc-i386.c	FUNCTION_24
0x40096b9	          0x83e101	                              and ecx, 1	      1960	tc-i386.c	FUNCTION_24
0x40096bc	          0x83e101	                              and ecx, 1	      1960	tc-i386.c	FUNCTION_24
0x40096bf	            0xeb58	                           jmp 0x4009719	      1960	tc-i386.c	FUNCTION_24
0x40096c1	            0x89c1	                            mov ecx, eax	      1928	tc-i386.c	FUNCTION_23
0x40096c3	    0xf604cd000000	                    test byte [rcx*8], 8	      1928	tc-i386.c	FUNCTION_23
0x40096cb	            0x7410	                            je 0x40096dd	      1928	tc-i386.c	FUNCTION_23
0x40096cd	          0x4189c0	                            mov r8d, eax	      1929	tc-i386.c	FUNCTION_23
0x40096d0	      0xb900000000	                              mov ecx, 0	      1928	tc-i386.c	FUNCTION_23
0x40096d5	    0x42f644c33808	       test byte [rbx + r8*8 + 0x38], 8 	      1929	tc-i386.c	FUNCTION_23
0x40096db	            0x743c	                            je 0x4009719	      1929	tc-i386.c	FUNCTION_23
0x40096dd	            0x89c1	                            mov ecx, eax	      1930	tc-i386.c	FUNCTION_23
0x40096df	    0xf604cd000000	                 test byte [rcx*8], 0x10	      1930	tc-i386.c	FUNCTION_23
0x40096e7	            0x7410	                            je 0x40096f9	      1930	tc-i386.c	FUNCTION_23
0x40096e9	          0x4189c0	                            mov r8d, eax	      1931	tc-i386.c	FUNCTION_23
0x40096ec	      0xb900000000	                              mov ecx, 0	      1928	tc-i386.c	FUNCTION_23
0x40096f1	    0x42f644c33810	    test byte [rbx + r8*8 + 0x38], 0x10 	      1931	tc-i386.c	FUNCTION_23
0x40096f7	            0x7420	                            je 0x4009719	      1931	tc-i386.c	FUNCTION_23
0x40096f9	          0x4189c0	                            mov r8d, eax	      1932	tc-i386.c	FUNCTION_23
0x40096fc	      0xb901000000	                              mov ecx, 1	      1928	tc-i386.c	FUNCTION_23
0x4009701	    0x42f604c50000	                  test byte [r8*8], 0x20	      1928	tc-i386.c	FUNCTION_23
0x400970a	            0x740d	                            je 0x4009719	      1928	tc-i386.c	FUNCTION_23
0x400970c	            0x89c1	                            mov ecx, eax	      1933	tc-i386.c	FUNCTION_23
0x400970e	       0xfb64ccb38	   movzx ecx, byte [rbx + rcx*8 + 0x38] 	      1933	tc-i386.c	FUNCTION_23
0x4009713	          0xc0e905	                               shr cl, 5	      1933	tc-i386.c	FUNCTION_23
0x4009716	          0x83e101	                              and ecx, 1	      1928	tc-i386.c	FUNCTION_23
0x4009719	            0x85c9	                           test ecx, ecx	      2008	tc-i386.c	FUNCTION_25	FOR_1	IF_6	CALL_5
0x400971b	            0x7415	                            je 0x4009732	      2008	tc-i386.c	FUNCTION_25	FOR_1	IF_6	CALL_5
0x400971d	          0x83c001	                              add eax, 1	      1981	tc-i386.c	FUNCTION_25	FOR_1
0x4009720	            0x39f8	                            cmp eax, edi	      1981	tc-i386.c	FUNCTION_25	FOR_1
0x4009722	     0xf85a2fcffff	                           jne 0x40093ca	      1981	tc-i386.c	FUNCTION_25	FOR_1
0x4009728	      0xb800000000	                              mov eax, 0	      1981	tc-i386.c	FUNCTION_25	FOR_1
0x400972d	      0xe90f030000	                           jmp 0x4009a41	      1981	tc-i386.c	FUNCTION_25	FOR_1
0x4009732	        0xf6432801	               test byte [rbx + 0x28], 1	      2017	tc-i386.c	FUNCTION_25	ELSE_1	IF_8
0x4009736	            0x7514	                           jne 0x400974c	      2017	tc-i386.c	FUNCTION_25	ELSE_1	IF_8
0x4009738	    0xc70500000000	               mov dword [0x04009742], 0	      2020	tc-i386.c	FUNCTION_25	ELSE_1	IF_8
0x4009742	      0xbdffffffff	                     mov ebp, 0xffffffff	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x4009747	      0xe916130000	                           jmp 0x400aa62	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400974c	          0x83ff02	                              cmp edi, 2	      2025	tc-i386.c	FUNCTION_25	CALL_6
0x400974f	            0x7414	                            je 0x4009765	      2025	tc-i386.c	FUNCTION_25	CALL_6
0x4009751	      0xba00000000	                              mov edx, 0	      2025	tc-i386.c	FUNCTION_25	CALL_6
0x4009756	      0xbee9070000	                          mov esi, 0x7e9	      2025	tc-i386.c	FUNCTION_25	CALL_6
0x400975b	      0xbf00000000	                              mov edi, 0	      2025	tc-i386.c	FUNCTION_25	CALL_6
0x4009760	      0xe800000000	                          call 0x4009765	      2025	tc-i386.c	FUNCTION_25	CALL_6
0x4009765	      0xbf00000000	                              mov edi, 0	      2025	tc-i386.c	FUNCTION_25	CALL_6
0x400976a	            0x89f8	                            mov eax, edi	      2030	tc-i386.c	FUNCTION_25	FOR_2	IF_9
0x400976c	      0xf644c33401	      test byte [rbx + rax*8 + 0x34], 1 	      2030	tc-i386.c	FUNCTION_25	FOR_2	IF_9
0x4009771	            0x750b	                           jne 0x400977e	      2030	tc-i386.c	FUNCTION_25	FOR_2	IF_9
0x4009773	      0xf644c33620	   test byte [rbx + rax*8 + 0x36], 0x20 	      2031	tc-i386.c	FUNCTION_25	FOR_2	IF_9
0x4009778	     0xf84a9000000	                            je 0x4009827	      2031	tc-i386.c	FUNCTION_25	FOR_2	IF_9
0x400977e	            0x85ff	                           test edi, edi	      2032	tc-i386.c	FUNCTION_25	FOR_2	IF_9	CALL_7
0x4009780	           0xf94c0	                                 sete al	      2032	tc-i386.c	FUNCTION_25	FOR_2	IF_9	CALL_7
0x4009783	           0xfb6c0	                           movzx eax, al	      2032	tc-i386.c	FUNCTION_25	FOR_2	IF_9	CALL_7
0x4009786	            0x89c1	                            mov ecx, eax	      1910	tc-i386.c	FUNCTION_22
0x4009788	        0x4883c10e	                            add rcx, 0xe	      1910	tc-i386.c	FUNCTION_22
0x400978c	    0xf604cd000000	                 test byte [rcx*8], 0x20	      1910	tc-i386.c	FUNCTION_22
0x4009794	            0x740d	                            je 0x40097a3	      1910	tc-i386.c	FUNCTION_22
0x4009796	            0x89c1	                            mov ecx, eax	      1911	tc-i386.c	FUNCTION_22
0x4009798	        0x4883c106	                              add rcx, 6	      1911	tc-i386.c	FUNCTION_22
0x400979c	      0xf644cb0720	      test byte [rbx + rcx*8 + 7], 0x20 	      1911	tc-i386.c	FUNCTION_22
0x40097a1	            0x7495	                            je 0x4009738	      1911	tc-i386.c	FUNCTION_22
0x40097a3	            0x89c1	                            mov ecx, eax	      1912	tc-i386.c	FUNCTION_22
0x40097a5	        0x4883c10e	                            add rcx, 0xe	      1912	tc-i386.c	FUNCTION_22
0x40097a9	    0xf604cd000000	                 test byte [rcx*8], 0x40	      1912	tc-i386.c	FUNCTION_22
0x40097b1	            0x7411	                            je 0x40097c4	      1912	tc-i386.c	FUNCTION_22
0x40097b3	            0x89c1	                            mov ecx, eax	      1913	tc-i386.c	FUNCTION_22
0x40097b5	        0x4883c106	                              add rcx, 6	      1913	tc-i386.c	FUNCTION_22
0x40097b9	      0xf644cb0740	      test byte [rbx + rcx*8 + 7], 0x40 	      1913	tc-i386.c	FUNCTION_22
0x40097be	     0xf8474ffffff	                            je 0x4009738	      1913	tc-i386.c	FUNCTION_22
0x40097c4	            0x89c1	                            mov ecx, eax	      1914	tc-i386.c	FUNCTION_22
0x40097c6	        0x4883c10e	                            add rcx, 0xe	      1914	tc-i386.c	FUNCTION_22
0x40097ca	    0x803ccd000000	                     cmp byte [rcx*8], 0	      1914	tc-i386.c	FUNCTION_22
0x40097d2	            0x7911	                           jns 0x40097e5	      1914	tc-i386.c	FUNCTION_22
0x40097d4	            0x89c1	                            mov ecx, eax	      1915	tc-i386.c	FUNCTION_22
0x40097d6	        0x4883c106	                              add rcx, 6	      1915	tc-i386.c	FUNCTION_22
0x40097da	      0x807ccb0700	           cmp byte [rbx + rcx*8 + 7], 0	      1915	tc-i386.c	FUNCTION_22
0x40097df	     0xf8953ffffff	                           jns 0x4009738	      1915	tc-i386.c	FUNCTION_22
0x40097e5	            0x89c1	                            mov ecx, eax	      1916	tc-i386.c	FUNCTION_22
0x40097e7	        0x4883c10e	                            add rcx, 0xe	      1916	tc-i386.c	FUNCTION_22
0x40097eb	    0xf604cd000000	                    test byte [rcx*8], 2	      1916	tc-i386.c	FUNCTION_22
0x40097f3	            0x7411	                            je 0x4009806	      1916	tc-i386.c	FUNCTION_22
0x40097f5	            0x89c1	                            mov ecx, eax	      1917	tc-i386.c	FUNCTION_22
0x40097f7	        0x4883c106	                              add rcx, 6	      1917	tc-i386.c	FUNCTION_22
0x40097fb	      0xf644cb0802	         test byte [rbx + rcx*8 + 8], 2 	      1917	tc-i386.c	FUNCTION_22
0x4009800	     0xf8432ffffff	                            je 0x4009738	      1917	tc-i386.c	FUNCTION_22
0x4009806	            0x89c1	                            mov ecx, eax	      1918	tc-i386.c	FUNCTION_22
0x4009808	        0x4883c10e	                            add rcx, 0xe	      1918	tc-i386.c	FUNCTION_22
0x400980c	    0xf604cd000000	                    test byte [rcx*8], 4	      1910	tc-i386.c	FUNCTION_22
0x4009814	            0x7411	                            je 0x4009827	      1910	tc-i386.c	FUNCTION_22
0x4009816	            0x89c0	                            mov eax, eax	      1919	tc-i386.c	FUNCTION_22
0x4009818	        0x4883c006	                              add rax, 6	      1919	tc-i386.c	FUNCTION_22
0x400981c	      0xf644c30804	         test byte [rbx + rax*8 + 8], 4 	      1919	tc-i386.c	FUNCTION_22
0x4009821	     0xf8411ffffff	                            je 0x4009738	      1919	tc-i386.c	FUNCTION_22
0x4009827	            0x89f8	                            mov eax, edi	      2035	tc-i386.c	FUNCTION_25	FOR_2	IF_10
0x4009829	    0xf604c5000000	                 test byte [rax*8], 0x10	      2035	tc-i386.c	FUNCTION_25	FOR_2	IF_10
0x4009831	     0xf84eb010000	                            je 0x4009a22	      2035	tc-i386.c	FUNCTION_25	FOR_2	IF_10
0x4009837	            0x85ff	                           test edi, edi	      2036	tc-i386.c	FUNCTION_25	FOR_2	IF_10	CALL_8
0x4009839	           0xf94c0	                                 sete al	      2036	tc-i386.c	FUNCTION_25	FOR_2	IF_10	CALL_8
0x400983c	           0xfb6c0	                           movzx eax, al	      2036	tc-i386.c	FUNCTION_25	FOR_2	IF_10	CALL_8
0x400983f	            0x89c1	                            mov ecx, eax	      1910	tc-i386.c	FUNCTION_22
0x4009841	        0x4883c10e	                            add rcx, 0xe	      1910	tc-i386.c	FUNCTION_22
0x4009845	    0xf604cd000000	                 test byte [rcx*8], 0x20	      1910	tc-i386.c	FUNCTION_22
0x400984d	            0x7411	                            je 0x4009860	      1910	tc-i386.c	FUNCTION_22
0x400984f	            0x89c1	                            mov ecx, eax	      1911	tc-i386.c	FUNCTION_22
0x4009851	        0x4883c106	                              add rcx, 6	      1911	tc-i386.c	FUNCTION_22
0x4009855	      0xf644cb0720	      test byte [rbx + rcx*8 + 7], 0x20 	      1911	tc-i386.c	FUNCTION_22
0x400985a	     0xf84d8feffff	                            je 0x4009738	      1911	tc-i386.c	FUNCTION_22
0x4009860	            0x89c1	                            mov ecx, eax	      1912	tc-i386.c	FUNCTION_22
0x4009862	        0x4883c10e	                            add rcx, 0xe	      1912	tc-i386.c	FUNCTION_22
0x4009866	    0xf604cd000000	                 test byte [rcx*8], 0x40	      1912	tc-i386.c	FUNCTION_22
0x400986e	            0x7411	                            je 0x4009881	      1912	tc-i386.c	FUNCTION_22
0x4009870	            0x89c1	                            mov ecx, eax	      1913	tc-i386.c	FUNCTION_22
0x4009872	        0x4883c106	                              add rcx, 6	      1913	tc-i386.c	FUNCTION_22
0x4009876	      0xf644cb0740	      test byte [rbx + rcx*8 + 7], 0x40 	      1913	tc-i386.c	FUNCTION_22
0x400987b	     0xf84b7feffff	                            je 0x4009738	      1913	tc-i386.c	FUNCTION_22
0x4009881	            0x89c1	                            mov ecx, eax	      1914	tc-i386.c	FUNCTION_22
0x4009883	        0x4883c10e	                            add rcx, 0xe	      1914	tc-i386.c	FUNCTION_22
0x4009887	    0x803ccd000000	                     cmp byte [rcx*8], 0	      1914	tc-i386.c	FUNCTION_22
0x400988f	            0x7911	                           jns 0x40098a2	      1914	tc-i386.c	FUNCTION_22
0x4009891	            0x89c1	                            mov ecx, eax	      1915	tc-i386.c	FUNCTION_22
0x4009893	        0x4883c106	                              add rcx, 6	      1915	tc-i386.c	FUNCTION_22
0x4009897	      0x807ccb0700	           cmp byte [rbx + rcx*8 + 7], 0	      1915	tc-i386.c	FUNCTION_22
0x400989c	     0xf8996feffff	                           jns 0x4009738	      1915	tc-i386.c	FUNCTION_22
0x40098a2	            0x89c1	                            mov ecx, eax	      1916	tc-i386.c	FUNCTION_22
0x40098a4	        0x4883c10e	                            add rcx, 0xe	      1916	tc-i386.c	FUNCTION_22
0x40098a8	    0xf604cd000000	                    test byte [rcx*8], 2	      1916	tc-i386.c	FUNCTION_22
0x40098b0	            0x7411	                            je 0x40098c3	      1916	tc-i386.c	FUNCTION_22
0x40098b2	            0x89c1	                            mov ecx, eax	      1917	tc-i386.c	FUNCTION_22
0x40098b4	        0x4883c106	                              add rcx, 6	      1917	tc-i386.c	FUNCTION_22
0x40098b8	      0xf644cb0802	         test byte [rbx + rcx*8 + 8], 2 	      1917	tc-i386.c	FUNCTION_22
0x40098bd	     0xf8475feffff	                            je 0x4009738	      1917	tc-i386.c	FUNCTION_22
0x40098c3	            0x89c1	                            mov ecx, eax	      1918	tc-i386.c	FUNCTION_22
0x40098c5	        0x4883c10e	                            add rcx, 0xe	      1918	tc-i386.c	FUNCTION_22
0x40098c9	    0xf604cd000000	                    test byte [rcx*8], 4	      1910	tc-i386.c	FUNCTION_22
0x40098d1	     0xf845f160000	                            je 0x400af36	      1910	tc-i386.c	FUNCTION_22
0x40098d7	            0x89c1	                            mov ecx, eax	      1919	tc-i386.c	FUNCTION_22
0x40098d9	        0x4883c106	                              add rcx, 6	      1919	tc-i386.c	FUNCTION_22
0x40098dd	      0xf644cb0804	         test byte [rbx + rcx*8 + 8], 4 	      1919	tc-i386.c	FUNCTION_22
0x40098e2	     0xf8450feffff	                            je 0x4009738	      1919	tc-i386.c	FUNCTION_22
0x40098e8	      0xe949160000	                           jmp 0x400af36	      1919	tc-i386.c	FUNCTION_22
0x40098ed	          0x4885f6	                           test rsi, rsi	      1944	tc-i386.c	FUNCTION_24
0x40098f0	            0x7511	                           jne 0x4009903	      1944	tc-i386.c	FUNCTION_24
0x40098f2	            0x89c1	                            mov ecx, eax	      1945	tc-i386.c	FUNCTION_24
0x40098f4	        0x4883c106	                              add rcx, 6	      1945	tc-i386.c	FUNCTION_24
0x40098f8	      0xf644cb0840	      test byte [rbx + rcx*8 + 8], 0x40 	      1945	tc-i386.c	FUNCTION_24
0x40098fd	     0xf8435feffff	                            je 0x4009738	      1945	tc-i386.c	FUNCTION_24
0x4009903	            0x89c1	                            mov ecx, eax	      1946	tc-i386.c	FUNCTION_24
0x4009905	        0x4883c10e	                            add rcx, 0xe	      1946	tc-i386.c	FUNCTION_24
0x4009909	    0xf604cd000000	                    test byte [rcx*8], 1	      1946	tc-i386.c	FUNCTION_24
0x4009911	            0x7411	                            je 0x4009924	      1946	tc-i386.c	FUNCTION_24
0x4009913	            0x89c1	                            mov ecx, eax	      1947	tc-i386.c	FUNCTION_24
0x4009915	        0x4883c106	                              add rcx, 6	      1947	tc-i386.c	FUNCTION_24
0x4009919	      0xf644cb0801	         test byte [rbx + rcx*8 + 8], 1 	      1947	tc-i386.c	FUNCTION_24
0x400991e	     0xf8414feffff	                            je 0x4009738	      1947	tc-i386.c	FUNCTION_24
0x4009924	            0x89c1	                            mov ecx, eax	      1952	tc-i386.c	FUNCTION_24
0x4009926	        0x4883c106	                              add rcx, 6	      1952	tc-i386.c	FUNCTION_24
0x400992a	      0xf644cb0404	         test byte [rbx + rcx*8 + 4], 4 	      1943	tc-i386.c	FUNCTION_24
0x400992f	            0x7479	                            je 0x40099aa	      1943	tc-i386.c	FUNCTION_24
0x4009931	        0xf6432f20	           test byte [rbx + 0x2f], 0x20 	      1953	tc-i386.c	FUNCTION_24
0x4009935	            0x7573	                           jne 0x40099aa	      1953	tc-i386.c	FUNCTION_24
0x4009937	            0x89c1	                            mov ecx, eax	      1954	tc-i386.c	FUNCTION_24
0x4009939	        0x4883c106	                              add rcx, 6	      1954	tc-i386.c	FUNCTION_24
0x400993d	      0xf644cb0720	      test byte [rbx + rcx*8 + 7], 0x20 	      1954	tc-i386.c	FUNCTION_24
0x4009942	            0x7527	                           jne 0x400996b	      1954	tc-i386.c	FUNCTION_24
0x4009944	            0x89c1	                            mov ecx, eax	      1955	tc-i386.c	FUNCTION_24
0x4009946	        0x4883c106	                              add rcx, 6	      1955	tc-i386.c	FUNCTION_24
0x400994a	      0xf644cb0740	      test byte [rbx + rcx*8 + 7], 0x40 	      1955	tc-i386.c	FUNCTION_24
0x400994f	            0x751a	                           jne 0x400996b	      1955	tc-i386.c	FUNCTION_24
0x4009951	            0x89c1	                            mov ecx, eax	      1956	tc-i386.c	FUNCTION_24
0x4009953	        0x4883c106	                              add rcx, 6	      1956	tc-i386.c	FUNCTION_24
0x4009957	      0x807ccb0700	           cmp byte [rbx + rcx*8 + 7], 0	      1956	tc-i386.c	FUNCTION_24
0x400995c	            0x780d	                            js 0x400996b	      1956	tc-i386.c	FUNCTION_24
0x400995e	            0x89c1	                            mov ecx, eax	      1957	tc-i386.c	FUNCTION_24
0x4009960	        0x4883c106	                              add rcx, 6	      1957	tc-i386.c	FUNCTION_24
0x4009964	      0xf644cb0802	         test byte [rbx + rcx*8 + 8], 2 	      1957	tc-i386.c	FUNCTION_24
0x4009969	            0x743f	                            je 0x40099aa	      1957	tc-i386.c	FUNCTION_24
0x400996b	          0x4189c0	                            mov r8d, eax	      1958	tc-i386.c	FUNCTION_24
0x400996e	        0x4983c00e	                             add r8, 0xe	      1958	tc-i386.c	FUNCTION_24
0x4009972	      0xb900000000	                              mov ecx, 0	      1960	tc-i386.c	FUNCTION_24
0x4009977	    0x42f604c50000	                     test byte [r8*8], 8	      1960	tc-i386.c	FUNCTION_24
0x4009980	            0x7523	                           jne 0x40099a5	      1960	tc-i386.c	FUNCTION_24
0x4009982	          0x4189c0	                            mov r8d, eax	      1959	tc-i386.c	FUNCTION_24
0x4009985	        0x4983c00e	                             add r8, 0xe	      1959	tc-i386.c	FUNCTION_24
0x4009989	    0x42f604c50000	                  test byte [r8*8], 0x10	      1959	tc-i386.c	FUNCTION_24
0x4009992	            0x7511	                           jne 0x40099a5	      1959	tc-i386.c	FUNCTION_24
0x4009994	    0x420fb60cc500	                  movzx ecx, byte [r8*8]	      1960	tc-i386.c	FUNCTION_24
0x400999d	          0xc0e905	                               shr cl, 5	      1960	tc-i386.c	FUNCTION_24
0x40099a0	            0xf7d1	                                 not ecx	      1960	tc-i386.c	FUNCTION_24
0x40099a2	          0x83e101	                              and ecx, 1	      1960	tc-i386.c	FUNCTION_24
0x40099a5	          0x83e101	                              and ecx, 1	      1960	tc-i386.c	FUNCTION_24
0x40099a8	            0xeb70	                           jmp 0x4009a1a	      1960	tc-i386.c	FUNCTION_24
0x40099aa	            0x89c1	                            mov ecx, eax	      1928	tc-i386.c	FUNCTION_23
0x40099ac	        0x4883c10e	                            add rcx, 0xe	      1928	tc-i386.c	FUNCTION_23
0x40099b0	    0xf604cd000000	                    test byte [rcx*8], 8	      1928	tc-i386.c	FUNCTION_23
0x40099b8	            0x7414	                            je 0x40099ce	      1928	tc-i386.c	FUNCTION_23
0x40099ba	          0x4189c0	                            mov r8d, eax	      1929	tc-i386.c	FUNCTION_23
0x40099bd	        0x4983c006	                               add r8, 6	      1929	tc-i386.c	FUNCTION_23
0x40099c1	      0xb900000000	                              mov ecx, 0	      1928	tc-i386.c	FUNCTION_23
0x40099c6	    0x42f644c30808	          test byte [rbx + r8*8 + 8], 8 	      1929	tc-i386.c	FUNCTION_23
0x40099cc	            0x744c	                            je 0x4009a1a	      1929	tc-i386.c	FUNCTION_23
0x40099ce	            0x89c1	                            mov ecx, eax	      1930	tc-i386.c	FUNCTION_23
0x40099d0	        0x4883c10e	                            add rcx, 0xe	      1930	tc-i386.c	FUNCTION_23
0x40099d4	    0xf604cd000000	                 test byte [rcx*8], 0x10	      1930	tc-i386.c	FUNCTION_23
0x40099dc	            0x7414	                            je 0x40099f2	      1930	tc-i386.c	FUNCTION_23
0x40099de	          0x4189c0	                            mov r8d, eax	      1931	tc-i386.c	FUNCTION_23
0x40099e1	        0x4983c006	                               add r8, 6	      1931	tc-i386.c	FUNCTION_23
0x40099e5	      0xb900000000	                              mov ecx, 0	      1928	tc-i386.c	FUNCTION_23
0x40099ea	    0x42f644c30810	       test byte [rbx + r8*8 + 8], 0x10 	      1931	tc-i386.c	FUNCTION_23
0x40099f0	            0x7428	                            je 0x4009a1a	      1931	tc-i386.c	FUNCTION_23
0x40099f2	          0x4189c0	                            mov r8d, eax	      1932	tc-i386.c	FUNCTION_23
0x40099f5	        0x4983c00e	                             add r8, 0xe	      1932	tc-i386.c	FUNCTION_23
0x40099f9	      0xb901000000	                              mov ecx, 1	      1928	tc-i386.c	FUNCTION_23
0x40099fe	    0x42f604c50000	                  test byte [r8*8], 0x20	      1928	tc-i386.c	FUNCTION_23
0x4009a07	            0x7411	                            je 0x4009a1a	      1928	tc-i386.c	FUNCTION_23
0x4009a09	            0x89c0	                            mov eax, eax	      1933	tc-i386.c	FUNCTION_23
0x4009a0b	        0x4883c006	                              add rax, 6	      1933	tc-i386.c	FUNCTION_23
0x4009a0f	       0xfb64cc308	      movzx ecx, byte [rbx + rax*8 + 8] 	      1933	tc-i386.c	FUNCTION_23
0x4009a14	          0xc0e905	                               shr cl, 5	      1933	tc-i386.c	FUNCTION_23
0x4009a17	          0x83e101	                              and ecx, 1	      1928	tc-i386.c	FUNCTION_23
0x4009a1a	            0x85c9	                           test ecx, ecx	      2036	tc-i386.c	FUNCTION_25	FOR_2	IF_10	CALL_8
0x4009a1c	     0xf8416fdffff	                            je 0x4009738	      2036	tc-i386.c	FUNCTION_25	FOR_2	IF_10	CALL_8
0x4009a22	          0x83c701	                              add edi, 1	      2028	tc-i386.c	FUNCTION_25	FOR_2
0x4009a25	          0x83ff02	                              cmp edi, 2	      2028	tc-i386.c	FUNCTION_25	FOR_2
0x4009a28	     0xf853cfdffff	                           jne 0x400976a	      2028	tc-i386.c	FUNCTION_25	FOR_2
0x4009a2e	      0xb800000000	                              mov eax, 0	      2028	tc-i386.c	FUNCTION_25	FOR_2
0x4009a33	            0xeb0c	                           jmp 0x4009a41	      2028	tc-i386.c	FUNCTION_25	FOR_2
0x4009a35	      0xb800000000	                              mov eax, 0	      1974	tc-i386.c	FUNCTION_25	IF_1
0x4009a3a	            0xeb05	                           jmp 0x4009a41	      1974	tc-i386.c	FUNCTION_25	IF_1
0x4009a3c	      0xb800000000	                              mov eax, 0	      1981	tc-i386.c	FUNCTION_25	FOR_1
0x4009a41	      0x488b4c0334	      mov rcx, qword [rbx + rax + 0x34] 	      5380	tc-i386.c	FUNCTION_77	FOR_1	FOR_2
0x4009a46	      0x48894c0470	       mov qword [rsp + rax + 0x70], rcx	      5380	tc-i386.c	FUNCTION_77	FOR_1	FOR_2
0x4009a4b	        0x4883c008	                              add rax, 8	      5380	tc-i386.c	FUNCTION_77	FOR_1	FOR_2
0x4009a4f	        0x4883f828	                           cmp rax, 0x28	      5379	tc-i386.c	FUNCTION_77	FOR_1	FOR_2
0x4009a53	            0x75ec	                           jne 0x4009a41	      5379	tc-i386.c	FUNCTION_77	FOR_1	FOR_2
0x4009a55	     0xfb605000000	           movzx eax, byte [0x04009a5c] 	      5383	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4009a5c	            0x3c71	                            cmp al, 0x71	      5383	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4009a5e	     0xf8581000000	                           jne 0x4009ae5	      5383	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4009a64	    0x833d00000000	               cmp dword [0x04009a6b], 2	      5384	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4009a6b	     0xf84d0000000	                            je 0x4009b41	      5384	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4009a71	            0x85d2	                           test edx, edx	      5383	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4009a73	            0x741b	                            je 0x4009a90	      5383	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4009a75	        0x807b2900	                cmp byte [rbx + 0x29], 0	      5387	tc-i386.c	FUNCTION_77	FOR_1	IF_16	CALL_5
0x4009a79	     0xf88c2000000	                            js 0x4009b41	      5387	tc-i386.c	FUNCTION_77	FOR_1	IF_16	CALL_5
0x4009a7f	          0x488b3b	                    mov rdi, qword [rbx]	      5387	tc-i386.c	FUNCTION_77	FOR_1	IF_16	CALL_5
0x4009a82	      0xe8416affff	            call sym.intel_float_operand	      5387	tc-i386.c	FUNCTION_77	FOR_1	IF_16	CALL_5
0x4009a87	            0x85c0	                           test eax, eax	      5385	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4009a89	            0x7416	                            je 0x4009aa1	      5385	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4009a8b	      0xe9b1000000	                           jmp 0x4009b41	      5385	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4009a90	          0x488b3b	                    mov rdi, qword [rbx]	      5388	tc-i386.c	FUNCTION_77	FOR_1	IF_16	CALL_6
0x4009a93	      0xe8306affff	            call sym.intel_float_operand	      5388	tc-i386.c	FUNCTION_77	FOR_1	IF_16	CALL_6
0x4009a98	          0x83f802	                              cmp eax, 2	      5385	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4009a9b	     0xf84a0000000	                            je 0x4009b41	      5385	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4009aa1	      0xf644247006	               test byte [rsp + 0x70], 6	      5389	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4009aa6	            0x741f	                            je 0x4009ac7	      5389	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4009aa8	        0x837b0801	                  cmp dword [rbx + 8], 1	      5391	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4009aac	           0xf97c0	                                 seta al	      5391	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4009aaf	           0xfb6c0	                           movzx eax, al	      5391	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4009ab2	          0x4863d0	                         movsxd rdx, eax	      5391	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4009ab5	      0xf644d47002	      test byte [rsp + rdx*8 + 0x70], 2 	      5391	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4009aba	     0xf8581000000	                           jne 0x4009b41	      5391	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4009ac0	      0xf644d47004	      test byte [rsp + rdx*8 + 0x70], 4 	      5392	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4009ac5	            0x757a	                           jne 0x4009b41	      5392	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4009ac7	      0xbdffffffff	                     mov ebp, 0xffffffff	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x4009acc	    0x817b0cc70f00	           cmp dword [rbx + 0xc], 0xfc7 	      5393	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4009ad3	     0xf85890f0000	                           jne 0x400aa62	      5393	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4009ad9	        0x837b1001	               cmp dword [rbx + 0x10], 1	      5394	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4009add	     0xf857f0f0000	                           jne 0x400aa62	      5394	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4009ae3	            0xeb5c	                           jmp 0x4009b41	      5394	tc-i386.c	FUNCTION_77	FOR_1	IF_16
0x4009ae5	            0x3c6c	                            cmp al, 0x6c	      5398	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4009ae7	            0x7558	                           jne 0x4009b41	      5398	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4009ae9	    0xf60500000000	               test byte [0x04009af0], 4	      5399	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4009af0	            0x754f	                           jne 0x4009b41	      5399	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4009af2	            0x85d2	                           test edx, edx	      5398	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4009af4	            0x7414	                            je 0x4009b0a	      5398	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4009af6	        0x807b2900	                cmp byte [rbx + 0x29], 0	      5402	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17	CALL_7
0x4009afa	            0x7845	                            js 0x4009b41	      5402	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17	CALL_7
0x4009afc	          0x488b3b	                    mov rdi, qword [rbx]	      5402	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17	CALL_7
0x4009aff	      0xe8c469ffff	            call sym.intel_float_operand	      5402	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17	CALL_7
0x4009b04	            0x85c0	                           test eax, eax	      5400	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4009b06	            0x740f	                            je 0x4009b17	      5400	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4009b08	            0xeb37	                           jmp 0x4009b41	      5400	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4009b0a	          0x488b3b	                    mov rdi, qword [rbx]	      5403	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17	CALL_8
0x4009b0d	      0xe8b669ffff	            call sym.intel_float_operand	      5403	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17	CALL_8
0x4009b12	          0x83f802	                              cmp eax, 2	      5400	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4009b15	            0x742a	                            je 0x4009b41	      5400	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4009b17	      0xf644247006	               test byte [rsp + 0x70], 6	      5404	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4009b1c	     0xf84340f0000	                            je 0x400aa56	      5404	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4009b22	        0x837b0801	                  cmp dword [rbx + 8], 1	      5406	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4009b26	           0xf97c0	                                 seta al	      5406	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4009b29	           0xfb6c0	                           movzx eax, al	      5406	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4009b2c	          0x4863d0	                         movsxd rdx, eax	      5406	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4009b2f	      0xf644d47002	      test byte [rsp + rdx*8 + 0x70], 2 	      5406	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4009b34	            0x750b	                           jne 0x4009b41	      5406	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4009b36	      0xf644d47004	      test byte [rsp + rdx*8 + 0x70], 4 	      5407	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4009b3b	     0xf841c0f0000	                            je 0x400aa5d	      5407	tc-i386.c	FUNCTION_77	FOR_1	ELSE_7	IF_17
0x4009b41	          0x8b7308	                mov esi, dword [rbx + 8]	      5413	tc-i386.c	FUNCTION_77	FOR_1	ELSE_8	IF_18
0x4009b44	            0x85f6	                           test esi, esi	      5413	tc-i386.c	FUNCTION_77	FOR_1	ELSE_8	IF_18
0x4009b46	     0xf842d0f0000	                            je 0x400aa79	      5413	tc-i386.c	FUNCTION_77	FOR_1	ELSE_8	IF_18
0x4009b4c	      0xbdffffffff	                     mov ebp, 0xffffffff	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x4009b51	    0x803d00000000	                cmp byte [0x04009b58], 0	      5420	tc-i386.c	FUNCTION_77	FOR_1	IF_19
0x4009b58	     0xf84eb000000	                            je 0x4009c49	      5420	tc-i386.c	FUNCTION_77	FOR_1	IF_19
0x4009b5e	    0x8b0500000000	            mov eax, dword [0x04009b64] 	      5423	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x4009b64	          0x83f801	                              cmp eax, 1	      5423	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x4009b67	            0x7428	                            je 0x4009b91	      5423	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x4009b69	          0x83f801	                              cmp eax, 1	      5423	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x4009b6c	            0x7231	                            jb 0x4009b9f	      5423	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x4009b6e	      0xbdffffffff	                     mov ebp, 0xffffffff	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x4009b73	          0x83f802	                              cmp eax, 2	      5423	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x4009b76	     0xf85cd000000	                           jne 0x4009c49	      5423	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2
0x4009b7c	      0xf644247210	           test byte [rsp + 0x72], 0x10 	      5452	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x4009b81	     0xf8599000000	                           jne 0x4009c20	      5452	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x4009b87	      0xb801000000	                              mov eax, 1	      5452	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x4009b8c	      0xe984000000	                           jmp 0x4009c15	      5452	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x4009b91	      0xf644247202	               test byte [rsp + 0x72], 2	      5428	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x4009b96	            0x7520	                           jne 0x4009bb8	      5428	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x4009b98	      0xb801000000	                              mov eax, 1	      5428	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x4009b9d	            0xeb0e	                           jmp 0x4009bad	      5428	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x4009b9f	      0xf644247204	               test byte [rsp + 0x72], 4	      5440	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x4009ba4	            0x7546	                           jne 0x4009bec	      5440	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x4009ba6	      0xb801000000	                              mov eax, 1	      5440	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x4009bab	            0xeb34	                           jmp 0x4009be1	      5440	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x4009bad	            0x89c2	                            mov edx, eax	      5428	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x4009baf	      0xf644d47202	      test byte [rsp + rdx*8 + 0x72], 2 	      5428	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x4009bb4	            0x741c	                            je 0x4009bd2	      5428	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x4009bb6	            0xeb05	                           jmp 0x4009bbd	      5428	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x4009bb8	      0xb800000000	                              mov eax, 0	      5428	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x4009bbd	            0x89c5	                            mov ebp, eax	      5430	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x4009bbf	            0x89c0	                            mov eax, eax	      5431	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x4009bc1	       0xfb654c472	   movzx edx, byte [rsp + rax*8 + 0x72] 	      5431	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x4009bc6	          0x83ca04	                               or edx, 4	      5431	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x4009bc9	          0x83e2fd	                     and edx, 0xfffffffd	      5432	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x4009bcc	        0x8854c472	       mov byte [rsp + rax*8 + 0x72], dl	      5432	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x4009bd0	            0xeb77	                           jmp 0x4009c49	      5433	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3	IF_20
0x4009bd2	          0x83c001	                              add eax, 1	      5426	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3
0x4009bd5	          0x83f805	                              cmp eax, 5	      5426	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3
0x4009bd8	            0x75d3	                           jne 0x4009bad	      5426	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_3
0x4009bda	      0xbdffffffff	                     mov ebp, 0xffffffff	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x4009bdf	            0xeb68	                           jmp 0x4009c49	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x4009be1	            0x89c2	                            mov edx, eax	      5440	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x4009be3	      0xf644d47204	      test byte [rsp + rdx*8 + 0x72], 4 	      5440	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x4009be8	            0x741c	                            je 0x4009c06	      5440	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x4009bea	            0xeb05	                           jmp 0x4009bf1	      5440	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x4009bec	      0xb800000000	                              mov eax, 0	      5440	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x4009bf1	            0x89c5	                            mov ebp, eax	      5442	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x4009bf3	            0x89c0	                            mov eax, eax	      5443	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x4009bf5	       0xfb654c472	   movzx edx, byte [rsp + rax*8 + 0x72] 	      5443	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x4009bfa	          0x83e2fb	                     and edx, 0xfffffffb	      5443	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x4009bfd	          0x83ca02	                               or edx, 2	      5444	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x4009c00	        0x8854c472	       mov byte [rsp + rax*8 + 0x72], dl	      5444	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x4009c04	            0xeb43	                           jmp 0x4009c49	      5445	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4	IF_21
0x4009c06	          0x83c001	                              add eax, 1	      5438	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4
0x4009c09	          0x83f805	                              cmp eax, 5	      5438	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4
0x4009c0c	            0x75d3	                           jne 0x4009be1	      5438	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_4
0x4009c0e	      0xbdffffffff	                     mov ebp, 0xffffffff	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x4009c13	            0xeb34	                           jmp 0x4009c49	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x4009c15	            0x89c2	                            mov edx, eax	      5452	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x4009c17	      0xf644d47210	   test byte [rsp + rdx*8 + 0x72], 0x10 	      5452	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x4009c1c	            0x741c	                            je 0x4009c3a	      5452	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x4009c1e	            0xeb05	                           jmp 0x4009c25	      5452	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x4009c20	      0xb800000000	                              mov eax, 0	      5452	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x4009c25	            0x89c5	                            mov ebp, eax	      5454	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x4009c27	            0x89c0	                            mov eax, eax	      5455	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x4009c29	       0xfb654c472	   movzx edx, byte [rsp + rax*8 + 0x72] 	      5455	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x4009c2e	          0x83e2ef	                     and edx, 0xffffffef	      5455	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x4009c31	          0x83ca04	                               or edx, 4	      5456	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x4009c34	        0x8854c472	       mov byte [rsp + rax*8 + 0x72], dl	      5456	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x4009c38	            0xeb0f	                           jmp 0x4009c49	      5457	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5	IF_22
0x4009c3a	          0x83c001	                              add eax, 1	      5450	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5
0x4009c3d	          0x83f805	                              cmp eax, 5	      5450	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5
0x4009c40	            0x75d3	                           jne 0x4009c15	      5450	tc-i386.c	FUNCTION_77	FOR_1	IF_19	SWITCH_2	FOR_5
0x4009c42	      0xbdffffffff	                     mov ebp, 0xffffffff	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x4009c47	            0xeb00	                           jmp 0x4009c49	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x4009c49	    0x813d00000000	          cmp dword [0x04009c53], 0x164 	      5465	tc-i386.c	FUNCTION_77	FOR_1	IF_23
0x4009c53	            0x750d	                           jne 0x4009c62	      5465	tc-i386.c	FUNCTION_77	FOR_1	IF_23
0x4009c55	    0x817b0ca00000	            cmp dword [rbx + 0xc], 0xa0 	      5465	tc-i386.c	FUNCTION_77	FOR_1	IF_23
0x4009c5c	     0xf84000e0000	                            je 0x400aa62	      5465	tc-i386.c	FUNCTION_77	FOR_1	IF_23
0x4009c62	    0xc74424180000	               mov dword [rsp + 0x18], 0	      5476	tc-i386.c	FUNCTION_77	FOR_1	ELSE_9
0x4009c6a	        0xf6432940	           test byte [rbx + 0x29], 0x40 	      5469	tc-i386.c	FUNCTION_77	FOR_1	IF_24
0x4009c6e	     0xf84db120000	                            je 0x400af4f	      5469	tc-i386.c	FUNCTION_77	FOR_1	IF_24
0x4009c74	      0xb801000000	                              mov eax, 1	      5471	tc-i386.c	FUNCTION_77	FOR_1	IF_24
0x4009c79	            0x89f1	                            mov ecx, esi	      5471	tc-i386.c	FUNCTION_77	FOR_1	IF_24
0x4009c7b	            0xd3e0	                             shl eax, cl	      5471	tc-i386.c	FUNCTION_77	FOR_1	IF_24
0x4009c7d	          0x83e801	                              sub eax, 1	      5471	tc-i386.c	FUNCTION_77	FOR_1	IF_24
0x4009c80	            0x89c7	                            mov edi, eax	      5471	tc-i386.c	FUNCTION_77	FOR_1	IF_24
0x4009c82	        0x89442418	             mov dword [rsp + 0x18], eax	      5471	tc-i386.c	FUNCTION_77	FOR_1	IF_24
0x4009c86	    0x488b05000000	            mov rax, qword [0x04009c8d] 	      5472	tc-i386.c	FUNCTION_77	FOR_1	IF_24	IF_25
0x4009c8d	          0x4885c0	                           test rax, rax	      5472	tc-i386.c	FUNCTION_77	FOR_1	IF_24	IF_25
0x4009c90	     0xf84b9120000	                            je 0x400af4f	      5472	tc-i386.c	FUNCTION_77	FOR_1	IF_24	IF_25
0x4009c96	          0x8b4804	                mov ecx, dword [rax + 4]	      5473	tc-i386.c	FUNCTION_77	FOR_1	IF_24	IF_25
0x4009c99	      0xb8feffffff	                     mov eax, 0xfffffffe	      5473	tc-i386.c	FUNCTION_77	FOR_1	IF_24	IF_25
0x4009c9e	            0xd3c0	                             rol eax, cl	      5473	tc-i386.c	FUNCTION_77	FOR_1	IF_24	IF_25
0x4009ca0	            0x89f9	                            mov ecx, edi	      5473	tc-i386.c	FUNCTION_77	FOR_1	IF_24	IF_25
0x4009ca2	            0x21c1	                            and ecx, eax	      5473	tc-i386.c	FUNCTION_77	FOR_1	IF_24	IF_25
0x4009ca4	        0x894c2418	             mov dword [rsp + 0x18], ecx	      5473	tc-i386.c	FUNCTION_77	FOR_1	IF_24	IF_25
0x4009ca8	      0xe9a2120000	                           jmp 0x400af4f	      5473	tc-i386.c	FUNCTION_77	FOR_1	IF_24	IF_25
0x4009cad	        0x48c1e020	                           shl rax, 0x20	      5482	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_26	CALL_10
0x4009cb1	            0x89d2	                            mov edx, edx	      5482	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_26	CALL_10
0x4009cb3	          0x4889d7	                            mov rdi, rdx	      5482	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_26	CALL_10
0x4009cb6	          0x4809c7	                             or rdi, rax	      5482	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_26	CALL_10
0x4009cb9	    0x488b35000000	            mov rsi, qword [0x04009cc0] 	      5482	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_26	CALL_10
0x4009cc0	      0xe8aa65ffff	             call sym.operand_type_match	      5482	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_26	CALL_10
0x4009cc5	            0x85c0	                           test eax, eax	      5482	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_26	CALL_10
0x4009cc7	     0xf84950d0000	                            je 0x400aa62	      5482	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_26	CALL_10
0x4009ccd	      0xe923050000	                           jmp 0x400a1f5	      5482	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_26	CALL_10
0x4009cd2	    0x833d00000000	               cmp dword [0x04009cd9], 2	      5490	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27
0x4009cd9	            0x7536	                           jne 0x4009d11	      5490	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27
0x4009cdb	    0x817b0c900000	            cmp dword [rbx + 0xc], 0x90 	      5491	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27
0x4009ce2	            0x755d	                           jne 0x4009d41	      5491	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27
0x4009ce4	    0x448b05000000	            mov r8d, dword [0x04009ceb] 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x4009ceb	          0x4139f8	                            cmp r8d, edi	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x4009cee	            0x7551	                           jne 0x4009d41	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x4009cf0	    0x8b3500000000	            mov esi, dword [0x04009cf6] 	      1559	tc-i386.c	FUNCTION_9	SWITCH_1
0x4009cf6	            0x39ce	                            cmp esi, ecx	      5492	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27	CALL_11
0x4009cf8	            0x7547	                           jne 0x4009d41	      5492	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27	CALL_11
0x4009cfa	    0x443b05000000	            cmp r8d, dword [0x04009d01] 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x4009d01	            0x753e	                           jne 0x4009d41	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x4009d03	    0x3b3500000000	            cmp esi, dword [0x04009d09] 	      5493	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27	CALL_12
0x4009d09	     0xf84530d0000	                            je 0x400aa62	      5493	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27	CALL_12
0x4009d0f	            0xeb30	                           jmp 0x4009d41	      5493	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_27	CALL_12
0x4009d11	    0x48833d000000	               cmp qword [0x04009d19], 0	      5498	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28
0x4009d19	            0x7426	                            je 0x4009d41	      5498	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28
0x4009d1b	    0x817b0ca00000	            cmp dword [rbx + 0xc], 0xa0 	      5499	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28
0x4009d22	            0x751d	                           jne 0x4009d41	      5499	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28
0x4009d24	    0xf60500000000	           test byte [0x04009d2b], 0x20 	      5500	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28
0x4009d2b	            0x7414	                            je 0x4009d41	      5500	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28
0x4009d2d	    0x488b0d000000	            mov rcx, qword [0x04009d34] 	      1895	tc-i386.c	FUNCTION_21	SWITCH_1
0x4009d34	        0x48c1e910	                           shr rcx, 0x10	      1895	tc-i386.c	FUNCTION_21	SWITCH_1
0x4009d38	          0xf6c15f	                           test cl, 0x5f	      5501	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28	CALL_13
0x4009d3b	     0xf85210d0000	                           jne 0x400aa62	      5501	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_28	CALL_13
0x4009d41	    0x833d00000000	               cmp dword [0x04009d48], 2	      5504	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_29
0x4009d48	            0x7528	                           jne 0x4009d72	      5504	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_29
0x4009d4a	        0xf6432801	               test byte [rbx + 0x28], 1	      5505	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_29
0x4009d4e	     0xf853f010000	                           jne 0x4009e93	      5505	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_29
0x4009d54	            0xeb09	                           jmp 0x4009d5f	      5505	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_29
0x4009d56	    0x833d00000000	               cmp dword [0x04009d5d], 2	      5511	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x4009d5d	            0x7513	                           jne 0x4009d72	      5511	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x4009d5f	    0x833d00000000	               cmp dword [0x04009d66], 0	      5512	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x4009d66	            0x750a	                           jne 0x4009d72	      5512	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x4009d68	        0xf6432804	               test byte [rbx + 0x28], 4	      5513	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x4009d6c	     0xf85f00c0000	                           jne 0x400aa62	      5513	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x4009d72	        0x8b4c247c	            mov ecx, dword [rsp + 0x7c] 	      5513	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x4009d76	    0x230d00000000	             and ecx, dword [0x04009d7c]	      5513	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x4009d7c	        0x48c1e120	                           shl rcx, 0x20	      5513	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x4009d80	    0x8b3d00000000	            mov edi, dword [0x04009d86] 	      5513	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x4009d86	        0x237c2478	             and edi, dword [rsp + 0x78]	      5513	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x4009d8a	          0x4809cf	                             or rdi, rcx	      5513	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x4009d8d	    0x488b0d000000	            mov rcx, qword [0x04009d94] 	      5513	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_30
0x4009d94	        0x48c1e020	                           shl rax, 0x20	      2047	tc-i386.c	FUNCTION_26
0x4009d98	            0x89d6	                            mov esi, edx	      2047	tc-i386.c	FUNCTION_26
0x4009d9a	    0x81e6fffffffd	                     and esi, 0xfdffffff	      2047	tc-i386.c	FUNCTION_26
0x4009da0	          0x4809f0	                             or rax, rsi	      2049	tc-i386.c	FUNCTION_26
0x4009da3	          0x4c21e0	                            and rax, r12	      2050	tc-i386.c	FUNCTION_26
0x4009da6	    0x4825ffffffdf	             and rax, 0xffffffffdfffffff	      2051	tc-i386.c	FUNCTION_26
0x4009dac	    0x4825ffffffbf	             and rax, 0xffffffffbfffffff	      2052	tc-i386.c	FUNCTION_26
0x4009db2	          0x4c21f0	                            and rax, r14	      2053	tc-i386.c	FUNCTION_26
0x4009db5	          0x4c21e8	                            and rax, r13	      2054	tc-i386.c	FUNCTION_26
0x4009db8	    0x48beffffffff	          movabs rsi, 0xfffffffdffffffff	      2055	tc-i386.c	FUNCTION_26
0x4009dc2	          0x4821f0	                            and rax, rsi	      2055	tc-i386.c	FUNCTION_26
0x4009dc5	    0x48beffffffff	          movabs rsi, 0xfffffffbffffffff	      2056	tc-i386.c	FUNCTION_26
0x4009dcf	          0x4821c6	                            and rsi, rax	      2056	tc-i386.c	FUNCTION_26
0x4009dd2	    0x48b8ffffffff	          movabs rax, 0xfffffff7ffffffff	      2057	tc-i386.c	FUNCTION_26
0x4009ddc	          0x4821c6	                            and rsi, rax	      2057	tc-i386.c	FUNCTION_26
0x4009ddf	    0x48b8ffffffff	          movabs rax, 0xffffffefffffffff	      2058	tc-i386.c	FUNCTION_26
0x4009de9	          0x4821c6	                            and rsi, rax	      2058	tc-i386.c	FUNCTION_26
0x4009dec	    0x48b8ffffffff	          movabs rax, 0xffffffdfffffffff	      2059	tc-i386.c	FUNCTION_26
0x4009df6	          0x4821f0	                            and rax, rsi	      2059	tc-i386.c	FUNCTION_26
0x4009df9	          0x4889c6	                            mov rsi, rax	      1514	tc-i386.c	FUNCTION_7	SWITCH_1	IF_2
0x4009dfc	        0x48c1ee20	                           shr rsi, 0x20	      1514	tc-i386.c	FUNCTION_7	SWITCH_1	IF_2
0x4009e00	            0x85f6	                           test esi, esi	      1514	tc-i386.c	FUNCTION_7	SWITCH_1	IF_2
0x4009e02	            0x7504	                           jne 0x4009e08	      1514	tc-i386.c	FUNCTION_7	SWITCH_1	IF_2
0x4009e04	            0x85c0	                           test eax, eax	      2060	tc-i386.c	FUNCTION_26	IF_1	CALL_1
0x4009e06	            0x7440	                            je 0x4009e48	      2060	tc-i386.c	FUNCTION_26	IF_1	CALL_1
0x4009e08	          0x4889ce	                            mov rsi, rcx	      2063	tc-i386.c	FUNCTION_26	IF_2
0x4009e0b	        0x48c1ee10	                           shr rsi, 0x10	      2063	tc-i386.c	FUNCTION_26	IF_2
0x4009e0f	            0x89d2	                            mov edx, edx	      2063	tc-i386.c	FUNCTION_26	IF_2
0x4009e11	    0x48b800000000	          movabs rax, 0xffffffff00000000	      2063	tc-i386.c	FUNCTION_26	IF_2
0x4009e1b	      0x4823442448	             and rax, qword [rsp + 0x48]	      2063	tc-i386.c	FUNCTION_26	IF_2
0x4009e20	          0x4809d0	                             or rax, rdx	      2063	tc-i386.c	FUNCTION_26	IF_2
0x4009e23	      0x4889442448	             mov qword [rsp + 0x48], rax	      2063	tc-i386.c	FUNCTION_26	IF_2
0x4009e28	          0x4889c2	                            mov rdx, rax	      2063	tc-i386.c	FUNCTION_26	IF_2
0x4009e2b	        0x48c1ea10	                           shr rdx, 0x10	      2063	tc-i386.c	FUNCTION_26	IF_2
0x4009e2f	            0x31f2	                            xor edx, esi	      2063	tc-i386.c	FUNCTION_26	IF_2
0x4009e31	          0xf6c240	                           test dl, 0x40	      2063	tc-i386.c	FUNCTION_26	IF_2
0x4009e34	            0x7512	                           jne 0x4009e48	      2063	tc-i386.c	FUNCTION_26	IF_2
0x4009e36	        0x48c1e918	                           shr rcx, 0x18	      2064	tc-i386.c	FUNCTION_26	IF_2
0x4009e3a	        0x48c1e818	                           shr rax, 0x18	      2064	tc-i386.c	FUNCTION_26	IF_2
0x4009e3e	            0x31c8	                            xor eax, ecx	      2064	tc-i386.c	FUNCTION_26	IF_2
0x4009e40	            0xa802	                              test al, 2	      2064	tc-i386.c	FUNCTION_26	IF_2
0x4009e42	     0xf8431110000	                            je 0x400af79	      2064	tc-i386.c	FUNCTION_26	IF_2
0x4009e48	    0xc70500000000	               mov dword [0x04009e52], 1	      2068	tc-i386.c	FUNCTION_26
0x4009e52	            0xeb35	                           jmp 0x4009e89	      2068	tc-i386.c	FUNCTION_26
0x4009e54	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      5521	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31
0x4009e58	          0x83e003	                              and eax, 3	      5521	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31
0x4009e5b	          0x83f803	                              cmp eax, 3	      5521	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31
0x4009e5e	     0xf858e010000	                           jne 0x4009ff2	      5521	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31
0x4009e64	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	      5522	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_17
0x4009e69	    0x488b15000000	            mov rdx, qword [0x04009e70] 	      5522	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_17
0x4009e70	      0x488b742470	            mov rsi, qword [rsp + 0x70] 	      5522	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_17
0x4009e75	    0x488b3d000000	            mov rdi, qword [0x04009e7c] 	      5522	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_17
0x4009e7c	      0xe8cb64ffff	    call sym.operand_type_register_match	      5522	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_17
0x4009e81	            0x85c0	                           test eax, eax	      5522	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_17
0x4009e83	     0xf8569010000	                           jne 0x4009ff2	      5522	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_17
0x4009e89	        0xf6432801	               test byte [rbx + 0x28], 1	      5528	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_32
0x4009e8d	     0xf84cf0b0000	                            je 0x400aa62	      5528	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_32
0x4009e93	    0x8b1500000000	            mov edx, dword [0x04009e99] 	      1765	tc-i386.c	ELSE_3	FUNCTION_17	SWITCH_1
0x4009e99	        0x23542478	             and edx, dword [rsp + 0x78]	      1765	tc-i386.c	ELSE_3	FUNCTION_17	SWITCH_1
0x4009e9d	    0x8b0500000000	            mov eax, dword [0x04009ea3] 	      1765	tc-i386.c	ELSE_3	FUNCTION_17	SWITCH_1
0x4009ea3	        0x23442474	             and eax, dword [rsp + 0x74]	      1765	tc-i386.c	ELSE_3	FUNCTION_17	SWITCH_1
0x4009ea7	        0x48c1e020	                           shl rax, 0x20	      1765	tc-i386.c	ELSE_3	FUNCTION_17	SWITCH_1
0x4009eab	    0x8b3d00000000	            mov edi, dword [0x04009eb1] 	      1765	tc-i386.c	ELSE_3	FUNCTION_17	SWITCH_1
0x4009eb1	        0x237c2470	             and edi, dword [rsp + 0x70]	      1765	tc-i386.c	ELSE_3	FUNCTION_17	SWITCH_1
0x4009eb5	          0x4809c7	                             or rdi, rax	      1765	tc-i386.c	ELSE_3	FUNCTION_17	SWITCH_1
0x4009eb8	    0x488b0d000000	            mov rcx, qword [0x04009ebf] 	      1765	tc-i386.c	ELSE_3	FUNCTION_17	SWITCH_1
0x4009ebf	    0x8b0500000000	            mov eax, dword [0x04009ec5] 	      2047	tc-i386.c	FUNCTION_26
0x4009ec5	        0x2344247c	             and eax, dword [rsp + 0x7c]	      2047	tc-i386.c	FUNCTION_26
0x4009ec9	        0x48c1e020	                           shl rax, 0x20	      2047	tc-i386.c	FUNCTION_26
0x4009ecd	            0x89d6	                            mov esi, edx	      2047	tc-i386.c	FUNCTION_26
0x4009ecf	    0x81e6fffffffd	                     and esi, 0xfdffffff	      2047	tc-i386.c	FUNCTION_26
0x4009ed5	          0x4809f0	                             or rax, rsi	      2049	tc-i386.c	FUNCTION_26
0x4009ed8	          0x4c21e0	                            and rax, r12	      2050	tc-i386.c	FUNCTION_26
0x4009edb	    0x4825ffffffdf	             and rax, 0xffffffffdfffffff	      2051	tc-i386.c	FUNCTION_26
0x4009ee1	    0x4825ffffffbf	             and rax, 0xffffffffbfffffff	      2052	tc-i386.c	FUNCTION_26
0x4009ee7	          0x4c21f0	                            and rax, r14	      2053	tc-i386.c	FUNCTION_26
0x4009eea	          0x4c21e8	                            and rax, r13	      2054	tc-i386.c	FUNCTION_26
0x4009eed	    0x48beffffffff	          movabs rsi, 0xfffffffdffffffff	      2055	tc-i386.c	FUNCTION_26
0x4009ef7	          0x4821f0	                            and rax, rsi	      2055	tc-i386.c	FUNCTION_26
0x4009efa	    0x48beffffffff	          movabs rsi, 0xfffffffbffffffff	      2056	tc-i386.c	FUNCTION_26
0x4009f04	          0x4821c6	                            and rsi, rax	      2056	tc-i386.c	FUNCTION_26
0x4009f07	    0x48b8ffffffff	          movabs rax, 0xfffffff7ffffffff	      2057	tc-i386.c	FUNCTION_26
0x4009f11	          0x4821c6	                            and rsi, rax	      2057	tc-i386.c	FUNCTION_26
0x4009f14	    0x48b8ffffffff	          movabs rax, 0xffffffefffffffff	      2058	tc-i386.c	FUNCTION_26
0x4009f1e	          0x4821c6	                            and rsi, rax	      2058	tc-i386.c	FUNCTION_26
0x4009f21	    0x48b8ffffffff	          movabs rax, 0xffffffdfffffffff	      2059	tc-i386.c	FUNCTION_26
0x4009f2b	          0x4821f0	                            and rax, rsi	      2059	tc-i386.c	FUNCTION_26
0x4009f2e	          0x4889c6	                            mov rsi, rax	      1514	tc-i386.c	FUNCTION_7	SWITCH_1	IF_2
0x4009f31	        0x48c1ee20	                           shr rsi, 0x20	      1514	tc-i386.c	FUNCTION_7	SWITCH_1	IF_2
0x4009f35	            0x85f6	                           test esi, esi	      1514	tc-i386.c	FUNCTION_7	SWITCH_1	IF_2
0x4009f37	            0x7504	                           jne 0x4009f3d	      1514	tc-i386.c	FUNCTION_7	SWITCH_1	IF_2
0x4009f39	            0x85c0	                           test eax, eax	      2060	tc-i386.c	FUNCTION_26	IF_1	CALL_1
0x4009f3b	            0x7440	                            je 0x4009f7d	      2060	tc-i386.c	FUNCTION_26	IF_1	CALL_1
0x4009f3d	          0x4889ce	                            mov rsi, rcx	      2063	tc-i386.c	FUNCTION_26	IF_2
0x4009f40	        0x48c1ee10	                           shr rsi, 0x10	      2063	tc-i386.c	FUNCTION_26	IF_2
0x4009f44	            0x89d2	                            mov edx, edx	      2063	tc-i386.c	FUNCTION_26	IF_2
0x4009f46	    0x48b800000000	          movabs rax, 0xffffffff00000000	      2063	tc-i386.c	FUNCTION_26	IF_2
0x4009f50	      0x4823442440	             and rax, qword [rsp + 0x40]	      2063	tc-i386.c	FUNCTION_26	IF_2
0x4009f55	          0x4809d0	                             or rax, rdx	      2063	tc-i386.c	FUNCTION_26	IF_2
0x4009f58	      0x4889442440	             mov qword [rsp + 0x40], rax	      2063	tc-i386.c	FUNCTION_26	IF_2
0x4009f5d	          0x4889c2	                            mov rdx, rax	      2063	tc-i386.c	FUNCTION_26	IF_2
0x4009f60	        0x48c1ea10	                           shr rdx, 0x10	      2063	tc-i386.c	FUNCTION_26	IF_2
0x4009f64	            0x31f2	                            xor edx, esi	      2063	tc-i386.c	FUNCTION_26	IF_2
0x4009f66	          0xf6c240	                           test dl, 0x40	      2063	tc-i386.c	FUNCTION_26	IF_2
0x4009f69	            0x7512	                           jne 0x4009f7d	      2063	tc-i386.c	FUNCTION_26	IF_2
0x4009f6b	        0x48c1e918	                           shr rcx, 0x18	      2064	tc-i386.c	FUNCTION_26	IF_2
0x4009f6f	        0x48c1e818	                           shr rax, 0x18	      2064	tc-i386.c	FUNCTION_26	IF_2
0x4009f73	            0x31c8	                            xor eax, ecx	      2064	tc-i386.c	FUNCTION_26	IF_2
0x4009f75	            0xa802	                              test al, 2	      2064	tc-i386.c	FUNCTION_26	IF_2
0x4009f77	     0xf8415100000	                            je 0x400af92	      2064	tc-i386.c	FUNCTION_26	IF_2
0x4009f7d	    0xc70500000000	               mov dword [0x04009f87], 1	      2068	tc-i386.c	FUNCTION_26
0x4009f87	      0xe9d60a0000	                           jmp 0x400aa62	      2068	tc-i386.c	FUNCTION_26
0x4009f8c	      0x837c241800	               cmp dword [rsp + 0x18], 0	      5537	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33
0x4009f91	            0x7425	                            je 0x4009fb8	      5537	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33
0x4009f93	      0x488b4c2470	            mov rcx, qword [rsp + 0x70] 	      5538	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_22
0x4009f98	    0x488b15000000	            mov rdx, qword [0x04009f9f] 	      5538	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_22
0x4009f9f	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	      5538	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_22
0x4009fa4	    0x488b3d000000	            mov rdi, qword [0x04009fab] 	      5538	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_22
0x4009fab	      0xe89c63ffff	    call sym.operand_type_register_match	      5538	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_22
0x4009fb0	            0x85c0	                           test eax, eax	      5538	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_22
0x4009fb2	     0xf84aa0a0000	                            je 0x400aa62	      5538	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_22
0x4009fb8	    0x41bf00000000	                             mov r15d, 0	      5549	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_34
0x4009fbe	        0xf6432801	               test byte [rbx + 0x28], 1	      5548	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_34
0x4009fc2	            0x741b	                            je 0x4009fdf	      5548	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_34
0x4009fc4	       0xfb6442474	           movzx eax, byte [rsp + 0x74] 	      5550	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	ELSE_10	IF_35
0x4009fc9	          0x83e004	                              and eax, 4	      5550	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	ELSE_10	IF_35
0x4009fcc	            0x3c01	                               cmp al, 1	      5553	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	ELSE_11
0x4009fce	          0x4519ff	                          sbb r15d, r15d	      5553	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	ELSE_11
0x4009fd1	    0x4181e702fcff	                    and r15d, 0xfffffc02	      5553	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	ELSE_11
0x4009fd8	    0x4181c7000400	                         add r15d, 0x400	      5553	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	ELSE_11
0x4009fdf	          0x4489f8	                           mov eax, r15d	      5555	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_36
0x4009fe2	          0x83c808	                               or eax, 8	      5555	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_36
0x4009fe5	        0xf6432904	               test byte [rbx + 0x29], 4	      5555	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_36
0x4009fe9	        0x440f45f8	                        cmovne r15d, eax	      5555	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_36
0x4009fed	      0xe903020000	                           jmp 0x400a1f5	      5555	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_36
0x4009ff2	          0x8b4308	                mov eax, dword [rbx + 8]	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x4009ff5	          0x83f804	                              cmp eax, 4	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x4009ff8	            0x7436	                            je 0x400a030	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x4009ffa	          0x83f805	                              cmp eax, 5	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x4009ffd	            0x740b	                            je 0x400a00a	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x4009fff	          0x83f803	                              cmp eax, 3	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x400a002	     0xf858c000000	                           jne 0x400a094	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x400a008	            0xeb4c	                           jmp 0x400a056	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x400a00a	    0x8b9424940000	            mov edx, dword [rsp + 0x94] 	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x400a011	    0x231500000000	             and edx, dword [0x0400a017]	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x400a017	        0x48c1e220	                           shl rdx, 0x20	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x400a01b	    0x8b8c24900000	            mov ecx, dword [rsp + 0x90] 	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x400a022	    0x230d00000000	             and ecx, dword [0x0400a028]	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x400a028	          0x4809d1	                             or rcx, rdx	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x400a02b	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x400a030	    0x8b1500000000	            mov edx, dword [0x0400a036] 	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x400a036	    0x2394248c0000	             and edx, dword [rsp + 0x8c]	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x400a03d	        0x48c1e220	                           shl rdx, 0x20	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x400a041	    0x8b0d00000000	            mov ecx, dword [0x0400a047] 	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x400a047	    0x238c24880000	             and ecx, dword [rsp + 0x88]	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x400a04e	          0x4809d1	                             or rcx, rdx	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x400a051	      0x48894c2430	             mov qword [rsp + 0x30], rcx	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x400a056	    0x8b1500000000	            mov edx, dword [0x0400a05c] 	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x400a05c	    0x239424840000	             and edx, dword [rsp + 0x84]	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x400a063	        0x48c1e220	                           shl rdx, 0x20	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x400a067	    0x8b0d00000000	            mov ecx, dword [0x0400a06d] 	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x400a06d	    0x238c24800000	             and ecx, dword [rsp + 0x80]	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x400a074	          0x4809d1	                             or rcx, rdx	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x400a077	      0x48894c2428	             mov qword [rsp + 0x28], rcx	      5560	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_4
0x400a07c	          0x83f804	                              cmp eax, 4	      5576	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5
0x400a07f	            0x746f	                            je 0x400a0f0	      5576	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5
0x400a081	          0x83f805	                              cmp eax, 5	      5576	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5
0x400a084	            0x7426	                            je 0x400a0ac	      5576	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5
0x400a086	          0x83f803	                              cmp eax, 3	      5576	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5
0x400a089	     0xf8566010000	                           jne 0x400a1f5	      5576	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5
0x400a08f	      0xe9e0000000	                           jmp 0x400a174	      5576	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5
0x400a094	          0x83f804	                              cmp eax, 4	      5576	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5
0x400a097	            0x7457	                            je 0x400a0f0	      5576	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5
0x400a099	          0x83f805	                              cmp eax, 5	      5576	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5
0x400a09c	            0x740e	                            je 0x400a0ac	      5576	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5
0x400a09e	          0x83f803	                              cmp eax, 3	      5576	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5
0x400a0a1	     0xf854e010000	                           jne 0x400a1f5	      5576	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5
0x400a0a7	      0xe9c8000000	                           jmp 0x400a174	      5576	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5
0x400a0ac	    0x488b35000000	            mov rsi, qword [0x0400a0b3] 	      5579	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_26
0x400a0b3	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      5579	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_26
0x400a0b8	      0xe8b261ffff	             call sym.operand_type_match	      5579	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_26
0x400a0bd	            0x85c0	                           test eax, eax	      5579	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_26
0x400a0bf	     0xf849d090000	                            je 0x400aa62	      5579	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_26
0x400a0c5	    0x488b8c249000	            mov rcx, qword [rsp + 0x90] 	      5580	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_27
0x400a0cd	    0x488b15000000	            mov rdx, qword [0x0400a0d4] 	      5580	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_27
0x400a0d4	    0x488bb4248800	            mov rsi, qword [rsp + 0x88] 	      5580	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_27
0x400a0dc	    0x488b3d000000	            mov rdi, qword [0x0400a0e3] 	      5580	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_27
0x400a0e3	      0xe86462ffff	    call sym.operand_type_register_match	      5580	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_27
0x400a0e8	            0x85c0	                           test eax, eax	      5580	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_27
0x400a0ea	     0xf8472090000	                            je 0x400aa62	      5580	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_37	CALL_27
0x400a0f0	    0x488b35000000	            mov rsi, qword [0x0400a0f7] 	      5587	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_28
0x400a0f7	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      5587	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_28
0x400a0fc	      0xe86e61ffff	             call sym.operand_type_match	      5587	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_28
0x400a101	            0x85c0	                           test eax, eax	      5587	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_28
0x400a103	     0xf8459090000	                            je 0x400aa62	      5587	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_28
0x400a109	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      5588	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38
0x400a10d	          0x83e00a	                            and eax, 0xa	      5588	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38
0x400a110	          0x83f80a	                            cmp eax, 0xa	      5588	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38
0x400a113	            0x7528	                           jne 0x400a13d	      5588	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38
0x400a115	    0x488b8c248800	            mov rcx, qword [rsp + 0x88] 	      5589	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_29
0x400a11d	    0x488b15000000	            mov rdx, qword [0x0400a124] 	      5589	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_29
0x400a124	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	      5589	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_29
0x400a129	    0x488b3d000000	            mov rdi, qword [0x0400a130] 	      5589	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_29
0x400a130	      0xe81762ffff	    call sym.operand_type_register_match	      5589	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_29
0x400a135	            0x85c0	                           test eax, eax	      5589	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_29
0x400a137	     0xf8425090000	                            je 0x400aa62	      5589	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_29
0x400a13d	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      5593	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38
0x400a141	          0x83e00c	                            and eax, 0xc	      5593	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38
0x400a144	          0x83f80c	                            cmp eax, 0xc	      5593	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38
0x400a147	            0x752b	                           jne 0x400a174	      5593	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38
0x400a149	    0x488b8c248800	            mov rcx, qword [rsp + 0x88] 	      5594	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_30
0x400a151	    0x488b15000000	            mov rdx, qword [0x0400a158] 	      5594	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_30
0x400a158	    0x488bb4248000	            mov rsi, qword [rsp + 0x80] 	      5594	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_30
0x400a160	    0x488b3d000000	            mov rdi, qword [0x0400a167] 	      5594	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_30
0x400a167	      0xe8e061ffff	    call sym.operand_type_register_match	      5594	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_30
0x400a16c	            0x85c0	                           test eax, eax	      5594	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_30
0x400a16e	     0xf84ee080000	                            je 0x400aa62	      5594	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_38	CALL_30
0x400a174	    0x488b35000000	            mov rsi, qword [0x0400a17b] 	      5603	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_31
0x400a17b	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      5603	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_31
0x400a180	      0xe8ea60ffff	             call sym.operand_type_match	      5603	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_31
0x400a185	            0x85c0	                           test eax, eax	      5603	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_31
0x400a187	     0xf84d5080000	                            je 0x400aa62	      5603	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_31
0x400a18d	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      5604	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39
0x400a191	          0x83e005	                              and eax, 5	      5604	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39
0x400a194	          0x83f805	                              cmp eax, 5	      5604	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39
0x400a197	            0x7528	                           jne 0x400a1c1	      5604	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39
0x400a199	    0x488b8c248000	            mov rcx, qword [rsp + 0x80] 	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400a1a1	    0x488b15000000	            mov rdx, qword [0x0400a1a8] 	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400a1a8	      0x488b742470	            mov rsi, qword [rsp + 0x70] 	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400a1ad	    0x488b3d000000	            mov rdi, qword [0x0400a1b4] 	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400a1b4	      0xe89361ffff	    call sym.operand_type_register_match	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400a1b9	            0x85c0	                           test eax, eax	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400a1bb	     0xf84a1080000	                            je 0x400aa62	      5605	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_32
0x400a1c1	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      5609	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39
0x400a1c5	          0x83e006	                              and eax, 6	      5609	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39
0x400a1c8	          0x83f806	                              cmp eax, 6	      5609	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39
0x400a1cb	            0x7528	                           jne 0x400a1f5	      5609	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39
0x400a1cd	    0x488b8c248000	            mov rcx, qword [rsp + 0x80] 	      5610	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_33
0x400a1d5	    0x488b15000000	            mov rdx, qword [0x0400a1dc] 	      5610	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_33
0x400a1dc	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	      5610	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_33
0x400a1e1	    0x488b3d000000	            mov rdi, qword [0x0400a1e8] 	      5610	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_33
0x400a1e8	      0xe85f61ffff	    call sym.operand_type_register_match	      5610	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_33
0x400a1ed	            0x85c0	                           test eax, eax	      5610	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_33
0x400a1ef	     0xf846d080000	                            je 0x400aa62	      5610	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	ELSE_12	SWITCH_5	IF_39	CALL_33
0x400a1f5	          0x8b4b20	            mov ecx, dword [rbx + 0x20] 	      1632	tc-i386.c	FUNCTION_13	SWITCH_1
0x400a1f8	    0x230d00000000	             and ecx, dword [0x0400a1fe]	      1632	tc-i386.c	FUNCTION_13	SWITCH_1
0x400a1fe	          0x8b531c	            mov edx, dword [rbx + 0x1c] 	      1635	tc-i386.c	FUNCTION_13	SWITCH_1
0x400a201	    0x231500000000	             and edx, dword [0x0400a207]	      1635	tc-i386.c	FUNCTION_13	SWITCH_1
0x400a207	          0x8b4318	            mov eax, dword [rbx + 0x18] 	      1638	tc-i386.c	FUNCTION_13	SWITCH_1
0x400a20a	    0x230500000000	             and eax, dword [0x0400a210]	      1638	tc-i386.c	FUNCTION_13	SWITCH_1
0x400a210	          0x8b7324	            mov esi, dword [rbx + 0x24] 	      1572	tc-i386.c	FUNCTION_10	SWITCH_1	IF_1
0x400a213	    0x853500000000	           test dword [0x0400a219], esi 	      1572	tc-i386.c	FUNCTION_10	SWITCH_1	IF_1
0x400a219	            0x750c	                           jne 0x400a227	      1572	tc-i386.c	FUNCTION_10	SWITCH_1	IF_1
0x400a21b	            0x85c9	                           test ecx, ecx	      1576	tc-i386.c	FUNCTION_10	SWITCH_1	IF_2
0x400a21d	            0x7508	                           jne 0x400a227	      1576	tc-i386.c	FUNCTION_10	SWITCH_1	IF_2
0x400a21f	            0x85d2	                           test edx, edx	      1580	tc-i386.c	FUNCTION_10	SWITCH_1	IF_3
0x400a221	            0x7504	                           jne 0x400a227	      1580	tc-i386.c	FUNCTION_10	SWITCH_1	IF_3
0x400a223	            0x85c0	                           test eax, eax	      4986	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	CALL_2
0x400a225	            0x744e	                            je 0x400a275	      4986	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	CALL_2
0x400a227	        0xf6431c08	               test byte [rbx + 0x1c], 8	      4987	tc-i386.c	ELSE_3	FUNCTION_75	IF_1
0x400a22b	            0x7548	                           jne 0x400a275	      4987	tc-i386.c	ELSE_3	FUNCTION_75	IF_1
0x400a22d	    0xf60500000000	               test byte [0x0400a234], 8	      4988	tc-i386.c	ELSE_3	FUNCTION_75	IF_1
0x400a234	            0x753f	                           jne 0x400a275	      4988	tc-i386.c	ELSE_3	FUNCTION_75	IF_1
0x400a236	          0x8b5308	                mov edx, dword [rbx + 8]	      4990	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1
0x400a239	            0x85d2	                           test edx, edx	      4990	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1
0x400a23b	            0x7438	                            je 0x400a275	      4990	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1
0x400a23d	      0xb800000000	                              mov eax, 0	      4990	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1
0x400a242	            0x89c1	                            mov ecx, eax	      4992	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x400a244	      0xf644cb3820	   test byte [rbx + rcx*8 + 0x38], 0x20 	      4992	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x400a249	            0x7423	                            je 0x400a26e	      4992	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x400a24b	    0xf604cd000000	                 test byte [rcx*8], 0x10	      4993	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x400a253	            0x750a	                           jne 0x400a25f	      4993	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x400a255	    0xf604cd000000	                    test byte [rcx*8], 8	      4994	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x400a25d	            0x740f	                            je 0x400a26e	      4994	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x400a25f	    0xc70500000000	               mov dword [0x0400a269], 8	      4996	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x400a269	      0xe962070000	                           jmp 0x400a9d0	      4996	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1	IF_2
0x400a26e	          0x83c001	                              add eax, 1	      4990	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1
0x400a271	            0x39d0	                            cmp eax, edx	      4990	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1
0x400a273	            0x75cd	                           jne 0x400a242	      4990	tc-i386.c	ELSE_3	FUNCTION_75	IF_1	FOR_1
0x400a275	         0xfb6432e	           movzx eax, byte [rbx + 0x2e] 	      5003	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x400a279	          0x83e030	                           and eax, 0x30	      5003	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x400a27c	     0xf85380d0000	                           jne 0x400afba	      5003	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x400a282	    0x488b15000000	            mov rdx, qword [0x0400a289] 	      5004	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x400a289	          0x4885d2	                           test rdx, rdx	      5004	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x400a28c	     0xf84190d0000	                            je 0x400afab	      5004	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x400a292	        0xf6420c38	            test byte [rdx + 0xc], 0x38 	      5005	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x400a296	     0xf840f0d0000	                            je 0x400afab	      5005	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x400a29c	    0xc70500000000	            mov dword [0x0400a2a6], 0xb 	      5009	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x400a2a6	      0xe925070000	                           jmp 0x400a9d0	      5009	tc-i386.c	ELSE_3	FUNCTION_75	IF_3
0x400a2ab	    0x488b15000000	            mov rdx, qword [0x0400a2b2] 	      5015	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x400a2b2	          0x4885d2	                           test rdx, rdx	      5015	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x400a2b5	            0x7409	                            je 0x400a2c0	      5015	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x400a2b7	          0x488b12	                    mov rdx, qword [rdx]	      5015	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x400a2ba	        0x807a1100	                cmp byte [rdx + 0x11], 0	      5015	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x400a2be	            0x750f	                           jne 0x400a2cf	      5015	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x400a2c0	    0xc70500000000	           mov dword [0x0400a2ca], 0x11 	      5017	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x400a2ca	      0xe901070000	                           jmp 0x400a9d0	      5017	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x400a2cf	            0x84c0	                             test al, al	      5023	tc-i386.c	ELSE_3	FUNCTION_75	IF_5
0x400a2d1	     0xf848f020000	                            je 0x400a566	      5023	tc-i386.c	ELSE_3	FUNCTION_75	IF_5
0x400a2d7	    0x488b35000000	            mov rsi, qword [0x0400a2de] 	      5025	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400a2de	          0x4885f6	                           test rsi, rsi	      5025	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400a2e1	            0x7422	                            je 0x400a305	      5025	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400a2e3	            0x3c10	                            cmp al, 0x10	      5026	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400a2e5	            0x7508	                           jne 0x400a2ef	      5026	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400a2e7	        0xf6460c08	                test byte [rsi + 0xc], 8	      5027	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400a2eb	            0x7418	                            je 0x400a305	      5027	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400a2ed	            0xeb25	                           jmp 0x400a314	      5027	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400a2ef	            0x3c20	                            cmp al, 0x20	      5028	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400a2f1	            0x7508	                           jne 0x400a2fb	      5028	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400a2f3	        0xf6460c10	            test byte [rsi + 0xc], 0x10 	      5029	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400a2f7	            0x740c	                            je 0x400a305	      5029	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400a2f9	            0xeb19	                           jmp 0x400a314	      5029	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400a2fb	            0x3c30	                            cmp al, 0x30	      5026	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400a2fd	            0x7506	                           jne 0x400a305	      5026	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400a2ff	        0xf6460c20	            test byte [rsi + 0xc], 0x20 	      5031	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400a303	            0x750f	                           jne 0x400a314	      5031	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400a305	    0xc70500000000	               mov dword [0x0400a30f], 9	      5033	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400a30f	      0xe9bc060000	                           jmp 0x400a9d0	      5033	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_6
0x400a314	    0x8b0500000000	            mov eax, dword [0x0400a31a] 	      5037	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	CALL_3
0x400a31a	          0x83f802	                              cmp eax, 2	      5037	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	CALL_3
0x400a31d	            0x7422	                            je 0x400a341	      5037	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	CALL_3
0x400a31f	    0x48833d000000	               cmp qword [0x0400a327], 0	      5037	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	CALL_3
0x400a327	     0xf859c010000	                           jne 0x400a4c9	      5037	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	CALL_3
0x400a32d	      0xba00000000	                              mov edx, 0	      5037	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	CALL_3
0x400a332	      0xbead130000	                         mov esi, 0x13ad	      5037	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	CALL_3
0x400a337	      0xbf00000000	                              mov edi, 0	      5037	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	CALL_3
0x400a33c	      0xe800000000	                          call 0x400a341	      5037	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	CALL_3
0x400a341	    0x48833d000000	               cmp qword [0x0400a349], 0	      5038	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7
0x400a349	     0xf8517020000	                           jne 0x400a566	      5038	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7
0x400a34f	    0xf60500000000	               test byte [0x0400a356], 4	      5040	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_4
0x400a356	            0x7514	                           jne 0x400a36c	      5040	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_4
0x400a358	      0xba00000000	                              mov edx, 0	      5040	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_4
0x400a35d	      0xbeb0130000	                         mov esi, 0x13b0	      5040	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_4
0x400a362	      0xbf00000000	                              mov edi, 0	      5040	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_4
0x400a367	      0xe800000000	                          call 0x400a36c	      5040	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_4
0x400a36c	    0xf60500000000	           test byte [0x0400a373], 0x18 	      5041	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_5
0x400a373	            0x7514	                           jne 0x400a389	      5041	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_5
0x400a375	      0xba00000000	                              mov edx, 0	      5041	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_5
0x400a37a	      0xbeb2130000	                         mov esi, 0x13b2	      5041	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_5
0x400a37f	      0xbf00000000	                              mov edi, 0	      5041	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_5
0x400a384	      0xe800000000	                          call 0x400a389	      5041	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_5
0x400a389	    0xf60500000000	               test byte [0x0400a390], 4	      5043	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_6
0x400a390	            0x7514	                           jne 0x400a3a6	      5043	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_6
0x400a392	      0xba00000000	                              mov edx, 0	      5043	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_6
0x400a397	      0xbeb3130000	                         mov esi, 0x13b3	      5043	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_6
0x400a39c	      0xbf00000000	                              mov edi, 0	      5043	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_6
0x400a3a1	      0xe800000000	                          call 0x400a3a6	      5043	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_6
0x400a3a6	    0xf60500000000	           test byte [0x0400a3ad], 0x18 	      5044	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_7
0x400a3ad	            0x7514	                           jne 0x400a3c3	      5044	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_7
0x400a3af	      0xba00000000	                              mov edx, 0	      5044	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_7
0x400a3b4	      0xbeb5130000	                         mov esi, 0x13b5	      5044	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_7
0x400a3b9	      0xbf00000000	                              mov edi, 0	      5044	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_7
0x400a3be	      0xe800000000	                          call 0x400a3c3	      5044	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_7
0x400a3c3	    0x448b0d000000	            mov r9d, dword [0x0400a3ca] 	      5046	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_8
0x400a3ca	          0x4585c9	                           test r9d, r9d	      5046	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_8
0x400a3cd	     0xf840a0c0000	                            je 0x400afdd	      5046	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_8
0x400a3d3	    0x488b15000000	            mov rdx, qword [0x0400a3da] 	      5048	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_8
0x400a3da	         0xfb64211	           movzx eax, byte [rdx + 0x11] 	      2123	tc-i386.c	FUNCTION_28
0x400a3de	         0xfb64a10	           movzx ecx, byte [rdx + 0x10] 	      2125	tc-i386.c	FUNCTION_28	IF_1
0x400a3e2	          0x8d5008	                      lea edx, [rax + 8]	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400a3e5	            0x89cf	                            mov edi, ecx	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400a3e7	          0x83e701	                              and edi, 1	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400a3ea	      0x40887c2418	              mov byte [rsp + 0x18], dil	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400a3ef	           0xf44d0	                          cmove edx, eax	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400a3f2	          0x8d7a10	                   lea edi, [rdx + 0x10]	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400a3f5	          0x83e104	                              and ecx, 4	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400a3f8	        0x884c2410	               mov byte [rsp + 0x10], cl	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400a3fc	           0xf45d7	                         cmovne edx, edi	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400a3ff	         0xfb64e11	           movzx ecx, byte [rsi + 0x11] 	      2123	tc-i386.c	FUNCTION_28
0x400a403	         0xfb67e10	           movzx edi, byte [rsi + 0x10] 	      2125	tc-i386.c	FUNCTION_28	IF_1
0x400a407	          0x8d7108	                      lea esi, [rcx + 8]	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400a40a	          0x4189fa	                           mov r10d, edi	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400a40d	        0x4183e201	                             and r10d, 1	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400a411	           0xf44f1	                          cmove esi, ecx	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400a414	        0x448d4610	                   lea r8d, [rsi + 0x10]	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400a418	          0x83e704	                              and edi, 4	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400a41b	        0x410f45f0	                         cmovne esi, r8d	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400a41f	            0x39d6	                            cmp esi, edx	      5048	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_8
0x400a421	            0x746b	                            je 0x400a48e	      5048	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_8
0x400a423	    0x488b35000000	            mov rsi, qword [0x0400a42a] 	      5050	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_10
0x400a42a	         0xfb65611	           movzx edx, byte [rsi + 0x11] 	      2123	tc-i386.c	FUNCTION_28
0x400a42e	      0x440fb64610	           movzx r8d, byte [rsi + 0x10] 	      2125	tc-i386.c	FUNCTION_28	IF_1
0x400a433	          0x8d7208	                      lea esi, [rdx + 8]	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400a436	          0x4589c3	                           mov r11d, r8d	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400a439	        0x4183e301	                             and r11d, 1	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400a43d	      0x44885c241c	             mov byte [rsp + 0x1c], r11b	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400a442	           0xf44f2	                          cmove esi, edx	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400a445	        0x448d5e10	                  lea r11d, [rsi + 0x10]	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400a449	        0x4183e004	                              and r8d, 4	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400a44d	      0x4488442420	              mov byte [rsp + 0x20], r8b	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400a452	        0x410f45f3	                        cmovne esi, r11d	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400a456	        0x448d4108	                      lea r8d, [rcx + 8]	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400a45a	          0x4584d2	                         test r10b, r10b	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400a45d	        0x410f45c8	                         cmovne ecx, r8d	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400a461	        0x448d4110	                   lea r8d, [rcx + 0x10]	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400a465	          0x4084ff	                           test dil, dil	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400a468	        0x410f45c8	                         cmovne ecx, r8d	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400a46c	            0x39f1	                            cmp ecx, esi	      5050	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_10
0x400a46e	            0x741e	                            je 0x400a48e	      5050	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_10
0x400a470	          0x8d4808	                      lea ecx, [rax + 8]	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400a473	      0x807c241800	                cmp byte [rsp + 0x18], 0	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400a478	           0xf45c1	                         cmovne eax, ecx	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400a47b	          0x8d4810	                   lea ecx, [rax + 0x10]	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400a47e	      0x807c241000	                cmp byte [rsp + 0x10], 0	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400a483	           0xf45c1	                         cmovne eax, ecx	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400a486	            0x39c6	                            cmp esi, eax	      5052	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_12
0x400a488	     0xf854f0b0000	                           jne 0x400afdd	      5052	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_9	CALL_12
0x400a48e	        0x4183f902	                              cmp r9d, 2	      5055	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_10
0x400a492	            0x750f	                           jne 0x400a4a3	      5055	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_10
0x400a494	    0xc70500000000	            mov dword [0x0400a49e], 0xa 	      5057	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_10
0x400a49e	      0xe92d050000	                           jmp 0x400a9d0	      5057	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	IF_10
0x400a4a3	      0xba05000000	                              mov edx, 5	      5060	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_15
0x400a4a8	      0xbe00000000	                              mov esi, 0	      5060	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_15
0x400a4ad	      0xbf00000000	                              mov edi, 0	      5060	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_15
0x400a4b2	      0xe800000000	                          call 0x400a4b7	      5060	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_15
0x400a4b7	          0x4889c7	                            mov rdi, rax	      5060	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_15
0x400a4ba	      0xb800000000	                              mov eax, 0	      5060	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_15
0x400a4bf	      0xe800000000	                          call 0x400a4c4	      5060	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_15
0x400a4c4	      0xe99d000000	                           jmp 0x400a566	      5060	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	IF_7	CALL_15
0x400a4c9	          0x83f801	                              cmp eax, 1	      5062	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11
0x400a4cc	     0xf8594000000	                           jne 0x400a566	      5062	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11
0x400a4d2	    0xf60500000000	               test byte [0x0400a4d9], 4	      5064	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12
0x400a4d9	     0xf8487000000	                            je 0x400a566	      5064	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12
0x400a4df	    0xf60500000000	           test byte [0x0400a4e6], 0x38 	      5065	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12
0x400a4e6	            0x747e	                            je 0x400a566	      5065	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12
0x400a4e8	    0x488b15000000	            mov rdx, qword [0x0400a4ef] 	      5068	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	CALL_16
0x400a4ef	         0xfb64211	           movzx eax, byte [rdx + 0x11] 	      2123	tc-i386.c	FUNCTION_28
0x400a4f3	         0xfb65210	           movzx edx, byte [rdx + 0x10] 	      2125	tc-i386.c	FUNCTION_28	IF_1
0x400a4f7	          0x8d4808	                      lea ecx, [rax + 8]	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400a4fa	          0xf6c201	                              test dl, 1	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400a4fd	           0xf45c1	                         cmovne eax, ecx	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400a500	          0x8d4810	                   lea ecx, [rax + 0x10]	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400a503	          0xf6c204	                              test dl, 4	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400a506	           0xf45c1	                         cmovne eax, ecx	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400a509	         0xfb65611	           movzx edx, byte [rsi + 0x11] 	      2123	tc-i386.c	FUNCTION_28
0x400a50d	         0xfb64e10	           movzx ecx, byte [rsi + 0x10] 	      2125	tc-i386.c	FUNCTION_28	IF_1
0x400a511	          0x8d7208	                      lea esi, [rdx + 8]	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400a514	          0xf6c101	                              test cl, 1	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400a517	           0xf45d6	                         cmovne edx, esi	      2126	tc-i386.c	FUNCTION_28	IF_1
0x400a51a	          0x8d7210	                   lea esi, [rdx + 0x10]	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400a51d	          0xf6c104	                              test cl, 4	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400a520	           0xf45d6	                         cmovne edx, esi	      2129	tc-i386.c	FUNCTION_28	IF_2
0x400a523	            0x39c2	                            cmp edx, eax	      5068	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	CALL_16
0x400a525	            0x753f	                           jne 0x400a566	      5068	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	CALL_16
0x400a527	    0x8b0500000000	            mov eax, dword [0x0400a52d] 	      5071	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	IF_13
0x400a52d	          0x83f802	                              cmp eax, 2	      5071	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	IF_13
0x400a530	            0x750f	                           jne 0x400a541	      5071	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	IF_13
0x400a532	    0xc70500000000	            mov dword [0x0400a53c], 0xa 	      5073	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	IF_13
0x400a53c	      0xe98f040000	                           jmp 0x400a9d0	      5073	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	IF_13
0x400a541	            0x85c0	                           test eax, eax	      5076	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	IF_14
0x400a543	            0x7421	                            je 0x400a566	      5076	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	IF_14
0x400a545	      0xba05000000	                              mov edx, 5	      5077	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	CALL_19
0x400a54a	      0xbe00000000	                              mov esi, 0	      5077	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	CALL_19
0x400a54f	      0xbf00000000	                              mov edi, 0	      5077	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	CALL_19
0x400a554	      0xe800000000	                          call 0x400a559	      5077	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	CALL_19
0x400a559	          0x4889c7	                            mov rdi, rax	      5077	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	CALL_19
0x400a55c	      0xb800000000	                              mov eax, 0	      5077	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	CALL_19
0x400a561	      0xe800000000	                          call 0x400a566	      5077	tc-i386.c	ELSE_3	FUNCTION_75	IF_5	ELSE_1	IF_11	IF_12	CALL_19
0x400a566	    0x488b15000000	            mov rdx, qword [0x0400a56d] 	      5084	tc-i386.c	ELSE_3	FUNCTION_75	IF_15
0x400a56d	          0x4885d2	                           test rdx, rdx	      5084	tc-i386.c	ELSE_3	FUNCTION_75	IF_15
0x400a570	     0xf848f010000	                            je 0x400a705	      5084	tc-i386.c	ELSE_3	FUNCTION_75	IF_15
0x400a576	          0x8b4204	                mov eax, dword [rdx + 4]	      5090	tc-i386.c	ELSE_3	FUNCTION_75	IF_15
0x400a579	            0x89c6	                            mov esi, eax	      5090	tc-i386.c	ELSE_3	FUNCTION_75	IF_15
0x400a57b	        0x89442418	             mov dword [rsp + 0x18], eax	      5090	tc-i386.c	ELSE_3	FUNCTION_75	IF_15
0x400a57f	        0xf6432f20	           test byte [rbx + 0x2f], 0x20 	      5091	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a583	            0x7459	                            je 0x400a5de	      5091	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a585	            0x89c0	                            mov eax, eax	      5092	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a587	    0xf604c5000000	                 test byte [rax*8], 0x10	      5092	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a58f	            0x744d	                            je 0x400a5de	      5092	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a591	            0x89f0	                            mov eax, esi	      5093	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a593	    0xf604c5000000	                 test byte [rax*8], 0x40	      5093	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a59b	            0x7550	                           jne 0x400a5ed	      5093	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a59d	            0x89f0	                            mov eax, esi	      5094	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a59f	      0x807cc33700	        cmp byte [rbx + rax*8 + 0x37], 0	      5091	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a5a4	            0x791c	                           jns 0x400a5c2	      5091	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a5a6	            0x89f1	                            mov ecx, esi	      5095	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a5a8	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x400a5b1	      0xb804000000	                              mov eax, 4	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a5b6	    0x803ccd000000	                     cmp byte [rcx*8], 0	      5094	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a5be	            0x784c	                            js 0x400a60c	      5094	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a5c0	            0xeb1c	                           jmp 0x400a5de	      5094	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a5c2	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	      5096	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a5c6	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x400a5cf	      0xb808000000	                              mov eax, 8	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a5d4	    0xf604cd000000	                    test byte [rcx*8], 2	      5094	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a5dc	            0x752e	                           jne 0x400a60c	      5094	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a5de	    0xc70500000000	            mov dword [0x0400a5e8], 0xc 	      5099	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a5e8	      0xe9e3030000	                           jmp 0x400a9d0	      5099	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_16
0x400a5ed	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x400a5f6	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a5fa	       0xfb644c337	   movzx eax, byte [rbx + rax*8 + 0x37] 	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a5ff	          0xc0e807	                               shr al, 7	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a602	            0x3c01	                               cmp al, 1	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a604	            0x19c0	                            sbb eax, eax	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a606	          0x83e004	                              and eax, 4	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a609	          0x83c004	                              add eax, 4	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a60c	           0xfaf02	                   imul eax, dword [rdx]	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a60f	          0x83f810	                           cmp eax, 0x10	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a612	            0x7436	                            je 0x400a64a	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a614	          0x83f810	                           cmp eax, 0x10	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a617	            0x7f16	                            jg 0x400a62f	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a619	    0x48ba00000000	                 movabs rdx, 0x200000000	      5107	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a623	      0x4809542410	              or qword [rsp + 0x10], rdx	      5107	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a628	          0x83f808	                              cmp eax, 8	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a62b	            0x743d	                            je 0x400a66a	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a62d	            0xebaf	                           jmp 0x400a5de	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a62f	          0x83f820	                           cmp eax, 0x20	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a632	            0x7427	                            je 0x400a65b	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a634	    0x48ba00000000	                movabs rdx, 0x2000000000	      5116	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a63e	      0x4809542410	              or qword [rsp + 0x10], rdx	      5116	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a643	          0x83f840	                           cmp eax, 0x40	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a646	            0x7422	                            je 0x400a66a	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a648	            0xeb94	                           jmp 0x400a5de	      5104	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a64a	    0x48b800000000	                 movabs rax, 0x800000000	      5110	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a654	      0x4809442410	              or qword [rsp + 0x10], rax	      5110	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a659	            0xeb0f	                           jmp 0x400a66a	      5110	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a65b	    0x48b800000000	                movabs rax, 0x1000000000	      5113	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a665	      0x4809442410	              or qword [rsp + 0x10], rax	      5113	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a66a	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      5113	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a66f	          0x4889f0	                            mov rax, rsi	      5113	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a672	        0x48c1e820	                           shr rax, 0x20	      5113	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a676	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	      5113	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a67a	            0x89ca	                            mov edx, ecx	      5113	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	SWITCH_1
0x400a67c	        0x8544d338	   test dword [rbx + rdx*8 + 0x38], eax 	      5123	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_17	CALL_22
0x400a680	     0xf8458ffffff	                            je 0x400a5de	      5123	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_17	CALL_22
0x400a686	        0xf6432940	           test byte [rbx + 0x29], 0x40 	      5126	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18
0x400a68a	     0xf8435010000	                            je 0x400a7c5	      5126	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18
0x400a690	          0x4889f0	                            mov rax, rsi	      5130	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18
0x400a693	    0x480d00004000	                        or rax, 0x400000	      5130	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18
0x400a699	      0x4889442410	             mov qword [rsp + 0x10], rax	      5130	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18
0x400a69e	    0x833d00000000	               cmp dword [0x0400a6a5], 0	      5131	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2
0x400a6a5	     0xf841a010000	                            je 0x400a7c5	      5131	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2
0x400a6ab	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      5131	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2
0x400a6b3	            0x89c8	                            mov eax, ecx	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x400a6b5	      0x4889442420	             mov qword [rsp + 0x20], rax	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x400a6ba	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      5133	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19
0x400a6be	        0x39442418	            cmp dword [rsp + 0x18], eax 	      5133	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19
0x400a6c2	            0x742b	                            je 0x400a6ef	      5133	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19
0x400a6c4	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x400a6c9	      0x488b4cf334	    mov rcx, qword [rbx + rsi*8 + 0x34] 	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x400a6ce	            0x89c0	                            mov eax, eax	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x400a6d0	      0x488b74c334	    mov rsi, qword [rbx + rax*8 + 0x34] 	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x400a6d5	    0x488b3cc50000	                  mov rdi, qword [rax*8]	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x400a6dd	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x400a6e2	      0xe8655cffff	    call sym.operand_type_register_match	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x400a6e7	            0x85c0	                           test eax, eax	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x400a6e9	     0xf84effeffff	                            je 0x400a5de	      5134	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2	IF_19	CALL_23
0x400a6ef	      0x8344241c01	               add dword [rsp + 0x1c], 1	      5131	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2
0x400a6f4	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      5131	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2
0x400a6f8	    0x3b0500000000	            cmp eax, dword [0x0400a6fe] 	      5131	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2
0x400a6fe	            0x72ba	                            jb 0x400a6ba	      5131	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2
0x400a700	      0xe9c0000000	                           jmp 0x400a7c5	      5131	tc-i386.c	ELSE_3	FUNCTION_75	IF_15	IF_18	FOR_2
0x400a705	        0xf6432f20	           test byte [rbx + 0x2f], 0x20 	      5144	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20
0x400a709	     0xf84a4000000	                            je 0x400a7b3	      5144	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20
0x400a70f	    0x833d00000000	               cmp dword [0x0400a716], 0	      5144	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20
0x400a716	     0xf84a1000000	                            je 0x400a7bd	      5144	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20
0x400a71c	    0x8b0d00000000	            mov ecx, dword [0x0400a722] 	      5147	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3
0x400a722	            0x85c9	                           test ecx, ecx	      5147	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3
0x400a724	     0xf849f080000	                            je 0x400afc9	      5147	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3
0x400a72a	    0x488b05000000	            mov rax, qword [0x0400a731] 	      5147	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3
0x400a731	        0x48c1e810	                           shr rax, 0x10	      1895	tc-i386.c	FUNCTION_21	SWITCH_1
0x400a735	            0xa85f	                           test al, 0x5f	      5148	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3	IF_21	CALL_24
0x400a737	            0x752c	                           jne 0x400a765	      5148	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3	IF_21	CALL_24
0x400a739	      0xb800000000	                              mov eax, 0	      5148	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3	IF_21	CALL_24
0x400a73e	      0xbe00000000	                              mov esi, 0	      5148	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3	IF_21	CALL_24
0x400a743	            0xeb14	                           jmp 0x400a759	      5148	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3	IF_21	CALL_24
0x400a745	    0x488b90800000	            mov rdx, qword [rax + 0x80] 	      5148	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3	IF_21	CALL_24
0x400a74c	        0x4883c008	                              add rax, 8	      5148	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3	IF_21	CALL_24
0x400a750	        0x48c1ea10	                           shr rdx, 0x10	      1895	tc-i386.c	FUNCTION_21	SWITCH_1
0x400a754	          0xf6c25f	                           test dl, 0x5f	      5148	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3	IF_21	CALL_24
0x400a757	            0x7516	                           jne 0x400a76f	      5148	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3	IF_21	CALL_24
0x400a759	          0x83c601	                              add esi, 1	      5147	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3
0x400a75c	            0x39f1	                            cmp ecx, esi	      5147	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3
0x400a75e	            0x75e5	                           jne 0x400a745	      5147	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3
0x400a760	      0xe964080000	                           jmp 0x400afc9	      5147	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3
0x400a765	    0xc74424180000	               mov dword [rsp + 0x18], 0	      5148	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3	IF_21	CALL_24
0x400a76d	            0xeb04	                           jmp 0x400a773	      5148	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3	IF_21	CALL_24
0x400a76f	        0x89742418	             mov dword [rsp + 0x18], esi	      5148	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	FOR_3	IF_21	CALL_24
0x400a773	        0x8b742418	            mov esi, dword [rsp + 0x18] 	      5152	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x400a777	            0x89f0	                            mov eax, esi	      5152	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x400a779	      0x807cc33700	        cmp byte [rbx + rax*8 + 0x37], 0	      5152	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x400a77e	            0x790f	                           jns 0x400a78f	      5152	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x400a780	            0x89f0	                            mov eax, esi	      5153	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x400a782	     0xfb604c50000	                 movzx eax, byte [rax*8]	      5153	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x400a78a	          0xc0e807	                               shr al, 7	      5152	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x400a78d	            0xeb11	                           jmp 0x400a7a0	      5152	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x400a78f	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      5154	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x400a793	     0xfb604c50000	                 movzx eax, byte [rax*8]	      5154	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x400a79b	            0xd0e8	                               shr al, 1	      5154	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x400a79d	          0x83e001	                              and eax, 1	      5152	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x400a7a0	            0x84c0	                             test al, al	      5152	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x400a7a2	            0x7421	                            je 0x400a7c5	      5152	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x400a7a4	    0xc70500000000	            mov dword [0x0400a7ae], 0xe 	      5156	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x400a7ae	      0xe91d020000	                           jmp 0x400a9d0	      5156	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	IF_22
0x400a7b3	    0xc74424180400	               mov dword [rsp + 0x18], 4	      5161	tc-i386.c	FUNCTION_75
0x400a7bb	            0xeb08	                           jmp 0x400a7c5	      5161	tc-i386.c	FUNCTION_75
0x400a7bd	    0xc74424180400	               mov dword [rsp + 0x18], 4	      5161	tc-i386.c	FUNCTION_75
0x400a7c5	    0x488b15000000	            mov rdx, qword [0x0400a7cc] 	      5164	tc-i386.c	FUNCTION_75	IF_23
0x400a7cc	          0x4885d2	                           test rdx, rdx	      5164	tc-i386.c	FUNCTION_75	IF_23
0x400a7cf	            0x743f	                            je 0x400a810	      5164	tc-i386.c	FUNCTION_75	IF_23
0x400a7d1	         0xfb6432f	           movzx eax, byte [rbx + 0x2f] 	      5165	tc-i386.c	FUNCTION_75	IF_23
0x400a7d5	          0x83e018	                           and eax, 0x18	      5165	tc-i386.c	FUNCTION_75	IF_23
0x400a7d8	            0x740a	                            je 0x400a7e4	      5165	tc-i386.c	FUNCTION_75	IF_23
0x400a7da	        0x837a0800	                  cmp dword [rdx + 8], 0	      5167	tc-i386.c	FUNCTION_75	IF_23
0x400a7de	            0x7413	                            je 0x400a7f3	      5167	tc-i386.c	FUNCTION_75	IF_23
0x400a7e0	            0x3c10	                            cmp al, 0x10	      5167	tc-i386.c	FUNCTION_75	IF_23
0x400a7e2	            0x750f	                           jne 0x400a7f3	      5167	tc-i386.c	FUNCTION_75	IF_23
0x400a7e4	    0xc70500000000	            mov dword [0x0400a7ee], 0xf 	      5169	tc-i386.c	FUNCTION_75	IF_23
0x400a7ee	      0xe9dd010000	                           jmp 0x400a9d0	      5169	tc-i386.c	FUNCTION_75	IF_23
0x400a7f3	    0x8b0500000000	            mov eax, dword [0x0400a7f9] 	      5174	tc-i386.c	FUNCTION_75	ELSE_3	IF_24
0x400a7f9	          0x83e801	                              sub eax, 1	      5174	tc-i386.c	FUNCTION_75	ELSE_3	IF_24
0x400a7fc	          0x39420c	              cmp dword [rdx + 0xc], eax	      5174	tc-i386.c	FUNCTION_75	ELSE_3	IF_24
0x400a7ff	            0x740f	                            je 0x400a810	      5174	tc-i386.c	FUNCTION_75	ELSE_3	IF_24
0x400a801	    0xc70500000000	           mov dword [0x0400a80b], 0x10 	      5176	tc-i386.c	FUNCTION_75	ELSE_3	IF_24
0x400a80b	      0xe9c0010000	                           jmp 0x400a9d0	      5176	tc-i386.c	FUNCTION_75	ELSE_3	IF_24
0x400a810	    0x488b15000000	            mov rdx, qword [0x0400a817] 	      5181	tc-i386.c	FUNCTION_75	ELSE_3	IF_25
0x400a817	          0x4885d2	                           test rdx, rdx	      5181	tc-i386.c	FUNCTION_75	ELSE_3	IF_25
0x400a81a	            0x7449	                            je 0x400a865	      5181	tc-i386.c	FUNCTION_75	ELSE_3	IF_25
0x400a81c	          0x833a04	                      cmp dword [rdx], 4	      5183	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x400a81f	            0x7408	                            je 0x400a829	      5183	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x400a821	        0xf6432f40	           test byte [rbx + 0x2f], 0x40 	      5184	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x400a825	            0x751c	                           jne 0x400a843	      5184	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x400a827	            0xeb0b	                           jmp 0x400a834	      5184	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x400a829	         0xfb6432f	           movzx eax, byte [rbx + 0x2f] 	      5186	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x400a82d	          0x83e0c0	                     and eax, 0xffffffc0	      5186	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x400a830	            0x3c80	                            cmp al, 0x80	      5186	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x400a832	            0x740f	                            je 0x400a843	      5186	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x400a834	    0xc70500000000	           mov dword [0x0400a83e], 0x12 	      5189	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x400a83e	      0xe98d010000	                           jmp 0x400a9d0	      5189	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_26
0x400a843	    0x8b0500000000	            mov eax, dword [0x0400a849] 	      5195	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_27
0x400a849	          0x83f801	                              cmp eax, 1	      5195	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_27
0x400a84c	            0x7617	                           jbe 0x400a865	      5195	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_27
0x400a84e	          0x83e801	                              sub eax, 1	      5196	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_27
0x400a851	          0x394204	                cmp dword [rdx + 4], eax	      5196	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_27
0x400a854	            0x740f	                            je 0x400a865	      5196	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_27
0x400a856	    0xc70500000000	           mov dword [0x0400a860], 0x13 	      5198	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_27
0x400a860	      0xe96b010000	                           jmp 0x400a9d0	      5198	tc-i386.c	FUNCTION_75	ELSE_3	IF_25	IF_27
0x400a865	        0xf6433007	               test byte [rbx + 0x30], 7	      5204	tc-i386.c	FUNCTION_75	ELSE_3	IF_28
0x400a869	     0xf84d9000000	                            je 0x400a948	      5204	tc-i386.c	FUNCTION_75	ELSE_3	IF_28
0x400a86f	    0x833d00000000	               cmp dword [0x0400a876], 2	      5205	tc-i386.c	FUNCTION_75	ELSE_3	IF_28
0x400a876	     0xf84cc000000	                            je 0x400a948	      5205	tc-i386.c	FUNCTION_75	ELSE_3	IF_28
0x400a87c	    0x48833d000000	               cmp qword [0x0400a884], 0	      5207	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	IF_29
0x400a884	            0x743a	                            je 0x400a8c0	      5207	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	IF_29
0x400a886	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      5208	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	IF_29
0x400a88a	       0xfb644c337	   movzx eax, byte [rbx + rax*8 + 0x37] 	      5208	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	IF_29
0x400a88f	          0xc0e807	                               shr al, 7	      5208	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	IF_29
0x400a892	          0xc1e01f	                           shl eax, 0x1f	      5208	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	IF_29
0x400a895	          0xc1f81f	                           sar eax, 0x1f	      5208	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	IF_29
0x400a898	          0x83c003	                              add eax, 3	      5208	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	IF_29
0x400a89b	    0x890500000000	            mov dword [0x0400a8a1], eax 	      5208	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	IF_29
0x400a8a1	    0x8b3d00000000	            mov edi, dword [0x0400a8a7] 	      5212	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4
0x400a8a7	      0xbe00000000	                              mov esi, 0	      5212	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4
0x400a8ac	      0xb800000000	                              mov eax, 0	      5212	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4
0x400a8b1	    0x41b801000000	                              mov r8d, 1	      2203	tc-i386.c	FUNCTION_36	IF_2
0x400a8b7	            0x85ff	                           test edi, edi	      5212	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4
0x400a8b9	            0x7514	                           jne 0x400a8cf	      5212	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4
0x400a8bb	      0xe988000000	                           jmp 0x400a948	      5212	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4
0x400a8c0	         0xfb64330	           movzx eax, byte [rbx + 0x30] 	      5210	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	ELSE_4
0x400a8c4	          0x83e007	                              and eax, 7	      5210	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	ELSE_4
0x400a8c7	    0x890500000000	            mov dword [0x0400a8cd], eax 	      5210	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	ELSE_4
0x400a8cd	            0xebd2	                           jmp 0x400a8a1	      5210	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	ELSE_4
0x400a8cf	        0xf6467a1f	           test byte [rsi + 0x7a], 0x1f 	      5213	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	CALL_26
0x400a8d3	            0x7468	                            je 0x400a93d	      5213	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	CALL_26
0x400a8d5	    0x488b96a00000	            mov rdx, qword [rsi + 0xa0] 	      5214	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30
0x400a8dc	        0x807a1802	                cmp byte [rdx + 0x18], 2	      5214	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30
0x400a8e0	            0x755b	                           jne 0x400a93d	      5214	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30
0x400a8e2	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      5216	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	IF_31	CALL_27
0x400a8e6	    0x8b0d00000000	            mov ecx, dword [0x0400a8ec] 	      2194	tc-i386.c	FUNCTION_36
0x400a8ec	          0x83f9ff	             cmp ecx, 0xffffffffffffffff	      2197	tc-i386.c	FUNCTION_36	IF_1
0x400a8ef	            0x7514	                           jne 0x400a905	      2197	tc-i386.c	FUNCTION_36	IF_1
0x400a8f1	      0xba00000000	                              mov edx, 0	      2198	tc-i386.c	FUNCTION_36	CALL_1
0x400a8f6	      0xbe96080000	                          mov esi, 0x896	      2198	tc-i386.c	FUNCTION_36	CALL_1
0x400a8fb	      0xbf00000000	                              mov edi, 0	      2198	tc-i386.c	FUNCTION_36	CALL_1
0x400a900	      0xe800000000	                          call 0x400a905	      2198	tc-i386.c	FUNCTION_36	CALL_1
0x400a905	          0x4589c1	                            mov r9d, r8d	      2203	tc-i386.c	FUNCTION_36	IF_2
0x400a908	          0x41d3e1	                             shl r9d, cl	      2203	tc-i386.c	FUNCTION_36	IF_2
0x400a90b	        0x458d49ff	                       lea r9d, [r9 - 1]	      2203	tc-i386.c	FUNCTION_36	IF_2
0x400a90f	          0x4985d1	                            test r9, rdx	      2203	tc-i386.c	FUNCTION_36	IF_2
0x400a912	            0x751f	                           jne 0x400a933	      2203	tc-i386.c	FUNCTION_36	IF_2
0x400a914	          0x48d3fa	                             sar rdx, cl	      5216	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	IF_31	CALL_27
0x400a917	        0x4883ea80	             sub rdx, 0xffffffffffffff80	      5216	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	IF_31	CALL_27
0x400a91b	    0x4881faff0000	                           cmp rdx, 0xff	      5216	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	IF_31	CALL_27
0x400a922	            0x770f	                            ja 0x400a933	      5216	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	IF_31	CALL_27
0x400a924	            0x89c0	                            mov eax, eax	      5218	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	IF_31
0x400a926	    0x800cc5000000	                      or byte [rax*8], 1	      5218	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	IF_31
0x400a92e	      0xe9aa060000	                           jmp 0x400afdd	      5218	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30	IF_31
0x400a933	            0x89c2	                            mov edx, eax	      5221	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30
0x400a935	    0x8024d5000000	                  and byte [rdx*8], 0xfe	      5221	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4	IF_30
0x400a93d	          0x83c001	                              add eax, 1	      5212	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4
0x400a940	        0x4883c608	                              add rsi, 8	      5212	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4
0x400a944	            0x39f8	                            cmp eax, edi	      5212	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4
0x400a946	            0x7587	                           jne 0x400a8cf	      5212	tc-i386.c	FUNCTION_75	ELSE_3	IF_28	FOR_4
0x400a948	    0xc70500000000	               mov dword [0x0400a952], 0	      5225	tc-i386.c	FUNCTION_75	ELSE_3
0x400a952	      0xe986060000	                           jmp 0x400afdd	      5225	tc-i386.c	FUNCTION_75	ELSE_3
0x400a957	        0x807b2f00	                cmp byte [rbx + 0x2f], 0	      5239	tc-i386.c	FUNCTION_76	IF_1	IF_2	CALL_1
0x400a95b	     0xf851d010000	                           jne 0x400aa7e	      5239	tc-i386.c	FUNCTION_76	IF_1	IF_2	CALL_1
0x400a961	    0xc70500000000	               mov dword [0x0400a96b], 8	      5241	tc-i386.c	FUNCTION_76	IF_1	IF_2
0x400a96b	            0xeb63	                           jmp 0x400a9d0	      5241	tc-i386.c	FUNCTION_76	IF_1	IF_2
0x400a96d	        0xf6432d06	               test byte [rbx + 0x2d], 6	      5247	tc-i386.c	FUNCTION_76	IF_3
0x400a971	            0x7514	                           jne 0x400a987	      5247	tc-i386.c	FUNCTION_76	IF_3
0x400a973	            0x85c0	                           test eax, eax	      5250	tc-i386.c	FUNCTION_76	IF_3	IF_4
0x400a975	     0xf8403010000	                            je 0x400aa7e	      5250	tc-i386.c	FUNCTION_76	IF_3	IF_4
0x400a97b	    0xc70500000000	               mov dword [0x0400a985], 8	      5252	tc-i386.c	FUNCTION_76	IF_3	IF_4
0x400a985	            0xeb49	                           jmp 0x400a9d0	      5252	tc-i386.c	FUNCTION_76	IF_3	IF_4
0x400a987	        0xf6433901	               test byte [rbx + 0x39], 1	      5259	tc-i386.c	FUNCTION_76	IF_5
0x400a98b	     0xf84ed000000	                            je 0x400aa7e	      5259	tc-i386.c	FUNCTION_76	IF_5
0x400a991	    0x488b05000000	            mov rax, qword [0x0400a998] 	      5261	tc-i386.c	FUNCTION_76	IF_5	IF_6
0x400a998	        0x80781802	                cmp byte [rax + 0x18], 2	      5261	tc-i386.c	FUNCTION_76	IF_5	IF_6
0x400a99c	            0x750f	                           jne 0x400a9ad	      5261	tc-i386.c	FUNCTION_76	IF_5	IF_6
0x400a99e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5262	tc-i386.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x400a9a2	          0x4889c2	                            mov rdx, rax	      5262	tc-i386.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x400a9a5	          0x83e20f	                            and edx, 0xf	      5262	tc-i386.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x400a9a8	          0x4839d0	                            cmp rax, rdx	      5262	tc-i386.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x400a9ab	            0x740c	                            je 0x400a9b9	      5262	tc-i386.c	FUNCTION_76	IF_5	IF_6	CALL_2
0x400a9ad	    0xc70500000000	               mov dword [0x0400a9b7], 5	      5264	tc-i386.c	FUNCTION_76	IF_5	IF_6
0x400a9b7	            0xeb17	                           jmp 0x400a9d0	      5264	tc-i386.c	FUNCTION_76	IF_5	IF_6
0x400a9b9	    0x48c705000000	               mov qword [0x0400a9c4], 0	      5269	tc-i386.c	FUNCTION_76	IF_5
0x400a9c4	    0xc60500000000	                mov byte [0x0400a9cb], 1	      5269	tc-i386.c	FUNCTION_76	IF_5
0x400a9cb	      0xe9ae000000	                           jmp 0x400aa7e	      5269	tc-i386.c	FUNCTION_76	IF_5
0x400a9d0	    0x8b0500000000	            mov eax, dword [0x0400a9d6] 	      5630	tc-i386.c	FUNCTION_77	FOR_1	IF_41
0x400a9d6	        0x8944240c	              mov dword [rsp + 0xc], eax	      5630	tc-i386.c	FUNCTION_77	FOR_1	IF_41
0x400a9da	      0xe983000000	                           jmp 0x400aa62	      5631	tc-i386.c	FUNCTION_77	FOR_1	IF_41
0x400a9df	      0xbdffffffff	                     mov ebp, 0xffffffff	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400a9e4	            0xeb7c	                           jmp 0x400aa62	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400a9e6	      0xbdffffffff	                     mov ebp, 0xffffffff	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400a9eb	            0xeb75	                           jmp 0x400aa62	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400a9ed	      0xbdffffffff	                     mov ebp, 0xffffffff	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400a9f2	            0xeb6e	                           jmp 0x400aa62	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400a9f4	      0xbdffffffff	                     mov ebp, 0xffffffff	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400a9f9	            0xeb67	                           jmp 0x400aa62	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400a9fb	      0xbdffffffff	                     mov ebp, 0xffffffff	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400aa00	            0xeb60	                           jmp 0x400aa62	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400aa02	      0xbdffffffff	                     mov ebp, 0xffffffff	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400aa07	            0xeb59	                           jmp 0x400aa62	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400aa09	      0xbdffffffff	                     mov ebp, 0xffffffff	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400aa0e	            0xeb52	                           jmp 0x400aa62	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400aa10	      0xbdffffffff	                     mov ebp, 0xffffffff	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400aa15	            0xeb4b	                           jmp 0x400aa62	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400aa17	      0xbdffffffff	                     mov ebp, 0xffffffff	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400aa1c	            0xeb44	                           jmp 0x400aa62	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400aa1e	      0xbdffffffff	                     mov ebp, 0xffffffff	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400aa23	            0xeb3d	                           jmp 0x400aa62	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400aa25	      0xbdffffffff	                     mov ebp, 0xffffffff	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400aa2a	            0xeb36	                           jmp 0x400aa62	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400aa2c	      0xbdffffffff	                     mov ebp, 0xffffffff	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400aa31	            0xeb2f	                           jmp 0x400aa62	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400aa33	      0xbdffffffff	                     mov ebp, 0xffffffff	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400aa38	            0xeb28	                           jmp 0x400aa62	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400aa3a	      0xbdffffffff	                     mov ebp, 0xffffffff	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400aa3f	            0xeb21	                           jmp 0x400aa62	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400aa41	      0xbdffffffff	                     mov ebp, 0xffffffff	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400aa46	            0xeb1a	                           jmp 0x400aa62	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400aa48	      0xbdffffffff	                     mov ebp, 0xffffffff	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400aa4d	            0xeb13	                           jmp 0x400aa62	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400aa4f	      0xbdffffffff	                     mov ebp, 0xffffffff	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400aa54	            0xeb0c	                           jmp 0x400aa62	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400aa56	      0xbdffffffff	                     mov ebp, 0xffffffff	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400aa5b	            0xeb05	                           jmp 0x400aa62	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400aa5d	      0xbdffffffff	                     mov ebp, 0xffffffff	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400aa62	        0x4883c360	                           add rbx, 0x60	      5330	tc-i386.c	FUNCTION_77	FOR_1
0x400aa66	    0x488b05000000	            mov rax, qword [0x0400aa6d] 	      5330	tc-i386.c	FUNCTION_77	FOR_1
0x400aa6d	        0x48395808	                cmp qword [rax + 8], rbx	      5330	tc-i386.c	FUNCTION_77	FOR_1
0x400aa71	     0xf87c8e7ffff	                            ja 0x400923f	      5330	tc-i386.c	FUNCTION_77	FOR_1
0x400aa77	            0xeb05	                           jmp 0x400aa7e	      5330	tc-i386.c	FUNCTION_77	FOR_1
0x400aa79	      0xbdffffffff	                     mov ebp, 0xffffffff	      5332	tc-i386.c	FUNCTION_77	FOR_1
0x400aa7e	    0x4c8b25000000	            mov r12, qword [0x0400aa85] 	      5638	tc-i386.c	FUNCTION_77	IF_42
0x400aa85	      0x49395c2408	                cmp qword [r12 + 8], rbx	      5638	tc-i386.c	FUNCTION_77	IF_42
0x400aa8a	     0xf85e3020000	                           jne 0x400ad73	      5638	tc-i386.c	FUNCTION_77	IF_42
0x400aa90	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      5638	tc-i386.c	FUNCTION_77	IF_42
0x400aa94	            0x89f0	                            mov eax, esi	      5638	tc-i386.c	FUNCTION_77	IF_42
0x400aa96	            0x85f6	                           test esi, esi	      5642	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x400aa98	            0x7506	                           jne 0x400aaa0	      5642	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x400aa9a	    0x8b0500000000	            mov eax, dword [0x0400aaa0] 	      5642	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x400aaa0	          0x83f814	                           cmp eax, 0x14	      5642	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x400aaa3	            0x7709	                            ja 0x400aaae	      5642	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x400aaa5	            0x89c0	                            mov eax, eax	      5642	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x400aaa7	    0xff24c5000000	                       jmp qword [rax*8]	      5642	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x400aaae	      0xba00000000	                              mov edx, 0	      5645	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_36
0x400aab3	      0xbe0d160000	                         mov esi, 0x160d	      5645	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_36
0x400aab8	      0xbf00000000	                              mov edi, 0	      5645	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_36
0x400aabd	      0xe800000000	                          call 0x400aac2	      5645	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_36
0x400aac2	      0xba05000000	                              mov edx, 5	      5647	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_37
0x400aac7	      0xbe00000000	                              mov esi, 0	      5647	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_37
0x400aacc	      0xbf00000000	                              mov edi, 0	      5647	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_37
0x400aad1	      0xe800000000	                          call 0x400aad6	      5647	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_37
0x400aad6	          0x4889c3	                            mov rbx, rax	      5647	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_37
0x400aad9	      0xe95d020000	                           jmp 0x400ad3b	      5648	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x400aade	      0xba05000000	                              mov edx, 5	      5650	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_38
0x400aae3	      0xbe00000000	                              mov esi, 0	      5650	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_38
0x400aae8	      0xbf00000000	                              mov edi, 0	      5650	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_38
0x400aaed	      0xe800000000	                          call 0x400aaf2	      5650	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_38
0x400aaf2	          0x4889c3	                            mov rbx, rax	      5650	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_38
0x400aaf5	      0xe941020000	                           jmp 0x400ad3b	      5651	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x400aafa	      0xba05000000	                              mov edx, 5	      5653	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_39
0x400aaff	      0xbe00000000	                              mov esi, 0	      5653	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_39
0x400ab04	      0xbf00000000	                              mov edi, 0	      5653	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_39
0x400ab09	      0xe800000000	                          call 0x400ab0e	      5653	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_39
0x400ab0e	          0x4889c3	                            mov rbx, rax	      5653	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_39
0x400ab11	      0xe925020000	                           jmp 0x400ad3b	      5654	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x400ab16	      0xba05000000	                              mov edx, 5	      5656	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_40
0x400ab1b	      0xbe00000000	                              mov esi, 0	      5656	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_40
0x400ab20	      0xbf00000000	                              mov edi, 0	      5656	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_40
0x400ab25	      0xe800000000	                          call 0x400ab2a	      5656	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_40
0x400ab2a	          0x4889c3	                            mov rbx, rax	      5656	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_40
0x400ab2d	      0xe909020000	                           jmp 0x400ad3b	      5657	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x400ab32	      0xba05000000	                              mov edx, 5	      5659	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_41
0x400ab37	      0xbe00000000	                              mov esi, 0	      5659	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_41
0x400ab3c	      0xbf00000000	                              mov edi, 0	      5659	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_41
0x400ab41	      0xe800000000	                          call 0x400ab46	      5659	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_41
0x400ab46	          0x4889c3	                            mov rbx, rax	      5659	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_41
0x400ab49	      0xe9ed010000	                           jmp 0x400ad3b	      5660	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x400ab4e	      0xba05000000	                              mov edx, 5	      5662	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_42
0x400ab53	      0xbe00000000	                              mov esi, 0	      5662	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_42
0x400ab58	      0xbf00000000	                              mov edi, 0	      5662	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_42
0x400ab5d	      0xe800000000	                          call 0x400ab62	      5662	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_42
0x400ab62	          0x4889c3	                            mov rbx, rax	      5662	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_42
0x400ab65	      0xe9d1010000	                           jmp 0x400ad3b	      5663	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x400ab6a	      0xba05000000	                              mov edx, 5	      5665	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_43
0x400ab6f	      0xbe00000000	                              mov esi, 0	      5665	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_43
0x400ab74	      0xbf00000000	                              mov edi, 0	      5665	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_43
0x400ab79	      0xe800000000	                          call 0x400ab7e	      5665	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_43
0x400ab7e	          0x4889c3	                            mov rbx, rax	      5665	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_43
0x400ab81	      0xe9b5010000	                           jmp 0x400ad3b	      5666	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x400ab86	      0xba05000000	                              mov edx, 5	      5668	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_44
0x400ab8b	      0xbe00000000	                              mov esi, 0	      5668	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_44
0x400ab90	      0xbf00000000	                              mov edi, 0	      5668	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_44
0x400ab95	      0xe800000000	                          call 0x400ab9a	      5668	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_44
0x400ab9a	          0x4889c3	                            mov rbx, rax	      5668	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_44
0x400ab9d	      0xe999010000	                           jmp 0x400ad3b	      5669	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x400aba2	        0x498b0424	                    mov rax, qword [r12]	      5671	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_46
0x400aba6	          0x488b18	                    mov rbx, qword [rax]	      5671	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_46
0x400aba9	      0xba05000000	                              mov edx, 5	      5671	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_46
0x400abae	      0xbe00000000	                              mov esi, 0	      5671	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_46
0x400abb3	      0xbf00000000	                              mov edi, 0	      5671	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_46
0x400abb8	      0xe800000000	                          call 0x400abbd	      5671	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_46
0x400abbd	          0x4889de	                            mov rsi, rbx	      5671	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_46
0x400abc0	          0x4889c7	                            mov rdi, rax	      5671	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_46
0x400abc3	      0xb800000000	                              mov eax, 0	      5671	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_46
0x400abc8	      0xe800000000	                          call 0x400abcd	      5671	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_46
0x400abcd	      0xb800000000	                              mov eax, 0	      5673	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x400abd2	      0xe9ff020000	                           jmp 0x400aed6	      5673	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x400abd7	      0xba05000000	                              mov edx, 5	      5675	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_47
0x400abdc	      0xbe00000000	                              mov esi, 0	      5675	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_47
0x400abe1	      0xbf00000000	                              mov edi, 0	      5675	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_47
0x400abe6	      0xe800000000	                          call 0x400abeb	      5675	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_47
0x400abeb	          0x4889c3	                            mov rbx, rax	      5675	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_47
0x400abee	      0xe948010000	                           jmp 0x400ad3b	      5676	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x400abf3	      0xba05000000	                              mov edx, 5	      5678	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_48
0x400abf8	      0xbe00000000	                              mov esi, 0	      5678	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_48
0x400abfd	      0xbf00000000	                              mov edi, 0	      5678	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_48
0x400ac02	      0xe800000000	                          call 0x400ac07	      5678	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_48
0x400ac07	          0x4889c3	                            mov rbx, rax	      5678	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_48
0x400ac0a	      0xe92c010000	                           jmp 0x400ad3b	      5679	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x400ac0f	      0xba05000000	                              mov edx, 5	      5681	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_49
0x400ac14	      0xbe00000000	                              mov esi, 0	      5681	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_49
0x400ac19	      0xbf00000000	                              mov edi, 0	      5681	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_49
0x400ac1e	      0xe800000000	                          call 0x400ac23	      5681	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_49
0x400ac23	          0x4889c3	                            mov rbx, rax	      5681	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_49
0x400ac26	      0xe910010000	                           jmp 0x400ad3b	      5682	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x400ac2b	      0xba05000000	                              mov edx, 5	      5684	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_50
0x400ac30	      0xbe00000000	                              mov esi, 0	      5684	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_50
0x400ac35	      0xbf00000000	                              mov edi, 0	      5684	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_50
0x400ac3a	      0xe800000000	                          call 0x400ac3f	      5684	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_50
0x400ac3f	          0x4889c3	                            mov rbx, rax	      5684	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_50
0x400ac42	      0xe9f4000000	                           jmp 0x400ad3b	      5685	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x400ac47	      0xba05000000	                              mov edx, 5	      5687	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_51
0x400ac4c	      0xbe00000000	                              mov esi, 0	      5687	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_51
0x400ac51	      0xbf00000000	                              mov edi, 0	      5687	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_51
0x400ac56	      0xe800000000	                          call 0x400ac5b	      5687	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_51
0x400ac5b	          0x4889c3	                            mov rbx, rax	      5687	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_51
0x400ac5e	      0xe9d8000000	                           jmp 0x400ad3b	      5688	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x400ac63	      0xba05000000	                              mov edx, 5	      5690	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_52
0x400ac68	      0xbe00000000	                              mov esi, 0	      5690	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_52
0x400ac6d	      0xbf00000000	                              mov edi, 0	      5690	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_52
0x400ac72	      0xe800000000	                          call 0x400ac77	      5690	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_52
0x400ac77	          0x4889c3	                            mov rbx, rax	      5690	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_52
0x400ac7a	      0xe9bc000000	                           jmp 0x400ad3b	      5691	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x400ac7f	      0xba05000000	                              mov edx, 5	      5693	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_53
0x400ac84	      0xbe00000000	                              mov esi, 0	      5693	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_53
0x400ac89	      0xbf00000000	                              mov edi, 0	      5693	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_53
0x400ac8e	      0xe800000000	                          call 0x400ac93	      5693	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_53
0x400ac93	          0x4889c3	                            mov rbx, rax	      5693	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_53
0x400ac96	      0xe9a0000000	                           jmp 0x400ad3b	      5694	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x400ac9b	      0xba05000000	                              mov edx, 5	      5696	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_54
0x400aca0	      0xbe00000000	                              mov esi, 0	      5696	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_54
0x400aca5	      0xbf00000000	                              mov edi, 0	      5696	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_54
0x400acaa	      0xe800000000	                          call 0x400acaf	      5696	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_54
0x400acaf	          0x4889c3	                            mov rbx, rax	      5696	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_54
0x400acb2	      0xe984000000	                           jmp 0x400ad3b	      5697	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x400acb7	      0xba05000000	                              mov edx, 5	      5699	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_55
0x400acbc	      0xbe00000000	                              mov esi, 0	      5699	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_55
0x400acc1	      0xbf00000000	                              mov edi, 0	      5699	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_55
0x400acc6	      0xe800000000	                          call 0x400accb	      5699	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_55
0x400accb	          0x4889c3	                            mov rbx, rax	      5699	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_55
0x400acce	            0xeb6b	                           jmp 0x400ad3b	      5700	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x400acd0	      0xba05000000	                              mov edx, 5	      5702	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_56
0x400acd5	      0xbe00000000	                              mov esi, 0	      5702	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_56
0x400acda	      0xbf00000000	                              mov edi, 0	      5702	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_56
0x400acdf	      0xe800000000	                          call 0x400ace4	      5702	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_56
0x400ace4	          0x4889c3	                            mov rbx, rax	      5702	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_56
0x400ace7	            0xeb52	                           jmp 0x400ad3b	      5703	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6
0x400ace9	    0x833d00000000	               cmp dword [0x0400acf0], 0	      5705	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	IF_43
0x400acf0	            0x7419	                            je 0x400ad0b	      5705	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	IF_43
0x400acf2	      0xba05000000	                              mov edx, 5	      5706	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_57
0x400acf7	      0xbe00000000	                              mov esi, 0	      5706	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_57
0x400acfc	      0xbf00000000	                              mov edi, 0	      5706	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_57
0x400ad01	      0xe800000000	                          call 0x400ad06	      5706	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_57
0x400ad06	          0x4889c3	                            mov rbx, rax	      5706	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_57
0x400ad09	            0xeb30	                           jmp 0x400ad3b	      5706	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_57
0x400ad0b	      0xba05000000	                              mov edx, 5	      5708	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_58
0x400ad10	      0xbe00000000	                              mov esi, 0	      5708	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_58
0x400ad15	      0xbf00000000	                              mov edi, 0	      5708	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_58
0x400ad1a	      0xe800000000	                          call 0x400ad1f	      5708	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_58
0x400ad1f	          0x4889c3	                            mov rbx, rax	      5708	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_58
0x400ad22	            0xeb17	                           jmp 0x400ad3b	      5708	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_58
0x400ad24	      0xba05000000	                              mov edx, 5	      5711	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_59
0x400ad29	      0xbe00000000	                              mov esi, 0	      5711	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_59
0x400ad2e	      0xbf00000000	                              mov edi, 0	      5711	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_59
0x400ad33	      0xe800000000	                          call 0x400ad38	      5711	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_59
0x400ad38	          0x4889c3	                            mov rbx, rax	      5711	tc-i386.c	FUNCTION_77	IF_42	SWITCH_6	CALL_59
0x400ad3b	        0x498b0424	                    mov rax, qword [r12]	      5714	tc-i386.c	FUNCTION_77	IF_42	CALL_61
0x400ad3f	          0x488b28	                    mov rbp, qword [rax]	      5714	tc-i386.c	FUNCTION_77	IF_42	CALL_61
0x400ad42	      0xba05000000	                              mov edx, 5	      5714	tc-i386.c	FUNCTION_77	IF_42	CALL_61
0x400ad47	      0xbe00000000	                              mov esi, 0	      5714	tc-i386.c	FUNCTION_77	IF_42	CALL_61
0x400ad4c	      0xbf00000000	                              mov edi, 0	      5714	tc-i386.c	FUNCTION_77	IF_42	CALL_61
0x400ad51	      0xe800000000	                          call 0x400ad56	      5714	tc-i386.c	FUNCTION_77	IF_42	CALL_61
0x400ad56	          0x4889ea	                            mov rdx, rbp	      5714	tc-i386.c	FUNCTION_77	IF_42	CALL_61
0x400ad59	          0x4889de	                            mov rsi, rbx	      5714	tc-i386.c	FUNCTION_77	IF_42	CALL_61
0x400ad5c	          0x4889c7	                            mov rdi, rax	      5714	tc-i386.c	FUNCTION_77	IF_42	CALL_61
0x400ad5f	      0xb800000000	                              mov eax, 0	      5714	tc-i386.c	FUNCTION_77	IF_42	CALL_61
0x400ad64	      0xe800000000	                          call 0x400ad69	      5714	tc-i386.c	FUNCTION_77	IF_42	CALL_61
0x400ad69	      0xb800000000	                              mov eax, 0	      5716	tc-i386.c	FUNCTION_77	IF_42
0x400ad6e	      0xe963010000	                           jmp 0x400aed6	      5716	tc-i386.c	FUNCTION_77	IF_42
0x400ad73	    0x833d00000000	               cmp dword [0x0400ad7a], 0	      5719	tc-i386.c	FUNCTION_77	IF_44
0x400ad7a	     0xf8594000000	                           jne 0x400ae14	      5719	tc-i386.c	FUNCTION_77	IF_44
0x400ad80	            0xeb0b	                           jmp 0x400ad8d	      5719	tc-i386.c	FUNCTION_77	IF_44
0x400ad82	      0xbdffffffff	                     mov ebp, 0xffffffff	      5296	tc-i386.c	FUNCTION_77
0x400ad87	    0x41bf00000000	                             mov r15d, 0	      5295	tc-i386.c	FUNCTION_77
0x400ad8d	    0x833d00000000	               cmp dword [0x0400ad94], 0	      5721	tc-i386.c	FUNCTION_77	IF_44	IF_45
0x400ad94	            0x7541	                           jne 0x400add7	      5721	tc-i386.c	FUNCTION_77	IF_44	IF_45
0x400ad96	     0xfb615000000	           movzx edx, byte [0x0400ad9d] 	      5722	tc-i386.c	FUNCTION_77	IF_44	IF_45
0x400ad9d	            0xd0ea	                               shr dl, 1	      5722	tc-i386.c	FUNCTION_77	IF_44	IF_45
0x400ad9f	          0x83e201	                              and edx, 1	      5722	tc-i386.c	FUNCTION_77	IF_44	IF_45
0x400ada2	       0xfb6442473	           movzx eax, byte [rsp + 0x73] 	      5723	tc-i386.c	FUNCTION_77	IF_44	IF_45
0x400ada7	            0xd0e8	                               shr al, 1	      5723	tc-i386.c	FUNCTION_77	IF_44	IF_45
0x400ada9	          0x83e001	                              and eax, 1	      5723	tc-i386.c	FUNCTION_77	IF_44	IF_45
0x400adac	            0x38c2	                              cmp dl, al	      5722	tc-i386.c	FUNCTION_77	IF_44	IF_45
0x400adae	            0x7427	                            je 0x400add7	      5722	tc-i386.c	FUNCTION_77	IF_44	IF_45
0x400adb0	          0x4c8b23	                    mov r12, qword [rbx]	      5725	tc-i386.c	FUNCTION_77	IF_44	IF_45	CALL_63
0x400adb3	      0xba05000000	                              mov edx, 5	      5725	tc-i386.c	FUNCTION_77	IF_44	IF_45	CALL_63
0x400adb8	      0xbe00000000	                              mov esi, 0	      5725	tc-i386.c	FUNCTION_77	IF_44	IF_45	CALL_63
0x400adbd	      0xbf00000000	                              mov edi, 0	      5725	tc-i386.c	FUNCTION_77	IF_44	IF_45	CALL_63
0x400adc2	      0xe800000000	                          call 0x400adc7	      5725	tc-i386.c	FUNCTION_77	IF_44	IF_45	CALL_63
0x400adc7	          0x4c89e6	                            mov rsi, r12	      5725	tc-i386.c	FUNCTION_77	IF_44	IF_45	CALL_63
0x400adca	          0x4889c7	                            mov rdi, rax	      5725	tc-i386.c	FUNCTION_77	IF_44	IF_45	CALL_63
0x400adcd	      0xb800000000	                              mov eax, 0	      5725	tc-i386.c	FUNCTION_77	IF_44	IF_45	CALL_63
0x400add2	      0xe800000000	                          call 0x400add7	      5725	tc-i386.c	FUNCTION_77	IF_44	IF_45	CALL_63
0x400add7	    0x48b800800000	                movabs rax, 0x1000008000	      5728	tc-i386.c	FUNCTION_77	IF_44	IF_46
0x400ade1	          0x4889c2	                            mov rdx, rax	      5728	tc-i386.c	FUNCTION_77	IF_44	IF_46
0x400ade4	        0x48235328	             and rdx, qword [rbx + 0x28]	      5728	tc-i386.c	FUNCTION_77	IF_44	IF_46
0x400ade8	          0x4839c2	                            cmp rdx, rax	      5728	tc-i386.c	FUNCTION_77	IF_44	IF_46
0x400adeb	            0x7527	                           jne 0x400ae14	      5728	tc-i386.c	FUNCTION_77	IF_44	IF_46
0x400aded	          0x4c8b23	                    mov r12, qword [rbx]	      5733	tc-i386.c	FUNCTION_77	IF_44	IF_46	CALL_65
0x400adf0	      0xba05000000	                              mov edx, 5	      5733	tc-i386.c	FUNCTION_77	IF_44	IF_46	CALL_65
0x400adf5	      0xbe00000000	                              mov esi, 0	      5733	tc-i386.c	FUNCTION_77	IF_44	IF_46	CALL_65
0x400adfa	      0xbf00000000	                              mov edi, 0	      5733	tc-i386.c	FUNCTION_77	IF_44	IF_46	CALL_65
0x400adff	      0xe800000000	                          call 0x400ae04	      5733	tc-i386.c	FUNCTION_77	IF_44	IF_46	CALL_65
0x400ae04	          0x4c89e6	                            mov rsi, r12	      5733	tc-i386.c	FUNCTION_77	IF_44	IF_46	CALL_65
0x400ae07	          0x4889c7	                            mov rdi, rax	      5733	tc-i386.c	FUNCTION_77	IF_44	IF_46	CALL_65
0x400ae0a	      0xb800000000	                              mov eax, 0	      5733	tc-i386.c	FUNCTION_77	IF_44	IF_46	CALL_65
0x400ae0f	      0xe800000000	                          call 0x400ae14	      5733	tc-i386.c	FUNCTION_77	IF_44	IF_46	CALL_65
0x400ae14	          0x488b03	                    mov rax, qword [rbx]	      5738	tc-i386.c	FUNCTION_77
0x400ae17	    0x488905000000	            mov qword [0x0400ae1e], rax 	      5738	tc-i386.c	FUNCTION_77
0x400ae1e	        0x488b4308	                mov rax, qword [rbx + 8]	      5738	tc-i386.c	FUNCTION_77
0x400ae22	    0x488905000000	            mov qword [0x0400ae29], rax 	      5738	tc-i386.c	FUNCTION_77
0x400ae29	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      5738	tc-i386.c	FUNCTION_77
0x400ae2d	    0x488905000000	            mov qword [0x0400ae34], rax 	      5738	tc-i386.c	FUNCTION_77
0x400ae34	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      5738	tc-i386.c	FUNCTION_77
0x400ae38	    0x488905000000	            mov qword [0x0400ae3f], rax 	      5738	tc-i386.c	FUNCTION_77
0x400ae3f	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      5738	tc-i386.c	FUNCTION_77
0x400ae43	    0x488905000000	            mov qword [0x0400ae4a], rax 	      5738	tc-i386.c	FUNCTION_77
0x400ae4a	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      5738	tc-i386.c	FUNCTION_77
0x400ae4e	    0x488905000000	            mov qword [0x0400ae55], rax 	      5738	tc-i386.c	FUNCTION_77
0x400ae55	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      5738	tc-i386.c	FUNCTION_77
0x400ae59	    0x488905000000	            mov qword [0x0400ae60], rax 	      5738	tc-i386.c	FUNCTION_77
0x400ae60	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      5738	tc-i386.c	FUNCTION_77
0x400ae64	    0x488905000000	            mov qword [0x0400ae6b], rax 	      5738	tc-i386.c	FUNCTION_77
0x400ae6b	        0x488b4340	            mov rax, qword [rbx + 0x40] 	      5738	tc-i386.c	FUNCTION_77
0x400ae6f	    0x488905000000	            mov qword [0x0400ae76], rax 	      5738	tc-i386.c	FUNCTION_77
0x400ae76	        0x488b4348	            mov rax, qword [rbx + 0x48] 	      5738	tc-i386.c	FUNCTION_77
0x400ae7a	    0x488905000000	            mov qword [0x0400ae81], rax 	      5738	tc-i386.c	FUNCTION_77
0x400ae81	        0x488b4350	            mov rax, qword [rbx + 0x50] 	      5738	tc-i386.c	FUNCTION_77
0x400ae85	    0x488905000000	            mov qword [0x0400ae8c], rax 	      5738	tc-i386.c	FUNCTION_77
0x400ae8c	        0x488b4358	            mov rax, qword [rbx + 0x58] 	      5738	tc-i386.c	FUNCTION_77
0x400ae90	    0x488905000000	            mov qword [0x0400ae97], rax 	      5738	tc-i386.c	FUNCTION_77
0x400ae97	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      5740	tc-i386.c	FUNCTION_77	IF_47
0x400ae9a	            0x7410	                            je 0x400aeac	      5740	tc-i386.c	FUNCTION_77	IF_47
0x400ae9c	          0x4863ed	                         movsxd rbp, ebp	      5742	tc-i386.c	FUNCTION_77	IF_47
0x400ae9f	      0x488b44ec70	    mov rax, qword [rsp + rbp*8 + 0x70] 	      5742	tc-i386.c	FUNCTION_77	IF_47
0x400aea4	    0x488904ed0000	                  mov qword [rbp*8], rax	      5742	tc-i386.c	FUNCTION_77	IF_47
0x400aeac	          0x4889d8	                            mov rax, rbx	      5742	tc-i386.c	FUNCTION_77	IF_47
0x400aeaf	          0x4585ff	                         test r15d, r15d	      5744	tc-i386.c	FUNCTION_77	IF_48
0x400aeb2	            0x7422	                            je 0x400aed6	      5744	tc-i386.c	FUNCTION_77	IF_48
0x400aeb4	    0x44313d000000	            xor dword [0x0400aebb], r15d	      5750	tc-i386.c	FUNCTION_77	IF_48
0x400aebb	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      5752	tc-i386.c	FUNCTION_77	IF_48
0x400aec0	    0x488905000000	            mov qword [0x0400aec7], rax 	      5752	tc-i386.c	FUNCTION_77	IF_48
0x400aec7	      0x488b442470	            mov rax, qword [rsp + 0x70] 	      5753	tc-i386.c	FUNCTION_77	IF_48
0x400aecc	    0x488905000000	            mov qword [0x0400aed3], rax 	      5753	tc-i386.c	FUNCTION_77	IF_48
0x400aed3	          0x4889d8	                            mov rax, rbx	      5753	tc-i386.c	FUNCTION_77	IF_48
0x400aed6	    0x488bb4249800	            mov rsi, qword [rsp + 0x98] 	      5757	tc-i386.c	FUNCTION_77
0x400aede	    0x644833342528	                xor rsi, qword fs:[0x28]	      5757	tc-i386.c	FUNCTION_77
0x400aee7	     0xf84b7010000	                            je 0x400b0a4	      5757	tc-i386.c	FUNCTION_77
0x400aeed	      0xe9ad010000	                           jmp 0x400b09f	      5757	tc-i386.c	FUNCTION_77
0x400aef2	    0x48c744246000	               mov qword [rsp + 0x60], 0	        90	string3.h	FUNCTION_164	CALL_6
0x400aefb	    0xc74424680000	               mov dword [rsp + 0x68], 0	        90	string3.h	FUNCTION_164	CALL_6
0x400af03	      0xe9b3e2ffff	                           jmp 0x40091bb	        90	string3.h	FUNCTION_164	CALL_6
0x400af08	          0x4189c0	                            mov r8d, eax	      1928	tc-i386.c	FUNCTION_23
0x400af0b	    0x42f604c50000	                     test byte [r8*8], 8	      1928	tc-i386.c	FUNCTION_23
0x400af14	     0xf853fe6ffff	                           jne 0x4009559	      1928	tc-i386.c	FUNCTION_23
0x400af1a	      0xe949e6ffff	                           jmp 0x4009568	      1928	tc-i386.c	FUNCTION_23
0x400af1f	          0x4189c0	                            mov r8d, eax	      1943	tc-i386.c	FUNCTION_24
0x400af22	    0x42f604c50000	                  test byte [r8*8], 0x40	      1943	tc-i386.c	FUNCTION_24
0x400af2b	     0xf8505e7ffff	                           jne 0x4009636	      1943	tc-i386.c	FUNCTION_24
0x400af31	      0xe914e7ffff	                           jmp 0x400964a	      1943	tc-i386.c	FUNCTION_24
0x400af36	            0x89c1	                            mov ecx, eax	      1943	tc-i386.c	FUNCTION_24
0x400af38	        0x4883c10e	                            add rcx, 0xe	      1943	tc-i386.c	FUNCTION_24
0x400af3c	    0xf604cd000000	                 test byte [rcx*8], 0x40	      1943	tc-i386.c	FUNCTION_24
0x400af44	     0xf85a3e9ffff	                           jne 0x40098ed	      1943	tc-i386.c	FUNCTION_24
0x400af4a	      0xe9b4e9ffff	                           jmp 0x4009903	      1943	tc-i386.c	FUNCTION_24
0x400af4f	    0x8b0d00000000	            mov ecx, dword [0x0400af55] 	      1943	tc-i386.c	FUNCTION_24
0x400af55	    0x8b3d00000000	            mov edi, dword [0x0400af5b] 	      1943	tc-i386.c	FUNCTION_24
0x400af5b	            0x89f8	                            mov eax, edi	      1762	tc-i386.c	ELSE_3	FUNCTION_17	SWITCH_1
0x400af5d	        0x23442474	             and eax, dword [rsp + 0x74]	      1762	tc-i386.c	ELSE_3	FUNCTION_17	SWITCH_1
0x400af61	            0x89ca	                            mov edx, ecx	      1765	tc-i386.c	ELSE_3	FUNCTION_17	SWITCH_1
0x400af63	        0x23542470	             and edx, dword [rsp + 0x70]	      1765	tc-i386.c	ELSE_3	FUNCTION_17	SWITCH_1
0x400af67	          0x83fe05	                              cmp esi, 5	      5479	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3
0x400af6a	     0xf8785f2ffff	                            ja 0x400a1f5	      5479	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3
0x400af70	            0x89f6	                            mov esi, esi	      5479	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3
0x400af72	    0xff24f5000000	                       jmp qword [rsi*8]	      5479	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3
0x400af79	    0x488b35000000	            mov rsi, qword [0x0400af80] 	      5520	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_16
0x400af80	      0xe8ea52ffff	             call sym.operand_type_match	      5520	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_16
0x400af85	            0x85c0	                           test eax, eax	      5520	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_16
0x400af87	     0xf84fceeffff	                            je 0x4009e89	      5520	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_16
0x400af8d	      0xe9c2eeffff	                           jmp 0x4009e54	      5520	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	CALL_16
0x400af92	    0x488b35000000	            mov rsi, qword [0x0400af99] 	      5536	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_21
0x400af99	      0xe8d152ffff	             call sym.operand_type_match	      5536	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_21
0x400af9e	            0x85c0	                           test eax, eax	      5536	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_21
0x400afa0	     0xf84bcfaffff	                            je 0x400aa62	      5536	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_21
0x400afa6	      0xe9e1efffff	                           jmp 0x4009f8c	      5536	tc-i386.c	FUNCTION_77	FOR_1	SWITCH_3	IF_31	IF_33	CALL_21
0x400afab	        0xf6433008	               test byte [rbx + 0x30], 8	      5014	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x400afaf	     0xf85f6f2ffff	                           jne 0x400a2ab	      5014	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x400afb5	      0xe9acf5ffff	                           jmp 0x400a566	      5014	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x400afba	        0xf6433008	               test byte [rbx + 0x30], 8	      5014	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x400afbe	     0xf85e7f2ffff	                           jne 0x400a2ab	      5014	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x400afc4	      0xe90ef3ffff	                           jmp 0x400a2d7	      5014	tc-i386.c	ELSE_3	FUNCTION_75	IF_4
0x400afc9	      0xba00000000	                              mov edx, 0	      5150	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	CALL_25
0x400afce	      0xbe1e140000	                         mov esi, 0x141e	      5150	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	CALL_25
0x400afd3	      0xbf00000000	                              mov edi, 0	      5150	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	CALL_25
0x400afd8	      0xe800000000	                          call 0x400afdd	      5150	tc-i386.c	ELSE_3	FUNCTION_75	ELSE_2	IF_20	CALL_25
0x400afdd	    0x8b0500000000	            mov eax, dword [0x0400afe3] 	      5236	tc-i386.c	FUNCTION_76	IF_1
0x400afe3	          0x83f803	                              cmp eax, 3	      5236	tc-i386.c	FUNCTION_76	IF_1
0x400afe6	     0xf8581f9ffff	                           jne 0x400a96d	      5236	tc-i386.c	FUNCTION_76	IF_1
0x400afec	      0xe966f9ffff	                           jmp 0x400a957	      5236	tc-i386.c	FUNCTION_76	IF_1
0x400aff1	          0x4839c3	                            cmp rbx, rax	      5638	tc-i386.c	FUNCTION_77	IF_42
0x400aff4	     0xf8593000000	                           jne 0x400b08d	      5638	tc-i386.c	FUNCTION_77	IF_42
0x400affa	      0xe99bfaffff	                           jmp 0x400aa9a	      5638	tc-i386.c	FUNCTION_77	IF_42
0x400afff	          0x488b03	                    mov rax, qword [rbx]	      5738	tc-i386.c	FUNCTION_77
0x400b002	    0x488905000000	            mov qword [0x0400b009], rax 	      5738	tc-i386.c	FUNCTION_77
0x400b009	        0x488b4308	                mov rax, qword [rbx + 8]	      5738	tc-i386.c	FUNCTION_77
0x400b00d	    0x488905000000	            mov qword [0x0400b014], rax 	      5738	tc-i386.c	FUNCTION_77
0x400b014	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      5738	tc-i386.c	FUNCTION_77
0x400b018	    0x488905000000	            mov qword [0x0400b01f], rax 	      5738	tc-i386.c	FUNCTION_77
0x400b01f	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      5738	tc-i386.c	FUNCTION_77
0x400b023	    0x488905000000	            mov qword [0x0400b02a], rax 	      5738	tc-i386.c	FUNCTION_77
0x400b02a	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      5738	tc-i386.c	FUNCTION_77
0x400b02e	    0x488905000000	            mov qword [0x0400b035], rax 	      5738	tc-i386.c	FUNCTION_77
0x400b035	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      5738	tc-i386.c	FUNCTION_77
0x400b039	    0x488905000000	            mov qword [0x0400b040], rax 	      5738	tc-i386.c	FUNCTION_77
0x400b040	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      5738	tc-i386.c	FUNCTION_77
0x400b044	    0x488905000000	            mov qword [0x0400b04b], rax 	      5738	tc-i386.c	FUNCTION_77
0x400b04b	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      5738	tc-i386.c	FUNCTION_77
0x400b04f	    0x488905000000	            mov qword [0x0400b056], rax 	      5738	tc-i386.c	FUNCTION_77
0x400b056	        0x488b4340	            mov rax, qword [rbx + 0x40] 	      5738	tc-i386.c	FUNCTION_77
0x400b05a	    0x488905000000	            mov qword [0x0400b061], rax 	      5738	tc-i386.c	FUNCTION_77
0x400b061	        0x488b4348	            mov rax, qword [rbx + 0x48] 	      5738	tc-i386.c	FUNCTION_77
0x400b065	    0x488905000000	            mov qword [0x0400b06c], rax 	      5738	tc-i386.c	FUNCTION_77
0x400b06c	        0x488b4350	            mov rax, qword [rbx + 0x50] 	      5738	tc-i386.c	FUNCTION_77
0x400b070	    0x488905000000	            mov qword [0x0400b077], rax 	      5738	tc-i386.c	FUNCTION_77
0x400b077	        0x488b4358	            mov rax, qword [rbx + 0x58] 	      5738	tc-i386.c	FUNCTION_77
0x400b07b	    0x488905000000	            mov qword [0x0400b082], rax 	      5738	tc-i386.c	FUNCTION_77
0x400b082	    0x41bf00000000	                             mov r15d, 0	      5295	tc-i386.c	FUNCTION_77
0x400b088	      0xe91ffeffff	                           jmp 0x400aeac	      5295	tc-i386.c	FUNCTION_77
0x400b08d	    0x833d00000000	               cmp dword [0x0400b094], 0	      5719	tc-i386.c	FUNCTION_77	IF_44
0x400b094	     0xf84e8fcffff	                            je 0x400ad82	      5719	tc-i386.c	FUNCTION_77	IF_44
0x400b09a	      0xe960ffffff	                           jmp 0x400afff	      5719	tc-i386.c	FUNCTION_77	IF_44
0x400b09f	      0xe800000000	                          call 0x400b0a4	      5757	tc-i386.c	FUNCTION_77
0x400b0a4	    0x4881c4a80000	                           add rsp, 0xa8	      5757	tc-i386.c	FUNCTION_77
0x400b0ab	              0x5b	                                 pop rbx	      5757	tc-i386.c	FUNCTION_77
0x400b0ac	              0x5d	                                 pop rbp	      5757	tc-i386.c	FUNCTION_77
0x400b0ad	            0x415c	                                 pop r12	      5757	tc-i386.c	FUNCTION_77
0x400b0af	            0x415d	                                 pop r13	      5757	tc-i386.c	FUNCTION_77
0x400b0b1	            0x415e	                                 pop r14	      5757	tc-i386.c	FUNCTION_77
0x400b0b3	            0x415f	                                 pop r15	      5757	tc-i386.c	FUNCTION_77
0x400b0b5	              0xc3	                                     ret	      5757	tc-i386.c	FUNCTION_77
set_intel_syntax	functions,0:ELSE,3:FOR,0:CALL,10:SWITCH,0:WHILE,0:IF,4:DO,0	107
0x4001392	            0x4154	                                push r12	      2452	tc-i386.c	FUNCTION_44
0x4001394	              0x55	                                push rbp	      2452	tc-i386.c	FUNCTION_44
0x4001395	              0x53	                                push rbx	      2452	tc-i386.c	FUNCTION_44
0x4001396	        0x4883ec10	                           sub rsp, 0x10	      2452	tc-i386.c	FUNCTION_44
0x400139a	            0x89fb	                            mov ebx, edi	      2452	tc-i386.c	FUNCTION_44
0x400139c	    0x64488b042528	                mov rax, qword fs:[0x28]	      2452	tc-i386.c	FUNCTION_44
0x40013a5	      0x4889442408	                mov qword [rsp + 8], rax	      2452	tc-i386.c	FUNCTION_44
0x40013aa	            0x31c0	                            xor eax, eax	      2452	tc-i386.c	FUNCTION_44
0x40013ac	    0x488b05000000	            mov rax, qword [0x040013b3] 	      2456	tc-i386.c	FUNCTION_44	CALL_1
0x40013b3	          0x803820	                    cmp byte [rax], 0x20	      2456	tc-i386.c	FUNCTION_44	CALL_1
0x40013b6	            0x750b	                           jne 0x40013c3	      2456	tc-i386.c	FUNCTION_44	CALL_1
0x40013b8	        0x4883c001	                              add rax, 1	      2456	tc-i386.c	FUNCTION_44	CALL_1
0x40013bc	    0x488905000000	            mov qword [0x040013c3], rax 	      2456	tc-i386.c	FUNCTION_44	CALL_1
0x40013c3	    0x488b05000000	            mov rax, qword [0x040013ca] 	      2457	tc-i386.c	FUNCTION_44	IF_1
0x40013ca	           0xfb600	                   movzx eax, byte [rax]	      2457	tc-i386.c	FUNCTION_44	IF_1
0x40013cd	    0x80b800000000	                       cmp byte [rax], 0	      2457	tc-i386.c	FUNCTION_44	IF_1
0x40013d4	     0xf850a010000	                           jne 0x40014e4	      2457	tc-i386.c	FUNCTION_44	IF_1
0x40013da	          0x4889e7	                            mov rdi, rsp	      2460	tc-i386.c	FUNCTION_44	IF_1	CALL_2
0x40013dd	      0xe800000000	                          call 0x40013e2	      2460	tc-i386.c	FUNCTION_44	IF_1	CALL_2
0x40013e2	            0x89c5	                            mov ebp, eax	      2460	tc-i386.c	FUNCTION_44	IF_1	CALL_2
0x40013e4	        0x488b0424	                    mov rax, qword [rsp]	      2462	tc-i386.c	FUNCTION_44	IF_1	IF_2	CALL_3
0x40013e8	      0xbf00000000	                              mov edi, 0	      2462	tc-i386.c	FUNCTION_44	IF_1	IF_2	CALL_3
0x40013ed	      0xb907000000	                              mov ecx, 7	      2462	tc-i386.c	FUNCTION_44	IF_1	IF_2	CALL_3
0x40013f2	          0x4889c6	                            mov rsi, rax	      2462	tc-i386.c	FUNCTION_44	IF_1	IF_2	CALL_3
0x40013f5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2462	tc-i386.c	FUNCTION_44	IF_1	IF_2	CALL_3
0x40013f7	           0xf97c1	                                 seta cl	      2462	tc-i386.c	FUNCTION_44	IF_1	IF_2	CALL_3
0x40013fa	           0xf92c2	                                 setb dl	      2462	tc-i386.c	FUNCTION_44	IF_1	IF_2	CALL_3
0x40013fd	            0x38d1	                              cmp cl, dl	      2462	tc-i386.c	FUNCTION_44	IF_1	IF_2	CALL_3
0x40013ff	     0xf8404010000	                            je 0x4001509	      2462	tc-i386.c	FUNCTION_44	IF_1	IF_2	CALL_3
0x4001405	      0xbf00000000	                              mov edi, 0	      2464	tc-i386.c	FUNCTION_44	IF_1	ELSE_1	IF_3	CALL_4
0x400140a	      0xb909000000	                              mov ecx, 9	      2464	tc-i386.c	FUNCTION_44	IF_1	ELSE_1	IF_3	CALL_4
0x400140f	          0x4889c6	                            mov rsi, rax	      2464	tc-i386.c	FUNCTION_44	IF_1	ELSE_1	IF_3	CALL_4
0x4001412	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2464	tc-i386.c	FUNCTION_44	IF_1	ELSE_1	IF_3	CALL_4
0x4001414	           0xf97c2	                                 seta dl	      2464	tc-i386.c	FUNCTION_44	IF_1	ELSE_1	IF_3	CALL_4
0x4001417	           0xf92c0	                                 setb al	      2464	tc-i386.c	FUNCTION_44	IF_1	ELSE_1	IF_3	CALL_4
0x400141a	    0x41bcffffffff	                    mov r12d, 0xffffffff	      2465	tc-i386.c	FUNCTION_44	IF_1	ELSE_1	IF_3
0x4001420	            0x38c2	                              cmp dl, al	      2464	tc-i386.c	FUNCTION_44	IF_1	ELSE_1	IF_3	CALL_4
0x4001422	     0xf84e7000000	                            je 0x400150f	      2464	tc-i386.c	FUNCTION_44	IF_1	ELSE_1	IF_3	CALL_4
0x4001428	      0xba05000000	                              mov edx, 5	      2467	tc-i386.c	FUNCTION_44	IF_1	CALL_6
0x400142d	      0xbe00000000	                              mov esi, 0	      2467	tc-i386.c	FUNCTION_44	IF_1	CALL_6
0x4001432	      0xbf00000000	                              mov edi, 0	      2467	tc-i386.c	FUNCTION_44	IF_1	CALL_6
0x4001437	      0xe800000000	                          call 0x400143c	      2467	tc-i386.c	FUNCTION_44	IF_1	CALL_6
0x400143c	          0x4889c7	                            mov rdi, rax	      2467	tc-i386.c	FUNCTION_44	IF_1	CALL_6
0x400143f	      0xb800000000	                              mov eax, 0	      2467	tc-i386.c	FUNCTION_44	IF_1	CALL_6
0x4001444	      0xe800000000	                          call 0x4001449	      2467	tc-i386.c	FUNCTION_44	IF_1	CALL_6
0x4001449	        0x400fbefd	                          movsx edi, bpl	      2468	tc-i386.c	FUNCTION_44	IF_1	CALL_7
0x400144d	      0xe800000000	                          call 0x4001452	      2468	tc-i386.c	FUNCTION_44	IF_1	CALL_7
0x4001452	      0xe800000000	                          call 0x4001457	      2470	tc-i386.c	FUNCTION_44	CALL_8
0x4001457	    0x891d00000000	            mov dword [0x0400145d], ebx 	      2472	tc-i386.c	FUNCTION_44
0x400145d	      0xb800000000	                              mov eax, 0	      2476	tc-i386.c	FUNCTION_44	CALL_9
0x4001462	            0x85db	                           test ebx, ebx	      2476	tc-i386.c	FUNCTION_44	CALL_9
0x4001464	            0x7415	                            je 0x400147b	      2476	tc-i386.c	FUNCTION_44	CALL_9
0x4001466	    0x488b05000000	            mov rax, qword [0x0400146d] 	      2476	tc-i386.c	FUNCTION_44	CALL_9
0x400146d	        0x488b4008	                mov rax, qword [rax + 8]	      2476	tc-i386.c	FUNCTION_44	CALL_9
0x4001471	        0x80781c00	                cmp byte [rax + 0x1c], 0	      2476	tc-i386.c	FUNCTION_44	CALL_9
0x4001475	           0xf95c0	                                setne al	      2476	tc-i386.c	FUNCTION_44	CALL_9
0x4001478	           0xfb6c0	                           movzx eax, al	      2476	tc-i386.c	FUNCTION_44	CALL_9
0x400147b	    0x890500000000	            mov dword [0x04001481], eax 	      2475	tc-i386.c	FUNCTION_44	IF_4
0x4001481	          0x83fb01	                              cmp ebx, 1	      2480	tc-i386.c	FUNCTION_44	CALL_10
0x4001484	            0x19f6	                            sbb esi, esi	      2480	tc-i386.c	FUNCTION_44	CALL_10
0x4001486	            0xf7d6	                                 not esi	      2480	tc-i386.c	FUNCTION_44	CALL_10
0x4001488	          0x83e60a	                            and esi, 0xa	      2480	tc-i386.c	FUNCTION_44	CALL_10
0x400148b	      0xbf1f000000	                           mov edi, 0x1f	      2480	tc-i386.c	FUNCTION_44	CALL_10
0x4001490	      0xe800000000	                          call 0x4001495	      2480	tc-i386.c	FUNCTION_44	CALL_10
0x4001495	    0x833d00000000	               cmp dword [0x0400149c], 0	      2482	tc-i386.c	FUNCTION_44
0x400149c	     0xf8492000000	                            je 0x4001534	      2482	tc-i386.c	FUNCTION_44
0x40014a2	    0x833d00000000	               cmp dword [0x040014a9], 0	      2482	tc-i386.c	FUNCTION_44
0x40014a9	            0x7549	                           jne 0x40014f4	      2482	tc-i386.c	FUNCTION_44
0x40014ab	      0xe995000000	                           jmp 0x4001545	      2482	tc-i386.c	FUNCTION_44
0x40014b0	    0x880500000000	               mov byte [0x040014b6], al	      2483	tc-i386.c	FUNCTION_44
0x40014b6	    0x833d00000000	               cmp dword [0x040014bd], 0	      2484	tc-i386.c	FUNCTION_44
0x40014bd	      0xba00000000	                              mov edx, 0	      2484	tc-i386.c	FUNCTION_44
0x40014c2	      0xb800000000	                              mov eax, 0	      2484	tc-i386.c	FUNCTION_44
0x40014c7	        0x480f44c2	                          cmove rax, rdx	      2484	tc-i386.c	FUNCTION_44
0x40014cb	    0x488905000000	            mov qword [0x040014d2], rax 	      2484	tc-i386.c	FUNCTION_44
0x40014d2	      0x488b442408	                mov rax, qword [rsp + 8]	      2485	tc-i386.c	FUNCTION_44
0x40014d7	    0x644833042528	                xor rax, qword fs:[0x28]	      2485	tc-i386.c	FUNCTION_44
0x40014e0	            0x7479	                            je 0x400155b	      2485	tc-i386.c	FUNCTION_44
0x40014e2	            0xeb72	                           jmp 0x4001556	      2485	tc-i386.c	FUNCTION_44
0x40014e4	      0xe800000000	                          call 0x40014e9	      2470	tc-i386.c	FUNCTION_44	CALL_8
0x40014e9	    0x891d00000000	            mov dword [0x040014ef], ebx 	      2472	tc-i386.c	FUNCTION_44
0x40014ef	      0xe969ffffff	                           jmp 0x400145d	      2472	tc-i386.c	FUNCTION_44
0x40014f4	    0xc60500000000	            mov byte [0x040014fb], 0x25 	      2482	tc-i386.c	FUNCTION_44
0x40014fb	    0xc60500000000	            mov byte [0x04001502], 0x24 	      2483	tc-i386.c	FUNCTION_44
0x4001502	      0xb800000000	                              mov eax, 0	      2484	tc-i386.c	FUNCTION_44
0x4001507	            0xebc2	                           jmp 0x40014cb	      2484	tc-i386.c	FUNCTION_44
0x4001509	    0x41bc01000000	                             mov r12d, 1	      2463	tc-i386.c	FUNCTION_44	IF_1	IF_2
0x400150f	        0x400fbefd	                          movsx edi, bpl	      2468	tc-i386.c	FUNCTION_44	IF_1	CALL_7
0x4001513	      0xe800000000	                          call 0x4001518	      2468	tc-i386.c	FUNCTION_44	IF_1	CALL_7
0x4001518	      0xe800000000	                          call 0x400151d	      2470	tc-i386.c	FUNCTION_44	CALL_8
0x400151d	    0x891d00000000	            mov dword [0x04001523], ebx 	      2472	tc-i386.c	FUNCTION_44
0x4001523	          0x4489e0	                           mov eax, r12d	      2478	tc-i386.c	FUNCTION_44	ELSE_3
0x4001526	          0xc1e81f	                           shr eax, 0x1f	      2478	tc-i386.c	FUNCTION_44	ELSE_3
0x4001529	    0x890500000000	            mov dword [0x0400152f], eax 	      2478	tc-i386.c	FUNCTION_44	ELSE_3
0x400152f	      0xe94dffffff	                           jmp 0x4001481	      2478	tc-i386.c	FUNCTION_44	ELSE_3
0x4001534	    0xc60500000000	                mov byte [0x0400153b], 0	      2482	tc-i386.c	FUNCTION_44
0x400153b	      0xb800000000	                              mov eax, 0	      2483	tc-i386.c	FUNCTION_44
0x4001540	      0xe96bffffff	                           jmp 0x40014b0	      2483	tc-i386.c	FUNCTION_44
0x4001545	    0xc60500000000	                mov byte [0x0400154c], 0	      2482	tc-i386.c	FUNCTION_44
0x400154c	      0xb824000000	                           mov eax, 0x24	      2483	tc-i386.c	FUNCTION_44
0x4001551	      0xe95affffff	                           jmp 0x40014b0	      2483	tc-i386.c	FUNCTION_44
0x4001556	      0xe800000000	                          call 0x400155b	      2485	tc-i386.c	FUNCTION_44
0x400155b	        0x4883c410	                           add rsp, 0x10	      2485	tc-i386.c	FUNCTION_44
0x400155f	              0x5b	                                 pop rbx	      2485	tc-i386.c	FUNCTION_44
0x4001560	              0x5d	                                 pop rbp	      2485	tc-i386.c	FUNCTION_44
0x4001561	            0x415c	                                 pop r12	      2485	tc-i386.c	FUNCTION_44
0x4001563	              0xc3	                                     ret	      2485	tc-i386.c	FUNCTION_44
i386_finalize_immediate	functions,0:ELSE,4:FOR,0:CALL,8:SWITCH,0:WHILE,0:IF,7:DO,0	70
0x400112a	              0x55	                                push rbp	      8701	tc-i386.c	FUNCTION_104
0x400112b	              0x53	                                push rbx	      8701	tc-i386.c	FUNCTION_104
0x400112c	        0x4883ec08	                              sub rsp, 8	      8701	tc-i386.c	FUNCTION_104
0x4001130	          0x4889cd	                            mov rbp, rcx	      8701	tc-i386.c	FUNCTION_104
0x4001133	         0xfb64618	           movzx eax, byte [rsi + 0x18] 	      8702	tc-i386.c	FUNCTION_104	IF_1
0x4001137	            0x3c01	                               cmp al, 1	      8702	tc-i386.c	FUNCTION_104	IF_1
0x4001139	            0x7604	                           jbe 0x400113f	      8702	tc-i386.c	FUNCTION_104	IF_1
0x400113b	            0x3c06	                               cmp al, 6	      8702	tc-i386.c	FUNCTION_104	IF_1
0x400113d	            0x7537	                           jne 0x4001176	      8702	tc-i386.c	FUNCTION_104	IF_1
0x400113f	      0xbb00000000	                              mov ebx, 0	      8707	tc-i386.c	FUNCTION_104	IF_1
0x4001144	          0x4885ed	                           test rbp, rbp	      8704	tc-i386.c	FUNCTION_104	IF_1	IF_2
0x4001147	     0xf84ed000000	                            je 0x400123a	      8704	tc-i386.c	FUNCTION_104	IF_1	IF_2
0x400114d	      0xba05000000	                              mov edx, 5	      8705	tc-i386.c	FUNCTION_104	IF_1	IF_2	CALL_2
0x4001152	      0xbe00000000	                              mov esi, 0	      8705	tc-i386.c	FUNCTION_104	IF_1	IF_2	CALL_2
0x4001157	      0xbf00000000	                              mov edi, 0	      8705	tc-i386.c	FUNCTION_104	IF_1	IF_2	CALL_2
0x400115c	      0xe800000000	                          call 0x4001161	      8705	tc-i386.c	FUNCTION_104	IF_1	IF_2	CALL_2
0x4001161	          0x4889ee	                            mov rsi, rbp	      8705	tc-i386.c	FUNCTION_104	IF_1	IF_2	CALL_2
0x4001164	          0x4889c7	                            mov rdi, rax	      8705	tc-i386.c	FUNCTION_104	IF_1	IF_2	CALL_2
0x4001167	      0xb800000000	                              mov eax, 0	      8705	tc-i386.c	FUNCTION_104	IF_1	IF_2	CALL_2
0x400116c	      0xe800000000	                          call 0x4001171	      8705	tc-i386.c	FUNCTION_104	IF_1	IF_2	CALL_2
0x4001171	      0xe9c4000000	                           jmp 0x400123a	      8705	tc-i386.c	FUNCTION_104	IF_1	IF_2	CALL_2
0x4001176	            0x3c02	                               cmp al, 2	      8709	tc-i386.c	FUNCTION_104	ELSE_1	IF_3
0x4001178	            0x754c	                           jne 0x40011c6	      8709	tc-i386.c	FUNCTION_104	ELSE_1	IF_3
0x400117a	    0x486305000000	         movsxd rax, dword [0x04001181] 	      8712	tc-i386.c	FUNCTION_104	ELSE_1	IF_3
0x4001181	    0x800cc5000000	                   or byte [rax*8], 0x80	      8712	tc-i386.c	FUNCTION_104	ELSE_1	IF_3
0x4001189	    0x833d00000000	               cmp dword [0x04001190], 2	      8714	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x4001190	     0xf849f000000	                            je 0x4001235	      8714	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x4001196	        0x488b5610	            mov rdx, qword [rsi + 0x10] 	      8715	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x400119a	      0xbb01000000	                              mov ebx, 1	      8752	tc-i386.c	FUNCTION_104
0x400119f	    0x48b800000000	          movabs rax, 0xffffffff00000000	      8715	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x40011a9	          0x4885c2	                           test rdx, rax	      8715	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x40011ac	     0xf8588000000	                           jne 0x400123a	      8715	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x40011b2	      0xb800000080	                     mov eax, 0x80000000	      8717	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x40011b7	          0x4831d0	                            xor rax, rdx	      8717	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x40011ba	    0x480500000080	             add rax, 0xffffffff80000000	      8717	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x40011c0	        0x48894610	             mov qword [rsi + 0x10], rax	      8717	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x40011c4	            0xeb74	                           jmp 0x400123a	      8717	tc-i386.c	FUNCTION_104	ELSE_1	IF_3	IF_4
0x40011c6	    0x8b1d00000000	            mov ebx, dword [0x040011cc] 	      8732	tc-i386.c	FUNCTION_104	ELSE_3	IF_6
0x40011cc	            0x85db	                           test ebx, ebx	      8732	tc-i386.c	FUNCTION_104	ELSE_3	IF_6
0x40011ce	            0x7534	                           jne 0x4001204	      8732	tc-i386.c	FUNCTION_104	ELSE_3	IF_6
0x40011d0	    0x48393d000000	            cmp qword [0x040011d7], rdi 	      8732	tc-i386.c	FUNCTION_104	ELSE_3	IF_6
0x40011d7	            0x752b	                           jne 0x4001204	      8732	tc-i386.c	FUNCTION_104	ELSE_3	IF_6
0x40011d9	          0x4885c9	                           test rcx, rcx	      8734	tc-i386.c	FUNCTION_104	ELSE_3	IF_6	IF_7
0x40011dc	            0x745c	                            je 0x400123a	      8734	tc-i386.c	FUNCTION_104	ELSE_3	IF_6	IF_7
0x40011de	      0xba05000000	                              mov edx, 5	      8735	tc-i386.c	FUNCTION_104	ELSE_3	IF_6	CALL_7
0x40011e3	      0xbe00000000	                              mov esi, 0	      8735	tc-i386.c	FUNCTION_104	ELSE_3	IF_6	CALL_7
0x40011e8	      0xbf00000000	                              mov edi, 0	      8735	tc-i386.c	FUNCTION_104	ELSE_3	IF_6	CALL_7
0x40011ed	      0xe800000000	                          call 0x40011f2	      8735	tc-i386.c	FUNCTION_104	ELSE_3	IF_6	CALL_7
0x40011f2	          0x4889ee	                            mov rsi, rbp	      8735	tc-i386.c	FUNCTION_104	ELSE_3	IF_6	CALL_7
0x40011f5	          0x4889c7	                            mov rdi, rax	      8735	tc-i386.c	FUNCTION_104	ELSE_3	IF_6	CALL_7
0x40011f8	      0xb800000000	                              mov eax, 0	      8735	tc-i386.c	FUNCTION_104	ELSE_3	IF_6	CALL_7
0x40011fd	      0xe800000000	                          call 0x4001202	      8735	tc-i386.c	FUNCTION_104	ELSE_3	IF_6	CALL_7
0x4001202	            0xeb36	                           jmp 0x400123a	      8735	tc-i386.c	FUNCTION_104	ELSE_3	IF_6	CALL_7
0x4001204	    0x486305000000	         movsxd rax, dword [0x0400120b] 	      8743	tc-i386.c	FUNCTION_104	ELSE_4
0x400120b	        0x4883c00e	                            add rax, 0xe	      8743	tc-i386.c	FUNCTION_104	ELSE_4
0x400120f	    0x800cc5000000	                   or byte [rax*8], 0xf4	      8747	tc-i386.c	FUNCTION_104	ELSE_4
0x4001217	    0x488d04c50000	                        lea rax, [rax*8]	      8747	tc-i386.c	FUNCTION_104	ELSE_4
0x400121f	          0x4889d1	                            mov rcx, rdx	      8747	tc-i386.c	FUNCTION_104	ELSE_4
0x4001222	        0x48c1e920	                           shr rcx, 0x20	      8747	tc-i386.c	FUNCTION_104	ELSE_4
0x4001226	          0x234804	                and ecx, dword [rax + 4]	      1762	tc-i386.c	ELSE_3	FUNCTION_17	SWITCH_1
0x4001229	            0x2110	                    and dword [rax], edx	      8748	tc-i386.c	FUNCTION_104	ELSE_4	CALL_8
0x400122b	          0x894804	                mov dword [rax + 4], ecx	      8748	tc-i386.c	FUNCTION_104	ELSE_4	CALL_8
0x400122e	      0xbb01000000	                              mov ebx, 1	      8752	tc-i386.c	FUNCTION_104
0x4001233	            0xeb05	                           jmp 0x400123a	      8752	tc-i386.c	FUNCTION_104
0x4001235	      0xbb01000000	                              mov ebx, 1	      8752	tc-i386.c	FUNCTION_104
0x400123a	            0x89d8	                            mov eax, ebx	      8753	tc-i386.c	FUNCTION_104
0x400123c	        0x4883c408	                              add rsp, 8	      8753	tc-i386.c	FUNCTION_104
0x4001240	              0x5b	                                 pop rbx	      8753	tc-i386.c	FUNCTION_104
0x4001241	              0x5d	                                 pop rbp	      8753	tc-i386.c	FUNCTION_104
0x4001242	              0xc3	                                     ret	      8753	tc-i386.c	FUNCTION_104
i386_frag_max_var	functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0:IF,0:DO,0	13
0x400e7f4	        0x837f5c07	               cmp dword [rdi + 0x5c], 7	      9678	tc-i386.c	FUNCTION_113	CALL_1
0x400e7f8	            0x7418	                            je 0x400e812	      9678	tc-i386.c	FUNCTION_113	CALL_1
0x400e7fa	        0x4883ec08	                              sub rsp, 8	      9675	tc-i386.c	FUNCTION_113
0x400e7fe	      0xba00000000	                              mov edx, 0	      9678	tc-i386.c	FUNCTION_113	CALL_1
0x400e803	      0xbece250000	                         mov esi, 0x25ce	      9678	tc-i386.c	FUNCTION_113	CALL_1
0x400e808	      0xbf00000000	                              mov edi, 0	      9678	tc-i386.c	FUNCTION_113	CALL_1
0x400e80d	      0xe800000000	                          call 0x400e812	      9678	tc-i386.c	FUNCTION_113	CALL_1
0x400e812	          0x8b4760	            mov eax, dword [rdi + 0x60] 	      9679	tc-i386.c	FUNCTION_113
0x400e815	          0xc1e802	                              shr eax, 2	      9679	tc-i386.c	FUNCTION_113
0x400e818	          0x83f801	                              cmp eax, 1	      9679	tc-i386.c	FUNCTION_113
0x400e81b	            0x19c0	                            sbb eax, eax	      9679	tc-i386.c	FUNCTION_113
0x400e81d	          0x83c005	                              add eax, 5	      9679	tc-i386.c	FUNCTION_113
0x400e820	              0xc3	                                     ret	      9680	tc-i386.c	FUNCTION_113
set_intel_mnemonic	functions,0:ELSE,0:FOR,0:CALL,0:SWITCH,0:WHILE,0:IF,0:DO,0	2
0x40004ba	    0x893d00000000	            mov dword [0x040004c0], edi 	      2490	tc-i386.c	FUNCTION_45
0x40004c0	              0xc3	                                     ret	      2490	tc-i386.c	FUNCTION_45
i386_need_index_operator	functions,0:ELSE,0:FOR,0:CALL,0:SWITCH,0:WHILE,0:IF,0:DO,0	3
0x4010fd2	    0x8b0500000000	            mov eax, dword [0x04010fd8] 	       543	tc-i386-intel.c	FUNCTION_180
0x4010fd8	          0xc1e81f	                           shr eax, 0x1f	       543	tc-i386-intel.c	FUNCTION_180
0x4010fdb	              0xc3	                                     ret	       544	tc-i386-intel.c	FUNCTION_180
signed_cons	functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0:IF,1:DO,0	8
0x4000c91	        0x4883ec08	                              sub rsp, 8	      8461	tc-i386.c	FUNCTION_100
0x4000c95	    0x833d00000000	               cmp dword [0x04000c9c], 2	      8462	tc-i386.c	FUNCTION_100	IF_1
0x4000c9c	            0x750a	                           jne 0x4000ca8	      8462	tc-i386.c	FUNCTION_100	IF_1
0x4000c9e	    0xc70500000000	               mov dword [0x04000ca8], 1	      8463	tc-i386.c	FUNCTION_100	IF_1
0x4000ca8	      0xe800000000	                          call 0x4000cad	      8464	tc-i386.c	FUNCTION_100	CALL_1
0x4000cad	    0xc70500000000	     mov dword [0x04000cb7], 0xffffffff 	      8465	tc-i386.c	FUNCTION_100
0x4000cb7	        0x4883c408	                              add rsp, 8	      8466	tc-i386.c	FUNCTION_100
0x4000cbb	              0xc3	                                     ret	      8466	tc-i386.c	FUNCTION_100
md_estimate_size_before_relax	functions,0:ELSE,3:FOR,0:CALL,10:SWITCH,1:WHILE,0:IF,6:DO,0	169
0x400e821	            0x4154	                                push r12	      9731	tc-i386.c	FUNCTION_115
0x400e823	              0x55	                                push rbp	      9731	tc-i386.c	FUNCTION_115
0x400e824	              0x53	                                push rbx	      9731	tc-i386.c	FUNCTION_115
0x400e825	          0x4889fb	                            mov rbx, rdi	      9731	tc-i386.c	FUNCTION_115
0x400e828	          0x4889f5	                            mov rbp, rsi	      9731	tc-i386.c	FUNCTION_115
0x400e82b	        0x488b7f28	            mov rdi, qword [rdi + 0x28] 	      9736	tc-i386.c	FUNCTION_115	IF_1	CALL_1
0x400e82f	      0xe800000000	                          call 0x400e834	      9736	tc-i386.c	FUNCTION_115	IF_1	CALL_1
0x400e834	          0x4839e8	                            cmp rax, rbp	      9736	tc-i386.c	FUNCTION_115	IF_1	CALL_1
0x400e837	     0xf8586000000	                           jne 0x400e8c3	      9736	tc-i386.c	FUNCTION_115	IF_1	CALL_1
0x400e83d	        0x4c8b6318	            mov r12, qword [rbx + 0x18] 	      9739	tc-i386.c	FUNCTION_115	IF_1	CALL_2
0x400e841	        0x488b6b28	            mov rbp, qword [rbx + 0x28] 	      9739	tc-i386.c	FUNCTION_115	IF_1	CALL_2
0x400e845	          0x4889ef	                            mov rdi, rbp	      9687	tc-i386.c	FUNCTION_114	IF_1	CALL_1
0x400e848	      0xe800000000	                          call 0x400e84d	      9687	tc-i386.c	FUNCTION_114	IF_1	CALL_1
0x400e84d	        0xf6401a40	           test byte [rax + 0x1a], 0x40 	      9687	tc-i386.c	FUNCTION_114	IF_1	CALL_1
0x400e851	            0x7570	                           jne 0x400e8c3	      9687	tc-i386.c	FUNCTION_114	IF_1	CALL_1
0x400e853	          0x4889ef	                            mov rdi, rbp	      9691	tc-i386.c	FUNCTION_114	IF_2	CALL_2
0x400e856	      0xe800000000	                          call 0x400e85b	      9691	tc-i386.c	FUNCTION_114	IF_2	CALL_2
0x400e85b	            0x85c0	                           test eax, eax	      9691	tc-i386.c	FUNCTION_114	IF_2	CALL_2
0x400e85d	            0x7512	                           jne 0x400e871	      9691	tc-i386.c	FUNCTION_114	IF_2	CALL_2
0x400e85f	          0x4889ef	                            mov rdi, rbp	      9693	tc-i386.c	FUNCTION_114	CALL_3
0x400e862	      0xe800000000	                          call 0x400e867	      9693	tc-i386.c	FUNCTION_114	CALL_3
0x400e867	            0x85c0	                           test eax, eax	      9693	tc-i386.c	FUNCTION_114	CALL_3
0x400e869	           0xf94c0	                                 sete al	      9693	tc-i386.c	FUNCTION_114	CALL_3
0x400e86c	           0xfb6c0	                           movzx eax, al	      9693	tc-i386.c	FUNCTION_114	CALL_3
0x400e86f	            0xeb4a	                           jmp 0x400e8bb	      9693	tc-i386.c	FUNCTION_114	CALL_3
0x400e871	          0x4889ef	                            mov rdi, rbp	      9696	tc-i386.c	FUNCTION_114	IF_3	CALL_5
0x400e874	      0xe800000000	                          call 0x400e879	      9696	tc-i386.c	FUNCTION_114	IF_3	CALL_5
0x400e879	          0x83e003	                              and eax, 3	      9696	tc-i386.c	FUNCTION_114	IF_3	CALL_5
0x400e87c	     0xf85d4010000	                           jne 0x400ea56	      9696	tc-i386.c	FUNCTION_114	IF_3	CALL_5
0x400e882	        0x4983fc47	                           cmp r12, 0x47	      9699	tc-i386.c	FUNCTION_114	IF_4
0x400e886	            0x7426	                            je 0x400e8ae	      9699	tc-i386.c	FUNCTION_114	IF_4
0x400e888	    0x4181fc650100	                         cmp r12d, 0x165	      9700	tc-i386.c	FUNCTION_114	IF_4	SWITCH_1
0x400e88f	            0x742a	                            je 0x400e8bb	      9700	tc-i386.c	FUNCTION_114	IF_4	SWITCH_1
0x400e891	    0x4181fc7e0100	                         cmp r12d, 0x17e	      9700	tc-i386.c	FUNCTION_114	IF_4	SWITCH_1
0x400e898	            0x7421	                            je 0x400e8bb	      9700	tc-i386.c	FUNCTION_114	IF_4	SWITCH_1
0x400e89a	      0xba00000000	                              mov edx, 0	      9707	tc-i386.c	FUNCTION_114	IF_4	SWITCH_1	CALL_6
0x400e89f	      0xbeeb250000	                         mov esi, 0x25eb	      9707	tc-i386.c	FUNCTION_114	IF_4	SWITCH_1	CALL_6
0x400e8a4	      0xbf00000000	                              mov edi, 0	      9707	tc-i386.c	FUNCTION_114	IF_4	SWITCH_1	CALL_6
0x400e8a9	      0xe800000000	                          call 0x400e8ae	      9707	tc-i386.c	FUNCTION_114	IF_4	SWITCH_1	CALL_6
0x400e8ae	    0x833d00000000	               cmp dword [0x0400e8b5], 0	      9712	tc-i386.c	FUNCTION_114
0x400e8b5	           0xf94c0	                                 sete al	      9712	tc-i386.c	FUNCTION_114
0x400e8b8	           0xfb6c0	                           movzx eax, al	      9712	tc-i386.c	FUNCTION_114
0x400e8bb	            0x85c0	                           test eax, eax	      9738	tc-i386.c	FUNCTION_115	IF_1
0x400e8bd	     0xf8593010000	                           jne 0x400ea56	      9738	tc-i386.c	FUNCTION_115	IF_1
0x400e8c3	        0xf6436001	               test byte [rbx + 0x60], 1	      9750	tc-i386.c	FUNCTION_115	IF_1
0x400e8c7	     0xf85b2010000	                           jne 0x400ea7f	      9750	tc-i386.c	FUNCTION_115	IF_1
0x400e8cd	      0xe995010000	                           jmp 0x400ea67	      9750	tc-i386.c	FUNCTION_115	IF_1
0x400e8d2	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      9760	tc-i386.c	FUNCTION_115	IF_1	ELSE_2	IF_4	CALL_4
0x400e8d6	      0xe80578ffff	                   call sym.need_plt32_p	      9760	tc-i386.c	FUNCTION_115	IF_1	ELSE_2	IF_4	CALL_4
0x400e8db	      0xba04000000	                              mov edx, 4	      9750	tc-i386.c	FUNCTION_115	IF_1
0x400e8e0	          0x83f801	                              cmp eax, 1	      9750	tc-i386.c	FUNCTION_115	IF_1
0x400e8e3	            0x19c0	                            sbb eax, eax	      9750	tc-i386.c	FUNCTION_115	IF_1
0x400e8e5	      0x258bfeffff	                     and eax, 0xfffffe8b	      9750	tc-i386.c	FUNCTION_115	IF_1
0x400e8ea	       0x57e010000	                          add eax, 0x17e	      9750	tc-i386.c	FUNCTION_115	IF_1
0x400e8ef	        0x488b6b10	            mov rbp, qword [rbx + 0x10] 	      9766	tc-i386.c	FUNCTION_115	IF_1
0x400e8f3	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      9767	tc-i386.c	FUNCTION_115	IF_1
0x400e8f7	        0x448b6360	           mov r12d, dword [rbx + 0x60] 	      9769	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e8fb	          0x4489e1	                           mov ecx, r12d	      9769	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e8fe	          0xc1e902	                              shr ecx, 2	      9769	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e901	          0x83f901	                              cmp ecx, 1	      9769	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e904	     0xf8490000000	                            je 0x400e99a	      9769	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e90a	          0x83f901	                              cmp ecx, 1	      9769	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e90d	            0x720a	                            jb 0x400e919	      9769	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e90f	          0x83f902	                              cmp ecx, 2	      9769	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e912	            0x7435	                            je 0x400e949	      9769	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e914	      0xe9ff000000	                           jmp 0x400ea18	      9769	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e919	          0xc606e9	                    mov byte [rsi], 0xe9	      9773	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e91c	          0x4863ca	                         movsxd rcx, edx	      9774	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e91f	        0x48014b10	            add qword [rbx + 0x10], rcx 	      9774	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e923	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9775	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_5
0x400e927	        0x4883ec08	                              sub rsp, 8	      9775	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_5
0x400e92b	              0x50	                                push rax	      9775	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_5
0x400e92c	    0x41b901000000	                              mov r9d, 1	      9775	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_5
0x400e932	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	      9775	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_5
0x400e936	            0x89ee	                            mov esi, ebp	      9775	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_5
0x400e938	          0x4889df	                            mov rdi, rbx	      9775	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_5
0x400e93b	      0xe800000000	                          call 0x400e940	      9775	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_5
0x400e940	        0x4883c410	                           add rsp, 0x10	      9779	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e944	      0xe9fd000000	                           jmp 0x400ea46	      9779	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e949	          0x83fa02	                              cmp edx, 2	      9782	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x400e94c	            0x754c	                           jne 0x400e99a	      9782	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x400e94e	    0x833d00000000	               cmp dword [0x0400e955], 0	      9783	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x400e955	            0x7407	                            je 0x400e95e	      9783	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x400e957	      0x48837b1847	           cmp qword [rbx + 0x18], 0x47 	      9783	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x400e95c	            0x744c	                            je 0x400e9aa	      9783	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x400e95e	          0x803601	                       xor byte [rsi], 1	      9787	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x400e961	        0xc6460103	                   mov byte [rsi + 1], 3	      9788	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x400e965	        0xc64602e9	                mov byte [rsi + 2], 0xe9	      9790	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x400e969	      0x4883431004	               add qword [rbx + 0x10], 4	      9793	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x400e96e	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9794	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5	CALL_6
0x400e972	          0x8d7502	                      lea esi, [rbp + 2]	      9794	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5	CALL_6
0x400e975	        0x4883ec08	                              sub rsp, 8	      9794	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5	CALL_6
0x400e979	              0x50	                                push rax	      9794	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5	CALL_6
0x400e97a	    0x41b901000000	                              mov r9d, 1	      9794	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5	CALL_6
0x400e980	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	      9794	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5	CALL_6
0x400e984	      0xba02000000	                              mov edx, 2	      9794	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5	CALL_6
0x400e989	          0x4889df	                            mov rdi, rbx	      9794	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5	CALL_6
0x400e98c	      0xe800000000	                          call 0x400e991	      9794	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5	CALL_6
0x400e991	        0x4883c410	                           add rsp, 0x10	      9798	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x400e995	      0xe9ac000000	                           jmp 0x400ea46	      9798	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_5
0x400e99a	    0x833d00000000	               cmp dword [0x0400e9a1], 0	      9803	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x400e9a1	            0x743b	                            je 0x400e9de	      9803	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x400e9a3	      0x48837b1847	           cmp qword [rbx + 0x18], 0x47 	      9803	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x400e9a8	            0x7534	                           jne 0x400e9de	      9803	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x400e9aa	        0x488d4501	                      lea rax, [rbp + 1]	      9807	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x400e9ae	        0x48894310	             mov qword [rbx + 0x10], rax	      9807	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x400e9b2	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9808	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6	CALL_7
0x400e9b6	        0x4883ec08	                              sub rsp, 8	      9808	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6	CALL_7
0x400e9ba	            0x6a0d	                                push 0xd	      9808	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6	CALL_7
0x400e9bc	    0x41b901000000	                              mov r9d, 1	      9808	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6	CALL_7
0x400e9c2	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	      9808	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6	CALL_7
0x400e9c6	      0xba01000000	                              mov edx, 1	      9808	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6	CALL_7
0x400e9cb	            0x89ee	                            mov esi, ebp	      9808	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6	CALL_7
0x400e9cd	          0x4889df	                            mov rdi, rbx	      9808	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6	CALL_7
0x400e9d0	      0xe800000000	                          call 0x400e9d5	      9808	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6	CALL_7
0x400e9d5	          0x800880	                     or byte [rax], 0x80	      9812	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x400e9d8	        0x4883c410	                           add rsp, 0x10	      9813	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x400e9dc	            0xeb68	                           jmp 0x400ea46	      9813	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	IF_6
0x400e9de	           0xfb63e	                   movzx edi, byte [rsi]	      9818	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e9e1	          0x8d4f10	                   lea ecx, [rdi + 0x10]	      9818	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e9e4	          0x884e01	                  mov byte [rsi + 1], cl	      9818	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e9e7	          0xc6060f	                     mov byte [rsi], 0xf	      9819	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e9ea	          0x8d4a01	                      lea ecx, [rdx + 1]	      9821	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e9ed	          0x4863c9	                         movsxd rcx, ecx	      9821	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e9f0	        0x48014b10	            add qword [rbx + 0x10], rcx 	      9821	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400e9f4	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      9822	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_8
0x400e9f8	          0x8d7501	                      lea esi, [rbp + 1]	      9822	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_8
0x400e9fb	        0x4883ec08	                              sub rsp, 8	      9822	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_8
0x400e9ff	              0x50	                                push rax	      9822	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_8
0x400ea00	    0x41b901000000	                              mov r9d, 1	      9822	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_8
0x400ea06	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	      9822	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_8
0x400ea0a	          0x4889df	                            mov rdi, rbx	      9822	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_8
0x400ea0d	      0xe800000000	                          call 0x400ea12	      9822	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_8
0x400ea12	        0x4883c410	                           add rsp, 0x10	      9826	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400ea16	            0xeb2e	                           jmp 0x400ea46	      9826	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1
0x400ea18	      0xba05000000	                              mov edx, 5	      9829	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_9
0x400ea1d	      0xbe00000000	                              mov esi, 0	      9829	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_9
0x400ea22	      0xbf00000000	                              mov edi, 0	      9829	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_9
0x400ea27	      0xe800000000	                          call 0x400ea2c	      9829	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_9
0x400ea2c	          0x4489e6	                           mov esi, r12d	      9829	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_9
0x400ea2f	      0xb900000000	                              mov ecx, 0	      9829	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_9
0x400ea34	      0xba65260000	                         mov edx, 0x2665	      9829	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_9
0x400ea39	          0x4889c7	                            mov rdi, rax	      9829	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_9
0x400ea3c	      0xb800000000	                              mov eax, 0	      9829	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_9
0x400ea41	      0xe800000000	                          call 0x400ea46	      9829	tc-i386.c	FUNCTION_115	IF_1	SWITCH_1	CALL_9
0x400ea46	          0x4889df	                            mov rdi, rbx	      9832	tc-i386.c	FUNCTION_115	IF_1	CALL_10
0x400ea49	      0xe800000000	                          call 0x400ea4e	      9832	tc-i386.c	FUNCTION_115	IF_1	CALL_10
0x400ea4e	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      9833	tc-i386.c	FUNCTION_115	IF_1
0x400ea52	            0x29e8	                            sub eax, ebp	      9833	tc-i386.c	FUNCTION_115	IF_1
0x400ea54	            0xeb46	                           jmp 0x400ea9c	      9833	tc-i386.c	FUNCTION_115	IF_1
0x400ea56	          0x8b4360	            mov eax, dword [rbx + 0x60] 	      9842	tc-i386.c	FUNCTION_115
0x400ea59	        0x488d0440	                  lea rax, [rax + rax*2]	      9842	tc-i386.c	FUNCTION_115
0x400ea5d	     0xfb604c50000	                 movzx eax, byte [rax*8]	      9842	tc-i386.c	FUNCTION_115
0x400ea65	            0xeb35	                           jmp 0x400ea9c	      9842	tc-i386.c	FUNCTION_115
0x400ea67	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      9755	tc-i386.c	FUNCTION_115	IF_1	IF_2
0x400ea6b	      0xba04000000	                              mov edx, 4	      9750	tc-i386.c	FUNCTION_115	IF_1
0x400ea70	        0x4883f847	                           cmp rax, 0x47	      9755	tc-i386.c	FUNCTION_115	IF_1	IF_2
0x400ea74	     0xf8575feffff	                           jne 0x400e8ef	      9755	tc-i386.c	FUNCTION_115	IF_1	IF_2
0x400ea7a	      0xe953feffff	                           jmp 0x400e8d2	      9755	tc-i386.c	FUNCTION_115	IF_1	IF_2
0x400ea7f	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      9755	tc-i386.c	FUNCTION_115	IF_1	IF_2
0x400ea83	      0xba02000000	                              mov edx, 2	      9750	tc-i386.c	FUNCTION_115	IF_1
0x400ea88	        0x4883f847	                           cmp rax, 0x47	      9755	tc-i386.c	FUNCTION_115	IF_1	IF_2
0x400ea8c	     0xf855dfeffff	                           jne 0x400e8ef	      9755	tc-i386.c	FUNCTION_115	IF_1	IF_2
0x400ea92	      0xb80b000000	                            mov eax, 0xb	      9758	tc-i386.c	FUNCTION_115	IF_1	ELSE_1	IF_3
0x400ea97	      0xe953feffff	                           jmp 0x400e8ef	      9758	tc-i386.c	FUNCTION_115	IF_1	ELSE_1	IF_3
0x400ea9c	              0x5b	                                 pop rbx	      9843	tc-i386.c	FUNCTION_115
0x400ea9d	              0x5d	                                 pop rbp	      9843	tc-i386.c	FUNCTION_115
0x400ea9e	            0x415c	                                 pop r12	      9843	tc-i386.c	FUNCTION_115
0x400eaa0	              0xc3	                                     ret	      9843	tc-i386.c	FUNCTION_115
x86_cons_fix_new	functions,0:ELSE,0:FOR,0:CALL,2:SWITCH,0:WHILE,0:IF,1:DO,0	27
0x400e61a	            0x4155	                                push r13	      8111	tc-i386.c	FUNCTION_97
0x400e61c	            0x4154	                                push r12	      8111	tc-i386.c	FUNCTION_97
0x400e61e	              0x55	                                push rbp	      8111	tc-i386.c	FUNCTION_97
0x400e61f	              0x53	                                push rbx	      8111	tc-i386.c	FUNCTION_97
0x400e620	        0x4883ec08	                              sub rsp, 8	      8111	tc-i386.c	FUNCTION_97
0x400e624	          0x4889fd	                            mov rbp, rdi	      8111	tc-i386.c	FUNCTION_97
0x400e627	          0x4189f4	                           mov r12d, esi	      8111	tc-i386.c	FUNCTION_97
0x400e62a	            0x89d3	                            mov ebx, edx	      8111	tc-i386.c	FUNCTION_97
0x400e62c	          0x4989cd	                            mov r13, rcx	      8111	tc-i386.c	FUNCTION_97
0x400e62f	          0x4489c1	                            mov ecx, r8d	      8112	tc-i386.c	FUNCTION_97	CALL_1
0x400e632	    0x8b1500000000	            mov edx, dword [0x0400e638] 	      8112	tc-i386.c	FUNCTION_97	CALL_1
0x400e638	      0xbe00000000	                              mov esi, 0	      8112	tc-i386.c	FUNCTION_97	CALL_1
0x400e63d	            0x89df	                            mov edi, ebx	      8112	tc-i386.c	FUNCTION_97	CALL_1
0x400e63f	      0xe8e47affff	                          call sym.reloc	      8112	tc-i386.c	FUNCTION_97	CALL_1
0x400e644	          0x4189c1	                            mov r9d, eax	      8112	tc-i386.c	FUNCTION_97	CALL_1
0x400e647	    0x41b800000000	                              mov r8d, 0	      8122	tc-i386.c	FUNCTION_97	CALL_2
0x400e64d	          0x4c89e9	                            mov rcx, r13	      8122	tc-i386.c	FUNCTION_97	CALL_2
0x400e650	            0x89da	                            mov edx, ebx	      8122	tc-i386.c	FUNCTION_97	CALL_2
0x400e652	          0x4489e6	                           mov esi, r12d	      8122	tc-i386.c	FUNCTION_97	CALL_2
0x400e655	          0x4889ef	                            mov rdi, rbp	      8122	tc-i386.c	FUNCTION_97	CALL_2
0x400e658	      0xe800000000	                          call 0x400e65d	      8122	tc-i386.c	FUNCTION_97	CALL_2
0x400e65d	        0x4883c408	                              add rsp, 8	      8123	tc-i386.c	FUNCTION_97
0x400e661	              0x5b	                                 pop rbx	      8123	tc-i386.c	FUNCTION_97
0x400e662	              0x5d	                                 pop rbp	      8123	tc-i386.c	FUNCTION_97
0x400e663	            0x415c	                                 pop r12	      8123	tc-i386.c	FUNCTION_97
0x400e665	            0x415d	                                 pop r13	      8123	tc-i386.c	FUNCTION_97
0x400e667	              0xc3	                                     ret	      8123	tc-i386.c	FUNCTION_97
i386_intel_simplify_register	functions,0:ELSE,6:FOR,0:CALL,6:SWITCH,0:WHILE,0:IF,9:DO,0	136
0x4000eb8	        0x4883ec08	                              sub rsp, 8	       259	tc-i386-intel.c	FUNCTION_177
0x4000ebc	    0x8b0500000000	            mov eax, dword [0x04000ec2] 	       262	tc-i386-intel.c	FUNCTION_177	IF_1
0x4000ec2	            0x85c0	                           test eax, eax	       262	tc-i386-intel.c	FUNCTION_177	IF_1
0x4000ec4	            0x7809	                            js 0x4000ecf	       262	tc-i386-intel.c	FUNCTION_177	IF_1
0x4000ec6	    0x833d00000000	               cmp dword [0x04000ecd], 0	       262	tc-i386-intel.c	FUNCTION_177	IF_1
0x4000ecd	            0x742b	                            je 0x4000efa	       262	tc-i386-intel.c	FUNCTION_177	IF_1
0x4000ecf	      0xba05000000	                              mov edx, 5	       264	tc-i386-intel.c	FUNCTION_177	IF_1	CALL_2
0x4000ed4	      0xbe00000000	                              mov esi, 0	       264	tc-i386-intel.c	FUNCTION_177	IF_1	CALL_2
0x4000ed9	      0xbf00000000	                              mov edi, 0	       264	tc-i386-intel.c	FUNCTION_177	IF_1	CALL_2
0x4000ede	      0xe800000000	                          call 0x4000ee3	       264	tc-i386-intel.c	FUNCTION_177	IF_1	CALL_2
0x4000ee3	          0x4889c7	                            mov rdi, rax	       264	tc-i386-intel.c	FUNCTION_177	IF_1	CALL_2
0x4000ee6	      0xb800000000	                              mov eax, 0	       264	tc-i386-intel.c	FUNCTION_177	IF_1	CALL_2
0x4000eeb	      0xe800000000	                          call 0x4000ef0	       264	tc-i386-intel.c	FUNCTION_177	IF_1	CALL_2
0x4000ef0	      0xb800000000	                              mov eax, 0	       265	tc-i386-intel.c	FUNCTION_177	IF_1
0x4000ef5	      0xe92b020000	                           jmp 0x4001125	       265	tc-i386-intel.c	FUNCTION_177	IF_1
0x4000efa	        0x807f1805	                cmp byte [rdi + 0x18], 5	       268	tc-i386-intel.c	FUNCTION_177	IF_2
0x4000efe	            0x7505	                           jne 0x4000f05	       268	tc-i386-intel.c	FUNCTION_177	IF_2
0x4000f00	          0x8b5710	            mov edx, dword [rdi + 0x10] 	       269	tc-i386-intel.c	FUNCTION_177	IF_2
0x4000f03	            0xeb07	                           jmp 0x4000f0c	       269	tc-i386-intel.c	FUNCTION_177	IF_2
0x4000f05	         0xfb7571a	           movzx edx, word [rdi + 0x1a] 	       271	tc-i386-intel.c	FUNCTION_177	ELSE_1
0x4000f09	          0x83ea01	                              sub edx, 1	       271	tc-i386-intel.c	FUNCTION_177	ELSE_1
0x4000f0c	    0x833d00000000	               cmp dword [0x04000f13], 0	       273	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3
0x4000f13	     0xf85a9000000	                           jne 0x4000fc2	       273	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3
0x4000f19	          0x4863c8	                         movsxd rcx, eax	       275	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3	IF_4
0x4000f1c	    0x48833ccd0000	                    cmp qword [rcx*8], 0	       275	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3	IF_4
0x4000f25	            0x742b	                            je 0x4000f52	       275	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3	IF_4
0x4000f27	      0xba05000000	                              mov edx, 5	       277	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3	IF_4	CALL_4
0x4000f2c	      0xbe00000000	                              mov esi, 0	       277	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3	IF_4	CALL_4
0x4000f31	      0xbf00000000	                              mov edi, 0	       277	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3	IF_4	CALL_4
0x4000f36	      0xe800000000	                          call 0x4000f3b	       277	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3	IF_4	CALL_4
0x4000f3b	          0x4889c7	                            mov rdi, rax	       277	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3	IF_4	CALL_4
0x4000f3e	      0xb800000000	                              mov eax, 0	       277	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3	IF_4	CALL_4
0x4000f43	      0xe800000000	                          call 0x4000f48	       277	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3	IF_4	CALL_4
0x4000f48	      0xb800000000	                              mov eax, 0	       278	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3	IF_4
0x4000f4d	      0xe9d3010000	                           jmp 0x4001125	       278	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3	IF_4
0x4000f52	          0x4863ca	                         movsxd rcx, edx	       280	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3	IF_5
0x4000f55	        0x488d0c49	                  lea rcx, [rcx + rcx*2]	       280	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3	IF_5
0x4000f59	    0xf604cd000000	                    test byte [rcx*8], 1	       280	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3	IF_5
0x4000f61	            0x743c	                            je 0x4000f9f	       280	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3	IF_5
0x4000f63	          0x4863ca	                         movsxd rcx, edx	       281	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3	IF_5
0x4000f66	        0x488d0c49	                  lea rcx, [rcx + rcx*2]	       281	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3	IF_5
0x4000f6a	    0x803ccd000000	                  cmp byte [rcx*8], 0xff	       281	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3	IF_5
0x4000f72	            0x752b	                           jne 0x4000f9f	       281	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3	IF_5
0x4000f74	      0xba05000000	                              mov edx, 5	       283	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3	IF_5	CALL_6
0x4000f79	      0xbe00000000	                              mov esi, 0	       283	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3	IF_5	CALL_6
0x4000f7e	      0xbf00000000	                              mov edi, 0	       283	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3	IF_5	CALL_6
0x4000f83	      0xe800000000	                          call 0x4000f88	       283	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3	IF_5	CALL_6
0x4000f88	          0x4889c7	                            mov rdi, rax	       283	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3	IF_5	CALL_6
0x4000f8b	      0xb800000000	                              mov eax, 0	       283	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3	IF_5	CALL_6
0x4000f90	      0xe800000000	                          call 0x4000f95	       283	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3	IF_5	CALL_6
0x4000f95	      0xb800000000	                              mov eax, 0	       284	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3	IF_5
0x4000f9a	      0xe986010000	                           jmp 0x4001125	       284	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3	IF_5
0x4000f9f	            0x4898	                                    cdqe	       286	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3
0x4000fa1	          0x4863d2	                         movsxd rdx, edx	       286	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3
0x4000fa4	        0x488d1452	                  lea rdx, [rdx + rdx*2]	       286	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3
0x4000fa8	    0x488d14d50000	                        lea rdx, [rdx*8]	       286	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3
0x4000fb0	    0x488914c50000	                  mov qword [rax*8], rdx	       286	tc-i386-intel.c	FUNCTION_177	ELSE_1	IF_3
0x4000fb8	      0xb802000000	                              mov eax, 2	       316	tc-i386-intel.c	FUNCTION_177
0x4000fbd	      0xe963010000	                           jmp 0x4001125	       316	tc-i386-intel.c	FUNCTION_177
0x4000fc2	    0x48833d000000	               cmp qword [0x04000fca], 0	       288	tc-i386-intel.c	FUNCTION_177	ELSE_2	IF_6
0x4000fca	     0xf8516010000	                           jne 0x40010e6	       288	tc-i386-intel.c	FUNCTION_177	ELSE_2	IF_6
0x4000fd0	          0x4863c2	                         movsxd rax, edx	       289	tc-i386-intel.c	FUNCTION_177	ELSE_2	IF_6
0x4000fd3	        0x488d0440	                  lea rax, [rax + rax*2]	       289	tc-i386-intel.c	FUNCTION_177	ELSE_2	IF_6
0x4000fd7	    0xf604c5000000	                    test byte [rax*8], 8	       289	tc-i386-intel.c	FUNCTION_177	ELSE_2	IF_6
0x4000fdf	            0x753c	                           jne 0x400101d	       289	tc-i386-intel.c	FUNCTION_177	ELSE_2	IF_6
0x4000fe1	          0x4863c2	                         movsxd rax, edx	       290	tc-i386-intel.c	FUNCTION_177	ELSE_2	IF_6
0x4000fe4	        0x488d0440	                  lea rax, [rax + rax*2]	       290	tc-i386-intel.c	FUNCTION_177	ELSE_2	IF_6
0x4000fe8	    0xf604c5000000	                 test byte [rax*8], 0x10	       290	tc-i386-intel.c	FUNCTION_177	ELSE_2	IF_6
0x4000ff0	            0x752b	                           jne 0x400101d	       290	tc-i386-intel.c	FUNCTION_177	ELSE_2	IF_6
0x4000ff2	          0x4863c2	                         movsxd rax, edx	       291	tc-i386-intel.c	FUNCTION_177	ELSE_2	IF_6
0x4000ff5	        0x488d0440	                  lea rax, [rax + rax*2]	       291	tc-i386-intel.c	FUNCTION_177	ELSE_2	IF_6
0x4000ff9	    0xf604c5000000	                 test byte [rax*8], 0x20	       291	tc-i386-intel.c	FUNCTION_177	ELSE_2	IF_6
0x4001001	            0x751a	                           jne 0x400101d	       291	tc-i386-intel.c	FUNCTION_177	ELSE_2	IF_6
0x4001003	          0x4863c2	                         movsxd rax, edx	       292	tc-i386-intel.c	FUNCTION_177	ELSE_2	IF_6
0x4001006	        0x488d0440	                  lea rax, [rax + rax*2]	       292	tc-i386-intel.c	FUNCTION_177	ELSE_2	IF_6
0x400100a	     0xfb604c50000	                 movzx eax, byte [rax*8]	       293	tc-i386-intel.c	FUNCTION_177	ELSE_2	IF_6
0x4001012	          0x83c004	                              add eax, 4	       293	tc-i386-intel.c	FUNCTION_177	ELSE_2	IF_6
0x4001015	            0x3c01	                               cmp al, 1	       293	tc-i386-intel.c	FUNCTION_177	ELSE_2	IF_6
0x4001017	     0xf87d5000000	                            ja 0x40010f2	       293	tc-i386-intel.c	FUNCTION_177	ELSE_2	IF_6
0x400101d	          0x4863d2	                         movsxd rdx, edx	       294	tc-i386-intel.c	FUNCTION_177	ELSE_2	IF_6
0x4001020	        0x488d0452	                  lea rax, [rdx + rdx*2]	       294	tc-i386-intel.c	FUNCTION_177	ELSE_2	IF_6
0x4001024	    0x488d04c50000	                        lea rax, [rax*8]	       294	tc-i386-intel.c	FUNCTION_177	ELSE_2	IF_6
0x400102c	    0x488905000000	            mov qword [0x04001033], rax 	       294	tc-i386-intel.c	FUNCTION_177	ELSE_2	IF_6
0x4001033	      0xb802000000	                              mov eax, 2	       316	tc-i386-intel.c	FUNCTION_177
0x4001038	      0xe9e8000000	                           jmp 0x4001125	       294	tc-i386-intel.c	FUNCTION_177	ELSE_2	IF_6
0x400103d	          0x4863d2	                         movsxd rdx, edx	       296	tc-i386-intel.c	FUNCTION_177	ELSE_3	IF_7
0x4001040	        0x488d0452	                  lea rax, [rdx + rdx*2]	       296	tc-i386-intel.c	FUNCTION_177	ELSE_3	IF_7
0x4001044	    0x488d04c50000	                        lea rax, [rax*8]	       296	tc-i386-intel.c	FUNCTION_177	ELSE_3	IF_7
0x400104c	    0x488905000000	            mov qword [0x04001053], rax 	       296	tc-i386-intel.c	FUNCTION_177	ELSE_3	IF_7
0x4001053	      0xb802000000	                              mov eax, 2	       316	tc-i386-intel.c	FUNCTION_177
0x4001058	      0xe9c8000000	                           jmp 0x4001125	       296	tc-i386-intel.c	FUNCTION_177	ELSE_3	IF_7
0x400105d	    0x833d00000000	               cmp dword [0x04001064], 0	       299	tc-i386-intel.c	FUNCTION_177	ELSE_4	IF_8	IF_9
0x4001064	            0x752f	                           jne 0x4001095	       299	tc-i386-intel.c	FUNCTION_177	ELSE_4	IF_8	IF_9
0x4001066	    0x488b05000000	            mov rax, qword [0x0400106d] 	       300	tc-i386-intel.c	FUNCTION_177	ELSE_4	IF_8	IF_9
0x400106d	          0x488b00	                    mov rax, qword [rax]	       300	tc-i386-intel.c	FUNCTION_177	ELSE_4	IF_8	IF_9
0x4001070	          0x8b400c	              mov eax, dword [rax + 0xc]	       300	tc-i386-intel.c	FUNCTION_177	ELSE_4	IF_8	IF_9
0x4001073	      0x3d1b0ff300	                       cmp eax, 0xf30f1b	       300	tc-i386-intel.c	FUNCTION_177	ELSE_4	IF_8	IF_9
0x4001078	            0x741b	                            je 0x4001095	       300	tc-i386-intel.c	FUNCTION_177	ELSE_4	IF_8	IF_9
0x400107a	          0x83e0fe	                     and eax, 0xfffffffe	       301	tc-i386-intel.c	FUNCTION_177	ELSE_4	IF_8	IF_9
0x400107d	      0x3d1a0f0000	                          cmp eax, 0xf1a	       301	tc-i386-intel.c	FUNCTION_177	ELSE_4	IF_8	IF_9
0x4001082	            0x7411	                            je 0x4001095	       301	tc-i386-intel.c	FUNCTION_177	ELSE_4	IF_8	IF_9
0x4001084	          0x4863c2	                         movsxd rax, edx	       302	tc-i386-intel.c	FUNCTION_177	ELSE_4	IF_8	IF_9
0x4001087	        0x488d0440	                  lea rax, [rax + rax*2]	       302	tc-i386-intel.c	FUNCTION_177	ELSE_4	IF_8	IF_9
0x400108b	    0xf604c5000000	                 test byte [rax*8], 0x40	       302	tc-i386-intel.c	FUNCTION_177	ELSE_4	IF_8	IF_9
0x4001093	            0x741d	                            je 0x40010b2	       302	tc-i386-intel.c	FUNCTION_177	ELSE_4	IF_8	IF_9
0x4001095	          0x4863d2	                         movsxd rdx, edx	       303	tc-i386-intel.c	FUNCTION_177	ELSE_4	IF_8	IF_9
0x4001098	        0x488d0452	                  lea rax, [rdx + rdx*2]	       303	tc-i386-intel.c	FUNCTION_177	ELSE_4	IF_8	IF_9
0x400109c	    0x488d04c50000	                        lea rax, [rax*8]	       303	tc-i386-intel.c	FUNCTION_177	ELSE_4	IF_8	IF_9
0x40010a4	    0x488905000000	            mov qword [0x040010ab], rax 	       303	tc-i386-intel.c	FUNCTION_177	ELSE_4	IF_8	IF_9
0x40010ab	      0xb802000000	                              mov eax, 2	       316	tc-i386-intel.c	FUNCTION_177
0x40010b0	            0xeb73	                           jmp 0x4001125	       303	tc-i386-intel.c	FUNCTION_177	ELSE_4	IF_8	IF_9
0x40010b2	    0x48890d000000	            mov qword [0x040010b9], rcx 	       307	tc-i386-intel.c	FUNCTION_177	ELSE_4	IF_8	ELSE_5
0x40010b9	          0x4863c2	                         movsxd rax, edx	       308	tc-i386-intel.c	FUNCTION_177	ELSE_4	IF_8	ELSE_5
0x40010bc	        0x486bc018	                     imul rax, rax, 0x18	       308	tc-i386-intel.c	FUNCTION_177	ELSE_4	IF_8	ELSE_5
0x40010c0	    0x480500000000	                              add rax, 0	       308	tc-i386-intel.c	FUNCTION_177	ELSE_4	IF_8	ELSE_5
0x40010c6	    0x488905000000	            mov qword [0x040010cd], rax 	       308	tc-i386-intel.c	FUNCTION_177	ELSE_4	IF_8	ELSE_5
0x40010cd	      0xb802000000	                              mov eax, 2	       316	tc-i386-intel.c	FUNCTION_177
0x40010d2	            0xeb51	                           jmp 0x4001125	       316	tc-i386-intel.c	FUNCTION_177
0x40010d4	    0x48c705000000	               mov qword [0x040010df], 0	       314	tc-i386-intel.c	FUNCTION_177	ELSE_6
0x40010df	      0xb802000000	                              mov eax, 2	       316	tc-i386-intel.c	FUNCTION_177
0x40010e4	            0xeb3f	                           jmp 0x4001125	       316	tc-i386-intel.c	FUNCTION_177
0x40010e6	    0x48833d000000	               cmp qword [0x040010ee], 0	       295	tc-i386-intel.c	FUNCTION_177	ELSE_3	IF_7
0x40010ee	            0x75e4	                           jne 0x40010d4	       295	tc-i386-intel.c	FUNCTION_177	ELSE_3	IF_7
0x40010f0	            0xeb12	                           jmp 0x4001104	       295	tc-i386-intel.c	FUNCTION_177	ELSE_3	IF_7
0x40010f2	    0x488b0d000000	            mov rcx, qword [0x040010f9] 	       295	tc-i386-intel.c	FUNCTION_177	ELSE_3	IF_7
0x40010f9	          0x4885c9	                           test rcx, rcx	       295	tc-i386-intel.c	FUNCTION_177	ELSE_3	IF_7
0x40010fc	     0xf855bffffff	                           jne 0x400105d	       295	tc-i386-intel.c	FUNCTION_177	ELSE_3	IF_7
0x4001102	            0xeb0f	                           jmp 0x4001113	       295	tc-i386-intel.c	FUNCTION_177	ELSE_3	IF_7
0x4001104	    0x833d00000000	               cmp dword [0x0400110b], 0	       295	tc-i386-intel.c	FUNCTION_177	ELSE_3	IF_7
0x400110b	     0xf842cffffff	                            je 0x400103d	       295	tc-i386-intel.c	FUNCTION_177	ELSE_3	IF_7
0x4001111	            0xebc1	                           jmp 0x40010d4	       295	tc-i386-intel.c	FUNCTION_177	ELSE_3	IF_7
0x4001113	    0x833d00000000	               cmp dword [0x0400111a], 0	       295	tc-i386-intel.c	FUNCTION_177	ELSE_3	IF_7
0x400111a	     0xf841dffffff	                            je 0x400103d	       295	tc-i386-intel.c	FUNCTION_177	ELSE_3	IF_7
0x4001120	      0xe970ffffff	                           jmp 0x4001095	       295	tc-i386-intel.c	FUNCTION_177	ELSE_3	IF_7
0x4001125	        0x4883c408	                              add rsp, 8	       317	tc-i386-intel.c	FUNCTION_177
0x4001129	              0xc3	                                     ret	       317	tc-i386-intel.c	FUNCTION_177
set_allow_index_reg	functions,0:ELSE,0:FOR,0:CALL,0:SWITCH,0:WHILE,0:IF,0:DO,0	2
0x40004c1	    0x893d00000000	            mov dword [0x040004c7], edi 	      2496	tc-i386.c	FUNCTION_46
0x40004c7	              0xc3	                                     ret	      2496	tc-i386.c	FUNCTION_46
optimize_imm	functions,0:ELSE,5:FOR,3:CALL,10:SWITCH,3:WHILE,0:IF,12:DO,0	215
0x400161b	            0x4154	                                push r12	      4746	tc-i386.c	FUNCTION_73
0x400161d	              0x55	                                push rbp	      4746	tc-i386.c	FUNCTION_73
0x400161e	              0x53	                                push rbx	      4746	tc-i386.c	FUNCTION_73
0x400161f	        0x4883ec10	                           sub rsp, 0x10	      4746	tc-i386.c	FUNCTION_73
0x4001623	    0x64488b042528	                mov rax, qword fs:[0x28]	      4746	tc-i386.c	FUNCTION_73
0x400162c	      0x4889442408	                mov qword [rsp + 8], rax	      4746	tc-i386.c	FUNCTION_73
0x4001631	            0x31c0	                            xor eax, eax	      4746	tc-i386.c	FUNCTION_73
0x4001633	    0x440fb6050000	           movzx r8d, byte [0x0400163b] 	      4750	tc-i386.c	FUNCTION_73	IF_1
0x400163b	          0x4584c0	                           test r8b, r8b	      4750	tc-i386.c	FUNCTION_73	IF_1
0x400163e	     0xf858c000000	                           jne 0x40016d0	      4750	tc-i386.c	FUNCTION_73	IF_1
0x4001644	    0x8b0500000000	            mov eax, dword [0x0400164a] 	      4758	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1
0x400164a	    0x833d00000000	               cmp dword [0x04001651], 0	      4752	tc-i386.c	FUNCTION_73	ELSE_1	IF_2
0x4001651	            0x7537	                           jne 0x400168a	      4752	tc-i386.c	FUNCTION_73	ELSE_1	IF_2
0x4001653	            0xeb3c	                           jmp 0x4001691	      4752	tc-i386.c	FUNCTION_73	ELSE_1	IF_2
0x4001655	          0x4863d0	                         movsxd rdx, eax	      4759	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1	IF_3
0x4001658	    0xf604d5000000	                    test byte [rdx*8], 1	      4759	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1	IF_3
0x4001660	            0x7428	                            je 0x400168a	      4759	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1	IF_3
0x4001662	    0xf604d5000000	                 test byte [rdx*8], 0x20	      4759	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1	IF_3
0x400166a	            0x7546	                           jne 0x40016b2	      4759	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1	IF_3
0x400166c	    0xf604d5000000	                 test byte [rdx*8], 0x40	      4764	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_2	IF_4
0x4001674	            0x7544	                           jne 0x40016ba	      4764	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_2	IF_4
0x4001676	    0x803cd5000000	                     cmp byte [rdx*8], 0	      4769	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_3	IF_5
0x400167e	            0x7842	                            js 0x40016c2	      4769	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_3	IF_5
0x4001680	    0xf604d5000000	                    test byte [rdx*8], 2	      4774	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_4	IF_6
0x4001688	            0x7540	                           jne 0x40016ca	      4774	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_4	IF_6
0x400168a	          0x83e801	                              sub eax, 1	      4758	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1
0x400168d	            0x79c6	                           jns 0x4001655	      4758	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1
0x400168f	            0xeb3f	                           jmp 0x40016d0	      4758	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1
0x4001691	    0x833d00000000	               cmp dword [0x04001698], 1	      4780	tc-i386.c	FUNCTION_73	ELSE_5	IF_7
0x4001698	           0xf94c2	                                 sete dl	      4780	tc-i386.c	FUNCTION_73	ELSE_5	IF_7
0x400169b	    0x803d00000000	                cmp byte [0x040016a2], 0	      4780	tc-i386.c	FUNCTION_73	ELSE_5	IF_7
0x40016a2	           0xf95c0	                                setne al	      4780	tc-i386.c	FUNCTION_73	ELSE_5	IF_7
0x40016a5	            0x38c2	                              cmp dl, al	      4781	tc-i386.c	FUNCTION_73	ELSE_5	IF_7
0x40016a7	      0xb877000000	                           mov eax, 0x77	      4781	tc-i386.c	FUNCTION_73	ELSE_5	IF_7
0x40016ac	        0x440f45c0	                         cmovne r8d, eax	      4781	tc-i386.c	FUNCTION_73	ELSE_5	IF_7
0x40016b0	            0xeb1e	                           jmp 0x40016d0	      4781	tc-i386.c	FUNCTION_73	ELSE_5	IF_7
0x40016b2	    0x41b862000000	                           mov r8d, 0x62	      4761	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1	IF_3
0x40016b8	            0xeb16	                           jmp 0x40016d0	      4761	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	FOR_1	IF_3
0x40016ba	    0x41b877000000	                           mov r8d, 0x77	      4766	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_2	IF_4
0x40016c0	            0xeb0e	                           jmp 0x40016d0	      4766	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_2	IF_4
0x40016c2	    0x41b86c000000	                           mov r8d, 0x6c	      4771	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_3	IF_5
0x40016c8	            0xeb06	                           jmp 0x40016d0	      4771	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_3	IF_5
0x40016ca	    0x41b871000000	                           mov r8d, 0x71	      4776	tc-i386.c	FUNCTION_73	ELSE_1	IF_2	ELSE_4	IF_6
0x40016d0	    0x8b1500000000	            mov edx, dword [0x040016d6] 	      4783	tc-i386.c	FUNCTION_73	FOR_2
0x40016d6	    0x49bb00000000	          movabs r11, 0xffffffff00000000	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x40016e0	      0xbb00000080	                     mov ebx, 0x80000000	      2259	tc-i386.c	FUNCTION_38	ELSE_4	IF_5	CALL_6
0x40016e5	      0xbdffffffff	                     mov ebp, 0xffffffff	      2259	tc-i386.c	FUNCTION_38	ELSE_4	IF_5	CALL_6
0x40016ea	      0xe92e020000	                           jmp 0x400191d	      4783	tc-i386.c	FUNCTION_73	FOR_2
0x40016ef	          0x4863c2	                         movsxd rax, edx	      4783	tc-i386.c	FUNCTION_73	FOR_2
0x40016f2	    0xf604c5000000	                 test byte [rax*8], 0xfc	      4784	tc-i386.c	FUNCTION_73	FOR_2	IF_8	CALL_1
0x40016fa	     0xf841d020000	                            je 0x400191d	      4784	tc-i386.c	FUNCTION_73	FOR_2	IF_8	CALL_1
0x4001700	    0x488b0cc50000	                  mov rcx, qword [rax*8]	      4786	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1
0x4001708	         0xfb64118	           movzx eax, byte [rcx + 0x18] 	      4786	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1
0x400170c	            0x3c02	                               cmp al, 2	      4786	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1
0x400170e	            0x7415	                            je 0x4001725	      4786	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1
0x4001710	            0x3c05	                               cmp al, 5	      4786	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1
0x4001712	     0xf844b010000	                            je 0x4001863	      4786	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1
0x4001718	            0x3c01	                               cmp al, 1	      4786	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1
0x400171a	     0xf8557010000	                           jne 0x4001877	      4786	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1
0x4001720	      0xe93e010000	                           jmp 0x4001863	      4786	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1
0x4001725	        0x4180f86c	                           cmp r8b, 0x6c	      4790	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4001729	            0x740e	                            je 0x4001739	      4790	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400172b	        0x4180f877	                           cmp r8b, 0x77	      4790	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400172f	            0x7415	                            je 0x4001746	      4790	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4001731	        0x4180f862	                           cmp r8b, 0x62	      4790	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4001735	            0x7527	                           jne 0x400175e	      4790	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4001737	            0xeb1a	                           jmp 0x4001753	      4790	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4001739	          0x4863c2	                         movsxd rax, edx	      4793	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400173c	    0x800cc5000000	                   or byte [rax*8], 0xa0	      4794	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4001744	            0xeb18	                           jmp 0x400175e	      4795	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4001746	          0x4863c2	                         movsxd rax, edx	      4797	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4001749	    0x800cc5000000	                   or byte [rax*8], 0xf0	      4800	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4001751	            0xeb0b	                           jmp 0x400175e	      4801	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4001753	          0x4863c2	                         movsxd rax, edx	      4803	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x4001756	    0x800cc5000000	                   or byte [rax*8], 0xfc	      4808	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_2
0x400175e	          0x4863c2	                         movsxd rax, edx	      4817	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x4001761	    0xf604c5000000	                 test byte [rax*8], 0x10	      4817	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x4001769	            0x7414	                            je 0x400177f	      4817	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x400176b	        0x488b4110	            mov rax, qword [rcx + 0x10] 	      4818	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x400176f	    0x48a90000ffff	            test rax, 0xffffffffffff0000	      4818	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x4001775	            0x7508	                           jne 0x400177f	      4818	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x4001777	        0x480fbfc0	                           movsx rax, ax	      4820	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x400177b	        0x48894110	             mov qword [rcx + 0x10], rax	      4820	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_9
0x400177f	          0x4863c2	                         movsxd rax, edx	      4825	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x4001782	    0xf604c5000000	                 test byte [rax*8], 0x20	      4825	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x400178a	            0x741e	                            je 0x40017aa	      4825	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x400178c	    0x488b0cc50000	                  mov rcx, qword [rax*8]	      4826	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x4001794	        0x488b4110	            mov rax, qword [rcx + 0x10] 	      4826	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x4001798	          0x4c85d8	                           test rax, r11	      4826	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x400179b	            0x750d	                           jne 0x40017aa	      4826	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x400179d	          0x4831d8	                            xor rax, rbx	      4829	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x40017a0	    0x480500000080	             add rax, 0xffffffff80000000	      4829	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x40017a6	        0x48894110	             mov qword [rcx + 0x10], rax	      4829	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_10
0x40017aa	          0x4863c2	                         movsxd rax, edx	      4836	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_3
0x40017ad	    0x488b04c50000	                  mov rax, qword [rax*8]	      4835	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_2
0x40017b5	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      4835	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_2
0x40017b9	          0x4d21da	                            and r10, r11	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x40017bc	          0x4c89d0	                            mov rax, r10	      2222	tc-i386.c	FUNCTION_38
0x40017bf	          0x80cc80	                             or ah, 0x80	      2222	tc-i386.c	FUNCTION_38
0x40017c2	          0x4989c2	                            mov r10, rax	      2222	tc-i386.c	FUNCTION_38
0x40017c5	    0x833d00000000	               cmp dword [0x040017cc], 2	      2224	tc-i386.c	FUNCTION_38	IF_1
0x40017cc	            0x740e	                            je 0x40017dc	      2224	tc-i386.c	FUNCTION_38	IF_1
0x40017ce	        0x4883f901	                              cmp rcx, 1	      2224	tc-i386.c	FUNCTION_38	IF_1
0x40017d2	            0x7508	                           jne 0x40017dc	      2224	tc-i386.c	FUNCTION_38	IF_1
0x40017d4	          0x80cc7e	                             or ah, 0x7e	      2236	tc-i386.c	FUNCTION_38	IF_1
0x40017d7	          0x4989c2	                            mov r10, rax	      2236	tc-i386.c	FUNCTION_38	IF_1
0x40017da	            0xeb65	                           jmp 0x4001841	      2236	tc-i386.c	FUNCTION_38	IF_1
0x40017dc	    0x488db1800000	                   lea rsi, [rcx + 0x80]	      2238	tc-i386.c	FUNCTION_38	ELSE_1	IF_2	CALL_2
0x40017e3	    0x4881feff0000	                           cmp rsi, 0xff	      2238	tc-i386.c	FUNCTION_38	ELSE_1	IF_2	CALL_2
0x40017ea	            0x7708	                            ja 0x40017f4	      2238	tc-i386.c	FUNCTION_38	ELSE_1	IF_2	CALL_2
0x40017ec	          0x80cc7c	                             or ah, 0x7c	      2244	tc-i386.c	FUNCTION_38	ELSE_1	IF_2
0x40017ef	          0x4989c2	                            mov r10, rax	      2244	tc-i386.c	FUNCTION_38	ELSE_1	IF_2
0x40017f2	            0xeb4d	                           jmp 0x4001841	      2244	tc-i386.c	FUNCTION_38	ELSE_1	IF_2
0x40017f4	    0x4881f9ff0000	                           cmp rcx, 0xff	      2246	tc-i386.c	FUNCTION_38	ELSE_2	IF_3	CALL_3
0x40017fb	            0x7708	                            ja 0x4001805	      2246	tc-i386.c	FUNCTION_38	ELSE_2	IF_3	CALL_3
0x40017fd	          0x80cc74	                             or ah, 0x74	      2251	tc-i386.c	FUNCTION_38	ELSE_2	IF_3
0x4001800	          0x4989c2	                            mov r10, rax	      2251	tc-i386.c	FUNCTION_38	ELSE_2	IF_3
0x4001803	            0xeb3c	                           jmp 0x4001841	      2251	tc-i386.c	FUNCTION_38	ELSE_2	IF_3
0x4001805	    0x488db1008000	                 lea rsi, [rcx + 0x8000]	      2253	tc-i386.c	FUNCTION_38	ELSE_3	IF_4	CALL_5
0x400180c	    0x4881feffff00	                         cmp rsi, 0xffff	      2253	tc-i386.c	FUNCTION_38	ELSE_3	IF_4	CALL_5
0x4001813	            0x7609	                           jbe 0x400181e	      2253	tc-i386.c	FUNCTION_38	ELSE_3	IF_4	CALL_5
0x4001815	    0x4881f9ffff00	                         cmp rcx, 0xffff	      2253	tc-i386.c	FUNCTION_38	ELSE_3	IF_4	CALL_5
0x400181c	            0x7708	                            ja 0x4001826	      2253	tc-i386.c	FUNCTION_38	ELSE_3	IF_4	CALL_5
0x400181e	          0x80cc70	                             or ah, 0x70	      2257	tc-i386.c	FUNCTION_38	ELSE_3	IF_4
0x4001821	          0x4989c2	                            mov r10, rax	      2257	tc-i386.c	FUNCTION_38	ELSE_3	IF_4
0x4001824	            0xeb1b	                           jmp 0x4001841	      2257	tc-i386.c	FUNCTION_38	ELSE_3	IF_4
0x4001826	        0x488d3419	                    lea rsi, [rcx + rbx]	      2259	tc-i386.c	FUNCTION_38	ELSE_4	IF_5	CALL_6
0x400182a	          0x4839ee	                            cmp rsi, rbp	      2259	tc-i386.c	FUNCTION_38	ELSE_4	IF_5	CALL_6
0x400182d	            0x7708	                            ja 0x4001837	      2259	tc-i386.c	FUNCTION_38	ELSE_4	IF_5	CALL_6
0x400182f	          0x80cc60	                             or ah, 0x60	      2262	tc-i386.c	FUNCTION_38	ELSE_4	IF_5
0x4001832	          0x4989c2	                            mov r10, rax	      2262	tc-i386.c	FUNCTION_38	ELSE_4	IF_5
0x4001835	            0xeb0a	                           jmp 0x4001841	      2262	tc-i386.c	FUNCTION_38	ELSE_4	IF_5
0x4001837	          0x80cc20	                             or ah, 0x20	      2265	tc-i386.c	FUNCTION_38	ELSE_5	IF_6
0x400183a	          0x4839e9	                            cmp rcx, rbp	      2265	tc-i386.c	FUNCTION_38	ELSE_5	IF_6
0x400183d	        0x4c0f46d0	                         cmovbe r10, rax	      2265	tc-i386.c	FUNCTION_38	ELSE_5	IF_6
0x4001841	          0x4863c2	                         movsxd rax, edx	      2265	tc-i386.c	FUNCTION_38	ELSE_5	IF_6
0x4001844	    0x440914c50000	                  or dword [rax*8], r10d	      4835	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_2
0x400184c	        0x4180f871	                           cmp r8b, 0x71	      4840	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_11
0x4001850	     0xf85c7000000	                           jne 0x400191d	      4840	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_11
0x4001856	    0x8024c5000000	                  and byte [rax*8], 0xdf	      4841	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_11
0x400185e	      0xe9ba000000	                           jmp 0x400191d	      4841	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_11
0x4001863	      0xba00000000	                              mov edx, 0	      4846	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_4
0x4001868	      0xbeee120000	                         mov esi, 0x12ee	      4846	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_4
0x400186d	      0xbf00000000	                              mov edi, 0	      4846	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_4
0x4001872	      0xe800000000	                          call 0x4001877	      4846	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_4
0x4001877	          0x4d21d9	                             and r9, r11	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x400187a	          0x4d89cc	                             mov r12, r9	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x400187d	    0x488b0d000000	            mov rcx, qword [0x04001884] 	      4860	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3
0x4001884	          0x488b01	                    mov rax, qword [rcx]	      4860	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3
0x4001887	        0x488b7108	                mov rsi, qword [rcx + 8]	      4861	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3
0x400188b	          0x4839f0	                            cmp rax, rsi	      4860	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3
0x400188e	     0xf8394000000	                           jae 0x4001928	      4860	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3
0x4001894	      0xb900000000	                              mov ecx, 0	      4860	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3
0x4001899	          0x4863fa	                         movsxd rdi, edx	      4860	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3
0x400189c	         0xb4cf834	      or ecx, dword [rax + rdi*8 + 0x34]	      1805	tc-i386.c	FUNCTION_19	SWITCH_1
0x40018a0	        0x4883c060	                           add rax, 0x60	      4862	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3
0x40018a4	          0x4839f0	                            cmp rax, rsi	      4860	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3
0x40018a7	            0x72f3	                            jb 0x400189c	      4860	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	FOR_3
0x40018a9	        0x4180f86c	                           cmp r8b, 0x6c	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x40018ad	            0x7432	                            je 0x40018e1	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x40018af	        0x4180f86c	                           cmp r8b, 0x6c	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x40018b3	            0x7f08	                            jg 0x40018bd	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x40018b5	        0x4180f862	                           cmp r8b, 0x62	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x40018b9	            0x743e	                            je 0x40018f9	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x40018bb	            0xeb46	                           jmp 0x4001903	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x40018bd	        0x4180f871	                           cmp r8b, 0x71	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x40018c1	            0x740d	                            je 0x40018d0	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x40018c3	        0x4180f877	                           cmp r8b, 0x77	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x40018c7	            0x7424	                            je 0x40018ed	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x40018c9	            0xeb38	                           jmp 0x4001903	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x40018cb	      0xb900000000	                              mov ecx, 0	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x40018d0	          0x4d89e1	                             mov r9, r12	      4869	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x40018d3	    0x4981c900c000	                           or r9, 0xc000	      4869	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x40018da	            0xeb27	                           jmp 0x4001903	      4870	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x40018dc	      0xb900000000	                              mov ecx, 0	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x40018e1	          0x4d89e1	                             mov r9, r12	      4872	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x40018e4	    0x4981c9002000	                           or r9, 0x2000	      4872	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x40018eb	            0xeb16	                           jmp 0x4001903	      4873	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x40018ed	          0x4d89e1	                             mov r9, r12	      4875	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x40018f0	    0x4981c9001000	                           or r9, 0x1000	      4875	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x40018f7	            0xeb0a	                           jmp 0x4001903	      4876	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x40018f9	          0x4d89e1	                             mov r9, r12	      4878	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x40018fc	    0x4981c9000400	                            or r9, 0x400	      4878	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x4001903	          0x4485c9	                           test ecx, r9d	      4884	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_12	CALL_9
0x4001906	            0x7415	                            je 0x400191d	      4884	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_12	CALL_9
0x4001908	          0x4863c2	                         movsxd rax, edx	      4884	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_12	CALL_9
0x400190b	    0x488d04c50000	                        lea rax, [rax*8]	      4884	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	IF_12	CALL_9
0x4001913	          0x442108	                    and dword [rax], r9d	      4885	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_10
0x4001916	    0xc74004000000	                  mov dword [rax + 4], 0	      4885	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	CALL_10
0x400191d	          0x83ea01	                              sub edx, 1	      4783	tc-i386.c	FUNCTION_73	FOR_2
0x4001920	     0xf89c9fdffff	                           jns 0x40016ef	      4783	tc-i386.c	FUNCTION_73	FOR_2
0x4001926	            0xeb2c	                           jmp 0x4001954	      4783	tc-i386.c	FUNCTION_73	FOR_2
0x4001928	        0x4180f86c	                           cmp r8b, 0x6c	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400192c	            0x74ae	                            je 0x40018dc	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400192e	        0x4180f86c	                           cmp r8b, 0x6c	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x4001932	            0x7f0d	                            jg 0x4001941	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x4001934	      0xb900000000	                              mov ecx, 0	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x4001939	        0x4180f862	                           cmp r8b, 0x62	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400193d	            0x74ba	                            je 0x40018f9	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x400193f	            0xebdc	                           jmp 0x400191d	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x4001941	        0x4180f871	                           cmp r8b, 0x71	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x4001945	            0x7484	                            je 0x40018cb	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x4001947	      0xb900000000	                              mov ecx, 0	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x400194c	        0x4180f877	                           cmp r8b, 0x77	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x4001950	            0x749b	                            je 0x40018ed	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x4001952	            0xebc9	                           jmp 0x400191d	      4865	tc-i386.c	FUNCTION_73	FOR_2	IF_8	SWITCH_1	SWITCH_3
0x4001954	      0x488b442408	                mov rax, qword [rsp + 8]	      4890	tc-i386.c	FUNCTION_73
0x4001959	    0x644833042528	                xor rax, qword fs:[0x28]	      4890	tc-i386.c	FUNCTION_73
0x4001962	            0x7405	                            je 0x4001969	      4890	tc-i386.c	FUNCTION_73
0x4001964	      0xe800000000	                          call 0x4001969	      4890	tc-i386.c	FUNCTION_73
0x4001969	        0x4883c410	                           add rsp, 0x10	      4890	tc-i386.c	FUNCTION_73
0x400196d	              0x5b	                                 pop rbx	      4890	tc-i386.c	FUNCTION_73
0x400196e	              0x5d	                                 pop rbp	      4890	tc-i386.c	FUNCTION_73
0x400196f	            0x415c	                                 pop r12	      4890	tc-i386.c	FUNCTION_73
0x4001971	              0xc3	                                     ret	      4890	tc-i386.c	FUNCTION_73
md_assemble	functions,0:ELSE,3:FOR,5:CALL,55:SWITCH,0:WHILE,0:IF,46:DO,0	2581
0x400b914	            0x4157	                                push r15	      3965	tc-i386.c	FUNCTION_68
0x400b916	            0x4156	                                push r14	      3965	tc-i386.c	FUNCTION_68
0x400b918	            0x4155	                                push r13	      3965	tc-i386.c	FUNCTION_68
0x400b91a	            0x4154	                                push r12	      3965	tc-i386.c	FUNCTION_68
0x400b91c	              0x55	                                push rbp	      3965	tc-i386.c	FUNCTION_68
0x400b91d	              0x53	                                push rbx	      3965	tc-i386.c	FUNCTION_68
0x400b91e	        0x4883ec58	                           sub rsp, 0x58	      3965	tc-i386.c	FUNCTION_68
0x400b922	          0x4989f8	                             mov r8, rdi	      3965	tc-i386.c	FUNCTION_68
0x400b925	    0x64488b042528	                mov rax, qword fs:[0x28]	      3965	tc-i386.c	FUNCTION_68
0x400b92e	      0x4889442448	             mov qword [rsp + 0x48], rax	      3965	tc-i386.c	FUNCTION_68
0x400b933	            0x31c0	                            xor eax, eax	      3965	tc-i386.c	FUNCTION_68
0x400b935	      0xba00000000	                              mov edx, 0	        90	string3.h	FUNCTION_164	CALL_6
0x400b93a	      0xb937000000	                           mov ecx, 0x37	        90	string3.h	FUNCTION_164	CALL_6
0x400b93f	          0x4889d7	                            mov rdi, rdx	        90	string3.h	FUNCTION_164	CALL_6
0x400b942	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_164	CALL_6
0x400b945	    0xc70500000000	           mov dword [0x0400b94f], 0x47 	      3973	tc-i386.c	FUNCTION_68	FOR_1
0x400b94f	    0xc70500000000	           mov dword [0x0400b959], 0x47 	      3973	tc-i386.c	FUNCTION_68	FOR_1
0x400b959	    0xc70500000000	           mov dword [0x0400b963], 0x47 	      3973	tc-i386.c	FUNCTION_68	FOR_1
0x400b963	    0xc70500000000	           mov dword [0x0400b96d], 0x47 	      3973	tc-i386.c	FUNCTION_68	FOR_1
0x400b96d	    0xc70500000000	           mov dword [0x0400b977], 0x47 	      3973	tc-i386.c	FUNCTION_68	FOR_1
0x400b977	      0xba00000000	                              mov edx, 0	        90	string3.h	FUNCTION_164	CALL_6
0x400b97c	      0xb908000000	                              mov ecx, 8	        90	string3.h	FUNCTION_164	CALL_6
0x400b981	          0x4889d7	                            mov rdi, rdx	        90	string3.h	FUNCTION_164	CALL_6
0x400b984	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_164	CALL_6
0x400b987	      0xba00000000	                              mov edx, 0	        90	string3.h	FUNCTION_164	CALL_6
0x400b98c	      0xb908000000	                              mov ecx, 8	        90	string3.h	FUNCTION_164	CALL_6
0x400b991	          0x4889d7	                            mov rdi, rdx	        90	string3.h	FUNCTION_164	CALL_6
0x400b994	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_164	CALL_6
0x400b997	    0x48c705000000	               mov qword [0x0400b9a2], 0	      3976	tc-i386.c	FUNCTION_68
0x400b9a2	      0x488d742430	                   lea rsi, [rsp + 0x30]	      3982	tc-i386.c	FUNCTION_68	CALL_4
0x400b9a7	          0x4c89c7	                             mov rdi, r8	      3982	tc-i386.c	FUNCTION_68	CALL_4
0x400b9aa	      0xe87a96ffff	                     call sym.parse_insn	      3982	tc-i386.c	FUNCTION_68	CALL_4
0x400b9af	          0x4885c0	                           test rax, rax	      3983	tc-i386.c	FUNCTION_68	IF_1
0x400b9b2	     0xf843e2c0000	                            je 0x400e5f6	      3983	tc-i386.c	FUNCTION_68	IF_1
0x400b9b8	     0xfb62d000000	           movzx ebp, byte [0x0400b9bf] 	      3985	tc-i386.c	FUNCTION_68
0x400b9bf	      0x488d742430	                   lea rsi, [rsp + 0x30]	      3987	tc-i386.c	FUNCTION_68	CALL_5
0x400b9c4	          0x4889c7	                            mov rdi, rax	      3987	tc-i386.c	FUNCTION_68	CALL_5
0x400b9c7	      0xe80db8ffff	                 call sym.parse_operands	      3987	tc-i386.c	FUNCTION_68	CALL_5
0x400b9cc	          0x4889c3	                            mov rbx, rax	      3987	tc-i386.c	FUNCTION_68	CALL_5
0x400b9cf	    0xc70500000000	     mov dword [0x0400b9d9], 0xffffffff 	      3988	tc-i386.c	FUNCTION_68
0x400b9d9	    0x488b3d000000	            mov rdi, qword [0x0400b9e0] 	      3989	tc-i386.c	FUNCTION_68	CALL_6
0x400b9e0	      0xe800000000	                          call 0x400b9e5	      3989	tc-i386.c	FUNCTION_68	CALL_6
0x400b9e5	    0x48c705000000	               mov qword [0x0400b9f0], 0	      3990	tc-i386.c	FUNCTION_68
0x400b9f0	          0x4885db	                           test rbx, rbx	      3991	tc-i386.c	FUNCTION_68	IF_2
0x400b9f3	     0xf84fd2b0000	                            je 0x400e5f6	      3991	tc-i386.c	FUNCTION_68	IF_2
0x400b9f9	    0x833d00000000	               cmp dword [0x0400ba00], 0	      4001	tc-i386.c	FUNCTION_68	IF_3
0x400ba00	            0x7456	                            je 0x400ba58	      4001	tc-i386.c	FUNCTION_68	IF_3
0x400ba02	    0x833d00000000	               cmp dword [0x0400ba09], 1	      4002	tc-i386.c	FUNCTION_68	IF_3
0x400ba09	            0x764d	                           jbe 0x400ba58	      4002	tc-i386.c	FUNCTION_68	IF_3
0x400ba0b	      0x488d742430	                   lea rsi, [rsp + 0x30]	      4003	tc-i386.c	FUNCTION_68	IF_3	CALL_7
0x400ba10	      0xbf00000000	                              mov edi, 0	      4003	tc-i386.c	FUNCTION_68	IF_3	CALL_7
0x400ba15	      0xb906000000	                              mov ecx, 6	      4003	tc-i386.c	FUNCTION_68	IF_3	CALL_7
0x400ba1a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4003	tc-i386.c	FUNCTION_68	IF_3	CALL_7
0x400ba1c	           0xf97c2	                                 seta dl	      4003	tc-i386.c	FUNCTION_68	IF_3	CALL_7
0x400ba1f	           0xf92c0	                                 setb al	      4003	tc-i386.c	FUNCTION_68	IF_3	CALL_7
0x400ba22	            0x38c2	                              cmp dl, al	      4003	tc-i386.c	FUNCTION_68	IF_3	CALL_7
0x400ba24	            0x7432	                            je 0x400ba58	      4003	tc-i386.c	FUNCTION_68	IF_3	CALL_7
0x400ba26	      0x488d742430	                   lea rsi, [rsp + 0x30]	      4004	tc-i386.c	FUNCTION_68	IF_3	CALL_8
0x400ba2b	      0xbf00000000	                              mov edi, 0	      4004	tc-i386.c	FUNCTION_68	IF_3	CALL_8
0x400ba30	      0xb908000000	                              mov ecx, 8	      4004	tc-i386.c	FUNCTION_68	IF_3	CALL_8
0x400ba35	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4004	tc-i386.c	FUNCTION_68	IF_3	CALL_8
0x400ba37	           0xf97c2	                                 seta dl	      4004	tc-i386.c	FUNCTION_68	IF_3	CALL_8
0x400ba3a	           0xf92c0	                                 setb al	      4004	tc-i386.c	FUNCTION_68	IF_3	CALL_8
0x400ba3d	            0x38c2	                              cmp dl, al	      4004	tc-i386.c	FUNCTION_68	IF_3	CALL_8
0x400ba3f	            0x7417	                            je 0x400ba58	      4004	tc-i386.c	FUNCTION_68	IF_3	CALL_8
0x400ba41	    0xf60500000000	           test byte [0x0400ba48], 0xfc 	      4005	tc-i386.c	FUNCTION_68	IF_3	CALL_9
0x400ba48	            0x7409	                            je 0x400ba53	      4005	tc-i386.c	FUNCTION_68	IF_3	CALL_9
0x400ba4a	    0xf60500000000	           test byte [0x0400ba51], 0xfc 	      4005	tc-i386.c	FUNCTION_68	IF_3	CALL_9
0x400ba51	            0x7505	                           jne 0x400ba58	      4005	tc-i386.c	FUNCTION_68	IF_3	CALL_9
0x400ba53	      0xe84a5bffff	                  call sym.swap_operands	      4007	tc-i386.c	FUNCTION_68	CALL_11
0x400ba58	    0x833d00000000	               cmp dword [0x0400ba5f], 2	      4011	tc-i386.c	FUNCTION_68	IF_4
0x400ba5f	            0x7545	                           jne 0x400baa6	      4011	tc-i386.c	FUNCTION_68	IF_4
0x400ba61	      0x488d742430	                   lea rsi, [rsp + 0x30]	      4012	tc-i386.c	FUNCTION_68	IF_4	CALL_12
0x400ba66	      0xbf00000000	                              mov edi, 0	      4012	tc-i386.c	FUNCTION_68	IF_4	CALL_12
0x400ba6b	      0xb906000000	                              mov ecx, 6	      4012	tc-i386.c	FUNCTION_68	IF_4	CALL_12
0x400ba70	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4012	tc-i386.c	FUNCTION_68	IF_4	CALL_12
0x400ba72	           0xf97c2	                                 seta dl	      4012	tc-i386.c	FUNCTION_68	IF_4	CALL_12
0x400ba75	           0xf92c0	                                 setb al	      4012	tc-i386.c	FUNCTION_68	IF_4	CALL_12
0x400ba78	            0x38c2	                              cmp dl, al	      4012	tc-i386.c	FUNCTION_68	IF_4	CALL_12
0x400ba7a	            0x741b	                            je 0x400ba97	      4012	tc-i386.c	FUNCTION_68	IF_4	CALL_12
0x400ba7c	      0x488d742430	                   lea rsi, [rsp + 0x30]	      4013	tc-i386.c	FUNCTION_68	IF_4	CALL_13
0x400ba81	      0xbf00000000	                              mov edi, 0	      4013	tc-i386.c	FUNCTION_68	IF_4	CALL_13
0x400ba86	      0xb908000000	                              mov ecx, 8	      4013	tc-i386.c	FUNCTION_68	IF_4	CALL_13
0x400ba8b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4013	tc-i386.c	FUNCTION_68	IF_4	CALL_13
0x400ba8d	           0xf97c2	                                 seta dl	      4013	tc-i386.c	FUNCTION_68	IF_4	CALL_13
0x400ba90	           0xf92c0	                                 setb al	      4013	tc-i386.c	FUNCTION_68	IF_4	CALL_13
0x400ba93	            0x38c2	                              cmp dl, al	      4013	tc-i386.c	FUNCTION_68	IF_4	CALL_13
0x400ba95	            0x7518	                           jne 0x400baaf	      4013	tc-i386.c	FUNCTION_68	IF_4	CALL_13
0x400ba97	      0xbe01000000	                              mov esi, 1	      4014	tc-i386.c	FUNCTION_68	CALL_14
0x400ba9c	      0xbf00000000	                              mov edi, 0	      4014	tc-i386.c	FUNCTION_68	CALL_14
0x400baa1	      0xe8bf4fffff	                call sym.swap_2_operands	      4014	tc-i386.c	FUNCTION_68	CALL_14
0x400baa6	    0x833d00000000	               cmp dword [0x0400baad], 0	      4016	tc-i386.c	FUNCTION_68	IF_5
0x400baad	            0x7405	                            je 0x400bab4	      4016	tc-i386.c	FUNCTION_68	IF_5
0x400baaf	      0xe8675bffff	                   call sym.optimize_imm	      4017	tc-i386.c	FUNCTION_68	CALL_15
0x400bab4	    0x833d00000000	               cmp dword [0x0400babb], 0	      4021	tc-i386.c	FUNCTION_68	IF_6
0x400babb	     0xf8432020000	                            je 0x400bcf3	      4021	tc-i386.c	FUNCTION_68	IF_6
0x400bac1	    0x833d00000000	               cmp dword [0x0400bac8], 2	      4022	tc-i386.c	FUNCTION_68	IF_6
0x400bac8	     0xf8425020000	                            je 0x400bcf3	      4022	tc-i386.c	FUNCTION_68	IF_6
0x400bace	    0x833d00000000	               cmp dword [0x0400bad5], 2	      4023	tc-i386.c	FUNCTION_68	IF_6
0x400bad5	            0x751f	                           jne 0x400baf6	      4023	tc-i386.c	FUNCTION_68	IF_6
0x400bad7	      0x488d742430	                   lea rsi, [rsp + 0x30]	      4024	tc-i386.c	FUNCTION_68	IF_6	CALL_16
0x400badc	      0xbf00000000	                              mov edi, 0	      4024	tc-i386.c	FUNCTION_68	IF_6	CALL_16
0x400bae1	      0xb907000000	                              mov ecx, 7	      4024	tc-i386.c	FUNCTION_68	IF_6	CALL_16
0x400bae6	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4024	tc-i386.c	FUNCTION_68	IF_6	CALL_16
0x400bae8	           0xf97c2	                                 seta dl	      4024	tc-i386.c	FUNCTION_68	IF_6	CALL_16
0x400baeb	           0xf92c0	                                 setb al	      4024	tc-i386.c	FUNCTION_68	IF_6	CALL_16
0x400baee	            0x38c2	                              cmp dl, al	      4024	tc-i386.c	FUNCTION_68	IF_6	CALL_16
0x400baf0	     0xf84fd010000	                            je 0x400bcf3	      4024	tc-i386.c	FUNCTION_68	IF_6	CALL_16
0x400baf6	    0x8b1d00000000	            mov ebx, dword [0x0400bafc] 	      4898	tc-i386.c	FUNCTION_74	FOR_1
0x400bafc	    0x41bf00000080	                    mov r15d, 0x80000000	      4939	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7	CALL_2
0x400bb02	    0x49be00000000	          movabs r14, 0xffffffff00000000	      4917	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x400bb0c	      0xe9d9010000	                           jmp 0x400bcea	      4917	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x400bb11	          0x4863c3	                         movsxd rax, ebx	      4917	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x400bb14	    0xf604c5000000	                 test byte [rax*8], 0x1f	      4899	tc-i386.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x400bb1c	     0xf84c8010000	                            je 0x400bcea	      4899	tc-i386.c	FUNCTION_74	FOR_1	IF_1	CALL_1
0x400bb22	    0x4c8b24c50000	                  mov r12, qword [rax*8]	      4901	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x400bb2a	    0x41807c241802	                cmp byte [r12 + 0x18], 2	      4901	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x400bb30	     0xf854e010000	                           jne 0x400bc84	      4901	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x400bb36	      0x498b442410	            mov rax, qword [r12 + 0x10] 	      4903	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2
0x400bb3b	          0x4863d3	                         movsxd rdx, ebx	      4905	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x400bb3e	    0xf604d5000000	                    test byte [rdx*8], 2	      4905	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x400bb46	            0x7414	                            je 0x400bb5c	      4905	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x400bb48	    0x48a90000ffff	            test rax, 0xffffffffffff0000	      4906	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x400bb4e	            0x750c	                           jne 0x400bb5c	      4906	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x400bb50	        0x480fbfc0	                           movsx rax, ax	      4911	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x400bb54	    0x8024d5000000	                  and byte [rdx*8], 0xef	      4912	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_3
0x400bb5c	          0x4863d3	                         movsxd rdx, ebx	      4916	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x400bb5f	    0xf604d5000000	                    test byte [rdx*8], 4	      4916	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x400bb67	            0x7418	                            je 0x400bb81	      4916	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x400bb69	          0x4c85f0	                           test rax, r14	      4917	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x400bb6c	            0x7513	                           jne 0x400bb81	      4917	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x400bb6e	            0x89c0	                            mov eax, eax	      4923	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x400bb70	          0x4c31f8	                            xor rax, r15	      4923	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x400bb73	    0x480500000080	             add rax, 0xffffffff80000000	      4923	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x400bb79	    0x8024d5000000	                  and byte [rdx*8], 0xef	      4924	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_4
0x400bb81	          0x4885c0	                           test rax, rax	      4927	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x400bb84	            0x752e	                           jne 0x400bbb4	      4927	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x400bb86	          0x4863d3	                         movsxd rdx, ebx	      4927	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x400bb89	    0xf604d5000000	                 test byte [rdx*8], 0x40	      4927	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x400bb91	     0xf8470280000	                            je 0x400e407	      4927	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x400bb97	    0x8024d5000000	                  and byte [rdx*8], 0xe0	      4933	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x400bb9f	    0x48c704d50000	                    mov qword [rdx*8], 0	      4934	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x400bbab	    0x832d00000000	               sub dword [0x0400bbb2], 1	      4935	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x400bbb2	            0xeb5d	                           jmp 0x400bc11	      4935	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_5
0x400bbb4	    0x833d00000000	               cmp dword [0x0400bbbb], 2	      4937	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6
0x400bbbb	            0x7554	                           jne 0x400bc11	      4937	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6
0x400bbbd	          0x4889c6	                            mov rsi, rax	      4939	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7	CALL_2
0x400bbc0	        0x4a8d1438	                    lea rdx, [rax + r15]	      4939	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7	CALL_2
0x400bbc4	      0xb9ffffffff	                     mov ecx, 0xffffffff	      4939	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7	CALL_2
0x400bbc9	          0x4839ca	                            cmp rdx, rcx	      4939	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7	CALL_2
0x400bbcc	            0x7723	                            ja 0x400bbf1	      4939	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7	CALL_2
0x400bbce	            0xeb05	                           jmp 0x400bbd5	      4939	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7	CALL_2
0x400bbd0	      0xbe00000000	                              mov esi, 0	      4939	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7	CALL_2
0x400bbd5	          0x4863cb	                         movsxd rcx, ebx	      4941	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7
0x400bbd8	        0x4883c10e	                            add rcx, 0xe	      4941	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7
0x400bbdc	     0xfb614cd0000	                 movzx edx, byte [rcx*8]	      4941	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7
0x400bbe4	          0x83e2ef	                     and edx, 0xffffffef	      4941	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7
0x400bbe7	          0x83ca08	                               or edx, 8	      4942	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7
0x400bbea	    0x8814cd000000	                    mov byte [rcx*8], dl	      4942	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_7
0x400bbf1	    0x803d00000000	                cmp byte [0x0400bbf8], 0	      4945	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_8	CALL_3
0x400bbf8	            0x7417	                            je 0x400bc11	      4945	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_8	CALL_3
0x400bbfa	      0xb9ffffffff	                     mov ecx, 0xffffffff	      4945	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_8	CALL_3
0x400bbff	          0x4839ce	                            cmp rsi, rcx	      4945	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_8	CALL_3
0x400bc02	            0x770d	                            ja 0x400bc11	      4945	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_8	CALL_3
0x400bc04	          0x4863d3	                         movsxd rdx, ebx	      4946	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_8
0x400bc07	    0x800cd5000000	                      or byte [rdx*8], 4	      4946	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_8
0x400bc0f	            0xeb25	                           jmp 0x400bc36	      4946	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6	IF_8
0x400bc11	          0x4863d3	                         movsxd rdx, ebx	      4948	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x400bc14	    0xf604d5000000	                    test byte [rdx*8], 4	      4948	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x400bc1c	            0x7518	                           jne 0x400bc36	      4948	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x400bc1e	    0xf604d5000000	                    test byte [rdx*8], 8	      4949	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x400bc26	            0x750e	                           jne 0x400bc36	      4949	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x400bc28	    0xf604d5000000	                    test byte [rdx*8], 2	      4950	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x400bc30	     0xf84b4000000	                            je 0x400bcea	      4950	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x400bc36	    0x8b0d00000000	            mov ecx, dword [0x0400bc3c] 	      2194	tc-i386.c	FUNCTION_36
0x400bc3c	          0x83f9ff	             cmp ecx, 0xffffffffffffffff	      2197	tc-i386.c	FUNCTION_36	IF_1
0x400bc3f	            0x7514	                           jne 0x400bc55	      2197	tc-i386.c	FUNCTION_36	IF_1
0x400bc41	      0xba00000000	                              mov edx, 0	      2198	tc-i386.c	FUNCTION_36	CALL_1
0x400bc46	      0xbe96080000	                          mov esi, 0x896	      2198	tc-i386.c	FUNCTION_36	CALL_1
0x400bc4b	      0xbf00000000	                              mov edi, 0	      2198	tc-i386.c	FUNCTION_36	CALL_1
0x400bc50	      0xe800000000	                          call 0x400bc55	      2198	tc-i386.c	FUNCTION_36	CALL_1
0x400bc55	      0xba01000000	                              mov edx, 1	      2203	tc-i386.c	FUNCTION_36	IF_2
0x400bc5a	            0xd3e2	                             shl edx, cl	      2203	tc-i386.c	FUNCTION_36	IF_2
0x400bc5c	          0x8d52ff	                      lea edx, [rdx - 1]	      2203	tc-i386.c	FUNCTION_36	IF_2
0x400bc5f	          0x4885c2	                           test rdx, rax	      2203	tc-i386.c	FUNCTION_36	IF_2
0x400bc62	     0xf8582000000	                           jne 0x400bcea	      2203	tc-i386.c	FUNCTION_36	IF_2
0x400bc68	          0x48d3f8	                             sar rax, cl	      4951	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9	CALL_4
0x400bc6b	        0x4883e880	             sub rax, 0xffffffffffffff80	      4951	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9	CALL_4
0x400bc6f	    0x483dff000000	                           cmp rax, 0xff	      4951	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9	CALL_4
0x400bc75	            0x7773	                            ja 0x400bcea	      4951	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9	CALL_4
0x400bc77	          0x4863c3	                         movsxd rax, ebx	      4952	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x400bc7a	    0x800cc5000000	                      or byte [rax*8], 1	      4952	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x400bc82	            0xeb66	                           jmp 0x400bcea	      4952	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	IF_9
0x400bc84	          0x4863c3	                         movsxd rax, ebx	      4954	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x400bc87	    0x448b2c850000	                 mov r13d, dword [rax*4]	      4954	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x400bc8f	    0x4181fd790100	                         cmp r13d, 0x179	      4954	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x400bc96	            0x7409	                            je 0x400bca1	      4954	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x400bc98	    0x4181fd950100	                         cmp r13d, 0x195	      4954	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x400bc9f	            0x753e	                           jne 0x400bcdf	      4954	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x400bca1	      0xbf00000000	                              mov edi, 0	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x400bca6	      0xe800000000	                          call 0x400bcab	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x400bcab	    0x488b3d000000	            mov rdi, qword [0x0400bcb2] 	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x400bcb2	        0x488d577c	                   lea rdx, [rdi + 0x7c]	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x400bcb6	          0x4829d0	                            sub rax, rdx	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x400bcb9	          0x4889c6	                            mov rsi, rax	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x400bcbc	          0x4589e9	                           mov r9d, r13d	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x400bcbf	    0x41b800000000	                              mov r8d, 0	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x400bcc5	          0x4c89e1	                            mov rcx, r12	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x400bcc8	      0xba00000000	                              mov edx, 0	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x400bccd	      0xe800000000	                          call 0x400bcd2	      4957	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10	CALL_6
0x400bcd2	          0x4863c3	                         movsxd rax, ebx	      4959	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x400bcd5	    0x8024c5000000	                  and byte [rax*8], 0xe0	      4963	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x400bcdd	            0xeb0b	                           jmp 0x400bcea	      4963	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_2	IF_10
0x400bcdf	          0x4863c3	                         movsxd rax, ebx	      4967	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_3
0x400bce2	    0x8024c5000000	                  and byte [rax*8], 0xef	      4967	tc-i386.c	FUNCTION_74	FOR_1	IF_1	ELSE_3
0x400bcea	          0x83eb01	                              sub ebx, 1	      4898	tc-i386.c	FUNCTION_74	FOR_1
0x400bced	     0xf891efeffff	                           jns 0x400bb11	      4898	tc-i386.c	FUNCTION_74	FOR_1
0x400bcf3	        0x400fbefd	                          movsx edi, bpl	      4031	tc-i386.c	FUNCTION_68	IF_7	CALL_18
0x400bcf7	      0xe810d4ffff	                 call sym.match_template	      4031	tc-i386.c	FUNCTION_68	IF_7	CALL_18
0x400bcfc	          0x4889c3	                            mov rbx, rax	      4031	tc-i386.c	FUNCTION_68	IF_7	CALL_18
0x400bcff	          0x4885c0	                           test rax, rax	      4031	tc-i386.c	FUNCTION_68	IF_7	CALL_18
0x400bd02	     0xf84ee280000	                            je 0x400e5f6	      4031	tc-i386.c	FUNCTION_68	IF_7	CALL_18
0x400bd08	    0x8b0500000000	            mov eax, dword [0x0400bd0e] 	      4034	tc-i386.c	FUNCTION_68	IF_8
0x400bd0e	            0x85c0	                           test eax, eax	      4034	tc-i386.c	FUNCTION_68	IF_8
0x400bd10	            0x7467	                            je 0x400bd79	      4034	tc-i386.c	FUNCTION_68	IF_8
0x400bd12	    0x803d00000000	                cmp byte [0x0400bd19], 0	      4035	tc-i386.c	FUNCTION_68	IF_8
0x400bd19	            0x785e	                            js 0x400bd79	      4035	tc-i386.c	FUNCTION_68	IF_8
0x400bd1b	    0xf60500000000	           test byte [0x0400bd22], 0x20 	      4036	tc-i386.c	FUNCTION_68	IF_8
0x400bd22	            0x7555	                           jne 0x400bd79	      4036	tc-i386.c	FUNCTION_68	IF_8
0x400bd24	    0x48ba00800919	              movabs rdx, 0x180019098000	      4037	tc-i386.c	FUNCTION_68	IF_8
0x400bd2e	    0x488515000000	           test qword [0x0400bd35], rdx 	      4037	tc-i386.c	FUNCTION_68	IF_8
0x400bd35	            0x7509	                           jne 0x400bd40	      4037	tc-i386.c	FUNCTION_68	IF_8
0x400bd37	    0xf60500000000	           test byte [0x0400bd3e], 0x20 	      4045	tc-i386.c	FUNCTION_68	IF_8
0x400bd3e	            0x7439	                            je 0x400bd79	      4045	tc-i386.c	FUNCTION_68	IF_8
0x400bd40	          0x83f801	                              cmp eax, 1	      4049	tc-i386.c	FUNCTION_68	IF_8	CALL_19
0x400bd43	      0xbd00000000	                              mov ebp, 0	      4049	tc-i386.c	FUNCTION_68	IF_8	CALL_19
0x400bd48	      0xb800000000	                              mov eax, 0	      4049	tc-i386.c	FUNCTION_68	IF_8	CALL_19
0x400bd4d	        0x480f44e8	                          cmove rbp, rax	      4049	tc-i386.c	FUNCTION_68	IF_8	CALL_19
0x400bd51	    0x4c8b25000000	            mov r12, qword [0x0400bd58] 	      4047	tc-i386.c	FUNCTION_68	IF_8
0x400bd58	      0xba05000000	                              mov edx, 5	      4049	tc-i386.c	FUNCTION_68	IF_8	CALL_19
0x400bd5d	      0xbe00000000	                              mov esi, 0	      4049	tc-i386.c	FUNCTION_68	IF_8	CALL_19
0x400bd62	      0xbf00000000	                              mov edi, 0	      4049	tc-i386.c	FUNCTION_68	IF_8	CALL_19
0x400bd67	      0xe800000000	                          call 0x400bd6c	      4049	tc-i386.c	FUNCTION_68	IF_8	CALL_19
0x400bd6c	          0x4c89e6	                            mov rsi, r12	      4047	tc-i386.c	FUNCTION_68	IF_8
0x400bd6f	          0x4889c7	                            mov rdi, rax	      4047	tc-i386.c	FUNCTION_68	IF_8
0x400bd72	      0xb800000000	                              mov eax, 0	      4047	tc-i386.c	FUNCTION_68	IF_8
0x400bd77	            0xffd5	                                call rbp	      4047	tc-i386.c	FUNCTION_68	IF_8
0x400bd79	    0x8b0500000000	            mov eax, dword [0x0400bd7f] 	      4056	tc-i386.c	FUNCTION_68	IF_9
0x400bd7f	          0x83e0f6	                     and eax, 0xfffffff6	      4056	tc-i386.c	FUNCTION_68	IF_9
0x400bd82	      0x3db60f0000	                          cmp eax, 0xfb6	      4056	tc-i386.c	FUNCTION_68	IF_9
0x400bd87	            0x754d	                           jne 0x400bdd6	      4056	tc-i386.c	FUNCTION_68	IF_9
0x400bd89	    0x833d00000000	               cmp dword [0x0400bd90], 2	      4060	tc-i386.c	FUNCTION_68	IF_9	IF_10
0x400bd90	            0x743d	                            je 0x400bdcf	      4060	tc-i386.c	FUNCTION_68	IF_9	IF_10
0x400bd92	    0x803d00000000	                cmp byte [0x0400bd99], 0	      4061	tc-i386.c	FUNCTION_68	IF_9	IF_10
0x400bd99	            0x7534	                           jne 0x400bdcf	      4061	tc-i386.c	FUNCTION_68	IF_9	IF_10
0x400bd9b	    0x833d00000000	               cmp dword [0x0400bda2], 0	      4062	tc-i386.c	FUNCTION_68	IF_9	IF_10
0x400bda2	            0x742b	                            je 0x400bdcf	      4062	tc-i386.c	FUNCTION_68	IF_9	IF_10
0x400bda4	    0x488b2d000000	            mov rbp, qword [0x0400bdab] 	      4063	tc-i386.c	FUNCTION_68	IF_9	CALL_21
0x400bdab	      0xba05000000	                              mov edx, 5	      4063	tc-i386.c	FUNCTION_68	IF_9	CALL_21
0x400bdb0	      0xbe00000000	                              mov esi, 0	      4063	tc-i386.c	FUNCTION_68	IF_9	CALL_21
0x400bdb5	      0xbf00000000	                              mov edi, 0	      4063	tc-i386.c	FUNCTION_68	IF_9	CALL_21
0x400bdba	      0xe800000000	                          call 0x400bdbf	      4063	tc-i386.c	FUNCTION_68	IF_9	CALL_21
0x400bdbf	          0x4889ee	                            mov rsi, rbp	      4063	tc-i386.c	FUNCTION_68	IF_9	CALL_21
0x400bdc2	          0x4889c7	                            mov rdi, rax	      4063	tc-i386.c	FUNCTION_68	IF_9	CALL_21
0x400bdc5	      0xb800000000	                              mov eax, 0	      4063	tc-i386.c	FUNCTION_68	IF_9	CALL_21
0x400bdca	      0xe800000000	                          call 0x400bdcf	      4063	tc-i386.c	FUNCTION_68	IF_9	CALL_21
0x400bdcf	    0xc60500000000	                mov byte [0x0400bdd6], 0	      4065	tc-i386.c	FUNCTION_68	IF_9
0x400bdd6	    0x803d00000000	                cmp byte [0x0400bddd], 0	      4068	tc-i386.c	FUNCTION_68	IF_11
0x400bddd	            0x7912	                           jns 0x400bdf1	      4068	tc-i386.c	FUNCTION_68	IF_11
0x400bddf	      0xbf9b000000	                           mov edi, 0x9b	      4069	tc-i386.c	FUNCTION_68	IF_11	IF_12	CALL_22
0x400bde4	      0xe83567ffff	                     call sym.add_prefix	      4069	tc-i386.c	FUNCTION_68	IF_11	IF_12	CALL_22
0x400bde9	            0x85c0	                           test eax, eax	      4069	tc-i386.c	FUNCTION_68	IF_11	IF_12	CALL_22
0x400bdeb	     0xf8405280000	                            je 0x400e5f6	      4069	tc-i386.c	FUNCTION_68	IF_11	IF_12	CALL_22
0x400bdf1	    0x488b2d000000	            mov rbp, qword [0x0400bdf8] 	      4073	tc-i386.c	FUNCTION_68	IF_13
0x400bdf8	          0x4885ed	                           test rbp, rbp	      4073	tc-i386.c	FUNCTION_68	IF_13
0x400bdfb	            0x743c	                            je 0x400be39	      4073	tc-i386.c	FUNCTION_68	IF_13
0x400bdfd	    0xf60500000000	               test byte [0x0400be04], 1	      4073	tc-i386.c	FUNCTION_68	IF_13
0x400be04	            0x7533	                           jne 0x400be39	      4073	tc-i386.c	FUNCTION_68	IF_13
0x400be06	    0x488b1d000000	            mov rbx, qword [0x0400be0d] 	      4075	tc-i386.c	FUNCTION_68	IF_13	CALL_24
0x400be0d	      0xba05000000	                              mov edx, 5	      4075	tc-i386.c	FUNCTION_68	IF_13	CALL_24
0x400be12	      0xbe00000000	                              mov esi, 0	      4075	tc-i386.c	FUNCTION_68	IF_13	CALL_24
0x400be17	      0xbf00000000	                              mov edi, 0	      4075	tc-i386.c	FUNCTION_68	IF_13	CALL_24
0x400be1c	      0xe800000000	                          call 0x400be21	      4075	tc-i386.c	FUNCTION_68	IF_13	CALL_24
0x400be21	          0x4889ea	                            mov rdx, rbp	      4075	tc-i386.c	FUNCTION_68	IF_13	CALL_24
0x400be24	          0x4889de	                            mov rsi, rbx	      4075	tc-i386.c	FUNCTION_68	IF_13	CALL_24
0x400be27	          0x4889c7	                            mov rdi, rax	      4075	tc-i386.c	FUNCTION_68	IF_13	CALL_24
0x400be2a	      0xb800000000	                              mov eax, 0	      4075	tc-i386.c	FUNCTION_68	IF_13	CALL_24
0x400be2f	      0xe800000000	                          call 0x400be34	      4075	tc-i386.c	FUNCTION_68	IF_13	CALL_24
0x400be34	      0xe9bd270000	                           jmp 0x400e5f6	      4077	tc-i386.c	FUNCTION_68	IF_13
0x400be39	    0x803d00000000	                cmp byte [0x0400be40], 0	      4082	tc-i386.c	FUNCTION_68	IF_14
0x400be40	            0x745d	                            je 0x400be9f	      4082	tc-i386.c	FUNCTION_68	IF_14
0x400be42	    0xf60500000000	               test byte [0x0400be49], 8	      4083	tc-i386.c	FUNCTION_68	IF_14
0x400be49	            0x742e	                            je 0x400be79	      4083	tc-i386.c	FUNCTION_68	IF_14
0x400be4b	    0x833d00000000	               cmp dword [0x0400be52], 0	      4084	tc-i386.c	FUNCTION_68	IF_14
0x400be52	            0x7425	                            je 0x400be79	      4084	tc-i386.c	FUNCTION_68	IF_14
0x400be54	    0x813d00000000	           cmp dword [0x0400be5e], 0x86 	      4085	tc-i386.c	FUNCTION_68	IF_14
0x400be5e	            0x743f	                            je 0x400be9f	      4085	tc-i386.c	FUNCTION_68	IF_14
0x400be60	    0x8b0500000000	            mov eax, dword [0x0400be66] 	      4085	tc-i386.c	FUNCTION_68	IF_14
0x400be66	          0x8d40ff	                      lea eax, [rax - 1]	      4085	tc-i386.c	FUNCTION_68	IF_14
0x400be69	    0x488b04c50000	                  mov rax, qword [rax*8]	      4085	tc-i386.c	FUNCTION_68	IF_14
0x400be71	        0x48c1e810	                           shr rax, 0x10	      1895	tc-i386.c	FUNCTION_21	SWITCH_1
0x400be75	            0xa85f	                           test al, 0x5f	      4086	tc-i386.c	FUNCTION_68	IF_14	CALL_25
0x400be77	            0x7526	                           jne 0x400be9f	      4086	tc-i386.c	FUNCTION_68	IF_14	CALL_25
0x400be79	      0xba05000000	                              mov edx, 5	      4088	tc-i386.c	FUNCTION_68	IF_14	CALL_27
0x400be7e	      0xbe00000000	                              mov esi, 0	      4088	tc-i386.c	FUNCTION_68	IF_14	CALL_27
0x400be83	      0xbf00000000	                              mov edi, 0	      4088	tc-i386.c	FUNCTION_68	IF_14	CALL_27
0x400be88	      0xe800000000	                          call 0x400be8d	      4088	tc-i386.c	FUNCTION_68	IF_14	CALL_27
0x400be8d	          0x4889c7	                            mov rdi, rax	      4088	tc-i386.c	FUNCTION_68	IF_14	CALL_27
0x400be90	      0xb800000000	                              mov eax, 0	      4088	tc-i386.c	FUNCTION_68	IF_14	CALL_27
0x400be95	      0xe800000000	                          call 0x400be9a	      4088	tc-i386.c	FUNCTION_68	IF_14	CALL_27
0x400be9a	      0xe957270000	                           jmp 0x400e5f6	      4089	tc-i386.c	FUNCTION_68	IF_14
0x400be9f	    0x48833d000000	               cmp qword [0x0400bea7], 0	      4093	tc-i386.c	FUNCTION_68	IF_15	CALL_28
0x400bea7	            0x740d	                            je 0x400beb6	      4093	tc-i386.c	FUNCTION_68	IF_15	CALL_28
0x400bea9	      0xe8c45affff	                      call sym.check_hle	      4093	tc-i386.c	FUNCTION_68	IF_15	CALL_28
0x400beae	            0x85c0	                           test eax, eax	      4093	tc-i386.c	FUNCTION_68	IF_15	CALL_28
0x400beb0	     0xf8440270000	                            je 0x400e5f6	      4093	tc-i386.c	FUNCTION_68	IF_15	CALL_28
0x400beb6	    0x48833d000000	               cmp qword [0x0400bebe], 0	      4097	tc-i386.c	FUNCTION_68	IF_16
0x400bebe	            0x742a	                            je 0x400beea	      4097	tc-i386.c	FUNCTION_68	IF_16
0x400bec0	    0xf60500000000	               test byte [0x0400bec7], 2	      4097	tc-i386.c	FUNCTION_68	IF_16
0x400bec7	            0x7521	                           jne 0x400beea	      4097	tc-i386.c	FUNCTION_68	IF_16
0x400bec9	      0xba05000000	                              mov edx, 5	      4098	tc-i386.c	FUNCTION_68	CALL_30
0x400bece	      0xbe00000000	                              mov esi, 0	      4098	tc-i386.c	FUNCTION_68	CALL_30
0x400bed3	      0xbf00000000	                              mov edi, 0	      4098	tc-i386.c	FUNCTION_68	CALL_30
0x400bed8	      0xe800000000	                          call 0x400bedd	      4098	tc-i386.c	FUNCTION_68	CALL_30
0x400bedd	          0x4889c7	                            mov rdi, rax	      4098	tc-i386.c	FUNCTION_68	CALL_30
0x400bee0	      0xb800000000	                              mov eax, 0	      4098	tc-i386.c	FUNCTION_68	CALL_30
0x400bee5	      0xe800000000	                          call 0x400beea	      4098	tc-i386.c	FUNCTION_68	CALL_30
0x400beea	    0x48833d000000	               cmp qword [0x0400bef2], 0	      4101	tc-i386.c	FUNCTION_68	IF_17
0x400bef2	            0x742a	                            je 0x400bf1e	      4101	tc-i386.c	FUNCTION_68	IF_17
0x400bef4	    0xf60500000000	               test byte [0x0400befb], 4	      4101	tc-i386.c	FUNCTION_68	IF_17
0x400befb	            0x7521	                           jne 0x400bf1e	      4101	tc-i386.c	FUNCTION_68	IF_17
0x400befd	      0xba05000000	                              mov edx, 5	      4102	tc-i386.c	FUNCTION_68	CALL_32
0x400bf02	      0xbe00000000	                              mov esi, 0	      4102	tc-i386.c	FUNCTION_68	CALL_32
0x400bf07	      0xbf00000000	                              mov edi, 0	      4102	tc-i386.c	FUNCTION_68	CALL_32
0x400bf0c	      0xe800000000	                          call 0x400bf11	      4102	tc-i386.c	FUNCTION_68	CALL_32
0x400bf11	          0x4889c7	                            mov rdi, rax	      4102	tc-i386.c	FUNCTION_68	CALL_32
0x400bf14	      0xb800000000	                              mov eax, 0	      4102	tc-i386.c	FUNCTION_68	CALL_32
0x400bf19	      0xe800000000	                          call 0x400bf1e	      4102	tc-i386.c	FUNCTION_68	CALL_32
0x400bf1e	    0xf60500000000	               test byte [0x0400bf25], 1	      4104	tc-i386.c	FUNCTION_68	IF_18
0x400bf25	     0xf848b000000	                            je 0x400bfb6	      4104	tc-i386.c	FUNCTION_68	IF_18
0x400bf2b	    0x8b0500000000	            mov eax, dword [0x0400bf31] 	      4106	tc-i386.c	FUNCTION_68	IF_18	IF_19
0x400bf31	          0x83f802	                              cmp eax, 2	      4106	tc-i386.c	FUNCTION_68	IF_18	IF_19
0x400bf34	            0x752c	                           jne 0x400bf62	      4106	tc-i386.c	FUNCTION_68	IF_18	IF_19
0x400bf36	    0x803d00000000	                cmp byte [0x0400bf3d], 0	      4106	tc-i386.c	FUNCTION_68	IF_18	IF_19
0x400bf3d	            0x7428	                            je 0x400bf67	      4106	tc-i386.c	FUNCTION_68	IF_18	IF_19
0x400bf3f	      0xba05000000	                              mov edx, 5	      4107	tc-i386.c	FUNCTION_68	IF_18	CALL_34
0x400bf44	      0xbe00000000	                              mov esi, 0	      4107	tc-i386.c	FUNCTION_68	IF_18	CALL_34
0x400bf49	      0xbf00000000	                              mov edi, 0	      4107	tc-i386.c	FUNCTION_68	IF_18	CALL_34
0x400bf4e	      0xe800000000	                          call 0x400bf53	      4107	tc-i386.c	FUNCTION_68	IF_18	CALL_34
0x400bf53	          0x4889c7	                            mov rdi, rax	      4107	tc-i386.c	FUNCTION_68	IF_18	CALL_34
0x400bf56	      0xb800000000	                              mov eax, 0	      4107	tc-i386.c	FUNCTION_68	IF_18	CALL_34
0x400bf5b	      0xe800000000	                          call 0x400bf60	      4107	tc-i386.c	FUNCTION_68	IF_18	CALL_34
0x400bf60	            0xeb54	                           jmp 0x400bfb6	      4107	tc-i386.c	FUNCTION_68	IF_18	CALL_34
0x400bf62	          0x83f801	                              cmp eax, 1	      4108	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400bf65	            0x740c	                            je 0x400bf73	      4108	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400bf67	    0x803d00000000	                cmp byte [0x0400bf6e], 0	      4108	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400bf6e	           0xf95c0	                                setne al	      4108	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400bf71	            0xeb1e	                           jmp 0x400bf91	      4108	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400bf73	      0xb800000000	                              mov eax, 0	      4110	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400bf78	    0x833d00000000	               cmp dword [0x0400bf7f], 0	      4110	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400bf7f	            0x740d	                            je 0x400bf8e	      4110	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400bf81	    0x803d00000000	                cmp byte [0x0400bf88], 0	      4110	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400bf88	           0xf94c0	                                 sete al	      4110	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400bf8b	           0xfb6c0	                           movzx eax, al	      4110	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400bf8e	          0x83e001	                              and eax, 1	      4108	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400bf91	            0x84c0	                             test al, al	      4108	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400bf93	            0x7421	                            je 0x400bfb6	      4108	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400bf95	      0xba05000000	                              mov edx, 5	      4111	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400bf9a	      0xbe00000000	                              mov esi, 0	      4111	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400bf9f	      0xbf00000000	                              mov edi, 0	      4111	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400bfa4	      0xe800000000	                          call 0x400bfa9	      4111	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400bfa9	          0x4889c7	                            mov rdi, rax	      4111	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400bfac	      0xb800000000	                              mov eax, 0	      4111	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400bfb1	      0xe800000000	                          call 0x400bfb6	      4111	tc-i386.c	FUNCTION_68	IF_18	ELSE_1	IF_20
0x400bfb6	    0x833d00000000	               cmp dword [0x0400bfbd], 0	      4115	tc-i386.c	FUNCTION_68	IF_21
0x400bfbd	            0x741c	                            je 0x400bfdb	      4115	tc-i386.c	FUNCTION_68	IF_21
0x400bfbf	    0xf60500000000	               test byte [0x0400bfc6], 2	      4116	tc-i386.c	FUNCTION_68	IF_21
0x400bfc6	            0x7413	                            je 0x400bfdb	      4116	tc-i386.c	FUNCTION_68	IF_21
0x400bfc8	    0x803d00000000	                cmp byte [0x0400bfcf], 0	      4117	tc-i386.c	FUNCTION_68	IF_21
0x400bfcf	            0x750a	                           jne 0x400bfdb	      4117	tc-i386.c	FUNCTION_68	IF_21
0x400bfd1	      0xbff2000000	                           mov edi, 0xf2	      4118	tc-i386.c	FUNCTION_68	CALL_37
0x400bfd6	      0xe84365ffff	                     call sym.add_prefix	      4118	tc-i386.c	FUNCTION_68	CALL_37
0x400bfdb	    0xf60500000000	               test byte [0x0400bfe2], 1	      4121	tc-i386.c	FUNCTION_68	IF_22
0x400bfe2	     0xf8403010000	                            je 0x400c0eb	      4121	tc-i386.c	FUNCTION_68	IF_22
0x400bfe8	    0x833d00000000	               cmp dword [0x0400bfef], 0	      4121	tc-i386.c	FUNCTION_68	IF_22
0x400bfef	     0xf84f6000000	                            je 0x400c0eb	      4121	tc-i386.c	FUNCTION_68	IF_22
0x400bff5	    0x488b05000000	            mov rax, qword [0x0400bffc] 	      1895	tc-i386.c	FUNCTION_21	SWITCH_1
0x400bffc	        0x48c1e810	                           shr rax, 0x10	      1895	tc-i386.c	FUNCTION_21	SWITCH_1
0x400c000	            0xa85f	                           test al, 0x5f	      5762	tc-i386.c	FUNCTION_78	CALL_1
0x400c002	        0x400f94c5	                                sete bpl	      5762	tc-i386.c	FUNCTION_78	CALL_1
0x400c006	        0x400fb6ed	                          movzx ebp, bpl	      5762	tc-i386.c	FUNCTION_78	CALL_1
0x400c00a	          0x4863c5	                         movsxd rax, ebp	      5763	tc-i386.c	FUNCTION_78	IF_1
0x400c00d	        0x4883c006	                              add rax, 6	      5763	tc-i386.c	FUNCTION_78	IF_1
0x400c011	    0xf604c5000000	                    test byte [rax*8], 4	      5763	tc-i386.c	FUNCTION_78	IF_1
0x400c019	            0x7464	                            je 0x400c07f	      5763	tc-i386.c	FUNCTION_78	IF_1
0x400c01b	    0x488b05000000	            mov rax, qword [0x0400c022] 	      5765	tc-i386.c	FUNCTION_78	IF_1	IF_2
0x400c022	    0x483d00000000	                              cmp rax, 0	      5765	tc-i386.c	FUNCTION_78	IF_1	IF_2
0x400c028	            0x7442	                            je 0x400c06c	      5765	tc-i386.c	FUNCTION_78	IF_1	IF_2
0x400c02a	          0x4885c0	                           test rax, rax	      5765	tc-i386.c	FUNCTION_78	IF_1	IF_2
0x400c02d	            0x743d	                            je 0x400c06c	      5765	tc-i386.c	FUNCTION_78	IF_1	IF_2
0x400c02f	    0x4c8b25000000	            mov r12, qword [0x0400c036] 	      5767	tc-i386.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x400c036	    0x488b1d000000	            mov rbx, qword [0x0400c03d] 	      5767	tc-i386.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x400c03d	      0xba05000000	                              mov edx, 5	      5767	tc-i386.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x400c042	      0xbe00000000	                              mov esi, 0	      5767	tc-i386.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x400c047	      0xbf00000000	                              mov edi, 0	      5767	tc-i386.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x400c04c	      0xe800000000	                          call 0x400c051	      5767	tc-i386.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x400c051	          0x8d5501	                      lea edx, [rbp + 1]	      5767	tc-i386.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x400c054	          0x4c89e1	                            mov rcx, r12	      5767	tc-i386.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x400c057	          0x4889de	                            mov rsi, rbx	      5767	tc-i386.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x400c05a	          0x4889c7	                            mov rdi, rax	      5767	tc-i386.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x400c05d	      0xb800000000	                              mov eax, 0	      5767	tc-i386.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x400c062	      0xe800000000	                          call 0x400c067	      5767	tc-i386.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x400c067	      0xe98a250000	                           jmp 0x400e5f6	      5767	tc-i386.c	FUNCTION_78	IF_1	IF_2	CALL_3
0x400c06c	    0x488b05000000	            mov rax, qword [0x0400c073] 	      5777	tc-i386.c	FUNCTION_78	IF_1
0x400c073	    0x488905000000	            mov qword [0x0400c07a], rax 	      5777	tc-i386.c	FUNCTION_78	IF_1
0x400c07a	      0xe99a230000	                           jmp 0x400e419	      5777	tc-i386.c	FUNCTION_78	IF_1
0x400c07f	          0x8d4501	                      lea eax, [rbp + 1]	      5779	tc-i386.c	FUNCTION_78	ELSE_1	IF_3
0x400c082	            0x4898	                                    cdqe	      5779	tc-i386.c	FUNCTION_78	ELSE_1	IF_3
0x400c084	    0xf604c5000000	                    test byte [rax*8], 4	      5779	tc-i386.c	FUNCTION_78	ELSE_1	IF_3
0x400c08c	     0xf8487230000	                            je 0x400e419	      5779	tc-i386.c	FUNCTION_78	ELSE_1	IF_3
0x400c092	    0x488b05000000	            mov rax, qword [0x0400c099] 	      5781	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4
0x400c099	    0x483d00000000	                              cmp rax, 0	      5781	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4
0x400c09f	     0xf8474230000	                            je 0x400e419	      5781	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4
0x400c0a5	          0x4885c0	                           test rax, rax	      5781	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4
0x400c0a8	     0xf846b230000	                            je 0x400e419	      5781	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4
0x400c0ae	    0x4c8b25000000	            mov r12, qword [0x0400c0b5] 	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x400c0b5	    0x488b1d000000	            mov rbx, qword [0x0400c0bc] 	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x400c0bc	      0xba05000000	                              mov edx, 5	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x400c0c1	      0xbe00000000	                              mov esi, 0	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x400c0c6	      0xbf00000000	                              mov edi, 0	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x400c0cb	      0xe800000000	                          call 0x400c0d0	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x400c0d0	          0x8d5502	                      lea edx, [rbp + 2]	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x400c0d3	          0x4c89e1	                            mov rcx, r12	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x400c0d6	          0x4889de	                            mov rsi, rbx	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x400c0d9	          0x4889c7	                            mov rdi, rax	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x400c0dc	      0xb800000000	                              mov eax, 0	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x400c0e1	      0xe800000000	                          call 0x400c0e6	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x400c0e6	      0xe90b250000	                           jmp 0x400e5f6	      5783	tc-i386.c	FUNCTION_78	ELSE_1	IF_3	IF_4	CALL_5
0x400c0eb	    0x833d00000000	               cmp dword [0x0400c0f2], 0	      4128	tc-i386.c	FUNCTION_68	IF_24
0x400c0f2	            0x7417	                            je 0x400c10b	      4128	tc-i386.c	FUNCTION_68	IF_24
0x400c0f4	    0x833d00000000	               cmp dword [0x0400c0fb], 0	      4128	tc-i386.c	FUNCTION_68	IF_24
0x400c0fb	            0x750e	                           jne 0x400c10b	      4128	tc-i386.c	FUNCTION_68	IF_24
0x400c0fd	    0xf60500000000	           test byte [0x0400c104], 0x20 	      4128	tc-i386.c	FUNCTION_68	IF_24
0x400c104	            0x7405	                            je 0x400c10b	      4128	tc-i386.c	FUNCTION_68	IF_24
0x400c106	      0xe87144ffff	              call sym.optimize_encoding	      4129	tc-i386.c	FUNCTION_68	CALL_39
0x400c10b	     0xfb605000000	           movzx eax, byte [0x0400c112] 	      5798	tc-i386.c	FUNCTION_79	IF_1
0x400c112	            0xa808	                              test al, 8	      5798	tc-i386.c	FUNCTION_79	IF_1
0x400c114	            0x740c	                            je 0x400c122	      5798	tc-i386.c	FUNCTION_79	IF_1
0x400c116	    0xc60500000000	            mov byte [0x0400c11d], 0x77 	      5799	tc-i386.c	FUNCTION_79	IF_1
0x400c11d	      0xe967230000	                           jmp 0x400e489	      5799	tc-i386.c	FUNCTION_79	IF_1
0x400c122	            0xa810	                           test al, 0x10	      5800	tc-i386.c	FUNCTION_79	ELSE_1	IF_2
0x400c124	            0x740c	                            je 0x400c132	      5800	tc-i386.c	FUNCTION_79	ELSE_1	IF_2
0x400c126	    0xc60500000000	            mov byte [0x0400c12d], 0x6c 	      5801	tc-i386.c	FUNCTION_79	ELSE_1	IF_2
0x400c12d	      0xe96f230000	                           jmp 0x400e4a1	      5801	tc-i386.c	FUNCTION_79	ELSE_1	IF_2
0x400c132	            0xa820	                           test al, 0x20	      5802	tc-i386.c	FUNCTION_79	ELSE_2	IF_3
0x400c134	            0x740c	                            je 0x400c142	      5802	tc-i386.c	FUNCTION_79	ELSE_2	IF_3
0x400c136	    0xc60500000000	            mov byte [0x0400c13d], 0x71 	      5803	tc-i386.c	FUNCTION_79	ELSE_2	IF_3
0x400c13d	      0xe947230000	                           jmp 0x400e489	      5803	tc-i386.c	FUNCTION_79	ELSE_2	IF_3
0x400c142	    0x833d00000000	               cmp dword [0x0400c149], 0	      5804	tc-i386.c	FUNCTION_79	ELSE_3	IF_4
0x400c149	     0xf84a7090000	                            je 0x400caf6	      5804	tc-i386.c	FUNCTION_79	ELSE_3	IF_4
0x400c14f	    0x440fb60d0000	           movzx r9d, byte [0x0400c157] 	      5808	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5
0x400c157	          0x4584c9	                           test r9b, r9b	      5808	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5
0x400c15a	     0xf8560010000	                           jne 0x400c2c0	      5808	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5
0x400c160	    0x8b0500000000	            mov eax, dword [0x0400c166] 	      5814	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6
0x400c166	      0x3df1380ff2	                     cmp eax, 0xf20f38f1	      5814	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6
0x400c16b	            0x755f	                           jne 0x400c1cc	      5814	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6
0x400c16d	    0x8b0500000000	            mov eax, dword [0x0400c173] 	      5816	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	IF_7
0x400c173	            0x89c2	                            mov edx, eax	      5816	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	IF_7
0x400c175	    0x81e201000040	                     and edx, 0x40000001	      5816	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	IF_7
0x400c17b	    0x81fa01000040	                     cmp edx, 0x40000001	      5816	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	IF_7
0x400c181	            0x750c	                           jne 0x400c18f	      5816	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	IF_7
0x400c183	    0xc60500000000	            mov byte [0x0400c18a], 0x77 	      5817	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	IF_7
0x400c18a	      0xe95b240000	                           jmp 0x400e5ea	      5817	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	IF_7
0x400c18f	      0x2501000080	                     and eax, 0x80000001	      5818	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_4	IF_8
0x400c194	      0x3d01000080	                     cmp eax, 0x80000001	      5818	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_4	IF_8
0x400c199	            0x750c	                           jne 0x400c1a7	      5818	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_4	IF_8
0x400c19b	    0xc60500000000	            mov byte [0x0400c1a2], 0x6c 	      5819	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_4	IF_8
0x400c1a2	      0xe943240000	                           jmp 0x400e5ea	      5819	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_4	IF_8
0x400c1a7	    0x48b801000000	                 movabs rax, 0x200000001	      5820	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_5	IF_9
0x400c1b1	          0x4889c2	                            mov rdx, rax	      5820	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_5	IF_9
0x400c1b4	    0x482315000000	             and rdx, qword [0x0400c1bb]	      5820	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_5	IF_9
0x400c1bb	          0x4839c2	                            cmp rdx, rax	      5820	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_5	IF_9
0x400c1be	            0x7535	                           jne 0x400c1f5	      5820	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_5	IF_9
0x400c1c0	    0xc60500000000	            mov byte [0x0400c1c7], 0x71 	      5821	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_5	IF_9
0x400c1c7	      0xe91e240000	                           jmp 0x400e5ea	      5821	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_6	ELSE_5	IF_9
0x400c1cc	      0x3df0380ff2	                     cmp eax, 0xf20f38f0	      5823	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	ELSE_6	IF_10
0x400c1d1	     0xf8551220000	                           jne 0x400e428	      5823	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	ELSE_6	IF_10
0x400c1d7	    0x8b0500000000	            mov eax, dword [0x0400c1dd] 	      5825	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	ELSE_6	IF_10	IF_11
0x400c1dd	      0x2501000020	                     and eax, 0x20000001	      5825	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	ELSE_6	IF_10	IF_11
0x400c1e2	      0x3d01000020	                     cmp eax, 0x20000001	      5825	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	ELSE_6	IF_10	IF_11
0x400c1e7	            0x750c	                           jne 0x400c1f5	      5825	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	ELSE_6	IF_10	IF_11
0x400c1e9	    0xc60500000000	            mov byte [0x0400c1f0], 0x62 	      5826	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	ELSE_6	IF_10	IF_11
0x400c1f0	      0xe9f5230000	                           jmp 0x400e5ea	      5826	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	ELSE_6	IF_10	IF_11
0x400c1f5	    0x488b1d000000	            mov rbx, qword [0x0400c1fc] 	      5837	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13	CALL_2
0x400c1fc	      0xba05000000	                              mov edx, 5	      5837	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13	CALL_2
0x400c201	      0xbe00000000	                              mov esi, 0	      5837	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13	CALL_2
0x400c206	      0xbf00000000	                              mov edi, 0	      5837	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13	CALL_2
0x400c20b	      0xe800000000	                          call 0x400c210	      5837	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13	CALL_2
0x400c210	          0x4889de	                            mov rsi, rbx	      5837	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13	CALL_2
0x400c213	          0x4889c7	                            mov rdi, rax	      5837	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13	CALL_2
0x400c216	      0xb800000000	                              mov eax, 0	      5837	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13	CALL_2
0x400c21b	      0xe800000000	                          call 0x400c220	      5837	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13	CALL_2
0x400c220	      0xe9d1230000	                           jmp 0x400e5f6	      5837	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13	CALL_2
0x400c225	    0x8b0500000000	            mov eax, dword [0x0400c22b] 	      5842	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1
0x400c22b	      0xe982000000	                           jmp 0x400c2b2	      5842	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1
0x400c230	          0x4863d0	                         movsxd rdx, eax	      5843	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14
0x400c233	    0x803cd5000000	                     cmp byte [rdx*8], 0	      5843	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14
0x400c23b	            0x7875	                            js 0x400c2b2	      5843	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14
0x400c23d	    0xf604d5000000	                    test byte [rdx*8], 1	      5844	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14
0x400c245	            0x756b	                           jne 0x400c2b2	      5844	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14
0x400c247	    0xf604d5000000	                    test byte [rdx*8], 1	      5846	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	IF_15
0x400c24f	            0x7461	                            je 0x400c2b2	      5846	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	IF_15
0x400c251	    0xf604d5000000	                 test byte [rdx*8], 0x20	      5848	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	IF_16
0x400c259	            0x740c	                            je 0x400c267	      5848	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	IF_16
0x400c25b	    0xc60500000000	            mov byte [0x0400c262], 0x62 	      5849	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	IF_16
0x400c262	      0xe9d90b0000	                           jmp 0x400ce40	      5849	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	IF_16
0x400c267	          0x4863d0	                         movsxd rdx, eax	      5850	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_7	IF_17
0x400c26a	    0xf604d5000000	                 test byte [rdx*8], 0x40	      5850	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_7	IF_17
0x400c272	            0x740c	                            je 0x400c280	      5850	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_7	IF_17
0x400c274	    0xc60500000000	            mov byte [0x0400c27b], 0x77 	      5851	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_7	IF_17
0x400c27b	      0xe909220000	                           jmp 0x400e489	      5851	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_7	IF_17
0x400c280	          0x4863d0	                         movsxd rdx, eax	      5852	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_8	IF_18
0x400c283	    0x803cd5000000	                     cmp byte [rdx*8], 0	      5852	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_8	IF_18
0x400c28b	            0x790c	                           jns 0x400c299	      5852	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_8	IF_18
0x400c28d	    0xc60500000000	            mov byte [0x0400c294], 0x6c 	      5853	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_8	IF_18
0x400c294	      0xe908220000	                           jmp 0x400e4a1	      5853	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_8	IF_18
0x400c299	          0x4863d0	                         movsxd rdx, eax	      5854	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_9	IF_19
0x400c29c	    0xf604d5000000	                    test byte [rdx*8], 2	      5854	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_9	IF_19
0x400c2a4	            0x740c	                            je 0x400c2b2	      5854	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_9	IF_19
0x400c2a6	    0xc60500000000	            mov byte [0x0400c2ad], 0x71 	      5855	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_9	IF_19
0x400c2ad	      0xe9d7210000	                           jmp 0x400e489	      5855	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1	IF_14	ELSE_9	IF_19
0x400c2b2	          0x83e801	                              sub eax, 1	      5842	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1
0x400c2b5	     0xf8975ffffff	                           jns 0x400c230	      5842	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1
0x400c2bb	      0xe9f8080000	                           jmp 0x400cbb8	      5842	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	FOR_1
0x400c2c0	        0x4180f962	                           cmp r9b, 0x62	      5862	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20
0x400c2c4	     0xf8578010000	                           jne 0x400c442	      5862	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20
0x400c2ca	    0x833d00000000	               cmp dword [0x0400c2d1], 0	      5864	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20	IF_21
0x400c2d1	            0x741e	                            je 0x400c2f1	      5864	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20	IF_21
0x400c2d3	    0x8b0500000000	            mov eax, dword [0x0400c2d9] 	      5866	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20	IF_21
0x400c2d9	      0x2500800200	                        and eax, 0x28000	      5866	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20	IF_21
0x400c2de	      0x3d00800200	                        cmp eax, 0x28000	      5866	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20	IF_21
0x400c2e3	            0x750c	                           jne 0x400c2f1	      5866	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20	IF_21
0x400c2e5	    0xc60500000000	                mov byte [0x0400c2ec], 0	      5867	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20	IF_21
0x400c2ec	      0xe903090000	                           jmp 0x400cbf4	      5867	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_10	ELSE_11	IF_20	IF_21
0x400c2f1	    0x8b2d00000000	            mov ebp, dword [0x0400c2f7] 	      6098	tc-i386.c	FUNCTION_80	FOR_1
0x400c2f7	      0xe938010000	                           jmp 0x400c434	      6098	tc-i386.c	FUNCTION_80	FOR_1
0x400c2fc	          0x4863c5	                         movsxd rax, ebp	      6101	tc-i386.c	FUNCTION_80	FOR_1	IF_1
0x400c2ff	    0xf604c5000000	                    test byte [rax*8], 1	      6101	tc-i386.c	FUNCTION_80	FOR_1	IF_1
0x400c307	     0xf8427010000	                            je 0x400c434	      6101	tc-i386.c	FUNCTION_80	FOR_1	IF_1
0x400c30d	    0xf604c5000000	                 test byte [rax*8], 0x20	      6107	tc-i386.c	FUNCTION_80	FOR_1	IF_2
0x400c315	     0xf8519010000	                           jne 0x400c434	      6107	tc-i386.c	FUNCTION_80	FOR_1	IF_2
0x400c31b	    0x803cc5000000	                     cmp byte [rax*8], 0	      6111	tc-i386.c	FUNCTION_80	FOR_1	IF_3
0x400c323	     0xf880b010000	                            js 0x400c434	      6111	tc-i386.c	FUNCTION_80	FOR_1	IF_3
0x400c329	    0x813d00000000	     cmp dword [0x0400c333], 0xf20f38f0 	      6115	tc-i386.c	FUNCTION_80	FOR_1	IF_4
0x400c333	     0xf84fb000000	                            je 0x400c434	      6115	tc-i386.c	FUNCTION_80	FOR_1	IF_4
0x400c339	     0xfb604c50000	                 movzx eax, byte [rax*8]	      6118	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x400c341	          0xc0e806	                               shr al, 6	      6118	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x400c344	          0x83e001	                              and eax, 1	      6118	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x400c347	            0x7517	                           jne 0x400c360	      6118	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x400c349	          0x4863d5	                         movsxd rdx, ebp	      6119	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x400c34c	    0x803cd5000000	                     cmp byte [rdx*8], 0	      6119	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x400c354	            0x780a	                            js 0x400c360	      6119	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x400c356	    0xf604d5000000	                    test byte [rdx*8], 2	      6120	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x400c35e	            0x747e	                            je 0x400c3de	      6120	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x400c360	          0x4863d5	                         movsxd rdx, ebp	      6121	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x400c363	    0x488b14d50000	                  mov rdx, qword [rdx*8]	      6121	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x400c36b	        0x807a1103	                cmp byte [rdx + 0x11], 3	      6121	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x400c36f	            0x776d	                            ja 0x400c3de	      6121	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x400c371	    0x833d00000000	               cmp dword [0x0400c378], 2	      6124	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x400c378	            0x7464	                            je 0x400c3de	      6124	tc-i386.c	FUNCTION_80	FOR_1	IF_5
0x400c37a	    0x833d00000000	               cmp dword [0x0400c381], 0	      6127	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6
0x400c381	     0xf85ad000000	                           jne 0x400c434	      6127	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6
0x400c387	    0x440fbe2d0000	          movsx r13d, byte [0x0400c38f] 	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x400c38f	          0x4c8b22	                    mov r12, qword [rdx]	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x400c392	            0x3c01	                               cmp al, 1	      6130	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6
0x400c394	          0x4819c0	                            sbb rax, rax	      6130	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6
0x400c397	    0x482580feffff	             and rax, 0xfffffffffffffe80	      6130	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6
0x400c39d	    0x4c8bbc02c0fd	      mov r15, qword [rdx + rax - 0x240]	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x400c3a5	    0x4c8b35000000	            mov r14, qword [0x0400c3ac] 	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x400c3ac	      0xba05000000	                              mov edx, 5	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x400c3b1	      0xbe00000000	                              mov esi, 0	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x400c3b6	      0xbf00000000	                              mov edi, 0	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x400c3bb	      0xe800000000	                          call 0x400c3c0	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x400c3c0	          0x4589e9	                           mov r9d, r13d	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x400c3c3	          0x4d89e0	                             mov r8, r12	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x400c3c6	          0x4c89f1	                            mov rcx, r14	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x400c3c9	          0x4c89fa	                            mov rdx, r15	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x400c3cc	          0x4c89f6	                            mov rsi, r14	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x400c3cf	          0x4889c7	                            mov rdi, rax	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x400c3d2	      0xb800000000	                              mov eax, 0	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x400c3d7	      0xe800000000	                          call 0x400c3dc	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x400c3dc	            0xeb56	                           jmp 0x400c434	      6128	tc-i386.c	FUNCTION_80	FOR_1	IF_5	IF_6	CALL_2
0x400c3de	    0x440fbe2d0000	          movsx r13d, byte [0x0400c3e6] 	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x400c3e6	    0x4c8b25000000	            mov r12, qword [0x0400c3ed] 	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x400c3ed	          0x4863ed	                         movsxd rbp, ebp	      6151	tc-i386.c	FUNCTION_80	FOR_1	IF_7
0x400c3f0	    0x488b04ed0000	                  mov rax, qword [rbp*8]	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x400c3f8	          0x488b28	                    mov rbp, qword [rax]	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x400c3fb	    0x488b1d000000	            mov rbx, qword [0x0400c402] 	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x400c402	      0xba05000000	                              mov edx, 5	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x400c407	      0xbe00000000	                              mov esi, 0	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x400c40c	      0xbf00000000	                              mov edi, 0	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x400c411	      0xe800000000	                          call 0x400c416	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x400c416	          0x4589e8	                           mov r8d, r13d	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x400c419	          0x4c89e1	                            mov rcx, r12	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x400c41c	          0x4889ea	                            mov rdx, rbp	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x400c41f	          0x4889de	                            mov rsi, rbx	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x400c422	          0x4889c7	                            mov rdi, rax	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x400c425	      0xb800000000	                              mov eax, 0	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x400c42a	      0xe800000000	                          call 0x400c42f	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x400c42f	      0xe9c2210000	                           jmp 0x400e5f6	      6149	tc-i386.c	FUNCTION_80	FOR_1	IF_7	CALL_4
0x400c434	          0x83ed01	                              sub ebp, 1	      6098	tc-i386.c	FUNCTION_80	FOR_1
0x400c437	     0xf89bffeffff	                           jns 0x400c2fc	      6098	tc-i386.c	FUNCTION_80	FOR_1
0x400c43d	      0xe967070000	                           jmp 0x400cba9	      6098	tc-i386.c	FUNCTION_80	FOR_1
0x400c442	        0x4180f96c	                           cmp r9b, 0x6c	      5871	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23
0x400c446	     0xf8584020000	                           jne 0x400c6d0	      5871	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23
0x400c44c	    0x833d00000000	               cmp dword [0x0400c453], 0	      5873	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x400c453	            0x7425	                            je 0x400c47a	      5873	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x400c455	    0x48b800800800	                 movabs rax, 0x600088000	      5877	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x400c45f	    0x482305000000	             and rax, qword [0x0400c466]	      5877	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x400c466	    0x483d00800800	                        cmp rax, 0x88000	      5877	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x400c46c	            0x750c	                           jne 0x400c47a	      5877	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x400c46e	    0xc60500000000	                mov byte [0x0400c475], 0	      5878	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x400c475	      0xe97a070000	                           jmp 0x400cbf4	      5878	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_13	IF_23	IF_24
0x400c47a	    0x8b2d00000000	            mov ebp, dword [0x0400c480] 	      6165	tc-i386.c	FUNCTION_81	FOR_1
0x400c480	      0xe93d020000	                           jmp 0x400c6c2	      6165	tc-i386.c	FUNCTION_81	FOR_1
0x400c485	          0x4863c5	                         movsxd rax, ebp	      6167	tc-i386.c	FUNCTION_81	FOR_1	IF_1
0x400c488	    0xf604c5000000	                    test byte [rax*8], 1	      6167	tc-i386.c	FUNCTION_81	FOR_1	IF_1
0x400c490	     0xf842c020000	                            je 0x400c6c2	      6167	tc-i386.c	FUNCTION_81	FOR_1	IF_1
0x400c496	    0xf604c5000000	                 test byte [rax*8], 0x20	      6171	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x400c49e	     0xf8481000000	                            je 0x400c525	      6171	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x400c4a4	    0xf604c5000000	                    test byte [rax*8], 1	      6172	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x400c4ac	            0x750a	                           jne 0x400c4b8	      6172	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x400c4ae	    0xf604c5000000	                 test byte [rax*8], 0x20	      6173	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x400c4b6	            0x746d	                            je 0x400c525	      6173	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x400c4b8	          0x4863c5	                         movsxd rax, ebp	      6174	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x400c4bb	    0xf604c5000000	                 test byte [rax*8], 0x40	      6174	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x400c4c3	            0x750a	                           jne 0x400c4cf	      6174	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x400c4c5	    0x803cc5000000	                     cmp byte [rax*8], 0	      6175	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x400c4cd	            0x7956	                           jns 0x400c525	      6175	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x400c4cf	    0x440fbe2d0000	          movsx r13d, byte [0x0400c4d7] 	      6177	tc-i386.c	FUNCTION_81	ELSE_1	IF_2	CALL_2
0x400c4d7	    0x4c8b25000000	            mov r12, qword [0x0400c4de] 	      6177	tc-i386.c	FUNCTION_81	ELSE_1	IF_2	CALL_2
0x400c4de	          0x4863ed	                         movsxd rbp, ebp	      6179	tc-i386.c	FUNCTION_81	ELSE_1	IF_2
0x400c4e1	    0x488b04ed0000	                  mov rax, qword [rbp*8]	      6177	tc-i386.c	FUNCTION_81	ELSE_1	IF_2	CALL_2
0x400c4e9	          0x488b28	                    mov rbp, qword [rax]	      6177	tc-i386.c	FUNCTION_81	ELSE_1	IF_2	CALL_2
0x400c4ec	    0x488b1d000000	            mov rbx, qword [0x0400c4f3] 	      6177	tc-i386.c	FUNCTION_81	ELSE_1	IF_2	CALL_2
0x400c4f3	      0xba05000000	                              mov edx, 5	      6177	tc-i386.c	FUNCTION_81	ELSE_1	IF_2	CALL_2
0x400c4f8	      0xbe00000000	                              mov esi, 0	      6177	tc-i386.c	FUNCTION_81	ELSE_1	IF_2	CALL_2
0x400c4fd	      0xbf00000000	                              mov edi, 0	      6177	tc-i386.c	FUNCTION_81	ELSE_1	IF_2	CALL_2
0x400c502	      0xe800000000	                          call 0x400c507	      6177	tc-i386.c	FUNCTION_81	ELSE_1	IF_2	CALL_2
0x400c507	          0x4589e8	                           mov r8d, r13d	      6177	tc-i386.c	FUNCTION_81	ELSE_1	IF_2	CALL_2
0x400c50a	          0x4c89e1	                            mov rcx, r12	      6177	tc-i386.c	FUNCTION_81	ELSE_1	IF_2	CALL_2
0x400c50d	          0x4889ea	                            mov rdx, rbp	      6177	tc-i386.c	FUNCTION_81	ELSE_1	IF_2	CALL_2
0x400c510	          0x4889de	                            mov rsi, rbx	      6177	tc-i386.c	FUNCTION_81	ELSE_1	IF_2	CALL_2
0x400c513	          0x4889c7	                            mov rdi, rax	      6177	tc-i386.c	FUNCTION_81	ELSE_1	IF_2	CALL_2
0x400c516	      0xb800000000	                              mov eax, 0	      6177	tc-i386.c	FUNCTION_81	ELSE_1	IF_2	CALL_2
0x400c51b	      0xe800000000	                          call 0x400c520	      6177	tc-i386.c	FUNCTION_81	ELSE_1	IF_2	CALL_2
0x400c520	      0xe9d1200000	                           jmp 0x400e5f6	      6177	tc-i386.c	FUNCTION_81	ELSE_1	IF_2	CALL_2
0x400c525	    0x833d00000000	               cmp dword [0x0400c52c], 0	      6185	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x400c52c	            0x740d	                            je 0x400c53b	      6185	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x400c52e	    0x833d00000000	               cmp dword [0x0400c535], 2	      6185	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x400c535	     0xf85e5000000	                           jne 0x400c620	      6185	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x400c53b	          0x4863c5	                         movsxd rax, ebp	      6186	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x400c53e	    0xf604c5000000	                 test byte [rax*8], 0x40	      6186	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x400c546	     0xf84d4000000	                            je 0x400c620	      6186	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x400c54c	    0xf604c5000000	                    test byte [rax*8], 1	      6187	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x400c554	            0x750e	                           jne 0x400c564	      6187	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x400c556	    0xf604c5000000	                 test byte [rax*8], 0x20	      6188	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x400c55e	     0xf845e010000	                            je 0x400c6c2	      6188	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x400c564	          0x4863c5	                         movsxd rax, ebp	      6189	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x400c567	    0x803cc5000000	                     cmp byte [rax*8], 0	      6189	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x400c56f	     0xf89ab000000	                           jns 0x400c620	      6189	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x400c575	    0x833d00000000	               cmp dword [0x0400c57c], 2	      6193	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4
0x400c57c	            0x7549	                           jne 0x400c5c7	      6193	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4
0x400c57e	    0x440fbe250000	          movsx r12d, byte [0x0400c586] 	      6195	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4	CALL_4
0x400c586	    0x488b04c50000	                  mov rax, qword [rax*8]	      6195	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4	CALL_4
0x400c58e	          0x488b28	                    mov rbp, qword [rax]	      6195	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4	CALL_4
0x400c591	    0x488b1d000000	            mov rbx, qword [0x0400c598] 	      6195	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4	CALL_4
0x400c598	      0xba05000000	                              mov edx, 5	      6195	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4	CALL_4
0x400c59d	      0xbe00000000	                              mov esi, 0	      6195	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4	CALL_4
0x400c5a2	      0xbf00000000	                              mov edi, 0	      6195	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4	CALL_4
0x400c5a7	      0xe800000000	                          call 0x400c5ac	      6195	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4	CALL_4
0x400c5ac	          0x4489e1	                           mov ecx, r12d	      6195	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4	CALL_4
0x400c5af	          0x4889ea	                            mov rdx, rbp	      6195	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4	CALL_4
0x400c5b2	          0x4889de	                            mov rsi, rbx	      6195	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4	CALL_4
0x400c5b5	          0x4889c7	                            mov rdi, rax	      6195	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4	CALL_4
0x400c5b8	      0xb800000000	                              mov eax, 0	      6195	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4	CALL_4
0x400c5bd	      0xe800000000	                          call 0x400c5c2	      6195	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4	CALL_4
0x400c5c2	      0xe92f200000	                           jmp 0x400e5f6	      6195	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	IF_4	CALL_4
0x400c5c7	    0x440fbe350000	          movsx r14d, byte [0x0400c5cf] 	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x400c5cf	          0x4863c5	                         movsxd rax, ebp	      6204	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x400c5d2	    0x488b04c50000	                  mov rax, qword [rax*8]	      6204	tc-i386.c	FUNCTION_81	ELSE_2	IF_3
0x400c5da	          0x4c8b28	                    mov r13, qword [rax]	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x400c5dd	    0x4c8bb8800100	           mov r15, qword [rax + 0x180] 	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x400c5e4	    0x4c8b25000000	            mov r12, qword [0x0400c5eb] 	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x400c5eb	      0xba05000000	                              mov edx, 5	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x400c5f0	      0xbe00000000	                              mov esi, 0	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x400c5f5	      0xbf00000000	                              mov edi, 0	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x400c5fa	      0xe800000000	                          call 0x400c5ff	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x400c5ff	          0x4589f1	                           mov r9d, r14d	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x400c602	          0x4d89e8	                             mov r8, r13	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x400c605	          0x4c89e1	                            mov rcx, r12	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x400c608	          0x4c89fa	                            mov rdx, r15	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x400c60b	          0x4c89e6	                            mov rsi, r12	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x400c60e	          0x4889c7	                            mov rdi, rax	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x400c611	      0xb800000000	                              mov eax, 0	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x400c616	      0xe800000000	                          call 0x400c61b	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x400c61b	      0xe9a2000000	                           jmp 0x400c6c2	      6201	tc-i386.c	FUNCTION_81	ELSE_2	IF_3	CALL_6
0x400c620	          0x4863c5	                         movsxd rax, ebp	      6208	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x400c623	    0xf604c5000000	                    test byte [rax*8], 2	      6208	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x400c62b	     0xf8491000000	                            je 0x400c6c2	      6208	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x400c631	    0xf604c5000000	                    test byte [rax*8], 1	      6209	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x400c639	            0x750a	                           jne 0x400c645	      6209	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x400c63b	    0xf604c5000000	                 test byte [rax*8], 0x20	      6210	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x400c643	            0x747d	                            je 0x400c6c2	      6210	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x400c645	          0x4863c5	                         movsxd rax, ebp	      6211	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x400c648	    0x803cc5000000	                     cmp byte [rax*8], 0	      6211	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x400c650	            0x7970	                           jns 0x400c6c2	      6211	tc-i386.c	FUNCTION_81	ELSE_3	IF_5
0x400c652	    0x833d00000000	               cmp dword [0x0400c659], 0	      6213	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	IF_6
0x400c659	            0x741b	                            je 0x400c676	      6213	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	IF_6
0x400c65b	    0xf60500000000	               test byte [0x0400c662], 4	      6214	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	IF_6
0x400c662	            0x7412	                            je 0x400c676	      6214	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	IF_6
0x400c664	    0xf60500000000	               test byte [0x0400c66b], 4	      6215	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	IF_6
0x400c66b	            0x7509	                           jne 0x400c676	      6215	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	IF_6
0x400c66d	    0xc60500000000	            mov byte [0x0400c674], 0x71 	      6218	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	IF_6
0x400c674	            0xeb4c	                           jmp 0x400c6c2	      6218	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	IF_6
0x400c676	    0x440fbe250000	          movsx r12d, byte [0x0400c67e] 	      6222	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4	CALL_8
0x400c67e	          0x4863ed	                         movsxd rbp, ebp	      6223	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4
0x400c681	    0x488b04ed0000	                  mov rax, qword [rbp*8]	      6222	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4	CALL_8
0x400c689	          0x488b28	                    mov rbp, qword [rax]	      6222	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4	CALL_8
0x400c68c	    0x488b1d000000	            mov rbx, qword [0x0400c693] 	      6222	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4	CALL_8
0x400c693	      0xba05000000	                              mov edx, 5	      6222	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4	CALL_8
0x400c698	      0xbe00000000	                              mov esi, 0	      6222	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4	CALL_8
0x400c69d	      0xbf00000000	                              mov edi, 0	      6222	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4	CALL_8
0x400c6a2	      0xe800000000	                          call 0x400c6a7	      6222	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4	CALL_8
0x400c6a7	          0x4489e1	                           mov ecx, r12d	      6222	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4	CALL_8
0x400c6aa	          0x4889ea	                            mov rdx, rbp	      6222	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4	CALL_8
0x400c6ad	          0x4889de	                            mov rsi, rbx	      6222	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4	CALL_8
0x400c6b0	          0x4889c7	                            mov rdi, rax	      6222	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4	CALL_8
0x400c6b3	      0xb800000000	                              mov eax, 0	      6222	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4	CALL_8
0x400c6b8	      0xe800000000	                          call 0x400c6bd	      6222	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4	CALL_8
0x400c6bd	      0xe9341f0000	                           jmp 0x400e5f6	      6222	tc-i386.c	FUNCTION_81	ELSE_3	IF_5	ELSE_4	CALL_8
0x400c6c2	          0x83ed01	                              sub ebp, 1	      6165	tc-i386.c	FUNCTION_81	FOR_1
0x400c6c5	     0xf89bafdffff	                           jns 0x400c485	      6165	tc-i386.c	FUNCTION_81	FOR_1
0x400c6cb	      0xe9d9040000	                           jmp 0x400cba9	      6165	tc-i386.c	FUNCTION_81	FOR_1
0x400c6d0	        0x4180f971	                           cmp r9b, 0x71	      5882	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26
0x400c6d4	     0xf850a020000	                           jne 0x400c8e4	      5882	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26
0x400c6da	    0x448b05000000	            mov r8d, dword [0x0400c6e1] 	      5884	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x400c6e1	          0x4585c0	                           test r8d, r8d	      5884	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x400c6e4	            0x7425	                            je 0x400c70b	      5884	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x400c6e6	    0x48b800802000	                 movabs rax, 0x600208000	      5888	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x400c6f0	    0x482305000000	             and rax, qword [0x0400c6f7]	      5888	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x400c6f7	    0x483d00802000	                       cmp rax, 0x208000	      5888	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x400c6fd	            0x750c	                           jne 0x400c70b	      5888	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x400c6ff	    0xc60500000000	                mov byte [0x0400c706], 0	      5889	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x400c706	      0xe9e9040000	                           jmp 0x400cbf4	      5889	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_15	IF_26	IF_27
0x400c70b	    0x8b0500000000	            mov eax, dword [0x0400c711] 	      6236	tc-i386.c	FUNCTION_82	FOR_1
0x400c711	     0xfb635000000	           movzx esi, byte [0x0400c718] 	      6265	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x400c718	          0x83e602	                              and esi, 2	      6265	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x400c71b	     0xfb60d000000	           movzx ecx, byte [0x0400c722] 	      6266	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x400c722	          0x83e104	                              and ecx, 4	      6266	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x400c725	      0xba00000000	                              mov edx, 0	      6266	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x400c72a	      0xe991010000	                           jmp 0x400c8c0	      6266	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x400c72f	          0x4863f8	                         movsxd rdi, eax	      6238	tc-i386.c	FUNCTION_82	FOR_1	IF_1
0x400c732	    0xf604fd000000	                    test byte [rdi*8], 1	      6238	tc-i386.c	FUNCTION_82	FOR_1	IF_1
0x400c73a	     0xf8480010000	                            je 0x400c8c0	      6238	tc-i386.c	FUNCTION_82	FOR_1	IF_1
0x400c740	    0xf604fd000000	                 test byte [rdi*8], 0x20	      6242	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x400c748	     0xf849f000000	                            je 0x400c7ed	      6242	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x400c74e	    0xf604fd000000	                    test byte [rdi*8], 1	      6243	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x400c756	            0x750e	                           jne 0x400c766	      6243	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x400c758	    0xf604fd000000	                 test byte [rdi*8], 0x20	      6244	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x400c760	     0xf84d51c0000	                            je 0x400e43b	      6244	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x400c766	          0x4863f8	                         movsxd rdi, eax	      6245	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x400c769	    0xf604fd000000	                 test byte [rdi*8], 0x40	      6245	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x400c771	            0x740d	                            je 0x400c780	      6245	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x400c773	            0x84d2	                             test dl, dl	      6245	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x400c775	            0x7421	                            je 0x400c798	      6245	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x400c777	    0x44880d000000	              mov byte [0x0400c77e], r9b	      6245	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x400c77e	            0xeb18	                           jmp 0x400c798	      6245	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x400c780	          0x4863f8	                         movsxd rdi, eax	      6246	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x400c783	    0x803cfd000000	                     cmp byte [rdi*8], 0	      6246	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x400c78b	            0x7960	                           jns 0x400c7ed	      6246	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x400c78d	            0x84d2	                             test dl, dl	      6246	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x400c78f	            0x7407	                            je 0x400c798	      6246	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x400c791	    0x44880d000000	              mov byte [0x0400c798], r9b	      6246	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x400c798	    0x440fbe2d0000	          movsx r13d, byte [0x0400c7a0] 	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x400c7a0	    0x4c8b25000000	            mov r12, qword [0x0400c7a7] 	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x400c7a7	            0x4898	                                    cdqe	      6250	tc-i386.c	FUNCTION_82	ELSE_1	IF_2
0x400c7a9	    0x488b04c50000	                  mov rax, qword [rax*8]	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x400c7b1	          0x488b28	                    mov rbp, qword [rax]	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x400c7b4	    0x488b1d000000	            mov rbx, qword [0x0400c7bb] 	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x400c7bb	      0xba05000000	                              mov edx, 5	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x400c7c0	      0xbe00000000	                              mov esi, 0	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x400c7c5	      0xbf00000000	                              mov edi, 0	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x400c7ca	      0xe800000000	                          call 0x400c7cf	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x400c7cf	          0x4589e8	                           mov r8d, r13d	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x400c7d2	          0x4c89e1	                            mov rcx, r12	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x400c7d5	          0x4889ea	                            mov rdx, rbp	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x400c7d8	          0x4889de	                            mov rsi, rbx	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x400c7db	          0x4889c7	                            mov rdi, rax	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x400c7de	      0xb800000000	                              mov eax, 0	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x400c7e3	      0xe800000000	                          call 0x400c7e8	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x400c7e8	      0xe9091e0000	                           jmp 0x400e5f6	      6248	tc-i386.c	FUNCTION_82	ELSE_1	IF_2	CALL_2
0x400c7ed	          0x4863f8	                         movsxd rdi, eax	      6256	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x400c7f0	    0xf604fd000000	                 test byte [rdi*8], 0x40	      6256	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x400c7f8	            0x750e	                           jne 0x400c808	      6256	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x400c7fa	    0x803cfd000000	                     cmp byte [rdi*8], 0	      6257	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x400c802	     0xf89b8000000	                           jns 0x400c8c0	      6257	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x400c808	          0x4863f8	                         movsxd rdi, eax	      6258	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x400c80b	    0xf604fd000000	                    test byte [rdi*8], 1	      6258	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x400c813	            0x7511	                           jne 0x400c826	      6258	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x400c815	          0x4863f8	                         movsxd rdi, eax	      6259	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x400c818	    0xf604fd000000	                 test byte [rdi*8], 0x20	      6259	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x400c820	     0xf849a000000	                            je 0x400c8c0	      6259	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x400c826	          0x4863f8	                         movsxd rdi, eax	      6260	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x400c829	    0xf604fd000000	                    test byte [rdi*8], 2	      6260	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x400c831	     0xf8489000000	                            je 0x400c8c0	      6260	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x400c837	          0x4585c0	                           test r8d, r8d	      6264	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x400c83a	            0x7423	                            je 0x400c85f	      6264	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x400c83c	          0x4084f6	                           test sil, sil	      6265	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x400c83f	            0x750d	                           jne 0x400c84e	      6265	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x400c841	            0x84d2	                             test dl, dl	      6265	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x400c843	            0x7425	                            je 0x400c86a	      6265	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x400c845	    0x44880d000000	              mov byte [0x0400c84c], r9b	      6265	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x400c84c	            0xeb1c	                           jmp 0x400c86a	      6265	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x400c84e	            0x84c9	                             test cl, cl	      6266	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x400c850	            0x7463	                            je 0x400c8b5	      6266	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x400c852	            0x84d2	                             test dl, dl	      6266	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x400c854	            0x7414	                            je 0x400c86a	      6266	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x400c856	    0x44880d000000	              mov byte [0x0400c85d], r9b	      6266	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x400c85d	            0xeb0b	                           jmp 0x400c86a	      6266	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x400c85f	            0x84d2	                             test dl, dl	      6266	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x400c861	            0x7407	                            je 0x400c86a	      6266	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x400c863	    0x44880d000000	              mov byte [0x0400c86a], r9b	      6266	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x400c86a	    0x440fbe250000	          movsx r12d, byte [0x0400c872] 	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x400c872	            0x4898	                                    cdqe	      6274	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3
0x400c874	    0x488b04c50000	                  mov rax, qword [rax*8]	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x400c87c	          0x488b28	                    mov rbp, qword [rax]	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x400c87f	    0x488b1d000000	            mov rbx, qword [0x0400c886] 	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x400c886	      0xba05000000	                              mov edx, 5	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x400c88b	      0xbe00000000	                              mov esi, 0	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x400c890	      0xbf00000000	                              mov edi, 0	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x400c895	      0xe800000000	                          call 0x400c89a	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x400c89a	          0x4489e1	                           mov ecx, r12d	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x400c89d	          0x4889ea	                            mov rdx, rbp	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x400c8a0	          0x4889de	                            mov rsi, rbx	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x400c8a3	          0x4889c7	                            mov rdi, rax	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x400c8a6	      0xb800000000	                              mov eax, 0	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x400c8ab	      0xe800000000	                          call 0x400c8b0	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x400c8b0	      0xe9411d0000	                           jmp 0x400e5f6	      6273	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	ELSE_3	CALL_4
0x400c8b5	      0xba01000000	                              mov edx, 1	      6266	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x400c8ba	    0x41b96c000000	                           mov r9d, 0x6c	      6269	tc-i386.c	FUNCTION_82	ELSE_2	IF_3	IF_4
0x400c8c0	          0x83e801	                              sub eax, 1	      6236	tc-i386.c	FUNCTION_82	FOR_1
0x400c8c3	     0xf8966feffff	                           jns 0x400c72f	      6236	tc-i386.c	FUNCTION_82	FOR_1
0x400c8c9	     0xfb605000000	           movzx eax, byte [0x0400c8d0] 	      5943	tc-i386.c	FUNCTION_79	IF_38
0x400c8d0	            0x84d2	                             test dl, dl	      5943	tc-i386.c	FUNCTION_79	IF_38
0x400c8d2	     0xf84c3030000	                            je 0x400cc9b	      5943	tc-i386.c	FUNCTION_79	IF_38
0x400c8d8	    0x44880d000000	              mov byte [0x0400c8df], r9b	      5943	tc-i386.c	FUNCTION_79	IF_38
0x400c8df	      0xe9c5020000	                           jmp 0x400cba9	      5943	tc-i386.c	FUNCTION_79	IF_38
0x400c8e4	        0x4180f977	                           cmp r9b, 0x77	      5893	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29
0x400c8e8	     0xf85e3010000	                           jne 0x400cad1	      5893	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29
0x400c8ee	    0x833d00000000	               cmp dword [0x0400c8f5], 0	      5895	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29	IF_30
0x400c8f5	            0x741e	                            je 0x400c915	      5895	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29	IF_30
0x400c8f7	    0x8b0500000000	            mov eax, dword [0x0400c8fd] 	      5897	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29	IF_30
0x400c8fd	      0x2500800400	                        and eax, 0x48000	      5897	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29	IF_30
0x400c902	      0x3d00800400	                        cmp eax, 0x48000	      5897	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29	IF_30
0x400c907	            0x750c	                           jne 0x400c915	      5897	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29	IF_30
0x400c909	    0xc60500000000	                mov byte [0x0400c910], 0	      5898	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29	IF_30
0x400c910	      0xe9df020000	                           jmp 0x400cbf4	      5898	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_17	IF_29	IF_30
0x400c915	    0x8b2d00000000	            mov ebp, dword [0x0400c91b] 	      6286	tc-i386.c	FUNCTION_83	FOR_1
0x400c91b	      0xe9a3010000	                           jmp 0x400cac3	      6286	tc-i386.c	FUNCTION_83	FOR_1
0x400c920	          0x4863c5	                         movsxd rax, ebp	      6288	tc-i386.c	FUNCTION_83	FOR_1	IF_1
0x400c923	    0xf604c5000000	                    test byte [rax*8], 1	      6288	tc-i386.c	FUNCTION_83	FOR_1	IF_1
0x400c92b	     0xf8492010000	                            je 0x400cac3	      6288	tc-i386.c	FUNCTION_83	FOR_1	IF_1
0x400c931	    0xf604c5000000	                 test byte [rax*8], 0x20	      6292	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400c939	     0xf8481000000	                            je 0x400c9c0	      6292	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400c93f	    0xf604c5000000	                    test byte [rax*8], 1	      6293	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400c947	            0x750a	                           jne 0x400c953	      6293	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400c949	    0xf604c5000000	                 test byte [rax*8], 0x20	      6294	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400c951	            0x746d	                            je 0x400c9c0	      6294	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400c953	          0x4863c5	                         movsxd rax, ebp	      6295	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400c956	    0xf604c5000000	                 test byte [rax*8], 0x40	      6295	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400c95e	            0x750a	                           jne 0x400c96a	      6295	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400c960	    0x803cc5000000	                     cmp byte [rax*8], 0	      6296	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400c968	            0x7956	                           jns 0x400c9c0	      6296	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400c96a	    0x440fbe2d0000	          movsx r13d, byte [0x0400c972] 	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x400c972	    0x4c8b25000000	            mov r12, qword [0x0400c979] 	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x400c979	          0x4863ed	                         movsxd rbp, ebp	      6300	tc-i386.c	FUNCTION_83	ELSE_1	IF_2
0x400c97c	    0x488b04ed0000	                  mov rax, qword [rbp*8]	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x400c984	          0x488b28	                    mov rbp, qword [rax]	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x400c987	    0x488b1d000000	            mov rbx, qword [0x0400c98e] 	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x400c98e	      0xba05000000	                              mov edx, 5	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x400c993	      0xbe00000000	                              mov esi, 0	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x400c998	      0xbf00000000	                              mov edi, 0	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x400c99d	      0xe800000000	                          call 0x400c9a2	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x400c9a2	          0x4589e8	                           mov r8d, r13d	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x400c9a5	          0x4c89e1	                            mov rcx, r12	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x400c9a8	          0x4889ea	                            mov rdx, rbp	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x400c9ab	          0x4889de	                            mov rsi, rbx	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x400c9ae	          0x4889c7	                            mov rdi, rax	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x400c9b1	      0xb800000000	                              mov eax, 0	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x400c9b6	      0xe800000000	                          call 0x400c9bb	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x400c9bb	      0xe9361c0000	                           jmp 0x400e5f6	      6298	tc-i386.c	FUNCTION_83	ELSE_1	IF_2	CALL_2
0x400c9c0	    0x833d00000000	               cmp dword [0x0400c9c7], 0	      6306	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400c9c7	            0x740d	                            je 0x400c9d6	      6306	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400c9c9	    0x833d00000000	               cmp dword [0x0400c9d0], 2	      6306	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400c9d0	     0xf85ed000000	                           jne 0x400cac3	      6306	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400c9d6	          0x4863c5	                         movsxd rax, ebp	      6307	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400c9d9	    0x803cc5000000	                     cmp byte [rax*8], 0	      6307	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400c9e1	            0x780e	                            js 0x400c9f1	      6307	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400c9e3	    0xf604c5000000	                    test byte [rax*8], 2	      6308	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400c9eb	     0xf84d2000000	                            je 0x400cac3	      6308	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400c9f1	          0x4863c5	                         movsxd rax, ebp	      6309	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400c9f4	    0xf604c5000000	                    test byte [rax*8], 1	      6309	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400c9fc	            0x750e	                           jne 0x400ca0c	      6309	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400c9fe	    0xf604c5000000	                 test byte [rax*8], 0x20	      6310	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400ca06	     0xf84b7000000	                            je 0x400cac3	      6310	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400ca0c	          0x4863c5	                         movsxd rax, ebp	      6311	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400ca0f	    0xf604c5000000	                 test byte [rax*8], 0x40	      6311	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400ca17	     0xf84a6000000	                            je 0x400cac3	      6311	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400ca1d	    0x833d00000000	               cmp dword [0x0400ca24], 2	      6315	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4
0x400ca24	            0x7549	                           jne 0x400ca6f	      6315	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4
0x400ca26	    0x440fbe250000	          movsx r12d, byte [0x0400ca2e] 	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x400ca2e	    0x488b04c50000	                  mov rax, qword [rax*8]	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x400ca36	          0x488b28	                    mov rbp, qword [rax]	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x400ca39	    0x488b1d000000	            mov rbx, qword [0x0400ca40] 	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x400ca40	      0xba05000000	                              mov edx, 5	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x400ca45	      0xbe00000000	                              mov esi, 0	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x400ca4a	      0xbf00000000	                              mov edi, 0	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x400ca4f	      0xe800000000	                          call 0x400ca54	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x400ca54	          0x4489e1	                           mov ecx, r12d	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x400ca57	          0x4889ea	                            mov rdx, rbp	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x400ca5a	          0x4889de	                            mov rsi, rbx	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x400ca5d	          0x4889c7	                            mov rdi, rax	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x400ca60	      0xb800000000	                              mov eax, 0	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x400ca65	      0xe800000000	                          call 0x400ca6a	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x400ca6a	      0xe9871b0000	                           jmp 0x400e5f6	      6317	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	IF_4	CALL_4
0x400ca6f	    0x440fbe350000	          movsx r14d, byte [0x0400ca77] 	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x400ca77	          0x4863c5	                         movsxd rax, ebp	      6326	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400ca7a	    0x488b04c50000	                  mov rax, qword [rax*8]	      6326	tc-i386.c	FUNCTION_83	ELSE_2	IF_3
0x400ca82	          0x4c8b28	                    mov r13, qword [rax]	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x400ca85	    0x4c8bb880feff	            mov r15, qword [rax - 0x180]	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x400ca8c	    0x4c8b25000000	            mov r12, qword [0x0400ca93] 	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x400ca93	      0xba05000000	                              mov edx, 5	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x400ca98	      0xbe00000000	                              mov esi, 0	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x400ca9d	      0xbf00000000	                              mov edi, 0	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x400caa2	      0xe800000000	                          call 0x400caa7	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x400caa7	          0x4589f1	                           mov r9d, r14d	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x400caaa	          0x4d89e8	                             mov r8, r13	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x400caad	          0x4c89e1	                            mov rcx, r12	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x400cab0	          0x4c89fa	                            mov rdx, r15	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x400cab3	          0x4c89e6	                            mov rsi, r12	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x400cab6	          0x4889c7	                            mov rdi, rax	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x400cab9	      0xb800000000	                              mov eax, 0	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x400cabe	      0xe800000000	                          call 0x400cac3	      6323	tc-i386.c	FUNCTION_83	ELSE_2	IF_3	CALL_6
0x400cac3	          0x83ed01	                              sub ebp, 1	      6286	tc-i386.c	FUNCTION_83	FOR_1
0x400cac6	     0xf8954feffff	                           jns 0x400c920	      6286	tc-i386.c	FUNCTION_83	FOR_1
0x400cacc	      0xe9d8000000	                           jmp 0x400cba9	      6286	tc-i386.c	FUNCTION_83	FOR_1
0x400cad1	    0x833d00000000	               cmp dword [0x0400cad8], 0	      5902	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_19	IF_32
0x400cad8	            0x7408	                            je 0x400cae2	      5902	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_19	IF_32
0x400cada	            0x84c0	                             test al, al	      5902	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_19	IF_32
0x400cadc	     0xf88b3190000	                            js 0x400e495	      5902	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	ELSE_19	IF_32
0x400cae2	      0xba00000000	                              mov edx, 0	      5906	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	CALL_7
0x400cae7	      0xbe12170000	                         mov esi, 0x1712	      5906	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	CALL_7
0x400caec	      0xbf00000000	                              mov edi, 0	      5906	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	CALL_7
0x400caf1	      0xe800000000	                          call 0x400caf6	      5906	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	CALL_7
0x400caf6	     0xfb605000000	           movzx eax, byte [0x0400cafd] 	      5908	tc-i386.c	FUNCTION_79	ELSE_21	IF_33
0x400cafd	            0xa801	                              test al, 1	      5908	tc-i386.c	FUNCTION_79	ELSE_21	IF_33
0x400caff	            0x7427	                            je 0x400cb28	      5908	tc-i386.c	FUNCTION_79	ELSE_21	IF_33
0x400cb01	    0x803d00000000	                cmp byte [0x0400cb08], 0	      5909	tc-i386.c	FUNCTION_79	ELSE_21	IF_33
0x400cb08	     0xf856d1a0000	                           jne 0x400e57b	      5909	tc-i386.c	FUNCTION_79	ELSE_21	IF_33
0x400cb0e	            0xa810	                           test al, 0x10	      5911	tc-i386.c	FUNCTION_79	ELSE_21	IF_33
0x400cb10	     0xf843b190000	                            je 0x400e451	      5911	tc-i386.c	FUNCTION_79	ELSE_21	IF_33
0x400cb16	     0xfb605000000	           movzx eax, byte [0x0400cb1d] 	      5913	tc-i386.c	FUNCTION_79	ELSE_21	IF_33
0x400cb1d	    0x880500000000	               mov byte [0x0400cb23], al	      5913	tc-i386.c	FUNCTION_79	ELSE_21	IF_33
0x400cb23	      0xe981000000	                           jmp 0x400cba9	      5913	tc-i386.c	FUNCTION_79	ELSE_21	IF_33
0x400cb28	    0x833d00000000	               cmp dword [0x0400cb2f], 0	      5915	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x400cb2f	     0xf8478190000	                            je 0x400e4ad	      5915	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x400cb35	    0x803d00000000	                cmp byte [0x0400cb3c], 0	      5916	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x400cb3c	     0xf8553190000	                           jne 0x400e495	      5916	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x400cb42	    0xf60500000000	               test byte [0x0400cb49], 2	      5917	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x400cb49	     0xf8514190000	                           jne 0x400e463	      5917	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x400cb4f	    0x66f705000000	          test word [0x0400cb58], 0x180 	      5919	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x400cb58	     0xf8505190000	                           jne 0x400e463	      5919	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x400cb5e	    0x813d00000000	          cmp dword [0x0400cb68], 0xf01 	      5920	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x400cb68	            0x754e	                           jne 0x400cbb8	      5920	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x400cb6a	    0x833d00000000	               cmp dword [0x0400cb71], 3	      5921	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x400cb71	     0xf86ec180000	                           jbe 0x400e463	      5921	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x400cb77	            0xeb3f	                           jmp 0x400cbb8	      5921	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x400cb79	            0xa820	                           test al, 0x20	      5926	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_35
0x400cb7b	            0x750c	                           jne 0x400cb89	      5926	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_35
0x400cb7d	    0xc60500000000	            mov byte [0x0400cb84], 0x71 	      5928	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_35
0x400cb84	      0xe900190000	                           jmp 0x400e489	      5928	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_35
0x400cb89	            0xa808	                              test al, 8	      5933	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_36
0x400cb8b	            0x752b	                           jne 0x400cbb8	      5933	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_36
0x400cb8d	    0xc60500000000	            mov byte [0x0400cb94], 0x6c 	      5934	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_36
0x400cb94	      0xe908190000	                           jmp 0x400e4a1	      5934	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_36
0x400cb99	            0xa804	                              test al, 4	      5937	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_37
0x400cb9b	            0x751b	                           jne 0x400cbb8	      5937	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_37
0x400cb9d	    0xc60500000000	            mov byte [0x0400cba4], 0x77 	      5938	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_37
0x400cba4	      0xe9e0180000	                           jmp 0x400e489	      5938	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1	IF_37
0x400cba9	     0xfb605000000	           movzx eax, byte [0x0400cbb0] 	      5943	tc-i386.c	FUNCTION_79	IF_38
0x400cbb0	            0x84c0	                             test al, al	      5943	tc-i386.c	FUNCTION_79	IF_38
0x400cbb2	     0xf85e3000000	                           jne 0x400cc9b	      5943	tc-i386.c	FUNCTION_79	IF_38
0x400cbb8	    0x833d00000000	               cmp dword [0x0400cbbf], 0	      5945	tc-i386.c	FUNCTION_79	IF_38	IF_39
0x400cbbf	            0x7533	                           jne 0x400cbf4	      5945	tc-i386.c	FUNCTION_79	IF_38	IF_39
0x400cbc1	    0xf60500000000	               test byte [0x0400cbc8], 2	      5947	tc-i386.c	FUNCTION_79	IF_38	IF_39	IF_40
0x400cbc8	     0xf8465020000	                            je 0x400ce33	      5947	tc-i386.c	FUNCTION_79	IF_38	IF_39	IF_40
0x400cbce	      0xba05000000	                              mov edx, 5	      5949	tc-i386.c	FUNCTION_79	IF_38	IF_39	IF_40	CALL_9
0x400cbd3	      0xbe00000000	                              mov esi, 0	      5949	tc-i386.c	FUNCTION_79	IF_38	IF_39	IF_40	CALL_9
0x400cbd8	      0xbf00000000	                              mov edi, 0	      5949	tc-i386.c	FUNCTION_79	IF_38	IF_39	IF_40	CALL_9
0x400cbdd	      0xe800000000	                          call 0x400cbe2	      5949	tc-i386.c	FUNCTION_79	IF_38	IF_39	IF_40	CALL_9
0x400cbe2	          0x4889c7	                            mov rdi, rax	      5949	tc-i386.c	FUNCTION_79	IF_38	IF_39	IF_40	CALL_9
0x400cbe5	      0xb800000000	                              mov eax, 0	      5949	tc-i386.c	FUNCTION_79	IF_38	IF_39	IF_40	CALL_9
0x400cbea	      0xe800000000	                          call 0x400cbef	      5949	tc-i386.c	FUNCTION_79	IF_38	IF_39	IF_40	CALL_9
0x400cbef	      0xe9021a0000	                           jmp 0x400e5f6	      5949	tc-i386.c	FUNCTION_79	IF_38	IF_39	IF_40	CALL_9
0x400cbf4	     0xfb60d000000	           movzx ecx, byte [0x0400cbfb] 	      5958	tc-i386.c	FUNCTION_79	IF_38	ELSE_23
0x400cbfb	            0x89c8	                            mov eax, ecx	      5958	tc-i386.c	FUNCTION_79	IF_38	ELSE_23
0x400cbfd	            0xd0e8	                               shr al, 1	      5958	tc-i386.c	FUNCTION_79	IF_38	ELSE_23
0x400cbff	          0x83f001	                              xor eax, 1	      5958	tc-i386.c	FUNCTION_79	IF_38	ELSE_23
0x400cc02	            0x89c2	                            mov edx, eax	      5958	tc-i386.c	FUNCTION_79	IF_38	ELSE_23
0x400cc04	          0x83e201	                              and edx, 1	      5958	tc-i386.c	FUNCTION_79	IF_38	ELSE_23
0x400cc07	            0x89d0	                            mov eax, edx	      5960	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_41
0x400cc09	          0x83c802	                               or eax, 2	      5960	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_41
0x400cc0c	          0xf6c104	                              test cl, 4	      5960	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_41
0x400cc0f	           0xf45c2	                         cmovne eax, edx	      5960	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_41
0x400cc12	            0x89c2	                            mov edx, eax	      5962	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_42
0x400cc14	          0x83ca04	                               or edx, 4	      5962	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_42
0x400cc17	          0xf6c108	                              test cl, 8	      5962	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_42
0x400cc1a	           0xf44c2	                          cmove eax, edx	      5962	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_42
0x400cc1d	            0x89c2	                            mov edx, eax	      5964	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_43
0x400cc1f	          0x83ca08	                               or edx, 8	      5964	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_43
0x400cc22	          0xf6c140	                           test cl, 0x40	      5964	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_43
0x400cc25	           0xf44c2	                          cmove eax, edx	      5964	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_43
0x400cc28	            0x89c2	                            mov edx, eax	      5966	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_44
0x400cc2a	          0x83ca10	                            or edx, 0x10	      5966	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_44
0x400cc2d	          0xf6c110	                           test cl, 0x10	      5966	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_44
0x400cc30	           0xf44c2	                          cmove eax, edx	      5966	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_44
0x400cc33	    0x833d00000000	               cmp dword [0x0400cc3a], 2	      5967	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_45
0x400cc3a	            0x750b	                           jne 0x400cc47	      5967	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_45
0x400cc3c	            0x89c2	                            mov edx, eax	      5968	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_45
0x400cc3e	          0x83ca20	                            or edx, 0x20	      5968	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_45
0x400cc41	          0xf6c120	                           test cl, 0x20	      5968	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_45
0x400cc44	           0xf44c2	                          cmove eax, edx	      5968	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_45
0x400cc47	    0xf60500000000	               test byte [0x0400cc4e], 2	      5971	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46
0x400cc4e	            0x751b	                           jne 0x400cc6b	      5971	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46
0x400cc50	          0x8d50ff	                      lea edx, [rax - 1]	      5972	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46
0x400cc53	            0x85c2	                           test edx, eax	      5972	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46
0x400cc55	     0xf84d8010000	                            je 0x400ce33	      5972	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46
0x400cc5b	    0xf70500000000	       test dword [0x0400cc65], 0x18000 	      5974	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46
0x400cc65	     0xf85c8010000	                           jne 0x400ce33	      5974	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46
0x400cc6b	    0x488b1d000000	            mov rbx, qword [0x0400cc72] 	      5976	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46	CALL_11
0x400cc72	      0xba05000000	                              mov edx, 5	      5976	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46	CALL_11
0x400cc77	      0xbe00000000	                              mov esi, 0	      5976	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46	CALL_11
0x400cc7c	      0xbf00000000	                              mov edi, 0	      5976	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46	CALL_11
0x400cc81	      0xe800000000	                          call 0x400cc86	      5976	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46	CALL_11
0x400cc86	          0x4889de	                            mov rsi, rbx	      5976	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46	CALL_11
0x400cc89	          0x4889c7	                            mov rdi, rax	      5976	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46	CALL_11
0x400cc8c	      0xb800000000	                              mov eax, 0	      5976	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46	CALL_11
0x400cc91	      0xe800000000	                          call 0x400cc96	      5976	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46	CALL_11
0x400cc96	      0xe95b190000	                           jmp 0x400e5f6	      5976	tc-i386.c	FUNCTION_79	IF_38	ELSE_23	IF_46	CALL_11
0x400cc9b	            0x3c71	                            cmp al, 0x71	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x400cc9d	            0x7431	                            je 0x400ccd0	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x400cc9f	            0x3c71	                            cmp al, 0x71	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x400cca1	            0x7f0a	                            jg 0x400ccad	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x400cca3	            0x3c6c	                            cmp al, 0x6c	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x400cca5	     0xf8588010000	                           jne 0x400ce33	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x400ccab	            0xeb0e	                           jmp 0x400ccbb	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x400ccad	            0x3c73	                            cmp al, 0x73	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x400ccaf	            0x7440	                            je 0x400ccf1	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x400ccb1	            0x3c77	                            cmp al, 0x77	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x400ccb3	     0xf857a010000	                           jne 0x400ce33	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x400ccb9	            0xeb15	                           jmp 0x400ccd0	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x400ccbb	    0xf60500000000	               test byte [0x0400ccc2], 2	      5987	tc-i386.c	FUNCTION_79	SWITCH_2	IF_47
0x400ccc2	            0x740c	                            je 0x400ccd0	      5987	tc-i386.c	FUNCTION_79	SWITCH_2	IF_47
0x400ccc4	    0x833500000000	               xor dword [0x0400cccb], 4	      5989	tc-i386.c	FUNCTION_79	SWITCH_2	IF_47
0x400cccb	      0xe963010000	                           jmp 0x400ce33	      5989	tc-i386.c	FUNCTION_79	SWITCH_2	IF_47
0x400ccd0	     0xfb615000000	           movzx edx, byte [0x0400ccd7] 	      5996	tc-i386.c	FUNCTION_79	SWITCH_2	IF_48
0x400ccd7	          0xf6c202	                              test dl, 2	      5996	tc-i386.c	FUNCTION_79	SWITCH_2	IF_48
0x400ccda	            0x7415	                            je 0x400ccf1	      5996	tc-i386.c	FUNCTION_79	SWITCH_2	IF_48
0x400ccdc	          0xf6c210	                           test dl, 0x10	      5998	tc-i386.c	FUNCTION_79	SWITCH_2	IF_48	IF_49
0x400ccdf	            0x7409	                            je 0x400ccea	      5998	tc-i386.c	FUNCTION_79	SWITCH_2	IF_48	IF_49
0x400cce1	    0x830d00000000	                or dword [0x0400cce8], 8	      5999	tc-i386.c	FUNCTION_79	SWITCH_2	IF_48	IF_49
0x400cce8	            0xeb07	                           jmp 0x400ccf1	      5999	tc-i386.c	FUNCTION_79	SWITCH_2	IF_48	IF_49
0x400ccea	    0x830d00000000	                or dword [0x0400ccf1], 1	      6001	tc-i386.c	FUNCTION_79	SWITCH_2	IF_48	ELSE_24
0x400ccf1	    0x833d00000000	               cmp dword [0x0400ccf8], 0	      6008	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x400ccf8	            0x7462	                            je 0x400cd5c	      6008	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x400ccfa	    0xf60500000000	               test byte [0x0400cd01], 1	      6009	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x400cd01	            0x7459	                            je 0x400cd5c	      6009	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x400cd03	     0xfb615000000	           movzx edx, byte [0x0400cd0a] 	      6010	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x400cd0a	          0xf6c208	                              test dl, 8	      6010	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x400cd0d	            0x744d	                            je 0x400cd5c	      6010	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x400cd0f	          0xf6c220	                           test dl, 0x20	      6011	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x400cd12	            0x7509	                           jne 0x400cd1d	      6011	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x400cd14	    0x833d00000000	               cmp dword [0x0400cd1b], 1	      6012	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x400cd1b	            0x753f	                           jne 0x400cd5c	      6012	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50
0x400cd1d	    0x833d00000000	               cmp dword [0x0400cd24], 0	      6016	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x400cd24	            0x7512	                           jne 0x400cd38	      6016	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x400cd26	    0x488b05000000	            mov rax, qword [0x0400cd2d] 	      6017	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x400cd2d	        0xf6400b40	            test byte [rax + 0xb], 0x40 	      6017	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x400cd31	            0x7516	                           jne 0x400cd49	      6017	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x400cd33	      0xe986000000	                           jmp 0x400cdbe	      6017	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x400cd38	    0x488b05000000	            mov rax, qword [0x0400cd3f] 	      6019	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x400cd3f	        0x80780b00	                 cmp byte [rax + 0xb], 0	      6019	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x400cd43	     0xf8984180000	                           jns 0x400e5cd	      6019	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51
0x400cd49	      0xbf67000000	                           mov edi, 0x67	      6020	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51	IF_52	CALL_12
0x400cd4e	      0xe8cb57ffff	                     call sym.add_prefix	      6020	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51	IF_52	CALL_12
0x400cd53	            0x85c0	                           test eax, eax	      6020	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51	IF_52	CALL_12
0x400cd55	            0x7567	                           jne 0x400cdbe	      6020	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51	IF_52	CALL_12
0x400cd57	      0xe99a180000	                           jmp 0x400e5f6	      6020	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_24	IF_50	IF_51	IF_52	CALL_12
0x400cd5c	            0x3c71	                            cmp al, 0x71	      6023	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x400cd5e	            0x7467	                            je 0x400cdc7	      6023	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x400cd60	    0xf60500000000	           test byte [0x0400cd67], 0x82 	      6025	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x400cd67	     0xf85c6000000	                           jne 0x400ce33	      6025	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x400cd6d	    0x8b1500000000	            mov edx, dword [0x0400cd73] 	      6026	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x400cd73	            0x3c6c	                            cmp al, 0x6c	      6026	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x400cd75	           0xf95c1	                                setne cl	      6026	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x400cd78	          0x83fa01	                              cmp edx, 1	      6026	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x400cd7b	           0xf94c0	                                 sete al	      6026	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x400cd7e	            0x38c1	                              cmp cl, al	      6026	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x400cd80	            0x7517	                           jne 0x400cd99	      6026	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x400cd82	          0x83fa02	                              cmp edx, 2	      6027	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x400cd85	     0xf85a8000000	                           jne 0x400ce33	      6027	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x400cd8b	    0x803d00000000	                cmp byte [0x0400cd92], 0	      6028	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x400cd92	            0x7818	                            js 0x400cdac	      6028	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x400cd94	      0xe99a000000	                           jmp 0x400ce33	      6028	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53
0x400cd99	     0xfb605000000	           movzx eax, byte [0x0400cda0] 	      6032	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53	IF_54
0x400cda0	          0x83e080	                     and eax, 0xffffff80	      6032	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53	IF_54
0x400cda3	            0x3c01	                               cmp al, 1	      6033	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53	IF_54
0x400cda5	            0x19ff	                            sbb edi, edi	      6033	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53	IF_54
0x400cda7	          0x83c767	                           add edi, 0x67	      6033	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53	IF_54
0x400cdaa	            0xeb05	                           jmp 0x400cdb1	      6033	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53	IF_54
0x400cdac	      0xbf67000000	                           mov edi, 0x67	      6033	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53	IF_54
0x400cdb1	      0xe86857ffff	                     call sym.add_prefix	      6035	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53	IF_55	CALL_13
0x400cdb6	            0x85c0	                           test eax, eax	      6035	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53	IF_55	CALL_13
0x400cdb8	     0xf8438180000	                            je 0x400e5f6	      6035	tc-i386.c	FUNCTION_79	SWITCH_2	ELSE_25	IF_53	IF_55	CALL_13
0x400cdbe	    0x803d00000000	            cmp byte [0x0400cdc5], 0x71 	      6040	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x400cdc5	            0x756c	                           jne 0x400ce33	      6040	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x400cdc7	    0x833d00000000	               cmp dword [0x0400cdce], 2	      6041	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x400cdce	            0x7563	                           jne 0x400ce33	      6041	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x400cdd0	    0xf60500000000	           test byte [0x0400cdd7], 0x40 	      6042	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x400cdd7	            0x755a	                           jne 0x400ce33	      6042	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x400cdd9	    0x8b3500000000	            mov esi, dword [0x0400cddf] 	      6045	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x400cddf	          0x83fe02	                              cmp esi, 2	      6045	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x400cde2	            0x7548	                           jne 0x400ce2c	      6045	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x400cde4	    0x813d00000000	           cmp dword [0x0400cdee], 0x90 	      6046	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x400cdee	            0x753c	                           jne 0x400ce2c	      6046	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x400cdf0	    0x813d00000000	         cmp dword [0x0400cdfa], 0xffff 	      6047	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x400cdfa	            0x7530	                           jne 0x400ce2c	      6047	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x400cdfc	    0x8b1500000000	            mov edx, dword [0x0400ce02] 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400ce02	    0x3b1500000000	            cmp edx, dword [0x0400ce08] 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400ce08	            0x7522	                           jne 0x400ce2c	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400ce0a	    0x8b0500000000	            mov eax, dword [0x0400ce10] 	      1559	tc-i386.c	FUNCTION_9	SWITCH_1
0x400ce10	    0x3b0500000000	            cmp eax, dword [0x0400ce16] 	      6048	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56	CALL_14
0x400ce16	            0x7514	                           jne 0x400ce2c	      6048	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56	CALL_14
0x400ce18	    0x3b1500000000	            cmp edx, dword [0x0400ce1e] 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400ce1e	            0x750c	                           jne 0x400ce2c	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400ce20	    0x3b0500000000	            cmp eax, dword [0x0400ce26] 	      6045	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x400ce26	     0xf84ac160000	                            je 0x400e4d8	      6045	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x400ce2c	    0x830d00000000	                or dword [0x0400ce33], 8	      6050	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x400ce33	    0x833d00000000	               cmp dword [0x0400ce3a], 0	      6055	tc-i386.c	FUNCTION_79	IF_57
0x400ce3a	     0xf84e9000000	                            je 0x400cf29	      6055	tc-i386.c	FUNCTION_79	IF_57
0x400ce40	    0x8b3500000000	            mov esi, dword [0x0400ce46] 	      6056	tc-i386.c	FUNCTION_79	IF_57
0x400ce46	          0x83fe01	                              cmp esi, 1	      6056	tc-i386.c	FUNCTION_79	IF_57
0x400ce49	     0xf86da000000	                           jbe 0x400cf29	      6056	tc-i386.c	FUNCTION_79	IF_57
0x400ce4f	     0xfb605000000	           movzx eax, byte [0x0400ce56] 	      6058	tc-i386.c	FUNCTION_79	IF_57
0x400ce56	          0x83e028	                           and eax, 0x28	      6058	tc-i386.c	FUNCTION_79	IF_57
0x400ce59	            0x3c08	                               cmp al, 8	      6058	tc-i386.c	FUNCTION_79	IF_57
0x400ce5b	     0xf85c8000000	                           jne 0x400cf29	      6058	tc-i386.c	FUNCTION_79	IF_57
0x400ce61	    0x8b0500000000	            mov eax, dword [0x0400ce67] 	      6065	tc-i386.c	FUNCTION_79	IF_57	IF_58
0x400ce67	            0x85c0	                           test eax, eax	      6065	tc-i386.c	FUNCTION_79	IF_57	IF_58
0x400ce69	            0x7511	                           jne 0x400ce7c	      6065	tc-i386.c	FUNCTION_79	IF_57	IF_58
0x400ce6b	    0x803d00000000	                cmp byte [0x0400ce72], 0	      6066	tc-i386.c	FUNCTION_79	IF_57	IF_58
0x400ce72	        0x400f94c7	                                sete dil	      6066	tc-i386.c	FUNCTION_79	IF_57	IF_58
0x400ce76	        0x400fb6ff	                          movzx edi, dil	      6066	tc-i386.c	FUNCTION_79	IF_57	IF_58
0x400ce7a	            0xeb1b	                           jmp 0x400ce97	      6066	tc-i386.c	FUNCTION_79	IF_57	IF_58
0x400ce7c	      0xbf01000000	                              mov edi, 1	      6070	tc-i386.c	FUNCTION_79	IF_57	ELSE_26	IF_59
0x400ce81	    0x803d00000000	                cmp byte [0x0400ce88], 0	      6069	tc-i386.c	FUNCTION_79	IF_57	ELSE_26	IF_59
0x400ce88	            0x750d	                           jne 0x400ce97	      6069	tc-i386.c	FUNCTION_79	IF_57	ELSE_26	IF_59
0x400ce8a	          0x83f802	                              cmp eax, 2	      6072	tc-i386.c	FUNCTION_79	IF_57	ELSE_26	ELSE_27
0x400ce8d	        0x400f94c7	                                sete dil	      6072	tc-i386.c	FUNCTION_79	IF_57	ELSE_26	ELSE_27
0x400ce91	        0x400fb6ff	                          movzx edi, dil	      6072	tc-i386.c	FUNCTION_79	IF_57	ELSE_26	ELSE_27
0x400ce95	             0x1ff	                            add edi, edi	      6072	tc-i386.c	FUNCTION_79	IF_57	ELSE_26	ELSE_27
0x400ce97	            0x85f6	                           test esi, esi	      6075	tc-i386.c	FUNCTION_79	IF_57	FOR_2
0x400ce99	     0xf848a000000	                            je 0x400cf29	      6075	tc-i386.c	FUNCTION_79	IF_57	FOR_2
0x400ce9f	      0xba00000000	                              mov edx, 0	      6075	tc-i386.c	FUNCTION_79	IF_57	FOR_2
0x400cea4	      0xb800000000	                              mov eax, 0	      6075	tc-i386.c	FUNCTION_79	IF_57	FOR_2
0x400cea9	            0x89c1	                            mov ecx, eax	      6076	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x400ceab	    0xf604cd000000	                    test byte [rcx*8], 1	      6076	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x400ceb3	            0x7469	                            je 0x400cf1e	      6076	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x400ceb5	            0x85ff	                           test edi, edi	      6077	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x400ceb7	            0x750f	                           jne 0x400cec8	      6077	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x400ceb9	    0x488b8aa00000	            mov rcx, qword [rdx + 0xa0] 	      6078	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x400cec0	        0xf6410b40	            test byte [rcx + 0xb], 0x40 	      6078	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x400cec4	            0x7558	                           jne 0x400cf1e	      6078	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x400cec6	            0xeb26	                           jmp 0x400ceee	      6078	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x400cec8	          0x83ff01	                              cmp edi, 1	      6079	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x400cecb	            0x750f	                           jne 0x400cedc	      6079	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x400cecd	    0x488b8aa00000	            mov rcx, qword [rdx + 0xa0] 	      6080	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x400ced4	        0x80790b00	                 cmp byte [rcx + 0xb], 0	      6080	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x400ced8	            0x7844	                            js 0x400cf1e	      6080	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x400ceda	            0xeb12	                           jmp 0x400ceee	      6080	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x400cedc	          0x83ff02	                              cmp edi, 2	      6081	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x400cedf	            0x753d	                           jne 0x400cf1e	      6081	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x400cee1	    0x488b8aa00000	            mov rcx, qword [rdx + 0xa0] 	      6082	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x400cee8	        0xf6410c02	                test byte [rcx + 0xc], 2	      6082	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x400ceec	            0x7530	                           jne 0x400cf1e	      6082	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60
0x400ceee	    0x488b1d000000	            mov rbx, qword [0x0400cef5] 	      6084	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60	CALL_17
0x400cef5	      0xba05000000	                              mov edx, 5	      6084	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60	CALL_17
0x400cefa	      0xbe00000000	                              mov esi, 0	      6084	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60	CALL_17
0x400ceff	      0xbf00000000	                              mov edi, 0	      6084	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60	CALL_17
0x400cf04	      0xe800000000	                          call 0x400cf09	      6084	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60	CALL_17
0x400cf09	          0x4889de	                            mov rsi, rbx	      6084	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60	CALL_17
0x400cf0c	          0x4889c7	                            mov rdi, rax	      6084	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60	CALL_17
0x400cf0f	      0xb800000000	                              mov eax, 0	      6084	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60	CALL_17
0x400cf14	      0xe800000000	                          call 0x400cf19	      6084	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60	CALL_17
0x400cf19	      0xe9d8160000	                           jmp 0x400e5f6	      6084	tc-i386.c	FUNCTION_79	IF_57	FOR_2	IF_60	CALL_17
0x400cf1e	          0x83c001	                              add eax, 1	      6075	tc-i386.c	FUNCTION_79	IF_57	FOR_2
0x400cf21	        0x4883c208	                              add rdx, 8	      6075	tc-i386.c	FUNCTION_79	IF_57	FOR_2
0x400cf25	            0x39f0	                            cmp eax, esi	      6075	tc-i386.c	FUNCTION_79	IF_57	FOR_2
0x400cf27	            0x7580	                           jne 0x400cea9	      6075	tc-i386.c	FUNCTION_79	IF_57	FOR_2
0x400cf29	    0x833d00000000	               cmp dword [0x0400cf30], 0	      4135	tc-i386.c	FUNCTION_68	FOR_2
0x400cf30	     0xf84d6020000	                            je 0x400d20c	      4135	tc-i386.c	FUNCTION_68	FOR_2
0x400cf36	      0xba00000000	                              mov edx, 0	      4135	tc-i386.c	FUNCTION_68	FOR_2
0x400cf3b	            0x89d1	                            mov ecx, edx	      4135	tc-i386.c	FUNCTION_68	FOR_2
0x400cf3d	    0x488d04cd0000	                        lea rax, [rcx*8]	      4135	tc-i386.c	FUNCTION_68	FOR_2
0x400cf45	    0x488d34cd0000	                        lea rsi, [rcx*8]	      4135	tc-i386.c	FUNCTION_68	FOR_2
0x400cf4d	          0x8b4e08	                mov ecx, dword [rsi + 8]	      1762	tc-i386.c	ELSE_3	FUNCTION_17	SWITCH_1
0x400cf50	          0x234804	                and ecx, dword [rax + 4]	      1762	tc-i386.c	ELSE_3	FUNCTION_17	SWITCH_1
0x400cf53	          0x8b7604	                mov esi, dword [rsi + 4]	      4136	tc-i386.c	FUNCTION_68	CALL_41
0x400cf56	            0x2130	                    and dword [rax], esi	      4136	tc-i386.c	FUNCTION_68	CALL_41
0x400cf58	          0x894804	                mov dword [rax + 4], ecx	      4136	tc-i386.c	FUNCTION_68	CALL_41
0x400cf5b	          0x83c201	                              add edx, 1	      4135	tc-i386.c	FUNCTION_68	FOR_2
0x400cf5e	    0x8b0500000000	            mov eax, dword [0x0400cf64] 	      4135	tc-i386.c	FUNCTION_68	FOR_2
0x400cf64	            0x39d0	                            cmp eax, edx	      4135	tc-i386.c	FUNCTION_68	FOR_2
0x400cf66	            0x77d3	                            ja 0x400cf3b	      4135	tc-i386.c	FUNCTION_68	FOR_2
0x400cf68	          0x83f802	                              cmp eax, 2	      6402	tc-i386.c	FUNCTION_85
0x400cf6b	      0xba02000000	                              mov edx, 2	      6402	tc-i386.c	FUNCTION_85
0x400cf70	           0xf47c2	                          cmova eax, edx	      6402	tc-i386.c	FUNCTION_85
0x400cf73	            0x85c0	                           test eax, eax	      6403	tc-i386.c	FUNCTION_85	IF_1
0x400cf75	     0xf8491020000	                            je 0x400d20c	      6403	tc-i386.c	FUNCTION_85	IF_1
0x400cf7b	      0xb900000000	                              mov ecx, 0	      6403	tc-i386.c	FUNCTION_85	IF_1
0x400cf80	          0x8d40ff	                      lea eax, [rax - 1]	      6403	tc-i386.c	FUNCTION_85	IF_1
0x400cf83	    0x4c8d04c50000	                         lea r8, [rax*8]	      6403	tc-i386.c	FUNCTION_85	IF_1
0x400cf8b	      0xbd00400000	                         mov ebp, 0x4000	      6375	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400cf90	    0x41bb00100000	                        mov r11d, 0x1000	      6375	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400cf96	    0x41ba00000000	                             mov r10d, 0	      6375	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400cf9c	    0x49b900000000	           movabs r9, 0xffffffff00000000	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x400cfa6	          0x4889ce	                            mov rsi, rcx	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x400cfa9	        0x488b5178	            mov rdx, qword [rcx + 0x78] 	      6335	tc-i386.c	FUNCTION_84
0x400cfad	          0x8b417c	            mov eax, dword [rcx + 0x7c] 	      6335	tc-i386.c	FUNCTION_84
0x400cfb0	           0xfb6fe	                           movzx edi, dh	      6341	tc-i386.c	FUNCTION_84	IF_1
0x400cfb3	        0x40f6c7fc	                          test dil, 0xfc	      6336	tc-i386.c	FUNCTION_84	IF_1
0x400cfb7	     0xf8418020000	                            je 0x400d1d5	      6336	tc-i386.c	FUNCTION_84	IF_1
0x400cfbd	    0x390500000000	            cmp dword [0x0400cfc3], eax 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400cfc3	            0x750c	                           jne 0x400cfd1	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400cfc5	    0x391500000000	            cmp dword [0x0400cfcb], edx 	      6342	tc-i386.c	FUNCTION_84	IF_1	CALL_1
0x400cfcb	     0xf84da010000	                            je 0x400d1ab	      6342	tc-i386.c	FUNCTION_84	IF_1	CALL_1
0x400cfd1	    0x390500000000	            cmp dword [0x0400cfd7], eax 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400cfd7	            0x750c	                           jne 0x400cfe5	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400cfd9	    0x391500000000	            cmp dword [0x0400cfdf], edx 	      6343	tc-i386.c	FUNCTION_84	IF_1	CALL_2
0x400cfdf	     0xf84ce010000	                            je 0x400d1b3	      6343	tc-i386.c	FUNCTION_84	IF_1	CALL_2
0x400cfe5	    0x390500000000	            cmp dword [0x0400cfeb], eax 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400cfeb	            0x750c	                           jne 0x400cff9	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400cfed	    0x391500000000	            cmp dword [0x0400cff3], edx 	      6344	tc-i386.c	FUNCTION_84	IF_1	CALL_3
0x400cff3	     0xf84c2010000	                            je 0x400d1bb	      6344	tc-i386.c	FUNCTION_84	IF_1	CALL_3
0x400cff9	    0x390500000000	            cmp dword [0x0400cfff], eax 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400cfff	            0x750c	                           jne 0x400d00d	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400d001	    0x391500000000	            cmp dword [0x0400d007], edx 	      6345	tc-i386.c	FUNCTION_84	IF_1	CALL_4
0x400d007	     0xf84b6010000	                            je 0x400d1c3	      6345	tc-i386.c	FUNCTION_84	IF_1	CALL_4
0x400d00d	    0x8b3d00000000	            mov edi, dword [0x0400d013] 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400d013	            0x39c7	                            cmp edi, eax	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400d015	            0x750c	                           jne 0x400d023	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400d017	    0x391500000000	            cmp dword [0x0400d01d], edx 	      6346	tc-i386.c	FUNCTION_84	IF_1	CALL_5
0x400d01d	     0xf84a8010000	                            je 0x400d1cb	      6346	tc-i386.c	FUNCTION_84	IF_1	CALL_5
0x400d023	    0x8b3d00000000	            mov edi, dword [0x0400d029] 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400d029	            0x39c7	                            cmp edi, eax	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400d02b	            0x750c	                           jne 0x400d039	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400d02d	    0x391500000000	            cmp dword [0x0400d033], edx 	      6347	tc-i386.c	FUNCTION_84	IF_1	CALL_6
0x400d033	     0xf8496010000	                            je 0x400d1cf	      6347	tc-i386.c	FUNCTION_84	IF_1	CALL_6
0x400d039	     0xfb63d000000	           movzx edi, byte [0x0400d040] 	      6349	tc-i386.c	FUNCTION_84	IF_1	IF_2
0x400d040	          0x4084ff	                           test dil, dil	      6349	tc-i386.c	FUNCTION_84	IF_1	IF_2
0x400d043	            0x747c	                            je 0x400d0c1	      6349	tc-i386.c	FUNCTION_84	IF_1	IF_2
0x400d045	        0x488b0424	                    mov rax, qword [rsp]	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x400d049	          0x4c21c8	                             and rax, r9	      1536	tc-i386.c	FUNCTION_8	SWITCH_1
0x400d04c	        0x4080ff62	                           cmp dil, 0x62	      6354	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400d050	            0x751b	                           jne 0x400d06d	      6354	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400d052	          0x4889d7	                            mov rdi, rdx	      6356	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400d055	    0x81e700040000	                          and edi, 0x400	      6356	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400d05b	    0x81e200080000	                          and edx, 0x800	      6357	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400d061	          0x4809f8	                             or rax, rdi	      6357	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400d064	          0x4809d0	                             or rax, rdx	      6357	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400d067	        0x48890424	                    mov qword [rsp], rax	      6357	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400d06b	            0xeb45	                           jmp 0x400d0b2	      6357	tc-i386.c	FUNCTION_84	IF_1	IF_2	IF_3
0x400d06d	        0x4080ff77	                           cmp dil, 0x77	      6359	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_1	IF_4
0x400d071	            0x750f	                           jne 0x400d082	      6359	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_1	IF_4
0x400d073	    0x81e200100000	                         and edx, 0x1000	      6360	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_1	IF_4
0x400d079	          0x4809d0	                             or rax, rdx	      6360	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_1	IF_4
0x400d07c	        0x48890424	                    mov qword [rsp], rax	      6360	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_1	IF_4
0x400d080	            0xeb30	                           jmp 0x400d0b2	      6360	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_1	IF_4
0x400d082	          0x4989d4	                            mov r12, rdx	      6367	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_3
0x400d085	    0x4181e4002000	                        and r12d, 0x2000	      6367	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_3
0x400d08c	          0x4909c4	                             or r12, rax	      6367	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_3
0x400d08f	        0x4c892424	                    mov qword [rsp], r12	      6367	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_3
0x400d093	        0x4080ff71	                           cmp dil, 0x71	      6361	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400d097	            0x7519	                           jne 0x400d0b2	      6361	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400d099	          0x4889d7	                            mov rdi, rdx	      6363	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400d09c	    0x81e700800000	                         and edi, 0x8000	      6363	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400d0a2	    0x81e200400000	                         and edx, 0x4000	      6364	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400d0a8	          0x4809f8	                             or rax, rdi	      6364	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400d0ab	          0x4809d0	                             or rax, rdx	      6364	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400d0ae	        0x48890424	                    mov qword [rsp], rax	      6364	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_2	IF_5
0x400d0b2	          0x8b0424	                    mov eax, dword [rsp]	      6368	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_3
0x400d0b5	        0x48890424	                    mov qword [rsp], rax	      6368	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_3
0x400d0b9	          0x4889c2	                            mov rdx, rax	      6368	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_3
0x400d0bc	          0x4489d0	                           mov eax, r10d	      6368	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_3
0x400d0bf	            0xeb56	                           jmp 0x400d117	      6368	tc-i386.c	FUNCTION_84	IF_1	IF_2	ELSE_3
0x400d0c1	    0x390500000000	            cmp dword [0x0400d0c7], eax 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400d0c7	            0x7508	                           jne 0x400d0d1	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400d0c9	    0x391500000000	            cmp dword [0x0400d0cf], edx 	      6370	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	CALL_8
0x400d0cf	            0x7424	                            je 0x400d0f5	      6370	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	CALL_8
0x400d0d1	    0x390500000000	            cmp dword [0x0400d0d7], eax 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400d0d7	            0x7508	                           jne 0x400d0e1	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400d0d9	    0x391500000000	            cmp dword [0x0400d0df], edx 	      6371	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	CALL_9
0x400d0df	            0x7414	                            je 0x400d0f5	      6371	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	CALL_9
0x400d0e1	    0x8b3d00000000	            mov edi, dword [0x0400d0e7] 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400d0e7	            0x39c7	                            cmp edi, eax	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400d0e9	            0x752c	                           jne 0x400d117	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400d0eb	            0x89f8	                            mov eax, edi	      6335	tc-i386.c	FUNCTION_84
0x400d0ed	    0x391500000000	            cmp dword [0x0400d0f3], edx 	      6372	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	CALL_10
0x400d0f3	            0x7522	                           jne 0x400d117	      6372	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	CALL_10
0x400d0f5	    0x833d00000000	               cmp dword [0x0400d0fc], 1	      6374	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400d0fc	           0xf94c2	                                 sete dl	      6374	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400d0ff	    0x803d00000000	                cmp byte [0x0400d106], 0	      6374	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400d106	           0xf95c0	                                setne al	      6374	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400d109	            0x38c2	                              cmp dl, al	      6375	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400d10b	          0x4c89da	                            mov rdx, r11	      6375	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400d10e	        0x480f44d5	                          cmove rdx, rbp	      6375	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400d112	      0xb800000000	                              mov eax, 0	      6375	tc-i386.c	FUNCTION_84	IF_1	ELSE_3	ELSE_4	IF_6	IF_7
0x400d117	    0x8b3d00000000	            mov edi, dword [0x0400d11d] 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400d11d	            0x39c7	                            cmp edi, eax	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400d11f	            0x750c	                           jne 0x400d12d	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400d121	    0x391500000000	            cmp dword [0x0400d127], edx 	      6379	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_11
0x400d127	     0xf84a6000000	                            je 0x400d1d3	      6379	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_11
0x400d12d	    0x3b0500000000	            cmp eax, dword [0x0400d133] 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400d133	            0x750c	                           jne 0x400d141	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400d135	    0x391500000000	            cmp dword [0x0400d13b], edx 	      6380	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_12
0x400d13b	     0xf8494000000	                            je 0x400d1d5	      6380	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_12
0x400d141	    0x3b0500000000	            cmp eax, dword [0x0400d147] 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400d147	            0x750c	                           jne 0x400d155	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400d149	    0x391500000000	            cmp dword [0x0400d14f], edx 	      6381	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_13
0x400d14f	     0xf8480000000	                            je 0x400d1d5	      6381	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_13
0x400d155	    0x3b0500000000	            cmp eax, dword [0x0400d15b] 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400d15b	            0x7508	                           jne 0x400d165	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400d15d	    0x391500000000	            cmp dword [0x0400d163], edx 	      6382	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_14
0x400d163	            0x7470	                            je 0x400d1d5	      6382	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_14
0x400d165	    0x3b0500000000	            cmp eax, dword [0x0400d16b] 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400d16b	            0x7508	                           jne 0x400d175	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400d16d	    0x391500000000	            cmp dword [0x0400d173], edx 	      6383	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_15
0x400d173	            0x7460	                            je 0x400d1d5	      6383	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_15
0x400d175	    0x3b0500000000	            cmp eax, dword [0x0400d17b] 	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400d17b	            0x7508	                           jne 0x400d185	      1555	tc-i386.c	FUNCTION_9	SWITCH_1	IF_2
0x400d17d	    0x391500000000	            cmp dword [0x0400d183], edx 	      6384	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_16
0x400d183	            0x7450	                            je 0x400d1d5	      6384	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_16
0x400d185	      0xba05000000	                              mov edx, 5	      6386	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_18
0x400d18a	      0xbe00000000	                              mov esi, 0	      6386	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_18
0x400d18f	      0xbf00000000	                              mov edi, 0	      6386	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_18
0x400d194	      0xe800000000	                          call 0x400d199	      6386	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_18
0x400d199	          0x4889c7	                            mov rdi, rax	      6386	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_18
0x400d19c	      0xb800000000	                              mov eax, 0	      6386	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_18
0x400d1a1	      0xe800000000	                          call 0x400d1a6	      6386	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_18
0x400d1a6	      0xe94b140000	                           jmp 0x400e5f6	      6386	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_18
0x400d1ab	    0x8b0500000000	            mov eax, dword [0x0400d1b1] 	      6335	tc-i386.c	FUNCTION_84
0x400d1b1	            0xeb22	                           jmp 0x400d1d5	      6335	tc-i386.c	FUNCTION_84
0x400d1b3	    0x8b0500000000	            mov eax, dword [0x0400d1b9] 	      6335	tc-i386.c	FUNCTION_84
0x400d1b9	            0xeb1a	                           jmp 0x400d1d5	      6335	tc-i386.c	FUNCTION_84
0x400d1bb	    0x8b0500000000	            mov eax, dword [0x0400d1c1] 	      6335	tc-i386.c	FUNCTION_84
0x400d1c1	            0xeb12	                           jmp 0x400d1d5	      6335	tc-i386.c	FUNCTION_84
0x400d1c3	    0x8b0500000000	            mov eax, dword [0x0400d1c9] 	      6335	tc-i386.c	FUNCTION_84
0x400d1c9	            0xeb0a	                           jmp 0x400d1d5	      6335	tc-i386.c	FUNCTION_84
0x400d1cb	            0x89f8	                            mov eax, edi	      6335	tc-i386.c	FUNCTION_84
0x400d1cd	            0xeb06	                           jmp 0x400d1d5	      6335	tc-i386.c	FUNCTION_84
0x400d1cf	            0x89f8	                            mov eax, edi	      6335	tc-i386.c	FUNCTION_84
0x400d1d1	            0xeb02	                           jmp 0x400d1d5	      6335	tc-i386.c	FUNCTION_84
0x400d1d3	            0x89f8	                            mov eax, edi	      6379	tc-i386.c	FUNCTION_84	IF_1	ELSE_5	IF_8	CALL_11
0x400d1d5	        0x48c1e020	                           shl rax, 0x20	      6391	tc-i386.c	FUNCTION_84
0x400d1d9	            0x89d2	                            mov edx, edx	      6391	tc-i386.c	FUNCTION_84
0x400d1db	          0x4809d0	                             or rax, rdx	      6391	tc-i386.c	FUNCTION_84
0x400d1de	        0x48894678	             mov qword [rsi + 0x78], rax	      6391	tc-i386.c	FUNCTION_84
0x400d1e2	        0x4883c108	                              add rcx, 8	      6391	tc-i386.c	FUNCTION_84
0x400d1e6	          0x4939c8	                             cmp r8, rcx	      6405	tc-i386.c	FUNCTION_85	IF_1	FOR_1
0x400d1e9	     0xf85b7fdffff	                           jne 0x400cfa6	      6405	tc-i386.c	FUNCTION_85	IF_1	FOR_1
0x400d1ef	    0xf60500000000	           test byte [0x0400d1f6], 0xfc 	      6410	tc-i386.c	FUNCTION_85	IF_1	CALL_3
0x400d1f6	            0x7414	                            je 0x400d20c	      6410	tc-i386.c	FUNCTION_85	IF_1	CALL_3
0x400d1f8	      0xba00000000	                              mov edx, 0	      6410	tc-i386.c	FUNCTION_85	IF_1	CALL_3
0x400d1fd	      0xbe0a190000	                         mov esi, 0x190a	      6410	tc-i386.c	FUNCTION_85	IF_1	CALL_3
0x400d202	      0xbf00000000	                              mov edi, 0	      6410	tc-i386.c	FUNCTION_85	IF_1	CALL_3
0x400d207	      0xe800000000	                          call 0x400d20c	      6410	tc-i386.c	FUNCTION_85	IF_1	CALL_3
0x400d20c	    0xf60500000000	               test byte [0x0400d213], 2	      4143	tc-i386.c	FUNCTION_68	IF_27
0x400d213	            0x740a	                            je 0x400d21f	      4143	tc-i386.c	FUNCTION_68	IF_27
0x400d215	    0xc70500000000	               mov dword [0x0400d21f], 0	      4144	tc-i386.c	FUNCTION_68	IF_27
0x400d21f	    0x8b1500000000	            mov edx, dword [0x0400d225] 	      4148	tc-i386.c	FUNCTION_68	IF_28
0x400d225	          0x83fa03	                              cmp edx, 3	      4148	tc-i386.c	FUNCTION_68	IF_28
0x400d228	            0x7756	                            ja 0x400d280	      4148	tc-i386.c	FUNCTION_68	IF_28
0x400d22a	            0x85d2	                           test edx, edx	      4149	tc-i386.c	FUNCTION_68	IF_28	FOR_3
0x400d22c	     0xf84d8120000	                            je 0x400e50a	      4149	tc-i386.c	FUNCTION_68	IF_28	FOR_3
0x400d232	    0x8b0d00000000	            mov ecx, dword [0x0400d238] 	      4149	tc-i386.c	FUNCTION_68	IF_28	FOR_3
0x400d238	      0xbf00000000	                              mov edi, 0	      4149	tc-i386.c	FUNCTION_68	IF_28	FOR_3
0x400d23d	      0xb800000000	                              mov eax, 0	      4149	tc-i386.c	FUNCTION_68	IF_28	FOR_3
0x400d242	            0x89c6	                            mov esi, eax	      4150	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x400d244	    0x803cf5000000	                     cmp byte [rsi*8], 0	      4150	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x400d24c	            0x781e	                            js 0x400d26c	      4150	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x400d24e	    0xf604f5000000	                    test byte [rsi*8], 1	      4151	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x400d256	            0x7514	                           jne 0x400d26c	      4151	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x400d258	    0xf604f5000000	                 test byte [rsi*8], 0x20	      4152	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x400d260	            0x7412	                            je 0x400d274	      4152	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x400d262	    0xf604f5000000	                    test byte [rsi*8], 8	      4152	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x400d26a	            0x7508	                           jne 0x400d274	      4152	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x400d26c	          0x83e901	                              sub ecx, 1	      4153	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x400d26f	      0xbf01000000	                              mov edi, 1	      4153	tc-i386.c	FUNCTION_68	IF_28	FOR_3	IF_29
0x400d274	          0x83c001	                              add eax, 1	      4149	tc-i386.c	FUNCTION_68	IF_28	FOR_3
0x400d277	            0x39c2	                            cmp edx, eax	      4149	tc-i386.c	FUNCTION_68	IF_28	FOR_3
0x400d279	            0x75c7	                           jne 0x400d242	      4149	tc-i386.c	FUNCTION_68	IF_28	FOR_3
0x400d27b	      0xe966120000	                           jmp 0x400e4e6	      4149	tc-i386.c	FUNCTION_68	IF_28	FOR_3
0x400d280	    0x8b0500000000	            mov eax, dword [0x0400d286] 	      4156	tc-i386.c	FUNCTION_68	IF_30
0x400d286	      0x2520004000	                       and eax, 0x400020	      4156	tc-i386.c	FUNCTION_68	IF_30
0x400d28b	          0x83f820	                           cmp eax, 0x20	      4156	tc-i386.c	FUNCTION_68	IF_30
0x400d28e	            0x7505	                           jne 0x400d295	      4156	tc-i386.c	FUNCTION_68	IF_30
0x400d290	      0xe86548ffff	                 call sym.process_immext	      4158	tc-i386.c	FUNCTION_68	CALL_43
0x400d295	    0x833d00000000	               cmp dword [0x0400d29c], 0	      4161	tc-i386.c	FUNCTION_68	IF_31
0x400d29c	            0x740f	                            je 0x400d2ad	      4161	tc-i386.c	FUNCTION_68	IF_31
0x400d29e	      0xe8bd63ffff	               call sym.process_operands	      4163	tc-i386.c	FUNCTION_68	IF_31	IF_32	CALL_44
0x400d2a3	            0x85c0	                           test eax, eax	      4163	tc-i386.c	FUNCTION_68	IF_31	IF_32	CALL_44
0x400d2a5	     0xf844b130000	                            je 0x400e5f6	      4163	tc-i386.c	FUNCTION_68	IF_31	IF_32	CALL_44
0x400d2ab	            0xeb3d	                           jmp 0x400d2ea	      4163	tc-i386.c	FUNCTION_68	IF_31	IF_32	CALL_44
0x400d2ad	    0x833d00000000	               cmp dword [0x0400d2b4], 0	      4166	tc-i386.c	FUNCTION_68	ELSE_2	IF_33
0x400d2b4	            0x7534	                           jne 0x400d2ea	      4166	tc-i386.c	FUNCTION_68	ELSE_2	IF_33
0x400d2b6	    0xf60500000000	               test byte [0x0400d2bd], 1	      4166	tc-i386.c	FUNCTION_68	ELSE_2	IF_33
0x400d2bd	            0x742b	                            je 0x400d2ea	      4166	tc-i386.c	FUNCTION_68	ELSE_2	IF_33
0x400d2bf	    0x488b2d000000	            mov rbp, qword [0x0400d2c6] 	      4169	tc-i386.c	FUNCTION_68	ELSE_2	IF_33	CALL_46
0x400d2c6	      0xba05000000	                              mov edx, 5	      4169	tc-i386.c	FUNCTION_68	ELSE_2	IF_33	CALL_46
0x400d2cb	      0xbe00000000	                              mov esi, 0	      4169	tc-i386.c	FUNCTION_68	ELSE_2	IF_33	CALL_46
0x400d2d0	      0xbf00000000	                              mov edi, 0	      4169	tc-i386.c	FUNCTION_68	ELSE_2	IF_33	CALL_46
0x400d2d5	      0xe800000000	                          call 0x400d2da	      4169	tc-i386.c	FUNCTION_68	ELSE_2	IF_33	CALL_46
0x400d2da	          0x4889ee	                            mov rsi, rbp	      4169	tc-i386.c	FUNCTION_68	ELSE_2	IF_33	CALL_46
0x400d2dd	          0x4889c7	                            mov rdi, rax	      4169	tc-i386.c	FUNCTION_68	ELSE_2	IF_33	CALL_46
0x400d2e0	      0xb800000000	                              mov eax, 0	      4169	tc-i386.c	FUNCTION_68	ELSE_2	IF_33	CALL_46
0x400d2e5	      0xe800000000	                          call 0x400d2ea	      4169	tc-i386.c	FUNCTION_68	ELSE_2	IF_33	CALL_46
0x400d2ea	    0xf70500000000	       test dword [0x0400d2f4], 0x38600 	      4172	tc-i386.c	FUNCTION_68	IF_34
0x400d2f4	            0x7509	                           jne 0x400d2ff	      4172	tc-i386.c	FUNCTION_68	IF_34
0x400d2f6	    0x803d00000000	                cmp byte [0x0400d2fd], 0	      4173	tc-i386.c	FUNCTION_68	IF_34	CALL_47
0x400d2fd	            0x7451	                            je 0x400d350	      4173	tc-i386.c	FUNCTION_68	IF_34	CALL_47
0x400d2ff	    0x833d00000000	               cmp dword [0x0400d306], 1	      4175	tc-i386.c	FUNCTION_68	IF_34	IF_35
0x400d306	            0x7530	                           jne 0x400d338	      4175	tc-i386.c	FUNCTION_68	IF_34	IF_35
0x400d308	    0x488b1d000000	            mov rbx, qword [0x0400d30f] 	      4177	tc-i386.c	FUNCTION_68	IF_34	IF_35	CALL_49
0x400d30f	      0xba05000000	                              mov edx, 5	      4177	tc-i386.c	FUNCTION_68	IF_34	IF_35	CALL_49
0x400d314	      0xbe00000000	                              mov esi, 0	      4177	tc-i386.c	FUNCTION_68	IF_34	IF_35	CALL_49
0x400d319	      0xbf00000000	                              mov edi, 0	      4177	tc-i386.c	FUNCTION_68	IF_34	IF_35	CALL_49
0x400d31e	      0xe800000000	                          call 0x400d323	      4177	tc-i386.c	FUNCTION_68	IF_34	IF_35	CALL_49
0x400d323	          0x4889de	                            mov rsi, rbx	      4177	tc-i386.c	FUNCTION_68	IF_34	IF_35	CALL_49
0x400d326	          0x4889c7	                            mov rdi, rax	      4177	tc-i386.c	FUNCTION_68	IF_34	IF_35	CALL_49
0x400d329	      0xb800000000	                              mov eax, 0	      4177	tc-i386.c	FUNCTION_68	IF_34	IF_35	CALL_49
0x400d32e	      0xe800000000	                          call 0x400d333	      4177	tc-i386.c	FUNCTION_68	IF_34	IF_35	CALL_49
0x400d333	      0xe9be120000	                           jmp 0x400e5f6	      4179	tc-i386.c	FUNCTION_68	IF_34	IF_35
0x400d338	    0xf60500000000	               test byte [0x0400d33f], 6	      4182	tc-i386.c	FUNCTION_68	IF_34	IF_36
0x400d33f	            0x740a	                            je 0x400d34b	      4182	tc-i386.c	FUNCTION_68	IF_34	IF_36
0x400d341	          0x4889df	                            mov rdi, rbx	      4183	tc-i386.c	FUNCTION_68	IF_34	CALL_50
0x400d344	      0xe83c4affff	               call sym.build_vex_prefix	      4183	tc-i386.c	FUNCTION_68	IF_34	CALL_50
0x400d349	            0xeb05	                           jmp 0x400d350	      4183	tc-i386.c	FUNCTION_68	IF_34	CALL_50
0x400d34b	      0xe8144effff	              call sym.build_evex_prefix	      4185	tc-i386.c	FUNCTION_68	IF_34	CALL_51
0x400d350	    0x813d00000000	           cmp dword [0x0400d35a], 0xcd 	      4191	tc-i386.c	FUNCTION_68	IF_37
0x400d35a	            0x752b	                           jne 0x400d387	      4191	tc-i386.c	FUNCTION_68	IF_37
0x400d35c	    0xf60500000000	               test byte [0x0400d363], 8	      4192	tc-i386.c	FUNCTION_68	IF_37
0x400d363	            0x7522	                           jne 0x400d387	      4192	tc-i386.c	FUNCTION_68	IF_37
0x400d365	    0x488b05000000	            mov rax, qword [0x0400d36c] 	      4193	tc-i386.c	FUNCTION_68	IF_37
0x400d36c	      0x4883781003	               cmp qword [rax + 0x10], 3	      4193	tc-i386.c	FUNCTION_68	IF_37
0x400d371	            0x7514	                           jne 0x400d387	      4193	tc-i386.c	FUNCTION_68	IF_37
0x400d373	    0xc70500000000	           mov dword [0x0400d37d], 0xcc 	      4195	tc-i386.c	FUNCTION_68	IF_37
0x400d37d	    0xc70500000000	               mov dword [0x0400d387], 0	      4196	tc-i386.c	FUNCTION_68	IF_37
0x400d387	    0xf60500000000	           test byte [0x0400d38e], 0xe0 	      4199	tc-i386.c	FUNCTION_68	IF_38
0x400d38e	            0x741f	                            je 0x400d3af	      4199	tc-i386.c	FUNCTION_68	IF_38
0x400d390	    0x488b05000000	            mov rax, qword [0x0400d397] 	      4202	tc-i386.c	FUNCTION_68	IF_38
0x400d397	        0x80781802	                cmp byte [rax + 0x18], 2	      4202	tc-i386.c	FUNCTION_68	IF_38
0x400d39b	            0x7512	                           jne 0x400d3af	      4202	tc-i386.c	FUNCTION_68	IF_38
0x400d39d	    0x48c700000000	                      mov qword [rax], 0	      4207	tc-i386.c	FUNCTION_68	IF_38
0x400d3a4	    0x488b05000000	            mov rax, qword [0x0400d3ab] 	      4208	tc-i386.c	FUNCTION_68	IF_38
0x400d3ab	        0xc6401803	                mov byte [rax + 0x18], 3	      4208	tc-i386.c	FUNCTION_68	IF_38
0x400d3af	    0x803d00000000	                cmp byte [0x0400d3b6], 0	      4211	tc-i386.c	FUNCTION_68	IF_39
0x400d3b6	            0x7907	                           jns 0x400d3bf	      4211	tc-i386.c	FUNCTION_68	IF_39
0x400d3b8	    0x830d00000000	                or dword [0x0400d3bf], 8	      4212	tc-i386.c	FUNCTION_68	IF_39
0x400d3bf	    0x8b0500000000	            mov eax, dword [0x0400d3c5] 	      4218	tc-i386.c	FUNCTION_68	IF_40
0x400d3c5	      0x2501000020	                     and eax, 0x20000001	      4218	tc-i386.c	FUNCTION_68	IF_40
0x400d3ca	      0x3d01000020	                     cmp eax, 0x20000001	      4218	tc-i386.c	FUNCTION_68	IF_40
0x400d3cf	            0x7512	                           jne 0x400d3e3	      4218	tc-i386.c	FUNCTION_68	IF_40
0x400d3d1	    0x488b05000000	            mov rax, qword [0x0400d3d8] 	      4219	tc-i386.c	FUNCTION_68	IF_40
0x400d3d8	        0xf6401002	               test byte [rax + 0x10], 2	      4219	tc-i386.c	FUNCTION_68	IF_40
0x400d3dc	            0x7535	                           jne 0x400d413	      4219	tc-i386.c	FUNCTION_68	IF_40
0x400d3de	      0xe940110000	                           jmp 0x400e523	      4219	tc-i386.c	FUNCTION_68	IF_40
0x400d3e3	    0x8b0500000000	            mov eax, dword [0x0400d3e9] 	      4220	tc-i386.c	FUNCTION_68	IF_40
0x400d3e9	      0x2501000020	                     and eax, 0x20000001	      4220	tc-i386.c	FUNCTION_68	IF_40
0x400d3ee	      0x3d01000020	                     cmp eax, 0x20000001	      4220	tc-i386.c	FUNCTION_68	IF_40
0x400d3f3	     0xf85a1000000	                           jne 0x400d49a	      4220	tc-i386.c	FUNCTION_68	IF_40
0x400d3f9	    0x488b05000000	            mov rax, qword [0x0400d400] 	      4221	tc-i386.c	FUNCTION_68	IF_40
0x400d400	        0xf6401002	               test byte [rax + 0x10], 2	      4221	tc-i386.c	FUNCTION_68	IF_40
0x400d404	            0x750d	                           jne 0x400d413	      4221	tc-i386.c	FUNCTION_68	IF_40
0x400d406	    0x833d00000000	               cmp dword [0x0400d40d], 0	      4224	tc-i386.c	FUNCTION_68	IF_40
0x400d40d	     0xf8494000000	                            je 0x400d4a7	      4224	tc-i386.c	FUNCTION_68	IF_40
0x400d413	    0x830d00000000	            or dword [0x0400d41a], 0x40 	      4228	tc-i386.c	FUNCTION_68	IF_40
0x400d41a	      0xbd00000000	                              mov ebp, 0	      4228	tc-i386.c	FUNCTION_68	IF_40
0x400d41f	      0xbb00000000	                              mov ebx, 0	      4229	tc-i386.c	FUNCTION_68	IF_40	FOR_4
0x400d424	          0x4863c3	                         movsxd rax, ebx	      4232	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x400d427	    0xf604c5000000	                    test byte [rax*8], 1	      4232	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x400d42f	            0x745d	                            je 0x400d48e	      4232	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x400d431	    0xf604c5000000	                 test byte [rax*8], 0x20	      4232	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x400d439	            0x7453	                            je 0x400d48e	      4232	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x400d43b	          0x4989ec	                            mov r12, rbp	      4232	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x400d43e	    0x488b85a00000	            mov rax, qword [rbp + 0xa0] 	      4233	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x400d445	        0xf6401002	               test byte [rax + 0x10], 2	      4233	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x400d449	            0x7543	                           jne 0x400d48e	      4233	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x400d44b	        0x80781103	                cmp byte [rax + 0x11], 3	      4236	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42
0x400d44f	            0x7631	                           jbe 0x400d482	      4236	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42
0x400d451	          0x4c8b30	                    mov r14, qword [rax]	      4237	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42	CALL_53
0x400d454	    0x4c8b2d000000	            mov r13, qword [0x0400d45b] 	      4237	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42	CALL_53
0x400d45b	      0xba05000000	                              mov edx, 5	      4237	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42	CALL_53
0x400d460	      0xbe00000000	                              mov esi, 0	      4237	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42	CALL_53
0x400d465	      0xbf00000000	                              mov edi, 0	      4237	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42	CALL_53
0x400d46a	      0xe800000000	                          call 0x400d46f	      4237	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42	CALL_53
0x400d46f	          0x4c89f2	                            mov rdx, r14	      4237	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42	CALL_53
0x400d472	          0x4c89ee	                            mov rsi, r13	      4237	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42	CALL_53
0x400d475	          0x4889c7	                            mov rdi, rax	      4237	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42	CALL_53
0x400d478	      0xb800000000	                              mov eax, 0	      4237	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42	CALL_53
0x400d47d	      0xe800000000	                          call 0x400d482	      4237	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41	IF_42	CALL_53
0x400d482	    0x49818424a000	            add qword [r12 + 0xa0], 0xc0	      4245	tc-i386.c	FUNCTION_68	IF_40	FOR_4	IF_41
0x400d48e	          0x83c301	                              add ebx, 1	      4229	tc-i386.c	FUNCTION_68	IF_40	FOR_4
0x400d491	        0x4883c508	                              add rbp, 8	      4229	tc-i386.c	FUNCTION_68	IF_40	FOR_4
0x400d495	          0x83fb02	                              cmp ebx, 2	      4229	tc-i386.c	FUNCTION_68	IF_40	FOR_4
0x400d498	            0x758a	                           jne 0x400d424	      4229	tc-i386.c	FUNCTION_68	IF_40	FOR_4
0x400d49a	    0x833d00000000	               cmp dword [0x0400d4a1], 0	      4250	tc-i386.c	FUNCTION_68	IF_43
0x400d4a1	     0xf85a1100000	                           jne 0x400e548	      4250	tc-i386.c	FUNCTION_68	IF_43
0x400d4a7	    0x833d00000000	               cmp dword [0x0400d4ae], 0	      4250	tc-i386.c	FUNCTION_68	IF_43
0x400d4ae	            0x745f	                            je 0x400d50f	      4250	tc-i386.c	FUNCTION_68	IF_43
0x400d4b0	      0xb800000000	                              mov eax, 0	      4250	tc-i386.c	FUNCTION_68	IF_43
0x400d4b5	          0x4863d0	                         movsxd rdx, eax	      4257	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x400d4b8	    0xf604d5000000	                    test byte [rdx*8], 1	      4257	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x400d4c0	            0x7434	                            je 0x400d4f6	      4257	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x400d4c2	    0xf604d5000000	                 test byte [rdx*8], 0x20	      4258	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x400d4ca	            0x742a	                            je 0x400d4f6	      4258	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x400d4cc	    0x488b14c50000	                  mov rdx, qword [rax*8]	      4259	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x400d4d4	        0xf6421002	               test byte [rdx + 0x10], 2	      4259	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x400d4d8	            0x751c	                           jne 0x400d4f6	      4259	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x400d4da	        0x807a1103	                cmp byte [rdx + 0x11], 3	      4260	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x400d4de	            0x7616	                           jbe 0x400d4f6	      4260	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x400d4e0	    0xc70500000000	               mov dword [0x0400d4ea], 0	      4262	tc-i386.c	FUNCTION_68	IF_43	FOR_5	IF_44
0x400d4ea	    0x8b0500000000	            mov eax, dword [0x0400d4f0] 	      4270	tc-i386.c	FUNCTION_68	IF_46
0x400d4f0	            0x85c0	                           test eax, eax	      4270	tc-i386.c	FUNCTION_68	IF_46
0x400d4f2	            0x741b	                            je 0x400d50f	      4270	tc-i386.c	FUNCTION_68	IF_46
0x400d4f4	            0xeb0f	                           jmp 0x400d505	      4270	tc-i386.c	FUNCTION_68	IF_46
0x400d4f6	        0x4883c001	                              add rax, 1	      4270	tc-i386.c	FUNCTION_68	IF_46
0x400d4fa	        0x4883f802	                              cmp rax, 2	      4256	tc-i386.c	FUNCTION_68	IF_43	FOR_5
0x400d4fe	            0x75b5	                           jne 0x400d4b5	      4256	tc-i386.c	FUNCTION_68	IF_43	FOR_5
0x400d500	      0xe939100000	                           jmp 0x400e53e	      4256	tc-i386.c	FUNCTION_68	IF_43	FOR_5
0x400d505	          0x83c840	                            or eax, 0x40	      4271	tc-i386.c	FUNCTION_68	CALL_54
0x400d508	            0x89c7	                            mov edi, eax	      4271	tc-i386.c	FUNCTION_68	CALL_54
0x400d50a	      0xe80f50ffff	                     call sym.add_prefix	      4271	tc-i386.c	FUNCTION_68	CALL_54
0x400d50f	      0xbf00000000	                              mov edi, 0	      7617	tc-i386.c	FUNCTION_92	CALL_1
0x400d514	      0xe800000000	                          call 0x400d519	      7617	tc-i386.c	FUNCTION_92	CALL_1
0x400d519	    0x488b05000000	            mov rax, qword [0x0400d520] 	      7619	tc-i386.c	FUNCTION_92
0x400d520	        0x48890424	                    mov qword [rsp], rax	      7619	tc-i386.c	FUNCTION_92
0x400d524	      0xe800000000	                          call 0x400d529	      7620	tc-i386.c	FUNCTION_92	CALL_2
0x400d529	          0x4889c5	                            mov rbp, rax	      7620	tc-i386.c	FUNCTION_92	CALL_2
0x400d52c	     0xfb605000000	           movzx eax, byte [0x0400d533] 	      7623	tc-i386.c	FUNCTION_92	IF_1
0x400d533	            0xa820	                           test al, 0x20	      7623	tc-i386.c	FUNCTION_92	IF_1
0x400d535	     0xf8493010000	                            je 0x400d6ce	      7623	tc-i386.c	FUNCTION_92	IF_1
0x400d53b	    0x8b0500000000	            mov eax, dword [0x0400d541] 	      7344	tc-i386.c	FUNCTION_88
0x400d541	    0x833d00000000	               cmp dword [0x0400d548], 2	      7345	tc-i386.c	FUNCTION_88
0x400d548	           0xf94c3	                                 sete bl	      7345	tc-i386.c	FUNCTION_88
0x400d54b	           0xfb6db	                           movzx ebx, bl	      7345	tc-i386.c	FUNCTION_88
0x400d54e	             0x1db	                            add ebx, ebx	      7345	tc-i386.c	FUNCTION_88
0x400d550	    0x803d00000000	                cmp byte [0x0400d557], 0	      7348	tc-i386.c	FUNCTION_88	IF_1
0x400d557	            0x7513	                           jne 0x400d56c	      7348	tc-i386.c	FUNCTION_88	IF_1
0x400d559	          0x83f801	                              cmp eax, 1	      7344	tc-i386.c	FUNCTION_88
0x400d55c	        0x400f94c5	                                sete bpl	      7344	tc-i386.c	FUNCTION_88
0x400d560	        0x400fb6ed	                          movzx ebp, bpl	      7344	tc-i386.c	FUNCTION_88
0x400d564	    0x41bc00000000	                             mov r12d, 0	      7347	tc-i386.c	FUNCTION_88
0x400d56a	            0xeb18	                           jmp 0x400d584	      7347	tc-i386.c	FUNCTION_88
0x400d56c	    0x832d00000000	               sub dword [0x0400d573], 1	      7351	tc-i386.c	FUNCTION_88	IF_1
0x400d573	          0x83f801	                              cmp eax, 1	      7352	tc-i386.c	FUNCTION_88	IF_1
0x400d576	        0x400f95c5	                               setne bpl	      7352	tc-i386.c	FUNCTION_88	IF_1
0x400d57a	        0x400fb6ed	                          movzx ebp, bpl	      7352	tc-i386.c	FUNCTION_88	IF_1
0x400d57e	    0x41bc01000000	                             mov r12d, 1	      7350	tc-i386.c	FUNCTION_88	IF_1
0x400d584	     0xfb605000000	           movzx eax, byte [0x0400d58b] 	      7355	tc-i386.c	FUNCTION_88	IF_2
0x400d58b	          0x83e0ef	                     and eax, 0xffffffef	      7355	tc-i386.c	FUNCTION_88	IF_2
0x400d58e	            0x3c2e	                            cmp al, 0x2e	      7355	tc-i386.c	FUNCTION_88	IF_2
0x400d590	            0x750b	                           jne 0x400d59d	      7355	tc-i386.c	FUNCTION_88	IF_2
0x400d592	        0x4183c401	                             add r12d, 1	      7358	tc-i386.c	FUNCTION_88	IF_2
0x400d596	    0x832d00000000	               sub dword [0x0400d59d], 1	      7359	tc-i386.c	FUNCTION_88	IF_2
0x400d59d	    0x803d00000000	                cmp byte [0x0400d5a4], 0	      7361	tc-i386.c	FUNCTION_88	IF_3
0x400d5a4	            0x740b	                            je 0x400d5b1	      7361	tc-i386.c	FUNCTION_88	IF_3
0x400d5a6	        0x4183c401	                             add r12d, 1	      7363	tc-i386.c	FUNCTION_88	IF_3
0x400d5aa	    0x832d00000000	               sub dword [0x0400d5b1], 1	      7364	tc-i386.c	FUNCTION_88	IF_3
0x400d5b1	     0xfb605000000	           movzx eax, byte [0x0400d5b8] 	      7368	tc-i386.c	FUNCTION_88	IF_4
0x400d5b8	            0x84c0	                             test al, al	      7368	tc-i386.c	FUNCTION_88	IF_4
0x400d5ba	            0x740f	                            je 0x400d5cb	      7368	tc-i386.c	FUNCTION_88	IF_4
0x400d5bc	           0xfb6f8	                           movzx edi, al	      7370	tc-i386.c	FUNCTION_88	IF_4	CALL_1
0x400d5bf	      0xe800000000	                          call 0x400d5c4	      7370	tc-i386.c	FUNCTION_88	IF_4	CALL_1
0x400d5c4	    0x832d00000000	               sub dword [0x0400d5cb], 1	      7371	tc-i386.c	FUNCTION_88	IF_4
0x400d5cb	    0x833d00000000	               cmp dword [0x0400d5d2], 0	      7374	tc-i386.c	FUNCTION_88	IF_5
0x400d5d2	            0x742a	                            je 0x400d5fe	      7374	tc-i386.c	FUNCTION_88	IF_5
0x400d5d4	    0x833d00000000	               cmp dword [0x0400d5db], 0	      7374	tc-i386.c	FUNCTION_88	IF_5
0x400d5db	            0x7521	                           jne 0x400d5fe	      7374	tc-i386.c	FUNCTION_88	IF_5
0x400d5dd	      0xba05000000	                              mov edx, 5	      7375	tc-i386.c	FUNCTION_88	CALL_3
0x400d5e2	      0xbe00000000	                              mov esi, 0	      7375	tc-i386.c	FUNCTION_88	CALL_3
0x400d5e7	      0xbf00000000	                              mov edi, 0	      7375	tc-i386.c	FUNCTION_88	CALL_3
0x400d5ec	      0xe800000000	                          call 0x400d5f1	      7375	tc-i386.c	FUNCTION_88	CALL_3
0x400d5f1	          0x4889c7	                            mov rdi, rax	      7375	tc-i386.c	FUNCTION_88	CALL_3
0x400d5f4	      0xb800000000	                              mov eax, 0	      7375	tc-i386.c	FUNCTION_88	CALL_3
0x400d5f9	      0xe800000000	                          call 0x400d5fe	      7375	tc-i386.c	FUNCTION_88	CALL_3
0x400d5fe	      0x418d7c2406	                      lea edi, [r12 + 6]	      7382	tc-i386.c	FUNCTION_88	CALL_4
0x400d603	          0x4863ff	                         movsxd rdi, edi	      7382	tc-i386.c	FUNCTION_88	CALL_4
0x400d606	      0xe800000000	                          call 0x400d60b	      7382	tc-i386.c	FUNCTION_88	CALL_4
0x400d60b	      0x418d7c2401	                      lea edi, [r12 + 1]	      7384	tc-i386.c	FUNCTION_88	CALL_5
0x400d610	          0x4863ff	                         movsxd rdi, edi	      7384	tc-i386.c	FUNCTION_88	CALL_5
0x400d613	      0xe800000000	                          call 0x400d618	      7384	tc-i386.c	FUNCTION_88	CALL_5
0x400d618	          0x4989c4	                            mov r12, rax	      7384	tc-i386.c	FUNCTION_88	CALL_5
0x400d61b	    0x803d00000000	                cmp byte [0x0400d622], 0	      7385	tc-i386.c	FUNCTION_88	IF_6
0x400d622	            0x7407	                            je 0x400d62b	      7385	tc-i386.c	FUNCTION_88	IF_6
0x400d624	          0xc60066	                    mov byte [rax], 0x66	      7386	tc-i386.c	FUNCTION_88	IF_6
0x400d627	        0x4c8d6001	                      lea r12, [rax + 1]	      7386	tc-i386.c	FUNCTION_88	IF_6
0x400d62b	     0xfb605000000	           movzx eax, byte [0x0400d632] 	      7387	tc-i386.c	FUNCTION_88	IF_7
0x400d632	            0x89c2	                            mov edx, eax	      7387	tc-i386.c	FUNCTION_88	IF_7
0x400d634	          0x83e2ef	                     and edx, 0xffffffef	      7387	tc-i386.c	FUNCTION_88	IF_7
0x400d637	          0x80fa2e	                            cmp dl, 0x2e	      7387	tc-i386.c	FUNCTION_88	IF_7
0x400d63a	            0x7509	                           jne 0x400d645	      7387	tc-i386.c	FUNCTION_88	IF_7
0x400d63c	        0x41880424	                      mov byte [r12], al	      7389	tc-i386.c	FUNCTION_88	IF_7
0x400d640	      0x4d8d642401	                      lea r12, [r12 + 1]	      7389	tc-i386.c	FUNCTION_88	IF_7
0x400d645	     0xfb605000000	           movzx eax, byte [0x0400d64c] 	      7390	tc-i386.c	FUNCTION_88	IF_8
0x400d64c	            0x84c0	                             test al, al	      7390	tc-i386.c	FUNCTION_88	IF_8
0x400d64e	            0x7409	                            je 0x400d659	      7390	tc-i386.c	FUNCTION_88	IF_8
0x400d650	        0x41880424	                      mov byte [r12], al	      7391	tc-i386.c	FUNCTION_88	IF_8
0x400d654	      0x4d8d642401	                      lea r12, [r12 + 1]	      7391	tc-i386.c	FUNCTION_88	IF_8
0x400d659	    0x8b0500000000	            mov eax, dword [0x0400d65f] 	      7392	tc-i386.c	FUNCTION_88
0x400d65f	        0x41880424	                      mov byte [r12], al	      7392	tc-i386.c	FUNCTION_88
0x400d663	            0x3ceb	                            cmp al, 0xeb	      7394	tc-i386.c	FUNCTION_88	IF_9
0x400d665	            0x7416	                            je 0x400d67d	      7394	tc-i386.c	FUNCTION_88	IF_9
0x400d667	            0x89da	                            mov edx, ebx	      7397	tc-i386.c	FUNCTION_88	ELSE_1	IF_10
0x400d669	          0x83ca04	                               or edx, 4	      7397	tc-i386.c	FUNCTION_88	ELSE_1	IF_10
0x400d66c	            0x89d8	                            mov eax, ebx	      7397	tc-i386.c	FUNCTION_88	ELSE_1	IF_10
0x400d66e	          0x83c808	                               or eax, 8	      7397	tc-i386.c	FUNCTION_88	ELSE_1	IF_10
0x400d671	    0xf60500000000	               test byte [0x0400d678], 4	      7397	tc-i386.c	FUNCTION_88	ELSE_1	IF_10
0x400d678	            0x89d3	                            mov ebx, edx	      7397	tc-i386.c	FUNCTION_88	ELSE_1	IF_10
0x400d67a	           0xf44d8	                          cmove ebx, eax	      7397	tc-i386.c	FUNCTION_88	ELSE_1	IF_10
0x400d67d	             0x9eb	                             or ebx, ebp	      7400	tc-i386.c	FUNCTION_88
0x400d67f	    0x488b3d000000	            mov rdi, qword [0x0400d686] 	      7402	tc-i386.c	FUNCTION_88
0x400d686	         0xfb64718	           movzx eax, byte [rdi + 0x18] 	      7405	tc-i386.c	FUNCTION_88	IF_11
0x400d68a	          0x83e802	                              sub eax, 2	      7405	tc-i386.c	FUNCTION_88	IF_11
0x400d68d	            0x3c01	                               cmp al, 1	      7405	tc-i386.c	FUNCTION_88	IF_11
0x400d68f	            0x7709	                            ja 0x400d69a	      7405	tc-i386.c	FUNCTION_88	IF_11
0x400d691	          0x4c8b07	                     mov r8, qword [rdi]	      7402	tc-i386.c	FUNCTION_88
0x400d694	        0x4c8b4f10	              mov r9, qword [rdi + 0x10]	      7403	tc-i386.c	FUNCTION_88
0x400d698	            0xeb0e	                           jmp 0x400d6a8	      7403	tc-i386.c	FUNCTION_88
0x400d69a	      0xe800000000	                          call 0x400d69f	      7409	tc-i386.c	FUNCTION_88	IF_11	CALL_6
0x400d69f	          0x4989c0	                             mov r8, rax	      7409	tc-i386.c	FUNCTION_88	IF_11	CALL_6
0x400d6a2	    0x41b900000000	                              mov r9d, 0	      7410	tc-i386.c	FUNCTION_88	IF_11
0x400d6a8	    0x8b1500000000	            mov edx, dword [0x0400d6ae] 	      7415	tc-i386.c	FUNCTION_88	CALL_7
0x400d6ae	        0x4883ec08	                              sub rsp, 8	      7415	tc-i386.c	FUNCTION_88	CALL_7
0x400d6b2	            0x4154	                                push r12	      7415	tc-i386.c	FUNCTION_88	CALL_7
0x400d6b4	            0x89d9	                            mov ecx, ebx	      7415	tc-i386.c	FUNCTION_88	CALL_7
0x400d6b6	      0xbe05000000	                              mov esi, 5	      7415	tc-i386.c	FUNCTION_88	CALL_7
0x400d6bb	      0xbf07000000	                              mov edi, 7	      7415	tc-i386.c	FUNCTION_88	CALL_7
0x400d6c0	      0xe800000000	                          call 0x400d6c5	      7415	tc-i386.c	FUNCTION_88	CALL_7
0x400d6c5	        0x4883c410	                           add rsp, 0x10	      7415	tc-i386.c	FUNCTION_88	CALL_7
0x400d6c9	      0xe9280f0000	                           jmp 0x400e5f6	      7415	tc-i386.c	FUNCTION_88	CALL_7
0x400d6ce	            0xa8c0	                           test al, 0xc0	      7625	tc-i386.c	FUNCTION_92	ELSE_1	IF_2
0x400d6d0	     0xf84b3010000	                            je 0x400d889	      7625	tc-i386.c	FUNCTION_92	ELSE_1	IF_2
0x400d6d6	    0x8b2d00000000	            mov ebp, dword [0x0400d6dc] 	      7457	tc-i386.c	FUNCTION_90
0x400d6dc	            0x84c0	                             test al, al	      7459	tc-i386.c	FUNCTION_90	IF_1
0x400d6de	            0x7941	                           jns 0x400d721	      7459	tc-i386.c	FUNCTION_90	IF_1
0x400d6e0	    0x803d00000000	                cmp byte [0x0400d6e7], 0	      7463	tc-i386.c	FUNCTION_90	IF_1	IF_2
0x400d6e7	            0x7411	                            je 0x400d6fa	      7463	tc-i386.c	FUNCTION_90	IF_1	IF_2
0x400d6e9	      0xbf67000000	                           mov edi, 0x67	      7465	tc-i386.c	FUNCTION_90	IF_1	IF_2	CALL_1
0x400d6ee	      0xe800000000	                          call 0x400d6f3	      7465	tc-i386.c	FUNCTION_90	IF_1	IF_2	CALL_1
0x400d6f3	    0x832d00000000	               sub dword [0x0400d6fa], 1	      7466	tc-i386.c	FUNCTION_90	IF_1	IF_2
0x400d6fa	     0xfb605000000	           movzx eax, byte [0x0400d701] 	      7469	tc-i386.c	FUNCTION_90	IF_1	IF_3
0x400d701	            0x89c2	                            mov edx, eax	      7469	tc-i386.c	FUNCTION_90	IF_1	IF_3
0x400d703	          0x83e2ef	                     and edx, 0xffffffef	      7469	tc-i386.c	FUNCTION_90	IF_1	IF_3
0x400d706	      0xbb01000000	                              mov ebx, 1	      7462	tc-i386.c	FUNCTION_90	IF_1
0x400d70b	          0x80fa2e	                            cmp dl, 0x2e	      7469	tc-i386.c	FUNCTION_90	IF_1	IF_3
0x400d70e	            0x7550	                           jne 0x400d760	      7469	tc-i386.c	FUNCTION_90	IF_1	IF_3
0x400d710	           0xfb6f8	                           movzx edi, al	      7472	tc-i386.c	FUNCTION_90	IF_1	IF_3	CALL_2
0x400d713	      0xe800000000	                          call 0x400d718	      7472	tc-i386.c	FUNCTION_90	IF_1	IF_3	CALL_2
0x400d718	    0x832d00000000	               sub dword [0x0400d71f], 1	      7473	tc-i386.c	FUNCTION_90	IF_1	IF_3
0x400d71f	            0xeb3f	                           jmp 0x400d760	      7473	tc-i386.c	FUNCTION_90	IF_1	IF_3
0x400d721	    0x8b1d00000000	            mov ebx, dword [0x0400d727] 	      7481	tc-i386.c	FUNCTION_90	ELSE_1	IF_4
0x400d727	    0x803d00000000	                cmp byte [0x0400d72e], 0	      7484	tc-i386.c	FUNCTION_90	ELSE_1	IF_5
0x400d72e	            0x750b	                           jne 0x400d73b	      7484	tc-i386.c	FUNCTION_90	ELSE_1	IF_5
0x400d730	          0x83fb01	                              cmp ebx, 1	      7480	tc-i386.c	FUNCTION_90	ELSE_1
0x400d733	           0xf94c0	                                 sete al	      7480	tc-i386.c	FUNCTION_90	ELSE_1
0x400d736	           0xfb6c0	                           movzx eax, al	      7480	tc-i386.c	FUNCTION_90	ELSE_1
0x400d739	            0xeb1a	                           jmp 0x400d755	      7480	tc-i386.c	FUNCTION_90	ELSE_1
0x400d73b	      0xbf66000000	                           mov edi, 0x66	      7486	tc-i386.c	FUNCTION_90	ELSE_1	IF_5	CALL_3
0x400d740	      0xe800000000	                          call 0x400d745	      7486	tc-i386.c	FUNCTION_90	ELSE_1	IF_5	CALL_3
0x400d745	    0x832d00000000	               sub dword [0x0400d74c], 1	      7487	tc-i386.c	FUNCTION_90	ELSE_1	IF_5
0x400d74c	          0x83fb01	                              cmp ebx, 1	      7488	tc-i386.c	FUNCTION_90	ELSE_1	IF_5
0x400d74f	           0xf95c0	                                setne al	      7488	tc-i386.c	FUNCTION_90	ELSE_1	IF_5
0x400d752	           0xfb6c0	                           movzx eax, al	      7488	tc-i386.c	FUNCTION_90	ELSE_1	IF_5
0x400d755	          0x83f801	                              cmp eax, 1	      7493	tc-i386.c	FUNCTION_90	ELSE_1	IF_6
0x400d758	            0x19db	                            sbb ebx, ebx	      7493	tc-i386.c	FUNCTION_90	ELSE_1	IF_6
0x400d75a	          0x83e302	                              and ebx, 2	      7493	tc-i386.c	FUNCTION_90	ELSE_1	IF_6
0x400d75d	          0x83c302	                              add ebx, 2	      7493	tc-i386.c	FUNCTION_90	ELSE_1	IF_6
0x400d760	     0xfb605000000	           movzx eax, byte [0x0400d767] 	      7496	tc-i386.c	FUNCTION_90	IF_7
0x400d767	            0x84c0	                             test al, al	      7496	tc-i386.c	FUNCTION_90	IF_7
0x400d769	            0x740f	                            je 0x400d77a	      7496	tc-i386.c	FUNCTION_90	IF_7
0x400d76b	           0xfb6f8	                           movzx edi, al	      7498	tc-i386.c	FUNCTION_90	IF_7	CALL_4
0x400d76e	      0xe800000000	                          call 0x400d773	      7498	tc-i386.c	FUNCTION_90	IF_7	CALL_4
0x400d773	    0x832d00000000	               sub dword [0x0400d77a], 1	      7499	tc-i386.c	FUNCTION_90	IF_7
0x400d77a	     0xfb605000000	           movzx eax, byte [0x0400d781] 	      7503	tc-i386.c	FUNCTION_90	IF_8
0x400d781	            0x84c0	                             test al, al	      7503	tc-i386.c	FUNCTION_90	IF_8
0x400d783	            0x740f	                            je 0x400d794	      7503	tc-i386.c	FUNCTION_90	IF_8
0x400d785	           0xfb6f8	                           movzx edi, al	      7505	tc-i386.c	FUNCTION_90	IF_8	CALL_5
0x400d788	      0xe800000000	                          call 0x400d78d	      7505	tc-i386.c	FUNCTION_90	IF_8	CALL_5
0x400d78d	    0x832d00000000	               sub dword [0x0400d794], 1	      7506	tc-i386.c	FUNCTION_90	IF_8
0x400d794	    0x833d00000000	               cmp dword [0x0400d79b], 0	      7509	tc-i386.c	FUNCTION_90	IF_9
0x400d79b	            0x742a	                            je 0x400d7c7	      7509	tc-i386.c	FUNCTION_90	IF_9
0x400d79d	    0x833d00000000	               cmp dword [0x0400d7a4], 0	      7509	tc-i386.c	FUNCTION_90	IF_9
0x400d7a4	            0x7521	                           jne 0x400d7c7	      7509	tc-i386.c	FUNCTION_90	IF_9
0x400d7a6	      0xba05000000	                              mov edx, 5	      7510	tc-i386.c	FUNCTION_90	CALL_7
0x400d7ab	      0xbe00000000	                              mov esi, 0	      7510	tc-i386.c	FUNCTION_90	CALL_7
0x400d7b0	      0xbf00000000	                              mov edi, 0	      7510	tc-i386.c	FUNCTION_90	CALL_7
0x400d7b5	      0xe800000000	                          call 0x400d7ba	      7510	tc-i386.c	FUNCTION_90	CALL_7
0x400d7ba	          0x4889c7	                            mov rdi, rax	      7510	tc-i386.c	FUNCTION_90	CALL_7
0x400d7bd	      0xb800000000	                              mov eax, 0	      7510	tc-i386.c	FUNCTION_90	CALL_7
0x400d7c2	      0xe800000000	                          call 0x400d7c7	      7510	tc-i386.c	FUNCTION_90	CALL_7
0x400d7c7	     0xfb63d000000	           movzx edi, byte [0x0400d7ce] 	      7512	tc-i386.c	FUNCTION_90	CALL_8
0x400d7ce	             0x1df	                            add edi, ebx	      7512	tc-i386.c	FUNCTION_90	CALL_8
0x400d7d0	          0x4863ff	                         movsxd rdi, edi	      7512	tc-i386.c	FUNCTION_90	CALL_8
0x400d7d3	      0xe800000000	                          call 0x400d7d8	      7512	tc-i386.c	FUNCTION_90	CALL_8
0x400d7d8	     0xfb615000000	           movzx edx, byte [0x0400d7df] 	      7513	tc-i386.c	FUNCTION_90	SWITCH_1
0x400d7df	          0x80fa01	                               cmp dl, 1	      7513	tc-i386.c	FUNCTION_90	SWITCH_1
0x400d7e2	            0x7414	                            je 0x400d7f8	      7513	tc-i386.c	FUNCTION_90	SWITCH_1
0x400d7e4	          0x80fa02	                               cmp dl, 2	      7513	tc-i386.c	FUNCTION_90	SWITCH_1
0x400d7e7	            0x7527	                           jne 0x400d810	      7513	tc-i386.c	FUNCTION_90	SWITCH_1
0x400d7e9	    0x8b1500000000	            mov edx, dword [0x0400d7ef] 	      7516	tc-i386.c	FUNCTION_90	SWITCH_1
0x400d7ef	          0xc1ea08	                              shr edx, 8	      7516	tc-i386.c	FUNCTION_90	SWITCH_1
0x400d7f2	            0x8810	                      mov byte [rax], dl	      7516	tc-i386.c	FUNCTION_90	SWITCH_1
0x400d7f4	        0x488d4001	                      lea rax, [rax + 1]	      7516	tc-i386.c	FUNCTION_90	SWITCH_1
0x400d7f8	        0x4c8d6001	                      lea r12, [rax + 1]	      7519	tc-i386.c	FUNCTION_90	SWITCH_1
0x400d7fc	    0x8b1500000000	            mov edx, dword [0x0400d802] 	      7519	tc-i386.c	FUNCTION_90	SWITCH_1
0x400d802	            0x8810	                      mov byte [rax], dl	      7519	tc-i386.c	FUNCTION_90	SWITCH_1
0x400d804	          0x83fb04	                              cmp ebx, 4	      7526	tc-i386.c	FUNCTION_90	IF_10
0x400d807	            0x7534	                           jne 0x400d83d	      7526	tc-i386.c	FUNCTION_90	IF_10
0x400d809	          0x83fd47	                           cmp ebp, 0x47	      7526	tc-i386.c	FUNCTION_90	IF_10
0x400d80c	            0x752f	                           jne 0x400d83d	      7526	tc-i386.c	FUNCTION_90	IF_10
0x400d80e	            0xeb14	                           jmp 0x400d824	      7526	tc-i386.c	FUNCTION_90	IF_10
0x400d810	      0xba00000000	                              mov edx, 0	      7522	tc-i386.c	FUNCTION_90	SWITCH_1	CALL_9
0x400d815	      0xbe621d0000	                         mov esi, 0x1d62	      7522	tc-i386.c	FUNCTION_90	SWITCH_1	CALL_9
0x400d81a	      0xbf00000000	                              mov edi, 0	      7522	tc-i386.c	FUNCTION_90	SWITCH_1	CALL_9
0x400d81f	      0xe800000000	                          call 0x400d824	      7522	tc-i386.c	FUNCTION_90	SWITCH_1	CALL_9
0x400d824	    0x488b05000000	            mov rax, qword [0x0400d82b] 	      7528	tc-i386.c	FUNCTION_90	IF_10	CALL_10
0x400d82b	          0x488b38	                    mov rdi, qword [rax]	      7528	tc-i386.c	FUNCTION_90	IF_10	CALL_10
0x400d82e	      0xe8ad88ffff	                   call sym.need_plt32_p	      7528	tc-i386.c	FUNCTION_90	IF_10	CALL_10
0x400d833	            0x85c0	                           test eax, eax	      7529	tc-i386.c	FUNCTION_90	IF_10
0x400d835	      0xb87e010000	                          mov eax, 0x17e	      7529	tc-i386.c	FUNCTION_90	IF_10
0x400d83a	           0xf45e8	                         cmovne ebp, eax	      7529	tc-i386.c	FUNCTION_90	IF_10
0x400d83d	            0x89e9	                            mov ecx, ebp	      7532	tc-i386.c	FUNCTION_90	CALL_11
0x400d83f	      0xba01000000	                              mov edx, 1	      7532	tc-i386.c	FUNCTION_90	CALL_11
0x400d844	      0xbe01000000	                              mov esi, 1	      7532	tc-i386.c	FUNCTION_90	CALL_11
0x400d849	            0x89df	                            mov edi, ebx	      7532	tc-i386.c	FUNCTION_90	CALL_11
0x400d84b	      0xe8d888ffff	                          call sym.reloc	      7532	tc-i386.c	FUNCTION_90	CALL_11
0x400d850	          0x4189c1	                            mov r9d, eax	      7532	tc-i386.c	FUNCTION_90	CALL_11
0x400d853	    0x488b3d000000	            mov rdi, qword [0x0400d85a] 	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x400d85a	        0x488d477c	                   lea rax, [rdi + 0x7c]	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x400d85e	          0x4c89e6	                            mov rsi, r12	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x400d861	          0x4829c6	                            sub rsi, rax	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x400d864	    0x41b801000000	                              mov r8d, 1	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x400d86a	    0x488b0d000000	            mov rcx, qword [0x0400d871] 	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x400d871	            0x89da	                            mov edx, ebx	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x400d873	      0xe800000000	                          call 0x400d878	      7534	tc-i386.c	FUNCTION_90	CALL_12
0x400d878	          0x83fb01	                              cmp ebx, 1	      7540	tc-i386.c	FUNCTION_90	IF_11
0x400d87b	     0xf85750d0000	                           jne 0x400e5f6	      7540	tc-i386.c	FUNCTION_90	IF_11
0x400d881	          0x800880	                     or byte [rax], 0x80	      7541	tc-i386.c	FUNCTION_90	IF_11
0x400d884	      0xe96d0d0000	                           jmp 0x400e5f6	      7541	tc-i386.c	FUNCTION_90	IF_11
0x400d889	    0xf60500000000	               test byte [0x0400d890], 1	      7628	tc-i386.c	FUNCTION_92	ELSE_2	IF_3
0x400d890	     0xf84b5010000	                            je 0x400da4b	      7628	tc-i386.c	FUNCTION_92	ELSE_2	IF_3
0x400d896	    0x8b0500000000	            mov eax, dword [0x0400d89c] 	      7553	tc-i386.c	FUNCTION_91	IF_1
0x400d89c	    0x803d00000000	                cmp byte [0x0400d8a3], 0	      7557	tc-i386.c	FUNCTION_91	IF_2
0x400d8a3	            0x7510	                           jne 0x400d8b5	      7557	tc-i386.c	FUNCTION_91	IF_2
0x400d8a5	          0x83f801	                              cmp eax, 1	      7552	tc-i386.c	FUNCTION_91
0x400d8a8	           0xf94c0	                                 sete al	      7552	tc-i386.c	FUNCTION_91
0x400d8ab	           0xfb6c0	                           movzx eax, al	      7552	tc-i386.c	FUNCTION_91
0x400d8ae	      0xbd00000000	                              mov ebp, 0	      7556	tc-i386.c	FUNCTION_91
0x400d8b3	            0xeb15	                           jmp 0x400d8ca	      7556	tc-i386.c	FUNCTION_91
0x400d8b5	    0x832d00000000	               sub dword [0x0400d8bc], 1	      7560	tc-i386.c	FUNCTION_91	IF_2
0x400d8bc	          0x83f801	                              cmp eax, 1	      7561	tc-i386.c	FUNCTION_91	IF_2
0x400d8bf	           0xf95c0	                                setne al	      7561	tc-i386.c	FUNCTION_91	IF_2
0x400d8c2	           0xfb6c0	                           movzx eax, al	      7561	tc-i386.c	FUNCTION_91	IF_2
0x400d8c5	      0xbd01000000	                              mov ebp, 1	      7559	tc-i386.c	FUNCTION_91	IF_2
0x400d8ca	    0x803d00000000	                cmp byte [0x0400d8d1], 0	      7563	tc-i386.c	FUNCTION_91	IF_3
0x400d8d1	            0x740a	                            je 0x400d8dd	      7563	tc-i386.c	FUNCTION_91	IF_3
0x400d8d3	          0x83c501	                              add ebp, 1	      7565	tc-i386.c	FUNCTION_91	IF_3
0x400d8d6	    0x832d00000000	               sub dword [0x0400d8dd], 1	      7566	tc-i386.c	FUNCTION_91	IF_3
0x400d8dd	          0x83f801	                              cmp eax, 1	      7571	tc-i386.c	FUNCTION_91	IF_4
0x400d8e0	            0x19db	                            sbb ebx, ebx	      7571	tc-i386.c	FUNCTION_91	IF_4
0x400d8e2	          0x83e302	                              and ebx, 2	      7571	tc-i386.c	FUNCTION_91	IF_4
0x400d8e5	          0x83c302	                              add ebx, 2	      7571	tc-i386.c	FUNCTION_91	IF_4
0x400d8e8	    0x833d00000000	               cmp dword [0x0400d8ef], 0	      7573	tc-i386.c	FUNCTION_91	IF_5
0x400d8ef	            0x742a	                            je 0x400d91b	      7573	tc-i386.c	FUNCTION_91	IF_5
0x400d8f1	    0x833d00000000	               cmp dword [0x0400d8f8], 0	      7573	tc-i386.c	FUNCTION_91	IF_5
0x400d8f8	            0x7521	                           jne 0x400d91b	      7573	tc-i386.c	FUNCTION_91	IF_5
0x400d8fa	      0xba05000000	                              mov edx, 5	      7574	tc-i386.c	FUNCTION_91	CALL_2
0x400d8ff	      0xbe00000000	                              mov esi, 0	      7574	tc-i386.c	FUNCTION_91	CALL_2
0x400d904	      0xbf00000000	                              mov edi, 0	      7574	tc-i386.c	FUNCTION_91	CALL_2
0x400d909	      0xe800000000	                          call 0x400d90e	      7574	tc-i386.c	FUNCTION_91	CALL_2
0x400d90e	          0x4889c7	                            mov rdi, rax	      7574	tc-i386.c	FUNCTION_91	CALL_2
0x400d911	      0xb800000000	                              mov eax, 0	      7574	tc-i386.c	FUNCTION_91	CALL_2
0x400d916	      0xe800000000	                          call 0x400d91b	      7574	tc-i386.c	FUNCTION_91	CALL_2
0x400d91b	        0x8d7c1d03	                lea edi, [rbp + rbx + 3]	      7577	tc-i386.c	FUNCTION_91	CALL_3
0x400d91f	          0x4863ff	                         movsxd rdi, edi	      7577	tc-i386.c	FUNCTION_91	CALL_3
0x400d922	      0xe800000000	                          call 0x400d927	      7577	tc-i386.c	FUNCTION_91	CALL_3
0x400d927	    0x803d00000000	                cmp byte [0x0400d92e], 0	      7579	tc-i386.c	FUNCTION_91	IF_6
0x400d92e	            0x7407	                            je 0x400d937	      7579	tc-i386.c	FUNCTION_91	IF_6
0x400d930	          0xc60066	                    mov byte [rax], 0x66	      7580	tc-i386.c	FUNCTION_91	IF_6
0x400d933	        0x488d4001	                      lea rax, [rax + 1]	      7580	tc-i386.c	FUNCTION_91	IF_6
0x400d937	     0xfb615000000	           movzx edx, byte [0x0400d93e] 	      7582	tc-i386.c	FUNCTION_91	IF_7
0x400d93e	            0x84d2	                             test dl, dl	      7582	tc-i386.c	FUNCTION_91	IF_7
0x400d940	            0x7406	                            je 0x400d948	      7582	tc-i386.c	FUNCTION_91	IF_7
0x400d942	            0x8810	                      mov byte [rax], dl	      7583	tc-i386.c	FUNCTION_91	IF_7
0x400d944	        0x488d4001	                      lea rax, [rax + 1]	      7583	tc-i386.c	FUNCTION_91	IF_7
0x400d948	        0x488d6801	                      lea rbp, [rax + 1]	      7585	tc-i386.c	FUNCTION_91
0x400d94c	    0x8b1500000000	            mov edx, dword [0x0400d952] 	      7585	tc-i386.c	FUNCTION_91
0x400d952	            0x8810	                      mov byte [rax], dl	      7585	tc-i386.c	FUNCTION_91
0x400d954	    0x488b05000000	            mov rax, qword [0x0400d95b] 	      7586	tc-i386.c	FUNCTION_91	IF_8
0x400d95b	        0x80781802	                cmp byte [rax + 0x18], 2	      7586	tc-i386.c	FUNCTION_91	IF_8
0x400d95f	            0x7553	                           jne 0x400d9b4	      7586	tc-i386.c	FUNCTION_91	IF_8
0x400d961	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      7588	tc-i386.c	FUNCTION_91	IF_8
0x400d965	          0x83fb02	                              cmp ebx, 2	      7590	tc-i386.c	FUNCTION_91	IF_8	IF_9
0x400d968	            0x753e	                           jne 0x400d9a8	      7590	tc-i386.c	FUNCTION_91	IF_8	IF_9
0x400d96a	    0x4881feffff00	                         cmp rsi, 0xffff	      7591	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_4
0x400d971	            0x7635	                           jbe 0x400d9a8	      7591	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_4
0x400d973	    0x488d86008000	                 lea rax, [rsi + 0x8000]	      7592	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_5
0x400d97a	    0x483dffff0000	                         cmp rax, 0xffff	      7592	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_5
0x400d980	            0x7626	                           jbe 0x400d9a8	      7592	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_5
0x400d982	      0xba05000000	                              mov edx, 5	      7594	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_7
0x400d987	      0xbe00000000	                              mov esi, 0	      7594	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_7
0x400d98c	      0xbf00000000	                              mov edi, 0	      7594	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_7
0x400d991	      0xe800000000	                          call 0x400d996	      7594	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_7
0x400d996	          0x4889c7	                            mov rdi, rax	      7594	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_7
0x400d999	      0xb800000000	                              mov eax, 0	      7594	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_7
0x400d99e	      0xe800000000	                          call 0x400d9a3	      7594	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_7
0x400d9a3	      0xe94e0c0000	                           jmp 0x400e5f6	      7594	tc-i386.c	FUNCTION_91	IF_8	IF_9	CALL_7
0x400d9a8	            0x89da	                            mov edx, ebx	      7597	tc-i386.c	FUNCTION_91	IF_8	CALL_8
0x400d9aa	          0x4889ef	                            mov rdi, rbp	      7597	tc-i386.c	FUNCTION_91	IF_8	CALL_8
0x400d9ad	      0xe800000000	                          call 0x400d9b2	      7597	tc-i386.c	FUNCTION_91	IF_8	CALL_8
0x400d9b2	            0xeb3f	                           jmp 0x400d9f3	      7597	tc-i386.c	FUNCTION_91	IF_8	CALL_8
0x400d9b4	    0x8b0d00000000	            mov ecx, dword [0x0400d9ba] 	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x400d9ba	      0xba00000000	                              mov edx, 0	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x400d9bf	      0xbe00000000	                              mov esi, 0	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x400d9c4	            0x89df	                            mov edi, ebx	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x400d9c6	      0xe85d87ffff	                          call sym.reloc	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x400d9cb	          0x4189c1	                            mov r9d, eax	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x400d9ce	    0x488b3d000000	            mov rdi, qword [0x0400d9d5] 	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x400d9d5	        0x488d477c	                   lea rax, [rdi + 0x7c]	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x400d9d9	          0x4889ee	                            mov rsi, rbp	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x400d9dc	          0x4829c6	                            sub rsi, rax	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x400d9df	    0x41b800000000	                              mov r8d, 0	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x400d9e5	    0x488b0d000000	            mov rcx, qword [0x0400d9ec] 	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x400d9ec	            0x89da	                            mov edx, ebx	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x400d9ee	      0xe800000000	                          call 0x400d9f3	      7600	tc-i386.c	FUNCTION_91	ELSE_1	CALL_9
0x400d9f3	    0x488b05000000	            mov rax, qword [0x0400d9fa] 	      7602	tc-i386.c	FUNCTION_91	IF_10
0x400d9fa	        0x80781802	                cmp byte [rax + 0x18], 2	      7602	tc-i386.c	FUNCTION_91	IF_10
0x400d9fe	            0x742b	                            je 0x400da2b	      7602	tc-i386.c	FUNCTION_91	IF_10
0x400da00	    0x4c8b25000000	            mov r12, qword [0x0400da07] 	      7603	tc-i386.c	FUNCTION_91	IF_10	CALL_12
0x400da07	      0xba05000000	                              mov edx, 5	      7603	tc-i386.c	FUNCTION_91	IF_10	CALL_12
0x400da0c	      0xbe00000000	                              mov esi, 0	      7603	tc-i386.c	FUNCTION_91	IF_10	CALL_12
0x400da11	      0xbf00000000	                              mov edi, 0	      7603	tc-i386.c	FUNCTION_91	IF_10	CALL_12
0x400da16	      0xe800000000	                          call 0x400da1b	      7603	tc-i386.c	FUNCTION_91	IF_10	CALL_12
0x400da1b	          0x4c89e6	                            mov rsi, r12	      7603	tc-i386.c	FUNCTION_91	IF_10	CALL_12
0x400da1e	          0x4889c7	                            mov rdi, rax	      7603	tc-i386.c	FUNCTION_91	IF_10	CALL_12
0x400da21	      0xb800000000	                              mov eax, 0	      7603	tc-i386.c	FUNCTION_91	IF_10	CALL_12
0x400da26	      0xe800000000	                          call 0x400da2b	      7603	tc-i386.c	FUNCTION_91	IF_10	CALL_12
0x400da2b	    0x488b05000000	            mov rax, qword [0x0400da32] 	      7605	tc-i386.c	FUNCTION_91	CALL_13
0x400da32	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      7605	tc-i386.c	FUNCTION_91	CALL_13
0x400da36	          0x4863fb	                         movsxd rdi, ebx	      7605	tc-i386.c	FUNCTION_91	CALL_13
0x400da39	          0x4801ef	                            add rdi, rbp	      7605	tc-i386.c	FUNCTION_91	CALL_13
0x400da3c	      0xba02000000	                              mov edx, 2	      7605	tc-i386.c	FUNCTION_91	CALL_13
0x400da41	      0xe800000000	                          call 0x400da46	      7605	tc-i386.c	FUNCTION_91	CALL_13
0x400da46	      0xe9ab0b0000	                           jmp 0x400e5f6	      7605	tc-i386.c	FUNCTION_91	CALL_13
0x400da4b	    0x833d00000000	               cmp dword [0x0400da52], 0	      7638	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400da52	            0x746e	                            je 0x400dac2	      7638	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400da54	    0x813d00000000	          cmp dword [0x0400da5e], 0xfae 	      7639	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400da5e	            0x7562	                           jne 0x400dac2	      7639	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400da60	    0x833d00000000	               cmp dword [0x0400da67], 1	      7640	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400da67	     0xf85e60a0000	                           jne 0x400e553	      7640	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400da6d	    0x833d00000000	               cmp dword [0x0400da74], 1	      7641	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400da74	     0xf85d90a0000	                           jne 0x400e553	      7641	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400da7a	    0x488b05000000	            mov rax, qword [0x0400da81] 	      7642	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400da81	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7642	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400da85	          0x4889c2	                            mov rdx, rax	      7644	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400da88	        0x4883e2ef	             and rdx, 0xffffffffffffffef	      7644	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400da8c	    0x4881fae80000	                           cmp rdx, 0xe8	      7644	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400da93	            0x740c	                            je 0x400daa1	      7644	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400da95	    0x483df0000000	                           cmp rax, 0xf0	      7644	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400da9b	     0xf85b20a0000	                           jne 0x400e553	      7644	tc-i386.c	FUNCTION_92	ELSE_3	IF_4
0x400daa1	      0xbf05000000	                              mov edi, 5	      7649	tc-i386.c	FUNCTION_92	ELSE_3	IF_4	CALL_6
0x400daa6	      0xe800000000	                          call 0x400daab	      7649	tc-i386.c	FUNCTION_92	ELSE_3	IF_4	CALL_6
0x400daab	      0xba05000000	                              mov edx, 5	      7650	tc-i386.c	FUNCTION_92	ELSE_3	IF_4	CALL_7
0x400dab0	      0xbef0830424	                     mov esi, 0x240483f0	      7650	tc-i386.c	FUNCTION_92	ELSE_3	IF_4	CALL_7
0x400dab5	          0x4889c7	                            mov rdi, rax	      7650	tc-i386.c	FUNCTION_92	ELSE_3	IF_4	CALL_7
0x400dab8	      0xe800000000	                          call 0x400dabd	      7650	tc-i386.c	FUNCTION_92	ELSE_3	IF_4	CALL_7
0x400dabd	      0xe9340b0000	                           jmp 0x400e5f6	      7650	tc-i386.c	FUNCTION_92	ELSE_3	IF_4	CALL_7
0x400dac2	    0x833d00000000	               cmp dword [0x0400dac9], 0	      7656	tc-i386.c	FUNCTION_92	ELSE_3	IF_5
0x400dac9	            0x7417	                            je 0x400dae2	      7656	tc-i386.c	FUNCTION_92	ELSE_3	IF_5
0x400dacb	    0x813d00000000	           cmp dword [0x0400dad5], 0xf0 	      7658	tc-i386.c	FUNCTION_92	ELSE_3	IF_5	IF_6
0x400dad5	     0xf841b0b0000	                            je 0x400e5f6	      7658	tc-i386.c	FUNCTION_92	ELSE_3	IF_5	IF_6
0x400dadb	    0xc60500000000	                mov byte [0x0400dae2], 0	      7660	tc-i386.c	FUNCTION_92	ELSE_3	IF_5
0x400dae2	    0xf70500000000	     test dword [0x0400daec], 0x7000600 	      7665	tc-i386.c	FUNCTION_92	ELSE_3	IF_7
0x400daec	     0xf850d010000	                           jne 0x400dbff	      7665	tc-i386.c	FUNCTION_92	ELSE_3	IF_7
0x400daf2	     0xfb605000000	           movzx eax, byte [0x0400daf9] 	      7667	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x400daf9	            0x3c01	                               cmp al, 1	      7667	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x400dafb	     0xf84a7000000	                            je 0x400dba8	      7667	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x400db01	            0x3c01	                               cmp al, 1	      7667	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x400db03	            0x725e	                            jb 0x400db63	      7667	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x400db05	            0x3c02	                               cmp al, 2	      7667	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x400db07	            0x741f	                            je 0x400db28	      7667	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x400db09	            0x3c03	                               cmp al, 3	      7667	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x400db0b	     0xf8583000000	                           jne 0x400db94	      7667	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1
0x400db11	    0x8b3d00000000	            mov edi, dword [0x0400db17] 	      7670	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_8
0x400db17	    0xf7c7000000ff	                    test edi, 0xff000000	      7670	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_8
0x400db1d	     0xf8485000000	                            je 0x400dba8	      7670	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_8
0x400db23	          0xc1ef18	                           shr edi, 0x18	      7672	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_8
0x400db26	            0xeb1c	                           jmp 0x400db44	      7672	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_8
0x400db28	    0x8b0500000000	            mov eax, dword [0x0400db2e] 	      7677	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9
0x400db2e	      0xa90000ff00	                      test eax, 0xff0000	      7677	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9
0x400db33	            0x7473	                            je 0x400dba8	      7677	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9
0x400db35	          0xc1e810	                           shr eax, 0x10	      7679	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9
0x400db38	           0xfb6f8	                           movzx edi, al	      7679	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9
0x400db3b	    0xf60500000000	           test byte [0x0400db42], 0x10 	      7680	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9	IF_10
0x400db42	            0x7418	                            je 0x400db5c	      7680	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9	IF_10
0x400db44	    0x81fff3000000	                           cmp edi, 0xf3	      7683	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9	IF_10	IF_11
0x400db4a	            0x7509	                           jne 0x400db55	      7683	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9	IF_10	IF_11
0x400db4c	    0x803d00000000	            cmp byte [0x0400db53], 0xf3 	      7684	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9	IF_10	IF_11
0x400db53	            0x7453	                            je 0x400dba8	      7684	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9	IF_10	IF_11
0x400db55	      0xe8c449ffff	                     call sym.add_prefix	      7686	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9	IF_10	CALL_8
0x400db5a	            0xeb4c	                           jmp 0x400dba8	      7686	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9	IF_10	CALL_8
0x400db5c	      0xe8bd49ffff	                     call sym.add_prefix	      7689	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9	CALL_9
0x400db61	            0xeb45	                           jmp 0x400dba8	      7689	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	IF_9	CALL_9
0x400db63	      0xba05000000	                              mov edx, 5	      7698	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_11
0x400db68	      0xbe00000000	                              mov esi, 0	      7698	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_11
0x400db6d	      0xbf00000000	                              mov edi, 0	      7698	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_11
0x400db72	      0xe800000000	                          call 0x400db77	      7698	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_11
0x400db77	        0x488b1c24	                    mov rbx, qword [rsp]	      7696	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_10
0x400db7b	          0x8b7348	            mov esi, dword [rbx + 0x48] 	      7696	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_10
0x400db7e	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	      7696	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_10
0x400db82	          0x4889c2	                            mov rdx, rax	      7696	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_10
0x400db85	      0xb800000000	                              mov eax, 0	      7696	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_10
0x400db8a	      0xe800000000	                          call 0x400db8f	      7696	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_10
0x400db8f	      0xe9620a0000	                           jmp 0x400e5f6	      7696	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_10
0x400db94	      0xba00000000	                              mov edx, 0	      7701	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_12
0x400db99	      0xbe151e0000	                         mov esi, 0x1e15	      7701	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_12
0x400db9e	      0xbf00000000	                              mov edi, 0	      7701	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_12
0x400dba3	      0xe800000000	                          call 0x400dba8	      7701	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	SWITCH_1	CALL_12
0x400dba8	    0x833d00000000	               cmp dword [0x0400dbaf], 2	      7708	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	IF_12
0x400dbaf	            0x7528	                           jne 0x400dbd9	      7708	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	IF_12
0x400dbb1	    0x833d00000000	               cmp dword [0x0400dbb8], 2	      7709	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	IF_12
0x400dbb8	            0x751f	                           jne 0x400dbd9	      7709	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	IF_12
0x400dbba	    0x813d00000000	          cmp dword [0x0400dbc4], 0x18b 	      7710	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	IF_12
0x400dbc4	            0x7513	                           jne 0x400dbd9	      7710	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	IF_12
0x400dbc6	    0x803d00000000	                cmp byte [0x0400dbcd], 0	      7711	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	IF_12
0x400dbcd	            0x750a	                           jne 0x400dbd9	      7711	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	IF_12
0x400dbcf	      0xbf40000000	                           mov edi, 0x40	      7712	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	CALL_13
0x400dbd4	      0xe84549ffff	                     call sym.add_prefix	      7712	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	CALL_13
0x400dbd9	      0xbb00000000	                              mov ebx, 0	      7583	tc-i386.c	FUNCTION_91	IF_7
0x400dbde	           0xfb603	                   movzx eax, byte [rbx]	      7717	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	IF_13
0x400dbe1	            0x84c0	                             test al, al	      7717	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	IF_13
0x400dbe3	            0x7408	                            je 0x400dbed	      7717	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	IF_13
0x400dbe5	           0xfb6f8	                           movzx edi, al	      7718	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	IF_13
0x400dbe8	      0xe800000000	                          call 0x400dbed	      7718	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	IF_13
0x400dbed	        0x4883c301	                              add rbx, 1	      7716	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	CALL_14
0x400dbf1	    0x4881fb000000	                              cmp rbx, 0	      7716	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	CALL_14
0x400dbf8	            0x75e4	                           jne 0x400dbde	      7716	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	CALL_14
0x400dbfa	      0xe99e000000	                           jmp 0x400dc9d	      7716	tc-i386.c	FUNCTION_92	ELSE_3	IF_7	FOR_1	CALL_14
0x400dbff	      0xbb00000000	                              mov ebx, 0	      7665	tc-i386.c	FUNCTION_92	ELSE_3	IF_7
0x400dc04	     0xfb683000000	                   movzx eax, byte [rbx]	      7723	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14
0x400dc0b	            0x84c0	                             test al, al	      7723	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14
0x400dc0d	            0x742f	                            je 0x400dc3e	      7723	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14
0x400dc0f	          0x83fb01	                              cmp ebx, 1	      7724	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2
0x400dc12	            0x7216	                            jb 0x400dc2a	      7724	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2
0x400dc14	          0x83fb02	                              cmp ebx, 2	      7724	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2
0x400dc17	            0x7607	                           jbe 0x400dc20	      7724	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2
0x400dc19	          0x83fb06	                              cmp ebx, 6	      7724	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2
0x400dc1c	            0x7420	                            je 0x400dc3e	      7724	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2
0x400dc1e	            0xeb0a	                           jmp 0x400dc2a	      7724	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2
0x400dc20	           0xfb6f8	                           movzx edi, al	      7731	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2	CALL_17
0x400dc23	      0xe800000000	                          call 0x400dc28	      7731	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2	CALL_17
0x400dc28	            0xeb14	                           jmp 0x400dc3e	      7731	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2	CALL_17
0x400dc2a	      0xba00000000	                              mov edx, 0	      7736	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2	CALL_18
0x400dc2f	      0xbe381e0000	                         mov esi, 0x1e38	      7736	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2	CALL_18
0x400dc34	      0xbf00000000	                              mov edi, 0	      7736	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2	CALL_18
0x400dc39	      0xe800000000	                          call 0x400dc3e	      7736	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2	CALL_18
0x400dc3e	        0x4883c301	                              add rbx, 1	      7736	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	IF_14	SWITCH_2	CALL_18
0x400dc42	        0x4883fb07	                              cmp rbx, 7	      7722	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	CALL_16
0x400dc46	            0x75bc	                           jne 0x400dc04	      7722	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_2	CALL_16
0x400dc48	    0x833d00000000	               cmp dword [0x0400dc4f], 0	      7742	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	IF_15
0x400dc4f	            0x7414	                            je 0x400dc65	      7742	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	IF_15
0x400dc51	      0xba00000000	                              mov edx, 0	      7743	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	CALL_19
0x400dc56	      0xbe3f1e0000	                         mov esi, 0x1e3f	      7743	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	CALL_19
0x400dc5b	      0xbf00000000	                              mov edi, 0	      7743	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	CALL_19
0x400dc60	      0xe800000000	                          call 0x400dc65	      7743	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	CALL_19
0x400dc65	    0x8b3d00000000	            mov edi, dword [0x0400dc6b] 	      7745	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	CALL_20
0x400dc6b	      0xe800000000	                          call 0x400dc70	      7745	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	CALL_20
0x400dc70	    0x833d00000000	               cmp dword [0x0400dc77], 0	      7746	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_3
0x400dc77	            0x7424	                            je 0x400dc9d	      7746	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_3
0x400dc79	      0xba00000000	                              mov edx, 0	      7746	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_3
0x400dc7e	      0xb900000000	                              mov ecx, 0	      7746	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_3
0x400dc83	     0xfb6b2000000	                   movzx esi, byte [rdx]	      7747	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_3
0x400dc8a	        0x40883410	               mov byte [rax + rdx], sil	      7747	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_3
0x400dc8e	          0x83c101	                              add ecx, 1	      7746	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_3
0x400dc91	        0x4883c201	                              add rdx, 1	      7746	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_3
0x400dc95	    0x3b0d00000000	            cmp ecx, dword [0x0400dc9b] 	      7746	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_3
0x400dc9b	            0x72e6	                            jb 0x400dc83	      7746	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_5	FOR_3
0x400dc9d	     0xfb605000000	           movzx eax, byte [0x0400dca4] 	      7751	tc-i386.c	FUNCTION_92	ELSE_3	IF_16
0x400dca4	            0x3c01	                               cmp al, 1	      7751	tc-i386.c	FUNCTION_92	ELSE_3	IF_16
0x400dca6	            0x7510	                           jne 0x400dcb8	      7751	tc-i386.c	FUNCTION_92	ELSE_3	IF_16
0x400dca8	    0x8b3d00000000	            mov edi, dword [0x0400dcae] 	      7753	tc-i386.c	FUNCTION_92	ELSE_3	IF_16	CALL_21
0x400dcae	      0xe800000000	                          call 0x400dcb3	      7753	tc-i386.c	FUNCTION_92	ELSE_3	IF_16	CALL_21
0x400dcb3	      0xe981000000	                           jmp 0x400dd39	      7753	tc-i386.c	FUNCTION_92	ELSE_3	IF_16	CALL_21
0x400dcb8	            0x3c03	                               cmp al, 3	      7757	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400dcba	            0x742d	                            je 0x400dce9	      7757	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400dcbc	            0x3c04	                               cmp al, 4	      7757	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400dcbe	            0x7406	                            je 0x400dcc6	      7757	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400dcc0	            0x3c02	                               cmp al, 2	      7757	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400dcc2	            0x754d	                           jne 0x400dd11	      7757	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400dcc4	            0xeb3c	                           jmp 0x400dd02	      7757	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400dcc6	      0xbf04000000	                              mov edi, 4	      7760	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_22
0x400dccb	      0xe800000000	                          call 0x400dcd0	      7760	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_22
0x400dcd0	     0xfb615000000	           movzx edx, byte [0x0400dcd7] 	      7761	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400dcd7	            0x8810	                      mov byte [rax], dl	      7761	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400dcd9	        0x488d5002	                      lea rdx, [rax + 2]	      7762	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400dcdd	     0xfb70d000000	           movzx ecx, word [0x0400dce4] 	      7762	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400dce4	          0x884801	                  mov byte [rax + 1], cl	      7762	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400dce7	            0xeb3c	                           jmp 0x400dd25	      7762	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400dce9	      0xbf03000000	                              mov edi, 3	      7765	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_23
0x400dcee	      0xe800000000	                          call 0x400dcf3	      7765	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_23
0x400dcf3	        0x488d5001	                      lea rdx, [rax + 1]	      7766	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400dcf7	     0xfb70d000000	           movzx ecx, word [0x0400dcfe] 	      7766	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400dcfe	            0x8808	                      mov byte [rax], cl	      7766	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400dd00	            0xeb23	                           jmp 0x400dd25	      7766	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3
0x400dd02	      0xbf02000000	                              mov edi, 2	      7769	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_24
0x400dd07	      0xe800000000	                          call 0x400dd0c	      7769	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_24
0x400dd0c	          0x4889c2	                            mov rdx, rax	      7769	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_24
0x400dd0f	            0xeb14	                           jmp 0x400dd25	      7769	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_24
0x400dd11	      0xba00000000	                              mov edx, 0	      7772	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_25
0x400dd16	      0xbe5c1e0000	                         mov esi, 0x1e5c	      7772	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_25
0x400dd1b	      0xbf00000000	                              mov edi, 0	      7772	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_25
0x400dd20	      0xe800000000	                          call 0x400dd25	      7772	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6	SWITCH_3	CALL_25
0x400dd25	    0x8b0500000000	            mov eax, dword [0x0400dd2b] 	      7777	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6
0x400dd2b	          0xc1e808	                              shr eax, 8	      7777	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6
0x400dd2e	            0x8802	                      mov byte [rdx], al	      7777	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6
0x400dd30	    0x8b0500000000	            mov eax, dword [0x0400dd36] 	      7778	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6
0x400dd36	          0x884201	                  mov byte [rdx + 1], al	      7778	tc-i386.c	FUNCTION_92	ELSE_3	ELSE_6
0x400dd39	    0xf60500000000	               test byte [0x0400dd40], 8	      7782	tc-i386.c	FUNCTION_92	ELSE_3	IF_17
0x400dd40	            0x746a	                            je 0x400ddac	      7782	tc-i386.c	FUNCTION_92	ELSE_3	IF_17
0x400dd42	    0x8b0500000000	            mov eax, dword [0x0400dd48] 	      7784	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	CALL_26
0x400dd48	    0x8d3cc5000000	                        lea edi, [rax*8]	      7784	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	CALL_26
0x400dd4f	    0x8b0500000000	            mov eax, dword [0x0400dd55] 	      7784	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	CALL_26
0x400dd55	          0xc1e006	                              shl eax, 6	      7784	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	CALL_26
0x400dd58	             0x9c7	                             or edi, eax	      7784	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	CALL_26
0x400dd5a	     0xb3d00000000	              or edi, dword [0x0400dd60]	      7784	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	CALL_26
0x400dd60	      0xe800000000	                          call 0x400dd65	      7784	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	CALL_26
0x400dd65	    0x833d00000000	               cmp dword [0x0400dd6c], 4	      7791	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18
0x400dd6c	            0x753e	                           jne 0x400ddac	      7791	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18
0x400dd6e	    0x833d00000000	               cmp dword [0x0400dd75], 3	      7792	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18
0x400dd75	            0x7435	                            je 0x400ddac	      7792	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18
0x400dd77	    0x488b05000000	            mov rax, qword [0x0400dd7e] 	      7793	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18
0x400dd7e	          0x4885c0	                           test rax, rax	      7793	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18
0x400dd81	            0x7406	                            je 0x400dd89	      7793	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18
0x400dd83	        0xf6400b40	            test byte [rax + 0xb], 0x40 	      7793	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18
0x400dd87	            0x7523	                           jne 0x400ddac	      7793	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18
0x400dd89	    0x8b0500000000	            mov eax, dword [0x0400dd8f] 	      7794	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18	CALL_27
0x400dd8f	    0x8d3cc5000000	                        lea edi, [rax*8]	      7794	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18	CALL_27
0x400dd96	    0x8b0500000000	            mov eax, dword [0x0400dd9c] 	      7794	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18	CALL_27
0x400dd9c	          0xc1e006	                              shl eax, 6	      7794	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18	CALL_27
0x400dd9f	             0x9c7	                             or edi, eax	      7794	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18	CALL_27
0x400dda1	     0xb3d00000000	              or edi, dword [0x0400dda7]	      7794	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18	CALL_27
0x400dda7	      0xe800000000	                          call 0x400ddac	      7794	tc-i386.c	FUNCTION_92	ELSE_3	IF_17	IF_18	CALL_27
0x400ddac	      0x48896c2420	             mov qword [rsp + 0x20], rbp	      7620	tc-i386.c	FUNCTION_92	CALL_2
0x400ddb1	    0x833d00000000	               cmp dword [0x0400ddb8], 0	      7799	tc-i386.c	FUNCTION_92	ELSE_3	IF_19
0x400ddb8	     0xf8409040000	                            je 0x400e1c7	      7799	tc-i386.c	FUNCTION_92	ELSE_3	IF_19
0x400ddbe	    0x833d00000000	               cmp dword [0x0400ddc5], 0	      7851	tc-i386.c	FUNCTION_95	FOR_1
0x400ddc5	     0xf842b080000	                            je 0x400e5f6	      7851	tc-i386.c	FUNCTION_95	FOR_1
0x400ddcb	    0x41bf00000000	                             mov r15d, 0	      7851	tc-i386.c	FUNCTION_95	FOR_1
0x400ddd1	          0x4d89fc	                            mov r12, r15	      7851	tc-i386.c	FUNCTION_95	FOR_1
0x400ddd4	    0x41bd00000000	                             mov r13d, 0	      7851	tc-i386.c	FUNCTION_95	FOR_1
0x400ddda	        0x488b0424	                    mov rax, qword [rsp]	      7914	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_6
0x400ddde	        0x4883c07c	                           add rax, 0x7c	      7914	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_6
0x400dde2	      0x4889442428	             mov qword [rsp + 0x28], rax	      7914	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_6
0x400dde7	          0x4d89e6	                            mov r14, r12	      7914	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_6
0x400ddea	    0x41f644247a1f	           test byte [r12 + 0x7a], 0x1f 	      7853	tc-i386.c	FUNCTION_95	FOR_1	IF_1	CALL_1
0x400ddf0	     0xf84b8030000	                            je 0x400e1ae	      7853	tc-i386.c	FUNCTION_95	FOR_1	IF_1	CALL_1
0x400ddf6	    0x498b8424a000	            mov rax, qword [r12 + 0xa0] 	      7855	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2
0x400ddfe	        0x80781802	                cmp byte [rax + 0x18], 2	      7855	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2
0x400de02	            0x756a	                           jne 0x400de6e	      7855	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2
0x400de04	          0x4489ea	                           mov edx, r13d	      7821	tc-i386.c	FUNCTION_93	IF_1
0x400de07	      0xbb08000000	                              mov ebx, 8	      7822	tc-i386.c	FUNCTION_93	IF_1
0x400de0c	    0xf604d5000000	                 test byte [rdx*8], 0x10	      7821	tc-i386.c	FUNCTION_93	IF_1
0x400de14	            0x7527	                           jne 0x400de3d	      7821	tc-i386.c	FUNCTION_93	IF_1
0x400de16	      0xbb01000000	                              mov ebx, 1	      7824	tc-i386.c	FUNCTION_93	ELSE_1	IF_2
0x400de1b	    0xf604d5000000	                    test byte [rdx*8], 1	      7823	tc-i386.c	FUNCTION_93	ELSE_1	IF_2
0x400de23	            0x7518	                           jne 0x400de3d	      7823	tc-i386.c	FUNCTION_93	ELSE_1	IF_2
0x400de25	     0xfb614d50000	                 movzx edx, byte [rdx*8]	      7825	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x400de2d	            0xd0ea	                               shr dl, 1	      7825	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x400de2f	          0x83e201	                              and edx, 1	      7825	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x400de32	          0x80fa01	                               cmp dl, 1	      7826	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x400de35	            0x19db	                            sbb ebx, ebx	      7826	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x400de37	          0x83e302	                              and ebx, 2	      7826	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x400de3a	          0x83c302	                              add ebx, 2	      7826	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x400de3d	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      7860	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_3
0x400de41	    0x8b0d00000000	            mov ecx, dword [0x0400de47] 	      7860	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_3
0x400de47	          0x48d3ff	                             sar rdi, cl	      7860	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_3
0x400de4a	            0x89de	                            mov esi, ebx	      7860	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_3
0x400de4c	      0xe81486ffff	                call sym.offset_in_range	      7860	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_3
0x400de51	          0x4889c5	                            mov rbp, rax	      7860	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_3
0x400de54	          0x4863fb	                         movsxd rdi, ebx	      7861	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_4
0x400de57	      0xe800000000	                          call 0x400de5c	      7861	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_4
0x400de5c	            0x89da	                            mov edx, ebx	      7862	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_5
0x400de5e	          0x4889ee	                            mov rsi, rbp	      7862	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_5
0x400de61	          0x4889c7	                            mov rdi, rax	      7862	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_5
0x400de64	      0xe800000000	                          call 0x400de69	      7862	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_5
0x400de69	      0xe940030000	                           jmp 0x400e1ae	      7862	tc-i386.c	FUNCTION_95	FOR_1	IF_1	IF_2	CALL_5
0x400de6e	          0x4489e8	                           mov eax, r13d	      7821	tc-i386.c	FUNCTION_93	IF_1
0x400de71	    0xf604c5000000	                 test byte [rax*8], 0x10	      7821	tc-i386.c	FUNCTION_93	IF_1
0x400de79	            0x754e	                           jne 0x400dec9	      7821	tc-i386.c	FUNCTION_93	IF_1
0x400de7b	    0xf604c5000000	                    test byte [rax*8], 1	      7823	tc-i386.c	FUNCTION_93	ELSE_1	IF_2
0x400de83	            0x7572	                           jne 0x400def7	      7823	tc-i386.c	FUNCTION_93	ELSE_1	IF_2
0x400de85	     0xfb604c50000	                 movzx eax, byte [rax*8]	      7825	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x400de8d	            0xd0e8	                               shr al, 1	      7825	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x400de8f	          0x83e001	                              and eax, 1	      7825	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x400de92	            0x3c01	                               cmp al, 1	      7826	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x400de94	            0x19c0	                            sbb eax, eax	      7826	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x400de96	          0x83e002	                              and eax, 2	      7826	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x400de99	          0x83c002	                              add eax, 2	      7826	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x400de9c	        0x89442410	             mov dword [rsp + 0x10], eax	      7826	tc-i386.c	FUNCTION_93	ELSE_2	IF_3
0x400dea0	          0x4489e8	                           mov eax, r13d	      7868	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x400dea3	     0xfb604c50000	                 movzx eax, byte [rax*8]	      7868	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x400deab	          0xc0e803	                               shr al, 3	      7868	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x400deae	          0x83e001	                              and eax, 1	      7868	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x400deb1	        0x89442418	             mov dword [rsp + 0x18], eax	      7868	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x400deb5	    0x410fb687c800	           movzx eax, byte [r15 + 0xc8] 	      7869	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x400debd	          0x83e001	                              and eax, 1	      7869	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x400dec0	           0xfb6d8	                           movzx ebx, al	      7869	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x400dec3	        0x895c2408	                mov dword [rsp + 8], ebx	      7869	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x400dec7	            0xeb4a	                           jmp 0x400df13	      7869	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x400dec9	          0x4489e8	                           mov eax, r13d	      7868	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x400decc	     0xfb614c50000	                 movzx edx, byte [rax*8]	      7868	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x400ded4	            0x89d0	                            mov eax, edx	      7868	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x400ded6	          0xc0e803	                               shr al, 3	      7868	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x400ded9	          0x83e001	                              and eax, 1	      7868	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x400dedc	        0x89442418	             mov dword [rsp + 0x18], eax	      7868	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x400dee0	    0x410fb687c800	           movzx eax, byte [r15 + 0xc8] 	      7869	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x400dee8	          0x83e001	                              and eax, 1	      7869	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x400deeb	           0xfb6d8	                           movzx ebx, al	      7869	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x400deee	        0x895c2408	                mov dword [rsp + 8], ebx	      7869	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1
0x400def2	          0xf6c201	                              test dl, 1	      7873	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_7
0x400def5	            0x7414	                            je 0x400df0b	      7873	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_7
0x400def7	      0xba00000000	                              mov edx, 0	      7873	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_7
0x400defc	      0xbec11e0000	                         mov esi, 0x1ec1	      7873	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_7
0x400df01	      0xbf00000000	                              mov edi, 0	      7873	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_7
0x400df06	      0xe800000000	                          call 0x400df0b	      7873	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_7
0x400df0b	    0xc74424100800	               mov dword [rsp + 0x10], 8	      7822	tc-i386.c	FUNCTION_93	IF_1
0x400df13	            0x84c0	                             test al, al	      7878	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3
0x400df15	            0x747b	                            je 0x400df92	      7878	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3
0x400df17	    0x833d00000000	               cmp dword [0x0400df1e], 0	      7878	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3
0x400df1e	            0x7472	                            je 0x400df92	      7878	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3
0x400df20	    0x833d00000000	               cmp dword [0x0400df27], 0	      7883	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2
0x400df27	            0x7455	                            je 0x400df7e	      7883	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2
0x400df29	      0xbd00000000	                              mov ebp, 0	      7883	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2
0x400df2e	      0xb800000000	                              mov eax, 0	      7883	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2
0x400df33	      0xbb00000000	                              mov ebx, 0	      7883	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2
0x400df38	        0xf64579fc	           test byte [rbp + 0x79], 0xfc 	      7884	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_8
0x400df3c	            0x742d	                            je 0x400df6b	      7884	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_8
0x400df3e	            0x85c0	                           test eax, eax	      7888	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_9
0x400df40	            0x7414	                            je 0x400df56	      7888	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_9
0x400df42	      0xba00000000	                              mov edx, 0	      7888	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_9
0x400df47	      0xbed01e0000	                         mov esi, 0x1ed0	      7888	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_9
0x400df4c	      0xbf00000000	                              mov edi, 0	      7888	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_9
0x400df51	      0xe800000000	                          call 0x400df56	      7888	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_9
0x400df56	            0x89df	                            mov edi, ebx	      7889	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_10
0x400df58	      0xe80f2cffff	                       call sym.imm_size	      7889	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4	CALL_10
0x400df5d	    0x498b96a00000	            mov rdx, qword [r14 + 0xa0] 	      7890	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4
0x400df64	          0x4863c8	                         movsxd rcx, eax	      7890	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4
0x400df67	        0x48294a10	             sub qword [rdx + 0x10], rcx	      7890	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2	IF_4
0x400df6b	          0x83c301	                              add ebx, 1	      7883	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2
0x400df6e	        0x4883c508	                              add rbp, 8	      7883	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2
0x400df72	    0x3b1d00000000	            cmp ebx, dword [0x0400df78] 	      7883	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2
0x400df78	            0x72be	                            jb 0x400df38	      7883	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	FOR_2
0x400df7a	            0x85c0	                           test eax, eax	      7893	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	CALL_11
0x400df7c	            0x7514	                           jne 0x400df92	      7893	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	CALL_11
0x400df7e	      0xba00000000	                              mov edx, 0	      7893	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	CALL_11
0x400df83	      0xbed51e0000	                         mov esi, 0x1ed5	      7893	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	CALL_11
0x400df88	      0xbf00000000	                              mov edi, 0	      7893	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	CALL_11
0x400df8d	      0xe800000000	                          call 0x400df92	      7893	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_3	CALL_11
0x400df92	        0x8b5c2410	            mov ebx, dword [rsp + 0x10] 	      7896	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_12
0x400df96	          0x4863fb	                         movsxd rdi, ebx	      7896	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_12
0x400df99	      0xe800000000	                          call 0x400df9e	      7896	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_12
0x400df9e	          0x4889c5	                            mov rbp, rax	      7896	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_12
0x400dfa1	    0x418b8fdc0000	            mov ecx, dword [r15 + 0xdc] 	      7897	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_13
0x400dfa8	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      7897	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_13
0x400dfac	        0x8b742408	                mov esi, dword [rsp + 8]	      7897	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_13
0x400dfb0	            0x89df	                            mov edi, ebx	      7897	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_13
0x400dfb2	      0xe87181ffff	                          call sym.reloc	      7897	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_13
0x400dfb7	            0x89c3	                            mov ebx, eax	      7897	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_13
0x400dfb9	    0x488b05000000	            mov rax, qword [0x0400dfc0] 	      7898	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400dfc0	          0x4885c0	                           test rax, rax	      7898	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400dfc3	     0xf84da000000	                            je 0x400e0a3	      7898	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400dfc9	    0x498b96a00000	            mov rdx, qword [r14 + 0xa0] 	      7899	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400dfd0	          0x483b02	                    cmp rax, qword [rdx]	      7899	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400dfd3	     0xf85ca000000	                           jne 0x400e0a3	      7899	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400dfd9	          0x83fb02	                              cmp ebx, 2	      7900	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400dfdc	            0x741a	                            je 0x400dff8	      7900	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400dfde	    0x81fb84010000	                          cmp ebx, 0x184	      7900	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400dfe4	            0x7412	                            je 0x400dff8	      7900	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400dfe6	          0x83fb01	                              cmp ebx, 1	      7902	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400dfe9	            0x7528	                           jne 0x400e013	      7902	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400dfeb	    0x833d00000000	               cmp dword [0x0400dff2], 0	      7903	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400dff2	     0xf84ab000000	                            je 0x400e0a3	      7903	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400dff8	         0xfb64218	           movzx eax, byte [rdx + 0x18] 	      7904	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400dffc	            0x3c03	                               cmp al, 3	      7904	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400dffe	            0x741c	                            je 0x400e01c	      7904	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400e000	            0x3c13	                            cmp al, 0x13	      7905	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400e002	            0x750f	                           jne 0x400e013	      7905	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400e004	        0x488b7a08	                mov rdi, qword [rdx + 8]	      7906	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	CALL_14
0x400e008	      0xe800000000	                          call 0x400e00d	      7906	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	CALL_14
0x400e00d	        0x80781814	            cmp byte [rax + 0x18], 0x14 	      7906	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	CALL_14
0x400e011	            0x7409	                            je 0x400e01c	      7906	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	CALL_14
0x400e013	          0x83fb09	                              cmp ebx, 9	      7909	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400e016	     0xf8587000000	                           jne 0x400e0a3	      7909	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5
0x400e01c	    0x488b0d000000	            mov rcx, qword [0x0400e023] 	      7913	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_6
0x400e023	        0x48390c24	                    cmp qword [rsp], rcx	      7913	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_6
0x400e027	            0x750f	                           jne 0x400e038	      7913	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_6
0x400e029	          0x4889e8	                            mov rax, rbp	      7914	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_6
0x400e02c	      0x482b442428	             sub rax, qword [rsp + 0x28]	      7914	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_6
0x400e031	      0x482b442420	             sub rax, qword [rsp + 0x20]	      7914	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_6
0x400e036	            0xeb40	                           jmp 0x400e078	      7914	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_6
0x400e038	        0x488b0424	                    mov rax, qword [rsp]	      7919	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2
0x400e03c	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      7919	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2
0x400e040	      0x4889742418	             mov qword [rsp + 0x18], rsi	      7919	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2
0x400e045	          0x4889f2	                            mov rdx, rsi	      7919	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2
0x400e048	      0x482b542420	             sub rdx, qword [rsp + 0x20]	      7919	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2
0x400e04d	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7920	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x400e051	          0x4839c1	                            cmp rcx, rax	      7921	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x400e054	            0x7417	                            je 0x400e06d	      7921	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x400e056	          0x4885c0	                           test rax, rax	      7921	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x400e059	            0x7412	                            je 0x400e06d	      7921	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x400e05b	        0x48035010	             add rdx, qword [rax + 0x10]	      7922	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x400e05f	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7921	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x400e063	          0x4839c1	                            cmp rcx, rax	      7921	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x400e066	            0x7405	                            je 0x400e06d	      7921	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x400e068	          0x4885c0	                           test rax, rax	      7921	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x400e06b	            0x75ee	                           jne 0x400e05b	      7921	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2	FOR_3
0x400e06d	          0x4889e8	                            mov rax, rbp	      7923	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2
0x400e070	          0x4829c8	                            sub rax, rcx	      7923	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2
0x400e073	      0x488d441084	             lea rax, [rax + rdx - 0x7c]	      7923	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_2
0x400e078	    0x833d00000000	               cmp dword [0x0400e07f], 0	      7926	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_7
0x400e07f	            0x7512	                           jne 0x400e093	      7926	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_7
0x400e081	    0x498b96a00000	            mov rdx, qword [r14 + 0xa0] 	      7929	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_7
0x400e088	        0x48014210	            add qword [rdx + 0x10], rax 	      7929	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_7
0x400e08c	      0xbb6b010000	                          mov ebx, 0x16b	      7928	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_7
0x400e091	            0xeb10	                           jmp 0x400e0a3	      7928	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	IF_7
0x400e093	          0x83fb01	                              cmp ebx, 1	      7937	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_4
0x400e096	           0xf94c3	                                 sete bl	      7937	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_4
0x400e099	           0xfb6db	                           movzx ebx, bl	      7937	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_4
0x400e09c	    0x8d9c5b8e0100	         lea ebx, [rbx + rbx*2 + 0x18e] 	      7937	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_5	ELSE_4
0x400e0a3	    0x488b3d000000	            mov rdi, qword [0x0400e0aa] 	      7939	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_15
0x400e0aa	    0x498b8ea00000	            mov rcx, qword [r14 + 0xa0] 	      7939	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_15
0x400e0b1	        0x488d477c	                   lea rax, [rdi + 0x7c]	      7939	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_15
0x400e0b5	          0x4889ee	                            mov rsi, rbp	      7939	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_15
0x400e0b8	          0x4829c6	                            sub rsi, rax	      7939	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_15
0x400e0bb	          0x4189d9	                            mov r9d, ebx	      7939	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_15
0x400e0be	      0x448b442408	                mov r8d, dword [rsp + 8]	      7939	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_15
0x400e0c3	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      7939	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_15
0x400e0c7	      0xe800000000	                          call 0x400e0cc	      7939	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	CALL_15
0x400e0cc	    0x833d00000000	               cmp dword [0x0400e0d3], 0	      7947	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e0d3	            0x7529	                           jne 0x400e0fe	      7947	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e0d5	    0x833d00000000	               cmp dword [0x0400e0dc], 0	      7948	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e0dc	     0xf85cc000000	                           jne 0x400e1ae	      7948	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e0e2	    0x833d00000000	               cmp dword [0x0400e0e9], 0	      7949	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e0e9	     0xf85bf000000	                           jne 0x400e1ae	      7949	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e0ef	    0x833d00000000	               cmp dword [0x0400e0f6], 5	      7950	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e0f6	     0xf85b2000000	                           jne 0x400e1ae	      7950	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e0fc	            0xeb20	                           jmp 0x400e11e	      7950	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e0fe	    0x8b1500000000	            mov edx, dword [0x0400e104] 	      7951	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e104	          0x83fa02	                              cmp edx, 2	      7951	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e107	            0x7415	                            je 0x400e11e	      7951	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e109	            0x85d2	                           test edx, edx	      7952	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e10b	     0xf859d000000	                           jne 0x400e1ae	      7952	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e111	    0x833d00000000	               cmp dword [0x0400e118], 5	      7952	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e118	     0xf8590000000	                           jne 0x400e1ae	      7952	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e11e	    0x8b1500000000	            mov edx, dword [0x0400e124] 	      7953	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e124	          0x83fa01	                              cmp edx, 1	      7953	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e127	            0x751f	                           jne 0x400e148	      7953	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e129	    0x813d00000000	           cmp dword [0x0400e133], 0xff 	      7954	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e133	            0x7579	                           jne 0x400e1ae	      7954	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e135	    0x8b1d00000000	            mov ebx, dword [0x0400e13b] 	      7955	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e13b	          0x8d53fe	                      lea edx, [rbx - 2]	      7955	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e13e	    0xf7c2fdffffff	                    test edx, 0xfffffffd	      7955	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e144	            0x7428	                            je 0x400e16e	      7955	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e146	            0xeb66	                           jmp 0x400e1ae	      7955	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e148	          0x83fa02	                              cmp edx, 2	      7956	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e14b	            0x7561	                           jne 0x400e1ae	      7956	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e14d	    0x8b1500000000	            mov edx, dword [0x0400e153] 	      7957	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e153	    0x81fa8b000000	                           cmp edx, 0x8b	      7957	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e159	            0x7413	                            je 0x400e16e	      7957	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e15b	    0x81fa85000000	                           cmp edx, 0x85	      7957	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e161	            0x740b	                            je 0x400e16e	      7957	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e163	    0x81e2c7000000	                           and edx, 0xc7	      7959	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e169	          0x83fa03	                              cmp edx, 3	      7959	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e16c	            0x7540	                           jne 0x400e1ae	      7959	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9
0x400e16e	    0x833d00000000	               cmp dword [0x0400e175], 0	      7961	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10
0x400e175	            0x7434	                            je 0x400e1ab	      7961	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10
0x400e177	    0x833d00000000	               cmp dword [0x0400e17e], 0	      7963	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10
0x400e17e	           0xf95c2	                                setne dl	      7963	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10
0x400e181	          0xc1e203	                              shl edx, 3	      7963	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10
0x400e184	           0xfb608	                   movzx ecx, byte [rax]	      7963	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10
0x400e187	          0x83e1f7	                     and ecx, 0xfffffff7	      7963	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10
0x400e18a	             0x9ca	                             or edx, ecx	      7963	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10
0x400e18c	            0x8810	                      mov byte [rax], dl	      7963	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10
0x400e18e	    0x488b15000000	            mov rdx, qword [0x0400e195] 	      7964	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x400e195	          0x4885d2	                           test rdx, rdx	      7964	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x400e198	            0x7414	                            je 0x400e1ae	      7964	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x400e19a	         0xfb65211	           movzx edx, byte [rdx + 0x11] 	      7965	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x400e19e	          0x83c202	                              add edx, 2	      7965	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x400e1a1	          0x80fa01	                               cmp dl, 1	      7965	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x400e1a4	            0x7708	                            ja 0x400e1ae	      7965	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x400e1a6	          0x800810	                     or byte [rax], 0x10	      7967	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x400e1a9	            0xeb03	                           jmp 0x400e1ae	      7967	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	IF_10	IF_11
0x400e1ab	          0x800810	                     or byte [rax], 0x10	      7970	tc-i386.c	FUNCTION_95	FOR_1	IF_1	ELSE_1	IF_9	ELSE_5
0x400e1ae	        0x4183c501	                             add r13d, 1	      7851	tc-i386.c	FUNCTION_95	FOR_1
0x400e1b2	        0x4983c408	                              add r12, 8	      7851	tc-i386.c	FUNCTION_95	FOR_1
0x400e1b6	        0x4983c704	                              add r15, 4	      7851	tc-i386.c	FUNCTION_95	FOR_1
0x400e1ba	    0x443b2d000000	           cmp r13d, dword [0x0400e1c1] 	      7851	tc-i386.c	FUNCTION_95	FOR_1
0x400e1c1	     0xf8220fcffff	                            jb 0x400dde7	      7851	tc-i386.c	FUNCTION_95	FOR_1
0x400e1c7	    0x833d00000000	               cmp dword [0x0400e1ce], 0	      7802	tc-i386.c	FUNCTION_92	ELSE_3	IF_20
0x400e1ce	     0xf8422040000	                            je 0x400e5f6	      7802	tc-i386.c	FUNCTION_92	ELSE_3	IF_20
0x400e1d4	    0x833d00000000	               cmp dword [0x0400e1db], 0	      7983	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1
0x400e1db	     0xf8415040000	                            je 0x400e5f6	      7983	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1
0x400e1e1	    0x41bd00000000	                             mov r13d, 0	      7983	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1
0x400e1e7	          0x4c89ed	                            mov rbp, r13	      7983	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1
0x400e1ea	      0xbb00000000	                              mov ebx, 0	      7983	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1
0x400e1ef	        0x488b0424	                    mov rax, qword [rsp]	      8077	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_6
0x400e1f3	        0x4883c07c	                           add rax, 0x7c	      8077	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_6
0x400e1f7	      0x4889442418	             mov qword [rsp + 0x18], rax	      8077	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_6
0x400e1fc	    0x488b05000000	            mov rax, qword [0x0400e203] 	      7986	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_1
0x400e203	          0x4885c0	                           test rax, rax	      7986	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_1
0x400e206	            0x7409	                            je 0x400e211	      7986	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_1
0x400e208	          0x395804	                cmp dword [rax + 4], ebx	      7986	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_1
0x400e20b	     0xf84da010000	                            je 0x400e3eb	      7986	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_1
0x400e211	          0x4989ef	                            mov r15, rbp	      7986	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_1
0x400e214	        0xf64579fc	           test byte [rbp + 0x79], 0xfc 	      7989	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	CALL_1
0x400e218	     0xf84cd010000	                            je 0x400e3eb	      7989	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	CALL_1
0x400e21e	    0x4c8ba5a00000	            mov r12, qword [rbp + 0xa0] 	      7991	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3
0x400e225	    0x41807c241802	                cmp byte [r12 + 0x18], 2	      7991	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3
0x400e22b	            0x7534	                           jne 0x400e261	      7991	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3
0x400e22d	            0x89df	                            mov edi, ebx	      7993	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_2
0x400e22f	      0xe83829ffff	                       call sym.imm_size	      7993	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_2
0x400e234	          0x4189c6	                           mov r14d, eax	      7993	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_2
0x400e237	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	      7996	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_3
0x400e23c	            0x89c6	                            mov esi, eax	      7996	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_3
0x400e23e	      0xe82282ffff	                call sym.offset_in_range	      7996	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_3
0x400e243	          0x4989c4	                            mov r12, rax	      7996	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_3
0x400e246	          0x4963fe	                        movsxd rdi, r14d	      7998	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_4
0x400e249	      0xe800000000	                          call 0x400e24e	      7998	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_4
0x400e24e	          0x4489f2	                           mov edx, r14d	      7999	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_5
0x400e251	          0x4c89e6	                            mov rsi, r12	      7999	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_5
0x400e254	          0x4889c7	                            mov rdi, rax	      7999	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_5
0x400e257	      0xe800000000	                          call 0x400e25c	      7999	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_5
0x400e25c	      0xe98a010000	                           jmp 0x400e3eb	      7999	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	IF_3	CALL_5
0x400e261	            0x89df	                            mov edi, ebx	      8008	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_6
0x400e263	      0xe80429ffff	                       call sym.imm_size	      8008	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_6
0x400e268	          0x4189c6	                           mov r14d, eax	      8008	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_6
0x400e26b	            0x89d8	                            mov eax, ebx	      8011	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x400e26d	    0x41bc00000000	                             mov r12d, 0	      8016	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	ELSE_2
0x400e273	    0xf604c5000000	                 test byte [rax*8], 0x40	      8011	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x400e27b	            0x742b	                            je 0x400e2a8	      8011	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x400e27d	     0xfb605000000	           movzx eax, byte [0x0400e284] 	      8012	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x400e284	    0x41bc01000000	                             mov r12d, 1	      8014	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x400e28a	            0x3c71	                            cmp al, 0x71	      8012	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x400e28c	            0x741a	                            je 0x400e2a8	      8012	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x400e28e	    0x41bc00000000	                             mov r12d, 0	      8016	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	ELSE_2
0x400e294	            0x84c0	                             test al, al	      8013	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x400e296	            0x7510	                           jne 0x400e2a8	      8013	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x400e298	    0x440fb6250000	          movzx r12d, byte [0x0400e2a0] 	      8014	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x400e2a0	        0x41c0ec03	                             shr r12b, 3	      8014	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x400e2a4	        0x4183e401	                             and r12d, 1	      8014	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_4
0x400e2a8	          0x4963fe	                        movsxd rdi, r14d	      8018	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_7
0x400e2ab	      0xe800000000	                          call 0x400e2b0	      8018	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_7
0x400e2b0	      0x4889442408	                mov qword [rsp + 8], rax	      8018	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_7
0x400e2b5	    0x418b8ddc0000	            mov ecx, dword [r13 + 0xdc] 	      8019	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_8
0x400e2bc	          0x4489e2	                           mov edx, r12d	      8019	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_8
0x400e2bf	      0xbe00000000	                              mov esi, 0	      8019	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_8
0x400e2c4	          0x4489f7	                           mov edi, r14d	      8019	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_8
0x400e2c7	      0xe85c7effff	                          call sym.reloc	      8019	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_8
0x400e2cc	          0x4189c4	                           mov r12d, eax	      8019	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	CALL_8
0x400e2cf	          0x8d40ff	                      lea eax, [rax - 1]	      8065	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400e2d2	          0x83f801	                              cmp eax, 1	      8065	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400e2d5	            0x760d	                           jbe 0x400e2e4	      8065	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400e2d7	    0x4181fc840100	                         cmp r12d, 0x184	      8065	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400e2de	     0xf85dc000000	                           jne 0x400e3c0	      8065	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400e2e4	    0x488b15000000	            mov rdx, qword [0x0400e2eb] 	      8066	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400e2eb	          0x4885d2	                           test rdx, rdx	      8066	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400e2ee	     0xf84cc000000	                            je 0x400e3c0	      8066	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400e2f4	    0x498b87a00000	            mov rax, qword [r15 + 0xa0] 	      8067	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400e2fb	          0x483b10	                    cmp rdx, qword [rax]	      8067	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400e2fe	     0xf85bc000000	                           jne 0x400e3c0	      8067	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400e304	         0xfb65018	           movzx edx, byte [rax + 0x18] 	      8068	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400e308	          0x80fa03	                               cmp dl, 3	      8068	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400e30b	            0x741c	                            je 0x400e329	      8068	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400e30d	          0x80fa13	                            cmp dl, 0x13	      8069	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400e310	     0xf85aa000000	                           jne 0x400e3c0	      8069	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5
0x400e316	        0x488b7808	                mov rdi, qword [rax + 8]	      8070	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	CALL_9
0x400e31a	      0xe800000000	                          call 0x400e31f	      8070	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	CALL_9
0x400e31f	        0x80781814	            cmp byte [rax + 0x18], 0x14 	      8070	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	CALL_9
0x400e323	     0xf8597000000	                           jne 0x400e3c0	      8070	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	CALL_9
0x400e329	    0x488b0d000000	            mov rcx, qword [0x0400e330] 	      8076	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_6
0x400e330	        0x48390c24	                    cmp qword [rsp], rcx	      8076	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_6
0x400e334	            0x7511	                           jne 0x400e347	      8076	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_6
0x400e336	      0x488b442408	                mov rax, qword [rsp + 8]	      8077	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_6
0x400e33b	      0x482b442418	             sub rax, qword [rsp + 0x18]	      8077	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_6
0x400e340	      0x482b442420	             sub rax, qword [rsp + 0x20]	      8077	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_6
0x400e345	            0xeb42	                           jmp 0x400e389	      8077	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_6
0x400e347	        0x488b0424	                    mov rax, qword [rsp]	      8082	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3
0x400e34b	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      8082	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3
0x400e34f	      0x4889742410	             mov qword [rsp + 0x10], rsi	      8082	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3
0x400e354	          0x4889f2	                            mov rdx, rsi	      8082	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3
0x400e357	      0x482b542420	             sub rdx, qword [rsp + 0x20]	      8082	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3
0x400e35c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      8083	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x400e360	          0x4839c1	                            cmp rcx, rax	      8084	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x400e363	            0x7417	                            je 0x400e37c	      8084	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x400e365	          0x4885c0	                           test rax, rax	      8084	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x400e368	            0x7412	                            je 0x400e37c	      8084	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x400e36a	        0x48035010	             add rdx, qword [rax + 0x10]	      8085	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x400e36e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      8084	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x400e372	          0x4885c0	                           test rax, rax	      8084	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x400e375	            0x7405	                            je 0x400e37c	      8084	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x400e377	          0x4839c1	                            cmp rcx, rax	      8084	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x400e37a	            0x75ee	                           jne 0x400e36a	      8084	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3	FOR_2
0x400e37c	      0x488b442408	                mov rax, qword [rsp + 8]	      8086	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3
0x400e381	          0x4829c8	                            sub rax, rcx	      8086	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3
0x400e384	      0x488d441084	             lea rax, [rax + rdx - 0x7c]	      8086	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_3
0x400e389	    0x833d00000000	               cmp dword [0x0400e390], 0	      8089	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_7
0x400e390	            0x7415	                            je 0x400e3a7	      8089	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_7
0x400e392	        0x4183fe04	                             cmp r14d, 4	      8091	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_4	IF_8
0x400e396	            0x7417	                            je 0x400e3af	      8091	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_4	IF_8
0x400e398	        0x4183fe08	                             cmp r14d, 8	      8094	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_9	ELSE_5
0x400e39c	      0xba91010000	                          mov edx, 0x191	      8094	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_9	ELSE_5
0x400e3a1	        0x440f44e2	                         cmove r12d, edx	      8094	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_9	ELSE_5
0x400e3a5	            0xeb0e	                           jmp 0x400e3b5	      8094	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_9	ELSE_5
0x400e3a7	    0x41bc6b010000	                         mov r12d, 0x16b	      8090	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_7
0x400e3ad	            0xeb06	                           jmp 0x400e3b5	      8090	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	IF_7
0x400e3af	    0x41bc8e010000	                         mov r12d, 0x18e	      8092	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_4	IF_8
0x400e3b5	    0x498b97a00000	            mov rdx, qword [r15 + 0xa0] 	      8095	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_5
0x400e3bc	        0x48014210	            add qword [rdx + 0x10], rax 	      8095	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	IF_5	ELSE_5
0x400e3c0	    0x488b3d000000	            mov rdi, qword [0x0400e3c7] 	      8097	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	ELSE_5	CALL_10
0x400e3c7	    0x498b8fa00000	            mov rcx, qword [r15 + 0xa0] 	      8097	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	ELSE_5	CALL_10
0x400e3ce	        0x488d477c	                   lea rax, [rdi + 0x7c]	      8097	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	ELSE_5	CALL_10
0x400e3d2	      0x488b742408	                mov rsi, qword [rsp + 8]	      8097	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	ELSE_5	CALL_10
0x400e3d7	          0x4829c6	                            sub rsi, rax	      8097	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	ELSE_5	CALL_10
0x400e3da	          0x4589e1	                           mov r9d, r12d	      8097	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	ELSE_5	CALL_10
0x400e3dd	    0x41b800000000	                              mov r8d, 0	      8097	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	ELSE_5	CALL_10
0x400e3e3	          0x4489f2	                           mov edx, r14d	      8097	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	ELSE_5	CALL_10
0x400e3e6	      0xe800000000	                          call 0x400e3eb	      8097	tc-i386.c	FUNCTION_96	FOR_1	IF_2	ELSE_1	ELSE_5	CALL_10
0x400e3eb	          0x83c301	                              add ebx, 1	      7983	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1
0x400e3ee	        0x4883c508	                              add rbp, 8	      7983	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1
0x400e3f2	        0x4983c504	                              add r13, 4	      7983	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1
0x400e3f6	    0x3b1d00000000	            cmp ebx, dword [0x0400e3fc] 	      7983	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1
0x400e3fc	     0xf82fafdffff	                            jb 0x400e1fc	      7983	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1
0x400e402	      0xe9ef010000	                           jmp 0x400e5f6	      7983	tc-i386.c	ELSE_5	FUNCTION_96	FOR_1
0x400e407	    0x833d00000000	               cmp dword [0x0400e40e], 2	      4937	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6
0x400e40e	     0xf85fdd7ffff	                           jne 0x400bc11	      4937	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6
0x400e414	      0xe9b7d7ffff	                           jmp 0x400bbd0	      4937	tc-i386.c	FUNCTION_74	FOR_1	IF_1	IF_2	ELSE_1	IF_6
0x400e419	    0xc70500000000	               mov dword [0x0400e423], 0	      4125	tc-i386.c	FUNCTION_68	IF_22
0x400e423	      0xe9c3dcffff	                           jmp 0x400c0eb	      4125	tc-i386.c	FUNCTION_68	IF_22
0x400e428	       0x510c7f00d	                      add eax, 0xdf0c710	      5833	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13
0x400e42d	          0x83f801	                              cmp eax, 1	      5833	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13
0x400e430	     0xf87efddffff	                            ja 0x400c225	      5833	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13
0x400e436	      0xe9baddffff	                           jmp 0x400c1f5	      5833	tc-i386.c	FUNCTION_79	ELSE_3	IF_4	IF_5	IF_12	IF_13
0x400e43b	          0x4863f8	                         movsxd rdi, eax	      6256	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x400e43e	    0xf604fd000000	                 test byte [rdi*8], 0x40	      6256	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x400e446	     0xf8574e4ffff	                           jne 0x400c8c0	      6256	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x400e44c	      0xe914010000	                           jmp 0x400e565	      6256	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x400e451	    0x833d00000000	               cmp dword [0x0400e458], 0	      5915	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x400e458	     0xf85e4e6ffff	                           jne 0x400cb42	      5915	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x400e45e	      0xe955e7ffff	                           jmp 0x400cbb8	      5915	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x400e463	    0x8b1500000000	            mov edx, dword [0x0400e469] 	      5923	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1
0x400e469	          0x83fa01	                              cmp edx, 1	      5923	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1
0x400e46c	     0xf8427e7ffff	                            je 0x400cb99	      5923	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1
0x400e472	          0x83fa01	                              cmp edx, 1	      5923	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1
0x400e475	     0xf820ee7ffff	                            jb 0x400cb89	      5923	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1
0x400e47b	          0x83fa02	                              cmp edx, 2	      5923	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1
0x400e47e	     0xf84f5e6ffff	                            je 0x400cb79	      5923	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1
0x400e484	      0xe92fe7ffff	                           jmp 0x400cbb8	      5923	tc-i386.c	FUNCTION_79	ELSE_22	IF_34	SWITCH_1
0x400e489	     0xfb605000000	           movzx eax, byte [0x0400e490] 	      5943	tc-i386.c	FUNCTION_79	IF_38
0x400e490	      0xe93be8ffff	                           jmp 0x400ccd0	      5943	tc-i386.c	FUNCTION_79	IF_38
0x400e495	     0xfb605000000	           movzx eax, byte [0x0400e49c] 	      5943	tc-i386.c	FUNCTION_79	IF_38
0x400e49c	      0xe9fae7ffff	                           jmp 0x400cc9b	      5943	tc-i386.c	FUNCTION_79	IF_38
0x400e4a1	     0xfb605000000	           movzx eax, byte [0x0400e4a8] 	      5943	tc-i386.c	FUNCTION_79	IF_38
0x400e4a8	      0xe90ee8ffff	                           jmp 0x400ccbb	      5943	tc-i386.c	FUNCTION_79	IF_38
0x400e4ad	     0xfb605000000	           movzx eax, byte [0x0400e4b4] 	      5943	tc-i386.c	FUNCTION_79	IF_38
0x400e4b4	            0x84c0	                             test al, al	      5943	tc-i386.c	FUNCTION_79	IF_38
0x400e4b6	     0xf84d1000000	                            je 0x400e58d	      5943	tc-i386.c	FUNCTION_79	IF_38
0x400e4bc	      0xe9de000000	                           jmp 0x400e59f	      5943	tc-i386.c	FUNCTION_79	IF_38
0x400e4c1	     0xfb605000000	           movzx eax, byte [0x0400e4c8] 	      6058	tc-i386.c	FUNCTION_79	IF_57
0x400e4c8	          0x83e028	                           and eax, 0x28	      6058	tc-i386.c	FUNCTION_79	IF_57
0x400e4cb	            0x3c08	                               cmp al, 8	      6058	tc-i386.c	FUNCTION_79	IF_57
0x400e4cd	     0xf8556eaffff	                           jne 0x400cf29	      6058	tc-i386.c	FUNCTION_79	IF_57
0x400e4d3	      0xe907010000	                           jmp 0x400e5df	      6058	tc-i386.c	FUNCTION_79	IF_57
0x400e4d8	    0x833d00000000	               cmp dword [0x0400e4df], 0	      6055	tc-i386.c	FUNCTION_79	IF_57
0x400e4df	            0x75e0	                           jne 0x400e4c1	      6055	tc-i386.c	FUNCTION_79	IF_57
0x400e4e1	      0xe943eaffff	                           jmp 0x400cf29	      6055	tc-i386.c	FUNCTION_79	IF_57
0x400e4e6	          0x4084ff	                           test dil, dil	      6055	tc-i386.c	FUNCTION_79	IF_57
0x400e4e9	            0x7406	                            je 0x400e4f1	      6055	tc-i386.c	FUNCTION_79	IF_57
0x400e4eb	    0x890d00000000	            mov dword [0x0400e4f1], ecx 	      6055	tc-i386.c	FUNCTION_79	IF_57
0x400e4f1	    0x8b0500000000	            mov eax, dword [0x0400e4f7] 	      4156	tc-i386.c	FUNCTION_68	IF_30
0x400e4f7	      0x2520004000	                       and eax, 0x400020	      4156	tc-i386.c	FUNCTION_68	IF_30
0x400e4fc	          0x83f820	                           cmp eax, 0x20	      4156	tc-i386.c	FUNCTION_68	IF_30
0x400e4ff	     0xf8599edffff	                           jne 0x400d29e	      4156	tc-i386.c	FUNCTION_68	IF_30
0x400e505	      0xe986edffff	                           jmp 0x400d290	      4156	tc-i386.c	FUNCTION_68	IF_30
0x400e50a	    0x8b0500000000	            mov eax, dword [0x0400e510] 	      4156	tc-i386.c	FUNCTION_68	IF_30
0x400e510	      0x2520004000	                       and eax, 0x400020	      4156	tc-i386.c	FUNCTION_68	IF_30
0x400e515	          0x83f820	                           cmp eax, 0x20	      4156	tc-i386.c	FUNCTION_68	IF_30
0x400e518	     0xf858fedffff	                           jne 0x400d2ad	      4156	tc-i386.c	FUNCTION_68	IF_30
0x400e51e	      0xe96dedffff	                           jmp 0x400d290	      4156	tc-i386.c	FUNCTION_68	IF_30
0x400e523	    0x8b0500000000	            mov eax, dword [0x0400e529] 	      4220	tc-i386.c	FUNCTION_68	IF_40
0x400e529	      0x2501000020	                     and eax, 0x20000001	      4220	tc-i386.c	FUNCTION_68	IF_40
0x400e52e	      0x3d01000020	                     cmp eax, 0x20000001	      4220	tc-i386.c	FUNCTION_68	IF_40
0x400e533	     0xf85cdeeffff	                           jne 0x400d406	      4220	tc-i386.c	FUNCTION_68	IF_40
0x400e539	      0xe9bbeeffff	                           jmp 0x400d3f9	      4220	tc-i386.c	FUNCTION_68	IF_40
0x400e53e	    0xc70500000000	           mov dword [0x0400e548], 0x40 	      4267	tc-i386.c	FUNCTION_68	IF_43	IF_45
0x400e548	    0x8b0500000000	            mov eax, dword [0x0400e54e] 	      4270	tc-i386.c	FUNCTION_68	IF_46
0x400e54e	      0xe9b2efffff	                           jmp 0x400d505	      4270	tc-i386.c	FUNCTION_68	IF_46
0x400e553	    0x833d00000000	               cmp dword [0x0400e55a], 0	      7656	tc-i386.c	FUNCTION_92	ELSE_3	IF_5
0x400e55a	     0xf857bf5ffff	                           jne 0x400dadb	      7656	tc-i386.c	FUNCTION_92	ELSE_3	IF_5
0x400e560	      0xe97df5ffff	                           jmp 0x400dae2	      7656	tc-i386.c	FUNCTION_92	ELSE_3	IF_5
0x400e565	          0x4863f8	                         movsxd rdi, eax	      6257	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x400e568	    0x803cfd000000	                     cmp byte [rdi*8], 0	      6257	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x400e570	     0xf889fe2ffff	                            js 0x400c815	      6257	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x400e576	      0xe945e3ffff	                           jmp 0x400c8c0	      6257	tc-i386.c	FUNCTION_82	ELSE_2	IF_3
0x400e57b	    0x833d00000000	               cmp dword [0x0400e582], 0	      5915	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x400e582	     0xf850dffffff	                           jne 0x400e495	      5915	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x400e588	      0xe920ffffff	                           jmp 0x400e4ad	      5915	tc-i386.c	FUNCTION_79	ELSE_22	IF_34
0x400e58d	    0xf60500000000	               test byte [0x0400e594], 2	      5947	tc-i386.c	FUNCTION_79	IF_38	IF_39	IF_40
0x400e594	     0xf848fe9ffff	                            je 0x400cf29	      5947	tc-i386.c	FUNCTION_79	IF_38	IF_39	IF_40
0x400e59a	      0xe92fe6ffff	                           jmp 0x400cbce	      5947	tc-i386.c	FUNCTION_79	IF_38	IF_39	IF_40
0x400e59f	            0x3c71	                            cmp al, 0x71	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x400e5a1	     0xf8429e7ffff	                            je 0x400ccd0	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x400e5a7	            0x3c71	                            cmp al, 0x71	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x400e5a9	            0x7f0d	                            jg 0x400e5b8	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x400e5ab	            0x3c6c	                            cmp al, 0x6c	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x400e5ad	     0xf8576e9ffff	                           jne 0x400cf29	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x400e5b3	      0xe903e7ffff	                           jmp 0x400ccbb	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x400e5b8	            0x3c73	                            cmp al, 0x73	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x400e5ba	     0xf8431e7ffff	                            je 0x400ccf1	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x400e5c0	            0x3c77	                            cmp al, 0x77	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x400e5c2	     0xf8561e9ffff	                           jne 0x400cf29	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x400e5c8	      0xe903e7ffff	                           jmp 0x400ccd0	      5983	tc-i386.c	FUNCTION_79	SWITCH_2
0x400e5cd	    0x803d00000000	            cmp byte [0x0400e5d4], 0x71 	      6040	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x400e5d4	     0xf8566e8ffff	                           jne 0x400ce40	      6040	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x400e5da	      0xe9e8e7ffff	                           jmp 0x400cdc7	      6040	tc-i386.c	FUNCTION_79	SWITCH_2	IF_56
0x400e5df	    0x8b0500000000	            mov eax, dword [0x0400e5e5] 	      6065	tc-i386.c	FUNCTION_79	IF_57	IF_58
0x400e5e5	      0xe992e8ffff	                           jmp 0x400ce7c	      6065	tc-i386.c	FUNCTION_79	IF_57	IF_58
0x400e5ea	     0xfb605000000	           movzx eax, byte [0x0400e5f1] 	      5943	tc-i386.c	FUNCTION_79	IF_38
0x400e5f1	      0xe9a5e6ffff	                           jmp 0x400cc9b	      5943	tc-i386.c	FUNCTION_79	IF_38
0x400e5f6	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      4275	tc-i386.c	FUNCTION_68
0x400e5fb	    0x644833042528	                xor rax, qword fs:[0x28]	      4275	tc-i386.c	FUNCTION_68
0x400e604	            0x7405	                            je 0x400e60b	      4275	tc-i386.c	FUNCTION_68
0x400e606	      0xe800000000	                          call 0x400e60b	      4275	tc-i386.c	FUNCTION_68
0x400e60b	        0x4883c458	                           add rsp, 0x58	      4275	tc-i386.c	FUNCTION_68
0x400e60f	              0x5b	                                 pop rbx	      4275	tc-i386.c	FUNCTION_68
0x400e610	              0x5d	                                 pop rbp	      4275	tc-i386.c	FUNCTION_68
0x400e611	            0x415c	                                 pop r12	      4275	tc-i386.c	FUNCTION_68
0x400e613	            0x415d	                                 pop r13	      4275	tc-i386.c	FUNCTION_68
0x400e615	            0x415e	                                 pop r14	      4275	tc-i386.c	FUNCTION_68
0x400e617	            0x415f	                                 pop r15	      4275	tc-i386.c	FUNCTION_68
0x400e619	              0xc3	                                     ret	      4275	tc-i386.c	FUNCTION_68
set_cpu_arch	functions,0:ELSE,7:FOR,2:CALL,36:SWITCH,0:WHILE,0:IF,15:DO,0	301
0x40026cc	            0x4157	                                push r15	      2580	tc-i386.c	FUNCTION_49
0x40026ce	            0x4156	                                push r14	      2580	tc-i386.c	FUNCTION_49
0x40026d0	            0x4155	                                push r13	      2580	tc-i386.c	FUNCTION_49
0x40026d2	            0x4154	                                push r12	      2580	tc-i386.c	FUNCTION_49
0x40026d4	              0x55	                                push rbp	      2580	tc-i386.c	FUNCTION_49
0x40026d5	              0x53	                                push rbx	      2580	tc-i386.c	FUNCTION_49
0x40026d6	        0x4883ec18	                           sub rsp, 0x18	      2580	tc-i386.c	FUNCTION_49
0x40026da	    0x64488b042528	                mov rax, qword fs:[0x28]	      2580	tc-i386.c	FUNCTION_49
0x40026e3	      0x4889442408	                mov qword [rsp + 8], rax	      2580	tc-i386.c	FUNCTION_49
0x40026e8	            0x31c0	                            xor eax, eax	      2580	tc-i386.c	FUNCTION_49
0x40026ea	    0x488b05000000	            mov rax, qword [0x040026f1] 	      2581	tc-i386.c	FUNCTION_49	CALL_1
0x40026f1	          0x803820	                    cmp byte [rax], 0x20	      2581	tc-i386.c	FUNCTION_49	CALL_1
0x40026f4	            0x750b	                           jne 0x4002701	      2581	tc-i386.c	FUNCTION_49	CALL_1
0x40026f6	        0x4883c001	                              add rax, 1	      2581	tc-i386.c	FUNCTION_49	CALL_1
0x40026fa	    0x488905000000	            mov qword [0x04002701], rax 	      2581	tc-i386.c	FUNCTION_49	CALL_1
0x4002701	    0x488b05000000	            mov rax, qword [0x04002708] 	      2583	tc-i386.c	FUNCTION_49	IF_1
0x4002708	           0xfb600	                   movzx eax, byte [rax]	      2583	tc-i386.c	FUNCTION_49	IF_1
0x400270b	    0x80b800000000	                       cmp byte [rax], 0	      2583	tc-i386.c	FUNCTION_49	IF_1
0x4002712	     0xf85ee030000	                           jne 0x4002b06	      2583	tc-i386.c	FUNCTION_49	IF_1
0x4002718	          0x4889e7	                            mov rdi, rsp	      2586	tc-i386.c	FUNCTION_49	IF_1	CALL_2
0x400271b	      0xe800000000	                          call 0x4002720	      2586	tc-i386.c	FUNCTION_49	IF_1	CALL_2
0x4002720	            0x89c5	                            mov ebp, eax	      2586	tc-i386.c	FUNCTION_49	IF_1	CALL_2
0x4002722	        0x4c8b3424	                    mov r14, qword [rsp]	      2592	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_4
0x4002726	    0x41bd00000000	                             mov r13d, 0	      2592	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_4
0x400272c	    0x41bc00000000	                             mov r12d, 0	      2590	tc-i386.c	FUNCTION_49	IF_1	FOR_1	CALL_3
0x4002732	        0x498b5d00	                    mov rbx, qword [r13]	      2592	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_4
0x4002736	          0x4889de	                            mov rsi, rbx	      2592	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_4
0x4002739	          0x4c89f7	                            mov rdi, r14	      2592	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_4
0x400273c	      0xe800000000	                          call 0x4002741	      2592	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_4
0x4002741	            0x85c0	                           test eax, eax	      2592	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_4
0x4002743	     0xf8536020000	                           jne 0x400297f	      2592	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_4
0x4002749	    0x48833d000000	               cmp qword [0x04002751], 0	      2550	tc-i386.c	FUNCTION_48	IF_2
0x4002751	            0x7521	                           jne 0x4002774	      2550	tc-i386.c	FUNCTION_48	IF_2
0x4002753	    0x488b05000000	            mov rax, qword [0x0400275a] 	      2554	tc-i386.c	FUNCTION_48	IF_2
0x400275a	    0x488905000000	            mov qword [0x04002761], rax 	      2554	tc-i386.c	FUNCTION_48	IF_2
0x4002761	          0x4885c0	                           test rax, rax	      2555	tc-i386.c	FUNCTION_48	IF_2	IF_3
0x4002764	            0x750e	                           jne 0x4002774	      2555	tc-i386.c	FUNCTION_48	IF_2	IF_3
0x4002766	    0x488b05000000	            mov rax, qword [0x0400276d] 	      2556	tc-i386.c	FUNCTION_48	IF_2	IF_3
0x400276d	    0x488905000000	            mov qword [0x04002774], rax 	      2556	tc-i386.c	FUNCTION_48	IF_2	IF_3
0x4002774	        0x41803e2e	                    cmp byte [r14], 0x2e	      2596	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x4002778	     0xf84cb000000	                            je 0x4002849	      2596	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x400277e	    0x48891d000000	            mov qword [0x04002785], rbx 	      2598	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x4002785	    0x48c705000000	               mov qword [0x04002790], 0	      2599	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x4002790	          0x4489e0	                           mov eax, r12d	      2600	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x4002793	        0x488d0480	                  lea rax, [rax + rax*4]	      2600	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x4002797	    0x488b14c50000	                  mov rdx, qword [rax*8]	      2600	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x400279f	    0x488b04c50000	                  mov rax, qword [rax*8]	      2600	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x40027a7	    0x488905000000	            mov qword [0x040027ae], rax 	      2600	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x40027ae	    0x488915000000	            mov qword [0x040027b5], rdx 	      2600	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x40027b5	    0x833d00000000	               cmp dword [0x040027bc], 2	      2601	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_4
0x40027bc	            0x7515	                           jne 0x40027d3	      2601	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_4
0x40027be	     0xfb605000000	           movzx eax, byte [0x040027c5] 	      2603	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_4
0x40027c5	          0x83c840	                            or eax, 0x40	      2603	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_4
0x40027c8	          0x83e07f	                           and eax, 0x7f	      2604	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_4
0x40027cb	    0x880500000000	               mov byte [0x040027d1], al	      2604	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_4
0x40027d1	            0xeb13	                           jmp 0x40027e6	      2604	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_4
0x40027d3	     0xfb605000000	           movzx eax, byte [0x040027da] 	      2608	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	ELSE_1
0x40027da	          0x83e0bf	                     and eax, 0xffffffbf	      2608	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	ELSE_1
0x40027dd	          0x83c880	                      or eax, 0xffffff80	      2609	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	ELSE_1
0x40027e0	    0x880500000000	               mov byte [0x040027e6], al	      2609	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	ELSE_1
0x40027e6	          0x4489e0	                           mov eax, r12d	      2611	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x40027e9	    0x488d14850000	                        lea rdx, [rax*4]	      2611	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x40027f1	        0x488d0c02	                    lea rcx, [rdx + rax]	      2611	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x40027f5	    0x8b0ccd000000	                  mov ecx, dword [rcx*8]	      2611	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x40027fc	    0x890d00000000	            mov dword [0x04002802], ecx 	      2611	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x4002802	          0x4801d0	                            add rax, rdx	      2612	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x4002805	    0x488b14c50000	                  mov rdx, qword [rax*8]	      2612	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x400280d	    0x488b04c50000	                  mov rax, qword [rax*8]	      2612	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x4002815	    0x488905000000	            mov qword [0x0400281c], rax 	      2612	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x400281c	    0x488915000000	            mov qword [0x04002823], rdx 	      2612	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3
0x4002823	    0x833d00000000	               cmp dword [0x0400282a], 0	      2613	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_5
0x400282a	     0xf85ac030000	                           jne 0x4002bdc	      2613	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_5
0x4002830	    0x890d00000000	            mov dword [0x04002836], ecx 	      2615	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_5
0x4002836	    0x488905000000	            mov qword [0x0400283d], rax 	      2616	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_5
0x400283d	    0x488915000000	            mov qword [0x04002844], rdx 	      2616	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_5
0x4002844	      0xe993030000	                           jmp 0x4002bdc	      2616	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_5
0x4002849	    0x448b15000000	           mov r10d, dword [0x04002850] 	      2616	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_5
0x4002850	    0x448b0d000000	            mov r9d, dword [0x04002857] 	      2616	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_5
0x4002857	    0x448b05000000	            mov r8d, dword [0x0400285e] 	      2616	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_5
0x400285e	    0x8b3500000000	            mov esi, dword [0x04002864] 	      2616	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_5
0x4002864	          0x4589e4	                          mov r12d, r12d	      2616	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_5
0x4002867	        0x4b8d04a4	                  lea rax, [r12 + r12*4]	      2616	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_5
0x400286b	    0x488d14c51000	                 lea rdx, [rax*8 + 0x10]	      2616	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_5
0x4002873	    0x488d82000000	                          lea rax, [rdx]	      2616	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_5
0x400287a	    0x8bba00000000	                    mov edi, dword [rdx]	      2616	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_5
0x4002880	    0x8b8a00000000	                    mov ecx, dword [rdx]	      2616	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_5
0x4002886	    0x8b9200000000	                    mov edx, dword [rdx]	      2616	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_5
0x400288c	          0x8b400c	              mov eax, dword [rax + 0xc]	      2616	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_3	IF_5
0x400288f	          0x4189f4	                           mov r12d, esi	      1652	tc-i386.c	FUNCTION_14	SWITCH_1
0x4002892	          0x4109c4	                            or r12d, eax	      1652	tc-i386.c	FUNCTION_14	SWITCH_1
0x4002895	          0x4589c5	                           mov r13d, r8d	      1655	tc-i386.c	FUNCTION_14	SWITCH_1
0x4002898	          0x4109d5	                            or r13d, edx	      1655	tc-i386.c	FUNCTION_14	SWITCH_1
0x400289b	          0x4589ce	                           mov r14d, r9d	      1658	tc-i386.c	FUNCTION_14	SWITCH_1
0x400289e	          0x4109ce	                            or r14d, ecx	      1658	tc-i386.c	FUNCTION_14	SWITCH_1
0x40028a1	          0x4589d7	                          mov r15d, r10d	      1661	tc-i386.c	FUNCTION_14	SWITCH_1
0x40028a4	          0x4109ff	                            or r15d, edi	      1661	tc-i386.c	FUNCTION_14	SWITCH_1
0x40028a7	          0x4539e8	                           cmp r8d, r13d	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x40028aa	        0x410f95c0	                               setne r8b	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x40028ae	          0x4439e6	                           cmp esi, r12d	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x40028b1	        0x400f95c6	                               setne sil	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x40028b5	          0x4108f0	                             or r8b, sil	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x40028b8	            0x750a	                           jne 0x40028c4	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x40028ba	          0x4539f1	                           cmp r9d, r14d	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x40028bd	            0x7505	                           jne 0x40028c4	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x40028bf	          0x4539fa	                          cmp r10d, r15d	      2624	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	CALL_7
0x40028c2	            0x747e	                            je 0x4002942	      2624	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	CALL_7
0x40028c4	    0x488b05000000	            mov rax, qword [0x040028cb] 	      2626	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7
0x40028cb	          0x4885c0	                           test rax, rax	      2626	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7
0x40028ce	            0x7429	                            je 0x40028f9	      2626	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7
0x40028d0	      0xba00000000	                              mov edx, 0	      2629	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_8
0x40028d5	          0x4889de	                            mov rsi, rbx	      2629	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_8
0x40028d8	          0x4889c3	                            mov rbx, rax	      2629	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_8
0x40028db	          0x4889c7	                            mov rdi, rax	      2629	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_8
0x40028de	      0xb800000000	                              mov eax, 0	      2629	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_8
0x40028e3	      0xe800000000	                          call 0x40028e8	      2629	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_8
0x40028e8	    0x488905000000	            mov qword [0x040028ef], rax 	      2629	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_8
0x40028ef	          0x4889df	                            mov rdi, rbx	      2632	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_9
0x40028f2	      0xe800000000	                          call 0x40028f7	      2632	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_9
0x40028f7	            0xeb0f	                           jmp 0x4002908	      2632	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	IF_7	CALL_9
0x40028f9	          0x4889df	                            mov rdi, rbx	      2635	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	CALL_10
0x40028fc	      0xe800000000	                          call 0x4002901	      2635	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	CALL_10
0x4002901	    0x488905000000	            mov qword [0x04002908], rax 	      2635	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6	CALL_10
0x4002908	    0x44893d000000	           mov dword [0x0400290f], r15d 	      2636	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6
0x400290f	    0x448935000000	           mov dword [0x04002916], r14d 	      2636	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6
0x4002916	    0x44892d000000	           mov dword [0x0400291d], r13d 	      2636	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6
0x400291d	    0x448925000000	           mov dword [0x04002924], r12d 	      2636	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6
0x4002924	    0x44893d000000	           mov dword [0x0400292b], r15d 	      2637	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6
0x400292b	    0x448935000000	           mov dword [0x04002932], r14d 	      2637	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6
0x4002932	    0x44892d000000	           mov dword [0x04002939], r13d 	      2637	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6
0x4002939	    0x448925000000	           mov dword [0x04002940], r12d 	      2637	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6
0x4002940	            0xeb2a	                           jmp 0x400296c	      2637	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	IF_6
0x4002942	     0xb0500000000	              or eax, dword [0x04002948]	      1652	tc-i386.c	FUNCTION_14	SWITCH_1
0x4002948	     0xb1500000000	              or edx, dword [0x0400294e]	      1655	tc-i386.c	FUNCTION_14	SWITCH_1
0x400294e	     0xb0d00000000	              or ecx, dword [0x04002954]	      1658	tc-i386.c	FUNCTION_14	SWITCH_1
0x4002954	     0x93d00000000	              or dword [0x0400295a], edi	      2641	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	ELSE_3	CALL_11
0x400295a	    0x890d00000000	            mov dword [0x04002960], ecx 	      2641	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	ELSE_3	CALL_11
0x4002960	    0x891500000000	            mov dword [0x04002966], edx 	      2641	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	ELSE_3	CALL_11
0x4002966	    0x890500000000	            mov dword [0x0400296c], eax 	      2641	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	ELSE_3	CALL_11
0x400296c	        0x400fbefd	                          movsx edi, bpl	      2643	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_12
0x4002970	      0xe800000000	                          call 0x4002975	      2643	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_12
0x4002975	      0xe800000000	                          call 0x400297a	      2644	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2	CALL_13
0x400297a	      0xe98e020000	                           jmp 0x4002c0d	      2645	tc-i386.c	FUNCTION_49	IF_1	FOR_1	IF_2
0x400297f	        0x4183c401	                             add r12d, 1	      2590	tc-i386.c	FUNCTION_49	IF_1	FOR_1	CALL_3
0x4002983	        0x4983c528	                           add r13, 0x28	      2590	tc-i386.c	FUNCTION_49	IF_1	FOR_1	CALL_3
0x4002987	    0x4181fc840000	                          cmp r12d, 0x84	      2590	tc-i386.c	FUNCTION_49	IF_1	FOR_1	CALL_3
0x400298e	     0xf859efdffff	                           jne 0x4002732	      2590	tc-i386.c	FUNCTION_49	IF_1	FOR_1	CALL_3
0x4002994	      0xe962020000	                           jmp 0x4002bfb	      2590	tc-i386.c	FUNCTION_49	IF_1	FOR_1	CALL_3
0x4002999	    0x41bc00000000	                             mov r12d, 0	      2590	tc-i386.c	FUNCTION_49	IF_1	FOR_1	CALL_3
0x400299f	        0x4c8d7301	                      lea r14, [rbx + 1]	      2653	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_16
0x40029a3	          0x4c89e0	                            mov rax, r12	      2653	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_16
0x40029a6	        0x48c1e005	                              shl rax, 5	      2653	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_16
0x40029aa	    0x488bb0000000	                    mov rsi, qword [rax]	      2653	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_16
0x40029b1	          0x4c89f7	                            mov rdi, r14	      2653	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_16
0x40029b4	      0xe800000000	                          call 0x40029b9	      2653	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_16
0x40029b9	            0x85c0	                           test eax, eax	      2653	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_16
0x40029bb	     0xf85fc000000	                           jne 0x4002abd	      2653	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_16
0x40029c1	    0x8b3d00000000	            mov edi, dword [0x040029c7] 	      2653	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_16
0x40029c7	    0x8b3500000000	            mov esi, dword [0x040029cd] 	      2653	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_16
0x40029cd	    0x8b0d00000000	            mov ecx, dword [0x040029d3] 	      2653	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_16
0x40029d3	    0x8b1500000000	            mov edx, dword [0x040029d9] 	      2653	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_16
0x40029d9	          0x4489e0	                           mov eax, r12d	      2653	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_16
0x40029dc	        0x48c1e005	                              shl rax, 5	      2653	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_16
0x40029e0	    0x448ba0000000	                   mov r12d, dword [rax]	      1675	tc-i386.c	FUNCTION_15	SWITCH_1
0x40029e7	          0x41f7d4	                                not r12d	      1675	tc-i386.c	FUNCTION_15	SWITCH_1
0x40029ea	          0x4121d4	                           and r12d, edx	      1675	tc-i386.c	FUNCTION_15	SWITCH_1
0x40029ed	    0x448ba8000000	                   mov r13d, dword [rax]	      1678	tc-i386.c	FUNCTION_15	SWITCH_1
0x40029f4	          0x41f7d5	                                not r13d	      1678	tc-i386.c	FUNCTION_15	SWITCH_1
0x40029f7	          0x4121cd	                           and r13d, ecx	      1678	tc-i386.c	FUNCTION_15	SWITCH_1
0x40029fa	    0x448bb0000000	                   mov r14d, dword [rax]	      1681	tc-i386.c	FUNCTION_15	SWITCH_1
0x4002a01	          0x41f7d6	                                not r14d	      1681	tc-i386.c	FUNCTION_15	SWITCH_1
0x4002a04	          0x4121f6	                           and r14d, esi	      1681	tc-i386.c	FUNCTION_15	SWITCH_1
0x4002a07	    0x448bb8000000	                   mov r15d, dword [rax]	      1684	tc-i386.c	FUNCTION_15	SWITCH_1
0x4002a0e	          0x41f7d7	                                not r15d	      1684	tc-i386.c	FUNCTION_15	SWITCH_1
0x4002a11	          0x4121ff	                           and r15d, edi	      1684	tc-i386.c	FUNCTION_15	SWITCH_1
0x4002a14	          0x4439e9	                           cmp ecx, r13d	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x4002a17	           0xf95c1	                                setne cl	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x4002a1a	          0x4439e2	                           cmp edx, r12d	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x4002a1d	           0xf95c0	                                setne al	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x4002a20	             0x8c1	                               or cl, al	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x4002a22	            0x750a	                           jne 0x4002a2e	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x4002a24	          0x4439f6	                           cmp esi, r14d	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x4002a27	            0x7505	                           jne 0x4002a2e	      1605	tc-i386.c	FUNCTION_11	SWITCH_1	IF_3
0x4002a29	          0x4439ff	                           cmp edi, r15d	      2657	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	CALL_18
0x4002a2c	            0x747c	                            je 0x4002aaa	      2657	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	CALL_18
0x4002a2e	    0x488b05000000	            mov rax, qword [0x04002a35] 	      2659	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11
0x4002a35	          0x4885c0	                           test rax, rax	      2659	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11
0x4002a38	            0x7429	                            je 0x4002a63	      2659	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11
0x4002a3a	      0xba00000000	                              mov edx, 0	      2662	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11	CALL_19
0x4002a3f	          0x4889de	                            mov rsi, rbx	      2662	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11	CALL_19
0x4002a42	          0x4889c3	                            mov rbx, rax	      2662	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11	CALL_19
0x4002a45	          0x4889c7	                            mov rdi, rax	      2662	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11	CALL_19
0x4002a48	      0xb800000000	                              mov eax, 0	      2662	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11	CALL_19
0x4002a4d	      0xe800000000	                          call 0x4002a52	      2662	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11	CALL_19
0x4002a52	    0x488905000000	            mov qword [0x04002a59], rax 	      2662	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11	CALL_19
0x4002a59	          0x4889df	                            mov rdi, rbx	      2664	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11	CALL_20
0x4002a5c	      0xe800000000	                          call 0x4002a61	      2664	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11	CALL_20
0x4002a61	            0xeb0f	                           jmp 0x4002a72	      2664	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	IF_11	CALL_20
0x4002a63	          0x4889df	                            mov rdi, rbx	      2667	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	CALL_21
0x4002a66	      0xe800000000	                          call 0x4002a6b	      2667	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	CALL_21
0x4002a6b	    0x488905000000	            mov qword [0x04002a72], rax 	      2667	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10	CALL_21
0x4002a72	    0x44893d000000	           mov dword [0x04002a79], r15d 	      2668	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10
0x4002a79	    0x448935000000	           mov dword [0x04002a80], r14d 	      2668	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10
0x4002a80	    0x44892d000000	           mov dword [0x04002a87], r13d 	      2668	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10
0x4002a87	    0x448925000000	           mov dword [0x04002a8e], r12d 	      2668	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10
0x4002a8e	    0x44893d000000	           mov dword [0x04002a95], r15d 	      2669	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10
0x4002a95	    0x448935000000	           mov dword [0x04002a9c], r14d 	      2669	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10
0x4002a9c	    0x44892d000000	           mov dword [0x04002aa3], r13d 	      2669	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10
0x4002aa3	    0x448925000000	           mov dword [0x04002aaa], r12d 	      2669	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	IF_10
0x4002aaa	        0x400fbefd	                          movsx edi, bpl	      2671	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_22
0x4002aae	      0xe800000000	                          call 0x4002ab3	      2671	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_22
0x4002ab3	      0xe800000000	                          call 0x4002ab8	      2672	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9	CALL_23
0x4002ab8	      0xe950010000	                           jmp 0x4002c0d	      2673	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9
0x4002abd	        0x4983c401	                              add r12, 1	      2673	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	IF_9
0x4002ac1	        0x4983fc21	                           cmp r12, 0x21	      2652	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	CALL_15
0x4002ac5	     0xf85d8feffff	                           jne 0x40029a3	      2652	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	CALL_15
0x4002acb	            0xeb09	                           jmp 0x4002ad6	      2652	tc-i386.c	FUNCTION_49	IF_1	IF_8	FOR_2	CALL_15
0x4002acd	    0x4181fc830000	                          cmp r12d, 0x83	      2679	tc-i386.c	FUNCTION_49	IF_1	IF_12	CALL_25
0x4002ad4	            0x7624	                           jbe 0x4002afa	      2679	tc-i386.c	FUNCTION_49	IF_1	IF_12	CALL_25
0x4002ad6	      0xba05000000	                              mov edx, 5	      2680	tc-i386.c	FUNCTION_49	IF_1	CALL_27
0x4002adb	      0xbe00000000	                              mov esi, 0	      2680	tc-i386.c	FUNCTION_49	IF_1	CALL_27
0x4002ae0	      0xbf00000000	                              mov edi, 0	      2680	tc-i386.c	FUNCTION_49	IF_1	CALL_27
0x4002ae5	      0xe800000000	                          call 0x4002aea	      2680	tc-i386.c	FUNCTION_49	IF_1	CALL_27
0x4002aea	          0x4889de	                            mov rsi, rbx	      2680	tc-i386.c	FUNCTION_49	IF_1	CALL_27
0x4002aed	          0x4889c7	                            mov rdi, rax	      2680	tc-i386.c	FUNCTION_49	IF_1	CALL_27
0x4002af0	      0xb800000000	                              mov eax, 0	      2680	tc-i386.c	FUNCTION_49	IF_1	CALL_27
0x4002af5	      0xe800000000	                          call 0x4002afa	      2680	tc-i386.c	FUNCTION_49	IF_1	CALL_27
0x4002afa	    0x488b05000000	            mov rax, qword [0x04002b01] 	      2682	tc-i386.c	FUNCTION_49	IF_1
0x4002b01	          0x408828	                     mov byte [rax], bpl	      2682	tc-i386.c	FUNCTION_49	IF_1
0x4002b04	            0xeb21	                           jmp 0x4002b27	      2682	tc-i386.c	FUNCTION_49	IF_1
0x4002b06	      0xba05000000	                              mov edx, 5	      2685	tc-i386.c	FUNCTION_49	CALL_29
0x4002b0b	      0xbe00000000	                              mov esi, 0	      2685	tc-i386.c	FUNCTION_49	CALL_29
0x4002b10	      0xbf00000000	                              mov edi, 0	      2685	tc-i386.c	FUNCTION_49	CALL_29
0x4002b15	      0xe800000000	                          call 0x4002b1a	      2685	tc-i386.c	FUNCTION_49	CALL_29
0x4002b1a	          0x4889c7	                            mov rdi, rax	      2685	tc-i386.c	FUNCTION_49	CALL_29
0x4002b1d	      0xb800000000	                              mov eax, 0	      2685	tc-i386.c	FUNCTION_49	CALL_29
0x4002b22	      0xe800000000	                          call 0x4002b27	      2685	tc-i386.c	FUNCTION_49	CALL_29
0x4002b27	    0xc70500000000	               mov dword [0x04002b31], 0	      2687	tc-i386.c	FUNCTION_49
0x4002b31	    0x488b05000000	            mov rax, qword [0x04002b38] 	      2688	tc-i386.c	FUNCTION_49	IF_13
0x4002b38	          0x80382c	                    cmp byte [rax], 0x2c	      2688	tc-i386.c	FUNCTION_49	IF_13
0x4002b3b	     0xf8594000000	                           jne 0x4002bd5	      2688	tc-i386.c	FUNCTION_49	IF_13
0x4002b41	         0xfb65001	               movzx edx, byte [rax + 1]	      2689	tc-i386.c	FUNCTION_49	IF_13
0x4002b45	    0x80ba00000000	                       cmp byte [rdx], 0	      2689	tc-i386.c	FUNCTION_49	IF_13
0x4002b4c	     0xf8583000000	                           jne 0x4002bd5	      2689	tc-i386.c	FUNCTION_49	IF_13
0x4002b52	        0x4883c001	                              add rax, 1	      2694	tc-i386.c	FUNCTION_49	IF_13
0x4002b56	    0x488905000000	            mov qword [0x04002b5d], rax 	      2694	tc-i386.c	FUNCTION_49	IF_13
0x4002b5d	          0x4889e7	                            mov rdi, rsp	      2695	tc-i386.c	FUNCTION_49	IF_13	CALL_30
0x4002b60	      0xe800000000	                          call 0x4002b65	      2695	tc-i386.c	FUNCTION_49	IF_13	CALL_30
0x4002b65	            0x89c3	                            mov ebx, eax	      2695	tc-i386.c	FUNCTION_49	IF_13	CALL_30
0x4002b67	        0x488b2c24	                    mov rbp, qword [rsp]	      2697	tc-i386.c	FUNCTION_49	IF_13	IF_14	CALL_31
0x4002b6b	      0xbf00000000	                              mov edi, 0	      2697	tc-i386.c	FUNCTION_49	IF_13	IF_14	CALL_31
0x4002b70	      0xb908000000	                              mov ecx, 8	      2697	tc-i386.c	FUNCTION_49	IF_13	IF_14	CALL_31
0x4002b75	          0x4889ee	                            mov rsi, rbp	      2697	tc-i386.c	FUNCTION_49	IF_13	IF_14	CALL_31
0x4002b78	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2697	tc-i386.c	FUNCTION_49	IF_13	IF_14	CALL_31
0x4002b7a	           0xf97c2	                                 seta dl	      2697	tc-i386.c	FUNCTION_49	IF_13	IF_14	CALL_31
0x4002b7d	           0xf92c0	                                 setb al	      2697	tc-i386.c	FUNCTION_49	IF_13	IF_14	CALL_31
0x4002b80	            0x38c2	                              cmp dl, al	      2697	tc-i386.c	FUNCTION_49	IF_13	IF_14	CALL_31
0x4002b82	            0x750c	                           jne 0x4002b90	      2697	tc-i386.c	FUNCTION_49	IF_13	IF_14	CALL_31
0x4002b84	    0xc70500000000	               mov dword [0x04002b8e], 1	      2698	tc-i386.c	FUNCTION_49	IF_13	IF_14
0x4002b8e	            0xeb3d	                           jmp 0x4002bcd	      2698	tc-i386.c	FUNCTION_49	IF_13	IF_14
0x4002b90	      0xbf00000000	                              mov edi, 0	      2699	tc-i386.c	FUNCTION_49	IF_13	ELSE_6	IF_15	CALL_32
0x4002b95	      0xb906000000	                              mov ecx, 6	      2699	tc-i386.c	FUNCTION_49	IF_13	ELSE_6	IF_15	CALL_32
0x4002b9a	          0x4889ee	                            mov rsi, rbp	      2699	tc-i386.c	FUNCTION_49	IF_13	ELSE_6	IF_15	CALL_32
0x4002b9d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2699	tc-i386.c	FUNCTION_49	IF_13	ELSE_6	IF_15	CALL_32
0x4002b9f	           0xf97c2	                                 seta dl	      2699	tc-i386.c	FUNCTION_49	IF_13	ELSE_6	IF_15	CALL_32
0x4002ba2	           0xf92c0	                                 setb al	      2699	tc-i386.c	FUNCTION_49	IF_13	ELSE_6	IF_15	CALL_32
0x4002ba5	            0x38c2	                              cmp dl, al	      2699	tc-i386.c	FUNCTION_49	IF_13	ELSE_6	IF_15	CALL_32
0x4002ba7	            0x7424	                            je 0x4002bcd	      2699	tc-i386.c	FUNCTION_49	IF_13	ELSE_6	IF_15	CALL_32
0x4002ba9	      0xba05000000	                              mov edx, 5	      2702	tc-i386.c	FUNCTION_49	IF_13	CALL_34
0x4002bae	      0xbe00000000	                              mov esi, 0	      2702	tc-i386.c	FUNCTION_49	IF_13	CALL_34
0x4002bb3	      0xbf00000000	                              mov edi, 0	      2702	tc-i386.c	FUNCTION_49	IF_13	CALL_34
0x4002bb8	      0xe800000000	                          call 0x4002bbd	      2702	tc-i386.c	FUNCTION_49	IF_13	CALL_34
0x4002bbd	          0x4889ee	                            mov rsi, rbp	      2702	tc-i386.c	FUNCTION_49	IF_13	CALL_34
0x4002bc0	          0x4889c7	                            mov rdi, rax	      2702	tc-i386.c	FUNCTION_49	IF_13	CALL_34
0x4002bc3	      0xb800000000	                              mov eax, 0	      2702	tc-i386.c	FUNCTION_49	IF_13	CALL_34
0x4002bc8	      0xe800000000	                          call 0x4002bcd	      2702	tc-i386.c	FUNCTION_49	IF_13	CALL_34
0x4002bcd	           0xfbefb	                           movsx edi, bl	      2704	tc-i386.c	FUNCTION_49	IF_13	CALL_35
0x4002bd0	      0xe800000000	                          call 0x4002bd5	      2704	tc-i386.c	FUNCTION_49	IF_13	CALL_35
0x4002bd5	      0xe800000000	                          call 0x4002bda	      2707	tc-i386.c	FUNCTION_49	CALL_36
0x4002bda	            0xeb31	                           jmp 0x4002c0d	      2707	tc-i386.c	FUNCTION_49	CALL_36
0x4002bdc	        0x488b1c24	                    mov rbx, qword [rsp]	      2649	tc-i386.c	FUNCTION_49	IF_1	IF_8	CALL_14
0x4002be0	          0x803b2e	                    cmp byte [rbx], 0x2e	      2649	tc-i386.c	FUNCTION_49	IF_1	IF_8	CALL_14
0x4002be3	     0xf85e4feffff	                           jne 0x4002acd	      2649	tc-i386.c	FUNCTION_49	IF_1	IF_8	CALL_14
0x4002be9	    0x4181fc830000	                          cmp r12d, 0x83	      2649	tc-i386.c	FUNCTION_49	IF_1	IF_8	CALL_14
0x4002bf0	     0xf87a3fdffff	                            ja 0x4002999	      2649	tc-i386.c	FUNCTION_49	IF_1	IF_8	CALL_14
0x4002bf6	      0xe9d2feffff	                           jmp 0x4002acd	      2649	tc-i386.c	FUNCTION_49	IF_1	IF_8	CALL_14
0x4002bfb	        0x488b1c24	                    mov rbx, qword [rsp]	      2649	tc-i386.c	FUNCTION_49	IF_1	IF_8	CALL_14
0x4002bff	          0x803b2e	                    cmp byte [rbx], 0x2e	      2649	tc-i386.c	FUNCTION_49	IF_1	IF_8	CALL_14
0x4002c02	     0xf85cefeffff	                           jne 0x4002ad6	      2649	tc-i386.c	FUNCTION_49	IF_1	IF_8	CALL_14
0x4002c08	      0xe98cfdffff	                           jmp 0x4002999	      2649	tc-i386.c	FUNCTION_49	IF_1	IF_8	CALL_14
0x4002c0d	      0x488b442408	                mov rax, qword [rsp + 8]	      2708	tc-i386.c	FUNCTION_49
0x4002c12	    0x644833042528	                xor rax, qword fs:[0x28]	      2708	tc-i386.c	FUNCTION_49
0x4002c1b	            0x7405	                            je 0x4002c22	      2708	tc-i386.c	FUNCTION_49
0x4002c1d	      0xe800000000	                          call 0x4002c22	      2708	tc-i386.c	FUNCTION_49
0x4002c22	        0x4883c418	                           add rsp, 0x18	      2708	tc-i386.c	FUNCTION_49
0x4002c26	              0x5b	                                 pop rbx	      2708	tc-i386.c	FUNCTION_49
0x4002c27	              0x5d	                                 pop rbp	      2708	tc-i386.c	FUNCTION_49
0x4002c28	            0x415c	                                 pop r12	      2708	tc-i386.c	FUNCTION_49
0x4002c2a	            0x415d	                                 pop r13	      2708	tc-i386.c	FUNCTION_49
0x4002c2c	            0x415e	                                 pop r14	      2708	tc-i386.c	FUNCTION_49
0x4002c2e	            0x415f	                                 pop r15	      2708	tc-i386.c	FUNCTION_49
0x4002c30	              0xc3	                                     ret	      2708	tc-i386.c	FUNCTION_49
update_code_flag	functions,0:ELSE,3:FOR,0:CALL,3:SWITCH,0:WHILE,0:IF,5:DO,0	59
0x4000cbc	              0x55	                                push rbp	      2398	tc-i386.c	FUNCTION_41
0x4000cbd	              0x53	                                push rbx	      2398	tc-i386.c	FUNCTION_41
0x4000cbe	        0x4883ec08	                              sub rsp, 8	      2398	tc-i386.c	FUNCTION_41
0x4000cc2	    0x893d00000000	            mov dword [0x04000cc8], edi 	      2401	tc-i386.c	FUNCTION_41
0x4000cc8	          0x83ff02	                              cmp edi, 2	      2402	tc-i386.c	FUNCTION_41	IF_1
0x4000ccb	            0x7515	                           jne 0x4000ce2	      2402	tc-i386.c	FUNCTION_41	IF_1
0x4000ccd	     0xfb605000000	           movzx eax, byte [0x04000cd4] 	      2404	tc-i386.c	FUNCTION_41	IF_1
0x4000cd4	          0x83c840	                            or eax, 0x40	      2404	tc-i386.c	FUNCTION_41	IF_1
0x4000cd7	          0x83e07f	                           and eax, 0x7f	      2405	tc-i386.c	FUNCTION_41	IF_1
0x4000cda	    0x880500000000	               mov byte [0x04000ce0], al	      2405	tc-i386.c	FUNCTION_41	IF_1
0x4000ce0	            0xeb13	                           jmp 0x4000cf5	      2405	tc-i386.c	FUNCTION_41	IF_1
0x4000ce2	     0xfb605000000	           movzx eax, byte [0x04000ce9] 	      2409	tc-i386.c	FUNCTION_41	ELSE_1
0x4000ce9	          0x83e0bf	                     and eax, 0xffffffbf	      2409	tc-i386.c	FUNCTION_41	ELSE_1
0x4000cec	          0x83c880	                      or eax, 0xffffff80	      2410	tc-i386.c	FUNCTION_41	ELSE_1
0x4000cef	    0x880500000000	               mov byte [0x04000cf5], al	      2410	tc-i386.c	FUNCTION_41	ELSE_1
0x4000cf5	          0x83ff02	                              cmp edi, 2	      2412	tc-i386.c	FUNCTION_41	IF_2
0x4000cf8	            0x7552	                           jne 0x4000d4c	      2412	tc-i386.c	FUNCTION_41	IF_2
0x4000cfa	    0xf60500000000	               test byte [0x04000d01], 2	      2412	tc-i386.c	FUNCTION_41	IF_2
0x4000d01	     0xf8595000000	                           jne 0x4000d9c	      2412	tc-i386.c	FUNCTION_41	IF_2
0x4000d07	            0x85f6	                           test esi, esi	      2417	tc-i386.c	FUNCTION_41	IF_2	ELSE_2
0x4000d09	      0xbd00000000	                              mov ebp, 0	      2417	tc-i386.c	FUNCTION_41	IF_2	ELSE_2
0x4000d0e	      0xb800000000	                              mov eax, 0	      2417	tc-i386.c	FUNCTION_41	IF_2	ELSE_2
0x4000d13	        0x480f45e8	                         cmovne rbp, rax	      2417	tc-i386.c	FUNCTION_41	IF_2	ELSE_2
0x4000d17	    0x488b1d000000	            mov rbx, qword [0x04000d1e] 	      2419	tc-i386.c	FUNCTION_41	IF_2
0x4000d1e	          0x4885db	                           test rbx, rbx	      2418	tc-i386.c	FUNCTION_41	IF_2	CALL_2
0x4000d21	    0x480f441d0000	           cmove rbx, qword [0x04000d29]	      2418	tc-i386.c	FUNCTION_41	IF_2	CALL_2
0x4000d29	      0xba05000000	                              mov edx, 5	      2418	tc-i386.c	FUNCTION_41	IF_2	CALL_2
0x4000d2e	      0xbe00000000	                              mov esi, 0	      2418	tc-i386.c	FUNCTION_41	IF_2	CALL_2
0x4000d33	      0xbf00000000	                              mov edi, 0	      2418	tc-i386.c	FUNCTION_41	IF_2	CALL_2
0x4000d38	      0xe800000000	                          call 0x4000d3d	      2418	tc-i386.c	FUNCTION_41	IF_2	CALL_2
0x4000d3d	          0x4889de	                            mov rsi, rbx	      2418	tc-i386.c	FUNCTION_41	IF_2	CALL_2
0x4000d40	          0x4889c7	                            mov rdi, rax	      2418	tc-i386.c	FUNCTION_41	IF_2	CALL_2
0x4000d43	      0xb800000000	                              mov eax, 0	      2418	tc-i386.c	FUNCTION_41	IF_2	CALL_2
0x4000d48	            0xffd5	                                call rbp	      2418	tc-i386.c	FUNCTION_41	IF_2	CALL_2
0x4000d4a	            0xeb50	                           jmp 0x4000d9c	      2418	tc-i386.c	FUNCTION_41	IF_2	CALL_2
0x4000d4c	            0x85ff	                           test edi, edi	      2421	tc-i386.c	FUNCTION_41	IF_4
0x4000d4e	            0x754c	                           jne 0x4000d9c	      2421	tc-i386.c	FUNCTION_41	IF_4
0x4000d50	    0xf60500000000	               test byte [0x04000d57], 4	      2421	tc-i386.c	FUNCTION_41	IF_4
0x4000d57	            0x7543	                           jne 0x4000d9c	      2421	tc-i386.c	FUNCTION_41	IF_4
0x4000d59	            0x85f6	                           test esi, esi	      2426	tc-i386.c	FUNCTION_41	IF_4	ELSE_3
0x4000d5b	      0xbd00000000	                              mov ebp, 0	      2426	tc-i386.c	FUNCTION_41	IF_4	ELSE_3
0x4000d60	      0xb800000000	                              mov eax, 0	      2426	tc-i386.c	FUNCTION_41	IF_4	ELSE_3
0x4000d65	        0x480f45e8	                         cmovne rbp, rax	      2426	tc-i386.c	FUNCTION_41	IF_4	ELSE_3
0x4000d69	    0x488b1d000000	            mov rbx, qword [0x04000d70] 	      2428	tc-i386.c	FUNCTION_41	IF_4
0x4000d70	          0x4885db	                           test rbx, rbx	      2427	tc-i386.c	FUNCTION_41	IF_4	CALL_3
0x4000d73	    0x480f441d0000	           cmove rbx, qword [0x04000d7b]	      2427	tc-i386.c	FUNCTION_41	IF_4	CALL_3
0x4000d7b	      0xba05000000	                              mov edx, 5	      2427	tc-i386.c	FUNCTION_41	IF_4	CALL_3
0x4000d80	      0xbe00000000	                              mov esi, 0	      2427	tc-i386.c	FUNCTION_41	IF_4	CALL_3
0x4000d85	      0xbf00000000	                              mov edi, 0	      2427	tc-i386.c	FUNCTION_41	IF_4	CALL_3
0x4000d8a	      0xe800000000	                          call 0x4000d8f	      2427	tc-i386.c	FUNCTION_41	IF_4	CALL_3
0x4000d8f	          0x4889de	                            mov rsi, rbx	      2427	tc-i386.c	FUNCTION_41	IF_4	CALL_3
0x4000d92	          0x4889c7	                            mov rdi, rax	      2427	tc-i386.c	FUNCTION_41	IF_4	CALL_3
0x4000d95	      0xb800000000	                              mov eax, 0	      2427	tc-i386.c	FUNCTION_41	IF_4	CALL_3
0x4000d9a	            0xffd5	                                call rbp	      2427	tc-i386.c	FUNCTION_41	IF_4	CALL_3
0x4000d9c	    0xc60500000000	                mov byte [0x04000da3], 0	      2430	tc-i386.c	FUNCTION_41
0x4000da3	        0x4883c408	                              add rsp, 8	      2431	tc-i386.c	FUNCTION_41
0x4000da7	              0x5b	                                 pop rbx	      2431	tc-i386.c	FUNCTION_41
0x4000da8	              0x5d	                                 pop rbp	      2431	tc-i386.c	FUNCTION_41
0x4000da9	              0xc3	                                     ret	      2431	tc-i386.c	FUNCTION_41
md_undefined_symbol	functions,0:ELSE,0:FOR,0:CALL,5:SWITCH,0:WHILE,0:IF,3:DO,0	45
0x40106c3	      0xb800000000	                              mov eax, 0	     11194	tc-i386.c	FUNCTION_130	IF_1
0x40106c8	          0x803f5f	                    cmp byte [rdi], 0x5f	     11180	tc-i386.c	
0x40106cb	     0xf859a000000	                           jne 0x401076b	     11180	tc-i386.c	
0x40106d1	          0x4889fa	                            mov rdx, rdi	     11180	tc-i386.c	
0x40106d4	        0x807f0147	                cmp byte [rdi + 1], 0x47	     11181	tc-i386.c	
0x40106d8	     0xf858d000000	                           jne 0x401076b	     11181	tc-i386.c	
0x40106de	        0x807f024c	                cmp byte [rdi + 2], 0x4c	     11182	tc-i386.c	
0x40106e2	     0xf8583000000	                           jne 0x401076b	     11182	tc-i386.c	
0x40106e8	      0xbf00000000	                              mov edi, 0	     11183	tc-i386.c	
0x40106ed	      0xb916000000	                           mov ecx, 0x16	     11183	tc-i386.c	
0x40106f2	          0x4889d6	                            mov rsi, rdx	     11183	tc-i386.c	
0x40106f5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11183	tc-i386.c	
0x40106f7	           0xf97c1	                                 seta cl	     11183	tc-i386.c	
0x40106fa	           0xf92c0	                                 setb al	     11183	tc-i386.c	
0x40106fd	            0x38c1	                              cmp cl, al	     11183	tc-i386.c	
0x40106ff	            0x7563	                           jne 0x4010764	     11183	tc-i386.c	
0x4010701	    0x48833d000000	               cmp qword [0x04010709], 0	     11185	tc-i386.c	FUNCTION_130
0x4010709	            0x7562	                           jne 0x401076d	     11185	tc-i386.c	FUNCTION_130
0x401070b	              0x53	                                push rbx	     11179	tc-i386.c	FUNCTION_129
0x401070c	          0x4889d3	                            mov rbx, rdx	     11179	tc-i386.c	FUNCTION_129
0x401070f	          0x4889d7	                            mov rdi, rdx	     11187	tc-i386.c	FUNCTION_130	IF_1
0x4010712	      0xe800000000	                          call 0x4010717	     11187	tc-i386.c	FUNCTION_130	IF_1
0x4010717	          0x4885c0	                           test rax, rax	     11187	tc-i386.c	FUNCTION_130	IF_1
0x401071a	            0x7421	                            je 0x401073d	     11187	tc-i386.c	FUNCTION_130	IF_1
0x401071c	      0xba05000000	                              mov edx, 5	     11188	tc-i386.c	FUNCTION_130	IF_1
0x4010721	      0xbe00000000	                              mov esi, 0	     11188	tc-i386.c	FUNCTION_130	IF_1
0x4010726	      0xbf00000000	                              mov edi, 0	     11188	tc-i386.c	FUNCTION_130	IF_1
0x401072b	      0xe800000000	                          call 0x4010730	     11188	tc-i386.c	FUNCTION_130	IF_1
0x4010730	          0x4889c7	                            mov rdi, rax	     11188	tc-i386.c	FUNCTION_130	IF_1
0x4010733	      0xb800000000	                              mov eax, 0	     11188	tc-i386.c	FUNCTION_130	IF_1
0x4010738	      0xe800000000	                          call 0x401073d	     11188	tc-i386.c	FUNCTION_130	IF_1
0x401073d	      0xb900000000	                              mov ecx, 0	     11189	tc-i386.c	FUNCTION_130	IF_1
0x4010742	      0xba00000000	                              mov edx, 0	     11189	tc-i386.c	FUNCTION_130	IF_1
0x4010747	      0xbe00000000	                              mov esi, 0	     11189	tc-i386.c	FUNCTION_130	IF_1
0x401074c	          0x4889df	                            mov rdi, rbx	     11189	tc-i386.c	FUNCTION_130	IF_1
0x401074f	      0xe800000000	                          call 0x4010754	     11189	tc-i386.c	FUNCTION_130	IF_1
0x4010754	    0x488905000000	            mov qword [0x0401075b], rax 	     11189	tc-i386.c	FUNCTION_130	IF_1
0x401075b	    0x488b05000000	            mov rax, qword [0x04010762] 	     11192	tc-i386.c	FUNCTION_130	IF_1
0x4010762	            0xeb06	                           jmp 0x401076a	     11192	tc-i386.c	FUNCTION_130	IF_1
0x4010764	      0xb800000000	                              mov eax, 0	     11194	tc-i386.c	FUNCTION_130	IF_1
0x4010769	              0xc3	                                     ret	     11194	tc-i386.c	FUNCTION_130	IF_1
0x401076a	              0x5b	                                 pop rbx	     11195	tc-i386.c	FUNCTION_130	IF_1
0x401076b	            0xf3c3	                                     ret	     11195	tc-i386.c	FUNCTION_130	IF_1
0x401076d	    0x488b05000000	            mov rax, qword [0x04010774] 	     11192	tc-i386.c	FUNCTION_130	IF_1
0x4010774	              0xc3	                                     ret	     11195	tc-i386.c	FUNCTION_130	IF_1
operand_type_register_match	functions,0:ELSE,0:FOR,0:CALL,2:SWITCH,0:WHILE,0:IF,4:DO,0	101
0x400034c	        0x4883ec18	                           sub rsp, 0x18	      2082	tc-i386.c	FUNCTION_27
0x4000350	    0x64488b042528	                mov rax, qword fs:[0x28]	      2082	tc-i386.c	FUNCTION_27
0x4000359	      0x4889442408	                mov qword [rsp + 8], rax	      2082	tc-i386.c	FUNCTION_27
0x400035e	            0x31c0	                            xor eax, eax	      2082	tc-i386.c	FUNCTION_27
0x4000360	        0x40f6c705	                             test dil, 5	      2083	tc-i386.c	FUNCTION_27	IF_1
0x4000364	            0x7531	                           jne 0x4000397	      2083	tc-i386.c	FUNCTION_27	IF_1
0x4000366	          0x4989f8	                             mov r8, rdi	      1895	tc-i386.c	FUNCTION_21	SWITCH_1
0x4000369	        0x49c1e810	                            shr r8, 0x10	      1895	tc-i386.c	FUNCTION_21	SWITCH_1
0x400036d	      0xb801000000	                              mov eax, 1	      2088	tc-i386.c	FUNCTION_27	IF_1
0x4000372	        0x41f6c05f	                          test r8b, 0x5f	      2085	tc-i386.c	FUNCTION_27	IF_1	CALL_1
0x4000376	     0xf8424010000	                            je 0x40004a0	      2085	tc-i386.c	FUNCTION_27	IF_1	CALL_1
0x400037c	          0x4989f8	                             mov r8, rdi	      2086	tc-i386.c	FUNCTION_27	IF_1
0x400037f	        0x49c1e820	                            shr r8, 0x20	      2086	tc-i386.c	FUNCTION_27	IF_1
0x4000383	        0x41f6c040	                          test r8b, 0x40	      2086	tc-i386.c	FUNCTION_27	IF_1
0x4000387	     0xf8513010000	                           jne 0x40004a0	      2086	tc-i386.c	FUNCTION_27	IF_1
0x400038d	        0x40f6c604	                             test sil, 4	      2087	tc-i386.c	FUNCTION_27	IF_1
0x4000391	     0xf8409010000	                            je 0x40004a0	      2087	tc-i386.c	FUNCTION_27	IF_1
0x4000397	          0xf6c205	                              test dl, 5	      2090	tc-i386.c	FUNCTION_27	IF_2
0x400039a	            0x7530	                           jne 0x40003cc	      2090	tc-i386.c	FUNCTION_27	IF_2
0x400039c	          0x4989d0	                             mov r8, rdx	      1895	tc-i386.c	FUNCTION_21	SWITCH_1
0x400039f	        0x49c1e810	                            shr r8, 0x10	      1895	tc-i386.c	FUNCTION_21	SWITCH_1
0x40003a3	      0xb801000000	                              mov eax, 1	      2095	tc-i386.c	FUNCTION_27	IF_2
0x40003a8	        0x41f6c05f	                          test r8b, 0x5f	      2092	tc-i386.c	FUNCTION_27	IF_2	CALL_2
0x40003ac	     0xf84ee000000	                            je 0x40004a0	      2092	tc-i386.c	FUNCTION_27	IF_2	CALL_2
0x40003b2	          0x4989d0	                             mov r8, rdx	      2093	tc-i386.c	FUNCTION_27	IF_2
0x40003b5	        0x49c1e820	                            shr r8, 0x20	      2093	tc-i386.c	FUNCTION_27	IF_2
0x40003b9	        0x41f6c040	                          test r8b, 0x40	      2093	tc-i386.c	FUNCTION_27	IF_2
0x40003bd	     0xf85dd000000	                           jne 0x40004a0	      2093	tc-i386.c	FUNCTION_27	IF_2
0x40003c3	          0xf6c104	                              test cl, 4	      2094	tc-i386.c	FUNCTION_27	IF_2
0x40003c6	     0xf84d4000000	                            je 0x40004a0	      2094	tc-i386.c	FUNCTION_27	IF_2
0x40003cc	          0x4889f8	                            mov rax, rdi	      2097	tc-i386.c	FUNCTION_27	IF_3
0x40003cf	        0x48c1e818	                           shr rax, 0x18	      2097	tc-i386.c	FUNCTION_27	IF_3
0x40003d3	          0x4989d0	                             mov r8, rdx	      2097	tc-i386.c	FUNCTION_27	IF_3
0x40003d6	        0x49c1e818	                            shr r8, 0x18	      2097	tc-i386.c	FUNCTION_27	IF_3
0x40003da	          0x4431c0	                            xor eax, r8d	      2097	tc-i386.c	FUNCTION_27	IF_3
0x40003dd	            0xa860	                           test al, 0x60	      2097	tc-i386.c	FUNCTION_27	IF_3
0x40003df	            0x751d	                           jne 0x40003fe	      2097	tc-i386.c	FUNCTION_27	IF_3
0x40003e1	            0x84c0	                             test al, al	      2099	tc-i386.c	FUNCTION_27	IF_3
0x40003e3	            0x7819	                            js 0x40003fe	      2099	tc-i386.c	FUNCTION_27	IF_3
0x40003e5	        0x48c1ef20	                           shr rdi, 0x20	      2100	tc-i386.c	FUNCTION_27	IF_3
0x40003e9	        0x48c1ea20	                           shr rdx, 0x20	      2100	tc-i386.c	FUNCTION_27	IF_3
0x40003ed	            0x31d7	                            xor edi, edx	      2103	tc-i386.c	FUNCTION_27	IF_3
0x40003ef	      0xb801000000	                              mov eax, 1	      2104	tc-i386.c	FUNCTION_27	IF_3
0x40003f4	        0x40f6c73a	                          test dil, 0x3a	      2103	tc-i386.c	FUNCTION_27	IF_3
0x40003f8	     0xf84a2000000	                            je 0x40004a0	      2103	tc-i386.c	FUNCTION_27	IF_3
0x40003fe	          0x4889f2	                            mov rdx, rsi	      2106	tc-i386.c	FUNCTION_27	IF_4
0x4000401	        0x48c1ea1d	                           shr rdx, 0x1d	      2106	tc-i386.c	FUNCTION_27	IF_4
0x4000405	          0x4889c8	                            mov rax, rcx	      2106	tc-i386.c	FUNCTION_27	IF_4
0x4000408	        0x48c1e81d	                           shr rax, 0x1d	      2106	tc-i386.c	FUNCTION_27	IF_4
0x400040c	          0x83e001	                              and eax, 1	      2106	tc-i386.c	FUNCTION_27	IF_4
0x400040f	            0x84d0	                             test al, dl	      2106	tc-i386.c	FUNCTION_27	IF_4
0x4000411	            0x757e	                           jne 0x4000491	      2106	tc-i386.c	FUNCTION_27	IF_4
0x4000413	          0x4889f2	                            mov rdx, rsi	      2107	tc-i386.c	FUNCTION_27	IF_4
0x4000416	        0x48c1ea1e	                           shr rdx, 0x1e	      2107	tc-i386.c	FUNCTION_27	IF_4
0x400041a	          0x4889c8	                            mov rax, rcx	      2107	tc-i386.c	FUNCTION_27	IF_4
0x400041d	        0x48c1e81e	                           shr rax, 0x1e	      2107	tc-i386.c	FUNCTION_27	IF_4
0x4000421	          0x83e001	                              and eax, 1	      2107	tc-i386.c	FUNCTION_27	IF_4
0x4000424	            0x84d0	                             test al, dl	      2107	tc-i386.c	FUNCTION_27	IF_4
0x4000426	            0x7569	                           jne 0x4000491	      2107	tc-i386.c	FUNCTION_27	IF_4
0x4000428	          0x4889f2	                            mov rdx, rsi	      2108	tc-i386.c	FUNCTION_27	IF_4
0x400042b	        0x48c1ea1f	                           shr rdx, 0x1f	      2108	tc-i386.c	FUNCTION_27	IF_4
0x400042f	          0x4889c8	                            mov rax, rcx	      2108	tc-i386.c	FUNCTION_27	IF_4
0x4000432	        0x48c1e81f	                           shr rax, 0x1f	      2108	tc-i386.c	FUNCTION_27	IF_4
0x4000436	          0x83e001	                              and eax, 1	      2108	tc-i386.c	FUNCTION_27	IF_4
0x4000439	            0x84d0	                             test al, dl	      2108	tc-i386.c	FUNCTION_27	IF_4
0x400043b	            0x7554	                           jne 0x4000491	      2108	tc-i386.c	FUNCTION_27	IF_4
0x400043d	          0x4889f2	                            mov rdx, rsi	      2109	tc-i386.c	FUNCTION_27	IF_4
0x4000440	        0x48c1ea21	                           shr rdx, 0x21	      2109	tc-i386.c	FUNCTION_27	IF_4
0x4000444	          0x4889c8	                            mov rax, rcx	      2109	tc-i386.c	FUNCTION_27	IF_4
0x4000447	        0x48c1e821	                           shr rax, 0x21	      2109	tc-i386.c	FUNCTION_27	IF_4
0x400044b	          0x83e001	                              and eax, 1	      2109	tc-i386.c	FUNCTION_27	IF_4
0x400044e	            0x84d0	                             test al, dl	      2109	tc-i386.c	FUNCTION_27	IF_4
0x4000450	            0x753f	                           jne 0x4000491	      2109	tc-i386.c	FUNCTION_27	IF_4
0x4000452	          0x4889f2	                            mov rdx, rsi	      2110	tc-i386.c	FUNCTION_27	IF_4
0x4000455	        0x48c1ea23	                           shr rdx, 0x23	      2110	tc-i386.c	FUNCTION_27	IF_4
0x4000459	          0x4889c8	                            mov rax, rcx	      2110	tc-i386.c	FUNCTION_27	IF_4
0x400045c	        0x48c1e823	                           shr rax, 0x23	      2110	tc-i386.c	FUNCTION_27	IF_4
0x4000460	          0x83e001	                              and eax, 1	      2110	tc-i386.c	FUNCTION_27	IF_4
0x4000463	            0x84d0	                             test al, dl	      2110	tc-i386.c	FUNCTION_27	IF_4
0x4000465	            0x752a	                           jne 0x4000491	      2110	tc-i386.c	FUNCTION_27	IF_4
0x4000467	          0x4889f2	                            mov rdx, rsi	      2111	tc-i386.c	FUNCTION_27	IF_4
0x400046a	        0x48c1ea24	                           shr rdx, 0x24	      2111	tc-i386.c	FUNCTION_27	IF_4
0x400046e	          0x4889c8	                            mov rax, rcx	      2111	tc-i386.c	FUNCTION_27	IF_4
0x4000471	        0x48c1e824	                           shr rax, 0x24	      2111	tc-i386.c	FUNCTION_27	IF_4
0x4000475	          0x83e001	                              and eax, 1	      2111	tc-i386.c	FUNCTION_27	IF_4
0x4000478	            0x84d0	                             test al, dl	      2111	tc-i386.c	FUNCTION_27	IF_4
0x400047a	            0x7515	                           jne 0x4000491	      2111	tc-i386.c	FUNCTION_27	IF_4
0x400047c	        0x48c1ee25	                           shr rsi, 0x25	      2112	tc-i386.c	FUNCTION_27	IF_4
0x4000480	        0x48c1e925	                           shr rcx, 0x25	      2112	tc-i386.c	FUNCTION_27	IF_4
0x4000484	          0x83e101	                              and ecx, 1	      2112	tc-i386.c	FUNCTION_27	IF_4
0x4000487	      0xb801000000	                              mov eax, 1	      2113	tc-i386.c	FUNCTION_27	IF_4
0x400048c	          0x4084f1	                            test cl, sil	      2112	tc-i386.c	FUNCTION_27	IF_4
0x400048f	            0x740f	                            je 0x40004a0	      2112	tc-i386.c	FUNCTION_27	IF_4
0x4000491	    0xc70500000000	               mov dword [0x0400049b], 2	      2115	tc-i386.c	FUNCTION_27
0x400049b	      0xb800000000	                              mov eax, 0	      2117	tc-i386.c	FUNCTION_27
0x40004a0	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2118	tc-i386.c	FUNCTION_27
0x40004a5	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      2118	tc-i386.c	FUNCTION_27
0x40004ae	            0x7405	                            je 0x40004b5	      2118	tc-i386.c	FUNCTION_27
0x40004b0	      0xe800000000	                          call 0x40004b5	      2118	tc-i386.c	FUNCTION_27
0x40004b5	        0x4883c418	                           add rsp, 0x18	      2118	tc-i386.c	FUNCTION_27
0x40004b9	              0xc3	                                     ret	      2118	tc-i386.c	FUNCTION_27
i386_operator	functions,0:ELSE,0:FOR,2:CALL,7:SWITCH,1:WHILE,0:IF,11:DO,0	161
0x4010d42	            0x4157	                                push r15	       120	tc-i386-intel.c	FUNCTION_173
0x4010d44	            0x4156	                                push r14	       120	tc-i386-intel.c	FUNCTION_173
0x4010d46	            0x4155	                                push r13	       120	tc-i386-intel.c	FUNCTION_173
0x4010d48	            0x4154	                                push r12	       120	tc-i386-intel.c	FUNCTION_173
0x4010d4a	              0x55	                                push rbp	       120	tc-i386-intel.c	FUNCTION_173
0x4010d4b	              0x53	                                push rbx	       120	tc-i386-intel.c	FUNCTION_173
0x4010d4c	        0x4883ec18	                           sub rsp, 0x18	       120	tc-i386-intel.c	FUNCTION_173
0x4010d50	    0x64488b042528	                mov rax, qword fs:[0x28]	       120	tc-i386-intel.c	FUNCTION_173
0x4010d59	      0x4889442408	                mov qword [rsp + 8], rax	       120	tc-i386-intel.c	FUNCTION_173
0x4010d5e	            0x31c0	                            xor eax, eax	       120	tc-i386-intel.c	FUNCTION_173
0x4010d60	      0xb801000000	                              mov eax, 1	       124	tc-i386-intel.c	FUNCTION_173	IF_1
0x4010d65	    0x833d00000000	               cmp dword [0x04010d6c], 0	       123	tc-i386-intel.c	FUNCTION_173	IF_1
0x4010d6c	     0xf843c020000	                            je 0x4010fae	       123	tc-i386-intel.c	FUNCTION_173	IF_1
0x4010d72	          0x4989fc	                            mov r12, rdi	       123	tc-i386-intel.c	FUNCTION_173	IF_1
0x4010d75	          0x4189f5	                           mov r13d, esi	       123	tc-i386-intel.c	FUNCTION_173	IF_1
0x4010d78	          0x4989d6	                            mov r14, rdx	       123	tc-i386-intel.c	FUNCTION_173	IF_1
0x4010d7b	          0x4885ff	                           test rdi, rdi	       126	tc-i386-intel.c	FUNCTION_173	IF_2
0x4010d7e	     0xf85f5000000	                           jne 0x4010e79	       126	tc-i386-intel.c	FUNCTION_173	IF_2
0x4010d84	      0xb800000000	                              mov eax, 0	       129	tc-i386-intel.c	FUNCTION_173	IF_2	IF_3
0x4010d89	          0x83fe02	                              cmp esi, 2	       128	tc-i386-intel.c	FUNCTION_173	IF_2	IF_3
0x4010d8c	     0xf851c020000	                           jne 0x4010fae	       128	tc-i386-intel.c	FUNCTION_173	IF_2	IF_3
0x4010d92	    0x488b05000000	            mov rax, qword [0x04010d99] 	       130	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1
0x4010d99	           0xfb610	                   movzx edx, byte [rax]	       130	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1
0x4010d9c	          0x80fa40	                            cmp dl, 0x40	       130	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1
0x4010d9f	            0x7438	                            je 0x4010dd9	       130	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1
0x4010da1	          0x80fa5b	                            cmp dl, 0x5b	       130	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1
0x4010da4	            0x741e	                            je 0x4010dc4	       130	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1
0x4010da6	          0x80fa3a	                            cmp dl, 0x3a	       130	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1
0x4010da9	     0xf85ec010000	                           jne 0x4010f9b	       130	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1
0x4010daf	        0x4883c001	                              add rax, 1	       133	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1
0x4010db3	    0x488905000000	            mov qword [0x04010dba], rax 	       133	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1
0x4010dba	      0xb81f000000	                           mov eax, 0x1f	       134	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1
0x4010dbf	      0xe9ea010000	                           jmp 0x4010fae	       134	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1
0x4010dc4	        0x4883c001	                              add rax, 1	       136	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1
0x4010dc8	    0x488905000000	            mov qword [0x04010dcf], rax 	       136	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1
0x4010dcf	      0xb81d000000	                           mov eax, 0x1d	       137	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1
0x4010dd4	      0xe9d5010000	                           jmp 0x4010fae	       137	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1
0x4010dd9	    0x8b1500000000	            mov edx, dword [0x04010ddf] 	       139	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1	IF_4
0x4010ddf	            0x85d2	                           test edx, edx	       139	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1	IF_4
0x4010de1	     0xf88bb010000	                            js 0x4010fa2	       139	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1	IF_4
0x4010de7	          0x4863ca	                         movsxd rcx, edx	       139	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1	IF_4
0x4010dea	      0xb800000000	                              mov eax, 0	       156	tc-i386-intel.c	FUNCTION_173	IF_2
0x4010def	    0x833c8d000000	                 cmp dword [rcx*4], 0x47	       139	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1	IF_4
0x4010df7	     0xf85b1010000	                           jne 0x4010fae	       139	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1	IF_4
0x4010dfd	    0xc70424000000	                      mov dword [rsp], 0	       141	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1	IF_4
0x4010e04	    0x488d3c8d0000	                        lea rdi, [rcx*4]	       142	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1	IF_4
0x4010e0c	      0xba00000000	                              mov edx, 0	       142	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1	IF_4
0x4010e11	          0x4889e6	                            mov rsi, rsp	       142	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1	IF_4
0x4010e14	      0xe87350ffff	                        call sym.lex_got	       142	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1	IF_4
0x4010e19	          0x4885c0	                           test rax, rax	       146	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1	IF_4	IF_5
0x4010e1c	            0x7451	                            je 0x4010e6f	       146	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1	IF_4	IF_5
0x4010e1e	          0x4889c7	                            mov rdi, rax	       148	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1	IF_4	CALL_1
0x4010e21	      0xe800000000	                          call 0x4010e26	       148	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1	IF_4	CALL_1
0x4010e26	    0x488b05000000	            mov rax, qword [0x04010e2d] 	       149	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1	IF_4
0x4010e2d	        0x488d5001	                      lea rdx, [rax + 1]	       149	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1	IF_4
0x4010e31	    0x488915000000	            mov qword [0x04010e38], rdx 	       149	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1	IF_4
0x4010e38	          0xc6002b	                    mov byte [rax], 0x2b	       149	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1	IF_4
0x4010e3b	          0x8b0424	                    mov eax, dword [rsp]	        90	string3.h	FUNCTION_164	CALL_6
0x4010e3e	          0x8d50ff	                      lea edx, [rax - 1]	        90	string3.h	FUNCTION_164	CALL_6
0x4010e41	          0x4863d2	                         movsxd rdx, edx	        90	string3.h	FUNCTION_164	CALL_6
0x4010e44	      0xbe30000000	                           mov esi, 0x30	        90	string3.h	FUNCTION_164	CALL_6
0x4010e49	    0x488b3d000000	            mov rdi, qword [0x04010e50] 	        90	string3.h	FUNCTION_164	CALL_6
0x4010e50	      0xe800000000	                          call 0x4010e55	        90	string3.h	FUNCTION_164	CALL_6
0x4010e55	        0x48630424	                 movsxd rax, dword [rsp]	       151	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1	IF_4
0x4010e59	    0x488b15000000	            mov rdx, qword [0x04010e60] 	       151	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1	IF_4
0x4010e60	      0xc64402ff20	         mov byte [rdx + rax - 1], 0x20 	       151	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1	IF_4
0x4010e65	      0xb813000000	                           mov eax, 0x13	       152	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1	IF_4
0x4010e6a	      0xe93f010000	                           jmp 0x4010fae	       152	tc-i386-intel.c	FUNCTION_173	IF_2	SWITCH_1	IF_4
0x4010e6f	      0xb800000000	                              mov eax, 0	       156	tc-i386-intel.c	FUNCTION_173	IF_2
0x4010e74	      0xe935010000	                           jmp 0x4010fae	       156	tc-i386-intel.c	FUNCTION_173	IF_2
0x4010e79	      0xbb00000000	                              mov ebx, 0	       156	tc-i386-intel.c	FUNCTION_173	IF_2
0x4010e7e	      0xbf00000000	                              mov edi, 0	       126	tc-i386-intel.c	FUNCTION_173	IF_2
0x4010e83	      0xbd00000000	                              mov ebp, 0	       126	tc-i386-intel.c	FUNCTION_173	IF_2
0x4010e88	          0x4c89e6	                            mov rsi, r12	       160	tc-i386-intel.c	FUNCTION_173	FOR_1	IF_6	CALL_3
0x4010e8b	      0xe800000000	                          call 0x4010e90	       160	tc-i386-intel.c	FUNCTION_173	FOR_1	IF_6	CALL_3
0x4010e90	            0x85c0	                           test eax, eax	       160	tc-i386-intel.c	FUNCTION_173	FOR_1	IF_6	CALL_3
0x4010e92	            0x752f	                           jne 0x4010ec3	       160	tc-i386-intel.c	FUNCTION_173	FOR_1	IF_6	CALL_3
0x4010e94	            0x89e8	                            mov eax, ebp	       162	tc-i386-intel.c	FUNCTION_173	FOR_1	IF_6	IF_7
0x4010e96	        0x48c1e004	                              shl rax, 4	       162	tc-i386-intel.c	FUNCTION_173	FOR_1	IF_6	IF_7
0x4010e9a	    0x8b9000000000	                    mov edx, dword [rax]	       162	tc-i386-intel.c	FUNCTION_173	FOR_1	IF_6	IF_7
0x4010ea0	            0x85d2	                           test edx, edx	       163	tc-i386-intel.c	FUNCTION_173	FOR_1	IF_6	IF_7
0x4010ea2	            0x740e	                            je 0x4010eb2	       163	tc-i386-intel.c	FUNCTION_173	FOR_1	IF_6	IF_7
0x4010ea4	      0xb800000000	                              mov eax, 0	       164	tc-i386-intel.c	FUNCTION_173	FOR_1	IF_6	IF_7
0x4010ea9	          0x4139d5	                           cmp r13d, edx	       163	tc-i386-intel.c	FUNCTION_173	FOR_1	IF_6	IF_7
0x4010eac	     0xf85fc000000	                           jne 0x4010fae	       163	tc-i386-intel.c	FUNCTION_173	FOR_1	IF_6	IF_7
0x4010eb2	            0x89ed	                            mov ebp, ebp	       165	tc-i386-intel.c	FUNCTION_173	FOR_1	IF_6
0x4010eb4	        0x48c1e504	                              shl rbp, 4	       165	tc-i386-intel.c	FUNCTION_173	FOR_1	IF_6
0x4010eb8	    0x8b8500000000	                    mov eax, dword [rbp]	       165	tc-i386-intel.c	FUNCTION_173	FOR_1	IF_6
0x4010ebe	      0xe9eb000000	                           jmp 0x4010fae	       165	tc-i386-intel.c	FUNCTION_173	FOR_1	IF_6
0x4010ec3	          0x83c501	                              add ebp, 1	       159	tc-i386-intel.c	FUNCTION_173	FOR_1
0x4010ec6	        0x4883c310	                           add rbx, 0x10	       159	tc-i386-intel.c	FUNCTION_173	FOR_1
0x4010eca	        0x488b7bf0	             mov rdi, qword [rbx - 0x10]	       159	tc-i386-intel.c	FUNCTION_173	FOR_1
0x4010ece	          0x4885ff	                           test rdi, rdi	       159	tc-i386-intel.c	FUNCTION_173	FOR_1
0x4010ed1	            0x75b5	                           jne 0x4010e88	       159	tc-i386-intel.c	FUNCTION_173	FOR_1
0x4010ed3	      0xbd00000000	                              mov ebp, 0	       159	tc-i386-intel.c	FUNCTION_173	FOR_1
0x4010ed8	      0xbb00000000	                              mov ebx, 0	       159	tc-i386-intel.c	FUNCTION_173	FOR_1
0x4010edd	    0x41bf00000000	                             mov r15d, 0	       159	tc-i386-intel.c	FUNCTION_173	FOR_1
0x4010ee3	          0x4c89e6	                            mov rsi, r12	       169	tc-i386-intel.c	FUNCTION_173	FOR_2	IF_8	CALL_4
0x4010ee6	          0x4889df	                            mov rdi, rbx	       169	tc-i386-intel.c	FUNCTION_173	FOR_2	IF_8	CALL_4
0x4010ee9	      0xe800000000	                          call 0x4010eee	       169	tc-i386-intel.c	FUNCTION_173	FOR_2	IF_8	CALL_4
0x4010eee	            0x85c0	                           test eax, eax	       169	tc-i386-intel.c	FUNCTION_173	FOR_2	IF_8	CALL_4
0x4010ef0	            0x741b	                            je 0x4010f0d	       169	tc-i386-intel.c	FUNCTION_173	FOR_2	IF_8	CALL_4
0x4010ef2	        0x4183c701	                             add r15d, 1	       168	tc-i386-intel.c	FUNCTION_173	FOR_2
0x4010ef6	        0x4883c518	                           add rbp, 0x18	       168	tc-i386-intel.c	FUNCTION_173	FOR_2
0x4010efa	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       168	tc-i386-intel.c	FUNCTION_173	FOR_2
0x4010efe	          0x4885db	                           test rbx, rbx	       168	tc-i386-intel.c	FUNCTION_173	FOR_2
0x4010f01	            0x75e0	                           jne 0x4010ee3	       168	tc-i386-intel.c	FUNCTION_173	FOR_2
0x4010f03	      0xb801000000	                              mov eax, 1	       194	tc-i386-intel.c	FUNCTION_173
0x4010f08	      0xe9a1000000	                           jmp 0x4010fae	       194	tc-i386-intel.c	FUNCTION_173
0x4010f0d	          0x4885db	                           test rbx, rbx	       172	tc-i386-intel.c	FUNCTION_173	IF_9
0x4010f10	     0xf8493000000	                            je 0x4010fa9	       172	tc-i386-intel.c	FUNCTION_173	IF_9
0x4010f16	      0xb801000000	                              mov eax, 1	       194	tc-i386-intel.c	FUNCTION_173
0x4010f1b	        0x41803e20	                    cmp byte [r14], 0x20	       172	tc-i386-intel.c	FUNCTION_173	IF_9
0x4010f1f	     0xf8589000000	                           jne 0x4010fae	       172	tc-i386-intel.c	FUNCTION_173	IF_9
0x4010f25	    0x488305000000	               add qword [0x04010f2d], 1	       177	tc-i386-intel.c	FUNCTION_173	IF_9
0x4010f2d	          0x4889e7	                            mov rdi, rsp	       178	tc-i386-intel.c	FUNCTION_173	IF_9	CALL_5
0x4010f30	      0xe800000000	                          call 0x4010f35	       178	tc-i386-intel.c	FUNCTION_173	IF_9	CALL_5
0x4010f35	            0x89c5	                            mov ebp, eax	       178	tc-i386-intel.c	FUNCTION_173	IF_9	CALL_5
0x4010f37	        0x488b1c24	                    mov rbx, qword [rsp]	       180	tc-i386-intel.c	FUNCTION_173	IF_9	IF_10	CALL_6
0x4010f3b	      0xbe00000000	                              mov esi, 0	       180	tc-i386-intel.c	FUNCTION_173	IF_9	IF_10	CALL_6
0x4010f40	          0x4889df	                            mov rdi, rbx	       180	tc-i386-intel.c	FUNCTION_173	IF_9	IF_10	CALL_6
0x4010f43	      0xe800000000	                          call 0x4010f48	       180	tc-i386-intel.c	FUNCTION_173	IF_9	IF_10	CALL_6
0x4010f48	            0x85c0	                           test eax, eax	       180	tc-i386-intel.c	FUNCTION_173	IF_9	IF_10	CALL_6
0x4010f4a	            0x7529	                           jne 0x4010f75	       180	tc-i386-intel.c	FUNCTION_173	IF_9	IF_10	CALL_6
0x4010f4c	        0x410fb606	                   movzx eax, byte [r14]	       183	tc-i386-intel.c	FUNCTION_173	IF_9	IF_10
0x4010f50	          0x8843ff	                  mov byte [rbx - 1], al	       183	tc-i386-intel.c	FUNCTION_173	IF_9	IF_10
0x4010f53	          0x41882e	                     mov byte [r14], bpl	       184	tc-i386-intel.c	FUNCTION_173	IF_9	IF_10
0x4010f56	    0x833d00000000	               cmp dword [0x04010f5d], 0	       185	tc-i386-intel.c	FUNCTION_173	IF_9	IF_10	IF_11
0x4010f5d	            0x7f35	                            jg 0x4010f94	       185	tc-i386-intel.c	FUNCTION_173	IF_9	IF_10	IF_11
0x4010f5f	        0x4183fd01	                             cmp r13d, 1	       185	tc-i386-intel.c	FUNCTION_173	IF_9	IF_10	IF_11
0x4010f63	            0x752f	                           jne 0x4010f94	       185	tc-i386-intel.c	FUNCTION_173	IF_9	IF_10	IF_11
0x4010f65	          0x4589ff	                          mov r15d, r15d	       187	tc-i386-intel.c	FUNCTION_173	IF_9	IF_10
0x4010f68	        0x4b8d047f	                  lea rax, [r15 + r15*2]	       187	tc-i386-intel.c	FUNCTION_173	IF_9	IF_10
0x4010f6c	    0x8b04c5000000	                  mov eax, dword [rax*8]	       187	tc-i386-intel.c	FUNCTION_173	IF_9	IF_10
0x4010f73	            0xeb39	                           jmp 0x4010fae	       187	tc-i386-intel.c	FUNCTION_173	IF_9	IF_10
0x4010f75	        0x400fbefd	                          movsx edi, bpl	       190	tc-i386-intel.c	FUNCTION_173	IF_9	CALL_7
0x4010f79	      0xe800000000	                          call 0x4010f7e	       190	tc-i386-intel.c	FUNCTION_173	IF_9	CALL_7
0x4010f7e	        0x488b0424	                    mov rax, qword [rsp]	       191	tc-i386-intel.c	FUNCTION_173	IF_9
0x4010f82	        0x4883e801	                              sub rax, 1	       191	tc-i386-intel.c	FUNCTION_173	IF_9
0x4010f86	    0x488905000000	            mov qword [0x04010f8d], rax 	       191	tc-i386-intel.c	FUNCTION_173	IF_9
0x4010f8d	      0xb801000000	                              mov eax, 1	       194	tc-i386-intel.c	FUNCTION_173
0x4010f92	            0xeb1a	                           jmp 0x4010fae	       194	tc-i386-intel.c	FUNCTION_173
0x4010f94	      0xb800000000	                              mov eax, 0	       186	tc-i386-intel.c	FUNCTION_173	IF_9	IF_10	IF_11
0x4010f99	            0xeb13	                           jmp 0x4010fae	       186	tc-i386-intel.c	FUNCTION_173	IF_9	IF_10	IF_11
0x4010f9b	      0xb800000000	                              mov eax, 0	       156	tc-i386-intel.c	FUNCTION_173	IF_2
0x4010fa0	            0xeb0c	                           jmp 0x4010fae	       156	tc-i386-intel.c	FUNCTION_173	IF_2
0x4010fa2	      0xb800000000	                              mov eax, 0	       156	tc-i386-intel.c	FUNCTION_173	IF_2
0x4010fa7	            0xeb05	                           jmp 0x4010fae	       156	tc-i386-intel.c	FUNCTION_173	IF_2
0x4010fa9	      0xb801000000	                              mov eax, 1	       194	tc-i386-intel.c	FUNCTION_173
0x4010fae	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       195	tc-i386-intel.c	FUNCTION_173
0x4010fb3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       195	tc-i386-intel.c	FUNCTION_173
0x4010fbc	            0x7405	                            je 0x4010fc3	       195	tc-i386-intel.c	FUNCTION_173
0x4010fbe	      0xe800000000	                          call 0x4010fc3	       195	tc-i386-intel.c	FUNCTION_173
0x4010fc3	        0x4883c418	                           add rsp, 0x18	       195	tc-i386-intel.c	FUNCTION_173
0x4010fc7	              0x5b	                                 pop rbx	       195	tc-i386-intel.c	FUNCTION_173
0x4010fc8	              0x5d	                                 pop rbp	       195	tc-i386-intel.c	FUNCTION_173
0x4010fc9	            0x415c	                                 pop r12	       195	tc-i386-intel.c	FUNCTION_173
0x4010fcb	            0x415d	                                 pop r13	       195	tc-i386-intel.c	FUNCTION_173
0x4010fcd	            0x415e	                                 pop r14	       195	tc-i386-intel.c	FUNCTION_173
0x4010fcf	            0x415f	                                 pop r15	       195	tc-i386-intel.c	FUNCTION_173
0x4010fd1	              0xc3	                                     ret	       195	tc-i386-intel.c	FUNCTION_173
intel_float_operand	functions,0:ELSE,0:FOR,0:CALL,0:SWITCH,2:WHILE,0:IF,7:DO,0	58
0x40004c8	      0xb800000000	                              mov eax, 0	      3264	tc-i386.c	FUNCTION_61	IF_1
0x40004cd	          0x803f66	                    cmp byte [rdi], 0x66	      3263	tc-i386.c	FUNCTION_61	IF_1
0x40004d0	     0xf85a4000000	                           jne 0x400057a	      3263	tc-i386.c	FUNCTION_61	IF_1
0x40004d6	         0xfb64701	               movzx eax, byte [rdi + 1]	      3266	tc-i386.c	FUNCTION_61	SWITCH_1
0x40004da	          0x83e869	                           sub eax, 0x69	      3266	tc-i386.c	FUNCTION_61	SWITCH_1
0x40004dd	            0x3c0f	                             cmp al, 0xf	      3266	tc-i386.c	FUNCTION_61	SWITCH_1
0x40004df	            0x770a	                            ja 0x40004eb	      3266	tc-i386.c	FUNCTION_61	SWITCH_1
0x40004e1	           0xfb6c0	                           movzx eax, al	      3266	tc-i386.c	FUNCTION_61	SWITCH_1
0x40004e4	    0xff24c5000000	                       jmp qword [rax*8]	      3266	tc-i386.c	FUNCTION_61	SWITCH_1
0x40004eb	      0xb801000000	                              mov eax, 1	      3306	tc-i386.c	FUNCTION_61
0x40004f0	              0xc3	                                     ret	      3306	tc-i386.c	FUNCTION_61
0x40004f1	      0xb801000000	                              mov eax, 1	      3306	tc-i386.c	FUNCTION_61
0x40004f6	        0x807f0264	                cmp byte [rdi + 2], 0x64	      3274	tc-i386.c	FUNCTION_61	SWITCH_1	IF_2
0x40004fa	            0x757e	                           jne 0x400057a	      3274	tc-i386.c	FUNCTION_61	SWITCH_1	IF_2
0x40004fc	         0xfb64703	               movzx eax, byte [rdi + 3]	      3274	tc-i386.c	FUNCTION_61	SWITCH_1	IF_2
0x4000500	          0x83e863	                           sub eax, 0x63	      3274	tc-i386.c	FUNCTION_61	SWITCH_1	IF_2
0x4000503	      0x25fd000000	                           and eax, 0xfd	      3274	tc-i386.c	FUNCTION_61	SWITCH_1	IF_2
0x4000508	            0x3c01	                               cmp al, 1	      3275	tc-i386.c	FUNCTION_61	SWITCH_1	IF_2
0x400050a	            0x19c0	                            sbb eax, eax	      3275	tc-i386.c	FUNCTION_61	SWITCH_1	IF_2
0x400050c	          0x83e002	                              and eax, 2	      3275	tc-i386.c	FUNCTION_61	SWITCH_1	IF_2
0x400050f	          0x83c001	                              add eax, 1	      3275	tc-i386.c	FUNCTION_61	SWITCH_1	IF_2
0x4000512	              0xc3	                                     ret	      3275	tc-i386.c	FUNCTION_61	SWITCH_1	IF_2
0x4000513	        0x807f026f	                cmp byte [rdi + 2], 0x6f	      3279	tc-i386.c	FUNCTION_61	SWITCH_1	IF_3
0x4000517	           0xf95c0	                                setne al	      3279	tc-i386.c	FUNCTION_61	SWITCH_1	IF_3
0x400051a	           0xfb6c0	                           movzx eax, al	      3279	tc-i386.c	FUNCTION_61	SWITCH_1	IF_3
0x400051d	        0x8d440001	                lea eax, [rax + rax + 1]	      3279	tc-i386.c	FUNCTION_61	SWITCH_1	IF_3
0x4000521	              0xc3	                                     ret	      3279	tc-i386.c	FUNCTION_61	SWITCH_1	IF_3
0x4000522	        0x807f0273	                cmp byte [rdi + 2], 0x73	      3283	tc-i386.c	FUNCTION_61	SWITCH_1	IF_4
0x4000526	           0xf94c0	                                 sete al	      3283	tc-i386.c	FUNCTION_61	SWITCH_1	IF_4
0x4000529	           0xfb6c0	                           movzx eax, al	      3283	tc-i386.c	FUNCTION_61	SWITCH_1	IF_4
0x400052c	        0x8d440001	                lea eax, [rax + rax + 1]	      3283	tc-i386.c	FUNCTION_61	SWITCH_1	IF_4
0x4000530	              0xc3	                                     ret	      3283	tc-i386.c	FUNCTION_61	SWITCH_1	IF_4
0x4000531	         0xfb65702	               movzx edx, byte [rdi + 2]	      3286	tc-i386.c	FUNCTION_61	SWITCH_1	IF_5
0x4000535	      0xb803000000	                              mov eax, 3	      3287	tc-i386.c	FUNCTION_61	SWITCH_1	IF_5
0x400053a	          0x80fa61	                            cmp dl, 0x61	      3286	tc-i386.c	FUNCTION_61	SWITCH_1	IF_5
0x400053d	            0x743b	                            je 0x400057a	      3286	tc-i386.c	FUNCTION_61	SWITCH_1	IF_5
0x400053f	      0xb801000000	                              mov eax, 1	      3306	tc-i386.c	FUNCTION_61
0x4000544	          0x80fa74	                            cmp dl, 0x74	      3288	tc-i386.c	FUNCTION_61	SWITCH_1	IF_6
0x4000547	            0x7531	                           jne 0x400057a	      3288	tc-i386.c	FUNCTION_61	SWITCH_1	IF_6
0x4000549	         0xfb64703	               movzx eax, byte [rdi + 3]	      3290	tc-i386.c	FUNCTION_61	SWITCH_1	IF_6	SWITCH_2
0x400054d	            0x3c63	                            cmp al, 0x63	      3290	tc-i386.c	FUNCTION_61	SWITCH_1	IF_6	SWITCH_2
0x400054f	            0x7c08	                            jl 0x4000559	      3290	tc-i386.c	FUNCTION_61	SWITCH_1	IF_6	SWITCH_2
0x4000551	            0x3c65	                            cmp al, 0x65	      3290	tc-i386.c	FUNCTION_61	SWITCH_1	IF_6	SWITCH_2
0x4000553	            0x7e20	                           jle 0x4000575	      3290	tc-i386.c	FUNCTION_61	SWITCH_1	IF_6	SWITCH_2
0x4000555	            0x3c73	                            cmp al, 0x73	      3290	tc-i386.c	FUNCTION_61	SWITCH_1	IF_6	SWITCH_2
0x4000557	            0x741c	                            je 0x4000575	      3290	tc-i386.c	FUNCTION_61	SWITCH_1	IF_6	SWITCH_2
0x4000559	      0xb801000000	                              mov eax, 1	      3306	tc-i386.c	FUNCTION_61
0x400055e	              0xc3	                                     ret	      3306	tc-i386.c	FUNCTION_61
0x400055f	         0xfb64702	               movzx eax, byte [rdi + 2]	      3264	tc-i386.c	FUNCTION_61	IF_1
0x4000563	          0x83e872	                           sub eax, 0x72	      3264	tc-i386.c	FUNCTION_61	IF_1
0x4000566	            0x3c01	                               cmp al, 1	      3264	tc-i386.c	FUNCTION_61	IF_1
0x4000568	           0xf97c0	                                 seta al	      3264	tc-i386.c	FUNCTION_61	IF_1
0x400056b	           0xfb6c0	                           movzx eax, al	      3264	tc-i386.c	FUNCTION_61	IF_1
0x400056e	              0xc3	                                     ret	      3264	tc-i386.c	FUNCTION_61	IF_1
0x400056f	      0xb802000000	                              mov eax, 2	      3272	tc-i386.c	FUNCTION_61	SWITCH_1
0x4000574	              0xc3	                                     ret	      3272	tc-i386.c	FUNCTION_61	SWITCH_1
0x4000575	      0xb803000000	                              mov eax, 3	      3296	tc-i386.c	FUNCTION_61	SWITCH_1	IF_6	SWITCH_2
0x400057a	            0xf3c3	                                     ret	      3307	tc-i386.c	FUNCTION_61
x86_address_bytes	functions,0:ELSE,0:FOR,0:CALL,0:SWITCH,0:WHILE,0:IF,1:DO,0	11
0x400e668	    0x488b05000000	            mov rax, qword [0x0400e66f] 	      8131	tc-i386.c	FUNCTION_98	IF_1
0x400e66f	    0x488b90c00000	            mov rdx, qword [rax + 0xc0] 	      8131	tc-i386.c	FUNCTION_98	IF_1
0x400e676	      0xb804000000	                              mov eax, 4	      8132	tc-i386.c	FUNCTION_98	IF_1
0x400e67b	        0xf6421010	           test byte [rdx + 0x10], 0x10 	      8131	tc-i386.c	FUNCTION_98	IF_1
0x400e67f	            0x750e	                           jne 0x400e68f	      8131	tc-i386.c	FUNCTION_98	IF_1
0x400e681	          0x8b5204	                mov edx, dword [rdx + 4]	      8133	tc-i386.c	FUNCTION_98
0x400e684	          0x8d4207	                      lea eax, [rdx + 7]	      8133	tc-i386.c	FUNCTION_98
0x400e687	            0x85d2	                           test edx, edx	      8133	tc-i386.c	FUNCTION_98
0x400e689	           0xf49c2	                         cmovns eax, edx	      8133	tc-i386.c	FUNCTION_98
0x400e68c	          0xc1f803	                              sar eax, 3	      8133	tc-i386.c	FUNCTION_98
0x400e68f	            0xf3c3	                                     ret	      8134	tc-i386.c	FUNCTION_98
i386_elf_section_type	functions,0:ELSE,0:FOR,0:CALL,1:SWITCH,0:WHILE,0:IF,1:DO,0	20
0x401117c	          0x4889f8	                            mov rax, rdi	     11574	tc-i386.c	
0x401117f	    0x833d00000000	               cmp dword [0x04011186], 2	     11576	tc-i386.c	
0x4011186	            0x752e	                           jne 0x40111b6	     11576	tc-i386.c	
0x4011188	        0x4883fe06	                              cmp rsi, 6	     11576	tc-i386.c	
0x401118c	            0x7528	                           jne 0x40111b6	     11576	tc-i386.c	
0x401118e	      0xbf00000000	                              mov edi, 0	     11577	tc-i386.c	
0x4011193	      0xb906000000	                              mov ecx, 6	     11577	tc-i386.c	
0x4011198	          0x4889c6	                            mov rsi, rax	     11577	tc-i386.c	
0x401119b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11577	tc-i386.c	
0x401119d	           0xf97c0	                                 seta al	     11577	tc-i386.c	
0x40111a0	           0xf92c2	                                 setb dl	     11577	tc-i386.c	
0x40111a3	            0x29d0	                            sub eax, edx	     11577	tc-i386.c	
0x40111a5	           0xfbec0	                           movsx eax, al	     11577	tc-i386.c	
0x40111a8	          0x83f801	                              cmp eax, 1	     11578	tc-i386.c	
0x40111ab	            0x19c0	                            sbb eax, eax	     11578	tc-i386.c	
0x40111ad	      0x2502000070	                     and eax, 0x70000002	     11578	tc-i386.c	
0x40111b2	          0x83e801	                              sub eax, 1	     11578	tc-i386.c	
0x40111b5	              0xc3	                                     ret	     11578	tc-i386.c	
0x40111b6	      0xb8ffffffff	                     mov eax, 0xffffffff	     11580	tc-i386.c	FUNCTION_140
0x40111bb	              0xc3	                                     ret	     11581	tc-i386.c	FUNCTION_140
i386_parse_name	functions,0:ELSE,0:FOR,0:CALL,2:SWITCH,0:WHILE,0:IF,1:DO,0	74
0x400eef0	            0x4155	                                push r13	     10328	tc-i386.c	FUNCTION_122
0x400eef2	            0x4154	                                push r12	     10328	tc-i386.c	FUNCTION_122
0x400eef4	              0x55	                                push rbp	     10328	tc-i386.c	FUNCTION_122
0x400eef5	              0x53	                                push rbx	     10328	tc-i386.c	FUNCTION_122
0x400eef6	        0x4883ec08	                              sub rsp, 8	     10328	tc-i386.c	FUNCTION_122
0x400eefa	          0x4989fc	                            mov r12, rdi	     10328	tc-i386.c	FUNCTION_122
0x400eefd	          0x4989f5	                            mov r13, rsi	     10328	tc-i386.c	FUNCTION_122
0x400ef00	          0x4889d5	                            mov rbp, rdx	     10328	tc-i386.c	FUNCTION_122
0x400ef03	    0x488b1d000000	            mov rbx, qword [0x0400ef0a] 	     10330	tc-i386.c	FUNCTION_122
0x400ef0a	           0xfb602	                   movzx eax, byte [rdx]	     10332	tc-i386.c	FUNCTION_122
0x400ef0d	            0x8803	                      mov byte [rbx], al	     10332	tc-i386.c	FUNCTION_122
0x400ef0f	      0xbe00000000	                              mov esi, 0	     10333	tc-i386.c	FUNCTION_122	CALL_1
0x400ef14	      0xe8a068ffff	                 call sym.parse_register	     10333	tc-i386.c	FUNCTION_122	CALL_1
0x400ef19	          0x4885c0	                           test rax, rax	     10334	tc-i386.c	FUNCTION_122	IF_1
0x400ef1c	            0x7447	                            je 0x400ef65	     10334	tc-i386.c	FUNCTION_122	IF_1
0x400ef1e	    0x488b15000000	            mov rdx, qword [0x0400ef25] 	     10334	tc-i386.c	FUNCTION_122	IF_1
0x400ef25	          0x4839d3	                            cmp rbx, rdx	     10334	tc-i386.c	FUNCTION_122	IF_1
0x400ef28	            0x773b	                            ja 0x400ef65	     10334	tc-i386.c	FUNCTION_122	IF_1
0x400ef2a	           0xfb612	                   movzx edx, byte [rdx]	     10336	tc-i386.c	FUNCTION_122	IF_1
0x400ef2d	          0x885500	                      mov byte [rbp], dl	     10336	tc-i386.c	FUNCTION_122	IF_1
0x400ef30	    0x488b15000000	            mov rdx, qword [0x0400ef37] 	     10337	tc-i386.c	FUNCTION_122	IF_1
0x400ef37	          0xc60200	                       mov byte [rdx], 0	     10337	tc-i386.c	FUNCTION_122	IF_1
0x400ef3a	      0x41c6451805	                mov byte [r13 + 0x18], 5	     10338	tc-i386.c	FUNCTION_122	IF_1
0x400ef3f	    0x482d00000000	                              sub rax, 0	     10339	tc-i386.c	FUNCTION_122	IF_1
0x400ef45	        0x48c1f803	                              sar rax, 3	     10339	tc-i386.c	FUNCTION_122	IF_1
0x400ef49	    0x48baabaaaaaa	          movabs rdx, 0xaaaaaaaaaaaaaaab	     10339	tc-i386.c	FUNCTION_122	IF_1
0x400ef53	        0x480fafc2	                           imul rax, rdx	     10339	tc-i386.c	FUNCTION_122	IF_1
0x400ef57	        0x49894510	             mov qword [r13 + 0x10], rax	     10339	tc-i386.c	FUNCTION_122	IF_1
0x400ef5b	      0xb801000000	                              mov eax, 1	     10340	tc-i386.c	FUNCTION_122	IF_1
0x400ef60	      0xe9a1000000	                           jmp 0x400f006	     10340	tc-i386.c	FUNCTION_122	IF_1
0x400ef65	    0x48891d000000	            mov qword [0x0400ef6c], rbx 	     10342	tc-i386.c	FUNCTION_122
0x400ef6c	          0xc60300	                       mov byte [rbx], 0	     10343	tc-i386.c	FUNCTION_122
0x400ef6f	    0x8b0500000000	            mov eax, dword [0x0400ef75] 	     10344	tc-i386.c	FUNCTION_122	CALL_2
0x400ef75	            0x85c0	                           test eax, eax	     10344	tc-i386.c	FUNCTION_122	CALL_2
0x400ef77	     0xf8489000000	                            je 0x400f006	     10344	tc-i386.c	FUNCTION_122	CALL_2
0x400ef7d	      0x41803c2424	                    cmp byte [r12], 0x24	       201	tc-i386-intel.c	FUNCTION_174	IF_1	CALL_1
0x400ef82	            0x7508	                           jne 0x400ef8c	       201	tc-i386-intel.c	FUNCTION_174	IF_1	CALL_1
0x400ef84	    0x41807c240100	                   cmp byte [r12 + 1], 0	       201	tc-i386-intel.c	FUNCTION_174	IF_1	CALL_1
0x400ef8a	            0x7411	                            je 0x400ef9d	       201	tc-i386-intel.c	FUNCTION_174	IF_1	CALL_1
0x400ef8c	      0xbb00000000	                              mov ebx, 0	       201	tc-i386-intel.c	FUNCTION_174	IF_1	CALL_1
0x400ef91	      0xbd00000000	                              mov ebp, 0	     10328	tc-i386.c	FUNCTION_122
0x400ef96	      0xbf00000000	                              mov edi, 0	     10328	tc-i386.c	FUNCTION_122
0x400ef9b	            0xeb0f	                           jmp 0x400efac	     10328	tc-i386.c	FUNCTION_122
0x400ef9d	          0x4c89ef	                            mov rdi, r13	       203	tc-i386-intel.c	FUNCTION_174	IF_1	CALL_2
0x400efa0	      0xe800000000	                          call 0x400efa5	       203	tc-i386-intel.c	FUNCTION_174	IF_1	CALL_2
0x400efa5	      0xb801000000	                              mov eax, 1	       204	tc-i386-intel.c	FUNCTION_174	IF_1
0x400efaa	            0xeb5a	                           jmp 0x400f006	       204	tc-i386-intel.c	FUNCTION_174	IF_1
0x400efac	          0x4c89e6	                            mov rsi, r12	       208	tc-i386-intel.c	FUNCTION_174	FOR_1	IF_2	CALL_3
0x400efaf	      0xe800000000	                          call 0x400efb4	       208	tc-i386-intel.c	FUNCTION_174	FOR_1	IF_2	CALL_3
0x400efb4	            0x85c0	                           test eax, eax	       208	tc-i386-intel.c	FUNCTION_174	FOR_1	IF_2	CALL_3
0x400efb6	            0x7539	                           jne 0x400eff1	       208	tc-i386-intel.c	FUNCTION_174	FOR_1	IF_2	CALL_3
0x400efb8	      0x41c6451802	                mov byte [r13 + 0x18], 2	       210	tc-i386-intel.c	FUNCTION_174	FOR_1	IF_2
0x400efbd	    0x8b0500000000	            mov eax, dword [0x0400efc3] 	       211	tc-i386-intel.c	FUNCTION_174	FOR_1	IF_2
0x400efc3	            0x89ed	                            mov ebp, ebp	       211	tc-i386-intel.c	FUNCTION_174	FOR_1	IF_2
0x400efc5	      0x488d546d00	                  lea rdx, [rbp + rbp*2]	       211	tc-i386-intel.c	FUNCTION_174	FOR_1	IF_2
0x400efca	        0x488d0490	                  lea rax, [rax + rdx*4]	       211	tc-i386-intel.c	FUNCTION_174	FOR_1	IF_2
0x400efce	     0xfb784000000	             movzx eax, word [rax + rax]	       211	tc-i386-intel.c	FUNCTION_174	FOR_1	IF_2
0x400efd6	        0x49894510	             mov qword [r13 + 0x10], rax	       211	tc-i386-intel.c	FUNCTION_174	FOR_1	IF_2
0x400efda	    0x49c745000000	                      mov qword [r13], 0	       212	tc-i386-intel.c	FUNCTION_174	FOR_1	IF_2
0x400efe2	    0x49c745080000	                  mov qword [r13 + 8], 0	       213	tc-i386-intel.c	FUNCTION_174	FOR_1	IF_2
0x400efea	      0xb801000000	                              mov eax, 1	       214	tc-i386-intel.c	FUNCTION_174	FOR_1	IF_2
0x400efef	            0xeb15	                           jmp 0x400f006	       214	tc-i386-intel.c	FUNCTION_174	FOR_1	IF_2
0x400eff1	          0x83c501	                              add ebp, 1	       207	tc-i386-intel.c	FUNCTION_174	FOR_1
0x400eff4	        0x4883c318	                           add rbx, 0x18	       207	tc-i386-intel.c	FUNCTION_174	FOR_1
0x400eff8	        0x488b7be8	             mov rdi, qword [rbx - 0x18]	       207	tc-i386-intel.c	FUNCTION_174	FOR_1
0x400effc	          0x4885ff	                           test rdi, rdi	       207	tc-i386-intel.c	FUNCTION_174	FOR_1
0x400efff	            0x75ab	                           jne 0x400efac	       207	tc-i386-intel.c	FUNCTION_174	FOR_1
0x400f001	      0xb800000000	                              mov eax, 0	       217	tc-i386-intel.c	FUNCTION_174
0x400f006	        0x4883c408	                              add rsp, 8	     10345	tc-i386.c	FUNCTION_122
0x400f00a	              0x5b	                                 pop rbx	     10345	tc-i386.c	FUNCTION_122
0x400f00b	              0x5d	                                 pop rbp	     10345	tc-i386.c	FUNCTION_122
0x400f00c	            0x415c	                                 pop r12	     10345	tc-i386.c	FUNCTION_122
0x400f00e	            0x415d	                                 pop r13	     10345	tc-i386.c	FUNCTION_122
0x400f010	              0xc3	                                     ret	     10345	tc-i386.c	FUNCTION_122
md_apply_fix	functions,0:ELSE,3:FOR,0:CALL,14:SWITCH,2:WHILE,0:IF,12:DO,0	167
0x400ec7f	            0x4157	                                push r15	      9964	tc-i386.c	FUNCTION_117
0x400ec81	            0x4156	                                push r14	      9964	tc-i386.c	FUNCTION_117
0x400ec83	            0x4155	                                push r13	      9964	tc-i386.c	FUNCTION_117
0x400ec85	            0x4154	                                push r12	      9964	tc-i386.c	FUNCTION_117
0x400ec87	              0x55	                                push rbp	      9964	tc-i386.c	FUNCTION_117
0x400ec88	              0x53	                                push rbx	      9964	tc-i386.c	FUNCTION_117
0x400ec89	        0x4883ec18	                           sub rsp, 0x18	      9964	tc-i386.c	FUNCTION_117
0x400ec8d	          0x4889fb	                            mov rbx, rdi	      9964	tc-i386.c	FUNCTION_117
0x400ec90	          0x4989f4	                            mov r12, rsi	      9964	tc-i386.c	FUNCTION_117
0x400ec93	          0x4989d7	                            mov r15, rdx	      9964	tc-i386.c	FUNCTION_117
0x400ec96	        0x4c8b6f08	                mov r13, qword [rdi + 8]	      9965	tc-i386.c	FUNCTION_117
0x400ec9a	        0x4c8b7710	            mov r14, qword [rdi + 0x10] 	      9965	tc-i386.c	FUNCTION_117
0x400ec9e	          0x488b2e	                    mov rbp, qword [rsi]	      9966	tc-i386.c	FUNCTION_117
0x400eca1	          0xf60701	                      test byte [rdi], 1	      9969	tc-i386.c	FUNCTION_117	IF_1
0x400eca4	            0x7457	                            je 0x400ecfd	      9969	tc-i386.c	FUNCTION_117	IF_1
0x400eca6	          0x8b4750	            mov eax, dword [rdi + 0x50] 	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400eca9	          0x83f805	                              cmp eax, 5	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400ecac	            0x7437	                            je 0x400ece5	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400ecae	          0x83f805	                              cmp eax, 5	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400ecb1	            0x770c	                            ja 0x400ecbf	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400ecb3	          0x83f801	                              cmp eax, 1	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400ecb6	            0x7415	                            je 0x400eccd	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400ecb8	          0x83f802	                              cmp eax, 2	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400ecbb	            0x741c	                            je 0x400ecd9	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400ecbd	            0xeb3e	                           jmp 0x400ecfd	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400ecbf	          0x83f807	                              cmp eax, 7	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400ecc2	            0x742d	                            je 0x400ecf1	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400ecc4	      0x3d84010000	                          cmp eax, 0x184	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400ecc9	            0x740e	                            je 0x400ecd9	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400eccb	            0xeb30	                           jmp 0x400ecfd	      9971	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400eccd	    0xc74750080000	               mov dword [rdi + 0x50], 8	      9977	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400ecd4	      0xe9dd010000	                           jmp 0x400eeb6	      9978	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400ecd9	    0xc74350090000	               mov dword [rbx + 0x50], 9	      9981	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400ece0	      0xe9d1010000	                           jmp 0x400eeb6	      9982	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400ece5	    0xc747500b0000	            mov dword [rdi + 0x50], 0xb 	      9984	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400ecec	      0xe9c5010000	                           jmp 0x400eeb6	      9985	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400ecf1	    0xc747500d0000	            mov dword [rdi + 0x50], 0xd 	      9987	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400ecf8	      0xe9b9010000	                           jmp 0x400eeb6	      9988	tc-i386.c	FUNCTION_117	IF_1	SWITCH_1
0x400ecfd	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      9992	tc-i386.c	FUNCTION_117	IF_2
0x400ed01	          0x4885ff	                           test rdi, rdi	      9992	tc-i386.c	FUNCTION_117	IF_2
0x400ed04	     0xf8474010000	                            je 0x400ee7e	      9992	tc-i386.c	FUNCTION_117	IF_2
0x400ed0a	          0x8b4350	            mov eax, dword [rbx + 0x50] 	      9993	tc-i386.c	FUNCTION_117	IF_2
0x400ed0d	          0x8d50f5	                    lea edx, [rax - 0xb]	      9996	tc-i386.c	FUNCTION_117	IF_2
0x400ed10	    0xf7c2fdffffff	                    test edx, 0xfffffffd	      9996	tc-i386.c	FUNCTION_117	IF_2
0x400ed16	            0x740c	                            je 0x400ed24	      9996	tc-i386.c	FUNCTION_117	IF_2
0x400ed18	          0x83e808	                              sub eax, 8	      9996	tc-i386.c	FUNCTION_117	IF_2
0x400ed1b	          0x83f801	                              cmp eax, 1	      9996	tc-i386.c	FUNCTION_117	IF_2
0x400ed1e	     0xf87a1010000	                            ja 0x400eec5	      9996	tc-i386.c	FUNCTION_117	IF_2
0x400ed24	    0x833d00000000	               cmp dword [0x0400ed2b], 0	      9997	tc-i386.c	FUNCTION_117	IF_2
0x400ed2b	     0xf8594010000	                           jne 0x400eec5	      9997	tc-i386.c	FUNCTION_117	IF_2
0x400ed31	          0x4c89f0	                            mov rax, r14	     10009	tc-i386.c	FUNCTION_117	IF_2	IF_3
0x400ed34	        0x49034500	                    add rax, qword [r13]	     10009	tc-i386.c	FUNCTION_117	IF_2	IF_3
0x400ed38	          0x4801c5	                            add rbp, rax	     10009	tc-i386.c	FUNCTION_117	IF_2	IF_3
0x400ed3b	      0xe800000000	                          call 0x400ed40	     10014	tc-i386.c	FUNCTION_117	IF_2	IF_4	CALL_1
0x400ed40	      0x4889442408	                mov qword [rsp + 8], rax	     10016	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x400ed45	          0x4c39f8	                            cmp rax, r15	     10016	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x400ed48	            0x7418	                            je 0x400ed62	     10016	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x400ed4a	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	     10017	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5	CALL_2
0x400ed4e	      0xe800000000	                          call 0x400ed53	     10017	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5	CALL_2
0x400ed53	    0x48817c240800	                  cmp qword [rsp + 8], 0	     10018	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x400ed5c	            0x741e	                            je 0x400ed7c	     10018	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x400ed5e	            0x85c0	                           test eax, eax	     10018	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x400ed60	            0x741a	                            je 0x400ed7c	     10018	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x400ed62	          0x4889df	                            mov rdi, rbx	     10019	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5	CALL_3
0x400ed65	      0xe800000000	                          call 0x400ed6a	     10019	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5	CALL_3
0x400ed6a	            0x85c0	                           test eax, eax	     10019	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5	CALL_3
0x400ed6c	            0x750e	                           jne 0x400ed7c	     10019	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5	CALL_3
0x400ed6e	        0x488b5308	                mov rdx, qword [rbx + 8]	     10025	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x400ed72	        0x488b4310	            mov rax, qword [rbx + 0x10] 	     10025	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x400ed76	          0x480302	                    add rax, qword [rdx]	     10025	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x400ed79	          0x4801c5	                            add rbp, rax	     10025	tc-i386.c	FUNCTION_117	IF_2	IF_4	IF_5
0x400ed7c	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	     10060	tc-i386.c	FUNCTION_117	IF_9
0x400ed80	          0x4885ff	                           test rdi, rdi	     10060	tc-i386.c	FUNCTION_117	IF_9
0x400ed83	     0xf84f5000000	                            je 0x400ee7e	     10060	tc-i386.c	FUNCTION_117	IF_9
0x400ed89	          0x8b4350	            mov eax, dword [rbx + 0x50] 	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ed8c	      0x3d7e010000	                          cmp eax, 0x17e	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ed91	     0xf84c3000000	                            je 0x400ee5a	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ed97	      0x3d7e010000	                          cmp eax, 0x17e	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ed9c	            0x776d	                            ja 0x400ee0b	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ed9e	      0x3d71010000	                          cmp eax, 0x171	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400eda3	            0x7731	                            ja 0x400edd6	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400eda5	      0x3d70010000	                          cmp eax, 0x170	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400edaa	     0xf83b3000000	                           jae 0x400ee63	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400edb0	      0x3d6e010000	                          cmp eax, 0x16e	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400edb5	     0xf87ad000000	                            ja 0x400ee68	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400edbb	      0x3d6d010000	                          cmp eax, 0x16d	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400edc0	     0xf839d000000	                           jae 0x400ee63	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400edc6	      0x3d65010000	                          cmp eax, 0x165	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400edcb	     0xf8489000000	                            je 0x400ee5a	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400edd1	      0xe9a8000000	                           jmp 0x400ee7e	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400edd6	      0x3d74010000	                          cmp eax, 0x174	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400eddb	     0xf8487000000	                            je 0x400ee68	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ede1	      0x3d74010000	                          cmp eax, 0x174	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ede6	            0x7713	                            ja 0x400edfb	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ede8	      0x3d72010000	                          cmp eax, 0x172	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400eded	            0x7479	                            je 0x400ee68	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400edef	      0x3d73010000	                          cmp eax, 0x173	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400edf4	            0x746d	                            je 0x400ee63	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400edf6	      0xe983000000	                           jmp 0x400ee7e	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400edfb	      0x3d78010000	                          cmp eax, 0x178	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee00	            0x7461	                            je 0x400ee63	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee02	      0x3d79010000	                          cmp eax, 0x179	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee07	            0x7466	                            je 0x400ee6f	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee09	            0xeb73	                           jmp 0x400ee7e	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee0b	      0x3d8b010000	                          cmp eax, 0x18b	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee10	            0x7451	                            je 0x400ee63	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee12	      0x3d8b010000	                          cmp eax, 0x18b	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee17	            0x7717	                            ja 0x400ee30	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee19	      0x3d89010000	                          cmp eax, 0x189	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee1e	            0x7748	                            ja 0x400ee68	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee20	      0x3d88010000	                          cmp eax, 0x188	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee25	            0x733c	                           jae 0x400ee63	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee27	      0x3d86010000	                          cmp eax, 0x186	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee2c	            0x7250	                            jb 0x400ee7e	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee2e	            0xeb38	                           jmp 0x400ee68	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee30	      0x3d95010000	                          cmp eax, 0x195	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee35	            0x7438	                            je 0x400ee6f	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee37	      0x3d95010000	                          cmp eax, 0x195	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee3c	            0x7710	                            ja 0x400ee4e	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee3e	      0x3d8c010000	                          cmp eax, 0x18c	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee43	            0x7423	                            je 0x400ee68	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee45	      0x3d94010000	                          cmp eax, 0x194	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee4a	            0x7417	                            je 0x400ee63	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee4c	            0xeb30	                           jmp 0x400ee7e	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee4e	      0x2da3050000	                          sub eax, 0x5a3	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee53	          0x83f801	                              cmp eax, 1	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee56	            0x7621	                           jbe 0x400ee79	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee58	            0xeb24	                           jmp 0x400ee7e	     10061	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee5a	    0x48c7c5fcffff	             mov rbp, 0xfffffffffffffffc	     10067	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee61	            0xeb1b	                           jmp 0x400ee7e	     10067	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee63	      0xbd00000000	                              mov ebp, 0	     10080	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee68	      0xe800000000	                          call 0x400ee6d	     10089	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2	CALL_11
0x400ee6d	            0xeb0f	                           jmp 0x400ee7e	     10090	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee6f	      0xe800000000	                          call 0x400ee74	     10095	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2	CALL_12
0x400ee74	          0x8023df	                    and byte [rbx], 0xdf	     10096	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee77	            0xeb55	                           jmp 0x400eece	     10097	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee79	          0x8023df	                    and byte [rbx], 0xdf	     10101	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee7c	            0xeb50	                           jmp 0x400eece	     10102	tc-i386.c	FUNCTION_117	IF_9	SWITCH_2
0x400ee7e	        0x49892c24	                    mov qword [r12], rbp	     10108	tc-i386.c	FUNCTION_117
0x400ee82	      0x48837b1800	               cmp qword [rbx + 0x18], 0	     10112	tc-i386.c	FUNCTION_117	IF_10
0x400ee87	            0x7505	                           jne 0x400ee8e	     10112	tc-i386.c	FUNCTION_117	IF_10
0x400ee89	          0x800b20	                     or byte [rbx], 0x20	     10113	tc-i386.c	FUNCTION_117	IF_10
0x400ee8c	            0xeb15	                           jmp 0x400eea3	     10113	tc-i386.c	FUNCTION_117	IF_10
0x400ee8e	    0x833d00000000	               cmp dword [0x0400ee95], 0	     10124	tc-i386.c	FUNCTION_117	ELSE_3	IF_12
0x400ee95	            0x740c	                            je 0x400eea3	     10124	tc-i386.c	FUNCTION_117	ELSE_3	IF_12
0x400ee97	          0x800b40	                     or byte [rbx], 0x40	     10126	tc-i386.c	FUNCTION_117	ELSE_3	IF_12
0x400ee9a	        0x48896b58	             mov qword [rbx + 0x58], rbp	     10128	tc-i386.c	FUNCTION_117	ELSE_3	IF_12
0x400ee9e	      0xbd00000000	                              mov ebp, 0	     10129	tc-i386.c	FUNCTION_117	ELSE_3	IF_12
0x400eea3	         0xfb65302	               movzx edx, byte [rbx + 2]	     10132	tc-i386.c	FUNCTION_117	CALL_14
0x400eea7	      0x4b8d7c357c	            lea rdi, [r13 + r14 + 0x7c] 	     10132	tc-i386.c	FUNCTION_117	CALL_14
0x400eeac	          0x4889ee	                            mov rsi, rbp	     10132	tc-i386.c	FUNCTION_117	CALL_14
0x400eeaf	      0xe800000000	                          call 0x400eeb4	     10132	tc-i386.c	FUNCTION_117	CALL_14
0x400eeb4	            0xeb18	                           jmp 0x400eece	     10132	tc-i386.c	FUNCTION_117	CALL_14
0x400eeb6	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      9992	tc-i386.c	FUNCTION_117	IF_2
0x400eeba	          0x4885ff	                           test rdi, rdi	      9992	tc-i386.c	FUNCTION_117	IF_2
0x400eebd	     0xf8561feffff	                           jne 0x400ed24	      9992	tc-i386.c	FUNCTION_117	IF_2
0x400eec3	            0xebb9	                           jmp 0x400ee7e	      9992	tc-i386.c	FUNCTION_117	IF_2
0x400eec5	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	     10060	tc-i386.c	FUNCTION_117	IF_9
0x400eec9	      0xe9bbfeffff	                           jmp 0x400ed89	     10060	tc-i386.c	FUNCTION_117	IF_9
0x400eece	        0x4883c418	                           add rsp, 0x18	     10133	tc-i386.c	FUNCTION_117
0x400eed2	              0x5b	                                 pop rbx	     10133	tc-i386.c	FUNCTION_117
0x400eed3	              0x5d	                                 pop rbp	     10133	tc-i386.c	FUNCTION_117
0x400eed4	            0x415c	                                 pop r12	     10133	tc-i386.c	FUNCTION_117
0x400eed6	            0x415d	                                 pop r13	     10133	tc-i386.c	FUNCTION_117
0x400eed8	            0x415e	                                 pop r14	     10133	tc-i386.c	FUNCTION_117
0x400eeda	            0x415f	                                 pop r15	     10133	tc-i386.c	FUNCTION_117
0x400eedc	              0xc3	                                     ret	     10133	tc-i386.c	FUNCTION_117
check_VecOperations	functions,0:ELSE,9:FOR,0:CALL,18:SWITCH,0:WHILE,1:IF,19:DO,0	209
0x40058cc	              0x55	                                push rbp	      8493	tc-i386.c	FUNCTION_102
0x40058cd	              0x53	                                push rbx	      8493	tc-i386.c	FUNCTION_102
0x40058ce	        0x4883ec18	                           sub rsp, 0x18	      8493	tc-i386.c	FUNCTION_102
0x40058d2	          0x4889fb	                            mov rbx, rdi	      8493	tc-i386.c	FUNCTION_102
0x40058d5	          0x4889f5	                            mov rbp, rsi	      8493	tc-i386.c	FUNCTION_102
0x40058d8	    0x64488b042528	                mov rax, qword fs:[0x28]	      8493	tc-i386.c	FUNCTION_102
0x40058e1	      0x4889442408	                mov qword [rsp + 8], rax	      8493	tc-i386.c	FUNCTION_102
0x40058e6	            0x31c0	                            xor eax, eax	      8493	tc-i386.c	FUNCTION_102
0x40058e8	      0xe9e5020000	                           jmp 0x4005bd2	      8498	tc-i386.c	FUNCTION_102	WHILE_1
0x40058ed	            0x3c7b	                            cmp al, 0x7b	      8502	tc-i386.c	FUNCTION_102	WHILE_1	IF_1
0x40058ef	     0xf85b2020000	                           jne 0x4005ba7	      8502	tc-i386.c	FUNCTION_102	WHILE_1	IF_1
0x40058f5	        0x488d4301	                      lea rax, [rbx + 1]	      8504	tc-i386.c	FUNCTION_102	WHILE_1	IF_1
0x40058f9	      0xbf00000000	                              mov edi, 0	      8507	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	CALL_1
0x40058fe	      0xb903000000	                              mov ecx, 3	      8507	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	CALL_1
0x4005903	          0x4889c6	                            mov rsi, rax	      8507	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	CALL_1
0x4005906	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      8507	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	CALL_1
0x4005908	           0xf97c1	                                 seta cl	      8507	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	CALL_1
0x400590b	           0xf92c2	                                 setb dl	      8507	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	CALL_1
0x400590e	            0x38d1	                              cmp cl, dl	      8507	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	CALL_1
0x4005910	     0xf85a2000000	                           jne 0x40059b8	      8507	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	CALL_1
0x4005916	    0x48833d000000	               cmp qword [0x0400591e], 0	      8511	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	IF_3
0x400591e	     0xf85c5010000	                           jne 0x4005ae9	      8511	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	IF_3
0x4005924	        0x488d4304	                      lea rax, [rbx + 4]	      8514	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2
0x4005928	         0xfb65304	               movzx edx, byte [rbx + 4]	      8515	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	IF_4
0x400592c	          0x80fa38	                            cmp dl, 0x38	      8515	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	IF_4
0x400592f	            0x744e	                            je 0x400597f	      8515	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	IF_4
0x4005931	          0x80fa34	                            cmp dl, 0x34	      8517	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_1	IF_5
0x4005934	            0x7450	                            je 0x4005986	      8517	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_1	IF_5
0x4005936	          0x80fa32	                            cmp dl, 0x32	      8519	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_2	IF_6
0x4005939	            0x7452	                            je 0x400598d	      8519	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_2	IF_6
0x400593b	          0x80fa31	                            cmp dl, 0x31	      8521	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_3	IF_7
0x400593e	            0x7511	                           jne 0x4005951	      8521	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_3	IF_7
0x4005940	        0x807b0536	                cmp byte [rbx + 5], 0x36	      8522	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_3	IF_7
0x4005944	            0x750b	                           jne 0x4005951	      8522	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_3	IF_7
0x4005946	        0x488d4305	                      lea rax, [rbx + 5]	      8525	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_3	IF_7
0x400594a	      0xba10000000	                           mov edx, 0x10	      8524	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_3	IF_7
0x400594f	            0xeb41	                           jmp 0x4005992	      8525	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_3	IF_7
0x4005951	      0xba05000000	                              mov edx, 5	      8529	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_4	CALL_3
0x4005956	      0xbe00000000	                              mov esi, 0	      8529	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_4	CALL_3
0x400595b	      0xbf00000000	                              mov edi, 0	      8529	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_4	CALL_3
0x4005960	      0xe800000000	                          call 0x4005965	      8529	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_4	CALL_3
0x4005965	          0x4889de	                            mov rsi, rbx	      8529	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_4	CALL_3
0x4005968	          0x4889c7	                            mov rdi, rax	      8529	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_4	CALL_3
0x400596b	      0xb800000000	                              mov eax, 0	      8529	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_4	CALL_3
0x4005970	      0xe800000000	                          call 0x4005975	      8529	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_4	CALL_3
0x4005975	      0xb800000000	                              mov eax, 0	      8530	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_4
0x400597a	      0xe9b7020000	                           jmp 0x4005c36	      8530	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_4
0x400597f	      0xba08000000	                              mov edx, 8	      8516	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	IF_4
0x4005984	            0xeb0c	                           jmp 0x4005992	      8516	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	IF_4
0x4005986	      0xba04000000	                              mov edx, 4	      8518	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_1	IF_5
0x400598b	            0xeb05	                           jmp 0x4005992	      8518	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_1	IF_5
0x400598d	      0xba02000000	                              mov edx, 2	      8520	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2	ELSE_2	IF_6
0x4005992	        0x4883c001	                              add rax, 1	      8532	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2
0x4005996	    0x891500000000	            mov dword [0x0400599c], edx 	      8534	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2
0x400599c	    0x8b1500000000	            mov edx, dword [0x040059a2] 	      8535	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2
0x40059a2	    0x891500000000	            mov dword [0x040059a8], edx 	      8535	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2
0x40059a8	    0x48c705000000	               mov qword [0x040059b3], 0	      8536	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2
0x40059b3	      0xe9aa010000	                           jmp 0x4005b62	      8536	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_2
0x40059b8	          0x4889e6	                            mov rsi, rsp	      8539	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	CALL_4
0x40059bb	          0x4889c7	                            mov rdi, rax	      8539	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	CALL_4
0x40059be	      0xe8f6fdffff	                 call sym.parse_register	      8539	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	CALL_4
0x40059c3	          0x4885c0	                           test rax, rax	      8539	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	CALL_4
0x40059c6	     0xf84d3000000	                            je 0x4005a9f	      8539	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	CALL_4
0x40059cc	        0xf6400808	                  test byte [rax + 8], 8	      8542	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9
0x40059d0	            0x7406	                            je 0x40059d8	      8542	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9
0x40059d2	        0x80781100	                cmp byte [rax + 0x11], 0	      8542	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9
0x40059d6	            0x753b	                           jne 0x4005a13	      8542	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9
0x40059d8	          0x488b28	                    mov rbp, qword [rax]	      8544	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9	CALL_6
0x40059db	    0x488b1d000000	            mov rbx, qword [0x040059e2] 	      8544	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9	CALL_6
0x40059e2	      0xba05000000	                              mov edx, 5	      8544	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9	CALL_6
0x40059e7	      0xbe00000000	                              mov esi, 0	      8544	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9	CALL_6
0x40059ec	      0xbf00000000	                              mov edi, 0	      8544	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9	CALL_6
0x40059f1	      0xe800000000	                          call 0x40059f6	      8544	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9	CALL_6
0x40059f6	          0x4889ea	                            mov rdx, rbp	      8544	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9	CALL_6
0x40059f9	          0x4889de	                            mov rsi, rbx	      8544	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9	CALL_6
0x40059fc	          0x4889c7	                            mov rdi, rax	      8544	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9	CALL_6
0x40059ff	      0xb800000000	                              mov eax, 0	      8544	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9	CALL_6
0x4005a04	      0xe800000000	                          call 0x4005a09	      8544	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9	CALL_6
0x4005a09	      0xb800000000	                              mov eax, 0	      8546	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9
0x4005a0e	      0xe923020000	                           jmp 0x4005c36	      8546	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_9
0x4005a13	    0x488b15000000	            mov rdx, qword [0x04005a1a] 	      8549	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_10
0x4005a1a	          0x4885d2	                           test rdx, rdx	      8549	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_10
0x4005a1d	            0x752a	                           jne 0x4005a49	      8549	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_10
0x4005a1f	    0x488905000000	            mov qword [0x04005a26], rax 	      8551	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_10
0x4005a26	    0xc70500000000	               mov dword [0x04005a30], 0	      8552	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_10
0x4005a30	    0x8b0500000000	            mov eax, dword [0x04005a36] 	      8553	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_10
0x4005a36	    0x890500000000	            mov dword [0x04005a3c], eax 	      8553	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_10
0x4005a3c	    0x48c705000000	               mov qword [0x04005a47], 0	      8554	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_10
0x4005a47	            0xeb4d	                           jmp 0x4005a96	      8554	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	IF_10
0x4005a49	        0x48833a00	                      cmp qword [rdx], 0	      8558	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_11
0x4005a4d	     0xf8596000000	                           jne 0x4005ae9	      8558	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_11
0x4005a53	          0x488902	                    mov qword [rdx], rax	      8561	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6
0x4005a56	    0x488b05000000	            mov rax, qword [0x04005a5d] 	      8565	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_12
0x4005a5d	    0x8b3500000000	            mov esi, dword [0x04005a63] 	      8565	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_12
0x4005a63	          0x39700c	              cmp dword [rax + 0xc], esi	      8565	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_12
0x4005a66	            0x742e	                            je 0x4005a96	      8565	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_12
0x4005a68	      0xba05000000	                              mov edx, 5	      8567	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_12	CALL_8
0x4005a6d	      0xbe00000000	                              mov esi, 0	      8567	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_12	CALL_8
0x4005a72	      0xbf00000000	                              mov edi, 0	      8567	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_12	CALL_8
0x4005a77	      0xe800000000	                          call 0x4005a7c	      8567	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_12	CALL_8
0x4005a7c	          0x4889de	                            mov rsi, rbx	      8567	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_12	CALL_8
0x4005a7f	          0x4889c7	                            mov rdi, rax	      8567	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_12	CALL_8
0x4005a82	      0xb800000000	                              mov eax, 0	      8567	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_12	CALL_8
0x4005a87	      0xe800000000	                          call 0x4005a8c	      8567	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_12	CALL_8
0x4005a8c	      0xb800000000	                              mov eax, 0	      8568	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_12
0x4005a91	      0xe9a0010000	                           jmp 0x4005c36	      8568	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8	ELSE_6	IF_12
0x4005a96	        0x488b0424	                    mov rax, qword [rsp]	      8572	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8
0x4005a9a	      0xe9c3000000	                           jmp 0x4005b62	      8572	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_5	IF_8
0x4005a9f	        0x807b017a	                cmp byte [rbx + 1], 0x7a	      8575	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13
0x4005aa3	     0xf85fe000000	                           jne 0x4005ba7	      8575	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13
0x4005aa9	    0x488b05000000	            mov rax, qword [0x04005ab0] 	      8577	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	IF_14
0x4005ab0	          0x4885c0	                           test rax, rax	      8577	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	IF_14
0x4005ab3	            0x752e	                           jne 0x4005ae3	      8577	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	IF_14
0x4005ab5	    0x48c705000000	               mov qword [0x04005ac0], 0	      8579	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	IF_14
0x4005ac0	    0xc70500000000	               mov dword [0x04005aca], 1	      8580	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	IF_14
0x4005aca	    0x8b0500000000	            mov eax, dword [0x04005ad0] 	      8581	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	IF_14
0x4005ad0	    0x890500000000	            mov dword [0x04005ad6], eax 	      8581	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	IF_14
0x4005ad6	    0x48c705000000	               mov qword [0x04005ae1], 0	      8582	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	IF_14
0x4005ae1	            0xeb7b	                           jmp 0x4005b5e	      8582	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	IF_14
0x4005ae3	        0x83780800	                  cmp dword [rax + 8], 0	      8586	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_15
0x4005ae7	            0x742e	                            je 0x4005b17	      8586	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_15
0x4005ae9	      0xba05000000	                              mov edx, 5	      8589	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_15	CALL_10
0x4005aee	      0xbe00000000	                              mov esi, 0	      8589	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_15	CALL_10
0x4005af3	      0xbf00000000	                              mov edi, 0	      8589	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_15	CALL_10
0x4005af8	      0xe800000000	                          call 0x4005afd	      8589	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_15	CALL_10
0x4005afd	          0x4889de	                            mov rsi, rbx	      8589	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_15	CALL_10
0x4005b00	          0x4889c7	                            mov rdi, rax	      8589	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_15	CALL_10
0x4005b03	      0xb800000000	                              mov eax, 0	      8589	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_15	CALL_10
0x4005b08	      0xe800000000	                          call 0x4005b0d	      8589	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_15	CALL_10
0x4005b0d	      0xb800000000	                              mov eax, 0	      8590	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_15
0x4005b12	      0xe91f010000	                           jmp 0x4005c36	      8590	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_15
0x4005b17	    0xc74008010000	                  mov dword [rax + 8], 1	      8593	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8
0x4005b1e	    0x488b05000000	            mov rax, qword [0x04005b25] 	      8597	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_16
0x4005b25	    0x8b3d00000000	            mov edi, dword [0x04005b2b] 	      8597	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_16
0x4005b2b	          0x39780c	              cmp dword [rax + 0xc], edi	      8597	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_16
0x4005b2e	            0x742e	                            je 0x4005b5e	      8597	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_16
0x4005b30	      0xba05000000	                              mov edx, 5	      8599	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_16	CALL_12
0x4005b35	      0xbe00000000	                              mov esi, 0	      8599	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_16	CALL_12
0x4005b3a	      0xbf00000000	                              mov edi, 0	      8599	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_16	CALL_12
0x4005b3f	      0xe800000000	                          call 0x4005b44	      8599	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_16	CALL_12
0x4005b44	          0x4889de	                            mov rsi, rbx	      8599	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_16	CALL_12
0x4005b47	          0x4889c7	                            mov rdi, rax	      8599	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_16	CALL_12
0x4005b4a	      0xb800000000	                              mov eax, 0	      8599	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_16	CALL_12
0x4005b4f	      0xe800000000	                          call 0x4005b54	      8599	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_16	CALL_12
0x4005b54	      0xb800000000	                              mov eax, 0	      8601	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_16
0x4005b59	      0xe9d8000000	                           jmp 0x4005c36	      8601	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13	ELSE_8	IF_16
0x4005b5e	        0x488d4302	                      lea rax, [rbx + 2]	      8605	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_7	IF_13
0x4005b62	          0x80387d	                    cmp byte [rax], 0x7d	      8610	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_9	IF_17
0x4005b65	            0x742e	                            je 0x4005b95	      8610	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_9	IF_17
0x4005b67	      0xba05000000	                              mov edx, 5	      8612	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_9	IF_17	CALL_14
0x4005b6c	      0xbe00000000	                              mov esi, 0	      8612	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_9	IF_17	CALL_14
0x4005b71	      0xbf00000000	                              mov edi, 0	      8612	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_9	IF_17	CALL_14
0x4005b76	      0xe800000000	                          call 0x4005b7b	      8612	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_9	IF_17	CALL_14
0x4005b7b	          0x4889de	                            mov rsi, rbx	      8612	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_9	IF_17	CALL_14
0x4005b7e	          0x4889c7	                            mov rdi, rax	      8612	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_9	IF_17	CALL_14
0x4005b81	      0xb800000000	                              mov eax, 0	      8612	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_9	IF_17	CALL_14
0x4005b86	      0xe800000000	                          call 0x4005b8b	      8612	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_9	IF_17	CALL_14
0x4005b8b	      0xb800000000	                              mov eax, 0	      8613	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_9	IF_17
0x4005b90	      0xe9a1000000	                           jmp 0x4005c36	      8613	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	ELSE_9	IF_17
0x4005b95	        0x488d5002	                      lea rdx, [rax + 2]	      8620	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_18
0x4005b99	        0x488d5801	                      lea rbx, [rax + 1]	      8620	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_18
0x4005b9d	        0x80780120	                cmp byte [rax + 1], 0x20	      8620	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_18
0x4005ba1	        0x480f44da	                          cmove rbx, rdx	      8620	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_18
0x4005ba5	            0xeb2b	                           jmp 0x4005bd2	      8620	tc-i386.c	FUNCTION_102	WHILE_1	IF_1	IF_18
0x4005ba7	      0xba05000000	                              mov edx, 5	      8626	tc-i386.c	FUNCTION_102	WHILE_1	CALL_16
0x4005bac	      0xbe00000000	                              mov esi, 0	      8626	tc-i386.c	FUNCTION_102	WHILE_1	CALL_16
0x4005bb1	      0xbf00000000	                              mov edi, 0	      8626	tc-i386.c	FUNCTION_102	WHILE_1	CALL_16
0x4005bb6	      0xe800000000	                          call 0x4005bbb	      8626	tc-i386.c	FUNCTION_102	WHILE_1	CALL_16
0x4005bbb	          0x4889de	                            mov rsi, rbx	      8626	tc-i386.c	FUNCTION_102	WHILE_1	CALL_16
0x4005bbe	          0x4889c7	                            mov rdi, rax	      8626	tc-i386.c	FUNCTION_102	WHILE_1	CALL_16
0x4005bc1	      0xb800000000	                              mov eax, 0	      8626	tc-i386.c	FUNCTION_102	WHILE_1	CALL_16
0x4005bc6	      0xe800000000	                          call 0x4005bcb	      8626	tc-i386.c	FUNCTION_102	WHILE_1	CALL_16
0x4005bcb	      0xb800000000	                              mov eax, 0	      8627	tc-i386.c	FUNCTION_102	WHILE_1
0x4005bd0	            0xeb64	                           jmp 0x4005c36	      8627	tc-i386.c	FUNCTION_102	WHILE_1
0x4005bd2	           0xfb603	                   movzx eax, byte [rbx]	      8498	tc-i386.c	FUNCTION_102	WHILE_1
0x4005bd5	            0x84c0	                             test al, al	      8498	tc-i386.c	FUNCTION_102	WHILE_1
0x4005bd7	            0x7412	                            je 0x4005beb	      8498	tc-i386.c	FUNCTION_102	WHILE_1
0x4005bd9	          0x4885ed	                           test rbp, rbp	      8499	tc-i386.c	FUNCTION_102	WHILE_1
0x4005bdc	     0xf840bfdffff	                            je 0x40058ed	      8499	tc-i386.c	FUNCTION_102	WHILE_1
0x4005be2	          0x4839eb	                            cmp rbx, rbp	      8499	tc-i386.c	FUNCTION_102	WHILE_1
0x4005be5	     0xf8202fdffff	                            jb 0x40058ed	      8499	tc-i386.c	FUNCTION_102	WHILE_1
0x4005beb	    0x488b15000000	            mov rdx, qword [0x04005bf2] 	      8630	tc-i386.c	FUNCTION_102	IF_19
0x4005bf2	          0x4885d2	                           test rdx, rdx	      8630	tc-i386.c	FUNCTION_102	IF_19
0x4005bf5	            0x7437	                            je 0x4005c2e	      8630	tc-i386.c	FUNCTION_102	IF_19
0x4005bf7	          0x4889d8	                            mov rax, rbx	      8630	tc-i386.c	FUNCTION_102	IF_19
0x4005bfa	        0x837a0800	                  cmp dword [rdx + 8], 0	      8630	tc-i386.c	FUNCTION_102	IF_19
0x4005bfe	            0x7436	                            je 0x4005c36	      8630	tc-i386.c	FUNCTION_102	IF_19
0x4005c00	        0x48833a00	                      cmp qword [rdx], 0	      8630	tc-i386.c	FUNCTION_102	IF_19
0x4005c04	            0x752d	                           jne 0x4005c33	      8630	tc-i386.c	FUNCTION_102	IF_19
0x4005c06	      0xba05000000	                              mov edx, 5	      8632	tc-i386.c	FUNCTION_102	IF_19	CALL_18
0x4005c0b	      0xbe00000000	                              mov esi, 0	      8632	tc-i386.c	FUNCTION_102	IF_19	CALL_18
0x4005c10	      0xbf00000000	                              mov edi, 0	      8632	tc-i386.c	FUNCTION_102	IF_19	CALL_18
0x4005c15	      0xe800000000	                          call 0x4005c1a	      8632	tc-i386.c	FUNCTION_102	IF_19	CALL_18
0x4005c1a	          0x4889c7	                            mov rdi, rax	      8632	tc-i386.c	FUNCTION_102	IF_19	CALL_18
0x4005c1d	      0xb800000000	                              mov eax, 0	      8632	tc-i386.c	FUNCTION_102	IF_19	CALL_18
0x4005c22	      0xe800000000	                          call 0x4005c27	      8632	tc-i386.c	FUNCTION_102	IF_19	CALL_18
0x4005c27	      0xb800000000	                              mov eax, 0	      8633	tc-i386.c	FUNCTION_102	IF_19
0x4005c2c	            0xeb08	                           jmp 0x4005c36	      8633	tc-i386.c	FUNCTION_102	IF_19
0x4005c2e	          0x4889d8	                            mov rax, rbx	      8633	tc-i386.c	FUNCTION_102	IF_19
0x4005c31	            0xeb03	                           jmp 0x4005c36	      8633	tc-i386.c	FUNCTION_102	IF_19
0x4005c33	          0x4889d8	                            mov rax, rbx	      8633	tc-i386.c	FUNCTION_102	IF_19
0x4005c36	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      8637	tc-i386.c	FUNCTION_102
0x4005c3b	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      8637	tc-i386.c	FUNCTION_102
0x4005c44	            0x7405	                            je 0x4005c4b	      8637	tc-i386.c	FUNCTION_102
0x4005c46	      0xe800000000	                          call 0x4005c4b	      8637	tc-i386.c	FUNCTION_102
0x4005c4b	        0x4883c418	                           add rsp, 0x18	      8637	tc-i386.c	FUNCTION_102
0x4005c4f	              0x5b	                                 pop rbx	      8637	tc-i386.c	FUNCTION_102
0x4005c50	              0x5d	                                 pop rbp	      8637	tc-i386.c	FUNCTION_102
0x4005c51	              0xc3	                                     ret	      8637	tc-i386.c	FUNCTION_102
