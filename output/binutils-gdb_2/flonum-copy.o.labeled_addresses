flonum_copy	IF,3:DO,0:ELSE,2:WHILE,0:FOR,0:SWITCH,0:functions,0:CALL,3	55
0x4000040	            0x4154	                                push r12	        25	flonum-copy.c	FUNCTION_1
0x4000042	              0x55	                                push rbp	        25	flonum-copy.c	FUNCTION_1
0x4000043	              0x53	                                push rbx	        25	flonum-copy.c	FUNCTION_1
0x4000044	         0xfb64720	           movzx eax, byte [rdi + 0x20] 	        29	flonum-copy.c	FUNCTION_1
0x4000048	          0x884620	               mov byte [rsi + 0x20], al	        29	flonum-copy.c	FUNCTION_1
0x400004b	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	        30	flonum-copy.c	FUNCTION_1
0x400004f	          0x488b07	                    mov rax, qword [rdi]	        30	flonum-copy.c	FUNCTION_1
0x4000052	          0x4839c3	                            cmp rbx, rax	        32	flonum-copy.c	FUNCTION_1	IF_1
0x4000055	            0x7310	                           jae 0x4000067	        32	flonum-copy.c	FUNCTION_1	IF_1
0x4000057	          0x488b06	                    mov rax, qword [rsi]	        34	flonum-copy.c	FUNCTION_1	IF_1
0x400005a	        0x4883e802	                              sub rax, 2	        34	flonum-copy.c	FUNCTION_1	IF_1
0x400005e	        0x48894610	             mov qword [rsi + 0x10], rax	        34	flonum-copy.c	FUNCTION_1	IF_1
0x4000062	      0xe986000000	                           jmp 0x40000ed	        34	flonum-copy.c	FUNCTION_1	IF_1
0x4000067	          0x4889f5	                            mov rbp, rsi	        34	flonum-copy.c	FUNCTION_1	IF_1
0x400006a	          0x4989fc	                            mov r12, rdi	        34	flonum-copy.c	FUNCTION_1	IF_1
0x400006d	          0x4829c3	                            sub rbx, rax	        30	flonum-copy.c	FUNCTION_1
0x4000070	          0x48d1fb	                              sar rbx, 1	        30	flonum-copy.c	FUNCTION_1
0x4000073	          0x488b3e	                    mov rdi, qword [rsi]	        38	flonum-copy.c	FUNCTION_1	ELSE_1
0x4000076	        0x488b5608	                mov rdx, qword [rsi + 8]	        38	flonum-copy.c	FUNCTION_1	ELSE_1
0x400007a	          0x4829fa	                            sub rdx, rdi	        38	flonum-copy.c	FUNCTION_1	ELSE_1
0x400007d	          0x48d1fa	                              sar rdx, 1	        38	flonum-copy.c	FUNCTION_1	ELSE_1
0x4000080	            0x39d3	                            cmp ebx, edx	        41	flonum-copy.c	FUNCTION_1	ELSE_1	IF_2
0x4000082	            0x7744	                            ja 0x40000c8	        41	flonum-copy.c	FUNCTION_1	ELSE_1	IF_2
0x4000084	            0x7313	                           jae 0x4000099	        47	flonum-copy.c	FUNCTION_1	ELSE_1	IF_2	IF_3
0x4000086	            0x29da	                            sub edx, ebx	        90	string3.h	FUNCTION_5	CALL_6
0x4000088	            0x89d8	                            mov eax, ebx	        90	string3.h	FUNCTION_5	CALL_6
0x400008a	      0x488d7c4702	              lea rdi, [rdi + rax*2 + 2]	        90	string3.h	FUNCTION_5	CALL_6
0x400008f	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_5	CALL_6
0x4000094	      0xe800000000	                          call 0x4000099	        90	string3.h	FUNCTION_5	CALL_6
0x4000099	        0x488b7d00	                    mov rdi, qword [rbp]	        53	string3.h	FUNCTION_2	CALL_3
0x400009d	          0x8d5301	                      lea edx, [rbx + 1]	        53	string3.h	FUNCTION_2	CALL_3
0x40000a0	          0x4801d2	                            add rdx, rdx	        53	string3.h	FUNCTION_2	CALL_3
0x40000a3	        0x498b3424	                    mov rsi, qword [r12]	        53	string3.h	FUNCTION_2	CALL_3
0x40000a7	      0xe800000000	                          call 0x40000ac	        53	string3.h	FUNCTION_2	CALL_3
0x40000ac	      0x498b442418	            mov rax, qword [r12 + 0x18] 	        55	flonum-copy.c	FUNCTION_1	ELSE_1	IF_2
0x40000b1	        0x48894518	            mov qword [rbp + 0x18], rax 	        55	flonum-copy.c	FUNCTION_1	ELSE_1	IF_2
0x40000b5	      0x498b442410	            mov rax, qword [r12 + 0x10] 	        56	flonum-copy.c	FUNCTION_1	ELSE_1	IF_2
0x40000ba	        0x492b0424	                    sub rax, qword [r12]	        56	flonum-copy.c	FUNCTION_1	ELSE_1	IF_2
0x40000be	        0x48034500	                    add rax, qword [rbp]	        56	flonum-copy.c	FUNCTION_1	ELSE_1	IF_2
0x40000c2	        0x48894510	            mov qword [rbp + 0x10], rax 	        56	flonum-copy.c	FUNCTION_1	ELSE_1	IF_2
0x40000c6	            0xeb25	                           jmp 0x40000ed	        56	flonum-copy.c	FUNCTION_1	ELSE_1	IF_2
0x40000c8	            0x29d3	                            sub ebx, edx	        62	flonum-copy.c	FUNCTION_1	ELSE_1	ELSE_2
0x40000ca	          0x8d5201	                      lea edx, [rdx + 1]	        53	string3.h	FUNCTION_2	CALL_3
0x40000cd	          0x4801d2	                            add rdx, rdx	        53	string3.h	FUNCTION_2	CALL_3
0x40000d0	          0x4863db	                         movsxd rbx, ebx	        53	string3.h	FUNCTION_2	CALL_3
0x40000d3	        0x488d3458	                  lea rsi, [rax + rbx*2]	        53	string3.h	FUNCTION_2	CALL_3
0x40000d7	      0xe800000000	                          call 0x40000dc	        53	string3.h	FUNCTION_2	CALL_3
0x40000dc	        0x488b4508	                mov rax, qword [rbp + 8]	        66	flonum-copy.c	FUNCTION_1	ELSE_1	ELSE_2
0x40000e0	        0x48894510	            mov qword [rbp + 0x10], rax 	        66	flonum-copy.c	FUNCTION_1	ELSE_1	ELSE_2
0x40000e4	      0x49035c2418	             add rbx, qword [r12 + 0x18]	        67	flonum-copy.c	FUNCTION_1	ELSE_1	ELSE_2
0x40000e9	        0x48895d18	            mov qword [rbp + 0x18], rbx 	        67	flonum-copy.c	FUNCTION_1	ELSE_1	ELSE_2
0x40000ed	              0x5b	                                 pop rbx	        70	flonum-copy.c	FUNCTION_1
0x40000ee	              0x5d	                                 pop rbp	        70	flonum-copy.c	FUNCTION_1
0x40000ef	            0x415c	                                 pop r12	        70	flonum-copy.c	FUNCTION_1
0x40000f1	              0xc3	                                     ret	        70	flonum-copy.c	FUNCTION_1
