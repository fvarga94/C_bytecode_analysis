_bfd_elf_plt_get_reloc_section	FOR,0:ELSE,0:IF,2:WHILE,0:DO,0:SWITCH,0:CALL,4:functions,0	25
0x4005597	              0x53	                                push rbx	      3591	elf.c	FUNCTION_50
0x4005598	          0x4889fb	                            mov rbx, rdi	      3591	elf.c	FUNCTION_50
0x400559b	          0x4889f0	                            mov rax, rsi	      3591	elf.c	FUNCTION_50
0x400559e	        0x488b5708	                mov rdx, qword [rdi + 8]	      3594	elf.c	FUNCTION_50	IF_1	CALL_1
0x40055a2	    0x488b92680300	           mov rdx, qword [rdx + 0x368] 	      3594	elf.c	FUNCTION_50	IF_1	CALL_1
0x40055a9	    0xf68289030000	              test byte [rdx + 0x389], 2	      3594	elf.c	FUNCTION_50	IF_1	CALL_1
0x40055b0	            0x742d	                            je 0x40055df	      3594	elf.c	FUNCTION_50	IF_1	CALL_1
0x40055b2	      0xbf00000000	                              mov edi, 0	      3595	elf.c	FUNCTION_50	IF_1	CALL_2
0x40055b7	      0xb905000000	                              mov ecx, 5	      3595	elf.c	FUNCTION_50	IF_1	CALL_2
0x40055bc	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3595	elf.c	FUNCTION_50	IF_1	CALL_2
0x40055be	           0xf97c1	                                 seta cl	      3595	elf.c	FUNCTION_50	IF_1	CALL_2
0x40055c1	           0xf92c2	                                 setb dl	      3595	elf.c	FUNCTION_50	IF_1	CALL_2
0x40055c4	            0x38d1	                              cmp cl, dl	      3595	elf.c	FUNCTION_50	IF_1	CALL_2
0x40055c6	            0x7517	                           jne 0x40055df	      3595	elf.c	FUNCTION_50	IF_1	CALL_2
0x40055c8	      0xbe00000000	                              mov esi, 0	      3600	elf.c	FUNCTION_50	IF_1	CALL_3
0x40055cd	          0x4889df	                            mov rdi, rbx	      3600	elf.c	FUNCTION_50	IF_1	CALL_3
0x40055d0	      0xe800000000	                          call 0x40055d5	      3600	elf.c	FUNCTION_50	IF_1	CALL_3
0x40055d5	          0x4885c0	                           test rax, rax	      3601	elf.c	FUNCTION_50	IF_1	IF_2
0x40055d8	            0x7510	                           jne 0x40055ea	      3601	elf.c	FUNCTION_50	IF_1	IF_2
0x40055da	      0xb800000000	                              mov eax, 0	      3603	elf.c	FUNCTION_50	IF_1
0x40055df	          0x4889c6	                            mov rsi, rax	      3606	elf.c	FUNCTION_50	CALL_4
0x40055e2	          0x4889df	                            mov rdi, rbx	      3606	elf.c	FUNCTION_50	CALL_4
0x40055e5	      0xe800000000	                          call 0x40055ea	      3606	elf.c	FUNCTION_50	CALL_4
0x40055ea	              0x5b	                                 pop rbx	      3607	elf.c	FUNCTION_50
0x40055eb	              0xc3	                                     ret	      3607	elf.c	FUNCTION_50
_bfd_elf_is_local_label_name	FOR,1:ELSE,0:IF,7:WHILE,0:DO,0:SWITCH,0:CALL,2:functions,0	56
0x400d1d2	           0xfb616	                   movzx edx, byte [rsi]	      8650	elf.c	FUNCTION_100	IF_1
0x400d1d5	          0x80fa2e	                            cmp dl, 0x2e	      8650	elf.c	FUNCTION_100	IF_1
0x400d1d8	            0x7515	                           jne 0x400d1ef	      8650	elf.c	FUNCTION_100	IF_1
0x400d1da	         0xfb64601	               movzx eax, byte [rsi + 1]	      8650	elf.c	FUNCTION_100	IF_1
0x400d1de	            0x3c4c	                            cmp al, 0x4c	      8650	elf.c	FUNCTION_100	IF_1
0x400d1e0	     0xf8487000000	                            je 0x400d26d	      8650	elf.c	FUNCTION_100	IF_1
0x400d1e6	            0x3c2e	                            cmp al, 0x2e	      8651	elf.c	FUNCTION_100	IF_1
0x400d1e8	           0xf94c0	                                 sete al	      8651	elf.c	FUNCTION_100	IF_1
0x400d1eb	           0xfb6c0	                           movzx eax, al	      8651	elf.c	FUNCTION_100	IF_1
0x400d1ee	              0xc3	                                     ret	      8651	elf.c	FUNCTION_100	IF_1
0x400d1ef	          0x80fa5f	                            cmp dl, 0x5f	      8664	elf.c	FUNCTION_100	IF_3
0x400d1f2	            0x7520	                           jne 0x400d214	      8664	elf.c	FUNCTION_100	IF_3
0x400d1f4	      0xb800000000	                              mov eax, 0	      8708	elf.c	FUNCTION_100
0x400d1f9	        0x807e012e	                cmp byte [rsi + 1], 0x2e	      8664	elf.c	FUNCTION_100	IF_3
0x400d1fd	     0xf8581000000	                           jne 0x400d284	      8664	elf.c	FUNCTION_100	IF_3
0x400d203	        0x807e024c	                cmp byte [rsi + 2], 0x4c	      8664	elf.c	FUNCTION_100	IF_3
0x400d207	            0x757b	                           jne 0x400d284	      8664	elf.c	FUNCTION_100	IF_3
0x400d209	        0x807e035f	                cmp byte [rsi + 3], 0x5f	      8651	elf.c	FUNCTION_100	IF_1
0x400d20d	           0xf94c0	                                 sete al	      8651	elf.c	FUNCTION_100	IF_1
0x400d210	           0xfb6c0	                           movzx eax, al	      8651	elf.c	FUNCTION_100	IF_1
0x400d213	              0xc3	                                     ret	      8651	elf.c	FUNCTION_100	IF_1
0x400d214	      0xb800000000	                              mov eax, 0	      8708	elf.c	FUNCTION_100
0x400d219	          0x80fa4c	                            cmp dl, 0x4c	      8677	elf.c	FUNCTION_100	IF_4	CALL_1
0x400d21c	            0x7566	                           jne 0x400d284	      8677	elf.c	FUNCTION_100	IF_4	CALL_1
0x400d21e	         0xfb65601	               movzx edx, byte [rsi + 1]	      8677	elf.c	FUNCTION_100	IF_4	CALL_1
0x400d222	    0xf68412000000	                test byte [rdx + rdx], 4	      8677	elf.c	FUNCTION_100	IF_4	CALL_1
0x400d22a	            0x7458	                            je 0x400d284	      8677	elf.c	FUNCTION_100	IF_4	CALL_1
0x400d22c	        0x488d7e02	                      lea rdi, [rsi + 2]	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x400d230	         0xfb65602	               movzx edx, byte [rsi + 2]	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x400d234	            0x84d2	                             test dl, dl	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x400d236	            0x743b	                            je 0x400d273	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x400d238	          0x4889f9	                            mov rcx, rdi	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x400d23b	          0x8d72ff	                      lea esi, [rdx - 1]	      8685	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5
0x400d23e	        0x4080fe01	                              cmp sil, 1	      8685	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5
0x400d242	            0x770f	                            ja 0x400d253	      8685	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5
0x400d244	          0x4839cf	                            cmp rdi, rcx	      8687	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5	IF_6
0x400d247	            0x7505	                           jne 0x400d24e	      8687	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5	IF_6
0x400d249	          0x80fa01	                               cmp dl, 1	      8687	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5	IF_6
0x400d24c	            0x742b	                            je 0x400d279	      8687	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5	IF_6
0x400d24e	      0xb801000000	                              mov eax, 1	      8696	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5
0x400d253	           0xfb6d2	                           movzx edx, dl	      8699	elf.c	FUNCTION_100	IF_4	FOR_1	IF_7	CALL_2
0x400d256	    0xf68412000000	                test byte [rdx + rdx], 4	      8699	elf.c	FUNCTION_100	IF_4	FOR_1	IF_7	CALL_2
0x400d25e	            0x741f	                            je 0x400d27f	      8699	elf.c	FUNCTION_100	IF_4	FOR_1	IF_7	CALL_2
0x400d260	        0x4883c101	                              add rcx, 1	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x400d264	           0xfb611	                   movzx edx, byte [rcx]	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x400d267	            0x84d2	                             test dl, dl	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x400d269	            0x75d0	                           jne 0x400d23b	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x400d26b	            0xf3c3	                                     ret	      8683	elf.c	FUNCTION_100	IF_4	FOR_1
0x400d26d	      0xb801000000	                              mov eax, 1	      8651	elf.c	FUNCTION_100	IF_1
0x400d272	              0xc3	                                     ret	      8651	elf.c	FUNCTION_100	IF_1
0x400d273	      0xb800000000	                              mov eax, 0	      8679	elf.c	FUNCTION_100	IF_4
0x400d278	              0xc3	                                     ret	      8679	elf.c	FUNCTION_100	IF_4
0x400d279	      0xb801000000	                              mov eax, 1	      8689	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5	IF_6
0x400d27e	              0xc3	                                     ret	      8689	elf.c	FUNCTION_100	IF_4	FOR_1	IF_5	IF_6
0x400d27f	      0xb800000000	                              mov eax, 0	      8701	elf.c	FUNCTION_100	IF_4	FOR_1	IF_7
0x400d284	            0xf3c3	                                     ret	      8709	elf.c	FUNCTION_100
_bfd_elf_symbol_from_bfd_symbol	FOR,0:ELSE,0:IF,4:WHILE,0:DO,0:SWITCH,0:CALL,7:functions,0	51
0x4009b8f	              0x55	                                push rbp	      6490	elf.c	FUNCTION_79
0x4009b90	              0x53	                                push rbx	      6490	elf.c	FUNCTION_79
0x4009b91	        0x4883ec08	                              sub rsp, 8	      6490	elf.c	FUNCTION_79
0x4009b95	          0x488b16	                    mov rdx, qword [rsi]	      6491	elf.c	FUNCTION_79
0x4009b98	      0x48837a2800	               cmp qword [rdx + 0x28], 0	      6500	elf.c	FUNCTION_79	IF_1
0x4009b9d	            0x7557	                           jne 0x4009bf6	      6500	elf.c	FUNCTION_79	IF_1
0x4009b9f	        0xf6421901	               test byte [rdx + 0x19], 1	      6501	elf.c	FUNCTION_79	IF_1
0x4009ba3	            0x7459	                            je 0x4009bfe	      6501	elf.c	FUNCTION_79	IF_1
0x4009ba5	        0x488b4220	            mov rax, qword [rdx + 0x20] 	      6502	elf.c	FUNCTION_79	IF_1
0x4009ba9	          0x4885c0	                           test rax, rax	      6502	elf.c	FUNCTION_79	IF_1
0x4009bac	            0x7450	                            je 0x4009bfe	      6502	elf.c	FUNCTION_79	IF_1
0x4009bae	    0x4839b8f00000	            cmp qword [rax + 0xf0], rdi 	      6508	elf.c	FUNCTION_79	IF_1	IF_2
0x4009bb5	            0x7412	                            je 0x4009bc9	      6508	elf.c	FUNCTION_79	IF_1	IF_2
0x4009bb7	        0x488b4068	            mov rax, qword [rax + 0x68] 	      6508	elf.c	FUNCTION_79	IF_1	IF_2
0x4009bbb	          0x4885c0	                           test rax, rax	      6508	elf.c	FUNCTION_79	IF_1	IF_2
0x4009bbe	            0x743e	                            je 0x4009bfe	      6508	elf.c	FUNCTION_79	IF_1	IF_2
0x4009bc0	    0x483bb8f00000	            cmp rdi, qword [rax + 0xf0] 	      6510	elf.c	FUNCTION_79	IF_1	IF_3
0x4009bc7	            0x7535	                           jne 0x4009bfe	      6510	elf.c	FUNCTION_79	IF_1	IF_3
0x4009bc9	          0x8b400c	              mov eax, dword [rax + 0xc]	      6511	elf.c	FUNCTION_79	IF_1	IF_3	CALL_1
0x4009bcc	    0x488b8ff80000	            mov rcx, qword [rdi + 0xf8] 	      6511	elf.c	FUNCTION_79	IF_1	IF_3	CALL_1
0x4009bd3	    0x488b89980c00	           mov rcx, qword [rcx + 0xc98] 	      6511	elf.c	FUNCTION_79	IF_1	IF_3	CALL_1
0x4009bda	          0x3b4148	            cmp eax, dword [rcx + 0x48] 	      6511	elf.c	FUNCTION_79	IF_1	IF_3	CALL_1
0x4009bdd	            0x7d1f	                           jge 0x4009bfe	      6511	elf.c	FUNCTION_79	IF_1	IF_3	CALL_1
0x4009bdf	            0x4898	                                    cdqe	      6512	elf.c	FUNCTION_79	IF_1	IF_3	CALL_2
0x4009be1	        0x488b4910	            mov rcx, qword [rcx + 0x10] 	      6512	elf.c	FUNCTION_79	IF_1	IF_3	CALL_2
0x4009be5	        0x488b04c1	            mov rax, qword [rcx + rax*8]	      6512	elf.c	FUNCTION_79	IF_1	IF_3	CALL_2
0x4009be9	          0x4885c0	                           test rax, rax	      6512	elf.c	FUNCTION_79	IF_1	IF_3	CALL_2
0x4009bec	            0x7410	                            je 0x4009bfe	      6512	elf.c	FUNCTION_79	IF_1	IF_3	CALL_2
0x4009bee	        0x488b4028	            mov rax, qword [rax + 0x28] 	      6513	elf.c	FUNCTION_79	IF_1	CALL_3
0x4009bf2	        0x48894228	             mov qword [rdx + 0x28], rax	      6513	elf.c	FUNCTION_79	IF_1	CALL_3
0x4009bf6	        0x488b4228	            mov rax, qword [rdx + 0x28] 	      6516	elf.c	FUNCTION_79
0x4009bfa	            0x85c0	                           test eax, eax	      6518	elf.c	FUNCTION_79	IF_4
0x4009bfc	            0x753d	                           jne 0x4009c3b	      6518	elf.c	FUNCTION_79	IF_4
0x4009bfe	          0x4889fb	                            mov rbx, rdi	      6518	elf.c	FUNCTION_79	IF_4
0x4009c01	        0x488b6a08	                mov rbp, qword [rdx + 8]	      6522	elf.c	FUNCTION_79	IF_4	CALL_4
0x4009c05	      0xba05000000	                              mov edx, 5	      6524	elf.c	FUNCTION_79	IF_4	CALL_5
0x4009c0a	      0xbe00000000	                              mov esi, 0	      6524	elf.c	FUNCTION_79	IF_4	CALL_5
0x4009c0f	      0xbf00000000	                              mov edi, 0	      6524	elf.c	FUNCTION_79	IF_4	CALL_5
0x4009c14	      0xe800000000	                          call 0x4009c19	      6524	elf.c	FUNCTION_79	IF_4	CALL_5
0x4009c19	          0x4889ea	                            mov rdx, rbp	      6522	elf.c	FUNCTION_79	IF_4	CALL_4
0x4009c1c	          0x4889de	                            mov rsi, rbx	      6522	elf.c	FUNCTION_79	IF_4	CALL_4
0x4009c1f	          0x4889c7	                            mov rdi, rax	      6522	elf.c	FUNCTION_79	IF_4	CALL_4
0x4009c22	      0xb800000000	                              mov eax, 0	      6522	elf.c	FUNCTION_79	IF_4	CALL_4
0x4009c27	      0xe800000000	                          call 0x4009c2c	      6522	elf.c	FUNCTION_79	IF_4	CALL_4
0x4009c2c	      0xbf07000000	                              mov edi, 7	      6526	elf.c	FUNCTION_79	IF_4	CALL_6
0x4009c31	      0xe800000000	                          call 0x4009c36	      6526	elf.c	FUNCTION_79	IF_4	CALL_6
0x4009c36	      0xb8ffffffff	                     mov eax, 0xffffffff	      6527	elf.c	FUNCTION_79	IF_4
0x4009c3b	        0x4883c408	                              add rsp, 8	      6540	elf.c	FUNCTION_79
0x4009c3f	              0x5b	                                 pop rbx	      6540	elf.c	FUNCTION_79
0x4009c40	              0x5d	                                 pop rbp	      6540	elf.c	FUNCTION_79
0x4009c41	              0xc3	                                     ret	      6540	elf.c	FUNCTION_79
_bfd_elfcore_make_pseudosection	FOR,0:ELSE,0:IF,2:WHILE,0:DO,0:SWITCH,0:CALL,6:functions,0	70
0x400d7b6	            0x4157	                                push r15	      9076	elf.c	FUNCTION_114
0x400d7b8	            0x4156	                                push r14	      9076	elf.c	FUNCTION_114
0x400d7ba	            0x4155	                                push r13	      9076	elf.c	FUNCTION_114
0x400d7bc	            0x4154	                                push r12	      9076	elf.c	FUNCTION_114
0x400d7be	              0x55	                                push rbp	      9076	elf.c	FUNCTION_114
0x400d7bf	              0x53	                                push rbx	      9076	elf.c	FUNCTION_114
0x400d7c0	        0x4883ec78	                           sub rsp, 0x78	      9076	elf.c	FUNCTION_114
0x400d7c4	          0x4889fd	                            mov rbp, rdi	      9076	elf.c	FUNCTION_114
0x400d7c7	          0x4989f4	                            mov r12, rsi	      9076	elf.c	FUNCTION_114
0x400d7ca	          0x4989d6	                            mov r14, rdx	      9076	elf.c	FUNCTION_114
0x400d7cd	          0x4989cd	                            mov r13, rcx	      9076	elf.c	FUNCTION_114
0x400d7d0	    0x64488b042528	                mov rax, qword fs:[0x28]	      9076	elf.c	FUNCTION_114
0x400d7d9	      0x4889442468	             mov qword [rsp + 0x68], rax	      9076	elf.c	FUNCTION_114
0x400d7de	            0x31c0	                            xor eax, eax	      9076	elf.c	FUNCTION_114
0x400d7e0	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      9034	elf.c	FUNCTION_112	CALL_1
0x400d7e7	    0x488b80900c00	           mov rax, qword [rax + 0xc90] 	      9034	elf.c	FUNCTION_112	CALL_1
0x400d7ee	        0x448b4808	                mov r9d, dword [rax + 8]	      9034	elf.c	FUNCTION_112	CALL_1
0x400d7f2	          0x4585c9	                           test r9d, r9d	      9035	elf.c	FUNCTION_112	IF_1
0x400d7f5	            0x7504	                           jne 0x400d7fb	      9035	elf.c	FUNCTION_112	IF_1
0x400d7f7	        0x448b4804	                mov r9d, dword [rax + 4]	      9036	elf.c	FUNCTION_112	CALL_2
0x400d7fb	          0x4d89e0	                             mov r8, r12	        33	stdio2.h	FUNCTION_204	CALL_1
0x400d7fe	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x400d803	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_204	CALL_1
0x400d808	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_204	CALL_1
0x400d80d	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_204	CALL_1
0x400d810	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x400d815	      0xe800000000	                          call 0x400d81a	        33	stdio2.h	FUNCTION_204	CALL_1
0x400d81a	      0xb800000000	                              mov eax, 0	      9085	elf.c	FUNCTION_114	CALL_2
0x400d81f	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      9085	elf.c	FUNCTION_114	CALL_2
0x400d826	          0x4889e7	                            mov rdi, rsp	      9085	elf.c	FUNCTION_114	CALL_2
0x400d829	            0xf2ae	              repne scasb al, byte [rdi]	      9085	elf.c	FUNCTION_114	CALL_2
0x400d82b	          0x4889cb	                            mov rbx, rcx	      9085	elf.c	FUNCTION_114	CALL_2
0x400d82e	          0x48f7d3	                                 not rbx	      9085	elf.c	FUNCTION_114	CALL_2
0x400d831	          0x4889de	                            mov rsi, rbx	      9086	elf.c	FUNCTION_114	CALL_3
0x400d834	          0x4889ef	                            mov rdi, rbp	      9086	elf.c	FUNCTION_114	CALL_3
0x400d837	      0xe800000000	                          call 0x400d83c	      9086	elf.c	FUNCTION_114	CALL_3
0x400d83c	          0x4989c7	                            mov r15, rax	      9086	elf.c	FUNCTION_114	CALL_3
0x400d83f	      0xb800000000	                              mov eax, 0	      9088	elf.c	FUNCTION_114	IF_1
0x400d844	          0x4d85ff	                           test r15, r15	      9087	elf.c	FUNCTION_114	IF_1
0x400d847	            0x7448	                            je 0x400d891	      9087	elf.c	FUNCTION_114	IF_1
0x400d849	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_221	CALL_3
0x400d84c	          0x4889e6	                            mov rsi, rsp	        53	string3.h	FUNCTION_221	CALL_3
0x400d84f	          0x4c89ff	                            mov rdi, r15	        53	string3.h	FUNCTION_221	CALL_3
0x400d852	      0xe800000000	                          call 0x400d857	        53	string3.h	FUNCTION_221	CALL_3
0x400d857	      0xba00010000	                          mov edx, 0x100	      9091	elf.c	FUNCTION_114	CALL_5
0x400d85c	          0x4c89fe	                            mov rsi, r15	      9091	elf.c	FUNCTION_114	CALL_5
0x400d85f	          0x4889ef	                            mov rdi, rbp	      9091	elf.c	FUNCTION_114	CALL_5
0x400d862	      0xe800000000	                          call 0x400d867	      9091	elf.c	FUNCTION_114	CALL_5
0x400d867	          0x4889c2	                            mov rdx, rax	      9091	elf.c	FUNCTION_114	CALL_5
0x400d86a	      0xb800000000	                              mov eax, 0	      9094	elf.c	FUNCTION_114	IF_2
0x400d86f	          0x4885d2	                           test rdx, rdx	      9093	elf.c	FUNCTION_114	IF_2
0x400d872	            0x741d	                            je 0x400d891	      9093	elf.c	FUNCTION_114	IF_2
0x400d874	        0x4c897238	             mov qword [rdx + 0x38], r14	      9095	elf.c	FUNCTION_114
0x400d878	    0x4c89aa900000	             mov qword [rdx + 0x90], r13	      9096	elf.c	FUNCTION_114
0x400d87f	    0xc74270020000	               mov dword [rdx + 0x70], 2	      9097	elf.c	FUNCTION_114
0x400d886	          0x4c89e6	                            mov rsi, r12	      9099	elf.c	FUNCTION_114	CALL_6
0x400d889	          0x4889ef	                            mov rdi, rbp	      9099	elf.c	FUNCTION_114	CALL_6
0x400d88c	      0xe80f33ffff	        call sym.elfcore_maybe_make_sect	      9099	elf.c	FUNCTION_114	CALL_6
0x400d891	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	      9100	elf.c	FUNCTION_114
0x400d896	    0x644833342528	                xor rsi, qword fs:[0x28]	      9100	elf.c	FUNCTION_114
0x400d89f	            0x7405	                            je 0x400d8a6	      9100	elf.c	FUNCTION_114
0x400d8a1	      0xe800000000	                          call 0x400d8a6	      9100	elf.c	FUNCTION_114
0x400d8a6	        0x4883c478	                           add rsp, 0x78	      9100	elf.c	FUNCTION_114
0x400d8aa	              0x5b	                                 pop rbx	      9100	elf.c	FUNCTION_114
0x400d8ab	              0x5d	                                 pop rbp	      9100	elf.c	FUNCTION_114
0x400d8ac	            0x415c	                                 pop r12	      9100	elf.c	FUNCTION_114
0x400d8ae	            0x415d	                                 pop r13	      9100	elf.c	FUNCTION_114
0x400d8b0	            0x415e	                                 pop r14	      9100	elf.c	FUNCTION_114
0x400d8b2	            0x415f	                                 pop r15	      9100	elf.c	FUNCTION_114
0x400d8b4	              0xc3	                                     ret	      9100	elf.c	FUNCTION_114
elfcore_write_s390_last_break	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,1:functions,0	8
0x400f9b5	        0x4883ec10	                           sub rsp, 0x10	     10896	elf.c	FUNCTION_179
0x400f9b9	          0x4989c9	                             mov r9, rcx	     10896	elf.c	FUNCTION_179
0x400f9bc	            0x4150	                                 push r8	     10898	elf.c	FUNCTION_179	CALL_1
0x400f9be	    0x41b806030000	                          mov r8d, 0x306	     10898	elf.c	FUNCTION_179	CALL_1
0x400f9c4	      0xb900000000	                              mov ecx, 0	     10898	elf.c	FUNCTION_179	CALL_1
0x400f9c9	      0xe800000000	                          call 0x400f9ce	     10898	elf.c	FUNCTION_179	CALL_1
0x400f9ce	        0x4883c418	                           add rsp, 0x18	     10901	elf.c	FUNCTION_179
0x400f9d2	              0xc3	                                     ret	     10901	elf.c	FUNCTION_179
_bfd_elf_sizeof_headers	FOR,1:ELSE,0:IF,3:WHILE,0:DO,0:SWITCH,0:CALL,6:functions,0	40
0x400d4ac	              0x55	                                push rbp	      8817	elf.c	FUNCTION_106
0x400d4ad	              0x53	                                push rbx	      8817	elf.c	FUNCTION_106
0x400d4ae	        0x4883ec08	                              sub rsp, 8	      8817	elf.c	FUNCTION_106
0x400d4b2	        0x488b4708	                mov rax, qword [rdi + 8]	      8818	elf.c	FUNCTION_106	CALL_1
0x400d4b6	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      8819	elf.c	FUNCTION_106
0x400d4bd	    0x488b88000300	           mov rcx, qword [rax + 0x300] 	      8819	elf.c	FUNCTION_106
0x400d4c4	           0xfb619	                   movzx ebx, byte [rcx]	      8819	elf.c	FUNCTION_106
0x400d4c7	           0xfb616	                   movzx edx, byte [rsi]	      8821	elf.c	FUNCTION_106	IF_1	CALL_2
0x400d4ca	          0x83e203	                              and edx, 3	      8821	elf.c	FUNCTION_106	IF_1	CALL_2
0x400d4cd	           0xfb6c3	                           movzx eax, bl	      8819	elf.c	FUNCTION_106
0x400d4d0	          0x80fa02	                               cmp dl, 2	      8821	elf.c	FUNCTION_106	IF_1	CALL_2
0x400d4d3	            0x745b	                            je 0x400d530	      8821	elf.c	FUNCTION_106	IF_1	CALL_2
0x400d4d5	          0x4889fd	                            mov rbp, rdi	      8821	elf.c	FUNCTION_106	IF_1	CALL_2
0x400d4d8	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      8823	elf.c	FUNCTION_106	IF_1	CALL_3
0x400d4df	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      8823	elf.c	FUNCTION_106	IF_1	CALL_3
0x400d4e6	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      8823	elf.c	FUNCTION_106	IF_1	CALL_3
0x400d4ea	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      8825	elf.c	FUNCTION_106	IF_1	IF_2
0x400d4ee	            0x7529	                           jne 0x400d519	      8825	elf.c	FUNCTION_106	IF_1	IF_2
0x400d4f0	          0x488b12	                    mov rdx, qword [rdx]	      8830	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1	CALL_4
0x400d4f3	          0x4885d2	                           test rdx, rdx	      8830	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1	CALL_4
0x400d4f6	            0x7419	                            je 0x400d511	      8830	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1	CALL_4
0x400d4f8	         0xfb64901	               movzx ecx, byte [rcx + 1]	      8831	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1
0x400d4fc	      0xb800000000	                              mov eax, 0	      8831	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1
0x400d501	          0x4801c8	                            add rax, rcx	      8831	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1
0x400d504	          0x488b12	                    mov rdx, qword [rdx]	      8830	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1	CALL_4
0x400d507	          0x4885d2	                           test rdx, rdx	      8830	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1	CALL_4
0x400d50a	            0x75f5	                           jne 0x400d501	      8830	elf.c	FUNCTION_106	IF_1	IF_2	FOR_1	CALL_4
0x400d50c	          0x4885c0	                           test rax, rax	      8833	elf.c	FUNCTION_106	IF_1	IF_2	IF_3
0x400d50f	            0x7508	                           jne 0x400d519	      8833	elf.c	FUNCTION_106	IF_1	IF_2	IF_3
0x400d511	          0x4889ef	                            mov rdi, rbp	      8834	elf.c	FUNCTION_106	IF_1	IF_2	CALL_5
0x400d514	      0xe88d34ffff	        call sym.get_program_header_size	      8834	elf.c	FUNCTION_106	IF_1	IF_2	CALL_5
0x400d519	    0x488b95f80000	            mov rdx, qword [rbp + 0xf8] 	      8837	elf.c	FUNCTION_106	IF_1	CALL_6
0x400d520	    0x488b92980c00	           mov rdx, qword [rdx + 0xc98] 	      8837	elf.c	FUNCTION_106	IF_1	CALL_6
0x400d527	        0x48894238	             mov qword [rdx + 0x38], rax	      8837	elf.c	FUNCTION_106	IF_1	CALL_6
0x400d52b	           0xfb6db	                           movzx ebx, bl	      8838	elf.c	FUNCTION_106	IF_1
0x400d52e	             0x1d8	                            add eax, ebx	      8838	elf.c	FUNCTION_106	IF_1
0x400d530	        0x4883c408	                              add rsp, 8	      8842	elf.c	FUNCTION_106
0x400d534	              0x5b	                                 pop rbx	      8842	elf.c	FUNCTION_106
0x400d535	              0x5d	                                 pop rbp	      8842	elf.c	FUNCTION_106
0x400d536	              0xc3	                                     ret	      8842	elf.c	FUNCTION_106
_bfd_elf_get_lineno	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,1:functions,0	5
0x400d286	        0x4883ec08	                              sub rsp, 8	      8714	elf.c	FUNCTION_101
0x400d28a	      0xba00000000	                              mov edx, 0	      8715	elf.c	FUNCTION_101	CALL_1
0x400d28f	      0xbe0b220000	                         mov esi, 0x220b	      8715	elf.c	FUNCTION_101	CALL_1
0x400d294	      0xbf00000000	                              mov edi, 0	      8715	elf.c	FUNCTION_101	CALL_1
0x400d299	      0xe800000000	         call sym._bfd_elf_set_arch_mach	      8715	elf.c	FUNCTION_101	CALL_1
copy_special_section_fields	FOR,0:ELSE,3:IF,11:WHILE,0:DO,0:SWITCH,0:CALL,12:functions,0	113
0x40003ff	        0x83790408	                  cmp dword [rcx + 4], 8	      1364	elf.c	FUNCTION_30	IF_1
0x4000403	            0x7527	                           jne 0x400042c	      1364	elf.c	FUNCTION_30	IF_1
0x4000405	        0x83792800	               cmp dword [rcx + 0x28], 0	      1382	elf.c	FUNCTION_30	IF_1	IF_2
0x4000409	            0x7506	                           jne 0x4000411	      1382	elf.c	FUNCTION_30	IF_1	IF_2
0x400040b	          0x8b4228	            mov eax, dword [rdx + 0x28] 	      1383	elf.c	FUNCTION_30	IF_1	IF_2
0x400040e	          0x894128	             mov dword [rcx + 0x28], eax	      1383	elf.c	FUNCTION_30	IF_1	IF_2
0x4000411	      0xb801000000	                              mov eax, 1	      1386	elf.c	FUNCTION_30	IF_1
0x4000416	        0x83792c00	               cmp dword [rcx + 0x2c], 0	      1384	elf.c	FUNCTION_30	IF_1	IF_3
0x400041a	     0xf8575010000	                           jne 0x4000595	      1384	elf.c	FUNCTION_30	IF_1	IF_3
0x4000420	          0x8b422c	            mov eax, dword [rdx + 0x2c] 	      1385	elf.c	FUNCTION_30	IF_1	IF_3
0x4000423	          0x89412c	             mov dword [rcx + 0x2c], eax	      1385	elf.c	FUNCTION_30	IF_1	IF_3
0x4000426	      0xb801000000	                              mov eax, 1	      1386	elf.c	FUNCTION_30	IF_1
0x400042b	              0xc3	                                     ret	      1453	elf.c	FUNCTION_30
0x400042c	            0x4157	                                push r15	      1358	elf.c	FUNCTION_30
0x400042e	            0x4156	                                push r14	      1358	elf.c	FUNCTION_30
0x4000430	            0x4155	                                push r13	      1358	elf.c	FUNCTION_30
0x4000432	            0x4154	                                push r12	      1358	elf.c	FUNCTION_30
0x4000434	              0x55	                                push rbp	      1358	elf.c	FUNCTION_30
0x4000435	              0x53	                                push rbx	      1358	elf.c	FUNCTION_30
0x4000436	        0x4883ec18	                           sub rsp, 0x18	      1358	elf.c	FUNCTION_30
0x400043a	      0x448944240c	              mov dword [rsp + 0xc], r8d	      1358	elf.c	FUNCTION_30
0x400043f	          0x4889cb	                            mov rbx, rcx	      1358	elf.c	FUNCTION_30
0x4000442	          0x4889d5	                            mov rbp, rdx	      1358	elf.c	FUNCTION_30
0x4000445	          0x4989f4	                            mov r12, rsi	      1358	elf.c	FUNCTION_30
0x4000448	          0x4989fd	                            mov r13, rdi	      1358	elf.c	FUNCTION_30
0x400044b	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      1360	elf.c	FUNCTION_30	CALL_2
0x4000452	        0x4c8b7858	            mov r15, qword [rax + 0x58] 	      1360	elf.c	FUNCTION_30	CALL_2
0x4000456	        0x488b4608	                mov rax, qword [rsi + 8]	      1359	elf.c	FUNCTION_30	CALL_1
0x400045a	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1390	elf.c	FUNCTION_30	IF_4
0x4000461	    0x488b80e00200	           mov rax, qword [rax + 0x2e0] 	      1390	elf.c	FUNCTION_30	IF_4
0x4000468	          0x4885c0	                           test rax, rax	      1390	elf.c	FUNCTION_30	IF_4
0x400046b	            0x7411	                            je 0x400047e	      1390	elf.c	FUNCTION_30	IF_4
0x400046d	            0xffd0	                                call rax	      1391	elf.c	FUNCTION_30	IF_4	CALL_3
0x400046f	            0x89c2	                            mov edx, eax	      1391	elf.c	FUNCTION_30	IF_4	CALL_3
0x4000471	      0xb801000000	                              mov eax, 1	      1393	elf.c	FUNCTION_30	IF_4
0x4000476	            0x85d2	                           test edx, edx	      1391	elf.c	FUNCTION_30	IF_4	CALL_3
0x4000478	     0xf8509010000	                           jne 0x4000587	      1391	elf.c	FUNCTION_30	IF_4	CALL_3
0x400047e	        0x448b7528	           mov r14d, dword [rbp + 0x28] 	      1399	elf.c	FUNCTION_30	IF_5
0x4000482	          0x4585f6	                         test r14d, r14d	      1399	elf.c	FUNCTION_30	IF_5
0x4000485	     0xf8496000000	                            je 0x4000521	      1399	elf.c	FUNCTION_30	IF_5
0x400048b	    0x498b85f80000	            mov rax, qword [r13 + 0xf8] 	      1402	elf.c	FUNCTION_30	IF_5	IF_6	CALL_4
0x4000492	    0x443bb0fc0200	          cmp r14d, dword [rax + 0x2fc] 	      1402	elf.c	FUNCTION_30	IF_5	IF_6	CALL_4
0x4000499	            0x7235	                            jb 0x40004d0	      1402	elf.c	FUNCTION_30	IF_5	IF_6	CALL_4
0x400049b	      0xba05000000	                              mov edx, 5	      1406	elf.c	FUNCTION_30	IF_5	IF_6	CALL_6
0x40004a0	      0xbe00000000	                              mov esi, 0	      1406	elf.c	FUNCTION_30	IF_5	IF_6	CALL_6
0x40004a5	      0xbf00000000	                              mov edi, 0	      1406	elf.c	FUNCTION_30	IF_5	IF_6	CALL_6
0x40004aa	      0xe800000000	                          call 0x40004af	      1406	elf.c	FUNCTION_30	IF_5	IF_6	CALL_6
0x40004af	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      1404	elf.c	FUNCTION_30	IF_5	IF_6	CALL_5
0x40004b3	          0x4489f2	                           mov edx, r14d	      1404	elf.c	FUNCTION_30	IF_5	IF_6	CALL_5
0x40004b6	          0x4c89ee	                            mov rsi, r13	      1404	elf.c	FUNCTION_30	IF_5	IF_6	CALL_5
0x40004b9	          0x4889c7	                            mov rdi, rax	      1404	elf.c	FUNCTION_30	IF_5	IF_6	CALL_5
0x40004bc	      0xb800000000	                              mov eax, 0	      1404	elf.c	FUNCTION_30	IF_5	IF_6	CALL_5
0x40004c1	      0xe800000000	                          call 0x40004c6	      1404	elf.c	FUNCTION_30	IF_5	IF_6	CALL_5
0x40004c6	      0xb800000000	                              mov eax, 0	      1408	elf.c	FUNCTION_30	IF_5	IF_6
0x40004cb	      0xe9b7000000	                           jmp 0x4000587	      1408	elf.c	FUNCTION_30	IF_5	IF_6
0x40004d0	          0x4489f0	                           mov eax, r14d	      1411	elf.c	FUNCTION_30	IF_5	CALL_7
0x40004d3	        0x498b34c7	            mov rsi, qword [r15 + rax*8]	      1411	elf.c	FUNCTION_30	IF_5	CALL_7
0x40004d7	          0x4489f2	                           mov edx, r14d	      1411	elf.c	FUNCTION_30	IF_5	CALL_7
0x40004da	          0x4c89e7	                            mov rdi, r12	      1411	elf.c	FUNCTION_30	IF_5	CALL_7
0x40004dd	      0xe8e7fdffff	                      call sym.find_link	      1411	elf.c	FUNCTION_30	IF_5	CALL_7
0x40004e2	            0x85c0	                           test eax, eax	      1412	elf.c	FUNCTION_30	IF_5	IF_7
0x40004e4	            0x740b	                            je 0x40004f1	      1412	elf.c	FUNCTION_30	IF_5	IF_7
0x40004e6	          0x894328	             mov dword [rbx + 0x28], eax	      1414	elf.c	FUNCTION_30	IF_5	IF_7
0x40004e9	    0x41bd01000000	                             mov r13d, 1	      1415	elf.c	FUNCTION_30	IF_5	IF_7
0x40004ef	            0xeb36	                           jmp 0x4000527	      1415	elf.c	FUNCTION_30	IF_5	IF_7
0x40004f1	      0xba05000000	                              mov edx, 5	      1422	elf.c	FUNCTION_30	IF_5	CALL_9
0x40004f6	      0xbe00000000	                              mov esi, 0	      1422	elf.c	FUNCTION_30	IF_5	CALL_9
0x40004fb	      0xbf00000000	                              mov edi, 0	      1422	elf.c	FUNCTION_30	IF_5	CALL_9
0x4000500	      0xe800000000	                          call 0x4000505	      1422	elf.c	FUNCTION_30	IF_5	CALL_9
0x4000505	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      1420	elf.c	FUNCTION_30	IF_5	ELSE_1	CALL_8
0x4000509	          0x4c89e6	                            mov rsi, r12	      1420	elf.c	FUNCTION_30	IF_5	ELSE_1	CALL_8
0x400050c	          0x4889c7	                            mov rdi, rax	      1420	elf.c	FUNCTION_30	IF_5	ELSE_1	CALL_8
0x400050f	      0xb800000000	                              mov eax, 0	      1420	elf.c	FUNCTION_30	IF_5	ELSE_1	CALL_8
0x4000514	      0xe800000000	                          call 0x4000519	      1420	elf.c	FUNCTION_30	IF_5	ELSE_1	CALL_8
0x4000519	    0x41bd00000000	                             mov r13d, 0	      1361	elf.c	FUNCTION_30
0x400051f	            0xeb06	                           jmp 0x4000527	      1361	elf.c	FUNCTION_30
0x4000521	    0x41bd00000000	                             mov r13d, 0	      1361	elf.c	FUNCTION_30
0x4000527	          0x8b552c	            mov edx, dword [rbp + 0x2c] 	      1425	elf.c	FUNCTION_30	IF_8
0x400052a	          0x4489e8	                           mov eax, r13d	      1425	elf.c	FUNCTION_30	IF_8
0x400052d	            0x85d2	                           test edx, edx	      1425	elf.c	FUNCTION_30	IF_8
0x400052f	            0x7456	                            je 0x4000587	      1425	elf.c	FUNCTION_30	IF_8
0x4000531	        0xf6450840	               test byte [rbp + 8], 0x40	      1430	elf.c	FUNCTION_30	IF_8	IF_9
0x4000535	            0x7448	                            je 0x400057f	      1430	elf.c	FUNCTION_30	IF_8	IF_9
0x4000537	            0x89d0	                            mov eax, edx	      1432	elf.c	FUNCTION_30	IF_8	IF_9	CALL_10
0x4000539	        0x498b34c7	            mov rsi, qword [r15 + rax*8]	      1432	elf.c	FUNCTION_30	IF_8	IF_9	CALL_10
0x400053d	          0x4c89e7	                            mov rdi, r12	      1432	elf.c	FUNCTION_30	IF_8	IF_9	CALL_10
0x4000540	      0xe884fdffff	                      call sym.find_link	      1432	elf.c	FUNCTION_30	IF_8	IF_9	CALL_10
0x4000545	            0x89c2	                            mov edx, eax	      1432	elf.c	FUNCTION_30	IF_8	IF_9	CALL_10
0x4000547	            0x85c0	                           test eax, eax	      1434	elf.c	FUNCTION_30	IF_8	IF_9	IF_10
0x4000549	            0x7407	                            je 0x4000552	      1434	elf.c	FUNCTION_30	IF_8	IF_9	IF_10
0x400054b	      0x48834b0840	                or qword [rbx + 8], 0x40	      1435	elf.c	FUNCTION_30	IF_8	IF_9	IF_10
0x4000550	            0xeb2d	                           jmp 0x400057f	      1435	elf.c	FUNCTION_30	IF_8	IF_9	IF_10
0x4000552	      0xba05000000	                              mov edx, 5	      1449	elf.c	FUNCTION_30	IF_8	CALL_12
0x4000557	      0xbe00000000	                              mov esi, 0	      1449	elf.c	FUNCTION_30	IF_8	CALL_12
0x400055c	      0xbf00000000	                              mov edi, 0	      1449	elf.c	FUNCTION_30	IF_8	CALL_12
0x4000561	      0xe800000000	                          call 0x4000566	      1449	elf.c	FUNCTION_30	IF_8	CALL_12
0x4000566	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      1447	elf.c	FUNCTION_30	IF_8	ELSE_3	CALL_11
0x400056a	          0x4c89e6	                            mov rsi, r12	      1447	elf.c	FUNCTION_30	IF_8	ELSE_3	CALL_11
0x400056d	          0x4889c7	                            mov rdi, rax	      1447	elf.c	FUNCTION_30	IF_8	ELSE_3	CALL_11
0x4000570	      0xb800000000	                              mov eax, 0	      1447	elf.c	FUNCTION_30	IF_8	ELSE_3	CALL_11
0x4000575	      0xe800000000	                          call 0x400057a	      1447	elf.c	FUNCTION_30	IF_8	ELSE_3	CALL_11
0x400057a	          0x4489e8	                           mov eax, r13d	      1447	elf.c	FUNCTION_30	IF_8	ELSE_3	CALL_11
0x400057d	            0xeb08	                           jmp 0x4000587	      1447	elf.c	FUNCTION_30	IF_8	ELSE_3	CALL_11
0x400057f	          0x89532c	             mov dword [rbx + 0x2c], edx	      1443	elf.c	FUNCTION_30	IF_8	ELSE_2	IF_11
0x4000582	      0xb801000000	                              mov eax, 1	      1444	elf.c	FUNCTION_30	IF_8	ELSE_2	IF_11
0x4000587	        0x4883c418	                           add rsp, 0x18	      1453	elf.c	FUNCTION_30
0x400058b	              0x5b	                                 pop rbx	      1453	elf.c	FUNCTION_30
0x400058c	              0x5d	                                 pop rbp	      1453	elf.c	FUNCTION_30
0x400058d	            0x415c	                                 pop r12	      1453	elf.c	FUNCTION_30
0x400058f	            0x415d	                                 pop r13	      1453	elf.c	FUNCTION_30
0x4000591	            0x415e	                                 pop r14	      1453	elf.c	FUNCTION_30
0x4000593	            0x415f	                                 pop r15	      1453	elf.c	FUNCTION_30
0x4000595	            0xf3c3	                                     ret	      1453	elf.c	FUNCTION_30
elfcore_write_aarch_hw_break	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,1:functions,0	8
0x400fac3	        0x4883ec10	                           sub rsp, 0x10	     11009	elf.c	FUNCTION_188
0x400fac7	          0x4989c9	                             mov r9, rcx	     11009	elf.c	FUNCTION_188
0x400faca	            0x4150	                                 push r8	     11011	elf.c	FUNCTION_188	CALL_1
0x400facc	    0x41b802040000	                          mov r8d, 0x402	     11011	elf.c	FUNCTION_188	CALL_1
0x400fad2	      0xb900000000	                              mov ecx, 0	     11011	elf.c	FUNCTION_188	CALL_1
0x400fad7	      0xe800000000	                          call 0x400fadc	     11011	elf.c	FUNCTION_188	CALL_1
0x400fadc	        0x4883c418	                           add rsp, 0x18	     11013	elf.c	FUNCTION_188
0x400fae0	              0xc3	                                     ret	     11013	elf.c	FUNCTION_188
bfd_elf_print_symbol	FOR,1:ELSE,2:IF,5:WHILE,0:DO,0:SWITCH,2:CALL,7:functions,0	163
0x4002b5e	            0x4156	                                push r14	      1905	elf.c	FUNCTION_35
0x4002b60	            0x4155	                                push r13	      1905	elf.c	FUNCTION_35
0x4002b62	            0x4154	                                push r12	      1905	elf.c	FUNCTION_35
0x4002b64	              0x55	                                push rbp	      1905	elf.c	FUNCTION_35
0x4002b65	              0x53	                                push rbx	      1905	elf.c	FUNCTION_35
0x4002b66	        0x4883ec10	                           sub rsp, 0x10	      1905	elf.c	FUNCTION_35
0x4002b6a	          0x4889fd	                            mov rbp, rdi	      1905	elf.c	FUNCTION_35
0x4002b6d	          0x4889f3	                            mov rbx, rsi	      1905	elf.c	FUNCTION_35
0x4002b70	          0x4989d4	                            mov r12, rdx	      1905	elf.c	FUNCTION_35
0x4002b73	    0x64488b042528	                mov rax, qword fs:[0x28]	      1905	elf.c	FUNCTION_35
0x4002b7c	      0x4889442408	                mov qword [rsp + 8], rax	      1905	elf.c	FUNCTION_35
0x4002b81	            0x31c0	                            xor eax, eax	      1905	elf.c	FUNCTION_35
0x4002b83	          0x83f901	                              cmp ecx, 1	      1907	elf.c	FUNCTION_35	SWITCH_1
0x4002b86	            0x741d	                            je 0x4002ba5	      1907	elf.c	FUNCTION_35	SWITCH_1
0x4002b88	          0x83f901	                              cmp ecx, 1	      1907	elf.c	FUNCTION_35	SWITCH_1
0x4002b8b	            0x720a	                            jb 0x4002b97	      1907	elf.c	FUNCTION_35	SWITCH_1
0x4002b8d	          0x83f902	                              cmp ecx, 2	      1907	elf.c	FUNCTION_35	SWITCH_1
0x4002b90	            0x745b	                            je 0x4002bed	      1907	elf.c	FUNCTION_35	SWITCH_1
0x4002b92	      0xe902020000	                           jmp 0x4002d99	      1907	elf.c	FUNCTION_35	SWITCH_1
0x4002b97	        0x488b7a08	                mov rdi, qword [rdx + 8]	        97	stdio2.h	CALL_15
0x4002b9b	      0xe800000000	                          call 0x4002ba0	        97	stdio2.h	CALL_15
0x4002ba0	      0xe9f4010000	                           jmp 0x4002d99	        97	stdio2.h	CALL_15
0x4002ba5	          0x4889f1	                            mov rcx, rsi	        97	stdio2.h	CALL_15
0x4002ba8	      0xba04000000	                              mov edx, 4	        97	stdio2.h	CALL_15
0x4002bad	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_15
0x4002bb2	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_15
0x4002bb7	      0xe800000000	                          call 0x4002bbc	        97	stdio2.h	CALL_15
0x4002bbc	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      1914	elf.c	FUNCTION_35	SWITCH_1	CALL_1
0x4002bc1	          0x4889de	                            mov rsi, rbx	      1914	elf.c	FUNCTION_35	SWITCH_1	CALL_1
0x4002bc4	          0x4889ef	                            mov rdi, rbp	      1914	elf.c	FUNCTION_35	SWITCH_1	CALL_1
0x4002bc7	      0xe800000000	                          call 0x4002bcc	      1914	elf.c	FUNCTION_35	SWITCH_1	CALL_1
0x4002bcc	      0x418b4c2418	            mov ecx, dword [r12 + 0x18] 	        97	stdio2.h	CALL_15
0x4002bd1	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_15
0x4002bd6	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_15
0x4002bdb	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_15
0x4002bde	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_15
0x4002be3	      0xe800000000	                          call 0x4002be8	        97	stdio2.h	CALL_15
0x4002be8	      0xe9ac010000	                           jmp 0x4002d99	        97	stdio2.h	CALL_15
0x4002bed	        0x488b4220	            mov rax, qword [rdx + 0x20] 	      1927	elf.c	FUNCTION_35	SWITCH_1
0x4002bf1	          0x4885c0	                           test rax, rax	      1927	elf.c	FUNCTION_35	SWITCH_1
0x4002bf4	            0x7405	                            je 0x4002bfb	      1927	elf.c	FUNCTION_35	SWITCH_1
0x4002bf6	          0x4c8b30	                    mov r14, qword [rax]	      1927	elf.c	FUNCTION_35	SWITCH_1
0x4002bf9	            0xeb06	                           jmp 0x4002c01	      1927	elf.c	FUNCTION_35	SWITCH_1
0x4002bfb	    0x41be00000000	                             mov r14d, 0	      1927	elf.c	FUNCTION_35	SWITCH_1
0x4002c01	        0x488b4508	                mov rax, qword [rbp + 8]	      1929	elf.c	FUNCTION_35	SWITCH_1	CALL_2
0x4002c05	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1930	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x4002c0c	    0x488b80900100	           mov rax, qword [rax + 0x190] 	      1930	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x4002c13	          0x4885c0	                           test rax, rax	      1930	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x4002c16	            0x7413	                            je 0x4002c2b	      1930	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x4002c18	          0x4c89e2	                            mov rdx, r12	      1931	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x4002c1b	          0x4889de	                            mov rsi, rbx	      1931	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x4002c1e	          0x4889ef	                            mov rdi, rbp	      1931	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x4002c21	            0xffd0	                                call rax	      1931	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x4002c23	          0x4989c5	                            mov r13, rax	      1931	elf.c	FUNCTION_35	SWITCH_1	IF_1
0x4002c26	          0x4885c0	                           test rax, rax	      1933	elf.c	FUNCTION_35	SWITCH_1	IF_2
0x4002c29	            0x7513	                           jne 0x4002c3e	      1933	elf.c	FUNCTION_35	SWITCH_1	IF_2
0x4002c2b	      0x4d8b6c2408	                mov r13, qword [r12 + 8]	      1935	elf.c	FUNCTION_35	SWITCH_1	IF_2
0x4002c30	          0x4c89e2	                            mov rdx, r12	      1936	elf.c	FUNCTION_35	SWITCH_1	IF_2	CALL_3
0x4002c33	          0x4889de	                            mov rsi, rbx	      1936	elf.c	FUNCTION_35	SWITCH_1	IF_2	CALL_3
0x4002c36	          0x4889ef	                            mov rdi, rbp	      1936	elf.c	FUNCTION_35	SWITCH_1	IF_2	CALL_3
0x4002c39	      0xe800000000	                          call 0x4002c3e	      1936	elf.c	FUNCTION_35	SWITCH_1	IF_2	CALL_3
0x4002c3e	          0x4c89f1	                            mov rcx, r14	        97	stdio2.h	CALL_15
0x4002c41	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_15
0x4002c46	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_15
0x4002c4b	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_15
0x4002c4e	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_15
0x4002c53	      0xe800000000	                          call 0x4002c58	        97	stdio2.h	CALL_15
0x4002c58	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      1944	elf.c	FUNCTION_35	SWITCH_1	IF_3
0x4002c5d	          0x4885c0	                           test rax, rax	      1944	elf.c	FUNCTION_35	SWITCH_1	IF_3
0x4002c60	            0x740d	                            je 0x4002c6f	      1944	elf.c	FUNCTION_35	SWITCH_1	IF_3
0x4002c62	        0xf6402110	           test byte [rax + 0x21], 0x10 	      1944	elf.c	FUNCTION_35	SWITCH_1	IF_3
0x4002c66	            0x7407	                            je 0x4002c6f	      1944	elf.c	FUNCTION_35	SWITCH_1	IF_3
0x4002c68	      0x498b542430	            mov rdx, qword [r12 + 0x30] 	      1945	elf.c	FUNCTION_35	SWITCH_1	IF_3
0x4002c6d	            0xeb05	                           jmp 0x4002c74	      1945	elf.c	FUNCTION_35	SWITCH_1	IF_3
0x4002c6f	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	      1947	elf.c	FUNCTION_35	SWITCH_1	ELSE_1
0x4002c74	          0x4889de	                            mov rsi, rbx	      1948	elf.c	FUNCTION_35	SWITCH_1	CALL_4
0x4002c77	          0x4889ef	                            mov rdi, rbp	      1948	elf.c	FUNCTION_35	SWITCH_1	CALL_4
0x4002c7a	      0xe800000000	                          call 0x4002c7f	      1948	elf.c	FUNCTION_35	SWITCH_1	CALL_4
0x4002c7f	      0x488d542404	                      lea rdx, [rsp + 4]	      1951	elf.c	FUNCTION_35	SWITCH_1	CALL_5
0x4002c84	          0x4c89e6	                            mov rsi, r12	      1951	elf.c	FUNCTION_35	SWITCH_1	CALL_5
0x4002c87	          0x4889ef	                            mov rdi, rbp	      1951	elf.c	FUNCTION_35	SWITCH_1	CALL_5
0x4002c8a	      0xe800000000	                          call 0x4002c8f	      1951	elf.c	FUNCTION_35	SWITCH_1	CALL_5
0x4002c8f	          0x4889c5	                            mov rbp, rax	      1951	elf.c	FUNCTION_35	SWITCH_1	CALL_5
0x4002c92	          0x4885c0	                           test rax, rax	      1954	elf.c	FUNCTION_35	SWITCH_1	IF_4
0x4002c95	            0x7467	                            je 0x4002cfe	      1954	elf.c	FUNCTION_35	SWITCH_1	IF_4
0x4002c97	      0x837c240400	                  cmp dword [rsp + 4], 0	      1956	elf.c	FUNCTION_35	SWITCH_1	IF_4	IF_5
0x4002c9c	            0x751c	                           jne 0x4002cba	      1956	elf.c	FUNCTION_35	SWITCH_1	IF_4	IF_5
0x4002c9e	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_15
0x4002ca1	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_15
0x4002ca6	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_15
0x4002cab	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_15
0x4002cae	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_15
0x4002cb3	      0xe800000000	                          call 0x4002cb8	        97	stdio2.h	CALL_15
0x4002cb8	            0xeb44	                           jmp 0x4002cfe	        97	stdio2.h	CALL_15
0x4002cba	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_15
0x4002cbd	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_15
0x4002cc2	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_15
0x4002cc7	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_15
0x4002cca	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_15
0x4002ccf	      0xe800000000	                          call 0x4002cd4	        97	stdio2.h	CALL_15
0x4002cd4	      0xb800000000	                              mov eax, 0	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_6
0x4002cd9	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_6
0x4002ce0	          0x4889ef	                            mov rdi, rbp	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_6
0x4002ce3	            0xf2ae	              repne scasb al, byte [rdi]	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_6
0x4002ce5	          0x8d690c	                    lea ebp, [rcx + 0xc]	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_6
0x4002ce8	            0x85ed	                           test ebp, ebp	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_6
0x4002cea	            0x7e12	                           jle 0x4002cfe	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_6
0x4002cec	          0x4889de	                            mov rsi, rbx	      1964	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	CALL_7
0x4002cef	      0xbf20000000	                           mov edi, 0x20	      1964	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	CALL_7
0x4002cf4	      0xe800000000	                          call 0x4002cf9	      1964	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	CALL_7
0x4002cf9	          0x83ed01	                              sub ebp, 1	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_6
0x4002cfc	            0x75ee	                           jne 0x4002cec	      1963	elf.c	FUNCTION_35	SWITCH_1	IF_4	ELSE_2	FOR_1	CALL_6
0x4002cfe	    0x410fb64c2449	           movzx ecx, byte [r12 + 0x49] 	      1969	elf.c	FUNCTION_35	SWITCH_1
0x4002d04	          0x80f901	                               cmp cl, 1	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x4002d07	            0x7411	                            je 0x4002d1a	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x4002d09	          0x80f901	                               cmp cl, 1	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x4002d0c	            0x7271	                            jb 0x4002d7f	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x4002d0e	          0x80f902	                               cmp cl, 2	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x4002d11	            0x7420	                            je 0x4002d33	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x4002d13	          0x80f903	                               cmp cl, 3	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x4002d16	            0x7434	                            je 0x4002d4c	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x4002d18	            0xeb4b	                           jmp 0x4002d65	      1971	elf.c	FUNCTION_35	SWITCH_1	SWITCH_2
0x4002d1a	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_15
0x4002d1d	      0xba0a000000	                            mov edx, 0xa	        97	stdio2.h	CALL_15
0x4002d22	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_15
0x4002d27	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_15
0x4002d2c	      0xe800000000	                          call 0x4002d31	        97	stdio2.h	CALL_15
0x4002d31	            0xeb4c	                           jmp 0x4002d7f	        97	stdio2.h	CALL_15
0x4002d33	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_15
0x4002d36	      0xba08000000	                              mov edx, 8	        97	stdio2.h	CALL_15
0x4002d3b	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_15
0x4002d40	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_15
0x4002d45	      0xe800000000	                          call 0x4002d4a	        97	stdio2.h	CALL_15
0x4002d4a	            0xeb33	                           jmp 0x4002d7f	        97	stdio2.h	CALL_15
0x4002d4c	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_15
0x4002d4f	      0xba0b000000	                            mov edx, 0xb	        97	stdio2.h	CALL_15
0x4002d54	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_15
0x4002d59	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_15
0x4002d5e	      0xe800000000	                          call 0x4002d63	        97	stdio2.h	CALL_15
0x4002d63	            0xeb1a	                           jmp 0x4002d7f	        97	stdio2.h	CALL_15
0x4002d65	           0xfb6c9	                           movzx ecx, cl	        97	stdio2.h	CALL_15
0x4002d68	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_15
0x4002d6d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_15
0x4002d72	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_15
0x4002d75	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_15
0x4002d7a	      0xe800000000	                          call 0x4002d7f	        97	stdio2.h	CALL_15
0x4002d7f	          0x4c89e9	                            mov rcx, r13	        97	stdio2.h	CALL_15
0x4002d82	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_15
0x4002d87	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_15
0x4002d8c	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_15
0x4002d8f	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_15
0x4002d94	      0xe800000000	                          call 0x4002d99	        97	stdio2.h	CALL_15
0x4002d99	      0x488b442408	                mov rax, qword [rsp + 8]	      1987	elf.c	FUNCTION_35
0x4002d9e	    0x644833042528	                xor rax, qword fs:[0x28]	      1987	elf.c	FUNCTION_35
0x4002da7	            0x7405	                            je 0x4002dae	      1987	elf.c	FUNCTION_35
0x4002da9	      0xe800000000	                          call 0x4002dae	      1987	elf.c	FUNCTION_35
0x4002dae	        0x4883c410	                           add rsp, 0x10	      1987	elf.c	FUNCTION_35
0x4002db2	              0x5b	                                 pop rbx	      1987	elf.c	FUNCTION_35
0x4002db3	              0x5d	                                 pop rbp	      1987	elf.c	FUNCTION_35
0x4002db4	            0x415c	                                 pop r12	      1987	elf.c	FUNCTION_35
0x4002db6	            0x415d	                                 pop r13	      1987	elf.c	FUNCTION_35
0x4002db8	            0x415e	                                 pop r14	      1987	elf.c	FUNCTION_35
0x4002dba	              0xc3	                                     ret	      1987	elf.c	FUNCTION_35
_bfd_elf_find_nearest_line	FOR,0:ELSE,0:IF,6:WHILE,0:DO,0:SWITCH,0:CALL,7:functions,0	111
0x400d2d2	            0x4157	                                push r15	      8746	elf.c	FUNCTION_103
0x400d2d4	            0x4156	                                push r14	      8746	elf.c	FUNCTION_103
0x400d2d6	            0x4155	                                push r13	      8746	elf.c	FUNCTION_103
0x400d2d8	            0x4154	                                push r12	      8746	elf.c	FUNCTION_103
0x400d2da	              0x55	                                push rbp	      8746	elf.c	FUNCTION_103
0x400d2db	              0x53	                                push rbx	      8746	elf.c	FUNCTION_103
0x400d2dc	        0x4883ec28	                           sub rsp, 0x28	      8746	elf.c	FUNCTION_103
0x400d2e0	          0x4889fb	                            mov rbx, rdi	      8746	elf.c	FUNCTION_103
0x400d2e3	          0x4989f5	                            mov r13, rsi	      8746	elf.c	FUNCTION_103
0x400d2e6	        0x48891424	                    mov qword [rsp], rdx	      8746	elf.c	FUNCTION_103
0x400d2ea	          0x4989ce	                            mov r14, rcx	      8746	elf.c	FUNCTION_103
0x400d2ed	          0x4d89c4	                             mov r12, r8	      8746	elf.c	FUNCTION_103
0x400d2f0	          0x4c89cd	                             mov rbp, r9	      8746	elf.c	FUNCTION_103
0x400d2f3	      0x4c8b7c2460	            mov r15, qword [rsp + 0x60] 	      8746	elf.c	FUNCTION_103
0x400d2f8	    0x64488b042528	                mov rax, qword fs:[0x28]	      8746	elf.c	FUNCTION_103
0x400d301	      0x4889442418	             mov qword [rsp + 0x18], rax	      8746	elf.c	FUNCTION_103
0x400d306	            0x31c0	                            xor eax, eax	      8746	elf.c	FUNCTION_103
0x400d308	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400d30f	    0x480530030000	                          add rax, 0x330	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400d315	              0x50	                                push rax	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400d316	            0x6a00	                                  push 0	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400d318	      0x6800000000	                                  push 0	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400d31d	    0xffb424800000	                 push qword [rsp + 0x80]	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400d324	            0x4157	                                push r15	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400d326	            0x4151	                                 push r9	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400d328	          0x4d89c1	                              mov r9, r8	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400d32b	          0x4989c8	                             mov r8, rcx	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400d32e	          0x4889d1	                            mov rcx, rdx	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400d331	      0xba00000000	                              mov edx, 0	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400d336	      0xe800000000	                          call 0x400d33b	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400d33b	        0x4883c430	                           add rsp, 0x30	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400d33f	            0x85c0	                           test eax, eax	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400d341	            0x752b	                           jne 0x400d36e	      8749	elf.c	FUNCTION_103	IF_1	CALL_1
0x400d343	        0x4883ec08	                              sub rsp, 8	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x400d347	            0x4157	                                push r15	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x400d349	          0x4989e9	                             mov r9, rbp	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x400d34c	          0x4d89e0	                             mov r8, r12	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x400d34f	          0x4c89f1	                            mov rcx, r14	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x400d352	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x400d357	          0x4c89ee	                            mov rsi, r13	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x400d35a	          0x4889df	                            mov rdi, rbx	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x400d35d	      0xe800000000	                          call 0x400d362	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x400d362	        0x8944241c	             mov dword [rsp + 0x1c], eax	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x400d366	        0x4883c410	                           add rsp, 0x10	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x400d36a	            0x85c0	                           test eax, eax	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x400d36c	            0x743e	                            je 0x400d3ac	      8754	elf.c	FUNCTION_103	IF_1	CALL_3
0x400d36e	      0xb801000000	                              mov eax, 1	      8762	elf.c	FUNCTION_103	IF_1
0x400d373	      0x48837d0000	                      cmp qword [rbp], 0	      8758	elf.c	FUNCTION_103	IF_1	IF_2
0x400d378	     0xf85b7000000	                           jne 0x400d435	      8758	elf.c	FUNCTION_103	IF_1	IF_2
0x400d37e	      0x49833c2400	                      cmp qword [r12], 0	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x400d383	    0x41b800000000	                              mov r8d, 0	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x400d389	        0x4d0f44c4	                           cmove r8, r12	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x400d38d	          0x4989e9	                             mov r9, rbp	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x400d390	          0x4c89f1	                            mov rcx, r14	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x400d393	        0x488b1424	                    mov rdx, qword [rsp]	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x400d397	          0x4c89ee	                            mov rsi, r13	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x400d39a	          0x4889df	                            mov rdi, rbx	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x400d39d	      0xe800000000	                          call 0x400d3a2	      8759	elf.c	FUNCTION_103	IF_1	IF_2	CALL_4
0x400d3a2	      0xb801000000	                              mov eax, 1	      8762	elf.c	FUNCTION_103	IF_1
0x400d3a7	      0xe989000000	                           jmp 0x400d435	      8762	elf.c	FUNCTION_103	IF_1
0x400d3ac	        0x4883ec08	                              sub rsp, 8	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x400d3b0	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x400d3b7	    0x480520030000	                          add rax, 0x320	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x400d3bd	              0x50	                                push rax	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x400d3be	            0x4157	                                push r15	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x400d3c0	              0x55	                                push rbp	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x400d3c1	          0x4d89e1	                             mov r9, r12	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x400d3c4	      0x4c8d442434	                    lea r8, [rsp + 0x34]	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x400d3c9	          0x4c89f1	                            mov rcx, r14	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x400d3cc	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x400d3d1	          0x4c89ee	                            mov rsi, r13	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x400d3d4	          0x4889df	                            mov rdi, rbx	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x400d3d7	      0xe800000000	                          call 0x400d3dc	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x400d3dc	        0x4883c420	                           add rsp, 0x20	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x400d3e0	            0x85c0	                           test eax, eax	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x400d3e2	            0x7451	                            je 0x400d435	      8765	elf.c	FUNCTION_103	IF_3	CALL_5
0x400d3e4	      0x837c241400	               cmp dword [rsp + 0x14], 0	      8770	elf.c	FUNCTION_103	IF_4
0x400d3e9	            0x7412	                            je 0x400d3fd	      8770	elf.c	FUNCTION_103	IF_4
0x400d3eb	      0xb801000000	                              mov eax, 1	      8771	elf.c	FUNCTION_103	IF_4
0x400d3f0	      0x48837d0000	                      cmp qword [rbp], 0	      8770	elf.c	FUNCTION_103	IF_4
0x400d3f5	            0x753e	                           jne 0x400d435	      8770	elf.c	FUNCTION_103	IF_4
0x400d3f7	        0x41833f00	                      cmp dword [r15], 0	      8770	elf.c	FUNCTION_103	IF_4
0x400d3fb	            0x7538	                           jne 0x400d435	      8770	elf.c	FUNCTION_103	IF_4
0x400d3fd	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      8774	elf.c	FUNCTION_103	IF_5
0x400d401	          0x4d85ed	                           test r13, r13	      8773	elf.c	FUNCTION_103	IF_5
0x400d404	            0x742f	                            je 0x400d435	      8773	elf.c	FUNCTION_103	IF_5
0x400d406	          0x4989e9	                             mov r9, rbp	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x400d409	          0x4d89e0	                             mov r8, r12	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x400d40c	          0x4c89f1	                            mov rcx, r14	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x400d40f	        0x488b1424	                    mov rdx, qword [rsp]	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x400d413	          0x4c89ee	                            mov rsi, r13	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x400d416	          0x4889df	                            mov rdi, rbx	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x400d419	      0xe800000000	                          call 0x400d41e	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x400d41e	          0x4885c0	                           test rax, rax	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x400d421	            0x740e	                            je 0x400d431	      8776	elf.c	FUNCTION_103	IF_6	CALL_7
0x400d423	    0x41c707000000	                      mov dword [r15], 0	      8780	elf.c	FUNCTION_103
0x400d42a	      0xb801000000	                              mov eax, 1	      8781	elf.c	FUNCTION_103
0x400d42f	            0xeb04	                           jmp 0x400d435	      8781	elf.c	FUNCTION_103
0x400d431	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      8778	elf.c	FUNCTION_103	IF_6
0x400d435	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      8782	elf.c	FUNCTION_103
0x400d43a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8782	elf.c	FUNCTION_103
0x400d443	            0x7405	                            je 0x400d44a	      8782	elf.c	FUNCTION_103
0x400d445	      0xe800000000	                          call 0x400d44a	      8782	elf.c	FUNCTION_103
0x400d44a	        0x4883c428	                           add rsp, 0x28	      8782	elf.c	FUNCTION_103
0x400d44e	              0x5b	                                 pop rbx	      8782	elf.c	FUNCTION_103
0x400d44f	              0x5d	                                 pop rbp	      8782	elf.c	FUNCTION_103
0x400d450	            0x415c	                                 pop r12	      8782	elf.c	FUNCTION_103
0x400d452	            0x415d	                                 pop r13	      8782	elf.c	FUNCTION_103
0x400d454	            0x415e	                                 pop r14	      8782	elf.c	FUNCTION_103
0x400d456	            0x415f	                                 pop r15	      8782	elf.c	FUNCTION_103
0x400d458	              0xc3	                                     ret	      8782	elf.c	FUNCTION_103
bfd_elf_mkcorefile	FOR,0:ELSE,0:IF,1:WHILE,0:DO,0:SWITCH,0:CALL,4:functions,0	21
0x4001e32	              0x55	                                push rbp	       269	elf.c	FUNCTION_15
0x4001e33	              0x53	                                push rbx	       269	elf.c	FUNCTION_15
0x4001e34	        0x4883ec08	                              sub rsp, 8	       269	elf.c	FUNCTION_15
0x4001e38	          0x4889fb	                            mov rbx, rdi	       269	elf.c	FUNCTION_15
0x4001e3b	        0x488b4708	                mov rax, qword [rdi + 8]	       271	elf.c	FUNCTION_15	IF_1
0x4001e3f	    0xff90d8000000	                 call qword [rax + 0xd8]	       271	elf.c	FUNCTION_15	IF_1
0x4001e45	            0x85c0	                           test eax, eax	       271	elf.c	FUNCTION_15	IF_1
0x4001e47	            0x7430	                            je 0x4001e79	       271	elf.c	FUNCTION_15	IF_1
0x4001e49	    0x488babf80000	            mov rbp, qword [rbx + 0xf8] 	       273	elf.c	FUNCTION_15	CALL_3
0x4001e50	      0xbe20000000	                           mov esi, 0x20	       273	elf.c	FUNCTION_15	CALL_3
0x4001e55	          0x4889df	                            mov rdi, rbx	       273	elf.c	FUNCTION_15	CALL_3
0x4001e58	      0xe800000000	                          call 0x4001e5d	       273	elf.c	FUNCTION_15	CALL_3
0x4001e5d	    0x488985900c00	           mov qword [rbp + 0xc90], rax 	       273	elf.c	FUNCTION_15	CALL_3
0x4001e64	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	       274	elf.c	FUNCTION_15	CALL_4
0x4001e6b	    0x4883b8900c00	              cmp qword [rax + 0xc90], 0	       274	elf.c	FUNCTION_15	CALL_4
0x4001e73	           0xf95c0	                                setne al	       274	elf.c	FUNCTION_15	CALL_4
0x4001e76	           0xfb6c0	                           movzx eax, al	       274	elf.c	FUNCTION_15	CALL_4
0x4001e79	        0x4883c408	                              add rsp, 8	       275	elf.c	FUNCTION_15
0x4001e7d	              0x5b	                                 pop rbx	       275	elf.c	FUNCTION_15
0x4001e7e	              0x5d	                                 pop rbp	       275	elf.c	FUNCTION_15
0x4001e7f	              0xc3	                                     ret	       275	elf.c	FUNCTION_15
_bfd_elf_make_section_from_phdr	FOR,0:ELSE,0:IF,14:WHILE,0:DO,0:SWITCH,0:CALL,10:functions,0	206
0x4005048	            0x4157	                                push r15	      2907	elf.c	FUNCTION_42
0x400504a	            0x4156	                                push r14	      2907	elf.c	FUNCTION_42
0x400504c	            0x4155	                                push r13	      2907	elf.c	FUNCTION_42
0x400504e	            0x4154	                                push r12	      2907	elf.c	FUNCTION_42
0x4005050	              0x55	                                push rbp	      2907	elf.c	FUNCTION_42
0x4005051	              0x53	                                push rbx	      2907	elf.c	FUNCTION_42
0x4005052	        0x4883ec68	                           sub rsp, 0x68	      2907	elf.c	FUNCTION_42
0x4005056	          0x4989fc	                            mov r12, rdi	      2907	elf.c	FUNCTION_42
0x4005059	          0x4889f3	                            mov rbx, rsi	      2907	elf.c	FUNCTION_42
0x400505c	          0x4189d5	                           mov r13d, edx	      2907	elf.c	FUNCTION_42
0x400505f	          0x4989ce	                            mov r14, rcx	      2907	elf.c	FUNCTION_42
0x4005062	    0x64488b042528	                mov rax, qword fs:[0x28]	      2907	elf.c	FUNCTION_42
0x400506b	      0x4889442458	             mov qword [rsp + 0x58], rax	      2907	elf.c	FUNCTION_42
0x4005070	            0x31c0	                            xor eax, eax	      2907	elf.c	FUNCTION_42
0x4005072	        0x488b4630	            mov rax, qword [rsi + 0x30] 	      2914	elf.c	FUNCTION_42
0x4005076	          0x4885c0	                           test rax, rax	      2916	elf.c	FUNCTION_42
0x4005079	     0xf8491020000	                            je 0x4005310	      2916	elf.c	FUNCTION_42
0x400507f	        0x488b5628	            mov rdx, qword [rsi + 0x28] 	      2915	elf.c	FUNCTION_42
0x4005083	          0x4839d0	                            cmp rax, rdx	      2916	elf.c	FUNCTION_42
0x4005086	     0xf8684020000	                           jbe 0x4005310	      2916	elf.c	FUNCTION_42
0x400508c	          0x4885d2	                           test rdx, rdx	      2916	elf.c	FUNCTION_42
0x400508f	     0xf8570020000	                           jne 0x4005305	      2916	elf.c	FUNCTION_42
0x4005095	      0xe976020000	                           jmp 0x4005310	      2916	elf.c	FUNCTION_42
0x400509a	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      2916	elf.c	FUNCTION_42
0x40050a2	      0xb800000000	                              mov eax, 0	      2920	elf.c	FUNCTION_42	IF_1
0x40050a7	            0xeb0d	                           jmp 0x40050b6	      2920	elf.c	FUNCTION_42	IF_1
0x40050a9	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      2918	elf.c	FUNCTION_42	IF_1
0x40050b1	      0xb800000000	                              mov eax, 0	      2920	elf.c	FUNCTION_42	IF_1
0x40050b6	      0x4c8d7c2410	                   lea r15, [rsp + 0x10]	        33	stdio2.h	FUNCTION_204	CALL_1
0x40050bb	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_204	CALL_1
0x40050bf	              0x50	                                push rax	        33	stdio2.h	FUNCTION_204	CALL_1
0x40050c0	          0x4589e9	                           mov r9d, r13d	        33	stdio2.h	FUNCTION_204	CALL_1
0x40050c3	          0x4d89f0	                             mov r8, r14	        33	stdio2.h	FUNCTION_204	CALL_1
0x40050c6	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x40050cb	      0xba40000000	                           mov edx, 0x40	        33	stdio2.h	FUNCTION_204	CALL_1
0x40050d0	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_204	CALL_1
0x40050d5	          0x4c89ff	                            mov rdi, r15	        33	stdio2.h	FUNCTION_204	CALL_1
0x40050d8	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x40050dd	      0xe800000000	                          call 0x40050e2	        33	stdio2.h	FUNCTION_204	CALL_1
0x40050e2	      0xb800000000	                              mov eax, 0	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x40050e7	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x40050ee	          0x4c89ff	                            mov rdi, r15	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x40050f1	            0xf2ae	              repne scasb al, byte [rdi]	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x40050f3	          0x48f7d1	                                 not rcx	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x40050f6	          0x4889cd	                            mov rbp, rcx	      2921	elf.c	FUNCTION_42	IF_1	CALL_1
0x40050f9	          0x4889ce	                            mov rsi, rcx	      2922	elf.c	FUNCTION_42	IF_1	CALL_2
0x40050fc	          0x4c89e7	                            mov rdi, r12	      2922	elf.c	FUNCTION_42	IF_1	CALL_2
0x40050ff	      0xe800000000	                          call 0x4005104	      2922	elf.c	FUNCTION_42	IF_1	CALL_2
0x4005104	          0x4989c7	                            mov r15, rax	      2922	elf.c	FUNCTION_42	IF_1	CALL_2
0x4005107	        0x4883c410	                           add rsp, 0x10	      2923	elf.c	FUNCTION_42	IF_1	IF_2
0x400510b	      0xb800000000	                              mov eax, 0	      2924	elf.c	FUNCTION_42	IF_1	IF_2
0x4005110	          0x4d85ff	                           test r15, r15	      2923	elf.c	FUNCTION_42	IF_1	IF_2
0x4005113	     0xf84da010000	                            je 0x40052f3	      2923	elf.c	FUNCTION_42	IF_1	IF_2
0x4005119	          0x4889ea	                            mov rdx, rbp	        53	string3.h	FUNCTION_221	CALL_3
0x400511c	      0x488d742410	                   lea rsi, [rsp + 0x10]	        53	string3.h	FUNCTION_221	CALL_3
0x4005121	          0x4c89ff	                            mov rdi, r15	        53	string3.h	FUNCTION_221	CALL_3
0x4005124	      0xe800000000	                          call 0x4005129	        53	string3.h	FUNCTION_221	CALL_3
0x4005129	          0x4c89fe	                            mov rsi, r15	      2926	elf.c	FUNCTION_42	IF_1	CALL_4
0x400512c	          0x4c89e7	                            mov rdi, r12	      2926	elf.c	FUNCTION_42	IF_1	CALL_4
0x400512f	      0xe800000000	                          call 0x4005134	      2926	elf.c	FUNCTION_42	IF_1	CALL_4
0x4005134	          0x4889c5	                            mov rbp, rax	      2926	elf.c	FUNCTION_42	IF_1	CALL_4
0x4005137	      0xb800000000	                              mov eax, 0	      2928	elf.c	FUNCTION_42	IF_1	IF_3
0x400513c	          0x4885ed	                           test rbp, rbp	      2927	elf.c	FUNCTION_42	IF_1	IF_3
0x400513f	     0xf84ae010000	                            je 0x40052f3	      2927	elf.c	FUNCTION_42	IF_1	IF_3
0x4005145	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2929	elf.c	FUNCTION_42	IF_1
0x4005149	        0x48894528	            mov qword [rbp + 0x28], rax 	      2929	elf.c	FUNCTION_42	IF_1
0x400514d	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      2930	elf.c	FUNCTION_42	IF_1
0x4005151	        0x48894530	            mov qword [rbp + 0x30], rax 	      2930	elf.c	FUNCTION_42	IF_1
0x4005155	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      2931	elf.c	FUNCTION_42	IF_1
0x4005159	        0x48894538	            mov qword [rbp + 0x38], rax 	      2931	elf.c	FUNCTION_42	IF_1
0x400515d	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      2932	elf.c	FUNCTION_42	IF_1
0x4005161	    0x488985900000	            mov qword [rbp + 0x90], rax 	      2932	elf.c	FUNCTION_42	IF_1
0x4005168	    0x814d20000100	            or dword [rbp + 0x20], 0x100	      2933	elf.c	FUNCTION_42	IF_1
0x400516f	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	      2934	elf.c	FUNCTION_42	IF_1	CALL_5
0x4005173	      0xe800000000	                          call 0x4005178	      2934	elf.c	FUNCTION_42	IF_1	CALL_5
0x4005178	          0x894570	            mov dword [rbp + 0x70], eax 	      2934	elf.c	FUNCTION_42	IF_1	CALL_5
0x400517b	        0x48833b01	                      cmp qword [rbx], 1	      2935	elf.c	FUNCTION_42	IF_1	IF_4
0x400517f	            0x7517	                           jne 0x4005198	      2935	elf.c	FUNCTION_42	IF_1	IF_4
0x4005181	          0x8b4520	            mov eax, dword [rbp + 0x20] 	      2937	elf.c	FUNCTION_42	IF_1	IF_4
0x4005184	            0x89c2	                            mov edx, eax	      2938	elf.c	FUNCTION_42	IF_1	IF_4
0x4005186	          0x83ca03	                               or edx, 3	      2938	elf.c	FUNCTION_42	IF_1	IF_4
0x4005189	          0x895520	            mov dword [rbp + 0x20], edx 	      2938	elf.c	FUNCTION_42	IF_1	IF_4
0x400518c	        0xf6430801	                  test byte [rbx + 8], 1	      2939	elf.c	FUNCTION_42	IF_1	IF_4	IF_5
0x4005190	            0x7406	                            je 0x4005198	      2939	elf.c	FUNCTION_42	IF_1	IF_4	IF_5
0x4005192	          0x83c813	                            or eax, 0x13	      2943	elf.c	FUNCTION_42	IF_1	IF_4	IF_5
0x4005195	          0x894520	            mov dword [rbp + 0x20], eax 	      2943	elf.c	FUNCTION_42	IF_1	IF_4	IF_5
0x4005198	        0xf6430802	                  test byte [rbx + 8], 2	      2946	elf.c	FUNCTION_42	IF_1	IF_6
0x400519c	            0x7504	                           jne 0x40051a2	      2946	elf.c	FUNCTION_42	IF_1	IF_6
0x400519e	        0x834d2008	                or dword [rbp + 0x20], 8	      2948	elf.c	FUNCTION_42	IF_1	IF_6
0x40051a2	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      2952	elf.c	FUNCTION_42	IF_7
0x40051a6	        0x48394330	            cmp qword [rbx + 0x30], rax 	      2952	elf.c	FUNCTION_42	IF_7
0x40051aa	     0xf8637010000	                           jbe 0x40052e7	      2952	elf.c	FUNCTION_42	IF_7
0x40051b0	      0x837c240c00	                cmp dword [rsp + 0xc], 0	      2956	elf.c	FUNCTION_42	IF_7
0x40051b5	      0xba00000000	                              mov edx, 0	      2956	elf.c	FUNCTION_42	IF_7
0x40051ba	      0xb800000000	                              mov eax, 0	      2956	elf.c	FUNCTION_42	IF_7
0x40051bf	        0x480f44c2	                          cmove rax, rdx	      2956	elf.c	FUNCTION_42	IF_7
0x40051c3	            0xeb05	                           jmp 0x40051ca	      2956	elf.c	FUNCTION_42	IF_7
0x40051c5	      0xb800000000	                              mov eax, 0	      2956	elf.c	FUNCTION_42	IF_7
0x40051ca	      0x488d6c2410	                   lea rbp, [rsp + 0x10]	        33	stdio2.h	FUNCTION_204	CALL_1
0x40051cf	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_204	CALL_1
0x40051d3	              0x50	                                push rax	        33	stdio2.h	FUNCTION_204	CALL_1
0x40051d4	          0x4589e9	                           mov r9d, r13d	        33	stdio2.h	FUNCTION_204	CALL_1
0x40051d7	          0x4d89f0	                             mov r8, r14	        33	stdio2.h	FUNCTION_204	CALL_1
0x40051da	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x40051df	      0xba40000000	                           mov edx, 0x40	        33	stdio2.h	FUNCTION_204	CALL_1
0x40051e4	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_204	CALL_1
0x40051e9	          0x4889ef	                            mov rdi, rbp	        33	stdio2.h	FUNCTION_204	CALL_1
0x40051ec	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x40051f1	      0xe800000000	                          call 0x40051f6	        33	stdio2.h	FUNCTION_204	CALL_1
0x40051f6	      0xb800000000	                              mov eax, 0	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x40051fb	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4005202	          0x4889ef	                            mov rdi, rbp	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4005205	            0xf2ae	              repne scasb al, byte [rdi]	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x4005207	          0x48f7d1	                                 not rcx	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x400520a	          0x4889cd	                            mov rbp, rcx	      2957	elf.c	FUNCTION_42	IF_7	CALL_6
0x400520d	          0x4889ce	                            mov rsi, rcx	      2958	elf.c	FUNCTION_42	IF_7	CALL_7
0x4005210	          0x4c89e7	                            mov rdi, r12	      2958	elf.c	FUNCTION_42	IF_7	CALL_7
0x4005213	      0xe800000000	                          call 0x4005218	      2958	elf.c	FUNCTION_42	IF_7	CALL_7
0x4005218	          0x4989c5	                            mov r13, rax	      2958	elf.c	FUNCTION_42	IF_7	CALL_7
0x400521b	        0x4883c410	                           add rsp, 0x10	      2959	elf.c	FUNCTION_42	IF_7	IF_8
0x400521f	      0xb800000000	                              mov eax, 0	      2960	elf.c	FUNCTION_42	IF_7	IF_8
0x4005224	          0x4d85ed	                           test r13, r13	      2959	elf.c	FUNCTION_42	IF_7	IF_8
0x4005227	     0xf84c6000000	                            je 0x40052f3	      2959	elf.c	FUNCTION_42	IF_7	IF_8
0x400522d	          0x4889ea	                            mov rdx, rbp	        53	string3.h	FUNCTION_221	CALL_3
0x4005230	      0x488d742410	                   lea rsi, [rsp + 0x10]	        53	string3.h	FUNCTION_221	CALL_3
0x4005235	          0x4c89ef	                            mov rdi, r13	        53	string3.h	FUNCTION_221	CALL_3
0x4005238	      0xe800000000	                          call 0x400523d	        53	string3.h	FUNCTION_221	CALL_3
0x400523d	          0x4c89ee	                            mov rsi, r13	      2962	elf.c	FUNCTION_42	IF_7	CALL_9
0x4005240	          0x4c89e7	                            mov rdi, r12	      2962	elf.c	FUNCTION_42	IF_7	CALL_9
0x4005243	      0xe800000000	                          call 0x4005248	      2962	elf.c	FUNCTION_42	IF_7	CALL_9
0x4005248	          0x4889c5	                            mov rbp, rax	      2962	elf.c	FUNCTION_42	IF_7	CALL_9
0x400524b	          0x4885c0	                           test rax, rax	      2963	elf.c	FUNCTION_42	IF_7	IF_9
0x400524e	     0xf849a000000	                            je 0x40052ee	      2963	elf.c	FUNCTION_42	IF_7	IF_9
0x4005254	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      2965	elf.c	FUNCTION_42	IF_7
0x4005258	        0x48037b18	             add rdi, qword [rbx + 0x18]	      2965	elf.c	FUNCTION_42	IF_7
0x400525c	        0x48897828	             mov qword [rax + 0x28], rdi	      2965	elf.c	FUNCTION_42	IF_7
0x4005260	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      2966	elf.c	FUNCTION_42	IF_7
0x4005264	        0x48034320	             add rax, qword [rbx + 0x20]	      2966	elf.c	FUNCTION_42	IF_7
0x4005268	        0x48894530	            mov qword [rbp + 0x30], rax 	      2966	elf.c	FUNCTION_42	IF_7
0x400526c	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      2967	elf.c	FUNCTION_42	IF_7
0x4005270	        0x482b4328	             sub rax, qword [rbx + 0x28]	      2967	elf.c	FUNCTION_42	IF_7
0x4005274	        0x48894538	            mov qword [rbp + 0x38], rax 	      2967	elf.c	FUNCTION_42	IF_7
0x4005278	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      2968	elf.c	FUNCTION_42	IF_7
0x400527c	        0x48034310	             add rax, qword [rbx + 0x10]	      2968	elf.c	FUNCTION_42	IF_7
0x4005280	    0x488985900000	            mov qword [rbp + 0x90], rax 	      2968	elf.c	FUNCTION_42	IF_7
0x4005287	          0x4889f8	                            mov rax, rdi	      2969	elf.c	FUNCTION_42	IF_7
0x400528a	          0x48f7d8	                                 neg rax	      2969	elf.c	FUNCTION_42	IF_7
0x400528d	          0x4821c7	                            and rdi, rax	      2970	elf.c	FUNCTION_42	IF_7	IF_10
0x4005290	            0x7406	                            je 0x4005298	      2970	elf.c	FUNCTION_42	IF_7	IF_10
0x4005292	        0x483b7b38	            cmp rdi, qword [rbx + 0x38] 	      2970	elf.c	FUNCTION_42	IF_7	IF_10
0x4005296	            0x7604	                           jbe 0x400529c	      2970	elf.c	FUNCTION_42	IF_7	IF_10
0x4005298	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	      2971	elf.c	FUNCTION_42	IF_7	IF_10
0x400529c	      0xe800000000	                          call 0x40052a1	      2972	elf.c	FUNCTION_42	IF_7	CALL_10
0x40052a1	          0x894570	            mov dword [rbp + 0x70], eax 	      2972	elf.c	FUNCTION_42	IF_7	CALL_10
0x40052a4	        0x48833b01	                      cmp qword [rbx], 1	      2973	elf.c	FUNCTION_42	IF_7	IF_11
0x40052a8	            0x752c	                           jne 0x40052d6	      2973	elf.c	FUNCTION_42	IF_7	IF_11
0x40052aa	    0x410fb6442444	           movzx eax, byte [r12 + 0x44] 	      2981	elf.c	FUNCTION_42	IF_7	IF_11	IF_12
0x40052b0	          0x83e007	                              and eax, 7	      2981	elf.c	FUNCTION_42	IF_7	IF_11	IF_12
0x40052b3	            0x3c03	                               cmp al, 3	      2981	elf.c	FUNCTION_42	IF_7	IF_11	IF_12
0x40052b5	            0x7508	                           jne 0x40052bf	      2981	elf.c	FUNCTION_42	IF_7	IF_11	IF_12
0x40052b7	    0x48c745380000	               mov qword [rbp + 0x38], 0	      2982	elf.c	FUNCTION_42	IF_7	IF_11	IF_12
0x40052bf	          0x8b4520	            mov eax, dword [rbp + 0x20] 	      2983	elf.c	FUNCTION_42	IF_7	IF_11
0x40052c2	            0x89c2	                            mov edx, eax	      2983	elf.c	FUNCTION_42	IF_7	IF_11
0x40052c4	          0x83ca01	                               or edx, 1	      2983	elf.c	FUNCTION_42	IF_7	IF_11
0x40052c7	          0x895520	            mov dword [rbp + 0x20], edx 	      2983	elf.c	FUNCTION_42	IF_7	IF_11
0x40052ca	        0xf6430801	                  test byte [rbx + 8], 1	      2984	elf.c	FUNCTION_42	IF_7	IF_11	IF_13
0x40052ce	            0x7406	                            je 0x40052d6	      2984	elf.c	FUNCTION_42	IF_7	IF_11	IF_13
0x40052d0	          0x83c811	                            or eax, 0x11	      2985	elf.c	FUNCTION_42	IF_7	IF_11	IF_13
0x40052d3	          0x894520	            mov dword [rbp + 0x20], eax 	      2985	elf.c	FUNCTION_42	IF_7	IF_11	IF_13
0x40052d6	      0xb801000000	                              mov eax, 1	      2991	elf.c	FUNCTION_42
0x40052db	        0xf6430802	                  test byte [rbx + 8], 2	      2987	elf.c	FUNCTION_42	IF_7	IF_14
0x40052df	            0x7512	                           jne 0x40052f3	      2987	elf.c	FUNCTION_42	IF_7	IF_14
0x40052e1	        0x834d2008	                or dword [rbp + 0x20], 8	      2988	elf.c	FUNCTION_42	IF_7	IF_14
0x40052e5	            0xeb0c	                           jmp 0x40052f3	      2988	elf.c	FUNCTION_42	IF_7	IF_14
0x40052e7	      0xb801000000	                              mov eax, 1	      2991	elf.c	FUNCTION_42
0x40052ec	            0xeb05	                           jmp 0x40052f3	      2991	elf.c	FUNCTION_42
0x40052ee	      0xb800000000	                              mov eax, 0	      2964	elf.c	FUNCTION_42	IF_7	IF_9
0x40052f3	      0x488b742458	            mov rsi, qword [rsp + 0x58] 	      2992	elf.c	FUNCTION_42
0x40052f8	    0x644833342528	                xor rsi, qword fs:[0x28]	      2992	elf.c	FUNCTION_42
0x4005301	            0x744c	                            je 0x400534f	      2992	elf.c	FUNCTION_42
0x4005303	            0xeb45	                           jmp 0x400534a	      2992	elf.c	FUNCTION_42
0x4005305	          0x4885d2	                           test rdx, rdx	      2918	elf.c	FUNCTION_42	IF_1
0x4005308	     0xf858cfdffff	                           jne 0x400509a	      2918	elf.c	FUNCTION_42	IF_1
0x400530e	            0xeb20	                           jmp 0x4005330	      2918	elf.c	FUNCTION_42	IF_1
0x4005310	      0x48837b2800	               cmp qword [rbx + 0x28], 0	      2918	elf.c	FUNCTION_42	IF_1
0x4005315	     0xf858efdffff	                           jne 0x40050a9	      2918	elf.c	FUNCTION_42	IF_1
0x400531b	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      2952	elf.c	FUNCTION_42	IF_7
0x400531f	        0x48394330	            cmp qword [rbx + 0x30], rax 	      2952	elf.c	FUNCTION_42	IF_7
0x4005323	     0xf879cfeffff	                            ja 0x40051c5	      2952	elf.c	FUNCTION_42	IF_7
0x4005329	      0xb801000000	                              mov eax, 1	      2991	elf.c	FUNCTION_42
0x400532e	            0xebc3	                           jmp 0x40052f3	      2991	elf.c	FUNCTION_42
0x4005330	      0xb800000000	                              mov eax, 0	      2956	elf.c	FUNCTION_42	IF_7
0x4005335	        0x488b7628	            mov rsi, qword [rsi + 0x28] 	      2952	elf.c	FUNCTION_42	IF_7
0x4005339	        0x48397330	            cmp qword [rbx + 0x30], rsi 	      2952	elf.c	FUNCTION_42	IF_7
0x400533d	     0xf8787feffff	                            ja 0x40051ca	      2952	elf.c	FUNCTION_42	IF_7
0x4005343	      0xb801000000	                              mov eax, 1	      2991	elf.c	FUNCTION_42
0x4005348	            0xeba9	                           jmp 0x40052f3	      2991	elf.c	FUNCTION_42
0x400534a	      0xe800000000	                          call 0x400534f	      2992	elf.c	FUNCTION_42
0x400534f	        0x4883c468	                           add rsp, 0x68	      2992	elf.c	FUNCTION_42
0x4005353	              0x5b	                                 pop rbx	      2992	elf.c	FUNCTION_42
0x4005354	              0x5d	                                 pop rbp	      2992	elf.c	FUNCTION_42
0x4005355	            0x415c	                                 pop r12	      2992	elf.c	FUNCTION_42
0x4005357	            0x415d	                                 pop r13	      2992	elf.c	FUNCTION_42
0x4005359	            0x415e	                                 pop r14	      2992	elf.c	FUNCTION_42
0x400535b	            0x415f	                                 pop r15	      2992	elf.c	FUNCTION_42
0x400535d	              0xc3	                                     ret	      2992	elf.c	FUNCTION_42
_bfd_elf_make_section_from_shdr	FOR,2:ELSE,12:IF,49:WHILE,0:DO,0:SWITCH,0:CALL,33:functions,0	867
0x4003f8c	            0x4157	                                push r15	       999	elf.c	FUNCTION_26
0x4003f8e	            0x4156	                                push r14	       999	elf.c	FUNCTION_26
0x4003f90	            0x4155	                                push r13	       999	elf.c	FUNCTION_26
0x4003f92	            0x4154	                                push r12	       999	elf.c	FUNCTION_26
0x4003f94	              0x55	                                push rbp	       999	elf.c	FUNCTION_26
0x4003f95	              0x53	                                push rbx	       999	elf.c	FUNCTION_26
0x4003f96	    0x4881ec980000	                           sub rsp, 0x98	       999	elf.c	FUNCTION_26
0x4003f9d	    0x64488b042528	                mov rax, qword fs:[0x28]	       999	elf.c	FUNCTION_26
0x4003fa6	    0x488984248800	             mov qword [rsp + 0x88], rax	       999	elf.c	FUNCTION_26
0x4003fae	            0x31c0	                            xor eax, eax	       999	elf.c	FUNCTION_26
0x4003fb0	    0x41be01000000	                             mov r14d, 1	      1005	elf.c	FUNCTION_26	IF_1
0x4003fb6	      0x48837e4000	               cmp qword [rsi + 0x40], 0	      1004	elf.c	FUNCTION_26	IF_1
0x4003fbb	     0xf85820c0000	                           jne 0x4004c43	      1004	elf.c	FUNCTION_26	IF_1
0x4003fc1	          0x4889fd	                            mov rbp, rdi	      1004	elf.c	FUNCTION_26	IF_1
0x4003fc4	          0x4889f3	                            mov rbx, rsi	      1004	elf.c	FUNCTION_26	IF_1
0x4003fc7	          0x4989d5	                            mov r13, rdx	      1004	elf.c	FUNCTION_26	IF_1
0x4003fca	          0x4189cf	                           mov r15d, ecx	      1004	elf.c	FUNCTION_26	IF_1
0x4003fcd	          0x4889d6	                            mov rsi, rdx	      1007	elf.c	FUNCTION_26	CALL_1
0x4003fd0	      0xe800000000	                          call 0x4003fd5	      1007	elf.c	FUNCTION_26	CALL_1
0x4003fd5	          0x4989c4	                            mov r12, rax	      1007	elf.c	FUNCTION_26	CALL_1
0x4003fd8	    0x41be00000000	                             mov r14d, 0	      1009	elf.c	FUNCTION_26	IF_2
0x4003fde	          0x4885c0	                           test rax, rax	      1008	elf.c	FUNCTION_26	IF_2
0x4003fe1	     0xf845c0c0000	                            je 0x4004c43	      1008	elf.c	FUNCTION_26	IF_2
0x4003fe7	        0x48894340	             mov qword [rbx + 0x40], rax	      1011	elf.c	FUNCTION_26
0x4003feb	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      1012	elf.c	FUNCTION_26	CALL_2
0x4003ff2	          0x488b13	                    mov rdx, qword [rbx]	      1012	elf.c	FUNCTION_26	CALL_2
0x4003ff5	          0x488910	                    mov qword [rax], rdx	      1012	elf.c	FUNCTION_26	CALL_2
0x4003ff8	        0x488b5308	                mov rdx, qword [rbx + 8]	      1012	elf.c	FUNCTION_26	CALL_2
0x4003ffc	        0x48895008	                mov qword [rax + 8], rdx	      1012	elf.c	FUNCTION_26	CALL_2
0x4004000	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      1012	elf.c	FUNCTION_26	CALL_2
0x4004004	        0x48895010	             mov qword [rax + 0x10], rdx	      1012	elf.c	FUNCTION_26	CALL_2
0x4004008	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      1012	elf.c	FUNCTION_26	CALL_2
0x400400c	        0x48895018	             mov qword [rax + 0x18], rdx	      1012	elf.c	FUNCTION_26	CALL_2
0x4004010	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      1012	elf.c	FUNCTION_26	CALL_2
0x4004014	        0x48895020	             mov qword [rax + 0x20], rdx	      1012	elf.c	FUNCTION_26	CALL_2
0x4004018	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      1012	elf.c	FUNCTION_26	CALL_2
0x400401c	        0x48895028	             mov qword [rax + 0x28], rdx	      1012	elf.c	FUNCTION_26	CALL_2
0x4004020	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      1012	elf.c	FUNCTION_26	CALL_2
0x4004024	        0x48895030	             mov qword [rax + 0x30], rdx	      1012	elf.c	FUNCTION_26	CALL_2
0x4004028	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      1012	elf.c	FUNCTION_26	CALL_2
0x400402c	        0x48895038	             mov qword [rax + 0x38], rdx	      1012	elf.c	FUNCTION_26	CALL_2
0x4004030	        0x488b5340	            mov rdx, qword [rbx + 0x40] 	      1012	elf.c	FUNCTION_26	CALL_2
0x4004034	        0x48895040	             mov qword [rax + 0x40], rdx	      1012	elf.c	FUNCTION_26	CALL_2
0x4004038	        0x488b5348	            mov rdx, qword [rbx + 0x48] 	      1012	elf.c	FUNCTION_26	CALL_2
0x400403c	        0x48895048	             mov qword [rax + 0x48], rdx	      1012	elf.c	FUNCTION_26	CALL_2
0x4004040	    0x498b8424e000	            mov rax, qword [r12 + 0xe0] 	      1013	elf.c	FUNCTION_26	CALL_3
0x4004048	    0x4489b8880000	            mov dword [rax + 0x88], r15d	      1013	elf.c	FUNCTION_26	CALL_3
0x400404f	    0x498b8424e000	            mov rax, qword [r12 + 0xe0] 	      1016	elf.c	FUNCTION_26	CALL_4
0x4004057	          0x8b5304	                mov edx, dword [rbx + 4]	      1016	elf.c	FUNCTION_26	CALL_4
0x400405a	          0x895004	                mov dword [rax + 4], edx	      1016	elf.c	FUNCTION_26	CALL_4
0x400405d	    0x498b8424e000	            mov rax, qword [r12 + 0xe0] 	      1017	elf.c	FUNCTION_26	CALL_5
0x4004065	        0x488b5308	                mov rdx, qword [rbx + 8]	      1017	elf.c	FUNCTION_26	CALL_5
0x4004069	        0x48895008	                mov qword [rax + 8], rdx	      1017	elf.c	FUNCTION_26	CALL_5
0x400406d	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1019	elf.c	FUNCTION_26
0x4004071	    0x498984249000	             mov qword [r12 + 0x90], rax	      1019	elf.c	FUNCTION_26
0x4004079	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1021	elf.c	FUNCTION_26	IF_3	CALL_6
0x400407d	      0x4989442430	             mov qword [r12 + 0x30], rax	      1687	bfd.h	FUNCTION_234
0x4004082	      0x4989442428	             mov qword [r12 + 0x28], rax	      1687	bfd.h	FUNCTION_234
0x4004087	    0x41804c242401	                 or byte [r12 + 0x24], 1	      1688	bfd.h	FUNCTION_234
0x400408d	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      1022	elf.c	FUNCTION_26	IF_3	CALL_7
0x4004091	          0x4c89e6	                            mov rsi, r12	      1022	elf.c	FUNCTION_26	IF_3	CALL_7
0x4004094	          0x4889ef	                            mov rdi, rbp	      1022	elf.c	FUNCTION_26	IF_3	CALL_7
0x4004097	      0xe800000000	                          call 0x400409c	      1022	elf.c	FUNCTION_26	IF_3	CALL_7
0x400409c	          0x4189c6	                           mov r14d, eax	      1022	elf.c	FUNCTION_26	IF_3	CALL_7
0x400409f	            0x85c0	                           test eax, eax	      1022	elf.c	FUNCTION_26	IF_3	CALL_7
0x40040a1	     0xf849c0b0000	                            je 0x4004c43	      1022	elf.c	FUNCTION_26	IF_3	CALL_7
0x40040a7	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      1023	elf.c	FUNCTION_26	IF_3	CALL_8
0x40040ab	      0xe800000000	                          call 0x40040b0	      1023	elf.c	FUNCTION_26	IF_3	CALL_8
0x40040b0	      0x4189442470	             mov dword [r12 + 0x70], eax	      1696	bfd.h	FUNCTION_235
0x40040b5	    0xc74424380000	               mov dword [rsp + 0x38], 0	      1027	elf.c	FUNCTION_26
0x40040bd	          0x8b5304	                mov edx, dword [rbx + 4]	      1028	elf.c	FUNCTION_26	IF_4
0x40040c0	          0x83fa08	                              cmp edx, 8	      1028	elf.c	FUNCTION_26	IF_4
0x40040c3	            0x7428	                            je 0x40040ed	      1028	elf.c	FUNCTION_26	IF_4
0x40040c5	    0xc74424380001	          mov dword [rsp + 0x38], 0x100 	      1029	elf.c	FUNCTION_26	IF_4
0x40040cd	          0x83fa11	                           cmp edx, 0x11	      1030	elf.c	FUNCTION_26	IF_5
0x40040d0	     0xf85f10c0000	                           jne 0x4004dc7	      1030	elf.c	FUNCTION_26	IF_5
0x40040d6	    0xc74424380001	      mov dword [rsp + 0x38], 0x2000100 	      1031	elf.c	FUNCTION_26	IF_5
0x40040de	        0x488b4308	                mov rax, qword [rbx + 8]	      1032	elf.c	FUNCTION_26	IF_6
0x40040e2	      0xb900010002	                      mov ecx, 0x2000100	      1034	elf.c	FUNCTION_26	IF_6
0x40040e7	            0xa802	                              test al, 2	      1032	elf.c	FUNCTION_26	IF_6
0x40040e9	            0x751c	                           jne 0x4004107	      1032	elf.c	FUNCTION_26	IF_6
0x40040eb	            0xeb21	                           jmp 0x400410e	      1032	elf.c	FUNCTION_26	IF_6
0x40040ed	        0x488b4308	                mov rax, qword [rbx + 8]	      1032	elf.c	FUNCTION_26	IF_6
0x40040f1	            0xa802	                              test al, 2	      1032	elf.c	FUNCTION_26	IF_6
0x40040f3	            0x7419	                            je 0x400410e	      1032	elf.c	FUNCTION_26	IF_6
0x40040f5	        0x8b4c2438	            mov ecx, dword [rsp + 0x38] 	      1034	elf.c	FUNCTION_26	IF_6
0x40040f9	            0x89ce	                            mov esi, ecx	      1034	elf.c	FUNCTION_26	IF_6
0x40040fb	          0x83ce01	                               or esi, 1	      1034	elf.c	FUNCTION_26	IF_6
0x40040fe	        0x89742438	             mov dword [rsp + 0x38], esi	      1034	elf.c	FUNCTION_26	IF_6
0x4004102	          0x83fa08	                              cmp edx, 8	      1035	elf.c	FUNCTION_26	IF_6	IF_7
0x4004105	            0x7407	                            je 0x400410e	      1035	elf.c	FUNCTION_26	IF_6	IF_7
0x4004107	          0x83c903	                               or ecx, 3	      1036	elf.c	FUNCTION_26	IF_6	IF_7
0x400410a	        0x894c2438	             mov dword [rsp + 0x38], ecx	      1036	elf.c	FUNCTION_26	IF_6	IF_7
0x400410e	            0xa801	                              test al, 1	      1038	elf.c	FUNCTION_26	IF_8
0x4004110	            0x7505	                           jne 0x4004117	      1038	elf.c	FUNCTION_26	IF_8
0x4004112	      0x834c243808	                or dword [rsp + 0x38], 8	      1039	elf.c	FUNCTION_26	IF_8
0x4004117	            0xa804	                              test al, 4	      1040	elf.c	FUNCTION_26	IF_9
0x4004119	            0x7407	                            je 0x4004122	      1040	elf.c	FUNCTION_26	IF_9
0x400411b	      0x834c243810	             or dword [rsp + 0x38], 0x10	      1041	elf.c	FUNCTION_26	IF_9
0x4004120	            0xeb10	                           jmp 0x4004132	      1041	elf.c	FUNCTION_26	IF_9
0x4004122	        0x8b542438	            mov edx, dword [rsp + 0x38] 	      1042	elf.c	FUNCTION_26	ELSE_1	IF_10
0x4004126	          0xf6c202	                              test dl, 2	      1042	elf.c	FUNCTION_26	ELSE_1	IF_10
0x4004129	            0x7407	                            je 0x4004132	      1042	elf.c	FUNCTION_26	ELSE_1	IF_10
0x400412b	          0x83ca20	                            or edx, 0x20	      1043	elf.c	FUNCTION_26	ELSE_1	IF_10
0x400412e	        0x89542438	             mov dword [rsp + 0x38], edx	      1043	elf.c	FUNCTION_26	ELSE_1	IF_10
0x4004132	            0xa810	                           test al, 0x10	      1044	elf.c	FUNCTION_26	IF_11
0x4004134	            0x7414	                            je 0x400414a	      1044	elf.c	FUNCTION_26	IF_11
0x4004136	    0x814c24380000	         or dword [rsp + 0x38], 0x800000	      1046	elf.c	FUNCTION_26	IF_11
0x400413e	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      1047	elf.c	FUNCTION_26	IF_11
0x4004142	    0x41898424c400	             mov dword [r12 + 0xc4], eax	      1047	elf.c	FUNCTION_26	IF_11
0x400414a	        0x488b4308	                mov rax, qword [rbx + 8]	      1049	elf.c	FUNCTION_26	IF_12
0x400414e	            0xa820	                           test al, 0x20	      1049	elf.c	FUNCTION_26	IF_12
0x4004150	            0x7408	                            je 0x400415a	      1049	elf.c	FUNCTION_26	IF_12
0x4004152	    0x814c24380000	        or dword [rsp + 0x38], 0x1000000	      1050	elf.c	FUNCTION_26	IF_12
0x400415a	          0xf6c402	                              test ah, 2	      1051	elf.c	FUNCTION_26	IF_13
0x400415d	     0xf841e060000	                            je 0x4004781	      1051	elf.c	FUNCTION_26	IF_13
0x4004163	    0x488bb5f80000	            mov rsi, qword [rbp + 0xf8] 	       587	elf.c	FUNCTION_21	CALL_1
0x400416a	    0x448bbe700c00	          mov r15d, dword [rsi + 0xc70] 	       587	elf.c	FUNCTION_21	CALL_1
0x4004171	          0x4585ff	                         test r15d, r15d	       591	elf.c	FUNCTION_21	IF_1
0x4004174	     0xf85fe0a0000	                           jne 0x4004c78	       591	elf.c	FUNCTION_21	IF_1
0x400417a	    0x8b86fc020000	           mov eax, dword [rsi + 0x2fc] 	       597	elf.c	FUNCTION_21	IF_1	CALL_2
0x4004180	            0x89c7	                            mov edi, eax	       597	elf.c	FUNCTION_21	IF_1	CALL_2
0x4004182	        0x89442428	             mov dword [rsp + 0x28], eax	       597	elf.c	FUNCTION_21	IF_1	CALL_2
0x4004186	            0x85c0	                           test eax, eax	       606	elf.c	FUNCTION_21	IF_1	FOR_1
0x4004188	            0x7442	                            je 0x40041cc	       606	elf.c	FUNCTION_21	IF_1	FOR_1
0x400418a	        0x488b4658	            mov rax, qword [rsi + 0x58] 	       608	elf.c	FUNCTION_21	IF_1	FOR_1	CALL_3
0x400418e	          0x8d57ff	                      lea edx, [rdi - 1]	       608	elf.c	FUNCTION_21	IF_1	FOR_1	CALL_3
0x4004191	      0x488d4cd008	              lea rcx, [rax + rdx*8 + 8]	       608	elf.c	FUNCTION_21	IF_1	FOR_1	CALL_3
0x4004196	          0x4589f8	                           mov r8d, r15d	       608	elf.c	FUNCTION_21	IF_1	FOR_1	CALL_3
0x4004199	          0x488b10	                    mov rdx, qword [rax]	       608	elf.c	FUNCTION_21	IF_1	FOR_1	CALL_3
0x400419c	        0x837a0411	               cmp dword [rdx + 4], 0x11	       610	elf.c	FUNCTION_21	IF_1	FOR_1	IF_2
0x40041a0	            0x751c	                           jne 0x40041be	       610	elf.c	FUNCTION_21	IF_1	FOR_1	IF_2
0x40041a2	        0x488b7a20	            mov rdi, qword [rdx + 0x20] 	       610	elf.c	FUNCTION_21	IF_1	FOR_1	IF_2
0x40041a6	        0x4883ff07	                              cmp rdi, 7	       610	elf.c	FUNCTION_21	IF_1	FOR_1	IF_2
0x40041aa	            0x7612	                           jbe 0x40041be	       610	elf.c	FUNCTION_21	IF_1	FOR_1	IF_2
0x40041ac	      0x48837a3804	               cmp qword [rdx + 0x38], 4	       610	elf.c	FUNCTION_21	IF_1	FOR_1	IF_2
0x40041b1	            0x750b	                           jne 0x40041be	       610	elf.c	FUNCTION_21	IF_1	FOR_1	IF_2
0x40041b3	          0x83e703	                              and edi, 3	       610	elf.c	FUNCTION_21	IF_1	FOR_1	IF_2
0x40041b6	        0x4883ff01	                              cmp rdi, 1	       611	elf.c	FUNCTION_21	IF_1	FOR_1	IF_2
0x40041ba	        0x4183d000	                              adc r8d, 0	       611	elf.c	FUNCTION_21	IF_1	FOR_1	IF_2
0x40041be	        0x4883c008	                              add rax, 8	       611	elf.c	FUNCTION_21	IF_1	FOR_1	IF_2
0x40041c2	          0x4839c8	                            cmp rax, rcx	       606	elf.c	FUNCTION_21	IF_1	FOR_1
0x40041c5	            0x75d2	                           jne 0x4004199	       606	elf.c	FUNCTION_21	IF_1	FOR_1
0x40041c7	          0x4585c0	                           test r8d, r8d	       614	elf.c	FUNCTION_21	IF_1	IF_3
0x40041ca	            0x7521	                           jne 0x40041ed	       614	elf.c	FUNCTION_21	IF_1	IF_3
0x40041cc	    0xc786700c0000	    mov dword [rsi + 0xc70], 0xffffffff 	       617	elf.c	FUNCTION_21	IF_1	IF_3	CALL_4
0x40041d6	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	       618	elf.c	FUNCTION_21	IF_1	IF_3	CALL_5
0x40041dd	    0x48c780680c00	              mov qword [rax + 0xc68], 0	       618	elf.c	FUNCTION_21	IF_1	IF_3	CALL_5
0x40041e8	      0xe956050000	                           jmp 0x4004743	       618	elf.c	FUNCTION_21	IF_1	IF_3	CALL_5
0x40041ed	    0x448986700c00	            mov dword [rsi + 0xc70], r8d	       626	elf.c	FUNCTION_21	IF_1	ELSE_1	CALL_6
0x40041f4	    0x4c8bb5f80000	            mov r14, qword [rbp + 0xf8] 	       627	elf.c	FUNCTION_21	IF_1	ELSE_1	CALL_7
0x40041fb	          0x4489c0	                            mov eax, r8d	       628	elf.c	FUNCTION_21	IF_1	ELSE_1	CALL_8
0x40041fe	      0xba08000000	                              mov edx, 8	       628	elf.c	FUNCTION_21	IF_1	ELSE_1	CALL_8
0x4004203	      0x4889442408	                mov qword [rsp + 8], rax	       628	elf.c	FUNCTION_21	IF_1	ELSE_1	CALL_8
0x4004208	          0x4889c6	                            mov rsi, rax	       628	elf.c	FUNCTION_21	IF_1	ELSE_1	CALL_8
0x400420b	          0x4889ef	                            mov rdi, rbp	       628	elf.c	FUNCTION_21	IF_1	ELSE_1	CALL_8
0x400420e	      0xe800000000	                          call 0x4004213	       628	elf.c	FUNCTION_21	IF_1	ELSE_1	CALL_8
0x4004213	    0x498986680c00	            mov qword [r14 + 0xc68], rax	       627	elf.c	FUNCTION_21	IF_1	ELSE_1	CALL_7
0x400421a	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	       629	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_4	CALL_9
0x4004221	    0x488bb8680c00	           mov rdi, qword [rax + 0xc68] 	       629	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_4	CALL_9
0x4004228	          0x4885ff	                           test rdi, rdi	       629	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_4	CALL_9
0x400422b	     0xf84b30a0000	                            je 0x4004ce4	       629	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_4	CALL_9
0x4004231	      0x488b442408	                mov rax, qword [rsp + 8]	        90	string3.h	FUNCTION_224	CALL_6
0x4004236	        0x48c1e003	                              shl rax, 3	        90	string3.h	FUNCTION_224	CALL_6
0x400423a	          0x4889c2	                            mov rdx, rax	        90	string3.h	FUNCTION_224	CALL_6
0x400423d	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_224	CALL_6
0x4004242	      0xe800000000	                          call 0x4004247	        90	string3.h	FUNCTION_224	CALL_6
0x4004247	    0x41be00000000	                             mov r14d, 0	        90	string3.h	FUNCTION_224	CALL_6
0x400424d	      0x4489742410	            mov dword [rsp + 0x10], r14d	        90	string3.h	FUNCTION_224	CALL_6
0x4004252	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	       637	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	CALL_12
0x4004259	        0x488b4058	            mov rax, qword [rax + 0x58] 	       637	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	CALL_12
0x400425d	        0x4a8b04f0	            mov rax, qword [rax + r14*8]	       637	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	CALL_12
0x4004261	      0x4889442408	                mov qword [rsp + 8], rax	       637	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	CALL_12
0x4004266	        0x83780411	               cmp dword [rax + 4], 0x11	       639	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x400426a	     0xf853a020000	                           jne 0x40044aa	       639	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4004270	          0x4889c7	                            mov rdi, rax	       639	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4004273	        0x488b4020	            mov rax, qword [rax + 0x20] 	       639	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4004277	        0x4883f807	                              cmp rax, 7	       639	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x400427b	     0xf8629020000	                           jbe 0x40044aa	       639	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4004281	      0x48837f3804	               cmp qword [rdi + 0x38], 4	       639	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4004286	     0xf851e020000	                           jne 0x40044aa	       639	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x400428c	            0xa803	                              test al, 3	       639	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x400428e	     0xf8516020000	                           jne 0x40044aa	       639	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4004294	          0x4489f6	                           mov esi, r14d	       646	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_6	CALL_13
0x4004297	          0x4889ef	                            mov rdi, rbp	       646	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_6	CALL_13
0x400429a	      0xe800000000	                          call 0x400429f	       646	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_6	CALL_13
0x400429f	            0x85c0	                           test eax, eax	       646	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_6	CALL_13
0x40042a1	     0xf843d0a0000	                            je 0x4004ce4	       646	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_6	CALL_13
0x40042a7	    0x488b95f80000	            mov rdx, qword [rbp + 0xf8] 	       650	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	CALL_14
0x40042ae	          0x4489f8	                           mov eax, r15d	       650	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	CALL_14
0x40042b1	    0x488b92680c00	           mov rdx, qword [rdx + 0xc68] 	       650	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	CALL_14
0x40042b8	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       650	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	CALL_14
0x40042bd	        0x48893cc2	            mov qword [rdx + rax*8], rdi	       650	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	CALL_14
0x40042c1	        0x418d4701	                      lea eax, [r15 + 1]	       651	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x40042c5	        0x8944242c	             mov dword [rsp + 0x2c], eax	       651	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x40042c9	        0x488b7720	            mov rsi, qword [rdi + 0x20] 	       655	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x40042cd	    0x488d04f50000	                        lea rax, [rsi*8]	       655	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x40042d5	        0x48c1e802	                              shr rax, 2	       655	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x40042d9	      0x4889442420	             mov qword [rsp + 0x20], rax	       655	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x40042de	      0xba02000000	                              mov edx, 2	       657	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	CALL_16
0x40042e3	          0x4889ef	                            mov rdi, rbp	       657	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	CALL_16
0x40042e6	      0xe800000000	                          call 0x40042eb	       657	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	CALL_16
0x40042eb	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       656	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x40042f0	        0x48894748	             mov qword [rdi + 0x48], rax	       656	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x40042f4	          0x4885c0	                           test rax, rax	       659	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7
0x40042f7	            0x7541	                           jne 0x400433a	       659	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7
0x40042f9	        0x488b4720	            mov rax, qword [rdi + 0x20] 	       665	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7
0x40042fd	      0x4889442408	                mov qword [rsp + 8], rax	       665	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7
0x4004302	      0xba05000000	                              mov edx, 5	       663	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7	CALL_18
0x4004307	      0xbe00000000	                              mov esi, 0	       663	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7	CALL_18
0x400430c	      0xbf00000000	                              mov edi, 0	       663	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7	CALL_18
0x4004311	      0xe800000000	                          call 0x4004316	       663	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7	CALL_18
0x4004316	      0x488b542408	                mov rdx, qword [rsp + 8]	       661	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7	CALL_17
0x400431b	          0x4889ee	                            mov rsi, rbp	       661	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7	CALL_17
0x400431e	          0x4889c7	                            mov rdi, rax	       661	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7	CALL_17
0x4004321	      0xb800000000	                              mov eax, 0	       661	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7	CALL_17
0x4004326	      0xe800000000	                          call 0x400432b	       661	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7	CALL_17
0x400432b	      0xbf11000000	                           mov edi, 0x11	       666	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7	CALL_19
0x4004330	      0xe800000000	                          call 0x4004335	       666	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7	CALL_19
0x4004335	      0xe970010000	                           jmp 0x40044aa	       666	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_7	CALL_19
0x400433a	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	        90	string3.h	FUNCTION_224	CALL_6
0x400433f	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_224	CALL_6
0x4004344	          0x4889c7	                            mov rdi, rax	        90	string3.h	FUNCTION_224	CALL_6
0x4004347	      0xe800000000	                          call 0x400434c	        90	string3.h	FUNCTION_224	CALL_6
0x400434c	      0x488b442408	                mov rax, qword [rsp + 8]	       673	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_21
0x4004351	        0x488b7018	            mov rsi, qword [rax + 0x18] 	       673	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_21
0x4004355	      0xba00000000	                              mov edx, 0	       673	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_21
0x400435a	          0x4889ef	                            mov rdi, rbp	       673	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_21
0x400435d	      0xe800000000	                          call 0x4004362	       673	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_21
0x4004362	            0x85c0	                           test eax, eax	       673	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_21
0x4004364	            0x7520	                           jne 0x4004386	       673	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_21
0x4004366	      0x488b442408	                mov rax, qword [rsp + 8]	       674	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_22
0x400436b	        0x488b7020	            mov rsi, qword [rax + 0x20] 	       674	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_22
0x400436f	        0x488b7848	            mov rdi, qword [rax + 0x48] 	       674	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_22
0x4004373	          0x4889ea	                            mov rdx, rbp	       674	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_22
0x4004376	      0xe800000000	                          call 0x400437b	       674	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_22
0x400437b	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       674	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_22
0x4004380	        0x483b4720	            cmp rax, qword [rdi + 0x20] 	       674	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_22
0x4004384	            0x745e	                            je 0x40043e4	       674	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_22
0x4004386	      0x488b442408	                mov rax, qword [rsp + 8]	       681	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8
0x400438b	        0x488b7820	            mov rdi, qword [rax + 0x20] 	       681	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8
0x400438f	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       681	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8
0x4004394	      0xba05000000	                              mov edx, 5	       679	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_24
0x4004399	      0xbe00000000	                              mov esi, 0	       679	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_24
0x400439e	      0xbf00000000	                              mov edi, 0	       679	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_24
0x40043a3	      0xe800000000	                          call 0x40043a8	       679	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_24
0x40043a8	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       677	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_23
0x40043ad	          0x4889ee	                            mov rsi, rbp	       677	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_23
0x40043b0	          0x4889c7	                            mov rdi, rax	       677	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_23
0x40043b3	      0xb800000000	                              mov eax, 0	       677	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_23
0x40043b8	      0xe800000000	                          call 0x40043bd	       677	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_23
0x40043bd	      0xbf11000000	                           mov edi, 0x11	       682	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_25
0x40043c2	      0xe800000000	                          call 0x40043c7	       682	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	IF_8	CALL_25
0x40043c7	      0x488b442408	                mov rax, qword [rsp + 8]	        90	string3.h	FUNCTION_224	CALL_6
0x40043cc	        0x488b7848	            mov rdi, qword [rax + 0x48] 	        90	string3.h	FUNCTION_224	CALL_6
0x40043d0	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	        90	string3.h	FUNCTION_224	CALL_6
0x40043d5	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_224	CALL_6
0x40043da	      0xe800000000	                          call 0x40043df	        90	string3.h	FUNCTION_224	CALL_6
0x40043df	      0xe9c6000000	                           jmp 0x40044aa	        90	string3.h	FUNCTION_224	CALL_6
0x40043e4	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       695	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x40043e9	        0x4c8b7f48	            mov r15, qword [rdi + 0x48] 	       695	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x40043ed	          0x4c01f8	                            add rax, r15	       695	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x40043f0	      0x4889442418	             mov qword [rsp + 0x18], rax	       695	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x40043f5	      0x4c037c2420	             add r15, qword [rsp + 0x20]	       696	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x40043fa	    0x48836c241804	               sub qword [rsp + 0x18], 4	       702	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1
0x4004400	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       702	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1
0x4004405	        0x4983ef08	                              sub r15, 8	       703	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1
0x4004409	        0x488b4508	                mov rax, qword [rbp + 8]	       704	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1
0x400440d	    0xff9080000000	                 call qword [rax + 0x80]	       704	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1
0x4004413	            0x89c2	                            mov edx, eax	       704	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1
0x4004415	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       705	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9
0x400441a	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       705	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9
0x400441f	        0x483b7948	            cmp rdi, qword [rcx + 0x48] 	       705	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9
0x4004423	            0x7521	                           jne 0x4004446	       705	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9
0x4004425	          0x418907	                    mov dword [r15], eax	       707	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9
0x4004428	        0x488b4140	            mov rax, qword [rcx + 0x40] 	       708	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9	IF_10
0x400442c	          0x4885c0	                           test rax, rax	       708	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9	IF_10
0x400442f	            0x7474	                            je 0x40044a5	       708	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9	IF_10
0x4004431	        0x8b7c242c	            mov edi, dword [rsp + 0x2c] 	       651	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4004435	          0x4189ff	                           mov r15d, edi	       651	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4004438	          0xf6c201	                              test dl, 1	       708	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9	IF_10
0x400443b	            0x746d	                            je 0x40044aa	       708	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9	IF_10
0x400443d	    0x814820000002	          or dword [rax + 0x20], 0x20000	       710	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9	IF_10
0x4004444	            0xeb64	                           jmp 0x40044aa	       710	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_9	IF_10
0x4004446	        0x39442428	            cmp dword [rsp + 0x28], eax 	       713	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_11
0x400444a	            0x7625	                           jbe 0x4004471	       713	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_11
0x400444c	    0x488b95f80000	            mov rdx, qword [rbp + 0xf8] 	       715	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_11	CALL_27
0x4004453	            0x89c0	                            mov eax, eax	       715	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_11	CALL_27
0x4004455	        0x488b5258	            mov rdx, qword [rdx + 0x58] 	       715	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_11	CALL_27
0x4004459	        0x488b04c2	            mov rax, qword [rdx + rax*8]	       715	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_11	CALL_27
0x400445d	          0x498907	                    mov qword [r15], rax	       715	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_11	CALL_27
0x4004460	    0x488148080002	               or qword [rax + 8], 0x200	       721	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_11
0x4004468	          0x498b07	                    mov rax, qword [r15]	       724	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_12
0x400446b	        0x83780411	               cmp dword [rax + 4], 0x11	       724	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_12
0x400446f	            0x7589	                           jne 0x40043fa	       724	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_12
0x4004471	      0xba05000000	                              mov edx, 5	       727	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_12	CALL_29
0x4004476	      0xbe00000000	                              mov esi, 0	       727	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_12	CALL_29
0x400447b	      0xbf00000000	                              mov edi, 0	       727	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_12	CALL_29
0x4004480	      0xe800000000	                          call 0x4004485	       727	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_12	CALL_29
0x4004485	        0x8b542410	            mov edx, dword [rsp + 0x10] 	       726	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_12	CALL_28
0x4004489	          0x4889ee	                            mov rsi, rbp	       726	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_12	CALL_28
0x400448c	          0x4889c7	                            mov rdi, rax	       726	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_12	CALL_28
0x400448f	      0xb800000000	                              mov eax, 0	       726	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_12	CALL_28
0x4004494	      0xe800000000	                          call 0x4004499	       726	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_12	CALL_28
0x4004499	    0x49c707000000	                      mov qword [r15], 0	       729	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_12
0x40044a0	      0xe955ffffff	                           jmp 0x40043fa	       729	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5	WHILE_1	IF_12
0x40044a5	      0x448b7c242c	           mov r15d, dword [rsp + 0x2c] 	       651	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x40044aa	        0x4983c601	                              add r14, 1	       651	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x40044ae	      0x4439742428	           cmp dword [rsp + 0x28], r14d 	       635	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2
0x40044b3	     0xf8794fdffff	                            ja 0x400424d	       635	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2
0x40044b9	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	       736	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	CALL_30
0x40044c0	    0x4439b8700c00	          cmp dword [rax + 0xc70], r15d 	       736	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	CALL_30
0x40044c7	            0x7466	                            je 0x400452f	       736	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	CALL_30
0x40044c9	    0x4489b8700c00	           mov dword [rax + 0xc70], r15d	       738	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	CALL_31
0x40044d0	          0x4585ff	                         test r15d, r15d	       741	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14
0x40044d3	     0xf859f070000	                           jne 0x4004c78	       741	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14
0x40044d9	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	       743	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14	CALL_32
0x40044e0	    0x48c780680c00	              mov qword [rax + 0xc68], 0	       743	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14	CALL_32
0x40044eb	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	       744	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14	CALL_33
0x40044f2	    0xc780700c0000	    mov dword [rax + 0xc70], 0xffffffff 	       744	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14	CALL_33
0x40044fc	      0xba05000000	                              mov edx, 5	       746	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14	CALL_35
0x4004501	      0xbe00000000	                              mov esi, 0	       746	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14	CALL_35
0x4004506	      0xbf00000000	                              mov edi, 0	       746	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14	CALL_35
0x400450b	      0xe800000000	                          call 0x4004510	       746	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14	CALL_35
0x4004510	          0x4889ee	                            mov rsi, rbp	       745	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14	CALL_34
0x4004513	          0x4889c7	                            mov rdi, rax	       745	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14	CALL_34
0x4004516	      0xb800000000	                              mov eax, 0	       745	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14	CALL_34
0x400451b	      0xe800000000	                          call 0x4004520	       745	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14	CALL_34
0x4004520	      0xbf11000000	                           mov edi, 0x11	       747	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14	CALL_36
0x4004525	      0xe800000000	                          call 0x400452a	       747	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14	CALL_36
0x400452a	      0xe914020000	                           jmp 0x4004743	       747	elf.c	FUNCTION_21	IF_1	ELSE_1	IF_13	IF_14	CALL_36
0x400452f	        0x4183ffff	            cmp r15d, 0xffffffffffffffff	       753	elf.c	FUNCTION_21	IF_15
0x4004533	     0xf840a020000	                            je 0x4004743	       753	elf.c	FUNCTION_21	IF_15
0x4004539	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	       755	elf.c	FUNCTION_21	IF_15	CALL_37
0x4004540	    0x8b80740c0000	           mov eax, dword [rax + 0xc74] 	       755	elf.c	FUNCTION_21	IF_15	CALL_37
0x4004546	        0x89442428	             mov dword [rsp + 0x28], eax	       755	elf.c	FUNCTION_21	IF_15	CALL_37
0x400454a	          0x4585ff	                         test r15d, r15d	       758	elf.c	FUNCTION_21	IF_15	FOR_3
0x400454d	     0xf84f0010000	                            je 0x4004743	       758	elf.c	FUNCTION_21	IF_15	FOR_3
0x4004553	    0x41b800000000	                              mov r8d, 0	       651	elf.c	FUNCTION_21	IF_1	ELSE_1	FOR_2	IF_5
0x4004559	        0x8b442428	            mov eax, dword [rsp + 0x28] 	       761	elf.c	FUNCTION_21	IF_15	FOR_3
0x400455d	          0x4401c0	                            add eax, r8d	       761	elf.c	FUNCTION_21	IF_15	FOR_3
0x4004560	      0xba00000000	                              mov edx, 0	       761	elf.c	FUNCTION_21	IF_15	FOR_3
0x4004565	          0x41f7f7	                                div r15d	       761	elf.c	FUNCTION_21	IF_15	FOR_3
0x4004568	        0x89542408	                mov dword [rsp + 8], edx	       761	elf.c	FUNCTION_21	IF_15	FOR_3
0x400456c	    0x488bbdf80000	            mov rdi, qword [rbp + 0xf8] 	       763	elf.c	FUNCTION_21	IF_15	FOR_3	CALL_38
0x4004573	            0x89d0	                            mov eax, edx	       763	elf.c	FUNCTION_21	IF_15	FOR_3	CALL_38
0x4004575	    0x488d0cc50000	                        lea rcx, [rax*8]	       763	elf.c	FUNCTION_21	IF_15	FOR_3	CALL_38
0x400457d	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       763	elf.c	FUNCTION_21	IF_15	FOR_3	CALL_38
0x4004582	    0x488b97680c00	           mov rdx, qword [rdi + 0xc68] 	       763	elf.c	FUNCTION_21	IF_15	FOR_3	CALL_38
0x4004589	        0x4c8b34c2	            mov r14, qword [rdx + rax*8]	       763	elf.c	FUNCTION_21	IF_15	FOR_3	CALL_38
0x400458d	          0x4d85f6	                           test r14, r14	       767	elf.c	FUNCTION_21	IF_15	FOR_3	IF_16
0x4004590	     0xf84a0010000	                            je 0x4004736	       767	elf.c	FUNCTION_21	IF_15	FOR_3	IF_16
0x4004596	        0x498b5648	            mov rdx, qword [r14 + 0x48] 	       770	elf.c	FUNCTION_21	IF_15	FOR_3
0x400459a	          0x4885d2	                           test rdx, rdx	       771	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17
0x400459d	            0x740a	                            je 0x40045a9	       771	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17
0x400459f	        0x498b4e20	            mov rcx, qword [r14 + 0x20] 	       771	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17
0x40045a3	        0x4883f903	                              cmp rcx, 3	       771	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17
0x40045a7	            0x7755	                            ja 0x40045fe	       771	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17
0x40045a9	        0x498b5e40	            mov rbx, qword [r14 + 0x40] 	       775	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_40
0x40045ad	      0xba05000000	                              mov edx, 5	       775	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_40
0x40045b2	      0xbe00000000	                              mov esi, 0	       775	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_40
0x40045b7	      0xbf00000000	                              mov edi, 0	       775	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_40
0x40045bc	      0xe800000000	                          call 0x40045c1	       775	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_40
0x40045c1	          0x4889da	                            mov rdx, rbx	       775	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_40
0x40045c4	          0x4889ee	                            mov rsi, rbp	       775	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_40
0x40045c7	          0x4889c7	                            mov rdi, rax	       775	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_40
0x40045ca	      0xb800000000	                              mov eax, 0	       775	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_40
0x40045cf	      0xe800000000	                          call 0x40045d4	       775	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_40
0x40045d4	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	       777	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_41
0x40045db	    0x488b80680c00	           mov rax, qword [rax + 0xc68] 	       777	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_41
0x40045e2	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       777	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_41
0x40045e7	    0x48c704380000	                mov qword [rax + rdi], 0	       777	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_41
0x40045ef	      0xbf11000000	                           mov edi, 0x11	       778	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_42
0x40045f4	      0xe800000000	                          call 0x40045f9	       778	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_42
0x40045f9	      0xe9e6060000	                           jmp 0x4004ce4	       778	elf.c	FUNCTION_21	IF_15	FOR_3	IF_17	CALL_42
0x40045fe	        0x48c1e902	                              shr rcx, 2	       781	elf.c	FUNCTION_21	IF_15	FOR_3
0x4004602	        0x488d71ff	                      lea rsi, [rcx - 1]	       781	elf.c	FUNCTION_21	IF_15	FOR_3
0x4004606	      0xb800000000	                              mov eax, 0	       781	elf.c	FUNCTION_21	IF_15	FOR_3
0x400460b	      0xe91d010000	                           jmp 0x400472d	       781	elf.c	FUNCTION_21	IF_15	FOR_3
0x4004610	        0x4883c001	                              add rax, 1	       781	elf.c	FUNCTION_21	IF_15	FOR_3
0x4004614	        0x483b1cc2	            cmp rbx, qword [rdx + rax*8]	       786	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18
0x4004618	     0xf850f010000	                           jne 0x400472d	       786	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18
0x400461e	            0xeb2a	                           jmp 0x400464a	       786	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18
0x4004620	        0x4883c208	                              add rdx, 8	       796	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	WHILE_3	IF_19
0x4004624	          0x488b02	                    mov rax, qword [rdx]	       796	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	WHILE_3	IF_19
0x4004627	          0x4885c0	                           test rax, rax	       796	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	WHILE_3	IF_19
0x400462a	            0x741e	                            je 0x400464a	       796	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	WHILE_3	IF_19
0x400462c	        0x488b4040	            mov rax, qword [rax + 0x40] 	       797	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	WHILE_3	IF_19
0x4004630	          0x4885c0	                           test rax, rax	       797	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	WHILE_3	IF_19
0x4004633	            0x7415	                            je 0x400464a	       797	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	WHILE_3	IF_19
0x4004635	    0x488bb0e00000	            mov rsi, qword [rax + 0xe0] 	       798	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	WHILE_3	IF_19	CALL_43
0x400463c	    0x4883bec00000	               cmp qword [rsi + 0xc0], 0	       798	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	WHILE_3	IF_19	CALL_43
0x4004644	     0xf8539060000	                           jne 0x4004c83	       798	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	WHILE_3	IF_19	CALL_43
0x400464a	        0x4883e901	                              sub rcx, 1	       795	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	WHILE_3
0x400464e	            0x75d0	                           jne 0x4004620	       795	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	WHILE_3
0x4004650	      0xe974060000	                           jmp 0x4004cc9	       795	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	WHILE_3
0x4004655	            0x89f0	                            mov eax, esi	       568	elf.c	FUNCTION_20	CALL_2
0x4004657	        0x488b5758	            mov rdx, qword [rdi + 0x58] 	       568	elf.c	FUNCTION_20	CALL_2
0x400465b	        0x488b04c2	            mov rax, qword [rdx + rax*8]	       569	elf.c	FUNCTION_20	IF_2
0x400465f	        0x83780402	                  cmp dword [rax + 4], 2	       569	elf.c	FUNCTION_20	IF_2
0x4004663	     0xf8570060000	                           jne 0x4004cd9	       569	elf.c	FUNCTION_20	IF_2
0x4004669	          0x4889ef	                            mov rdi, rbp	       570	elf.c	FUNCTION_20	IF_2	CALL_3
0x400466c	      0xe800000000	                          call 0x4004671	       570	elf.c	FUNCTION_20	IF_2	CALL_3
0x4004671	            0x85c0	                           test eax, eax	       570	elf.c	FUNCTION_20	IF_2	CALL_3
0x4004673	     0xf8460060000	                            je 0x4004cd9	       570	elf.c	FUNCTION_20	IF_2	CALL_3
0x4004679	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	       574	elf.c	FUNCTION_20	CALL_4
0x4004680	        0x4883c068	                           add rax, 0x68	       574	elf.c	FUNCTION_20	CALL_4
0x4004684	        0x418b4e2c	            mov ecx, dword [r14 + 0x2c] 	       575	elf.c	FUNCTION_20	IF_3	CALL_5
0x4004688	        0x4883ec08	                              sub rsp, 8	       575	elf.c	FUNCTION_20	IF_3	CALL_5
0x400468c	      0x488d7c2468	                   lea rdi, [rsp + 0x68]	       575	elf.c	FUNCTION_20	IF_3	CALL_5
0x4004691	              0x57	                                push rdi	       575	elf.c	FUNCTION_20	IF_3	CALL_5
0x4004692	    0x4c8d8c248000	                    lea r9, [rsp + 0x80]	       575	elf.c	FUNCTION_20	IF_3	CALL_5
0x400469a	      0x4c8d442450	                    lea r8, [rsp + 0x50]	       575	elf.c	FUNCTION_20	IF_3	CALL_5
0x400469f	      0xba01000000	                              mov edx, 1	       575	elf.c	FUNCTION_20	IF_3	CALL_5
0x40046a4	      0x4889442420	             mov qword [rsp + 0x20], rax	       575	elf.c	FUNCTION_20	IF_3	CALL_5
0x40046a9	          0x4889c6	                            mov rsi, rax	       575	elf.c	FUNCTION_20	IF_3	CALL_5
0x40046ac	          0x4889ef	                            mov rdi, rbp	       575	elf.c	FUNCTION_20	IF_3	CALL_5
0x40046af	      0xe800000000	                          call 0x40046b4	       575	elf.c	FUNCTION_20	IF_3	CALL_5
0x40046b4	        0x4883c410	                           add rsp, 0x10	       575	elf.c	FUNCTION_20	IF_3	CALL_5
0x40046b8	          0x4885c0	                           test rax, rax	       575	elf.c	FUNCTION_20	IF_3	CALL_5
0x40046bb	     0xf8418060000	                            je 0x4004cd9	       575	elf.c	FUNCTION_20	IF_3	CALL_5
0x40046c1	      0xb900000000	                              mov ecx, 0	       579	elf.c	FUNCTION_20	CALL_6
0x40046c6	      0x488d542440	                   lea rdx, [rsp + 0x40]	       579	elf.c	FUNCTION_20	CALL_6
0x40046cb	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       579	elf.c	FUNCTION_20	CALL_6
0x40046d0	          0x4889ef	                            mov rdi, rbp	       579	elf.c	FUNCTION_20	CALL_6
0x40046d3	      0xe800000000	                          call 0x40046d8	       579	elf.c	FUNCTION_20	CALL_6
0x40046d8	          0x4885c0	                           test rax, rax	       813	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	ELSE_2	IF_21
0x40046db	     0xf8403060000	                            je 0x4004ce4	       813	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	ELSE_2	IF_21
0x40046e1	    0x498b9424e000	            mov rdx, qword [r12 + 0xe0] 	       815	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	ELSE_2	CALL_50
0x40046e9	    0x488982b00000	             mov qword [rdx + 0xb0], rax	       815	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	ELSE_2	CALL_50
0x40046f0	    0x498b8424e000	            mov rax, qword [r12 + 0xe0] 	       818	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	ELSE_2	CALL_51
0x40046f8	    0x4c89a0c00000	             mov qword [rax + 0xc0], r12	       818	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	ELSE_2	CALL_51
0x40046ff	        0x498b4640	            mov rax, qword [r14 + 0x40] 	       823	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_22
0x4004703	          0x4885c0	                           test rax, rax	       823	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_22
0x4004706	            0x740e	                            je 0x4004716	       823	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_22
0x4004708	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       824	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	CALL_52
0x400470f	    0x4c89a0c00000	             mov qword [rax + 0xc0], r12	       824	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	CALL_52
0x4004716	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	       826	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	CALL_53
0x400471d	        0x8b7c2408	                mov edi, dword [rsp + 8]	       826	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	CALL_53
0x4004721	    0x89b8740c0000	            mov dword [rax + 0xc74], edi	       826	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	CALL_53
0x4004727	        0x458d47ff	                      lea r8d, [r15 - 1]	       827	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18
0x400472b	            0xeb09	                           jmp 0x4004736	       827	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18
0x400472d	          0x4839f0	                            cmp rax, rsi	       785	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2
0x4004730	     0xf85dafeffff	                           jne 0x4004610	       785	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2
0x4004736	        0x4183c001	                              add r8d, 1	       758	elf.c	FUNCTION_21	IF_15	FOR_3
0x400473a	          0x4539f8	                           cmp r8d, r15d	       758	elf.c	FUNCTION_21	IF_15	FOR_3
0x400473d	     0xf8216feffff	                            jb 0x4004559	       758	elf.c	FUNCTION_21	IF_15	FOR_3
0x4004743	    0x498b8424e000	            mov rax, qword [r12 + 0xe0] 	       833	elf.c	FUNCTION_21	IF_23	CALL_54
0x400474b	    0x4883b8b00000	               cmp qword [rax + 0xb0], 0	       833	elf.c	FUNCTION_21	IF_23	CALL_54
0x4004753	            0x752c	                           jne 0x4004781	       833	elf.c	FUNCTION_21	IF_23	CALL_54
0x4004755	      0xba05000000	                              mov edx, 5	       836	elf.c	FUNCTION_21	IF_23	CALL_56
0x400475a	      0xbe00000000	                              mov esi, 0	       836	elf.c	FUNCTION_21	IF_23	CALL_56
0x400475f	      0xbf00000000	                              mov edi, 0	       836	elf.c	FUNCTION_21	IF_23	CALL_56
0x4004764	      0xe800000000	                          call 0x4004769	       836	elf.c	FUNCTION_21	IF_23	CALL_56
0x4004769	          0x4c89e2	                            mov rdx, r12	       836	elf.c	FUNCTION_21	IF_23	CALL_56
0x400476c	          0x4889ee	                            mov rsi, rbp	       836	elf.c	FUNCTION_21	IF_23	CALL_56
0x400476f	          0x4889c7	                            mov rdi, rax	       836	elf.c	FUNCTION_21	IF_23	CALL_56
0x4004772	      0xb800000000	                              mov eax, 0	       836	elf.c	FUNCTION_21	IF_23	CALL_56
0x4004777	      0xe800000000	                          call 0x400477c	       836	elf.c	FUNCTION_21	IF_23	CALL_56
0x400477c	      0xe963050000	                           jmp 0x4004ce4	       836	elf.c	FUNCTION_21	IF_23	CALL_56
0x4004781	        0x488b4308	                mov rax, qword [rbx + 8]	      1054	elf.c	FUNCTION_26	IF_15
0x4004785	          0xf6c404	                              test ah, 4	      1054	elf.c	FUNCTION_26	IF_15
0x4004788	            0x7408	                            je 0x4004792	      1054	elf.c	FUNCTION_26	IF_15
0x400478a	    0x814c24380004	            or dword [rsp + 0x38], 0x400	      1055	elf.c	FUNCTION_26	IF_15
0x4004792	      0xa900000080	                    test eax, 0x80000000	      1056	elf.c	FUNCTION_26	IF_16
0x4004797	            0x7408	                            je 0x40047a1	      1056	elf.c	FUNCTION_26	IF_16
0x4004799	    0x814c24380080	           or dword [rsp + 0x38], 0x8000	      1057	elf.c	FUNCTION_26	IF_16
0x40047a1	      0x448b742438	           mov r14d, dword [rsp + 0x38] 	      1059	elf.c	FUNCTION_26	IF_17
0x40047a6	        0x41f6c601	                            test r14b, 1	      1059	elf.c	FUNCTION_26	IF_17
0x40047aa	            0x7553	                           jne 0x40047ff	      1059	elf.c	FUNCTION_26	IF_17
0x40047ac	      0x41807d002e	                    cmp byte [r13], 0x2e	      1063	elf.c	FUNCTION_26	IF_17	IF_18
0x40047b1	            0x754c	                           jne 0x40047ff	      1063	elf.c	FUNCTION_26	IF_17	IF_18
0x40047b3	      0x410fb64501	               movzx eax, byte [r13 + 1]	      1067	elf.c	FUNCTION_26	IF_17	IF_18	IF_19
0x40047b8	            0x3c64	                            cmp al, 0x64	      1067	elf.c	FUNCTION_26	IF_17	IF_18	IF_19
0x40047ba	     0xf842f050000	                            je 0x4004cef	      1067	elf.c	FUNCTION_26	IF_17	IF_18	IF_19
0x40047c0	            0x3c67	                            cmp al, 0x67	      1069	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_2	IF_20
0x40047c2	            0x7516	                           jne 0x40047da	      1069	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_2	IF_20
0x40047c4	      0x410fb64502	               movzx eax, byte [r13 + 2]	      1069	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_2	IF_20
0x40047c9	            0x3c6e	                            cmp al, 0x6e	      1069	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_2	IF_20
0x40047cb	     0xf842a050000	                            je 0x4004cfb	      1069	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_2	IF_20
0x40047d1	            0x3c64	                            cmp al, 0x64	      1071	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_3	IF_21
0x40047d3	            0x752a	                           jne 0x40047ff	      1071	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_3	IF_21
0x40047d5	      0xe92d050000	                           jmp 0x4004d07	      1071	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_3	IF_21
0x40047da	            0x3c6c	                            cmp al, 0x6c	      1073	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_4	IF_22
0x40047dc	     0xf8431050000	                            je 0x4004d13	      1073	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_4	IF_22
0x40047e2	            0x3c73	                            cmp al, 0x73	      1075	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_5	IF_23
0x40047e4	     0xf8435050000	                            je 0x4004d1f	      1075	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_5	IF_23
0x40047ea	            0x3c7a	                            cmp al, 0x7a	      1077	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_6	IF_24
0x40047ec	            0x7511	                           jne 0x40047ff	      1077	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_6	IF_24
0x40047ee	      0xe938050000	                           jmp 0x4004d2b	      1077	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_6	IF_24
0x40047f3	    0x4181ce002000	                         or r14d, 0x2000	      1082	elf.c	FUNCTION_26	IF_17	IF_18	IF_25
0x40047fa	      0x4489742438	            mov dword [rsp + 0x38], r14d	      1082	elf.c	FUNCTION_26	IF_17	IF_18	IF_25
0x40047ff	      0xbf00000000	                              mov edi, 0	      1092	elf.c	FUNCTION_26	IF_26
0x4004804	      0xb90d000000	                            mov ecx, 0xd	      1092	elf.c	FUNCTION_26	IF_26
0x4004809	          0x4c89ee	                            mov rsi, r13	      1092	elf.c	FUNCTION_26	IF_26
0x400480c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1092	elf.c	FUNCTION_26	IF_26
0x400480e	           0xf97c2	                                 seta dl	      1092	elf.c	FUNCTION_26	IF_26
0x4004811	           0xf92c0	                                 setb al	      1092	elf.c	FUNCTION_26	IF_26
0x4004814	            0x38c2	                              cmp dl, al	      1092	elf.c	FUNCTION_26	IF_26
0x4004816	            0x751a	                           jne 0x4004832	      1092	elf.c	FUNCTION_26	IF_26
0x4004818	    0x498b8424e000	            mov rax, qword [r12 + 0xe0] 	      1093	elf.c	FUNCTION_26	IF_26	CALL_12
0x4004820	    0x4883b8c00000	               cmp qword [rax + 0xc0], 0	      1093	elf.c	FUNCTION_26	IF_26	CALL_12
0x4004828	            0x7508	                           jne 0x4004832	      1093	elf.c	FUNCTION_26	IF_26	CALL_12
0x400482a	    0x814c24380000	          or dword [rsp + 0x38], 0x20000	      1094	elf.c	FUNCTION_26	IF_26
0x4004832	        0x488b4508	                mov rax, qword [rbp + 8]	      1096	elf.c	FUNCTION_26	CALL_13
0x4004836	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1097	elf.c	FUNCTION_26	IF_27
0x400483d	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1097	elf.c	FUNCTION_26	IF_27
0x4004844	          0x4885c0	                           test rax, rax	      1097	elf.c	FUNCTION_26	IF_27
0x4004847	            0x7415	                            je 0x400485e	      1097	elf.c	FUNCTION_26	IF_27
0x4004849	          0x4889de	                            mov rsi, rbx	      1098	elf.c	FUNCTION_26	IF_27	IF_28	CALL_14
0x400484c	      0x488d7c2438	                   lea rdi, [rsp + 0x38]	      1098	elf.c	FUNCTION_26	IF_27	IF_28	CALL_14
0x4004851	            0xffd0	                                call rax	      1098	elf.c	FUNCTION_26	IF_27	IF_28	CALL_14
0x4004853	          0x4189c6	                           mov r14d, eax	      1098	elf.c	FUNCTION_26	IF_27	IF_28	CALL_14
0x4004856	            0x85c0	                           test eax, eax	      1098	elf.c	FUNCTION_26	IF_27	IF_28	CALL_14
0x4004858	     0xf84e5030000	                            je 0x4004c43	      1098	elf.c	FUNCTION_26	IF_27	IF_28	CALL_14
0x400485e	        0x8b542438	            mov edx, dword [rsp + 0x38] 	      1101	elf.c	FUNCTION_26	IF_29	CALL_15
0x4004862	          0x4c89e6	                            mov rsi, r12	      1101	elf.c	FUNCTION_26	IF_29	CALL_15
0x4004865	          0x4889ef	                            mov rdi, rbp	      1101	elf.c	FUNCTION_26	IF_29	CALL_15
0x4004868	      0xe800000000	                          call 0x400486d	      1101	elf.c	FUNCTION_26	IF_29	CALL_15
0x400486d	          0x4189c6	                           mov r14d, eax	      1101	elf.c	FUNCTION_26	IF_29	CALL_15
0x4004870	            0x85c0	                           test eax, eax	      1101	elf.c	FUNCTION_26	IF_29	CALL_15
0x4004872	     0xf84cb030000	                            je 0x4004c43	      1101	elf.c	FUNCTION_26	IF_29	CALL_15
0x4004878	        0x837b0407	                  cmp dword [rbx + 4], 7	      1107	elf.c	FUNCTION_26	IF_30
0x400487c	            0x753e	                           jne 0x40048bc	      1107	elf.c	FUNCTION_26	IF_30
0x400487e	      0x488d542440	                   lea rdx, [rsp + 0x40]	      1111	elf.c	FUNCTION_26	IF_30	IF_31	CALL_16
0x4004883	          0x4c89e6	                            mov rsi, r12	      1111	elf.c	FUNCTION_26	IF_30	IF_31	CALL_16
0x4004886	          0x4889ef	                            mov rdi, rbp	      1111	elf.c	FUNCTION_26	IF_30	IF_31	CALL_16
0x4004889	      0xe800000000	                          call 0x400488e	      1111	elf.c	FUNCTION_26	IF_30	IF_31	CALL_16
0x400488e	          0x4189c6	                           mov r14d, eax	      1111	elf.c	FUNCTION_26	IF_30	IF_31	CALL_16
0x4004891	            0x85c0	                           test eax, eax	      1111	elf.c	FUNCTION_26	IF_30	IF_31	CALL_16
0x4004893	     0xf84aa030000	                            je 0x4004c43	      1111	elf.c	FUNCTION_26	IF_30	IF_31	CALL_16
0x4004899	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	      1114	elf.c	FUNCTION_26	IF_30	CALL_17
0x400489d	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      1114	elf.c	FUNCTION_26	IF_30	CALL_17
0x40048a1	        0x4c8b4330	              mov r8, qword [rbx + 0x30]	      1114	elf.c	FUNCTION_26	IF_30	CALL_17
0x40048a5	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	      1114	elf.c	FUNCTION_26	IF_30	CALL_17
0x40048aa	          0x4889ef	                            mov rdi, rbp	      1114	elf.c	FUNCTION_26	IF_30	CALL_17
0x40048ad	      0xe852c4ffff	                call sym.elf_parse_notes	      1114	elf.c	FUNCTION_26	IF_30	CALL_17
0x40048b2	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      1116	elf.c	FUNCTION_26	IF_30	CALL_18
0x40048b7	      0xe800000000	                          call 0x40048bc	      1116	elf.c	FUNCTION_26	IF_30	CALL_18
0x40048bc	        0x8b7c2438	            mov edi, dword [rsp + 0x38] 	      1119	elf.c	FUNCTION_26	IF_32
0x40048c0	        0x40f6c701	                             test dil, 1	      1119	elf.c	FUNCTION_26	IF_32
0x40048c4	     0xf84d0010000	                            je 0x4004a9a	      1119	elf.c	FUNCTION_26	IF_32
0x40048ca	    0x488b95f80000	            mov rdx, qword [rbp + 0xf8] 	      1128	elf.c	FUNCTION_26	IF_32	CALL_19
0x40048d1	        0x488b4260	            mov rax, qword [rdx + 0x60] 	      1128	elf.c	FUNCTION_26	IF_32	CALL_19
0x40048d5	          0x8b7244	            mov esi, dword [rdx + 0x44] 	      1129	elf.c	FUNCTION_26	IF_32	FOR_1	CALL_20
0x40048d8	            0x85f6	                           test esi, esi	      1129	elf.c	FUNCTION_26	IF_32	FOR_1	CALL_20
0x40048da	     0xf84ba010000	                            je 0x4004a9a	      1129	elf.c	FUNCTION_26	IF_32	FOR_1	CALL_20
0x40048e0	      0x4883782000	               cmp qword [rax + 0x20], 0	      1130	elf.c	FUNCTION_26	IF_32	FOR_1	IF_33
0x40048e5	            0x7536	                           jne 0x400491d	      1130	elf.c	FUNCTION_26	IF_32	FOR_1	IF_33
0x40048e7	          0x4889c2	                            mov rdx, rax	      1130	elf.c	FUNCTION_26	IF_32	FOR_1	IF_33
0x40048ea	    0x41b800000000	                              mov r8d, 0	      1130	elf.c	FUNCTION_26	IF_32	FOR_1	IF_33
0x40048f0	      0xb900000000	                              mov ecx, 0	      1130	elf.c	FUNCTION_26	IF_32	FOR_1	IF_33
0x40048f5	            0xeb07	                           jmp 0x40048fe	      1130	elf.c	FUNCTION_26	IF_32	FOR_1	IF_33
0x40048f7	      0x48837a2000	               cmp qword [rdx + 0x20], 0	      1130	elf.c	FUNCTION_26	IF_32	FOR_1	IF_33
0x40048fc	            0x7526	                           jne 0x4004924	      1130	elf.c	FUNCTION_26	IF_32	FOR_1	IF_33
0x40048fe	        0x48833a01	                      cmp qword [rdx], 1	      1132	elf.c	FUNCTION_26	IF_32	ELSE_8	IF_34
0x4004902	            0x7509	                           jne 0x400490d	      1132	elf.c	FUNCTION_26	IF_32	ELSE_8	IF_34
0x4004904	      0x48837a3001	               cmp qword [rdx + 0x30], 1	      1133	elf.c	FUNCTION_26	IF_32	ELSE_8	IF_34
0x4004909	        0x4183d8ff	             sbb r8d, 0xffffffffffffffff	      1133	elf.c	FUNCTION_26	IF_32	ELSE_8	IF_34
0x400490d	          0x83c101	                              add ecx, 1	      1129	elf.c	FUNCTION_26	IF_32	FOR_1	CALL_20
0x4004910	        0x4883c240	                           add rdx, 0x40	      1129	elf.c	FUNCTION_26	IF_32	FOR_1	CALL_20
0x4004914	            0x39f1	                            cmp ecx, esi	      1129	elf.c	FUNCTION_26	IF_32	FOR_1	CALL_20
0x4004916	            0x75df	                           jne 0x40048f7	      1129	elf.c	FUNCTION_26	IF_32	FOR_1	CALL_20
0x4004918	      0xe930040000	                           jmp 0x4004d4d	      1129	elf.c	FUNCTION_26	IF_32	FOR_1	CALL_20
0x400491d	      0xba00000000	                              mov edx, 0	      1130	elf.c	FUNCTION_26	IF_32	FOR_1	IF_33
0x4004922	            0xeb05	                           jmp 0x4004929	      1130	elf.c	FUNCTION_26	IF_32	FOR_1	IF_33
0x4004924	      0xba00000000	                              mov edx, 0	      1130	elf.c	FUNCTION_26	IF_32	FOR_1	IF_33
0x4004929	          0x4189fa	                           mov r10d, edi	      1145	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_37
0x400492c	        0x4183e202	                             and r10d, 2	      1145	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_37
0x4004930	          0x488b08	                    mov rcx, qword [rax]	      1140	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36
0x4004933	        0x4883f901	                              cmp rcx, 1	      1140	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36
0x4004937	            0x7519	                           jne 0x4004952	      1140	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36
0x4004939	        0x488b7308	                mov rsi, qword [rbx + 8]	      1141	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36
0x400493d	          0x4989f0	                             mov r8, rsi	      1141	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36
0x4004940	    0x4181e0000400	                          and r8d, 0x400	      1141	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36
0x4004947	     0xf8414040000	                            je 0x4004d61	      1141	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36
0x400494d	      0xe931010000	                           jmp 0x4004a83	      1141	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36
0x4004952	        0x4883f907	                              cmp rcx, 7	      1142	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36
0x4004956	     0xf8527010000	                           jne 0x4004a83	      1142	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36
0x400495c	      0xe90a040000	                           jmp 0x4004d6b	      1142	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36
0x4004961	        0x4c8d41ff	                       lea r8, [rcx - 1]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004965	        0x4983f801	                               cmp r8, 1	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004969	     0xf8614010000	                           jbe 0x4004a83	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x400496f	    0x4c8d89b01a8b	              lea r9, [rcx - 0x6474e550]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004976	          0x4989f0	                             mov r8, rsi	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004979	        0x4983f902	                               cmp r9, 2	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x400497d	     0xf87fe030000	                            ja 0x4004d81	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004983	      0xe9fb000000	                           jmp 0x4004a83	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004988	        0x4c8b4b18	              mov r9, qword [rbx + 0x18]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x400498c	        0x4c8b7010	            mov r14, qword [rax + 0x10] 	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004990	          0x4d39f1	                             cmp r9, r14	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004993	     0xf82ea000000	                            jb 0x4004a83	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004999	        0x4c034b20	              add r9, qword [rbx + 0x20]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x400499d	          0x4d29f1	                             sub r9, r14	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40049a0	        0x4c3b4828	              cmp r9, qword [rax + 0x28]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40049a4	     0xf87d9000000	                            ja 0x4004a83	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40049aa	          0x4885f6	                           test rsi, rsi	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40049ad	            0x7445	                            je 0x40049f4	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40049af	        0x4c8b7310	            mov r14, qword [rbx + 0x10] 	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40049b3	        0x4c8b4818	              mov r9, qword [rax + 0x18]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40049b7	          0x4d39ce	                             cmp r14, r9	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40049ba	     0xf82c3000000	                            jb 0x4004a83	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40049c0	          0x4d29ce	                             sub r14, r9	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40049c3	          0x4d85c0	                             test r8, r8	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40049c6	        0x410f94c1	                                sete r9b	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40049ca	        0x4883f907	                              cmp rcx, 7	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40049ce	        0x410f94c0	                                sete r8b	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40049d2	          0x4508c1	                             or r9b, r8b	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40049d5	            0x750c	                           jne 0x40049e3	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40049d7	    0x41b800000000	                              mov r8d, 0	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40049dd	        0x4183fb08	                             cmp r11d, 8	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40049e1	            0x7404	                            je 0x40049e7	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40049e3	        0x4c8b4320	              mov r8, qword [rbx + 0x20]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40049e7	          0x4d01f0	                             add r8, r14	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40049ea	        0x4c3b4030	              cmp r8, qword [rax + 0x30]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40049ee	     0xf878f000000	                            ja 0x4004a83	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40049f4	        0x4883f902	                              cmp rcx, 2	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40049f8	            0x7546	                           jne 0x4004a40	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40049fa	      0x48837b2000	               cmp qword [rbx + 0x20], 0	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x40049ff	            0x753f	                           jne 0x4004a40	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004a01	        0x4c8b4030	              mov r8, qword [rax + 0x30]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004a05	          0x4d85c0	                             test r8, r8	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004a08	            0x7436	                            je 0x4004a40	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004a0a	        0x4183fb08	                             cmp r11d, 8	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004a0e	            0x7416	                            je 0x4004a26	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004a10	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004a14	        0x4c8b4810	              mov r9, qword [rax + 0x10]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004a18	          0x4c39c9	                             cmp rcx, r9	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004a1b	            0x7666	                           jbe 0x4004a83	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004a1d	          0x4c29c9	                             sub rcx, r9	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004a20	        0x483b4828	            cmp rcx, qword [rax + 0x28] 	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004a24	            0x735d	                           jae 0x4004a83	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004a26	          0x4885f6	                           test rsi, rsi	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004a29	            0x7415	                            je 0x4004a40	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004a2b	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004a2f	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004a33	          0x4839f1	                            cmp rcx, rsi	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004a36	            0x764b	                           jbe 0x4004a83	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004a38	          0x4829f1	                            sub rcx, rsi	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004a3b	          0x4939c8	                             cmp r8, rcx	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004a3e	            0x7643	                           jbe 0x4004a83	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004a40	          0x4585d2	                         test r10d, r10d	      1145	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_37
0x4004a43	            0x7513	                           jne 0x4004a58	      1145	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_37
0x4004a45	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      1146	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_37
0x4004a49	        0x48034820	             add rcx, qword [rax + 0x20]	      1146	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_37
0x4004a4d	        0x482b4818	             sub rcx, qword [rax + 0x18]	      1146	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_37
0x4004a51	      0x49894c2430	             mov qword [r12 + 0x30], rcx	      1146	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_37
0x4004a56	            0xeb11	                           jmp 0x4004a69	      1146	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_37
0x4004a58	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	      1156	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	ELSE_9
0x4004a5c	        0x48034820	             add rcx, qword [rax + 0x20]	      1156	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	ELSE_9
0x4004a60	        0x482b4810	             sub rcx, qword [rax + 0x10]	      1156	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	ELSE_9
0x4004a64	      0x49894c2430	             mov qword [r12 + 0x30], rcx	      1156	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	ELSE_9
0x4004a69	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	      1163	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_38
0x4004a6d	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      1163	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_38
0x4004a71	          0x4839ce	                            cmp rsi, rcx	      1163	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_38
0x4004a74	            0x720d	                            jb 0x4004a83	      1163	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_38
0x4004a76	        0x48037320	             add rsi, qword [rbx + 0x20]	      1164	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_38
0x4004a7a	        0x48034830	             add rcx, qword [rax + 0x30]	      1164	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_38
0x4004a7e	          0x4839ce	                            cmp rsi, rcx	      1164	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_38
0x4004a81	            0x7617	                           jbe 0x4004a9a	      1164	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	IF_38
0x4004a83	          0x83c201	                              add edx, 1	      1138	elf.c	FUNCTION_26	IF_32	FOR_2	CALL_23
0x4004a86	        0x4883c040	                           add rax, 0x40	      1138	elf.c	FUNCTION_26	IF_32	FOR_2	CALL_23
0x4004a8a	    0x488b8df80000	            mov rcx, qword [rbp + 0xf8] 	      1138	elf.c	FUNCTION_26	IF_32	FOR_2	CALL_23
0x4004a91	          0x395144	            cmp dword [rcx + 0x44], edx 	      1138	elf.c	FUNCTION_26	IF_32	FOR_2	CALL_23
0x4004a94	     0xf8796feffff	                            ja 0x4004930	      1138	elf.c	FUNCTION_26	IF_32	FOR_2	CALL_23
0x4004a9a	    0x41be01000000	                             mov r14d, 1	      1253	elf.c	FUNCTION_26	ELSE_12
0x4004aa0	    0xf7c700200000	                        test edi, 0x2000	      1173	elf.c	FUNCTION_26	IF_39
0x4004aa6	     0xf8497010000	                            je 0x4004c43	      1173	elf.c	FUNCTION_26	IF_39
0x4004aac	      0x410fb64501	               movzx eax, byte [r13 + 1]	      1174	elf.c	FUNCTION_26	IF_39
0x4004ab1	            0x3c64	                            cmp al, 0x64	      1174	elf.c	FUNCTION_26	IF_39
0x4004ab3	            0x750c	                           jne 0x4004ac1	      1174	elf.c	FUNCTION_26	IF_39
0x4004ab5	      0x41807d065f	                cmp byte [r13 + 6], 0x5f	      1174	elf.c	FUNCTION_26	IF_39
0x4004aba	            0x741e	                            je 0x4004ada	      1174	elf.c	FUNCTION_26	IF_39
0x4004abc	      0xe982010000	                           jmp 0x4004c43	      1174	elf.c	FUNCTION_26	IF_39
0x4004ac1	    0x41be01000000	                             mov r14d, 1	      1253	elf.c	FUNCTION_26	ELSE_12
0x4004ac7	            0x3c7a	                            cmp al, 0x7a	      1175	elf.c	FUNCTION_26	IF_39
0x4004ac9	     0xf8574010000	                           jne 0x4004c43	      1175	elf.c	FUNCTION_26	IF_39
0x4004acf	      0x41807d075f	                cmp byte [r13 + 7], 0x5f	      1175	elf.c	FUNCTION_26	IF_39
0x4004ad4	     0xf8569010000	                           jne 0x4004c43	      1175	elf.c	FUNCTION_26	IF_39
0x4004ada	      0x488d4c2440	                   lea rcx, [rsp + 0x40]	      1180	elf.c	FUNCTION_26	IF_39
0x4004adf	      0x488d54243c	                   lea rdx, [rsp + 0x3c]	      1180	elf.c	FUNCTION_26	IF_39
0x4004ae4	          0x4c89e6	                            mov rsi, r12	      1180	elf.c	FUNCTION_26	IF_39
0x4004ae7	          0x4889ef	                            mov rdi, rbp	      1180	elf.c	FUNCTION_26	IF_39
0x4004aea	      0xe800000000	                          call 0x4004aef	      1180	elf.c	FUNCTION_26	IF_39
0x4004aef	            0x85c0	                           test eax, eax	      1185	elf.c	FUNCTION_26	IF_39	IF_40
0x4004af1	     0xf84b0020000	                            je 0x4004da7	      1185	elf.c	FUNCTION_26	IF_39	IF_40
0x4004af7	        0xf6454610	           test byte [rbp + 0x46], 0x10 	      1188	elf.c	FUNCTION_26	IF_39	IF_40	IF_41
0x4004afb	     0xf8595000000	                           jne 0x4004b96	      1188	elf.c	FUNCTION_26	IF_39	IF_40	IF_41
0x4004b01	      0xe9a1020000	                           jmp 0x4004da7	      1188	elf.c	FUNCTION_26	IF_39	IF_40	IF_41
0x4004b06	          0x8b5544	            mov edx, dword [rbp + 0x44] 	      1197	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x4004b09	          0xc1ea05	                              shr edx, 5	      1197	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x4004b0c	    0x81e2ffff0f00	                        and edx, 0xfffff	      1197	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x4004b12	    0x41be01000000	                             mov r14d, 1	      1205	elf.c	FUNCTION_26	IF_39	IF_42	ELSE_10
0x4004b18	          0xf6c640	                           test dh, 0x40	      1197	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x4004b1b	     0xf8422010000	                            je 0x4004c43	      1197	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x4004b21	        0x8b4c243c	            mov ecx, dword [rsp + 0x3c] 	      1198	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x4004b25	            0x85c9	                           test ecx, ecx	      1198	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x4004b27	     0xf88f8000000	                            js 0x4004c25	      1198	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x4004b2d	    0x48837c244000	               cmp qword [rsp + 0x40], 0	      1199	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x4004b33	     0xf840a010000	                            je 0x4004c43	      1199	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x4004b39	            0x85c0	                           test eax, eax	      1200	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x4004b3b	            0x7415	                            je 0x4004b52	      1200	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x4004b3d	            0x85c9	                           test ecx, ecx	      1201	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x4004b3f	           0xf9fc1	                                 setg cl	      1201	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x4004b42	            0x89d0	                            mov eax, edx	      1201	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x4004b44	          0xc1e811	                           shr eax, 0x11	      1201	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x4004b47	          0x83e001	                              and eax, 1	      1201	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x4004b4a	            0x38c1	                              cmp cl, al	      1201	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x4004b4c	     0xf84db000000	                            je 0x4004c2d	      1201	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x4004b52	          0x4c89e6	                            mov rsi, r12	      1210	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45	CALL_26
0x4004b55	          0x4889ef	                            mov rdi, rbp	      1210	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45	CALL_26
0x4004b58	      0xe800000000	                          call 0x4004b5d	      1210	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45	CALL_26
0x4004b5d	          0x4189c6	                           mov r14d, eax	      1210	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45	CALL_26
0x4004b60	      0xb801000000	                              mov eax, 1	      1210	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45	CALL_26
0x4004b65	          0x4585f6	                         test r14d, r14d	      1210	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45	CALL_26
0x4004b68	            0x756d	                           jne 0x4004bd7	      1210	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45	CALL_26
0x4004b6a	      0xba05000000	                              mov edx, 5	      1214	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45	CALL_28
0x4004b6f	      0xbe00000000	                              mov esi, 0	      1214	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45	CALL_28
0x4004b74	      0xbf00000000	                              mov edi, 0	      1214	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45	CALL_28
0x4004b79	      0xe800000000	                          call 0x4004b7e	      1214	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45	CALL_28
0x4004b7e	          0x4c89ea	                            mov rdx, r13	      1212	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45	CALL_27
0x4004b81	          0x4889ee	                            mov rsi, rbp	      1212	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45	CALL_27
0x4004b84	          0x4889c7	                            mov rdi, rax	      1212	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45	CALL_27
0x4004b87	      0xb800000000	                              mov eax, 0	      1212	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45	CALL_27
0x4004b8c	      0xe800000000	                          call 0x4004b91	      1212	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45	CALL_27
0x4004b91	      0xe9ad000000	                           jmp 0x4004c43	      1216	elf.c	FUNCTION_26	IF_39	ELSE_10	IF_44	IF_45
0x4004b96	          0x4c89e6	                            mov rsi, r12	      1221	elf.c	FUNCTION_26	IF_39	ELSE_11	IF_46	CALL_29
0x4004b99	          0x4889ef	                            mov rdi, rbp	      1221	elf.c	FUNCTION_26	IF_39	ELSE_11	IF_46	CALL_29
0x4004b9c	      0xe800000000	                          call 0x4004ba1	      1221	elf.c	FUNCTION_26	IF_39	ELSE_11	IF_46	CALL_29
0x4004ba1	          0x4189c6	                           mov r14d, eax	      1221	elf.c	FUNCTION_26	IF_39	ELSE_11	IF_46	CALL_29
0x4004ba4	      0xb802000000	                              mov eax, 2	      1189	elf.c	FUNCTION_26	IF_39	IF_40	IF_41
0x4004ba9	          0x4585f6	                         test r14d, r14d	      1221	elf.c	FUNCTION_26	IF_39	ELSE_11	IF_46	CALL_29
0x4004bac	            0x7529	                           jne 0x4004bd7	      1221	elf.c	FUNCTION_26	IF_39	ELSE_11	IF_46	CALL_29
0x4004bae	      0xba05000000	                              mov edx, 5	      1225	elf.c	FUNCTION_26	IF_39	ELSE_11	IF_46	CALL_31
0x4004bb3	      0xbe00000000	                              mov esi, 0	      1225	elf.c	FUNCTION_26	IF_39	ELSE_11	IF_46	CALL_31
0x4004bb8	      0xbf00000000	                              mov edi, 0	      1225	elf.c	FUNCTION_26	IF_39	ELSE_11	IF_46	CALL_31
0x4004bbd	      0xe800000000	                          call 0x4004bc2	      1225	elf.c	FUNCTION_26	IF_39	ELSE_11	IF_46	CALL_31
0x4004bc2	          0x4c89ea	                            mov rdx, r13	      1223	elf.c	FUNCTION_26	IF_39	ELSE_11	IF_46	CALL_30
0x4004bc5	          0x4889ee	                            mov rsi, rbp	      1223	elf.c	FUNCTION_26	IF_39	ELSE_11	IF_46	CALL_30
0x4004bc8	          0x4889c7	                            mov rdi, rax	      1223	elf.c	FUNCTION_26	IF_39	ELSE_11	IF_46	CALL_30
0x4004bcb	      0xb800000000	                              mov eax, 0	      1223	elf.c	FUNCTION_26	IF_39	ELSE_11	IF_46	CALL_30
0x4004bd0	      0xe800000000	                          call 0x4004bd5	      1223	elf.c	FUNCTION_26	IF_39	ELSE_11	IF_46	CALL_30
0x4004bd5	            0xeb6c	                           jmp 0x4004c43	      1227	elf.c	FUNCTION_26	IF_39	ELSE_11	IF_46
0x4004bd7	        0xf6454808	               test byte [rbp + 0x48], 8	      1231	elf.c	FUNCTION_26	IF_39	IF_47
0x4004bdb	            0x7437	                            je 0x4004c14	      1231	elf.c	FUNCTION_26	IF_39	IF_47
0x4004bdd	      0x41807d017a	                cmp byte [r13 + 1], 0x7a	      1233	elf.c	FUNCTION_26	IF_39	IF_47	IF_48
0x4004be2	            0x7539	                           jne 0x4004c1d	      1233	elf.c	FUNCTION_26	IF_39	IF_47	IF_48
0x4004be4	          0x83f802	                              cmp eax, 2	      1234	elf.c	FUNCTION_26	IF_39	IF_47	IF_48
0x4004be7	            0x740b	                            je 0x4004bf4	      1234	elf.c	FUNCTION_26	IF_39	IF_47	IF_48
0x4004be9	          0x83f801	                              cmp eax, 1	      1235	elf.c	FUNCTION_26	IF_39	IF_47	IF_48
0x4004bec	            0x752f	                           jne 0x4004c1d	      1235	elf.c	FUNCTION_26	IF_39	IF_47	IF_48
0x4004bee	        0xf6454640	           test byte [rbp + 0x46], 0x40 	      1236	elf.c	FUNCTION_26	IF_39	IF_47	IF_48
0x4004bf2	            0x7429	                            je 0x4004c1d	      1236	elf.c	FUNCTION_26	IF_39	IF_47	IF_48
0x4004bf4	          0x4c89ee	                            mov rsi, r13	      1241	elf.c	FUNCTION_26	IF_39	IF_47	IF_48	CALL_32
0x4004bf7	          0x4889ef	                            mov rdi, rbp	      1241	elf.c	FUNCTION_26	IF_39	IF_47	IF_48	CALL_32
0x4004bfa	      0xe804bdffff	        call sym.convert_zdebug_to_debug	      1241	elf.c	FUNCTION_26	IF_39	IF_47	IF_48	CALL_32
0x4004bff	          0x4885c0	                           test rax, rax	      1242	elf.c	FUNCTION_26	IF_39	IF_47	IF_48	IF_49
0x4004c02	            0x7431	                            je 0x4004c35	      1242	elf.c	FUNCTION_26	IF_39	IF_47	IF_48	IF_49
0x4004c04	          0x4889c2	                            mov rdx, rax	      1244	elf.c	FUNCTION_26	IF_39	IF_47	IF_48	CALL_33
0x4004c07	          0x4c89e6	                            mov rsi, r12	      1244	elf.c	FUNCTION_26	IF_39	IF_47	IF_48	CALL_33
0x4004c0a	          0x4889ef	                            mov rdi, rbp	      1244	elf.c	FUNCTION_26	IF_39	IF_47	IF_48	CALL_33
0x4004c0d	      0xe800000000	                          call 0x4004c12	      1244	elf.c	FUNCTION_26	IF_39	IF_47	IF_48	CALL_33
0x4004c12	            0xeb09	                           jmp 0x4004c1d	      1244	elf.c	FUNCTION_26	IF_39	IF_47	IF_48	CALL_33
0x4004c14	    0x41814c242000	       or dword [r12 + 0x20], 0x10000000	      1250	elf.c	FUNCTION_26	IF_39	ELSE_12
0x4004c1d	    0x41be01000000	                             mov r14d, 1	      1253	elf.c	FUNCTION_26	ELSE_12
0x4004c23	            0xeb1e	                           jmp 0x4004c43	      1253	elf.c	FUNCTION_26	ELSE_12
0x4004c25	    0x41be01000000	                             mov r14d, 1	      1205	elf.c	FUNCTION_26	IF_39	IF_42	ELSE_10
0x4004c2b	            0xeb16	                           jmp 0x4004c43	      1205	elf.c	FUNCTION_26	IF_39	IF_42	ELSE_10
0x4004c2d	    0x41be01000000	                             mov r14d, 1	      1205	elf.c	FUNCTION_26	IF_39	IF_42	ELSE_10
0x4004c33	            0xeb0e	                           jmp 0x4004c43	      1205	elf.c	FUNCTION_26	IF_39	IF_42	ELSE_10
0x4004c35	    0x41be00000000	                             mov r14d, 0	      1243	elf.c	FUNCTION_26	IF_39	IF_47	IF_48	IF_49
0x4004c3b	            0xeb06	                           jmp 0x4004c43	      1243	elf.c	FUNCTION_26	IF_39	IF_47	IF_48	IF_49
0x4004c3d	    0x41be01000000	                             mov r14d, 1	      1135	elf.c	FUNCTION_26	IF_32	IF_35
0x4004c43	          0x4489f0	                           mov eax, r14d	      1254	elf.c	FUNCTION_26	ELSE_12
0x4004c46	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      1254	elf.c	FUNCTION_26	ELSE_12
0x4004c4e	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      1254	elf.c	FUNCTION_26	ELSE_12
0x4004c57	     0xf8484010000	                            je 0x4004de1	      1254	elf.c	FUNCTION_26	ELSE_12
0x4004c5d	      0xe97a010000	                           jmp 0x4004ddc	      1254	elf.c	FUNCTION_26	ELSE_12
0x4004c62	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	       755	elf.c	FUNCTION_21	IF_15	CALL_37
0x4004c69	    0x8b80740c0000	           mov eax, dword [rax + 0xc74] 	       755	elf.c	FUNCTION_21	IF_15	CALL_37
0x4004c6f	        0x89442428	             mov dword [rsp + 0x28], eax	       755	elf.c	FUNCTION_21	IF_15	CALL_37
0x4004c73	      0xe9dbf8ffff	                           jmp 0x4004553	       755	elf.c	FUNCTION_21	IF_15	CALL_37
0x4004c78	        0x4183ffff	            cmp r15d, 0xffffffffffffffff	       753	elf.c	FUNCTION_21	IF_15
0x4004c7c	            0x75e4	                           jne 0x4004c62	       753	elf.c	FUNCTION_21	IF_15
0x4004c7e	      0xe9c0faffff	                           jmp 0x4004743	       753	elf.c	FUNCTION_21	IF_15
0x4004c83	    0x498b9424e000	            mov rdx, qword [r12 + 0xe0] 	       804	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_20	CALL_45
0x4004c8b	    0x488b8eb00000	            mov rcx, qword [rsi + 0xb0] 	       804	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_20	CALL_45
0x4004c92	    0x48898ab00000	             mov qword [rdx + 0xb0], rcx	       804	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_20	CALL_45
0x4004c99	    0x498b9424e000	            mov rdx, qword [r12 + 0xe0] 	       805	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_20	CALL_47
0x4004ca1	    0x488b88e00000	            mov rcx, qword [rax + 0xe0] 	       805	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_20	CALL_47
0x4004ca8	    0x488b89c00000	            mov rcx, qword [rcx + 0xc0] 	       805	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_20	CALL_47
0x4004caf	    0x48898ac00000	             mov qword [rdx + 0xc0], rcx	       805	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_20	CALL_47
0x4004cb6	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	       806	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_20	CALL_48
0x4004cbd	    0x4c89a0c00000	             mov qword [rax + 0xc0], r12	       806	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_20	CALL_48
0x4004cc4	      0xe936faffff	                           jmp 0x40046ff	       806	elf.c	FUNCTION_21	IF_15	FOR_3	WHILE_2	IF_18	IF_20	CALL_48
0x4004cc9	        0x418b7628	            mov esi, dword [r14 + 0x28] 	       566	elf.c	FUNCTION_20	IF_1	CALL_1
0x4004ccd	    0x3bb7fc020000	           cmp esi, dword [rdi + 0x2fc] 	       566	elf.c	FUNCTION_20	IF_1	CALL_1
0x4004cd3	     0xf827cf9ffff	                            jb 0x4004655	       566	elf.c	FUNCTION_20	IF_1	CALL_1
0x4004cd9	    0x41be00000000	                             mov r14d, 0	      1053	elf.c	FUNCTION_26	IF_13	IF_14
0x4004cdf	      0xe95fffffff	                           jmp 0x4004c43	      1053	elf.c	FUNCTION_26	IF_13	IF_14
0x4004ce4	    0x41be00000000	                             mov r14d, 0	      1053	elf.c	FUNCTION_26	IF_13	IF_14
0x4004cea	      0xe954ffffff	                           jmp 0x4004c43	      1053	elf.c	FUNCTION_26	IF_13	IF_14
0x4004cef	      0xb806000000	                              mov eax, 6	      1068	elf.c	FUNCTION_26	IF_17	IF_18	IF_19
0x4004cf4	      0xbe00000000	                              mov esi, 0	      1068	elf.c	FUNCTION_26	IF_17	IF_18	IF_19
0x4004cf9	            0xeb3a	                           jmp 0x4004d35	      1068	elf.c	FUNCTION_26	IF_17	IF_18	IF_19
0x4004cfb	      0xb811000000	                           mov eax, 0x11	      1070	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_2	IF_20
0x4004d00	      0xbe00000000	                              mov esi, 0	      1070	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_2	IF_20
0x4004d05	            0xeb2e	                           jmp 0x4004d35	      1070	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_2	IF_20
0x4004d07	      0xb80b000000	                            mov eax, 0xb	      1072	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_3	IF_21
0x4004d0c	      0xbe00000000	                              mov esi, 0	      1072	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_3	IF_21
0x4004d11	            0xeb22	                           jmp 0x4004d35	      1072	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_3	IF_21
0x4004d13	      0xb805000000	                              mov eax, 5	      1074	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_4	IF_22
0x4004d18	      0xbe00000000	                              mov esi, 0	      1074	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_4	IF_22
0x4004d1d	            0xeb16	                           jmp 0x4004d35	      1074	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_4	IF_22
0x4004d1f	      0xb805000000	                              mov eax, 5	      1076	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_5	IF_23
0x4004d24	      0xbe00000000	                              mov esi, 0	      1076	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_5	IF_23
0x4004d29	            0xeb0a	                           jmp 0x4004d35	      1076	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_5	IF_23
0x4004d2b	      0xb807000000	                              mov eax, 7	      1078	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_6	IF_24
0x4004d30	      0xbe00000000	                              mov esi, 0	      1078	elf.c	FUNCTION_26	IF_17	IF_18	ELSE_6	IF_24
0x4004d35	          0x4863d0	                         movsxd rdx, eax	      1081	elf.c	FUNCTION_26	IF_17	IF_18	IF_25	CALL_11
0x4004d38	          0x4c89ef	                            mov rdi, r13	      1081	elf.c	FUNCTION_26	IF_17	IF_18	IF_25	CALL_11
0x4004d3b	      0xe800000000	                          call 0x4004d40	      1081	elf.c	FUNCTION_26	IF_17	IF_18	IF_25	CALL_11
0x4004d40	            0x85c0	                           test eax, eax	      1081	elf.c	FUNCTION_26	IF_17	IF_18	IF_25	CALL_11
0x4004d42	     0xf84abfaffff	                            je 0x40047f3	      1081	elf.c	FUNCTION_26	IF_17	IF_18	IF_25	CALL_11
0x4004d48	      0xe9b2faffff	                           jmp 0x40047ff	      1081	elf.c	FUNCTION_26	IF_17	IF_18	IF_25	CALL_11
0x4004d4d	        0x4183f801	                              cmp r8d, 1	      1134	elf.c	FUNCTION_26	IF_32	IF_35	CALL_21
0x4004d51	     0xf87e6feffff	                            ja 0x4004c3d	      1134	elf.c	FUNCTION_26	IF_32	IF_35	CALL_21
0x4004d57	      0xba00000000	                              mov edx, 0	      1134	elf.c	FUNCTION_26	IF_32	IF_35	CALL_21
0x4004d5c	      0xe9c8fbffff	                           jmp 0x4004929	      1134	elf.c	FUNCTION_26	IF_32	IF_35	CALL_21
0x4004d61	          0x83e602	                              and esi, 2	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004d64	            0x752e	                           jne 0x4004d94	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004d66	      0xe9f6fbffff	                           jmp 0x4004961	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004d6b	        0x488b7308	                mov rsi, qword [rbx + 8]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004d6f	          0x4989f0	                             mov r8, rsi	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004d72	    0x4181e0000400	                          and r8d, 0x400	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004d79	     0xf8404fdffff	                            je 0x4004a83	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004d7f	            0xeb54	                           jmp 0x4004dd5	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004d81	        0x448b5b04	               mov r11d, dword [rbx + 4]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004d85	        0x4183fb08	                             cmp r11d, 8	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004d89	     0xf85f9fbffff	                           jne 0x4004988	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004d8f	      0xe960fcffff	                           jmp 0x40049f4	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004d94	        0x448b5b04	               mov r11d, dword [rbx + 4]	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004d98	        0x4183fb08	                             cmp r11d, 8	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004d9c	     0xf85e6fbffff	                           jne 0x4004988	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004da2	      0xe908fcffff	                           jmp 0x40049af	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004da7	    0x41be01000000	                             mov r14d, 1	      1205	elf.c	FUNCTION_26	IF_39	IF_42	ELSE_10
0x4004dad	    0x49837c243800	               cmp qword [r12 + 0x38], 0	      1196	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x4004db3	     0xf848afeffff	                            je 0x4004c43	      1196	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x4004db9	      0xe948fdffff	                           jmp 0x4004b06	      1196	elf.c	FUNCTION_26	IF_39	IF_42	IF_43
0x4004dbe	        0x8b4c2438	            mov ecx, dword [rsp + 0x38] 	      1034	elf.c	FUNCTION_26	IF_6
0x4004dc2	      0xe940f3ffff	                           jmp 0x4004107	      1034	elf.c	FUNCTION_26	IF_6
0x4004dc7	        0x488b4308	                mov rax, qword [rbx + 8]	      1032	elf.c	FUNCTION_26	IF_6
0x4004dcb	            0xa802	                              test al, 2	      1032	elf.c	FUNCTION_26	IF_6
0x4004dcd	     0xf843bf3ffff	                            je 0x400410e	      1032	elf.c	FUNCTION_26	IF_6
0x4004dd3	            0xebe9	                           jmp 0x4004dbe	      1032	elf.c	FUNCTION_26	IF_6
0x4004dd5	          0x83e602	                              and esi, 2	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004dd8	            0x75ba	                           jne 0x4004d94	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004dda	            0xeba5	                           jmp 0x4004d81	      1143	elf.c	FUNCTION_26	IF_32	FOR_2	IF_36	CALL_24
0x4004ddc	      0xe800000000	                          call 0x4004de1	      1254	elf.c	FUNCTION_26	ELSE_12
0x4004de1	    0x4881c4980000	                           add rsp, 0x98	      1254	elf.c	FUNCTION_26	ELSE_12
0x4004de8	              0x5b	                                 pop rbx	      1254	elf.c	FUNCTION_26	ELSE_12
0x4004de9	              0x5d	                                 pop rbp	      1254	elf.c	FUNCTION_26	ELSE_12
0x4004dea	            0x415c	                                 pop r12	      1254	elf.c	FUNCTION_26	ELSE_12
0x4004dec	            0x415d	                                 pop r13	      1254	elf.c	FUNCTION_26	ELSE_12
0x4004dee	            0x415e	                                 pop r14	      1254	elf.c	FUNCTION_26	ELSE_12
0x4004df0	            0x415f	                                 pop r15	      1254	elf.c	FUNCTION_26	ELSE_12
0x4004df2	              0xc3	                                     ret	      1254	elf.c	FUNCTION_26	ELSE_12
_bfd_elf_validate_reloc	FOR,0:ELSE,3:IF,5:WHILE,0:DO,0:SWITCH,2:CALL,5:functions,0	90
0x400d61e	          0x488b06	                    mov rax, qword [rsi]	      8897	elf.c	FUNCTION_109	IF_1
0x400d621	          0x488b00	                    mov rax, qword [rax]	      8897	elf.c	FUNCTION_109	IF_1
0x400d624	          0x488b00	                    mov rax, qword [rax]	      8897	elf.c	FUNCTION_109	IF_1
0x400d627	        0x488b4f08	                mov rcx, qword [rdi + 8]	      8897	elf.c	FUNCTION_109	IF_1
0x400d62b	        0x48394808	                cmp qword [rax + 8], rcx	      8897	elf.c	FUNCTION_109	IF_1
0x400d62f	     0xf8416010000	                            je 0x400d74b	      8897	elf.c	FUNCTION_109	IF_1
0x400d635	              0x55	                                push rbp	      8894	elf.c	FUNCTION_109
0x400d636	              0x53	                                push rbx	      8894	elf.c	FUNCTION_109
0x400d637	        0x4883ec08	                              sub rsp, 8	      8894	elf.c	FUNCTION_109
0x400d63b	          0x4889f3	                            mov rbx, rsi	      8894	elf.c	FUNCTION_109
0x400d63e	          0x4889fd	                            mov rbp, rdi	      8894	elf.c	FUNCTION_109
0x400d641	        0x488b4618	            mov rax, qword [rsi + 0x18] 	      8905	elf.c	FUNCTION_109	IF_1	IF_2
0x400d645	        0x83781000	               cmp dword [rax + 0x10], 0	      8905	elf.c	FUNCTION_109	IF_1	IF_2
0x400d649	            0x746c	                            je 0x400d6b7	      8905	elf.c	FUNCTION_109	IF_1	IF_2
0x400d64b	          0x8b400c	              mov eax, dword [rax + 0xc]	      8907	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400d64e	          0x83e808	                              sub eax, 8	      8907	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400d651	          0x83f838	                           cmp eax, 0x38	      8907	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400d654	     0xf87b1000000	                            ja 0x400d70b	      8907	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400d65a	            0x89c0	                            mov eax, eax	      8907	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400d65c	    0xff24c5000000	                       jmp qword [rax*8]	      8907	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400d663	      0xbe0c000000	                            mov esi, 0xc	      8913	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400d668	            0xeb21	                           jmp 0x400d68b	      8913	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400d66a	      0xbe0b000000	                            mov esi, 0xb	      8916	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400d66f	            0xeb1a	                           jmp 0x400d68b	      8917	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400d671	      0xbe0a000000	                            mov esi, 0xa	      8919	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400d676	            0xeb13	                           jmp 0x400d68b	      8920	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400d678	      0xbe09000000	                              mov esi, 9	      8922	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400d67d	            0xeb0c	                           jmp 0x400d68b	      8923	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400d67f	      0xbe08000000	                              mov esi, 8	      8925	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400d684	            0xeb05	                           jmp 0x400d68b	      8926	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400d686	      0xbe0d000000	                            mov esi, 0xd	      8910	elf.c	FUNCTION_109	IF_1	IF_2	SWITCH_1
0x400d68b	          0x4889ef	                            mov rdi, rbp	      8931	elf.c	FUNCTION_109	IF_1	IF_2	CALL_1
0x400d68e	      0xe800000000	                          call 0x400d693	      8931	elf.c	FUNCTION_109	IF_1	IF_2	CALL_1
0x400d693	          0x8b5048	            mov edx, dword [rax + 0x48] 	      8933	elf.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400d696	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	      8933	elf.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400d69a	          0x395148	            cmp dword [rcx + 0x48], edx 	      8933	elf.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400d69d	            0x745c	                            je 0x400d6fb	      8933	elf.c	FUNCTION_109	IF_1	IF_2	IF_3
0x400d69f	            0x85d2	                           test edx, edx	      8935	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	IF_4
0x400d6a1	            0x740a	                            je 0x400d6ad	      8935	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	IF_4
0x400d6a3	        0x488b5308	                mov rdx, qword [rbx + 8]	      8936	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	IF_4
0x400d6a7	        0x48015310	            add qword [rbx + 0x10], rdx 	      8936	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	IF_4
0x400d6ab	            0xeb4e	                           jmp 0x400d6fb	      8936	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	IF_4
0x400d6ad	        0x488b5308	                mov rdx, qword [rbx + 8]	      8938	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	ELSE_1
0x400d6b1	        0x48295310	             sub qword [rbx + 0x10], rdx	      8938	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	ELSE_1
0x400d6b5	            0xeb44	                           jmp 0x400d6fb	      8938	elf.c	FUNCTION_109	IF_1	IF_2	IF_3	ELSE_1
0x400d6b7	          0x8b400c	              mov eax, dword [rax + 0xc]	      8943	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400d6ba	          0x83e808	                              sub eax, 8	      8943	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400d6bd	          0x83f838	                           cmp eax, 0x38	      8943	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400d6c0	            0x7749	                            ja 0x400d70b	      8943	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400d6c2	            0x89c0	                            mov eax, eax	      8943	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400d6c4	    0xff24c5000000	                       jmp qword [rax*8]	      8943	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400d6cb	      0xbe06000000	                              mov esi, 6	      8949	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400d6d0	            0xeb21	                           jmp 0x400d6f3	      8949	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400d6d2	      0xbe05000000	                              mov esi, 5	      8952	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400d6d7	            0xeb1a	                           jmp 0x400d6f3	      8953	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400d6d9	      0xbe03000000	                              mov esi, 3	      8955	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400d6de	            0xeb13	                           jmp 0x400d6f3	      8956	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400d6e0	      0xbe02000000	                              mov esi, 2	      8958	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400d6e5	            0xeb0c	                           jmp 0x400d6f3	      8959	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400d6e7	      0xbe01000000	                              mov esi, 1	      8961	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400d6ec	            0xeb05	                           jmp 0x400d6f3	      8962	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400d6ee	      0xbe07000000	                              mov esi, 7	      8946	elf.c	FUNCTION_109	IF_1	ELSE_1	ELSE_2	SWITCH_2
0x400d6f3	          0x4889ef	                            mov rdi, rbp	      8967	elf.c	FUNCTION_109	IF_1	ELSE_2	CALL_2
0x400d6f6	      0xe800000000	                          call 0x400d6fb	      8967	elf.c	FUNCTION_109	IF_1	ELSE_2	CALL_2
0x400d6fb	          0x4885c0	                           test rax, rax	      8970	elf.c	FUNCTION_109	IF_1	IF_5
0x400d6fe	            0x740b	                            je 0x400d70b	      8970	elf.c	FUNCTION_109	IF_1	IF_5
0x400d700	        0x48894318	             mov qword [rbx + 0x18], rax	      8971	elf.c	FUNCTION_109	IF_1	IF_5
0x400d704	      0xb801000000	                              mov eax, 1	      8976	elf.c	FUNCTION_109
0x400d709	            0xeb46	                           jmp 0x400d751	      8976	elf.c	FUNCTION_109
0x400d70b	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      8980	elf.c	FUNCTION_109	CALL_4
0x400d70f	        0x488b5828	            mov rbx, qword [rax + 0x28] 	      8980	elf.c	FUNCTION_109	CALL_4
0x400d713	      0xba05000000	                              mov edx, 5	      8980	elf.c	FUNCTION_109	CALL_4
0x400d718	      0xbe00000000	                              mov esi, 0	      8980	elf.c	FUNCTION_109	CALL_4
0x400d71d	      0xbf00000000	                              mov edi, 0	      8980	elf.c	FUNCTION_109	CALL_4
0x400d722	      0xe800000000	                          call 0x400d727	      8980	elf.c	FUNCTION_109	CALL_4
0x400d727	          0x4889da	                            mov rdx, rbx	      8980	elf.c	FUNCTION_109	CALL_4
0x400d72a	          0x4889ee	                            mov rsi, rbp	      8980	elf.c	FUNCTION_109	CALL_4
0x400d72d	          0x4889c7	                            mov rdi, rax	      8980	elf.c	FUNCTION_109	CALL_4
0x400d730	      0xb800000000	                              mov eax, 0	      8980	elf.c	FUNCTION_109	CALL_4
0x400d735	      0xe800000000	                          call 0x400d73a	      8980	elf.c	FUNCTION_109	CALL_4
0x400d73a	      0xbf11000000	                           mov edi, 0x11	      8982	elf.c	FUNCTION_109	CALL_5
0x400d73f	      0xe800000000	                          call 0x400d744	      8982	elf.c	FUNCTION_109	CALL_5
0x400d744	      0xb800000000	                              mov eax, 0	      8983	elf.c	FUNCTION_109
0x400d749	            0xeb06	                           jmp 0x400d751	      8983	elf.c	FUNCTION_109
0x400d74b	      0xb801000000	                              mov eax, 1	      8976	elf.c	FUNCTION_109
0x400d750	              0xc3	                                     ret	      8976	elf.c	FUNCTION_109
0x400d751	        0x4883c408	                              add rsp, 8	      8984	elf.c	FUNCTION_109
0x400d755	              0x5b	                                 pop rbx	      8984	elf.c	FUNCTION_109
0x400d756	              0x5d	                                 pop rbp	      8984	elf.c	FUNCTION_109
0x400d757	              0xc3	                                     ret	      8984	elf.c	FUNCTION_109
elfcore_write_aarch_tls	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,1:functions,0	8
0x400faa5	        0x4883ec10	                           sub rsp, 0x10	     10997	elf.c	FUNCTION_187
0x400faa9	          0x4989c9	                             mov r9, rcx	     10997	elf.c	FUNCTION_187
0x400faac	            0x4150	                                 push r8	     10999	elf.c	FUNCTION_187	CALL_1
0x400faae	    0x41b801040000	                          mov r8d, 0x401	     10999	elf.c	FUNCTION_187	CALL_1
0x400fab4	      0xb900000000	                              mov ecx, 0	     10999	elf.c	FUNCTION_187	CALL_1
0x400fab9	      0xe800000000	                          call 0x400fabe	     10999	elf.c	FUNCTION_187	CALL_1
0x400fabe	        0x4883c418	                           add rsp, 0x18	     11001	elf.c	FUNCTION_187
0x400fac2	              0xc3	                                     ret	     11001	elf.c	FUNCTION_187
_bfd_elf_copy_private_header_data	FOR,0:ELSE,0:IF,3:WHILE,0:DO,0:SWITCH,0:CALL,4:functions,0	1566
0x4009fc7	            0x4157	                                push r15	      7674	elf.c	FUNCTION_86
0x4009fc9	            0x4156	                                push r14	      7674	elf.c	FUNCTION_86
0x4009fcb	            0x4155	                                push r13	      7674	elf.c	FUNCTION_86
0x4009fcd	            0x4154	                                push r12	      7674	elf.c	FUNCTION_86
0x4009fcf	              0x55	                                push rbp	      7674	elf.c	FUNCTION_86
0x4009fd0	              0x53	                                push rbx	      7674	elf.c	FUNCTION_86
0x4009fd1	    0x4881ec980000	                           sub rsp, 0x98	      7674	elf.c	FUNCTION_86
0x4009fd8	          0x4889f8	                            mov rax, rdi	      7674	elf.c	FUNCTION_86
0x4009fdb	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      7674	elf.c	FUNCTION_86
0x4009fe0	      0x4889742410	             mov qword [rsp + 0x10], rsi	      7674	elf.c	FUNCTION_86
0x4009fe5	    0x64488b3c2528	                mov rdi, qword fs:[0x28]	      7674	elf.c	FUNCTION_86
0x4009fee	    0x4889bc248800	             mov qword [rsp + 0x88], rdi	      7674	elf.c	FUNCTION_86
0x4009ff6	            0x31ff	                            xor edi, edi	      7674	elf.c	FUNCTION_86
0x4009ff8	        0x488b5008	                mov rdx, qword [rax + 8]	      7675	elf.c	FUNCTION_86	IF_1
0x4009ffc	      0xb801000000	                              mov eax, 1	      7677	elf.c	FUNCTION_86	IF_1
0x400a001	        0x837a0805	                  cmp dword [rdx + 8], 5	      7675	elf.c	FUNCTION_86	IF_1
0x400a005	     0xf8576160000	                           jne 0x400b681	      7675	elf.c	FUNCTION_86	IF_1
0x400a00b	        0x488b4e08	                mov rcx, qword [rsi + 8]	      7676	elf.c	FUNCTION_86	IF_1
0x400a00f	      0xb801000000	                              mov eax, 1	      7677	elf.c	FUNCTION_86	IF_1
0x400a014	        0x83790805	                  cmp dword [rcx + 8], 5	      7676	elf.c	FUNCTION_86	IF_1
0x400a018	     0xf8563160000	                           jne 0x400b681	      7676	elf.c	FUNCTION_86	IF_1
0x400a01e	    0x488b86f80000	            mov rax, qword [rsi + 0xf8] 	      7684	elf.c	FUNCTION_86	IF_2	CALL_2
0x400a025	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      7684	elf.c	FUNCTION_86	IF_2	CALL_2
0x400a02c	        0x48833800	                      cmp qword [rax], 0	      7684	elf.c	FUNCTION_86	IF_2	CALL_2
0x400a030	     0xf853c160000	                           jne 0x400b672	      7684	elf.c	FUNCTION_86	IF_2	CALL_2
0x400a036	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      7684	elf.c	FUNCTION_86	IF_2	CALL_2
0x400a03b	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7684	elf.c	FUNCTION_86	IF_2	CALL_2
0x400a042	      0x4883786000	               cmp qword [rax + 0x60], 0	      7684	elf.c	FUNCTION_86	IF_2	CALL_2
0x400a047	     0xf8425160000	                            je 0x400b672	      7684	elf.c	FUNCTION_86	IF_2	CALL_2
0x400a04d	          0x4839ca	                            cmp rdx, rcx	      7374	elf.c	FUNCTION_82	IF_3
0x400a050	     0xf855e080000	                           jne 0x400a8b4	      7374	elf.c	FUNCTION_82	IF_3
0x400a056	    0x488b82680300	           mov rax, qword [rdx + 0x368] 	      7387	elf.c	FUNCTION_82	IF_3	IF_4
0x400a05d	    0xf6808a030000	          test byte [rax + 0x38a], 0x40 	      7387	elf.c	FUNCTION_82	IF_3	IF_4
0x400a064	     0xf85a0070000	                           jne 0x400a80a	      7387	elf.c	FUNCTION_82	IF_3	IF_4
0x400a06a	    0x488b86900000	            mov rax, qword [rsi + 0x90] 	      7391	elf.c	FUNCTION_82	IF_3	FOR_1
0x400a071	          0x4885c0	                           test rax, rax	      7391	elf.c	FUNCTION_82	IF_3	FOR_1
0x400a074	            0x740d	                            je 0x400a083	      7391	elf.c	FUNCTION_82	IF_3	FOR_1
0x400a076	        0x806024bf	             and byte [rax + 0x24], 0xbf	      7393	elf.c	FUNCTION_82	IF_3	FOR_1
0x400a07a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7392	elf.c	FUNCTION_82	IF_3	FOR_1
0x400a07e	          0x4885c0	                           test rax, rax	      7391	elf.c	FUNCTION_82	IF_3	FOR_1
0x400a081	            0x75f3	                           jne 0x400a076	      7391	elf.c	FUNCTION_82	IF_3	FOR_1
0x400a083	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      7395	elf.c	FUNCTION_82	IF_3	CALL_3
0x400a088	    0x488b90f80000	            mov rdx, qword [rax + 0xf8] 	      7395	elf.c	FUNCTION_82	IF_3	CALL_3
0x400a08f	          0x8b4244	            mov eax, dword [rdx + 0x44] 	      7395	elf.c	FUNCTION_82	IF_3	CALL_3
0x400a092	        0x488b7260	            mov rsi, qword [rdx + 0x60] 	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_4
0x400a096	            0x85c0	                           test eax, eax	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_4
0x400a098	     0xf84f3010000	                            je 0x400a291	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_4
0x400a09e	        0x448d50ff	                     lea r10d, [rax - 1]	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_4
0x400a0a2	        0x4983c201	                              add r10, 1	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_4
0x400a0a6	        0x49c1e206	                              shl r10, 6	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_4
0x400a0aa	          0x4901f2	                            add r10, rsi	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_4
0x400a0ad	      0x48837e2000	               cmp qword [rsi + 0x20], 0	      7404	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x400a0b2	            0x7518	                           jne 0x400a0cc	      7404	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x400a0b4	      0x48837e3000	               cmp qword [rsi + 0x30], 0	      7405	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x400a0b9	            0x7511	                           jne 0x400a0cc	      7405	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x400a0bb	          0x488b06	                    mov rax, qword [rsi]	      7406	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x400a0be	        0x4883e802	                              sub rax, 2	      7406	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x400a0c2	        0x4883f801	                              cmp rax, 1	      7406	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x400a0c6	     0xf8626070000	                           jbe 0x400a7f2	      7406	elf.c	FUNCTION_82	IF_3	FOR_2	IF_5
0x400a0cc	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      7409	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x400a0d1	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      7409	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x400a0d8	          0x4885c0	                           test rax, rax	      7409	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x400a0db	     0xf84a3010000	                            je 0x400a284	      7409	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x400a0e1	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      7414	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x400a0e5	          0x4885d2	                           test rdx, rdx	      7415	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_6
0x400a0e8	            0x7404	                            je 0x400a0ee	      7415	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_6
0x400a0ea	        0x804a2440	              or byte [rdx + 0x24], 0x40	      7416	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_6
0x400a0ee	    0x488bb8e00000	            mov rdi, qword [rax + 0xe0] 	      7419	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	CALL_5
0x400a0f5	        0x488b4f08	                mov rcx, qword [rdi + 8]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a0f9	          0x4989c9	                             mov r9, rcx	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a0fc	    0x4181e1000400	                          and r9d, 0x400	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a103	            0x7426	                            je 0x400a12b	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a105	          0x4c8b06	                     mov r8, qword [rsi]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a108	        0x4983f807	                               cmp r8, 7	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a10c	           0xf94c3	                                 sete bl	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a10f	    0x4981f852e574	                      cmp r8, 0x6474e552	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a116	        0x410f94c3	                               sete r11b	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a11a	          0x4408db	                             or bl, r11b	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a11d	            0x751d	                           jne 0x400a13c	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a11f	        0x4983f801	                               cmp r8, 1	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a123	     0xf854e010000	                           jne 0x400a277	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a129	            0xeb11	                           jmp 0x400a13c	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a12b	          0x488b1e	                    mov rbx, qword [rsi]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a12e	        0x4c8d43fa	                       lea r8, [rbx - 6]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a132	        0x4983f801	                               cmp r8, 1	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a136	     0xf863b010000	                           jbe 0x400a277	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a13c	          0x83e102	                              and ecx, 2	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a13f	     0xf856b150000	                           jne 0x400b6b0	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a145	          0x4c8b06	                     mov r8, qword [rsi]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a148	        0x4d8d58ff	                       lea r11, [r8 - 1]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a14c	        0x4983fb01	                              cmp r11, 1	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a150	     0xf8621010000	                           jbe 0x400a277	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a156	    0x4981e850e574	                      sub r8, 0x6474e550	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a15d	        0x4983f802	                               cmp r8, 2	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a161	     0xf8736150000	                            ja 0x400b69d	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a167	      0xe90b010000	                           jmp 0x400a277	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a16c	        0x4c8b4718	              mov r8, qword [rdi + 0x18]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a170	        0x488b5e10	            mov rbx, qword [rsi + 0x10] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a174	          0x4939d8	                             cmp r8, rbx	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a177	     0xf82fa000000	                            jb 0x400a277	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a17d	        0x4c034720	              add r8, qword [rdi + 0x20]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a181	          0x4929d8	                             sub r8, rbx	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a184	        0x4c3b4628	              cmp r8, qword [rsi + 0x28]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a188	     0xf87e9000000	                            ja 0x400a277	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a18e	          0x4885c9	                           test rcx, rcx	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a191	            0x743f	                            je 0x400a1d2	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a193	        0x4c8b4710	              mov r8, qword [rdi + 0x10]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a197	        0x488b5e18	            mov rbx, qword [rsi + 0x18] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a19b	          0x4939d8	                             cmp r8, rbx	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a19e	     0xf82d3000000	                            jb 0x400a277	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a1a4	          0x4929d8	                             sub r8, rbx	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a1a7	          0x4c89c3	                             mov rbx, r8	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a1aa	        0x4183fb08	                             cmp r11d, 8	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a1ae	            0x7511	                           jne 0x400a1c1	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a1b0	          0x4d85c9	                             test r9, r9	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a1b3	            0x740c	                            je 0x400a1c1	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a1b5	    0x41b800000000	                              mov r8d, 0	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a1bb	        0x48833e07	                      cmp qword [rsi], 7	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a1bf	            0x7504	                           jne 0x400a1c5	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a1c1	        0x4c8b4720	              mov r8, qword [rdi + 0x20]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a1c5	          0x4901d8	                             add r8, rbx	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a1c8	        0x4c3b4630	              cmp r8, qword [rsi + 0x30]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a1cc	     0xf87a5000000	                            ja 0x400a277	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a1d2	        0x48833e02	                      cmp qword [rsi], 2	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a1d6	            0x7546	                           jne 0x400a21e	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a1d8	      0x48837f2000	               cmp qword [rdi + 0x20], 0	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a1dd	            0x753f	                           jne 0x400a21e	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a1df	        0x4c8b4e30	              mov r9, qword [rsi + 0x30]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a1e3	          0x4d85c9	                             test r9, r9	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a1e6	            0x7436	                            je 0x400a21e	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a1e8	        0x4183fb08	                             cmp r11d, 8	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a1ec	            0x7416	                            je 0x400a204	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a1ee	        0x4c8b4718	              mov r8, qword [rdi + 0x18]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a1f2	        0x4c8b5e10	            mov r11, qword [rsi + 0x10] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a1f6	          0x4d39d8	                             cmp r8, r11	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a1f9	            0x767c	                           jbe 0x400a277	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a1fb	          0x4d29d8	                             sub r8, r11	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a1fe	        0x4c3b4628	              cmp r8, qword [rsi + 0x28]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a202	            0x7373	                           jae 0x400a277	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a204	          0x4885c9	                           test rcx, rcx	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a207	            0x7415	                            je 0x400a21e	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a209	        0x488b4f10	            mov rcx, qword [rdi + 0x10] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a20d	        0x488b7e18	            mov rdi, qword [rsi + 0x18] 	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a211	          0x4839f9	                            cmp rcx, rdi	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a214	            0x7661	                           jbe 0x400a277	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a216	          0x4829f9	                            sub rcx, rdi	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a219	          0x4939c9	                             cmp r9, rcx	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a21c	            0x7659	                           jbe 0x400a277	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400a21e	          0x4885d2	                           test rdx, rdx	      7424	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400a221	     0xf84cb050000	                            je 0x400a7f2	      7424	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400a227	          0x8b7a20	            mov edi, dword [rdx + 0x20] 	      7425	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400a22a	          0x397820	            cmp dword [rax + 0x20], edi 	      7425	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400a22d	     0xf85bf050000	                           jne 0x400a7f2	      7425	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400a233	        0x488b7a30	            mov rdi, qword [rdx + 0x30] 	      7426	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400a237	        0x48397830	            cmp qword [rax + 0x30], rdi 	      7426	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400a23b	     0xf85b1050000	                           jne 0x400a7f2	      7426	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400a241	        0x488b7a28	            mov rdi, qword [rdx + 0x28] 	      7427	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400a245	        0x48397828	            cmp qword [rax + 0x28], rdi 	      7427	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400a249	     0xf85a3050000	                           jne 0x400a7f2	      7427	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400a24f	        0x488b7a38	            mov rdi, qword [rdx + 0x38] 	      7428	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400a253	        0x48397838	            cmp qword [rax + 0x38], rdi 	      7428	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400a257	     0xf8595050000	                           jne 0x400a7f2	      7428	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400a25d	        0x488b7a40	            mov rdi, qword [rdx + 0x40] 	      7429	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400a261	        0x48397840	            cmp qword [rax + 0x40], rdi 	      7429	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400a265	     0xf8587050000	                           jne 0x400a7f2	      7429	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400a26b	          0x8b7a70	            mov edi, dword [rdx + 0x70] 	      7430	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400a26e	          0x397870	            cmp dword [rax + 0x70], edi 	      7430	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400a271	     0xf857b050000	                           jne 0x400a7f2	      7430	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	IF_8
0x400a277	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7410	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x400a27b	          0x4885c0	                           test rax, rax	      7409	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x400a27e	     0xf855dfeffff	                           jne 0x400a0e1	      7409	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3
0x400a284	        0x4883c640	                           add rsi, 0x40	      7398	elf.c	FUNCTION_82	IF_3	FOR_2
0x400a288	          0x4c39d6	                            cmp rsi, r10	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_4
0x400a28b	     0xf851cfeffff	                           jne 0x400a0ad	      7396	elf.c	FUNCTION_82	IF_3	FOR_2	CALL_4
0x400a291	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      7438	elf.c	FUNCTION_82	IF_3	FOR_4
0x400a296	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      7438	elf.c	FUNCTION_82	IF_3	FOR_4
0x400a29d	            0xeb12	                           jmp 0x400a2b1	      7438	elf.c	FUNCTION_82	IF_3	FOR_4
0x400a29f	        0xf6402440	           test byte [rax + 0x24], 0x40 	      7441	elf.c	FUNCTION_82	IF_3	FOR_4	IF_9
0x400a2a3	     0xf8449050000	                            je 0x400a7f2	      7441	elf.c	FUNCTION_82	IF_3	FOR_4	IF_9
0x400a2a9	        0x806024bf	             and byte [rax + 0x24], 0xbf	      7444	elf.c	FUNCTION_82	IF_3	FOR_4	ELSE_1
0x400a2ad	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7439	elf.c	FUNCTION_82	IF_3	FOR_4
0x400a2b1	          0x4885c0	                           test rax, rax	      7438	elf.c	FUNCTION_82	IF_3	FOR_4
0x400a2b4	            0x75e9	                           jne 0x400a29f	      7438	elf.c	FUNCTION_82	IF_3	FOR_4
0x400a2b6	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      7207	elf.c	FUNCTION_81	CALL_1
0x400a2bb	    0x4c8ba8f80000	            mov r13, qword [rax + 0xf8] 	      7207	elf.c	FUNCTION_81	CALL_1
0x400a2c2	    0x48c784248000	               mov qword [rsp + 0x80], 0	      7209	elf.c	FUNCTION_81
0x400a2ce	        0x418b4544	            mov eax, dword [r13 + 0x44] 	      7215	elf.c	FUNCTION_81	CALL_2
0x400a2d2	        0x498b5d60	            mov rbx, qword [r13 + 0x60] 	      7216	elf.c	FUNCTION_81	FOR_1	CALL_3
0x400a2d6	      0xba00000000	                              mov edx, 0	      7216	elf.c	FUNCTION_81	FOR_1	CALL_3
0x400a2db	            0xeb13	                           jmp 0x400a2f0	      7216	elf.c	FUNCTION_81	FOR_1	CALL_3
0x400a2dd	        0x4883c201	                              add rdx, 1	      7216	elf.c	FUNCTION_81	FOR_1	CALL_3
0x400a2e1	          0x4889d1	                            mov rcx, rdx	      7219	elf.c	FUNCTION_81	FOR_1	IF_1
0x400a2e4	        0x48c1e106	                              shl rcx, 6	      7219	elf.c	FUNCTION_81	FOR_1	IF_1
0x400a2e8	    0x48837c0be000	         cmp qword [rbx + rcx - 0x20], 0	      7219	elf.c	FUNCTION_81	FOR_1	IF_1
0x400a2ee	            0x750b	                           jne 0x400a2fb	      7219	elf.c	FUNCTION_81	FOR_1	IF_1
0x400a2f0	            0x39d0	                            cmp eax, edx	      7216	elf.c	FUNCTION_81	FOR_1	CALL_3
0x400a2f2	            0x77e9	                            ja 0x400a2dd	      7216	elf.c	FUNCTION_81	FOR_1	CALL_3
0x400a2f4	      0xba00000000	                              mov edx, 0	      7214	elf.c	FUNCTION_81
0x400a2f9	            0xeb05	                           jmp 0x400a300	      7214	elf.c	FUNCTION_81
0x400a2fb	      0xba01000000	                              mov edx, 1	      7221	elf.c	FUNCTION_81	FOR_1	IF_1
0x400a300	            0x89c0	                            mov eax, eax	      7221	elf.c	FUNCTION_81	FOR_1	IF_1
0x400a302	        0x48c1e006	                              shl rax, 6	      7221	elf.c	FUNCTION_81	FOR_1	IF_1
0x400a306	          0x4801d8	                            add rax, rbx	      7221	elf.c	FUNCTION_81	FOR_1	IF_1
0x400a309	      0x4889442408	                mov qword [rsp + 8], rax	      7221	elf.c	FUNCTION_81	FOR_1	IF_1
0x400a30e	    0x41be00000000	                             mov r14d, 0	      7204	elf.c	FUNCTION_81
0x400a314	    0x4c8dbc248000	                   lea r15, [rsp + 0x80]	      7210	elf.c	FUNCTION_81
0x400a31c	          0x83e201	                              and edx, 1	      7266	elf.c	FUNCTION_81	FOR_2
0x400a31f	          0x8d0412	                    lea eax, [rdx + rdx]	      7266	elf.c	FUNCTION_81	FOR_2
0x400a322	        0x88442420	               mov byte [rsp + 0x20], al	      7266	elf.c	FUNCTION_81	FOR_2
0x400a326	      0xe98a040000	                           jmp 0x400a7b5	      7266	elf.c	FUNCTION_81	FOR_2
0x400a32b	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x400a330	    0x488bb0900000	            mov rsi, qword [rax + 0x90] 	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x400a337	          0x4885f6	                           test rsi, rsi	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x400a33a	     0xf8460010000	                            je 0x400a4a0	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x400a340	    0x41bc00000000	                             mov r12d, 0	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x400a346	      0xbd00000000	                              mov ebp, 0	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x400a34b	    0x488b86e00000	            mov rax, qword [rsi + 0xe0] 	      7241	elf.c	FUNCTION_81	FOR_2	FOR_3	CALL_5
0x400a352	        0x488b5008	                mov rdx, qword [rax + 8]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a356	          0x4989d0	                             mov r8, rdx	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a359	    0x4181e0000400	                          and r8d, 0x400	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a360	            0x7427	                            je 0x400a389	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a362	          0x488b0b	                    mov rcx, qword [rbx]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a365	        0x4883f907	                              cmp rcx, 7	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a369	        0x410f94c1	                                sete r9b	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a36d	    0x4881f952e574	                     cmp rcx, 0x6474e552	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a374	        0x400f94c7	                                sete dil	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a378	          0x4108f9	                             or r9b, dil	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a37b	            0x751d	                           jne 0x400a39a	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a37d	        0x4883f901	                              cmp rcx, 1	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a381	     0xf85f5000000	                           jne 0x400a47c	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a387	            0xeb11	                           jmp 0x400a39a	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a389	          0x488b3b	                    mov rdi, qword [rbx]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a38c	        0x488d4ffa	                      lea rcx, [rdi - 6]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a390	        0x4883f901	                              cmp rcx, 1	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a394	     0xf86e2000000	                           jbe 0x400a47c	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a39a	          0x83e202	                              and edx, 2	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a39d	     0xf8520130000	                           jne 0x400b6c3	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a3a3	          0x488b0b	                    mov rcx, qword [rbx]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a3a6	        0x488d79ff	                      lea rdi, [rcx - 1]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a3aa	        0x4883ff01	                              cmp rdi, 1	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a3ae	     0xf86c8000000	                           jbe 0x400a47c	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a3b4	    0x4881e950e574	                     sub rcx, 0x6474e550	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a3bb	        0x4883f902	                              cmp rcx, 2	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a3bf	     0xf870f130000	                            ja 0x400b6d4	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a3c5	      0xe9b2000000	                           jmp 0x400a47c	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a3ca	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a3ce	        0x4c8b4b10	              mov r9, qword [rbx + 0x10]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a3d2	          0x4c39c9	                             cmp rcx, r9	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a3d5	     0xf82a1000000	                            jb 0x400a47c	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a3db	        0x48034820	             add rcx, qword [rax + 0x20]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a3df	          0x4c29c9	                             sub rcx, r9	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a3e2	        0x483b4b28	            cmp rcx, qword [rbx + 0x28] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a3e6	     0xf8790000000	                            ja 0x400a47c	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a3ec	          0x4885d2	                           test rdx, rdx	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a3ef	            0x7435	                            je 0x400a426	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a3f1	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a3f5	        0x4c8b4b18	              mov r9, qword [rbx + 0x18]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a3f9	          0x4c39c9	                             cmp rcx, r9	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a3fc	            0x727e	                            jb 0x400a47c	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a3fe	          0x4c29c9	                             sub rcx, r9	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a401	          0x4989c9	                             mov r9, rcx	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a404	          0x83ff08	                              cmp edi, 8	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a407	            0x7510	                           jne 0x400a419	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a409	          0x4d85c0	                             test r8, r8	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a40c	            0x740b	                            je 0x400a419	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a40e	      0xb900000000	                              mov ecx, 0	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a413	        0x48833b07	                      cmp qword [rbx], 7	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a417	            0x7504	                           jne 0x400a41d	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a419	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a41d	          0x4c01c9	                             add rcx, r9	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a420	        0x483b4b30	            cmp rcx, qword [rbx + 0x30] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a424	            0x7756	                            ja 0x400a47c	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a426	        0x48833b02	                      cmp qword [rbx], 2	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a42a	            0x7545	                           jne 0x400a471	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a42c	      0x4883782000	               cmp qword [rax + 0x20], 0	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a431	            0x753e	                           jne 0x400a471	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a433	        0x4c8b4330	              mov r8, qword [rbx + 0x30]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a437	          0x4d85c0	                             test r8, r8	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a43a	            0x7435	                            je 0x400a471	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a43c	          0x83ff08	                              cmp edi, 8	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a43f	            0x7416	                            je 0x400a457	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a441	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a445	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a449	          0x4839f9	                            cmp rcx, rdi	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a44c	            0x762e	                           jbe 0x400a47c	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a44e	          0x4829f9	                            sub rcx, rdi	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a451	        0x483b4b28	            cmp rcx, qword [rbx + 0x28] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a455	            0x7325	                           jae 0x400a47c	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a457	          0x4885d2	                           test rdx, rdx	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a45a	            0x7415	                            je 0x400a471	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a45c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a460	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a464	          0x4839d0	                            cmp rax, rdx	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a467	            0x7613	                           jbe 0x400a47c	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a469	          0x4829d0	                            sub rax, rdx	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a46c	          0x4939c0	                             cmp r8, rax	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a46f	            0x760b	                           jbe 0x400a47c	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400a471	          0x4885ed	                           test rbp, rbp	      7244	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	IF_3
0x400a474	        0x480f44ee	                          cmove rbp, rsi	      7244	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	IF_3
0x400a478	        0x4183c401	                             add r12d, 1	      7246	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2
0x400a47c	        0x488b7610	            mov rsi, qword [rsi + 0x10] 	      7239	elf.c	FUNCTION_81	FOR_2	FOR_3
0x400a480	          0x4885f6	                           test rsi, rsi	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x400a483	     0xf85c2feffff	                           jne 0x400a34b	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x400a489	      0xbe50000000	                           mov esi, 0x50	      7252	elf.c	FUNCTION_81	FOR_2
0x400a48e	          0x4585e4	                         test r12d, r12d	      7253	elf.c	FUNCTION_81	FOR_2	IF_4
0x400a491	            0x741b	                            je 0x400a4ae	      7253	elf.c	FUNCTION_81	FOR_2	IF_4
0x400a493	          0x4489e0	                           mov eax, r12d	      7254	elf.c	FUNCTION_81	FOR_2	IF_4
0x400a496	    0x488d34c54800	                 lea rsi, [rax*8 + 0x48]	      7254	elf.c	FUNCTION_81	FOR_2	IF_4
0x400a49e	            0xeb0e	                           jmp 0x400a4ae	      7254	elf.c	FUNCTION_81	FOR_2	IF_4
0x400a4a0	          0x4889f5	                            mov rbp, rsi	      7233	elf.c	FUNCTION_81	FOR_2
0x400a4a3	    0x41bc00000000	                             mov r12d, 0	      7237	elf.c	FUNCTION_81	FOR_2	FOR_3
0x400a4a9	      0xbe50000000	                           mov esi, 0x50	      7252	elf.c	FUNCTION_81	FOR_2
0x400a4ae	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      7255	elf.c	FUNCTION_81	FOR_2	CALL_7
0x400a4b3	      0xe800000000	                          call 0x400a4b8	      7255	elf.c	FUNCTION_81	FOR_2	CALL_7
0x400a4b8	          0x4885c0	                           test rax, rax	      7256	elf.c	FUNCTION_81	FOR_2	IF_5
0x400a4bb	     0xf8427030000	                            je 0x400a7e8	      7256	elf.c	FUNCTION_81	FOR_2	IF_5
0x400a4c1	    0x48c700000000	                      mov qword [rax], 0	      7261	elf.c	FUNCTION_81	FOR_2
0x400a4c8	          0x488b0b	                    mov rcx, qword [rbx]	      7262	elf.c	FUNCTION_81	FOR_2
0x400a4cb	        0x48894808	                mov qword [rax + 8], rcx	      7262	elf.c	FUNCTION_81	FOR_2
0x400a4cf	        0x488b5308	                mov rdx, qword [rbx + 8]	      7263	elf.c	FUNCTION_81	FOR_2
0x400a4d3	        0x48895010	             mov qword [rax + 0x10], rdx	      7263	elf.c	FUNCTION_81	FOR_2
0x400a4d7	         0xfb65040	           movzx edx, byte [rax + 0x40] 	      7264	elf.c	FUNCTION_81	FOR_2
0x400a4db	          0x83ca01	                               or edx, 1	      7264	elf.c	FUNCTION_81	FOR_2
0x400a4de	          0x885040	               mov byte [rax + 0x40], dl	      7264	elf.c	FUNCTION_81	FOR_2
0x400a4e1	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      7265	elf.c	FUNCTION_81	FOR_2
0x400a4e5	        0x48897018	             mov qword [rax + 0x18], rsi	      7265	elf.c	FUNCTION_81	FOR_2
0x400a4e9	          0x83e2fd	                     and edx, 0xfffffffd	      7266	elf.c	FUNCTION_81	FOR_2
0x400a4ec	         0xb542420	              or edx, dword [rsp + 0x20]	      7266	elf.c	FUNCTION_81	FOR_2
0x400a4f0	          0x885040	               mov byte [rax + 0x40], dl	      7266	elf.c	FUNCTION_81	FOR_2
0x400a4f3	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	      7267	elf.c	FUNCTION_81	FOR_2
0x400a4f7	        0x48897028	             mov qword [rax + 0x28], rsi	      7267	elf.c	FUNCTION_81	FOR_2
0x400a4fb	          0x83ca04	                               or edx, 4	      7268	elf.c	FUNCTION_81	FOR_2
0x400a4fe	          0x885040	               mov byte [rax + 0x40], dl	      7268	elf.c	FUNCTION_81	FOR_2
0x400a501	    0x48c740200000	               mov qword [rax + 0x20], 0	      7269	elf.c	FUNCTION_81	FOR_2
0x400a509	    0x4881e951e574	                     sub rcx, 0x6474e551	      7271	elf.c	FUNCTION_81	FOR_2	IF_6
0x400a510	        0x4883f901	                              cmp rcx, 1	      7271	elf.c	FUNCTION_81	FOR_2	IF_6
0x400a514	            0x770c	                            ja 0x400a522	      7271	elf.c	FUNCTION_81	FOR_2	IF_6
0x400a516	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      7280	elf.c	FUNCTION_81	FOR_2	IF_6
0x400a51a	        0x48895030	             mov qword [rax + 0x30], rdx	      7280	elf.c	FUNCTION_81	FOR_2	IF_6
0x400a51e	        0x80484008	                 or byte [rax + 0x40], 8	      7281	elf.c	FUNCTION_81	FOR_2	IF_6
0x400a522	      0xba00000000	                              mov edx, 0	      7287	elf.c	FUNCTION_81	FOR_2
0x400a527	      0x48837b1000	               cmp qword [rbx + 0x10], 0	      7287	elf.c	FUNCTION_81	FOR_2
0x400a52c	            0x750e	                           jne 0x400a53c	      7287	elf.c	FUNCTION_81	FOR_2
0x400a52e	        0x418b553c	            mov edx, dword [r13 + 0x3c] 	      7287	elf.c	FUNCTION_81	FOR_2
0x400a532	        0x48395328	            cmp qword [rbx + 0x28], rdx 	      7287	elf.c	FUNCTION_81	FOR_2
0x400a536	           0xf93c2	                                setae dl	      7287	elf.c	FUNCTION_81	FOR_2
0x400a539	           0xfb6d2	                           movzx edx, dl	      7287	elf.c	FUNCTION_81	FOR_2
0x400a53c	          0x83e201	                              and edx, 1	      7286	elf.c	FUNCTION_81	FOR_2
0x400a53f	          0xc1e204	                              shl edx, 4	      7286	elf.c	FUNCTION_81	FOR_2
0x400a542	         0xfb64840	           movzx ecx, byte [rax + 0x40] 	      7286	elf.c	FUNCTION_81	FOR_2
0x400a546	          0x83e1cf	                     and ecx, 0xffffffcf	      7286	elf.c	FUNCTION_81	FOR_2
0x400a549	             0x9ca	                             or edx, ecx	      7289	elf.c	FUNCTION_81	FOR_2
0x400a54b	          0x885040	               mov byte [rax + 0x40], dl	      7289	elf.c	FUNCTION_81	FOR_2
0x400a54e	          0x4585f6	                         test r14d, r14d	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x400a551	            0x7406	                            je 0x400a559	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x400a553	        0x48833b01	                      cmp qword [rbx], 1	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x400a557	            0x744f	                            je 0x400a5a8	      7290	elf.c	FUNCTION_81	FOR_2	IF_7
0x400a559	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	      7293	elf.c	FUNCTION_81	FOR_2	IF_7
0x400a55d	        0x498b4d18	            mov rcx, qword [r13 + 0x18] 	      7293	elf.c	FUNCTION_81	FOR_2	IF_7
0x400a561	      0xba00000000	                              mov edx, 0	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x400a566	          0x4839ce	                            cmp rsi, rcx	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x400a569	            0x7719	                            ja 0x400a584	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x400a56b	        0x48037328	             add rsi, qword [rbx + 0x28]	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x400a56f	        0x418b5544	            mov edx, dword [r13 + 0x44] 	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x400a573	      0x410faf5540	            imul edx, dword [r13 + 0x40]	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x400a578	          0x4801d1	                            add rcx, rdx	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x400a57b	          0x4839ce	                            cmp rsi, rcx	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x400a57e	           0xf93c2	                                setae dl	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x400a581	           0xfb6d2	                           movzx edx, dl	      7294	elf.c	FUNCTION_81	FOR_2	IF_7
0x400a584	          0x83e201	                              and edx, 1	      7292	elf.c	FUNCTION_81	FOR_2	IF_7
0x400a587	          0xc1e205	                              shl edx, 5	      7292	elf.c	FUNCTION_81	FOR_2	IF_7
0x400a58a	         0xfb64840	           movzx ecx, byte [rax + 0x40] 	      7292	elf.c	FUNCTION_81	FOR_2	IF_7
0x400a58e	          0x83e1df	                     and ecx, 0xffffffdf	      7292	elf.c	FUNCTION_81	FOR_2	IF_7
0x400a591	             0x9ca	                             or edx, ecx	      7292	elf.c	FUNCTION_81	FOR_2	IF_7
0x400a593	          0x885040	               mov byte [rax + 0x40], dl	      7292	elf.c	FUNCTION_81	FOR_2	IF_7
0x400a596	        0x48833b01	                      cmp qword [rbx], 1	      7298	elf.c	FUNCTION_81	FOR_2	IF_7	IF_8
0x400a59a	            0x750c	                           jne 0x400a5a8	      7298	elf.c	FUNCTION_81	FOR_2	IF_7	IF_8
0x400a59c	          0xf6c220	                           test dl, 0x20	      7299	elf.c	FUNCTION_81	FOR_2	IF_7	IF_8
0x400a59f	      0xbe01000000	                              mov esi, 1	      7299	elf.c	FUNCTION_81	FOR_2	IF_7	IF_8
0x400a5a4	        0x440f45f6	                        cmovne r14d, esi	      7299	elf.c	FUNCTION_81	FOR_2	IF_7	IF_8
0x400a5a8	          0x4585e4	                         test r12d, r12d	      7303	elf.c	FUNCTION_81	FOR_2	IF_9
0x400a5ab	     0xf845a110000	                            je 0x400b70b	      7303	elf.c	FUNCTION_81	FOR_2	IF_9
0x400a5b1	          0x4885ed	                           test rbp, rbp	      7307	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4
0x400a5b4	     0xf8451110000	                            je 0x400b70b	      7307	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4
0x400a5ba	      0xb900000000	                              mov ecx, 0	      7307	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4
0x400a5bf	    0x41b800000000	                              mov r8d, 0	      7307	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4
0x400a5c5	    0x488b95e00000	            mov rdx, qword [rbp + 0xe0] 	      7311	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	CALL_8
0x400a5cc	        0x488b7208	                mov rsi, qword [rdx + 8]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a5d0	          0x4989f2	                            mov r10, rsi	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a5d3	    0x4181e2000400	                         and r10d, 0x400	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a5da	            0x7427	                            je 0x400a603	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a5dc	          0x488b3b	                    mov rdi, qword [rbx]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a5df	        0x4883ff07	                              cmp rdi, 7	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a5e3	        0x410f94c3	                               sete r11b	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a5e7	    0x4881ff52e574	                     cmp rdi, 0x6474e552	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a5ee	        0x410f94c1	                                sete r9b	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a5f2	          0x4508cb	                            or r11b, r9b	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a5f5	            0x751d	                           jne 0x400a614	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a5f7	        0x4883ff01	                              cmp rdi, 1	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a5fb	     0xf8558010000	                           jne 0x400a759	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a601	            0xeb11	                           jmp 0x400a614	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a603	          0x488b3b	                    mov rdi, qword [rbx]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a606	        0x4883ef06	                              sub rdi, 6	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a60a	        0x4883ff01	                              cmp rdi, 1	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a60e	     0xf8645010000	                           jbe 0x400a759	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a614	          0x83e602	                              and esi, 2	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a617	     0xf85c8100000	                           jne 0x400b6e5	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a61d	          0x488b3b	                    mov rdi, qword [rbx]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a620	    0x4c8d8fb01a8b	              lea r9, [rdi - 0x6474e550]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a627	        0x4983f902	                               cmp r9, 2	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a62b	     0xf8628010000	                           jbe 0x400a759	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a631	        0x4883ef01	                              sub rdi, 1	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a635	        0x4883ff01	                              cmp rdi, 1	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a639	     0xf87b9100000	                            ja 0x400b6f8	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a63f	      0xe915010000	                           jmp 0x400a759	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a644	        0x488b7a18	            mov rdi, qword [rdx + 0x18] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a648	        0x4c8b5b10	            mov r11, qword [rbx + 0x10] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a64c	          0x4c39df	                            cmp rdi, r11	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a64f	     0xf8204010000	                            jb 0x400a759	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a655	        0x48037a20	             add rdi, qword [rdx + 0x20]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a659	          0x4c29df	                            sub rdi, r11	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a65c	        0x483b7b28	            cmp rdi, qword [rbx + 0x28] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a660	     0xf87f3000000	                            ja 0x400a759	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a666	          0x4885f6	                           test rsi, rsi	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a669	            0x743e	                            je 0x400a6a9	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a66b	        0x488b7a10	            mov rdi, qword [rdx + 0x10] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a66f	        0x4c8b5b18	            mov r11, qword [rbx + 0x18] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a673	          0x4c39df	                            cmp rdi, r11	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a676	     0xf82dd000000	                            jb 0x400a759	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a67c	          0x4c29df	                            sub rdi, r11	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a67f	          0x4989fb	                            mov r11, rdi	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a682	        0x4183f908	                              cmp r9d, 8	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a686	            0x7510	                           jne 0x400a698	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a688	          0x4d85d2	                           test r10, r10	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a68b	            0x740b	                            je 0x400a698	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a68d	      0xbf00000000	                              mov edi, 0	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a692	        0x48833b07	                      cmp qword [rbx], 7	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a696	            0x7504	                           jne 0x400a69c	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a698	        0x488b7a20	            mov rdi, qword [rdx + 0x20] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a69c	          0x4c01df	                            add rdi, r11	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a69f	        0x483b7b30	            cmp rdi, qword [rbx + 0x30] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a6a3	     0xf87b0000000	                            ja 0x400a759	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a6a9	        0x48833b02	                      cmp qword [rbx], 2	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a6ad	            0x754a	                           jne 0x400a6f9	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a6af	      0x48837a2000	               cmp qword [rdx + 0x20], 0	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a6b4	            0x7543	                           jne 0x400a6f9	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a6b6	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a6ba	          0x4885ff	                           test rdi, rdi	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a6bd	            0x743a	                            je 0x400a6f9	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a6bf	        0x4183f908	                              cmp r9d, 8	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a6c3	            0x741a	                            je 0x400a6df	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a6c5	        0x4c8b4a18	              mov r9, qword [rdx + 0x18]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a6c9	        0x4c8b5310	            mov r10, qword [rbx + 0x10] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a6cd	          0x4d39d1	                             cmp r9, r10	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a6d0	     0xf8683000000	                           jbe 0x400a759	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a6d6	          0x4d29d1	                             sub r9, r10	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a6d9	        0x4c3b4b28	              cmp r9, qword [rbx + 0x28]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a6dd	            0x737a	                           jae 0x400a759	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a6df	          0x4885f6	                           test rsi, rsi	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a6e2	            0x7415	                            je 0x400a6f9	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a6e4	        0x488b7210	            mov rsi, qword [rdx + 0x10] 	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a6e8	        0x4c8b4b18	              mov r9, qword [rbx + 0x18]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a6ec	          0x4c39ce	                             cmp rsi, r9	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a6ef	            0x7668	                           jbe 0x400a759	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a6f1	          0x4c29ce	                             sub rsi, r9	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a6f4	          0x4839f7	                            cmp rdi, rsi	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a6f7	            0x7660	                           jbe 0x400a759	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400a6f9	        0x418d7801	                       lea edi, [r8 + 1]	      7314	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10
0x400a6fd	        0x488b7568	            mov rsi, qword [rbp + 0x68] 	      7314	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10
0x400a701	          0x4589c0	                            mov r8d, r8d	      7314	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10
0x400a704	      0x4a8974c048	      mov qword [rax + r8*8 + 0x48], rsi	      7314	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10
0x400a709	          0x8b7520	            mov esi, dword [rbp + 0x20] 	      7315	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11
0x400a70c	        0x40f6c601	                             test sil, 1	      7315	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11
0x400a710	            0x743f	                            je 0x400a751	      7315	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11
0x400a712	          0x4885c9	                           test rcx, rcx	      7319	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_12
0x400a715	            0x740e	                            je 0x400a725	      7319	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_12
0x400a717	        0x4c8b5130	            mov r10, qword [rcx + 0x30] 	      7320	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_12
0x400a71b	        0x4c395530	            cmp qword [rbp + 0x30], r10 	      7320	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_12
0x400a71f	        0x480f42cd	                          cmovb rcx, rbp	      7320	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_12
0x400a723	            0xeb03	                           jmp 0x400a728	      7320	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_12
0x400a725	          0x4889e9	                            mov rcx, rbp	      7319	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_12
0x400a728	        0x40f6c602	                             test sil, 2	      7328	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_13
0x400a72c	            0x740a	                            je 0x400a738	      7328	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_13
0x400a72e	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	      7329	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_13
0x400a732	        0x482b5310	             sub rdx, qword [rbx + 0x10]	      7329	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_13
0x400a736	            0xeb08	                           jmp 0x400a740	      7329	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_13
0x400a738	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      7331	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	ELSE_1
0x400a73c	        0x482b5318	             sub rdx, qword [rbx + 0x18]	      7331	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	ELSE_1
0x400a740	        0x488b7530	            mov rsi, qword [rbp + 0x30] 	      7332	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_14
0x400a744	        0x482b7320	             sub rsi, qword [rbx + 0x20]	      7332	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_14
0x400a748	          0x4839d6	                            cmp rsi, rdx	      7332	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_14
0x400a74b	            0x7404	                            je 0x400a751	      7332	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_14
0x400a74d	        0x806040fd	             and byte [rax + 0x40], 0xfd	      7333	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_11	IF_14
0x400a751	          0x4439e7	                           cmp edi, r12d	      7335	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_15
0x400a754	            0x7410	                            je 0x400a766	      7335	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	IF_15
0x400a756	          0x4189f8	                            mov r8d, edi	      7314	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10
0x400a759	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      7309	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4
0x400a75d	          0x4885ed	                           test rbp, rbp	      7307	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4
0x400a760	     0xf855ffeffff	                           jne 0x400a5c5	      7307	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4
0x400a766	         0xfb65040	           movzx edx, byte [rax + 0x40] 	      7341	elf.c	FUNCTION_81	FOR_2	IF_16
0x400a76a	          0xf6c210	                           test dl, 0x10	      7341	elf.c	FUNCTION_81	FOR_2	IF_16
0x400a76d	            0x7411	                            je 0x400a780	      7341	elf.c	FUNCTION_81	FOR_2	IF_16
0x400a76f	          0x4885c9	                           test rcx, rcx	      7341	elf.c	FUNCTION_81	FOR_2	IF_16
0x400a772	            0x740c	                            je 0x400a780	      7341	elf.c	FUNCTION_81	FOR_2	IF_16
0x400a774	        0x488b7128	            mov rsi, qword [rcx + 0x28] 	      7343	elf.c	FUNCTION_81	FOR_2	IF_16
0x400a778	        0x482b7318	             sub rsi, qword [rbx + 0x18]	      7343	elf.c	FUNCTION_81	FOR_2	IF_16
0x400a77c	        0x48897038	             mov qword [rax + 0x38], rsi	      7343	elf.c	FUNCTION_81	FOR_2	IF_16
0x400a780	          0x83e232	                           and edx, 0x32	      7345	elf.c	FUNCTION_81	FOR_2	IF_17
0x400a783	          0x80fa02	                               cmp dl, 2	      7345	elf.c	FUNCTION_81	FOR_2	IF_17
0x400a786	            0x751f	                           jne 0x400a7a7	      7345	elf.c	FUNCTION_81	FOR_2	IF_17
0x400a788	          0x4885c9	                           test rcx, rcx	      7349	elf.c	FUNCTION_81	FOR_2	IF_17
0x400a78b	            0x7406	                            je 0x400a793	      7349	elf.c	FUNCTION_81	FOR_2	IF_17
0x400a78d	        0x488b5130	            mov rdx, qword [rcx + 0x30] 	      7349	elf.c	FUNCTION_81	FOR_2	IF_17
0x400a791	            0xeb0c	                           jmp 0x400a79f	      7349	elf.c	FUNCTION_81	FOR_2	IF_17
0x400a793	      0xba00000000	                              mov edx, 0	      7349	elf.c	FUNCTION_81	FOR_2	IF_17
0x400a798	            0xeb05	                           jmp 0x400a79f	      7349	elf.c	FUNCTION_81	FOR_2	IF_17
0x400a79a	      0xba00000000	                              mov edx, 0	      7349	elf.c	FUNCTION_81	FOR_2	IF_17
0x400a79f	        0x482b5320	             sub rdx, qword [rbx + 0x20]	      7349	elf.c	FUNCTION_81	FOR_2	IF_17
0x400a7a3	        0x48895020	             mov qword [rax + 0x20], rdx	      7349	elf.c	FUNCTION_81	FOR_2	IF_17
0x400a7a7	        0x44896044	            mov dword [rax + 0x44], r12d	      7352	elf.c	FUNCTION_81	FOR_2
0x400a7ab	          0x498907	                    mov qword [r15], rax	      7353	elf.c	FUNCTION_81	FOR_2
0x400a7ae	          0x4989c7	                            mov r15, rax	      7354	elf.c	FUNCTION_81	FOR_2
0x400a7b1	        0x4883c340	                           add rbx, 0x40	      7227	elf.c	FUNCTION_81	FOR_2
0x400a7b5	      0x483b5c2408	                cmp rbx, qword [rsp + 8]	      7225	elf.c	FUNCTION_81	FOR_2	CALL_4
0x400a7ba	     0xf856bfbffff	                           jne 0x400a32b	      7225	elf.c	FUNCTION_81	FOR_2	CALL_4
0x400a7c0	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      7357	elf.c	FUNCTION_81	CALL_10
0x400a7c5	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7357	elf.c	FUNCTION_81	CALL_10
0x400a7cc	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      7357	elf.c	FUNCTION_81	CALL_10
0x400a7d3	    0x488b94248000	            mov rdx, qword [rsp + 0x80] 	      7357	elf.c	FUNCTION_81	CALL_10
0x400a7db	          0x488910	                    mov qword [rax], rdx	      7357	elf.c	FUNCTION_81	CALL_10
0x400a7de	      0xb801000000	                              mov eax, 1	      7358	elf.c	FUNCTION_81
0x400a7e3	      0xe9860e0000	                           jmp 0x400b66e	      7358	elf.c	FUNCTION_81
0x400a7e8	      0xb800000000	                              mov eax, 0	      7257	elf.c	FUNCTION_81	FOR_2	IF_5
0x400a7ed	      0xe97c0e0000	                           jmp 0x400b66e	      7257	elf.c	FUNCTION_81	FOR_2	IF_5
0x400a7f2	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      7451	elf.c	FUNCTION_82	IF_10
0x400a7f7	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      7451	elf.c	FUNCTION_82	IF_10
0x400a7fc	        0x488b7608	                mov rsi, qword [rsi + 8]	      7451	elf.c	FUNCTION_82	IF_10
0x400a800	        0x48397008	                cmp qword [rax + 8], rsi	      7451	elf.c	FUNCTION_82	IF_10
0x400a804	     0xf85aa000000	                           jne 0x400a8b4	      7451	elf.c	FUNCTION_82	IF_10
0x400a80a	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      7457	elf.c	FUNCTION_82	IF_10	CALL_8
0x400a80f	    0x488b90f80000	            mov rdx, qword [rax + 0xf8] 	      7457	elf.c	FUNCTION_82	IF_10	CALL_8
0x400a816	          0x8b4244	            mov eax, dword [rdx + 0x44] 	      7457	elf.c	FUNCTION_82	IF_10	CALL_8
0x400a819	        0x488b6a60	            mov rbp, qword [rdx + 0x60] 	      7460	elf.c	FUNCTION_82	IF_10	FOR_5	CALL_9
0x400a81d	            0x85c0	                           test eax, eax	      7460	elf.c	FUNCTION_82	IF_10	FOR_5	CALL_9
0x400a81f	            0x746c	                            je 0x400a88d	      7460	elf.c	FUNCTION_82	IF_10	FOR_5	CALL_9
0x400a821	          0x8d58ff	                      lea ebx, [rax - 1]	      7460	elf.c	FUNCTION_82	IF_10	FOR_5	CALL_9
0x400a824	        0x4883c301	                              add rbx, 1	      7460	elf.c	FUNCTION_82	IF_10	FOR_5	CALL_9
0x400a828	        0x48c1e306	                              shl rbx, 6	      7460	elf.c	FUNCTION_82	IF_10	FOR_5	CALL_9
0x400a82c	          0x4801eb	                            add rbx, rbp	      7460	elf.c	FUNCTION_82	IF_10	FOR_5	CALL_9
0x400a82f	    0x41bc00000000	                             mov r12d, 0	      7460	elf.c	FUNCTION_82	IF_10	FOR_5	CALL_9
0x400a835	    0x49be00000000	         movabs r14, 0x4000000000000000 	      7467	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12
0x400a83f	      0x48837d0001	                      cmp qword [rbp], 1	      7463	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11
0x400a844	            0x753c	                           jne 0x400a882	      7463	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11
0x400a846	        0x4c8b6d38	            mov r13, qword [rbp + 0x38] 	      7464	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11
0x400a84a	          0x4d39e5	                            cmp r13, r12	      7464	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11
0x400a84d	            0x7633	                           jbe 0x400a882	      7464	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11
0x400a84f	          0x4d39f5	                            cmp r13, r14	      7467	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12
0x400a852	            0x762b	                           jbe 0x400a87f	      7467	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12
0x400a854	      0xba05000000	                              mov edx, 5	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_11
0x400a859	      0xbe00000000	                              mov esi, 0	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_11
0x400a85e	      0xbf00000000	                              mov edi, 0	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_11
0x400a863	      0xe800000000	                          call 0x400a868	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_11
0x400a868	          0x4c89ea	                            mov rdx, r13	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_11
0x400a86b	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_11
0x400a870	          0x4889c7	                            mov rdi, rax	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_11
0x400a873	      0xb800000000	                              mov eax, 0	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_11
0x400a878	      0xe800000000	                          call 0x400a87d	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_11
0x400a87d	            0xeb03	                           jmp 0x400a882	      7469	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	IF_12	CALL_11
0x400a87f	          0x4d89ec	                            mov r12, r13	      7473	elf.c	FUNCTION_82	IF_10	FOR_5	IF_11	ELSE_2
0x400a882	        0x4883c540	                           add rbp, 0x40	      7462	elf.c	FUNCTION_82	IF_10	FOR_5
0x400a886	          0x4839dd	                            cmp rbp, rbx	      7460	elf.c	FUNCTION_82	IF_10	FOR_5	CALL_9
0x400a889	            0x75b4	                           jne 0x400a83f	      7460	elf.c	FUNCTION_82	IF_10	FOR_5	CALL_9
0x400a88b	            0xeb06	                           jmp 0x400a893	      7460	elf.c	FUNCTION_82	IF_10	FOR_5	CALL_9
0x400a88d	    0x41bc00000000	                             mov r12d, 0	      7458	elf.c	FUNCTION_82	IF_10
0x400a893	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      7476	elf.c	FUNCTION_82	IF_10	IF_13	CALL_12
0x400a898	        0x488b4008	                mov rax, qword [rax + 8]	      7476	elf.c	FUNCTION_82	IF_10	IF_13	CALL_12
0x400a89c	    0x488b90680300	           mov rdx, qword [rax + 0x368] 	      7476	elf.c	FUNCTION_82	IF_10	IF_13	CALL_12
0x400a8a3	        0x4c396210	            cmp qword [rdx + 0x10], r12 	      7476	elf.c	FUNCTION_82	IF_10	IF_13	CALL_12
0x400a8a7	            0x740b	                            je 0x400a8b4	      7476	elf.c	FUNCTION_82	IF_10	IF_13	CALL_12
0x400a8a9	          0x4c89e6	                            mov rsi, r12	      7477	elf.c	FUNCTION_82	IF_10	CALL_13
0x400a8ac	          0x488b38	                    mov rdi, qword [rax]	      7477	elf.c	FUNCTION_82	IF_10	CALL_13
0x400a8af	      0xe800000000	                          call 0x400a8b4	      7477	elf.c	FUNCTION_82	IF_10	CALL_13
0x400a8b4	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      6562	elf.c	FUNCTION_80	CALL_1
0x400a8b9	        0x488b4608	                mov rax, qword [rsi + 8]	      6562	elf.c	FUNCTION_80	CALL_1
0x400a8bd	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      6562	elf.c	FUNCTION_80	CALL_1
0x400a8c4	      0x4889442468	             mov qword [rsp + 0x68], rax	      6562	elf.c	FUNCTION_80	CALL_1
0x400a8c9	    0x488b86f80000	            mov rax, qword [rsi + 0xf8] 	      6563	elf.c	FUNCTION_80	CALL_2
0x400a8d0	      0x4889442438	             mov qword [rsp + 0x38], rax	      6563	elf.c	FUNCTION_80	CALL_2
0x400a8d5	    0x48c784248000	               mov qword [rsp + 0x80], 0	      6565	elf.c	FUNCTION_80
0x400a8e1	          0x8b4044	            mov eax, dword [rax + 0x44] 	      6568	elf.c	FUNCTION_80	CALL_3
0x400a8e4	        0x89442454	             mov dword [rsp + 0x54], eax	      6568	elf.c	FUNCTION_80	CALL_3
0x400a8e8	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      6569	elf.c	FUNCTION_80	CALL_4
0x400a8ed	        0x488b4008	                mov rax, qword [rax + 8]	      6569	elf.c	FUNCTION_80	CALL_4
0x400a8f1	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      6569	elf.c	FUNCTION_80	CALL_4
0x400a8f8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6569	elf.c	FUNCTION_80	CALL_4
0x400a8fc	      0x4889442430	             mov qword [rsp + 0x30], rax	      6569	elf.c	FUNCTION_80	CALL_4
0x400a901	    0x488b86900000	            mov rax, qword [rsi + 0x90] 	      6682	elf.c	FUNCTION_80	FOR_1
0x400a908	          0x4885c0	                           test rax, rax	      6682	elf.c	FUNCTION_80	FOR_1
0x400a90b	     0xf84f90e0000	                            je 0x400b80a	      6682	elf.c	FUNCTION_80	FOR_1
0x400a911	        0x806024bf	             and byte [rax + 0x24], 0xbf	      6683	elf.c	FUNCTION_80	FOR_1
0x400a915	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6682	elf.c	FUNCTION_80	FOR_1
0x400a919	          0x4885c0	                           test rax, rax	      6682	elf.c	FUNCTION_80	FOR_1
0x400a91c	            0x75f3	                           jne 0x400a911	      6682	elf.c	FUNCTION_80	FOR_1
0x400a91e	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      6690	elf.c	FUNCTION_80	FOR_2	CALL_5
0x400a923	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6690	elf.c	FUNCTION_80	FOR_2	CALL_5
0x400a92a	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      6690	elf.c	FUNCTION_80	FOR_2	CALL_5
0x400a92e	      0x837c245400	               cmp dword [rsp + 0x54], 0	      6690	elf.c	FUNCTION_80	FOR_2	CALL_5
0x400a933	     0xf849e0e0000	                            je 0x400b7d7	      6690	elf.c	FUNCTION_80	FOR_2	CALL_5
0x400a939	      0x48837a2000	               cmp qword [rdx + 0x20], 0	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400a93e	     0xf85dc0d0000	                           jne 0x400b720	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400a944	        0x8b442454	            mov eax, dword [rsp + 0x54] 	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400a948	          0x8d48ff	                      lea ecx, [rax - 1]	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400a94b	        0x4883c101	                              add rcx, 1	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400a94f	        0x48c1e106	                              shl rcx, 6	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400a953	          0x4801d1	                            add rcx, rdx	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400a956	          0x4889d0	                            mov rax, rdx	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400a959	            0xeb0b	                           jmp 0x400a966	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400a95b	      0x4883782000	               cmp qword [rax + 0x20], 0	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400a960	     0xf85c40d0000	                           jne 0x400b72a	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400a966	        0x4883c040	                           add rax, 0x40	      6692	elf.c	FUNCTION_80	FOR_2
0x400a96a	          0x4839c8	                            cmp rax, rcx	      6690	elf.c	FUNCTION_80	FOR_2	CALL_5
0x400a96d	            0x75ec	                           jne 0x400a95b	      6690	elf.c	FUNCTION_80	FOR_2	CALL_5
0x400a96f	    0xc74424780000	               mov dword [rsp + 0x78], 0	      6689	elf.c	FUNCTION_80
0x400a977	      0xe9b60d0000	                           jmp 0x400b732	      6689	elf.c	FUNCTION_80
0x400a97c	          0x488b02	                    mov rax, qword [rdx]	      6710	elf.c	FUNCTION_80	FOR_3	IF_2
0x400a97f	        0x4883f803	                              cmp rax, 3	      6710	elf.c	FUNCTION_80	FOR_3	IF_2
0x400a983	            0x757a	                           jne 0x400a9ff	      6710	elf.c	FUNCTION_80	FOR_3	IF_2
0x400a985	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x400a98a	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x400a991	          0x4885c0	                           test rax, rax	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x400a994	     0xf8480010000	                            je 0x400ab1a	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x400a99a	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400a99e	          0x4885c9	                           test rcx, rcx	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400a9a1	            0x754e	                           jne 0x400a9f1	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400a9a3	      0x48837a2000	               cmp qword [rdx + 0x20], 0	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400a9a8	            0x7547	                           jne 0x400a9f1	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400a9aa	      0x48837a3000	               cmp qword [rdx + 0x30], 0	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400a9af	            0x7540	                           jne 0x400a9f1	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400a9b1	        0x488b7228	            mov rsi, qword [rdx + 0x28] 	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400a9b5	          0x4885f6	                           test rsi, rsi	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400a9b8	            0x7437	                            je 0x400a9f1	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400a9ba	        0xf6402101	               test byte [rax + 0x21], 1	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400a9be	            0x7431	                            je 0x400a9f1	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400a9c0	        0x4c8b4838	              mov r9, qword [rax + 0x38]	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400a9c4	          0x4d85c9	                             test r9, r9	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400a9c7	            0x7428	                            je 0x400a9f1	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400a9c9	    0x4c8b80900000	              mov r8, qword [rax + 0x90]	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400a9d0	        0x488b7a10	            mov rdi, qword [rdx + 0x10] 	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400a9d4	          0x4939f8	                             cmp r8, rdi	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400a9d7	            0x7218	                            jb 0x400a9f1	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400a9d9	          0x4d01c8	                              add r8, r9	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400a9dc	          0x4801fe	                            add rsi, rdi	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400a9df	          0x4939f0	                             cmp r8, rsi	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400a9e2	            0x770d	                            ja 0x400a9f1	      6712	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400a9e4	        0x488b4028	            mov rax, qword [rax + 0x28] 	      6716	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400a9e8	        0x48894218	             mov qword [rdx + 0x18], rax	      6716	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400a9ec	      0xe929010000	                           jmp 0x400ab1a	      6716	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4	IF_3
0x400a9f1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x400a9f5	          0x4885c0	                           test rax, rax	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x400a9f8	            0x75a4	                           jne 0x400a99e	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x400a9fa	      0xe91b010000	                           jmp 0x400ab1a	      6711	elf.c	FUNCTION_80	FOR_3	IF_2	FOR_4
0x400a9ff	        0x4883f801	                              cmp rax, 1	      6720	elf.c	FUNCTION_80	FOR_3	IF_4
0x400aa03	            0x7418	                            je 0x400aa1d	      6720	elf.c	FUNCTION_80	FOR_3	IF_4
0x400aa05	    0x483d52e57464	                     cmp rax, 0x6474e552	      6723	elf.c	FUNCTION_80	FOR_3	IF_4	IF_5
0x400aa0b	     0xf8509010000	                           jne 0x400ab1a	      6723	elf.c	FUNCTION_80	FOR_3	IF_4	IF_5
0x400aa11	    0x48c702000000	                      mov qword [rdx], 0	      6724	elf.c	FUNCTION_80	FOR_3	IF_4	IF_5
0x400aa18	      0xe9fd000000	                           jmp 0x400ab1a	      6724	elf.c	FUNCTION_80	FOR_3	IF_4	IF_5
0x400aa1d	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400aa22	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400aa29	        0x488b4060	            mov rax, qword [rax + 0x60] 	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400aa2d	          0x4585ed	                         test r13d, r13d	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400aa30	     0xf84e4000000	                            je 0x400ab1a	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400aa36	        0x418d4dff	                      lea ecx, [r13 - 1]	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400aa3a	        0x4883c101	                              add rcx, 1	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400aa3e	        0x48c1e106	                              shl rcx, 6	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400aa42	          0x4801c1	                            add rcx, rax	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400aa45	      0x44896c2408	               mov dword [rsp + 8], r13d	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400aa4a	        0x48833801	                      cmp qword [rax], 1	      6733	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400aa4e	     0xf85b4000000	                           jne 0x400ab08	      6733	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400aa54	        0x4c8b5a18	            mov r11, qword [rdx + 0x18] 	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400aa58	        0x4c8b5018	            mov r10, qword [rax + 0x18] 	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400aa5c	        0x4c8b4828	              mov r9, qword [rax + 0x28]	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400aa60	        0x4c8b4030	              mov r8, qword [rax + 0x30]	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400aa64	          0x4d39c1	                              cmp r9, r8	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400aa67	          0x4c89c7	                             mov rdi, r8	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400aa6a	        0x490f43f9	                          cmovae rdi, r9	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400aa6e	        0x498d343a	                    lea rsi, [r10 + rdi]	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400aa72	          0x4939f3	                            cmp r11, rsi	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400aa75	     0xf838d000000	                           jae 0x400ab08	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400aa7b	        0x488b6a28	            mov rbp, qword [rdx + 0x28] 	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400aa7f	        0x488b5a30	            mov rbx, qword [rdx + 0x30] 	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400aa83	          0x4839dd	                            cmp rbp, rbx	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400aa86	          0x4989dd	                            mov r13, rbx	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400aa89	        0x4c0f43ed	                         cmovae r13, rbp	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400aa8d	        0x4f8d242b	                    lea r12, [r11 + r13]	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400aa91	          0x4d39e2	                            cmp r10, r12	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400aa94	            0x7372	                           jae 0x400ab08	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400aa96	        0x4c8b7220	            mov r14, qword [rdx + 0x20] 	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400aa9a	        0x4c8b7820	            mov r15, qword [rax + 0x20] 	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400aa9e	          0x4c01ff	                            add rdi, r15	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400aaa1	          0x4939fe	                            cmp r14, rdi	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400aaa4	            0x7362	                           jae 0x400ab08	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400aaa6	          0x4d01f5	                            add r13, r14	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400aaa9	          0x4d39ef	                            cmp r15, r13	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400aaac	            0x735a	                           jae 0x400ab08	      6734	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_6
0x400aaae	          0x4d39d3	                            cmp r11, r10	      6738	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x400aab1	            0x7638	                           jbe 0x400aaeb	      6738	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x400aab3	          0x4c89e1	                            mov rcx, r12	      6743	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x400aab6	          0x4829f1	                            sub rcx, rsi	      6743	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x400aab9	          0x4885c9	                           test rcx, rcx	      6745	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	IF_8
0x400aabc	            0x7e0e	                           jle 0x400aacc	      6745	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	IF_8
0x400aabe	          0x4901c8	                             add r8, rcx	      6747	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	IF_8
0x400aac1	        0x4c894030	              mov qword [rax + 0x30], r8	      6747	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	IF_8
0x400aac5	          0x4c01c9	                             add rcx, r9	      6748	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	IF_8
0x400aac8	        0x48894828	             mov qword [rax + 0x28], rcx	      6748	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	IF_8
0x400aacc	    0x48c702000000	                      mov qword [rdx], 0	      6751	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x400aad3	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      6755	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	CALL_8
0x400aad8	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6755	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	CALL_8
0x400aadf	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      6755	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7	CALL_8
0x400aae3	    0x41bd00000000	                             mov r13d, 0	      6754	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x400aae9	            0xeb2f	                           jmp 0x400ab1a	      6754	elf.c	FUNCTION_80	FOR_3	FOR_5	IF_7
0x400aaeb	          0x4c29e6	                            sub rsi, r12	      6763	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x400aaee	          0x4885f6	                           test rsi, rsi	      6765	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1	IF_9
0x400aaf1	            0x7e0e	                           jle 0x400ab01	      6765	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1	IF_9
0x400aaf3	          0x4801f3	                            add rbx, rsi	      6767	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1	IF_9
0x400aaf6	        0x48895a30	             mov qword [rdx + 0x30], rbx	      6767	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1	IF_9
0x400aafa	          0x4801ee	                            add rsi, rbp	      6768	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1	IF_9
0x400aafd	        0x48897228	             mov qword [rdx + 0x28], rsi	      6768	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1	IF_9
0x400ab01	    0x48c700000000	                      mov qword [rax], 0	      6771	elf.c	FUNCTION_80	FOR_3	FOR_5	ELSE_1
0x400ab08	        0x4883c040	                           add rax, 0x40	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400ab0c	          0x4839c8	                            cmp rax, rcx	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400ab0f	     0xf8535ffffff	                           jne 0x400aa4a	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400ab15	      0x448b6c2408	               mov r13d, dword [rsp + 8]	      6729	elf.c	FUNCTION_80	FOR_3	FOR_5	CALL_7
0x400ab1a	        0x4183c501	                             add r13d, 1	      6705	elf.c	FUNCTION_80	FOR_3
0x400ab1e	        0x4883c240	                           add rdx, 0x40	      6705	elf.c	FUNCTION_80	FOR_3
0x400ab22	      0x44396c2454	           cmp dword [rsp + 0x54], r13d 	      6703	elf.c	FUNCTION_80	FOR_3	CALL_6
0x400ab27	     0xf874ffeffff	                            ja 0x400a97c	      6703	elf.c	FUNCTION_80	FOR_3	CALL_6
0x400ab2d	      0xe90b0c0000	                           jmp 0x400b73d	      6703	elf.c	FUNCTION_80	FOR_3	CALL_6
0x400ab32	          0x4d8b07	                     mov r8, qword [r15]	      6791	elf.c	FUNCTION_80	FOR_6	IF_10
0x400ab35	          0x4d85c0	                             test r8, r8	      6791	elf.c	FUNCTION_80	FOR_6	IF_10
0x400ab38	     0xf84530a0000	                            je 0x400b591	      6791	elf.c	FUNCTION_80	FOR_6	IF_10
0x400ab3e	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      6796	elf.c	FUNCTION_80	FOR_6	FOR_7
0x400ab43	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      6796	elf.c	FUNCTION_80	FOR_6	FOR_7
0x400ab4a	          0x4885c0	                           test rax, rax	      6796	elf.c	FUNCTION_80	FOR_6	FOR_7
0x400ab4d	     0xf8491010000	                            je 0x400ace4	      6796	elf.c	FUNCTION_80	FOR_6	FOR_7
0x400ab53	        0x4d8b4f20	              mov r9, qword [r15 + 0x20]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ab57	    0xc74424200000	               mov dword [rsp + 0x20], 0	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ab5f	      0xbb00000000	                              mov ebx, 0	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ab64	          0x4d85c9	                             test r9, r9	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ab67	            0x7447	                            je 0x400abb0	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ab69	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ab6d	          0x4939d1	                             cmp r9, rdx	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ab70	     0xf8785000000	                            ja 0x400abfb	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ab76	          0x8b4820	            mov ecx, dword [rax + 0x20] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ab79	    0x81e100050000	                          and ecx, 0x500	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ab7f	    0x81f900040000	                          cmp ecx, 0x400	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ab85	            0x750b	                           jne 0x400ab92	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ab87	      0xb900000000	                              mov ecx, 0	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ab8c	        0x4983f807	                               cmp r8, 7	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ab90	            0x7504	                           jne 0x400ab96	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ab92	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ab96	          0x4801d1	                            add rcx, rdx	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ab99	        0x498b5730	            mov rdx, qword [r15 + 0x30] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ab9d	        0x49395728	            cmp qword [r15 + 0x28], rdx 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400aba1	      0x490f435728	          cmovae rdx, qword [r15 + 0x28]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400aba6	          0x4c01ca	                             add rdx, r9	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400aba9	          0x4839d1	                            cmp rcx, rdx	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400abac	            0x7645	                           jbe 0x400abf3	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400abae	            0xeb4b	                           jmp 0x400abfb	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400abb0	        0x488b4828	            mov rcx, qword [rax + 0x28] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400abb4	        0x498b5718	            mov rdx, qword [r15 + 0x18] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400abb8	          0x4839d1	                            cmp rcx, rdx	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400abbb	            0x723e	                            jb 0x400abfb	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400abbd	          0x8b7020	            mov esi, dword [rax + 0x20] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400abc0	    0x81e600050000	                          and esi, 0x500	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400abc6	    0x81fe00040000	                          cmp esi, 0x400	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400abcc	            0x7509	                           jne 0x400abd7	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400abce	          0x4c89ce	                             mov rsi, r9	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400abd1	        0x4983f807	                               cmp r8, 7	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400abd5	            0x7504	                           jne 0x400abdb	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400abd7	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400abdb	          0x4801ce	                            add rsi, rcx	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400abde	        0x498b4f30	            mov rcx, qword [r15 + 0x30] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400abe2	        0x49394f28	            cmp qword [r15 + 0x28], rcx 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400abe6	      0x490f434f28	          cmovae rcx, qword [r15 + 0x28]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400abeb	          0x4801ca	                            add rdx, rcx	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400abee	          0x4839d6	                            cmp rsi, rdx	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400abf1	            0x7708	                            ja 0x400abfb	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400abf3	          0x8b5020	            mov edx, dword [rax + 0x20] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400abf6	          0xf6c201	                              test dl, 1	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400abf9	            0x7541	                           jne 0x400ac3c	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400abfb	        0x4983f804	                               cmp r8, 4	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400abff	     0xf85d0000000	                           jne 0x400acd5	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac05	    0x488b90e00000	            mov rdx, qword [rax + 0xe0] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac0c	        0x837a0407	                  cmp dword [rdx + 4], 7	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac10	     0xf85bf000000	                           jne 0x400acd5	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac16	    0x488b88900000	            mov rcx, qword [rax + 0x90] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac1d	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac21	          0x4839d1	                            cmp rcx, rdx	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac24	     0xf82ab000000	                            jb 0x400acd5	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac2a	        0x48034838	             add rcx, qword [rax + 0x38]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac2e	        0x49035728	             add rdx, qword [r15 + 0x28]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac32	          0x4839d1	                            cmp rcx, rdx	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac35	            0x762b	                           jbe 0x400ac62	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac37	      0xe999000000	                           jmp 0x400acd5	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac3c	    0x4981f851e574	                      cmp r8, 0x6474e551	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac43	     0xf848c000000	                            je 0x400acd5	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac49	        0x4983f807	                               cmp r8, 7	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac4d	            0x7507	                           jne 0x400ac56	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac4f	          0xf6c604	                              test dh, 4	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac52	            0x7570	                           jne 0x400acc4	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac54	            0xeb7f	                           jmp 0x400acd5	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac56	        0x4983f801	                               cmp r8, 1	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac5a	            0x740c	                            je 0x400ac68	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac5c	        0x4983f807	                               cmp r8, 7	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac60	            0x7406	                            je 0x400ac68	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac62	        0xf6402104	               test byte [rax + 0x21], 4	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac66	            0x756d	                           jne 0x400acd5	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac68	        0x4983f802	                               cmp r8, 2	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac6c	            0x754a	                           jne 0x400acb8	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac6e	          0x8b5020	            mov edx, dword [rax + 0x20] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac71	    0x81e200050000	                          and edx, 0x500	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac77	    0x81fa00040000	                          cmp edx, 0x400	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac7d	            0x7407	                            je 0x400ac86	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac7f	      0x4883783800	               cmp qword [rax + 0x38], 0	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac84	            0x753e	                           jne 0x400acc4	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac86	          0x4d85c9	                             test r9, r9	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac89	            0x7408	                            je 0x400ac93	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac8b	        0x4c3b4830	              cmp r9, qword [rax + 0x30]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac8f	            0x7533	                           jne 0x400acc4	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac91	            0xeb0a	                           jmp 0x400ac9d	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac93	        0x488b7028	            mov rsi, qword [rax + 0x28] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac97	        0x49397718	            cmp qword [r15 + 0x18], rsi 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac9b	            0x7527	                           jne 0x400acc4	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400ac9d	          0x488b30	                    mov rsi, qword [rax]	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400aca0	      0xbf00000000	                              mov edi, 0	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400aca5	      0xb909000000	                              mov ecx, 9	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400acaa	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400acac	           0xf97c1	                                 seta cl	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400acaf	           0xf92c2	                                 setb dl	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400acb2	            0x38d1	                              cmp cl, dl	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400acb4	            0x740e	                            je 0x400acc4	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400acb6	            0xeb1d	                           jmp 0x400acd5	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400acb8	        0x4983f801	                               cmp r8, 1	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400acbc	            0x7506	                           jne 0x400acc4	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400acbe	        0xf6402440	           test byte [rax + 0x24], 0x40 	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400acc2	            0x7511	                           jne 0x400acd5	      6802	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11
0x400acc4	          0x4885db	                           test rbx, rbx	      6804	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11	IF_12
0x400acc7	        0x480f44d8	                          cmove rbx, rax	      6804	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11	IF_12
0x400accb	      0x4883786801	               cmp qword [rax + 0x68], 1	      6807	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11	IF_13
0x400acd0	      0x835c2420ff	sbb dword [rsp + 0x20], 0xffffffffffffffff	      6807	elf.c	FUNCTION_80	FOR_6	FOR_7	IF_11	IF_13
0x400acd5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6798	elf.c	FUNCTION_80	FOR_6	FOR_7
0x400acd9	          0x4885c0	                           test rax, rax	      6796	elf.c	FUNCTION_80	FOR_6	FOR_7
0x400acdc	     0xf8582feffff	                           jne 0x400ab64	      6796	elf.c	FUNCTION_80	FOR_6	FOR_7
0x400ace2	            0xeb0b	                           jmp 0x400acef	      6796	elf.c	FUNCTION_80	FOR_6	FOR_7
0x400ace4	          0x4889c3	                            mov rbx, rax	      6794	elf.c	FUNCTION_80	FOR_6
0x400ace7	    0xc74424200000	               mov dword [rsp + 0x20], 0	      6796	elf.c	FUNCTION_80	FOR_6	FOR_7
0x400acef	        0x8b6c2420	            mov ebp, dword [rsp + 0x20] 	      6814	elf.c	FUNCTION_80	FOR_6
0x400acf3	    0x488d04ed4800	                 lea rax, [rbp*8 + 0x48]	      6814	elf.c	FUNCTION_80	FOR_6
0x400acfb	      0x4889442458	             mov qword [rsp + 0x58], rax	      6814	elf.c	FUNCTION_80	FOR_6
0x400ad00	          0x4889c6	                            mov rsi, rax	      6815	elf.c	FUNCTION_80	FOR_6	CALL_10
0x400ad03	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      6815	elf.c	FUNCTION_80	FOR_6	CALL_10
0x400ad08	      0xe800000000	                          call 0x400ad0d	      6815	elf.c	FUNCTION_80	FOR_6	CALL_10
0x400ad0d	          0x4989c6	                            mov r14, rax	      6815	elf.c	FUNCTION_80	FOR_6	CALL_10
0x400ad10	          0x4885c0	                           test rax, rax	      6816	elf.c	FUNCTION_80	FOR_6	IF_14
0x400ad13	     0xf843b090000	                            je 0x400b654	      6816	elf.c	FUNCTION_80	FOR_6	IF_14
0x400ad19	    0x48c700000000	                      mov qword [rax], 0	      6821	elf.c	FUNCTION_80	FOR_6
0x400ad20	          0x498b07	                    mov rax, qword [r15]	      6822	elf.c	FUNCTION_80	FOR_6
0x400ad23	        0x49894608	                mov qword [r14 + 8], rax	      6822	elf.c	FUNCTION_80	FOR_6
0x400ad27	        0x498b4708	                mov rax, qword [r15 + 8]	      6823	elf.c	FUNCTION_80	FOR_6
0x400ad2b	        0x49894610	             mov qword [r14 + 0x10], rax	      6823	elf.c	FUNCTION_80	FOR_6
0x400ad2f	      0x41804e4001	                 or byte [r14 + 0x40], 1	      6824	elf.c	FUNCTION_80	FOR_6
0x400ad34	          0x4885db	                           test rbx, rbx	      6829	elf.c	FUNCTION_80	FOR_6	IF_15
0x400ad37	            0x7407	                            je 0x400ad40	      6829	elf.c	FUNCTION_80	FOR_6	IF_15
0x400ad39	      0x48837b6800	               cmp qword [rbx + 0x68], 0	      6829	elf.c	FUNCTION_80	FOR_6	IF_15
0x400ad3e	            0x7418	                            je 0x400ad58	      6829	elf.c	FUNCTION_80	FOR_6	IF_15
0x400ad40	        0x498b4720	            mov rax, qword [r15 + 0x20] 	      6831	elf.c	FUNCTION_80	FOR_6	IF_15
0x400ad44	        0x49894618	             mov qword [r14 + 0x18], rax	      6831	elf.c	FUNCTION_80	FOR_6	IF_15
0x400ad48	      0x410fb64640	           movzx eax, byte [r14 + 0x40] 	      6832	elf.c	FUNCTION_80	FOR_6	IF_15
0x400ad4d	          0x83e0fd	                     and eax, 0xfffffffd	      6832	elf.c	FUNCTION_80	FOR_6	IF_15
0x400ad50	         0xa442463	                or al, byte [rsp + 0x63]	      6832	elf.c	FUNCTION_80	FOR_6	IF_15
0x400ad54	        0x41884640	               mov byte [r14 + 0x40], al	      6832	elf.c	FUNCTION_80	FOR_6	IF_15
0x400ad58	      0xb800000000	                              mov eax, 0	      6838	elf.c	FUNCTION_80	FOR_6
0x400ad5d	      0x49837f1000	               cmp qword [r15 + 0x10], 0	      6838	elf.c	FUNCTION_80	FOR_6
0x400ad62	            0x7512	                           jne 0x400ad76	      6838	elf.c	FUNCTION_80	FOR_6
0x400ad64	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      6838	elf.c	FUNCTION_80	FOR_6
0x400ad69	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      6838	elf.c	FUNCTION_80	FOR_6
0x400ad6c	        0x49394728	            cmp qword [r15 + 0x28], rax 	      6838	elf.c	FUNCTION_80	FOR_6
0x400ad70	           0xf93c0	                                setae al	      6838	elf.c	FUNCTION_80	FOR_6
0x400ad73	           0xfb6c0	                           movzx eax, al	      6838	elf.c	FUNCTION_80	FOR_6
0x400ad76	          0x83e001	                              and eax, 1	      6837	elf.c	FUNCTION_80	FOR_6
0x400ad79	          0xc1e004	                              shl eax, 4	      6837	elf.c	FUNCTION_80	FOR_6
0x400ad7c	      0x410fb65640	           movzx edx, byte [r14 + 0x40] 	      6837	elf.c	FUNCTION_80	FOR_6
0x400ad81	          0x83e2cf	                     and edx, 0xffffffcf	      6837	elf.c	FUNCTION_80	FOR_6
0x400ad84	             0x9d0	                             or eax, edx	      6839	elf.c	FUNCTION_80	FOR_6
0x400ad86	        0x41884640	               mov byte [r14 + 0x40], al	      6839	elf.c	FUNCTION_80	FOR_6
0x400ad8a	      0x837c246400	               cmp dword [rsp + 0x64], 0	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x400ad8f	            0x740a	                            je 0x400ad9b	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x400ad91	        0x49833f01	                      cmp qword [r15], 1	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x400ad95	     0xf84210a0000	                            je 0x400b7bc	      6841	elf.c	FUNCTION_80	FOR_6	IF_16
0x400ad9b	        0x498b4f10	            mov rcx, qword [r15 + 0x10] 	      6844	elf.c	FUNCTION_80	FOR_6	IF_16
0x400ad9f	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      6844	elf.c	FUNCTION_80	FOR_6	IF_16
0x400ada4	        0x488b5618	            mov rdx, qword [rsi + 0x18] 	      6844	elf.c	FUNCTION_80	FOR_6	IF_16
0x400ada8	      0xb800000000	                              mov eax, 0	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400adad	          0x4839d1	                            cmp rcx, rdx	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400adb0	            0x7717	                            ja 0x400adc9	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400adb2	        0x49034f28	             add rcx, qword [r15 + 0x28]	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400adb6	          0x8b4644	            mov eax, dword [rsi + 0x44] 	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400adb9	         0xfaf4640	            imul eax, dword [rsi + 0x40]	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400adbd	          0x4801c2	                            add rdx, rax	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400adc0	          0x4839d1	                            cmp rcx, rdx	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400adc3	           0xf93c0	                                setae al	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400adc6	           0xfb6c0	                           movzx eax, al	      6845	elf.c	FUNCTION_80	FOR_6	IF_16
0x400adc9	          0x83e001	                              and eax, 1	      6843	elf.c	FUNCTION_80	FOR_6	IF_16
0x400adcc	          0xc1e005	                              shl eax, 5	      6843	elf.c	FUNCTION_80	FOR_6	IF_16
0x400adcf	      0x410fb65640	           movzx edx, byte [r14 + 0x40] 	      6843	elf.c	FUNCTION_80	FOR_6	IF_16
0x400add4	          0x83e2df	                     and edx, 0xffffffdf	      6843	elf.c	FUNCTION_80	FOR_6	IF_16
0x400add7	             0x9d0	                             or eax, edx	      6843	elf.c	FUNCTION_80	FOR_6	IF_16
0x400add9	        0x41884640	               mov byte [r14 + 0x40], al	      6843	elf.c	FUNCTION_80	FOR_6	IF_16
0x400addd	        0x49833f01	                      cmp qword [r15], 1	      6849	elf.c	FUNCTION_80	FOR_6	IF_16	IF_17
0x400ade1	     0xf85b5090000	                           jne 0x400b79c	      6849	elf.c	FUNCTION_80	FOR_6	IF_16	IF_17
0x400ade7	            0xa820	                           test al, 0x20	      6850	elf.c	FUNCTION_80	FOR_6	IF_16	IF_17
0x400ade9	      0xb801000000	                              mov eax, 1	      6850	elf.c	FUNCTION_80	FOR_6	IF_16	IF_17
0x400adee	       0xf44442464	           cmove eax, dword [rsp + 0x64]	      6850	elf.c	FUNCTION_80	FOR_6	IF_16	IF_17
0x400adf3	        0x89442464	             mov dword [rsp + 0x64], eax	      6850	elf.c	FUNCTION_80	FOR_6	IF_16	IF_17
0x400adf7	      0xe9c0090000	                           jmp 0x400b7bc	      6850	elf.c	FUNCTION_80	FOR_6	IF_16	IF_17
0x400adfc	      0x49837f3000	               cmp qword [r15 + 0x30], 0	      6863	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19
0x400ae01	            0x752d	                           jne 0x400ae30	      6863	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19
0x400ae03	        0x498b5f18	            mov rbx, qword [r15 + 0x18] 	      6868	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19
0x400ae07	      0xba05000000	                              mov edx, 5	      6866	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_12
0x400ae0c	      0xbe00000000	                              mov esi, 0	      6866	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_12
0x400ae11	      0xbf00000000	                              mov edi, 0	      6866	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_12
0x400ae16	      0xe800000000	                          call 0x400ae1b	      6866	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_12
0x400ae1b	          0x4889da	                            mov rdx, rbx	      6865	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_11
0x400ae1e	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      6865	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_11
0x400ae23	          0x4889c7	                            mov rdi, rax	      6865	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_11
0x400ae26	      0xb800000000	                              mov eax, 0	      6865	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_11
0x400ae2b	      0xe800000000	                          call 0x400ae30	      6865	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19	CALL_11
0x400ae30	    0x41c746440000	               mov dword [r14 + 0x44], 0	      6870	elf.c	FUNCTION_80	FOR_6	IF_18
0x400ae38	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      6871	elf.c	FUNCTION_80	FOR_6	IF_18
0x400ae3d	          0x4c8930	                    mov qword [rax], r14	      6871	elf.c	FUNCTION_80	FOR_6	IF_18
0x400ae40	      0x4c89742440	             mov qword [rsp + 0x40], r14	      6872	elf.c	FUNCTION_80	FOR_6	IF_18
0x400ae45	      0xe947070000	                           jmp 0x400b591	      6872	elf.c	FUNCTION_80	FOR_6	IF_18
0x400ae4a	      0xbe08000000	                              mov esi, 8	      6905	elf.c	FUNCTION_80	FOR_6	CALL_13
0x400ae4f	          0x4889ef	                            mov rdi, rbp	      6905	elf.c	FUNCTION_80	FOR_6	CALL_13
0x400ae52	      0xe800000000	                          call 0x400ae57	      6905	elf.c	FUNCTION_80	FOR_6	CALL_13
0x400ae57	      0x4889442408	                mov qword [rsp + 8], rax	      6905	elf.c	FUNCTION_80	FOR_6	CALL_13
0x400ae5c	          0x4885c0	                           test rax, rax	      6906	elf.c	FUNCTION_80	FOR_6	IF_20
0x400ae5f	     0xf84f6070000	                            je 0x400b65b	      6906	elf.c	FUNCTION_80	FOR_6	IF_20
0x400ae65	          0x4885db	                           test rbx, rbx	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400ae68	     0xf8475030000	                            je 0x400b1e3	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400ae6e	    0x41bc00000000	                             mov r12d, 0	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400ae74	      0xbd00000000	                              mov ebp, 0	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400ae79	    0x41bd00000000	                             mov r13d, 0	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400ae7f	    0x41b800000000	                              mov r8d, 0	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400ae85	    0x41b901000000	                              mov r9d, 1	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400ae8b	      0x448b542478	           mov r10d, dword [rsp + 0x78] 	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400ae90	        0x498b4720	            mov rax, qword [r15 + 0x20] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ae94	          0x4885c0	                           test rax, rax	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ae97	            0x7447	                            je 0x400aee0	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ae99	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400ae9d	          0x4839d0	                            cmp rax, rdx	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400aea0	     0xf8785000000	                            ja 0x400af2b	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400aea6	          0x8b4b20	            mov ecx, dword [rbx + 0x20] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400aea9	    0x81e100050000	                          and ecx, 0x500	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400aeaf	    0x81f900040000	                          cmp ecx, 0x400	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400aeb5	            0x750b	                           jne 0x400aec2	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400aeb7	      0xb900000000	                              mov ecx, 0	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400aebc	        0x49833f07	                      cmp qword [r15], 7	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400aec0	            0x7504	                           jne 0x400aec6	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400aec2	        0x488b4b38	            mov rcx, qword [rbx + 0x38] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400aec6	          0x4801d1	                            add rcx, rdx	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400aec9	        0x498b5730	            mov rdx, qword [r15 + 0x30] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400aecd	        0x49395728	            cmp qword [r15 + 0x28], rdx 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400aed1	      0x490f435728	          cmovae rdx, qword [r15 + 0x28]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400aed6	          0x4801c2	                            add rdx, rax	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400aed9	          0x4839d1	                            cmp rcx, rdx	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400aedc	            0x7645	                           jbe 0x400af23	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400aede	            0xeb4b	                           jmp 0x400af2b	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400aee0	        0x488b4b28	            mov rcx, qword [rbx + 0x28] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400aee4	        0x498b5718	            mov rdx, qword [r15 + 0x18] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400aee8	          0x4839d1	                            cmp rcx, rdx	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400aeeb	            0x723e	                            jb 0x400af2b	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400aeed	          0x8b7320	            mov esi, dword [rbx + 0x20] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400aef0	    0x81e600050000	                          and esi, 0x500	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400aef6	    0x81fe00040000	                          cmp esi, 0x400	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400aefc	            0x7509	                           jne 0x400af07	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400aefe	          0x4889c6	                            mov rsi, rax	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af01	        0x49833f07	                      cmp qword [r15], 7	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af05	            0x7504	                           jne 0x400af0b	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af07	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af0b	          0x4801ce	                            add rsi, rcx	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af0e	        0x498b4f30	            mov rcx, qword [r15 + 0x30] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af12	        0x49394f28	            cmp qword [r15 + 0x28], rcx 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af16	      0x490f434f28	          cmovae rcx, qword [r15 + 0x28]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af1b	          0x4801d1	                            add rcx, rdx	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af1e	          0x4839ce	                            cmp rsi, rcx	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af21	            0x7708	                            ja 0x400af2b	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af23	          0x8b4b20	            mov ecx, dword [rbx + 0x20] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af26	          0xf6c101	                              test cl, 1	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af29	            0x7544	                           jne 0x400af6f	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af2b	          0x498b17	                    mov rdx, qword [r15]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af2e	        0x4883fa04	                              cmp rdx, 4	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af32	     0xf8595020000	                           jne 0x400b1cd	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af38	    0x488b8be00000	            mov rcx, qword [rbx + 0xe0] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af3f	        0x83790407	                  cmp dword [rcx + 4], 7	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af43	     0xf8584020000	                           jne 0x400b1cd	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af49	    0x488bb3900000	            mov rsi, qword [rbx + 0x90] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af50	        0x498b4f10	            mov rcx, qword [r15 + 0x10] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af54	          0x4839ce	                            cmp rsi, rcx	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af57	     0xf8270020000	                            jb 0x400b1cd	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af5d	        0x48037338	             add rsi, qword [rbx + 0x38]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af61	        0x49034f28	             add rcx, qword [r15 + 0x28]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af65	          0x4839ce	                            cmp rsi, rcx	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af68	            0x7631	                           jbe 0x400af9b	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af6a	      0xe95e020000	                           jmp 0x400b1cd	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af6f	          0x498b17	                    mov rdx, qword [r15]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af72	    0x4881fa51e574	                     cmp rdx, 0x6474e551	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af79	     0xf844e020000	                            je 0x400b1cd	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af7f	        0x4883fa07	                              cmp rdx, 7	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af83	            0x750a	                           jne 0x400af8f	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af85	          0xf6c504	                              test ch, 4	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af88	            0x757e	                           jne 0x400b008	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af8a	      0xe93e020000	                           jmp 0x400b1cd	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af8f	        0x4883fa01	                              cmp rdx, 1	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af93	            0x7410	                            je 0x400afa5	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af95	        0x4883fa07	                              cmp rdx, 7	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af99	            0x740a	                            je 0x400afa5	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af9b	        0xf6432104	               test byte [rbx + 0x21], 4	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400af9f	     0xf8528020000	                           jne 0x400b1cd	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400afa5	        0x4883fa02	                              cmp rdx, 2	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400afa9	            0x754d	                           jne 0x400aff8	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400afab	          0x8b5320	            mov edx, dword [rbx + 0x20] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400afae	    0x81e200050000	                          and edx, 0x500	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400afb4	    0x81fa00040000	                          cmp edx, 0x400	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400afba	            0x7407	                            je 0x400afc3	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400afbc	      0x48837b3800	               cmp qword [rbx + 0x38], 0	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400afc1	            0x7545	                           jne 0x400b008	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400afc3	          0x4885c0	                           test rax, rax	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400afc6	            0x7408	                            je 0x400afd0	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400afc8	        0x483b4330	            cmp rax, qword [rbx + 0x30] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400afcc	            0x753a	                           jne 0x400b008	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400afce	            0xeb0a	                           jmp 0x400afda	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400afd0	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400afd4	        0x49394718	            cmp qword [r15 + 0x18], rax 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400afd8	            0x752e	                           jne 0x400b008	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400afda	          0x488b33	                    mov rsi, qword [rbx]	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400afdd	      0xbf00000000	                              mov edi, 0	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400afe2	      0xb909000000	                              mov ecx, 9	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400afe7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400afe9	           0xf97c2	                                 seta dl	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400afec	           0xf92c0	                                 setb al	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400afef	            0x38c2	                              cmp dl, al	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400aff1	            0x7415	                            je 0x400b008	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400aff3	      0xe9d5010000	                           jmp 0x400b1cd	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400aff8	        0x4883fa01	                              cmp rdx, 1	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400affc	            0x750a	                           jne 0x400b008	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400affe	        0xf6432440	           test byte [rbx + 0x24], 0x40 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b002	     0xf85c5010000	                           jne 0x400b1cd	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b008	        0x488b4368	            mov rax, qword [rbx + 0x68] 	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b00c	          0x4885c0	                           test rax, rax	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b00f	     0xf84b8010000	                            je 0x400b1cd	      6923	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b015	        0x418d5001	                       lea edx, [r8 + 1]	      6927	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b019	          0x4589c0	                            mov r8d, r8d	      6927	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b01c	      0x488b742408	                mov rsi, qword [rsp + 8]	      6927	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b021	        0x4a891cc6	             mov qword [rsi + r8*8], rbx	      6927	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b025	          0x4585d2	                         test r10d, r10d	      6933	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b028	            0x757a	                           jne 0x400b0a4	      6933	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b02a	        0x498b7f18	            mov rdi, qword [r15 + 0x18] 	      6934	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b02e	          0x4885ff	                           test rdi, rdi	      6934	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b031	            0x7471	                            je 0x400b0a4	      6934	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b033	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	      6936	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b038	    0xf6868a030000	          test byte [rsi + 0x38a], 0x40 	      6936	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b03f	            0x7563	                           jne 0x400b0a4	      6936	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b041	          0x4585ed	                         test r13d, r13d	      6936	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b044	            0x755e	                           jne 0x400b0a4	      6936	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b046	      0x4883783000	               cmp qword [rax + 0x30], 0	      6937	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b04b	            0x7457	                            je 0x400b0a4	      6937	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b04d	      0x410fb64e40	           movzx ecx, byte [r14 + 0x40] 	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b052	      0xbe00000000	                              mov esi, 0	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b057	          0xf6c110	                           test cl, 0x10	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b05a	            0x7408	                            je 0x400b064	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b05c	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b061	          0x8b763c	            mov esi, dword [rsi + 0x3c] 	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b064	    0x41b800000000	                              mov r8d, 0	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b06a	          0xf6c120	                           test cl, 0x20	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b06d	            0x740e	                            je 0x400b07d	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b06f	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b074	        0x448b4144	            mov r8d, dword [rcx + 0x44] 	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b078	      0x440faf4140	            imul r8d, dword [rcx + 0x40]	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b07d	          0x8b4870	            mov ecx, dword [rax + 0x70] 	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b080	          0x4d89cb	                             mov r11, r9	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b083	          0x49d3e3	                             shl r11, cl	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b086	          0x4c89d9	                            mov rcx, r11	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b089	      0x4e8d5c1fff	                lea r11, [rdi + r11 - 1]	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b08e	          0x4c01de	                            add rsi, r11	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b091	          0x4c01c6	                             add rsi, r8	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b094	          0x48f7d9	                                 neg rcx	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b097	          0x4821f1	                            and rcx, rsi	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b09a	        0x483b4828	            cmp rcx, qword [rax + 0x28] 	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b09e	            0x7504	                           jne 0x400b0a4	      6938	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b0a0	        0x49897e18	             mov qword [r14 + 0x18], rdi	      6946	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_22
0x400b0a4	        0x488b4830	            mov rcx, qword [rax + 0x30] 	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b0a8	        0x498b7618	            mov rsi, qword [r14 + 0x18] 	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b0ac	          0x4839f1	                            cmp rcx, rsi	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b0af	            0x723d	                            jb 0x400b0ee	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b0b1	          0x8b7820	            mov edi, dword [rax + 0x20] 	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b0b4	    0x81e700050000	                          and edi, 0x500	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b0ba	    0x81ff00040000	                          cmp edi, 0x400	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b0c0	            0x750c	                           jne 0x400b0ce	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b0c2	    0x41b800000000	                              mov r8d, 0	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b0c8	        0x49833f07	                      cmp qword [r15], 7	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b0cc	            0x7504	                           jne 0x400b0d2	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b0ce	        0x4c8b4038	              mov r8, qword [rax + 0x38]	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b0d2	          0x4901c8	                             add r8, rcx	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b0d5	        0x498b7f30	            mov rdi, qword [r15 + 0x30] 	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b0d9	        0x49397f28	            cmp qword [r15 + 0x28], rdi 	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b0dd	      0x490f437f28	          cmovae rdi, qword [r15 + 0x28]	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b0e2	          0x4801f7	                            add rdi, rsi	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b0e5	          0x4939f8	                             cmp r8, rdi	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b0e8	     0xf86af000000	                           jbe 0x400b19d	      6950	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b0ee	          0x498b37	                    mov rsi, qword [r15]	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b0f1	        0x4883fe04	                              cmp rsi, 4	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b0f5	            0x754f	                           jne 0x400b146	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b0f7	    0x488bbbe00000	            mov rdi, qword [rbx + 0xe0] 	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b0fe	        0x837f0407	                  cmp dword [rdi + 4], 7	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b102	            0x7542	                           jne 0x400b146	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b104	    0x4c8b83900000	              mov r8, qword [rbx + 0x90]	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b10b	        0x498b7f10	            mov rdi, qword [r15 + 0x10] 	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b10f	          0x4939f8	                             cmp r8, rdi	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b112	            0x7232	                            jb 0x400b146	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b114	        0x4c034338	              add r8, qword [rbx + 0x38]	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b118	        0x49037f28	             add rdi, qword [r15 + 0x28]	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b11c	          0x4939f8	                             cmp r8, rdi	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b11f	            0x7725	                            ja 0x400b146	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b121	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b126	         0xfb67f44	           movzx edi, byte [rdi + 0x44] 	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b12a	      0x40887c2424	              mov byte [rsp + 0x24], dil	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b12f	          0x83e707	                              and edi, 7	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b132	        0x4080ff03	                              cmp dil, 3	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b136	            0x750e	                           jne 0x400b146	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b138	      0x48837b2800	               cmp qword [rbx + 0x28], 0	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b13d	            0x7507	                           jne 0x400b146	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b13f	      0x48837b3000	               cmp qword [rbx + 0x30], 0	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b144	            0x7457	                            je 0x400b19d	      6951	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b146	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      6952	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b14b	    0xf6878a030000	          test byte [rdi + 0x38a], 0x40 	      6952	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b152	            0x7469	                            je 0x400b1bd	      6952	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b154	        0x4c8b5828	            mov r11, qword [rax + 0x28] 	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b158	        0x498b7f18	            mov rdi, qword [r15 + 0x18] 	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b15c	          0x4939fb	                            cmp r11, rdi	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b15f	            0x725c	                            jb 0x400b1bd	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b161	        0x448b4020	            mov r8d, dword [rax + 0x20] 	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b165	    0x4181e0000500	                          and r8d, 0x500	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b16c	    0x4181f8000400	                          cmp r8d, 0x400	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b173	            0x750c	                           jne 0x400b181	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b175	    0x41b800000000	                              mov r8d, 0	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b17b	        0x4883fe07	                              cmp rsi, 7	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b17f	            0x7504	                           jne 0x400b185	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b181	        0x4c8b4038	              mov r8, qword [rax + 0x38]	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b185	          0x4d01d8	                             add r8, r11	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b188	        0x498b7730	            mov rsi, qword [r15 + 0x30] 	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b18c	        0x49397728	            cmp qword [r15 + 0x28], rsi 	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b190	      0x490f437728	          cmovae rsi, qword [r15 + 0x28]	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b195	          0x4801fe	                            add rsi, rdi	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b198	          0x4939f0	                             cmp r8, rsi	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b19b	            0x7720	                            ja 0x400b1bd	      6953	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b19d	          0x4885ed	                           test rbp, rbp	      6955	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23	IF_24
0x400b1a0	            0x740a	                            je 0x400b1ac	      6955	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23	IF_24
0x400b1a2	        0x483b4d30	            cmp rcx, qword [rbp + 0x30] 	      6957	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23	IF_24
0x400b1a6	        0x480f42e8	                          cmovb rbp, rax	      6957	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23	IF_24
0x400b1aa	            0xeb03	                           jmp 0x400b1af	      6957	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23	IF_24
0x400b1ac	          0x4889c5	                            mov rbp, rax	      6957	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23	IF_24
0x400b1af	          0x4489e9	                           mov ecx, r13d	      6962	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b1b2	      0x498944ce48	     mov qword [r14 + rcx*8 + 0x48], rax	      6962	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b1b7	        0x458d6d01	                     lea r13d, [r13 + 1]	      6962	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b1bb	            0xeb07	                           jmp 0x400b1c4	      6962	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_23
0x400b1bd	          0x4d85e4	                           test r12, r12	      6965	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	ELSE_2	IF_25
0x400b1c0	        0x4c0f44e0	                          cmove r12, rax	      6965	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	ELSE_2	IF_25
0x400b1c4	        0x3b542420	            cmp edx, dword [rsp + 0x20] 	      6967	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_26
0x400b1c8	            0x7439	                            je 0x400b203	      6967	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21	IF_26
0x400b1ca	          0x4189d0	                            mov r8d, edx	      6927	elf.c	FUNCTION_80	FOR_6	FOR_8	IF_21
0x400b1cd	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      6921	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400b1d1	          0x4885db	                           test rbx, rbx	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400b1d4	     0xf85b6fcffff	                           jne 0x400ae90	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400b1da	      0x443b442420	            cmp r8d, dword [rsp + 0x20] 	      6972	elf.c	FUNCTION_80	FOR_6	CALL_14
0x400b1df	            0x7513	                           jne 0x400b1f4	      6972	elf.c	FUNCTION_80	FOR_6	CALL_14
0x400b1e1	            0xeb20	                           jmp 0x400b203	      6972	elf.c	FUNCTION_80	FOR_6	CALL_14
0x400b1e3	    0x41bc00000000	                             mov r12d, 0	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400b1e9	      0xbd00000000	                              mov ebp, 0	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400b1ee	    0x41bd00000000	                             mov r13d, 0	      6919	elf.c	FUNCTION_80	FOR_6	FOR_8
0x400b1f4	      0xbe3c1b0000	                         mov esi, 0x1b3c	      6972	elf.c	FUNCTION_80	FOR_6	CALL_14
0x400b1f9	      0xbf00000000	                              mov edi, 0	      6972	elf.c	FUNCTION_80	FOR_6	CALL_14
0x400b1fe	      0xe800000000	                          call 0x400b203	      6972	elf.c	FUNCTION_80	FOR_6	CALL_14
0x400b203	      0x44396c2420	           cmp dword [rsp + 0x20], r13d 	      6976	elf.c	FUNCTION_80	FOR_6	IF_27
0x400b208	            0x7554	                           jne 0x400b25e	      6976	elf.c	FUNCTION_80	FOR_6	IF_27
0x400b20a	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      6982	elf.c	FUNCTION_80	FOR_6	IF_27
0x400b20e	        0x41894644	             mov dword [r14 + 0x44], eax	      6982	elf.c	FUNCTION_80	FOR_6	IF_27
0x400b212	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      6983	elf.c	FUNCTION_80	FOR_6	IF_27
0x400b217	          0x4c8930	                    mov qword [rax], r14	      6983	elf.c	FUNCTION_80	FOR_6	IF_27
0x400b21a	      0x4c89742440	             mov qword [rsp + 0x40], r14	      6984	elf.c	FUNCTION_80	FOR_6	IF_27
0x400b21f	      0x837c247800	               cmp dword [rsp + 0x78], 0	      6986	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400b224	            0x7429	                            je 0x400b24f	      6986	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400b226	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      6987	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400b22b	    0xf6808a030000	          test byte [rax + 0x38a], 0x40 	      6987	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400b232	            0x751b	                           jne 0x400b24f	      6987	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400b234	        0x488b4530	            mov rax, qword [rbp + 0x30] 	      6988	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400b238	        0x498b5618	            mov rdx, qword [r14 + 0x18] 	      6988	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400b23c	          0x4839d0	                            cmp rax, rdx	      6988	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400b23f	            0x740e	                            je 0x400b24f	      6988	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400b241	      0x41f6464030	           test byte [r14 + 0x40], 0x30 	      6990	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400b246	            0x7507	                           jne 0x400b24f	      6990	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400b248	          0x4829d0	                            sub rax, rdx	      6994	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400b24b	        0x49894620	             mov qword [r14 + 0x20], rax	      6994	elf.c	FUNCTION_80	FOR_6	IF_27	IF_28
0x400b24f	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      6996	elf.c	FUNCTION_80	FOR_6	IF_27	CALL_15
0x400b254	      0xe800000000	                          call 0x400b259	      6996	elf.c	FUNCTION_80	FOR_6	IF_27	CALL_15
0x400b259	      0xe933030000	                           jmp 0x400b591	      6996	elf.c	FUNCTION_80	FOR_6	IF_27	CALL_15
0x400b25e	          0x4885ed	                           test rbp, rbp	      7004	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_29
0x400b261	        0x490f44ec	                          cmove rbp, r12	      7004	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_29
0x400b265	        0x488b4530	            mov rax, qword [rbp + 0x30] 	      7007	elf.c	FUNCTION_80	FOR_6	ELSE_3
0x400b269	        0x49894618	             mov qword [r14 + 0x18], rax	      7007	elf.c	FUNCTION_80	FOR_6	ELSE_3
0x400b26d	      0x410fb64e40	           movzx ecx, byte [r14 + 0x40] 	      7011	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x400b272	          0xf6c120	                           test cl, 0x20	      7011	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x400b275	            0x741f	                            je 0x400b296	      7011	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x400b277	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      7013	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x400b27c	          0x8b5644	            mov edx, dword [rsi + 0x44] 	      7013	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x400b27f	         0xfaf5640	            imul edx, dword [rsi + 0x40]	      7013	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x400b283	          0x4829d0	                            sub rax, rdx	      7013	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x400b286	        0x49894618	             mov qword [r14 + 0x18], rax	      7013	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x400b28a	          0x8b4644	            mov eax, dword [rsi + 0x44] 	      7020	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x400b28d	        0x8944247c	             mov dword [rsp + 0x7c], eax	      7020	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x400b291	      0x4c89742470	             mov qword [rsp + 0x70], r14	      7021	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_30
0x400b296	          0xf6c110	                           test cl, 0x10	      7024	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400b299	            0x743b	                            je 0x400b2d6	      7024	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400b29b	          0x8b4d70	            mov ecx, dword [rbp + 0x70] 	      7026	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400b29e	      0xb801000000	                              mov eax, 1	      7026	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400b2a3	          0x48d3e0	                             shl rax, cl	      7026	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400b2a6	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      7027	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400b2ab	          0x8b563c	            mov edx, dword [rsi + 0x3c] 	      7027	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400b2ae	        0x498b7618	            mov rsi, qword [r14 + 0x18] 	      7027	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400b2b2	          0x4829d6	                            sub rsi, rdx	      7027	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400b2b5	          0x4889f2	                            mov rdx, rsi	      7027	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400b2b8	        0x49897618	             mov qword [r14 + 0x18], rsi	      7027	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400b2bc	        0x498b4f38	            mov rcx, qword [r15 + 0x38] 	      7033	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31	IF_32
0x400b2c0	          0x4839c8	                            cmp rax, rcx	      7033	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31	IF_32
0x400b2c3	            0x7607	                           jbe 0x400b2cc	      7033	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31	IF_32
0x400b2c5	          0x4885c9	                           test rcx, rcx	      7034	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31	IF_32
0x400b2c8	        0x480f45c1	                         cmovne rax, rcx	      7034	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31	IF_32
0x400b2cc	          0x48f7d8	                                 neg rax	      7035	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400b2cf	          0x4821d0	                            and rax, rdx	      7035	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400b2d2	        0x49894618	             mov qword [r14 + 0x18], rax	      7035	elf.c	FUNCTION_80	FOR_6	ELSE_3	IF_31
0x400b2d6	    0x41c746440000	               mov dword [r14 + 0x44], 0	      7049	elf.c	FUNCTION_80	FOR_6	DO_1
0x400b2de	    0xc74424240000	               mov dword [rsp + 0x24], 0	      7049	elf.c	FUNCTION_80	FOR_6	DO_1
0x400b2e6	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400b2eb	          0x48f7d8	                                 neg rax	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400b2ee	      0x4889442428	             mov qword [rsp + 0x28], rax	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400b2f3	      0xbd00000000	                              mov ebp, 0	      7049	elf.c	FUNCTION_80	FOR_6	DO_1
0x400b2f8	    0x41bd00000000	                             mov r13d, 0	      7049	elf.c	FUNCTION_80	FOR_6	DO_1
0x400b2fe	      0x488b442408	                mov rax, qword [rsp + 8]	      7055	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x400b303	        0x4c8b24e8	            mov r12, qword [rax + rbp*8]	      7055	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x400b307	          0x4d85e4	                           test r12, r12	      7057	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_33
0x400b30a	     0xf84d5010000	                            je 0x400b4e5	      7057	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_33
0x400b310	      0x498b5c2468	            mov rbx, qword [r12 + 0x68] 	      7060	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x400b315	          0x4885db	                           test rbx, rbx	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_16
0x400b318	            0x750f	                           jne 0x400b329	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_16
0x400b31a	      0xbe961b0000	                         mov esi, 0x1b96	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_16
0x400b31f	      0xbf00000000	                              mov edi, 0	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_16
0x400b324	      0xe800000000	                          call 0x400b329	      7062	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	CALL_16
0x400b329	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b32d	        0x498b4e18	            mov rcx, qword [r14 + 0x18] 	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b331	          0x4839ca	                            cmp rdx, rcx	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b334	            0x7237	                            jb 0x400b36d	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b336	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b339	      0x2500050000	                          and eax, 0x500	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b33e	      0x3d00040000	                          cmp eax, 0x400	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b343	            0x750b	                           jne 0x400b350	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b345	      0xb800000000	                              mov eax, 0	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b34a	        0x49833f07	                      cmp qword [r15], 7	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b34e	            0x7504	                           jne 0x400b354	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b350	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b354	        0x488d3402	                    lea rsi, [rdx + rax]	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b358	        0x498b4730	            mov rax, qword [r15 + 0x30] 	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b35c	        0x49394728	            cmp qword [r15 + 0x28], rax 	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b360	      0x490f434728	          cmovae rax, qword [r15 + 0x28]	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b365	          0x4801c8	                            add rax, rcx	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b368	          0x4839c6	                            cmp rsi, rax	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b36b	            0x7673	                           jbe 0x400b3e0	      7064	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b36d	        0x49833f04	                      cmp qword [r15], 4	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b371	     0xf8567010000	                           jne 0x400b4de	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b377	    0x498b8424e000	            mov rax, qword [r12 + 0xe0] 	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b37f	        0x83780407	                  cmp dword [rax + 4], 7	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b383	     0xf8555010000	                           jne 0x400b4de	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b389	    0x498bb4249000	            mov rsi, qword [r12 + 0x90] 	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b391	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b395	          0x4839c6	                            cmp rsi, rax	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b398	     0xf8240010000	                            jb 0x400b4de	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b39e	      0x4903742438	             add rsi, qword [r12 + 0x38]	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b3a3	        0x49034728	             add rax, qword [r15 + 0x28]	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b3a7	          0x4839c6	                            cmp rsi, rax	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b3aa	     0xf872e010000	                            ja 0x400b4de	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b3b0	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b3b5	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b3b9	        0x88442462	               mov byte [rsp + 0x62], al	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b3bd	          0x83e007	                              and eax, 7	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b3c0	            0x3c03	                               cmp al, 3	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b3c2	     0xf8516010000	                           jne 0x400b4de	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b3c8	    0x49837c242800	               cmp qword [r12 + 0x28], 0	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b3ce	     0xf850a010000	                           jne 0x400b4de	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b3d4	    0x49837c243000	               cmp qword [r12 + 0x30], 0	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b3da	     0xf85fe000000	                           jne 0x400b4de	      7065	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b3e0	        0x418b7644	            mov esi, dword [r14 + 0x44] 	      7067	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35
0x400b3e4	            0x85f6	                           test esi, esi	      7067	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35
0x400b3e6	            0x756c	                           jne 0x400b454	      7067	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35
0x400b3e8	      0x410fb67e40	           movzx edi, byte [r14 + 0x40] 	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x400b3ed	    0x41b900000000	                              mov r9d, 0	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x400b3f3	        0x40f6c710	                          test dil, 0x10	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x400b3f7	            0x7409	                            je 0x400b402	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x400b3f9	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x400b3fe	        0x448b483c	            mov r9d, dword [rax + 0x3c] 	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x400b402	        0x488d41ff	                      lea rax, [rcx - 1]	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x400b406	    0x41b800000000	                              mov r8d, 0	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x400b40c	        0x40f6c720	                          test dil, 0x20	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x400b410	            0x740e	                            je 0x400b420	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x400b412	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x400b417	        0x448b4744	            mov r8d, dword [rdi + 0x44] 	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x400b41b	      0x440faf4740	            imul r8d, dword [rdi + 0x40]	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x400b420	          0x8b4b70	            mov ecx, dword [rbx + 0x70] 	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x400b423	      0xbf01000000	                              mov edi, 1	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x400b428	          0x48d3e7	                             shl rdi, cl	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x400b42b	        0x488d0c07	                    lea rcx, [rdi + rax]	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x400b42f	          0x4c01c9	                             add rcx, r9	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x400b432	          0x4901c8	                             add r8, rcx	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x400b435	          0x48f7df	                                 neg rdi	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x400b438	          0x4c21c7	                             and rdi, r8	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x400b43b	          0x4839fa	                            cmp rdx, rdi	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x400b43e	            0x7470	                            je 0x400b4b0	      7072	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	IF_36
0x400b440	      0xba00000000	                              mov edx, 0	      7080	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	CALL_17
0x400b445	      0xbea81b0000	                         mov esi, 0x1ba8	      7080	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	CALL_17
0x400b44a	      0xbf00000000	                              mov edi, 0	      7080	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	CALL_17
0x400b44f	      0xe800000000	                          call 0x400b454	      7080	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_35	CALL_17
0x400b454	          0x8d46ff	                      lea eax, [rsi - 1]	      7086	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4
0x400b457	      0x498b4cc648	    mov rcx, qword [r14 + rax*8 + 0x48] 	      7086	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4
0x400b45c	        0x488b4138	            mov rax, qword [rcx + 0x38] 	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400b460	        0x48034130	             add rax, qword [rcx + 0x30]	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400b464	    0x49c7c0ffffff	              mov r8, 0xffffffffffffffff	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400b46b	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400b470	          0x4801c1	                            add rcx, rax	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400b473	            0x7208	                            jb 0x400b47d	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400b475	      0x48234c2428	             and rcx, qword [rsp + 0x28]	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400b47a	          0x4989c8	                             mov r8, rcx	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400b47d	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400b482	      0x488d7c17ff	                lea rdi, [rdi + rdx - 1]	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400b487	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400b48c	          0x4821f9	                            and rcx, rdi	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400b48f	          0x4839fa	                            cmp rdx, rdi	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400b492	    0x48c7c7ffffff	             mov rdi, 0xffffffffffffffff	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400b499	        0x480f47cf	                          cmova rcx, rdi	      7093	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400b49d	          0x4839c2	                            cmp rdx, rax	      7094	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400b4a0	            0x7205	                            jb 0x400b4a7	      7094	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400b4a2	          0x4939c8	                             cmp r8, rcx	      7094	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400b4a5	            0x7309	                           jae 0x400b4b0	      7094	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400b4a7	          0x4d85ed	                           test r13, r13	      7098	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	IF_38
0x400b4aa	        0x4c0f44eb	                          cmove r13, rbx	      7098	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	IF_38
0x400b4ae	            0xeb35	                           jmp 0x400b4e5	      7098	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37	IF_38
0x400b4b0	          0x8d4601	                      lea eax, [rsi + 1]	      7104	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b4b3	        0x41894644	             mov dword [r14 + 0x44], eax	      7104	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b4b7	            0x89f6	                            mov esi, esi	      7104	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b4b9	      0x49895cf648	     mov qword [r14 + rsi*8 + 0x48], rbx	      7104	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b4be	      0x8344242401	               add dword [rsp + 0x24], 1	      7105	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b4c3	      0x488b442408	                mov rax, qword [rsp + 8]	      7106	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b4c8	    0x48c704e80000	              mov qword [rax + rbp*8], 0	      7106	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34
0x400b4d0	        0x49833f01	                      cmp qword [r15], 1	      7107	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_39
0x400b4d4	            0x750f	                           jne 0x400b4e5	      7107	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_39
0x400b4d6	    0x41804c242440	              or byte [r12 + 0x24], 0x40	      7108	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_39
0x400b4dc	            0xeb07	                           jmp 0x400b4e5	      7108	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	IF_39
0x400b4de	          0x4d85ed	                           test r13, r13	      7111	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	ELSE_5	IF_40
0x400b4e1	        0x4c0f44eb	                          cmove r13, rbx	      7111	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	ELSE_5	IF_40
0x400b4e5	        0x4883c501	                              add rbp, 1	      7111	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	ELSE_5	IF_40
0x400b4e9	        0x396c2420	            cmp dword [rsp + 0x20], ebp 	      7053	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x400b4ed	     0xf870bfeffff	                            ja 0x400b2fe	      7053	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9
0x400b4f3	      0x41837e4400	               cmp dword [r14 + 0x44], 0	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_18
0x400b4f8	            0x750f	                           jne 0x400b509	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_18
0x400b4fa	      0xbeca1b0000	                         mov esi, 0x1bca	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_18
0x400b4ff	      0xbf00000000	                              mov edi, 0	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_18
0x400b504	      0xe800000000	                          call 0x400b509	      7114	elf.c	FUNCTION_80	FOR_6	DO_1	CALL_18
0x400b509	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      7117	elf.c	FUNCTION_80	FOR_6	DO_1
0x400b50e	          0x4c8930	                    mov qword [rax], r14	      7117	elf.c	FUNCTION_80	FOR_6	DO_1
0x400b511	      0x4c89742440	             mov qword [rsp + 0x40], r14	      7118	elf.c	FUNCTION_80	FOR_6	DO_1
0x400b516	        0x8b742420	            mov esi, dword [rsp + 0x20] 	      7120	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400b51a	        0x39742424	            cmp dword [rsp + 0x24], esi 	      7120	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400b51e	     0xf83a4020000	                           jae 0x400b7c8	      7120	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400b524	      0x488b742458	            mov rsi, qword [rsp + 0x58] 	      7127	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	CALL_19
0x400b529	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      7127	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	CALL_19
0x400b52e	      0xe800000000	                          call 0x400b533	      7127	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	CALL_19
0x400b533	          0x4989c6	                            mov r14, rax	      7127	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	CALL_19
0x400b536	          0x4885c0	                           test rax, rax	      7128	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	IF_42
0x400b539	            0x7514	                           jne 0x400b54f	      7128	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	IF_42
0x400b53b	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      7130	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	IF_42	CALL_20
0x400b540	      0xe800000000	                          call 0x400b545	      7130	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	IF_42	CALL_20
0x400b545	      0xb800000000	                              mov eax, 0	      7131	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	IF_42
0x400b54a	      0xe91f010000	                           jmp 0x400b66e	      7131	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41	IF_42
0x400b54f	    0x48c700000000	                      mov qword [rax], 0	      7137	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400b556	          0x498b07	                    mov rax, qword [r15]	      7138	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400b559	        0x49894608	                mov qword [r14 + 8], rax	      7138	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400b55d	        0x498b4708	                mov rax, qword [r15 + 8]	      7139	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400b561	        0x49894610	             mov qword [r14 + 0x10], rax	      7139	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400b565	      0x410fb64640	           movzx eax, byte [r14 + 0x40] 	      7140	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400b56a	          0x83c801	                               or eax, 1	      7140	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400b56d	        0x41884640	               mov byte [r14 + 0x40], al	      7140	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400b571	        0x498b5530	            mov rdx, qword [r13 + 0x30] 	      7141	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400b575	        0x49895618	             mov qword [r14 + 0x18], rdx	      7141	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400b579	          0x83e0cd	                     and eax, 0xffffffcd	      7142	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400b57c	         0xa442463	                or al, byte [rsp + 0x63]	      7144	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400b580	        0x41884640	               mov byte [r14 + 0x40], al	      7144	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400b584	    0x41c746440000	               mov dword [r14 + 0x44], 0	      7049	elf.c	FUNCTION_80	FOR_6	DO_1
0x400b58c	      0xe962fdffff	                           jmp 0x400b2f3	      7049	elf.c	FUNCTION_80	FOR_6	DO_1
0x400b591	      0x8344245001	               add dword [rsp + 0x50], 1	      6779	elf.c	FUNCTION_80	FOR_6
0x400b596	        0x8b442450	            mov eax, dword [rsp + 0x50] 	      6779	elf.c	FUNCTION_80	FOR_6
0x400b59a	        0x4983c740	                           add r15, 0x40	      6779	elf.c	FUNCTION_80	FOR_6
0x400b59e	        0x39442454	            cmp dword [rsp + 0x54], eax 	      6777	elf.c	FUNCTION_80	FOR_6	CALL_9
0x400b5a2	     0xf878af5ffff	                            ja 0x400ab32	      6777	elf.c	FUNCTION_80	FOR_6	CALL_9
0x400b5a8	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      7152	elf.c	FUNCTION_80	CALL_22
0x400b5ad	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7152	elf.c	FUNCTION_80	CALL_22
0x400b5b4	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      7152	elf.c	FUNCTION_80	CALL_22
0x400b5bb	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      7152	elf.c	FUNCTION_80	CALL_22
0x400b5c3	          0x488902	                    mov qword [rdx], rax	      7152	elf.c	FUNCTION_80	CALL_22
0x400b5c6	    0x48837c247000	               cmp qword [rsp + 0x70], 0	      7157	elf.c	FUNCTION_80	IF_43
0x400b5cc	     0xf8490000000	                            je 0x400b662	      7157	elf.c	FUNCTION_80	IF_43
0x400b5d2	          0x4885c0	                           test rax, rax	      7161	elf.c	FUNCTION_80	IF_43	FOR_10
0x400b5d5	     0xf848e000000	                            je 0x400b669	      7161	elf.c	FUNCTION_80	IF_43	FOR_10
0x400b5db	          0x4889c1	                            mov rcx, rax	      7161	elf.c	FUNCTION_80	IF_43	FOR_10
0x400b5de	      0xba00000000	                              mov edx, 0	      7161	elf.c	FUNCTION_80	IF_43	FOR_10
0x400b5e3	          0x83c201	                              add edx, 1	      7162	elf.c	FUNCTION_80	IF_43	FOR_10
0x400b5e6	          0x488b09	                    mov rcx, qword [rcx]	      7161	elf.c	FUNCTION_80	IF_43	FOR_10
0x400b5e9	          0x4885c9	                           test rcx, rcx	      7161	elf.c	FUNCTION_80	IF_43	FOR_10
0x400b5ec	            0x75f5	                           jne 0x400b5e3	      7161	elf.c	FUNCTION_80	IF_43	FOR_10
0x400b5ee	      0xe908020000	                           jmp 0x400b7fb	      7161	elf.c	FUNCTION_80	IF_43	FOR_10
0x400b5f3	        0x2b54247c	             sub edx, dword [rsp + 0x7c]	      7166	elf.c	FUNCTION_80	IF_43	IF_44
0x400b5f7	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      7166	elf.c	FUNCTION_80	IF_43	IF_44
0x400b5fc	         0xfaf5640	            imul edx, dword [rsi + 0x40]	      7166	elf.c	FUNCTION_80	IF_43	IF_44
0x400b600	      0x488b742470	            mov rsi, qword [rsp + 0x70] 	      7166	elf.c	FUNCTION_80	IF_43	IF_44
0x400b605	        0x48295618	             sub qword [rsi + 0x18], rdx	      7166	elf.c	FUNCTION_80	IF_43	IF_44
0x400b609	      0x4883780806	                  cmp qword [rax + 8], 6	      7169	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400b60e	            0x7535	                           jne 0x400b645	      7169	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400b610	            0xeb07	                           jmp 0x400b619	      7169	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400b612	      0x4883780806	                  cmp qword [rax + 8], 6	      7169	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400b617	            0x752c	                           jne 0x400b645	      7169	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400b619	      0xba00000000	                              mov edx, 0	      7171	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400b61e	      0x488b742470	            mov rsi, qword [rsp + 0x70] 	      7171	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400b623	        0xf6464010	           test byte [rsi + 0x40], 0x10 	      7171	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400b627	            0x7408	                            je 0x400b631	      7171	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400b629	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      7171	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400b62e	          0x8b563c	            mov edx, dword [rsi + 0x3c] 	      7171	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400b631	      0x488b742470	            mov rsi, qword [rsp + 0x70] 	      7173	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400b636	        0x48035618	             add rdx, qword [rsi + 0x18]	      7173	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400b63a	        0x48895018	             mov qword [rax + 0x18], rdx	      7173	elf.c	FUNCTION_80	IF_43	FOR_11	IF_45
0x400b63e	      0xb801000000	                              mov eax, 1	      7189	elf.c	FUNCTION_80
0x400b643	            0xeb29	                           jmp 0x400b66e	      7189	elf.c	FUNCTION_80
0x400b645	          0x488b00	                    mov rax, qword [rax]	      7168	elf.c	FUNCTION_80	IF_43	FOR_11
0x400b648	          0x4885c0	                           test rax, rax	      7168	elf.c	FUNCTION_80	IF_43	FOR_11
0x400b64b	            0x75c5	                           jne 0x400b612	      7168	elf.c	FUNCTION_80	IF_43	FOR_11
0x400b64d	      0xb801000000	                              mov eax, 1	      7189	elf.c	FUNCTION_80
0x400b652	            0xeb1a	                           jmp 0x400b66e	      7189	elf.c	FUNCTION_80
0x400b654	      0xb800000000	                              mov eax, 0	      6817	elf.c	FUNCTION_80	FOR_6	IF_14
0x400b659	            0xeb13	                           jmp 0x400b66e	      6817	elf.c	FUNCTION_80	FOR_6	IF_14
0x400b65b	      0xb800000000	                              mov eax, 0	      6907	elf.c	FUNCTION_80	FOR_6	IF_20
0x400b660	            0xeb0c	                           jmp 0x400b66e	      6907	elf.c	FUNCTION_80	FOR_6	IF_20
0x400b662	      0xb801000000	                              mov eax, 1	      7189	elf.c	FUNCTION_80
0x400b667	            0xeb05	                           jmp 0x400b66e	      7189	elf.c	FUNCTION_80
0x400b669	      0xb801000000	                              mov eax, 1	      7189	elf.c	FUNCTION_80
0x400b66e	            0x85c0	                           test eax, eax	      7686	elf.c	FUNCTION_86	IF_2	IF_3	CALL_3
0x400b670	            0x740f	                            je 0x400b681	      7686	elf.c	FUNCTION_86	IF_2	IF_3	CALL_3
0x400b672	      0xbe00000000	                              mov esi, 0	      7690	elf.c	FUNCTION_86	CALL_4
0x400b677	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      7690	elf.c	FUNCTION_86	CALL_4
0x400b67c	      0xe800000000	                          call 0x400b681	      7690	elf.c	FUNCTION_86	CALL_4
0x400b681	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      7691	elf.c	FUNCTION_86
0x400b689	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      7691	elf.c	FUNCTION_86
0x400b692	     0xf8494010000	                            je 0x400b82c	      7691	elf.c	FUNCTION_86
0x400b698	      0xe98a010000	                           jmp 0x400b827	      7691	elf.c	FUNCTION_86
0x400b69d	        0x448b5f04	               mov r11d, dword [rdi + 4]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400b6a1	        0x4183fb08	                             cmp r11d, 8	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400b6a5	     0xf85c1eaffff	                           jne 0x400a16c	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400b6ab	      0xe922ebffff	                           jmp 0x400a1d2	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400b6b0	        0x448b5f04	               mov r11d, dword [rdi + 4]	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400b6b4	        0x4183fb08	                             cmp r11d, 8	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400b6b8	     0xf85aeeaffff	                           jne 0x400a16c	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400b6be	      0xe9d0eaffff	                           jmp 0x400a193	      7420	elf.c	FUNCTION_82	IF_3	FOR_2	FOR_3	IF_7	CALL_6
0x400b6c3	          0x8b7804	                mov edi, dword [rax + 4]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400b6c6	          0x83ff08	                              cmp edi, 8	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400b6c9	     0xf85fbecffff	                           jne 0x400a3ca	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400b6cf	      0xe91dedffff	                           jmp 0x400a3f1	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400b6d4	          0x8b7804	                mov edi, dword [rax + 4]	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400b6d7	          0x83ff08	                              cmp edi, 8	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400b6da	     0xf85eaecffff	                           jne 0x400a3ca	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400b6e0	      0xe941edffff	                           jmp 0x400a426	      7242	elf.c	FUNCTION_81	FOR_2	FOR_3	IF_2	CALL_6
0x400b6e5	        0x448b4a04	                mov r9d, dword [rdx + 4]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400b6e9	        0x4183f908	                              cmp r9d, 8	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400b6ed	     0xf8551efffff	                           jne 0x400a644	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400b6f3	      0xe973efffff	                           jmp 0x400a66b	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400b6f8	        0x448b4a04	                mov r9d, dword [rdx + 4]	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400b6fc	        0x4183f908	                              cmp r9d, 8	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400b700	     0xf853eefffff	                           jne 0x400a644	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400b706	      0xe99eefffff	                           jmp 0x400a6a9	      7312	elf.c	FUNCTION_81	FOR_2	IF_9	FOR_4	IF_10	CALL_9
0x400b70b	         0xfb65040	           movzx edx, byte [rax + 0x40] 	      7345	elf.c	FUNCTION_81	FOR_2	IF_17
0x400b70f	          0x83e232	                           and edx, 0x32	      7345	elf.c	FUNCTION_81	FOR_2	IF_17
0x400b712	          0x80fa02	                               cmp dl, 2	      7345	elf.c	FUNCTION_81	FOR_2	IF_17
0x400b715	     0xf858cf0ffff	                           jne 0x400a7a7	      7345	elf.c	FUNCTION_81	FOR_2	IF_17
0x400b71b	      0xe97af0ffff	                           jmp 0x400a79a	      7345	elf.c	FUNCTION_81	FOR_2	IF_17
0x400b720	    0xc74424780100	               mov dword [rsp + 0x78], 1	      6695	elf.c	FUNCTION_80	FOR_2	IF_1
0x400b728	            0xeb08	                           jmp 0x400b732	      6695	elf.c	FUNCTION_80	FOR_2	IF_1
0x400b72a	    0xc74424780100	               mov dword [rsp + 0x78], 1	      6695	elf.c	FUNCTION_80	FOR_2	IF_1
0x400b732	    0x41bd00000000	                             mov r13d, 0	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400b738	      0xe93ff2ffff	                           jmp 0x400a97c	      6693	elf.c	FUNCTION_80	FOR_2	IF_1
0x400b73d	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      6777	elf.c	FUNCTION_80	FOR_6	CALL_9
0x400b742	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6777	elf.c	FUNCTION_80	FOR_6	CALL_9
0x400b749	        0x4c8b7860	            mov r15, qword [rax + 0x60] 	      6777	elf.c	FUNCTION_80	FOR_6	CALL_9
0x400b74d	    0xc744247c0000	               mov dword [rsp + 0x7c], 0	      6777	elf.c	FUNCTION_80	FOR_6	CALL_9
0x400b755	    0x48c744247000	               mov qword [rsp + 0x70], 0	      6777	elf.c	FUNCTION_80	FOR_6	CALL_9
0x400b75e	    0xc74424500000	               mov dword [rsp + 0x50], 0	      6777	elf.c	FUNCTION_80	FOR_6	CALL_9
0x400b766	    0x488d84248000	                   lea rax, [rsp + 0x80]	      6777	elf.c	FUNCTION_80	FOR_6	CALL_9
0x400b76e	      0x4889442440	             mov qword [rsp + 0x40], rax	      6777	elf.c	FUNCTION_80	FOR_6	CALL_9
0x400b773	    0xc74424640000	               mov dword [rsp + 0x64], 0	      6777	elf.c	FUNCTION_80	FOR_6	CALL_9
0x400b77b	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400b780	        0x4883e801	                              sub rax, 1	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400b784	      0x4889442448	             mov qword [rsp + 0x48], rax	      7091	elf.c	FUNCTION_80	FOR_6	DO_1	FOR_9	IF_34	ELSE_4	IF_37
0x400b789	       0xfb6442478	           movzx eax, byte [rsp + 0x78] 	      7142	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400b78e	          0x83e001	                              and eax, 1	      7142	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400b791	             0x1c0	                            add eax, eax	      7142	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400b793	        0x88442463	               mov byte [rsp + 0x63], al	      7142	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400b797	      0xe996f3ffff	                           jmp 0x400ab32	      7142	elf.c	FUNCTION_80	FOR_6	DO_1	IF_41
0x400b79c	      0x837c242000	               cmp dword [rsp + 0x20], 0	      6853	elf.c	FUNCTION_80	FOR_6	IF_18
0x400b7a1	     0xf8489f6ffff	                            je 0x400ae30	      6853	elf.c	FUNCTION_80	FOR_6	IF_18
0x400b7a7	      0xe99ef6ffff	                           jmp 0x400ae4a	      6853	elf.c	FUNCTION_80	FOR_6	IF_18
0x400b7ac	      0x49837f2800	               cmp qword [r15 + 0x28], 0	      6863	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19
0x400b7b1	     0xf8445f6ffff	                            je 0x400adfc	      6863	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19
0x400b7b7	      0xe947f6ffff	                           jmp 0x400ae03	      6863	elf.c	FUNCTION_80	FOR_6	IF_18	IF_19
0x400b7bc	      0x837c242000	               cmp dword [rsp + 0x20], 0	      6853	elf.c	FUNCTION_80	FOR_6	IF_18
0x400b7c1	            0x74e9	                            je 0x400b7ac	      6853	elf.c	FUNCTION_80	FOR_6	IF_18
0x400b7c3	      0xe982f6ffff	                           jmp 0x400ae4a	      6853	elf.c	FUNCTION_80	FOR_6	IF_18
0x400b7c8	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      7149	elf.c	FUNCTION_80	FOR_6	CALL_21
0x400b7cd	      0xe800000000	                          call 0x400b7d2	      7149	elf.c	FUNCTION_80	FOR_6	CALL_21
0x400b7d2	      0xe9bafdffff	                           jmp 0x400b591	      7149	elf.c	FUNCTION_80	FOR_6	CALL_21
0x400b7d7	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      7152	elf.c	FUNCTION_80	CALL_22
0x400b7dc	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7152	elf.c	FUNCTION_80	CALL_22
0x400b7e3	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      7152	elf.c	FUNCTION_80	CALL_22
0x400b7ea	    0x48c700000000	                      mov qword [rax], 0	      7152	elf.c	FUNCTION_80	CALL_22
0x400b7f1	      0xb801000000	                              mov eax, 1	      7189	elf.c	FUNCTION_80
0x400b7f6	      0xe973feffff	                           jmp 0x400b66e	      7189	elf.c	FUNCTION_80
0x400b7fb	        0x3b54247c	            cmp edx, dword [rsp + 0x7c] 	      7164	elf.c	FUNCTION_80	IF_43	IF_44
0x400b7ff	     0xf87eefdffff	                            ja 0x400b5f3	      7164	elf.c	FUNCTION_80	IF_43	IF_44
0x400b805	      0xe9fffdffff	                           jmp 0x400b609	      7164	elf.c	FUNCTION_80	IF_43	IF_44
0x400b80a	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      6690	elf.c	FUNCTION_80	FOR_2	CALL_5
0x400b80f	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      6690	elf.c	FUNCTION_80	FOR_2	CALL_5
0x400b816	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      6690	elf.c	FUNCTION_80	FOR_2	CALL_5
0x400b81a	      0x837c245400	               cmp dword [rsp + 0x54], 0	      6690	elf.c	FUNCTION_80	FOR_2	CALL_5
0x400b81f	     0xf8514f1ffff	                           jne 0x400a939	      6690	elf.c	FUNCTION_80	FOR_2	CALL_5
0x400b825	            0xebb0	                           jmp 0x400b7d7	      6690	elf.c	FUNCTION_80	FOR_2	CALL_5
0x400b827	      0xe800000000	                          call 0x400b82c	      7691	elf.c	FUNCTION_86
0x400b82c	    0x4881c4980000	                           add rsp, 0x98	      7691	elf.c	FUNCTION_86
0x400b833	              0x5b	                                 pop rbx	      7691	elf.c	FUNCTION_86
0x400b834	              0x5d	                                 pop rbp	      7691	elf.c	FUNCTION_86
0x400b835	            0x415c	                                 pop r12	      7691	elf.c	FUNCTION_86
0x400b837	            0x415d	                                 pop r13	      7691	elf.c	FUNCTION_86
0x400b839	            0x415e	                                 pop r14	      7691	elf.c	FUNCTION_86
0x400b83b	            0x415f	                                 pop r15	      7691	elf.c	FUNCTION_86
0x400b83d	              0xc3	                                     ret	      7691	elf.c	FUNCTION_86
convert_zdebug_to_debug	FOR,0:ELSE,0:IF,1:WHILE,0:DO,0:SWITCH,0:CALL,3:functions,0	27
0x4000903	            0x4154	                                push r12	       981	elf.c	FUNCTION_25
0x4000905	              0x55	                                push rbp	       981	elf.c	FUNCTION_25
0x4000906	              0x53	                                push rbx	       981	elf.c	FUNCTION_25
0x4000907	          0x4889fa	                            mov rdx, rdi	       981	elf.c	FUNCTION_25
0x400090a	          0x4989f4	                            mov r12, rsi	       981	elf.c	FUNCTION_25
0x400090d	      0xb800000000	                              mov eax, 0	       982	elf.c	FUNCTION_25	CALL_1
0x4000912	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       982	elf.c	FUNCTION_25	CALL_1
0x4000919	          0x4889f7	                            mov rdi, rsi	       982	elf.c	FUNCTION_25	CALL_1
0x400091c	            0xf2ae	              repne scasb al, byte [rdi]	       982	elf.c	FUNCTION_25	CALL_1
0x400091e	          0x48f7d1	                                 not rcx	       982	elf.c	FUNCTION_25	CALL_1
0x4000921	        0x488d59ff	                      lea rbx, [rcx - 1]	       982	elf.c	FUNCTION_25	CALL_1
0x4000925	            0x89de	                            mov esi, ebx	       983	elf.c	FUNCTION_25	CALL_2
0x4000927	          0x4889d7	                            mov rdi, rdx	       983	elf.c	FUNCTION_25	CALL_2
0x400092a	      0xe800000000	                          call 0x400092f	       983	elf.c	FUNCTION_25	CALL_2
0x400092f	          0x4889c5	                            mov rbp, rax	       983	elf.c	FUNCTION_25	CALL_2
0x4000932	          0x4885c0	                           test rax, rax	       984	elf.c	FUNCTION_25	IF_1
0x4000935	            0x7414	                            je 0x400094b	       984	elf.c	FUNCTION_25	IF_1
0x4000937	          0xc6002e	                    mov byte [rax], 0x2e	       986	elf.c	FUNCTION_25
0x400093a	        0x488d7801	                      lea rdi, [rax + 1]	        53	string3.h	FUNCTION_221	CALL_3
0x400093e	          0x8d53ff	                      lea edx, [rbx - 1]	        53	string3.h	FUNCTION_221	CALL_3
0x4000941	      0x498d742402	                      lea rsi, [r12 + 2]	        53	string3.h	FUNCTION_221	CALL_3
0x4000946	      0xe800000000	                          call 0x400094b	        53	string3.h	FUNCTION_221	CALL_3
0x400094b	          0x4889e8	                            mov rax, rbp	       989	elf.c	FUNCTION_25
0x400094e	              0x5b	                                 pop rbx	       989	elf.c	FUNCTION_25
0x400094f	              0x5d	                                 pop rbp	       989	elf.c	FUNCTION_25
0x4000950	            0x415c	                                 pop r12	       989	elf.c	FUNCTION_25
0x4000952	              0xc3	                                     ret	       989	elf.c	FUNCTION_25
_bfd_elf_get_sec_type_attr	FOR,0:ELSE,0:IF,6:WHILE,0:DO,0:SWITCH,0:CALL,3:functions,0	45
0x4004ef1	              0x55	                                push rbp	      2797	elf.c	FUNCTION_40
0x4004ef2	              0x53	                                push rbx	      2797	elf.c	FUNCTION_40
0x4004ef3	        0x4883ec08	                              sub rsp, 8	      2797	elf.c	FUNCTION_40
0x4004ef7	          0x488b1e	                    mov rbx, qword [rsi]	      2803	elf.c	FUNCTION_40	IF_1
0x4004efa	          0x4885db	                           test rbx, rbx	      2803	elf.c	FUNCTION_40	IF_1
0x4004efd	            0x746a	                            je 0x4004f69	      2803	elf.c	FUNCTION_40	IF_1
0x4004eff	          0x4889f5	                            mov rbp, rsi	      2803	elf.c	FUNCTION_40	IF_1
0x4004f02	        0x488b4708	                mov rax, qword [rdi + 8]	      2806	elf.c	FUNCTION_40	CALL_1
0x4004f06	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      2807	elf.c	FUNCTION_40
0x4004f0d	    0x488bb0080300	           mov rsi, qword [rax + 0x308] 	      2807	elf.c	FUNCTION_40
0x4004f14	          0x4885f6	                           test rsi, rsi	      2808	elf.c	FUNCTION_40	IF_2
0x4004f17	            0x7417	                            je 0x4004f30	      2808	elf.c	FUNCTION_40	IF_2
0x4004f19	         0xfb65525	           movzx edx, byte [rbp + 0x25] 	      2812	elf.c	FUNCTION_40	IF_2
0x4004f1d	          0xc0ea02	                               shr dl, 2	      2812	elf.c	FUNCTION_40	IF_2
0x4004f20	          0x83e201	                              and edx, 1	      2810	elf.c	FUNCTION_40	IF_2	CALL_2
0x4004f23	          0x4889df	                            mov rdi, rbx	      2810	elf.c	FUNCTION_40	IF_2	CALL_2
0x4004f26	      0xe800000000	                          call 0x4004f2b	      2810	elf.c	FUNCTION_40	IF_2	CALL_2
0x4004f2b	          0x4885c0	                           test rax, rax	      2813	elf.c	FUNCTION_40	IF_2	IF_3
0x4004f2e	            0x754c	                           jne 0x4004f7c	      2813	elf.c	FUNCTION_40	IF_2	IF_3
0x4004f30	      0xb800000000	                              mov eax, 0	      2818	elf.c	FUNCTION_40	IF_4
0x4004f35	          0x803b2e	                    cmp byte [rbx], 0x2e	      2817	elf.c	FUNCTION_40	IF_4
0x4004f38	            0x7542	                           jne 0x4004f7c	      2817	elf.c	FUNCTION_40	IF_4
0x4004f3a	         0xfbe4301	               movsx eax, byte [rbx + 1]	      2820	elf.c	FUNCTION_40
0x4004f3e	          0x83e862	                           sub eax, 0x62	      2820	elf.c	FUNCTION_40
0x4004f41	          0x83f818	                           cmp eax, 0x18	      2821	elf.c	FUNCTION_40	IF_5
0x4004f44	            0x772a	                            ja 0x4004f70	      2821	elf.c	FUNCTION_40	IF_5
0x4004f46	            0x4898	                                    cdqe	      2824	elf.c	FUNCTION_40
0x4004f48	    0x488b34c50000	                  mov rsi, qword [rax*8]	      2824	elf.c	FUNCTION_40
0x4004f50	          0x4885f6	                           test rsi, rsi	      2826	elf.c	FUNCTION_40	IF_6
0x4004f53	            0x7422	                            je 0x4004f77	      2826	elf.c	FUNCTION_40	IF_6
0x4004f55	         0xfb65525	           movzx edx, byte [rbp + 0x25] 	      2829	elf.c	FUNCTION_40	CALL_3
0x4004f59	          0xc0ea02	                               shr dl, 2	      2829	elf.c	FUNCTION_40	CALL_3
0x4004f5c	          0x83e201	                              and edx, 1	      2829	elf.c	FUNCTION_40	CALL_3
0x4004f5f	          0x4889df	                            mov rdi, rbx	      2829	elf.c	FUNCTION_40	CALL_3
0x4004f62	      0xe800000000	                          call 0x4004f67	      2829	elf.c	FUNCTION_40	CALL_3
0x4004f67	            0xeb13	                           jmp 0x4004f7c	      2829	elf.c	FUNCTION_40	CALL_3
0x4004f69	      0xb800000000	                              mov eax, 0	      2804	elf.c	FUNCTION_40	IF_1
0x4004f6e	            0xeb0c	                           jmp 0x4004f7c	      2804	elf.c	FUNCTION_40	IF_1
0x4004f70	      0xb800000000	                              mov eax, 0	      2822	elf.c	FUNCTION_40	IF_5
0x4004f75	            0xeb05	                           jmp 0x4004f7c	      2822	elf.c	FUNCTION_40	IF_5
0x4004f77	      0xb800000000	                              mov eax, 0	      2827	elf.c	FUNCTION_40	IF_6
0x4004f7c	        0x4883c408	                              add rsp, 8	      2830	elf.c	FUNCTION_40
0x4004f80	              0x5b	                                 pop rbx	      2830	elf.c	FUNCTION_40
0x4004f81	              0x5d	                                 pop rbp	      2830	elf.c	FUNCTION_40
0x4004f82	              0xc3	                                     ret	      2830	elf.c	FUNCTION_40
elf_fake_sections	FOR,0:ELSE,9:IF,38:WHILE,0:DO,0:SWITCH,1:CALL,27:functions,0	433
0x400123b	        0x837a0800	                  cmp dword [rdx + 8], 0	      3147	elf.c	FUNCTION_48	IF_1
0x400123f	     0xf8528070000	                           jne 0x400196d	      3147	elf.c	FUNCTION_48	IF_1
0x4001245	            0x4157	                                push r15	      3138	elf.c	FUNCTION_48
0x4001247	            0x4156	                                push r14	      3138	elf.c	FUNCTION_48
0x4001249	            0x4155	                                push r13	      3138	elf.c	FUNCTION_48
0x400124b	            0x4154	                                push r12	      3138	elf.c	FUNCTION_48
0x400124d	              0x55	                                push rbp	      3138	elf.c	FUNCTION_48
0x400124e	              0x53	                                push rbx	      3138	elf.c	FUNCTION_48
0x400124f	        0x4883ec18	                           sub rsp, 0x18	      3138	elf.c	FUNCTION_48
0x4001253	        0x48891424	                    mov qword [rsp], rdx	      3138	elf.c	FUNCTION_48
0x4001257	          0x4889f3	                            mov rbx, rsi	      3138	elf.c	FUNCTION_48
0x400125a	          0x4989fc	                            mov r12, rdi	      3138	elf.c	FUNCTION_48
0x400125d	        0x488b4708	                mov rax, qword [rdi + 8]	      3140	elf.c	FUNCTION_48	CALL_1
0x4001261	    0x4c8bb8680300	           mov r15, qword [rax + 0x368] 	      3140	elf.c	FUNCTION_48	CALL_1
0x4001268	    0x488baee00000	            mov rbp, qword [rsi + 0xe0] 	      3141	elf.c	FUNCTION_48	CALL_2
0x400126f	          0x4c8b36	                    mov r14, qword [rsi]	      3144	elf.c	FUNCTION_48
0x4001272	          0x488b02	                    mov rax, qword [rdx]	      3156	elf.c	FUNCTION_48	IF_2
0x4001275	          0x4885c0	                           test rax, rax	      3156	elf.c	FUNCTION_48	IF_2
0x4001278	            0x7448	                            je 0x40012c2	      3156	elf.c	FUNCTION_48	IF_2
0x400127a	        0xf6400c01	                test byte [rax + 0xc], 1	      3159	elf.c	FUNCTION_48	IF_2	IF_3
0x400127e	     0xf84ea050000	                            je 0x400186e	      3159	elf.c	FUNCTION_48	IF_2	IF_3
0x4001284	          0x8b4620	            mov eax, dword [rsi + 0x20] 	      3160	elf.c	FUNCTION_48	IF_2	IF_3
0x4001287	          0xf6c420	                           test ah, 0x20	      3160	elf.c	FUNCTION_48	IF_2	IF_3
0x400128a	     0xf84de050000	                            je 0x400186e	      3160	elf.c	FUNCTION_48	IF_2	IF_3
0x4001290	      0x41807e0164	                cmp byte [r14 + 1], 0x64	      3161	elf.c	FUNCTION_48	IF_2	IF_3
0x4001295	     0xf85d3050000	                           jne 0x400186e	      3161	elf.c	FUNCTION_48	IF_2	IF_3
0x400129b	      0x41807e065f	                cmp byte [r14 + 6], 0x5f	      3162	elf.c	FUNCTION_48	IF_2	IF_3
0x40012a0	     0xf85c8050000	                           jne 0x400186e	      3162	elf.c	FUNCTION_48	IF_2	IF_3
0x40012a6	       0xd00000008	                    or eax, section_end.	      3166	elf.c	FUNCTION_48	IF_2	IF_3
0x40012ab	          0x894620	             mov dword [rsi + 0x20], eax	      3166	elf.c	FUNCTION_48	IF_2	IF_3
0x40012ae	    0xc74500ffffff	            mov dword [rbp], 0xffffffff 	      3211	elf.c	FUNCTION_48	IF_10
0x40012b5	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      3171	elf.c	FUNCTION_48	IF_2	IF_3
0x40012bd	      0xe9a7000000	                           jmp 0x4001369	      3171	elf.c	FUNCTION_48	IF_2	IF_3
0x40012c2	        0xf6462310	           test byte [rsi + 0x23], 0x10 	      3174	elf.c	FUNCTION_48	ELSE_1	IF_4
0x40012c6	     0xf84a2050000	                            je 0x400186e	      3174	elf.c	FUNCTION_48	ELSE_1	IF_4
0x40012cc	          0x8b4744	            mov eax, dword [rdi + 0x44] 	      3177	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5
0x40012cf	          0xc1e805	                              shr eax, 5	      3177	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5
0x40012d2	      0xa900800200	                       test eax, 0x28000	      3177	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5
0x40012d7	            0x742f	                            je 0x4001308	      3177	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5
0x40012d9	      0x41807e017a	                cmp byte [r14 + 1], 0x7a	      3182	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6
0x40012de	     0xf858a050000	                           jne 0x400186e	      3182	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6
0x40012e4	          0x4c89f6	                            mov rsi, r14	      3184	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6	CALL_3
0x40012e7	      0xe817f6ffff	        call sym.convert_zdebug_to_debug	      3184	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6	CALL_3
0x40012ec	          0x4989c6	                            mov r14, rax	      3184	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6	CALL_3
0x40012ef	          0x4885c0	                           test rax, rax	      3185	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6	IF_7
0x40012f2	     0xf8576050000	                           jne 0x400186e	      3185	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6	IF_7
0x40012f8	        0x488b0424	                    mov rax, qword [rsp]	      3187	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6	IF_7
0x40012fc	    0xc74008010000	                  mov dword [rax + 8], 1	      3187	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6	IF_7
0x4001303	      0xe957060000	                           jmp 0x400195f	      3188	elf.c	FUNCTION_48	ELSE_1	IF_4	IF_5	IF_6	IF_7
0x4001308	         0xfb64624	           movzx eax, byte [rsi + 0x24] 	      3193	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8
0x400130c	          0x83e030	                           and eax, 0x30	      3193	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8
0x400130f	            0x3c10	                            cmp al, 0x10	      3193	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8
0x4001311	     0xf8557050000	                           jne 0x400186e	      3193	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8
0x4001317	          0x4c89f6	                            mov rsi, r14	      3199	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_4
0x400131a	      0xe834f6ffff	        call sym.convert_debug_to_zdebug	      3199	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_4
0x400131f	          0x4989c5	                            mov r13, rax	      3199	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_4
0x4001322	          0x4885c0	                           test rax, rax	      3200	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	IF_9
0x4001325	            0x7510	                           jne 0x4001337	      3200	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	IF_9
0x4001327	        0x488b0424	                    mov rax, qword [rsp]	      3202	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	IF_9
0x400132b	    0xc74008010000	                  mov dword [rax + 8], 1	      3202	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	IF_9
0x4001332	      0xe928060000	                           jmp 0x400195f	      3203	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	IF_9
0x4001337	      0x41807e017a	                cmp byte [r14 + 1], 0x7a	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x400133c	     0xf8529050000	                           jne 0x400186b	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x4001342	      0xbe850c0000	                          mov esi, 0xc85	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x4001347	      0xbf00000000	                              mov edi, 0	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x400134c	      0xe800000000	                          call 0x4001351	      3205	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8	CALL_5
0x4001351	          0x4d89ee	                            mov r14, r13	      3206	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8
0x4001354	      0xe915050000	                           jmp 0x400186e	      3206	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8
0x4001359	        0x488b0424	                    mov rax, qword [rsp]	      3219	elf.c	FUNCTION_48	ELSE_3	IF_11
0x400135d	    0xc74008010000	                  mov dword [rax + 8], 1	      3219	elf.c	FUNCTION_48	ELSE_3	IF_11
0x4001364	      0xe9f6050000	                           jmp 0x400195f	      3220	elf.c	FUNCTION_48	ELSE_3	IF_11
0x4001369	    0x48b801000000	                 movabs rax, 0x100000001	      3226	elf.c	FUNCTION_48	IF_12
0x4001373	        0x48854320	           test qword [rbx + 0x20], rax 	      3226	elf.c	FUNCTION_48	IF_12
0x4001377	            0x740a	                            je 0x4001383	      3226	elf.c	FUNCTION_48	IF_12
0x4001379	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      3228	elf.c	FUNCTION_48	IF_12
0x400137d	        0x48894510	            mov qword [rbp + 0x10], rax 	      3228	elf.c	FUNCTION_48	IF_12
0x4001381	            0xeb08	                           jmp 0x400138b	      3228	elf.c	FUNCTION_48	IF_12
0x4001383	    0x48c745100000	               mov qword [rbp + 0x10], 0	      3230	elf.c	FUNCTION_48	ELSE_4
0x400138b	    0x48c745180000	               mov qword [rbp + 0x18], 0	      3232	elf.c	FUNCTION_48	ELSE_4
0x4001393	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      3233	elf.c	FUNCTION_48	ELSE_4
0x4001397	        0x48894520	            mov qword [rbp + 0x20], rax 	      3233	elf.c	FUNCTION_48	ELSE_4
0x400139b	    0xc74528000000	               mov dword [rbp + 0x28], 0	      3234	elf.c	FUNCTION_48	ELSE_4
0x40013a2	        0x448b6b70	           mov r13d, dword [rbx + 0x70] 	      3236	elf.c	FUNCTION_48	ELSE_4	IF_13
0x40013a6	        0x4183fd3e	                          cmp r13d, 0x3e	      3236	elf.c	FUNCTION_48	ELSE_4	IF_13
0x40013aa	            0x763a	                           jbe 0x40013e6	      3236	elf.c	FUNCTION_48	ELSE_4	IF_13
0x40013ac	      0xba05000000	                              mov edx, 5	      3240	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_9
0x40013b1	      0xbe00000000	                              mov esi, 0	      3240	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_9
0x40013b6	      0xbf00000000	                              mov edi, 0	      3240	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_9
0x40013bb	      0xe800000000	                          call 0x40013c0	      3240	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_9
0x40013c0	          0x4889d9	                            mov rcx, rbx	      3238	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_8
0x40013c3	          0x4489ea	                           mov edx, r13d	      3238	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_8
0x40013c6	          0x4c89e6	                            mov rsi, r12	      3238	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_8
0x40013c9	          0x4889c7	                            mov rdi, rax	      3238	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_8
0x40013cc	      0xb800000000	                              mov eax, 0	      3238	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_8
0x40013d1	      0xe800000000	                          call 0x40013d6	      3238	elf.c	FUNCTION_48	ELSE_4	IF_13	CALL_8
0x40013d6	        0x488b0424	                    mov rax, qword [rsp]	      3242	elf.c	FUNCTION_48	ELSE_4	IF_13
0x40013da	    0xc74008010000	                  mov dword [rax + 8], 1	      3242	elf.c	FUNCTION_48	ELSE_4	IF_13
0x40013e1	      0xe979050000	                           jmp 0x400195f	      3243	elf.c	FUNCTION_48	ELSE_4	IF_13
0x40013e6	      0xb801000000	                              mov eax, 1	      3245	elf.c	FUNCTION_48
0x40013eb	          0x4489e9	                           mov ecx, r13d	      3245	elf.c	FUNCTION_48
0x40013ee	          0x48d3e0	                             shl rax, cl	      3245	elf.c	FUNCTION_48
0x40013f1	        0x48894530	            mov qword [rbp + 0x30], rax 	      3245	elf.c	FUNCTION_48
0x40013f5	        0x48895d40	            mov qword [rbp + 0x40], rbx 	      3249	elf.c	FUNCTION_48
0x40013f9	    0x48c745480000	               mov qword [rbp + 0x48], 0	      3250	elf.c	FUNCTION_48
0x4001401	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      3254	elf.c	FUNCTION_48	IF_14
0x4001404	      0xa900000002	                     test eax, 0x2000000	      3254	elf.c	FUNCTION_48	IF_14
0x4001409	     0xf8598040000	                           jne 0x40018a7	      3254	elf.c	FUNCTION_48	IF_14
0x400140f	            0x89c2	                            mov edx, eax	      3122	elf.c	FUNCTION_47	IF_1
0x4001411	    0x81e203010000	                          and edx, 0x103	      3122	elf.c	FUNCTION_47	IF_1
0x4001417	          0x83fa01	                              cmp edx, 1	      3122	elf.c	FUNCTION_47	IF_1
0x400141a	     0xf8430050000	                            je 0x4001950	      3122	elf.c	FUNCTION_47	IF_1
0x4001420	          0x8b5504	                mov edx, dword [rbp + 4]	      3259	elf.c	FUNCTION_48	IF_15
0x4001423	            0x85d2	                           test edx, edx	      3259	elf.c	FUNCTION_48	IF_15
0x4001425	            0x7511	                           jne 0x4001438	      3259	elf.c	FUNCTION_48	IF_15
0x4001427	      0xb801000000	                              mov eax, 1	      3257	elf.c	FUNCTION_48	CALL_10
0x400142c	            0xeb05	                           jmp 0x4001433	      3257	elf.c	FUNCTION_48	CALL_10
0x400142e	      0xb808000000	                              mov eax, 8	      3257	elf.c	FUNCTION_48	CALL_10
0x4001433	          0x894504	                mov dword [rbp + 4], eax	      3260	elf.c	FUNCTION_48	IF_15
0x4001436	            0xeb38	                           jmp 0x4001470	      3260	elf.c	FUNCTION_48	IF_15
0x4001438	          0x83fa08	                              cmp edx, 8	      3262	elf.c	FUNCTION_48	ELSE_6	IF_16
0x400143b	            0x7533	                           jne 0x4001470	      3262	elf.c	FUNCTION_48	ELSE_6	IF_16
0x400143d	            0xa801	                              test al, 1	      3263	elf.c	FUNCTION_48	ELSE_6	IF_16
0x400143f	     0xf8476040000	                            je 0x40018bb	      3263	elf.c	FUNCTION_48	ELSE_6	IF_16
0x4001445	      0xba05000000	                              mov edx, 5	      3270	elf.c	FUNCTION_48	ELSE_6	IF_16	CALL_12
0x400144a	      0xbe00000000	                              mov esi, 0	      3270	elf.c	FUNCTION_48	ELSE_6	IF_16	CALL_12
0x400144f	      0xbf00000000	                              mov edi, 0	      3270	elf.c	FUNCTION_48	ELSE_6	IF_16	CALL_12
0x4001454	      0xe800000000	                          call 0x4001459	      3270	elf.c	FUNCTION_48	ELSE_6	IF_16	CALL_12
0x4001459	          0x4889de	                            mov rsi, rbx	      3269	elf.c	FUNCTION_48	ELSE_6	IF_16	CALL_11
0x400145c	          0x4889c7	                            mov rdi, rax	      3269	elf.c	FUNCTION_48	ELSE_6	IF_16	CALL_11
0x400145f	      0xb800000000	                              mov eax, 0	      3269	elf.c	FUNCTION_48	ELSE_6	IF_16	CALL_11
0x4001464	      0xe800000000	                          call 0x4001469	      3269	elf.c	FUNCTION_48	ELSE_6	IF_16	CALL_11
0x4001469	    0xc74504010000	                  mov dword [rbp + 4], 1	      3271	elf.c	FUNCTION_48	ELSE_6	IF_16
0x4001470	          0x8b4504	                mov eax, dword [rbp + 4]	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4001473	          0x83f810	                           cmp eax, 0x10	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4001476	            0x7739	                            ja 0x40014b1	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4001478	          0x83f80e	                            cmp eax, 0xe	      3274	elf.c	FUNCTION_48	SWITCH_1
0x400147b	            0x737a	                           jae 0x40014f7	      3274	elf.c	FUNCTION_48	SWITCH_1
0x400147d	          0x83f806	                              cmp eax, 6	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4001480	     0xf84b3000000	                            je 0x4001539	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4001486	          0x83f806	                              cmp eax, 6	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4001489	            0x7713	                            ja 0x400149e	      3274	elf.c	FUNCTION_48	SWITCH_1
0x400148b	          0x83f804	                              cmp eax, 4	      3274	elf.c	FUNCTION_48	SWITCH_1
0x400148e	     0xf84b9000000	                            je 0x400154d	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4001494	          0x83f805	                              cmp eax, 5	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4001497	            0x7478	                            je 0x4001511	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4001499	      0xe9d2010000	                           jmp 0x4001670	      3274	elf.c	FUNCTION_48	SWITCH_1
0x400149e	          0x83f809	                              cmp eax, 9	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40014a1	     0xf84d3000000	                            je 0x400157a	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40014a7	          0x83f80b	                            cmp eax, 0xb	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40014aa	            0x7479	                            je 0x4001525	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40014ac	      0xe9bf010000	                           jmp 0x4001670	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40014b1	      0x3dfdffff6f	                     cmp eax, 0x6ffffffd	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40014b6	     0xf84f8000000	                            je 0x40015b4	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40014bc	      0x3dfdffff6f	                     cmp eax, 0x6ffffffd	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40014c1	            0x7719	                            ja 0x40014dc	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40014c3	          0x83f811	                           cmp eax, 0x11	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40014c6	     0xf8481010000	                            je 0x400164d	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40014cc	      0x3df6ffff6f	                     cmp eax, 0x6ffffff6	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40014d1	     0xf8480010000	                            je 0x4001657	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40014d7	      0xe994010000	                           jmp 0x4001670	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40014dc	      0x3dfeffff6f	                     cmp eax, 0x6ffffffe	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40014e1	     0xf841d010000	                            je 0x4001604	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40014e7	      0x3dffffff6f	                     cmp eax, 0x6fffffff	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40014ec	     0xf84b5000000	                            je 0x40015a7	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40014f2	      0xe979010000	                           jmp 0x4001670	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40014f7	    0x498b87000300	           mov rax, qword [r15 + 0x300] 	      3288	elf.c	FUNCTION_48	SWITCH_1
0x40014fe	         0xfb6400a	            movzx eax, byte [rax + 0xa] 	      3288	elf.c	FUNCTION_48	SWITCH_1
0x4001502	          0xc0e803	                               shr al, 3	      3288	elf.c	FUNCTION_48	SWITCH_1
0x4001505	           0xfb6c0	                           movzx eax, al	      3288	elf.c	FUNCTION_48	SWITCH_1
0x4001508	        0x48894538	            mov qword [rbp + 0x38], rax 	      3288	elf.c	FUNCTION_48	SWITCH_1
0x400150c	      0xe95f010000	                           jmp 0x4001670	      3289	elf.c	FUNCTION_48	SWITCH_1
0x4001511	    0x498b87000300	           mov rax, qword [r15 + 0x300] 	      3292	elf.c	FUNCTION_48	SWITCH_1
0x4001518	         0xfb64008	               movzx eax, byte [rax + 8]	      3292	elf.c	FUNCTION_48	SWITCH_1
0x400151c	        0x48894538	            mov qword [rbp + 0x38], rax 	      3292	elf.c	FUNCTION_48	SWITCH_1
0x4001520	      0xe94b010000	                           jmp 0x4001670	      3293	elf.c	FUNCTION_48	SWITCH_1
0x4001525	    0x498b87000300	           mov rax, qword [r15 + 0x300] 	      3296	elf.c	FUNCTION_48	SWITCH_1
0x400152c	         0xfb64005	               movzx eax, byte [rax + 5]	      3296	elf.c	FUNCTION_48	SWITCH_1
0x4001530	        0x48894538	            mov qword [rbp + 0x38], rax 	      3296	elf.c	FUNCTION_48	SWITCH_1
0x4001534	      0xe937010000	                           jmp 0x4001670	      3297	elf.c	FUNCTION_48	SWITCH_1
0x4001539	    0x498b87000300	           mov rax, qword [r15 + 0x300] 	      3300	elf.c	FUNCTION_48	SWITCH_1
0x4001540	         0xfb64006	               movzx eax, byte [rax + 6]	      3300	elf.c	FUNCTION_48	SWITCH_1
0x4001544	        0x48894538	            mov qword [rbp + 0x38], rax 	      3300	elf.c	FUNCTION_48	SWITCH_1
0x4001548	      0xe923010000	                           jmp 0x4001670	      3301	elf.c	FUNCTION_48	SWITCH_1
0x400154d	      0x498b442408	                mov rax, qword [r12 + 8]	      3304	elf.c	FUNCTION_48	SWITCH_1	IF_17	CALL_13
0x4001552	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3304	elf.c	FUNCTION_48	SWITCH_1	IF_17	CALL_13
0x4001559	    0xf68088030000	              test byte [rax + 0x388], 8	      3304	elf.c	FUNCTION_48	SWITCH_1	IF_17	CALL_13
0x4001560	     0xf840a010000	                            je 0x4001670	      3304	elf.c	FUNCTION_48	SWITCH_1	IF_17	CALL_13
0x4001566	    0x498b87000300	           mov rax, qword [r15 + 0x300] 	      3305	elf.c	FUNCTION_48	SWITCH_1	IF_17
0x400156d	         0xfb64004	               movzx eax, byte [rax + 4]	      3305	elf.c	FUNCTION_48	SWITCH_1	IF_17
0x4001571	        0x48894538	            mov qword [rbp + 0x38], rax 	      3305	elf.c	FUNCTION_48	SWITCH_1	IF_17
0x4001575	      0xe9f6000000	                           jmp 0x4001670	      3305	elf.c	FUNCTION_48	SWITCH_1	IF_17
0x400157a	      0x498b442408	                mov rax, qword [r12 + 8]	      3309	elf.c	FUNCTION_48	SWITCH_1	IF_18	CALL_14
0x400157f	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3309	elf.c	FUNCTION_48	SWITCH_1	IF_18	CALL_14
0x4001586	    0xf68088030000	              test byte [rax + 0x388], 4	      3309	elf.c	FUNCTION_48	SWITCH_1	IF_18	CALL_14
0x400158d	     0xf84dd000000	                            je 0x4001670	      3309	elf.c	FUNCTION_48	SWITCH_1	IF_18	CALL_14
0x4001593	    0x498b87000300	           mov rax, qword [r15 + 0x300] 	      3310	elf.c	FUNCTION_48	SWITCH_1	IF_18
0x400159a	         0xfb64003	               movzx eax, byte [rax + 3]	      3310	elf.c	FUNCTION_48	SWITCH_1	IF_18
0x400159e	        0x48894538	            mov qword [rbp + 0x38], rax 	      3310	elf.c	FUNCTION_48	SWITCH_1	IF_18
0x40015a2	      0xe9c9000000	                           jmp 0x4001670	      3310	elf.c	FUNCTION_48	SWITCH_1	IF_18
0x40015a7	    0x48c745380200	               mov qword [rbp + 0x38], 2	      3314	elf.c	FUNCTION_48	SWITCH_1
0x40015af	      0xe9bc000000	                           jmp 0x4001670	      3315	elf.c	FUNCTION_48	SWITCH_1
0x40015b4	    0x48c745380000	               mov qword [rbp + 0x38], 0	      3318	elf.c	FUNCTION_48	SWITCH_1
0x40015bc	          0x8b452c	            mov eax, dword [rbp + 0x2c] 	      3322	elf.c	FUNCTION_48	SWITCH_1	IF_19
0x40015bf	            0x85c0	                           test eax, eax	      3322	elf.c	FUNCTION_48	SWITCH_1	IF_19
0x40015c1	            0x7516	                           jne 0x40015d9	      3322	elf.c	FUNCTION_48	SWITCH_1	IF_19
0x40015c3	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      3323	elf.c	FUNCTION_48	SWITCH_1	CALL_15
0x40015cb	    0x8b8040030000	           mov eax, dword [rax + 0x340] 	      3323	elf.c	FUNCTION_48	SWITCH_1	CALL_15
0x40015d1	          0x89452c	            mov dword [rbp + 0x2c], eax 	      3323	elf.c	FUNCTION_48	SWITCH_1	CALL_15
0x40015d4	      0xe997000000	                           jmp 0x4001670	      3323	elf.c	FUNCTION_48	SWITCH_1	CALL_15
0x40015d9	    0x498b9424f800	            mov rdx, qword [r12 + 0xf8] 	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x40015e1	    0x8b9240030000	           mov edx, dword [rdx + 0x340] 	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x40015e7	            0x39d0	                            cmp eax, edx	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x40015e9	     0xf8481000000	                            je 0x4001670	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x40015ef	            0x85d2	                           test edx, edx	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x40015f1	            0x747d	                            je 0x4001670	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x40015f3	      0xbefe0c0000	                          mov esi, 0xcfe	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x40015f8	      0xbf00000000	                              mov edi, 0	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x40015fd	      0xe800000000	                          call 0x4001602	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x4001602	            0xeb6c	                           jmp 0x4001670	      3325	elf.c	FUNCTION_48	SWITCH_1	ELSE_7	CALL_17
0x4001604	    0x48c745380000	               mov qword [rbp + 0x38], 0	      3330	elf.c	FUNCTION_48	SWITCH_1
0x400160c	          0x8b452c	            mov eax, dword [rbp + 0x2c] 	      3334	elf.c	FUNCTION_48	SWITCH_1	IF_20
0x400160f	            0x85c0	                           test eax, eax	      3334	elf.c	FUNCTION_48	SWITCH_1	IF_20
0x4001611	            0x7513	                           jne 0x4001626	      3334	elf.c	FUNCTION_48	SWITCH_1	IF_20
0x4001613	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      3335	elf.c	FUNCTION_48	SWITCH_1	CALL_19
0x400161b	    0x8b8044030000	           mov eax, dword [rax + 0x344] 	      3335	elf.c	FUNCTION_48	SWITCH_1	CALL_19
0x4001621	          0x89452c	            mov dword [rbp + 0x2c], eax 	      3335	elf.c	FUNCTION_48	SWITCH_1	CALL_19
0x4001624	            0xeb4a	                           jmp 0x4001670	      3335	elf.c	FUNCTION_48	SWITCH_1	CALL_19
0x4001626	    0x498b9424f800	            mov rdx, qword [r12 + 0xf8] 	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x400162e	    0x8b9244030000	           mov edx, dword [rdx + 0x344] 	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x4001634	            0x39d0	                            cmp eax, edx	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x4001636	            0x7438	                            je 0x4001670	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x4001638	            0x85d2	                           test edx, edx	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x400163a	            0x7434	                            je 0x4001670	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x400163c	      0xbe0a0d0000	                          mov esi, 0xd0a	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x4001641	      0xbf00000000	                              mov edi, 0	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x4001646	      0xe800000000	                          call 0x400164b	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x400164b	            0xeb23	                           jmp 0x4001670	      3337	elf.c	FUNCTION_48	SWITCH_1	ELSE_8	CALL_21
0x400164d	    0x48c745380400	               mov qword [rbp + 0x38], 4	      3342	elf.c	FUNCTION_48	SWITCH_1
0x4001655	            0xeb19	                           jmp 0x4001670	      3343	elf.c	FUNCTION_48	SWITCH_1
0x4001657	    0x498b87000300	           mov rax, qword [r15 + 0x300] 	      3346	elf.c	FUNCTION_48	SWITCH_1
0x400165e	        0x80780a40	              cmp byte [rax + 0xa], 0x40	      3346	elf.c	FUNCTION_48	SWITCH_1
0x4001662	           0xf95c0	                                setne al	      3346	elf.c	FUNCTION_48	SWITCH_1
0x4001665	           0xfb6c0	                           movzx eax, al	      3346	elf.c	FUNCTION_48	SWITCH_1
0x4001668	        0x48c1e002	                              shl rax, 2	      3346	elf.c	FUNCTION_48	SWITCH_1
0x400166c	        0x48894538	            mov qword [rbp + 0x38], rax 	      3346	elf.c	FUNCTION_48	SWITCH_1
0x4001670	        0xf6432001	               test byte [rbx + 0x20], 1	      3350	elf.c	FUNCTION_48	IF_21
0x4001674	            0x7405	                            je 0x400167b	      3350	elf.c	FUNCTION_48	IF_21
0x4001676	      0x48834d0802	                   or qword [rbp + 8], 2	      3351	elf.c	FUNCTION_48	IF_21
0x400167b	        0xf6432008	               test byte [rbx + 0x20], 8	      3352	elf.c	FUNCTION_48	IF_22
0x400167f	            0x7505	                           jne 0x4001686	      3352	elf.c	FUNCTION_48	IF_22
0x4001681	      0x48834d0801	                   or qword [rbp + 8], 1	      3353	elf.c	FUNCTION_48	IF_22
0x4001686	        0xf6432010	           test byte [rbx + 0x20], 0x10 	      3354	elf.c	FUNCTION_48	IF_23
0x400168a	            0x7405	                            je 0x4001691	      3354	elf.c	FUNCTION_48	IF_23
0x400168c	      0x48834d0804	                   or qword [rbp + 8], 4	      3355	elf.c	FUNCTION_48	IF_23
0x4001691	        0xf6432280	           test byte [rbx + 0x22], 0x80 	      3356	elf.c	FUNCTION_48	IF_24
0x4001695	            0x740f	                            je 0x40016a6	      3356	elf.c	FUNCTION_48	IF_24
0x4001697	      0x48834d0810	                or qword [rbp + 8], 0x10	      3358	elf.c	FUNCTION_48	IF_24
0x400169c	    0x8b83c4000000	            mov eax, dword [rbx + 0xc4] 	      3359	elf.c	FUNCTION_48	IF_24
0x40016a2	        0x48894538	            mov qword [rbp + 0x38], rax 	      3359	elf.c	FUNCTION_48	IF_24
0x40016a6	        0xf6432301	               test byte [rbx + 0x23], 1	      3361	elf.c	FUNCTION_48	IF_25
0x40016aa	            0x7405	                            je 0x40016b1	      3361	elf.c	FUNCTION_48	IF_25
0x40016ac	      0x48834d0820	                or qword [rbp + 8], 0x20	      3362	elf.c	FUNCTION_48	IF_25
0x40016b1	        0xf6432302	               test byte [rbx + 0x23], 2	      3363	elf.c	FUNCTION_48	IF_26	CALL_23
0x40016b5	            0x7519	                           jne 0x40016d0	      3363	elf.c	FUNCTION_48	IF_26	CALL_23
0x40016b7	    0x488b83e00000	            mov rax, qword [rbx + 0xe0] 	      3363	elf.c	FUNCTION_48	IF_26	CALL_23
0x40016be	    0x4883b8b00000	               cmp qword [rax + 0xb0], 0	      3363	elf.c	FUNCTION_48	IF_26	CALL_23
0x40016c6	            0x7408	                            je 0x40016d0	      3363	elf.c	FUNCTION_48	IF_26	CALL_23
0x40016c8	    0x48814d080002	               or qword [rbp + 8], 0x200	      3364	elf.c	FUNCTION_48	IF_26
0x40016d0	        0xf6432104	               test byte [rbx + 0x21], 4	      3365	elf.c	FUNCTION_48	IF_27
0x40016d4	            0x7441	                            je 0x4001717	      3365	elf.c	FUNCTION_48	IF_27
0x40016d6	    0x48814d080004	               or qword [rbp + 8], 0x400	      3367	elf.c	FUNCTION_48	IF_27
0x40016de	      0x48837b3800	               cmp qword [rbx + 0x38], 0	      3368	elf.c	FUNCTION_48	IF_27	IF_28
0x40016e3	            0x7532	                           jne 0x4001717	      3368	elf.c	FUNCTION_48	IF_27	IF_28
0x40016e5	        0xf6432101	               test byte [rbx + 0x21], 1	      3369	elf.c	FUNCTION_48	IF_27	IF_28
0x40016e9	            0x752c	                           jne 0x4001717	      3369	elf.c	FUNCTION_48	IF_27	IF_28
0x40016eb	    0x488b93100100	           mov rdx, qword [rbx + 0x110] 	      3371	elf.c	FUNCTION_48	IF_27	IF_28
0x40016f2	    0x48c745200000	               mov qword [rbp + 0x20], 0	      3373	elf.c	FUNCTION_48	IF_27	IF_28
0x40016fa	          0x4885d2	                           test rdx, rdx	      3374	elf.c	FUNCTION_48	IF_27	IF_28	IF_29
0x40016fd	            0x7418	                            je 0x4001717	      3374	elf.c	FUNCTION_48	IF_27	IF_28	IF_29
0x40016ff	        0x488b4218	            mov rax, qword [rdx + 0x18] 	      3376	elf.c	FUNCTION_48	IF_27	IF_28	IF_29
0x4001703	        0x48034210	             add rax, qword [rdx + 0x10]	      3376	elf.c	FUNCTION_48	IF_27	IF_28	IF_29
0x4001707	        0x48894520	            mov qword [rbp + 0x20], rax 	      3376	elf.c	FUNCTION_48	IF_27	IF_28	IF_29
0x400170b	          0x4885c0	                           test rax, rax	      3377	elf.c	FUNCTION_48	IF_27	IF_28	IF_29	IF_30
0x400170e	            0x7407	                            je 0x4001717	      3377	elf.c	FUNCTION_48	IF_27	IF_28	IF_29	IF_30
0x4001710	    0xc74504080000	                  mov dword [rbp + 4], 8	      3378	elf.c	FUNCTION_48	IF_27	IF_28	IF_29	IF_30
0x4001717	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      3382	elf.c	FUNCTION_48	IF_31
0x400171a	      0x2500800002	                      and eax, 0x2008000	      3382	elf.c	FUNCTION_48	IF_31
0x400171f	      0x3d00800000	                         cmp eax, 0x8000	      3382	elf.c	FUNCTION_48	IF_31
0x4001724	            0x7509	                           jne 0x400172f	      3382	elf.c	FUNCTION_48	IF_31
0x4001726	      0xb800000080	                     mov eax, 0x80000000	      3383	elf.c	FUNCTION_48	IF_31
0x400172b	        0x48094508	                 or qword [rbp + 8], rax	      3383	elf.c	FUNCTION_48	IF_31
0x400172f	        0xf6432004	               test byte [rbx + 0x20], 4	      3389	elf.c	FUNCTION_48	IF_32
0x4001733	     0xf84e2000000	                            je 0x400181b	      3389	elf.c	FUNCTION_48	IF_32
0x4001739	        0x488b0424	                    mov rax, qword [rsp]	      3393	elf.c	FUNCTION_48	IF_32	IF_33
0x400173d	          0x488b00	                    mov rax, qword [rax]	      3393	elf.c	FUNCTION_48	IF_32	IF_33
0x4001740	          0x4885c0	                           test rax, rax	      3393	elf.c	FUNCTION_48	IF_32	IF_33
0x4001743	     0xf8491000000	                            je 0x40017da	      3393	elf.c	FUNCTION_48	IF_32	IF_33
0x4001749	          0x8b5560	            mov edx, dword [rbp + 0x60] 	      3395	elf.c	FUNCTION_48	IF_32	IF_33
0x400174c	            0x89d1	                            mov ecx, edx	      3395	elf.c	FUNCTION_48	IF_32	IF_33
0x400174e	           0x34d78	             add ecx, dword [rbp + 0x78]	      3395	elf.c	FUNCTION_48	IF_32	IF_33
0x4001751	     0xf8483000000	                            je 0x40017da	      3395	elf.c	FUNCTION_48	IF_32	IF_33
0x4001757	           0xfb608	                   movzx ecx, byte [rax]	      3396	elf.c	FUNCTION_48	IF_32	IF_33	CALL_24
0x400175a	          0x83e103	                              and ecx, 3	      3396	elf.c	FUNCTION_48	IF_32	IF_33	CALL_24
0x400175d	          0x80f902	                               cmp cl, 2	      3396	elf.c	FUNCTION_48	IF_32	IF_33	CALL_24
0x4001760	            0x7406	                            je 0x4001768	      3396	elf.c	FUNCTION_48	IF_32	IF_33	CALL_24
0x4001762	        0xf6400308	                  test byte [rax + 3], 8	      3397	elf.c	FUNCTION_48	IF_32	IF_33
0x4001766	            0x7472	                            je 0x40017da	      3397	elf.c	FUNCTION_48	IF_32	IF_33
0x4001768	            0x85d2	                           test edx, edx	      3399	elf.c	FUNCTION_48	IF_32	IF_33	IF_34
0x400176a	            0x7434	                            je 0x40017a0	      3399	elf.c	FUNCTION_48	IF_32	IF_33	IF_34
0x400176c	      0x48837d5800	               cmp qword [rbp + 0x58], 0	      3399	elf.c	FUNCTION_48	IF_32	IF_33	IF_34
0x4001771	            0x752d	                           jne 0x40017a0	      3399	elf.c	FUNCTION_48	IF_32	IF_33	IF_34
0x4001773	        0x488d7558	                   lea rsi, [rbp + 0x58]	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x4001777	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x400177c	      0xb900000000	                              mov ecx, 0	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x4001781	          0x4c89f2	                            mov rdx, r14	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x4001784	          0x4c89e7	                            mov rdi, r12	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x4001787	      0xe8b8f9ffff	       call sym._bfd_elf_init_reloc_shdr	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x400178c	            0x85c0	                           test eax, eax	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x400178e	            0x7510	                           jne 0x40017a0	      3400	elf.c	FUNCTION_48	IF_32	IF_33	IF_34	CALL_25
0x4001790	        0x488b0424	                    mov rax, qword [rsp]	      3403	elf.c	FUNCTION_48	IF_32	IF_33	IF_34
0x4001794	    0xc74008010000	                  mov dword [rax + 8], 1	      3403	elf.c	FUNCTION_48	IF_32	IF_33	IF_34
0x400179b	      0xe9bf010000	                           jmp 0x400195f	      3404	elf.c	FUNCTION_48	IF_32	IF_33	IF_34
0x40017a0	        0x837d7800	               cmp dword [rbp + 0x78], 0	      3406	elf.c	FUNCTION_48	IF_32	IF_33	IF_35
0x40017a4	            0x7475	                            je 0x400181b	      3406	elf.c	FUNCTION_48	IF_32	IF_33	IF_35
0x40017a6	      0x48837d7000	               cmp qword [rbp + 0x70], 0	      3406	elf.c	FUNCTION_48	IF_32	IF_33	IF_35
0x40017ab	            0x756e	                           jne 0x400181b	      3406	elf.c	FUNCTION_48	IF_32	IF_33	IF_35
0x40017ad	        0x488d7570	                   lea rsi, [rbp + 0x70]	      3407	elf.c	FUNCTION_48	IF_32	IF_33	IF_35	CALL_26
0x40017b1	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      3407	elf.c	FUNCTION_48	IF_32	IF_33	IF_35	CALL_26
0x40017b6	      0xb901000000	                              mov ecx, 1	      3407	elf.c	FUNCTION_48	IF_32	IF_33	IF_35	CALL_26
0x40017bb	          0x4c89f2	                            mov rdx, r14	      3407	elf.c	FUNCTION_48	IF_32	IF_33	IF_35	CALL_26
0x40017be	          0x4c89e7	                            mov rdi, r12	      3407	elf.c	FUNCTION_48	IF_32	IF_33	IF_35	CALL_26
0x40017c1	      0xe87ef9ffff	       call sym._bfd_elf_init_reloc_shdr	      3407	elf.c	FUNCTION_48	IF_32	IF_33	IF_35	CALL_26
0x40017c6	            0x85c0	                           test eax, eax	      3407	elf.c	FUNCTION_48	IF_32	IF_33	IF_35	CALL_26
0x40017c8	            0x7551	                           jne 0x400181b	      3407	elf.c	FUNCTION_48	IF_32	IF_33	IF_35	CALL_26
0x40017ca	        0x488b0424	                    mov rax, qword [rsp]	      3410	elf.c	FUNCTION_48	IF_32	IF_33	IF_35
0x40017ce	    0xc74008010000	                  mov dword [rax + 8], 1	      3410	elf.c	FUNCTION_48	IF_32	IF_33	IF_35
0x40017d5	      0xe985010000	                           jmp 0x400195f	      3411	elf.c	FUNCTION_48	IF_32	IF_33	IF_35
0x40017da	         0xfb64325	           movzx eax, byte [rbx + 0x25] 	      3418	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36
0x40017de	            0x89c1	                            mov ecx, eax	      3418	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36
0x40017e0	          0xc0e902	                               shr cl, 2	      3418	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36
0x40017e3	          0x83e101	                              and ecx, 1	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x40017e6	          0x83e004	                              and eax, 4	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x40017e9	        0x488d7570	                   lea rsi, [rbp + 0x70]	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x40017ed	        0x488d5558	                   lea rdx, [rbp + 0x58]	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x40017f1	            0x84c0	                             test al, al	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x40017f3	        0x480f44f2	                          cmove rsi, rdx	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x40017f7	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x40017fc	          0x4c89f2	                            mov rdx, r14	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x40017ff	          0x4c89e7	                            mov rdi, r12	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x4001802	      0xe83df9ffff	       call sym._bfd_elf_init_reloc_shdr	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x4001807	            0x85c0	                           test eax, eax	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x4001809	            0x7510	                           jne 0x400181b	      3414	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36	CALL_27
0x400180b	        0x488b0424	                    mov rax, qword [rsp]	      3421	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36
0x400180f	    0xc74008010000	                  mov dword [rax + 8], 1	      3421	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36
0x4001816	      0xe944010000	                           jmp 0x400195f	      3422	elf.c	FUNCTION_48	IF_32	ELSE_9	IF_36
0x400181b	        0x448b6d04	               mov r13d, dword [rbp + 4]	      3427	elf.c	FUNCTION_48
0x400181f	    0x498b87b00000	            mov rax, qword [r15 + 0xb0] 	      3428	elf.c	FUNCTION_48	IF_37
0x4001826	          0x4885c0	                           test rax, rax	      3428	elf.c	FUNCTION_48	IF_37
0x4001829	            0x741f	                            je 0x400184a	      3428	elf.c	FUNCTION_48	IF_37
0x400182b	          0x4889da	                            mov rdx, rbx	      3429	elf.c	FUNCTION_48	IF_37
0x400182e	          0x4889ee	                            mov rsi, rbp	      3429	elf.c	FUNCTION_48	IF_37
0x4001831	          0x4c89e7	                            mov rdi, r12	      3429	elf.c	FUNCTION_48	IF_37
0x4001834	            0xffd0	                                call rax	      3429	elf.c	FUNCTION_48	IF_37
0x4001836	            0x85c0	                           test eax, eax	      3429	elf.c	FUNCTION_48	IF_37
0x4001838	            0x7510	                           jne 0x400184a	      3429	elf.c	FUNCTION_48	IF_37
0x400183a	        0x488b0424	                    mov rax, qword [rsp]	      3431	elf.c	FUNCTION_48	IF_37
0x400183e	    0xc74008010000	                  mov dword [rax + 8], 1	      3431	elf.c	FUNCTION_48	IF_37
0x4001845	      0xe915010000	                           jmp 0x400195f	      3432	elf.c	FUNCTION_48	IF_37
0x400184a	        0x4183fd08	                             cmp r13d, 8	      3435	elf.c	FUNCTION_48	IF_38
0x400184e	     0xf850b010000	                           jne 0x400195f	      3435	elf.c	FUNCTION_48	IF_38
0x4001854	      0x48837b3800	               cmp qword [rbx + 0x38], 0	      3435	elf.c	FUNCTION_48	IF_38
0x4001859	     0xf8400010000	                            je 0x400195f	      3435	elf.c	FUNCTION_48	IF_38
0x400185f	    0xc74504080000	                  mov dword [rbp + 4], 8	      3439	elf.c	FUNCTION_48	IF_38
0x4001866	      0xe9f4000000	                           jmp 0x400195f	      3439	elf.c	FUNCTION_48	IF_38
0x400186b	          0x4989c6	                            mov r14, rax	      3206	elf.c	FUNCTION_48	ELSE_1	IF_4	ELSE_2	IF_8
0x400186e	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      3215	elf.c	FUNCTION_48	ELSE_3	CALL_7
0x4001876	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3215	elf.c	FUNCTION_48	ELSE_3	CALL_7
0x400187d	        0x488b7808	                mov rdi, qword [rax + 8]	      3215	elf.c	FUNCTION_48	ELSE_3	CALL_7
0x4001881	      0xba00000000	                              mov edx, 0	      3215	elf.c	FUNCTION_48	ELSE_3	CALL_7
0x4001886	          0x4c89f6	                            mov rsi, r14	      3215	elf.c	FUNCTION_48	ELSE_3	CALL_7
0x4001889	      0xe800000000	                          call 0x400188e	      3215	elf.c	FUNCTION_48	ELSE_3	CALL_7
0x400188e	          0x894500	                    mov dword [rbp], eax	      3215	elf.c	FUNCTION_48	ELSE_3	CALL_7
0x4001891	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3217	elf.c	FUNCTION_48	ELSE_3	IF_11
0x4001894	     0xf84bffaffff	                            je 0x4001359	      3217	elf.c	FUNCTION_48	ELSE_3	IF_11
0x400189a	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      3217	elf.c	FUNCTION_48	ELSE_3	IF_11
0x40018a2	      0xe9c2faffff	                           jmp 0x4001369	      3217	elf.c	FUNCTION_48	ELSE_3	IF_11
0x40018a7	      0xb811000000	                           mov eax, 0x11	      3255	elf.c	FUNCTION_48	IF_14
0x40018ac	        0x837d0400	                  cmp dword [rbp + 4], 0	      3259	elf.c	FUNCTION_48	IF_15
0x40018b0	     0xf847dfbffff	                            je 0x4001433	      3259	elf.c	FUNCTION_48	IF_15
0x40018b6	      0xe9b5fbffff	                           jmp 0x4001470	      3259	elf.c	FUNCTION_48	IF_15
0x40018bb	          0x83fa10	                           cmp edx, 0x10	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40018be	            0x7745	                            ja 0x4001905	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40018c0	          0x83fa0e	                            cmp edx, 0xe	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40018c3	     0xf832efcffff	                           jae 0x40014f7	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40018c9	          0x83fa06	                              cmp edx, 6	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40018cc	     0xf8467fcffff	                            je 0x4001539	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40018d2	          0x83fa06	                              cmp edx, 6	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40018d5	            0x7717	                            ja 0x40018ee	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40018d7	          0x83fa04	                              cmp edx, 4	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40018da	     0xf846dfcffff	                            je 0x400154d	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40018e0	          0x83fa05	                              cmp edx, 5	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40018e3	     0xf8428fcffff	                            je 0x4001511	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40018e9	      0xe98dfdffff	                           jmp 0x400167b	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40018ee	          0x83fa09	                              cmp edx, 9	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40018f1	     0xf8483fcffff	                            je 0x400157a	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40018f7	          0x83fa0b	                            cmp edx, 0xb	      3274	elf.c	FUNCTION_48	SWITCH_1
0x40018fa	     0xf8425fcffff	                            je 0x4001525	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4001900	      0xe976fdffff	                           jmp 0x400167b	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4001905	    0x81fafdffff6f	                     cmp edx, 0x6ffffffd	      3274	elf.c	FUNCTION_48	SWITCH_1
0x400190b	     0xf84a3fcffff	                            je 0x40015b4	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4001911	    0x81fafdffff6f	                     cmp edx, 0x6ffffffd	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4001917	            0x771a	                            ja 0x4001933	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4001919	          0x83fa11	                           cmp edx, 0x11	      3274	elf.c	FUNCTION_48	SWITCH_1
0x400191c	     0xf842bfdffff	                            je 0x400164d	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4001922	    0x81faf6ffff6f	                     cmp edx, 0x6ffffff6	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4001928	     0xf8429fdffff	                            je 0x4001657	      3274	elf.c	FUNCTION_48	SWITCH_1
0x400192e	      0xe948fdffff	                           jmp 0x400167b	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4001933	    0x81fafeffff6f	                     cmp edx, 0x6ffffffe	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4001939	     0xf84c5fcffff	                            je 0x4001604	      3274	elf.c	FUNCTION_48	SWITCH_1
0x400193f	    0x81faffffff6f	                     cmp edx, 0x6fffffff	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4001945	     0xf845cfcffff	                            je 0x40015a7	      3274	elf.c	FUNCTION_48	SWITCH_1
0x400194b	      0xe92bfdffff	                           jmp 0x400167b	      3274	elf.c	FUNCTION_48	SWITCH_1
0x4001950	        0x837d0400	                  cmp dword [rbp + 4], 0	      3259	elf.c	FUNCTION_48	IF_15
0x4001954	     0xf84d4faffff	                            je 0x400142e	      3259	elf.c	FUNCTION_48	IF_15
0x400195a	      0xe911fbffff	                           jmp 0x4001470	      3259	elf.c	FUNCTION_48	IF_15
0x400195f	        0x4883c418	                           add rsp, 0x18	      3441	elf.c	FUNCTION_48
0x4001963	              0x5b	                                 pop rbx	      3441	elf.c	FUNCTION_48
0x4001964	              0x5d	                                 pop rbp	      3441	elf.c	FUNCTION_48
0x4001965	            0x415c	                                 pop r12	      3441	elf.c	FUNCTION_48
0x4001967	            0x415d	                                 pop r13	      3441	elf.c	FUNCTION_48
0x4001969	            0x415e	                                 pop r14	      3441	elf.c	FUNCTION_48
0x400196b	            0x415f	                                 pop r15	      3441	elf.c	FUNCTION_48
0x400196d	            0xf3c3	                                     ret	      3441	elf.c	FUNCTION_48
_bfd_elf_swap_verdaux_out	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,0:functions,0	18
0x4001ad1	            0x4154	                                push r12	       113	elf.c	FUNCTION_4
0x4001ad3	              0x55	                                push rbp	       113	elf.c	FUNCTION_4
0x4001ad4	              0x53	                                push rbx	       113	elf.c	FUNCTION_4
0x4001ad5	          0x4889fd	                            mov rbp, rdi	       113	elf.c	FUNCTION_4
0x4001ad8	          0x4989f4	                            mov r12, rsi	       113	elf.c	FUNCTION_4
0x4001adb	          0x4889d3	                            mov rbx, rdx	       113	elf.c	FUNCTION_4
0x4001ade	        0x488b4708	                mov rax, qword [rdi + 8]	       114	elf.c	FUNCTION_4
0x4001ae2	          0x4889d6	                            mov rsi, rdx	       114	elf.c	FUNCTION_4
0x4001ae5	        0x498b3c24	                    mov rdi, qword [r12]	       114	elf.c	FUNCTION_4
0x4001ae9	    0xff9090000000	                 call qword [rax + 0x90]	       114	elf.c	FUNCTION_4
0x4001aef	        0x488d7304	                      lea rsi, [rbx + 4]	       115	elf.c	FUNCTION_4
0x4001af3	      0x498b7c2408	                mov rdi, qword [r12 + 8]	       115	elf.c	FUNCTION_4
0x4001af8	        0x488b4508	                mov rax, qword [rbp + 8]	       115	elf.c	FUNCTION_4
0x4001afc	    0xff9090000000	                 call qword [rax + 0x90]	       115	elf.c	FUNCTION_4
0x4001b02	              0x5b	                                 pop rbx	       116	elf.c	FUNCTION_4
0x4001b03	              0x5d	                                 pop rbp	       116	elf.c	FUNCTION_4
0x4001b04	            0x415c	                                 pop r12	       116	elf.c	FUNCTION_4
0x4001b06	              0xc3	                                     ret	       116	elf.c	FUNCTION_4
_bfd_elf_copy_private_bfd_data	FOR,3:ELSE,0:IF,15:WHILE,0:DO,0:SWITCH,0:CALL,24:functions,0	184
0x40027a5	        0x488b4708	                mov rax, qword [rdi + 8]	      1466	elf.c	FUNCTION_31	IF_1
0x40027a9	        0x83780805	                  cmp dword [rax + 8], 5	      1466	elf.c	FUNCTION_31	IF_1
0x40027ad	     0xf85d4020000	                           jne 0x4002a87	      1466	elf.c	FUNCTION_31	IF_1
0x40027b3	        0x488b4608	                mov rax, qword [rsi + 8]	      1467	elf.c	FUNCTION_31	IF_1
0x40027b7	        0x83780805	                  cmp dword [rax + 8], 5	      1467	elf.c	FUNCTION_31	IF_1
0x40027bb	     0xf85c6020000	                           jne 0x4002a87	      1467	elf.c	FUNCTION_31	IF_1
0x40027c1	            0x4157	                                push r15	      1460	elf.c	FUNCTION_31
0x40027c3	            0x4156	                                push r14	      1460	elf.c	FUNCTION_31
0x40027c5	            0x4155	                                push r13	      1460	elf.c	FUNCTION_31
0x40027c7	            0x4154	                                push r12	      1460	elf.c	FUNCTION_31
0x40027c9	              0x55	                                push rbp	      1460	elf.c	FUNCTION_31
0x40027ca	              0x53	                                push rbx	      1460	elf.c	FUNCTION_31
0x40027cb	        0x4883ec18	                           sub rsp, 0x18	      1460	elf.c	FUNCTION_31
0x40027cf	    0x488b97f80000	            mov rdx, qword [rdi + 0xf8] 	      1461	elf.c	FUNCTION_31	CALL_1
0x40027d6	        0x4c8b7a58	            mov r15, qword [rdx + 0x58] 	      1461	elf.c	FUNCTION_31	CALL_1
0x40027da	    0x488b86f80000	            mov rax, qword [rsi + 0xf8] 	      1462	elf.c	FUNCTION_31	CALL_2
0x40027e1	        0x488b4858	            mov rcx, qword [rax + 0x58] 	      1462	elf.c	FUNCTION_31	CALL_2
0x40027e5	        0x48890c24	                    mov qword [rsp], rcx	      1462	elf.c	FUNCTION_31	CALL_2
0x40027e9	    0x488b88980c00	           mov rcx, qword [rax + 0xc98] 	      1470	elf.c	FUNCTION_31	IF_2	CALL_3
0x40027f0	        0x83795c00	               cmp dword [rcx + 0x5c], 0	      1470	elf.c	FUNCTION_31	IF_2	CALL_3
0x40027f4	            0x751d	                           jne 0x4002813	      1470	elf.c	FUNCTION_31	IF_2	CALL_3
0x40027f6	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	      1472	elf.c	FUNCTION_31	IF_2	CALL_5
0x40027fa	        0x48895030	             mov qword [rax + 0x30], rdx	      1472	elf.c	FUNCTION_31	IF_2	CALL_5
0x40027fe	    0x488b86f80000	            mov rax, qword [rsi + 0xf8] 	      1473	elf.c	FUNCTION_31	IF_2	CALL_6
0x4002805	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      1473	elf.c	FUNCTION_31	IF_2	CALL_6
0x400280c	    0xc7405c010000	               mov dword [rax + 0x5c], 1	      1473	elf.c	FUNCTION_31	IF_2	CALL_6
0x4002813	    0x488b86f80000	            mov rax, qword [rsi + 0xf8] 	      1476	elf.c	FUNCTION_31	CALL_8
0x400281a	    0x488b97f80000	            mov rdx, qword [rdi + 0xf8] 	      1476	elf.c	FUNCTION_31	CALL_8
0x4002821	    0x488b92f00200	           mov rdx, qword [rdx + 0x2f0] 	      1476	elf.c	FUNCTION_31	CALL_8
0x4002828	    0x488990f00200	            mov qword [rax + 0x2f0], rdx	      1476	elf.c	FUNCTION_31	CALL_8
0x400282f	    0x488b86f80000	            mov rax, qword [rsi + 0xf8] 	      1479	elf.c	FUNCTION_31	CALL_9
0x4002836	    0x488b97f80000	            mov rdx, qword [rdi + 0xf8] 	      1480	elf.c	FUNCTION_31	CALL_10
0x400283d	         0xfb65207	               movzx edx, byte [rdx + 7]	      1480	elf.c	FUNCTION_31	CALL_10
0x4002841	          0x885007	                  mov byte [rax + 7], dl	      1479	elf.c	FUNCTION_31	CALL_9
0x4002844	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      1483	elf.c	FUNCTION_31	IF_3	CALL_11
0x400284b	         0xfb64008	               movzx eax, byte [rax + 8]	      1483	elf.c	FUNCTION_31	IF_3	CALL_11
0x400284f	            0x84c0	                             test al, al	      1483	elf.c	FUNCTION_31	IF_3	CALL_11
0x4002851	            0x740a	                            je 0x400285d	      1483	elf.c	FUNCTION_31	IF_3	CALL_11
0x4002853	    0x488b96f80000	            mov rdx, qword [rsi + 0xf8] 	      1484	elf.c	FUNCTION_31	IF_3	CALL_12
0x400285a	          0x884208	                  mov byte [rdx + 8], al	      1485	elf.c	FUNCTION_31	CALL_13
0x400285d	          0x4989f6	                            mov r14, rsi	      1485	elf.c	FUNCTION_31	CALL_13
0x4002860	          0x4989fc	                            mov r12, rdi	      1485	elf.c	FUNCTION_31	CALL_13
0x4002863	      0xe800000000	                          call 0x4002868	      1488	elf.c	FUNCTION_31	CALL_14
0x4002868	          0x4d85ff	                           test r15, r15	      1490	elf.c	FUNCTION_31	IF_4
0x400286b	     0xf8402020000	                            je 0x4002a73	      1490	elf.c	FUNCTION_31	IF_4
0x4002871	      0x48833c2400	                      cmp qword [rsp], 0	      1490	elf.c	FUNCTION_31	IF_4
0x4002876	     0xf84f7010000	                            je 0x4002a73	      1490	elf.c	FUNCTION_31	IF_4
0x400287c	        0x498b4608	                mov rax, qword [r14 + 8]	      1493	elf.c	FUNCTION_31	CALL_15
0x4002880	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      1493	elf.c	FUNCTION_31	CALL_15
0x4002887	      0x4889442408	                mov qword [rsp + 8], rax	      1493	elf.c	FUNCTION_31	CALL_15
0x400288c	    0x498b86f80000	            mov rax, qword [r14 + 0xf8] 	      1496	elf.c	FUNCTION_31	FOR_1	CALL_16
0x4002893	    0x83b8fc020000	              cmp dword [rax + 0x2fc], 1	      1496	elf.c	FUNCTION_31	FOR_1	CALL_16
0x400289a	     0xf86d3010000	                           jbe 0x4002a73	      1496	elf.c	FUNCTION_31	FOR_1	CALL_16
0x40028a0	    0x41bd01000000	                             mov r13d, 1	      1496	elf.c	FUNCTION_31	FOR_1	CALL_16
0x40028a6	          0x4489e8	                           mov eax, r13d	      1499	elf.c	FUNCTION_31	FOR_1
0x40028a9	        0x488b0c24	                    mov rcx, qword [rsp]	      1499	elf.c	FUNCTION_31	FOR_1
0x40028ad	        0x488b1cc1	            mov rbx, qword [rcx + rax*8]	      1499	elf.c	FUNCTION_31	FOR_1
0x40028b1	          0x4885db	                           test rbx, rbx	      1504	elf.c	FUNCTION_31	FOR_1	IF_5
0x40028b4	     0xf848c010000	                            je 0x4002a46	      1504	elf.c	FUNCTION_31	FOR_1	IF_5
0x40028ba	          0x8b4304	                mov eax, dword [rbx + 4]	      1505	elf.c	FUNCTION_31	FOR_1	IF_5
0x40028bd	          0x83f808	                              cmp eax, 8	      1505	elf.c	FUNCTION_31	FOR_1	IF_5
0x40028c0	            0x740b	                            je 0x40028cd	      1505	elf.c	FUNCTION_31	FOR_1	IF_5
0x40028c2	      0x3dffffff5f	                     cmp eax, 0x5fffffff	      1505	elf.c	FUNCTION_31	FOR_1	IF_5
0x40028c7	     0xf8679010000	                           jbe 0x4002a46	      1505	elf.c	FUNCTION_31	FOR_1	IF_5
0x40028cd	      0x48837b2000	               cmp qword [rbx + 0x20], 0	      1511	elf.c	FUNCTION_31	FOR_1	IF_6
0x40028d2	     0xf846e010000	                            je 0x4002a46	      1511	elf.c	FUNCTION_31	FOR_1	IF_6
0x40028d8	        0x837b2c00	               cmp dword [rbx + 0x2c], 0	      1512	elf.c	FUNCTION_31	FOR_1	IF_6
0x40028dc	            0x740a	                            je 0x40028e8	      1512	elf.c	FUNCTION_31	FOR_1	IF_6
0x40028de	        0x837b2800	               cmp dword [rbx + 0x28], 0	      1512	elf.c	FUNCTION_31	FOR_1	IF_6
0x40028e2	     0xf855e010000	                           jne 0x4002a46	      1512	elf.c	FUNCTION_31	FOR_1	IF_6
0x40028e8	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_17
0x40028f0	    0x8bb8fc020000	           mov edi, dword [rax + 0x2fc] 	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_17
0x40028f6	          0x83ff01	                              cmp edi, 1	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_17
0x40028f9	     0xf8661010000	                           jbe 0x4002a60	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_17
0x40028ff	        0x498d4708	                      lea rax, [r15 + 8]	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_17
0x4002903	      0xbd01000000	                              mov ebp, 1	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_17
0x4002908	          0x488b10	                    mov rdx, qword [rax]	      1519	elf.c	FUNCTION_31	FOR_1	FOR_2
0x400290b	          0x4885d2	                           test rdx, rdx	      1521	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_7
0x400290e	            0x743b	                            je 0x400294b	      1521	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_7
0x4002910	        0x488b4b40	            mov rcx, qword [rbx + 0x40] 	      1524	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4002914	          0x4885c9	                           test rcx, rcx	      1524	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4002917	            0x7432	                            je 0x400294b	      1524	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4002919	        0x488b7240	            mov rsi, qword [rdx + 0x40] 	      1525	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x400291d	          0x4885f6	                           test rsi, rsi	      1525	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4002920	            0x7429	                            je 0x400294b	      1525	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4002922	        0x488b7668	            mov rsi, qword [rsi + 0x68] 	      1526	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4002926	          0x4839f1	                            cmp rcx, rsi	      1527	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4002929	            0x7520	                           jne 0x400294b	      1527	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x400292b	          0x4885f6	                           test rsi, rsi	      1527	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x400292e	            0x741b	                            je 0x400294b	      1527	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8
0x4002930	          0x4589e8	                           mov r8d, r13d	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_18
0x4002933	          0x4889d9	                            mov rcx, rbx	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_18
0x4002936	          0x4c89f6	                            mov rsi, r14	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_18
0x4002939	          0x4c89e7	                            mov rdi, r12	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_18
0x400293c	      0xe8bedaffff	    call sym.copy_special_section_fields	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_18
0x4002941	            0x85c0	                           test eax, eax	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_18
0x4002943	     0xf8417010000	                            je 0x4002a60	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_18
0x4002949	            0xeb10	                           jmp 0x400295b	      1533	elf.c	FUNCTION_31	FOR_1	FOR_2	IF_8	IF_9	CALL_18
0x400294b	          0x83c501	                              add ebp, 1	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_17
0x400294e	        0x4883c008	                              add rax, 8	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_17
0x4002952	            0x39fd	                            cmp ebp, edi	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_17
0x4002954	            0x75b2	                           jne 0x4002908	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_17
0x4002956	      0xe905010000	                           jmp 0x4002a60	      1517	elf.c	FUNCTION_31	FOR_1	FOR_2	CALL_17
0x400295b	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      1539	elf.c	FUNCTION_31	FOR_1	IF_10	CALL_20
0x4002963	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	      1539	elf.c	FUNCTION_31	FOR_1	IF_10	CALL_20
0x4002969	            0x39e8	                            cmp eax, ebp	      1539	elf.c	FUNCTION_31	FOR_1	IF_10	CALL_20
0x400296b	     0xf87d5000000	                            ja 0x4002a46	      1539	elf.c	FUNCTION_31	FOR_1	IF_10	CALL_20
0x4002971	          0x83f801	                              cmp eax, 1	      1545	elf.c	FUNCTION_31	FOR_1	FOR_3	CALL_21
0x4002974	     0xf868d000000	                           jbe 0x4002a07	      1545	elf.c	FUNCTION_31	FOR_1	FOR_3	CALL_21
0x400297a	      0xbd01000000	                              mov ebp, 1	      1545	elf.c	FUNCTION_31	FOR_1	FOR_3	CALL_21
0x400297f	            0x89e8	                            mov eax, ebp	      1547	elf.c	FUNCTION_31	FOR_1	FOR_3
0x4002981	        0x498b14c7	            mov rdx, qword [r15 + rax*8]	      1547	elf.c	FUNCTION_31	FOR_1	FOR_3
0x4002985	          0x4885d2	                           test rdx, rdx	      1549	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_11
0x4002988	            0x7464	                            je 0x40029ee	      1549	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_11
0x400298a	          0x8b4304	                mov eax, dword [rbx + 4]	      1556	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x400298d	          0x83f808	                              cmp eax, 8	      1556	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4002990	            0x7405	                            je 0x4002997	      1556	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4002992	          0x3b4204	                cmp eax, dword [rdx + 4]	      1557	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4002995	            0x7557	                           jne 0x40029ee	      1557	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x4002997	        0x488b4208	                mov rax, qword [rdx + 8]	      1558	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x400299b	        0x48334308	                xor rax, qword [rbx + 8]	      1558	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x400299f	    0x48a9bfffffff	            test rax, 0xffffffffffffffbf	      1558	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x40029a5	            0x7547	                           jne 0x40029ee	      1558	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x40029a7	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      1560	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x40029ab	        0x48394230	            cmp qword [rdx + 0x30], rax 	      1560	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x40029af	            0x753d	                           jne 0x40029ee	      1560	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x40029b1	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      1561	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x40029b5	        0x48394238	            cmp qword [rdx + 0x38], rax 	      1561	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x40029b9	            0x7533	                           jne 0x40029ee	      1561	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x40029bb	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1562	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x40029bf	        0x48394220	            cmp qword [rdx + 0x20], rax 	      1562	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x40029c3	            0x7529	                           jne 0x40029ee	      1562	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x40029c5	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1563	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x40029c9	        0x48394210	            cmp qword [rdx + 0x10], rax 	      1563	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x40029cd	            0x751f	                           jne 0x40029ee	      1563	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x40029cf	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      1564	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x40029d3	        0x48394228	            cmp qword [rdx + 0x28], rax 	      1564	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x40029d7	            0x7415	                            je 0x40029ee	      1564	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12
0x40029d9	          0x4589e8	                           mov r8d, r13d	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_22
0x40029dc	          0x4889d9	                            mov rcx, rbx	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_22
0x40029df	          0x4c89f6	                            mov rsi, r14	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_22
0x40029e2	          0x4c89e7	                            mov rdi, r12	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_22
0x40029e5	      0xe815daffff	    call sym.copy_special_section_fields	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_22
0x40029ea	            0x85c0	                           test eax, eax	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_22
0x40029ec	            0x751e	                           jne 0x4002a0c	      1567	elf.c	FUNCTION_31	FOR_1	FOR_3	IF_12	IF_13	CALL_22
0x40029ee	          0x83c501	                              add ebp, 1	      1545	elf.c	FUNCTION_31	FOR_1	FOR_3	CALL_21
0x40029f1	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      1545	elf.c	FUNCTION_31	FOR_1	FOR_3	CALL_21
0x40029f9	    0x39a8fc020000	           cmp dword [rax + 0x2fc], ebp 	      1545	elf.c	FUNCTION_31	FOR_1	FOR_3	CALL_21
0x40029ff	     0xf877affffff	                            ja 0x400297f	      1545	elf.c	FUNCTION_31	FOR_1	FOR_3	CALL_21
0x4002a05	            0xeb05	                           jmp 0x4002a0c	      1545	elf.c	FUNCTION_31	FOR_1	FOR_3	CALL_21
0x4002a07	      0xbd01000000	                              mov ebp, 1	      1545	elf.c	FUNCTION_31	FOR_1	FOR_3	CALL_21
0x4002a0c	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      1572	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_23
0x4002a14	    0x39a8fc020000	           cmp dword [rax + 0x2fc], ebp 	      1572	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_23
0x4002a1a	            0x752a	                           jne 0x4002a46	      1572	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_23
0x4002a1c	    0x817b04ffffff	        cmp dword [rbx + 4], 0x5fffffff 	      1572	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_23
0x4002a23	            0x7621	                           jbe 0x4002a46	      1572	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_23
0x4002a25	      0x488b442408	                mov rax, qword [rsp + 8]	      1576	elf.c	FUNCTION_31	FOR_1	IF_14	IF_15
0x4002a2a	    0x488b80e00200	           mov rax, qword [rax + 0x2e0] 	      1576	elf.c	FUNCTION_31	FOR_1	IF_14	IF_15
0x4002a31	          0x4885c0	                           test rax, rax	      1576	elf.c	FUNCTION_31	FOR_1	IF_14	IF_15
0x4002a34	            0x7410	                            je 0x4002a46	      1576	elf.c	FUNCTION_31	FOR_1	IF_14	IF_15
0x4002a36	          0x4889d9	                            mov rcx, rbx	      1577	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_24
0x4002a39	      0xba00000000	                              mov edx, 0	      1577	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_24
0x4002a3e	          0x4c89f6	                            mov rsi, r14	      1577	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_24
0x4002a41	          0x4c89e7	                            mov rdi, r12	      1577	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_24
0x4002a44	            0xffd0	                                call rax	      1577	elf.c	FUNCTION_31	FOR_1	IF_14	CALL_24
0x4002a46	        0x4183c501	                             add r13d, 1	      1496	elf.c	FUNCTION_31	FOR_1	CALL_16
0x4002a4a	    0x498b86f80000	            mov rax, qword [r14 + 0xf8] 	      1496	elf.c	FUNCTION_31	FOR_1	CALL_16
0x4002a51	    0x4439a8fc0200	          cmp dword [rax + 0x2fc], r13d 	      1496	elf.c	FUNCTION_31	FOR_1	CALL_16
0x4002a58	     0xf8748feffff	                            ja 0x40028a6	      1496	elf.c	FUNCTION_31	FOR_1	CALL_16
0x4002a5e	            0xeb13	                           jmp 0x4002a73	      1496	elf.c	FUNCTION_31	FOR_1	CALL_16
0x4002a60	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      1539	elf.c	FUNCTION_31	FOR_1	IF_10	CALL_20
0x4002a68	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	      1539	elf.c	FUNCTION_31	FOR_1	IF_10	CALL_20
0x4002a6e	      0xe9fefeffff	                           jmp 0x4002971	      1539	elf.c	FUNCTION_31	FOR_1	IF_10	CALL_20
0x4002a73	      0xb801000000	                              mov eax, 1	      1582	elf.c	FUNCTION_31
0x4002a78	        0x4883c418	                           add rsp, 0x18	      1582	elf.c	FUNCTION_31
0x4002a7c	              0x5b	                                 pop rbx	      1582	elf.c	FUNCTION_31
0x4002a7d	              0x5d	                                 pop rbp	      1582	elf.c	FUNCTION_31
0x4002a7e	            0x415c	                                 pop r12	      1582	elf.c	FUNCTION_31
0x4002a80	            0x415d	                                 pop r13	      1582	elf.c	FUNCTION_31
0x4002a82	            0x415e	                                 pop r14	      1582	elf.c	FUNCTION_31
0x4002a84	            0x415f	                                 pop r15	      1582	elf.c	FUNCTION_31
0x4002a86	              0xc3	                                     ret	      1582	elf.c	FUNCTION_31
0x4002a87	      0xb801000000	                              mov eax, 1	      1582	elf.c	FUNCTION_31
0x4002a8c	              0xc3	                                     ret	      1582	elf.c	FUNCTION_31
bfd_elf_gnu_hash	FOR,0:ELSE,0:IF,0:WHILE,1:DO,0:SWITCH,0:CALL,0:functions,0	18
0x4001d2c	        0x488d4f01	                      lea rcx, [rdi + 1]	       229	elf.c	FUNCTION_12	WHILE_1
0x4001d30	           0xfb617	                   movzx edx, byte [rdi]	       229	elf.c	FUNCTION_12	WHILE_1
0x4001d33	            0x84d2	                             test dl, dl	       229	elf.c	FUNCTION_12	WHILE_1
0x4001d35	            0x7423	                            je 0x4001d5a	       229	elf.c	FUNCTION_12	WHILE_1
0x4001d37	      0xb805150000	                         mov eax, 0x1505	       229	elf.c	FUNCTION_12	WHILE_1
0x4001d3c	          0x4889c6	                            mov rsi, rax	       229	elf.c	FUNCTION_12	WHILE_1
0x4001d3f	        0x48c1e605	                              shl rsi, 5	       229	elf.c	FUNCTION_12	WHILE_1
0x4001d43	           0xfb6d2	                           movzx edx, dl	       229	elf.c	FUNCTION_12	WHILE_1
0x4001d46	          0x4801f2	                            add rdx, rsi	       229	elf.c	FUNCTION_12	WHILE_1
0x4001d49	          0x4801d0	                            add rax, rdx	       230	elf.c	FUNCTION_12	WHILE_1
0x4001d4c	        0x4883c101	                              add rcx, 1	       229	elf.c	FUNCTION_12	WHILE_1
0x4001d50	         0xfb651ff	               movzx edx, byte [rcx - 1]	       229	elf.c	FUNCTION_12	WHILE_1
0x4001d54	            0x84d2	                             test dl, dl	       229	elf.c	FUNCTION_12	WHILE_1
0x4001d56	            0x75e4	                           jne 0x4001d3c	       229	elf.c	FUNCTION_12	WHILE_1
0x4001d58	            0xeb05	                           jmp 0x4001d5f	       229	elf.c	FUNCTION_12	WHILE_1
0x4001d5a	      0xb805150000	                         mov eax, 0x1505	       226	elf.c	FUNCTION_12
0x4001d5f	            0x89c0	                            mov eax, eax	       231	elf.c	FUNCTION_12
0x4001d61	              0xc3	                                     ret	       232	elf.c	FUNCTION_12
_bfd_elf_filter_global_symbols	FOR,1:ELSE,0:IF,4:WHILE,0:DO,0:SWITCH,0:CALL,2:functions,0	56
0x40055ec	            0x4157	                                push r15	      4003	elf.c	FUNCTION_54
0x40055ee	            0x4156	                                push r14	      4003	elf.c	FUNCTION_54
0x40055f0	            0x4155	                                push r13	      4003	elf.c	FUNCTION_54
0x40055f2	            0x4154	                                push r12	      4003	elf.c	FUNCTION_54
0x40055f4	              0x55	                                push rbp	      4003	elf.c	FUNCTION_54
0x40055f5	              0x53	                                push rbx	      4003	elf.c	FUNCTION_54
0x40055f6	        0x4883ec18	                           sub rsp, 0x18	      4003	elf.c	FUNCTION_54
0x40055fa	        0x48893424	                    mov qword [rsp], rsi	      4003	elf.c	FUNCTION_54
0x40055fe	          0x4989d5	                            mov r13, rdx	      4003	elf.c	FUNCTION_54
0x4005601	          0x4885c9	                           test rcx, rcx	      4006	elf.c	FUNCTION_54	FOR_1
0x4005604	     0xf8e81000000	                           jle 0x400568b	      4006	elf.c	FUNCTION_54	FOR_1
0x400560a	          0x4989ff	                            mov r15, rdi	      4006	elf.c	FUNCTION_54	FOR_1
0x400560d	          0x4989ce	                            mov r14, rcx	      4006	elf.c	FUNCTION_54	FOR_1
0x4005610	    0x48c744240800	                  mov qword [rsp + 8], 0	      4006	elf.c	FUNCTION_54	FOR_1
0x4005619	      0xbb00000000	                              mov ebx, 0	      4006	elf.c	FUNCTION_54	FOR_1
0x400561e	      0x498b6cdd00	            mov rbp, qword [r13 + rbx*8]	      4008	elf.c	FUNCTION_54	FOR_1
0x4005623	        0x4c8b6508	                mov r12, qword [rbp + 8]	      4009	elf.c	FUNCTION_54	FOR_1
0x4005627	          0x4889ee	                            mov rsi, rbp	      4012	elf.c	FUNCTION_54	FOR_1	IF_1	CALL_1
0x400562a	          0x4c89ff	                            mov rdi, r15	      4012	elf.c	FUNCTION_54	FOR_1	IF_1	CALL_1
0x400562d	      0xe8eeaaffff	                  call sym.sym_is_global	      4012	elf.c	FUNCTION_54	FOR_1	IF_1	CALL_1
0x4005632	            0x85c0	                           test eax, eax	      4012	elf.c	FUNCTION_54	FOR_1	IF_1	CALL_1
0x4005634	            0x744a	                            je 0x4005680	      4012	elf.c	FUNCTION_54	FOR_1	IF_1	CALL_1
0x4005636	        0x488b0424	                    mov rax, qword [rsp]	      4015	elf.c	FUNCTION_54	FOR_1	CALL_2
0x400563a	        0x488b7828	            mov rdi, qword [rax + 0x28] 	      4015	elf.c	FUNCTION_54	FOR_1	CALL_2
0x400563e	    0x41b800000000	                              mov r8d, 0	      4015	elf.c	FUNCTION_54	FOR_1	CALL_2
0x4005644	      0xb900000000	                              mov ecx, 0	      4015	elf.c	FUNCTION_54	FOR_1	CALL_2
0x4005649	      0xba00000000	                              mov edx, 0	      4015	elf.c	FUNCTION_54	FOR_1	CALL_2
0x400564e	          0x4c89e6	                            mov rsi, r12	      4015	elf.c	FUNCTION_54	FOR_1	CALL_2
0x4005651	      0xe800000000	                          call 0x4005656	      4015	elf.c	FUNCTION_54	FOR_1	CALL_2
0x4005656	          0x4885c0	                           test rax, rax	      4016	elf.c	FUNCTION_54	FOR_1	IF_2
0x4005659	            0x7425	                            je 0x4005680	      4016	elf.c	FUNCTION_54	FOR_1	IF_2
0x400565b	         0xfb64818	           movzx ecx, byte [rax + 0x18] 	      4018	elf.c	FUNCTION_54	FOR_1	IF_3
0x400565f	          0x8d51fd	                      lea edx, [rcx - 3]	      4018	elf.c	FUNCTION_54	FOR_1	IF_3
0x4005662	          0x80fa01	                               cmp dl, 1	      4018	elf.c	FUNCTION_54	FOR_1	IF_3
0x4005665	            0x7719	                            ja 0x4005680	      4018	elf.c	FUNCTION_54	FOR_1	IF_3
0x4005667	        0xf640190c	            test byte [rax + 0x19], 0xc 	      4020	elf.c	FUNCTION_54	FOR_1	IF_4
0x400566b	            0x7513	                           jne 0x4005680	      4020	elf.c	FUNCTION_54	FOR_1	IF_4
0x400566d	      0x488b442408	                mov rax, qword [rsp + 8]	      4023	elf.c	FUNCTION_54	FOR_1
0x4005672	      0x49896cc500	            mov qword [r13 + rax*8], rbp	      4023	elf.c	FUNCTION_54	FOR_1
0x4005677	        0x488d4001	                      lea rax, [rax + 1]	      4023	elf.c	FUNCTION_54	FOR_1
0x400567b	      0x4889442408	                mov qword [rsp + 8], rax	      4023	elf.c	FUNCTION_54	FOR_1
0x4005680	        0x4883c301	                              add rbx, 1	      4006	elf.c	FUNCTION_54	FOR_1
0x4005684	          0x4939de	                            cmp r14, rbx	      4006	elf.c	FUNCTION_54	FOR_1
0x4005687	            0x7595	                           jne 0x400561e	      4006	elf.c	FUNCTION_54	FOR_1
0x4005689	            0xeb09	                           jmp 0x4005694	      4006	elf.c	FUNCTION_54	FOR_1
0x400568b	    0x48c744240800	                  mov qword [rsp + 8], 0	      4004	elf.c	FUNCTION_54
0x4005694	      0x488b442408	                mov rax, qword [rsp + 8]	      4026	elf.c	FUNCTION_54
0x4005699	    0x49c744c50000	              mov qword [r13 + rax*8], 0	      4026	elf.c	FUNCTION_54
0x40056a2	        0x4883c418	                           add rsp, 0x18	      4029	elf.c	FUNCTION_54
0x40056a6	              0x5b	                                 pop rbx	      4029	elf.c	FUNCTION_54
0x40056a7	              0x5d	                                 pop rbp	      4029	elf.c	FUNCTION_54
0x40056a8	            0x415c	                                 pop r12	      4029	elf.c	FUNCTION_54
0x40056aa	            0x415d	                                 pop r13	      4029	elf.c	FUNCTION_54
0x40056ac	            0x415e	                                 pop r14	      4029	elf.c	FUNCTION_54
0x40056ae	            0x415f	                                 pop r15	      4029	elf.c	FUNCTION_54
0x40056b0	              0xc3	                                     ret	      4029	elf.c	FUNCTION_54
_bfd_elf_slurp_version_tables	FOR,5:ELSE,5:IF,46:WHILE,0:DO,0:SWITCH,0:CALL,53:functions,0	559
0x400bc6f	            0x4157	                                push r15	      8282	elf.c	FUNCTION_97
0x400bc71	            0x4156	                                push r14	      8282	elf.c	FUNCTION_97
0x400bc73	            0x4155	                                push r13	      8282	elf.c	FUNCTION_97
0x400bc75	            0x4154	                                push r12	      8282	elf.c	FUNCTION_97
0x400bc77	              0x55	                                push rbp	      8282	elf.c	FUNCTION_97
0x400bc78	              0x53	                                push rbx	      8282	elf.c	FUNCTION_97
0x400bc79	    0x4881eca80000	                           sub rsp, 0xa8	      8282	elf.c	FUNCTION_97
0x400bc80	          0x4889fb	                            mov rbx, rdi	      8282	elf.c	FUNCTION_97
0x400bc83	          0x4189f5	                           mov r13d, esi	      8282	elf.c	FUNCTION_97
0x400bc86	    0x64488b042528	                mov rax, qword fs:[0x28]	      8282	elf.c	FUNCTION_97
0x400bc8f	    0x488984249800	             mov qword [rsp + 0x98], rax	      8282	elf.c	FUNCTION_97
0x400bc97	            0x31c0	                            xor eax, eax	      8282	elf.c	FUNCTION_97
0x400bc99	    0x488baff80000	            mov rbp, qword [rdi + 0xf8] 	      8286	elf.c	FUNCTION_97	IF_1	CALL_1
0x400bca0	    0x83bd880c0000	              cmp dword [rbp + 0xc88], 0	      8286	elf.c	FUNCTION_97	IF_1	CALL_1
0x400bca7	     0xf846d030000	                            je 0x400c01a	      8286	elf.c	FUNCTION_97	IF_1	CALL_1
0x400bcad	    0x8b8574020000	           mov eax, dword [rbp + 0x274] 	      8296	elf.c	FUNCTION_97	IF_1	IF_2
0x400bcb3	            0x85c0	                           test eax, eax	      8296	elf.c	FUNCTION_97	IF_1	IF_2
0x400bcb5	            0x7420	                            je 0x400bcd7	      8296	elf.c	FUNCTION_97	IF_1	IF_2
0x400bcb7	    0x488bbd680200	           mov rdi, qword [rbp + 0x268] 	      8297	elf.c	FUNCTION_97	IF_1	IF_2
0x400bcbe	            0x89c0	                            mov eax, eax	      8297	elf.c	FUNCTION_97	IF_1	IF_2
0x400bcc0	          0x4889fa	                            mov rdx, rdi	      8297	elf.c	FUNCTION_97	IF_1	IF_2
0x400bcc3	        0x48c1ea04	                              shr rdx, 4	      8297	elf.c	FUNCTION_97	IF_1	IF_2
0x400bcc7	    0x41bf00000000	                             mov r15d, 0	      8283	elf.c	FUNCTION_97
0x400bccd	          0x4839d0	                            cmp rax, rdx	      8297	elf.c	FUNCTION_97	IF_1	IF_2
0x400bcd0	            0x773c	                            ja 0x400bd0e	      8297	elf.c	FUNCTION_97	IF_1	IF_2
0x400bcd2	      0xe994000000	                           jmp 0x400bd6b	      8297	elf.c	FUNCTION_97	IF_1	IF_2
0x400bcd7	    0x41bf00000000	                             mov r15d, 0	      8283	elf.c	FUNCTION_97
0x400bcdd	            0xeb2f	                           jmp 0x400bd0e	      8283	elf.c	FUNCTION_97
0x400bcdf	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      8283	elf.c	FUNCTION_97
0x400bce4	            0xeb28	                           jmp 0x400bd0e	      8283	elf.c	FUNCTION_97
0x400bce6	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      8283	elf.c	FUNCTION_97
0x400bceb	            0xeb21	                           jmp 0x400bd0e	      8283	elf.c	FUNCTION_97
0x400bced	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      8283	elf.c	FUNCTION_97
0x400bcf2	            0xeb1a	                           jmp 0x400bd0e	      8283	elf.c	FUNCTION_97
0x400bcf4	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      8283	elf.c	FUNCTION_97
0x400bcf9	            0xeb13	                           jmp 0x400bd0e	      8283	elf.c	FUNCTION_97
0x400bcfb	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      8283	elf.c	FUNCTION_97
0x400bd00	            0xeb0c	                           jmp 0x400bd0e	      8283	elf.c	FUNCTION_97
0x400bd02	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      8283	elf.c	FUNCTION_97
0x400bd07	            0xeb05	                           jmp 0x400bd0e	      8283	elf.c	FUNCTION_97
0x400bd09	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      8283	elf.c	FUNCTION_97
0x400bd0e	      0xba05000000	                              mov edx, 5	      8301	elf.c	FUNCTION_97	IF_1	IF_2	CALL_4
0x400bd13	      0xbe00000000	                              mov esi, 0	      8301	elf.c	FUNCTION_97	IF_1	IF_2	CALL_4
0x400bd18	      0xbf00000000	                              mov edi, 0	      8301	elf.c	FUNCTION_97	IF_1	IF_2	CALL_4
0x400bd1d	      0xe800000000	                          call 0x400bd22	      8301	elf.c	FUNCTION_97	IF_1	IF_2	CALL_4
0x400bd22	          0x4889de	                            mov rsi, rbx	      8300	elf.c	FUNCTION_97	IF_1	IF_2	CALL_3
0x400bd25	          0x4889c7	                            mov rdi, rax	      8300	elf.c	FUNCTION_97	IF_1	IF_2	CALL_3
0x400bd28	      0xb800000000	                              mov eax, 0	      8300	elf.c	FUNCTION_97	IF_1	IF_2	CALL_3
0x400bd2d	      0xe800000000	                          call 0x400bd32	      8300	elf.c	FUNCTION_97	IF_1	IF_2	CALL_3
0x400bd32	      0xbf11000000	                           mov edi, 0x11	      8302	elf.c	FUNCTION_97	IF_1	IF_2	CALL_5
0x400bd37	      0xe800000000	                          call 0x400bd3c	      8302	elf.c	FUNCTION_97	IF_1	IF_2	CALL_5
0x400bd3c	            0xeb05	                           jmp 0x400bd43	      8302	elf.c	FUNCTION_97	IF_1	IF_2	CALL_5
0x400bd3e	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      8302	elf.c	FUNCTION_97	IF_1	IF_2	CALL_5
0x400bd43	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8304	elf.c	FUNCTION_97	IF_1	IF_2	CALL_6
0x400bd4a	    0x48c780500300	              mov qword [rax + 0x350], 0	      8304	elf.c	FUNCTION_97	IF_1	IF_2	CALL_6
0x400bd55	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8305	elf.c	FUNCTION_97	IF_1	IF_2	CALL_7
0x400bd5c	    0xc78044030000	              mov dword [rax + 0x344], 0	      8305	elf.c	FUNCTION_97	IF_1	IF_2	CALL_7
0x400bd66	      0xe937080000	                           jmp 0x400c5a2	      8306	elf.c	FUNCTION_97	IF_1	IF_2
0x400bd6b	      0xe800000000	                          call 0x400bd70	      8309	elf.c	FUNCTION_97	IF_1	CALL_8
0x400bd70	          0x4989c7	                            mov r15, rax	      8309	elf.c	FUNCTION_97	IF_1	CALL_8
0x400bd73	          0x4885c0	                           test rax, rax	      8310	elf.c	FUNCTION_97	IF_1	IF_3
0x400bd76	            0x74cb	                            je 0x400bd43	      8310	elf.c	FUNCTION_97	IF_1	IF_3
0x400bd78	    0x488bb5600200	           mov rsi, qword [rbp + 0x260] 	      8313	elf.c	FUNCTION_97	IF_1	IF_4	CALL_9
0x400bd7f	      0xba00000000	                              mov edx, 0	      8313	elf.c	FUNCTION_97	IF_1	IF_4	CALL_9
0x400bd84	          0x4889df	                            mov rdi, rbx	      8313	elf.c	FUNCTION_97	IF_1	IF_4	CALL_9
0x400bd87	      0xe800000000	                          call 0x400bd8c	      8313	elf.c	FUNCTION_97	IF_1	IF_4	CALL_9
0x400bd8c	            0x85c0	                           test eax, eax	      8313	elf.c	FUNCTION_97	IF_1	IF_4	CALL_9
0x400bd8e	            0x75b3	                           jne 0x400bd43	      8313	elf.c	FUNCTION_97	IF_1	IF_4	CALL_9
0x400bd90	    0x488bb5680200	           mov rsi, qword [rbp + 0x268] 	      8314	elf.c	FUNCTION_97	IF_1	IF_4	CALL_10
0x400bd97	          0x4889da	                            mov rdx, rbx	      8314	elf.c	FUNCTION_97	IF_1	IF_4	CALL_10
0x400bd9a	          0x4c89ff	                            mov rdi, r15	      8314	elf.c	FUNCTION_97	IF_1	IF_4	CALL_10
0x400bd9d	      0xe800000000	                          call 0x400bda2	      8314	elf.c	FUNCTION_97	IF_1	IF_4	CALL_10
0x400bda2	    0x483b85680200	           cmp rax, qword [rbp + 0x268] 	      8314	elf.c	FUNCTION_97	IF_1	IF_4	CALL_10
0x400bda9	            0x7598	                           jne 0x400bd43	      8314	elf.c	FUNCTION_97	IF_1	IF_4	CALL_10
0x400bdab	    0x4c8ba3f80000	            mov r12, qword [rbx + 0xf8] 	      8317	elf.c	FUNCTION_97	IF_1	CALL_11
0x400bdb2	    0x8bb574020000	           mov esi, dword [rbp + 0x274] 	      8318	elf.c	FUNCTION_97	IF_1	CALL_12
0x400bdb8	      0xba40000000	                           mov edx, 0x40	      8318	elf.c	FUNCTION_97	IF_1	CALL_12
0x400bdbd	          0x4889df	                            mov rdi, rbx	      8318	elf.c	FUNCTION_97	IF_1	CALL_12
0x400bdc0	      0xe800000000	                          call 0x400bdc5	      8318	elf.c	FUNCTION_97	IF_1	CALL_12
0x400bdc5	    0x498984245003	            mov qword [r12 + 0x350], rax	      8317	elf.c	FUNCTION_97	IF_1	CALL_11
0x400bdcd	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8320	elf.c	FUNCTION_97	IF_1	IF_5	CALL_13
0x400bdd4	    0x488b80500300	           mov rax, qword [rax + 0x350] 	      8320	elf.c	FUNCTION_97	IF_1	IF_5	CALL_13
0x400bddb	          0x4889c1	                            mov rcx, rax	      8320	elf.c	FUNCTION_97	IF_1	IF_5	CALL_13
0x400bdde	          0x4885c0	                           test rax, rax	      8320	elf.c	FUNCTION_97	IF_1	IF_5	CALL_13
0x400bde1	     0xf845cffffff	                            je 0x400bd43	      8320	elf.c	FUNCTION_97	IF_1	IF_5	CALL_13
0x400bde7	    0x488b85680200	           mov rax, qword [rbp + 0x268] 	      8325	elf.c	FUNCTION_97	IF_1
0x400bdee	      0x498d4407f0	             lea rax, [r15 + rax - 0x10]	      8325	elf.c	FUNCTION_97	IF_1
0x400bdf3	      0x4889442418	             mov qword [rsp + 0x18], rax	      8325	elf.c	FUNCTION_97	IF_1
0x400bdf8	    0x83bd74020000	              cmp dword [rbp + 0x274], 0	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x400bdff	     0xf84e0010000	                            je 0x400bfe5	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x400be05	      0x4c897c2430	             mov qword [rsp + 0x30], r15	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x400be0a	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x400be12	    0x41be00000000	                             mov r14d, 0	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x400be18	      0x4889442420	             mov qword [rsp + 0x20], rax	      8356	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400be1d	      0x4c897c2410	             mov qword [rsp + 0x10], r15	      8356	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400be22	      0x48896c2408	                mov qword [rsp + 8], rbp	      8356	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400be27	          0x4989cf	                            mov r15, rcx	      8356	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400be2a	      0x44896c2440	            mov dword [rsp + 0x40], r13d	      8356	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400be2f	            0xeb03	                           jmp 0x400be34	      8356	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400be31	          0x4989d7	                            mov r15, rdx	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x400be34	          0x4c89fa	                            mov rdx, r15	      8334	elf.c	FUNCTION_97	IF_1	FOR_1	CALL_16
0x400be37	      0x488b6c2430	            mov rbp, qword [rsp + 0x30] 	      8334	elf.c	FUNCTION_97	IF_1	FOR_1	CALL_16
0x400be3c	          0x4889ee	                            mov rsi, rbp	      8334	elf.c	FUNCTION_97	IF_1	FOR_1	CALL_16
0x400be3f	          0x4889df	                            mov rdi, rbx	      8334	elf.c	FUNCTION_97	IF_1	FOR_1	CALL_16
0x400be42	      0xe800000000	                          call 0x400be47	      8334	elf.c	FUNCTION_97	IF_1	FOR_1	CALL_16
0x400be47	        0x49895f20	             mov qword [r15 + 0x20], rbx	      8336	elf.c	FUNCTION_97	IF_1	FOR_1
0x400be4b	      0x488b442408	                mov rax, qword [rsp + 8]	      8339	elf.c	FUNCTION_97	IF_1	FOR_1	CALL_17
0x400be50	    0x8bb070020000	           mov esi, dword [rax + 0x270] 	      8339	elf.c	FUNCTION_97	IF_1	FOR_1	CALL_17
0x400be56	        0x418b5708	                mov edx, dword [r15 + 8]	      8339	elf.c	FUNCTION_97	IF_1	FOR_1	CALL_17
0x400be5a	          0x4889df	                            mov rdi, rbx	      8339	elf.c	FUNCTION_97	IF_1	FOR_1	CALL_17
0x400be5d	      0xe800000000	                          call 0x400be62	      8339	elf.c	FUNCTION_97	IF_1	FOR_1	CALL_17
0x400be62	        0x49894728	             mov qword [r15 + 0x28], rax	      8338	elf.c	FUNCTION_97	IF_1	FOR_1
0x400be66	          0x4885c0	                           test rax, rax	      8341	elf.c	FUNCTION_97	IF_1	FOR_1	IF_6
0x400be69	     0xf8470feffff	                            je 0x400bcdf	      8341	elf.c	FUNCTION_97	IF_1	FOR_1	IF_6
0x400be6f	      0x410fb74702	               movzx eax, word [r15 + 2]	      8344	elf.c	FUNCTION_97	IF_1	FOR_1	IF_7
0x400be74	          0x6685c0	                             test ax, ax	      8344	elf.c	FUNCTION_97	IF_1	FOR_1	IF_7
0x400be77	            0x7524	                           jne 0x400be9d	      8344	elf.c	FUNCTION_97	IF_1	FOR_1	IF_7
0x400be79	    0x49c747300000	               mov qword [r15 + 0x30], 0	      8345	elf.c	FUNCTION_97	IF_1	FOR_1	IF_7
0x400be81	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      8356	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400be86	          0x4829e8	                            sub rax, rbp	      8356	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400be89	      0x4889442438	             mov qword [rsp + 0x38], rax	      8356	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400be8e	        0x49394710	            cmp qword [r15 + 0x10], rax 	      8355	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400be92	     0xf874efeffff	                            ja 0x400bce6	      8355	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400be98	      0xe9ed000000	                           jmp 0x400bf8a	      8355	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400be9d	           0xfb7f0	                           movzx esi, ax	      8349	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1	CALL_18
0x400bea0	      0xba30000000	                           mov edx, 0x30	      8349	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1	CALL_18
0x400bea5	          0x4889df	                            mov rdi, rbx	      8349	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1	CALL_18
0x400bea8	      0xe800000000	                          call 0x400bead	      8349	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1	CALL_18
0x400bead	          0x4889c5	                            mov rbp, rax	      8349	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1	CALL_18
0x400beb0	        0x49894730	             mov qword [r15 + 0x30], rax	      8348	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1
0x400beb4	          0x4885c0	                           test rax, rax	      8351	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1	IF_8
0x400beb7	     0xf8481feffff	                            je 0x400bd3e	      8351	elf.c	FUNCTION_97	IF_1	FOR_1	ELSE_1	IF_8
0x400bebd	        0x4d8b6710	            mov r12, qword [r15 + 0x10] 	      8355	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400bec1	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      8356	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400bec6	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      8356	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400becb	          0x4829c1	                            sub rcx, rax	      8356	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400bece	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      8356	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400bed3	          0x4939cc	                            cmp r12, rcx	      8355	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400bed6	     0xf8711feffff	                            ja 0x400bced	      8355	elf.c	FUNCTION_97	IF_1	FOR_1	IF_9
0x400bedc	          0x4901c4	                            add r12, rax	      8359	elf.c	FUNCTION_97	IF_1	FOR_1
0x400bedf	    0x6641837f0200	                   cmp word [r15 + 2], 0	      8362	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x400bee5	     0xf849f000000	                            je 0x400bf8a	      8362	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x400beeb	    0x41bd00000000	                             mov r13d, 0	      8362	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x400bef1	            0xeb03	                           jmp 0x400bef6	      8362	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x400bef3	          0x4889d5	                            mov rbp, rdx	      8362	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x400bef6	          0x4889ea	                            mov rdx, rbp	      8364	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	CALL_19
0x400bef9	          0x4c89e6	                            mov rsi, r12	      8364	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	CALL_19
0x400befc	          0x4889df	                            mov rdi, rbx	      8364	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	CALL_19
0x400beff	      0xe800000000	                          call 0x400bf04	      8364	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	CALL_19
0x400bf04	      0x488b442408	                mov rax, qword [rsp + 8]	      8367	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	CALL_20
0x400bf09	    0x8bb070020000	           mov esi, dword [rax + 0x270] 	      8367	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	CALL_20
0x400bf0f	          0x8b5510	            mov edx, dword [rbp + 0x10] 	      8367	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	CALL_20
0x400bf12	          0x4889df	                            mov rdi, rbx	      8367	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	CALL_20
0x400bf15	      0xe800000000	                          call 0x400bf1a	      8367	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	CALL_20
0x400bf1a	        0x48894520	            mov qword [rbp + 0x20], rax 	      8366	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x400bf1e	          0x4885c0	                           test rax, rax	      8369	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_10
0x400bf21	     0xf84cdfdffff	                            je 0x400bcf4	      8369	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_10
0x400bf27	         0xfb7450a	            movzx eax, word [rbp + 0xa] 	      8372	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_11
0x400bf2b	          0x4139c6	                           cmp r14d, eax	      8372	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_11
0x400bf2e	        0x440f42f0	                         cmovb r14d, eax	      8372	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_11
0x400bf32	    0x48c745280000	               mov qword [rbp + 0x28], 0	      8375	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x400bf3a	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      8376	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_12
0x400bf3e	          0x4885c0	                           test rax, rax	      8376	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_12
0x400bf41	            0x750b	                           jne 0x400bf4e	      8376	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_12
0x400bf43	        0x4183c501	                             add r13d, 1	      8378	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_12
0x400bf47	      0x6645896f02	                mov word [r15 + 2], r13w	      8378	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_12
0x400bf4c	            0xeb3c	                           jmp 0x400bf8a	      8379	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_12
0x400bf4e	        0x4183c501	                             add r13d, 1	      8381	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_13
0x400bf52	      0x410fb75702	               movzx edx, word [r15 + 2]	      8381	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_13
0x400bf57	          0x4139d5	                           cmp r13d, edx	      8381	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_13
0x400bf5a	     0xf8377060000	                           jae 0x400c5d7	      8381	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_13
0x400bf60	        0x488d5530	                   lea rdx, [rbp + 0x30]	      8381	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_13
0x400bf64	        0x48895528	            mov qword [rbp + 0x28], rdx 	      8382	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_13
0x400bf68	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400bf6d	          0x4c29e1	                            sub rcx, r12	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400bf70	          0x4839c8	                            cmp rax, rcx	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400bf73	     0xf8782fdffff	                            ja 0x400bcfb	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400bf79	          0x4901c4	                            add r12, rax	      8388	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x400bf7c	      0x410fb74702	               movzx eax, word [r15 + 2]	      8362	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x400bf81	          0x4439e8	                           cmp eax, r13d	      8362	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x400bf84	     0xf8769ffffff	                            ja 0x400bef3	      8362	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2
0x400bf8a	    0x49c747380000	               mov qword [r15 + 0x38], 0	      8392	elf.c	FUNCTION_97	IF_1	FOR_1
0x400bf92	        0x498b4718	            mov rax, qword [r15 + 0x18] 	      8393	elf.c	FUNCTION_97	IF_1	FOR_1	IF_15
0x400bf96	          0x4885c0	                           test rax, rax	      8393	elf.c	FUNCTION_97	IF_1	FOR_1	IF_15
0x400bf99	            0x745a	                            je 0x400bff5	      8393	elf.c	FUNCTION_97	IF_1	FOR_1	IF_15
0x400bf9b	      0x8344242c01	               add dword [rsp + 0x2c], 1	      8395	elf.c	FUNCTION_97	IF_1	FOR_1	IF_16
0x400bfa0	        0x8b4c242c	            mov ecx, dword [rsp + 0x2c] 	      8395	elf.c	FUNCTION_97	IF_1	FOR_1	IF_16
0x400bfa4	      0x488b742408	                mov rsi, qword [rsp + 8]	      8395	elf.c	FUNCTION_97	IF_1	FOR_1	IF_16
0x400bfa9	    0x3b8e74020000	           cmp ecx, dword [rsi + 0x274] 	      8395	elf.c	FUNCTION_97	IF_1	FOR_1	IF_16
0x400bfaf	     0xf8338060000	                           jae 0x400c5ed	      8395	elf.c	FUNCTION_97	IF_1	FOR_1	IF_16
0x400bfb5	        0x498d5740	                   lea rdx, [r15 + 0x40]	      8395	elf.c	FUNCTION_97	IF_1	FOR_1	IF_16
0x400bfb9	        0x49895738	             mov qword [r15 + 0x38], rdx	      8396	elf.c	FUNCTION_97	IF_1	FOR_1	IF_16
0x400bfbd	      0x483b442438	            cmp rax, qword [rsp + 0x38] 	      8398	elf.c	FUNCTION_97	IF_1	FOR_1	IF_17
0x400bfc2	     0xf873afdffff	                            ja 0x400bd02	      8398	elf.c	FUNCTION_97	IF_1	FOR_1	IF_17
0x400bfc8	      0x4801442430	            add qword [rsp + 0x30], rax 	      8402	elf.c	FUNCTION_97	IF_1	FOR_1
0x400bfcd	    0x398e74020000	           cmp dword [rsi + 0x274], ecx 	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x400bfd3	     0xf8758feffff	                            ja 0x400be31	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x400bfd9	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x400bfde	      0x448b6c2440	           mov r13d, dword [rsp + 0x40] 	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x400bfe3	            0xeb1a	                           jmp 0x400bfff	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x400bfe5	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      8328	elf.c	FUNCTION_97	IF_1	FOR_1
0x400bfed	    0x41be00000000	                             mov r14d, 0	      8284	elf.c	FUNCTION_97
0x400bff3	            0xeb0a	                           jmp 0x400bfff	      8284	elf.c	FUNCTION_97
0x400bff5	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      8284	elf.c	FUNCTION_97
0x400bffa	      0x448b6c2440	           mov r13d, dword [rsp + 0x40] 	      8284	elf.c	FUNCTION_97
0x400bfff	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8405	elf.c	FUNCTION_97	IF_1	CALL_21
0x400c006	        0x8b4c242c	            mov ecx, dword [rsp + 0x2c] 	      8405	elf.c	FUNCTION_97	IF_1	CALL_21
0x400c00a	    0x898844030000	            mov dword [rax + 0x344], ecx	      8405	elf.c	FUNCTION_97	IF_1	CALL_21
0x400c010	          0x4c89ff	                            mov rdi, r15	      8407	elf.c	FUNCTION_97	IF_1	CALL_22
0x400c013	      0xe800000000	                          call 0x400c018	      8407	elf.c	FUNCTION_97	IF_1	CALL_22
0x400c018	            0xeb06	                           jmp 0x400c020	      8407	elf.c	FUNCTION_97	IF_1	CALL_22
0x400c01a	    0x41be00000000	                             mov r14d, 0	      8284	elf.c	FUNCTION_97
0x400c020	    0x488babf80000	            mov rbp, qword [rbx + 0xf8] 	      8411	elf.c	FUNCTION_97	IF_18	CALL_23
0x400c027	    0x83bd840c0000	              cmp dword [rbp + 0xc84], 0	      8411	elf.c	FUNCTION_97	IF_18	CALL_23
0x400c02e	     0xf84a0040000	                            je 0x400c4d4	      8411	elf.c	FUNCTION_97	IF_18	CALL_23
0x400c034	    0x83bdc4020000	              cmp dword [rbp + 0x2c4], 0	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400c03b	            0x7418	                            je 0x400c055	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400c03d	    0x488bbdb80200	           mov rdi, qword [rbp + 0x2b8] 	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400c044	    0x41bf00000000	                             mov r15d, 0	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400c04a	        0x4883ff13	                           cmp rdi, 0x13	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400c04e	            0x7643	                           jbe 0x400c093	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400c050	      0xe9ab000000	                           jmp 0x400c100	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400c055	    0x41bf00000000	                             mov r15d, 0	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400c05b	            0xeb36	                           jmp 0x400c093	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400c05d	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400c062	            0xeb2f	                           jmp 0x400c093	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400c064	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400c069	            0xeb28	                           jmp 0x400c093	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400c06b	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400c070	            0xeb21	                           jmp 0x400c093	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400c072	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400c077	            0xeb1a	                           jmp 0x400c093	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400c079	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400c07e	            0xeb13	                           jmp 0x400c093	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400c080	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400c085	            0xeb0c	                           jmp 0x400c093	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400c087	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400c08c	            0xeb05	                           jmp 0x400c093	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400c08e	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      8424	elf.c	FUNCTION_97	IF_18	IF_19
0x400c093	      0xba05000000	                              mov edx, 5	      8428	elf.c	FUNCTION_97	IF_18	IF_19	CALL_26
0x400c098	      0xbe00000000	                              mov esi, 0	      8428	elf.c	FUNCTION_97	IF_18	IF_19	CALL_26
0x400c09d	      0xbf00000000	                              mov edi, 0	      8428	elf.c	FUNCTION_97	IF_18	IF_19	CALL_26
0x400c0a2	      0xe800000000	                          call 0x400c0a7	      8428	elf.c	FUNCTION_97	IF_18	IF_19	CALL_26
0x400c0a7	          0x4889de	                            mov rsi, rbx	      8427	elf.c	FUNCTION_97	IF_18	IF_19	CALL_25
0x400c0aa	          0x4889c7	                            mov rdi, rax	      8427	elf.c	FUNCTION_97	IF_18	IF_19	CALL_25
0x400c0ad	      0xb800000000	                              mov eax, 0	      8427	elf.c	FUNCTION_97	IF_18	IF_19	CALL_25
0x400c0b2	      0xe800000000	                          call 0x400c0b7	      8427	elf.c	FUNCTION_97	IF_18	IF_19	CALL_25
0x400c0b7	      0xbf11000000	                           mov edi, 0x11	      8429	elf.c	FUNCTION_97	IF_18	IF_19	CALL_27
0x400c0bc	      0xe800000000	                          call 0x400c0c1	      8429	elf.c	FUNCTION_97	IF_18	IF_19	CALL_27
0x400c0c1	            0xeb15	                           jmp 0x400c0d8	      8429	elf.c	FUNCTION_97	IF_18	IF_19	CALL_27
0x400c0c3	    0x41bf00000000	                             mov r15d, 0	      8429	elf.c	FUNCTION_97	IF_18	IF_19	CALL_27
0x400c0c9	            0xeb0d	                           jmp 0x400c0d8	      8429	elf.c	FUNCTION_97	IF_18	IF_19	CALL_27
0x400c0cb	    0x41bf00000000	                             mov r15d, 0	      8429	elf.c	FUNCTION_97	IF_18	IF_19	CALL_27
0x400c0d1	            0xeb05	                           jmp 0x400c0d8	      8429	elf.c	FUNCTION_97	IF_18	IF_19	CALL_27
0x400c0d3	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      8429	elf.c	FUNCTION_97	IF_18	IF_19	CALL_27
0x400c0d8	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8431	elf.c	FUNCTION_97	IF_18	IF_19	CALL_28
0x400c0df	    0x48c780480300	              mov qword [rax + 0x348], 0	      8431	elf.c	FUNCTION_97	IF_18	IF_19	CALL_28
0x400c0ea	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8432	elf.c	FUNCTION_97	IF_18	IF_19	CALL_29
0x400c0f1	    0xc78040030000	              mov dword [rax + 0x340], 0	      8432	elf.c	FUNCTION_97	IF_18	IF_19	CALL_29
0x400c0fb	      0xe9a2040000	                           jmp 0x400c5a2	      8432	elf.c	FUNCTION_97	IF_18	IF_19	CALL_29
0x400c100	      0xe800000000	                          call 0x400c105	      8436	elf.c	FUNCTION_97	IF_18	CALL_30
0x400c105	          0x4989c7	                            mov r15, rax	      8436	elf.c	FUNCTION_97	IF_18	CALL_30
0x400c108	          0x4885c0	                           test rax, rax	      8437	elf.c	FUNCTION_97	IF_18	IF_20
0x400c10b	            0x74cb	                            je 0x400c0d8	      8437	elf.c	FUNCTION_97	IF_18	IF_20
0x400c10d	    0x488bb5b00200	           mov rsi, qword [rbp + 0x2b0] 	      8439	elf.c	FUNCTION_97	IF_18	IF_21	CALL_31
0x400c114	      0xba00000000	                              mov edx, 0	      8439	elf.c	FUNCTION_97	IF_18	IF_21	CALL_31
0x400c119	          0x4889df	                            mov rdi, rbx	      8439	elf.c	FUNCTION_97	IF_18	IF_21	CALL_31
0x400c11c	      0xe800000000	                          call 0x400c121	      8439	elf.c	FUNCTION_97	IF_18	IF_21	CALL_31
0x400c121	            0x85c0	                           test eax, eax	      8439	elf.c	FUNCTION_97	IF_18	IF_21	CALL_31
0x400c123	            0x75b3	                           jne 0x400c0d8	      8439	elf.c	FUNCTION_97	IF_18	IF_21	CALL_31
0x400c125	    0x488bb5b80200	           mov rsi, qword [rbp + 0x2b8] 	      8440	elf.c	FUNCTION_97	IF_18	IF_21	CALL_32
0x400c12c	          0x4889da	                            mov rdx, rbx	      8440	elf.c	FUNCTION_97	IF_18	IF_21	CALL_32
0x400c12f	          0x4c89ff	                            mov rdi, r15	      8440	elf.c	FUNCTION_97	IF_18	IF_21	CALL_32
0x400c132	      0xe800000000	                          call 0x400c137	      8440	elf.c	FUNCTION_97	IF_18	IF_21	CALL_32
0x400c137	      0x4889442408	                mov qword [rsp + 8], rax	      8440	elf.c	FUNCTION_97	IF_18	IF_21	CALL_32
0x400c13c	    0x483b85b80200	           cmp rax, qword [rbp + 0x2b8] 	      8440	elf.c	FUNCTION_97	IF_18	IF_21	CALL_32
0x400c143	            0x7593	                           jne 0x400c0d8	      8440	elf.c	FUNCTION_97	IF_18	IF_21	CALL_32
0x400c145	      0x498d4407ec	             lea rax, [r15 + rax - 0x14]	      8445	elf.c	FUNCTION_97	IF_18
0x400c14a	    0x83bdc4020000	              cmp dword [rbp + 0x2c4], 0	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400c151	     0xf848d000000	                            je 0x400c1e4	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400c157	          0x4d89fc	                            mov r12, r15	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400c15a	      0xbe00000000	                              mov esi, 0	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400c15f	      0xb900000000	                              mov ecx, 0	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400c164	      0x4c897c2410	             mov qword [rsp + 0x10], r15	      8457	elf.c	FUNCTION_97	IF_18	FOR_3	CALL_34
0x400c169	      0x4489742418	            mov dword [rsp + 0x18], r14d	      8457	elf.c	FUNCTION_97	IF_18	FOR_3	CALL_34
0x400c16e	          0x4989c7	                            mov r15, rax	      8457	elf.c	FUNCTION_97	IF_18	FOR_3	CALL_34
0x400c171	          0x4189ce	                           mov r14d, ecx	      8457	elf.c	FUNCTION_97	IF_18	FOR_3	CALL_34
0x400c174	      0x44896c2420	            mov dword [rsp + 0x20], r13d	      8457	elf.c	FUNCTION_97	IF_18	FOR_3	CALL_34
0x400c179	          0x4189f5	                           mov r13d, esi	      8457	elf.c	FUNCTION_97	IF_18	FOR_3	CALL_34
0x400c17c	      0x488d542450	                   lea rdx, [rsp + 0x50]	      8457	elf.c	FUNCTION_97	IF_18	FOR_3	CALL_34
0x400c181	          0x4c89e6	                            mov rsi, r12	      8457	elf.c	FUNCTION_97	IF_18	FOR_3	CALL_34
0x400c184	          0x4889df	                            mov rdi, rbx	      8457	elf.c	FUNCTION_97	IF_18	FOR_3	CALL_34
0x400c187	      0xe800000000	                          call 0x400c18c	      8457	elf.c	FUNCTION_97	IF_18	FOR_3	CALL_34
0x400c18c	       0xfb7442454	           movzx eax, word [rsp + 0x54] 	      8459	elf.c	FUNCTION_97	IF_18	FOR_3	IF_22
0x400c191	        0x6625ff7f	                          and ax, 0x7fff	      8459	elf.c	FUNCTION_97	IF_18	FOR_3	IF_22
0x400c195	     0xf84c2feffff	                            je 0x400c05d	      8459	elf.c	FUNCTION_97	IF_18	FOR_3	IF_22
0x400c19b	           0xfb7c0	                           movzx eax, ax	      8461	elf.c	FUNCTION_97	IF_18	FOR_3	IF_23
0x400c19e	          0x4139c5	                           cmp r13d, eax	      8461	elf.c	FUNCTION_97	IF_18	FOR_3	IF_23
0x400c1a1	        0x440f42e8	                         cmovb r13d, eax	      8461	elf.c	FUNCTION_97	IF_18	FOR_3	IF_23
0x400c1a5	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      8464	elf.c	FUNCTION_97	IF_18	FOR_3	IF_24
0x400c1aa	          0x4885c0	                           test rax, rax	      8464	elf.c	FUNCTION_97	IF_18	FOR_3	IF_24
0x400c1ad	            0x743f	                            je 0x400c1ee	      8464	elf.c	FUNCTION_97	IF_18	FOR_3	IF_24
0x400c1af	          0x4c89fa	                            mov rdx, r15	      8467	elf.c	FUNCTION_97	IF_18	FOR_3	IF_25
0x400c1b2	          0x4c29e2	                            sub rdx, r12	      8467	elf.c	FUNCTION_97	IF_18	FOR_3	IF_25
0x400c1b5	          0x4839d0	                            cmp rax, rdx	      8467	elf.c	FUNCTION_97	IF_18	FOR_3	IF_25
0x400c1b8	     0xf87a6feffff	                            ja 0x400c064	      8467	elf.c	FUNCTION_97	IF_18	FOR_3	IF_25
0x400c1be	          0x4901c4	                            add r12, rax	      8471	elf.c	FUNCTION_97	IF_18	FOR_3
0x400c1c1	        0x4183c601	                             add r14d, 1	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400c1c5	    0x4439b5c40200	          cmp dword [rbp + 0x2c4], r14d 	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400c1cc	            0x77ae	                            ja 0x400c17c	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400c1ce	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400c1d3	      0x448b742418	           mov r14d, dword [rsp + 0x18] 	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400c1d8	      0x44896c2410	            mov dword [rsp + 0x10], r13d	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400c1dd	      0x448b6c2420	           mov r13d, dword [rsp + 0x20] 	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400c1e2	            0xeb1e	                           jmp 0x400c202	      8455	elf.c	FUNCTION_97	IF_18	FOR_3
0x400c1e4	    0xc74424100000	               mov dword [rsp + 0x10], 0	      8454	elf.c	FUNCTION_97	IF_18
0x400c1ec	            0xeb14	                           jmp 0x400c202	      8454	elf.c	FUNCTION_97	IF_18
0x400c1ee	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      8454	elf.c	FUNCTION_97	IF_18
0x400c1f3	      0x448b742418	           mov r14d, dword [rsp + 0x18] 	      8454	elf.c	FUNCTION_97	IF_18
0x400c1f8	      0x44896c2410	            mov dword [rsp + 0x10], r13d	      8454	elf.c	FUNCTION_97	IF_18
0x400c1fd	      0x448b6c2420	           mov r13d, dword [rsp + 0x20] 	      8454	elf.c	FUNCTION_97	IF_18
0x400c202	          0x4585ed	                         test r13d, r13d	      8475	elf.c	FUNCTION_97	IF_18	IF_26
0x400c205	            0x7420	                            je 0x400c227	      8475	elf.c	FUNCTION_97	IF_18	IF_26
0x400c207	      0x443b742410	           cmp r14d, dword [rsp + 0x10] 	      8477	elf.c	FUNCTION_97	IF_18	IF_26	IF_27
0x400c20c	            0x760b	                           jbe 0x400c219	      8477	elf.c	FUNCTION_97	IF_18	IF_26	IF_27
0x400c20e	        0x4183c601	                             add r14d, 1	      8478	elf.c	FUNCTION_97	IF_18	IF_26	IF_27
0x400c212	      0x4489742410	            mov dword [rsp + 0x10], r14d	      8478	elf.c	FUNCTION_97	IF_18	IF_26	IF_27
0x400c217	            0xeb0e	                           jmp 0x400c227	      8478	elf.c	FUNCTION_97	IF_18	IF_26	IF_27
0x400c219	      0x448b742410	           mov r14d, dword [rsp + 0x10] 	      8480	elf.c	FUNCTION_97	IF_18	IF_26	ELSE_2
0x400c21e	        0x4183c601	                             add r14d, 1	      8480	elf.c	FUNCTION_97	IF_18	IF_26	ELSE_2
0x400c222	      0x4489742410	            mov dword [rsp + 0x10], r14d	      8480	elf.c	FUNCTION_97	IF_18	IF_26	ELSE_2
0x400c227	    0x4c8ba3f80000	            mov r12, qword [rbx + 0xf8] 	      8483	elf.c	FUNCTION_97	IF_18	CALL_35
0x400c22e	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      8484	elf.c	FUNCTION_97	IF_18	CALL_36
0x400c232	      0x4889442448	             mov qword [rsp + 0x48], rax	      8484	elf.c	FUNCTION_97	IF_18	CALL_36
0x400c237	      0xba48000000	                           mov edx, 0x48	      8484	elf.c	FUNCTION_97	IF_18	CALL_36
0x400c23c	          0x4889c6	                            mov rsi, rax	      8484	elf.c	FUNCTION_97	IF_18	CALL_36
0x400c23f	          0x4889df	                            mov rdi, rbx	      8484	elf.c	FUNCTION_97	IF_18	CALL_36
0x400c242	      0xe800000000	                          call 0x400c247	      8484	elf.c	FUNCTION_97	IF_18	CALL_36
0x400c247	    0x498984244803	            mov qword [r12 + 0x348], rax	      8483	elf.c	FUNCTION_97	IF_18	CALL_35
0x400c24f	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8485	elf.c	FUNCTION_97	IF_18	IF_28	CALL_37
0x400c256	    0x4883b8480300	              cmp qword [rax + 0x348], 0	      8485	elf.c	FUNCTION_97	IF_18	IF_28	CALL_37
0x400c25e	     0xf8474feffff	                            je 0x400c0d8	      8485	elf.c	FUNCTION_97	IF_18	IF_28	CALL_37
0x400c264	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	      8488	elf.c	FUNCTION_97	IF_18	CALL_38
0x400c268	    0x898840030000	            mov dword [rax + 0x340], ecx	      8488	elf.c	FUNCTION_97	IF_18	CALL_38
0x400c26e	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8491	elf.c	FUNCTION_97	IF_18	CALL_39
0x400c275	    0x488b80480300	           mov rax, qword [rax + 0x348] 	      8491	elf.c	FUNCTION_97	IF_18	CALL_39
0x400c27c	      0x4889442430	             mov qword [rsp + 0x30], rax	      8491	elf.c	FUNCTION_97	IF_18	CALL_39
0x400c281	    0x83bdc4020000	              cmp dword [rbp + 0x2c4], 0	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x400c288	     0xf842f020000	                            je 0x400c4bd	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x400c28e	      0x488b442408	                mov rax, qword [rsp + 8]	      8447	elf.c	FUNCTION_97	IF_18
0x400c293	      0x498d4407f8	                lea rax, [r15 + rax - 8]	      8447	elf.c	FUNCTION_97	IF_18
0x400c298	      0x4889442410	             mov qword [rsp + 0x10], rax	      8447	elf.c	FUNCTION_97	IF_18
0x400c29d	      0x4c897c2420	             mov qword [rsp + 0x20], r15	      8447	elf.c	FUNCTION_97	IF_18
0x400c2a2	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      8447	elf.c	FUNCTION_97	IF_18
0x400c2aa	      0x4889442418	             mov qword [rsp + 0x18], rax	      8520	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400c2af	      0x4c897c2408	                mov qword [rsp + 8], r15	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400c2b4	      0x4489742440	            mov dword [rsp + 0x40], r14d	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400c2b9	      0x44896c2444	            mov dword [rsp + 0x44], r13d	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400c2be	      0x488d542450	                   lea rdx, [rsp + 0x50]	      8498	elf.c	FUNCTION_97	IF_18	FOR_4	CALL_40
0x400c2c3	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	      8498	elf.c	FUNCTION_97	IF_18	FOR_4	CALL_40
0x400c2c8	          0x4c89f6	                            mov rsi, r14	      8498	elf.c	FUNCTION_97	IF_18	FOR_4	CALL_40
0x400c2cb	          0x4889df	                            mov rdi, rbx	      8498	elf.c	FUNCTION_97	IF_18	FOR_4	CALL_40
0x400c2ce	      0xe800000000	                          call 0x400c2d3	      8498	elf.c	FUNCTION_97	IF_18	FOR_4	CALL_40
0x400c2d3	       0xfb7442454	           movzx eax, word [rsp + 0x54] 	      8500	elf.c	FUNCTION_97	IF_18	FOR_4	IF_29
0x400c2d8	        0x6625ff7f	                          and ax, 0x7fff	      8500	elf.c	FUNCTION_97	IF_18	FOR_4	IF_29
0x400c2dc	     0xf8489fdffff	                            je 0x400c06b	      8500	elf.c	FUNCTION_97	IF_18	FOR_4	IF_29
0x400c2e2	           0xfb7c0	                           movzx eax, ax	      8503	elf.c	FUNCTION_97	IF_18	FOR_4
0x400c2e5	        0x488d04c0	                  lea rax, [rax + rax*8]	      8503	elf.c	FUNCTION_97	IF_18	FOR_4
0x400c2e9	    0x488d04c5b8ff	                 lea rax, [rax*8 - 0x48]	      8503	elf.c	FUNCTION_97	IF_18	FOR_4
0x400c2f1	      0x4889442438	             mov qword [rsp + 0x38], rax	      8503	elf.c	FUNCTION_97	IF_18	FOR_4
0x400c2f6	      0x4c8b7c2430	            mov r15, qword [rsp + 0x30] 	      8503	elf.c	FUNCTION_97	IF_18	FOR_4
0x400c2fb	          0x4901c7	                            add r15, rax	      8503	elf.c	FUNCTION_97	IF_18	FOR_4
0x400c2fe	      0x488b442450	            mov rax, qword [rsp + 0x50] 	        53	string3.h	FUNCTION_221	CALL_3
0x400c303	          0x498907	                    mov qword [r15], rax	        53	string3.h	FUNCTION_221	CALL_3
0x400c306	      0x488b442458	            mov rax, qword [rsp + 0x58] 	        53	string3.h	FUNCTION_221	CALL_3
0x400c30b	        0x49894708	                mov qword [r15 + 8], rax	        53	string3.h	FUNCTION_221	CALL_3
0x400c30f	      0x488b442460	            mov rax, qword [rsp + 0x60] 	        53	string3.h	FUNCTION_221	CALL_3
0x400c314	        0x49894710	             mov qword [r15 + 0x10], rax	        53	string3.h	FUNCTION_221	CALL_3
0x400c318	      0x488b442468	            mov rax, qword [rsp + 0x68] 	        53	string3.h	FUNCTION_221	CALL_3
0x400c31d	        0x49894718	             mov qword [r15 + 0x18], rax	        53	string3.h	FUNCTION_221	CALL_3
0x400c321	        0x49895f20	             mov qword [r15 + 0x20], rbx	      8506	elf.c	FUNCTION_97	IF_18	FOR_4
0x400c325	      0x410fb74706	               movzx eax, word [r15 + 6]	      8508	elf.c	FUNCTION_97	IF_18	FOR_4	IF_30
0x400c32a	          0x6685c0	                             test ax, ax	      8508	elf.c	FUNCTION_97	IF_18	FOR_4	IF_30
0x400c32d	            0x751f	                           jne 0x400c34e	      8508	elf.c	FUNCTION_97	IF_18	FOR_4	IF_30
0x400c32f	    0x49c747380000	               mov qword [r15 + 0x38], 0	      8509	elf.c	FUNCTION_97	IF_18	FOR_4	IF_30
0x400c337	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400c33c	          0x4c29f0	                            sub rax, r14	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400c33f	        0x49394710	            cmp qword [r15 + 0x10], rax 	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400c343	     0xf8729fdffff	                            ja 0x400c072	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400c349	      0xe9de000000	                           jmp 0x400c42c	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400c34e	           0xfb7f0	                           movzx esi, ax	      8513	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	CALL_42
0x400c351	      0xba20000000	                           mov edx, 0x20	      8513	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	CALL_42
0x400c356	          0x4889df	                            mov rdi, rbx	      8513	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	CALL_42
0x400c359	      0xe800000000	                          call 0x400c35e	      8513	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	CALL_42
0x400c35e	          0x4989c4	                            mov r12, rax	      8513	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	CALL_42
0x400c361	        0x49894738	             mov qword [r15 + 0x38], rax	      8512	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3
0x400c365	          0x4885c0	                           test rax, rax	      8515	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	IF_31
0x400c368	     0xf8465fdffff	                            je 0x400c0d3	      8515	elf.c	FUNCTION_97	IF_18	FOR_4	ELSE_3	IF_31
0x400c36e	        0x4d8b6f10	            mov r13, qword [r15 + 0x10] 	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400c372	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400c377	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400c37c	          0x4829c8	                            sub rax, rcx	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400c37f	          0x4939c5	                            cmp r13, rax	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400c382	     0xf87f1fcffff	                            ja 0x400c079	      8519	elf.c	FUNCTION_97	IF_18	FOR_4	IF_32
0x400c388	          0x4901cd	                            add r13, rcx	      8523	elf.c	FUNCTION_97	IF_18	FOR_4
0x400c38b	    0x6641837f0600	                   cmp word [r15 + 6], 0	      8526	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x400c391	     0xf8495000000	                            je 0x400c42c	      8526	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x400c397	    0x41be00000000	                             mov r14d, 0	      8526	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x400c39d	            0xeb03	                           jmp 0x400c3a2	      8526	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x400c39f	          0x4989d4	                            mov r12, rdx	      8526	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x400c3a2	          0x4c89e2	                            mov rdx, r12	      8528	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	CALL_43
0x400c3a5	          0x4c89ee	                            mov rsi, r13	      8528	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	CALL_43
0x400c3a8	          0x4889df	                            mov rdi, rbx	      8528	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	CALL_43
0x400c3ab	      0xe800000000	                          call 0x400c3b0	      8528	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	CALL_43
0x400c3b0	    0x8bb5c0020000	           mov esi, dword [rbp + 0x2c0] 	      8531	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	CALL_44
0x400c3b6	        0x418b1424	                    mov edx, dword [r12]	      8531	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	CALL_44
0x400c3ba	          0x4889df	                            mov rdi, rbx	      8531	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	CALL_44
0x400c3bd	      0xe800000000	                          call 0x400c3c2	      8531	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	CALL_44
0x400c3c2	      0x4989442410	             mov qword [r12 + 0x10], rax	      8530	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x400c3c7	          0x4885c0	                           test rax, rax	      8533	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_33
0x400c3ca	     0xf84b0fcffff	                            je 0x400c080	      8533	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_33
0x400c3d0	    0x49c744241800	               mov qword [r12 + 0x18], 0	      8536	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x400c3d9	      0x498b442408	                mov rax, qword [r12 + 8]	      8537	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_34
0x400c3de	          0x4885c0	                           test rax, rax	      8537	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_34
0x400c3e1	            0x750b	                           jne 0x400c3ee	      8537	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_34
0x400c3e3	        0x4183c601	                             add r14d, 1	      8539	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_34
0x400c3e7	      0x6645897706	                mov word [r15 + 6], r14w	      8539	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_34
0x400c3ec	            0xeb3e	                           jmp 0x400c42c	      8540	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_34
0x400c3ee	        0x4183c601	                             add r14d, 1	      8542	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_35
0x400c3f2	      0x410fb75706	               movzx edx, word [r15 + 6]	      8542	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_35
0x400c3f7	          0x4139d6	                           cmp r14d, edx	      8542	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_35
0x400c3fa	     0xf8307020000	                           jae 0x400c607	      8542	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_35
0x400c400	      0x498d542420	                   lea rdx, [r12 + 0x20]	      8542	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_35
0x400c405	      0x4989542418	             mov qword [r12 + 0x18], rdx	      8543	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_35
0x400c40a	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x400c40f	          0x4c29e9	                            sub rcx, r13	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x400c412	          0x4839c8	                            cmp rax, rcx	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x400c415	     0xf876cfcffff	                            ja 0x400c087	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x400c41b	          0x4901c5	                            add r13, rax	      8549	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x400c41e	      0x410fb74706	               movzx eax, word [r15 + 6]	      8526	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x400c423	          0x4439f0	                           cmp eax, r14d	      8526	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x400c426	     0xf8773ffffff	                            ja 0x400c39f	      8526	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5
0x400c42c	    0x49c747280000	               mov qword [r15 + 0x28], 0	      8553	elf.c	FUNCTION_97	IF_18	FOR_4
0x400c434	    0x6641837f0600	                   cmp word [r15 + 6], 0	      8554	elf.c	FUNCTION_97	IF_18	FOR_4	IF_37
0x400c43a	            0x740c	                            je 0x400c448	      8554	elf.c	FUNCTION_97	IF_18	FOR_4	IF_37
0x400c43c	        0x498b4738	            mov rax, qword [r15 + 0x38] 	      8555	elf.c	FUNCTION_97	IF_18	FOR_4	IF_37
0x400c440	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8555	elf.c	FUNCTION_97	IF_18	FOR_4	IF_37
0x400c444	        0x49894728	             mov qword [r15 + 0x28], rax	      8555	elf.c	FUNCTION_97	IF_18	FOR_4	IF_37
0x400c448	    0x49c747300000	               mov qword [r15 + 0x30], 0	      8557	elf.c	FUNCTION_97	IF_18	FOR_4
0x400c450	        0x498b5718	            mov rdx, qword [r15 + 0x18] 	      8558	elf.c	FUNCTION_97	IF_18	FOR_4	IF_38
0x400c454	          0x4885d2	                           test rdx, rdx	      8558	elf.c	FUNCTION_97	IF_18	FOR_4	IF_38
0x400c457	            0x7455	                            je 0x400c4ae	      8558	elf.c	FUNCTION_97	IF_18	FOR_4	IF_38
0x400c459	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400c45e	        0x48c1f803	                              sar rax, 3	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400c462	    0x48b9398ee338	          movabs rcx, 0x8e38e38e38e38e39	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400c46c	        0x480fafc1	                           imul rax, rcx	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400c470	        0x4883c001	                              add rax, 1	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400c474	      0x4839442448	            cmp qword [rsp + 0x48], rax 	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400c479	            0x7608	                           jbe 0x400c483	      8560	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400c47b	        0x498d4748	                   lea rax, [r15 + 0x48]	      8561	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400c47f	        0x49894730	             mov qword [r15 + 0x30], rax	      8561	elf.c	FUNCTION_97	IF_18	FOR_4	IF_39
0x400c483	      0x4801542420	            add qword [rsp + 0x20], rdx 	      8563	elf.c	FUNCTION_97	IF_18	FOR_4
0x400c488	      0x8344242c01	               add dword [rsp + 0x2c], 1	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x400c48d	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x400c491	    0x3985c4020000	           cmp dword [rbp + 0x2c4], eax 	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x400c497	     0xf8721feffff	                            ja 0x400c2be	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x400c49d	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x400c4a2	      0x448b742440	           mov r14d, dword [rsp + 0x40] 	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x400c4a7	      0x448b6c2444	           mov r13d, dword [rsp + 0x44] 	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x400c4ac	            0xeb0f	                           jmp 0x400c4bd	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x400c4ae	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x400c4b3	      0x448b742440	           mov r14d, dword [rsp + 0x40] 	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x400c4b8	      0x448b6c2444	           mov r13d, dword [rsp + 0x44] 	      8492	elf.c	FUNCTION_97	IF_18	FOR_4
0x400c4bd	          0x4c89ff	                            mov rdi, r15	      8567	elf.c	FUNCTION_97	IF_18	CALL_45
0x400c4c0	      0xe800000000	                          call 0x400c4c5	      8567	elf.c	FUNCTION_97	IF_18	CALL_45
0x400c4c5	          0x4585ed	                         test r13d, r13d	      8586	elf.c	FUNCTION_97	IF_43
0x400c4c8	            0x755d	                           jne 0x400c527	      8586	elf.c	FUNCTION_97	IF_43
0x400c4ca	      0xb801000000	                              mov eax, 1	      8613	elf.c	FUNCTION_97
0x400c4cf	      0xe9ee000000	                           jmp 0x400c5c2	      8613	elf.c	FUNCTION_97
0x400c4d4	      0xb801000000	                              mov eax, 1	      8613	elf.c	FUNCTION_97
0x400c4d9	          0x4585ed	                         test r13d, r13d	      8570	elf.c	FUNCTION_97	ELSE_4	IF_40
0x400c4dc	     0xf84e0000000	                            je 0x400c5c2	      8570	elf.c	FUNCTION_97	ELSE_4	IF_40
0x400c4e2	        0x418d5601	                      lea edx, [r14 + 1]	      8575	elf.c	FUNCTION_97	ELSE_4	IF_40	ELSE_5
0x400c4e6	        0x4183fe03	                             cmp r14d, 3	      8575	elf.c	FUNCTION_97	ELSE_4	IF_40	ELSE_5
0x400c4ea	      0xb803000000	                              mov eax, 3	      8575	elf.c	FUNCTION_97	ELSE_4	IF_40	ELSE_5
0x400c4ef	           0xf43c2	                         cmovae eax, edx	      8575	elf.c	FUNCTION_97	ELSE_4	IF_40	ELSE_5
0x400c4f2	          0x4189c6	                           mov r14d, eax	      8575	elf.c	FUNCTION_97	ELSE_4	IF_40	ELSE_5
0x400c4f5	            0x89c6	                            mov esi, eax	      8578	elf.c	FUNCTION_97	ELSE_4	IF_40	CALL_47
0x400c4f7	      0xba48000000	                           mov edx, 0x48	      8578	elf.c	FUNCTION_97	ELSE_4	IF_40	CALL_47
0x400c4fc	          0x4889df	                            mov rdi, rbx	      8578	elf.c	FUNCTION_97	ELSE_4	IF_40	CALL_47
0x400c4ff	      0xe800000000	                          call 0x400c504	      8578	elf.c	FUNCTION_97	ELSE_4	IF_40	CALL_47
0x400c504	    0x488985480300	           mov qword [rbp + 0x348], rax 	      8577	elf.c	FUNCTION_97	ELSE_4	IF_40	CALL_46
0x400c50b	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      8579	elf.c	FUNCTION_97	ELSE_4	IF_40	IF_42	CALL_48
0x400c512	    0x4883b8480300	              cmp qword [rax + 0x348], 0	      8579	elf.c	FUNCTION_97	ELSE_4	IF_40	IF_42	CALL_48
0x400c51a	     0xf8496000000	                            je 0x400c5b6	      8579	elf.c	FUNCTION_97	ELSE_4	IF_40	IF_42	CALL_48
0x400c520	    0x4489b0400300	           mov dword [rax + 0x340], r14d	      8582	elf.c	FUNCTION_97	ELSE_4	IF_40	CALL_49
0x400c527	    0x488b8bf80000	            mov rcx, qword [rbx + 0xf8] 	      8591	elf.c	FUNCTION_97	IF_43	CALL_50
0x400c52e	        0x418d46ff	                      lea eax, [r14 - 1]	      8591	elf.c	FUNCTION_97	IF_43	CALL_50
0x400c532	        0x488d14c0	                  lea rdx, [rax + rax*8]	      8591	elf.c	FUNCTION_97	IF_43	CALL_50
0x400c536	    0x488b81480300	           mov rax, qword [rcx + 0x348] 	      8591	elf.c	FUNCTION_97	IF_43	CALL_50
0x400c53d	        0x488d2cd0	                  lea rbp, [rax + rdx*8]	      8591	elf.c	FUNCTION_97	IF_43	CALL_50
0x400c541	    0x66c745000100	                       mov word [rbp], 1	      8593	elf.c	FUNCTION_97	IF_43
0x400c547	    0x66c745020000	                   mov word [rbp + 2], 0	      8594	elf.c	FUNCTION_97	IF_43
0x400c54d	      0x6644897504	                mov word [rbp + 4], r14w	      8595	elf.c	FUNCTION_97	IF_43
0x400c552	    0x66c745060100	                   mov word [rbp + 6], 1	      8596	elf.c	FUNCTION_97	IF_43
0x400c558	        0x48895d20	            mov qword [rbp + 0x20], rbx 	      8598	elf.c	FUNCTION_97	IF_43
0x400c55c	          0x4889df	                            mov rdi, rbx	      8600	elf.c	FUNCTION_97	IF_43	CALL_51
0x400c55f	      0xe800000000	                          call 0x400c564	      8600	elf.c	FUNCTION_97	IF_43	CALL_51
0x400c564	        0x48894528	            mov qword [rbp + 0x28], rax 	      8600	elf.c	FUNCTION_97	IF_43	CALL_51
0x400c568	          0x4885c0	                           test rax, rax	      8601	elf.c	FUNCTION_97	IF_43	IF_44
0x400c56b	     0xf8452fbffff	                            je 0x400c0c3	      8601	elf.c	FUNCTION_97	IF_43	IF_44
0x400c571	    0x48c745300000	               mov qword [rbp + 0x30], 0	      8603	elf.c	FUNCTION_97	IF_43
0x400c579	      0xbe20000000	                           mov esi, 0x20	      8605	elf.c	FUNCTION_97	IF_43	CALL_52
0x400c57e	          0x4889df	                            mov rdi, rbx	      8605	elf.c	FUNCTION_97	IF_43	CALL_52
0x400c581	      0xe800000000	                          call 0x400c586	      8605	elf.c	FUNCTION_97	IF_43	CALL_52
0x400c586	        0x48894538	            mov qword [rbp + 0x38], rax 	      8604	elf.c	FUNCTION_97	IF_43
0x400c58a	          0x4885c0	                           test rax, rax	      8606	elf.c	FUNCTION_97	IF_43	IF_45
0x400c58d	     0xf8438fbffff	                            je 0x400c0cb	      8606	elf.c	FUNCTION_97	IF_43	IF_45
0x400c593	        0x488b5528	            mov rdx, qword [rbp + 0x28] 	      8610	elf.c	FUNCTION_97	IF_43
0x400c597	        0x48895010	             mov qword [rax + 0x10], rdx	      8610	elf.c	FUNCTION_97	IF_43
0x400c59b	      0xb801000000	                              mov eax, 1	      8613	elf.c	FUNCTION_97
0x400c5a0	            0xeb20	                           jmp 0x400c5c2	      8613	elf.c	FUNCTION_97
0x400c5a2	          0x4d85ff	                           test r15, r15	      8616	elf.c	FUNCTION_97	IF_46
0x400c5a5	            0x7416	                            je 0x400c5bd	      8616	elf.c	FUNCTION_97	IF_46
0x400c5a7	          0x4c89ff	                            mov rdi, r15	      8617	elf.c	FUNCTION_97	CALL_53
0x400c5aa	      0xe800000000	                          call 0x400c5af	      8617	elf.c	FUNCTION_97	CALL_53
0x400c5af	      0xb800000000	                              mov eax, 0	      8618	elf.c	FUNCTION_97
0x400c5b4	            0xeb0c	                           jmp 0x400c5c2	      8618	elf.c	FUNCTION_97
0x400c5b6	      0xb800000000	                              mov eax, 0	      8618	elf.c	FUNCTION_97
0x400c5bb	            0xeb05	                           jmp 0x400c5c2	      8618	elf.c	FUNCTION_97
0x400c5bd	      0xb800000000	                              mov eax, 0	      8618	elf.c	FUNCTION_97
0x400c5c2	    0x488b8c249800	            mov rcx, qword [rsp + 0x98] 	      8619	elf.c	FUNCTION_97
0x400c5ca	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8619	elf.c	FUNCTION_97
0x400c5d3	            0x744d	                            je 0x400c622	      8619	elf.c	FUNCTION_97
0x400c5d5	            0xeb46	                           jmp 0x400c61d	      8619	elf.c	FUNCTION_97
0x400c5d7	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400c5dc	          0x4c29e2	                            sub rdx, r12	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400c5df	          0x4839d0	                            cmp rax, rdx	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400c5e2	     0xf8721f7ffff	                            ja 0x400bd09	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400c5e8	      0xe99df9ffff	                           jmp 0x400bf8a	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400c5ed	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400c5f2	      0x448b6c2440	           mov r13d, dword [rsp + 0x40] 	      8384	elf.c	FUNCTION_97	IF_1	FOR_1	FOR_2	IF_14
0x400c5f7	      0x483b442438	            cmp rax, qword [rsp + 0x38] 	      8398	elf.c	FUNCTION_97	IF_1	FOR_1	IF_17
0x400c5fc	     0xf870cf7ffff	                            ja 0x400bd0e	      8398	elf.c	FUNCTION_97	IF_1	FOR_1	IF_17
0x400c602	      0xe9f8f9ffff	                           jmp 0x400bfff	      8398	elf.c	FUNCTION_97	IF_1	FOR_1	IF_17
0x400c607	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x400c60c	          0x4c29ea	                            sub rdx, r13	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x400c60f	          0x4839d0	                            cmp rax, rdx	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x400c612	     0xf8776faffff	                            ja 0x400c08e	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x400c618	      0xe90ffeffff	                           jmp 0x400c42c	      8545	elf.c	FUNCTION_97	IF_18	FOR_4	FOR_5	IF_36
0x400c61d	      0xe800000000	                          call 0x400c622	      8619	elf.c	FUNCTION_97
0x400c622	    0x4881c4a80000	                           add rsp, 0xa8	      8619	elf.c	FUNCTION_97
0x400c629	              0x5b	                                 pop rbx	      8619	elf.c	FUNCTION_97
0x400c62a	              0x5d	                                 pop rbp	      8619	elf.c	FUNCTION_97
0x400c62b	            0x415c	                                 pop r12	      8619	elf.c	FUNCTION_97
0x400c62d	            0x415d	                                 pop r13	      8619	elf.c	FUNCTION_97
0x400c62f	            0x415e	                                 pop r14	      8619	elf.c	FUNCTION_97
0x400c631	            0x415f	                                 pop r15	      8619	elf.c	FUNCTION_97
0x400c633	              0xc3	                                     ret	      8619	elf.c	FUNCTION_97
_bfd_elf_get_dynamic_symtab_upper_bound	FOR,0:ELSE,0:IF,2:WHILE,0:DO,0:SWITCH,0:CALL,4:functions,0	23
0x400b999	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      8131	elf.c	FUNCTION_90	CALL_1
0x400b9a0	    0x83b87c0c0000	              cmp dword [rax + 0xc7c], 0	      8133	elf.c	FUNCTION_90	IF_1	CALL_2
0x400b9a7	            0x7517	                           jne 0x400b9c0	      8133	elf.c	FUNCTION_90	IF_1	CALL_2
0x400b9a9	        0x4883ec08	                              sub rsp, 8	      8128	elf.c	FUNCTION_90
0x400b9ad	      0xbf05000000	                              mov edi, 5	      8135	elf.c	FUNCTION_90	IF_1	CALL_3
0x400b9b2	      0xe800000000	                          call 0x400b9b7	      8135	elf.c	FUNCTION_90	IF_1	CALL_3
0x400b9b7	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      8136	elf.c	FUNCTION_90	IF_1
0x400b9be	            0xeb3c	                           jmp 0x400b9fc	      8136	elf.c	FUNCTION_90	IF_1
0x400b9c0	        0x488b5708	                mov rdx, qword [rdi + 8]	      8139	elf.c	FUNCTION_90	CALL_4
0x400b9c4	    0x488b92680300	           mov rdx, qword [rdx + 0x368] 	      8139	elf.c	FUNCTION_90	CALL_4
0x400b9cb	    0x488b92000300	           mov rdx, qword [rdx + 0x300] 	      8139	elf.c	FUNCTION_90	CALL_4
0x400b9d2	         0xfb64a05	               movzx ecx, byte [rdx + 5]	      8139	elf.c	FUNCTION_90	CALL_4
0x400b9d6	    0x488b80780100	           mov rax, qword [rax + 0x178] 	      8139	elf.c	FUNCTION_90	CALL_4
0x400b9dd	      0xba00000000	                              mov edx, 0	      8139	elf.c	FUNCTION_90	CALL_4
0x400b9e2	          0x48f7f1	                                 div rcx	      8139	elf.c	FUNCTION_90	CALL_4
0x400b9e5	    0x488d0cc50800	                    lea rcx, [rax*8 + 8]	      8140	elf.c	FUNCTION_90
0x400b9ed	        0x488d51f8	                      lea rdx, [rcx - 8]	      8142	elf.c	FUNCTION_90	IF_2
0x400b9f1	          0x4885c0	                           test rax, rax	      8140	elf.c	FUNCTION_90
0x400b9f4	          0x4889c8	                            mov rax, rcx	      8140	elf.c	FUNCTION_90
0x400b9f7	        0x480f4fc2	                          cmovg rax, rdx	      8140	elf.c	FUNCTION_90
0x400b9fb	              0xc3	                                     ret	      8140	elf.c	FUNCTION_90
0x400b9fc	        0x4883c408	                              add rsp, 8	      8145	elf.c	FUNCTION_90
0x400ba00	              0xc3	                                     ret	      8145	elf.c	FUNCTION_90
elfcore_grok_freebsd_note	FOR,0:ELSE,2:IF,5:WHILE,0:DO,0:SWITCH,1:CALL,13:functions,0	245
0x400df26	            0x4156	                                push r14	     10069	elf.c	FUNCTION_151
0x400df28	            0x4155	                                push r13	     10069	elf.c	FUNCTION_151
0x400df2a	            0x4154	                                push r12	     10069	elf.c	FUNCTION_151
0x400df2c	              0x55	                                push rbp	     10069	elf.c	FUNCTION_151
0x400df2d	              0x53	                                push rbx	     10069	elf.c	FUNCTION_151
0x400df2e	          0x4889fd	                            mov rbp, rdi	     10069	elf.c	FUNCTION_151
0x400df31	          0x4889f3	                            mov rbx, rsi	     10069	elf.c	FUNCTION_151
0x400df34	        0x488b5708	                mov rdx, qword [rdi + 8]	     10070	elf.c	FUNCTION_151	CALL_1
0x400df38	        0x488b4610	            mov rax, qword [rsi + 0x10] 	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400df3c	        0x4883f809	                              cmp rax, 9	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400df40	     0xf841f030000	                            je 0x400e265	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400df46	        0x4883f809	                              cmp rax, 9	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400df4a	            0x773e	                            ja 0x400df8a	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400df4c	        0x4883f803	                              cmp rax, 3	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400df50	     0xf84e2010000	                            je 0x400e138	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400df56	        0x4883f803	                              cmp rax, 3	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400df5a	            0x7715	                            ja 0x400df71	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400df5c	        0x4883f801	                              cmp rax, 1	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400df60	            0x746e	                            je 0x400dfd0	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400df62	        0x4883f802	                              cmp rax, 2	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400df66	     0xf84ba010000	                            je 0x400e126	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400df6c	      0xe9af030000	                           jmp 0x400e320	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400df71	        0x4883f807	                              cmp rax, 7	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400df75	     0xf84b7020000	                            je 0x400e232	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400df7b	        0x4883f808	                              cmp rax, 8	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400df7f	     0xf84ce020000	                            je 0x400e253	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400df85	      0xe996030000	                           jmp 0x400e320	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400df8a	        0x4883f811	                           cmp rax, 0x11	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400df8e	     0xf846e030000	                            je 0x400e302	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400df94	        0x4883f811	                           cmp rax, 0x11	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400df98	            0x7719	                            ja 0x400dfb3	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400df9a	        0x4883f80a	                            cmp rax, 0xa	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400df9e	     0xf84d3020000	                            je 0x400e277	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400dfa4	        0x4883f810	                           cmp rax, 0x10	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400dfa8	     0xf84db020000	                            je 0x400e289	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400dfae	      0xe96d030000	                           jmp 0x400e320	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400dfb3	    0x483d02020000	                          cmp rax, 0x202	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400dfb9	     0xf8429030000	                            je 0x400e2e8	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400dfbf	    0x483d00040000	                          cmp rax, 0x400	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400dfc5	     0xf8446030000	                            je 0x400e311	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400dfcb	      0xe950030000	                           jmp 0x400e320	     10072	elf.c	FUNCTION_151	SWITCH_1
0x400dfd0	    0x488b82680300	           mov rax, qword [rdx + 0x368] 	     10075	elf.c	FUNCTION_151	SWITCH_1	IF_1
0x400dfd7	    0x488b80180200	           mov rax, qword [rax + 0x218] 	     10075	elf.c	FUNCTION_151	SWITCH_1	IF_1
0x400dfde	          0x4885c0	                           test rax, rax	     10075	elf.c	FUNCTION_151	SWITCH_1	IF_1
0x400dfe1	            0x7411	                            je 0x400dff4	     10075	elf.c	FUNCTION_151	SWITCH_1	IF_1
0x400dfe3	            0xffd0	                                call rax	     10076	elf.c	FUNCTION_151	SWITCH_1	IF_1	IF_2
0x400dfe5	            0x89c2	                            mov edx, eax	     10076	elf.c	FUNCTION_151	SWITCH_1	IF_1	IF_2
0x400dfe7	      0xb801000000	                              mov eax, 1	     10077	elf.c	FUNCTION_151	SWITCH_1	IF_1	IF_2
0x400dfec	            0x85d2	                           test edx, edx	     10076	elf.c	FUNCTION_151	SWITCH_1	IF_1	IF_2
0x400dfee	     0xf853f030000	                           jne 0x400e333	     10076	elf.c	FUNCTION_151	SWITCH_1	IF_1	IF_2
0x400dff4	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x400dffb	         0xfb64004	               movzx eax, byte [rax + 4]	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x400dfff	            0x3c01	                               cmp al, 1	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x400e001	            0x7415	                            je 0x400e018	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x400e003	            0x3c02	                               cmp al, 2	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x400e005	     0xf851c030000	                           jne 0x400e327	     10004	elf.c	FUNCTION_150	SWITCH_1	CALL_1
0x400e00b	      0xba30000000	                           mov edx, 0x30	     10013	elf.c	FUNCTION_150	SWITCH_1
0x400e010	    0x41bc10000000	                          mov r12d, 0x10	     10012	elf.c	FUNCTION_150	SWITCH_1
0x400e016	            0xeb0b	                           jmp 0x400e023	     10012	elf.c	FUNCTION_150	SWITCH_1
0x400e018	      0xba1c000000	                           mov edx, 0x1c	     10008	elf.c	FUNCTION_150	SWITCH_1
0x400e01d	    0x41bc08000000	                             mov r12d, 8	     10007	elf.c	FUNCTION_150	SWITCH_1
0x400e023	      0xb800000000	                              mov eax, 0	     10021	elf.c	FUNCTION_150	IF_1
0x400e028	        0x48395308	                cmp qword [rbx + 8], rdx	     10020	elf.c	FUNCTION_150	IF_1
0x400e02c	     0xf8201030000	                            jb 0x400e333	     10020	elf.c	FUNCTION_150	IF_1
0x400e032	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	     10024	elf.c	FUNCTION_150	IF_2
0x400e036	        0x488b4508	                mov rax, qword [rbp + 8]	     10024	elf.c	FUNCTION_150	IF_2
0x400e03a	    0xff9080000000	                 call qword [rax + 0x80]	     10024	elf.c	FUNCTION_150	IF_2
0x400e040	          0x4889c2	                            mov rdx, rax	     10024	elf.c	FUNCTION_150	IF_2
0x400e043	      0xb800000000	                              mov eax, 0	     10025	elf.c	FUNCTION_150	IF_2
0x400e048	        0x4883fa01	                              cmp rdx, 1	     10024	elf.c	FUNCTION_150	IF_2
0x400e04c	     0xf85e1020000	                           jne 0x400e333	     10024	elf.c	FUNCTION_150	IF_2
0x400e052	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	     10029	elf.c	FUNCTION_150	IF_3	CALL_2
0x400e059	        0x80780401	                   cmp byte [rax + 4], 1	     10029	elf.c	FUNCTION_150	IF_3	CALL_2
0x400e05d	            0x751a	                           jne 0x400e079	     10029	elf.c	FUNCTION_150	IF_3	CALL_2
0x400e05f	          0x4c89e7	                            mov rdi, r12	     10031	elf.c	FUNCTION_150	IF_3
0x400e062	        0x48037b20	             add rdi, qword [rbx + 0x20]	     10031	elf.c	FUNCTION_150	IF_3
0x400e066	        0x488b4508	                mov rax, qword [rbp + 8]	     10031	elf.c	FUNCTION_150	IF_3
0x400e06a	    0xff9080000000	                 call qword [rax + 0x80]	     10031	elf.c	FUNCTION_150	IF_3
0x400e070	          0x4989c5	                            mov r13, rax	     10031	elf.c	FUNCTION_150	IF_3
0x400e073	        0x4983c408	                              add r12, 8	     10032	elf.c	FUNCTION_150	IF_3
0x400e077	            0xeb15	                           jmp 0x400e08e	     10032	elf.c	FUNCTION_150	IF_3
0x400e079	          0x4c89e7	                            mov rdi, r12	     10036	elf.c	FUNCTION_150	ELSE_1
0x400e07c	        0x48037b20	             add rdi, qword [rbx + 0x20]	     10036	elf.c	FUNCTION_150	ELSE_1
0x400e080	        0x488b4508	                mov rax, qword [rbp + 8]	     10036	elf.c	FUNCTION_150	ELSE_1
0x400e084	          0xff5068	                 call qword [rax + 0x68]	     10036	elf.c	FUNCTION_150	ELSE_1
0x400e087	          0x4989c5	                            mov r13, rax	     10036	elf.c	FUNCTION_150	ELSE_1
0x400e08a	        0x4983c410	                           add r12, 0x10	     10037	elf.c	FUNCTION_150	ELSE_1
0x400e08e	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	     10044	elf.c	FUNCTION_150	IF_4	CALL_3
0x400e095	    0x4c8bb0900c00	           mov r14, qword [rax + 0xc90] 	     10044	elf.c	FUNCTION_150	IF_4	CALL_3
0x400e09c	        0x41833e00	                      cmp dword [r14], 0	     10044	elf.c	FUNCTION_150	IF_4	CALL_3
0x400e0a0	            0x7516	                           jne 0x400e0b8	     10044	elf.c	FUNCTION_150	IF_4	CALL_3
0x400e0a2	        0x488b4320	            mov rax, qword [rbx + 0x20] 	     10046	elf.c	FUNCTION_150	IF_4
0x400e0a6	      0x4a8d7c2004	                lea rdi, [rax + r12 + 4]	     10046	elf.c	FUNCTION_150	IF_4
0x400e0ab	        0x488b4508	                mov rax, qword [rbp + 8]	     10046	elf.c	FUNCTION_150	IF_4
0x400e0af	    0xff9080000000	                 call qword [rax + 0x80]	     10046	elf.c	FUNCTION_150	IF_4
0x400e0b5	          0x418906	                    mov dword [r14], eax	     10046	elf.c	FUNCTION_150	IF_4
0x400e0b8	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	     10050	elf.c	FUNCTION_150	CALL_5
0x400e0bf	    0x4c8bb0900c00	           mov r14, qword [rax + 0xc90] 	     10050	elf.c	FUNCTION_150	CALL_5
0x400e0c6	        0x488b4320	            mov rax, qword [rbx + 0x20] 	     10051	elf.c	FUNCTION_150
0x400e0ca	      0x4a8d7c2008	                lea rdi, [rax + r12 + 8]	     10051	elf.c	FUNCTION_150
0x400e0cf	        0x488b4508	                mov rax, qword [rbp + 8]	     10051	elf.c	FUNCTION_150
0x400e0d3	    0xff9080000000	                 call qword [rax + 0x80]	     10051	elf.c	FUNCTION_150
0x400e0d9	        0x41894608	                mov dword [r14 + 8], eax	     10051	elf.c	FUNCTION_150
0x400e0dd	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	     10055	elf.c	FUNCTION_150	IF_5	CALL_6
0x400e0e4	      0x498d54240c	                    lea rdx, [r12 + 0xc]	     10052	elf.c	FUNCTION_150
0x400e0e9	        0x4983c410	                           add r12, 0x10	     10052	elf.c	FUNCTION_150
0x400e0ed	        0x80780402	                   cmp byte [rax + 4], 2	     10052	elf.c	FUNCTION_150
0x400e0f1	        0x490f44d4	                          cmove rdx, r12	     10052	elf.c	FUNCTION_150
0x400e0f5	        0x488b4b08	                mov rcx, qword [rbx + 8]	     10059	elf.c	FUNCTION_150	IF_6
0x400e0f9	          0x4829d1	                            sub rcx, rdx	     10059	elf.c	FUNCTION_150	IF_6
0x400e0fc	      0xb800000000	                              mov eax, 0	     10060	elf.c	FUNCTION_150	IF_6
0x400e101	          0x4c39e9	                            cmp rcx, r13	     10059	elf.c	FUNCTION_150	IF_6
0x400e104	     0xf8229020000	                            jb 0x400e333	     10059	elf.c	FUNCTION_150	IF_6
0x400e10a	          0x4889d1	                            mov rcx, rdx	     10063	elf.c	FUNCTION_150	CALL_7
0x400e10d	        0x48034b28	             add rcx, qword [rbx + 0x28]	     10063	elf.c	FUNCTION_150	CALL_7
0x400e111	          0x4c89ea	                            mov rdx, r13	     10063	elf.c	FUNCTION_150	CALL_7
0x400e114	      0xbe00000000	                              mov esi, 0	     10063	elf.c	FUNCTION_150	CALL_7
0x400e119	          0x4889ef	                            mov rdi, rbp	     10063	elf.c	FUNCTION_150	CALL_7
0x400e11c	      0xe800000000	                          call 0x400e121	     10063	elf.c	FUNCTION_150	CALL_7
0x400e121	      0xe90d020000	                           jmp 0x400e333	     10063	elf.c	FUNCTION_150	CALL_7
0x400e126	          0x4889f2	                            mov rdx, rsi	      9203	elf.c	FUNCTION_117	CALL_1
0x400e129	      0xbe00000000	                              mov esi, 0	      9203	elf.c	FUNCTION_117	CALL_1
0x400e12e	      0xe882f7ffff	call sym.elfcore_make_note_pseudosection	      9203	elf.c	FUNCTION_117	CALL_1
0x400e133	      0xe9fb010000	                           jmp 0x400e333	     10081	elf.c	FUNCTION_151	SWITCH_1	CALL_3
0x400e138	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      9941	elf.c	FUNCTION_149	SWITCH_1	CALL_1
0x400e13f	         0xfb64004	               movzx eax, byte [rax + 4]	      9941	elf.c	FUNCTION_149	SWITCH_1	CALL_1
0x400e143	            0x3c01	                               cmp al, 1	      9941	elf.c	FUNCTION_149	SWITCH_1	CALL_1
0x400e145	            0x7409	                            je 0x400e150	      9941	elf.c	FUNCTION_149	SWITCH_1	CALL_1
0x400e147	            0x3c02	                               cmp al, 2	      9941	elf.c	FUNCTION_149	SWITCH_1	CALL_1
0x400e149	            0x7416	                            je 0x400e161	      9941	elf.c	FUNCTION_149	SWITCH_1	CALL_1
0x400e14b	      0xe9de010000	                           jmp 0x400e32e	      9941	elf.c	FUNCTION_149	SWITCH_1	CALL_1
0x400e150	      0xb800000000	                              mov eax, 0	      9945	elf.c	FUNCTION_149	SWITCH_1	IF_1
0x400e155	      0x48837e086b	               cmp qword [rsi + 8], 0x6b	      9944	elf.c	FUNCTION_149	SWITCH_1	IF_1
0x400e15a	            0x7715	                            ja 0x400e171	      9944	elf.c	FUNCTION_149	SWITCH_1	IF_1
0x400e15c	      0xe9d2010000	                           jmp 0x400e333	      9944	elf.c	FUNCTION_149	SWITCH_1	IF_1
0x400e161	      0xb800000000	                              mov eax, 0	      9950	elf.c	FUNCTION_149	SWITCH_1	IF_2
0x400e166	      0x48837e0877	               cmp qword [rsi + 8], 0x77	      9949	elf.c	FUNCTION_149	SWITCH_1	IF_2
0x400e16b	     0xf86c2010000	                           jbe 0x400e333	      9949	elf.c	FUNCTION_149	SWITCH_1	IF_2
0x400e171	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      9958	elf.c	FUNCTION_149	IF_3
0x400e175	    0xff9280000000	                 call qword [rdx + 0x80]	      9958	elf.c	FUNCTION_149	IF_3
0x400e17b	          0x4889c2	                            mov rdx, rax	      9958	elf.c	FUNCTION_149	IF_3
0x400e17e	      0xb800000000	                              mov eax, 0	      9959	elf.c	FUNCTION_149	IF_3
0x400e183	        0x4883fa01	                              cmp rdx, 1	      9958	elf.c	FUNCTION_149	IF_3
0x400e187	     0xf85a6010000	                           jne 0x400e333	      9958	elf.c	FUNCTION_149	IF_3
0x400e18d	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      9964	elf.c	FUNCTION_149	IF_4	CALL_2
0x400e194	        0x80780401	                   cmp byte [rax + 4], 1	      9969	elf.c	FUNCTION_149	ELSE_1
0x400e198	        0x410f95c4	                              setne r12b	      9969	elf.c	FUNCTION_149	ELSE_1
0x400e19c	        0x450fb6e4	                        movzx r12d, r12b	      9969	elf.c	FUNCTION_149	ELSE_1
0x400e1a0	    0x4e8d24e50800	                    lea r12, [r12*8 + 8]	      9969	elf.c	FUNCTION_149	ELSE_1
0x400e1a8	    0x4c8ba8900c00	           mov r13, qword [rax + 0xc90] 	      9973	elf.c	FUNCTION_149	CALL_3
0x400e1af	          0x4c89e6	                            mov rsi, r12	      9974	elf.c	FUNCTION_149	CALL_4
0x400e1b2	        0x48037320	             add rsi, qword [rbx + 0x20]	      9974	elf.c	FUNCTION_149	CALL_4
0x400e1b6	      0xba11000000	                           mov edx, 0x11	      9974	elf.c	FUNCTION_149	CALL_4
0x400e1bb	          0x4889ef	                            mov rdi, rbp	      9974	elf.c	FUNCTION_149	CALL_4
0x400e1be	      0xe800000000	                          call 0x400e1c3	      9974	elf.c	FUNCTION_149	CALL_4
0x400e1c3	        0x49894510	             mov qword [r13 + 0x10], rax	      9974	elf.c	FUNCTION_149	CALL_4
0x400e1c7	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      9978	elf.c	FUNCTION_149	CALL_5
0x400e1ce	    0x4c8ba8900c00	           mov r13, qword [rax + 0xc90] 	      9978	elf.c	FUNCTION_149	CALL_5
0x400e1d5	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      9979	elf.c	FUNCTION_149	CALL_6
0x400e1d9	      0x4a8d742011	            lea rsi, [rax + r12 + 0x11] 	      9979	elf.c	FUNCTION_149	CALL_6
0x400e1de	      0xba51000000	                           mov edx, 0x51	      9979	elf.c	FUNCTION_149	CALL_6
0x400e1e3	          0x4889ef	                            mov rdi, rbp	      9979	elf.c	FUNCTION_149	CALL_6
0x400e1e6	      0xe800000000	                          call 0x400e1eb	      9979	elf.c	FUNCTION_149	CALL_6
0x400e1eb	        0x49894518	             mov qword [r13 + 0x18], rax	      9979	elf.c	FUNCTION_149	CALL_6
0x400e1ef	      0x498d542468	                   lea rdx, [r12 + 0x68]	      9986	elf.c	FUNCTION_149	IF_5
0x400e1f4	      0xb801000000	                              mov eax, 1	      9987	elf.c	FUNCTION_149	IF_5
0x400e1f9	        0x48395308	                cmp qword [rbx + 8], rdx	      9986	elf.c	FUNCTION_149	IF_5
0x400e1fd	     0xf8230010000	                            jb 0x400e333	      9986	elf.c	FUNCTION_149	IF_5
0x400e203	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      9989	elf.c	FUNCTION_149	CALL_7
0x400e20a	    0x4c8ba8900c00	           mov r13, qword [rax + 0xc90] 	      9989	elf.c	FUNCTION_149	CALL_7
0x400e211	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      9990	elf.c	FUNCTION_149
0x400e215	      0x4a8d7c2064	            lea rdi, [rax + r12 + 0x64] 	      9990	elf.c	FUNCTION_149
0x400e21a	        0x488b4508	                mov rax, qword [rbp + 8]	      9990	elf.c	FUNCTION_149
0x400e21e	    0xff9080000000	                 call qword [rax + 0x80]	      9990	elf.c	FUNCTION_149
0x400e224	        0x41894504	                mov dword [r13 + 4], eax	      9990	elf.c	FUNCTION_149
0x400e228	      0xb801000000	                              mov eax, 1	      9992	elf.c	FUNCTION_149
0x400e22d	      0xe901010000	                           jmp 0x400e333	      9992	elf.c	FUNCTION_149
0x400e232	      0xb801000000	                              mov eax, 1	     10090	elf.c	FUNCTION_151	SWITCH_1	ELSE_1
0x400e237	        0x48833e08	                      cmp qword [rsi], 8	     10087	elf.c	FUNCTION_151	SWITCH_1	IF_3
0x400e23b	     0xf85f2000000	                           jne 0x400e333	     10087	elf.c	FUNCTION_151	SWITCH_1	IF_3
0x400e241	          0x4889f2	                            mov rdx, rsi	     10088	elf.c	FUNCTION_151	SWITCH_1	CALL_5
0x400e244	      0xbe00000000	                              mov esi, 0	     10088	elf.c	FUNCTION_151	SWITCH_1	CALL_5
0x400e249	      0xe867f6ffff	call sym.elfcore_make_note_pseudosection	     10088	elf.c	FUNCTION_151	SWITCH_1	CALL_5
0x400e24e	      0xe9e0000000	                           jmp 0x400e333	     10088	elf.c	FUNCTION_151	SWITCH_1	CALL_5
0x400e253	          0x4889f2	                            mov rdx, rsi	     10093	elf.c	FUNCTION_151	SWITCH_1	CALL_6
0x400e256	      0xbe00000000	                              mov esi, 0	     10093	elf.c	FUNCTION_151	SWITCH_1	CALL_6
0x400e25b	      0xe855f6ffff	call sym.elfcore_make_note_pseudosection	     10093	elf.c	FUNCTION_151	SWITCH_1	CALL_6
0x400e260	      0xe9ce000000	                           jmp 0x400e333	     10093	elf.c	FUNCTION_151	SWITCH_1	CALL_6
0x400e265	          0x4889f2	                            mov rdx, rsi	     10097	elf.c	FUNCTION_151	SWITCH_1	CALL_7
0x400e268	      0xbe00000000	                              mov esi, 0	     10097	elf.c	FUNCTION_151	SWITCH_1	CALL_7
0x400e26d	      0xe843f6ffff	call sym.elfcore_make_note_pseudosection	     10097	elf.c	FUNCTION_151	SWITCH_1	CALL_7
0x400e272	      0xe9bc000000	                           jmp 0x400e333	     10097	elf.c	FUNCTION_151	SWITCH_1	CALL_7
0x400e277	          0x4889f2	                            mov rdx, rsi	     10101	elf.c	FUNCTION_151	SWITCH_1	CALL_8
0x400e27a	      0xbe00000000	                              mov esi, 0	     10101	elf.c	FUNCTION_151	SWITCH_1	CALL_8
0x400e27f	      0xe831f6ffff	call sym.elfcore_make_note_pseudosection	     10101	elf.c	FUNCTION_151	SWITCH_1	CALL_8
0x400e284	      0xe9aa000000	                           jmp 0x400e333	     10101	elf.c	FUNCTION_151	SWITCH_1	CALL_8
0x400e289	      0xba00010000	                          mov edx, 0x100	     10106	elf.c	FUNCTION_151	SWITCH_1	CALL_9
0x400e28e	      0xbe00000000	                              mov esi, 0	     10106	elf.c	FUNCTION_151	SWITCH_1	CALL_9
0x400e293	      0xe800000000	                          call 0x400e298	     10106	elf.c	FUNCTION_151	SWITCH_1	CALL_9
0x400e298	          0x4989c4	                            mov r12, rax	     10106	elf.c	FUNCTION_151	SWITCH_1	CALL_9
0x400e29b	      0xb800000000	                              mov eax, 0	     10110	elf.c	FUNCTION_151	SWITCH_1	IF_4
0x400e2a0	          0x4d85e4	                           test r12, r12	     10109	elf.c	FUNCTION_151	SWITCH_1	IF_4
0x400e2a3	     0xf848a000000	                            je 0x400e333	     10109	elf.c	FUNCTION_151	SWITCH_1	IF_4
0x400e2a9	        0x488b4308	                mov rax, qword [rbx + 8]	     10111	elf.c	FUNCTION_151	SWITCH_1
0x400e2ad	        0x4883e804	                              sub rax, 4	     10111	elf.c	FUNCTION_151	SWITCH_1
0x400e2b1	      0x4989442438	             mov qword [r12 + 0x38], rax	     10111	elf.c	FUNCTION_151	SWITCH_1
0x400e2b6	        0x488b4328	            mov rax, qword [rbx + 0x28] 	     10112	elf.c	FUNCTION_151	SWITCH_1
0x400e2ba	        0x4883c004	                              add rax, 4	     10112	elf.c	FUNCTION_151	SWITCH_1
0x400e2be	    0x498984249000	             mov qword [r12 + 0x90], rax	     10112	elf.c	FUNCTION_151	SWITCH_1
0x400e2c6	          0x4889ef	                            mov rdi, rbp	     10113	elf.c	FUNCTION_151	SWITCH_1	CALL_10
0x400e2c9	      0xe800000000	                          call 0x400e2ce	     10113	elf.c	FUNCTION_151	SWITCH_1	CALL_10
0x400e2ce	          0x8d501f	                   lea edx, [rax + 0x1f]	     10113	elf.c	FUNCTION_151	SWITCH_1	CALL_10
0x400e2d1	            0x85c0	                           test eax, eax	     10113	elf.c	FUNCTION_151	SWITCH_1	CALL_10
0x400e2d3	           0xf48c2	                          cmovs eax, edx	     10113	elf.c	FUNCTION_151	SWITCH_1	CALL_10
0x400e2d6	          0xc1f805	                              sar eax, 5	     10113	elf.c	FUNCTION_151	SWITCH_1	CALL_10
0x400e2d9	          0x83c001	                              add eax, 1	     10113	elf.c	FUNCTION_151	SWITCH_1	CALL_10
0x400e2dc	      0x4189442470	             mov dword [r12 + 0x70], eax	     10113	elf.c	FUNCTION_151	SWITCH_1	CALL_10
0x400e2e1	      0xb801000000	                              mov eax, 1	     10115	elf.c	FUNCTION_151	SWITCH_1
0x400e2e6	            0xeb4b	                           jmp 0x400e333	     10115	elf.c	FUNCTION_151	SWITCH_1
0x400e2e8	      0xb801000000	                              mov eax, 1	     10122	elf.c	FUNCTION_151	SWITCH_1	ELSE_2
0x400e2ed	        0x48833e08	                      cmp qword [rsi], 8	     10119	elf.c	FUNCTION_151	SWITCH_1	IF_5
0x400e2f1	            0x7540	                           jne 0x400e333	     10119	elf.c	FUNCTION_151	SWITCH_1	IF_5
0x400e2f3	          0x4889f2	                            mov rdx, rsi	      9223	elf.c	FUNCTION_119	CALL_1
0x400e2f6	      0xbe00000000	                              mov esi, 0	      9223	elf.c	FUNCTION_119	CALL_1
0x400e2fb	      0xe8b5f5ffff	call sym.elfcore_make_note_pseudosection	      9223	elf.c	FUNCTION_119	CALL_1
0x400e300	            0xeb31	                           jmp 0x400e333	     10120	elf.c	FUNCTION_151	SWITCH_1	CALL_11
0x400e302	          0x4889f2	                            mov rdx, rsi	     10125	elf.c	FUNCTION_151	SWITCH_1	CALL_12
0x400e305	      0xbe00000000	                              mov esi, 0	     10125	elf.c	FUNCTION_151	SWITCH_1	CALL_12
0x400e30a	      0xe8a6f5ffff	call sym.elfcore_make_note_pseudosection	     10125	elf.c	FUNCTION_151	SWITCH_1	CALL_12
0x400e30f	            0xeb22	                           jmp 0x400e333	     10125	elf.c	FUNCTION_151	SWITCH_1	CALL_12
0x400e311	          0x4889f2	                            mov rdx, rsi	      9319	elf.c	FUNCTION_135	CALL_1
0x400e314	      0xbe00000000	                              mov esi, 0	      9319	elf.c	FUNCTION_135	CALL_1
0x400e319	      0xe897f5ffff	call sym.elfcore_make_note_pseudosection	      9319	elf.c	FUNCTION_135	CALL_1
0x400e31e	            0xeb13	                           jmp 0x400e333	     10129	elf.c	FUNCTION_151	SWITCH_1	CALL_13
0x400e320	      0xb801000000	                              mov eax, 1	     10132	elf.c	FUNCTION_151	SWITCH_1
0x400e325	            0xeb0c	                           jmp 0x400e333	     10132	elf.c	FUNCTION_151	SWITCH_1
0x400e327	      0xb800000000	                              mov eax, 0	     10017	elf.c	FUNCTION_150	SWITCH_1
0x400e32c	            0xeb05	                           jmp 0x400e333	     10017	elf.c	FUNCTION_150	SWITCH_1
0x400e32e	      0xb800000000	                              mov eax, 0	      9954	elf.c	FUNCTION_149	SWITCH_1
0x400e333	              0x5b	                                 pop rbx	     10134	elf.c	FUNCTION_151
0x400e334	              0x5d	                                 pop rbp	     10134	elf.c	FUNCTION_151
0x400e335	            0x415c	                                 pop r12	     10134	elf.c	FUNCTION_151
0x400e337	            0x415d	                                 pop r13	     10134	elf.c	FUNCTION_151
0x400e339	            0x415e	                                 pop r14	     10134	elf.c	FUNCTION_151
0x400e33b	              0xc3	                                     ret	     10134	elf.c	FUNCTION_151
bfd_elf_allocate_object	FOR,0:ELSE,0:IF,3:WHILE,0:DO,0:SWITCH,0:CALL,6:functions,0	46
0x4001d62	            0x4154	                                push r12	       240	elf.c	FUNCTION_13
0x4001d64	              0x55	                                push rbp	       240	elf.c	FUNCTION_13
0x4001d65	              0x53	                                push rbx	       240	elf.c	FUNCTION_13
0x4001d66	          0x4889fd	                            mov rbp, rdi	       240	elf.c	FUNCTION_13
0x4001d69	          0x4989f4	                            mov r12, rsi	       240	elf.c	FUNCTION_13
0x4001d6c	            0x89d3	                            mov ebx, edx	       240	elf.c	FUNCTION_13
0x4001d6e	    0x4881fe9f0c00	                          cmp rsi, 0xc9f	       241	elf.c	FUNCTION_13	CALL_1
0x4001d75	            0x770f	                            ja 0x4001d86	       241	elf.c	FUNCTION_13	CALL_1
0x4001d77	      0xbef1000000	                           mov esi, 0xf1	       241	elf.c	FUNCTION_13	CALL_1
0x4001d7c	      0xbf00000000	                              mov edi, 0	       241	elf.c	FUNCTION_13	CALL_1
0x4001d81	      0xe800000000	                          call 0x4001d86	       241	elf.c	FUNCTION_13	CALL_1
0x4001d86	          0x4c89e6	                            mov rsi, r12	       242	elf.c	FUNCTION_13	CALL_2
0x4001d89	          0x4889ef	                            mov rdi, rbp	       242	elf.c	FUNCTION_13	CALL_2
0x4001d8c	      0xe800000000	                          call 0x4001d91	       242	elf.c	FUNCTION_13	CALL_2
0x4001d91	    0x488985f80000	            mov qword [rbp + 0xf8], rax 	       242	elf.c	FUNCTION_13	CALL_2
0x4001d98	          0x4885c0	                           test rax, rax	       243	elf.c	FUNCTION_13	IF_1
0x4001d9b	            0x7463	                            je 0x4001e00	       243	elf.c	FUNCTION_13	IF_1
0x4001d9d	          0x83e33f	                           and ebx, 0x3f	       246	elf.c	FUNCTION_13	CALL_3
0x4001da0	     0xfb6908c0c00	          movzx edx, byte [rax + 0xc8c] 	       246	elf.c	FUNCTION_13	CALL_3
0x4001da7	          0x83e2c0	                     and edx, 0xffffffc0	       246	elf.c	FUNCTION_13	CALL_3
0x4001daa	             0x9d3	                             or ebx, edx	       246	elf.c	FUNCTION_13	CALL_3
0x4001dac	    0x88988c0c0000	              mov byte [rax + 0xc8c], bl	       246	elf.c	FUNCTION_13	CALL_3
0x4001db2	         0xfb65544	           movzx edx, byte [rbp + 0x44] 	       247	elf.c	FUNCTION_13	IF_2
0x4001db6	          0x83e218	                           and edx, 0x18	       247	elf.c	FUNCTION_13	IF_2
0x4001db9	      0xb801000000	                              mov eax, 1	       255	elf.c	FUNCTION_13
0x4001dbe	          0x80fa08	                               cmp dl, 8	       247	elf.c	FUNCTION_13	IF_2
0x4001dc1	            0x7449	                            je 0x4001e0c	       247	elf.c	FUNCTION_13	IF_2
0x4001dc3	      0xbe60000000	                           mov esi, 0x60	       249	elf.c	FUNCTION_13	IF_2	CALL_4
0x4001dc8	          0x4889ef	                            mov rdi, rbp	       249	elf.c	FUNCTION_13	IF_2	CALL_4
0x4001dcb	      0xe800000000	                          call 0x4001dd0	       249	elf.c	FUNCTION_13	IF_2	CALL_4
0x4001dd0	          0x4885c0	                           test rax, rax	       250	elf.c	FUNCTION_13	IF_2	IF_3
0x4001dd3	            0x7432	                            je 0x4001e07	       250	elf.c	FUNCTION_13	IF_2	IF_3
0x4001dd5	    0x488b95f80000	            mov rdx, qword [rbp + 0xf8] 	       252	elf.c	FUNCTION_13	IF_2	CALL_5
0x4001ddc	    0x488982980c00	            mov qword [rdx + 0xc98], rax	       252	elf.c	FUNCTION_13	IF_2	CALL_5
0x4001de3	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	       253	elf.c	FUNCTION_13	IF_2	CALL_6
0x4001dea	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	       253	elf.c	FUNCTION_13	IF_2	CALL_6
0x4001df1	    0x48c74038ffff	mov qword [rax + 0x38], 0xffffffffffffffff	       253	elf.c	FUNCTION_13	IF_2	CALL_6
0x4001df9	      0xb801000000	                              mov eax, 1	       255	elf.c	FUNCTION_13
0x4001dfe	            0xeb0c	                           jmp 0x4001e0c	       255	elf.c	FUNCTION_13
0x4001e00	      0xb800000000	                              mov eax, 0	       244	elf.c	FUNCTION_13	IF_1
0x4001e05	            0xeb05	                           jmp 0x4001e0c	       244	elf.c	FUNCTION_13	IF_1
0x4001e07	      0xb800000000	                              mov eax, 0	       251	elf.c	FUNCTION_13	IF_2	IF_3
0x4001e0c	              0x5b	                                 pop rbx	       256	elf.c	FUNCTION_13
0x4001e0d	              0x5d	                                 pop rbp	       256	elf.c	FUNCTION_13
0x4001e0e	            0x415c	                                 pop r12	       256	elf.c	FUNCTION_13
0x4001e10	              0xc3	                                     ret	       256	elf.c	FUNCTION_13
elfcore_grok_note	FOR,0:ELSE,21:IF,26:WHILE,0:DO,0:SWITCH,1:CALL,53:functions,0	656
0x400e531	            0x4156	                                push r14	      9655	elf.c	FUNCTION_144
0x400e533	            0x4155	                                push r13	      9655	elf.c	FUNCTION_144
0x400e535	            0x4154	                                push r12	      9655	elf.c	FUNCTION_144
0x400e537	              0x55	                                push rbp	      9655	elf.c	FUNCTION_144
0x400e538	              0x53	                                push rbx	      9655	elf.c	FUNCTION_144
0x400e539	        0x4883ec30	                           sub rsp, 0x30	      9655	elf.c	FUNCTION_144
0x400e53d	          0x4989fc	                            mov r12, rdi	      9655	elf.c	FUNCTION_144
0x400e540	          0x4889f3	                            mov rbx, rsi	      9655	elf.c	FUNCTION_144
0x400e543	    0x64488b042528	                mov rax, qword fs:[0x28]	      9655	elf.c	FUNCTION_144
0x400e54c	      0x4889442428	             mov qword [rsp + 0x28], rax	      9655	elf.c	FUNCTION_144
0x400e551	            0x31c0	                            xor eax, eax	      9655	elf.c	FUNCTION_144
0x400e553	        0x488b5708	                mov rdx, qword [rdi + 8]	      9656	elf.c	FUNCTION_144	CALL_1
0x400e557	    0x488b8a680300	           mov rcx, qword [rdx + 0x368] 	      9656	elf.c	FUNCTION_144	CALL_1
0x400e55e	        0x488b4610	            mov rax, qword [rsi + 0x10] 	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e562	    0x483d05030000	                          cmp rax, 0x305	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e568	     0xf8470060000	                            je 0x400ebde	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e56e	    0x483d05030000	                          cmp rax, 0x305	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e574	     0xf87ba000000	                            ja 0x400e634	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e57a	    0x483d00010000	                          cmp rax, 0x100	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e580	     0xf847c040000	                            je 0x400ea02	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e586	    0x483d00010000	                          cmp rax, 0x100	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e58c	            0x774c	                            ja 0x400e5da	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e58e	        0x4883f803	                              cmp rax, 3	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e592	     0xf8476090000	                            je 0x400ef0e	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e598	        0x4883f803	                              cmp rax, 3	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e59c	            0x7719	                            ja 0x400e5b7	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e59e	        0x4883f801	                              cmp rax, 1	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e5a2	     0xf8454010000	                            je 0x400e6fc	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e5a8	        0x4883f802	                              cmp rax, 2	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e5ac	     0xf8477010000	                            je 0x400e729	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e5b2	      0xe9f9090000	                           jmp 0x400efb0	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e5b7	        0x4883f80d	                            cmp rax, 0xd	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e5bb	     0xf844d090000	                            je 0x400ef0e	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e5c1	        0x4883f812	                           cmp rax, 0x12	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e5c5	     0xf8472010000	                            je 0x400e73d	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e5cb	        0x4883f806	                              cmp rax, 6	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e5cf	     0xf85db090000	                           jne 0x400efb0	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e5d5	      0xe964090000	                           jmp 0x400ef3e	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e5da	    0x483d01030000	                          cmp rax, 0x301	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e5e0	     0xf84e8040000	                            je 0x400eace	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e5e6	    0x483d01030000	                          cmp rax, 0x301	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e5ec	            0x7729	                            ja 0x400e617	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e5ee	    0x483d02020000	                          cmp rax, 0x202	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e5f4	     0xf84c4030000	                            je 0x400e9be	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e5fa	    0x483d00030000	                          cmp rax, 0x300	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e600	     0xf8484040000	                            je 0x400ea8a	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e606	    0x483d02010000	                          cmp rax, 0x102	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e60c	     0xf859e090000	                           jne 0x400efb0	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e612	      0xe92f040000	                           jmp 0x400ea46	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e617	    0x483d03030000	                          cmp rax, 0x303	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e61d	     0xf8433050000	                            je 0x400eb56	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e623	    0x483d03030000	                          cmp rax, 0x303	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e629	     0xf86e3040000	                           jbe 0x400eb12	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e62f	      0xe966050000	                           jmp 0x400eb9a	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e634	    0x483d0c030000	                          cmp rax, 0x30c	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e63a	     0xf847a070000	                            je 0x400edba	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e640	    0x483d0c030000	                          cmp rax, 0x30c	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e646	            0x774e	                            ja 0x400e696	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e648	    0x483d08030000	                          cmp rax, 0x308	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e64e	     0xf8456060000	                            je 0x400ecaa	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e654	    0x483d08030000	                          cmp rax, 0x308	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e65a	            0x771d	                            ja 0x400e679	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e65c	    0x483d06030000	                          cmp rax, 0x306	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e662	     0xf84ba050000	                            je 0x400ec22	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e668	    0x483d07030000	                          cmp rax, 0x307	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e66e	     0xf84f2050000	                            je 0x400ec66	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e674	      0xe937090000	                           jmp 0x400efb0	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e679	    0x483d0a030000	                          cmp rax, 0x30a	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e67f	     0xf84ad060000	                            je 0x400ed32	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e685	    0x483d0a030000	                          cmp rax, 0x30a	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e68b	     0xf865d060000	                           jbe 0x400ecee	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e691	      0xe9e0060000	                           jmp 0x400ed76	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e696	    0x483d03040000	                          cmp rax, 0x403	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e69c	     0xf8428080000	                            je 0x400eeca	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e6a2	    0x483d03040000	                          cmp rax, 0x403	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e6a8	            0x7729	                            ja 0x400e6d3	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e6aa	    0x483d01040000	                          cmp rax, 0x401	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e6b0	     0xf848c070000	                            je 0x400ee42	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e6b6	    0x483d01040000	                          cmp rax, 0x401	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e6bc	     0xf87c4070000	                            ja 0x400ee86	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e6c2	    0x483d00040000	                          cmp rax, 0x400	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e6c8	     0xf8430070000	                            je 0x400edfe	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e6ce	      0xe9dd080000	                           jmp 0x400efb0	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e6d3	    0x483d7f2be646	                     cmp rax, 0x46e62b7f	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e6d9	     0xf849b020000	                            je 0x400e97a	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e6df	    0x483d49474953	                     cmp rax, 0x53494749	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e6e5	     0xf84b4080000	                            je 0x400ef9f	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e6eb	    0x483d454c4946	                     cmp rax, 0x46494c45	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e6f1	     0xf85b9080000	                           jne 0x400efb0	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e6f7	      0xe992080000	                           jmp 0x400ef8e	      9658	elf.c	FUNCTION_144	SWITCH_1
0x400e6fc	    0x488b81080200	           mov rax, qword [rcx + 0x208] 	      9664	elf.c	FUNCTION_144	SWITCH_1	IF_1
0x400e703	          0x4885c0	                           test rax, rax	      9664	elf.c	FUNCTION_144	SWITCH_1	IF_1
0x400e706	            0x740f	                            je 0x400e717	      9664	elf.c	FUNCTION_144	SWITCH_1	IF_1
0x400e708	            0xffd0	                                call rax	      9665	elf.c	FUNCTION_144	SWITCH_1	IF_1	IF_2
0x400e70a	      0xbd01000000	                              mov ebp, 1	      9666	elf.c	FUNCTION_144	SWITCH_1	IF_1	IF_2
0x400e70f	            0x85c0	                           test eax, eax	      9665	elf.c	FUNCTION_144	SWITCH_1	IF_1	IF_2
0x400e711	     0xf859e080000	                           jne 0x400efb5	      9665	elf.c	FUNCTION_144	SWITCH_1	IF_1	IF_2
0x400e717	          0x4889de	                            mov rsi, rbx	      9668	elf.c	FUNCTION_144	SWITCH_1	CALL_2
0x400e71a	          0x4c89e7	                            mov rdi, r12	      9668	elf.c	FUNCTION_144	SWITCH_1	CALL_2
0x400e71d	      0xe8a4f3ffff	          call sym.elfcore_grok_prstatus	      9668	elf.c	FUNCTION_144	SWITCH_1	CALL_2
0x400e722	            0x89c5	                            mov ebp, eax	      9668	elf.c	FUNCTION_144	SWITCH_1	CALL_2
0x400e724	      0xe98c080000	                           jmp 0x400efb5	      9668	elf.c	FUNCTION_144	SWITCH_1	CALL_2
0x400e729	          0x4889f2	                            mov rdx, rsi	      9203	elf.c	FUNCTION_117	CALL_1
0x400e72c	      0xbe00000000	                              mov esi, 0	      9203	elf.c	FUNCTION_117	CALL_1
0x400e731	      0xe87ff1ffff	call sym.elfcore_make_note_pseudosection	      9203	elf.c	FUNCTION_117	CALL_1
0x400e736	            0x89c5	                            mov ebp, eax	      9203	elf.c	FUNCTION_117	CALL_1
0x400e738	      0xe978080000	                           jmp 0x400efb5	      9684	elf.c	FUNCTION_144	SWITCH_1	CALL_5
0x400e73d	      0xbd01000000	                              mov ebp, 1	      9576	elf.c	FUNCTION_143	IF_1
0x400e742	    0x48817e08d702	              cmp qword [rsi + 8], 0x2d7	      9575	elf.c	FUNCTION_143	IF_1
0x400e74a	     0xf8665080000	                           jbe 0x400efb5	      9575	elf.c	FUNCTION_143	IF_1
0x400e750	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9578	elf.c	FUNCTION_143	IF_2
0x400e754	      0xbf00000000	                              mov edi, 0	      9578	elf.c	FUNCTION_143	IF_2
0x400e759	      0xb905000000	                              mov ecx, 5	      9578	elf.c	FUNCTION_143	IF_2
0x400e75e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9578	elf.c	FUNCTION_143	IF_2
0x400e760	        0x400f97c5	                                seta bpl	      9578	elf.c	FUNCTION_143	IF_2
0x400e764	           0xf92c0	                                 setb al	      9578	elf.c	FUNCTION_143	IF_2
0x400e767	            0x29c5	                            sub ebp, eax	      9578	elf.c	FUNCTION_143	IF_2
0x400e769	        0x400fbeed	                          movsx ebp, bpl	      9578	elf.c	FUNCTION_143	IF_2
0x400e76d	            0x85ed	                           test ebp, ebp	      9578	elf.c	FUNCTION_143	IF_2
0x400e76f	     0xf85fb010000	                           jne 0x400e970	      9578	elf.c	FUNCTION_143	IF_2
0x400e775	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      9581	elf.c	FUNCTION_143
0x400e779	          0xff5238	                 call qword [rdx + 0x38]	      9581	elf.c	FUNCTION_143
0x400e77c	          0x83f802	                              cmp eax, 2	      9583	elf.c	FUNCTION_143	SWITCH_1
0x400e77f	            0x7465	                            je 0x400e7e6	      9583	elf.c	FUNCTION_143	SWITCH_1
0x400e781	          0x83f803	                              cmp eax, 3	      9583	elf.c	FUNCTION_143	SWITCH_1
0x400e784	     0xf843e010000	                            je 0x400e8c8	      9583	elf.c	FUNCTION_143	SWITCH_1
0x400e78a	      0xbd01000000	                              mov ebp, 1	      9647	elf.c	FUNCTION_143	SWITCH_1
0x400e78f	          0x83f801	                              cmp eax, 1	      9583	elf.c	FUNCTION_143	SWITCH_1
0x400e792	     0xf851d080000	                           jne 0x400efb5	      9583	elf.c	FUNCTION_143	SWITCH_1
0x400e798	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      9588	elf.c	FUNCTION_143	SWITCH_1	CALL_1
0x400e7a0	    0x488ba8900c00	           mov rbp, qword [rax + 0xc90] 	      9588	elf.c	FUNCTION_143	SWITCH_1	CALL_1
0x400e7a7	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      9588	elf.c	FUNCTION_143	SWITCH_1	CALL_1
0x400e7ab	        0x488d7808	                      lea rdi, [rax + 8]	      9588	elf.c	FUNCTION_143	SWITCH_1	CALL_1
0x400e7af	      0x498b442408	                mov rax, qword [r12 + 8]	      9588	elf.c	FUNCTION_143	SWITCH_1	CALL_1
0x400e7b4	          0xff5038	                 call qword [rax + 0x38]	      9588	elf.c	FUNCTION_143	SWITCH_1	CALL_1
0x400e7b7	          0x894504	                mov dword [rbp + 4], eax	      9588	elf.c	FUNCTION_143	SWITCH_1	CALL_1
0x400e7ba	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      9590	elf.c	FUNCTION_143	SWITCH_1	CALL_2
0x400e7c2	    0x488ba8900c00	           mov rbp, qword [rax + 0xc90] 	      9590	elf.c	FUNCTION_143	SWITCH_1	CALL_2
0x400e7c9	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      9590	elf.c	FUNCTION_143	SWITCH_1	CALL_2
0x400e7cd	        0x4883c70c	                            add rdi, 0xc	      9590	elf.c	FUNCTION_143	SWITCH_1	CALL_2
0x400e7d1	      0x498b442408	                mov rax, qword [r12 + 8]	      9590	elf.c	FUNCTION_143	SWITCH_1	CALL_2
0x400e7d6	          0xff5038	                 call qword [rax + 0x38]	      9590	elf.c	FUNCTION_143	SWITCH_1	CALL_2
0x400e7d9	          0x894500	                    mov dword [rbp], eax	      9590	elf.c	FUNCTION_143	SWITCH_1	CALL_2
0x400e7dc	      0xbd01000000	                              mov ebp, 1	      9650	elf.c	FUNCTION_143
0x400e7e1	      0xe9cf070000	                           jmp 0x400efb5	      9650	elf.c	FUNCTION_143
0x400e7e6	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      9596	elf.c	FUNCTION_143	SWITCH_1
0x400e7ea	        0x488d7808	                      lea rdi, [rax + 8]	      9596	elf.c	FUNCTION_143	SWITCH_1
0x400e7ee	      0x498b442408	                mov rax, qword [r12 + 8]	      9596	elf.c	FUNCTION_143	SWITCH_1
0x400e7f3	          0xff5038	                 call qword [rax + 0x38]	      9596	elf.c	FUNCTION_143	SWITCH_1
0x400e7f6	          0x4989c0	                             mov r8, rax	      9596	elf.c	FUNCTION_143	SWITCH_1
0x400e7f9	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x400e7fe	      0xba1e000000	                           mov edx, 0x1e	        33	stdio2.h	FUNCTION_204	CALL_1
0x400e803	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_204	CALL_1
0x400e808	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_204	CALL_1
0x400e80b	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x400e810	      0xe800000000	                          call 0x400e815	        33	stdio2.h	FUNCTION_204	CALL_1
0x400e815	      0xb800000000	                              mov eax, 0	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_3
0x400e81a	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_3
0x400e821	          0x4889e7	                            mov rdi, rsp	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_3
0x400e824	            0xf2ae	              repne scasb al, byte [rdi]	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_3
0x400e826	          0x48f7d1	                                 not rcx	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_3
0x400e829	          0x4989cd	                            mov r13, rcx	      9598	elf.c	FUNCTION_143	SWITCH_1	CALL_3
0x400e82c	          0x4889ce	                            mov rsi, rcx	      9599	elf.c	FUNCTION_143	SWITCH_1	CALL_4
0x400e82f	          0x4c89e7	                            mov rdi, r12	      9599	elf.c	FUNCTION_143	SWITCH_1	CALL_4
0x400e832	      0xe800000000	                          call 0x400e837	      9599	elf.c	FUNCTION_143	SWITCH_1	CALL_4
0x400e837	          0x4989c6	                            mov r14, rax	      9599	elf.c	FUNCTION_143	SWITCH_1	CALL_4
0x400e83a	          0x4885c0	                           test rax, rax	      9600	elf.c	FUNCTION_143	SWITCH_1	IF_3
0x400e83d	     0xf8472070000	                            je 0x400efb5	      9600	elf.c	FUNCTION_143	SWITCH_1	IF_3
0x400e843	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_221	CALL_3
0x400e846	          0x4889e6	                            mov rsi, rsp	        53	string3.h	FUNCTION_221	CALL_3
0x400e849	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_221	CALL_3
0x400e84c	      0xe800000000	                          call 0x400e851	        53	string3.h	FUNCTION_221	CALL_3
0x400e851	      0xba00010000	                          mov edx, 0x100	      9605	elf.c	FUNCTION_143	SWITCH_1	CALL_6
0x400e856	          0x4c89f6	                            mov rsi, r14	      9605	elf.c	FUNCTION_143	SWITCH_1	CALL_6
0x400e859	          0x4c89e7	                            mov rdi, r12	      9605	elf.c	FUNCTION_143	SWITCH_1	CALL_6
0x400e85c	      0xe800000000	                          call 0x400e861	      9605	elf.c	FUNCTION_143	SWITCH_1	CALL_6
0x400e861	          0x4989c5	                            mov r13, rax	      9605	elf.c	FUNCTION_143	SWITCH_1	CALL_6
0x400e864	          0x4885c0	                           test rax, rax	      9606	elf.c	FUNCTION_143	SWITCH_1	IF_4
0x400e867	     0xf8448070000	                            je 0x400efb5	      9606	elf.c	FUNCTION_143	SWITCH_1	IF_4
0x400e86d	    0x48c74038cc02	          mov qword [rax + 0x38], 0x2cc 	      9610	elf.c	FUNCTION_143	SWITCH_1
0x400e875	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      9612	elf.c	FUNCTION_143	SWITCH_1
0x400e879	        0x4883c00c	                            add rax, 0xc	      9612	elf.c	FUNCTION_143	SWITCH_1
0x400e87d	    0x498985900000	             mov qword [r13 + 0x90], rax	      9612	elf.c	FUNCTION_143	SWITCH_1
0x400e884	    0x41c745700200	               mov dword [r13 + 0x70], 2	      9613	elf.c	FUNCTION_143	SWITCH_1
0x400e88c	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      9616	elf.c	FUNCTION_143	SWITCH_1
0x400e890	        0x4883c708	                              add rdi, 8	      9616	elf.c	FUNCTION_143	SWITCH_1
0x400e894	      0x498b442408	                mov rax, qword [r12 + 8]	      9616	elf.c	FUNCTION_143	SWITCH_1
0x400e899	          0xff5038	                 call qword [rax + 0x38]	      9616	elf.c	FUNCTION_143	SWITCH_1
0x400e89c	      0xbd01000000	                              mov ebp, 1	      9650	elf.c	FUNCTION_143
0x400e8a1	            0x85c0	                           test eax, eax	      9618	elf.c	FUNCTION_143	SWITCH_1	IF_5
0x400e8a3	     0xf840c070000	                            je 0x400efb5	      9618	elf.c	FUNCTION_143	SWITCH_1	IF_5
0x400e8a9	          0x4c89ea	                            mov rdx, r13	      9619	elf.c	FUNCTION_143	SWITCH_1	IF_5	IF_6	CALL_7
0x400e8ac	      0xbe00000000	                              mov esi, 0	      9619	elf.c	FUNCTION_143	SWITCH_1	IF_5	IF_6	CALL_7
0x400e8b1	          0x4c89e7	                            mov rdi, r12	      9619	elf.c	FUNCTION_143	SWITCH_1	IF_5	IF_6	CALL_7
0x400e8b4	      0xe8e722ffff	        call sym.elfcore_maybe_make_sect	      9619	elf.c	FUNCTION_143	SWITCH_1	IF_5	IF_6	CALL_7
0x400e8b9	            0x85c0	                           test eax, eax	      9576	elf.c	FUNCTION_143	IF_1
0x400e8bb	        0x400f95c5	                               setne bpl	      9576	elf.c	FUNCTION_143	IF_1
0x400e8bf	        0x400fb6ed	                          movzx ebp, bpl	      9576	elf.c	FUNCTION_143	IF_1
0x400e8c3	      0xe9ed060000	                           jmp 0x400efb5	      9576	elf.c	FUNCTION_143	IF_1
0x400e8c8	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      9626	elf.c	FUNCTION_143	SWITCH_1
0x400e8cc	        0x488d7804	                      lea rdi, [rax + 4]	      9626	elf.c	FUNCTION_143	SWITCH_1
0x400e8d0	      0x498b442408	                mov rax, qword [r12 + 8]	      9626	elf.c	FUNCTION_143	SWITCH_1
0x400e8d5	          0xff5038	                 call qword [rax + 0x38]	      9626	elf.c	FUNCTION_143	SWITCH_1
0x400e8d8	          0x4989c0	                             mov r8, rax	      9626	elf.c	FUNCTION_143	SWITCH_1
0x400e8db	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x400e8e0	      0xba1e000000	                           mov edx, 0x1e	        33	stdio2.h	FUNCTION_204	CALL_1
0x400e8e5	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_204	CALL_1
0x400e8ea	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_204	CALL_1
0x400e8ed	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x400e8f2	      0xe800000000	                          call 0x400e8f7	        33	stdio2.h	FUNCTION_204	CALL_1
0x400e8f7	      0xb800000000	                              mov eax, 0	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x400e8fc	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x400e903	          0x4889e7	                            mov rdi, rsp	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x400e906	            0xf2ae	              repne scasb al, byte [rdi]	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x400e908	          0x48f7d1	                                 not rcx	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x400e90b	          0x4989cd	                            mov r13, rcx	      9629	elf.c	FUNCTION_143	SWITCH_1	CALL_8
0x400e90e	          0x4889ce	                            mov rsi, rcx	      9630	elf.c	FUNCTION_143	SWITCH_1	CALL_9
0x400e911	          0x4c89e7	                            mov rdi, r12	      9630	elf.c	FUNCTION_143	SWITCH_1	CALL_9
0x400e914	      0xe800000000	                          call 0x400e919	      9630	elf.c	FUNCTION_143	SWITCH_1	CALL_9
0x400e919	          0x4989c6	                            mov r14, rax	      9630	elf.c	FUNCTION_143	SWITCH_1	CALL_9
0x400e91c	          0x4885c0	                           test rax, rax	      9631	elf.c	FUNCTION_143	SWITCH_1	IF_7
0x400e91f	     0xf8490060000	                            je 0x400efb5	      9631	elf.c	FUNCTION_143	SWITCH_1	IF_7
0x400e925	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_221	CALL_3
0x400e928	          0x4889e6	                            mov rsi, rsp	        53	string3.h	FUNCTION_221	CALL_3
0x400e92b	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_221	CALL_3
0x400e92e	      0xe800000000	                          call 0x400e933	        53	string3.h	FUNCTION_221	CALL_3
0x400e933	      0xba00010000	                          mov edx, 0x100	      9636	elf.c	FUNCTION_143	SWITCH_1	CALL_11
0x400e938	          0x4c89f6	                            mov rsi, r14	      9636	elf.c	FUNCTION_143	SWITCH_1	CALL_11
0x400e93b	          0x4c89e7	                            mov rdi, r12	      9636	elf.c	FUNCTION_143	SWITCH_1	CALL_11
0x400e93e	      0xe800000000	                          call 0x400e943	      9636	elf.c	FUNCTION_143	SWITCH_1	CALL_11
0x400e943	          0x4885c0	                           test rax, rax	      9638	elf.c	FUNCTION_143	SWITCH_1	IF_8
0x400e946	     0xf8469060000	                            je 0x400efb5	      9638	elf.c	FUNCTION_143	SWITCH_1	IF_8
0x400e94c	        0x488b5308	                mov rdx, qword [rbx + 8]	      9641	elf.c	FUNCTION_143	SWITCH_1
0x400e950	        0x48895038	             mov qword [rax + 0x38], rdx	      9641	elf.c	FUNCTION_143	SWITCH_1
0x400e954	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      9642	elf.c	FUNCTION_143	SWITCH_1
0x400e958	    0x488990900000	             mov qword [rax + 0x90], rdx	      9642	elf.c	FUNCTION_143	SWITCH_1
0x400e95f	    0xc74070020000	               mov dword [rax + 0x70], 2	      9643	elf.c	FUNCTION_143	SWITCH_1
0x400e966	      0xbd01000000	                              mov ebp, 1	      9650	elf.c	FUNCTION_143
0x400e96b	      0xe945060000	                           jmp 0x400efb5	      9650	elf.c	FUNCTION_143
0x400e970	      0xbd01000000	                              mov ebp, 1	      9579	elf.c	FUNCTION_143	IF_2
0x400e975	      0xe93b060000	                           jmp 0x400efb5	      9579	elf.c	FUNCTION_143	IF_2
0x400e97a	      0xbd01000000	                              mov ebp, 1	      9694	elf.c	FUNCTION_144	SWITCH_1	ELSE_1
0x400e97f	        0x48833e06	                      cmp qword [rsi], 6	      9690	elf.c	FUNCTION_144	SWITCH_1	IF_3
0x400e983	     0xf852c060000	                           jne 0x400efb5	      9690	elf.c	FUNCTION_144	SWITCH_1	IF_3
0x400e989	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9691	elf.c	FUNCTION_144	SWITCH_1	IF_3	CALL_7
0x400e98d	      0xbf00000000	                              mov edi, 0	      9691	elf.c	FUNCTION_144	SWITCH_1	IF_3	CALL_7
0x400e992	      0xb906000000	                              mov ecx, 6	      9691	elf.c	FUNCTION_144	SWITCH_1	IF_3	CALL_7
0x400e997	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9691	elf.c	FUNCTION_144	SWITCH_1	IF_3	CALL_7
0x400e999	           0xf97c2	                                 seta dl	      9691	elf.c	FUNCTION_144	SWITCH_1	IF_3	CALL_7
0x400e99c	           0xf92c0	                                 setb al	      9691	elf.c	FUNCTION_144	SWITCH_1	IF_3	CALL_7
0x400e99f	            0x38c2	                              cmp dl, al	      9691	elf.c	FUNCTION_144	SWITCH_1	IF_3	CALL_7
0x400e9a1	     0xf850e060000	                           jne 0x400efb5	      9691	elf.c	FUNCTION_144	SWITCH_1	IF_3	CALL_7
0x400e9a7	          0x4889da	                            mov rdx, rbx	      9213	elf.c	FUNCTION_118	CALL_1
0x400e9aa	      0xbe00000000	                              mov esi, 0	      9213	elf.c	FUNCTION_118	CALL_1
0x400e9af	          0x4c89e7	                            mov rdi, r12	      9213	elf.c	FUNCTION_118	CALL_1
0x400e9b2	      0xe8feeeffff	call sym.elfcore_make_note_pseudosection	      9213	elf.c	FUNCTION_118	CALL_1
0x400e9b7	            0x89c5	                            mov ebp, eax	      9213	elf.c	FUNCTION_118	CALL_1
0x400e9b9	      0xe9f7050000	                           jmp 0x400efb5	      9692	elf.c	FUNCTION_144	SWITCH_1	CALL_8
0x400e9be	      0xbd01000000	                              mov ebp, 1	      9701	elf.c	FUNCTION_144	SWITCH_1	ELSE_2
0x400e9c3	        0x48833e06	                      cmp qword [rsi], 6	      9697	elf.c	FUNCTION_144	SWITCH_1	IF_4
0x400e9c7	     0xf85e8050000	                           jne 0x400efb5	      9697	elf.c	FUNCTION_144	SWITCH_1	IF_4
0x400e9cd	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9698	elf.c	FUNCTION_144	SWITCH_1	IF_4	CALL_9
0x400e9d1	      0xbf00000000	                              mov edi, 0	      9698	elf.c	FUNCTION_144	SWITCH_1	IF_4	CALL_9
0x400e9d6	      0xb906000000	                              mov ecx, 6	      9698	elf.c	FUNCTION_144	SWITCH_1	IF_4	CALL_9
0x400e9db	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9698	elf.c	FUNCTION_144	SWITCH_1	IF_4	CALL_9
0x400e9dd	           0xf97c2	                                 seta dl	      9698	elf.c	FUNCTION_144	SWITCH_1	IF_4	CALL_9
0x400e9e0	           0xf92c0	                                 setb al	      9698	elf.c	FUNCTION_144	SWITCH_1	IF_4	CALL_9
0x400e9e3	            0x38c2	                              cmp dl, al	      9698	elf.c	FUNCTION_144	SWITCH_1	IF_4	CALL_9
0x400e9e5	     0xf85ca050000	                           jne 0x400efb5	      9698	elf.c	FUNCTION_144	SWITCH_1	IF_4	CALL_9
0x400e9eb	          0x4889da	                            mov rdx, rbx	      9223	elf.c	FUNCTION_119	CALL_1
0x400e9ee	      0xbe00000000	                              mov esi, 0	      9223	elf.c	FUNCTION_119	CALL_1
0x400e9f3	          0x4c89e7	                            mov rdi, r12	      9223	elf.c	FUNCTION_119	CALL_1
0x400e9f6	      0xe8baeeffff	call sym.elfcore_make_note_pseudosection	      9223	elf.c	FUNCTION_119	CALL_1
0x400e9fb	            0x89c5	                            mov ebp, eax	      9223	elf.c	FUNCTION_119	CALL_1
0x400e9fd	      0xe9b3050000	                           jmp 0x400efb5	      9699	elf.c	FUNCTION_144	SWITCH_1	CALL_10
0x400ea02	      0xbd01000000	                              mov ebp, 1	      9708	elf.c	FUNCTION_144	SWITCH_1	ELSE_3
0x400ea07	        0x48833e06	                      cmp qword [rsi], 6	      9704	elf.c	FUNCTION_144	SWITCH_1	IF_5
0x400ea0b	     0xf85a4050000	                           jne 0x400efb5	      9704	elf.c	FUNCTION_144	SWITCH_1	IF_5
0x400ea11	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9705	elf.c	FUNCTION_144	SWITCH_1	IF_5	CALL_11
0x400ea15	      0xbf00000000	                              mov edi, 0	      9705	elf.c	FUNCTION_144	SWITCH_1	IF_5	CALL_11
0x400ea1a	      0xb906000000	                              mov ecx, 6	      9705	elf.c	FUNCTION_144	SWITCH_1	IF_5	CALL_11
0x400ea1f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9705	elf.c	FUNCTION_144	SWITCH_1	IF_5	CALL_11
0x400ea21	           0xf97c2	                                 seta dl	      9705	elf.c	FUNCTION_144	SWITCH_1	IF_5	CALL_11
0x400ea24	           0xf92c0	                                 setb al	      9705	elf.c	FUNCTION_144	SWITCH_1	IF_5	CALL_11
0x400ea27	            0x38c2	                              cmp dl, al	      9705	elf.c	FUNCTION_144	SWITCH_1	IF_5	CALL_11
0x400ea29	     0xf8586050000	                           jne 0x400efb5	      9705	elf.c	FUNCTION_144	SWITCH_1	IF_5	CALL_11
0x400ea2f	          0x4889da	                            mov rdx, rbx	      9229	elf.c	FUNCTION_120	CALL_1
0x400ea32	      0xbe00000000	                              mov esi, 0	      9229	elf.c	FUNCTION_120	CALL_1
0x400ea37	          0x4c89e7	                            mov rdi, r12	      9229	elf.c	FUNCTION_120	CALL_1
0x400ea3a	      0xe876eeffff	call sym.elfcore_make_note_pseudosection	      9229	elf.c	FUNCTION_120	CALL_1
0x400ea3f	            0x89c5	                            mov ebp, eax	      9229	elf.c	FUNCTION_120	CALL_1
0x400ea41	      0xe96f050000	                           jmp 0x400efb5	      9706	elf.c	FUNCTION_144	SWITCH_1	CALL_12
0x400ea46	      0xbd01000000	                              mov ebp, 1	      9715	elf.c	FUNCTION_144	SWITCH_1	ELSE_4
0x400ea4b	        0x48833e06	                      cmp qword [rsi], 6	      9711	elf.c	FUNCTION_144	SWITCH_1	IF_6
0x400ea4f	     0xf8560050000	                           jne 0x400efb5	      9711	elf.c	FUNCTION_144	SWITCH_1	IF_6
0x400ea55	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9712	elf.c	FUNCTION_144	SWITCH_1	IF_6	CALL_13
0x400ea59	      0xbf00000000	                              mov edi, 0	      9712	elf.c	FUNCTION_144	SWITCH_1	IF_6	CALL_13
0x400ea5e	      0xb906000000	                              mov ecx, 6	      9712	elf.c	FUNCTION_144	SWITCH_1	IF_6	CALL_13
0x400ea63	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9712	elf.c	FUNCTION_144	SWITCH_1	IF_6	CALL_13
0x400ea65	           0xf97c2	                                 seta dl	      9712	elf.c	FUNCTION_144	SWITCH_1	IF_6	CALL_13
0x400ea68	           0xf92c0	                                 setb al	      9712	elf.c	FUNCTION_144	SWITCH_1	IF_6	CALL_13
0x400ea6b	            0x38c2	                              cmp dl, al	      9712	elf.c	FUNCTION_144	SWITCH_1	IF_6	CALL_13
0x400ea6d	     0xf8542050000	                           jne 0x400efb5	      9712	elf.c	FUNCTION_144	SWITCH_1	IF_6	CALL_13
0x400ea73	          0x4889da	                            mov rdx, rbx	      9235	elf.c	FUNCTION_121	CALL_1
0x400ea76	      0xbe00000000	                              mov esi, 0	      9235	elf.c	FUNCTION_121	CALL_1
0x400ea7b	          0x4c89e7	                            mov rdi, r12	      9235	elf.c	FUNCTION_121	CALL_1
0x400ea7e	      0xe832eeffff	call sym.elfcore_make_note_pseudosection	      9235	elf.c	FUNCTION_121	CALL_1
0x400ea83	            0x89c5	                            mov ebp, eax	      9235	elf.c	FUNCTION_121	CALL_1
0x400ea85	      0xe92b050000	                           jmp 0x400efb5	      9713	elf.c	FUNCTION_144	SWITCH_1	CALL_14
0x400ea8a	      0xbd01000000	                              mov ebp, 1	      9722	elf.c	FUNCTION_144	SWITCH_1	ELSE_5
0x400ea8f	        0x48833e06	                      cmp qword [rsi], 6	      9718	elf.c	FUNCTION_144	SWITCH_1	IF_7
0x400ea93	     0xf851c050000	                           jne 0x400efb5	      9718	elf.c	FUNCTION_144	SWITCH_1	IF_7
0x400ea99	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9719	elf.c	FUNCTION_144	SWITCH_1	IF_7	CALL_15
0x400ea9d	      0xbf00000000	                              mov edi, 0	      9719	elf.c	FUNCTION_144	SWITCH_1	IF_7	CALL_15
0x400eaa2	      0xb906000000	                              mov ecx, 6	      9719	elf.c	FUNCTION_144	SWITCH_1	IF_7	CALL_15
0x400eaa7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9719	elf.c	FUNCTION_144	SWITCH_1	IF_7	CALL_15
0x400eaa9	           0xf97c2	                                 seta dl	      9719	elf.c	FUNCTION_144	SWITCH_1	IF_7	CALL_15
0x400eaac	           0xf92c0	                                 setb al	      9719	elf.c	FUNCTION_144	SWITCH_1	IF_7	CALL_15
0x400eaaf	            0x38c2	                              cmp dl, al	      9719	elf.c	FUNCTION_144	SWITCH_1	IF_7	CALL_15
0x400eab1	     0xf85fe040000	                           jne 0x400efb5	      9719	elf.c	FUNCTION_144	SWITCH_1	IF_7	CALL_15
0x400eab7	          0x4889da	                            mov rdx, rbx	      9241	elf.c	FUNCTION_122	CALL_1
0x400eaba	      0xbe00000000	                              mov esi, 0	      9241	elf.c	FUNCTION_122	CALL_1
0x400eabf	          0x4c89e7	                            mov rdi, r12	      9241	elf.c	FUNCTION_122	CALL_1
0x400eac2	      0xe8eeedffff	call sym.elfcore_make_note_pseudosection	      9241	elf.c	FUNCTION_122	CALL_1
0x400eac7	            0x89c5	                            mov ebp, eax	      9241	elf.c	FUNCTION_122	CALL_1
0x400eac9	      0xe9e7040000	                           jmp 0x400efb5	      9720	elf.c	FUNCTION_144	SWITCH_1	CALL_16
0x400eace	      0xbd01000000	                              mov ebp, 1	      9729	elf.c	FUNCTION_144	SWITCH_1	ELSE_6
0x400ead3	        0x48833e06	                      cmp qword [rsi], 6	      9725	elf.c	FUNCTION_144	SWITCH_1	IF_8
0x400ead7	     0xf85d8040000	                           jne 0x400efb5	      9725	elf.c	FUNCTION_144	SWITCH_1	IF_8
0x400eadd	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9726	elf.c	FUNCTION_144	SWITCH_1	IF_8	CALL_17
0x400eae1	      0xbf00000000	                              mov edi, 0	      9726	elf.c	FUNCTION_144	SWITCH_1	IF_8	CALL_17
0x400eae6	      0xb906000000	                              mov ecx, 6	      9726	elf.c	FUNCTION_144	SWITCH_1	IF_8	CALL_17
0x400eaeb	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9726	elf.c	FUNCTION_144	SWITCH_1	IF_8	CALL_17
0x400eaed	           0xf97c2	                                 seta dl	      9726	elf.c	FUNCTION_144	SWITCH_1	IF_8	CALL_17
0x400eaf0	           0xf92c0	                                 setb al	      9726	elf.c	FUNCTION_144	SWITCH_1	IF_8	CALL_17
0x400eaf3	            0x38c2	                              cmp dl, al	      9726	elf.c	FUNCTION_144	SWITCH_1	IF_8	CALL_17
0x400eaf5	     0xf85ba040000	                           jne 0x400efb5	      9726	elf.c	FUNCTION_144	SWITCH_1	IF_8	CALL_17
0x400eafb	          0x4889da	                            mov rdx, rbx	      9247	elf.c	FUNCTION_123	CALL_1
0x400eafe	      0xbe00000000	                              mov esi, 0	      9247	elf.c	FUNCTION_123	CALL_1
0x400eb03	          0x4c89e7	                            mov rdi, r12	      9247	elf.c	FUNCTION_123	CALL_1
0x400eb06	      0xe8aaedffff	call sym.elfcore_make_note_pseudosection	      9247	elf.c	FUNCTION_123	CALL_1
0x400eb0b	            0x89c5	                            mov ebp, eax	      9247	elf.c	FUNCTION_123	CALL_1
0x400eb0d	      0xe9a3040000	                           jmp 0x400efb5	      9727	elf.c	FUNCTION_144	SWITCH_1	CALL_18
0x400eb12	      0xbd01000000	                              mov ebp, 1	      9736	elf.c	FUNCTION_144	SWITCH_1	ELSE_7
0x400eb17	        0x48833e06	                      cmp qword [rsi], 6	      9732	elf.c	FUNCTION_144	SWITCH_1	IF_9
0x400eb1b	     0xf8594040000	                           jne 0x400efb5	      9732	elf.c	FUNCTION_144	SWITCH_1	IF_9
0x400eb21	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9733	elf.c	FUNCTION_144	SWITCH_1	IF_9	CALL_19
0x400eb25	      0xbf00000000	                              mov edi, 0	      9733	elf.c	FUNCTION_144	SWITCH_1	IF_9	CALL_19
0x400eb2a	      0xb906000000	                              mov ecx, 6	      9733	elf.c	FUNCTION_144	SWITCH_1	IF_9	CALL_19
0x400eb2f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9733	elf.c	FUNCTION_144	SWITCH_1	IF_9	CALL_19
0x400eb31	           0xf97c2	                                 seta dl	      9733	elf.c	FUNCTION_144	SWITCH_1	IF_9	CALL_19
0x400eb34	           0xf92c0	                                 setb al	      9733	elf.c	FUNCTION_144	SWITCH_1	IF_9	CALL_19
0x400eb37	            0x38c2	                              cmp dl, al	      9733	elf.c	FUNCTION_144	SWITCH_1	IF_9	CALL_19
0x400eb39	     0xf8576040000	                           jne 0x400efb5	      9733	elf.c	FUNCTION_144	SWITCH_1	IF_9	CALL_19
0x400eb3f	          0x4889da	                            mov rdx, rbx	      9253	elf.c	FUNCTION_124	CALL_1
0x400eb42	      0xbe00000000	                              mov esi, 0	      9253	elf.c	FUNCTION_124	CALL_1
0x400eb47	          0x4c89e7	                            mov rdi, r12	      9253	elf.c	FUNCTION_124	CALL_1
0x400eb4a	      0xe866edffff	call sym.elfcore_make_note_pseudosection	      9253	elf.c	FUNCTION_124	CALL_1
0x400eb4f	            0x89c5	                            mov ebp, eax	      9253	elf.c	FUNCTION_124	CALL_1
0x400eb51	      0xe95f040000	                           jmp 0x400efb5	      9734	elf.c	FUNCTION_144	SWITCH_1	CALL_20
0x400eb56	      0xbd01000000	                              mov ebp, 1	      9743	elf.c	FUNCTION_144	SWITCH_1	ELSE_8
0x400eb5b	        0x48833e06	                      cmp qword [rsi], 6	      9739	elf.c	FUNCTION_144	SWITCH_1	IF_10
0x400eb5f	     0xf8550040000	                           jne 0x400efb5	      9739	elf.c	FUNCTION_144	SWITCH_1	IF_10
0x400eb65	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9740	elf.c	FUNCTION_144	SWITCH_1	IF_10	CALL_21
0x400eb69	      0xbf00000000	                              mov edi, 0	      9740	elf.c	FUNCTION_144	SWITCH_1	IF_10	CALL_21
0x400eb6e	      0xb906000000	                              mov ecx, 6	      9740	elf.c	FUNCTION_144	SWITCH_1	IF_10	CALL_21
0x400eb73	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9740	elf.c	FUNCTION_144	SWITCH_1	IF_10	CALL_21
0x400eb75	           0xf97c2	                                 seta dl	      9740	elf.c	FUNCTION_144	SWITCH_1	IF_10	CALL_21
0x400eb78	           0xf92c0	                                 setb al	      9740	elf.c	FUNCTION_144	SWITCH_1	IF_10	CALL_21
0x400eb7b	            0x38c2	                              cmp dl, al	      9740	elf.c	FUNCTION_144	SWITCH_1	IF_10	CALL_21
0x400eb7d	     0xf8532040000	                           jne 0x400efb5	      9740	elf.c	FUNCTION_144	SWITCH_1	IF_10	CALL_21
0x400eb83	          0x4889da	                            mov rdx, rbx	      9259	elf.c	FUNCTION_125	CALL_1
0x400eb86	      0xbe00000000	                              mov esi, 0	      9259	elf.c	FUNCTION_125	CALL_1
0x400eb8b	          0x4c89e7	                            mov rdi, r12	      9259	elf.c	FUNCTION_125	CALL_1
0x400eb8e	      0xe822edffff	call sym.elfcore_make_note_pseudosection	      9259	elf.c	FUNCTION_125	CALL_1
0x400eb93	            0x89c5	                            mov ebp, eax	      9259	elf.c	FUNCTION_125	CALL_1
0x400eb95	      0xe91b040000	                           jmp 0x400efb5	      9741	elf.c	FUNCTION_144	SWITCH_1	CALL_22
0x400eb9a	      0xbd01000000	                              mov ebp, 1	      9750	elf.c	FUNCTION_144	SWITCH_1	ELSE_9
0x400eb9f	        0x48833e06	                      cmp qword [rsi], 6	      9746	elf.c	FUNCTION_144	SWITCH_1	IF_11
0x400eba3	     0xf850c040000	                           jne 0x400efb5	      9746	elf.c	FUNCTION_144	SWITCH_1	IF_11
0x400eba9	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9747	elf.c	FUNCTION_144	SWITCH_1	IF_11	CALL_23
0x400ebad	      0xbf00000000	                              mov edi, 0	      9747	elf.c	FUNCTION_144	SWITCH_1	IF_11	CALL_23
0x400ebb2	      0xb906000000	                              mov ecx, 6	      9747	elf.c	FUNCTION_144	SWITCH_1	IF_11	CALL_23
0x400ebb7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9747	elf.c	FUNCTION_144	SWITCH_1	IF_11	CALL_23
0x400ebb9	           0xf97c2	                                 seta dl	      9747	elf.c	FUNCTION_144	SWITCH_1	IF_11	CALL_23
0x400ebbc	           0xf92c0	                                 setb al	      9747	elf.c	FUNCTION_144	SWITCH_1	IF_11	CALL_23
0x400ebbf	            0x38c2	                              cmp dl, al	      9747	elf.c	FUNCTION_144	SWITCH_1	IF_11	CALL_23
0x400ebc1	     0xf85ee030000	                           jne 0x400efb5	      9747	elf.c	FUNCTION_144	SWITCH_1	IF_11	CALL_23
0x400ebc7	          0x4889da	                            mov rdx, rbx	      9265	elf.c	FUNCTION_126	CALL_1
0x400ebca	      0xbe00000000	                              mov esi, 0	      9265	elf.c	FUNCTION_126	CALL_1
0x400ebcf	          0x4c89e7	                            mov rdi, r12	      9265	elf.c	FUNCTION_126	CALL_1
0x400ebd2	      0xe8deecffff	call sym.elfcore_make_note_pseudosection	      9265	elf.c	FUNCTION_126	CALL_1
0x400ebd7	            0x89c5	                            mov ebp, eax	      9265	elf.c	FUNCTION_126	CALL_1
0x400ebd9	      0xe9d7030000	                           jmp 0x400efb5	      9748	elf.c	FUNCTION_144	SWITCH_1	CALL_24
0x400ebde	      0xbd01000000	                              mov ebp, 1	      9757	elf.c	FUNCTION_144	SWITCH_1	ELSE_10
0x400ebe3	        0x48833e06	                      cmp qword [rsi], 6	      9753	elf.c	FUNCTION_144	SWITCH_1	IF_12
0x400ebe7	     0xf85c8030000	                           jne 0x400efb5	      9753	elf.c	FUNCTION_144	SWITCH_1	IF_12
0x400ebed	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9754	elf.c	FUNCTION_144	SWITCH_1	IF_12	CALL_25
0x400ebf1	      0xbf00000000	                              mov edi, 0	      9754	elf.c	FUNCTION_144	SWITCH_1	IF_12	CALL_25
0x400ebf6	      0xb906000000	                              mov ecx, 6	      9754	elf.c	FUNCTION_144	SWITCH_1	IF_12	CALL_25
0x400ebfb	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9754	elf.c	FUNCTION_144	SWITCH_1	IF_12	CALL_25
0x400ebfd	           0xf97c2	                                 seta dl	      9754	elf.c	FUNCTION_144	SWITCH_1	IF_12	CALL_25
0x400ec00	           0xf92c0	                                 setb al	      9754	elf.c	FUNCTION_144	SWITCH_1	IF_12	CALL_25
0x400ec03	            0x38c2	                              cmp dl, al	      9754	elf.c	FUNCTION_144	SWITCH_1	IF_12	CALL_25
0x400ec05	     0xf85aa030000	                           jne 0x400efb5	      9754	elf.c	FUNCTION_144	SWITCH_1	IF_12	CALL_25
0x400ec0b	          0x4889da	                            mov rdx, rbx	      9271	elf.c	FUNCTION_127	CALL_1
0x400ec0e	      0xbe00000000	                              mov esi, 0	      9271	elf.c	FUNCTION_127	CALL_1
0x400ec13	          0x4c89e7	                            mov rdi, r12	      9271	elf.c	FUNCTION_127	CALL_1
0x400ec16	      0xe89aecffff	call sym.elfcore_make_note_pseudosection	      9271	elf.c	FUNCTION_127	CALL_1
0x400ec1b	            0x89c5	                            mov ebp, eax	      9271	elf.c	FUNCTION_127	CALL_1
0x400ec1d	      0xe993030000	                           jmp 0x400efb5	      9755	elf.c	FUNCTION_144	SWITCH_1	CALL_26
0x400ec22	      0xbd01000000	                              mov ebp, 1	      9764	elf.c	FUNCTION_144	SWITCH_1	ELSE_11
0x400ec27	        0x48833e06	                      cmp qword [rsi], 6	      9760	elf.c	FUNCTION_144	SWITCH_1	IF_13
0x400ec2b	     0xf8584030000	                           jne 0x400efb5	      9760	elf.c	FUNCTION_144	SWITCH_1	IF_13
0x400ec31	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9761	elf.c	FUNCTION_144	SWITCH_1	IF_13	CALL_27
0x400ec35	      0xbf00000000	                              mov edi, 0	      9761	elf.c	FUNCTION_144	SWITCH_1	IF_13	CALL_27
0x400ec3a	      0xb906000000	                              mov ecx, 6	      9761	elf.c	FUNCTION_144	SWITCH_1	IF_13	CALL_27
0x400ec3f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9761	elf.c	FUNCTION_144	SWITCH_1	IF_13	CALL_27
0x400ec41	           0xf97c2	                                 seta dl	      9761	elf.c	FUNCTION_144	SWITCH_1	IF_13	CALL_27
0x400ec44	           0xf92c0	                                 setb al	      9761	elf.c	FUNCTION_144	SWITCH_1	IF_13	CALL_27
0x400ec47	            0x38c2	                              cmp dl, al	      9761	elf.c	FUNCTION_144	SWITCH_1	IF_13	CALL_27
0x400ec49	     0xf8566030000	                           jne 0x400efb5	      9761	elf.c	FUNCTION_144	SWITCH_1	IF_13	CALL_27
0x400ec4f	          0x4889da	                            mov rdx, rbx	      9277	elf.c	FUNCTION_128	CALL_1
0x400ec52	      0xbe00000000	                              mov esi, 0	      9277	elf.c	FUNCTION_128	CALL_1
0x400ec57	          0x4c89e7	                            mov rdi, r12	      9277	elf.c	FUNCTION_128	CALL_1
0x400ec5a	      0xe856ecffff	call sym.elfcore_make_note_pseudosection	      9277	elf.c	FUNCTION_128	CALL_1
0x400ec5f	            0x89c5	                            mov ebp, eax	      9277	elf.c	FUNCTION_128	CALL_1
0x400ec61	      0xe94f030000	                           jmp 0x400efb5	      9762	elf.c	FUNCTION_144	SWITCH_1	CALL_28
0x400ec66	      0xbd01000000	                              mov ebp, 1	      9771	elf.c	FUNCTION_144	SWITCH_1	ELSE_12
0x400ec6b	        0x48833e06	                      cmp qword [rsi], 6	      9767	elf.c	FUNCTION_144	SWITCH_1	IF_14
0x400ec6f	     0xf8540030000	                           jne 0x400efb5	      9767	elf.c	FUNCTION_144	SWITCH_1	IF_14
0x400ec75	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9768	elf.c	FUNCTION_144	SWITCH_1	IF_14	CALL_29
0x400ec79	      0xbf00000000	                              mov edi, 0	      9768	elf.c	FUNCTION_144	SWITCH_1	IF_14	CALL_29
0x400ec7e	      0xb906000000	                              mov ecx, 6	      9768	elf.c	FUNCTION_144	SWITCH_1	IF_14	CALL_29
0x400ec83	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9768	elf.c	FUNCTION_144	SWITCH_1	IF_14	CALL_29
0x400ec85	           0xf97c2	                                 seta dl	      9768	elf.c	FUNCTION_144	SWITCH_1	IF_14	CALL_29
0x400ec88	           0xf92c0	                                 setb al	      9768	elf.c	FUNCTION_144	SWITCH_1	IF_14	CALL_29
0x400ec8b	            0x38c2	                              cmp dl, al	      9768	elf.c	FUNCTION_144	SWITCH_1	IF_14	CALL_29
0x400ec8d	     0xf8522030000	                           jne 0x400efb5	      9768	elf.c	FUNCTION_144	SWITCH_1	IF_14	CALL_29
0x400ec93	          0x4889da	                            mov rdx, rbx	      9283	elf.c	FUNCTION_129	CALL_1
0x400ec96	      0xbe00000000	                              mov esi, 0	      9283	elf.c	FUNCTION_129	CALL_1
0x400ec9b	          0x4c89e7	                            mov rdi, r12	      9283	elf.c	FUNCTION_129	CALL_1
0x400ec9e	      0xe812ecffff	call sym.elfcore_make_note_pseudosection	      9283	elf.c	FUNCTION_129	CALL_1
0x400eca3	            0x89c5	                            mov ebp, eax	      9283	elf.c	FUNCTION_129	CALL_1
0x400eca5	      0xe90b030000	                           jmp 0x400efb5	      9769	elf.c	FUNCTION_144	SWITCH_1	CALL_30
0x400ecaa	      0xbd01000000	                              mov ebp, 1	      9778	elf.c	FUNCTION_144	SWITCH_1	ELSE_13
0x400ecaf	        0x48833e06	                      cmp qword [rsi], 6	      9774	elf.c	FUNCTION_144	SWITCH_1	IF_15
0x400ecb3	     0xf85fc020000	                           jne 0x400efb5	      9774	elf.c	FUNCTION_144	SWITCH_1	IF_15
0x400ecb9	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9775	elf.c	FUNCTION_144	SWITCH_1	IF_15	CALL_31
0x400ecbd	      0xbf00000000	                              mov edi, 0	      9775	elf.c	FUNCTION_144	SWITCH_1	IF_15	CALL_31
0x400ecc2	      0xb906000000	                              mov ecx, 6	      9775	elf.c	FUNCTION_144	SWITCH_1	IF_15	CALL_31
0x400ecc7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9775	elf.c	FUNCTION_144	SWITCH_1	IF_15	CALL_31
0x400ecc9	           0xf97c2	                                 seta dl	      9775	elf.c	FUNCTION_144	SWITCH_1	IF_15	CALL_31
0x400eccc	           0xf92c0	                                 setb al	      9775	elf.c	FUNCTION_144	SWITCH_1	IF_15	CALL_31
0x400eccf	            0x38c2	                              cmp dl, al	      9775	elf.c	FUNCTION_144	SWITCH_1	IF_15	CALL_31
0x400ecd1	     0xf85de020000	                           jne 0x400efb5	      9775	elf.c	FUNCTION_144	SWITCH_1	IF_15	CALL_31
0x400ecd7	          0x4889da	                            mov rdx, rbx	      9289	elf.c	FUNCTION_130	CALL_1
0x400ecda	      0xbe00000000	                              mov esi, 0	      9289	elf.c	FUNCTION_130	CALL_1
0x400ecdf	          0x4c89e7	                            mov rdi, r12	      9289	elf.c	FUNCTION_130	CALL_1
0x400ece2	      0xe8ceebffff	call sym.elfcore_make_note_pseudosection	      9289	elf.c	FUNCTION_130	CALL_1
0x400ece7	            0x89c5	                            mov ebp, eax	      9289	elf.c	FUNCTION_130	CALL_1
0x400ece9	      0xe9c7020000	                           jmp 0x400efb5	      9776	elf.c	FUNCTION_144	SWITCH_1	CALL_32
0x400ecee	      0xbd01000000	                              mov ebp, 1	      9785	elf.c	FUNCTION_144	SWITCH_1	ELSE_14
0x400ecf3	        0x48833e06	                      cmp qword [rsi], 6	      9781	elf.c	FUNCTION_144	SWITCH_1	IF_16
0x400ecf7	     0xf85b8020000	                           jne 0x400efb5	      9781	elf.c	FUNCTION_144	SWITCH_1	IF_16
0x400ecfd	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9782	elf.c	FUNCTION_144	SWITCH_1	IF_16	CALL_33
0x400ed01	      0xbf00000000	                              mov edi, 0	      9782	elf.c	FUNCTION_144	SWITCH_1	IF_16	CALL_33
0x400ed06	      0xb906000000	                              mov ecx, 6	      9782	elf.c	FUNCTION_144	SWITCH_1	IF_16	CALL_33
0x400ed0b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9782	elf.c	FUNCTION_144	SWITCH_1	IF_16	CALL_33
0x400ed0d	           0xf97c2	                                 seta dl	      9782	elf.c	FUNCTION_144	SWITCH_1	IF_16	CALL_33
0x400ed10	           0xf92c0	                                 setb al	      9782	elf.c	FUNCTION_144	SWITCH_1	IF_16	CALL_33
0x400ed13	            0x38c2	                              cmp dl, al	      9782	elf.c	FUNCTION_144	SWITCH_1	IF_16	CALL_33
0x400ed15	     0xf859a020000	                           jne 0x400efb5	      9782	elf.c	FUNCTION_144	SWITCH_1	IF_16	CALL_33
0x400ed1b	          0x4889da	                            mov rdx, rbx	      9295	elf.c	FUNCTION_131	CALL_1
0x400ed1e	      0xbe00000000	                              mov esi, 0	      9295	elf.c	FUNCTION_131	CALL_1
0x400ed23	          0x4c89e7	                            mov rdi, r12	      9295	elf.c	FUNCTION_131	CALL_1
0x400ed26	      0xe88aebffff	call sym.elfcore_make_note_pseudosection	      9295	elf.c	FUNCTION_131	CALL_1
0x400ed2b	            0x89c5	                            mov ebp, eax	      9295	elf.c	FUNCTION_131	CALL_1
0x400ed2d	      0xe983020000	                           jmp 0x400efb5	      9783	elf.c	FUNCTION_144	SWITCH_1	CALL_34
0x400ed32	      0xbd01000000	                              mov ebp, 1	      9792	elf.c	FUNCTION_144	SWITCH_1	ELSE_15
0x400ed37	        0x48833e06	                      cmp qword [rsi], 6	      9788	elf.c	FUNCTION_144	SWITCH_1	IF_17
0x400ed3b	     0xf8574020000	                           jne 0x400efb5	      9788	elf.c	FUNCTION_144	SWITCH_1	IF_17
0x400ed41	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9789	elf.c	FUNCTION_144	SWITCH_1	IF_17	CALL_35
0x400ed45	      0xbf00000000	                              mov edi, 0	      9789	elf.c	FUNCTION_144	SWITCH_1	IF_17	CALL_35
0x400ed4a	      0xb906000000	                              mov ecx, 6	      9789	elf.c	FUNCTION_144	SWITCH_1	IF_17	CALL_35
0x400ed4f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9789	elf.c	FUNCTION_144	SWITCH_1	IF_17	CALL_35
0x400ed51	           0xf97c2	                                 seta dl	      9789	elf.c	FUNCTION_144	SWITCH_1	IF_17	CALL_35
0x400ed54	           0xf92c0	                                 setb al	      9789	elf.c	FUNCTION_144	SWITCH_1	IF_17	CALL_35
0x400ed57	            0x38c2	                              cmp dl, al	      9789	elf.c	FUNCTION_144	SWITCH_1	IF_17	CALL_35
0x400ed59	     0xf8556020000	                           jne 0x400efb5	      9789	elf.c	FUNCTION_144	SWITCH_1	IF_17	CALL_35
0x400ed5f	          0x4889da	                            mov rdx, rbx	      9301	elf.c	FUNCTION_132	CALL_1
0x400ed62	      0xbe00000000	                              mov esi, 0	      9301	elf.c	FUNCTION_132	CALL_1
0x400ed67	          0x4c89e7	                            mov rdi, r12	      9301	elf.c	FUNCTION_132	CALL_1
0x400ed6a	      0xe846ebffff	call sym.elfcore_make_note_pseudosection	      9301	elf.c	FUNCTION_132	CALL_1
0x400ed6f	            0x89c5	                            mov ebp, eax	      9301	elf.c	FUNCTION_132	CALL_1
0x400ed71	      0xe93f020000	                           jmp 0x400efb5	      9790	elf.c	FUNCTION_144	SWITCH_1	CALL_36
0x400ed76	      0xbd01000000	                              mov ebp, 1	      9799	elf.c	FUNCTION_144	SWITCH_1	ELSE_16
0x400ed7b	        0x48833e06	                      cmp qword [rsi], 6	      9795	elf.c	FUNCTION_144	SWITCH_1	IF_18
0x400ed7f	     0xf8530020000	                           jne 0x400efb5	      9795	elf.c	FUNCTION_144	SWITCH_1	IF_18
0x400ed85	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9796	elf.c	FUNCTION_144	SWITCH_1	IF_18	CALL_37
0x400ed89	      0xbf00000000	                              mov edi, 0	      9796	elf.c	FUNCTION_144	SWITCH_1	IF_18	CALL_37
0x400ed8e	      0xb906000000	                              mov ecx, 6	      9796	elf.c	FUNCTION_144	SWITCH_1	IF_18	CALL_37
0x400ed93	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9796	elf.c	FUNCTION_144	SWITCH_1	IF_18	CALL_37
0x400ed95	           0xf97c2	                                 seta dl	      9796	elf.c	FUNCTION_144	SWITCH_1	IF_18	CALL_37
0x400ed98	           0xf92c0	                                 setb al	      9796	elf.c	FUNCTION_144	SWITCH_1	IF_18	CALL_37
0x400ed9b	            0x38c2	                              cmp dl, al	      9796	elf.c	FUNCTION_144	SWITCH_1	IF_18	CALL_37
0x400ed9d	     0xf8512020000	                           jne 0x400efb5	      9796	elf.c	FUNCTION_144	SWITCH_1	IF_18	CALL_37
0x400eda3	          0x4889da	                            mov rdx, rbx	      9307	elf.c	FUNCTION_133	CALL_1
0x400eda6	      0xbe00000000	                              mov esi, 0	      9307	elf.c	FUNCTION_133	CALL_1
0x400edab	          0x4c89e7	                            mov rdi, r12	      9307	elf.c	FUNCTION_133	CALL_1
0x400edae	      0xe802ebffff	call sym.elfcore_make_note_pseudosection	      9307	elf.c	FUNCTION_133	CALL_1
0x400edb3	            0x89c5	                            mov ebp, eax	      9307	elf.c	FUNCTION_133	CALL_1
0x400edb5	      0xe9fb010000	                           jmp 0x400efb5	      9797	elf.c	FUNCTION_144	SWITCH_1	CALL_38
0x400edba	      0xbd01000000	                              mov ebp, 1	      9806	elf.c	FUNCTION_144	SWITCH_1	ELSE_17
0x400edbf	        0x48833e06	                      cmp qword [rsi], 6	      9802	elf.c	FUNCTION_144	SWITCH_1	IF_19
0x400edc3	     0xf85ec010000	                           jne 0x400efb5	      9802	elf.c	FUNCTION_144	SWITCH_1	IF_19
0x400edc9	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9803	elf.c	FUNCTION_144	SWITCH_1	IF_19	CALL_39
0x400edcd	      0xbf00000000	                              mov edi, 0	      9803	elf.c	FUNCTION_144	SWITCH_1	IF_19	CALL_39
0x400edd2	      0xb906000000	                              mov ecx, 6	      9803	elf.c	FUNCTION_144	SWITCH_1	IF_19	CALL_39
0x400edd7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9803	elf.c	FUNCTION_144	SWITCH_1	IF_19	CALL_39
0x400edd9	           0xf97c2	                                 seta dl	      9803	elf.c	FUNCTION_144	SWITCH_1	IF_19	CALL_39
0x400eddc	           0xf92c0	                                 setb al	      9803	elf.c	FUNCTION_144	SWITCH_1	IF_19	CALL_39
0x400eddf	            0x38c2	                              cmp dl, al	      9803	elf.c	FUNCTION_144	SWITCH_1	IF_19	CALL_39
0x400ede1	     0xf85ce010000	                           jne 0x400efb5	      9803	elf.c	FUNCTION_144	SWITCH_1	IF_19	CALL_39
0x400ede7	          0x4889da	                            mov rdx, rbx	      9313	elf.c	FUNCTION_134	CALL_1
0x400edea	      0xbe00000000	                              mov esi, 0	      9313	elf.c	FUNCTION_134	CALL_1
0x400edef	          0x4c89e7	                            mov rdi, r12	      9313	elf.c	FUNCTION_134	CALL_1
0x400edf2	      0xe8beeaffff	call sym.elfcore_make_note_pseudosection	      9313	elf.c	FUNCTION_134	CALL_1
0x400edf7	            0x89c5	                            mov ebp, eax	      9313	elf.c	FUNCTION_134	CALL_1
0x400edf9	      0xe9b7010000	                           jmp 0x400efb5	      9804	elf.c	FUNCTION_144	SWITCH_1	CALL_40
0x400edfe	      0xbd01000000	                              mov ebp, 1	      9813	elf.c	FUNCTION_144	SWITCH_1	ELSE_18
0x400ee03	        0x48833e06	                      cmp qword [rsi], 6	      9809	elf.c	FUNCTION_144	SWITCH_1	IF_20
0x400ee07	     0xf85a8010000	                           jne 0x400efb5	      9809	elf.c	FUNCTION_144	SWITCH_1	IF_20
0x400ee0d	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9810	elf.c	FUNCTION_144	SWITCH_1	IF_20	CALL_41
0x400ee11	      0xbf00000000	                              mov edi, 0	      9810	elf.c	FUNCTION_144	SWITCH_1	IF_20	CALL_41
0x400ee16	      0xb906000000	                              mov ecx, 6	      9810	elf.c	FUNCTION_144	SWITCH_1	IF_20	CALL_41
0x400ee1b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9810	elf.c	FUNCTION_144	SWITCH_1	IF_20	CALL_41
0x400ee1d	           0xf97c2	                                 seta dl	      9810	elf.c	FUNCTION_144	SWITCH_1	IF_20	CALL_41
0x400ee20	           0xf92c0	                                 setb al	      9810	elf.c	FUNCTION_144	SWITCH_1	IF_20	CALL_41
0x400ee23	            0x38c2	                              cmp dl, al	      9810	elf.c	FUNCTION_144	SWITCH_1	IF_20	CALL_41
0x400ee25	     0xf858a010000	                           jne 0x400efb5	      9810	elf.c	FUNCTION_144	SWITCH_1	IF_20	CALL_41
0x400ee2b	          0x4889da	                            mov rdx, rbx	      9319	elf.c	FUNCTION_135	CALL_1
0x400ee2e	      0xbe00000000	                              mov esi, 0	      9319	elf.c	FUNCTION_135	CALL_1
0x400ee33	          0x4c89e7	                            mov rdi, r12	      9319	elf.c	FUNCTION_135	CALL_1
0x400ee36	      0xe87aeaffff	call sym.elfcore_make_note_pseudosection	      9319	elf.c	FUNCTION_135	CALL_1
0x400ee3b	            0x89c5	                            mov ebp, eax	      9319	elf.c	FUNCTION_135	CALL_1
0x400ee3d	      0xe973010000	                           jmp 0x400efb5	      9811	elf.c	FUNCTION_144	SWITCH_1	CALL_42
0x400ee42	      0xbd01000000	                              mov ebp, 1	      9820	elf.c	FUNCTION_144	SWITCH_1	ELSE_19
0x400ee47	        0x48833e06	                      cmp qword [rsi], 6	      9816	elf.c	FUNCTION_144	SWITCH_1	IF_21
0x400ee4b	     0xf8564010000	                           jne 0x400efb5	      9816	elf.c	FUNCTION_144	SWITCH_1	IF_21
0x400ee51	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9817	elf.c	FUNCTION_144	SWITCH_1	IF_21	CALL_43
0x400ee55	      0xbf00000000	                              mov edi, 0	      9817	elf.c	FUNCTION_144	SWITCH_1	IF_21	CALL_43
0x400ee5a	      0xb906000000	                              mov ecx, 6	      9817	elf.c	FUNCTION_144	SWITCH_1	IF_21	CALL_43
0x400ee5f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9817	elf.c	FUNCTION_144	SWITCH_1	IF_21	CALL_43
0x400ee61	           0xf97c2	                                 seta dl	      9817	elf.c	FUNCTION_144	SWITCH_1	IF_21	CALL_43
0x400ee64	           0xf92c0	                                 setb al	      9817	elf.c	FUNCTION_144	SWITCH_1	IF_21	CALL_43
0x400ee67	            0x38c2	                              cmp dl, al	      9817	elf.c	FUNCTION_144	SWITCH_1	IF_21	CALL_43
0x400ee69	     0xf8546010000	                           jne 0x400efb5	      9817	elf.c	FUNCTION_144	SWITCH_1	IF_21	CALL_43
0x400ee6f	          0x4889da	                            mov rdx, rbx	      9325	elf.c	FUNCTION_136	CALL_1
0x400ee72	      0xbe00000000	                              mov esi, 0	      9325	elf.c	FUNCTION_136	CALL_1
0x400ee77	          0x4c89e7	                            mov rdi, r12	      9325	elf.c	FUNCTION_136	CALL_1
0x400ee7a	      0xe836eaffff	call sym.elfcore_make_note_pseudosection	      9325	elf.c	FUNCTION_136	CALL_1
0x400ee7f	            0x89c5	                            mov ebp, eax	      9325	elf.c	FUNCTION_136	CALL_1
0x400ee81	      0xe92f010000	                           jmp 0x400efb5	      9818	elf.c	FUNCTION_144	SWITCH_1	CALL_44
0x400ee86	      0xbd01000000	                              mov ebp, 1	      9827	elf.c	FUNCTION_144	SWITCH_1	ELSE_20
0x400ee8b	        0x48833e06	                      cmp qword [rsi], 6	      9823	elf.c	FUNCTION_144	SWITCH_1	IF_22
0x400ee8f	     0xf8520010000	                           jne 0x400efb5	      9823	elf.c	FUNCTION_144	SWITCH_1	IF_22
0x400ee95	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9824	elf.c	FUNCTION_144	SWITCH_1	IF_22	CALL_45
0x400ee99	      0xbf00000000	                              mov edi, 0	      9824	elf.c	FUNCTION_144	SWITCH_1	IF_22	CALL_45
0x400ee9e	      0xb906000000	                              mov ecx, 6	      9824	elf.c	FUNCTION_144	SWITCH_1	IF_22	CALL_45
0x400eea3	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9824	elf.c	FUNCTION_144	SWITCH_1	IF_22	CALL_45
0x400eea5	           0xf97c2	                                 seta dl	      9824	elf.c	FUNCTION_144	SWITCH_1	IF_22	CALL_45
0x400eea8	           0xf92c0	                                 setb al	      9824	elf.c	FUNCTION_144	SWITCH_1	IF_22	CALL_45
0x400eeab	            0x38c2	                              cmp dl, al	      9824	elf.c	FUNCTION_144	SWITCH_1	IF_22	CALL_45
0x400eead	     0xf8502010000	                           jne 0x400efb5	      9824	elf.c	FUNCTION_144	SWITCH_1	IF_22	CALL_45
0x400eeb3	          0x4889da	                            mov rdx, rbx	      9331	elf.c	FUNCTION_137	CALL_1
0x400eeb6	      0xbe00000000	                              mov esi, 0	      9331	elf.c	FUNCTION_137	CALL_1
0x400eebb	          0x4c89e7	                            mov rdi, r12	      9331	elf.c	FUNCTION_137	CALL_1
0x400eebe	      0xe8f2e9ffff	call sym.elfcore_make_note_pseudosection	      9331	elf.c	FUNCTION_137	CALL_1
0x400eec3	            0x89c5	                            mov ebp, eax	      9331	elf.c	FUNCTION_137	CALL_1
0x400eec5	      0xe9eb000000	                           jmp 0x400efb5	      9825	elf.c	FUNCTION_144	SWITCH_1	CALL_46
0x400eeca	      0xbd01000000	                              mov ebp, 1	      9834	elf.c	FUNCTION_144	SWITCH_1	ELSE_21
0x400eecf	        0x48833e06	                      cmp qword [rsi], 6	      9830	elf.c	FUNCTION_144	SWITCH_1	IF_23
0x400eed3	     0xf85dc000000	                           jne 0x400efb5	      9830	elf.c	FUNCTION_144	SWITCH_1	IF_23
0x400eed9	        0x488b7618	            mov rsi, qword [rsi + 0x18] 	      9831	elf.c	FUNCTION_144	SWITCH_1	IF_23	CALL_47
0x400eedd	      0xbf00000000	                              mov edi, 0	      9831	elf.c	FUNCTION_144	SWITCH_1	IF_23	CALL_47
0x400eee2	      0xb906000000	                              mov ecx, 6	      9831	elf.c	FUNCTION_144	SWITCH_1	IF_23	CALL_47
0x400eee7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9831	elf.c	FUNCTION_144	SWITCH_1	IF_23	CALL_47
0x400eee9	           0xf97c2	                                 seta dl	      9831	elf.c	FUNCTION_144	SWITCH_1	IF_23	CALL_47
0x400eeec	           0xf92c0	                                 setb al	      9831	elf.c	FUNCTION_144	SWITCH_1	IF_23	CALL_47
0x400eeef	            0x38c2	                              cmp dl, al	      9831	elf.c	FUNCTION_144	SWITCH_1	IF_23	CALL_47
0x400eef1	     0xf85be000000	                           jne 0x400efb5	      9831	elf.c	FUNCTION_144	SWITCH_1	IF_23	CALL_47
0x400eef7	          0x4889da	                            mov rdx, rbx	      9337	elf.c	FUNCTION_138	CALL_1
0x400eefa	      0xbe00000000	                              mov esi, 0	      9337	elf.c	FUNCTION_138	CALL_1
0x400eeff	          0x4c89e7	                            mov rdi, r12	      9337	elf.c	FUNCTION_138	CALL_1
0x400ef02	      0xe8aee9ffff	call sym.elfcore_make_note_pseudosection	      9337	elf.c	FUNCTION_138	CALL_1
0x400ef07	            0x89c5	                            mov ebp, eax	      9337	elf.c	FUNCTION_138	CALL_1
0x400ef09	      0xe9a7000000	                           jmp 0x400efb5	      9832	elf.c	FUNCTION_144	SWITCH_1	CALL_48
0x400ef0e	    0x488b81100200	           mov rax, qword [rcx + 0x210] 	      9838	elf.c	FUNCTION_144	SWITCH_1	IF_24
0x400ef15	          0x4885c0	                           test rax, rax	      9838	elf.c	FUNCTION_144	SWITCH_1	IF_24
0x400ef18	            0x7415	                            je 0x400ef2f	      9838	elf.c	FUNCTION_144	SWITCH_1	IF_24
0x400ef1a	          0x4889de	                            mov rsi, rbx	      9839	elf.c	FUNCTION_144	SWITCH_1	IF_24	IF_25
0x400ef1d	          0x4c89e7	                            mov rdi, r12	      9839	elf.c	FUNCTION_144	SWITCH_1	IF_24	IF_25
0x400ef20	            0xffd0	                                call rax	      9839	elf.c	FUNCTION_144	SWITCH_1	IF_24	IF_25
0x400ef22	      0xbd01000000	                              mov ebp, 1	      9840	elf.c	FUNCTION_144	SWITCH_1	IF_24	IF_25
0x400ef27	            0x85c0	                           test eax, eax	      9839	elf.c	FUNCTION_144	SWITCH_1	IF_24	IF_25
0x400ef29	     0xf8586000000	                           jne 0x400efb5	      9839	elf.c	FUNCTION_144	SWITCH_1	IF_24	IF_25
0x400ef2f	          0x4889de	                            mov rsi, rbx	      9842	elf.c	FUNCTION_144	SWITCH_1	CALL_49
0x400ef32	          0x4c89e7	                            mov rdi, r12	      9842	elf.c	FUNCTION_144	SWITCH_1	CALL_49
0x400ef35	      0xe802f4ffff	            call sym.elfcore_grok_psinfo	      9842	elf.c	FUNCTION_144	SWITCH_1	CALL_49
0x400ef3a	            0x89c5	                            mov ebp, eax	      9842	elf.c	FUNCTION_144	SWITCH_1	CALL_49
0x400ef3c	            0xeb77	                           jmp 0x400efb5	      9842	elf.c	FUNCTION_144	SWITCH_1	CALL_49
0x400ef3e	      0xba00010000	                          mov edx, 0x100	      9849	elf.c	FUNCTION_144	SWITCH_1	CALL_50
0x400ef43	      0xbe00000000	                              mov esi, 0	      9849	elf.c	FUNCTION_144	SWITCH_1	CALL_50
0x400ef48	      0xe800000000	                          call 0x400ef4d	      9849	elf.c	FUNCTION_144	SWITCH_1	CALL_50
0x400ef4d	          0x4989c5	                            mov r13, rax	      9849	elf.c	FUNCTION_144	SWITCH_1	CALL_50
0x400ef50	      0xbd00000000	                              mov ebp, 0	      9853	elf.c	FUNCTION_144	SWITCH_1	IF_26
0x400ef55	          0x4885c0	                           test rax, rax	      9852	elf.c	FUNCTION_144	SWITCH_1	IF_26
0x400ef58	            0x745b	                            je 0x400efb5	      9852	elf.c	FUNCTION_144	SWITCH_1	IF_26
0x400ef5a	        0x488b4308	                mov rax, qword [rbx + 8]	      9854	elf.c	FUNCTION_144	SWITCH_1
0x400ef5e	        0x49894538	             mov qword [r13 + 0x38], rax	      9854	elf.c	FUNCTION_144	SWITCH_1
0x400ef62	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      9855	elf.c	FUNCTION_144	SWITCH_1
0x400ef66	    0x498985900000	             mov qword [r13 + 0x90], rax	      9855	elf.c	FUNCTION_144	SWITCH_1
0x400ef6d	          0x4c89e7	                            mov rdi, r12	      9856	elf.c	FUNCTION_144	SWITCH_1	CALL_51
0x400ef70	      0xe800000000	                          call 0x400ef75	      9856	elf.c	FUNCTION_144	SWITCH_1	CALL_51
0x400ef75	          0x8d501f	                   lea edx, [rax + 0x1f]	      9856	elf.c	FUNCTION_144	SWITCH_1	CALL_51
0x400ef78	            0x85c0	                           test eax, eax	      9856	elf.c	FUNCTION_144	SWITCH_1	CALL_51
0x400ef7a	           0xf48c2	                          cmovs eax, edx	      9856	elf.c	FUNCTION_144	SWITCH_1	CALL_51
0x400ef7d	          0xc1f805	                              sar eax, 5	      9856	elf.c	FUNCTION_144	SWITCH_1	CALL_51
0x400ef80	          0x83c001	                              add eax, 1	      9856	elf.c	FUNCTION_144	SWITCH_1	CALL_51
0x400ef83	        0x41894570	             mov dword [r13 + 0x70], eax	      9856	elf.c	FUNCTION_144	SWITCH_1	CALL_51
0x400ef87	      0xbd01000000	                              mov ebp, 1	      9858	elf.c	FUNCTION_144	SWITCH_1
0x400ef8c	            0xeb27	                           jmp 0x400efb5	      9858	elf.c	FUNCTION_144	SWITCH_1
0x400ef8e	          0x4889f2	                            mov rdx, rsi	      9862	elf.c	FUNCTION_144	SWITCH_1	CALL_52
0x400ef91	      0xbe00000000	                              mov esi, 0	      9862	elf.c	FUNCTION_144	SWITCH_1	CALL_52
0x400ef96	      0xe81ae9ffff	call sym.elfcore_make_note_pseudosection	      9862	elf.c	FUNCTION_144	SWITCH_1	CALL_52
0x400ef9b	            0x89c5	                            mov ebp, eax	      9862	elf.c	FUNCTION_144	SWITCH_1	CALL_52
0x400ef9d	            0xeb16	                           jmp 0x400efb5	      9862	elf.c	FUNCTION_144	SWITCH_1	CALL_52
0x400ef9f	          0x4889f2	                            mov rdx, rsi	      9866	elf.c	FUNCTION_144	SWITCH_1	CALL_53
0x400efa2	      0xbe00000000	                              mov esi, 0	      9866	elf.c	FUNCTION_144	SWITCH_1	CALL_53
0x400efa7	      0xe809e9ffff	call sym.elfcore_make_note_pseudosection	      9866	elf.c	FUNCTION_144	SWITCH_1	CALL_53
0x400efac	            0x89c5	                            mov ebp, eax	      9866	elf.c	FUNCTION_144	SWITCH_1	CALL_53
0x400efae	            0xeb05	                           jmp 0x400efb5	      9866	elf.c	FUNCTION_144	SWITCH_1	CALL_53
0x400efb0	      0xbd01000000	                              mov ebp, 1	      9661	elf.c	FUNCTION_144	SWITCH_1
0x400efb5	            0x89e8	                            mov eax, ebp	      9870	elf.c	FUNCTION_144
0x400efb7	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      9870	elf.c	FUNCTION_144
0x400efbc	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9870	elf.c	FUNCTION_144
0x400efc5	            0x7405	                            je 0x400efcc	      9870	elf.c	FUNCTION_144
0x400efc7	      0xe800000000	                          call 0x400efcc	      9870	elf.c	FUNCTION_144
0x400efcc	        0x4883c430	                           add rsp, 0x30	      9870	elf.c	FUNCTION_144
0x400efd0	              0x5b	                                 pop rbx	      9870	elf.c	FUNCTION_144
0x400efd1	              0x5d	                                 pop rbp	      9870	elf.c	FUNCTION_144
0x400efd2	            0x415c	                                 pop r12	      9870	elf.c	FUNCTION_144
0x400efd4	            0x415d	                                 pop r13	      9870	elf.c	FUNCTION_144
0x400efd6	            0x415e	                                 pop r14	      9870	elf.c	FUNCTION_144
0x400efd8	              0xc3	                                     ret	      9870	elf.c	FUNCTION_144
elfcore_write_linux_prpsinfo64	FOR,0:ELSE,1:IF,1:WHILE,0:DO,0:SWITCH,0:CALL,5:functions,0	133
0x400f49f	            0x4155	                                push r13	     10618	elf.c	FUNCTION_164
0x400f4a1	            0x4154	                                push r12	     10618	elf.c	FUNCTION_164
0x400f4a3	              0x55	                                push rbp	     10618	elf.c	FUNCTION_164
0x400f4a4	              0x53	                                push rbx	     10618	elf.c	FUNCTION_164
0x400f4a5	    0x4881ec980000	                           sub rsp, 0x98	     10618	elf.c	FUNCTION_164
0x400f4ac	          0x4889fd	                            mov rbp, rdi	     10618	elf.c	FUNCTION_164
0x400f4af	          0x4989f4	                            mov r12, rsi	     10618	elf.c	FUNCTION_164
0x400f4b2	          0x4989d5	                            mov r13, rdx	     10618	elf.c	FUNCTION_164
0x400f4b5	          0x4889cb	                            mov rbx, rcx	     10618	elf.c	FUNCTION_164
0x400f4b8	    0x64488b042528	                mov rax, qword fs:[0x28]	     10618	elf.c	FUNCTION_164
0x400f4c1	    0x488984248800	             mov qword [rsp + 0x88], rax	     10618	elf.c	FUNCTION_164
0x400f4c9	            0x31c0	                            xor eax, eax	     10618	elf.c	FUNCTION_164
0x400f4cb	        0x488b4708	                mov rax, qword [rdi + 8]	     10619	elf.c	FUNCTION_164	IF_1	CALL_1
0x400f4cf	    0x488b90680300	           mov rdx, qword [rax + 0x368] 	     10619	elf.c	FUNCTION_164	IF_1	CALL_1
0x400f4d6	    0xf6828b030000	          test byte [rdx + 0x38b], 0x20 	     10619	elf.c	FUNCTION_164	IF_1	CALL_1
0x400f4dd	     0xf84de000000	                            je 0x400f5c1	     10619	elf.c	FUNCTION_164	IF_1	CALL_1
0x400f4e3	           0xfb611	                   movzx edx, byte [rcx]	       219	elf-linux-core.h	FUNCTION_240
0x400f4e6	          0x881424	                      mov byte [rsp], dl	       219	elf-linux-core.h	FUNCTION_240
0x400f4e9	         0xfb65101	               movzx edx, byte [rcx + 1]	       220	elf-linux-core.h	FUNCTION_240
0x400f4ed	        0x88542401	                  mov byte [rsp + 1], dl	       220	elf-linux-core.h	FUNCTION_240
0x400f4f1	         0xfb65102	               movzx edx, byte [rcx + 2]	       221	elf-linux-core.h	FUNCTION_240
0x400f4f5	        0x88542402	                  mov byte [rsp + 2], dl	       221	elf-linux-core.h	FUNCTION_240
0x400f4f9	         0xfb65103	               movzx edx, byte [rcx + 3]	       222	elf-linux-core.h	FUNCTION_240
0x400f4fd	        0x88542403	                  mov byte [rsp + 3], dl	       222	elf-linux-core.h	FUNCTION_240
0x400f501	      0x488d742408	                      lea rsi, [rsp + 8]	       223	elf-linux-core.h	FUNCTION_240
0x400f506	        0x488b7908	                mov rdi, qword [rcx + 8]	       223	elf-linux-core.h	FUNCTION_240
0x400f50a	          0xff5030	                 call qword [rax + 0x30]	       223	elf-linux-core.h	FUNCTION_240
0x400f50d	      0x488d742410	                   lea rsi, [rsp + 0x10]	       224	elf-linux-core.h	FUNCTION_240
0x400f512	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	       224	elf-linux-core.h	FUNCTION_240
0x400f515	        0x488b4508	                mov rax, qword [rbp + 8]	       224	elf-linux-core.h	FUNCTION_240
0x400f519	          0xff5060	                 call qword [rax + 0x60]	       224	elf-linux-core.h	FUNCTION_240
0x400f51c	      0x488d742412	                   lea rsi, [rsp + 0x12]	       225	elf-linux-core.h	FUNCTION_240
0x400f521	          0x8b7b14	            mov edi, dword [rbx + 0x14] 	       225	elf-linux-core.h	FUNCTION_240
0x400f524	        0x488b4508	                mov rax, qword [rbp + 8]	       225	elf-linux-core.h	FUNCTION_240
0x400f528	          0xff5060	                 call qword [rax + 0x60]	       225	elf-linux-core.h	FUNCTION_240
0x400f52b	      0x488d742414	                   lea rsi, [rsp + 0x14]	       226	elf-linux-core.h	FUNCTION_240
0x400f530	        0x48637b18	         movsxd rdi, dword [rbx + 0x18] 	       226	elf-linux-core.h	FUNCTION_240
0x400f534	        0x488b4508	                mov rax, qword [rbp + 8]	       226	elf-linux-core.h	FUNCTION_240
0x400f538	          0xff5048	                 call qword [rax + 0x48]	       226	elf-linux-core.h	FUNCTION_240
0x400f53b	      0x488d742418	                   lea rsi, [rsp + 0x18]	       227	elf-linux-core.h	FUNCTION_240
0x400f540	        0x48637b1c	         movsxd rdi, dword [rbx + 0x1c] 	       227	elf-linux-core.h	FUNCTION_240
0x400f544	        0x488b4508	                mov rax, qword [rbp + 8]	       227	elf-linux-core.h	FUNCTION_240
0x400f548	          0xff5048	                 call qword [rax + 0x48]	       227	elf-linux-core.h	FUNCTION_240
0x400f54b	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	       228	elf-linux-core.h	FUNCTION_240
0x400f550	        0x48637b20	         movsxd rdi, dword [rbx + 0x20] 	       228	elf-linux-core.h	FUNCTION_240
0x400f554	        0x488b4508	                mov rax, qword [rbp + 8]	       228	elf-linux-core.h	FUNCTION_240
0x400f558	          0xff5048	                 call qword [rax + 0x48]	       228	elf-linux-core.h	FUNCTION_240
0x400f55b	      0x488d742420	                   lea rsi, [rsp + 0x20]	       229	elf-linux-core.h	FUNCTION_240
0x400f560	        0x48637b24	         movsxd rdi, dword [rbx + 0x24] 	       229	elf-linux-core.h	FUNCTION_240
0x400f564	        0x488b4508	                mov rax, qword [rbp + 8]	       229	elf-linux-core.h	FUNCTION_240
0x400f568	          0xff5048	                 call qword [rax + 0x48]	       229	elf-linux-core.h	FUNCTION_240
0x400f56b	        0x488d7328	                   lea rsi, [rbx + 0x28]	       126	string3.h	FUNCTION_229	CALL_3
0x400f56f	      0x488d7c2424	                   lea rdi, [rsp + 0x24]	       126	string3.h	FUNCTION_229	CALL_3
0x400f574	      0xba10000000	                           mov edx, 0x10	       126	string3.h	FUNCTION_229	CALL_3
0x400f579	      0xe800000000	                          call 0x400f57e	       126	string3.h	FUNCTION_229	CALL_3
0x400f57e	        0x488d7339	                   lea rsi, [rbx + 0x39]	       126	string3.h	FUNCTION_229	CALL_3
0x400f582	      0x488d7c2434	                   lea rdi, [rsp + 0x34]	       126	string3.h	FUNCTION_229	CALL_3
0x400f587	      0xba50000000	                           mov edx, 0x50	       126	string3.h	FUNCTION_229	CALL_3
0x400f58c	      0xe800000000	                          call 0x400f591	       126	string3.h	FUNCTION_229	CALL_3
0x400f591	        0x4883ec08	                              sub rsp, 8	     10624	elf.c	FUNCTION_164	IF_1	CALL_3
0x400f595	      0x6884000000	                               push 0x84	     10624	elf.c	FUNCTION_164	IF_1	CALL_3
0x400f59a	      0x4c8d4c2410	                    lea r9, [rsp + 0x10]	     10624	elf.c	FUNCTION_164	IF_1	CALL_3
0x400f59f	    0x41b803000000	                              mov r8d, 3	     10624	elf.c	FUNCTION_164	IF_1	CALL_3
0x400f5a5	      0xb900000000	                              mov ecx, 0	     10624	elf.c	FUNCTION_164	IF_1	CALL_3
0x400f5aa	          0x4c89ea	                            mov rdx, r13	     10624	elf.c	FUNCTION_164	IF_1	CALL_3
0x400f5ad	          0x4c89e6	                            mov rsi, r12	     10624	elf.c	FUNCTION_164	IF_1	CALL_3
0x400f5b0	          0x4889ef	                            mov rdi, rbp	     10624	elf.c	FUNCTION_164	IF_1	CALL_3
0x400f5b3	      0xe800000000	                          call 0x400f5b8	     10624	elf.c	FUNCTION_164	IF_1	CALL_3
0x400f5b8	        0x4883c410	                           add rsp, 0x10	     10624	elf.c	FUNCTION_164	IF_1	CALL_3
0x400f5bc	      0xe9d9000000	                           jmp 0x400f69a	     10624	elf.c	FUNCTION_164	IF_1	CALL_3
0x400f5c1	           0xfb611	                   movzx edx, byte [rcx]	       166	elf-linux-core.h	FUNCTION_239
0x400f5c4	          0x881424	                      mov byte [rsp], dl	       166	elf-linux-core.h	FUNCTION_239
0x400f5c7	         0xfb65101	               movzx edx, byte [rcx + 1]	       167	elf-linux-core.h	FUNCTION_239
0x400f5cb	        0x88542401	                  mov byte [rsp + 1], dl	       167	elf-linux-core.h	FUNCTION_239
0x400f5cf	         0xfb65102	               movzx edx, byte [rcx + 2]	       168	elf-linux-core.h	FUNCTION_239
0x400f5d3	        0x88542402	                  mov byte [rsp + 2], dl	       168	elf-linux-core.h	FUNCTION_239
0x400f5d7	         0xfb65103	               movzx edx, byte [rcx + 3]	       169	elf-linux-core.h	FUNCTION_239
0x400f5db	        0x88542403	                  mov byte [rsp + 3], dl	       169	elf-linux-core.h	FUNCTION_239
0x400f5df	      0x488d742408	                      lea rsi, [rsp + 8]	       170	elf-linux-core.h	FUNCTION_239
0x400f5e4	        0x488b7908	                mov rdi, qword [rcx + 8]	       170	elf-linux-core.h	FUNCTION_239
0x400f5e8	          0xff5030	                 call qword [rax + 0x30]	       170	elf-linux-core.h	FUNCTION_239
0x400f5eb	      0x488d742410	                   lea rsi, [rsp + 0x10]	       171	elf-linux-core.h	FUNCTION_239
0x400f5f0	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	       171	elf-linux-core.h	FUNCTION_239
0x400f5f3	        0x488b4508	                mov rax, qword [rbp + 8]	       171	elf-linux-core.h	FUNCTION_239
0x400f5f7	          0xff5048	                 call qword [rax + 0x48]	       171	elf-linux-core.h	FUNCTION_239
0x400f5fa	      0x488d742414	                   lea rsi, [rsp + 0x14]	       172	elf-linux-core.h	FUNCTION_239
0x400f5ff	          0x8b7b14	            mov edi, dword [rbx + 0x14] 	       172	elf-linux-core.h	FUNCTION_239
0x400f602	        0x488b4508	                mov rax, qword [rbp + 8]	       172	elf-linux-core.h	FUNCTION_239
0x400f606	          0xff5048	                 call qword [rax + 0x48]	       172	elf-linux-core.h	FUNCTION_239
0x400f609	      0x488d742418	                   lea rsi, [rsp + 0x18]	       173	elf-linux-core.h	FUNCTION_239
0x400f60e	        0x48637b18	         movsxd rdi, dword [rbx + 0x18] 	       173	elf-linux-core.h	FUNCTION_239
0x400f612	        0x488b4508	                mov rax, qword [rbp + 8]	       173	elf-linux-core.h	FUNCTION_239
0x400f616	          0xff5048	                 call qword [rax + 0x48]	       173	elf-linux-core.h	FUNCTION_239
0x400f619	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	       174	elf-linux-core.h	FUNCTION_239
0x400f61e	        0x48637b1c	         movsxd rdi, dword [rbx + 0x1c] 	       174	elf-linux-core.h	FUNCTION_239
0x400f622	        0x488b4508	                mov rax, qword [rbp + 8]	       174	elf-linux-core.h	FUNCTION_239
0x400f626	          0xff5048	                 call qword [rax + 0x48]	       174	elf-linux-core.h	FUNCTION_239
0x400f629	      0x488d742420	                   lea rsi, [rsp + 0x20]	       175	elf-linux-core.h	FUNCTION_239
0x400f62e	        0x48637b20	         movsxd rdi, dword [rbx + 0x20] 	       175	elf-linux-core.h	FUNCTION_239
0x400f632	        0x488b4508	                mov rax, qword [rbp + 8]	       175	elf-linux-core.h	FUNCTION_239
0x400f636	          0xff5048	                 call qword [rax + 0x48]	       175	elf-linux-core.h	FUNCTION_239
0x400f639	      0x488d742424	                   lea rsi, [rsp + 0x24]	       176	elf-linux-core.h	FUNCTION_239
0x400f63e	        0x48637b24	         movsxd rdi, dword [rbx + 0x24] 	       176	elf-linux-core.h	FUNCTION_239
0x400f642	        0x488b4508	                mov rax, qword [rbp + 8]	       176	elf-linux-core.h	FUNCTION_239
0x400f646	          0xff5048	                 call qword [rax + 0x48]	       176	elf-linux-core.h	FUNCTION_239
0x400f649	        0x488d7328	                   lea rsi, [rbx + 0x28]	       126	string3.h	FUNCTION_229	CALL_3
0x400f64d	      0x488d7c2428	                   lea rdi, [rsp + 0x28]	       126	string3.h	FUNCTION_229	CALL_3
0x400f652	      0xba10000000	                           mov edx, 0x10	       126	string3.h	FUNCTION_229	CALL_3
0x400f657	      0xe800000000	                          call 0x400f65c	       126	string3.h	FUNCTION_229	CALL_3
0x400f65c	        0x488d7339	                   lea rsi, [rbx + 0x39]	       126	string3.h	FUNCTION_229	CALL_3
0x400f660	      0x488d7c2438	                   lea rdi, [rsp + 0x38]	       126	string3.h	FUNCTION_229	CALL_3
0x400f665	      0xba50000000	                           mov edx, 0x50	       126	string3.h	FUNCTION_229	CALL_3
0x400f66a	      0xe800000000	                          call 0x400f66f	       126	string3.h	FUNCTION_229	CALL_3
0x400f66f	        0x4883ec08	                              sub rsp, 8	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x400f673	      0x6888000000	                               push 0x88	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x400f678	      0x4c8d4c2410	                    lea r9, [rsp + 0x10]	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x400f67d	    0x41b803000000	                              mov r8d, 3	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x400f683	      0xb900000000	                              mov ecx, 0	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x400f688	          0x4c89ea	                            mov rdx, r13	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x400f68b	          0x4c89e6	                            mov rsi, r12	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x400f68e	          0x4889ef	                            mov rdi, rbp	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x400f691	      0xe800000000	                          call 0x400f696	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x400f696	        0x4883c410	                           add rsp, 0x10	     10632	elf.c	FUNCTION_164	ELSE_1	CALL_5
0x400f69a	    0x488b8c248800	            mov rcx, qword [rsp + 0x88] 	     10635	elf.c	FUNCTION_164
0x400f6a2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     10635	elf.c	FUNCTION_164
0x400f6ab	            0x7405	                            je 0x400f6b2	     10635	elf.c	FUNCTION_164
0x400f6ad	      0xe800000000	                          call 0x400f6b2	     10635	elf.c	FUNCTION_164
0x400f6b2	    0x4881c4980000	                           add rsp, 0x98	     10635	elf.c	FUNCTION_164
0x400f6b9	              0x5b	                                 pop rbx	     10635	elf.c	FUNCTION_164
0x400f6ba	              0x5d	                                 pop rbp	     10635	elf.c	FUNCTION_164
0x400f6bb	            0x415c	                                 pop r12	     10635	elf.c	FUNCTION_164
0x400f6bd	            0x415d	                                 pop r13	     10635	elf.c	FUNCTION_164
0x400f6bf	              0xc3	                                     ret	     10635	elf.c	FUNCTION_164
get_program_header_size	FOR,3:ELSE,0:IF,14:WHILE,1:DO,0:SWITCH,0:CALL,12:functions,0	144
0x40009a6	            0x4157	                                push r15	      4325	elf.c	FUNCTION_60
0x40009a8	            0x4156	                                push r14	      4325	elf.c	FUNCTION_60
0x40009aa	            0x4155	                                push r13	      4325	elf.c	FUNCTION_60
0x40009ac	            0x4154	                                push r12	      4325	elf.c	FUNCTION_60
0x40009ae	              0x55	                                push rbp	      4325	elf.c	FUNCTION_60
0x40009af	              0x53	                                push rbx	      4325	elf.c	FUNCTION_60
0x40009b0	        0x4883ec18	                           sub rsp, 0x18	      4325	elf.c	FUNCTION_60
0x40009b4	          0x4989fc	                            mov r12, rdi	      4325	elf.c	FUNCTION_60
0x40009b7	          0x4989f5	                            mov r13, rsi	      4325	elf.c	FUNCTION_60
0x40009ba	      0xbe00000000	                              mov esi, 0	      4334	elf.c	FUNCTION_60	CALL_1
0x40009bf	      0xe800000000	                          call 0x40009c4	      4334	elf.c	FUNCTION_60	CALL_1
0x40009c4	          0x4885c0	                           test rax, rax	      4335	elf.c	FUNCTION_60	IF_1
0x40009c7	            0x7416	                            je 0x40009df	      4335	elf.c	FUNCTION_60	IF_1
0x40009c9	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4335	elf.c	FUNCTION_60	IF_1
0x40009cc	          0x83e002	                              and eax, 2	      4335	elf.c	FUNCTION_60	IF_1
0x40009cf	          0x83f801	                              cmp eax, 1	      4341	elf.c	FUNCTION_60	IF_1
0x40009d2	          0x4819db	                            sbb rbx, rbx	      4341	elf.c	FUNCTION_60	IF_1
0x40009d5	        0x4883e3fe	             and rbx, 0xfffffffffffffffe	      4341	elf.c	FUNCTION_60	IF_1
0x40009d9	        0x4883c304	                              add rbx, 4	      4341	elf.c	FUNCTION_60	IF_1
0x40009dd	            0xeb05	                           jmp 0x40009e4	      4341	elf.c	FUNCTION_60	IF_1
0x40009df	      0xbb02000000	                              mov ebx, 2	      4332	elf.c	FUNCTION_60
0x40009e4	      0xbe00000000	                              mov esi, 0	      4344	elf.c	FUNCTION_60	IF_2	CALL_2
0x40009e9	          0x4c89e7	                            mov rdi, r12	      4344	elf.c	FUNCTION_60	IF_2	CALL_2
0x40009ec	      0xe800000000	                          call 0x40009f1	      4344	elf.c	FUNCTION_60	IF_2	CALL_2
0x40009f1	        0x4883f801	                              cmp rax, 1	      4347	elf.c	FUNCTION_60	IF_2
0x40009f5	        0x4883dbff	             sbb rbx, 0xffffffffffffffff	      4347	elf.c	FUNCTION_60	IF_2
0x40009f9	          0x4d85ed	                           test r13, r13	      4350	elf.c	FUNCTION_60	IF_3
0x40009fc	            0x740e	                            je 0x4000a0c	      4350	elf.c	FUNCTION_60	IF_3
0x40009fe	      0x410fb64503	               movzx eax, byte [r13 + 3]	      4350	elf.c	FUNCTION_60	IF_3
0x4000a03	          0x83e010	                           and eax, 0x10	      4350	elf.c	FUNCTION_60	IF_3
0x4000a06	            0x3c01	                               cmp al, 1	      4353	elf.c	FUNCTION_60	IF_3
0x4000a08	        0x4883dbff	             sbb rbx, 0xffffffffffffffff	      4353	elf.c	FUNCTION_60	IF_3
0x4000a0c	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      4356	elf.c	FUNCTION_60	IF_4	CALL_3
0x4000a14	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      4356	elf.c	FUNCTION_60	IF_4	CALL_3
0x4000a1b	      0x4883781801	               cmp qword [rax + 0x18], 1	      4359	elf.c	FUNCTION_60	IF_4
0x4000a20	        0x4883dbff	             sbb rbx, 0xffffffffffffffff	      4359	elf.c	FUNCTION_60	IF_4
0x4000a24	        0x83785401	               cmp dword [rax + 0x54], 1	      4365	elf.c	FUNCTION_60	IF_5
0x4000a28	        0x4883dbff	             sbb rbx, 0xffffffffffffffff	      4365	elf.c	FUNCTION_60	IF_5
0x4000a2c	    0x498b94249000	            mov rdx, qword [r12 + 0x90] 	      4368	elf.c	FUNCTION_60	FOR_1
0x4000a34	          0x4889d0	                            mov rax, rdx	      4368	elf.c	FUNCTION_60	FOR_1
0x4000a37	          0x4885d2	                           test rdx, rdx	      4368	elf.c	FUNCTION_60	FOR_1
0x4000a3a	     0xf8483000000	                            je 0x4000ac3	      4368	elf.c	FUNCTION_60	FOR_1
0x4000a40	        0xf6402002	               test byte [rax + 0x20], 2	      4370	elf.c	FUNCTION_60	FOR_1	IF_6
0x4000a44	            0x7457	                            je 0x4000a9d	      4370	elf.c	FUNCTION_60	FOR_1	IF_6
0x4000a46	          0x488b30	                    mov rsi, qword [rax]	      4371	elf.c	FUNCTION_60	FOR_1	IF_6
0x4000a49	      0xbf00000000	                              mov edi, 0	      4371	elf.c	FUNCTION_60	FOR_1	IF_6
0x4000a4e	      0xb905000000	                              mov ecx, 5	      4371	elf.c	FUNCTION_60	FOR_1	IF_6
0x4000a53	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4371	elf.c	FUNCTION_60	FOR_1	IF_6
0x4000a55	        0x400f97c6	                                seta sil	      4371	elf.c	FUNCTION_60	FOR_1	IF_6
0x4000a59	           0xf92c1	                                 setb cl	      4371	elf.c	FUNCTION_60	FOR_1	IF_6
0x4000a5c	          0x4038ce	                             cmp sil, cl	      4371	elf.c	FUNCTION_60	FOR_1	IF_6
0x4000a5f	            0x753c	                           jne 0x4000a9d	      4371	elf.c	FUNCTION_60	FOR_1	IF_6
0x4000a61	        0x4883c301	                              add rbx, 1	      4374	elf.c	FUNCTION_60	FOR_1	IF_6
0x4000a65	        0x83787002	               cmp dword [rax + 0x70], 2	      4382	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7
0x4000a69	            0x7532	                           jne 0x4000a9d	      4382	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7
0x4000a6b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4383	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x4000a6f	          0x4885c0	                           test rax, rax	      4383	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x4000a72	            0x7432	                            je 0x4000aa6	      4383	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x4000a74	        0x83787002	               cmp dword [rax + 0x70], 2	      4384	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x4000a78	            0x75c6	                           jne 0x4000a40	      4384	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x4000a7a	        0xf6402002	               test byte [rax + 0x20], 2	      4385	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x4000a7e	            0x74c0	                            je 0x4000a40	      4385	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x4000a80	          0x488b30	                    mov rsi, qword [rax]	      4386	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x4000a83	      0xbf00000000	                              mov edi, 0	      4386	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x4000a88	      0xb905000000	                              mov ecx, 5	      4386	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x4000a8d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4386	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x4000a8f	        0x400f97c6	                                seta sil	      4386	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x4000a93	           0xf92c1	                                 setb cl	      4386	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x4000a96	          0x4038ce	                             cmp sil, cl	      4386	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x4000a99	            0x74d0	                            je 0x4000a6b	      4386	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x4000a9b	            0xeba3	                           jmp 0x4000a40	      4386	elf.c	FUNCTION_60	FOR_1	IF_6	IF_7	WHILE_1
0x4000a9d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4368	elf.c	FUNCTION_60	FOR_1
0x4000aa1	          0x4885c0	                           test rax, rax	      4368	elf.c	FUNCTION_60	FOR_1
0x4000aa4	            0x759a	                           jne 0x4000a40	      4368	elf.c	FUNCTION_60	FOR_1
0x4000aa6	        0xf6422104	               test byte [rdx + 0x21], 4	      4393	elf.c	FUNCTION_60	FOR_2	IF_8
0x4000aaa	            0x740e	                            je 0x4000aba	      4393	elf.c	FUNCTION_60	FOR_2	IF_8
0x4000aac	            0xeb06	                           jmp 0x4000ab4	      4393	elf.c	FUNCTION_60	FOR_2	IF_8
0x4000aae	        0xf6422104	               test byte [rdx + 0x21], 4	      4393	elf.c	FUNCTION_60	FOR_2	IF_8
0x4000ab2	            0x7406	                            je 0x4000aba	      4393	elf.c	FUNCTION_60	FOR_2	IF_8
0x4000ab4	        0x4883c301	                              add rbx, 1	      4396	elf.c	FUNCTION_60	FOR_2	IF_8
0x4000ab8	            0xeb09	                           jmp 0x4000ac3	      4397	elf.c	FUNCTION_60	FOR_2	IF_8
0x4000aba	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      4391	elf.c	FUNCTION_60	FOR_2
0x4000abe	          0x4885d2	                           test rdx, rdx	      4391	elf.c	FUNCTION_60	FOR_2
0x4000ac1	            0x75eb	                           jne 0x4000aae	      4391	elf.c	FUNCTION_60	FOR_2
0x4000ac3	      0x498b442408	                mov rax, qword [r12 + 8]	      4401	elf.c	FUNCTION_60	CALL_5
0x4000ac8	    0x4c8bb8680300	           mov r15, qword [rax + 0x368] 	      4401	elf.c	FUNCTION_60	CALL_5
0x4000acf	    0x41f644244520	           test byte [r12 + 0x45], 0x20 	      4403	elf.c	FUNCTION_60	IF_9
0x4000ad5	            0x7479	                            je 0x4000b50	      4403	elf.c	FUNCTION_60	IF_9
0x4000ad7	        0x498b7f20	            mov rdi, qword [r15 + 0x20] 	      4406	elf.c	FUNCTION_60	IF_9	CALL_6
0x4000adb	      0xe800000000	                          call 0x4000ae0	      4406	elf.c	FUNCTION_60	IF_9	CALL_6
0x4000ae0	        0x8944240c	              mov dword [rsp + 0xc], eax	      4406	elf.c	FUNCTION_60	IF_9	CALL_6
0x4000ae4	    0x498bac249000	            mov rbp, qword [r12 + 0x90] 	      4407	elf.c	FUNCTION_60	IF_9	FOR_3
0x4000aec	          0x4885ed	                           test rbp, rbp	      4407	elf.c	FUNCTION_60	IF_9	FOR_3
0x4000aef	            0x745f	                            je 0x4000b50	      4407	elf.c	FUNCTION_60	IF_9	FOR_3
0x4000af1	    0x488b85e00000	            mov rax, qword [rbp + 0xe0] 	      4408	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	CALL_7
0x4000af8	        0xf6400b01	                test byte [rax + 0xb], 1	      4408	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	CALL_7
0x4000afc	            0x7449	                            je 0x4000b47	      4408	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	CALL_7
0x4000afe	        0x448b702c	           mov r14d, dword [rax + 0x2c] 	      4410	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_8
0x4000b02	    0x4181fe001000	                        cmp r14d, 0x1000	      4410	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_8
0x4000b09	            0x762c	                           jbe 0x4000b37	      4410	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_8
0x4000b0b	      0xba05000000	                              mov edx, 5	      4415	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_10
0x4000b10	      0xbe00000000	                              mov esi, 0	      4415	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_10
0x4000b15	      0xbf00000000	                              mov edi, 0	      4415	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_10
0x4000b1a	      0xe800000000	                          call 0x4000b1f	      4415	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_10
0x4000b1f	          0x4489f1	                           mov ecx, r14d	      4413	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_9
0x4000b22	          0x4889ea	                            mov rdx, rbp	      4413	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_9
0x4000b25	          0x4c89e6	                            mov rsi, r12	      4413	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_9
0x4000b28	          0x4889c7	                            mov rdi, rax	      4413	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_9
0x4000b2b	      0xb800000000	                              mov eax, 0	      4413	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_9
0x4000b30	      0xe800000000	                          call 0x4000b35	      4413	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11	CALL_9
0x4000b35	            0xeb10	                           jmp 0x4000b47	      4417	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_11
0x4000b37	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      4420	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_12
0x4000b3b	          0x3b4570	            cmp eax, dword [rbp + 0x70] 	      4420	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_12
0x4000b3e	            0x7603	                           jbe 0x4000b43	      4420	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_12
0x4000b40	          0x894570	            mov dword [rbp + 0x70], eax 	      4421	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10	IF_12
0x4000b43	        0x4883c301	                              add rbx, 1	      4422	elf.c	FUNCTION_60	IF_9	FOR_3	IF_10
0x4000b47	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      4407	elf.c	FUNCTION_60	IF_9	FOR_3
0x4000b4b	          0x4885ed	                           test rbp, rbp	      4407	elf.c	FUNCTION_60	IF_9	FOR_3
0x4000b4e	            0x75a1	                           jne 0x4000af1	      4407	elf.c	FUNCTION_60	IF_9	FOR_3
0x4000b50	    0x498b87480100	           mov rax, qword [r15 + 0x148] 	      4427	elf.c	FUNCTION_60	IF_13
0x4000b57	          0x4885c0	                           test rax, rax	      4427	elf.c	FUNCTION_60	IF_13
0x4000b5a	            0x7426	                            je 0x4000b82	      4427	elf.c	FUNCTION_60	IF_13
0x4000b5c	          0x4c89ee	                            mov rsi, r13	      4431	elf.c	FUNCTION_60	IF_13
0x4000b5f	          0x4c89e7	                            mov rdi, r12	      4431	elf.c	FUNCTION_60	IF_13
0x4000b62	            0xffd0	                                call rax	      4431	elf.c	FUNCTION_60	IF_13
0x4000b64	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      4432	elf.c	FUNCTION_60	IF_13	IF_14
0x4000b67	            0x7514	                           jne 0x4000b7d	      4432	elf.c	FUNCTION_60	IF_13	IF_14
0x4000b69	      0xba00000000	                              mov edx, 0	      4433	elf.c	FUNCTION_60	IF_13	CALL_12
0x4000b6e	      0xbe51110000	                         mov esi, 0x1151	      4433	elf.c	FUNCTION_60	IF_13	CALL_12
0x4000b73	      0xbf00000000	                              mov edi, 0	      4433	elf.c	FUNCTION_60	IF_13	CALL_12
0x4000b78	      0xe800000000	                          call 0x4000b7d	      4433	elf.c	FUNCTION_60	IF_13	CALL_12
0x4000b7d	            0x4898	                                    cdqe	      4434	elf.c	FUNCTION_60	IF_13
0x4000b7f	          0x4801c3	                            add rbx, rax	      4434	elf.c	FUNCTION_60	IF_13
0x4000b82	    0x498b87000300	           mov rax, qword [r15 + 0x300] 	      4437	elf.c	FUNCTION_60
0x4000b89	         0xfb64001	               movzx eax, byte [rax + 1]	      4437	elf.c	FUNCTION_60
0x4000b8d	        0x480fafc3	                           imul rax, rbx	      4437	elf.c	FUNCTION_60
0x4000b91	        0x4883c418	                           add rsp, 0x18	      4438	elf.c	FUNCTION_60
0x4000b95	              0x5b	                                 pop rbx	      4438	elf.c	FUNCTION_60
0x4000b96	              0x5d	                                 pop rbp	      4438	elf.c	FUNCTION_60
0x4000b97	            0x415c	                                 pop r12	      4438	elf.c	FUNCTION_60
0x4000b99	            0x415d	                                 pop r13	      4438	elf.c	FUNCTION_60
0x4000b9b	            0x415e	                                 pop r14	      4438	elf.c	FUNCTION_60
0x4000b9d	            0x415f	                                 pop r15	      4438	elf.c	FUNCTION_60
0x4000b9f	              0xc3	                                     ret	      4438	elf.c	FUNCTION_60
_bfd_elf_copy_private_symbol_data	FOR,0:ELSE,4:IF,7:WHILE,0:DO,0:SWITCH,0:CALL,8:functions,0	72
0x400b83e	        0x488b4708	                mov rax, qword [rdi + 8]	      7713	elf.c	FUNCTION_87	IF_1
0x400b842	        0x83780805	                  cmp dword [rax + 8], 5	      7713	elf.c	FUNCTION_87	IF_1
0x400b846	     0xf8504010000	                           jne 0x400b950	      7713	elf.c	FUNCTION_87	IF_1
0x400b84c	        0x488b4208	                mov rax, qword [rdx + 8]	      7714	elf.c	FUNCTION_87	IF_1
0x400b850	        0x83780805	                  cmp dword [rax + 8], 5	      7714	elf.c	FUNCTION_87	IF_1
0x400b854	     0xf85f6000000	                           jne 0x400b950	      7714	elf.c	FUNCTION_87	IF_1
0x400b85a	          0x488b06	                    mov rax, qword [rsi]	      7717	elf.c	FUNCTION_87	CALL_1
0x400b85d	          0x4885c0	                           test rax, rax	      7717	elf.c	FUNCTION_87	CALL_1
0x400b860	            0x741d	                            je 0x400b87f	      7717	elf.c	FUNCTION_87	CALL_1
0x400b862	        0x488b5008	                mov rdx, qword [rax + 8]	      7717	elf.c	FUNCTION_87	CALL_1
0x400b866	        0x837a0805	                  cmp dword [rdx + 8], 5	      7717	elf.c	FUNCTION_87	CALL_1
0x400b86a	            0x751a	                           jne 0x400b886	      7717	elf.c	FUNCTION_87	CALL_1
0x400b86c	    0x4883b8f80000	               cmp qword [rax + 0xf8], 0	      7717	elf.c	FUNCTION_87	CALL_1
0x400b874	      0xb800000000	                              mov eax, 0	      7717	elf.c	FUNCTION_87	CALL_1
0x400b879	        0x480f44f0	                          cmove rsi, rax	      7717	elf.c	FUNCTION_87	CALL_1
0x400b87d	            0xeb0c	                           jmp 0x400b88b	      7717	elf.c	FUNCTION_87	CALL_1
0x400b87f	      0xbe00000000	                              mov esi, 0	      7717	elf.c	FUNCTION_87	CALL_1
0x400b884	            0xeb05	                           jmp 0x400b88b	      7717	elf.c	FUNCTION_87	CALL_1
0x400b886	      0xbe00000000	                              mov esi, 0	      7717	elf.c	FUNCTION_87	CALL_1
0x400b88b	          0x488b01	                    mov rax, qword [rcx]	      7718	elf.c	FUNCTION_87	CALL_2
0x400b88e	          0x4885c0	                           test rax, rax	      7718	elf.c	FUNCTION_87	CALL_2
0x400b891	     0xf84b9000000	                            je 0x400b950	      7718	elf.c	FUNCTION_87	CALL_2
0x400b897	        0x488b5008	                mov rdx, qword [rax + 8]	      7718	elf.c	FUNCTION_87	CALL_2
0x400b89b	        0x837a0805	                  cmp dword [rdx + 8], 5	      7718	elf.c	FUNCTION_87	CALL_2
0x400b89f	     0xf85ab000000	                           jne 0x400b950	      7718	elf.c	FUNCTION_87	CALL_2
0x400b8a5	    0x4883b8f80000	               cmp qword [rax + 0xf8], 0	      7718	elf.c	FUNCTION_87	CALL_2
0x400b8ad	     0xf849d000000	                            je 0x400b950	      7718	elf.c	FUNCTION_87	CALL_2
0x400b8b3	          0x4885f6	                           test rsi, rsi	      7720	elf.c	FUNCTION_87	IF_2
0x400b8b6	     0xf8494000000	                            je 0x400b950	      7720	elf.c	FUNCTION_87	IF_2
0x400b8bc	          0x8b464c	            mov eax, dword [rsi + 0x4c] 	      7721	elf.c	FUNCTION_87	IF_2
0x400b8bf	            0x85c0	                           test eax, eax	      7722	elf.c	FUNCTION_87	IF_2
0x400b8c1	     0xf8489000000	                            je 0x400b950	      7722	elf.c	FUNCTION_87	IF_2
0x400b8c7	          0x4885c9	                           test rcx, rcx	      7722	elf.c	FUNCTION_87	IF_2
0x400b8ca	     0xf8480000000	                            je 0x400b950	      7722	elf.c	FUNCTION_87	IF_2
0x400b8d0	    0x48817e200000	               cmp qword [rsi + 0x20], 0	      7723	elf.c	FUNCTION_87	IF_2
0x400b8d8	            0x7576	                           jne 0x400b950	      7723	elf.c	FUNCTION_87	IF_2
0x400b8da	    0x488b97f80000	            mov rdx, qword [rdi + 0xf8] 	      7728	elf.c	FUNCTION_87	IF_2	IF_3	CALL_3
0x400b8e1	    0x3b82780c0000	           cmp eax, dword [rdx + 0xc78] 	      7728	elf.c	FUNCTION_87	IF_2	IF_3	CALL_3
0x400b8e7	            0x743c	                            je 0x400b925	      7728	elf.c	FUNCTION_87	IF_2	IF_3	CALL_3
0x400b8e9	    0x3b827c0c0000	           cmp eax, dword [rdx + 0xc7c] 	      7730	elf.c	FUNCTION_87	IF_2	ELSE_1	IF_4	CALL_4
0x400b8ef	            0x743b	                            je 0x400b92c	      7730	elf.c	FUNCTION_87	IF_2	ELSE_1	IF_4	CALL_4
0x400b8f1	    0x488bb2980c00	           mov rsi, qword [rdx + 0xc98] 	      7732	elf.c	FUNCTION_87	IF_2	ELSE_2	IF_5	CALL_5
0x400b8f8	          0x3b4650	            cmp eax, dword [rsi + 0x50] 	      7732	elf.c	FUNCTION_87	IF_2	ELSE_2	IF_5	CALL_5
0x400b8fb	            0x7436	                            je 0x400b933	      7732	elf.c	FUNCTION_87	IF_2	ELSE_2	IF_5	CALL_5
0x400b8fd	          0x3b464c	            cmp eax, dword [rsi + 0x4c] 	      7734	elf.c	FUNCTION_87	IF_2	ELSE_3	IF_6	CALL_6
0x400b900	            0x7438	                            je 0x400b93a	      7734	elf.c	FUNCTION_87	IF_2	ELSE_3	IF_6	CALL_6
0x400b902	    0x488b92e80200	           mov rdx, qword [rdx + 0x2e8] 	      7736	elf.c	FUNCTION_87	IF_2	ELSE_4	IF_7	CALL_8
0x400b909	          0x4885d2	                           test rdx, rdx	      6045	elf.c	FUNCTION_72	FOR_1
0x400b90c	            0x743f	                            je 0x400b94d	      6045	elf.c	FUNCTION_72	FOR_1
0x400b90e	          0x3b4250	            cmp eax, dword [rdx + 0x50] 	      6046	elf.c	FUNCTION_72	FOR_1	IF_1
0x400b911	            0x7507	                           jne 0x400b91a	      6046	elf.c	FUNCTION_72	FOR_1	IF_1
0x400b913	            0xeb2c	                           jmp 0x400b941	      6046	elf.c	FUNCTION_72	FOR_1	IF_1
0x400b915	          0x3b4250	            cmp eax, dword [rdx + 0x50] 	      6046	elf.c	FUNCTION_72	FOR_1	IF_1
0x400b918	            0x742e	                            je 0x400b948	      6046	elf.c	FUNCTION_72	FOR_1	IF_1
0x400b91a	        0x488b5258	            mov rdx, qword [rdx + 0x58] 	      6045	elf.c	FUNCTION_72	FOR_1
0x400b91e	          0x4885d2	                           test rdx, rdx	      6045	elf.c	FUNCTION_72	FOR_1
0x400b921	            0x75f2	                           jne 0x400b915	      6045	elf.c	FUNCTION_72	FOR_1
0x400b923	            0xeb28	                           jmp 0x400b94d	      6045	elf.c	FUNCTION_72	FOR_1
0x400b925	      0xb840ffffff	                     mov eax, 0xffffff40	      7729	elf.c	FUNCTION_87	IF_2	IF_3
0x400b92a	            0xeb21	                           jmp 0x400b94d	      7729	elf.c	FUNCTION_87	IF_2	IF_3
0x400b92c	      0xb841ffffff	                     mov eax, 0xffffff41	      7731	elf.c	FUNCTION_87	IF_2	ELSE_1	IF_4
0x400b931	            0xeb1a	                           jmp 0x400b94d	      7731	elf.c	FUNCTION_87	IF_2	ELSE_1	IF_4
0x400b933	      0xb842ffffff	                     mov eax, 0xffffff42	      7733	elf.c	FUNCTION_87	IF_2	ELSE_2	IF_5
0x400b938	            0xeb13	                           jmp 0x400b94d	      7733	elf.c	FUNCTION_87	IF_2	ELSE_2	IF_5
0x400b93a	      0xb843ffffff	                     mov eax, 0xffffff43	      7735	elf.c	FUNCTION_87	IF_2	ELSE_3	IF_6
0x400b93f	            0xeb0c	                           jmp 0x400b94d	      7735	elf.c	FUNCTION_87	IF_2	ELSE_3	IF_6
0x400b941	      0xb844ffffff	                     mov eax, 0xffffff44	      7737	elf.c	FUNCTION_87	IF_2	ELSE_4	IF_7
0x400b946	            0xeb05	                           jmp 0x400b94d	      7737	elf.c	FUNCTION_87	IF_2	ELSE_4	IF_7
0x400b948	      0xb844ffffff	                     mov eax, 0xffffff44	      7737	elf.c	FUNCTION_87	IF_2	ELSE_4	IF_7
0x400b94d	          0x89414c	             mov dword [rcx + 0x4c], eax	      7738	elf.c	FUNCTION_87	IF_2
0x400b950	      0xb801000000	                              mov eax, 1	      7742	elf.c	FUNCTION_87
0x400b955	              0xc3	                                     ret	      7742	elf.c	FUNCTION_87
elfcore_write_s390_system_call	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,1:functions,0	8
0x400f9d3	        0x4883ec10	                           sub rsp, 0x10	     10909	elf.c	FUNCTION_180
0x400f9d7	          0x4989c9	                             mov r9, rcx	     10909	elf.c	FUNCTION_180
0x400f9da	            0x4150	                                 push r8	     10911	elf.c	FUNCTION_180	CALL_1
0x400f9dc	    0x41b807030000	                          mov r8d, 0x307	     10911	elf.c	FUNCTION_180	CALL_1
0x400f9e2	      0xb900000000	                              mov ecx, 0	     10911	elf.c	FUNCTION_180	CALL_1
0x400f9e7	      0xe800000000	                          call 0x400f9ec	     10911	elf.c	FUNCTION_180	CALL_1
0x400f9ec	        0x4883c418	                           add rsp, 0x18	     10914	elf.c	FUNCTION_180
0x400f9f0	              0xc3	                                     ret	     10914	elf.c	FUNCTION_180
_bfd_elf_init_reloc_shdr	FOR,0:ELSE,1:IF,2:WHILE,0:DO,0:SWITCH,0:CALL,4:functions,0	66
0x4001144	            0x4157	                                push r15	      3091	elf.c	FUNCTION_46
0x4001146	            0x4156	                                push r14	      3091	elf.c	FUNCTION_46
0x4001148	            0x4155	                                push r13	      3091	elf.c	FUNCTION_46
0x400114a	            0x4154	                                push r12	      3091	elf.c	FUNCTION_46
0x400114c	              0x55	                                push rbp	      3091	elf.c	FUNCTION_46
0x400114d	              0x53	                                push rbx	      3091	elf.c	FUNCTION_46
0x400114e	        0x4883ec18	                           sub rsp, 0x18	      3091	elf.c	FUNCTION_46
0x4001152	          0x4889fd	                            mov rbp, rdi	      3091	elf.c	FUNCTION_46
0x4001155	          0x4989f4	                            mov r12, rsi	      3091	elf.c	FUNCTION_46
0x4001158	      0x4889542408	                mov qword [rsp + 8], rdx	      3091	elf.c	FUNCTION_46
0x400115d	          0x4189ce	                           mov r14d, ecx	      3091	elf.c	FUNCTION_46
0x4001160	          0x4589c7	                           mov r15d, r8d	      3091	elf.c	FUNCTION_46
0x4001163	        0x488b4708	                mov rax, qword [rdi + 8]	      3093	elf.c	FUNCTION_46	CALL_1
0x4001167	    0x4c8ba8680300	           mov r13, qword [rax + 0x368] 	      3093	elf.c	FUNCTION_46	CALL_1
0x400116e	        0x48833e00	                      cmp qword [rsi], 0	      3095	elf.c	FUNCTION_46	CALL_2
0x4001172	            0x740f	                            je 0x4001183	      3095	elf.c	FUNCTION_46	CALL_2
0x4001174	      0xbe170c0000	                          mov esi, 0xc17	      3095	elf.c	FUNCTION_46	CALL_2
0x4001179	      0xbf00000000	                              mov edi, 0	      3095	elf.c	FUNCTION_46	CALL_2
0x400117e	      0xe800000000	                          call 0x4001183	      3095	elf.c	FUNCTION_46	CALL_2
0x4001183	      0xbe50000000	                           mov esi, 0x50	      3096	elf.c	FUNCTION_46	CALL_3
0x4001188	          0x4889ef	                            mov rdi, rbp	      3096	elf.c	FUNCTION_46	CALL_3
0x400118b	      0xe800000000	                          call 0x4001190	      3096	elf.c	FUNCTION_46	CALL_3
0x4001190	          0x4889c3	                            mov rbx, rax	      3096	elf.c	FUNCTION_46	CALL_3
0x4001193	        0x49890424	                    mov qword [r12], rax	      3097	elf.c	FUNCTION_46
0x4001197	          0x4585ff	                         test r15d, r15d	      3099	elf.c	FUNCTION_46	IF_1
0x400119a	            0x7408	                            je 0x40011a4	      3099	elf.c	FUNCTION_46	IF_1
0x400119c	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	      3100	elf.c	FUNCTION_46	IF_1
0x40011a2	            0xeb17	                           jmp 0x40011bb	      3100	elf.c	FUNCTION_46	IF_1
0x40011a4	          0x4489f1	                           mov ecx, r14d	      3101	elf.c	FUNCTION_46	ELSE_1	IF_2	CALL_4
0x40011a7	      0x488b542408	                mov rdx, qword [rsp + 8]	      3101	elf.c	FUNCTION_46	ELSE_1	IF_2	CALL_4
0x40011ac	          0x4889c6	                            mov rsi, rax	      3101	elf.c	FUNCTION_46	ELSE_1	IF_2	CALL_4
0x40011af	          0x4889ef	                            mov rdi, rbp	      3101	elf.c	FUNCTION_46	ELSE_1	IF_2	CALL_4
0x40011b2	      0xe8e2feffff	     call sym._bfd_elf_set_reloc_sh_name	      3101	elf.c	FUNCTION_46	ELSE_1	IF_2	CALL_4
0x40011b7	            0x85c0	                           test eax, eax	      3101	elf.c	FUNCTION_46	ELSE_1	IF_2	CALL_4
0x40011b9	            0x7471	                            je 0x400122c	      3101	elf.c	FUNCTION_46	ELSE_1	IF_2	CALL_4
0x40011bb	          0x4585f6	                         test r14d, r14d	      3104	elf.c	FUNCTION_46
0x40011be	            0x7544	                           jne 0x4001204	      3104	elf.c	FUNCTION_46
0x40011c0	            0xeb56	                           jmp 0x4001218	      3104	elf.c	FUNCTION_46
0x40011c2	        0x48894338	             mov qword [rbx + 0x38], rax	      3105	elf.c	FUNCTION_46
0x40011c6	    0x498b85000300	           mov rax, qword [r13 + 0x300] 	      3108	elf.c	FUNCTION_46
0x40011cd	         0xfb6480b	            movzx ecx, byte [rax + 0xb] 	      3108	elf.c	FUNCTION_46
0x40011d1	      0xb801000000	                              mov eax, 1	      3108	elf.c	FUNCTION_46
0x40011d6	          0x48d3e0	                             shl rax, cl	      3108	elf.c	FUNCTION_46
0x40011d9	        0x48894330	             mov qword [rbx + 0x30], rax	      3108	elf.c	FUNCTION_46
0x40011dd	    0x48c743080000	                  mov qword [rbx + 8], 0	      3109	elf.c	FUNCTION_46
0x40011e5	    0x48c743100000	               mov qword [rbx + 0x10], 0	      3110	elf.c	FUNCTION_46
0x40011ed	    0x48c743200000	               mov qword [rbx + 0x20], 0	      3111	elf.c	FUNCTION_46
0x40011f5	    0x48c743180000	               mov qword [rbx + 0x18], 0	      3112	elf.c	FUNCTION_46
0x40011fd	      0xb801000000	                              mov eax, 1	      3114	elf.c	FUNCTION_46
0x4001202	            0xeb28	                           jmp 0x400122c	      3114	elf.c	FUNCTION_46
0x4001204	    0xc74304040000	                  mov dword [rbx + 4], 4	      3104	elf.c	FUNCTION_46
0x400120b	    0x498b85000300	           mov rax, qword [r13 + 0x300] 	      3106	elf.c	FUNCTION_46
0x4001212	         0xfb64004	               movzx eax, byte [rax + 4]	      3105	elf.c	FUNCTION_46
0x4001216	            0xebaa	                           jmp 0x40011c2	      3105	elf.c	FUNCTION_46
0x4001218	    0xc74304090000	                  mov dword [rbx + 4], 9	      3104	elf.c	FUNCTION_46
0x400121f	    0x498b85000300	           mov rax, qword [r13 + 0x300] 	      3107	elf.c	FUNCTION_46
0x4001226	         0xfb64003	               movzx eax, byte [rax + 3]	      3105	elf.c	FUNCTION_46
0x400122a	            0xeb96	                           jmp 0x40011c2	      3105	elf.c	FUNCTION_46
0x400122c	        0x4883c418	                           add rsp, 0x18	      3115	elf.c	FUNCTION_46
0x4001230	              0x5b	                                 pop rbx	      3115	elf.c	FUNCTION_46
0x4001231	              0x5d	                                 pop rbp	      3115	elf.c	FUNCTION_46
0x4001232	            0x415c	                                 pop r12	      3115	elf.c	FUNCTION_46
0x4001234	            0x415d	                                 pop r13	      3115	elf.c	FUNCTION_46
0x4001236	            0x415e	                                 pop r14	      3115	elf.c	FUNCTION_46
0x4001238	            0x415f	                                 pop r15	      3115	elf.c	FUNCTION_46
0x400123a	              0xc3	                                     ret	      3115	elf.c	FUNCTION_46
_bfd_elf_canonicalize_reloc	FOR,1:ELSE,0:IF,1:WHILE,0:DO,0:SWITCH,0:CALL,2:functions,0	31
0x400ba0f	              0x55	                                push rbp	      8161	elf.c	FUNCTION_92
0x400ba10	              0x53	                                push rbx	      8161	elf.c	FUNCTION_92
0x400ba11	        0x4883ec08	                              sub rsp, 8	      8161	elf.c	FUNCTION_92
0x400ba15	          0x4889f5	                            mov rbp, rsi	      8161	elf.c	FUNCTION_92
0x400ba18	          0x4889d3	                            mov rbx, rdx	      8161	elf.c	FUNCTION_92
0x400ba1b	          0x4889ca	                            mov rdx, rcx	      8161	elf.c	FUNCTION_92
0x400ba1e	        0x488b4708	                mov rax, qword [rdi + 8]	      8164	elf.c	FUNCTION_92	CALL_1
0x400ba22	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      8166	elf.c	FUNCTION_92	IF_1	CALL_2
0x400ba29	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      8166	elf.c	FUNCTION_92	IF_1	CALL_2
0x400ba30	      0xb900000000	                              mov ecx, 0	      8166	elf.c	FUNCTION_92	IF_1	CALL_2
0x400ba35	          0xff5040	                 call qword [rax + 0x40]	      8166	elf.c	FUNCTION_92	IF_1	CALL_2
0x400ba38	            0x85c0	                           test eax, eax	      8166	elf.c	FUNCTION_92	IF_1	CALL_2
0x400ba3a	            0x7438	                            je 0x400ba74	      8166	elf.c	FUNCTION_92	IF_1	CALL_2
0x400ba3c	        0x488b4578	            mov rax, qword [rbp + 0x78] 	      8169	elf.c	FUNCTION_92
0x400ba40	    0x83bd88000000	               cmp dword [rbp + 0x88], 0	      8170	elf.c	FUNCTION_92	FOR_1
0x400ba47	            0x741c	                            je 0x400ba65	      8170	elf.c	FUNCTION_92	FOR_1
0x400ba49	      0xba00000000	                              mov edx, 0	      8170	elf.c	FUNCTION_92	FOR_1
0x400ba4e	        0x4883c308	                              add rbx, 8	      8171	elf.c	FUNCTION_92	FOR_1
0x400ba52	        0x488943f8	                mov qword [rbx - 8], rax	      8171	elf.c	FUNCTION_92	FOR_1
0x400ba56	          0x83c201	                              add edx, 1	      8170	elf.c	FUNCTION_92	FOR_1
0x400ba59	        0x488d4020	                   lea rax, [rax + 0x20]	      8171	elf.c	FUNCTION_92	FOR_1
0x400ba5d	    0x399588000000	            cmp dword [rbp + 0x88], edx 	      8170	elf.c	FUNCTION_92	FOR_1
0x400ba63	            0x77e9	                            ja 0x400ba4e	      8170	elf.c	FUNCTION_92	FOR_1
0x400ba65	    0x48c703000000	                      mov qword [rbx], 0	      8173	elf.c	FUNCTION_92
0x400ba6c	    0x8b8588000000	            mov eax, dword [rbp + 0x88] 	      8175	elf.c	FUNCTION_92
0x400ba72	            0xeb07	                           jmp 0x400ba7b	      8175	elf.c	FUNCTION_92
0x400ba74	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      8167	elf.c	FUNCTION_92	IF_1
0x400ba7b	        0x4883c408	                              add rsp, 8	      8176	elf.c	FUNCTION_92
0x400ba7f	              0x5b	                                 pop rbx	      8176	elf.c	FUNCTION_92
0x400ba80	              0x5d	                                 pop rbp	      8176	elf.c	FUNCTION_92
0x400ba81	              0xc3	                                     ret	      8176	elf.c	FUNCTION_92
_bfd_elf_map_sections_to_segments	FOR,8:ELSE,14:IF,63:WHILE,3:DO,0:SWITCH,0:CALL,44:functions,0	811
0x4005783	            0x4157	                                push r15	      4575	elf.c	FUNCTION_65
0x4005785	            0x4156	                                push r14	      4575	elf.c	FUNCTION_65
0x4005787	            0x4155	                                push r13	      4575	elf.c	FUNCTION_65
0x4005789	            0x4154	                                push r12	      4575	elf.c	FUNCTION_65
0x400578b	              0x55	                                push rbp	      4575	elf.c	FUNCTION_65
0x400578c	              0x53	                                push rbx	      4575	elf.c	FUNCTION_65
0x400578d	    0x4881ec880000	                           sub rsp, 0x88	      4575	elf.c	FUNCTION_65
0x4005794	          0x4989ff	                            mov r15, rdi	      4575	elf.c	FUNCTION_65
0x4005797	          0x4989f5	                            mov r13, rsi	      4575	elf.c	FUNCTION_65
0x400579a	    0x64488b042528	                mov rax, qword fs:[0x28]	      4575	elf.c	FUNCTION_65
0x40057a3	      0x4889442478	             mov qword [rsp + 0x78], rax	      4575	elf.c	FUNCTION_65
0x40057a8	            0x31c0	                            xor eax, eax	      4575	elf.c	FUNCTION_65
0x40057aa	        0x488b4708	                mov rax, qword [rdi + 8]	      4579	elf.c	FUNCTION_65	CALL_1
0x40057ae	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      4579	elf.c	FUNCTION_65	CALL_1
0x40057b5	      0x4889442410	             mov qword [rsp + 0x10], rax	      4579	elf.c	FUNCTION_65	CALL_1
0x40057ba	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      4582	elf.c	FUNCTION_65	CALL_2
0x40057c1	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      4582	elf.c	FUNCTION_65	CALL_2
0x40057c8	          0x4c8b30	                    mov r14, qword [rax]	      4582	elf.c	FUNCTION_65	CALL_2
0x40057cb	          0x4885f6	                           test rsi, rsi	      4584	elf.c	FUNCTION_65	IF_1
0x40057ce	            0x7415	                            je 0x40057e5	      4584	elf.c	FUNCTION_65	IF_1
0x40057d0	          0x4d85f6	                           test r14, r14	      4585	elf.c	FUNCTION_65	IF_1
0x40057d3	           0xf95c0	                                setne al	      4585	elf.c	FUNCTION_65	IF_1
0x40057d6	          0xc1e004	                              shl eax, 4	      4585	elf.c	FUNCTION_65	IF_1
0x40057d9	         0xfb65606	               movzx edx, byte [rsi + 6]	      4585	elf.c	FUNCTION_65	IF_1
0x40057dd	          0x83e2ef	                     and edx, 0xffffffef	      4585	elf.c	FUNCTION_65	IF_1
0x40057e0	             0x9d0	                             or eax, edx	      4585	elf.c	FUNCTION_65	IF_1
0x40057e2	          0x884606	                  mov byte [rsi + 6], al	      4585	elf.c	FUNCTION_65	IF_1
0x40057e5	          0x4d85f6	                           test r14, r14	      4587	elf.c	FUNCTION_65	IF_2
0x40057e8	     0xf85500a0000	                           jne 0x400623e	      4587	elf.c	FUNCTION_65	IF_2
0x40057ee	    0x418b87a00000	            mov eax, dword [r15 + 0xa0] 	      4587	elf.c	FUNCTION_65	IF_2
0x40057f5	            0x85c0	                           test eax, eax	      4587	elf.c	FUNCTION_65	IF_2
0x40057f7	     0xf84410a0000	                            je 0x400623e	      4587	elf.c	FUNCTION_65	IF_2
0x40057fd	            0x89c7	                            mov edi, eax	      4611	elf.c	FUNCTION_65	IF_2	CALL_3
0x40057ff	      0xbe08000000	                              mov esi, 8	      4611	elf.c	FUNCTION_65	IF_2	CALL_3
0x4005804	      0xe800000000	                          call 0x4005809	      4611	elf.c	FUNCTION_65	IF_2	CALL_3
0x4005809	          0x4989c4	                            mov r12, rax	      4611	elf.c	FUNCTION_65	IF_2	CALL_3
0x400580c	      0x4889442418	             mov qword [rsp + 0x18], rax	      4611	elf.c	FUNCTION_65	IF_2	CALL_3
0x4005811	      0xb800000000	                              mov eax, 0	      5106	elf.c	FUNCTION_65
0x4005816	          0x4d85e4	                           test r12, r12	      4613	elf.c	FUNCTION_65	IF_2	IF_3
0x4005819	     0xf84140b0000	                            je 0x4006333	      4613	elf.c	FUNCTION_65	IF_2	IF_3
0x400581f	          0x4c89ff	                            mov rdi, r15	      4619	elf.c	FUNCTION_65	IF_2	CALL_4
0x4005822	      0xe800000000	                          call 0x4005827	      4619	elf.c	FUNCTION_65	IF_2	CALL_4
0x4005827	          0x8d48ff	                      lea ecx, [rax - 1]	      4620	elf.c	FUNCTION_65	IF_2
0x400582a	      0xb801000000	                              mov eax, 1	      4620	elf.c	FUNCTION_65	IF_2
0x400582f	          0x48d3e0	                             shl rax, cl	      4620	elf.c	FUNCTION_65	IF_2
0x4005832	      0x488d5c00ff	                lea rbx, [rax + rax - 1]	      4620	elf.c	FUNCTION_65	IF_2
0x4005837	    0x498b87900000	            mov rax, qword [r15 + 0x90] 	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x400583e	          0x4885c0	                           test rax, rax	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x4005841	            0x745b	                            je 0x400589e	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x4005843	      0xbd00000000	                              mov ebp, 0	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x4005848	      0xbe00000000	                              mov esi, 0	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x400584d	          0x4c89e7	                            mov rdi, r12	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x4005850	        0xf6402001	               test byte [rax + 0x20], 1	      4625	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4
0x4005854	            0x7421	                            je 0x4005877	      4625	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4
0x4005856	            0x89f2	                            mov edx, esi	      4627	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4
0x4005858	        0x488904d7	            mov qword [rdi + rdx*8], rax	      4627	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4
0x400585c	          0x83c601	                              add esi, 1	      4628	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4
0x400585f	        0x488b4830	            mov rcx, qword [rax + 0x30] 	      4630	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x4005863	          0x4889ca	                            mov rdx, rcx	      4630	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x4005866	        0x48035038	             add rdx, qword [rax + 0x38]	      4630	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x400586a	          0x4821da	                            and rdx, rbx	      4630	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x400586d	          0x4821d9	                            and rcx, rbx	      4630	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x4005870	          0x4839ca	                            cmp rdx, rcx	      4631	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x4005873	        0x480f42ea	                          cmovb rbp, rdx	      4631	elf.c	FUNCTION_65	IF_2	FOR_1	IF_4	IF_5
0x4005877	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x400587b	          0x4885c0	                           test rax, rax	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x400587e	            0x75d0	                           jne 0x4005850	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x4005880	        0x89742420	             mov dword [rsp + 0x20], esi	      4623	elf.c	FUNCTION_65	IF_2	FOR_1
0x4005884	    0x413bb7a00000	            cmp esi, dword [r15 + 0xa0] 	      4634	elf.c	FUNCTION_65	IF_2	CALL_5
0x400588b	            0x761e	                           jbe 0x40058ab	      4634	elf.c	FUNCTION_65	IF_2	CALL_5
0x400588d	      0xbe1a120000	                         mov esi, 0x121a	      4634	elf.c	FUNCTION_65	IF_2	CALL_5
0x4005892	      0xbf00000000	                              mov edi, 0	      4634	elf.c	FUNCTION_65	IF_2	CALL_5
0x4005897	      0xe800000000	                          call 0x400589c	      4634	elf.c	FUNCTION_65	IF_2	CALL_5
0x400589c	            0xeb0d	                           jmp 0x40058ab	      4634	elf.c	FUNCTION_65	IF_2	CALL_5
0x400589e	      0xbd00000000	                              mov ebp, 0	      4606	elf.c	FUNCTION_65	IF_2
0x40058a3	    0xc74424200000	               mov dword [rsp + 0x20], 0	      4622	elf.c	FUNCTION_65	IF_2
0x40058ab	        0x8b742420	            mov esi, dword [rsp + 0x20] 	      4637	elf.c	FUNCTION_65	IF_2	CALL_6
0x40058af	      0xb900000000	                              mov ecx, 0	      4637	elf.c	FUNCTION_65	IF_2	CALL_6
0x40058b4	      0xba08000000	                              mov edx, 8	      4637	elf.c	FUNCTION_65	IF_2	CALL_6
0x40058b9	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4637	elf.c	FUNCTION_65	IF_2	CALL_6
0x40058be	      0xe800000000	                          call 0x40058c3	      4637	elf.c	FUNCTION_65	IF_2	CALL_6
0x40058c3	    0x48c744247000	               mov qword [rsp + 0x70], 0	      4641	elf.c	FUNCTION_65	IF_2
0x40058cc	      0xbe00000000	                              mov esi, 0	      4647	elf.c	FUNCTION_65	IF_2	CALL_7
0x40058d1	          0x4c89ff	                            mov rdi, r15	      4647	elf.c	FUNCTION_65	IF_2	CALL_7
0x40058d4	      0xe800000000	                          call 0x40058d9	      4647	elf.c	FUNCTION_65	IF_2	CALL_7
0x40058d9	      0x4889442428	             mov qword [rsp + 0x28], rax	      4647	elf.c	FUNCTION_65	IF_2	CALL_7
0x40058de	          0x4885c0	                           test rax, rax	      4648	elf.c	FUNCTION_65	IF_2	IF_6
0x40058e1	     0xf8499000000	                            je 0x4005980	      4648	elf.c	FUNCTION_65	IF_2	IF_6
0x40058e7	    0x41bc00000000	                             mov r12d, 0	      4607	elf.c	FUNCTION_65	IF_2
0x40058ed	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      4642	elf.c	FUNCTION_65	IF_2
0x40058f2	      0x48897c2408	                mov qword [rsp + 8], rdi	      4642	elf.c	FUNCTION_65	IF_2
0x40058f7	        0xf6402002	               test byte [rax + 0x20], 2	      4648	elf.c	FUNCTION_65	IF_2	IF_6
0x40058fb	     0xf848f000000	                            je 0x4005990	      4648	elf.c	FUNCTION_65	IF_2	IF_6
0x4005901	      0xbe50000000	                           mov esi, 0x50	      4651	elf.c	FUNCTION_65	IF_2	IF_6	CALL_8
0x4005906	          0x4c89ff	                            mov rdi, r15	      4651	elf.c	FUNCTION_65	IF_2	IF_6	CALL_8
0x4005909	      0xe800000000	                          call 0x400590e	      4651	elf.c	FUNCTION_65	IF_2	IF_6	CALL_8
0x400590e	          0x4989c4	                            mov r12, rax	      4651	elf.c	FUNCTION_65	IF_2	IF_6	CALL_8
0x4005911	          0x4885c0	                           test rax, rax	      4652	elf.c	FUNCTION_65	IF_2	IF_6	IF_7
0x4005914	     0xf84d60a0000	                            je 0x40063f0	      4652	elf.c	FUNCTION_65	IF_2	IF_6	IF_7
0x400591a	    0x48c700000000	                      mov qword [rax], 0	      4654	elf.c	FUNCTION_65	IF_2	IF_6
0x4005921	    0x48c740080600	                  mov qword [rax + 8], 6	      4655	elf.c	FUNCTION_65	IF_2	IF_6
0x4005929	    0x48c740100400	               mov qword [rax + 0x10], 4	      4656	elf.c	FUNCTION_65	IF_2	IF_6
0x4005931	        0x80484021	              or byte [rax + 0x40], 0x21	      4658	elf.c	FUNCTION_65	IF_2	IF_6
0x4005935	      0x4889442470	             mov qword [rsp + 0x70], rax	      4660	elf.c	FUNCTION_65	IF_2	IF_6
0x400593a	      0xbe50000000	                           mov esi, 0x50	      4664	elf.c	FUNCTION_65	IF_2	IF_6	CALL_9
0x400593f	          0x4c89ff	                            mov rdi, r15	      4664	elf.c	FUNCTION_65	IF_2	IF_6	CALL_9
0x4005942	      0xe800000000	                          call 0x4005947	      4664	elf.c	FUNCTION_65	IF_2	IF_6	CALL_9
0x4005947	          0x4885c0	                           test rax, rax	      4665	elf.c	FUNCTION_65	IF_2	IF_6	IF_8
0x400594a	     0xf84a00a0000	                            je 0x40063f0	      4665	elf.c	FUNCTION_65	IF_2	IF_6	IF_8
0x4005950	    0x48c700000000	                      mov qword [rax], 0	      4667	elf.c	FUNCTION_65	IF_2	IF_6
0x4005957	    0x48c740080300	                  mov qword [rax + 8], 3	      4668	elf.c	FUNCTION_65	IF_2	IF_6
0x400595f	    0xc74044010000	               mov dword [rax + 0x44], 1	      4669	elf.c	FUNCTION_65	IF_2	IF_6
0x4005966	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      4670	elf.c	FUNCTION_65	IF_2	IF_6
0x400596b	        0x48897848	             mov qword [rax + 0x48], rdi	      4670	elf.c	FUNCTION_65	IF_2	IF_6
0x400596f	        0x49890424	                    mov qword [r12], rax	      4672	elf.c	FUNCTION_65	IF_2	IF_6
0x4005973	      0x4889442408	                mov qword [rsp + 8], rax	      4673	elf.c	FUNCTION_65	IF_2	IF_6
0x4005978	    0x41bc01000000	                             mov r12d, 1	      4659	elf.c	FUNCTION_65	IF_2	IF_6
0x400597e	            0xeb10	                           jmp 0x4005990	      4659	elf.c	FUNCTION_65	IF_2	IF_6
0x4005980	    0x41bc00000000	                             mov r12d, 0	      4607	elf.c	FUNCTION_65	IF_2
0x4005986	      0x488d442470	                   lea rax, [rsp + 0x70]	      4642	elf.c	FUNCTION_65	IF_2
0x400598b	      0x4889442408	                mov qword [rsp + 8], rax	      4642	elf.c	FUNCTION_65	IF_2
0x4005990	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4682	elf.c	FUNCTION_65	IF_2
0x4005995	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4682	elf.c	FUNCTION_65	IF_2
0x4005999	          0x4889c7	                            mov rdi, rax	      4682	elf.c	FUNCTION_65	IF_2
0x400599c	          0x4885c0	                           test rax, rax	      4687	elf.c	FUNCTION_65	IF_2	IF_9
0x400599f	      0xb801000000	                              mov eax, 1	      4687	elf.c	FUNCTION_65	IF_2	IF_9
0x40059a4	          0x4889c6	                            mov rsi, rax	      4687	elf.c	FUNCTION_65	IF_2	IF_9
0x40059a7	        0x480f45f7	                         cmovne rsi, rdi	      4687	elf.c	FUNCTION_65	IF_2	IF_9
0x40059ab	      0x4889742440	             mov qword [rsp + 0x40], rsi	      4687	elf.c	FUNCTION_65	IF_2	IF_9
0x40059b0	      0xbe00000000	                              mov esi, 0	      4690	elf.c	FUNCTION_65	IF_2	CALL_10
0x40059b5	          0x4c89ff	                            mov rdi, r15	      4690	elf.c	FUNCTION_65	IF_2	CALL_10
0x40059b8	      0xe800000000	                          call 0x40059bd	      4690	elf.c	FUNCTION_65	IF_2	CALL_10
0x40059bd	          0x4889c7	                            mov rdi, rax	      4690	elf.c	FUNCTION_65	IF_2	CALL_10
0x40059c0	      0x4889442448	             mov qword [rsp + 0x48], rax	      4690	elf.c	FUNCTION_65	IF_2	CALL_10
0x40059c5	          0x4885c0	                           test rax, rax	      4691	elf.c	FUNCTION_65	IF_2	IF_10
0x40059c8	            0x7415	                            je 0x40059df	      4691	elf.c	FUNCTION_65	IF_2	IF_10
0x40059ca	        0xf6402002	               test byte [rax + 0x20], 2	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x40059ce	      0xb800000000	                              mov eax, 0	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x40059d3	          0x4889c6	                            mov rsi, rax	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x40059d6	        0x480f45f7	                         cmovne rsi, rdi	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x40059da	      0x4889742448	             mov qword [rsp + 0x48], rsi	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x40059df	      0x837c242000	               cmp dword [rsp + 0x20], 0	      4699	elf.c	FUNCTION_65	IF_2	IF_11
0x40059e4	     0xf84e9020000	                            je 0x4005cd3	      4699	elf.c	FUNCTION_65	IF_2	IF_11
0x40059ea	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      4701	elf.c	FUNCTION_65	IF_2	IF_11	CALL_11
0x40059f1	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      4701	elf.c	FUNCTION_65	IF_2	IF_11	CALL_11
0x40059f8	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4701	elf.c	FUNCTION_65	IF_2	IF_11	CALL_11
0x40059fc	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      4703	elf.c	FUNCTION_65	IF_2	IF_11	IF_12
0x4005a00	            0x750b	                           jne 0x4005a0d	      4703	elf.c	FUNCTION_65	IF_2	IF_11	IF_12
0x4005a02	          0x4c89ee	                            mov rsi, r13	      4704	elf.c	FUNCTION_65	IF_2	IF_11	CALL_12
0x4005a05	          0x4c89ff	                            mov rdi, r15	      4704	elf.c	FUNCTION_65	IF_2	IF_11	CALL_12
0x4005a08	      0xe899afffff	        call sym.get_program_header_size	      4704	elf.c	FUNCTION_65	IF_2	IF_11	CALL_12
0x4005a0d	        0x418b5744	            mov edx, dword [r15 + 0x44] 	      4706	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4005a11	          0xc1ea05	                              shr edx, 5	      4706	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4005a14	            0x89d6	                            mov esi, edx	      4706	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4005a16	    0x81e600010000	                          and esi, 0x100	      4706	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4005a1c	            0x7460	                            je 0x4005a7e	      4706	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4005a1e	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4705	elf.c	FUNCTION_65	IF_2	IF_11
0x4005a23	    0x488b97000300	           mov rdx, qword [rdi + 0x300] 	      4705	elf.c	FUNCTION_65	IF_2	IF_11
0x4005a2a	           0xfb60a	                   movzx ecx, byte [rdx]	      4705	elf.c	FUNCTION_65	IF_2	IF_11
0x4005a2d	          0x4801c1	                            add rcx, rax	      4705	elf.c	FUNCTION_65	IF_2	IF_11
0x4005a30	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4707	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4005a35	          0x488b00	                    mov rax, qword [rax]	      4707	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4005a38	        0x48235830	             and rbx, qword [rax + 0x30]	      4707	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4005a3c	          0x4839d9	                            cmp rcx, rbx	      4707	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4005a3f	            0x773d	                            ja 0x4005a7e	      4707	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4005a41	          0x4889d8	                            mov rax, rbx	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4005a44	      0x4c8b542440	            mov r10, qword [rsp + 0x40] 	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4005a49	      0xba00000000	                              mov edx, 0	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4005a4e	          0x49f7f2	                                 div r10	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4005a51	          0x4889d7	                            mov rdi, rdx	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4005a54	          0x4889c8	                            mov rax, rcx	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4005a57	      0xba00000000	                              mov edx, 0	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4005a5c	          0x49f7f2	                                 div r10	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4005a5f	          0x4839d7	                            cmp rdi, rdx	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4005a62	            0x721a	                            jb 0x4005a7e	      4708	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4005a64	          0x4c89d0	                            mov rax, r10	      4710	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4005a67	          0x48f7d8	                                 neg rax	      4710	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4005a6a	          0x4821c3	                            and rbx, rax	      4710	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4005a6d	    0xc74424380100	               mov dword [rsp + 0x38], 1	      4598	elf.c	FUNCTION_65	IF_2
0x4005a75	          0x4839dd	                            cmp rbp, rbx	      4710	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4005a78	     0xf86ce080000	                           jbe 0x400634c	      4710	elf.c	FUNCTION_65	IF_2	IF_11	IF_13
0x4005a7e	            0x85f6	                           test esi, esi	      4720	elf.c	FUNCTION_65	IF_2	IF_11	IF_13	IF_14
0x4005a80	           0xf95c0	                                setne al	      4720	elf.c	FUNCTION_65	IF_2	IF_11	IF_13	IF_14
0x4005a83	          0x4121c4	                           and r12d, eax	      4720	elf.c	FUNCTION_65	IF_2	IF_11	IF_13	IF_14
0x4005a86	      0x4489642438	            mov dword [rsp + 0x38], r12d	      4720	elf.c	FUNCTION_65	IF_2	IF_11	IF_13	IF_14
0x4005a8b	      0xe9bc080000	                           jmp 0x400634c	      4720	elf.c	FUNCTION_65	IF_2	IF_11	IF_13	IF_14
0x4005a90	          0x4189ec	                           mov r12d, ebp	      4720	elf.c	FUNCTION_65	IF_2	IF_11	IF_13	IF_14
0x4005a93	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4731	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4005a98	        0x488b1ce8	            mov rbx, qword [rax + rbp*8]	      4731	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4005a9c	          0x4885c9	                           test rcx, rcx	      4736	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_15
0x4005a9f	     0xf840d010000	                            je 0x4005bb2	      4736	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_15
0x4005aa5	        0x488b4130	            mov rax, qword [rcx + 0x30] 	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x4005aa9	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x4005aad	          0x4989c0	                             mov r8, rax	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x4005ab0	        0x4c2b4128	              sub r8, qword [rcx + 0x28]	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x4005ab4	          0x4889f7	                            mov rdi, rsi	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x4005ab7	        0x482b7b28	             sub rdi, qword [rbx + 0x28]	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x4005abb	          0x4939f8	                             cmp r8, rdi	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x4005abe	     0xf85e4080000	                           jne 0x40063a8	      4742	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_2	IF_16
0x4005ac4	          0x4801c2	                            add rdx, rax	      4749	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_3	IF_17
0x4005ac7	          0x4839d6	                            cmp rsi, rdx	      4750	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_3	IF_17
0x4005aca	     0xf82d8080000	                            jb 0x40063a8	      4750	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_3	IF_17
0x4005ad0	          0x4839d0	                            cmp rax, rdx	      4750	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_3	IF_17
0x4005ad3	     0xf87cf080000	                            ja 0x40063a8	      4750	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_3	IF_17
0x4005ad9	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      4756	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x4005ade	          0x8b7f44	            mov edi, dword [rdi + 0x44] 	      4756	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x4005ae1	        0x897c245c	             mov dword [rsp + 0x5c], edi	      4756	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x4005ae5	          0xc1ef05	                              shr edi, 5	      4756	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x4005ae8	    0x81e700010000	                          and edi, 0x100	      4756	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x4005aee	          0x4189f8	                            mov r8d, edi	      4756	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x4005af1	            0x7412	                            je 0x4005b05	      4756	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x4005af3	        0x488d7aff	                      lea rdi, [rdx - 1]	      4757	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x4005af7	          0x4831f7	                            xor rdi, rsi	      4757	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x4005afa	      0x48857c2450	           test qword [rsp + 0x50], rdi 	      4757	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x4005aff	     0xf84ad080000	                            je 0x40063b2	      4757	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_4	IF_18
0x4005b05	      0x4c8b5c2440	            mov r11, qword [rsp + 0x40] 	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x4005b0a	      0x498d7c13ff	                lea rdi, [r11 + rdx - 1]	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x4005b0f	          0x4839fa	                            cmp rdx, rdi	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x4005b12	     0xf8780080000	                            ja 0x4006398	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x4005b18	      0x48237c2450	             and rdi, qword [rsp + 0x50]	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x4005b1d	          0x4889fa	                            mov rdx, rdi	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x4005b20	          0x4c89df	                            mov rdi, r11	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x4005b23	          0x4801d7	                            add rdi, rdx	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x4005b26	          0x4839f8	                            cmp rax, rdi	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x4005b29	            0x7317	                           jae 0x4005b42	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x4005b2b	            0xeb07	                           jmp 0x4005b34	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x4005b2d	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      4771	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x4005b34	      0x4803542440	             add rdx, qword [rsp + 0x40]	      4771	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x4005b39	          0x4839d6	                            cmp rsi, rdx	      4771	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x4005b3c	     0xf8366080000	                           jae 0x40063a8	      4771	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x4005b42	    0xf74120020400	         test dword [rcx + 0x20], 0x402 	      4778	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_6	IF_20
0x4005b49	            0x750d	                           jne 0x4005b58	      4778	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_6	IF_20
0x4005b4b	    0xf74320020400	         test dword [rbx + 0x20], 0x402 	      4779	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_6	IF_20
0x4005b52	     0xf8550080000	                           jne 0x40063a8	      4779	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_6	IF_20
0x4005b58	          0x4585c0	                           test r8d, r8d	      4787	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_7	IF_21
0x4005b5b	     0xf8451080000	                            je 0x40063b2	      4787	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_7	IF_21
0x4005b61	          0x4d85ed	                           test r13, r13	      4794	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x4005b64	     0xf849a080000	                            je 0x4006404	      4794	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x4005b6a	      0x41f6450320	               test byte [r13 + 3], 0x20	      4795	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x4005b6f	            0x7412	                            je 0x4005b83	      4795	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x4005b71	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      4796	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x4005b74	          0xc1e804	                              shr eax, 4	      4796	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x4005b77	          0x83e001	                              and eax, 1	      4796	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x4005b7a	          0x4439f8	                           cmp eax, r15d	      4796	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x4005b7d	     0xf858f080000	                           jne 0x4006412	      4796	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_8	IF_22
0x4005b83	          0x4585f6	                         test r14d, r14d	      4800	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x4005b86	     0xf8526080000	                           jne 0x40063b2	      4800	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x4005b8c	        0xf6432008	               test byte [rbx + 0x20], 8	      4801	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x4005b90	     0xf8412080000	                            je 0x40063a8	      4801	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x4005b96	      0xe9eb080000	                           jmp 0x4006486	      4801	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x4005b9b	    0x41b801000000	                              mov r8d, 1	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x4005ba1	          0x4889da	                            mov rdx, rbx	      4818	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24	CALL_13
0x4005ba4	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      4818	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24	CALL_13
0x4005ba9	          0x4c89ef	                            mov rdi, r13	      4818	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24	CALL_13
0x4005bac	            0xffd0	                                call rax	      4818	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24	CALL_13
0x4005bae	            0x85c0	                           test eax, eax	      4822	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x4005bb0	            0x7534	                           jne 0x4005be6	      4822	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x4005bb2	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      4824	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25	IF_26
0x4005bb5	            0xa808	                              test al, 8	      4825	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25	IF_26
0x4005bb7	      0xbf01000000	                              mov edi, 1	      4825	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25	IF_26
0x4005bbc	        0x440f44f7	                         cmove r14d, edi	      4825	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25	IF_26
0x4005bc0	            0xa810	                           test al, 0x10	      4827	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25	IF_27
0x4005bc2	      0xbf01000000	                              mov edi, 1	      4827	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25	IF_27
0x4005bc7	        0x440f45ff	                        cmovne r15d, edi	      4827	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25	IF_27
0x4005bcb	      0x2502040000	                          and eax, 0x402	      4830	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x4005bd0	      0xba00000000	                              mov edx, 0	      4830	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x4005bd5	      0x3d00040000	                          cmp eax, 0x400	      4830	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x4005bda	     0xf8485000000	                            je 0x4005c65	      4830	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x4005be0	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      4830	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x4005be4	            0xeb7f	                           jmp 0x4005c65	      4830	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25
0x4005be6	      0x448b442438	            mov r8d, dword [rsp + 0x38] 	      4837	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	CALL_14
0x4005beb	          0x4489e1	                           mov ecx, r12d	      4837	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	CALL_14
0x4005bee	        0x8b542430	            mov edx, dword [rsp + 0x30] 	      4837	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	CALL_14
0x4005bf2	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      4837	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	CALL_14
0x4005bf7	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      4837	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	CALL_14
0x4005bfc	      0xe86ea7ffff	                   call sym.make_mapping	      4837	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	CALL_14
0x4005c01	          0x4885c0	                           test rax, rax	      4838	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_28
0x4005c04	     0xf84e6070000	                            je 0x40063f0	      4838	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_28
0x4005c0a	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4841	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4005c0f	          0x488907	                    mov qword [rdi], rax	      4841	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4005c12	      0x4889442408	                mov qword [rsp + 8], rax	      4842	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4005c17	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      4844	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_29
0x4005c1a	          0x4189c6	                           mov r14d, eax	      4845	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_29
0x4005c1d	        0x41c1ee03	                             shr r14d, 3	      4845	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_29
0x4005c21	        0x4183f601	                             xor r14d, 1	      4845	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_29
0x4005c25	        0x4183e601	                             and r14d, 1	      4845	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_29
0x4005c29	            0x89c2	                            mov edx, eax	      4850	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_30
0x4005c2b	          0xc1ea04	                              shr edx, 4	      4850	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_30
0x4005c2e	          0x83e201	                              and edx, 1	      4850	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_30
0x4005c31	          0x4189d7	                           mov r15d, edx	      4850	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_30
0x4005c34	      0x2502040000	                          and eax, 0x402	      4856	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4005c39	      0x3d00040000	                          cmp eax, 0x400	      4856	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4005c3e	            0x7413	                            je 0x4005c53	      4856	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4005c40	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	      4856	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4005c44	      0x4489642430	            mov dword [rsp + 0x30], r12d	      4856	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4005c49	    0xc74424380000	               mov dword [rsp + 0x38], 0	      4858	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4005c51	            0xeb12	                           jmp 0x4005c65	      4858	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4005c53	      0x4489642430	            mov dword [rsp + 0x30], r12d	      4858	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4005c58	    0xc74424380000	               mov dword [rsp + 0x38], 0	      4858	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4005c60	      0xba00000000	                              mov edx, 0	      4856	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4005c65	        0x4183c401	                             add r12d, 1	      4856	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4005c69	        0x4883c501	                              add rbp, 1	      4856	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4005c6d	          0x4889d9	                            mov rcx, rbx	      4731	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4005c70	        0x396c2420	            cmp dword [rsp + 0x20], ebp 	      4726	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4005c74	     0xf8716feffff	                            ja 0x4005a90	      4726	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4005c7a	      0x4c8b742468	            mov r14, qword [rsp + 0x68] 	      4726	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4005c7f	      0x4c8b7c2428	            mov r15, qword [rsp + 0x28] 	      4726	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2
0x4005c84	          0x4885db	                           test rbx, rbx	      4863	elf.c	FUNCTION_65	IF_2	IF_31
0x4005c87	            0x744a	                            je 0x4005cd3	      4863	elf.c	FUNCTION_65	IF_2	IF_31
0x4005c89	          0x4489e0	                           mov eax, r12d	      4864	elf.c	FUNCTION_65	IF_2	IF_31
0x4005c8c	        0x2b442430	             sub eax, dword [rsp + 0x30]	      4864	elf.c	FUNCTION_65	IF_2	IF_31
0x4005c90	          0x83f801	                              cmp eax, 1	      4864	elf.c	FUNCTION_65	IF_2	IF_31
0x4005c93	            0x750f	                           jne 0x4005ca4	      4864	elf.c	FUNCTION_65	IF_2	IF_31
0x4005c95	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      4865	elf.c	FUNCTION_65	IF_2	IF_31
0x4005c98	      0x2502040000	                          and eax, 0x402	      4865	elf.c	FUNCTION_65	IF_2	IF_31
0x4005c9d	      0x3d00040000	                          cmp eax, 0x400	      4865	elf.c	FUNCTION_65	IF_2	IF_31
0x4005ca2	            0x742f	                            je 0x4005cd3	      4865	elf.c	FUNCTION_65	IF_2	IF_31
0x4005ca4	      0x448b442438	            mov r8d, dword [rsp + 0x38] 	      4867	elf.c	FUNCTION_65	IF_2	IF_31	CALL_15
0x4005ca9	          0x4489e1	                           mov ecx, r12d	      4867	elf.c	FUNCTION_65	IF_2	IF_31	CALL_15
0x4005cac	        0x8b542430	            mov edx, dword [rsp + 0x30] 	      4867	elf.c	FUNCTION_65	IF_2	IF_31	CALL_15
0x4005cb0	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      4867	elf.c	FUNCTION_65	IF_2	IF_31	CALL_15
0x4005cb5	          0x4c89ff	                            mov rdi, r15	      4867	elf.c	FUNCTION_65	IF_2	IF_31	CALL_15
0x4005cb8	      0xe8b2a6ffff	                   call sym.make_mapping	      4867	elf.c	FUNCTION_65	IF_2	IF_31	CALL_15
0x4005cbd	          0x4885c0	                           test rax, rax	      4868	elf.c	FUNCTION_65	IF_2	IF_31	IF_32
0x4005cc0	     0xf842a070000	                            je 0x40063f0	      4868	elf.c	FUNCTION_65	IF_2	IF_31	IF_32
0x4005cc6	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      4871	elf.c	FUNCTION_65	IF_2	IF_31
0x4005ccb	          0x488903	                    mov qword [rbx], rax	      4871	elf.c	FUNCTION_65	IF_2	IF_31
0x4005cce	      0x4889442408	                mov qword [rsp + 8], rax	      4872	elf.c	FUNCTION_65	IF_2	IF_31
0x4005cd3	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      4876	elf.c	FUNCTION_65	IF_2	IF_33
0x4005cd8	          0x4885c0	                           test rax, rax	      4876	elf.c	FUNCTION_65	IF_2	IF_33
0x4005cdb	            0x7421	                            je 0x4005cfe	      4876	elf.c	FUNCTION_65	IF_2	IF_33
0x4005cdd	          0x4889c6	                            mov rsi, rax	      4878	elf.c	FUNCTION_65	IF_2	IF_33	CALL_16
0x4005ce0	          0x4c89ff	                            mov rdi, r15	      4878	elf.c	FUNCTION_65	IF_2	IF_33	CALL_16
0x4005ce3	      0xe800000000	                          call 0x4005ce8	      4878	elf.c	FUNCTION_65	IF_2	IF_33	CALL_16
0x4005ce8	          0x4885c0	                           test rax, rax	      4879	elf.c	FUNCTION_65	IF_2	IF_33	IF_34
0x4005ceb	     0xf84ff060000	                            je 0x40063f0	      4879	elf.c	FUNCTION_65	IF_2	IF_33	IF_34
0x4005cf1	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      4881	elf.c	FUNCTION_65	IF_2	IF_33
0x4005cf6	          0x488903	                    mov qword [rbx], rax	      4881	elf.c	FUNCTION_65	IF_2	IF_33
0x4005cf9	      0x4889442408	                mov qword [rsp + 8], rax	      4882	elf.c	FUNCTION_65	IF_2	IF_33
0x4005cfe	    0x498b9f900000	            mov rbx, qword [r15 + 0x90] 	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x4005d05	          0x4885db	                           test rbx, rbx	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x4005d08	     0xf8473030000	                            je 0x4006081	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x4005d0e	      0xb800000000	                              mov eax, 0	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x4005d13	    0x48c744242000	               mov qword [rsp + 0x20], 0	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x4005d1c	    0xc74424280000	               mov dword [rsp + 0x28], 0	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x4005d24	      0x4c89742430	             mov qword [rsp + 0x30], r14	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x4005d29	      0x4c896c2438	             mov qword [rsp + 0x38], r13	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x4005d2e	          0x4989c5	                            mov r13, rax	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x4005d31	        0xf6432002	               test byte [rbx + 0x20], 2	      4893	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4005d35	     0xf8437010000	                            je 0x4005e72	      4893	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4005d3b	          0x488b33	                    mov rsi, qword [rbx]	      4894	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4005d3e	      0xbf00000000	                              mov edi, 0	      4894	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4005d43	      0xb905000000	                              mov ecx, 5	      4894	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4005d48	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4894	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4005d4a	           0xf97c2	                                 seta dl	      4894	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4005d4d	           0xf92c0	                                 setb al	      4894	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4005d50	            0x38c2	                              cmp dl, al	      4894	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4005d52	     0xf851a010000	                           jne 0x4005e72	      4894	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4005d58	        0x837b7002	               cmp dword [rbx + 0x70], 2	      4900	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36
0x4005d5c	     0xf8501070000	                           jne 0x4006463	      4900	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36
0x4005d62	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      4901	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4
0x4005d66	          0x4885d2	                           test rdx, rdx	      4901	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4
0x4005d69	     0xf84f4060000	                            je 0x4006463	      4901	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4
0x4005d6f	        0x837a7002	               cmp dword [rdx + 0x70], 2	      4903	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4005d73	     0xf85ea060000	                           jne 0x4006463	      4903	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4005d79	        0xf6422002	               test byte [rdx + 0x20], 2	      4904	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4005d7d	            0x7519	                           jne 0x4005d98	      4904	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4005d7f	      0xe9df060000	                           jmp 0x4006463	      4904	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4005d84	        0x83787002	               cmp dword [rax + 0x70], 2	      4903	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4005d88	            0x7551	                           jne 0x4005ddb	      4903	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4005d8a	          0x4989d0	                             mov r8, rdx	      4903	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4005d8d	        0xf6402002	               test byte [rax + 0x20], 2	      4904	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4005d91	            0x7448	                            je 0x4005ddb	      4904	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4005d93	          0x4889c2	                            mov rdx, rax	      4901	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4
0x4005d96	            0xeb08	                           jmp 0x4005da0	      4901	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4
0x4005d98	          0x4989d8	                             mov r8, rbx	      4904	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4005d9b	      0xbd01000000	                              mov ebp, 1	      4904	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4005da0	          0x488b32	                    mov rsi, qword [rdx]	      4905	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4005da3	      0xbf00000000	                              mov edi, 0	      4905	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4005da8	      0xb905000000	                              mov ecx, 5	      4905	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4005dad	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4905	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4005daf	           0xf97c1	                                 seta cl	      4905	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4005db2	           0xf92c0	                                 setb al	      4905	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4005db5	            0x38c1	                              cmp cl, al	      4905	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4005db7	            0x7522	                           jne 0x4005ddb	      4905	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4005db9	        0x498b4038	              mov rax, qword [r8 + 0x38]	      4906	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4005dbd	        0x49034030	              add rax, qword [r8 + 0x30]	      4906	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4005dc1	        0x4883c003	                              add rax, 3	      4906	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4005dc5	        0x4883e0fc	             and rax, 0xfffffffffffffffc	      4906	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4005dc9	        0x483b4230	            cmp rax, qword [rdx + 0x30] 	      4906	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4005dcd	            0x750c	                           jne 0x4005ddb	      4906	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4005dcf	          0x83c501	                              add ebp, 1	      4908	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4	IF_37
0x4005dd2	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      4901	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4
0x4005dd6	          0x4885c0	                           test rax, rax	      4901	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4
0x4005dd9	            0x75a9	                           jne 0x4005d84	      4901	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_36	FOR_4
0x4005ddb	          0x8d45ff	                      lea eax, [rbp - 1]	      4913	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_17
0x4005dde	    0x488d34c55000	                 lea rsi, [rax*8 + 0x50]	      4913	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_17
0x4005de6	          0x4c89ff	                            mov rdi, r15	      4913	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_17
0x4005de9	      0xe800000000	                          call 0x4005dee	      4913	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_17
0x4005dee	          0x4989c4	                            mov r12, rax	      4913	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_17
0x4005df1	          0x4885c0	                           test rax, rax	      4914	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_38
0x4005df4	     0xf84f6050000	                            je 0x40063f0	      4914	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_38
0x4005dfa	    0x48c700000000	                      mov qword [rax], 0	      4916	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4005e01	    0x48c740080400	                  mov qword [rax + 8], 4	      4917	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4005e09	          0x896844	             mov dword [rax + 0x44], ebp	      4918	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4005e0c	          0x83fd01	                              cmp ebp, 1	      4919	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x4005e0f	            0x7632	                           jbe 0x4005e43	      4919	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x4005e11	        0x448d75ff	                     lea r14d, [rbp - 1]	      4921	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x4005e15	      0x418b442444	            mov eax, dword [r12 + 0x44] 	      4921	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x4005e1a	            0x29e8	                            sub eax, ebp	      4921	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x4005e1c	      0x49895cc448	     mov qword [r12 + rax*8 + 0x48], rbx	      4921	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x4005e21	        0xf6432104	               test byte [rbx + 0x21], 4	      4922	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1	CALL_18
0x4005e25	            0x740f	                            je 0x4005e36	      4922	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1	CALL_18
0x4005e27	      0xbe3a130000	                         mov esi, 0x133a	      4922	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1	CALL_18
0x4005e2c	      0xbf00000000	                              mov edi, 0	      4922	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1	CALL_18
0x4005e31	      0xe800000000	                          call 0x4005e36	      4922	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1	CALL_18
0x4005e36	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      4923	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x4005e3a	          0x4489f5	                           mov ebp, r14d	      4921	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x4005e3d	        0x4183fe01	                             cmp r14d, 1	      4919	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x4005e41	            0x75ce	                           jne 0x4005e11	      4919	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	WHILE_1
0x4005e43	      0x418b442444	            mov eax, dword [r12 + 0x44] 	      4925	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4005e48	          0x8d40ff	                      lea eax, [rax - 1]	      4925	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4005e4b	      0x49895cc448	     mov qword [r12 + rax*8 + 0x48], rbx	      4925	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4005e50	        0xf6432104	               test byte [rbx + 0x21], 4	      4926	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_19
0x4005e54	            0x740f	                            je 0x4005e65	      4926	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_19
0x4005e56	      0xbe3e130000	                         mov esi, 0x133e	      4926	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_19
0x4005e5b	      0xbf00000000	                              mov edi, 0	      4926	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_19
0x4005e60	      0xe800000000	                          call 0x4005e65	      4926	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_19
0x4005e65	      0x488b442408	                mov rax, qword [rsp + 8]	      4927	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4005e6a	          0x4c8920	                    mov qword [rax], r12	      4927	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4005e6d	      0x4c89642408	                mov qword [rsp + 8], r12	      4928	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4005e72	        0xf6432104	               test byte [rbx + 0x21], 4	      4930	elf.c	FUNCTION_65	IF_2	FOR_3	IF_39
0x4005e76	            0x741b	                            je 0x4005e93	      4930	elf.c	FUNCTION_65	IF_2	FOR_3	IF_39
0x4005e78	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      4933	elf.c	FUNCTION_65	IF_2	FOR_3	IF_39	IF_40
0x4005e7c	            0x85c0	                           test eax, eax	      4933	elf.c	FUNCTION_65	IF_2	FOR_3	IF_39	IF_40
0x4005e7e	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      4933	elf.c	FUNCTION_65	IF_2	FOR_3	IF_39	IF_40
0x4005e83	        0x480f44fb	                          cmove rdi, rbx	      4933	elf.c	FUNCTION_65	IF_2	FOR_3	IF_39	IF_40
0x4005e87	      0x48897c2420	             mov qword [rsp + 0x20], rdi	      4933	elf.c	FUNCTION_65	IF_2	FOR_3	IF_39	IF_40
0x4005e8c	          0x83c001	                              add eax, 1	      4934	elf.c	FUNCTION_65	IF_2	FOR_3	IF_39
0x4005e8f	        0x89442428	             mov dword [rsp + 0x28], eax	      4934	elf.c	FUNCTION_65	IF_2	FOR_3	IF_39
0x4005e93	          0x4d85ed	                           test r13, r13	      4936	elf.c	FUNCTION_65	IF_2	FOR_3	IF_41
0x4005e96	            0x750f	                           jne 0x4005ea7	      4936	elf.c	FUNCTION_65	IF_2	FOR_3	IF_41
0x4005e98	    0x488b83e00000	            mov rax, qword [rbx + 0xe0] 	      4937	elf.c	FUNCTION_65	IF_2	FOR_3	IF_41	CALL_20
0x4005e9f	        0xf6400b01	                test byte [rax + 0xb], 1	      4938	elf.c	FUNCTION_65	IF_2	FOR_3	IF_41
0x4005ea3	        0x4c0f45eb	                         cmovne r13, rbx	      4938	elf.c	FUNCTION_65	IF_2	FOR_3	IF_41
0x4005ea7	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x4005eab	          0x4885db	                           test rbx, rbx	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x4005eae	     0xf857dfeffff	                           jne 0x4005d31	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x4005eb4	          0x4c89ed	                            mov rbp, r13	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x4005eb7	      0x4c8b742430	            mov r14, qword [rsp + 0x30] 	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x4005ebc	      0x4c8b6c2438	            mov r13, qword [rsp + 0x38] 	      4891	elf.c	FUNCTION_65	IF_2	FOR_3
0x4005ec1	        0x8b5c2428	            mov ebx, dword [rsp + 0x28] 	      4942	elf.c	FUNCTION_65	IF_2	IF_42
0x4005ec5	            0x89d8	                            mov eax, ebx	      4942	elf.c	FUNCTION_65	IF_2	IF_42
0x4005ec7	            0x85db	                           test ebx, ebx	      4942	elf.c	FUNCTION_65	IF_2	IF_42
0x4005ec9	     0xf8e06010000	                           jle 0x4005fd5	      4942	elf.c	FUNCTION_65	IF_2	IF_42
0x4005ecf	          0x83e801	                              sub eax, 1	      4946	elf.c	FUNCTION_65	IF_2	IF_42	CALL_21
0x4005ed2	            0x4898	                                    cdqe	      4946	elf.c	FUNCTION_65	IF_2	IF_42	CALL_21
0x4005ed4	    0x488d34c55000	                 lea rsi, [rax*8 + 0x50]	      4946	elf.c	FUNCTION_65	IF_2	IF_42	CALL_21
0x4005edc	          0x4c89ff	                            mov rdi, r15	      4946	elf.c	FUNCTION_65	IF_2	IF_42	CALL_21
0x4005edf	      0xe800000000	                          call 0x4005ee4	      4946	elf.c	FUNCTION_65	IF_2	IF_42	CALL_21
0x4005ee4	          0x4885c0	                           test rax, rax	      4947	elf.c	FUNCTION_65	IF_2	IF_42	IF_43
0x4005ee7	     0xf8403050000	                            je 0x40063f0	      4947	elf.c	FUNCTION_65	IF_2	IF_42	IF_43
0x4005eed	    0x48c700000000	                      mov qword [rax], 0	      4949	elf.c	FUNCTION_65	IF_2	IF_42
0x4005ef4	    0x48c740080700	                  mov qword [rax + 8], 7	      4950	elf.c	FUNCTION_65	IF_2	IF_42
0x4005efc	          0x895844	             mov dword [rax + 0x44], ebx	      4951	elf.c	FUNCTION_65	IF_2	IF_42
0x4005eff	    0x48c740100400	               mov qword [rax + 0x10], 4	      4953	elf.c	FUNCTION_65	IF_2	IF_42
0x4005f07	        0x80484001	                 or byte [rax + 0x40], 1	      4954	elf.c	FUNCTION_65	IF_2	IF_42
0x4005f0b	            0x85db	                           test ebx, ebx	      4956	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5
0x4005f0d	     0xf84b5000000	                            je 0x4005fc8	      4956	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5
0x4005f13	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      4958	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44
0x4005f18	        0xf6472104	               test byte [rdi + 0x21], 4	      4958	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44
0x4005f1c	     0xf8585000000	                           jne 0x4005fa7	      4958	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44
0x4005f22	      0xe996040000	                           jmp 0x40063bd	      4958	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44
0x4005f27	        0x4883c108	                              add rcx, 8	      4958	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44
0x4005f2b	        0xf6422104	               test byte [rdx + 0x21], 4	      4958	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44
0x4005f2f	     0xf8583000000	                           jne 0x4005fb8	      4958	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44
0x4005f35	      0xe983040000	                           jmp 0x40063bd	      4958	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44
0x4005f3a	    0x41f644242104	               test byte [r12 + 0x21], 4	      4966	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45
0x4005f40	            0x7429	                            je 0x4005f6b	      4966	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45
0x4005f42	      0xba05000000	                              mov edx, 5	      4968	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45	CALL_25
0x4005f47	      0xbe00000000	                              mov esi, 0	      4968	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45	CALL_25
0x4005f4c	      0xbf00000000	                              mov edi, 0	      4968	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45	CALL_25
0x4005f51	      0xe800000000	                          call 0x4005f56	      4968	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45	CALL_25
0x4005f56	          0x4c89e6	                            mov rsi, r12	      4968	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45	CALL_25
0x4005f59	          0x4889c7	                            mov rdi, rax	      4968	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45	CALL_25
0x4005f5c	      0xb800000000	                              mov eax, 0	      4968	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45	CALL_25
0x4005f61	      0xe800000000	                          call 0x4005f66	      4968	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45	CALL_25
0x4005f66	          0x83c501	                              add ebp, 1	      4969	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45
0x4005f69	            0xeb24	                           jmp 0x4005f8f	      4969	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	IF_45
0x4005f6b	      0xba05000000	                              mov edx, 5	      4972	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	CALL_27
0x4005f70	      0xbe00000000	                              mov esi, 0	      4972	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	CALL_27
0x4005f75	      0xbf00000000	                              mov edi, 0	      4972	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	CALL_27
0x4005f7a	      0xe800000000	                          call 0x4005f7f	      4972	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	CALL_27
0x4005f7f	          0x4c89e6	                            mov rsi, r12	      4972	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	CALL_27
0x4005f82	          0x4889c7	                            mov rdi, rax	      4972	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	CALL_27
0x4005f85	      0xb800000000	                              mov eax, 0	      4972	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	CALL_27
0x4005f8a	      0xe800000000	                          call 0x4005f8f	      4972	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2	CALL_27
0x4005f8f	      0x4d8b642410	            mov r12, qword [r12 + 0x10] 	      4973	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2
0x4005f94	            0x39dd	                            cmp ebp, ebx	      4964	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2
0x4005f96	            0x72a2	                            jb 0x4005f3a	      4964	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	WHILE_2
0x4005f98	      0xbf11000000	                           mov edi, 0x11	      4975	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_28
0x4005f9d	      0xe800000000	                          call 0x4005fa2	      4975	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_28
0x4005fa2	      0xe949040000	                           jmp 0x40063f0	      4976	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44
0x4005fa7	        0x488d4848	                   lea rcx, [rax + 0x48]	      4976	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44
0x4005fab	          0x8d53ff	                      lea edx, [rbx - 1]	      4976	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44
0x4005fae	      0x488d74d048	          lea rsi, [rax + rdx*8 + 0x48] 	      4976	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44
0x4005fb3	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      4958	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44
0x4005fb8	          0x488911	                    mov qword [rcx], rdx	      4978	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5
0x4005fbb	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      4979	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5
0x4005fbf	          0x4839ce	                            cmp rsi, rcx	      4956	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5
0x4005fc2	     0xf855fffffff	                           jne 0x4005f27	      4956	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5
0x4005fc8	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      4982	elf.c	FUNCTION_65	IF_2	IF_42
0x4005fcd	          0x488903	                    mov qword [rbx], rax	      4982	elf.c	FUNCTION_65	IF_2	IF_42
0x4005fd0	      0x4889442408	                mov qword [rsp + 8], rax	      4983	elf.c	FUNCTION_65	IF_2	IF_42
0x4005fd5	          0x4885ed	                           test rbp, rbp	      4986	elf.c	FUNCTION_65	IF_2	IF_46
0x4005fd8	     0xf84a3000000	                            je 0x4006081	      4986	elf.c	FUNCTION_65	IF_2	IF_46
0x4005fde	      0x41f6474520	           test byte [r15 + 0x45], 0x20 	      4986	elf.c	FUNCTION_65	IF_2	IF_46
0x4005fe3	     0xf8498000000	                            je 0x4006081	      4986	elf.c	FUNCTION_65	IF_2	IF_46
0x4005fe9	    0x488b85e00000	            mov rax, qword [rbp + 0xe0] 	      4988	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_29
0x4005ff0	        0xf6400b01	                test byte [rax + 0xb], 1	      4988	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_29
0x4005ff4	            0x747e	                            je 0x4006074	      4988	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_29
0x4005ff6	    0x81782c001000	         cmp dword [rax + 0x2c], 0x1000 	      4989	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_30
0x4005ffd	            0x7775	                            ja 0x4006074	      4989	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_30
0x4005fff	          0x8b4520	            mov eax, dword [rbp + 0x20] 	      4994	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_48
0x4006002	            0x89c2	                            mov edx, eax	      4994	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_48
0x4006004	          0x83e208	                              and edx, 8	      4994	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_48
0x4006007	          0x83fa01	                              cmp edx, 1	      4995	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_48
0x400600a	          0x4819db	                            sbb rbx, rbx	      4995	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_48
0x400600d	          0x83e302	                              and ebx, 2	      4995	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_48
0x4006010	        0x4883c304	                              add rbx, 4	      4995	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_48
0x4006014	          0x4889da	                            mov rdx, rbx	      4997	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_49
0x4006017	        0x4883ca01	                               or rdx, 1	      4997	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_49
0x400601b	            0xa810	                           test al, 0x10	      4997	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_49
0x400601d	        0x480f45da	                         cmovne rbx, rdx	      4997	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_49
0x4006021	      0xbe58000000	                           mov esi, 0x58	      5000	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_31
0x4006026	          0x4c89ff	                            mov rdi, r15	      5000	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_31
0x4006029	      0xe800000000	                          call 0x400602e	      5000	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_31
0x400602e	          0x4885c0	                           test rax, rax	      5001	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_50
0x4006031	     0xf84b9030000	                            je 0x40063f0	      5001	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	IF_50
0x4006037	    0x48c700000000	                      mov qword [rax], 0	      5003	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x400603e	    0x488b95e00000	            mov rdx, qword [rbp + 0xe0] 	      5005	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47	CALL_32
0x4006045	          0x8b522c	            mov edx, dword [rdx + 0x2c] 	      5004	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x4006048	    0x81c255e57464	                     add edx, 0x6474e555	      5004	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x400604e	            0x89d7	                            mov edi, edx	      5004	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x4006050	        0x48897808	                mov qword [rax + 8], rdi	      5004	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x4006054	    0xc74044010000	               mov dword [rax + 0x44], 1	      5006	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x400605b	        0x80484001	                 or byte [rax + 0x40], 1	      5007	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x400605f	        0x48896848	             mov qword [rax + 0x48], rbp	      5008	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x4006063	        0x48895810	             mov qword [rax + 0x10], rbx	      5009	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x4006067	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      5011	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x400606c	          0x488903	                    mov qword [rbx], rax	      5011	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x400606f	      0x4889442408	                mov qword [rsp + 8], rax	      5012	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6	IF_47
0x4006074	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      4987	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6
0x4006078	          0x4885ed	                           test rbp, rbp	      4987	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6
0x400607b	     0xf8568ffffff	                           jne 0x4005fe9	      4987	elf.c	FUNCTION_65	IF_2	IF_46	FOR_6
0x4006081	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5017	elf.c	FUNCTION_65	IF_2	CALL_33
0x4006088	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5017	elf.c	FUNCTION_65	IF_2	CALL_33
0x400608f	        0x488b5818	            mov rbx, qword [rax + 0x18] 	      5017	elf.c	FUNCTION_65	IF_2	CALL_33
0x4006093	          0x4885db	                           test rbx, rbx	      5018	elf.c	FUNCTION_65	IF_2	IF_51
0x4006096	            0x744b	                            je 0x40060e3	      5018	elf.c	FUNCTION_65	IF_2	IF_51
0x4006098	        0x488b4368	            mov rax, qword [rbx + 0x68] 	      5019	elf.c	FUNCTION_65	IF_2	IF_51
0x400609c	        0xf6402002	               test byte [rax + 0x20], 2	      5019	elf.c	FUNCTION_65	IF_2	IF_51
0x40060a0	            0x7441	                            je 0x40060e3	      5019	elf.c	FUNCTION_65	IF_2	IF_51
0x40060a2	      0xbe50000000	                           mov esi, 0x50	      5022	elf.c	FUNCTION_65	IF_2	IF_51	CALL_34
0x40060a7	          0x4c89ff	                            mov rdi, r15	      5022	elf.c	FUNCTION_65	IF_2	IF_51	CALL_34
0x40060aa	      0xe800000000	                          call 0x40060af	      5022	elf.c	FUNCTION_65	IF_2	IF_51	CALL_34
0x40060af	          0x4885c0	                           test rax, rax	      5023	elf.c	FUNCTION_65	IF_2	IF_51	IF_52
0x40060b2	     0xf8438030000	                            je 0x40063f0	      5023	elf.c	FUNCTION_65	IF_2	IF_51	IF_52
0x40060b8	    0x48c700000000	                      mov qword [rax], 0	      5025	elf.c	FUNCTION_65	IF_2	IF_51
0x40060bf	    0x48c7400850e5	        mov qword [rax + 8], 0x6474e550 	      5026	elf.c	FUNCTION_65	IF_2	IF_51
0x40060c7	    0xc74044010000	               mov dword [rax + 0x44], 1	      5027	elf.c	FUNCTION_65	IF_2	IF_51
0x40060ce	        0x488b5368	            mov rdx, qword [rbx + 0x68] 	      5028	elf.c	FUNCTION_65	IF_2	IF_51
0x40060d2	        0x48895048	             mov qword [rax + 0x48], rdx	      5028	elf.c	FUNCTION_65	IF_2	IF_51
0x40060d6	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      5030	elf.c	FUNCTION_65	IF_2	IF_51
0x40060db	          0x488903	                    mov qword [rbx], rax	      5030	elf.c	FUNCTION_65	IF_2	IF_51
0x40060de	      0x4889442408	                mov qword [rsp + 8], rax	      5031	elf.c	FUNCTION_65	IF_2	IF_51
0x40060e3	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5034	elf.c	FUNCTION_65	IF_2	IF_53	CALL_35
0x40060ea	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5034	elf.c	FUNCTION_65	IF_2	IF_53	CALL_35
0x40060f1	        0x83785400	               cmp dword [rax + 0x54], 0	      5034	elf.c	FUNCTION_65	IF_2	IF_53	CALL_35
0x40060f5	            0x747f	                            je 0x4006176	      5034	elf.c	FUNCTION_65	IF_2	IF_53	CALL_35
0x40060f7	      0xbe50000000	                           mov esi, 0x50	      5037	elf.c	FUNCTION_65	IF_2	IF_53	CALL_36
0x40060fc	          0x4c89ff	                            mov rdi, r15	      5037	elf.c	FUNCTION_65	IF_2	IF_53	CALL_36
0x40060ff	      0xe800000000	                          call 0x4006104	      5037	elf.c	FUNCTION_65	IF_2	IF_53	CALL_36
0x4006104	          0x4885c0	                           test rax, rax	      5038	elf.c	FUNCTION_65	IF_2	IF_53	IF_54
0x4006107	     0xf84e3020000	                            je 0x40063f0	      5038	elf.c	FUNCTION_65	IF_2	IF_53	IF_54
0x400610d	    0x48c700000000	                      mov qword [rax], 0	      5040	elf.c	FUNCTION_65	IF_2	IF_53
0x4006114	    0x48c7400851e5	        mov qword [rax + 8], 0x6474e551 	      5041	elf.c	FUNCTION_65	IF_2	IF_53
0x400611c	    0x498b97f80000	            mov rdx, qword [r15 + 0xf8] 	      5042	elf.c	FUNCTION_65	IF_2	IF_53	CALL_37
0x4006123	    0x488b92980c00	           mov rdx, qword [rdx + 0xc98] 	      5042	elf.c	FUNCTION_65	IF_2	IF_53	CALL_37
0x400612a	          0x8b5a54	            mov ebx, dword [rdx + 0x54] 	      5042	elf.c	FUNCTION_65	IF_2	IF_53	CALL_37
0x400612d	        0x48895810	             mov qword [rax + 0x10], rbx	      5042	elf.c	FUNCTION_65	IF_2	IF_53	CALL_37
0x4006131	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      5043	elf.c	FUNCTION_65	IF_2	IF_53
0x4006136	    0x8b937c030000	           mov edx, dword [rbx + 0x37c] 	      5043	elf.c	FUNCTION_65	IF_2	IF_53
0x400613c	        0x48895028	             mov qword [rax + 0x28], rdx	      5043	elf.c	FUNCTION_65	IF_2	IF_53
0x4006140	         0xfb64840	           movzx ecx, byte [rax + 0x40] 	      5044	elf.c	FUNCTION_65	IF_2	IF_53
0x4006144	          0x83c901	                               or ecx, 1	      5044	elf.c	FUNCTION_65	IF_2	IF_53
0x4006147	          0x4885d2	                           test rdx, rdx	      5045	elf.c	FUNCTION_65	IF_2	IF_53
0x400614a	           0xf95c2	                                setne dl	      5045	elf.c	FUNCTION_65	IF_2	IF_53
0x400614d	          0xc1e202	                              shl edx, 2	      5045	elf.c	FUNCTION_65	IF_2	IF_53
0x4006150	          0x83e1fb	                     and ecx, 0xfffffffb	      5045	elf.c	FUNCTION_65	IF_2	IF_53
0x4006153	             0x9ca	                             or edx, ecx	      5045	elf.c	FUNCTION_65	IF_2	IF_53
0x4006155	          0x885040	               mov byte [rax + 0x40], dl	      5045	elf.c	FUNCTION_65	IF_2	IF_53
0x4006158	        0x498b5510	            mov rdx, qword [r13 + 0x10] 	      5046	elf.c	FUNCTION_65	IF_2	IF_53	IF_55
0x400615c	          0x4885d2	                           test rdx, rdx	      5046	elf.c	FUNCTION_65	IF_2	IF_53	IF_55
0x400615f	            0x7e08	                           jle 0x4006169	      5046	elf.c	FUNCTION_65	IF_2	IF_53	IF_55
0x4006161	        0x48895030	             mov qword [rax + 0x30], rdx	      5048	elf.c	FUNCTION_65	IF_2	IF_53	IF_55
0x4006165	        0x80484008	                 or byte [rax + 0x40], 8	      5049	elf.c	FUNCTION_65	IF_2	IF_53	IF_55
0x4006169	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      5052	elf.c	FUNCTION_65	IF_2	IF_53
0x400616e	          0x488903	                    mov qword [rbx], rax	      5052	elf.c	FUNCTION_65	IF_2	IF_53
0x4006171	      0x4889442408	                mov qword [rsp + 8], rax	      5053	elf.c	FUNCTION_65	IF_2	IF_53
0x4006176	          0x4d85ed	                           test r13, r13	      5056	elf.c	FUNCTION_65	IF_2	IF_56
0x4006179	     0xf849f000000	                            je 0x400621e	      5056	elf.c	FUNCTION_65	IF_2	IF_56
0x400617f	      0x41f6450310	               test byte [r13 + 3], 0x10	      5056	elf.c	FUNCTION_65	IF_2	IF_56
0x4006184	     0xf8494000000	                            je 0x400621e	      5056	elf.c	FUNCTION_65	IF_2	IF_56
0x400618a	      0x488b442470	            mov rax, qword [rsp + 0x70] 	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x400618f	          0x4885c0	                           test rax, rax	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x4006192	     0xf8486000000	                            je 0x400621e	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x4006198	      0x4883780801	                  cmp qword [rax + 8], 1	      5060	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x400619d	            0x7543	                           jne 0x40061e2	      5060	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x400619f	          0x8b5044	            mov edx, dword [rax + 0x44] 	      5061	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x40061a2	            0x85d2	                           test edx, edx	      5061	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x40061a4	            0x743c	                            je 0x40061e2	      5061	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x40061a6	        0x488b4848	            mov rcx, qword [rax + 0x48] 	      5062	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x40061aa	        0x488b4928	            mov rcx, qword [rcx + 0x28] 	      5062	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x40061ae	    0x493b8dc80000	            cmp rcx, qword [r13 + 0xc8] 	      5062	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x40061b5	            0x722b	                            jb 0x40061e2	      5062	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x40061b7	    0x493b8dd00000	            cmp rcx, qword [r13 + 0xd0] 	      5063	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x40061be	            0x721a	                            jb 0x40061da	      5063	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x40061c0	            0xeb20	                           jmp 0x40061e2	      5063	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57
0x40061c2	            0x89d1	                            mov ecx, edx	      5067	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3	IF_58
0x40061c4	      0x488b4cc848	    mov rcx, qword [rax + rcx*8 + 0x48] 	      5067	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3	IF_58
0x40061c9	          0x8b4920	            mov ecx, dword [rcx + 0x20] 	      5067	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3	IF_58
0x40061cc	    0x81e102010000	                          and ecx, 0x102	      5067	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3	IF_58
0x40061d2	    0x81f902010000	                          cmp ecx, 0x102	      5067	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3	IF_58
0x40061d8	            0x7412	                            je 0x40061ec	      5067	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3	IF_58
0x40061da	          0x83ea01	                              sub edx, 1	      5066	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3
0x40061dd	          0x83faff	             cmp edx, 0xffffffffffffffff	      5066	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3
0x40061e0	            0x75e0	                           jne 0x40061c2	      5066	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7	IF_57	WHILE_3
0x40061e2	          0x488b00	                    mov rax, qword [rax]	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x40061e5	          0x4885c0	                           test rax, rax	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x40061e8	            0x75ae	                           jne 0x4006198	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x40061ea	            0xeb32	                           jmp 0x400621e	      5058	elf.c	FUNCTION_65	IF_2	IF_56	FOR_7
0x40061ec	          0x4885c0	                           test rax, rax	      5077	elf.c	FUNCTION_65	IF_2	IF_56	IF_60
0x40061ef	            0x742d	                            je 0x400621e	      5077	elf.c	FUNCTION_65	IF_2	IF_56	IF_60
0x40061f1	      0xbe50000000	                           mov esi, 0x50	      5080	elf.c	FUNCTION_65	IF_2	IF_56	IF_60	CALL_38
0x40061f6	          0x4c89ff	                            mov rdi, r15	      5080	elf.c	FUNCTION_65	IF_2	IF_56	IF_60	CALL_38
0x40061f9	      0xe800000000	                          call 0x40061fe	      5080	elf.c	FUNCTION_65	IF_2	IF_56	IF_60	CALL_38
0x40061fe	          0x4885c0	                           test rax, rax	      5081	elf.c	FUNCTION_65	IF_2	IF_56	IF_60	IF_61
0x4006201	     0xf84e9010000	                            je 0x40063f0	      5081	elf.c	FUNCTION_65	IF_2	IF_56	IF_60	IF_61
0x4006207	    0x48c700000000	                      mov qword [rax], 0	      5083	elf.c	FUNCTION_65	IF_2	IF_56	IF_60
0x400620e	    0x48c7400852e5	        mov qword [rax + 8], 0x6474e552 	      5084	elf.c	FUNCTION_65	IF_2	IF_56	IF_60
0x4006216	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      5085	elf.c	FUNCTION_65	IF_2	IF_56	IF_60
0x400621b	          0x488903	                    mov qword [rbx], rax	      5085	elf.c	FUNCTION_65	IF_2	IF_56	IF_60
0x400621e	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      5090	elf.c	FUNCTION_65	IF_2	CALL_39
0x4006223	      0xe800000000	                          call 0x4006228	      5090	elf.c	FUNCTION_65	IF_2	CALL_39
0x4006228	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5091	elf.c	FUNCTION_65	IF_2	CALL_40
0x400622f	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5091	elf.c	FUNCTION_65	IF_2	CALL_40
0x4006236	      0x488b542470	            mov rdx, qword [rsp + 0x70] 	      5091	elf.c	FUNCTION_65	IF_2	CALL_40
0x400623b	          0x488910	                    mov qword [rax], rdx	      5091	elf.c	FUNCTION_65	IF_2	CALL_40
0x400623e	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      4532	elf.c	FUNCTION_64	CALL_1
0x4006245	    0x4c8b80980c00	            mov r8, qword [rax + 0xc98] 	      4532	elf.c	FUNCTION_64	CALL_1
0x400624c	    0x49b920000000	           movabs r9, 0xffffffff00000020	      4552	elf.c	FUNCTION_64	WHILE_1	IF_2
0x4006256	            0xeb53	                           jmp 0x40062ab	      4552	elf.c	FUNCTION_64	WHILE_1	IF_2
0x4006258	            0x89c1	                            mov ecx, eax	      4539	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400625a	      0x488b74ca48	    mov rsi, qword [rdx + rcx*8 + 0x48] 	      4539	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400625f	          0x8b4e20	            mov ecx, dword [rsi + 0x20] 	      4539	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x4006262	          0xf6c580	                           test ch, 0x80	      4539	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x4006265	            0x7516	                           jne 0x400627d	      4539	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x4006267	          0xf6c101	                              test cl, 1	      4540	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400626a	            0x7507	                           jne 0x4006273	      4540	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400626c	      0x48837a0801	                  cmp qword [rdx + 8], 1	      4541	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x4006271	            0x740a	                            je 0x400627d	      4541	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x4006273	            0x89f9	                            mov ecx, edi	      4543	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x4006275	      0x488974ca48	     mov qword [rdx + rcx*8 + 0x48], rsi	      4543	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400627a	          0x83c701	                              add edi, 1	      4544	elf.c	FUNCTION_64	WHILE_1	FOR_1	IF_1
0x400627d	          0x83c001	                              add eax, 1	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x4006280	          0x498b10	                     mov rdx, qword [r8]	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x4006283	          0x3b4244	            cmp eax, dword [rdx + 0x44] 	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x4006286	            0x72d0	                            jb 0x4006258	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x4006288	          0x897a44	             mov dword [rdx + 0x44], edi	      4547	elf.c	FUNCTION_64	WHILE_1
0x400628b	          0x4d85f6	                           test r14, r14	      4549	elf.c	FUNCTION_64	WHILE_1	IF_2
0x400628e	            0x7518	                           jne 0x40062a8	      4549	elf.c	FUNCTION_64	WHILE_1	IF_2
0x4006290	          0x498b00	                     mov rax, qword [r8]	      4550	elf.c	FUNCTION_64	WHILE_1	IF_2
0x4006293	      0x4883780801	                  cmp qword [rax + 8], 1	      4550	elf.c	FUNCTION_64	WHILE_1	IF_2
0x4006298	            0x750e	                           jne 0x40062a8	      4550	elf.c	FUNCTION_64	WHILE_1	IF_2
0x400629a	        0x4c854840	            test qword [rax + 0x40], r9 	      4552	elf.c	FUNCTION_64	WHILE_1	IF_2
0x400629e	            0x7508	                           jne 0x40062a8	      4552	elf.c	FUNCTION_64	WHILE_1	IF_2
0x40062a0	          0x488b00	                    mov rax, qword [rax]	      4553	elf.c	FUNCTION_64	WHILE_1	IF_2
0x40062a3	          0x498900	                     mov qword [r8], rax	      4553	elf.c	FUNCTION_64	WHILE_1	IF_2
0x40062a6	            0xeb03	                           jmp 0x40062ab	      4553	elf.c	FUNCTION_64	WHILE_1	IF_2
0x40062a8	          0x4d8b00	                      mov r8, qword [r8]	      4555	elf.c	FUNCTION_64	WHILE_1	ELSE_1
0x40062ab	          0x498b10	                     mov rdx, qword [r8]	      4533	elf.c	FUNCTION_64	WHILE_1
0x40062ae	          0x4885d2	                           test rdx, rdx	      4533	elf.c	FUNCTION_64	WHILE_1
0x40062b1	            0x7412	                            je 0x40062c5	      4533	elf.c	FUNCTION_64	WHILE_1
0x40062b3	      0xbf00000000	                              mov edi, 0	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x40062b8	      0xb800000000	                              mov eax, 0	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x40062bd	        0x837a4400	               cmp dword [rdx + 0x44], 0	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x40062c1	            0x7595	                           jne 0x4006258	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x40062c3	            0xebc3	                           jmp 0x4006288	      4537	elf.c	FUNCTION_64	WHILE_1	FOR_1
0x40062c5	        0x498b4708	                mov rax, qword [r15 + 8]	      4558	elf.c	FUNCTION_64	CALL_2
0x40062c9	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      4559	elf.c	FUNCTION_64	IF_3
0x40062d0	    0x488b80500100	           mov rax, qword [rax + 0x150] 	      4559	elf.c	FUNCTION_64	IF_3
0x40062d7	          0x4885c0	                           test rax, rax	      4559	elf.c	FUNCTION_64	IF_3
0x40062da	            0x740c	                            je 0x40062e8	      4559	elf.c	FUNCTION_64	IF_3
0x40062dc	          0x4c89ee	                            mov rsi, r13	      4561	elf.c	FUNCTION_64	IF_3	IF_4
0x40062df	          0x4c89ff	                            mov rdi, r15	      4561	elf.c	FUNCTION_64	IF_3	IF_4
0x40062e2	            0xffd0	                                call rax	      4561	elf.c	FUNCTION_64	IF_3	IF_4
0x40062e4	            0x85c0	                           test eax, eax	      5094	elf.c	FUNCTION_65	IF_62	CALL_41
0x40062e6	            0x744b	                            je 0x4006333	      5094	elf.c	FUNCTION_65	IF_62	CALL_41
0x40062e8	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5097	elf.c	FUNCTION_65	FOR_8	CALL_42
0x40062ef	    0x488b88980c00	           mov rcx, qword [rax + 0xc98] 	      5097	elf.c	FUNCTION_65	FOR_8	CALL_42
0x40062f6	          0x488b01	                    mov rax, qword [rcx]	      5097	elf.c	FUNCTION_65	FOR_8	CALL_42
0x40062f9	          0x4885c0	                           test rax, rax	      5097	elf.c	FUNCTION_65	FOR_8	CALL_42
0x40062fc	            0x7412	                            je 0x4006310	      5097	elf.c	FUNCTION_65	FOR_8	CALL_42
0x40062fe	      0xba00000000	                              mov edx, 0	      5097	elf.c	FUNCTION_65	FOR_8	CALL_42
0x4006303	          0x83c201	                              add edx, 1	      5098	elf.c	FUNCTION_65	FOR_8
0x4006306	          0x488b00	                    mov rax, qword [rax]	      5097	elf.c	FUNCTION_65	FOR_8	CALL_42
0x4006309	          0x4885c0	                           test rax, rax	      5097	elf.c	FUNCTION_65	FOR_8	CALL_42
0x400630c	            0x75f5	                           jne 0x4006303	      5097	elf.c	FUNCTION_65	FOR_8	CALL_42
0x400630e	            0xeb05	                           jmp 0x4006315	      5097	elf.c	FUNCTION_65	FOR_8	CALL_42
0x4006310	      0xba00000000	                              mov edx, 0	      5097	elf.c	FUNCTION_65	FOR_8	CALL_42
0x4006315	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5099	elf.c	FUNCTION_65	CALL_43
0x400631a	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      5099	elf.c	FUNCTION_65	CALL_43
0x4006321	         0xfb64001	               movzx eax, byte [rax + 1]	      5099	elf.c	FUNCTION_65	CALL_43
0x4006325	           0xfafd0	                           imul edx, eax	      5099	elf.c	FUNCTION_65	CALL_43
0x4006328	            0x89d0	                            mov eax, edx	      5099	elf.c	FUNCTION_65	CALL_43
0x400632a	        0x48894138	             mov qword [rcx + 0x38], rax	      5099	elf.c	FUNCTION_65	CALL_43
0x400632e	      0xb801000000	                              mov eax, 1	      5101	elf.c	FUNCTION_65
0x4006333	      0x488b5c2478	            mov rbx, qword [rsp + 0x78] 	      5107	elf.c	FUNCTION_65
0x4006338	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      5107	elf.c	FUNCTION_65
0x4006341	     0xf844b010000	                            je 0x4006492	      5107	elf.c	FUNCTION_65
0x4006347	      0xe941010000	                           jmp 0x400648d	      5107	elf.c	FUNCTION_65
0x400634c	      0xbd00000000	                              mov ebp, 0	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x4006351	      0xbe00000000	                              mov esi, 0	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x4006356	      0xbf00000000	                              mov edi, 0	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x400635b	    0xc74424300000	               mov dword [rsp + 0x30], 0	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x4006363	      0xba00000000	                              mov edx, 0	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x4006368	      0xb900000000	                              mov ecx, 0	      4693	elf.c	FUNCTION_65	IF_2	IF_10
0x400636d	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x4006372	        0x488d58ff	                      lea rbx, [rax - 1]	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x4006376	      0x48895c2460	             mov qword [rsp + 0x60], rbx	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400637b	          0x48f7d8	                                 neg rax	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400637e	      0x4889442450	             mov qword [rsp + 0x50], rax	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x4006383	      0x4c89742468	             mov qword [rsp + 0x68], r14	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x4006388	          0x4189fe	                           mov r14d, edi	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400638b	      0x4c897c2428	             mov qword [rsp + 0x28], r15	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x4006390	          0x4189f7	                           mov r15d, esi	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x4006393	      0xe9f8f6ffff	                           jmp 0x4005a90	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x4006398	      0x4839442460	            cmp qword [rsp + 0x60], rax 	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x400639d	     0xf878af7ffff	                            ja 0x4005b2d	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x40063a3	      0xe99af7ffff	                           jmp 0x4005b42	      4769	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_5	IF_19
0x40063a8	          0x4d85ed	                           test r13, r13	      4814	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x40063ab	            0x7565	                           jne 0x4006412	      4814	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x40063ad	      0xe934f8ffff	                           jmp 0x4005be6	      4814	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x40063b2	          0x4d85ed	                           test r13, r13	      4814	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x40063b5	     0xf84f7f7ffff	                            je 0x4005bb2	      4814	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x40063bb	            0xeb6b	                           jmp 0x4006428	      4814	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x40063bd	      0xba05000000	                              mov edx, 5	      4961	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_23
0x40063c2	      0xbe00000000	                              mov esi, 0	      4961	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_23
0x40063c7	      0xbf00000000	                              mov edi, 0	      4961	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_23
0x40063cc	      0xe800000000	                          call 0x40063d1	      4961	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_23
0x40063d1	          0x4c89fe	                            mov rsi, r15	      4960	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_22
0x40063d4	          0x4889c7	                            mov rdi, rax	      4960	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_22
0x40063d7	      0xb800000000	                              mov eax, 0	      4960	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_22
0x40063dc	      0xe800000000	                          call 0x40063e1	      4960	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_22
0x40063e1	      0xbd00000000	                              mov ebp, 0	      4960	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_22
0x40063e6	      0x4c8b642420	            mov r12, qword [rsp + 0x20] 	      4960	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_22
0x40063eb	      0xe94afbffff	                           jmp 0x4005f3a	      4960	elf.c	FUNCTION_65	IF_2	IF_42	FOR_5	IF_44	CALL_22
0x40063f0	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      5105	elf.c	FUNCTION_65	CALL_44
0x40063f5	      0xe800000000	                          call 0x40063fa	      5105	elf.c	FUNCTION_65	CALL_44
0x40063fa	      0xb800000000	                              mov eax, 0	      5106	elf.c	FUNCTION_65
0x40063ff	      0xe92fffffff	                           jmp 0x4006333	      5106	elf.c	FUNCTION_65
0x4006404	          0x4585f6	                         test r14d, r14d	      4800	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x4006407	     0xf847ff7ffff	                            je 0x4005b8c	      4800	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x400640d	      0xe9a0f7ffff	                           jmp 0x4005bb2	      4800	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	ELSE_9	IF_23
0x4006412	        0x498b4520	            mov rax, qword [r13 + 0x20] 	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x4006416	        0x488b4070	            mov rax, qword [rax + 0x70] 	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x400641a	          0x4885c0	                           test rax, rax	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x400641d	     0xf8578f7ffff	                           jne 0x4005b9b	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x4006423	      0xe9bef7ffff	                           jmp 0x4005be6	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x4006428	        0x498b4520	            mov rax, qword [r13 + 0x20] 	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x400642c	        0x488b4070	            mov rax, qword [rax + 0x70] 	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x4006430	    0x41b800000000	                              mov r8d, 0	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x4006436	          0x4885c0	                           test rax, rax	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x4006439	     0xf8562f7ffff	                           jne 0x4005ba1	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x400643f	      0xe96ef7ffff	                           jmp 0x4005bb2	      4816	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x4006444	    0x49c704240000	                      mov qword [r12], 0	      4916	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400644c	    0x49c744240804	                  mov qword [r12 + 8], 4	      4917	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4006455	    0x41c744244401	               mov dword [r12 + 0x44], 1	      4918	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x400645e	      0xe9e0f9ffff	                           jmp 0x4005e43	      4918	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35
0x4006463	      0xbe50000000	                           mov esi, 0x50	      4913	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_17
0x4006468	          0x4c89ff	                            mov rdi, r15	      4913	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_17
0x400646b	      0xe800000000	                          call 0x4006470	      4913	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_17
0x4006470	          0x4989c4	                            mov r12, rax	      4913	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	CALL_17
0x4006473	          0x4885c0	                           test rax, rax	      4914	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_38
0x4006476	     0xf8474ffffff	                            je 0x40063f0	      4914	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_38
0x400647c	            0xebc6	                           jmp 0x4006444	      4914	elf.c	FUNCTION_65	IF_2	FOR_3	IF_35	IF_38
0x400647e	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      4824	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25	IF_26
0x4006481	      0xe93af7ffff	                           jmp 0x4005bc0	      4824	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_25	IF_26
0x4006486	          0x4d85ed	                           test r13, r13	      4814	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x4006489	            0x74f3	                            je 0x400647e	      4814	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x400648b	            0xeb9b	                           jmp 0x4006428	      4814	elf.c	FUNCTION_65	IF_2	ELSE_1	FOR_2	IF_24
0x400648d	      0xe800000000	                          call 0x4006492	      5107	elf.c	FUNCTION_65
0x4006492	    0x4881c4880000	                           add rsp, 0x88	      5107	elf.c	FUNCTION_65
0x4006499	              0x5b	                                 pop rbx	      5107	elf.c	FUNCTION_65
0x400649a	              0x5d	                                 pop rbp	      5107	elf.c	FUNCTION_65
0x400649b	            0x415c	                                 pop r12	      5107	elf.c	FUNCTION_65
0x400649d	            0x415d	                                 pop r13	      5107	elf.c	FUNCTION_65
0x400649f	            0x415e	                                 pop r14	      5107	elf.c	FUNCTION_65
0x40064a1	            0x415f	                                 pop r15	      5107	elf.c	FUNCTION_65
0x40064a3	              0xc3	                                     ret	      5107	elf.c	FUNCTION_65
_bfd_elf_compute_section_file_positions	FOR,0:ELSE,0:IF,14:WHILE,0:DO,0:SWITCH,0:CALL,20:functions,0	2943
0x4006591	            0x4157	                                push r15	      4217	elf.c	FUNCTION_59
0x4006593	            0x4156	                                push r14	      4217	elf.c	FUNCTION_59
0x4006595	            0x4155	                                push r13	      4217	elf.c	FUNCTION_59
0x4006597	            0x4154	                                push r12	      4217	elf.c	FUNCTION_59
0x4006599	              0x55	                                push rbp	      4217	elf.c	FUNCTION_59
0x400659a	              0x53	                                push rbx	      4217	elf.c	FUNCTION_59
0x400659b	    0x4881ecf80000	                           sub rsp, 0xf8	      4217	elf.c	FUNCTION_59
0x40065a2	      0x4889742420	             mov qword [rsp + 0x20], rsi	      4217	elf.c	FUNCTION_59
0x40065a7	    0x64488b042528	                mov rax, qword fs:[0x28]	      4217	elf.c	FUNCTION_59
0x40065b0	    0x48898424e800	             mov qword [rsp + 0xe8], rax	      4217	elf.c	FUNCTION_59
0x40065b8	            0x31c0	                            xor eax, eax	      4217	elf.c	FUNCTION_59
0x40065ba	        0xf6474740	           test byte [rdi + 0x47], 0x40 	      4225	elf.c	FUNCTION_59	IF_1
0x40065be	     0xf85a22d0000	                           jne 0x4009366	      4225	elf.c	FUNCTION_59	IF_1
0x40065c4	          0x4989ff	                            mov r15, rdi	      4225	elf.c	FUNCTION_59	IF_1
0x40065c7	        0x488b4708	                mov rax, qword [rdi + 8]	      4218	elf.c	FUNCTION_59	CALL_1
0x40065cb	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      4218	elf.c	FUNCTION_59	CALL_1
0x40065d2	      0x4889442408	                mov qword [rsp + 8], rax	      4218	elf.c	FUNCTION_59	CALL_1
0x40065d7	    0x488b80380100	           mov rax, qword [rax + 0x138] 	      4229	elf.c	FUNCTION_59	IF_2
0x40065de	          0x4885c0	                           test rax, rax	      4229	elf.c	FUNCTION_59	IF_2
0x40065e1	            0x7402	                            je 0x40065e5	      4229	elf.c	FUNCTION_59	IF_2
0x40065e3	            0xffd0	                                call rax	      4230	elf.c	FUNCTION_59	IF_2
0x40065e5	        0x498b4708	                mov rax, qword [r15 + 8]	      6198	elf.c	FUNCTION_74	CALL_1
0x40065e9	    0x488ba8680300	           mov rbp, qword [rax + 0x368] 	      6198	elf.c	FUNCTION_74	CALL_1
0x40065f0	    0x498b9ff80000	            mov rbx, qword [r15 + 0xf8] 	      6200	elf.c	FUNCTION_74	CALL_2
0x40065f7	      0xe800000000	                          call 0x40065fc	      6202	elf.c	FUNCTION_74	CALL_3
0x40065fc	          0x4989c4	                            mov r12, rax	      6202	elf.c	FUNCTION_74	CALL_3
0x40065ff	          0x4885c0	                           test rax, rax	      6203	elf.c	FUNCTION_74	IF_1
0x4006602	     0xf84af2d0000	                            je 0x40093b7	      6203	elf.c	FUNCTION_74	IF_1
0x4006608	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      6206	elf.c	FUNCTION_74	CALL_4
0x400660f	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      6206	elf.c	FUNCTION_74	CALL_4
0x4006616	        0x4c896008	                mov qword [rax + 8], r12	      6206	elf.c	FUNCTION_74	CALL_4
0x400661a	          0xc6037f	                    mov byte [rbx], 0x7f	      6208	elf.c	FUNCTION_74
0x400661d	        0xc6430145	                mov byte [rbx + 1], 0x45	      6209	elf.c	FUNCTION_74
0x4006621	        0xc643024c	                mov byte [rbx + 2], 0x4c	      6210	elf.c	FUNCTION_74
0x4006625	        0xc6430346	                mov byte [rbx + 3], 0x46	      6211	elf.c	FUNCTION_74
0x4006629	    0x488b85000300	           mov rax, qword [rbp + 0x300] 	      6213	elf.c	FUNCTION_74
0x4006630	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	      6213	elf.c	FUNCTION_74
0x4006634	          0x884304	                  mov byte [rbx + 4], al	      6213	elf.c	FUNCTION_74
0x4006637	        0x498b4708	                mov rax, qword [r15 + 8]	      6215	elf.c	FUNCTION_74
0x400663b	        0x83780c01	                cmp dword [rax + 0xc], 1	      6214	elf.c	FUNCTION_74
0x400663f	            0x19c0	                            sbb eax, eax	      6214	elf.c	FUNCTION_74
0x4006641	            0xf7d0	                                 not eax	      6214	elf.c	FUNCTION_74
0x4006643	          0x83c002	                              add eax, 2	      6214	elf.c	FUNCTION_74
0x4006646	          0x884305	                  mov byte [rbx + 5], al	      6214	elf.c	FUNCTION_74
0x4006649	    0x488b85000300	           mov rax, qword [rbp + 0x300] 	      6216	elf.c	FUNCTION_74
0x4006650	         0xfb6400d	            movzx eax, byte [rax + 0xd] 	      6216	elf.c	FUNCTION_74
0x4006654	          0x884306	                  mov byte [rbx + 6], al	      6216	elf.c	FUNCTION_74
0x4006657	        0x418b4744	            mov eax, dword [r15 + 0x44] 	      6218	elf.c	FUNCTION_74	IF_2
0x400665b	          0xc1e805	                              shr eax, 5	      6218	elf.c	FUNCTION_74	IF_2
0x400665e	      0x25ffff0f00	                        and eax, 0xfffff	      6218	elf.c	FUNCTION_74	IF_2
0x4006663	            0xa840	                           test al, 0x40	      6218	elf.c	FUNCTION_74	IF_2
0x4006665	            0x7408	                            je 0x400666f	      6218	elf.c	FUNCTION_74	IF_2
0x4006667	    0x66c743380300	                mov word [rbx + 0x38], 3	      6219	elf.c	FUNCTION_74	IF_2
0x400666d	            0xeb24	                           jmp 0x4006693	      6219	elf.c	FUNCTION_74	IF_2
0x400666f	            0xa802	                              test al, 2	      6220	elf.c	FUNCTION_74	ELSE_1	IF_3
0x4006671	            0x7408	                            je 0x400667b	      6220	elf.c	FUNCTION_74	ELSE_1	IF_3
0x4006673	    0x66c743380200	                mov word [rbx + 0x38], 2	      6221	elf.c	FUNCTION_74	ELSE_1	IF_3
0x4006679	            0xeb18	                           jmp 0x4006693	      6221	elf.c	FUNCTION_74	ELSE_1	IF_3
0x400667b	      0x410fb64744	           movzx eax, byte [r15 + 0x44] 	      6222	elf.c	FUNCTION_74	ELSE_2	IF_4
0x4006680	          0x83e007	                              and eax, 7	      6222	elf.c	FUNCTION_74	ELSE_2	IF_4
0x4006683	            0x3c03	                               cmp al, 3	      6223	elf.c	FUNCTION_74	ELSE_2	IF_4
0x4006685	           0xf94c0	                                 sete al	      6223	elf.c	FUNCTION_74	ELSE_2	IF_4
0x4006688	           0xfb6c0	                           movzx eax, al	      6223	elf.c	FUNCTION_74	ELSE_2	IF_4
0x400668b	        0x8d444001	              lea eax, [rax + rax*2 + 1]	      6223	elf.c	FUNCTION_74	ELSE_2	IF_4
0x400668f	        0x66894338	               mov word [rbx + 0x38], ax	      6223	elf.c	FUNCTION_74	ELSE_2	IF_4
0x4006693	          0x4c89ff	                            mov rdi, r15	      6227	elf.c	FUNCTION_74	ELSE_3	SWITCH_1	CALL_5
0x4006696	      0xe800000000	                          call 0x400669b	      6227	elf.c	FUNCTION_74	ELSE_3	SWITCH_1	CALL_5
0x400669b	            0x85c0	                           test eax, eax	      6227	elf.c	FUNCTION_74	ELSE_3	SWITCH_1	CALL_5
0x400669d	            0x7508	                           jne 0x40066a7	      6227	elf.c	FUNCTION_74	ELSE_3	SWITCH_1	CALL_5
0x400669f	    0x66c7433a0000	                mov word [rbx + 0x3a], 0	      6230	elf.c	FUNCTION_74	ELSE_3	SWITCH_1
0x40066a5	            0xeb07	                           jmp 0x40066ae	      6230	elf.c	FUNCTION_74	ELSE_3	SWITCH_1
0x40066a7	          0x8b4508	                mov eax, dword [rbp + 8]	      6242	elf.c	FUNCTION_74	ELSE_3	SWITCH_1
0x40066aa	        0x6689433a	               mov word [rbx + 0x3a], ax	      6242	elf.c	FUNCTION_74	ELSE_3	SWITCH_1
0x40066ae	    0x488b85000300	           mov rax, qword [rbp + 0x300] 	      6245	elf.c	FUNCTION_74
0x40066b5	         0xfb6400d	            movzx eax, byte [rax + 0xd] 	      6245	elf.c	FUNCTION_74
0x40066b9	        0x48894328	             mov qword [rbx + 0x28], rax	      6245	elf.c	FUNCTION_74
0x40066bd	    0x488b85000300	           mov rax, qword [rbp + 0x300] 	      6246	elf.c	FUNCTION_74
0x40066c4	           0xfb600	                   movzx eax, byte [rax]	      6246	elf.c	FUNCTION_74
0x40066c7	          0x89433c	             mov dword [rbx + 0x3c], eax	      6246	elf.c	FUNCTION_74
0x40066ca	    0x48c743180000	               mov qword [rbx + 0x18], 0	      6249	elf.c	FUNCTION_74
0x40066d2	    0xc74340000000	               mov dword [rbx + 0x40], 0	      6250	elf.c	FUNCTION_74
0x40066d9	    0xc74344000000	               mov dword [rbx + 0x44], 0	      6251	elf.c	FUNCTION_74
0x40066e0	    0x498b87a80000	            mov rax, qword [r15 + 0xa8] 	      6254	elf.c	FUNCTION_74
0x40066e7	        0x48894310	             mov qword [rbx + 0x10], rax	      6254	elf.c	FUNCTION_74
0x40066eb	    0x488b85000300	           mov rax, qword [rbp + 0x300] 	      6255	elf.c	FUNCTION_74
0x40066f2	         0xfb64002	               movzx eax, byte [rax + 2]	      6255	elf.c	FUNCTION_74
0x40066f6	          0x894348	             mov dword [rbx + 0x48], eax	      6255	elf.c	FUNCTION_74
0x40066f9	    0x498b9ff80000	            mov rbx, qword [r15 + 0xf8] 	      6267	elf.c	FUNCTION_74	CALL_6
0x4006700	      0xba00000000	                              mov edx, 0	      6268	elf.c	FUNCTION_74	CALL_7
0x4006705	      0xbe00000000	                              mov esi, 0	      6268	elf.c	FUNCTION_74	CALL_7
0x400670a	          0x4c89e7	                            mov rdi, r12	      6268	elf.c	FUNCTION_74	CALL_7
0x400670d	      0xe800000000	                          call 0x4006712	      6268	elf.c	FUNCTION_74	CALL_7
0x4006712	          0x894368	             mov dword [rbx + 0x68], eax	      6267	elf.c	FUNCTION_74	CALL_6
0x4006715	    0x498b9ff80000	            mov rbx, qword [r15 + 0xf8] 	      6269	elf.c	FUNCTION_74	CALL_8
0x400671c	      0xba00000000	                              mov edx, 0	      6270	elf.c	FUNCTION_74	CALL_9
0x4006721	      0xbe00000000	                              mov esi, 0	      6270	elf.c	FUNCTION_74	CALL_9
0x4006726	          0x4c89e7	                            mov rdi, r12	      6270	elf.c	FUNCTION_74	CALL_9
0x4006729	      0xe800000000	                          call 0x400672e	      6270	elf.c	FUNCTION_74	CALL_9
0x400672e	    0x898308010000	            mov dword [rbx + 0x108], eax	      6269	elf.c	FUNCTION_74	CALL_8
0x4006734	    0x498b9ff80000	            mov rbx, qword [r15 + 0xf8] 	      6271	elf.c	FUNCTION_74	CALL_10
0x400673b	      0xba00000000	                              mov edx, 0	      6272	elf.c	FUNCTION_74	CALL_11
0x4006740	      0xbe00000000	                              mov esi, 0	      6272	elf.c	FUNCTION_74	CALL_11
0x4006745	          0x4c89e7	                            mov rdi, r12	      6272	elf.c	FUNCTION_74	CALL_11
0x4006748	      0xe800000000	                          call 0x400674d	      6272	elf.c	FUNCTION_74	CALL_11
0x400674d	    0x8983b8000000	             mov dword [rbx + 0xb8], eax	      6271	elf.c	FUNCTION_74	CALL_10
0x4006753	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      6273	elf.c	FUNCTION_74	IF_6	CALL_12
0x400675a	        0x837868ff	cmp dword [rax + 0x68], 0xffffffffffffffff	      6273	elf.c	FUNCTION_74	IF_6	CALL_12
0x400675e	     0xf84532c0000	                            je 0x40093b7	      6273	elf.c	FUNCTION_74	IF_6	CALL_12
0x4006764	    0x83b808010000	cmp dword [rax + 0x108], 0xffffffffffffffff	      6274	elf.c	FUNCTION_74	IF_6	CALL_13
0x400676b	     0xf84462c0000	                            je 0x40093b7	      6274	elf.c	FUNCTION_74	IF_6	CALL_13
0x4006771	    0x83b8b8000000	cmp dword [rax + 0xb8], 0xffffffffffffffff	      4232	elf.c	FUNCTION_59	IF_3	CALL_2
0x4006778	     0xf84f52b0000	                            je 0x4009373	      4232	elf.c	FUNCTION_59	IF_3	CALL_2
0x400677e	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      4236	elf.c	FUNCTION_59
0x4006783	          0x4889de	                            mov rsi, rbx	      4236	elf.c	FUNCTION_59
0x4006786	          0x4c89ff	                            mov rdi, r15	      4236	elf.c	FUNCTION_59
0x4006789	      0x488b442408	                mov rax, qword [rsp + 8]	      4236	elf.c	FUNCTION_59
0x400678e	    0xff9088010000	                call qword [rax + 0x188]	      4236	elf.c	FUNCTION_59
0x4006794	    0xc78424b80000	               mov dword [rsp + 0xb8], 0	      4238	elf.c	FUNCTION_59
0x400679f	    0x48899c24b000	             mov qword [rsp + 0xb0], rbx	      4239	elf.c	FUNCTION_59
0x40067a7	    0x488d9424b000	                   lea rdx, [rsp + 0xb0]	      4240	elf.c	FUNCTION_59	CALL_3
0x40067af	      0xbe00000000	                              mov esi, 0	      4240	elf.c	FUNCTION_59	CALL_3
0x40067b4	          0x4c89ff	                            mov rdi, r15	      4240	elf.c	FUNCTION_59	CALL_3
0x40067b7	      0xe800000000	                          call 0x40067bc	      4240	elf.c	FUNCTION_59	CALL_3
0x40067bc	    0x8b8424b80000	            mov eax, dword [rsp + 0xb8] 	      4241	elf.c	FUNCTION_59	IF_4
0x40067c3	    0x898424880000	             mov dword [rsp + 0x88], eax	      4241	elf.c	FUNCTION_59	IF_4
0x40067ca	            0x85c0	                           test eax, eax	      4241	elf.c	FUNCTION_59	IF_4
0x40067cc	     0xf85ae2b0000	                           jne 0x4009380	      4241	elf.c	FUNCTION_59	IF_4
0x40067d2	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3643	elf.c	FUNCTION_52	CALL_1
0x40067d9	      0x4889442410	             mov qword [rsp + 0x10], rax	      3643	elf.c	FUNCTION_52	CALL_1
0x40067de	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3652	elf.c	FUNCTION_52	CALL_3
0x40067e5	        0x488b7808	                mov rdi, qword [rax + 8]	      3652	elf.c	FUNCTION_52	CALL_3
0x40067e9	      0xe800000000	                          call 0x40067ee	      3652	elf.c	FUNCTION_52	CALL_3
0x40067ee	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      3655	elf.c	FUNCTION_52	IF_1
0x40067f3	          0x4885c0	                           test rax, rax	      3655	elf.c	FUNCTION_52	IF_1
0x40067f6	            0x7410	                            je 0x4006808	      3655	elf.c	FUNCTION_52	IF_1
0x40067f8	    0x41bc01000000	                             mov r12d, 1	      3650	elf.c	FUNCTION_52
0x40067fe	        0xf6400110	               test byte [rax + 1], 0x10	      3655	elf.c	FUNCTION_52	IF_1
0x4006802	     0xf8590000000	                           jne 0x4006898	      3655	elf.c	FUNCTION_52	IF_1
0x4006808	    0x498b87900000	            mov rax, qword [r15 + 0x90] 	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x400680f	          0x4885c0	                           test rax, rax	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4006812	            0x7479	                            je 0x400688d	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4006814	      0xba00000000	                              mov edx, 0	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4006819	    0x41bc01000000	                             mov r12d, 1	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x400681f	    0x488b88e00000	            mov rcx, qword [rax + 0xe0] 	      3662	elf.c	FUNCTION_52	IF_1	FOR_1	CALL_4
0x4006826	        0x83790411	               cmp dword [rcx + 4], 0x11	      3664	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2
0x400682a	            0x7548	                           jne 0x4006874	      3664	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2
0x400682c	        0xf6402210	           test byte [rax + 0x22], 0x10 	      3666	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4006830	            0x7436	                            je 0x4006868	      3666	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4006832	        0x488b7010	            mov rsi, qword [rax + 0x10] 	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4006836	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x400683a	          0x4885c9	                           test rcx, rcx	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x400683d	            0x7406	                            je 0x4006845	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x400683f	        0x48897110	             mov qword [rcx + 0x10], rsi	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4006843	            0xeb07	                           jmp 0x400684c	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4006845	    0x4989b7900000	             mov qword [r15 + 0x90], rsi	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x400684c	          0x4885f6	                           test rsi, rsi	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x400684f	            0x7406	                            je 0x4006857	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4006851	        0x48894e18	             mov qword [rsi + 0x18], rcx	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4006855	            0xeb07	                           jmp 0x400685e	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4006857	    0x49898f980000	             mov qword [r15 + 0x98], rcx	      3669	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x400685e	    0x4183afa00000	               sub dword [r15 + 0xa0], 1	      3670	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4006866	            0xeb0c	                           jmp 0x4006874	      3670	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4006868	    0x4489a1880000	            mov dword [rcx + 0x88], r12d	      3673	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	ELSE_1
0x400686f	      0x458d642401	                     lea r12d, [r12 + 1]	      3673	elf.c	FUNCTION_52	IF_1	FOR_1	IF_2	ELSE_1
0x4006874	    0x8b8888000000	            mov ecx, dword [rax + 0x88] 	      3677	elf.c	FUNCTION_52	IF_1	FOR_1
0x400687a	          0x4801ca	                            add rdx, rcx	      3677	elf.c	FUNCTION_52	IF_1	FOR_1
0x400687d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4006881	          0x4885c0	                           test rax, rax	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4006884	            0x7599	                           jne 0x400681f	      3660	elf.c	FUNCTION_52	IF_1	FOR_1
0x4006886	          0x4885d2	                           test rdx, rdx	      3681	elf.c	FUNCTION_52	IF_1	IF_4
0x4006889	            0x750d	                           jne 0x4006898	      3681	elf.c	FUNCTION_52	IF_1	IF_4
0x400688b	            0xeb06	                           jmp 0x4006893	      3681	elf.c	FUNCTION_52	IF_1	IF_4
0x400688d	    0x41bc01000000	                             mov r12d, 1	      3650	elf.c	FUNCTION_52
0x4006893	      0x41836744df	      and dword [r15 + 0x44], 0xffffffdf	      3682	elf.c	FUNCTION_52	IF_1	IF_4
0x4006898	    0x498baf900000	            mov rbp, qword [r15 + 0x90] 	      3685	elf.c	FUNCTION_52	FOR_2
0x400689f	          0x4885ed	                           test rbp, rbp	      3685	elf.c	FUNCTION_52	FOR_2
0x40068a2	     0xf84c3000000	                            je 0x400696b	      3685	elf.c	FUNCTION_52	FOR_2
0x40068a8	    0x488b9de00000	            mov rbx, qword [rbp + 0xe0] 	      3687	elf.c	FUNCTION_52	FOR_2	CALL_5
0x40068af	          0x4589e5	                          mov r13d, r12d	      3689	elf.c	FUNCTION_52	FOR_2	IF_5
0x40068b2	        0x837b0411	               cmp dword [rbx + 4], 0x11	      3689	elf.c	FUNCTION_52	FOR_2	IF_5
0x40068b6	            0x740c	                            je 0x40068c4	      3689	elf.c	FUNCTION_52	FOR_2	IF_5
0x40068b8	      0x458d6c2401	                     lea r13d, [r12 + 1]	      3690	elf.c	FUNCTION_52	FOR_2	IF_5
0x40068bd	    0x4489a3880000	            mov dword [rbx + 0x88], r12d	      3690	elf.c	FUNCTION_52	FOR_2	IF_5
0x40068c4	            0x8b33	                    mov esi, dword [rbx]	      3691	elf.c	FUNCTION_52	FOR_2	IF_6
0x40068c6	          0x83feff	             cmp esi, 0xffffffffffffffff	      3691	elf.c	FUNCTION_52	FOR_2	IF_6
0x40068c9	            0x7419	                            je 0x40068e4	      3691	elf.c	FUNCTION_52	FOR_2	IF_6
0x40068cb	            0x89f6	                            mov esi, esi	      3692	elf.c	FUNCTION_52	FOR_2	CALL_7
0x40068cd	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3692	elf.c	FUNCTION_52	FOR_2	CALL_7
0x40068d4	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3692	elf.c	FUNCTION_52	FOR_2	CALL_7
0x40068db	        0x488b7808	                mov rdi, qword [rax + 8]	      3692	elf.c	FUNCTION_52	FOR_2	CALL_7
0x40068df	      0xe800000000	                          call 0x40068e4	      3692	elf.c	FUNCTION_52	FOR_2	CALL_7
0x40068e4	        0x488b4358	            mov rax, qword [rbx + 0x58] 	      3693	elf.c	FUNCTION_52	FOR_2	IF_7
0x40068e8	          0x4885c0	                           test rax, rax	      3693	elf.c	FUNCTION_52	FOR_2	IF_7
0x40068eb	            0x742a	                            je 0x4006917	      3693	elf.c	FUNCTION_52	FOR_2	IF_7
0x40068ed	        0x458d7501	                     lea r14d, [r13 + 1]	      3695	elf.c	FUNCTION_52	FOR_2	IF_7
0x40068f1	        0x44896b64	            mov dword [rbx + 0x64], r13d	      3695	elf.c	FUNCTION_52	FOR_2	IF_7
0x40068f5	            0x8b30	                    mov esi, dword [rax]	      3696	elf.c	FUNCTION_52	FOR_2	IF_7	IF_8
0x40068f7	          0x83feff	             cmp esi, 0xffffffffffffffff	      3696	elf.c	FUNCTION_52	FOR_2	IF_7	IF_8
0x40068fa	            0x7425	                            je 0x4006921	      3696	elf.c	FUNCTION_52	FOR_2	IF_7	IF_8
0x40068fc	            0x89f6	                            mov esi, esi	      3697	elf.c	FUNCTION_52	FOR_2	IF_7	CALL_9
0x40068fe	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3697	elf.c	FUNCTION_52	FOR_2	IF_7	CALL_9
0x4006905	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3697	elf.c	FUNCTION_52	FOR_2	IF_7	CALL_9
0x400690c	        0x488b7808	                mov rdi, qword [rax + 8]	      3697	elf.c	FUNCTION_52	FOR_2	IF_7	CALL_9
0x4006910	      0xe800000000	                          call 0x4006915	      3697	elf.c	FUNCTION_52	FOR_2	IF_7	CALL_9
0x4006915	            0xeb0a	                           jmp 0x4006921	      3697	elf.c	FUNCTION_52	FOR_2	IF_7	CALL_9
0x4006917	    0xc74364000000	               mov dword [rbx + 0x64], 0	      3700	elf.c	FUNCTION_52	FOR_2	ELSE_2
0x400691e	          0x4589ee	                          mov r14d, r13d	      3700	elf.c	FUNCTION_52	FOR_2	ELSE_2
0x4006921	        0x488b4370	            mov rax, qword [rbx + 0x70] 	      3702	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9
0x4006925	          0x4885c0	                           test rax, rax	      3702	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9
0x4006928	            0x742a	                            je 0x4006954	      3702	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9
0x400692a	        0x458d6601	                     lea r12d, [r14 + 1]	      3704	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9
0x400692e	        0x4489737c	            mov dword [rbx + 0x7c], r14d	      3704	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9
0x4006932	            0x8b30	                    mov esi, dword [rax]	      3705	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	IF_10
0x4006934	          0x83feff	             cmp esi, 0xffffffffffffffff	      3705	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	IF_10
0x4006937	            0x7425	                            je 0x400695e	      3705	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	IF_10
0x4006939	            0x89f6	                            mov esi, esi	      3706	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	CALL_11
0x400693b	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3706	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	CALL_11
0x4006942	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3706	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	CALL_11
0x4006949	        0x488b7808	                mov rdi, qword [rax + 8]	      3706	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	CALL_11
0x400694d	      0xe800000000	                          call 0x4006952	      3706	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	CALL_11
0x4006952	            0xeb0a	                           jmp 0x400695e	      3706	elf.c	FUNCTION_52	FOR_2	ELSE_2	IF_9	CALL_11
0x4006954	    0xc7437c000000	               mov dword [rbx + 0x7c], 0	      3709	elf.c	FUNCTION_52	FOR_2	ELSE_3
0x400695b	          0x4589f4	                          mov r12d, r14d	      3709	elf.c	FUNCTION_52	FOR_2	ELSE_3
0x400695e	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      3685	elf.c	FUNCTION_52	FOR_2
0x4006962	          0x4885ed	                           test rbp, rbp	      3685	elf.c	FUNCTION_52	FOR_2
0x4006965	     0xf853dffffff	                           jne 0x40068a8	      3685	elf.c	FUNCTION_52	FOR_2
0x400696b	    0x4183bfb80000	               cmp dword [r15 + 0xb8], 0	      3713	elf.c	FUNCTION_52
0x4006973	     0xf854b2a0000	                           jne 0x40093c4	      3713	elf.c	FUNCTION_52
0x4006979	      0xbb00000000	                              mov ebx, 0	      3713	elf.c	FUNCTION_52
0x400697e	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      3713	elf.c	FUNCTION_52
0x4006984	     0xf85c8000000	                           jne 0x4006a52	      3713	elf.c	FUNCTION_52
0x400698a	        0x418b4744	            mov eax, dword [r15 + 0x44] 	      3714	elf.c	FUNCTION_52
0x400698e	          0xc1e805	                              shr eax, 5	      3714	elf.c	FUNCTION_52
0x4006991	          0x83e043	                           and eax, 0x43	      3714	elf.c	FUNCTION_52
0x4006994	          0x83f801	                              cmp eax, 1	      3714	elf.c	FUNCTION_52
0x4006997	     0xf84272a0000	                            je 0x40093c4	      3714	elf.c	FUNCTION_52
0x400699d	      0xe9b0000000	                           jmp 0x4006a52	      3714	elf.c	FUNCTION_52
0x40069a2	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3724	elf.c	FUNCTION_52	IF_11	IF_12	CALL_16
0x40069a9	    0x4883b8e80200	              cmp qword [rax + 0x2e8], 0	      3724	elf.c	FUNCTION_52	IF_11	IF_12	CALL_16
0x40069b1	            0x740f	                            je 0x40069c2	      3724	elf.c	FUNCTION_52	IF_11	IF_12	CALL_16
0x40069b3	      0xbe8c0e0000	                          mov esi, 0xe8c	      3724	elf.c	FUNCTION_52	IF_11	IF_12	CALL_16
0x40069b8	      0xbf00000000	                              mov edi, 0	      3724	elf.c	FUNCTION_52	IF_11	IF_12	CALL_16
0x40069bd	      0xe800000000	                          call 0x40069c2	      3724	elf.c	FUNCTION_52	IF_11	IF_12	CALL_16
0x40069c2	      0xbe60000000	                           mov esi, 0x60	      3726	elf.c	FUNCTION_52	IF_11	IF_12	CALL_17
0x40069c7	          0x4c89ff	                            mov rdi, r15	      3726	elf.c	FUNCTION_52	IF_11	IF_12	CALL_17
0x40069ca	      0xe800000000	                          call 0x40069cf	      3726	elf.c	FUNCTION_52	IF_11	IF_12	CALL_17
0x40069cf	          0x4889c5	                            mov rbp, rax	      3726	elf.c	FUNCTION_52	IF_11	IF_12	CALL_17
0x40069d2	      0x458d6c2402	                     lea r13d, [r12 + 2]	      3727	elf.c	FUNCTION_52	IF_11	IF_12
0x40069d7	          0x895850	             mov dword [rax + 0x50], ebx	      3727	elf.c	FUNCTION_52	IF_11	IF_12
0x40069da	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3728	elf.c	FUNCTION_52	IF_11	IF_12	CALL_18
0x40069e1	    0x4889a8e80200	            mov qword [rax + 0x2e8], rbp	      3728	elf.c	FUNCTION_52	IF_11	IF_12	CALL_18
0x40069e8	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3730	elf.c	FUNCTION_52	IF_11	IF_12	CALL_20
0x40069ef	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3730	elf.c	FUNCTION_52	IF_11	IF_12	CALL_20
0x40069f6	        0x488b7808	                mov rdi, qword [rax + 8]	      3730	elf.c	FUNCTION_52	IF_11	IF_12	CALL_20
0x40069fa	      0xba00000000	                              mov edx, 0	      3730	elf.c	FUNCTION_52	IF_11	IF_12	CALL_20
0x40069ff	      0xbe00000000	                              mov esi, 0	      3730	elf.c	FUNCTION_52	IF_11	IF_12	CALL_20
0x4006a04	      0xe800000000	                          call 0x4006a09	      3730	elf.c	FUNCTION_52	IF_11	IF_12	CALL_20
0x4006a09	          0x894500	                    mov dword [rbp], eax	      3730	elf.c	FUNCTION_52	IF_11	IF_12	CALL_20
0x4006a0c	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3732	elf.c	FUNCTION_52	IF_11	IF_12	IF_13
0x4006a0f	     0xf847f290000	                            je 0x4009394	      3732	elf.c	FUNCTION_52	IF_11	IF_12	IF_13
0x4006a15	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3735	elf.c	FUNCTION_52	IF_11	CALL_21
0x4006a1c	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3735	elf.c	FUNCTION_52	IF_11	CALL_21
0x4006a23	        0x458d6501	                     lea r12d, [r13 + 1]	      3735	elf.c	FUNCTION_52	IF_11	CALL_21
0x4006a27	        0x44896850	            mov dword [rax + 0x50], r13d	      3735	elf.c	FUNCTION_52	IF_11	CALL_21
0x4006a2b	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3736	elf.c	FUNCTION_52	IF_11	CALL_23
0x4006a30	    0x8bb008010000	           mov esi, dword [rax + 0x108] 	      3736	elf.c	FUNCTION_52	IF_11	CALL_23
0x4006a36	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3736	elf.c	FUNCTION_52	IF_11	CALL_23
0x4006a3d	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3736	elf.c	FUNCTION_52	IF_11	CALL_23
0x4006a44	        0x488b7808	                mov rdi, qword [rax + 8]	      3736	elf.c	FUNCTION_52	IF_11	CALL_23
0x4006a48	      0xe800000000	                          call 0x4006a4d	      3736	elf.c	FUNCTION_52	IF_11	CALL_23
0x4006a4d	      0xbb01000000	                              mov ebx, 1	      3736	elf.c	FUNCTION_52	IF_11	CALL_23
0x4006a52	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3739	elf.c	FUNCTION_52	CALL_24
0x4006a59	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3739	elf.c	FUNCTION_52	CALL_24
0x4006a60	      0x418d6c2401	                      lea ebp, [r12 + 1]	      3739	elf.c	FUNCTION_52	CALL_24
0x4006a65	        0x4489604c	            mov dword [rax + 0x4c], r12d	      3739	elf.c	FUNCTION_52	CALL_24
0x4006a69	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3740	elf.c	FUNCTION_52	CALL_26
0x4006a6e	    0x8bb0b8000000	            mov esi, dword [rax + 0xb8] 	      3740	elf.c	FUNCTION_52	CALL_26
0x4006a74	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3740	elf.c	FUNCTION_52	CALL_26
0x4006a7b	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3740	elf.c	FUNCTION_52	CALL_26
0x4006a82	        0x488b7808	                mov rdi, qword [rax + 8]	      3740	elf.c	FUNCTION_52	CALL_26
0x4006a86	      0xe800000000	                          call 0x4006a8b	      3740	elf.c	FUNCTION_52	CALL_26
0x4006a8b	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3741	elf.c	FUNCTION_52	CALL_28
0x4006a92	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      3741	elf.c	FUNCTION_52	CALL_28
0x4006a99	          0x8b524c	            mov edx, dword [rdx + 0x4c] 	      3741	elf.c	FUNCTION_52	CALL_28
0x4006a9c	          0x895050	             mov dword [rax + 0x50], edx	      3741	elf.c	FUNCTION_52	CALL_28
0x4006a9f	    0x81fdfffeffff	                     cmp ebp, 0xfffffeff	      3743	elf.c	FUNCTION_52	IF_14
0x4006aa5	            0x762b	                           jbe 0x4006ad2	      3743	elf.c	FUNCTION_52	IF_14
0x4006aa7	      0xba05000000	                              mov edx, 5	      3746	elf.c	FUNCTION_52	IF_14	CALL_30
0x4006aac	      0xbe00000000	                              mov esi, 0	      3746	elf.c	FUNCTION_52	IF_14	CALL_30
0x4006ab1	      0xbf00000000	                              mov edi, 0	      3746	elf.c	FUNCTION_52	IF_14	CALL_30
0x4006ab6	      0xe800000000	                          call 0x4006abb	      3746	elf.c	FUNCTION_52	IF_14	CALL_30
0x4006abb	            0x89ea	                            mov edx, ebp	      3746	elf.c	FUNCTION_52	IF_14	CALL_30
0x4006abd	          0x4c89fe	                            mov rsi, r15	      3746	elf.c	FUNCTION_52	IF_14	CALL_30
0x4006ac0	          0x4889c7	                            mov rdi, rax	      3746	elf.c	FUNCTION_52	IF_14	CALL_30
0x4006ac3	      0xb800000000	                              mov eax, 0	      3746	elf.c	FUNCTION_52	IF_14	CALL_30
0x4006ac8	      0xe800000000	                          call 0x4006acd	      3746	elf.c	FUNCTION_52	IF_14	CALL_30
0x4006acd	      0xe9c2280000	                           jmp 0x4009394	      3746	elf.c	FUNCTION_52	IF_14	CALL_30
0x4006ad2	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3751	elf.c	FUNCTION_52	CALL_31
0x4006ad9	    0x89a8fc020000	            mov dword [rax + 0x2fc], ebp	      3751	elf.c	FUNCTION_52	CALL_31
0x4006adf	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3752	elf.c	FUNCTION_52	CALL_32
0x4006ae6	          0x89684c	             mov dword [rax + 0x4c], ebp	      3752	elf.c	FUNCTION_52	CALL_32
0x4006ae9	            0x89ee	                            mov esi, ebp	      3756	elf.c	FUNCTION_52	CALL_33
0x4006aeb	      0xba08000000	                              mov edx, 8	      3756	elf.c	FUNCTION_52	CALL_33
0x4006af0	          0x4c89ff	                            mov rdi, r15	      3756	elf.c	FUNCTION_52	CALL_33
0x4006af3	      0xe800000000	                          call 0x4006af8	      3756	elf.c	FUNCTION_52	CALL_33
0x4006af8	          0x4989c4	                            mov r12, rax	      3756	elf.c	FUNCTION_52	CALL_33
0x4006afb	          0x4885c0	                           test rax, rax	      3758	elf.c	FUNCTION_52	IF_15
0x4006afe	     0xf8490280000	                            je 0x4009394	      3758	elf.c	FUNCTION_52	IF_15
0x4006b04	      0xbe50000000	                           mov esi, 0x50	      3761	elf.c	FUNCTION_52	CALL_34
0x4006b09	          0x4c89ff	                            mov rdi, r15	      3761	elf.c	FUNCTION_52	CALL_34
0x4006b0c	      0xe800000000	                          call 0x4006b11	      3761	elf.c	FUNCTION_52	CALL_34
0x4006b11	        0x49890424	                    mov qword [r12], rax	      3761	elf.c	FUNCTION_52	CALL_34
0x4006b15	          0x4885c0	                           test rax, rax	      3763	elf.c	FUNCTION_52	IF_16
0x4006b18	            0x7510	                           jne 0x4006b2a	      3763	elf.c	FUNCTION_52	IF_16
0x4006b1a	          0x4c89e6	                            mov rsi, r12	      3765	elf.c	FUNCTION_52	IF_16	CALL_35
0x4006b1d	          0x4c89ff	                            mov rdi, r15	      3765	elf.c	FUNCTION_52	IF_16	CALL_35
0x4006b20	      0xe800000000	                          call 0x4006b25	      3765	elf.c	FUNCTION_52	IF_16	CALL_35
0x4006b25	      0xe96a280000	                           jmp 0x4009394	      3765	elf.c	FUNCTION_52	IF_16	CALL_35
0x4006b2a	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3769	elf.c	FUNCTION_52	CALL_36
0x4006b31	        0x4c896058	             mov qword [rax + 0x58], r12	      3769	elf.c	FUNCTION_52	CALL_36
0x4006b35	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3771	elf.c	FUNCTION_52	CALL_37
0x4006b3c	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3771	elf.c	FUNCTION_52	CALL_37
0x4006b43	          0x8b404c	            mov eax, dword [rax + 0x4c] 	      3771	elf.c	FUNCTION_52	CALL_37
0x4006b46	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3771	elf.c	FUNCTION_52	CALL_37
0x4006b4b	    0x488d96b80000	                   lea rdx, [rsi + 0xb8]	      3771	elf.c	FUNCTION_52	CALL_37
0x4006b52	        0x498914c4	            mov qword [r12 + rax*8], rdx	      3771	elf.c	FUNCTION_52	CALL_37
0x4006b56	            0x85db	                           test ebx, ebx	      3772	elf.c	FUNCTION_52	IF_17
0x4006b58	     0xf8492000000	                            je 0x4006bf0	      3772	elf.c	FUNCTION_52	IF_17
0x4006b5e	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3774	elf.c	FUNCTION_52	IF_17	CALL_38
0x4006b65	    0x8b80780c0000	           mov eax, dword [rax + 0xc78] 	      3774	elf.c	FUNCTION_52	IF_17	CALL_38
0x4006b6b	        0x488d5668	                   lea rdx, [rsi + 0x68]	      3774	elf.c	FUNCTION_52	IF_17	CALL_38
0x4006b6f	        0x498914c4	            mov qword [r12 + rax*8], rdx	      3774	elf.c	FUNCTION_52	IF_17	CALL_38
0x4006b73	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3775	elf.c	FUNCTION_52	IF_17	IF_18	CALL_39
0x4006b7a	    0x81b8fc020000	        cmp dword [rax + 0x2fc], 0xff00 	      3775	elf.c	FUNCTION_52	IF_17	IF_18	CALL_39
0x4006b84	            0x7632	                           jbe 0x4006bb8	      3775	elf.c	FUNCTION_52	IF_17	IF_18	CALL_39
0x4006b86	    0x488b98e80200	           mov rbx, qword [rax + 0x2e8] 	      3777	elf.c	FUNCTION_52	IF_17	IF_18	CALL_40
0x4006b8d	          0x4885db	                           test rbx, rbx	      3778	elf.c	FUNCTION_52	IF_17	IF_18	CALL_41
0x4006b90	            0x750f	                           jne 0x4006ba1	      3778	elf.c	FUNCTION_52	IF_17	IF_18	CALL_41
0x4006b92	      0xbec20e0000	                          mov esi, 0xec2	      3778	elf.c	FUNCTION_52	IF_17	IF_18	CALL_41
0x4006b97	      0xbf00000000	                              mov edi, 0	      3778	elf.c	FUNCTION_52	IF_17	IF_18	CALL_41
0x4006b9c	      0xe800000000	                          call 0x4006ba1	      3778	elf.c	FUNCTION_52	IF_17	IF_18	CALL_41
0x4006ba1	          0x8b4350	            mov eax, dword [rbx + 0x50] 	      3779	elf.c	FUNCTION_52	IF_17	IF_18
0x4006ba4	        0x49891cc4	            mov qword [r12 + rax*8], rbx	      3779	elf.c	FUNCTION_52	IF_17	IF_18
0x4006ba8	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3780	elf.c	FUNCTION_52	IF_17	IF_18	CALL_42
0x4006baf	    0x8b80780c0000	           mov eax, dword [rax + 0xc78] 	      3780	elf.c	FUNCTION_52	IF_17	IF_18	CALL_42
0x4006bb5	          0x894328	             mov dword [rbx + 0x28], eax	      3780	elf.c	FUNCTION_52	IF_17	IF_18	CALL_42
0x4006bb8	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3782	elf.c	FUNCTION_52	IF_17	CALL_43
0x4006bbf	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3782	elf.c	FUNCTION_52	IF_17	CALL_43
0x4006bc6	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3782	elf.c	FUNCTION_52	IF_17	CALL_43
0x4006bc9	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      3782	elf.c	FUNCTION_52	IF_17	CALL_43
0x4006bce	    0x488d91080100	                  lea rdx, [rcx + 0x108]	      3782	elf.c	FUNCTION_52	IF_17	CALL_43
0x4006bd5	        0x498914c4	            mov qword [r12 + rax*8], rdx	      3782	elf.c	FUNCTION_52	IF_17	CALL_43
0x4006bd9	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3783	elf.c	FUNCTION_52	IF_17	CALL_44
0x4006be0	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3783	elf.c	FUNCTION_52	IF_17	CALL_44
0x4006be7	          0x8b4050	            mov eax, dword [rax + 0x50] 	      3783	elf.c	FUNCTION_52	IF_17	CALL_44
0x4006bea	    0x898190000000	             mov dword [rcx + 0x90], eax	      3783	elf.c	FUNCTION_52	IF_17	CALL_44
0x4006bf0	    0x498baf900000	            mov rbp, qword [r15 + 0x90] 	      3786	elf.c	FUNCTION_52	FOR_3
0x4006bf7	          0x4885ed	                           test rbp, rbp	      3786	elf.c	FUNCTION_52	FOR_3
0x4006bfa	     0xf841a280000	                            je 0x400941a	      3786	elf.c	FUNCTION_52	FOR_3
0x4006c00	    0x488b9de00000	            mov rbx, qword [rbp + 0xe0] 	      3790	elf.c	FUNCTION_52	FOR_3	CALL_45
0x4006c07	    0x486383880000	         movsxd rax, dword [rbx + 0x88] 	      3792	elf.c	FUNCTION_52	FOR_3
0x4006c0e	        0x49891cc4	            mov qword [r12 + rax*8], rbx	      3792	elf.c	FUNCTION_52	FOR_3
0x4006c12	          0x8b4364	            mov eax, dword [rbx + 0x64] 	      3793	elf.c	FUNCTION_52	FOR_3	IF_19
0x4006c15	            0x85c0	                           test eax, eax	      3793	elf.c	FUNCTION_52	FOR_3	IF_19
0x4006c17	     0xf84ed270000	                            je 0x400940a	      3793	elf.c	FUNCTION_52	FOR_3	IF_19
0x4006c1d	        0x488b5358	            mov rdx, qword [rbx + 0x58] 	      3794	elf.c	FUNCTION_52	FOR_3	IF_19
0x4006c21	            0x4898	                                    cdqe	      3794	elf.c	FUNCTION_52	FOR_3	IF_19
0x4006c23	        0x498914c4	            mov qword [r12 + rax*8], rdx	      3794	elf.c	FUNCTION_52	FOR_3	IF_19
0x4006c27	          0x8b437c	            mov eax, dword [rbx + 0x7c] 	      3795	elf.c	FUNCTION_52	FOR_3	IF_20
0x4006c2a	            0x85c0	                           test eax, eax	      3795	elf.c	FUNCTION_52	FOR_3	IF_20
0x4006c2c	            0x740a	                            je 0x4006c38	      3795	elf.c	FUNCTION_52	FOR_3	IF_20
0x4006c2e	        0x488b5370	            mov rdx, qword [rbx + 0x70] 	      3796	elf.c	FUNCTION_52	FOR_3	IF_20
0x4006c32	            0x4898	                                    cdqe	      3796	elf.c	FUNCTION_52	FOR_3	IF_20
0x4006c34	        0x498914c4	            mov qword [r12 + rax*8], rdx	      3796	elf.c	FUNCTION_52	FOR_3	IF_20
0x4006c38	        0x837b6400	               cmp dword [rbx + 0x64], 0	      3803	elf.c	FUNCTION_52	FOR_3	IF_21
0x4006c3c	            0x742a	                            je 0x4006c68	      3803	elf.c	FUNCTION_52	FOR_3	IF_21
0x4006c3e	        0x488b4358	            mov rax, qword [rbx + 0x58] 	      3805	elf.c	FUNCTION_52	FOR_3	IF_21	CALL_46
0x4006c42	    0x498b97f80000	            mov rdx, qword [r15 + 0xf8] 	      3805	elf.c	FUNCTION_52	FOR_3	IF_21	CALL_46
0x4006c49	    0x8b92780c0000	           mov edx, dword [rdx + 0xc78] 	      3805	elf.c	FUNCTION_52	FOR_3	IF_21	CALL_46
0x4006c4f	          0x895028	             mov dword [rax + 0x28], edx	      3805	elf.c	FUNCTION_52	FOR_3	IF_21	CALL_46
0x4006c52	        0x488b4358	            mov rax, qword [rbx + 0x58] 	      3806	elf.c	FUNCTION_52	FOR_3	IF_21
0x4006c56	    0x8b9388000000	            mov edx, dword [rbx + 0x88] 	      3806	elf.c	FUNCTION_52	FOR_3	IF_21
0x4006c5c	          0x89502c	             mov dword [rax + 0x2c], edx	      3806	elf.c	FUNCTION_52	FOR_3	IF_21
0x4006c5f	        0x488b4358	            mov rax, qword [rbx + 0x58] 	      3807	elf.c	FUNCTION_52	FOR_3	IF_21
0x4006c63	      0x4883480840	                or qword [rax + 8], 0x40	      3807	elf.c	FUNCTION_52	FOR_3	IF_21
0x4006c68	        0x837b7c00	               cmp dword [rbx + 0x7c], 0	      3809	elf.c	FUNCTION_52	FOR_3	IF_22
0x4006c6c	            0x742a	                            je 0x4006c98	      3809	elf.c	FUNCTION_52	FOR_3	IF_22
0x4006c6e	        0x488b4370	            mov rax, qword [rbx + 0x70] 	      3811	elf.c	FUNCTION_52	FOR_3	IF_22	CALL_47
0x4006c72	    0x498b97f80000	            mov rdx, qword [r15 + 0xf8] 	      3811	elf.c	FUNCTION_52	FOR_3	IF_22	CALL_47
0x4006c79	    0x8b92780c0000	           mov edx, dword [rdx + 0xc78] 	      3811	elf.c	FUNCTION_52	FOR_3	IF_22	CALL_47
0x4006c7f	          0x895028	             mov dword [rax + 0x28], edx	      3811	elf.c	FUNCTION_52	FOR_3	IF_22	CALL_47
0x4006c82	        0x488b4370	            mov rax, qword [rbx + 0x70] 	      3812	elf.c	FUNCTION_52	FOR_3	IF_22
0x4006c86	    0x8b9388000000	            mov edx, dword [rbx + 0x88] 	      3812	elf.c	FUNCTION_52	FOR_3	IF_22
0x4006c8c	          0x89502c	             mov dword [rax + 0x2c], edx	      3812	elf.c	FUNCTION_52	FOR_3	IF_22
0x4006c8f	        0x488b4370	            mov rax, qword [rbx + 0x70] 	      3813	elf.c	FUNCTION_52	FOR_3	IF_22
0x4006c93	      0x4883480840	                or qword [rax + 8], 0x40	      3813	elf.c	FUNCTION_52	FOR_3	IF_22
0x4006c98	        0xf6430880	               test byte [rbx + 8], 0x80	      3817	elf.c	FUNCTION_52	FOR_3	IF_23
0x4006c9c	     0xf8472010000	                            je 0x4006e14	      3817	elf.c	FUNCTION_52	FOR_3	IF_23
0x4006ca2	    0x488b85e00000	            mov rax, qword [rbp + 0xe0] 	      3819	elf.c	FUNCTION_52	FOR_3	IF_23	CALL_48
0x4006ca9	    0x4c8ba8900000	            mov r13, qword [rax + 0x90] 	      3819	elf.c	FUNCTION_52	FOR_3	IF_23	CALL_48
0x4006cb0	          0x4d85ed	                           test r13, r13	      3820	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24
0x4006cb3	     0xf841f010000	                            je 0x4006dd8	      3820	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24
0x4006cb9	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      3823	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25
0x4006cbf	     0xf84ab000000	                            je 0x4006d70	      3823	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25
0x4006cc5	    0x4981fd000000	                              cmp r13, 0	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26
0x4006ccc	     0xf8484000000	                            je 0x4006d56	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26
0x4006cd2	    0x49817d680000	               cmp qword [r13 + 0x68], 0	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26
0x4006cda	            0x757a	                           jne 0x4006d56	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26
0x4006cdc	      0x410fb74524	           movzx eax, word [r13 + 0x24] 	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26
0x4006ce1	        0x66258003	                           and ax, 0x380	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26
0x4006ce5	        0x662d0001	                           sub ax, 0x100	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26
0x4006ce9	        0x66a9fffe	                         test ax, 0xfeff	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26
0x4006ced	     0xf84cd000000	                            je 0x4006dc0	      3826	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26
0x4006cf3	    0x4d8bb5f00000	            mov r14, qword [r13 + 0xf0] 	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_49
0x4006cfa	        0x488b4340	            mov rax, qword [rbx + 0x40] 	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_49
0x4006cfe	      0x4889442410	             mov qword [rsp + 0x10], rax	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_49
0x4006d03	      0xba05000000	                              mov edx, 5	      3831	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_50
0x4006d08	      0xbe00000000	                              mov esi, 0	      3831	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_50
0x4006d0d	      0xbf00000000	                              mov edi, 0	      3831	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_50
0x4006d12	      0xe800000000	                          call 0x4006d17	      3831	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_50
0x4006d17	          0x4d89f0	                             mov r8, r14	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_49
0x4006d1a	          0x4c89e9	                            mov rcx, r13	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_49
0x4006d1d	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_49
0x4006d22	          0x4c89fe	                            mov rsi, r15	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_49
0x4006d25	          0x4889c7	                            mov rdi, rax	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_49
0x4006d28	      0xb800000000	                              mov eax, 0	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_49
0x4006d2d	      0xe800000000	                          call 0x4006d32	      3829	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_49
0x4006d32	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      3837	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_51
0x4006d37	          0x4c89ef	                            mov rdi, r13	      3837	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_51
0x4006d3a	      0xe800000000	                          call 0x4006d3f	      3837	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_51
0x4006d3f	          0x4989c5	                            mov r13, rax	      3837	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	CALL_51
0x4006d42	          0x4885c0	                           test rax, rax	      3838	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	IF_27
0x4006d45	            0x750f	                           jne 0x4006d56	      3838	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	IF_27
0x4006d47	      0xbf11000000	                           mov edi, 0x11	      3840	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	IF_27	CALL_52
0x4006d4c	      0xe800000000	                          call 0x4006d51	      3840	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	IF_27	CALL_52
0x4006d51	      0xe93e260000	                           jmp 0x4009394	      3840	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	IF_26	IF_27	CALL_52
0x4006d56	        0x4d8b7568	            mov r14, qword [r13 + 0x68] 	      3846	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25
0x4006d5a	          0x4d85f6	                           test r14, r14	      3847	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	CALL_53
0x4006d5d	            0x7567	                           jne 0x4006dc6	      3847	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	CALL_53
0x4006d5f	      0xbe070f0000	                          mov esi, 0xf07	      3847	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	CALL_53
0x4006d64	      0xbf00000000	                              mov edi, 0	      3847	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	CALL_53
0x4006d69	      0xe800000000	                          call 0x4006d6e	      3847	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	CALL_53
0x4006d6e	            0xeb56	                           jmp 0x4006dc6	      3847	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25	CALL_53
0x4006d70	        0x4d8b7568	            mov r14, qword [r13 + 0x68] 	      3852	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28
0x4006d74	          0x4d85f6	                           test r14, r14	      3852	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28
0x4006d77	            0x754d	                           jne 0x4006dc6	      3852	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28
0x4006d79	    0x498badf00000	            mov rbp, qword [r13 + 0xf0] 	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_54
0x4006d80	        0x488b5b40	            mov rbx, qword [rbx + 0x40] 	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_54
0x4006d84	      0xba05000000	                              mov edx, 5	      3856	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_55
0x4006d89	      0xbe00000000	                              mov esi, 0	      3856	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_55
0x4006d8e	      0xbf00000000	                              mov edi, 0	      3856	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_55
0x4006d93	      0xe800000000	                          call 0x4006d98	      3856	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_55
0x4006d98	          0x4989e8	                             mov r8, rbp	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_54
0x4006d9b	          0x4c89e9	                            mov rcx, r13	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_54
0x4006d9e	          0x4889da	                            mov rdx, rbx	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_54
0x4006da1	          0x4c89fe	                            mov rsi, r15	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_54
0x4006da4	          0x4889c7	                            mov rdi, rax	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_54
0x4006da7	      0xb800000000	                              mov eax, 0	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_54
0x4006dac	      0xe800000000	                          call 0x4006db1	      3854	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_54
0x4006db1	      0xbf11000000	                           mov edi, 0x11	      3859	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_56
0x4006db6	      0xe800000000	                          call 0x4006dbb	      3859	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_56
0x4006dbb	      0xe9d4250000	                           jmp 0x4009394	      3859	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	ELSE_4	IF_28	CALL_56
0x4006dc0	    0x41be00000000	                             mov r14d, 0	      3846	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	IF_25
0x4006dc6	    0x498b86e00000	            mov rax, qword [r14 + 0xe0] 	      3864	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	CALL_57
0x4006dcd	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      3864	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	CALL_57
0x4006dd3	          0x894328	             mov dword [rbx + 0x28], eax	      3864	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	CALL_57
0x4006dd6	            0xeb3c	                           jmp 0x4006e14	      3864	elf.c	FUNCTION_52	FOR_3	IF_23	IF_24	CALL_57
0x4006dd8	        0x498b4708	                mov rax, qword [r15 + 8]	      3873	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5
0x4006ddc	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3875	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29
0x4006de3	    0x4c8ba8e80200	           mov r13, qword [rax + 0x2e8] 	      3875	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29
0x4006dea	          0x4d85ed	                           test r13, r13	      3875	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29
0x4006ded	            0x7425	                            je 0x4006e14	      3875	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29
0x4006def	      0xba05000000	                              mov edx, 5	      3878	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_60
0x4006df4	      0xbe00000000	                              mov esi, 0	      3878	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_60
0x4006df9	      0xbf00000000	                              mov edi, 0	      3878	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_60
0x4006dfe	      0xe800000000	                          call 0x4006e03	      3878	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_60
0x4006e03	          0x4889ea	                            mov rdx, rbp	      3876	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_59
0x4006e06	          0x4c89fe	                            mov rsi, r15	      3876	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_59
0x4006e09	          0x4889c7	                            mov rdi, rax	      3876	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_59
0x4006e0c	      0xb800000000	                              mov eax, 0	      3876	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_59
0x4006e11	          0x41ffd5	                                call r13	      3876	elf.c	FUNCTION_52	FOR_3	IF_23	ELSE_5	IF_29	CALL_59
0x4006e14	          0x8b4304	                mov eax, dword [rbx + 4]	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4006e17	          0x83f80b	                            cmp eax, 0xb	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4006e1a	     0xf842e020000	                            je 0x400704e	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4006e20	          0x83f80b	                            cmp eax, 0xb	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4006e23	            0x7734	                            ja 0x4006e59	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4006e25	          0x83f805	                              cmp eax, 5	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4006e28	     0xf8477020000	                            je 0x40070a5	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4006e2e	          0x83f805	                              cmp eax, 5	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4006e31	            0x7713	                            ja 0x4006e46	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4006e33	          0x83f803	                              cmp eax, 3	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4006e36	     0xf841d010000	                            je 0x4006f59	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4006e3c	          0x83f804	                              cmp eax, 4	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4006e3f	            0x7469	                            je 0x4006eaa	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4006e41	      0xe993020000	                           jmp 0x40070d9	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4006e46	          0x83f806	                              cmp eax, 6	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4006e49	     0xf84ff010000	                            je 0x400704e	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4006e4f	          0x83f809	                              cmp eax, 9	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4006e52	            0x7456	                            je 0x4006eaa	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4006e54	      0xe980020000	                           jmp 0x40070d9	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4006e59	      0x3df7ffff6f	                     cmp eax, 0x6ffffff7	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4006e5e	     0xf840e020000	                            je 0x4007072	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4006e64	      0x3df7ffff6f	                     cmp eax, 0x6ffffff7	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4006e69	            0x7719	                            ja 0x4006e84	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4006e6b	          0x83f811	                           cmp eax, 0x11	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4006e6e	     0xf8455020000	                            je 0x40070c9	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4006e74	      0x3df6ffff6f	                     cmp eax, 0x6ffffff6	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4006e79	     0xf8426020000	                            je 0x40070a5	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4006e7f	      0xe955020000	                           jmp 0x40070d9	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4006e84	      0x3dfdffff6f	                     cmp eax, 0x6ffffffd	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4006e89	     0xf824a020000	                            jb 0x40070d9	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4006e8f	      0x3dfeffff6f	                     cmp eax, 0x6ffffffe	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4006e94	     0xf86b4010000	                           jbe 0x400704e	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4006e9a	      0x3dffffff6f	                     cmp eax, 0x6fffffff	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4006e9f	     0xf8400020000	                            je 0x40070a5	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4006ea5	      0xe92f020000	                           jmp 0x40070d9	      3883	elf.c	FUNCTION_52	FOR_3	SWITCH_1
0x4006eaa	      0xbe00000000	                              mov esi, 0	      3893	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_61
0x4006eaf	          0x4c89ff	                            mov rdi, r15	      3893	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_61
0x4006eb2	      0xe800000000	                          call 0x4006eb7	      3893	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_61
0x4006eb7	          0x4885c0	                           test rax, rax	      3894	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_30
0x4006eba	            0x7410	                            je 0x4006ecc	      3894	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_30
0x4006ebc	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3895	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_62
0x4006ec3	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      3895	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_62
0x4006ec9	          0x894328	             mov dword [rbx + 0x28], eax	      3895	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_62
0x4006ecc	    0x488b85e00000	            mov rax, qword [rbp + 0xe0] 	      3619	elf.c	FUNCTION_51	CALL_1
0x4006ed3	          0x8b4004	                mov eax, dword [rax + 4]	      3619	elf.c	FUNCTION_51	CALL_1
0x4006ed6	          0x83f809	                              cmp eax, 9	      3620	elf.c	FUNCTION_51	IF_1
0x4006ed9	            0x7409	                            je 0x4006ee4	      3620	elf.c	FUNCTION_51	IF_1
0x4006edb	          0x83f804	                              cmp eax, 4	      3620	elf.c	FUNCTION_51	IF_1
0x4006ede	     0xf85f5010000	                           jne 0x40070d9	      3620	elf.c	FUNCTION_51	IF_1
0x4006ee4	        0x488b5500	                    mov rdx, qword [rbp]	      3624	elf.c	FUNCTION_51
0x4006ee8	      0xbf00000000	                              mov edi, 0	      3625	elf.c	FUNCTION_51	IF_2	CALL_2
0x4006eed	      0xb904000000	                              mov ecx, 4	      3625	elf.c	FUNCTION_51	IF_2	CALL_2
0x4006ef2	          0x4889d6	                            mov rsi, rdx	      3625	elf.c	FUNCTION_51	IF_2	CALL_2
0x4006ef5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3625	elf.c	FUNCTION_51	IF_2	CALL_2
0x4006ef7	        0x400f97c6	                                seta sil	      3625	elf.c	FUNCTION_51	IF_2	CALL_2
0x4006efb	           0xf92c1	                                 setb cl	      3625	elf.c	FUNCTION_51	IF_2	CALL_2
0x4006efe	          0x4038ce	                             cmp sil, cl	      3625	elf.c	FUNCTION_51	IF_2	CALL_2
0x4006f01	     0xf85d2010000	                           jne 0x40070d9	      3625	elf.c	FUNCTION_51	IF_2	CALL_2
0x4006f07	        0x488d7204	                      lea rsi, [rdx + 4]	      3627	elf.c	FUNCTION_51
0x4006f0b	          0x83f804	                              cmp eax, 4	      3628	elf.c	FUNCTION_51	IF_3
0x4006f0e	            0x750e	                           jne 0x4006f1e	      3628	elf.c	FUNCTION_51	IF_3
0x4006f10	        0x488d7205	                      lea rsi, [rdx + 5]	      3628	elf.c	FUNCTION_51	IF_3
0x4006f14	        0x807a0461	                cmp byte [rdx + 4], 0x61	      3628	elf.c	FUNCTION_51	IF_3
0x4006f18	     0xf85bb010000	                           jne 0x40070d9	      3628	elf.c	FUNCTION_51	IF_3
0x4006f1e	    0x488bbdf00000	            mov rdi, qword [rbp + 0xf0] 	      3631	elf.c	FUNCTION_51
0x4006f25	        0x488b4708	                mov rax, qword [rdi + 8]	      3632	elf.c	FUNCTION_51	CALL_3
0x4006f29	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3633	elf.c	FUNCTION_51	CALL_4
0x4006f30	    0xff90d8020000	                call qword [rax + 0x2d8]	      3633	elf.c	FUNCTION_51	CALL_4
0x4006f36	          0x4885c0	                           test rax, rax	      3898	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_31
0x4006f39	     0xf849a010000	                            je 0x40070d9	      3898	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_31
0x4006f3f	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3900	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_31	CALL_64
0x4006f46	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      3900	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_31	CALL_64
0x4006f4c	          0x89432c	             mov dword [rbx + 0x2c], eax	      3900	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_31	CALL_64
0x4006f4f	      0x48834b0840	                or qword [rbx + 8], 0x40	      3901	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_31
0x4006f54	      0xe980010000	                           jmp 0x40070d9	      3901	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_31
0x4006f59	        0x488b5500	                    mov rdx, qword [rbp]	      3910	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32
0x4006f5d	      0xbf00000000	                              mov edi, 0	      3910	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32
0x4006f62	      0xb905000000	                              mov ecx, 5	      3910	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32
0x4006f67	          0x4889d6	                            mov rsi, rdx	      3910	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32
0x4006f6a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3910	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32
0x4006f6c	           0xf97c1	                                 seta cl	      3910	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32
0x4006f6f	           0xf92c0	                                 setb al	      3910	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32
0x4006f72	            0x38c1	                              cmp cl, al	      3910	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32
0x4006f74	     0xf855f010000	                           jne 0x40070d9	      3910	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32
0x4006f7a	      0xb800000000	                              mov eax, 0	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_66
0x4006f7f	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_66
0x4006f86	          0x4889d7	                            mov rdi, rdx	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_66
0x4006f89	            0xf2ae	              repne scasb al, byte [rdi]	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_66
0x4006f8b	          0x48f7d1	                                 not rcx	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_66
0x4006f8e	          0x4989cd	                            mov r13, rcx	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_66
0x4006f91	        0x4c8d71fc	                      lea r14, [rcx - 4]	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_66
0x4006f95	          0x4c01f2	                            add rdx, r14	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_66
0x4006f98	          0x803a73	                    cmp byte [rdx], 0x73	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_66
0x4006f9b	     0xf8538010000	                           jne 0x40070d9	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_66
0x4006fa1	        0x807a0174	                cmp byte [rdx + 1], 0x74	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_66
0x4006fa5	     0xf852e010000	                           jne 0x40070d9	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_66
0x4006fab	        0x807a0272	                cmp byte [rdx + 2], 0x72	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_66
0x4006faf	     0xf8524010000	                           jne 0x40070d9	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_66
0x4006fb5	        0x807a0300	                   cmp byte [rdx + 3], 0	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_66
0x4006fb9	     0xf851a010000	                           jne 0x40070d9	      3911	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_66
0x4006fbf	        0x488d79fd	                      lea rdi, [rcx - 3]	      3917	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_68
0x4006fc3	      0xe800000000	                          call 0x4006fc8	      3917	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_68
0x4006fc8	          0x4885c0	                           test rax, rax	      3918	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_33
0x4006fcb	     0xf84c3230000	                            je 0x4009394	      3918	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_33
0x4006fd1	        0x488b7500	                    mov rsi, qword [rbp]	        53	string3.h	FUNCTION_221	CALL_3
0x4006fd5	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_221	CALL_3
0x4006fd8	          0x4989c6	                            mov r14, rax	        53	string3.h	FUNCTION_221	CALL_3
0x4006fdb	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_221	CALL_3
0x4006fde	      0xe800000000	                          call 0x4006fe3	        53	string3.h	FUNCTION_221	CALL_3
0x4006fe3	    0x43c6442efc00	             mov byte [r14 + r13 - 4], 0	      3921	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32
0x4006fe9	          0x4c89f6	                            mov rsi, r14	      3922	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x4006fec	          0x4c89ff	                            mov rdi, r15	      3922	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x4006fef	      0xe800000000	                          call 0x4006ff4	      3922	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x4006ff4	          0x4989c5	                            mov r13, rax	      3922	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_70
0x4006ff7	          0x4c89f7	                            mov rdi, r14	      3923	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_71
0x4006ffa	      0xe800000000	                          call 0x4006fff	      3923	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	CALL_71
0x4006fff	          0x4d85ed	                           test r13, r13	      3924	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34
0x4007002	     0xf84d1000000	                            je 0x40070d9	      3924	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34
0x4007008	    0x498b85e00000	            mov rax, qword [r13 + 0xe0] 	      3926	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_72
0x400700f	    0x8b9388000000	            mov edx, dword [rbx + 0x88] 	      3926	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_72
0x4007015	          0x895028	             mov dword [rax + 0x28], edx	      3926	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_72
0x4007018	    0x498b9de00000	            mov rbx, qword [r13 + 0xe0] 	      3929	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	IF_35	CALL_73
0x400701f	      0x48837b3800	               cmp qword [rbx + 0x38], 0	      3929	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	IF_35	CALL_73
0x4007024	     0xf85af000000	                           jne 0x40070d9	      3929	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	IF_35	CALL_73
0x400702a	          0x4c89ff	                            mov rdi, r15	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_75
0x400702d	      0xe800000000	                          call 0x4007032	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_75
0x4007032	          0x8d1400	                    lea edx, [rax + rax]	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_75
0x4007035	          0x8d4207	                      lea eax, [rdx + 7]	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_75
0x4007038	            0x85d2	                           test edx, edx	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_75
0x400703a	           0xf49c2	                         cmovns eax, edx	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_75
0x400703d	          0xc1f803	                              sar eax, 3	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_75
0x4007040	          0x83c004	                              add eax, 4	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_75
0x4007043	            0x4898	                                    cdqe	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_75
0x4007045	        0x48894338	             mov qword [rbx + 0x38], rax	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_75
0x4007049	      0xe98b000000	                           jmp 0x40070d9	      3931	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_32	IF_34	CALL_75
0x400704e	      0xbe00000000	                              mov esi, 0	      3943	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_76
0x4007053	          0x4c89ff	                            mov rdi, r15	      3943	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_76
0x4007056	      0xe800000000	                          call 0x400705b	      3943	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_76
0x400705b	          0x4885c0	                           test rax, rax	      3944	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_36
0x400705e	            0x7479	                            je 0x40070d9	      3944	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_36
0x4007060	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3945	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_77
0x4007067	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      3945	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_77
0x400706d	          0x894328	             mov dword [rbx + 0x28], eax	      3945	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_77
0x4007070	            0xeb67	                           jmp 0x40070d9	      3945	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_77
0x4007072	          0x8b4520	            mov eax, dword [rbp + 0x20] 	      3952	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_78
0x4007075	          0x83e001	                              and eax, 1	      3952	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_78
0x4007078	      0xbe00000000	                              mov esi, 0	      3952	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_78
0x400707d	      0xb800000000	                              mov eax, 0	      3952	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_78
0x4007082	        0x480f45f0	                         cmovne rsi, rax	      3952	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_78
0x4007086	          0x4c89ff	                            mov rdi, r15	      3952	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_78
0x4007089	      0xe800000000	                          call 0x400708e	      3952	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_78
0x400708e	          0x4885c0	                           test rax, rax	      3954	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_37
0x4007091	            0x7446	                            je 0x40070d9	      3954	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_37
0x4007093	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3955	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_79
0x400709a	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      3955	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_79
0x40070a0	          0x894328	             mov dword [rbx + 0x28], eax	      3955	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_79
0x40070a3	            0xeb34	                           jmp 0x40070d9	      3955	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_79
0x40070a5	      0xbe00000000	                              mov esi, 0	      3963	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_80
0x40070aa	          0x4c89ff	                            mov rdi, r15	      3963	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_80
0x40070ad	      0xe800000000	                          call 0x40070b2	      3963	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_80
0x40070b2	          0x4885c0	                           test rax, rax	      3964	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_38
0x40070b5	            0x7422	                            je 0x40070d9	      3964	elf.c	FUNCTION_52	FOR_3	SWITCH_1	IF_38
0x40070b7	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3965	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_81
0x40070be	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      3965	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_81
0x40070c4	          0x894328	             mov dword [rbx + 0x28], eax	      3965	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_81
0x40070c7	            0xeb10	                           jmp 0x40070d9	      3965	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_81
0x40070c9	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3969	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_82
0x40070d0	    0x8b80780c0000	           mov eax, dword [rax + 0xc78] 	      3969	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_82
0x40070d6	          0x894328	             mov dword [rbx + 0x28], eax	      3969	elf.c	FUNCTION_52	FOR_3	SWITCH_1	CALL_82
0x40070d9	        0x488b6d10	            mov rbp, qword [rbp + 0x10] 	      3786	elf.c	FUNCTION_52	FOR_3
0x40070dd	          0x4885ed	                           test rbp, rbp	      3786	elf.c	FUNCTION_52	FOR_3
0x40070e0	     0xf851afbffff	                           jne 0x4006c00	      3786	elf.c	FUNCTION_52	FOR_3
0x40070e6	      0xe92f230000	                           jmp 0x400941a	      3786	elf.c	FUNCTION_52	FOR_3
0x40070eb	    0x418b87b80000	            mov eax, dword [r15 + 0xb8] 	      4249	elf.c	FUNCTION_59
0x40070f2	        0x89442428	             mov dword [rsp + 0x28], eax	      4249	elf.c	FUNCTION_59
0x40070f6	            0x85c0	                           test eax, eax	      4249	elf.c	FUNCTION_59
0x40070f8	     0xf852d230000	                           jne 0x400942b	      4249	elf.c	FUNCTION_59
0x40070fe	        0x418b4744	            mov eax, dword [r15 + 0x44] 	      4250	elf.c	FUNCTION_59
0x4007102	          0xc1e805	                              shr eax, 5	      4250	elf.c	FUNCTION_59
0x4007105	          0x83e043	                           and eax, 0x43	      4250	elf.c	FUNCTION_59
0x4007108	          0x83f801	                              cmp eax, 1	      4250	elf.c	FUNCTION_59
0x400710b	     0xf841a230000	                            je 0x400942b	      4250	elf.c	FUNCTION_59
0x4007111	    0xc74424700000	               mov dword [rsp + 0x70], 0	      4250	elf.c	FUNCTION_59
0x4007119	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4221	elf.c	FUNCTION_59
0x4007122	      0xe987240000	                           jmp 0x40095ae	      4221	elf.c	FUNCTION_59
0x4007127	          0x8b500c	              mov edx, dword [rax + 0xc]	      4084	elf.c	FUNCTION_56	FOR_1	IF_1
0x400712a	            0x39d3	                            cmp ebx, edx	      4084	elf.c	FUNCTION_56	FOR_1	IF_1
0x400712c	           0xf42da	                          cmovb ebx, edx	      4084	elf.c	FUNCTION_56	FOR_1	IF_1
0x400712f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4082	elf.c	FUNCTION_56	FOR_1
0x4007133	          0x4885c0	                           test rax, rax	      4082	elf.c	FUNCTION_56	FOR_1
0x4007136	            0x75ef	                           jne 0x4007127	      4082	elf.c	FUNCTION_56	FOR_1
0x4007138	          0x83c301	                              add ebx, 1	      4088	elf.c	FUNCTION_56
0x400713b	            0x89de	                            mov esi, ebx	      4089	elf.c	FUNCTION_56	CALL_2
0x400713d	      0xba08000000	                              mov edx, 8	      4089	elf.c	FUNCTION_56	CALL_2
0x4007142	          0x4c89ff	                            mov rdi, r15	      4089	elf.c	FUNCTION_56	CALL_2
0x4007145	      0xe800000000	                          call 0x400714a	      4089	elf.c	FUNCTION_56	CALL_2
0x400714a	          0x4989c6	                            mov r14, rax	      4089	elf.c	FUNCTION_56	CALL_2
0x400714d	          0x4885c0	                           test rax, rax	      4090	elf.c	FUNCTION_56	IF_2
0x4007150	     0xf843e220000	                            je 0x4009394	      4090	elf.c	FUNCTION_56	IF_2
0x4007156	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      4092	elf.c	FUNCTION_56	CALL_3
0x400715d	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      4092	elf.c	FUNCTION_56	CALL_3
0x4007164	        0x4c897010	             mov qword [rax + 0x10], r14	      4092	elf.c	FUNCTION_56	CALL_3
0x4007168	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      4093	elf.c	FUNCTION_56	CALL_4
0x400716f	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      4093	elf.c	FUNCTION_56	CALL_4
0x4007176	          0x895848	             mov dword [rax + 0x48], ebx	      4093	elf.c	FUNCTION_56	CALL_4
0x4007179	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      4097	elf.c	FUNCTION_56	FOR_2
0x400717d	            0x85c0	                           test eax, eax	      4097	elf.c	FUNCTION_56	FOR_2
0x400717f	     0xf849c000000	                            je 0x4007221	      4097	elf.c	FUNCTION_56	FOR_2
0x4007185	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4097	elf.c	FUNCTION_56	FOR_2
0x400718a	          0x4889cb	                            mov rbx, rcx	      4097	elf.c	FUNCTION_56	FOR_2
0x400718d	          0x8d40ff	                      lea eax, [rax - 1]	      4097	elf.c	FUNCTION_56	FOR_2
0x4007190	      0x4c8d6cc108	              lea r13, [rcx + rax*8 + 8]	      4097	elf.c	FUNCTION_56	FOR_2
0x4007195	          0x4889cd	                            mov rbp, rcx	      4097	elf.c	FUNCTION_56	FOR_2
0x4007198	        0x4c8b6500	                    mov r12, qword [rbp]	      4099	elf.c	FUNCTION_56	FOR_2
0x400719c	    0x41f644241901	               test byte [r12 + 0x19], 1	      4101	elf.c	FUNCTION_56	FOR_2	IF_3
0x40071a2	            0x7438	                            je 0x40071dc	      4101	elf.c	FUNCTION_56	FOR_2	IF_3
0x40071a4	    0x49837c241000	               cmp qword [r12 + 0x10], 0	      4102	elf.c	FUNCTION_56	FOR_2	IF_3
0x40071aa	            0x7530	                           jne 0x40071dc	      4102	elf.c	FUNCTION_56	FOR_2	IF_3
0x40071ac	          0x4c89e6	                            mov rsi, r12	      4103	elf.c	FUNCTION_56	FOR_2	IF_3	CALL_5
0x40071af	          0x4c89ff	                            mov rdi, r15	      4103	elf.c	FUNCTION_56	FOR_2	IF_3	CALL_5
0x40071b2	      0xe8b58fffff	             call sym.ignore_section_sym	      4103	elf.c	FUNCTION_56	FOR_2	IF_3	CALL_5
0x40071b7	            0x85c0	                           test eax, eax	      4103	elf.c	FUNCTION_56	FOR_2	IF_3	CALL_5
0x40071b9	            0x7521	                           jne 0x40071dc	      4103	elf.c	FUNCTION_56	FOR_2	IF_3	CALL_5
0x40071bb	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      4104	elf.c	FUNCTION_56	FOR_2	IF_3
0x40071c0	    0x483d00000000	                              cmp rax, 0	      4104	elf.c	FUNCTION_56	FOR_2	IF_3
0x40071c6	            0x7414	                            je 0x40071dc	      4104	elf.c	FUNCTION_56	FOR_2	IF_3
0x40071c8	    0x4c3bb8f00000	            cmp r15, qword [rax + 0xf0] 	      4108	elf.c	FUNCTION_56	FOR_2	IF_3	IF_4
0x40071cf	            0x7404	                            je 0x40071d5	      4108	elf.c	FUNCTION_56	FOR_2	IF_3	IF_4
0x40071d1	        0x488b4068	            mov rax, qword [rax + 0x68] 	      4109	elf.c	FUNCTION_56	FOR_2	IF_3	IF_4
0x40071d5	          0x8b400c	              mov eax, dword [rax + 0xc]	      4111	elf.c	FUNCTION_56	FOR_2	IF_3
0x40071d8	        0x4d8924c6	            mov qword [r14 + rax*8], r12	      4111	elf.c	FUNCTION_56	FOR_2	IF_3
0x40071dc	        0x4883c508	                              add rbp, 8	      4111	elf.c	FUNCTION_56	FOR_2	IF_3
0x40071e0	          0x4c39ed	                            cmp rbp, r13	      4097	elf.c	FUNCTION_56	FOR_2
0x40071e3	            0x75b3	                           jne 0x4007198	      4097	elf.c	FUNCTION_56	FOR_2
0x40071e5	    0x41bc00000000	                             mov r12d, 0	      4097	elf.c	FUNCTION_56	FOR_2
0x40071eb	      0xbd00000000	                              mov ebp, 0	      4097	elf.c	FUNCTION_56	FOR_2
0x40071f0	          0x488b33	                    mov rsi, qword [rbx]	      4118	elf.c	FUNCTION_56	FOR_3	IF_5	CALL_6
0x40071f3	          0x4c89ff	                            mov rdi, r15	      4118	elf.c	FUNCTION_56	FOR_3	IF_5	CALL_6
0x40071f6	      0xe8258fffff	                  call sym.sym_is_global	      4118	elf.c	FUNCTION_56	FOR_3	IF_5	CALL_6
0x40071fb	            0x85c0	                           test eax, eax	      4118	elf.c	FUNCTION_56	FOR_3	IF_5	CALL_6
0x40071fd	            0x7405	                            je 0x4007204	      4118	elf.c	FUNCTION_56	FOR_3	IF_5	CALL_6
0x40071ff	          0x83c501	                              add ebp, 1	      4119	elf.c	FUNCTION_56	FOR_3	IF_5
0x4007202	            0xeb12	                           jmp 0x4007216	      4119	elf.c	FUNCTION_56	FOR_3	IF_5
0x4007204	          0x488b33	                    mov rsi, qword [rbx]	      4120	elf.c	FUNCTION_56	FOR_3	ELSE_1	IF_6	CALL_7
0x4007207	          0x4c89ff	                            mov rdi, r15	      4120	elf.c	FUNCTION_56	FOR_3	ELSE_1	IF_6	CALL_7
0x400720a	      0xe85d8fffff	             call sym.ignore_section_sym	      4120	elf.c	FUNCTION_56	FOR_3	ELSE_1	IF_6	CALL_7
0x400720f	          0x83f801	                              cmp eax, 1	      4121	elf.c	FUNCTION_56	FOR_3	ELSE_1	IF_6
0x4007212	        0x4183d400	                             adc r12d, 0	      4121	elf.c	FUNCTION_56	FOR_3	ELSE_1	IF_6
0x4007216	        0x4883c308	                              add rbx, 8	      4121	elf.c	FUNCTION_56	FOR_3	ELSE_1	IF_6
0x400721a	          0x4c39eb	                            cmp rbx, r13	      4116	elf.c	FUNCTION_56	FOR_3
0x400721d	            0x75d1	                           jne 0x40071f0	      4116	elf.c	FUNCTION_56	FOR_3
0x400721f	            0xeb0b	                           jmp 0x400722c	      4116	elf.c	FUNCTION_56	FOR_3
0x4007221	    0x41bc00000000	                             mov r12d, 0	      4097	elf.c	FUNCTION_56	FOR_2
0x4007227	      0xbd00000000	                              mov ebp, 0	      4097	elf.c	FUNCTION_56	FOR_2
0x400722c	    0x498b9f900000	            mov rbx, qword [r15 + 0x90] 	      4128	elf.c	FUNCTION_56	FOR_4
0x4007233	          0x4885db	                           test rbx, rbx	      4128	elf.c	FUNCTION_56	FOR_4
0x4007236	            0x742f	                            je 0x4007267	      4128	elf.c	FUNCTION_56	FOR_4
0x4007238	          0x8b430c	              mov eax, dword [rbx + 0xc]	      4130	elf.c	FUNCTION_56	FOR_4	IF_7
0x400723b	      0x49833cc600	              cmp qword [r14 + rax*8], 0	      4130	elf.c	FUNCTION_56	FOR_4	IF_7
0x4007240	            0x751c	                           jne 0x400725e	      4130	elf.c	FUNCTION_56	FOR_4	IF_7
0x4007242	    0x488bb3f80000	            mov rsi, qword [rbx + 0xf8] 	      4132	elf.c	FUNCTION_56	FOR_4	IF_7	IF_8	CALL_8
0x4007249	          0x4c89ff	                            mov rdi, r15	      4132	elf.c	FUNCTION_56	FOR_4	IF_7	IF_8	CALL_8
0x400724c	      0xe8cf8effff	                  call sym.sym_is_global	      4132	elf.c	FUNCTION_56	FOR_4	IF_7	IF_8	CALL_8
0x4007251	            0x85c0	                           test eax, eax	      4132	elf.c	FUNCTION_56	FOR_4	IF_7	IF_8	CALL_8
0x4007253	            0x7506	                           jne 0x400725b	      4132	elf.c	FUNCTION_56	FOR_4	IF_7	IF_8	CALL_8
0x4007255	        0x4183c401	                             add r12d, 1	      4133	elf.c	FUNCTION_56	FOR_4	IF_7	IF_8
0x4007259	            0xeb03	                           jmp 0x400725e	      4133	elf.c	FUNCTION_56	FOR_4	IF_7	IF_8
0x400725b	          0x83c501	                              add ebp, 1	      4135	elf.c	FUNCTION_56	FOR_4	IF_7	ELSE_2
0x400725e	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      4128	elf.c	FUNCTION_56	FOR_4
0x4007262	          0x4885db	                           test rbx, rbx	      4128	elf.c	FUNCTION_56	FOR_4
0x4007265	            0x75d1	                           jne 0x4007238	      4128	elf.c	FUNCTION_56	FOR_4
0x4007267	        0x418d042c	                    lea eax, [r12 + rbp]	      4140	elf.c	FUNCTION_56	CALL_9
0x400726b	        0x89442430	             mov dword [rsp + 0x30], eax	      4140	elf.c	FUNCTION_56	CALL_9
0x400726f	            0x89c6	                            mov esi, eax	      4140	elf.c	FUNCTION_56	CALL_9
0x4007271	      0xba08000000	                              mov edx, 8	      4140	elf.c	FUNCTION_56	CALL_9
0x4007276	          0x4c89ff	                            mov rdi, r15	      4140	elf.c	FUNCTION_56	CALL_9
0x4007279	      0xe800000000	                          call 0x400727e	      4140	elf.c	FUNCTION_56	CALL_9
0x400727e	      0x4889442410	             mov qword [rsp + 0x10], rax	      4140	elf.c	FUNCTION_56	CALL_9
0x4007283	          0x4885c0	                           test rax, rax	      4143	elf.c	FUNCTION_56	IF_9
0x4007286	     0xf8408210000	                            je 0x4009394	      4143	elf.c	FUNCTION_56	IF_9
0x400728c	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      4146	elf.c	FUNCTION_56	FOR_5
0x4007290	            0x85c0	                           test eax, eax	      4146	elf.c	FUNCTION_56	FOR_5
0x4007292	     0xf8480000000	                            je 0x4007318	      4146	elf.c	FUNCTION_56	FOR_5
0x4007298	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4146	elf.c	FUNCTION_56	FOR_5
0x400729d	          0x4889cb	                            mov rbx, rcx	      4146	elf.c	FUNCTION_56	FOR_5
0x40072a0	          0x8d40ff	                      lea eax, [rax - 1]	      4146	elf.c	FUNCTION_56	FOR_5
0x40072a3	      0x488d44c108	              lea rax, [rcx + rax*8 + 8]	      4146	elf.c	FUNCTION_56	FOR_5
0x40072a8	    0xc74424180000	               mov dword [rsp + 0x18], 0	      4146	elf.c	FUNCTION_56	FOR_5
0x40072b0	      0xbd00000000	                              mov ebp, 0	      4146	elf.c	FUNCTION_56	FOR_5
0x40072b5	      0x4c89742428	             mov qword [rsp + 0x28], r14	      4146	elf.c	FUNCTION_56	FOR_5
0x40072ba	          0x4989c6	                            mov r14, rax	      4146	elf.c	FUNCTION_56	FOR_5
0x40072bd	          0x4c8b2b	                    mov r13, qword [rbx]	      4148	elf.c	FUNCTION_56	FOR_5
0x40072c0	          0x4c89ee	                            mov rsi, r13	      4151	elf.c	FUNCTION_56	FOR_5	IF_10	CALL_10
0x40072c3	          0x4c89ff	                            mov rdi, r15	      4151	elf.c	FUNCTION_56	FOR_5	IF_10	CALL_10
0x40072c6	      0xe8558effff	                  call sym.sym_is_global	      4151	elf.c	FUNCTION_56	FOR_5	IF_10	CALL_10
0x40072cb	            0x85c0	                           test eax, eax	      4151	elf.c	FUNCTION_56	FOR_5	IF_10	CALL_10
0x40072cd	            0x7409	                            je 0x40072d8	      4151	elf.c	FUNCTION_56	FOR_5	IF_10	CALL_10
0x40072cf	        0x418d042c	                    lea eax, [r12 + rbp]	      4152	elf.c	FUNCTION_56	FOR_5	IF_10
0x40072d3	          0x8d6d01	                      lea ebp, [rbp + 1]	      4152	elf.c	FUNCTION_56	FOR_5	IF_10
0x40072d6	            0xeb1c	                           jmp 0x40072f4	      4152	elf.c	FUNCTION_56	FOR_5	IF_10
0x40072d8	          0x4c89ee	                            mov rsi, r13	      4153	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11	CALL_11
0x40072db	          0x4c89ff	                            mov rdi, r15	      4153	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11	CALL_11
0x40072de	      0xe8898effff	             call sym.ignore_section_sym	      4153	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11	CALL_11
0x40072e3	            0x85c0	                           test eax, eax	      4153	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11	CALL_11
0x40072e5	            0x7521	                           jne 0x4007308	      4153	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11	CALL_11
0x40072e7	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	      4154	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11
0x40072eb	            0x89c8	                            mov eax, ecx	      4154	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11
0x40072ed	          0x8d4901	                      lea ecx, [rcx + 1]	      4154	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11
0x40072f0	        0x894c2418	             mov dword [rsp + 0x18], ecx	      4154	elf.c	FUNCTION_56	FOR_5	ELSE_3	IF_11
0x40072f4	            0x89c2	                            mov edx, eax	      4157	elf.c	FUNCTION_56	FOR_5	ELSE_4
0x40072f6	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4157	elf.c	FUNCTION_56	FOR_5	ELSE_4
0x40072fb	        0x4c892cd7	            mov qword [rdi + rdx*8], r13	      4157	elf.c	FUNCTION_56	FOR_5	ELSE_4
0x40072ff	          0x83c001	                              add eax, 1	      4158	elf.c	FUNCTION_56	FOR_5	ELSE_4
0x4007302	            0x89c0	                            mov eax, eax	      4158	elf.c	FUNCTION_56	FOR_5	ELSE_4
0x4007304	        0x49894528	             mov qword [r13 + 0x28], rax	      4158	elf.c	FUNCTION_56	FOR_5	ELSE_4
0x4007308	        0x4883c308	                              add rbx, 8	      4158	elf.c	FUNCTION_56	FOR_5	ELSE_4
0x400730c	          0x4c39f3	                            cmp rbx, r14	      4146	elf.c	FUNCTION_56	FOR_5
0x400730f	            0x75ac	                           jne 0x40072bd	      4146	elf.c	FUNCTION_56	FOR_5
0x4007311	      0x4c8b742428	            mov r14, qword [rsp + 0x28] 	      4146	elf.c	FUNCTION_56	FOR_5
0x4007316	            0xeb0d	                           jmp 0x4007325	      4146	elf.c	FUNCTION_56	FOR_5
0x4007318	    0xc74424180000	               mov dword [rsp + 0x18], 0	      4146	elf.c	FUNCTION_56	FOR_5
0x4007320	      0xbd00000000	                              mov ebp, 0	      4146	elf.c	FUNCTION_56	FOR_5
0x4007325	    0x498b9f900000	            mov rbx, qword [r15 + 0x90] 	      4160	elf.c	FUNCTION_56	ELSE_4	FOR_6
0x400732c	          0x4885db	                           test rbx, rbx	      4160	elf.c	FUNCTION_56	ELSE_4	FOR_6
0x400732f	            0x7459	                            je 0x400738a	      4160	elf.c	FUNCTION_56	ELSE_4	FOR_6
0x4007331	          0x8b430c	              mov eax, dword [rbx + 0xc]	      4162	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x4007334	        0x498d04c6	                  lea rax, [r14 + rax*8]	      4162	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x4007338	        0x48833800	                      cmp qword [rax], 0	      4162	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400733c	            0x7543	                           jne 0x4007381	      4162	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400733e	    0x4c8babf80000	            mov r13, qword [rbx + 0xf8] 	      4164	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x4007345	          0x4c8928	                    mov qword [rax], r13	      4167	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x4007348	          0x4c89ee	                            mov rsi, r13	      4168	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13	CALL_12
0x400734b	          0x4c89ff	                            mov rdi, r15	      4168	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13	CALL_12
0x400734e	      0xe8cd8dffff	                  call sym.sym_is_global	      4168	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13	CALL_12
0x4007353	            0x85c0	                           test eax, eax	      4168	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13	CALL_12
0x4007355	            0x750f	                           jne 0x4007366	      4168	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13	CALL_12
0x4007357	        0x8b7c2418	            mov edi, dword [rsp + 0x18] 	      4169	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13
0x400735b	            0x89f8	                            mov eax, edi	      4169	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13
0x400735d	          0x8d7f01	                      lea edi, [rdi + 1]	      4169	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13
0x4007360	        0x897c2418	             mov dword [rsp + 0x18], edi	      4169	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13
0x4007364	            0xeb07	                           jmp 0x400736d	      4169	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	IF_13
0x4007366	        0x418d042c	                    lea eax, [r12 + rbp]	      4171	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	ELSE_5
0x400736a	          0x8d6d01	                      lea ebp, [rbp + 1]	      4171	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12	ELSE_5
0x400736d	            0x89c2	                            mov edx, eax	      4172	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400736f	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4172	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x4007374	        0x4c892cd7	            mov qword [rdi + rdx*8], r13	      4172	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x4007378	          0x83c001	                              add eax, 1	      4173	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400737b	            0x89c0	                            mov eax, eax	      4173	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x400737d	        0x49894528	             mov qword [r13 + 0x28], rax	      4173	elf.c	FUNCTION_56	ELSE_4	FOR_6	IF_12
0x4007381	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      4160	elf.c	FUNCTION_56	ELSE_4	FOR_6
0x4007385	          0x4885db	                           test rbx, rbx	      4160	elf.c	FUNCTION_56	ELSE_4	FOR_6
0x4007388	            0x75a7	                           jne 0x4007331	      4160	elf.c	FUNCTION_56	ELSE_4	FOR_6
0x400738a	        0x8b542430	            mov edx, dword [rsp + 0x30] 	      4177	elf.c	FUNCTION_56	CALL_13
0x400738e	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      4177	elf.c	FUNCTION_56	CALL_13
0x4007393	          0x4c89ff	                            mov rdi, r15	      4177	elf.c	FUNCTION_56	CALL_13
0x4007396	      0xe800000000	                          call 0x400739b	      4177	elf.c	FUNCTION_56	CALL_13
0x400739b	      0xe800000000	                          call 0x40073a0	      7772	elf.c	FUNCTION_88	CALL_2
0x40073a0	      0x4889442458	             mov qword [rsp + 0x58], rax	      7772	elf.c	FUNCTION_88	CALL_2
0x40073a5	          0x4885c0	                           test rax, rax	      7773	elf.c	FUNCTION_88	IF_2
0x40073a8	     0xf84e61f0000	                            je 0x4009394	      7773	elf.c	FUNCTION_88	IF_2
0x40073ae	        0x498b4708	                mov rax, qword [r15 + 8]	      7776	elf.c	FUNCTION_88	CALL_3
0x40073b2	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      7776	elf.c	FUNCTION_88	CALL_3
0x40073b9	          0x4889c7	                            mov rdi, rax	      7776	elf.c	FUNCTION_88	CALL_3
0x40073bc	      0x4889442470	             mov qword [rsp + 0x70], rax	      7776	elf.c	FUNCTION_88	CALL_3
0x40073c1	    0x458bafb80000	           mov r13d, dword [r15 + 0xb8] 	      7777	elf.c	FUNCTION_88
0x40073c8	    0x4489ac248c00	            mov dword [rsp + 0x8c], r13d	      7777	elf.c	FUNCTION_88
0x40073d0	    0x498baff80000	            mov rbp, qword [r15 + 0xf8] 	      7778	elf.c	FUNCTION_88	CALL_4
0x40073d7	    0xc7456c020000	               mov dword [rbp + 0x6c], 2	      7779	elf.c	FUNCTION_88
0x40073de	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      7780	elf.c	FUNCTION_88
0x40073e5	         0xfb64005	               movzx eax, byte [rax + 5]	      7780	elf.c	FUNCTION_88
0x40073e9	    0x488985a00000	            mov qword [rbp + 0xa0], rax 	      7780	elf.c	FUNCTION_88
0x40073f0	        0x418d5d01	                      lea ebx, [r13 + 1]	      7781	elf.c	FUNCTION_88
0x40073f4	          0x4863db	                         movsxd rbx, ebx	      7781	elf.c	FUNCTION_88
0x40073f7	        0x480fafc3	                           imul rax, rbx	      7781	elf.c	FUNCTION_88
0x40073fb	    0x488985880000	            mov qword [rbp + 0x88], rax 	      7781	elf.c	FUNCTION_88
0x4007402	        0x4183c401	                             add r12d, 1	      7782	elf.c	FUNCTION_88
0x4007406	    0x4489a5940000	           mov dword [rbp + 0x94], r12d 	      7782	elf.c	FUNCTION_88
0x400740d	    0x488b87000300	           mov rax, qword [rdi + 0x300] 	      7783	elf.c	FUNCTION_88
0x4007414	         0xfb6480b	            movzx ecx, byte [rax + 0xb] 	      7783	elf.c	FUNCTION_88
0x4007418	      0xb801000000	                              mov eax, 1	      7783	elf.c	FUNCTION_88
0x400741d	          0x48d3e0	                             shl rax, cl	      7783	elf.c	FUNCTION_88
0x4007420	    0x488985980000	            mov qword [rbp + 0x98], rax 	      7783	elf.c	FUNCTION_88
0x4007427	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      7785	elf.c	FUNCTION_88	CALL_5
0x400742e	    0x488984249000	             mov qword [rsp + 0x90], rax	      7785	elf.c	FUNCTION_88	CALL_5
0x4007436	    0xc7800c010000	              mov dword [rax + 0x10c], 3	      7786	elf.c	FUNCTION_88
0x4007440	        0x488d3c5b	                  lea rdi, [rbx + rbx*2]	      7789	elf.c	FUNCTION_88	CALL_6
0x4007444	        0x48c1e704	                              shl rdi, 4	      7789	elf.c	FUNCTION_88	CALL_6
0x4007448	      0xe800000000	                          call 0x400744d	      7789	elf.c	FUNCTION_88	CALL_6
0x400744d	      0x4889442448	             mov qword [rsp + 0x48], rax	      7789	elf.c	FUNCTION_88	CALL_6
0x4007452	          0x4885c0	                           test rax, rax	      7791	elf.c	FUNCTION_88	IF_3
0x4007455	            0x750f	                           jne 0x4007466	      7791	elf.c	FUNCTION_88	IF_3
0x4007457	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      7793	elf.c	FUNCTION_88	IF_3	CALL_7
0x400745c	      0xe800000000	                          call 0x4007461	      7793	elf.c	FUNCTION_88	IF_3	CALL_7
0x4007461	      0xe92e1f0000	                           jmp 0x4009394	      7793	elf.c	FUNCTION_88	IF_3	CALL_7
0x4007466	      0x488b442470	            mov rax, qword [rsp + 0x70] 	      7798	elf.c	FUNCTION_88
0x400746b	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      7798	elf.c	FUNCTION_88
0x4007472	         0xfb65005	               movzx edx, byte [rax + 5]	      7797	elf.c	FUNCTION_88	CALL_8
0x4007476	          0x4889de	                            mov rsi, rbx	      7797	elf.c	FUNCTION_88	CALL_8
0x4007479	          0x4c89ff	                            mov rdi, r15	      7797	elf.c	FUNCTION_88	CALL_8
0x400747c	      0xe800000000	                          call 0x4007481	      7797	elf.c	FUNCTION_88	CALL_8
0x4007481	    0x488984249800	             mov qword [rsp + 0x98], rax	      7797	elf.c	FUNCTION_88	CALL_8
0x4007489	          0x4885c0	                           test rax, rax	      7799	elf.c	FUNCTION_88	IF_4
0x400748c	            0x7519	                           jne 0x40074a7	      7799	elf.c	FUNCTION_88	IF_4
0x400748e	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      7802	elf.c	FUNCTION_88	IF_4	CALL_9
0x4007493	      0xe800000000	                          call 0x4007498	      7802	elf.c	FUNCTION_88	IF_4	CALL_9
0x4007498	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      7803	elf.c	FUNCTION_88	IF_4	CALL_10
0x400749d	      0xe800000000	                          call 0x40074a2	      7803	elf.c	FUNCTION_88	IF_4	CALL_10
0x40074a2	      0xe9ed1e0000	                           jmp 0x4009394	      7803	elf.c	FUNCTION_88	IF_4	CALL_10
0x40074a7	    0x488b84249800	            mov rax, qword [rsp + 0x98] 	      7806	elf.c	FUNCTION_88
0x40074af	    0x488985b00000	            mov qword [rbp + 0xb0], rax 	      7806	elf.c	FUNCTION_88
0x40074b6	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      7812	elf.c	FUNCTION_88	IF_5	CALL_11
0x40074bd	    0x488ba8e80200	           mov rbp, qword [rax + 0x2e8] 	      7812	elf.c	FUNCTION_88	IF_5	CALL_11
0x40074c4	          0x4885ed	                           test rbp, rbp	      7812	elf.c	FUNCTION_88	IF_5	CALL_11
0x40074c7	            0x7452	                            je 0x400751b	      7812	elf.c	FUNCTION_88	IF_5	CALL_11
0x40074c9	    0x48c744246000	               mov qword [rsp + 0x60], 0	      7809	elf.c	FUNCTION_88
0x40074d2	        0x837d0000	                      cmp dword [rbp], 0	      7815	elf.c	FUNCTION_88	IF_5	IF_6
0x40074d6	            0x744c	                            je 0x4007524	      7815	elf.c	FUNCTION_88	IF_5	IF_6
0x40074d8	    0x4c8d249d0000	                        lea r12, [rbx*4]	      7817	elf.c	FUNCTION_88	IF_5	IF_6
0x40074e0	      0xba04000000	                              mov edx, 4	      7818	elf.c	FUNCTION_88	IF_5	IF_6
0x40074e5	          0x4889de	                            mov rsi, rbx	      7818	elf.c	FUNCTION_88	IF_5	IF_6
0x40074e8	          0x4c89ff	                            mov rdi, r15	      7818	elf.c	FUNCTION_88	IF_5	IF_6
0x40074eb	      0xe800000000	                          call 0x40074f0	      7818	elf.c	FUNCTION_88	IF_5	IF_6
0x40074f0	      0x4889442460	             mov qword [rsp + 0x60], rax	      7818	elf.c	FUNCTION_88	IF_5	IF_6
0x40074f5	          0x4885c0	                           test rax, rax	      7820	elf.c	FUNCTION_88	IF_5	IF_6	IF_7
0x40074f8	            0x7494	                            je 0x400748e	      7820	elf.c	FUNCTION_88	IF_5	IF_6	IF_7
0x40074fa	        0x48894548	            mov qword [rbp + 0x48], rax 	      7823	elf.c	FUNCTION_88	IF_5	IF_6
0x40074fe	    0xc74504120000	               mov dword [rbp + 4], 0x12	      7824	elf.c	FUNCTION_88	IF_5	IF_6
0x4007505	        0x4c896520	            mov qword [rbp + 0x20], r12 	      7825	elf.c	FUNCTION_88	IF_5	IF_6
0x4007509	    0x48c745300400	               mov qword [rbp + 0x30], 4	      7826	elf.c	FUNCTION_88	IF_5	IF_6
0x4007511	    0x48c745380400	               mov qword [rbp + 0x38], 4	      7827	elf.c	FUNCTION_88	IF_5	IF_6
0x4007519	            0xeb09	                           jmp 0x4007524	      7827	elf.c	FUNCTION_88	IF_5	IF_6
0x400751b	    0x48c744246000	               mov qword [rsp + 0x60], 0	      7809	elf.c	FUNCTION_88
0x4007524	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      7843	elf.c	FUNCTION_88
0x4007529	    0x48c700000000	                      mov qword [rax], 0	      7843	elf.c	FUNCTION_88
0x4007530	    0x48c740080000	                  mov qword [rax + 8], 0	      7843	elf.c	FUNCTION_88
0x4007538	    0x48c740100000	               mov qword [rax + 0x10], 0	      7843	elf.c	FUNCTION_88
0x4007540	        0xc6401800	                mov byte [rax + 0x18], 0	      7843	elf.c	FUNCTION_88
0x4007544	        0xc6401900	                mov byte [rax + 0x19], 0	      7843	elf.c	FUNCTION_88
0x4007548	        0xc6401a00	                mov byte [rax + 0x1a], 0	      7843	elf.c	FUNCTION_88
0x400754c	    0xc7401c000000	               mov dword [rax + 0x1c], 0	      7843	elf.c	FUNCTION_88
0x4007553	    0x48c740200000	               mov qword [rax + 0x20], 0	      7844	elf.c	FUNCTION_88
0x400755b	    0x48c740280000	               mov qword [rax + 0x28], 0	      7845	elf.c	FUNCTION_88
0x4007563	    0x48837c246000	               cmp qword [rsp + 0x60], 0	      7810	elf.c	FUNCTION_88
0x4007569	           0xf95c0	                                setne al	      7810	elf.c	FUNCTION_88
0x400756c	           0xfb6c0	                           movzx eax, al	      7810	elf.c	FUNCTION_88
0x400756f	      0x4889442438	             mov qword [rsp + 0x38], rax	      7810	elf.c	FUNCTION_88
0x4007574	      0x488b442470	            mov rax, qword [rsp + 0x70] 	      7852	elf.c	FUNCTION_88
0x4007579	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      7852	elf.c	FUNCTION_88
0x4007580	    0xc74424680000	               mov dword [rsp + 0x68], 0	      7853	elf.c	FUNCTION_88	CALL_14
0x4007588	          0x4885c0	                           test rax, rax	      7853	elf.c	FUNCTION_88	CALL_14
0x400758b	            0x7411	                            je 0x400759e	      7853	elf.c	FUNCTION_88	CALL_14
0x400758d	          0x4c89ff	                            mov rdi, r15	      7853	elf.c	FUNCTION_88	CALL_14
0x4007590	            0xffd0	                                call rax	      7853	elf.c	FUNCTION_88	CALL_14
0x4007592	            0x85c0	                           test eax, eax	      7853	elf.c	FUNCTION_88	CALL_14
0x4007594	           0xf95c0	                                setne al	      7853	elf.c	FUNCTION_88	CALL_14
0x4007597	           0xfb6c0	                           movzx eax, al	      7853	elf.c	FUNCTION_88	CALL_14
0x400759a	        0x89442468	             mov dword [rsp + 0x68], eax	      7853	elf.c	FUNCTION_88	CALL_14
0x400759e	    0x498b87b00000	            mov rax, qword [r15 + 0xb0] 	      7855	elf.c	FUNCTION_88
0x40075a5	          0x4585ed	                         test r13d, r13d	      7856	elf.c	FUNCTION_88	FOR_1
0x40075a8	     0xf8ebe040000	                           jle 0x4007a6c	      7856	elf.c	FUNCTION_88	FOR_1
0x40075ae	          0x4889c7	                            mov rdi, rax	      7856	elf.c	FUNCTION_88	FOR_1
0x40075b1	        0x418d45ff	                      lea eax, [r13 - 1]	      7856	elf.c	FUNCTION_88	FOR_1
0x40075b5	        0x488d7002	                      lea rsi, [rax + 2]	      7856	elf.c	FUNCTION_88	FOR_1
0x40075b9	      0x4889742478	             mov qword [rsp + 0x78], rsi	      7856	elf.c	FUNCTION_88	FOR_1
0x40075be	    0x41be01000000	                             mov r14d, 1	      7856	elf.c	FUNCTION_88	FOR_1
0x40075c4	        0x8b742440	            mov esi, dword [rsp + 0x40] 	      7910	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_14
0x40075c8	          0x83e642	                           and esi, 0x42	      7910	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_14
0x40075cb	    0x89b424800000	             mov dword [rsp + 0x80], esi	      7910	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_14
0x40075d2	      0x4c897c2450	             mov qword [rsp + 0x50], r15	      7910	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_14
0x40075d7	          0x4989ff	                            mov r15, rdi	      7910	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_14
0x40075da	          0x4d89fd	                            mov r13, r15	      7859	elf.c	FUNCTION_88	FOR_1
0x40075dd	          0x498b07	                    mov rax, qword [r15]	      7859	elf.c	FUNCTION_88	FOR_1
0x40075e0	        0x4c8b6010	            mov r12, qword [rax + 0x10] 	      7859	elf.c	FUNCTION_88	FOR_1
0x40075e4	          0x8b5818	            mov ebx, dword [rax + 0x18] 	      7861	elf.c	FUNCTION_88	FOR_1
0x40075e7	      0x837c246800	               cmp dword [rsp + 0x68], 0	      7864	elf.c	FUNCTION_88	FOR_1	IF_9
0x40075ec	            0x7510	                           jne 0x40075fe	      7864	elf.c	FUNCTION_88	FOR_1	IF_9
0x40075ee	            0x89da	                            mov edx, ebx	      7865	elf.c	FUNCTION_88	FOR_1	IF_9
0x40075f0	    0x81e202010000	                          and edx, 0x102	      7865	elf.c	FUNCTION_88	FOR_1	IF_9
0x40075f6	    0x81fa00010000	                          cmp edx, 0x100	      7865	elf.c	FUNCTION_88	FOR_1	IF_9
0x40075fc	            0x7423	                            je 0x4007621	      7865	elf.c	FUNCTION_88	FOR_1	IF_9
0x40075fe	        0x488b7008	                mov rsi, qword [rax + 8]	      7875	elf.c	FUNCTION_88	FOR_1	ELSE_1	CALL_15
0x4007602	      0xba00000000	                              mov edx, 0	      7875	elf.c	FUNCTION_88	FOR_1	ELSE_1	CALL_15
0x4007607	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      7875	elf.c	FUNCTION_88	FOR_1	ELSE_1	CALL_15
0x400760c	      0xe800000000	                          call 0x4007611	      7875	elf.c	FUNCTION_88	FOR_1	ELSE_1	CALL_15
0x4007611	      0x4889442430	             mov qword [rsp + 0x30], rax	      7875	elf.c	FUNCTION_88	FOR_1	ELSE_1	CALL_15
0x4007616	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      7877	elf.c	FUNCTION_88	FOR_1	ELSE_1	IF_10
0x400761a	            0x750e	                           jne 0x400762a	      7877	elf.c	FUNCTION_88	FOR_1	ELSE_1	IF_10
0x400761c	      0xe96dfeffff	                           jmp 0x400748e	      7877	elf.c	FUNCTION_88	FOR_1	ELSE_1	IF_10
0x4007621	    0x48c7442430ff	mov qword [rsp + 0x30], 0xffffffffffffffff	      7868	elf.c	FUNCTION_88	FOR_1	IF_9
0x400762a	        0x498b4500	                    mov rax, qword [r13]	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x400762e	          0x488b10	                    mov rdx, qword [rax]	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x4007631	          0x4885d2	                           test rdx, rdx	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x4007634	            0x741d	                            je 0x4007653	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x4007636	        0x488b4a08	                mov rcx, qword [rdx + 8]	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x400763a	      0xbd00000000	                              mov ebp, 0	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x400763f	        0x83790805	                  cmp dword [rcx + 8], 5	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x4007643	            0x7513	                           jne 0x4007658	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x4007645	    0x4883baf80000	               cmp qword [rdx + 0xf8], 0	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x400764d	        0x480f45e8	                         cmovne rbp, rax	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x4007651	            0xeb05	                           jmp 0x4007658	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x4007653	      0xbd00000000	                              mov ebp, 0	      7881	elf.c	FUNCTION_88	FOR_1	CALL_16
0x4007658	            0x89df	                            mov edi, ebx	      7883	elf.c	FUNCTION_88	FOR_1	IF_11
0x400765a	    0x81e700010000	                          and edi, 0x100	      7883	elf.c	FUNCTION_88	FOR_1	IF_11
0x4007660	        0x897c2440	             mov dword [rsp + 0x40], edi	      7883	elf.c	FUNCTION_88	FOR_1	IF_11
0x4007664	            0x7560	                           jne 0x40076c6	      7883	elf.c	FUNCTION_88	FOR_1	IF_11
0x4007666	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      7884	elf.c	FUNCTION_88	FOR_1	IF_11
0x400766a	        0xf6422110	           test byte [rdx + 0x21], 0x10 	      7884	elf.c	FUNCTION_88	FOR_1	IF_11
0x400766e	            0x7456	                            je 0x40076c6	      7884	elf.c	FUNCTION_88	FOR_1	IF_11
0x4007670	          0x4885ed	                           test rbp, rbp	      7890	elf.c	FUNCTION_88	FOR_1	IF_11	IF_12
0x4007673	            0x740e	                            je 0x4007683	      7890	elf.c	FUNCTION_88	FOR_1	IF_11	IF_12
0x4007675	        0x488b4530	            mov rax, qword [rbp + 0x30] 	      7891	elf.c	FUNCTION_88	FOR_1	IF_11	IF_12
0x4007679	      0x4889442418	             mov qword [rsp + 0x18], rax	      7891	elf.c	FUNCTION_88	FOR_1	IF_11	IF_12
0x400767e	          0x4885c0	                           test rax, rax	      7891	elf.c	FUNCTION_88	FOR_1	IF_11	IF_12
0x4007681	            0x7528	                           jne 0x40076ab	      7891	elf.c	FUNCTION_88	FOR_1	IF_11	IF_12
0x4007683	    0x48c744241810	           mov qword [rsp + 0x18], 0x10 	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_17
0x400768c	        0x4983fc0f	                            cmp r12, 0xf	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_17
0x4007690	            0x7719	                            ja 0x40076ab	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_17
0x4007692	          0x4c89e7	                            mov rdi, r12	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_17
0x4007695	      0xe800000000	                          call 0x400769a	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_17
0x400769a	      0xba01000000	                              mov edx, 1	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_17
0x400769f	            0x89c1	                            mov ecx, eax	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_17
0x40076a1	            0xd3e2	                             shl edx, cl	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_17
0x40076a3	          0x4863c2	                         movsxd rax, edx	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_17
0x40076a6	      0x4889442418	             mov qword [rsp + 0x18], rax	      7892	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_17
0x40076ab	        0x498b4500	                    mov rax, qword [r13]	      7896	elf.c	FUNCTION_88	FOR_1	IF_11
0x40076af	        0x488b7020	            mov rsi, qword [rax + 0x20] 	      7895	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_18
0x40076b3	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      7895	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_18
0x40076b8	      0xe800000000	                          call 0x40076bd	      7895	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_18
0x40076bd	        0x89442428	             mov dword [rsp + 0x28], eax	      7895	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_18
0x40076c1	      0xe9ca010000	                           jmp 0x4007890	      7895	elf.c	FUNCTION_88	FOR_1	IF_11	CALL_18
0x40076c6	        0x488b4020	            mov rax, qword [rax + 0x20] 	      7900	elf.c	FUNCTION_88	FOR_1	ELSE_3
0x40076ca	        0x488b4868	            mov rcx, qword [rax + 0x68] 	      7903	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_13
0x40076ce	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      7903	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_13
0x40076d3	          0x4885c9	                           test rcx, rcx	      7903	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_13
0x40076d6	            0x740b	                            je 0x40076e3	      7903	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_13
0x40076d8	        0x4c036060	             add r12, qword [rax + 0x60]	      7905	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_13
0x40076dc	      0x4c89642418	             mov qword [rsp + 0x18], r12	      7905	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_13
0x40076e1	            0xeb0a	                           jmp 0x40076ed	      7905	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_13
0x40076e3	      0x4889442410	             mov qword [rsp + 0x10], rax	      7900	elf.c	FUNCTION_88	FOR_1	ELSE_3
0x40076e8	      0x4c89642418	             mov qword [rsp + 0x18], r12	      7859	elf.c	FUNCTION_88	FOR_1
0x40076ed	    0x83bc24800000	               cmp dword [rsp + 0x80], 0	      7910	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_14
0x40076f5	            0x740e	                            je 0x4007705	      7910	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_14
0x40076f7	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      7911	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_14
0x40076fc	        0x488b7e28	            mov rdi, qword [rsi + 0x28] 	      7911	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_14
0x4007700	      0x48017c2418	            add qword [rsp + 0x18], rdi 	      7911	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_14
0x4007705	          0x4885ed	                           test rbp, rbp	      7913	elf.c	FUNCTION_88	FOR_1	ELSE_3
0x4007708	     0xf84d5000000	                            je 0x40077e3	      7913	elf.c	FUNCTION_88	FOR_1	ELSE_3
0x400770e	        0x4c8b6538	            mov r12, qword [rbp + 0x38] 	      7913	elf.c	FUNCTION_88	FOR_1	ELSE_3
0x4007712	    0x48817c241000	               cmp qword [rsp + 0x10], 0	      7916	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15
0x400771b	     0xf85c8000000	                           jne 0x40077e9	      7916	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15
0x4007721	          0x8b454c	            mov eax, dword [rbp + 0x4c] 	      7917	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15
0x4007724	        0x89442428	             mov dword [rsp + 0x28], eax	      7917	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15
0x4007728	            0x85c0	                           test eax, eax	      7917	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15
0x400772a	     0xf84b9000000	                            je 0x40077e9	      7917	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15
0x4007730	       0x5c0000000	                           add eax, 0xc0	      7923	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1
0x4007735	          0x83f804	                              cmp eax, 4	      7923	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1
0x4007738	     0xf874a010000	                            ja 0x4007888	      7923	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1
0x400773e	            0x89c0	                            mov eax, eax	      7923	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1
0x4007740	    0xff24c5000000	                       jmp qword [rax*8]	      7923	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1
0x4007747	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      7926	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_19
0x400774c	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7926	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_19
0x4007753	    0x8b80780c0000	           mov eax, dword [rax + 0xc78] 	      7926	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_19
0x4007759	        0x89442428	             mov dword [rsp + 0x28], eax	      7926	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_19
0x400775d	      0xe92e010000	                           jmp 0x4007890	      7926	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_19
0x4007762	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      7929	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_20
0x4007767	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7929	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_20
0x400776e	    0x8b807c0c0000	           mov eax, dword [rax + 0xc7c] 	      7929	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_20
0x4007774	        0x89442428	             mov dword [rsp + 0x28], eax	      7929	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_20
0x4007778	      0xe913010000	                           jmp 0x4007890	      7929	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_20
0x400777d	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      7932	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_21
0x4007782	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7932	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_21
0x4007789	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      7932	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_21
0x4007790	          0x8b4050	            mov eax, dword [rax + 0x50] 	      7932	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_21
0x4007793	        0x89442428	             mov dword [rsp + 0x28], eax	      7932	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_21
0x4007797	      0xe9f4000000	                           jmp 0x4007890	      7932	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_21
0x400779c	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      7935	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_22
0x40077a1	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7935	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_22
0x40077a8	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      7935	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_22
0x40077af	          0x8b404c	            mov eax, dword [rax + 0x4c] 	      7935	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_22
0x40077b2	        0x89442428	             mov dword [rsp + 0x28], eax	      7935	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_22
0x40077b6	      0xe9d5000000	                           jmp 0x4007890	      7935	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_22
0x40077bb	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      7938	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	IF_16	CALL_23
0x40077c0	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      7938	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	IF_16	CALL_23
0x40077c7	    0x488b80e80200	           mov rax, qword [rax + 0x2e8] 	      7938	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	IF_16	CALL_23
0x40077ce	          0x4885c0	                           test rax, rax	      7938	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	IF_16	CALL_23
0x40077d1	     0xf84b9000000	                            je 0x4007890	      7938	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	IF_16	CALL_23
0x40077d7	          0x8b4050	            mov eax, dword [rax + 0x50] 	      7939	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_24
0x40077da	        0x89442428	             mov dword [rsp + 0x28], eax	      7939	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_24
0x40077de	      0xe9ad000000	                           jmp 0x4007890	      7939	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1	CALL_24
0x40077e3	    0x41bc00000000	                             mov r12d, 0	      7913	elf.c	FUNCTION_88	FOR_1	ELSE_3
0x40077e9	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      7948	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	CALL_25
0x40077ee	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      7948	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	CALL_25
0x40077f3	      0xe800000000	                          call 0x40077f8	      7948	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	CALL_25
0x40077f8	        0x89442428	             mov dword [rsp + 0x28], eax	      7948	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	CALL_25
0x40077fc	      0x3dfffeffff	                     cmp eax, 0xfffffeff	      7950	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17
0x4007801	     0xf8589000000	                           jne 0x4007890	      7950	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17
0x4007807	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      7961	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	CALL_26
0x400780c	          0x488b30	                    mov rsi, qword [rax]	      7961	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	CALL_26
0x400780f	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      7961	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	CALL_26
0x4007814	      0xe800000000	                          call 0x4007819	      7961	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	CALL_26
0x4007819	          0x4885c0	                           test rax, rax	      7962	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_18
0x400781c	            0x7418	                            je 0x4007836	      7962	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_18
0x400781e	          0x4889c6	                            mov rsi, rax	      7963	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	CALL_27
0x4007821	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      7963	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	CALL_27
0x4007826	      0xe800000000	                          call 0x400782b	      7963	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	CALL_27
0x400782b	        0x89442428	             mov dword [rsp + 0x28], eax	      7963	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	CALL_27
0x400782f	      0x3dfffeffff	                     cmp eax, 0xfffffeff	      7964	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19
0x4007834	            0x755a	                           jne 0x4007890	      7964	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19
0x4007836	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_28
0x400783b	          0x488b28	                    mov rbp, qword [rax]	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_28
0x400783e	        0x498b4500	                    mov rax, qword [r13]	      7970	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19
0x4007842	        0x488b5808	                mov rbx, qword [rax + 8]	      7970	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19
0x4007846	          0x4885db	                           test rbx, rbx	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_28
0x4007849	      0xb800000000	                              mov eax, 0	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_28
0x400784e	        0x480f44d8	                          cmove rbx, rax	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_28
0x4007852	      0xba05000000	                              mov edx, 5	      7968	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_29
0x4007857	      0xbe00000000	                              mov esi, 0	      7968	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_29
0x400785c	      0xbf00000000	                              mov edi, 0	      7968	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_29
0x4007861	      0xe800000000	                          call 0x4007866	      7968	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_29
0x4007866	          0x4889ea	                            mov rdx, rbp	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_28
0x4007869	          0x4889de	                            mov rsi, rbx	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_28
0x400786c	          0x4889c7	                            mov rdi, rax	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_28
0x400786f	      0xb800000000	                              mov eax, 0	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_28
0x4007874	      0xe800000000	                          call 0x4007879	      7967	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_28
0x4007879	      0xbf05000000	                              mov edi, 5	      7972	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_30
0x400787e	      0xe800000000	                          call 0x4007883	      7972	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_30
0x4007883	      0xe906fcffff	                           jmp 0x400748e	      7972	elf.c	FUNCTION_88	FOR_1	ELSE_3	ELSE_4	IF_17	IF_19	CALL_30
0x4007888	    0xc7442428f1ff	     mov dword [rsp + 0x28], 0xfffffff1 	      7942	elf.c	FUNCTION_88	FOR_1	ELSE_3	IF_15	SWITCH_1
0x4007890	      0xb806000000	                              mov eax, 6	      7982	elf.c	FUNCTION_88	FOR_1	IF_20
0x4007895	    0xf7c300000400	                       test ebx, 0x40000	      7981	elf.c	FUNCTION_88	FOR_1	IF_20
0x400789b	            0x7542	                           jne 0x40078df	      7981	elf.c	FUNCTION_88	FOR_1	IF_20
0x400789d	      0xb80a000000	                            mov eax, 0xa	      7984	elf.c	FUNCTION_88	FOR_1	ELSE_5	IF_21
0x40078a2	    0xf7c300004000	                      test ebx, 0x400000	      7983	elf.c	FUNCTION_88	FOR_1	ELSE_5	IF_21
0x40078a8	            0x7535	                           jne 0x40078df	      7983	elf.c	FUNCTION_88	FOR_1	ELSE_5	IF_21
0x40078aa	      0xb802000000	                              mov eax, 2	      7986	elf.c	FUNCTION_88	FOR_1	ELSE_6	IF_22
0x40078af	          0xf6c308	                              test bl, 8	      7985	elf.c	FUNCTION_88	FOR_1	ELSE_6	IF_22
0x40078b2	            0x752b	                           jne 0x40078df	      7985	elf.c	FUNCTION_88	FOR_1	ELSE_6	IF_22
0x40078b4	      0xb801000000	                              mov eax, 1	      7988	elf.c	FUNCTION_88	FOR_1	ELSE_7	IF_23
0x40078b9	    0xf7c300000100	                       test ebx, 0x10000	      7987	elf.c	FUNCTION_88	FOR_1	ELSE_7	IF_23
0x40078bf	            0x751e	                           jne 0x40078df	      7987	elf.c	FUNCTION_88	FOR_1	ELSE_7	IF_23
0x40078c1	      0xb808000000	                              mov eax, 8	      7990	elf.c	FUNCTION_88	FOR_1	ELSE_8	IF_24
0x40078c6	    0xf7c300000800	                       test ebx, 0x80000	      7989	elf.c	FUNCTION_88	FOR_1	ELSE_8	IF_24
0x40078cc	            0x7511	                           jne 0x40078df	      7989	elf.c	FUNCTION_88	FOR_1	ELSE_8	IF_24
0x40078ce	            0x89d8	                            mov eax, ebx	      7991	elf.c	FUNCTION_88	FOR_1	ELSE_9	IF_25
0x40078d0	      0x2500001000	                       and eax, 0x100000	      7991	elf.c	FUNCTION_88	FOR_1	ELSE_9	IF_25
0x40078d5	          0x83f801	                              cmp eax, 1	      7994	elf.c	FUNCTION_88	FOR_1	ELSE_10
0x40078d8	            0x19c0	                            sbb eax, eax	      7994	elf.c	FUNCTION_88	FOR_1	ELSE_10
0x40078da	            0xf7d0	                                 not eax	      7994	elf.c	FUNCTION_88	FOR_1	ELSE_10
0x40078dc	          0x83e009	                              and eax, 9	      7994	elf.c	FUNCTION_88	FOR_1	ELSE_10
0x40078df	        0x498b5500	                    mov rdx, qword [r13]	      7996	elf.c	FUNCTION_88	FOR_1	IF_26
0x40078e3	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      7996	elf.c	FUNCTION_88	FOR_1	IF_26
0x40078e7	          0x8b5220	            mov edx, dword [rdx + 0x20] 	      7996	elf.c	FUNCTION_88	FOR_1	IF_26
0x40078ea	    0x81e200040000	                          and edx, 0x400	      7996	elf.c	FUNCTION_88	FOR_1	IF_26
0x40078f0	      0xba06000000	                              mov edx, 6	      7997	elf.c	FUNCTION_88	FOR_1	IF_26
0x40078f5	           0xf45c2	                         cmovne eax, edx	      7997	elf.c	FUNCTION_88	FOR_1	IF_26
0x40078f8	          0x4885ed	                           test rbp, rbp	      8000	elf.c	FUNCTION_88	FOR_1	IF_27
0x40078fb	            0x7416	                            je 0x4007913	      8000	elf.c	FUNCTION_88	FOR_1	IF_27
0x40078fd	      0x488b742470	            mov rsi, qword [rsp + 0x70] 	      8001	elf.c	FUNCTION_88	FOR_1	IF_27
0x4007902	        0x488b5670	            mov rdx, qword [rsi + 0x70] 	      8001	elf.c	FUNCTION_88	FOR_1	IF_27
0x4007906	          0x4885d2	                           test rdx, rdx	      8001	elf.c	FUNCTION_88	FOR_1	IF_27
0x4007909	            0x7408	                            je 0x4007913	      8001	elf.c	FUNCTION_88	FOR_1	IF_27
0x400790b	        0x488d7d30	                   lea rdi, [rbp + 0x30]	      8002	elf.c	FUNCTION_88	FOR_1	IF_27
0x400790f	            0x89c6	                            mov esi, eax	      8002	elf.c	FUNCTION_88	FOR_1	IF_27
0x4007911	            0xffd2	                                call rdx	      8002	elf.c	FUNCTION_88	FOR_1	IF_27
0x4007913	      0x837c244000	               cmp dword [rsp + 0x40], 0	      8005	elf.c	FUNCTION_88	FOR_1	IF_28
0x4007918	            0x7413	                            je 0x400792d	      8005	elf.c	FUNCTION_88	FOR_1	IF_28
0x400791a	          0x83e302	                              and ebx, 2	      8007	elf.c	FUNCTION_88	FOR_1	IF_28	IF_29
0x400791d	          0x83fb01	                              cmp ebx, 1	      8010	elf.c	FUNCTION_88	FOR_1	IF_28	CALL_32
0x4007920	            0x19d2	                            sbb edx, edx	      8010	elf.c	FUNCTION_88	FOR_1	IF_28	CALL_32
0x4007922	          0x83e2f0	                     and edx, 0xfffffff0	      8010	elf.c	FUNCTION_88	FOR_1	IF_28	CALL_32
0x4007925	          0x83c213	                           add edx, 0x13	      8010	elf.c	FUNCTION_88	FOR_1	IF_28	CALL_32
0x4007928	      0xe9b0000000	                           jmp 0x40079dd	      8010	elf.c	FUNCTION_88	FOR_1	IF_28	CALL_32
0x400792d	        0x498b5500	                    mov rdx, qword [r13]	      8012	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30
0x4007931	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      8012	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30
0x4007935	        0xf6422110	           test byte [rdx + 0x21], 0x10 	      8012	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30
0x4007939	            0x7448	                            je 0x4007983	      8012	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30
0x400793b	          0x83f806	                              cmp eax, 6	      8014	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31
0x400793e	            0x743b	                            je 0x400797b	      8014	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31
0x4007940	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      8016	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x4007945	          0x8b4044	            mov eax, dword [rax + 0x44] 	      8016	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x4007948	        0x89442410	             mov dword [rsp + 0x10], eax	      8016	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x400794c	          0xc1e805	                              shr eax, 5	      8016	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x400794f	      0x25ffff0f00	                        and eax, 0xfffff	      8016	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x4007954	      0xa900000400	                       test eax, 0x40000	      8016	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x4007959	            0x7412	                            je 0x400796d	      8016	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x400795b	      0x2500000800	                        and eax, 0x80000	      8018	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x4007960	          0x83f801	                              cmp eax, 1	      8018	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x4007963	            0x19c0	                            sbb eax, eax	      8018	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x4007965	          0x83e0fc	                     and eax, 0xfffffffc	      8018	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x4007968	          0x83c005	                              add eax, 5	      8018	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x400796b	            0xeb0e	                           jmp 0x400797b	      8018	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	IF_32
0x400796d	          0x83e340	                           and ebx, 0x40	      8021	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	ELSE_13
0x4007970	          0x83fb01	                              cmp ebx, 1	      8021	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	ELSE_13
0x4007973	            0x19c0	                            sbb eax, eax	      8021	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	ELSE_13
0x4007975	          0x83e0fc	                     and eax, 0xfffffffc	      8021	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	ELSE_13
0x4007978	          0x83c005	                              add eax, 5	      8021	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	IF_31	ELSE_13
0x400797b	          0x83e00f	                            and eax, 0xf	      8023	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	CALL_33
0x400797e	          0x8d5010	                   lea edx, [rax + 0x10]	      8023	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	CALL_33
0x4007981	            0xeb5a	                           jmp 0x40079dd	      8023	elf.c	FUNCTION_88	FOR_1	ELSE_12	IF_30	CALL_33
0x4007983	    0x4881fa000000	                              cmp rdx, 0	      8025	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33
0x400798a	            0x7517	                           jne 0x40079a3	      8025	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33
0x400798c	    0x81e380000000	                           and ebx, 0x80	      8026	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_34
0x4007992	          0x83fb01	                              cmp ebx, 1	      8026	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_34
0x4007995	            0x19d2	                            sbb edx, edx	      8026	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_34
0x4007997	          0x83e2f0	                     and edx, 0xfffffff0	      8026	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_34
0x400799a	          0x83e00f	                            and eax, 0xf	      8026	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_34
0x400799d	        0x8d540220	            lea edx, [rdx + rax + 0x20] 	      8026	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_34
0x40079a1	            0xeb3a	                           jmp 0x40079dd	      8026	elf.c	FUNCTION_88	FOR_1	ELSE_14	IF_33	CALL_34
0x40079a3	      0xba04000000	                              mov edx, 4	      8031	elf.c	FUNCTION_88	FOR_1	ELSE_15	IF_34
0x40079a8	          0xf6c740	                           test bh, 0x40	      8030	elf.c	FUNCTION_88	FOR_1	ELSE_15	IF_34
0x40079ab	            0x7530	                           jne 0x40079dd	      8030	elf.c	FUNCTION_88	FOR_1	ELSE_15	IF_34
0x40079ad	      0xba00000000	                              mov edx, 0	      8037	elf.c	FUNCTION_88	FOR_1	ELSE_16	IF_35
0x40079b2	          0xf6c301	                              test bl, 1	      8036	elf.c	FUNCTION_88	FOR_1	ELSE_16	IF_35
0x40079b5	            0x751e	                           jne 0x40079d5	      8036	elf.c	FUNCTION_88	FOR_1	ELSE_16	IF_35
0x40079b7	      0xba0a000000	                            mov edx, 0xa	      8039	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_17	IF_36
0x40079bc	    0xf7c300008000	                      test ebx, 0x800000	      8038	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_17	IF_36
0x40079c2	            0x7511	                           jne 0x40079d5	      8038	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_17	IF_36
0x40079c4	      0xba02000000	                              mov edx, 2	      8041	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_18	IF_37
0x40079c9	          0xf6c380	                           test bl, 0x80	      8040	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_18	IF_37
0x40079cc	            0x7507	                           jne 0x40079d5	      8040	elf.c	FUNCTION_88	FOR_1	ELSE_16	ELSE_18	IF_37
0x40079ce	            0xd1eb	                              shr ebx, 1	      8037	elf.c	FUNCTION_88	FOR_1	ELSE_16	IF_35
0x40079d0	            0x89da	                            mov edx, ebx	      8037	elf.c	FUNCTION_88	FOR_1	ELSE_16	IF_35
0x40079d2	          0x83e201	                              and edx, 1	      8037	elf.c	FUNCTION_88	FOR_1	ELSE_16	IF_35
0x40079d5	          0xc1e204	                              shl edx, 4	      8045	elf.c	FUNCTION_88	FOR_1	ELSE_16	CALL_36
0x40079d8	          0x83e00f	                            and eax, 0xf	      8045	elf.c	FUNCTION_88	FOR_1	ELSE_16	CALL_36
0x40079db	             0x1c2	                            add edx, eax	      8045	elf.c	FUNCTION_88	FOR_1	ELSE_16	CALL_36
0x40079dd	          0x4885ed	                           test rbp, rbp	      8048	elf.c	FUNCTION_88	FOR_1	IF_39
0x40079e0	            0x740a	                            je 0x40079ec	      8048	elf.c	FUNCTION_88	FOR_1	IF_39
0x40079e2	         0xfb67549	           movzx esi, byte [rbp + 0x49] 	      8050	elf.c	FUNCTION_88	FOR_1	IF_39
0x40079e6	         0xfb64d4a	           movzx ecx, byte [rbp + 0x4a] 	      8052	elf.c	FUNCTION_88	FOR_1	IF_39
0x40079ea	            0xeb0a	                           jmp 0x40079f6	      8052	elf.c	FUNCTION_88	FOR_1	IF_39
0x40079ec	      0xb900000000	                              mov ecx, 0	      8057	elf.c	FUNCTION_88	FOR_1	ELSE_20
0x40079f1	      0xbe00000000	                              mov esi, 0	      8056	elf.c	FUNCTION_88	FOR_1	ELSE_20
0x40079f6	          0x4963c6	                        movsxd rax, r14d	      8061	elf.c	FUNCTION_88	FOR_1
0x40079f9	        0x488d0440	                  lea rax, [rax + rax*2]	      8061	elf.c	FUNCTION_88	FOR_1
0x40079fd	        0x48c1e004	                              shl rax, 4	      8061	elf.c	FUNCTION_88	FOR_1
0x4007a01	      0x4803442448	             add rax, qword [rsp + 0x48]	      8061	elf.c	FUNCTION_88	FOR_1
0x4007a06	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      8061	elf.c	FUNCTION_88	FOR_1
0x4007a0b	          0x488938	                    mov qword [rax], rdi	      8061	elf.c	FUNCTION_88	FOR_1
0x4007a0e	        0x4c896008	                mov qword [rax + 8], r12	      8061	elf.c	FUNCTION_88	FOR_1
0x4007a12	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      8061	elf.c	FUNCTION_88	FOR_1
0x4007a17	        0x48897810	             mov qword [rax + 0x10], rdi	      8061	elf.c	FUNCTION_88	FOR_1
0x4007a1b	          0x885018	               mov byte [rax + 0x18], dl	      8061	elf.c	FUNCTION_88	FOR_1
0x4007a1e	        0x40887019	              mov byte [rax + 0x19], sil	      8061	elf.c	FUNCTION_88	FOR_1
0x4007a22	          0x88481a	               mov byte [rax + 0x1a], cl	      8061	elf.c	FUNCTION_88	FOR_1
0x4007a25	        0x8b4c2428	            mov ecx, dword [rsp + 0x28] 	      8061	elf.c	FUNCTION_88	FOR_1
0x4007a29	          0x89481c	             mov dword [rax + 0x1c], ecx	      8061	elf.c	FUNCTION_88	FOR_1
0x4007a2c	        0x4c897020	             mov qword [rax + 0x20], r14	      8062	elf.c	FUNCTION_88	FOR_1
0x4007a30	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      8063	elf.c	FUNCTION_88	FOR_1
0x4007a35	        0x48897828	             mov qword [rax + 0x28], rdi	      8063	elf.c	FUNCTION_88	FOR_1
0x4007a39	        0x4983c601	                              add r14, 1	      8065	elf.c	FUNCTION_88	FOR_1
0x4007a3d	    0x48837c246001	               cmp qword [rsp + 0x60], 1	      8067	elf.c	FUNCTION_88	FOR_1	IF_40
0x4007a43	        0x4883dfff	             sbb rdi, 0xffffffffffffffff	      8067	elf.c	FUNCTION_88	FOR_1	IF_40
0x4007a47	      0x48897c2438	             mov qword [rsp + 0x38], rdi	      8067	elf.c	FUNCTION_88	FOR_1	IF_40
0x4007a4c	        0x4983c708	                              add r15, 8	      8067	elf.c	FUNCTION_88	FOR_1	IF_40
0x4007a50	      0x4c3b742478	            cmp r14, qword [rsp + 0x78] 	      7856	elf.c	FUNCTION_88	FOR_1
0x4007a55	     0xf857ffbffff	                           jne 0x40075da	      7856	elf.c	FUNCTION_88	FOR_1
0x4007a5b	      0x4c8b7c2450	            mov r15, qword [rsp + 0x50] 	      7856	elf.c	FUNCTION_88	FOR_1
0x4007a60	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      8071	elf.c	FUNCTION_88	CALL_37
0x4007a65	      0xe800000000	                          call 0x4007a6a	      8071	elf.c	FUNCTION_88	CALL_37
0x4007a6a	            0xeb0f	                           jmp 0x4007a7b	      8071	elf.c	FUNCTION_88	CALL_37
0x4007a6c	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      8071	elf.c	FUNCTION_88	CALL_37
0x4007a71	      0xe800000000	                          call 0x4007a76	      8071	elf.c	FUNCTION_88	CALL_37
0x4007a76	          0x4585ed	                         test r13d, r13d	      8074	elf.c	FUNCTION_88	FOR_2
0x4007a79	            0x787a	                            js 0x4007af5	      8074	elf.c	FUNCTION_88	FOR_2
0x4007a7b	      0xbd00000000	                              mov ebp, 0	      8056	elf.c	FUNCTION_88	FOR_1	ELSE_20
0x4007a80	      0x4c8b642470	            mov r12, qword [rsp + 0x70] 	      8056	elf.c	FUNCTION_88	FOR_1	ELSE_20
0x4007a85	    0x4c8bac249800	            mov r13, qword [rsp + 0x98] 	      8056	elf.c	FUNCTION_88	FOR_1	ELSE_20
0x4007a8d	      0x4c8b742460	            mov r14, qword [rsp + 0x60] 	      8056	elf.c	FUNCTION_88	FOR_1	ELSE_20
0x4007a92	          0x4863c5	                         movsxd rax, ebp	      8076	elf.c	FUNCTION_88	FOR_2
0x4007a95	        0x488d1c40	                  lea rbx, [rax + rax*2]	      8076	elf.c	FUNCTION_88	FOR_2
0x4007a99	        0x48c1e304	                              shl rbx, 4	      8076	elf.c	FUNCTION_88	FOR_2
0x4007a9d	      0x48035c2448	             add rbx, qword [rsp + 0x48]	      8076	elf.c	FUNCTION_88	FOR_2
0x4007aa2	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	      8077	elf.c	FUNCTION_88	FOR_2	IF_41
0x4007aa6	        0x4883feff	             cmp rsi, 0xffffffffffffffff	      8077	elf.c	FUNCTION_88	FOR_2	IF_41
0x4007aaa	            0x750a	                           jne 0x4007ab6	      8077	elf.c	FUNCTION_88	FOR_2	IF_41
0x4007aac	    0x48c743100000	               mov qword [rbx + 0x10], 0	      8078	elf.c	FUNCTION_88	FOR_2	IF_41
0x4007ab4	            0xeb0e	                           jmp 0x4007ac4	      8078	elf.c	FUNCTION_88	FOR_2	IF_41
0x4007ab6	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      8080	elf.c	FUNCTION_88	FOR_2	ELSE_21	CALL_38
0x4007abb	      0xe800000000	                          call 0x4007ac0	      8080	elf.c	FUNCTION_88	FOR_2	ELSE_21	CALL_38
0x4007ac0	        0x48894310	             mov qword [rbx + 0x10], rax	      8080	elf.c	FUNCTION_88	FOR_2	ELSE_21	CALL_38
0x4007ac4	    0x498b84240003	           mov rax, qword [r12 + 0x300] 	      8082	elf.c	FUNCTION_88	FOR_2	CALL_39
0x4007acc	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      8082	elf.c	FUNCTION_88	FOR_2	CALL_39
0x4007ad0	        0x498d0c96	                  lea rcx, [r14 + rdx*4]	      8082	elf.c	FUNCTION_88	FOR_2	CALL_39
0x4007ad4	         0xfb65005	               movzx edx, byte [rax + 5]	      8082	elf.c	FUNCTION_88	FOR_2	CALL_39
0x4007ad8	      0x480faf5320	            imul rdx, qword [rbx + 0x20]	      8082	elf.c	FUNCTION_88	FOR_2	CALL_39
0x4007add	          0x4c01ea	                            add rdx, r13	      8082	elf.c	FUNCTION_88	FOR_2	CALL_39
0x4007ae0	          0x4889de	                            mov rsi, rbx	      8082	elf.c	FUNCTION_88	FOR_2	CALL_39
0x4007ae3	          0x4c89ff	                            mov rdi, r15	      8082	elf.c	FUNCTION_88	FOR_2	CALL_39
0x4007ae6	          0xff5038	                 call qword [rax + 0x38]	      8082	elf.c	FUNCTION_88	FOR_2	CALL_39
0x4007ae9	          0x83c501	                              add ebp, 1	      8074	elf.c	FUNCTION_88	FOR_2
0x4007aec	    0x39ac248c0000	            cmp dword [rsp + 0x8c], ebp 	      8074	elf.c	FUNCTION_88	FOR_2
0x4007af3	            0x7d9d	                           jge 0x4007a92	      8074	elf.c	FUNCTION_88	FOR_2
0x4007af5	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      8090	elf.c	FUNCTION_88	CALL_40
0x4007afa	      0xe800000000	                          call 0x4007aff	      8090	elf.c	FUNCTION_88	CALL_40
0x4007aff	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      8093	elf.c	FUNCTION_88	CALL_41
0x4007b04	      0xe800000000	                          call 0x4007b09	      8093	elf.c	FUNCTION_88	CALL_41
0x4007b09	    0x488b8c249000	            mov rcx, qword [rsp + 0x90] 	      8093	elf.c	FUNCTION_88	CALL_41
0x4007b11	    0x488981280100	            mov qword [rcx + 0x128], rax	      8093	elf.c	FUNCTION_88	CALL_41
0x4007b18	    0xc7810c010000	              mov dword [rcx + 0x10c], 3	      8094	elf.c	FUNCTION_88
0x4007b22	      0x488b442470	            mov rax, qword [rsp + 0x70] 	      8095	elf.c	FUNCTION_88
0x4007b27	    0x488b80800300	           mov rax, qword [rax + 0x380] 	      8095	elf.c	FUNCTION_88
0x4007b2e	    0x488981100100	            mov qword [rcx + 0x110], rax	      8095	elf.c	FUNCTION_88
0x4007b35	    0x48c781180100	              mov qword [rcx + 0x118], 0	      8096	elf.c	FUNCTION_88
0x4007b40	    0x48c781400100	              mov qword [rcx + 0x140], 0	      8097	elf.c	FUNCTION_88
0x4007b4b	    0xc78130010000	              mov dword [rcx + 0x130], 0	      8098	elf.c	FUNCTION_88
0x4007b55	    0xc78134010000	              mov dword [rcx + 0x134], 0	      8099	elf.c	FUNCTION_88
0x4007b5f	    0x48c781380100	              mov qword [rcx + 0x138], 1	      8100	elf.c	FUNCTION_88
0x4007b6a	    0xc74424700100	               mov dword [rsp + 0x70], 1	      8100	elf.c	FUNCTION_88
0x4007b72	      0xe9371a0000	                           jmp 0x40095ae	      8100	elf.c	FUNCTION_88
0x4007b77	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      6076	elf.c	FUNCTION_73	IF_1	CALL_4
0x4007b7c	        0x488b6858	            mov rbp, qword [rax + 0x58] 	      6076	elf.c	FUNCTION_73	IF_1	CALL_4
0x4007b80	    0x8b90fc020000	           mov edx, dword [rax + 0x2fc] 	      6077	elf.c	FUNCTION_73	IF_1	CALL_5
0x4007b86	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      6083	elf.c	FUNCTION_73	IF_1
0x4007b89	          0x83fa01	                              cmp edx, 1	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x4007b8c	     0xf869a000000	                           jbe 0x4007c2c	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x4007b92	        0x448d62fe	                     lea r12d, [rdx - 2]	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x4007b96	        0x4983c401	                              add r12, 1	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x4007b9a	      0xbb00000000	                              mov ebx, 0	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x4007b9f	    0x49c7c5ffffff	             mov r13, 0xffffffffffffffff	      6104	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x4007ba6	          0x8d4b01	                      lea ecx, [rbx + 1]	      6104	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x4007ba9	      0x488b7cdd08	       mov rdi, qword [rbp + rbx*8 + 8] 	      6092	elf.c	FUNCTION_73	IF_1	FOR_1
0x4007bae	          0x8b5704	                mov edx, dword [rdi + 4]	      6093	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x4007bb1	          0x83fa09	                              cmp edx, 9	      6093	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x4007bb4	            0x7405	                            je 0x4007bbb	      6093	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x4007bb6	          0x83fa04	                              cmp edx, 4	      6093	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x4007bb9	            0x750b	                           jne 0x4007bc6	      6093	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x4007bbb	        0x488b5740	            mov rdx, qword [rdi + 0x40] 	      6094	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x4007bbf	          0x4885d2	                           test rdx, rdx	      6094	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x4007bc2	            0x750b	                           jne 0x4007bcf	      6094	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x4007bc4	            0xeb46	                           jmp 0x4007c0c	      6094	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x4007bc6	        0x488b5740	            mov rdx, qword [rdi + 0x40] 	      6095	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x4007bca	          0x4885d2	                           test rdx, rdx	      6095	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x4007bcd	            0x7406	                            je 0x4007bd5	      6095	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x4007bcf	        0xf6422308	               test byte [rdx + 0x23], 8	      6096	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x4007bd3	            0x7537	                           jne 0x4007c0c	      6096	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x4007bd5	    0x498b97f80000	            mov rdx, qword [r15 + 0xf8] 	      6098	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_6
0x4007bdc	    0x398a780c0000	           cmp dword [rdx + 0xc78], ecx 	      6098	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_6
0x4007be2	            0x7428	                            je 0x4007c0c	      6098	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_6
0x4007be4	    0x4c8b82e80200	            mov r8, qword [rdx + 0x2e8] 	      6099	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_7
0x4007beb	          0x4d85c0	                             test r8, r8	      6099	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_7
0x4007bee	            0x740b	                            je 0x4007bfb	      6099	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_7
0x4007bf0	        0x458b4050	              mov r8d, dword [r8 + 0x50]	      6100	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_8
0x4007bf4	      0x4a3b7cc500	             cmp rdi, qword [rbp + r8*8]	      6100	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_8
0x4007bf9	            0x7411	                            je 0x4007c0c	      6100	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_8
0x4007bfb	    0x488b92980c00	           mov rdx, qword [rdx + 0xc98] 	      6101	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_9
0x4007c02	          0x394a50	            cmp dword [rdx + 0x50], ecx 	      6101	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_9
0x4007c05	            0x7405	                            je 0x4007c0c	      6101	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_9
0x4007c07	          0x394a4c	            cmp dword [rdx + 0x4c], ecx 	      6102	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_10
0x4007c0a	            0x7506	                           jne 0x4007c12	      6102	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2	CALL_10
0x4007c0c	        0x4c896f18	             mov qword [rdi + 0x18], r13	      6104	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x4007c10	            0xeb0d	                           jmp 0x4007c1f	      6104	elf.c	FUNCTION_73	IF_1	FOR_1	IF_2
0x4007c12	      0xba01000000	                              mov edx, 1	      6107	elf.c	FUNCTION_73	IF_1	FOR_1	CALL_11
0x4007c17	          0x4889c6	                            mov rsi, rax	      6107	elf.c	FUNCTION_73	IF_1	FOR_1	CALL_11
0x4007c1a	      0xe800000000	                          call 0x4007c1f	      6107	elf.c	FUNCTION_73	IF_1	FOR_1	CALL_11
0x4007c1f	        0x4883c301	                              add rbx, 1	      6107	elf.c	FUNCTION_73	IF_1	FOR_1	CALL_11
0x4007c23	          0x4939dc	                            cmp r12, rbx	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x4007c26	     0xf857affffff	                           jne 0x4007ba6	      6088	elf.c	FUNCTION_73	IF_1	FOR_1
0x4007c2c	    0x498b97f80000	            mov rdx, qword [r15 + 0xf8] 	      6110	elf.c	FUNCTION_73	IF_1	CALL_12
0x4007c33	    0x488b92980c00	           mov rdx, qword [rdx + 0xc98] 	      6110	elf.c	FUNCTION_73	IF_1	CALL_12
0x4007c3a	        0x48894240	             mov qword [rdx + 0x40], rax	      6110	elf.c	FUNCTION_73	IF_1	CALL_12
0x4007c3e	      0xe958160000	                           jmp 0x400929b	      6110	elf.c	FUNCTION_73	IF_1	CALL_12
0x4007c43	      0xbe00000000	                              mov esi, 0	      5263	elf.c	FUNCTION_70	IF_1	CALL_2
0x4007c48	          0x4c89ff	                            mov rdi, r15	      5263	elf.c	FUNCTION_70	IF_1	CALL_2
0x4007c4b	      0xe800000000	                          call 0x4007c50	      5263	elf.c	FUNCTION_70	IF_1	CALL_2
0x4007c50	            0x85c0	                           test eax, eax	      5263	elf.c	FUNCTION_70	IF_1	CALL_2
0x4007c52	     0xf843c170000	                            je 0x4009394	      5263	elf.c	FUNCTION_70	IF_1	CALL_2
0x4007c58	    0x498b8ff80000	            mov rcx, qword [r15 + 0xf8] 	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x4007c5f	    0x488b81980c00	           mov rax, qword [rcx + 0xc98] 	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x4007c66	          0x488b00	                    mov rax, qword [rax]	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x4007c69	          0x4885c0	                           test rax, rax	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x4007c6c	            0x7452	                            je 0x4007cc0	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x4007c6e	      0xbb00000000	                              mov ebx, 0	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x4007c73	      0xbe00000000	                              mov esi, 0	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x4007c78	          0x83c601	                              add esi, 1	      5269	elf.c	FUNCTION_70	FOR_1
0x4007c7b	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5270	elf.c	FUNCTION_70	FOR_1	IF_2
0x4007c7f	          0x4885d2	                           test rdx, rdx	      5271	elf.c	FUNCTION_70	FOR_1	IF_2
0x4007c82	        0x480f45da	                         cmovne rbx, rdx	      5271	elf.c	FUNCTION_70	FOR_1	IF_2
0x4007c86	          0x488b00	                    mov rax, qword [rax]	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x4007c89	          0x4885c0	                           test rax, rax	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x4007c8c	            0x75ea	                           jne 0x4007c78	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x4007c8e	        0x89742450	             mov dword [rsp + 0x50], esi	      5267	elf.c	FUNCTION_70	FOR_1	CALL_3
0x4007c92	            0x85f6	                           test esi, esi	      5274	elf.c	FUNCTION_70	IF_3
0x4007c94	            0x7437	                            je 0x4007ccd	      5274	elf.c	FUNCTION_70	IF_3
0x4007c96	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      5276	elf.c	FUNCTION_70	IF_3	CALL_4
0x4007c9b	    0x488b87000300	           mov rax, qword [rdi + 0x300] 	      5276	elf.c	FUNCTION_70	IF_3	CALL_4
0x4007ca2	           0xfb600	                   movzx eax, byte [rax]	      5276	elf.c	FUNCTION_70	IF_3	CALL_4
0x4007ca5	        0x48894118	             mov qword [rcx + 0x18], rax	      5276	elf.c	FUNCTION_70	IF_3	CALL_4
0x4007ca9	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5277	elf.c	FUNCTION_70	IF_3	CALL_5
0x4007cb0	    0x488b97000300	           mov rdx, qword [rdi + 0x300] 	      5277	elf.c	FUNCTION_70	IF_3	CALL_5
0x4007cb7	         0xfb65201	               movzx edx, byte [rdx + 1]	      5277	elf.c	FUNCTION_70	IF_3	CALL_5
0x4007cbb	          0x895040	             mov dword [rax + 0x40], edx	      5277	elf.c	FUNCTION_70	IF_3	CALL_5
0x4007cbe	            0xeb23	                           jmp 0x4007ce3	      5277	elf.c	FUNCTION_70	IF_3	CALL_5
0x4007cc0	      0xbb00000000	                              mov ebx, 0	      5260	elf.c	FUNCTION_70
0x4007cc5	    0xc74424500000	               mov dword [rsp + 0x50], 0	      5266	elf.c	FUNCTION_70
0x4007ccd	    0x48c741180000	               mov qword [rcx + 0x18], 0	      5282	elf.c	FUNCTION_70	ELSE_1	CALL_6
0x4007cd5	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5283	elf.c	FUNCTION_70	ELSE_1	CALL_7
0x4007cdc	    0xc74040000000	               mov dword [rax + 0x40], 0	      5283	elf.c	FUNCTION_70	ELSE_1	CALL_7
0x4007ce3	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5286	elf.c	FUNCTION_70	CALL_8
0x4007cea	        0x8b7c2450	            mov edi, dword [rsp + 0x50] 	      5286	elf.c	FUNCTION_70	CALL_8
0x4007cee	          0x897844	             mov dword [rax + 0x44], edi	      5286	elf.c	FUNCTION_70	CALL_8
0x4007cf1	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5288	elf.c	FUNCTION_70	IF_4	CALL_9
0x4007cf8	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5288	elf.c	FUNCTION_70	IF_4	CALL_9
0x4007cff	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5288	elf.c	FUNCTION_70	IF_4	CALL_9
0x4007d03	        0x4883faff	             cmp rdx, 0xffffffffffffffff	      5288	elf.c	FUNCTION_70	IF_4	CALL_9
0x4007d07	            0x751b	                           jne 0x4007d24	      5288	elf.c	FUNCTION_70	IF_4	CALL_9
0x4007d09	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	      5289	elf.c	FUNCTION_70	CALL_10
0x4007d0e	    0x488b96000300	           mov rdx, qword [rsi + 0x300] 	      5289	elf.c	FUNCTION_70	CALL_10
0x4007d15	         0xfb65201	               movzx edx, byte [rdx + 1]	      5289	elf.c	FUNCTION_70	CALL_10
0x4007d19	           0xfafd7	                           imul edx, edi	      5289	elf.c	FUNCTION_70	CALL_10
0x4007d1c	            0x89d6	                            mov esi, edx	      5289	elf.c	FUNCTION_70	CALL_10
0x4007d1e	        0x48897038	             mov qword [rax + 0x38], rsi	      5289	elf.c	FUNCTION_70	CALL_10
0x4007d22	            0xeb29	                           jmp 0x4007d4d	      5289	elf.c	FUNCTION_70	CALL_10
0x4007d24	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x4007d29	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x4007d30	         0xfb64001	               movzx eax, byte [rax + 1]	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x4007d34	       0xfaf442450	            imul eax, dword [rsp + 0x50]	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x4007d39	          0x4839c2	                            cmp rdx, rax	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x4007d3c	            0x730f	                           jae 0x4007d4d	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x4007d3e	      0xbeac140000	                         mov esi, 0x14ac	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x4007d43	      0xbf00000000	                              mov edi, 0	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x4007d48	      0xe800000000	                          call 0x4007d4d	      5291	elf.c	FUNCTION_70	ELSE_2	CALL_12
0x4007d4d	      0x837c245000	               cmp dword [rsp + 0x50], 0	      5294	elf.c	FUNCTION_70	IF_5
0x4007d52	            0x7526	                           jne 0x4007d7a	      5294	elf.c	FUNCTION_70	IF_5
0x4007d54	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5296	elf.c	FUNCTION_70	IF_5	CALL_13
0x4007d5b	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5296	elf.c	FUNCTION_70	IF_5	CALL_13
0x4007d62	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	      5296	elf.c	FUNCTION_70	IF_5	CALL_13
0x4007d67	    0x488b96000300	           mov rdx, qword [rsi + 0x300] 	      5296	elf.c	FUNCTION_70	IF_5	CALL_13
0x4007d6e	           0xfb612	                   movzx edx, byte [rdx]	      5296	elf.c	FUNCTION_70	IF_5	CALL_13
0x4007d71	        0x48895040	             mov qword [rax + 0x40], rdx	      5296	elf.c	FUNCTION_70	IF_5	CALL_13
0x4007d75	      0xe9ab170000	                           jmp 0x4009525	      5296	elf.c	FUNCTION_70	IF_5	CALL_13
0x4007d7a	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5309	elf.c	FUNCTION_70	CALL_15
0x4007d81	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5309	elf.c	FUNCTION_70	CALL_15
0x4007d88	      0x488b4c2440	            mov rcx, qword [rsp + 0x40] 	      5309	elf.c	FUNCTION_70	CALL_15
0x4007d8d	    0x488b91000300	           mov rdx, qword [rcx + 0x300] 	      5309	elf.c	FUNCTION_70	CALL_15
0x4007d94	         0xfb64a01	               movzx ecx, byte [rdx + 1]	      5309	elf.c	FUNCTION_70	CALL_15
0x4007d98	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5309	elf.c	FUNCTION_70	CALL_15
0x4007d9c	      0xba00000000	                              mov edx, 0	      5309	elf.c	FUNCTION_70	CALL_15
0x4007da1	          0x48f7f1	                                 div rcx	      5309	elf.c	FUNCTION_70	CALL_15
0x4007da4	          0x4885d2	                           test rdx, rdx	      5309	elf.c	FUNCTION_70	CALL_15
0x4007da7	            0x740f	                            je 0x4007db8	      5309	elf.c	FUNCTION_70	CALL_15
0x4007da9	      0xbebe140000	                         mov esi, 0x14be	      5309	elf.c	FUNCTION_70	CALL_15
0x4007dae	      0xbf00000000	                              mov edi, 0	      5309	elf.c	FUNCTION_70	CALL_15
0x4007db3	      0xe800000000	                          call 0x4007db8	      5309	elf.c	FUNCTION_70	CALL_15
0x4007db8	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5313	elf.c	FUNCTION_70	CALL_17
0x4007dbf	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5313	elf.c	FUNCTION_70	CALL_17
0x4007dc6	      0x4c8b742440	            mov r14, qword [rsp + 0x40] 	      5313	elf.c	FUNCTION_70	CALL_17
0x4007dcb	    0x498b96000300	           mov rdx, qword [r14 + 0x300] 	      5313	elf.c	FUNCTION_70	CALL_17
0x4007dd2	         0xfb64a01	               movzx ecx, byte [rdx + 1]	      5311	elf.c	FUNCTION_70
0x4007dd6	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5311	elf.c	FUNCTION_70
0x4007dda	      0xba00000000	                              mov edx, 0	      5311	elf.c	FUNCTION_70
0x4007ddf	          0x48f7f1	                                 div rcx	      5311	elf.c	FUNCTION_70
0x4007de2	          0x4889c6	                            mov rsi, rax	      5311	elf.c	FUNCTION_70
0x4007de5	      0xba40000000	                           mov edx, 0x40	      5311	elf.c	FUNCTION_70
0x4007dea	          0x4c89ff	                            mov rdi, r15	      5311	elf.c	FUNCTION_70
0x4007ded	      0xe800000000	                          call 0x4007df2	      5311	elf.c	FUNCTION_70
0x4007df2	          0x4989c4	                            mov r12, rax	      5311	elf.c	FUNCTION_70
0x4007df5	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5315	elf.c	FUNCTION_70	CALL_18
0x4007dfc	        0x4c896060	             mov qword [rax + 0x60], r12	      5315	elf.c	FUNCTION_70	CALL_18
0x4007e00	          0x4d85e4	                           test r12, r12	      5316	elf.c	FUNCTION_70	IF_6
0x4007e03	     0xf848b150000	                            je 0x4009394	      5316	elf.c	FUNCTION_70	IF_6
0x4007e09	    0x48c744247801	               mov qword [rsp + 0x78], 1	      5319	elf.c	FUNCTION_70
0x4007e12	      0x41f6474520	           test byte [r15 + 0x45], 0x20 	      5320	elf.c	FUNCTION_70	IF_7
0x4007e17	            0x7409	                            je 0x4007e22	      5320	elf.c	FUNCTION_70	IF_7
0x4007e19	        0x498b4610	            mov rax, qword [r14 + 0x10] 	      5321	elf.c	FUNCTION_70	IF_7
0x4007e1d	      0x4889442478	             mov qword [rsp + 0x78], rax	      5321	elf.c	FUNCTION_70	IF_7
0x4007e22	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      5323	elf.c	FUNCTION_70
0x4007e27	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      5323	elf.c	FUNCTION_70
0x4007e2e	           0xfb610	                   movzx edx, byte [rax]	      5323	elf.c	FUNCTION_70
0x4007e31	         0xfb64001	               movzx eax, byte [rax + 1]	      5325	elf.c	FUNCTION_70	IF_8
0x4007e35	       0xfaf442450	            imul eax, dword [rsp + 0x50]	      5325	elf.c	FUNCTION_70	IF_8
0x4007e3a	          0x4801d0	                            add rax, rdx	      5325	elf.c	FUNCTION_70	IF_8
0x4007e3d	          0x4889d9	                            mov rcx, rbx	      5328	elf.c	FUNCTION_70	ELSE_3
0x4007e40	          0x4829c1	                            sub rcx, rax	      5328	elf.c	FUNCTION_70	ELSE_3
0x4007e43	          0x4839d8	                            cmp rax, rbx	      5328	elf.c	FUNCTION_70	ELSE_3
0x4007e46	      0xba00000000	                              mov edx, 0	      5328	elf.c	FUNCTION_70	ELSE_3
0x4007e4b	        0x480f46d1	                         cmovbe rdx, rcx	      5328	elf.c	FUNCTION_70	ELSE_3
0x4007e4f	    0x488994248000	             mov qword [rsp + 0x80], rdx	      5328	elf.c	FUNCTION_70	ELSE_3
0x4007e57	          0x4801d0	                            add rax, rdx	      5329	elf.c	FUNCTION_70	ELSE_3
0x4007e5a	      0x4889442418	             mov qword [rsp + 0x18], rax	      5329	elf.c	FUNCTION_70	ELSE_3
0x4007e5f	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x4007e66	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x4007e6d	          0x4c8b30	                    mov r14, qword [rax]	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x4007e70	          0x4d85f6	                           test r14, r14	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x4007e73	     0xf845d0c0000	                            je 0x4008ad6	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x4007e79	    0xc74424600000	               mov dword [rsp + 0x60], 0	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x4007e81	    0xc784248c0000	               mov dword [rsp + 0x8c], 0	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x4007e8c	          0x4d89f5	                            mov r13, r14	        64	stdio2.h	FUNCTION_206	CALL_1
0x4007e8f	      0x4c897c2428	             mov qword [rsp + 0x28], r15	        64	stdio2.h	FUNCTION_206	CALL_1
0x4007e94	          0x4d89e7	                            mov r15, r12	        64	stdio2.h	FUNCTION_206	CALL_1
0x4007e97	        0x418b7544	            mov esi, dword [r13 + 0x44] 	      5344	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9
0x4007e9b	          0x83fe01	                              cmp esi, 1	      5344	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9
0x4007e9e	            0x762f	                           jbe 0x4007ecf	      5344	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9
0x4007ea0	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5345	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_20
0x4007ea5	    0x488b80f80000	            mov rax, qword [rax + 0xf8] 	      5345	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_20
0x4007eac	      0x6683783804	                cmp word [rax + 0x38], 4	      5345	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_20
0x4007eb1	            0x7507	                           jne 0x4007eba	      5345	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_20
0x4007eb3	      0x49837d0804	                  cmp qword [r13 + 8], 4	      5345	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_20
0x4007eb8	            0x7415	                            je 0x4007ecf	      5345	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_20
0x4007eba	            0x89f6	                            mov esi, esi	      5347	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_21
0x4007ebc	        0x498d7d48	                   lea rdi, [r13 + 0x48]	      5347	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_21
0x4007ec0	      0xb900000000	                              mov ecx, 0	      5347	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_21
0x4007ec5	      0xba08000000	                              mov edx, 8	      5347	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_21
0x4007eca	      0xe800000000	                          call 0x4007ecf	      5347	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_9	CALL_21
0x4007ecf	        0x498b4508	                mov rax, qword [r13 + 8]	      5355	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x4007ed3	          0x498907	                    mov qword [r15], rax	      5355	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x4007ed6	        0x498b5510	            mov rdx, qword [r13 + 0x10] 	      5356	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x4007eda	        0x49895708	                mov qword [r15 + 8], rdx	      5356	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x4007ede	      0x41837d4400	               cmp dword [r13 + 0x44], 0	      5358	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_10
0x4007ee3	            0x750a	                           jne 0x4007eef	      5358	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_10
0x4007ee5	    0x49c747180000	               mov qword [r15 + 0x18], 0	      5359	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_10
0x4007eed	            0xeb10	                           jmp 0x4007eff	      5359	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_10
0x4007eef	        0x498b5548	            mov rdx, qword [r13 + 0x48] 	      5361	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_4
0x4007ef3	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	      5361	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_4
0x4007ef7	        0x492b5520	             sub rdx, qword [r13 + 0x20]	      5361	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_4
0x4007efb	        0x49895718	             mov qword [r15 + 0x18], rdx	      5361	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_4
0x4007eff	      0x41f6454002	               test byte [r13 + 0x40], 2	      5363	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x4007f04	            0x740a	                            je 0x4007f10	      5363	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x4007f06	        0x498b5518	            mov rdx, qword [r13 + 0x18] 	      5364	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x4007f0a	        0x49895720	             mov qword [r15 + 0x20], rdx	      5364	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x4007f0e	            0xeb21	                           jmp 0x4007f31	      5364	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_11
0x4007f10	      0x41837d4400	               cmp dword [r13 + 0x44], 0	      5365	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_5	IF_12
0x4007f15	            0x750a	                           jne 0x4007f21	      5365	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_5	IF_12
0x4007f17	    0x49c747200000	               mov qword [r15 + 0x20], 0	      5366	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_5	IF_12
0x4007f1f	            0xeb10	                           jmp 0x4007f31	      5366	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_5	IF_12
0x4007f21	        0x498b5548	            mov rdx, qword [r13 + 0x48] 	      5368	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6
0x4007f25	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	      5368	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6
0x4007f29	        0x492b5520	             sub rdx, qword [r13 + 0x20]	      5368	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6
0x4007f2d	        0x49895720	             mov qword [r15 + 0x20], rdx	      5368	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6
0x4007f31	        0x4883f801	                              cmp rax, 1	      5370	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x4007f35	            0x752e	                           jne 0x4007f65	      5370	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x4007f37	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      5371	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x4007f3c	        0xf6474520	           test byte [rdi + 0x45], 0x20 	      5371	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x4007f40	            0x7423	                            je 0x4007f65	      5371	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x4007f42	      0x41f6454004	               test byte [r13 + 0x40], 4	      5381	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13	IF_14
0x4007f47	            0x7409	                            je 0x4007f52	      5381	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13	IF_14
0x4007f49	        0x498b4528	            mov rax, qword [r13 + 0x28] 	      5382	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13	IF_14
0x4007f4d	      0x4889442478	             mov qword [rsp + 0x78], rax	      5382	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13	IF_14
0x4007f52	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      5384	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x4007f57	        0x49894738	             mov qword [r15 + 0x38], rax	      5384	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x4007f5b	    0x8384248c0000	               add dword [rsp + 0x8c], 1	      5385	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x4007f63	            0xeb4a	                           jmp 0x4007faf	      5385	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_6	IF_13
0x4007f65	      0x41f6454004	               test byte [r13 + 0x40], 4	      5387	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_7	IF_15
0x4007f6a	            0x740a	                            je 0x4007f76	      5387	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_7	IF_15
0x4007f6c	        0x498b5528	            mov rdx, qword [r13 + 0x28] 	      5388	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_7	IF_15
0x4007f70	        0x49895738	             mov qword [r15 + 0x38], rdx	      5388	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_7	IF_15
0x4007f74	            0xeb2f	                           jmp 0x4007fa5	      5388	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_7	IF_15
0x4007f76	      0x41837d4400	               cmp dword [r13 + 0x44], 0	      5389	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x4007f7b	            0x7520	                           jne 0x4007f9d	      5389	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x4007f7d	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x4007f82	    0x488b96000300	           mov rdx, qword [rsi + 0x300] 	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x4007f89	         0xfb64a0b	            movzx ecx, byte [rdx + 0xb] 	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x4007f8d	      0xba01000000	                              mov edx, 1	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x4007f92	            0xd3e2	                             shl edx, cl	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x4007f94	          0x4863d2	                         movsxd rdx, edx	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x4007f97	        0x49895738	             mov qword [r15 + 0x38], rdx	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x4007f9b	            0xeb08	                           jmp 0x4007fa5	      5390	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_8	IF_16
0x4007f9d	    0x49c747380000	               mov qword [r15 + 0x38], 0	      5392	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x4007fa5	        0x4883f801	                              cmp rax, 1	      5396	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x4007fa9	     0xf856b010000	                           jne 0x400811a	      5396	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x4007faf	        0x418b5544	            mov edx, dword [r13 + 0x44] 	      5397	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x4007fb3	            0x85d2	                           test edx, edx	      5397	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x4007fb5	     0xf8409020000	                            je 0x40081c4	      5397	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x4007fbb	      0x41f6454004	               test byte [r13 + 0x40], 4	      5402	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_18
0x4007fc0	            0x7409	                            je 0x4007fcb	      5402	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_18
0x4007fc2	        0x498b7738	            mov rsi, qword [r15 + 0x38] 	      5403	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_18
0x4007fc6	      0xe91f150000	                           jmp 0x40094ea	      5403	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_18
0x4007fcb	        0x498d4548	                   lea rax, [r13 + 0x48]	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x4007fcf	          0x8d52ff	                      lea edx, [rdx - 1]	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x4007fd2	      0x488d74d008	              lea rsi, [rax + rdx*8 + 8]	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x4007fd7	      0xb900000000	                              mov ecx, 0	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x4007fdc	          0x488b10	                    mov rdx, qword [rax]	      5410	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x4007fdf	          0x8b5270	            mov edx, dword [rdx + 0x70] 	      5410	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x4007fe2	            0x39d1	                            cmp ecx, edx	      5410	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x4007fe4	           0xf42ca	                          cmovb ecx, edx	      5410	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x4007fe7	        0x4883c008	                              add rax, 8	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x4007feb	          0x4839f0	                            cmp rax, rsi	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x4007fee	            0x75ec	                           jne 0x4007fdc	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x4007ff0	      0xbe01000000	                              mov esi, 1	      5414	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10
0x4007ff5	          0x48d3e6	                             shl rsi, cl	      5414	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10
0x4007ff8	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      5414	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10
0x4007ffd	          0x4839c6	                            cmp rsi, rax	      5414	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10
0x4008000	        0x480f42f0	                          cmovb rsi, rax	      5414	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10
0x4008004	      0xe9e1140000	                           jmp 0x40094ea	      5414	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10
0x4008009	            0x89c2	                            mov edx, eax	      5420	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4	IF_21
0x400800b	      0x498b54d548	    mov rdx, qword [r13 + rdx*8 + 0x48] 	      5420	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4	IF_21
0x4008010	    0xf74220020100	         test dword [rdx + 0x20], 0x102 	      5420	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4	IF_21
0x4008017	            0x750e	                           jne 0x4008027	      5420	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4	IF_21
0x4008019	    0x488b92e00000	            mov rdx, qword [rdx + 0xe0] 	      5424	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4	IF_21
0x4008020	    0xc74204080000	                  mov dword [rdx + 4], 8	      5424	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4	IF_21
0x4008027	          0x83c001	                              add eax, 1	      5419	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4
0x400802a	        0x418b5544	            mov edx, dword [r13 + 0x44] 	      5419	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4
0x400802e	            0x39d0	                            cmp eax, edx	      5419	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4
0x4008030	            0x72d7	                            jb 0x4008009	      5419	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_4
0x4008032	            0x85d2	                           test edx, edx	      5429	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5
0x4008034	            0x743f	                            je 0x4008075	      5429	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5
0x4008036	        0x498b4548	            mov rax, qword [r13 + 0x48] 	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_23
0x400803a	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_23
0x4008041	        0x83780408	                  cmp dword [rax + 4], 8	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_23
0x4008045	            0x7535	                           jne 0x400807c	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_23
0x4008047	        0x498d4550	                   lea rax, [r13 + 0x50]	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_23
0x400804b	          0x8d52ff	                      lea edx, [rdx - 1]	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_23
0x400804e	      0x498d4cd550	          lea rcx, [r13 + rdx*8 + 0x50] 	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_23
0x4008053	            0xeb14	                           jmp 0x4008069	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_23
0x4008055	          0x488b10	                    mov rdx, qword [rax]	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_23
0x4008058	    0x488b92e00000	            mov rdx, qword [rdx + 0xe0] 	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_23
0x400805f	        0x4883c008	                              add rax, 8	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_23
0x4008063	        0x837a0408	                  cmp dword [rdx + 4], 8	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_23
0x4008067	            0x751a	                           jne 0x4008083	      5430	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22	CALL_23
0x4008069	          0x4839c1	                            cmp rcx, rax	      5429	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5
0x400806c	            0x75e7	                           jne 0x4008055	      5429	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5
0x400806e	      0xb901000000	                              mov ecx, 1	      5428	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x4008073	            0xeb13	                           jmp 0x4008088	      5428	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x4008075	      0xb901000000	                              mov ecx, 1	      5428	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x400807a	            0xeb0c	                           jmp 0x4008088	      5428	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x400807c	      0xb900000000	                              mov ecx, 0	      5432	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22
0x4008081	            0xeb05	                           jmp 0x4008088	      5432	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22
0x4008083	      0xb900000000	                              mov ecx, 0	      5432	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	FOR_5	IF_22
0x4008088	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      5436	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	CALL_24
0x400808d	          0x4885f6	                           test rsi, rsi	      5195	elf.c	FUNCTION_67	IF_1
0x4008090	      0xb801000000	                              mov eax, 1	      5195	elf.c	FUNCTION_67	IF_1
0x4008095	        0x480f44f0	                          cmove rsi, rax	      5195	elf.c	FUNCTION_67	IF_1
0x4008099	        0x498b4718	            mov rax, qword [r15 + 0x18] 	      5196	elf.c	FUNCTION_67
0x400809d	          0x4829f8	                            sub rax, rdi	      5196	elf.c	FUNCTION_67
0x40080a0	      0xba00000000	                              mov edx, 0	      5196	elf.c	FUNCTION_67
0x40080a5	          0x48f7f6	                                 div rsi	      5196	elf.c	FUNCTION_67
0x40080a8	      0x4889542448	             mov qword [rsp + 0x48], rdx	      5196	elf.c	FUNCTION_67
0x40080ad	    0x83bc248c0000	               cmp dword [rsp + 0x8c], 1	      5441	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40080b5	            0x7641	                           jbe 0x40080f8	      5441	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40080b7	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      5442	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40080bc	    0x80b88a030000	               cmp byte [rax + 0x38a], 0	      5442	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40080c3	            0x7933	                           jns 0x40080f8	      5442	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40080c5	      0x4c8b542478	            mov r10, qword [rsp + 0x78] 	      5443	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40080ca	          0x4c89d0	                            mov rax, r10	      5443	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40080cd	        0x4883e801	                              sub rax, 1	      5443	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40080d1	          0x4885f8	                           test rax, rdi	      5443	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40080d4	            0x7422	                            je 0x40080f8	      5443	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40080d6	        0x488d3417	                    lea rsi, [rdi + rdx]	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40080da	          0x4831fe	                            xor rsi, rdi	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40080dd	          0x4c89d0	                            mov rax, r10	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40080e0	          0x48f7d8	                                 neg rax	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40080e3	          0x4821c6	                            and rsi, rax	      5444	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40080e6	          0x4c89d0	                            mov rax, r10	      5445	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40080e9	          0x4801d0	                            add rax, rdx	      5445	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40080ec	          0x4885f6	                           test rsi, rsi	      5445	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40080ef	        0x480f45c2	                         cmovne rax, rdx	      5445	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40080f3	      0x4889442448	             mov qword [rsp + 0x48], rax	      5445	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	IF_23
0x40080f8	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      5446	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x40080fd	          0x4801f7	                            add rdi, rsi	      5446	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x4008100	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      5446	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17
0x4008105	            0x85c9	                           test ecx, ecx	      5459	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_11
0x4008107	      0xb800000000	                              mov eax, 0	      5459	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_11
0x400810c	        0x480f45c6	                         cmovne rax, rsi	      5459	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_11
0x4008110	      0x4889442448	             mov qword [rsp + 0x48], rax	      5459	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_11
0x4008115	      0xe9f8000000	                           jmp 0x4008212	      5459	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_11
0x400811a	        0x4883f802	                              cmp rax, 2	      5463	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25
0x400811e	            0x7564	                           jne 0x4008184	      5463	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25
0x4008120	      0x41837d4401	               cmp dword [r13 + 0x44], 1	      5464	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25
0x4008125	     0xf86a9000000	                           jbe 0x40081d4	      5464	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25
0x400812b	        0x498b4548	            mov rax, qword [r13 + 0x48] 	      5465	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_25
0x400812f	          0x488b30	                    mov rsi, qword [rax]	      5465	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_25
0x4008132	      0xbf00000000	                              mov edi, 0	      5465	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_25
0x4008137	      0xb909000000	                              mov ecx, 9	      5465	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_25
0x400813c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5465	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_25
0x400813e	           0xf97c2	                                 seta dl	      5465	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_25
0x4008141	           0xf92c0	                                 setb al	      5465	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_25
0x4008144	            0x38c2	                              cmp dl, al	      5465	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_25
0x4008146	     0xf8498000000	                            je 0x40081e4	      5465	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_25
0x400814c	      0x4c8b7c2428	            mov r15, qword [rsp + 0x28] 	      5465	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_25
0x4008151	      0xba05000000	                              mov edx, 5	      5468	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_27
0x4008156	      0xbe00000000	                              mov esi, 0	      5468	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_27
0x400815b	      0xbf00000000	                              mov edi, 0	      5468	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_27
0x4008160	      0xe800000000	                          call 0x4008165	      5468	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_27
0x4008165	          0x4c89fe	                            mov rsi, r15	      5467	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_26
0x4008168	          0x4889c7	                            mov rdi, rax	      5467	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_26
0x400816b	      0xb800000000	                              mov eax, 0	      5467	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_26
0x4008170	      0xe800000000	                          call 0x4008175	      5467	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_26
0x4008175	      0xbf11000000	                           mov edi, 0x11	      5471	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_28
0x400817a	      0xe800000000	                          call 0x400817f	      5471	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_28
0x400817f	      0xe910120000	                           jmp 0x4009394	      5471	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_11	ELSE_12	IF_25	CALL_28
0x4008184	        0x4883f804	                              cmp rax, 4	      5475	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26
0x4008188	            0x756a	                           jne 0x40081f4	      5475	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26
0x400818a	      0x41837d4400	               cmp dword [r13 + 0x44], 0	      5476	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x400818f	            0x7473	                            je 0x4008204	      5476	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x4008191	      0xb800000000	                              mov eax, 0	      5476	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x4008196	            0x89c2	                            mov edx, eax	      5477	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x4008198	      0x498b54d548	    mov rdx, qword [r13 + rdx*8 + 0x48] 	      5477	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x400819d	    0x488b92e00000	            mov rdx, qword [rdx + 0xe0] 	      5477	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x40081a4	    0xc74204070000	                  mov dword [rdx + 4], 7	      5477	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x40081ab	          0x83c001	                              add eax, 1	      5476	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x40081ae	        0x413b4544	            cmp eax, dword [r13 + 0x44] 	      5476	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x40081b2	            0x72e2	                            jb 0x4008196	      5476	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_13	IF_26	FOR_6
0x40081b4	      0xb900000000	                              mov ecx, 0	      5394	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x40081b9	    0x48c744244800	               mov qword [rsp + 0x48], 0	      5395	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x40081c2	            0xeb4e	                           jmp 0x4008212	      5395	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x40081c4	      0xb900000000	                              mov ecx, 0	      5394	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x40081c9	    0x48c744244800	               mov qword [rsp + 0x48], 0	      5395	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x40081d2	            0xeb3e	                           jmp 0x4008212	      5395	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x40081d4	      0xb900000000	                              mov ecx, 0	      5394	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x40081d9	    0x48c744244800	               mov qword [rsp + 0x48], 0	      5395	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x40081e2	            0xeb2e	                           jmp 0x4008212	      5395	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x40081e4	      0xb900000000	                              mov ecx, 0	      5394	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x40081e9	    0x48c744244800	               mov qword [rsp + 0x48], 0	      5395	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x40081f2	            0xeb1e	                           jmp 0x4008212	      5395	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x40081f4	      0xb900000000	                              mov ecx, 0	      5394	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x40081f9	    0x48c744244800	               mov qword [rsp + 0x48], 0	      5395	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x4008202	            0xeb0e	                           jmp 0x4008212	      5395	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x4008204	      0xb900000000	                              mov ecx, 0	      5394	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x4008209	    0x48c744244800	               mov qword [rsp + 0x48], 0	      5395	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x4008212	    0x49c747100000	               mov qword [r15 + 0x10], 0	      5479	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x400821a	    0x49c747280000	               mov qword [r15 + 0x28], 0	      5480	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x4008222	    0x49c747300000	               mov qword [r15 + 0x30], 0	      5481	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x400822a	      0x410fb64540	           movzx eax, byte [r13 + 0x40] 	      5483	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x400822f	            0xa810	                           test al, 0x10	      5483	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x4008231	     0xf8499000000	                            je 0x40082d0	      5483	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x4008237	            0xa801	                              test al, 1	      5485	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_28
0x4008239	            0x7505	                           jne 0x4008240	      5485	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_28
0x400823b	      0x49834f0804	                   or qword [r15 + 8], 4	      5486	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_28
0x4008240	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      5487	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x4008245	    0x488b87000300	           mov rax, qword [rdi + 0x300] 	      5487	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x400824c	           0xfb600	                   movzx eax, byte [rax]	      5487	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x400824f	        0x49894728	             mov qword [r15 + 0x28], rax	      5487	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x4008253	    0x488b87000300	           mov rax, qword [rdi + 0x300] 	      5488	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x400825a	           0xfb600	                   movzx eax, byte [rax]	      5488	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x400825d	        0x49894730	             mov qword [r15 + 0x30], rax	      5488	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27
0x4008261	      0x41837d4400	               cmp dword [r13 + 0x44], 0	      5489	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29
0x4008266	            0x7468	                            je 0x40082d0	      5489	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29
0x4008268	        0x498b4718	            mov rax, qword [r15 + 0x18] 	      5491	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x400826c	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      5491	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x4008271	          0x4889fa	                            mov rdx, rdi	      5491	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x4008274	          0x4839f8	                            cmp rax, rdi	      5491	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x4008277	            0x720d	                            jb 0x4008286	      5491	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x4008279	      0x41f6454002	               test byte [r13 + 0x40], 2	      5492	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x400827e	            0x753e	                           jne 0x40082be	      5492	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x4008280	        0x493b7f20	            cmp rdi, qword [r15 + 0x20] 	      5493	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x4008284	            0x7638	                           jbe 0x40082be	      5493	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x4008286	      0x4c8b7c2428	            mov r15, qword [rsp + 0x28] 	      5493	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30
0x400828b	      0xba05000000	                              mov edx, 5	      5496	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_31
0x4008290	      0xbe00000000	                              mov esi, 0	      5496	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_31
0x4008295	      0xbf00000000	                              mov edi, 0	      5496	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_31
0x400829a	      0xe800000000	                          call 0x400829f	      5496	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_31
0x400829f	          0x4c89fe	                            mov rsi, r15	      5495	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_30
0x40082a2	          0x4889c7	                            mov rdi, rax	      5495	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_30
0x40082a5	      0xb800000000	                              mov eax, 0	      5495	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_30
0x40082aa	      0xe800000000	                          call 0x40082af	      5495	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_30
0x40082af	      0xbf11000000	                           mov edi, 0x11	      5499	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_32
0x40082b4	      0xe800000000	                          call 0x40082b9	      5499	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_32
0x40082b9	      0xe9d6100000	                           jmp 0x4009394	      5499	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_30	CALL_32
0x40082be	          0x4829d0	                            sub rax, rdx	      5503	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29
0x40082c1	        0x49894718	             mov qword [r15 + 0x18], rax	      5503	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29
0x40082c5	      0x41f6454002	               test byte [r13 + 0x40], 2	      5504	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_31
0x40082ca	            0x7504	                           jne 0x40082d0	      5504	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_31
0x40082cc	        0x49295720	             sub qword [r15 + 0x20], rdx	      5505	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_27	IF_29	IF_31
0x40082d0	      0x410fb64540	           movzx eax, byte [r13 + 0x40] 	      5509	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x40082d5	            0xa820	                           test al, 0x20	      5509	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x40082d7	     0xf8490000000	                            je 0x400836d	      5509	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x40082dd	            0xa801	                              test al, 1	      5511	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_33
0x40082df	            0x7505	                           jne 0x40082e6	      5511	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_33
0x40082e1	      0x49834f0804	                   or qword [r15 + 8], 4	      5512	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_33
0x40082e6	      0x41f6454010	           test byte [r13 + 0x40], 0x10 	      5514	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34
0x40082eb	            0x752e	                           jne 0x400831b	      5514	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34
0x40082ed	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      5516	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34
0x40082f2	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      5516	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34
0x40082f9	           0xfb600	                   movzx eax, byte [rax]	      5516	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34
0x40082fc	        0x49894710	             mov qword [r15 + 0x10], rax	      5516	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34
0x4008300	      0x41837d4400	               cmp dword [r13 + 0x44], 0	      5518	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35
0x4008305	            0x7414	                            je 0x400831b	      5518	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35
0x4008307	      0x482b442418	             sub rax, qword [rsp + 0x18]	      5520	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35
0x400830c	        0x49014718	            add qword [r15 + 0x18], rax 	      5520	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35
0x4008310	      0x41f6454002	               test byte [r13 + 0x40], 2	      5521	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35	IF_36
0x4008315	            0x7504	                           jne 0x400831b	      5521	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35	IF_36
0x4008317	        0x49014720	            add qword [r15 + 0x20], rax 	      5522	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_34	IF_35	IF_36
0x400831b	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4008320	    0x488b87000300	           mov rax, qword [rdi + 0x300] 	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4008327	         0xfb65001	               movzx edx, byte [rax + 1]	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x400832b	        0x8b742450	            mov esi, dword [rsp + 0x50] 	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x400832f	           0xfafd6	                           imul edx, esi	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4008332	        0x49035728	             add rdx, qword [r15 + 0x28]	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4008336	        0x49895728	             mov qword [r15 + 0x28], rdx	      5526	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x400833a	    0x488b87000300	           mov rax, qword [rdi + 0x300] 	      5527	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4008341	         0xfb64001	               movzx eax, byte [rax + 1]	      5527	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4008345	           0xfafc6	                           imul eax, esi	      5527	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4008348	        0x49034730	             add rax, qword [r15 + 0x30]	      5527	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x400834c	        0x49894730	             mov qword [r15 + 0x30], rax	      5527	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32
0x4008350	      0x41837d4400	               cmp dword [r13 + 0x44], 0	      5528	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x4008355	            0x7416	                            je 0x400836d	      5528	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x4008357	    0x488bb4248000	            mov rsi, qword [rsp + 0x80] 	      5530	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x400835f	          0x4801f2	                            add rdx, rsi	      5530	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x4008362	        0x49895728	             mov qword [r15 + 0x28], rdx	      5530	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x4008366	          0x4801f0	                            add rax, rsi	      5531	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x4008369	        0x49894730	             mov qword [r15 + 0x30], rax	      5531	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_32	IF_37
0x400836d	          0x498b07	                    mov rax, qword [r15]	      5535	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38
0x4008370	        0x4883f801	                              cmp rax, 1	      5535	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38
0x4008374	            0x7422	                            je 0x4008398	      5535	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38
0x4008376	        0x4883f804	                              cmp rax, 4	      5536	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38
0x400837a	     0xf8583110000	                           jne 0x4009503	      5536	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38
0x4008380	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5536	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38
0x4008385	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      5536	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38
0x4008389	        0x88442408	                  mov byte [rsp + 8], al	      5536	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38
0x400838d	          0x83e007	                              and eax, 7	      5536	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38
0x4008390	            0x3c03	                               cmp al, 3	      5536	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38
0x4008392	     0xf856b110000	                           jne 0x4009503	      5536	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38
0x4008398	      0x41f6454030	           test byte [r13 + 0x40], 0x30 	      5538	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	IF_39
0x400839d	            0x750b	                           jne 0x40083aa	      5538	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	IF_39
0x400839f	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5539	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	IF_39
0x40083a4	        0x49894710	             mov qword [r15 + 0x10], rax	      5539	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	IF_39
0x40083a8	            0xeb25	                           jmp 0x40083cf	      5539	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	IF_39
0x40083aa	        0x498b4728	            mov rax, qword [r15 + 0x28] 	      5544	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x40083ae	          0x4889c2	                            mov rdx, rax	      5544	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x40083b1	        0x49035710	             add rdx, qword [r15 + 0x10]	      5544	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x40083b5	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      5544	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x40083ba	          0x4829d7	                            sub rdi, rdx	      5544	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x40083bd	          0x4889fa	                            mov rdx, rdi	      5544	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x40083c0	            0x85c9	                           test ecx, ecx	      5545	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14	IF_40
0x40083c2	            0x7507	                           jne 0x40083cb	      5545	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14	IF_40
0x40083c4	          0x4801f8	                            add rax, rdi	      5546	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14	IF_40
0x40083c7	        0x49894728	             mov qword [r15 + 0x28], rax	      5546	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14	IF_40
0x40083cb	        0x49015730	            add qword [r15 + 0x30], rdx 	      5547	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_38	ELSE_14
0x40083cf	        0x4d8d6548	                   lea r12, [r13 + 0x48]	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x40083d3	        0x418b4544	            mov eax, dword [r13 + 0x44] 	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x40083d7	            0x85c0	                           test eax, eax	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x40083d9	     0xf842b030000	                            je 0x400870a	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x40083df	    0x41be00000000	                             mov r14d, 0	      5395	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9
0x40083e5	          0x4c89e0	                            mov rax, r12	      5564	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x40083e8	          0x4589f4	                          mov r12d, r14d	      5564	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x40083eb	          0x4989c6	                            mov r14, rax	      5564	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x40083ee	          0x498b2e	                    mov rbp, qword [r14]	      5562	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x40083f1	    0x488b9de00000	            mov rbx, qword [rbp + 0xe0] 	      5563	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	CALL_33
0x40083f8	          0x8b4d70	            mov ecx, dword [rbp + 0x70] 	      5564	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x40083fb	      0xb801000000	                              mov eax, 1	      5564	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x4008400	          0x48d3e0	                             shl rax, cl	      5564	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x4008403	      0x4889442408	                mov qword [rsp + 8], rax	      5564	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x4008408	          0x498b07	                    mov rax, qword [r15]	      5566	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400840b	        0x4883f807	                              cmp rax, 7	      5567	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400840f	           0xf94c2	                                 sete dl	      5567	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008412	        0x4883f801	                              cmp rax, 1	      5566	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008416	            0x7408	                            je 0x4008420	      5566	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008418	            0x84d2	                             test dl, dl	      5566	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400841a	     0xf844d010000	                            je 0x400856d	      5566	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008420	        0x837b0408	                  cmp dword [rbx + 4], 8	      5568	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008424	            0x7519	                           jne 0x400843f	      5568	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008426	        0x488b4308	                mov rax, qword [rbx + 8]	      5569	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400842a	            0xa802	                              test al, 2	      5569	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400842c	     0xf843b010000	                            je 0x400856d	      5569	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008432	          0xf6c404	                              test ah, 4	      5571	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008435	            0x7408	                            je 0x400843f	      5571	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008437	            0x84d2	                             test dl, dl	      5571	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008439	     0xf842e010000	                            je 0x400856d	      5571	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400843f	        0x498b4720	            mov rax, qword [r15 + 0x20] 	      5573	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008443	          0x4889c7	                            mov rdi, rax	      5574	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008446	        0x49037f30	             add rdi, qword [r15 + 0x30]	      5574	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400844a	      0x48897c2430	             mov qword [rsp + 0x30], rdi	      5574	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x400844f	        0x488b7530	            mov rsi, qword [rbp + 0x30] 	      5575	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008453	      0x4889742438	             mov qword [rsp + 0x38], rsi	      5575	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x4008458	          0x4889f1	                            mov rcx, rsi	      5578	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x400845b	          0x4829f9	                            sub rcx, rdi	      5578	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x400845e	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      5578	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x4008463	            0x744f	                            je 0x40084b4	      5578	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x4008465	          0x4839f7	                            cmp rdi, rsi	      5579	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x4008468	            0x7705	                            ja 0x400846f	      5579	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x400846a	          0x4839f8	                            cmp rax, rdi	      5579	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x400846d	            0x7645	                           jbe 0x40084b4	      5579	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x400846f	      0xba05000000	                              mov edx, 5	      5584	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_35
0x4008474	      0xbe00000000	                              mov esi, 0	      5584	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_35
0x4008479	      0xbf00000000	                              mov edi, 0	      5584	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_35
0x400847e	      0xe800000000	                          call 0x4008483	      5584	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_35
0x4008483	      0x4c8b442430	              mov r8, qword [rsp + 0x30]	      5582	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_34
0x4008488	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      5582	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_34
0x400848d	          0x4889ea	                            mov rdx, rbp	      5582	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_34
0x4008490	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      5582	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_34
0x4008495	          0x4889c7	                            mov rdi, rax	      5582	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_34
0x4008498	      0xb800000000	                              mov eax, 0	      5582	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_34
0x400849d	      0xe800000000	                          call 0x40084a2	      5582	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42	CALL_34
0x40084a2	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      5587	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x40084a7	        0x48894530	            mov qword [rbp + 0x30], rax 	      5587	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x40084ab	    0x48c744241000	               mov qword [rsp + 0x10], 0	      5586	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_42
0x40084b4	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      5589	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x40084b9	          0x4889f8	                            mov rax, rdi	      5589	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x40084bc	        0x49034730	             add rax, qword [r15 + 0x30]	      5589	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x40084c0	          0x4889c1	                            mov rcx, rax	      5589	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x40084c3	      0x4889442430	             mov qword [rsp + 0x30], rax	      5589	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x40084c8	        0x49894730	             mov qword [r15 + 0x30], rax	      5589	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41
0x40084cc	        0x837b0408	                  cmp dword [rbx + 4], 8	      5591	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43
0x40084d0	     0xf8497000000	                            je 0x400856d	      5591	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43
0x40084d6	        0x498b4728	            mov rax, qword [r15 + 0x28] 	      5593	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x40084da	          0x4889c6	                            mov rsi, rax	      5593	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x40084dd	      0x4889442438	             mov qword [rsp + 0x38], rax	      5593	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x40084e2	          0x4889f8	                            mov rax, rdi	      5593	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x40084e5	          0x4801f0	                            add rax, rsi	      5593	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x40084e8	          0x4839c1	                            cmp rcx, rax	      5593	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x40084eb	            0x7672	                           jbe 0x400855f	      5593	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x40084ed	      0xba00000000	                              mov edx, 0	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x40084f2	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x40084f7	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x40084fc	      0xe800000000	                          call 0x4008501	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x4008501	            0x85c0	                           test eax, eax	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x4008503	     0xf858b0e0000	                           jne 0x4009394	      5233	elf.c	FUNCTION_69	IF_1	CALL_1
0x4008509	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      5598	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x400850e	      0x482b442438	             sub rax, qword [rsp + 0x38]	      5598	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44
0x4008513	      0x4889442430	             mov qword [rsp + 0x30], rax	      5235	elf.c	FUNCTION_69	CALL_2
0x4008518	          0x4889c7	                            mov rdi, rax	      5235	elf.c	FUNCTION_69	CALL_2
0x400851b	      0xe800000000	                          call 0x4008520	      5235	elf.c	FUNCTION_69	CALL_2
0x4008520	          0x4885c0	                           test rax, rax	      5236	elf.c	FUNCTION_69	IF_2
0x4008523	     0xf846b0e0000	                            je 0x4009394	      5236	elf.c	FUNCTION_69	IF_2
0x4008529	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      5238	elf.c	FUNCTION_69	CALL_3
0x400852e	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      5238	elf.c	FUNCTION_69	CALL_3
0x4008533	      0x4889442438	             mov qword [rsp + 0x38], rax	      5238	elf.c	FUNCTION_69	CALL_3
0x4008538	          0x4889c7	                            mov rdi, rax	      5238	elf.c	FUNCTION_69	CALL_3
0x400853b	      0xe800000000	                          call 0x4008540	      5238	elf.c	FUNCTION_69	CALL_3
0x4008540	      0x4889442410	             mov qword [rsp + 0x10], rax	      5238	elf.c	FUNCTION_69	CALL_3
0x4008545	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      5239	elf.c	FUNCTION_69	CALL_4
0x400854a	      0xe800000000	                          call 0x400854f	      5239	elf.c	FUNCTION_69	CALL_4
0x400854f	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5599	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44	IF_45	CALL_36
0x4008554	      0x4839442430	            cmp qword [rsp + 0x30], rax 	      5599	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44	IF_45	CALL_36
0x4008559	     0xf85350e0000	                           jne 0x4009394	      5599	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43	IF_44	IF_45	CALL_36
0x400855f	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      5602	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43
0x4008564	      0x48014c2418	            add qword [rsp + 0x18], rcx 	      5602	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43
0x4008569	        0x49014f28	            add qword [r15 + 0x28], rcx 	      5603	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_41	IF_43
0x400856d	          0x498b07	                    mov rax, qword [r15]	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46
0x4008570	        0x4883f804	                              cmp rax, 4	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46
0x4008574	            0x7571	                           jne 0x40085e7	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46
0x4008576	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46
0x400857b	         0xfb64044	           movzx eax, byte [rax + 0x44] 	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46
0x400857f	        0x88442410	               mov byte [rsp + 0x10], al	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46
0x4008583	          0x83e007	                              and eax, 7	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46
0x4008586	            0x3c03	                               cmp al, 3	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46
0x4008588	     0xf8583000000	                           jne 0x4008611	      5607	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46
0x400858e	          0x4585e4	                         test r12d, r12d	      5611	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x4008591	            0x7535	                           jne 0x40085c8	      5611	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x4008593	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      5613	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x4008598	    0x48898d900000	            mov qword [rbp + 0x90], rcx 	      5613	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x400859f	        0x48894b18	             mov qword [rbx + 0x18], rcx	      5613	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x40085a3	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      5614	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x40085a7	          0x4801c1	                            add rcx, rax	      5614	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x40085aa	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      5614	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x40085af	        0x49894728	             mov qword [r15 + 0x28], rax	      5615	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x40085b3	    0x49c747300000	               mov qword [r15 + 0x30], 0	      5616	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x40085bb	    0x49c747380100	               mov qword [r15 + 0x38], 1	      5617	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x40085c3	      0xe9fe000000	                           jmp 0x40086c6	      5617	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	IF_47
0x40085c8	    0x48c785900000	               mov qword [rbp + 0x90], 0	      5622	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	ELSE_15
0x40085d3	    0x48c745380000	               mov qword [rbp + 0x38], 0	      5623	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	ELSE_15
0x40085db	    0xc74520000000	               mov dword [rbp + 0x20], 0	      5624	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	ELSE_15
0x40085e2	      0xe90e010000	                           jmp 0x40086f5	      5624	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_46	ELSE_15
0x40085e7	        0x4883f801	                              cmp rax, 1	      5630	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48
0x40085eb	            0x7524	                           jne 0x4008611	      5630	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48
0x40085ed	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5632	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48
0x40085f2	    0x488985900000	            mov qword [rbp + 0x90], rax 	      5632	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48
0x40085f9	        0x48894318	             mov qword [rbx + 0x18], rax	      5632	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48
0x40085fd	        0x837b0408	                  cmp dword [rbx + 4], 8	      5633	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48	IF_49
0x4008601	            0x7472	                            je 0x4008675	      5633	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48	IF_49
0x4008603	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	      5634	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48	IF_49
0x4008607	          0x4801c8	                            add rax, rcx	      5634	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48	IF_49
0x400860a	      0x4889442418	             mov qword [rsp + 0x18], rax	      5634	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48	IF_49
0x400860f	            0xeb4c	                           jmp 0x400865d	      5634	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_48	IF_49
0x4008611	        0x837b0408	                  cmp dword [rbx + 4], 8	      5636	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x4008615	            0x7546	                           jne 0x400865d	      5636	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x4008617	        0xf6430904	                  test byte [rbx + 9], 4	      5637	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x400861b	            0x7458	                            je 0x4008675	      5637	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x400861d	      0x48837b1800	               cmp qword [rbx + 0x18], 0	      5638	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x4008622	            0x7551	                           jne 0x4008675	      5638	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x4008624	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      5647	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50	CALL_37
0x4008629	      0x488b442408	                mov rax, qword [rsp + 8]	      5195	elf.c	FUNCTION_67	IF_1
0x400862e	          0x4885c0	                           test rax, rax	      5195	elf.c	FUNCTION_67	IF_1
0x4008631	      0xbe01000000	                              mov esi, 1	      5195	elf.c	FUNCTION_67	IF_1
0x4008636	        0x480f45f0	                         cmovne rsi, rax	      5195	elf.c	FUNCTION_67	IF_1
0x400863a	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      5649	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x400863e	          0x4829c8	                            sub rax, rcx	      5649	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x4008641	      0xba00000000	                              mov edx, 0	      5649	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x4008646	          0x48f7f6	                                 div rsi	      5649	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x4008649	          0x4801d1	                            add rcx, rdx	      5649	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x400864c	    0x48898d900000	            mov qword [rbp + 0x90], rcx 	      5649	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x4008653	        0x48894b18	             mov qword [rbx + 0x18], rcx	      5649	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_17	IF_50
0x4008657	        0x837b0408	                  cmp dword [rbx + 4], 8	      5652	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51
0x400865b	            0x7418	                            je 0x4008675	      5652	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51
0x400865d	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      5654	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51
0x4008661	        0x49014728	            add qword [r15 + 0x28], rax 	      5654	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51
0x4008665	        0xf6430802	                  test byte [rbx + 8], 2	      5658	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51	IF_52
0x4008669	            0x742f	                            je 0x400869a	      5658	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51	IF_52
0x400866b	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      5659	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51	IF_52
0x400866f	        0x49014730	            add qword [r15 + 0x30], rax 	      5659	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51	IF_52
0x4008673	            0xeb25	                           jmp 0x400869a	      5659	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_51	IF_52
0x4008675	        0x488b4308	                mov rax, qword [rbx + 8]	      5661	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53
0x4008679	            0xa802	                              test al, 2	      5661	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53
0x400867b	            0x741d	                            je 0x400869a	      5661	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53
0x400867d	        0x49833f07	                      cmp qword [r15], 7	      5663	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	IF_54
0x4008681	            0x750a	                           jne 0x400868d	      5663	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	IF_54
0x4008683	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      5664	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	IF_54
0x4008687	        0x49014730	            add qword [r15 + 0x30], rax 	      5664	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	IF_54
0x400868b	            0xeb0d	                           jmp 0x400869a	      5664	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	IF_54
0x400868d	          0xf6c404	                              test ah, 4	      5668	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	ELSE_19	IF_55
0x4008690	            0x7508	                           jne 0x400869a	      5668	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	ELSE_19	IF_55
0x4008692	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      5669	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	ELSE_19	IF_55
0x4008696	        0x49014730	            add qword [r15 + 0x30], rax 	      5669	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	ELSE_18	IF_53	ELSE_19	IF_55
0x400869a	      0x488b442408	                mov rax, qword [rsp + 8]	      5672	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x400869f	        0x493b4738	            cmp rax, qword [r15 + 0x38] 	      5672	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x40086a3	            0x7621	                           jbe 0x40086c6	      5672	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x40086a5	      0x41f6454004	               test byte [r13 + 0x40], 4	      5673	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x40086aa	            0x751a	                           jne 0x40086c6	      5673	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x40086ac	        0x49833f01	                      cmp qword [r15], 1	      5674	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x40086b0	            0x750b	                           jne 0x40086bd	      5674	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x40086b2	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5675	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x40086b7	        0xf6404520	           test byte [rax + 0x45], 0x20 	      5675	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x40086bb	            0x7509	                           jne 0x40086c6	      5675	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x40086bd	      0x488b442408	                mov rax, qword [rsp + 8]	      5676	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x40086c2	        0x49894738	             mov qword [r15 + 0x38], rax	      5676	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	ELSE_16	IF_56
0x40086c6	      0x41f6454001	               test byte [r13 + 0x40], 1	      5679	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57
0x40086cb	            0x7528	                           jne 0x40086f5	      5679	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57
0x40086cd	        0x498b4708	                mov rax, qword [r15 + 8]	      5681	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57
0x40086d1	          0x4889c2	                            mov rdx, rax	      5681	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57
0x40086d4	        0x4883ca04	                               or rdx, 4	      5681	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57
0x40086d8	        0x49895708	                mov qword [r15 + 8], rdx	      5681	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57
0x40086dc	        0xf6430804	                  test byte [rbx + 8], 4	      5682	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_58
0x40086e0	            0x7408	                            je 0x40086ea	      5682	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_58
0x40086e2	        0x4883c805	                               or rax, 5	      5683	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_58
0x40086e6	        0x49894708	                mov qword [r15 + 8], rax	      5683	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_58
0x40086ea	        0xf6430801	                  test byte [rbx + 8], 1	      5684	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_59
0x40086ee	            0x7405	                            je 0x40086f5	      5684	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_59
0x40086f0	      0x49834f0802	                   or qword [r15 + 8], 2	      5685	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7	IF_57	IF_59
0x40086f5	        0x4183c401	                             add r12d, 1	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x40086f9	        0x4983c608	                              add r14, 8	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x40086fd	        0x418b4544	            mov eax, dword [r13 + 0x44] 	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x4008701	          0x4139c4	                           cmp r12d, eax	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x4008704	     0xf82e4fcffff	                            jb 0x40083ee	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x400870a	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      5689	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x400870f	      0x48294c2418	             sub qword [rsp + 0x18], rcx	      5689	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x4008714	        0x49833f01	                      cmp qword [r15], 1	      5693	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60
0x4008718	     0xf859d030000	                           jne 0x4008abb	      5693	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60
0x400871e	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      5693	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60
0x4008723	         0xfb67e44	           movzx edi, byte [rsi + 0x44] 	      5693	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60
0x4008727	      0x40887c2408	                 mov byte [rsp + 8], dil	      5693	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60
0x400872c	            0x89fa	                            mov edx, edi	      5693	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60
0x400872e	          0x83e207	                              and edx, 7	      5693	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60
0x4008731	          0x80fa03	                               cmp dl, 3	      5693	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60
0x4008734	     0xf8481030000	                            je 0x4008abb	      5693	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60
0x400873a	          0x83f801	                              cmp eax, 1	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x400873d	            0x7662	                           jbe 0x40087a1	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x400873f	        0x498d5550	                   lea rdx, [r13 + 0x50]	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x4008743	          0x8d40fe	                      lea eax, [rax - 2]	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x4008746	      0x498d74c558	          lea rsi, [r13 + rax*8 + 0x58] 	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x400874b	          0x488b02	                    mov rax, qword [rdx]	      5698	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x400874e	        0x488b4af8	                mov rcx, qword [rdx - 8]	      5698	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x4008752	        0x488b7928	            mov rdi, qword [rcx + 0x28] 	      5698	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x4008756	        0x48397828	            cmp qword [rax + 0x28], rdi 	      5698	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x400875a	            0x7534	                           jne 0x4008790	      5698	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x400875c	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_39
0x4008763	        0xf6400904	                  test byte [rax + 9], 4	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_39
0x4008767	            0x7406	                            je 0x400876f	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_39
0x4008769	        0x83780408	                  cmp dword [rax + 4], 8	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_39
0x400876d	            0x7421	                            je 0x4008790	      5699	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_39
0x400876f	      0x4883782000	               cmp qword [rax + 0x20], 0	      5700	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x4008774	            0x741a	                            je 0x4008790	      5700	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x4008776	    0x488b81e00000	            mov rax, qword [rcx + 0xe0] 	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x400877d	        0xf6400904	                  test byte [rax + 9], 4	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x4008781	            0x7406	                            je 0x4008789	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x4008783	        0x83780408	                  cmp dword [rax + 4], 8	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x4008787	            0x7407	                            je 0x4008790	      5701	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61	CALL_41
0x4008789	      0x4883782000	               cmp qword [rax + 0x20], 0	      5702	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x400878e	            0x7519	                           jne 0x40087a9	      5702	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x4008790	        0x4883c208	                              add rdx, 8	      5702	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x4008794	          0x4839f2	                            cmp rdx, rsi	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x4008797	            0x75b2	                           jne 0x400874b	      5697	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8
0x4008799	    0x41be01000000	                             mov r14d, 1	      5695	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60
0x400879f	            0xeb0e	                           jmp 0x40087af	      5695	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60
0x40087a1	    0x41be01000000	                             mov r14d, 1	      5695	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60
0x40087a7	            0xeb06	                           jmp 0x40087af	      5695	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60
0x40087a9	    0x41be00000000	                             mov r14d, 0	      5705	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_8	IF_61
0x40087af	      0x41837d4400	               cmp dword [r13 + 0x44], 0	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x40087b4	     0xf8401030000	                            je 0x4008abb	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x40087ba	    0x41bc00000000	                             mov r12d, 0	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x40087c0	      0x4489742408	               mov dword [rsp + 8], r14d	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x40087c5	      0x448b742460	           mov r14d, dword [rsp + 0x60] 	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x40087ca	          0x4489e0	                           mov eax, r12d	      5714	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x40087cd	      0x498b5cc548	    mov rbx, qword [r13 + rax*8 + 0x48] 	      5714	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x40087d2	    0x488b93e00000	            mov rdx, qword [rbx + 0xe0] 	      5715	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	CALL_42
0x40087d9	        0x488b4208	                mov rax, qword [rdx + 8]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40087dd	          0x4889c6	                            mov rsi, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40087e0	    0x81e600040000	                          and esi, 0x400	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40087e6	            0x7427	                            je 0x400880f	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40087e8	          0x498b0f	                    mov rcx, qword [r15]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40087eb	        0x4883f907	                              cmp rcx, 7	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40087ef	        0x410f95c0	                               setne r8b	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40087f3	    0x4881f952e574	                     cmp rcx, 0x6474e552	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40087fa	        0x400f95c7	                               setne dil	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40087fe	          0x4184f8	                           test r8b, dil	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4008801	            0x741d	                            je 0x4008820	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4008803	        0x4883f901	                              cmp rcx, 1	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4008807	     0xf8518010000	                           jne 0x4008925	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400880d	            0xeb11	                           jmp 0x4008820	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400880f	          0x498b0f	                    mov rcx, qword [r15]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4008812	        0x4883e906	                              sub rcx, 6	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4008816	        0x4883f901	                              cmp rcx, 1	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400881a	     0xf8615010000	                           jbe 0x4008935	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4008820	          0x83e002	                              and eax, 2	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4008823	            0x752b	                           jne 0x4008850	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4008825	          0x498b0f	                    mov rcx, qword [r15]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4008828	        0x488d79ff	                      lea rdi, [rcx - 1]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400882c	        0x4883ff01	                              cmp rdi, 1	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4008830	        0x400f96c7	                               setbe dil	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4008834	    0x4881e950e574	                     sub rcx, 0x6474e550	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400883b	        0x4883f902	                              cmp rcx, 2	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400883f	           0xf96c1	                                setbe cl	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4008842	          0x4008f9	                              or cl, dil	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4008845	     0xf84c90c0000	                            je 0x4009514	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400884b	      0xe9d0000000	                           jmp 0x4008920	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4008850	          0x8b7a04	                mov edi, dword [rdx + 4]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4008853	          0x83ff08	                              cmp edi, 8	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4008856	            0x7422	                            je 0x400887a	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4008858	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400885c	        0x4d8b4710	              mov r8, qword [r15 + 0x10]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4008860	          0x4c39c1	                             cmp rcx, r8	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4008863	     0xf82cc000000	                            jb 0x4008935	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4008869	        0x48034a20	             add rcx, qword [rdx + 0x20]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400886d	          0x4c29c1	                             sub rcx, r8	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4008870	        0x493b4f28	            cmp rcx, qword [r15 + 0x28] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4008874	     0xf87bb000000	                            ja 0x4008935	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400887a	          0x4885c0	                           test rax, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400887d	           0xf95c1	                                setne cl	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4008880	      0x837c240800	                  cmp dword [rsp + 8], 0	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4008885	            0x743b	                            je 0x40088c2	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4008887	            0x84c9	                             test cl, cl	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4008889	            0x7437	                            je 0x40088c2	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400888b	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400888f	        0x4d8b4718	              mov r8, qword [r15 + 0x18]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4008893	          0x4c39c0	                             cmp rax, r8	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4008896	     0xf8284000000	                            jb 0x4008920	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400889c	          0x4c29c0	                             sub rax, r8	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400889f	          0x83ff08	                              cmp edi, 8	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40088a2	            0x7511	                           jne 0x40088b5	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40088a4	          0x4885f6	                           test rsi, rsi	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40088a7	            0x740c	                            je 0x40088b5	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40088a9	    0x41b800000000	                              mov r8d, 0	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40088af	        0x49833f07	                      cmp qword [r15], 7	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40088b3	            0x7504	                           jne 0x40088b9	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40088b5	        0x4c8b4220	              mov r8, qword [rdx + 0x20]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40088b9	          0x4c01c0	                             add rax, r8	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40088bc	        0x493b4730	            cmp rax, qword [r15 + 0x30] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40088c0	            0x775e	                            ja 0x4008920	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40088c2	        0x49833f02	                      cmp qword [r15], 2	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40088c6	     0xf85e1010000	                           jne 0x4008aad	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40088cc	      0x48837a2000	               cmp qword [rdx + 0x20], 0	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40088d1	     0xf85d6010000	                           jne 0x4008aad	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40088d7	        0x4d8b4730	              mov r8, qword [r15 + 0x30]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40088db	          0x4d85c0	                             test r8, r8	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40088de	     0xf84c9010000	                            je 0x4008aad	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40088e4	          0x83ff08	                              cmp edi, 8	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40088e7	            0x7416	                            je 0x40088ff	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40088e9	        0x488b4218	            mov rax, qword [rdx + 0x18] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40088ed	        0x498b7f10	            mov rdi, qword [r15 + 0x10] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40088f1	          0x4839f8	                            cmp rax, rdi	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40088f4	            0x763f	                           jbe 0x4008935	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40088f6	          0x4829f8	                            sub rax, rdi	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40088f9	        0x493b4728	            cmp rax, qword [r15 + 0x28] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40088fd	            0x7336	                           jae 0x4008935	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x40088ff	            0x84c9	                             test cl, cl	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4008901	     0xf84a6010000	                            je 0x4008aad	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4008907	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400890b	        0x498b4f18	            mov rcx, qword [r15 + 0x18] 	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400890f	          0x4839c8	                            cmp rax, rcx	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4008912	            0x760c	                           jbe 0x4008920	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4008914	          0x4829c8	                            sub rax, rcx	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4008917	          0x4939c0	                             cmp r8, rax	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400891a	     0xf878d010000	                            ja 0x4008aad	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4008920	          0x4885f6	                           test rsi, rsi	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_44
0x4008923	            0x7410	                            je 0x4008935	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_44
0x4008925	        0x837a0408	                  cmp dword [rdx + 4], 8	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_44
0x4008929	            0x750a	                           jne 0x4008935	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_44
0x400892b	        0x49833f07	                      cmp qword [r15], 7	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_44
0x400892f	     0xf8578010000	                           jne 0x4008aad	      5717	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_44
0x4008935	      0xba05000000	                              mov edx, 5	      5721	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_46
0x400893a	      0xbe00000000	                              mov esi, 0	      5721	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_46
0x400893f	      0xbf00000000	                              mov edi, 0	      5721	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_46
0x4008944	      0xe800000000	                          call 0x4008949	      5721	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_46
0x4008949	          0x4489f1	                           mov ecx, r14d	      5719	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_45
0x400894c	          0x4889da	                            mov rdx, rbx	      5719	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_45
0x400894f	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      5719	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_45
0x4008954	          0x4889c7	                            mov rdi, rax	      5719	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_45
0x4008957	      0xb800000000	                              mov eax, 0	      5719	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_45
0x400895c	      0xe800000000	                          call 0x4008961	      5719	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_45
0x4008961	        0x498b6d08	                mov rbp, qword [r13 + 8]	      5203	elf.c	FUNCTION_68	CALL_1
0x4008965	            0x89ef	                            mov edi, ebp	      5203	elf.c	FUNCTION_68	CALL_1
0x4008967	      0xe81677ffff	               call sym.get_segment_type	      5203	elf.c	FUNCTION_68	CALL_1
0x400896c	          0x4889c3	                            mov rbx, rax	      5203	elf.c	FUNCTION_68	CALL_1
0x400896f	          0x4885c0	                           test rax, rax	      5206	elf.c	FUNCTION_68	IF_1
0x4008972	     0xf85b4000000	                           jne 0x4008a2c	      5206	elf.c	FUNCTION_68	IF_1
0x4008978	    0x488d85000000	             lea rax, [rbp - 0x70000000]	      5208	elf.c	FUNCTION_68	IF_1	IF_2
0x400897f	    0x483dffffff0f	                      cmp rax, 0xfffffff	      5208	elf.c	FUNCTION_68	IF_1	IF_2
0x4008985	            0x7732	                            ja 0x40089b9	      5208	elf.c	FUNCTION_68	IF_1	IF_2
0x4008987	    0x448d85000000	             lea r8d, [rbp - 0x70000000]	        33	stdio2.h	FUNCTION_204	CALL_1
0x400898e	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x4008993	      0xba20000000	                           mov edx, 0x20	        33	stdio2.h	FUNCTION_204	CALL_1
0x4008998	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_204	CALL_1
0x400899d	    0x488dbc24c000	                   lea rdi, [rsp + 0xc0]	        33	stdio2.h	FUNCTION_204	CALL_1
0x40089a5	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x40089aa	      0xe800000000	                          call 0x40089af	        33	stdio2.h	FUNCTION_204	CALL_1
0x40089af	    0x488d9c24c000	                   lea rbx, [rsp + 0xc0]	      5217	elf.c	FUNCTION_68	IF_1
0x40089b7	            0xeb73	                           jmp 0x4008a2c	      5217	elf.c	FUNCTION_68	IF_1
0x40089b9	    0x488d85000000	             lea rax, [rbp - 0x60000000]	      5211	elf.c	FUNCTION_68	IF_1	ELSE_1	IF_3
0x40089c0	    0x483dffffff0f	                      cmp rax, 0xfffffff	      5211	elf.c	FUNCTION_68	IF_1	ELSE_1	IF_3
0x40089c6	            0x7732	                            ja 0x40089fa	      5211	elf.c	FUNCTION_68	IF_1	ELSE_1	IF_3
0x40089c8	    0x448d85000000	             lea r8d, [rbp - 0x60000000]	        33	stdio2.h	FUNCTION_204	CALL_1
0x40089cf	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x40089d4	      0xba20000000	                           mov edx, 0x20	        33	stdio2.h	FUNCTION_204	CALL_1
0x40089d9	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_204	CALL_1
0x40089de	    0x488dbc24c000	                   lea rdi, [rsp + 0xc0]	        33	stdio2.h	FUNCTION_204	CALL_1
0x40089e6	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x40089eb	      0xe800000000	                          call 0x40089f0	        33	stdio2.h	FUNCTION_204	CALL_1
0x40089f0	    0x488d9c24c000	                   lea rbx, [rsp + 0xc0]	      5217	elf.c	FUNCTION_68	IF_1
0x40089f8	            0xeb32	                           jmp 0x4008a2c	      5217	elf.c	FUNCTION_68	IF_1
0x40089fa	          0x4189e9	                            mov r9d, ebp	        64	stdio2.h	FUNCTION_206	CALL_1
0x40089fd	    0x41b800000000	                              mov r8d, 0	        64	stdio2.h	FUNCTION_206	CALL_1
0x4008a03	      0xb920000000	                           mov ecx, 0x20	        64	stdio2.h	FUNCTION_206	CALL_1
0x4008a08	      0xba01000000	                              mov edx, 1	        64	stdio2.h	FUNCTION_206	CALL_1
0x4008a0d	      0xbe20000000	                           mov esi, 0x20	        64	stdio2.h	FUNCTION_206	CALL_1
0x4008a12	    0x488dbc24c000	                   lea rdi, [rsp + 0xc0]	        64	stdio2.h	FUNCTION_206	CALL_1
0x4008a1a	      0xb800000000	                              mov eax, 0	        64	stdio2.h	FUNCTION_206	CALL_1
0x4008a1f	      0xe800000000	                          call 0x4008a24	        64	stdio2.h	FUNCTION_206	CALL_1
0x4008a24	    0x488d9c24c000	                   lea rbx, [rsp + 0xc0]	      5217	elf.c	FUNCTION_68	IF_1
0x4008a2c	    0x488b3d000000	            mov rdi, qword [0x04008a33] 	      5219	elf.c	FUNCTION_68	CALL_2
0x4008a33	      0xe800000000	                          call 0x4008a38	      5219	elf.c	FUNCTION_68	CALL_2
0x4008a38	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_15
0x4008a3b	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_15
0x4008a40	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_15
0x4008a45	    0x488b3d000000	            mov rdi, qword [0x04008a4c] 	        97	stdio2.h	CALL_15
0x4008a4c	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_15
0x4008a51	      0xe800000000	                          call 0x4008a56	        97	stdio2.h	CALL_15
0x4008a56	      0x41837d4400	               cmp dword [r13 + 0x44], 0	      5221	elf.c	FUNCTION_68	FOR_1
0x4008a5b	            0x7433	                            je 0x4008a90	      5221	elf.c	FUNCTION_68	FOR_1
0x4008a5d	      0xbb00000000	                              mov ebx, 0	      5221	elf.c	FUNCTION_68	FOR_1
0x4008a62	            0x89d8	                            mov eax, ebx	      5222	elf.c	FUNCTION_68	FOR_1
0x4008a64	      0x498b44c548	    mov rax, qword [r13 + rax*8 + 0x48] 	      5222	elf.c	FUNCTION_68	FOR_1
0x4008a69	          0x488b08	                    mov rcx, qword [rax]	        97	stdio2.h	CALL_15
0x4008a6c	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_15
0x4008a71	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_15
0x4008a76	    0x488b3d000000	            mov rdi, qword [0x04008a7d] 	        97	stdio2.h	CALL_15
0x4008a7d	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_15
0x4008a82	      0xe800000000	                          call 0x4008a87	        97	stdio2.h	CALL_15
0x4008a87	          0x83c301	                              add ebx, 1	      5221	elf.c	FUNCTION_68	FOR_1
0x4008a8a	        0x413b5d44	            cmp ebx, dword [r13 + 0x44] 	      5221	elf.c	FUNCTION_68	FOR_1
0x4008a8e	            0x72d2	                            jb 0x4008a62	      5221	elf.c	FUNCTION_68	FOR_1
0x4008a90	    0x488b35000000	            mov rsi, qword [0x04008a97] 	      5223	elf.c	FUNCTION_68	CALL_3
0x4008a97	      0xbf0a000000	                            mov edi, 0xa	      5223	elf.c	FUNCTION_68	CALL_3
0x4008a9c	      0xe800000000	                          call 0x4008aa1	      5223	elf.c	FUNCTION_68	CALL_3
0x4008aa1	    0x488b3d000000	            mov rdi, qword [0x04008aa8] 	      5224	elf.c	FUNCTION_68	CALL_4
0x4008aa8	      0xe800000000	                          call 0x4008aad	      5224	elf.c	FUNCTION_68	CALL_4
0x4008aad	        0x4183c401	                             add r12d, 1	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x4008ab1	        0x453b6544	           cmp r12d, dword [r13 + 0x44] 	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x4008ab5	     0xf820ffdffff	                            jb 0x40087ca	      5709	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9
0x4008abb	        0x4d8b6d00	                    mov r13, qword [r13]	      5333	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x4008abf	        0x4983c740	                           add r15, 0x40	      5333	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x4008ac3	      0x8344246001	               add dword [rsp + 0x60], 1	      5333	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x4008ac8	          0x4d85ed	                           test r13, r13	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x4008acb	     0xf85c6f3ffff	                           jne 0x4007e97	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x4008ad1	      0x4c8b7c2428	            mov r15, qword [rsp + 0x28] 	      5331	elf.c	FUNCTION_70	ELSE_3	FOR_2	CALL_19
0x4008ad6	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5729	elf.c	FUNCTION_70	CALL_48
0x4008add	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5729	elf.c	FUNCTION_70	CALL_48
0x4008ae4	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      5729	elf.c	FUNCTION_70	CALL_48
0x4008ae9	        0x48897840	             mov qword [rax + 0x40], rdi	      5729	elf.c	FUNCTION_70	CALL_48
0x4008aed	      0xe9330a0000	                           jmp 0x4009525	      5729	elf.c	FUNCTION_70	CALL_48
0x4008af2	      0x4c896c2418	             mov qword [rsp + 0x18], r13	      5729	elf.c	FUNCTION_70	CALL_48
0x4008af7	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	      5729	elf.c	FUNCTION_70	CALL_48
0x4008afc	        0x488b5d00	                    mov rbx, qword [rbp]	      5758	elf.c	FUNCTION_71	FOR_1
0x4008b00	        0x488b4340	            mov rax, qword [rbx + 0x40] 	      5759	elf.c	FUNCTION_71	FOR_1	IF_1
0x4008b04	          0x4885c0	                           test rax, rax	      5759	elf.c	FUNCTION_71	FOR_1	IF_1
0x4008b07	            0x743f	                            je 0x4008b48	      5759	elf.c	FUNCTION_71	FOR_1	IF_1
0x4008b09	    0x488b90900000	            mov rdx, qword [rax + 0x90] 	      5760	elf.c	FUNCTION_71	FOR_1	IF_1
0x4008b10	          0x4885d2	                           test rdx, rdx	      5760	elf.c	FUNCTION_71	FOR_1	IF_1
0x4008b13	            0x7515	                           jne 0x4008b2a	      5760	elf.c	FUNCTION_71	FOR_1	IF_1
0x4008b15	        0x837b0408	                  cmp dword [rbx + 4], 8	      5761	elf.c	FUNCTION_71	FOR_1	IF_1
0x4008b19	     0xf85480a0000	                           jne 0x4009567	      5761	elf.c	FUNCTION_71	FOR_1	IF_1
0x4008b1f	      0x48837b4800	               cmp qword [rbx + 0x48], 0	      5762	elf.c	FUNCTION_71	FOR_1	IF_1
0x4008b24	     0xf853d0a0000	                           jne 0x4009567	      5762	elf.c	FUNCTION_71	FOR_1	IF_1
0x4008b2a	        0x483b5318	            cmp rdx, qword [rbx + 0x18] 	      5763	elf.c	FUNCTION_71	FOR_1	CALL_5
0x4008b2e	     0xf843f010000	                            je 0x4008c73	      5763	elf.c	FUNCTION_71	FOR_1	CALL_5
0x4008b34	      0xbe83160000	                         mov esi, 0x1683	      5763	elf.c	FUNCTION_71	FOR_1	CALL_5
0x4008b39	      0xbf00000000	                              mov edi, 0	      5763	elf.c	FUNCTION_71	FOR_1	CALL_5
0x4008b3e	      0xe800000000	                          call 0x4008b43	      5763	elf.c	FUNCTION_71	FOR_1	CALL_5
0x4008b43	      0xe92b010000	                           jmp 0x4008c73	      5763	elf.c	FUNCTION_71	FOR_1	CALL_5
0x4008b48	        0xf6430802	                  test byte [rbx + 8], 2	      5764	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2
0x4008b4c	     0xf857b0b0000	                           jne 0x40096cd	      5764	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2
0x4008b52	      0xe9a9000000	                           jmp 0x4008c00	      5764	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2
0x4008b57	          0x488b00	                    mov rax, qword [rax]	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x4008b5a	      0x4889442408	                mov qword [rsp + 8], rax	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x4008b5f	            0xeb09	                           jmp 0x4008b6a	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x4008b61	    0x48c744240800	                  mov qword [rsp + 8], 0	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x4008b6a	      0xba05000000	                              mov edx, 5	      5769	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_7
0x4008b6f	      0xbe00000000	                              mov esi, 0	      5769	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_7
0x4008b74	      0xbf00000000	                              mov edi, 0	      5769	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_7
0x4008b79	      0xe800000000	                          call 0x4008b7e	      5769	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_7
0x4008b7e	      0x488b542408	                mov rdx, qword [rsp + 8]	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x4008b83	          0x4c89fe	                            mov rsi, r15	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x4008b86	          0x4889c7	                            mov rdi, rax	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x4008b89	      0xb800000000	                              mov eax, 0	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x4008b8e	      0xe800000000	                          call 0x4008b93	      5767	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3	CALL_6
0x4008b93	      0x41f6474520	           test byte [r15 + 0x45], 0x20 	      5775	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4
0x4008b98	            0x7431	                            je 0x4008bcb	      5775	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4
0x4008b9a	      0x48837b2000	               cmp qword [rbx + 0x20], 0	      5775	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4
0x4008b9f	            0x742a	                            je 0x4008bcb	      5775	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4
0x4008ba1	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5776	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4	CALL_8
0x4008ba6	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      5776	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4	CALL_8
0x4008baa	          0x4885c9	                           test rcx, rcx	      5195	elf.c	FUNCTION_67	IF_1
0x4008bad	      0xb801000000	                              mov eax, 1	      5195	elf.c	FUNCTION_67	IF_1
0x4008bb2	        0x480f44c8	                          cmove rcx, rax	      5195	elf.c	FUNCTION_67	IF_1
0x4008bb6	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      5776	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4	CALL_8
0x4008bba	          0x4c29e8	                            sub rax, r13	      5776	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4	CALL_8
0x4008bbd	      0xba00000000	                              mov edx, 0	      5776	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4	CALL_8
0x4008bc2	          0x48f7f1	                                 div rcx	      5776	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4	CALL_8
0x4008bc5	        0x4a8d342a	                    lea rsi, [rdx + r13]	      5776	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4	CALL_8
0x4008bc9	            0xeb23	                           jmp 0x4008bee	      5776	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_4	CALL_8
0x4008bcb	        0x488b4b30	            mov rcx, qword [rbx + 0x30] 	      5779	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	ELSE_2	CALL_9
0x4008bcf	          0x4885c9	                           test rcx, rcx	      5195	elf.c	FUNCTION_67	IF_1
0x4008bd2	      0xb801000000	                              mov eax, 1	      5195	elf.c	FUNCTION_67	IF_1
0x4008bd7	        0x480f44c8	                          cmove rcx, rax	      5195	elf.c	FUNCTION_67	IF_1
0x4008bdb	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      5779	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	ELSE_2	CALL_9
0x4008bdf	          0x4c29e8	                            sub rax, r13	      5779	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	ELSE_2	CALL_9
0x4008be2	      0xba00000000	                              mov edx, 0	      5779	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	ELSE_2	CALL_9
0x4008be7	          0x48f7f1	                                 div rcx	      5779	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	ELSE_2	CALL_9
0x4008bea	        0x4a8d342a	                    lea rsi, [rdx + r13]	      5779	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	ELSE_2	CALL_9
0x4008bee	      0xba00000000	                              mov edx, 0	      5781	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	CALL_10
0x4008bf3	          0x4889df	                            mov rdi, rbx	      5781	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	CALL_10
0x4008bf6	      0xe800000000	                          call 0x4008bfb	      5781	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	CALL_10
0x4008bfb	          0x4989c5	                            mov r13, rax	      5781	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	CALL_10
0x4008bfe	            0xeb73	                           jmp 0x4008c73	      5781	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	CALL_10
0x4008c00	          0x8b4304	                mov eax, dword [rbx + 4]	      5784	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x4008c03	          0x83f809	                              cmp eax, 9	      5785	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x4008c06	            0x744e	                            je 0x4008c56	      5785	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x4008c08	          0x83f804	                              cmp eax, 4	      5785	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x4008c0b	            0x7508	                           jne 0x4008c15	      5785	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x4008c0d	            0xeb47	                           jmp 0x4008c56	      5785	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x4008c0f	        0xf6402308	               test byte [rax + 0x23], 8	      5787	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x4008c13	            0x7541	                           jne 0x4008c56	      5787	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x4008c15	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5789	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_11
0x4008c1c	    0x8b90780c0000	           mov edx, dword [rax + 0xc78] 	      5789	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_11
0x4008c22	        0x493b1cd6	            cmp rbx, qword [r14 + rdx*8]	      5789	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_11
0x4008c26	            0x742e	                            je 0x4008c56	      5789	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_11
0x4008c28	    0x488b90e80200	           mov rdx, qword [rax + 0x2e8] 	      5790	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_12
0x4008c2f	          0x4885d2	                           test rdx, rdx	      5790	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_12
0x4008c32	            0x7409	                            je 0x4008c3d	      5790	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_12
0x4008c34	          0x8b5250	            mov edx, dword [rdx + 0x50] 	      5791	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_13
0x4008c37	        0x493b1cd6	            cmp rbx, qword [r14 + rdx*8]	      5791	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_13
0x4008c3b	            0x7419	                            je 0x4008c56	      5791	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_13
0x4008c3d	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5792	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_14
0x4008c44	          0x8b5050	            mov edx, dword [rax + 0x50] 	      5792	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_14
0x4008c47	        0x493b1cd6	            cmp rbx, qword [r14 + rdx*8]	      5792	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_14
0x4008c4b	            0x7409	                            je 0x4008c56	      5792	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_14
0x4008c4d	          0x8b404c	            mov eax, dword [rax + 0x4c] 	      5793	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_15
0x4008c50	        0x493b1cc6	            cmp rbx, qword [r14 + rax*8]	      5793	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_15
0x4008c54	            0x750a	                           jne 0x4008c60	      5793	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5	CALL_15
0x4008c56	    0x48c74318ffff	mov qword [rbx + 0x18], 0xffffffffffffffff	      5794	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x4008c5e	            0xeb13	                           jmp 0x4008c73	      5794	elf.c	FUNCTION_71	FOR_1	ELSE_3	IF_5
0x4008c60	      0xba01000000	                              mov edx, 1	      5796	elf.c	FUNCTION_71	FOR_1	CALL_16
0x4008c65	          0x4c89ee	                            mov rsi, r13	      5796	elf.c	FUNCTION_71	FOR_1	CALL_16
0x4008c68	          0x4889df	                            mov rdi, rbx	      5796	elf.c	FUNCTION_71	FOR_1	CALL_16
0x4008c6b	      0xe800000000	                          call 0x4008c70	      5796	elf.c	FUNCTION_71	FOR_1	CALL_16
0x4008c70	          0x4989c5	                            mov r13, rax	      5796	elf.c	FUNCTION_71	FOR_1	CALL_16
0x4008c73	        0x4883c508	                              add rbp, 8	      5754	elf.c	FUNCTION_71	FOR_1
0x4008c77	          0x4939ec	                            cmp r12, rbp	      5754	elf.c	FUNCTION_71	FOR_1
0x4008c7a	     0xf877cfeffff	                            ja 0x4008afc	      5754	elf.c	FUNCTION_71	FOR_1
0x4008c80	      0x4c896c2410	             mov qword [rsp + 0x10], r13	      5754	elf.c	FUNCTION_71	FOR_1
0x4008c85	      0x4c8b6c2418	            mov r13, qword [rsp + 0x18] 	      5754	elf.c	FUNCTION_71	FOR_1
0x4008c8a	    0x498b85000300	           mov rax, qword [r13 + 0x300] 	      5804	elf.c	FUNCTION_71
0x4008c91	           0xfb630	                   movzx esi, byte [rax]	      5804	elf.c	FUNCTION_71
0x4008c94	          0x4889f0	                            mov rax, rsi	      5804	elf.c	FUNCTION_71
0x4008c97	        0x49034510	             add rax, qword [r13 + 0x10]	      5804	elf.c	FUNCTION_71
0x4008c9b	      0x4889442418	             mov qword [rsp + 0x18], rax	      5804	elf.c	FUNCTION_71
0x4008ca0	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5807	elf.c	FUNCTION_71	CALL_17
0x4008ca7	        0x4c8b7060	            mov r14, qword [rax + 0x60] 	      5807	elf.c	FUNCTION_71	CALL_17
0x4008cab	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x4008cb2	          0x488b00	                    mov rax, qword [rax]	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x4008cb5	          0x4885c0	                           test rax, rax	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x4008cb8	     0xf84d2080000	                            je 0x4009590	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x4008cbe	          0x4c89f2	                            mov rdx, r14	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x4008cc1	    0x48c744243800	               mov qword [rsp + 0x38], 0	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x4008cca	      0xbf00000000	                              mov edi, 0	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x4008ccf	    0x41bd00000000	                             mov r13d, 0	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x4008cd5	      0xbb00000000	                              mov ebx, 0	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x4008cda	        0x48833a01	                      cmp qword [rdx], 1	      5811	elf.c	FUNCTION_71	FOR_2	IF_6
0x4008cde	            0x7533	                           jne 0x4008d13	      5811	elf.c	FUNCTION_71	FOR_2	IF_6
0x4008ce0	         0xfb64840	           movzx ecx, byte [rax + 0x40] 	      5814	elf.c	FUNCTION_71	FOR_2	IF_7
0x4008ce4	          0xf6c110	                           test cl, 0x10	      5814	elf.c	FUNCTION_71	FOR_2	IF_7
0x4008ce7	            0x7413	                            je 0x4008cfc	      5814	elf.c	FUNCTION_71	FOR_2	IF_7
0x4008ce9	        0x4c8b6a18	            mov r13, qword [rdx + 0x18] 	      5816	elf.c	FUNCTION_71	FOR_2	IF_7
0x4008ced	        0x488b7a20	            mov rdi, qword [rdx + 0x20] 	      5817	elf.c	FUNCTION_71	FOR_2	IF_7
0x4008cf1	          0xf6c120	                           test cl, 0x20	      5819	elf.c	FUNCTION_71	FOR_2	IF_8
0x4008cf4	     0xf857c080000	                           jne 0x4009576	      5819	elf.c	FUNCTION_71	FOR_2	IF_8
0x4008cfa	            0xeb17	                           jmp 0x4008d13	      5819	elf.c	FUNCTION_71	FOR_2	IF_8
0x4008cfc	          0xf6c120	                           test cl, 0x20	      5819	elf.c	FUNCTION_71	FOR_2	IF_8
0x4008cff	            0x7412	                            je 0x4008d13	      5819	elf.c	FUNCTION_71	FOR_2	IF_8
0x4008d01	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	      5821	elf.c	FUNCTION_71	FOR_2	IF_8
0x4008d05	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      5821	elf.c	FUNCTION_71	FOR_2	IF_8
0x4008d0a	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	      5822	elf.c	FUNCTION_71	FOR_2	IF_8
0x4008d0e	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      5822	elf.c	FUNCTION_71	FOR_2	IF_8
0x4008d13	          0x488b00	                    mov rax, qword [rax]	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x4008d16	        0x4883c240	                           add rdx, 0x40	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x4008d1a	          0x4885c0	                           test rax, rax	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x4008d1d	            0x75bb	                           jne 0x4008cda	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x4008d1f	      0x48897c2430	             mov qword [rsp + 0x30], rdi	      5808	elf.c	FUNCTION_71	FOR_2	CALL_18
0x4008d24	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      5832	elf.c	FUNCTION_71	IF_10
0x4008d29	          0x4885f6	                           test rsi, rsi	      5832	elf.c	FUNCTION_71	IF_10
0x4008d2c	       0xf95442428	                 setne byte [rsp + 0x28]	      5832	elf.c	FUNCTION_71	IF_10
0x4008d31	       0xfb6442428	           movzx eax, byte [rsp + 0x28] 	      5832	elf.c	FUNCTION_71	IF_10
0x4008d36	          0x4885db	                           test rbx, rbx	      5832	elf.c	FUNCTION_71	IF_10
0x4008d39	     0xf849e090000	                            je 0x40096dd	      5832	elf.c	FUNCTION_71	IF_10
0x4008d3f	            0x84c0	                             test al, al	      5832	elf.c	FUNCTION_71	IF_10
0x4008d41	     0xf8496090000	                            je 0x40096dd	      5832	elf.c	FUNCTION_71	IF_10
0x4008d47	        0x488b7e28	            mov rdi, qword [rsi + 0x28] 	      5838	elf.c	FUNCTION_71	IF_10
0x4008d4b	    0x41b801000000	                              mov r8d, 1	      5838	elf.c	FUNCTION_71	IF_10
0x4008d51	      0xb900000000	                              mov ecx, 0	      5838	elf.c	FUNCTION_71	IF_10
0x4008d56	      0xba00000000	                              mov edx, 0	      5838	elf.c	FUNCTION_71	IF_10
0x4008d5b	      0xbe00000000	                              mov esi, 0	      5838	elf.c	FUNCTION_71	IF_10
0x4008d60	      0xe800000000	                          call 0x4008d65	      5838	elf.c	FUNCTION_71	IF_10
0x4008d65	          0x4885c0	                           test rax, rax	      5842	elf.c	FUNCTION_71	IF_10	IF_11
0x4008d68	            0x747c	                            je 0x4008de6	      5842	elf.c	FUNCTION_71	IF_10	IF_11
0x4008d6a	         0xfb65018	           movzx edx, byte [rax + 0x18] 	      5843	elf.c	FUNCTION_71	IF_10	IF_11
0x4008d6e	          0x80fa02	                               cmp dl, 2	      5843	elf.c	FUNCTION_71	IF_10	IF_11
0x4008d71	            0x7605	                           jbe 0x4008d78	      5843	elf.c	FUNCTION_71	IF_10	IF_11
0x4008d73	          0x80fa05	                               cmp dl, 5	      5843	elf.c	FUNCTION_71	IF_10	IF_11
0x4008d76	            0x756e	                           jne 0x4008de6	      5843	elf.c	FUNCTION_71	IF_10	IF_11
0x4008d78	        0x837b4400	               cmp dword [rbx + 0x44], 0	      5849	elf.c	FUNCTION_71	IF_10	IF_11	IF_12
0x4008d7c	            0x7406	                            je 0x4008d84	      5849	elf.c	FUNCTION_71	IF_10	IF_11	IF_12
0x4008d7e	        0x488b5348	            mov rdx, qword [rbx + 0x48] 	      5851	elf.c	FUNCTION_71	IF_10	IF_11	IF_12
0x4008d82	            0xeb34	                           jmp 0x4008db8	      5851	elf.c	FUNCTION_71	IF_10	IF_11	IF_12
0x4008d84	    0x498b97f80000	            mov rdx, qword [r15 + 0xf8] 	      5854	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	CALL_21
0x4008d8b	    0x488b92980c00	           mov rdx, qword [rdx + 0xc98] 	      5854	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	CALL_21
0x4008d92	          0x488b12	                    mov rdx, qword [rdx]	      5854	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	CALL_21
0x4008d95	          0x4885d2	                           test rdx, rdx	      5854	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	CALL_21
0x4008d98	            0x7434	                            je 0x4008dce	      5854	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	CALL_21
0x4008d9a	        0x837a4400	               cmp dword [rdx + 0x44], 0	      5855	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	IF_13
0x4008d9e	            0x740e	                            je 0x4008dae	      5855	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	IF_13
0x4008da0	            0xeb06	                           jmp 0x4008da8	      5855	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	IF_13
0x4008da2	        0x837a4400	               cmp dword [rdx + 0x44], 0	      5855	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	IF_13
0x4008da6	            0x7406	                            je 0x4008dae	      5855	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	IF_13
0x4008da8	        0x488b5248	            mov rdx, qword [rdx + 0x48] 	      5857	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	IF_13
0x4008dac	            0xeb0a	                           jmp 0x4008db8	      5857	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	IF_13
0x4008dae	          0x488b12	                    mov rdx, qword [rdx]	      5854	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	CALL_21
0x4008db1	          0x4885d2	                           test rdx, rdx	      5854	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	CALL_21
0x4008db4	            0x75ec	                           jne 0x4008da2	      5854	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	CALL_21
0x4008db6	            0xeb16	                           jmp 0x4008dce	      5854	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_5	FOR_3	CALL_21
0x4008db8	          0x4885d2	                           test rdx, rdx	      5861	elf.c	FUNCTION_71	IF_10	IF_11	IF_14
0x4008dbb	            0x7411	                            je 0x4008dce	      5861	elf.c	FUNCTION_71	IF_10	IF_11	IF_14
0x4008dbd	          0x4c89e9	                            mov rcx, r13	      5863	elf.c	FUNCTION_71	IF_10	IF_11	IF_14
0x4008dc0	        0x482b4a28	             sub rcx, qword [rdx + 0x28]	      5863	elf.c	FUNCTION_71	IF_10	IF_11	IF_14
0x4008dc4	        0x48894830	             mov qword [rax + 0x30], rcx	      5863	elf.c	FUNCTION_71	IF_10	IF_11	IF_14
0x4008dc8	        0x48895028	             mov qword [rax + 0x28], rdx	      5864	elf.c	FUNCTION_71	IF_10	IF_11	IF_14
0x4008dcc	            0xeb0c	                           jmp 0x4008dda	      5864	elf.c	FUNCTION_71	IF_10	IF_11	IF_14
0x4008dce	        0x4c896830	             mov qword [rax + 0x30], r13	      5868	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_6
0x4008dd2	    0x48c740280000	               mov qword [rax + 0x28], 0	      5869	elf.c	FUNCTION_71	IF_10	IF_11	ELSE_6
0x4008dda	        0xc6401803	                mov byte [rax + 0x18], 3	      5872	elf.c	FUNCTION_71	IF_10	IF_11
0x4008dde	        0x80486302	                 or byte [rax + 0x63], 2	      5873	elf.c	FUNCTION_71	IF_10	IF_11
0x4008de2	        0x806064fe	             and byte [rax + 0x64], 0xfe	      5874	elf.c	FUNCTION_71	IF_10	IF_11
0x4008de6	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x4008ded	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x4008df4	          0x488b18	                    mov rbx, qword [rax]	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x4008df7	          0x4885db	                           test rbx, rbx	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x4008dfa	     0xf8420030000	                            je 0x4009120	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x4008e00	          0x4c89f5	                            mov rbp, r14	      5827	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x4008e03	    0x41bc00000000	                             mov r12d, 0	        90	string3.h	FUNCTION_224	CALL_6
0x4008e09	      0x4c89742408	                mov qword [rsp + 8], r14	        90	string3.h	FUNCTION_224	CALL_6
0x4008e0e	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	        90	string3.h	FUNCTION_224	CALL_6
0x4008e13	        0x488b4500	                    mov rax, qword [rbp]	      5880	elf.c	FUNCTION_71	FOR_4	IF_15
0x4008e17	    0x483d52e57464	                     cmp rax, 0x6474e552	      5880	elf.c	FUNCTION_71	FOR_4	IF_15
0x4008e1d	     0xf85c1010000	                           jne 0x4008fe4	      5880	elf.c	FUNCTION_71	FOR_4	IF_15
0x4008e23	          0x4d85f6	                           test r14, r14	      5885	elf.c	FUNCTION_71	FOR_4	IF_15	IF_16
0x4008e26	            0x7418	                            je 0x4008e40	      5885	elf.c	FUNCTION_71	FOR_4	IF_15	IF_16
0x4008e28	    0x4d8b8ec80000	              mov r9, qword [r14 + 0xc8]	      5890	elf.c	FUNCTION_71	FOR_4	IF_15	IF_16
0x4008e2f	    0x4d8b96d00000	            mov r10, qword [r14 + 0xd0] 	      5891	elf.c	FUNCTION_71	FOR_4	IF_15	IF_16
0x4008e36	          0x4d39d1	                             cmp r9, r10	      5907	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19
0x4008e39	            0x7241	                            jb 0x4008e7c	      5907	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19
0x4008e3b	      0xe964010000	                           jmp 0x4008fa4	      5907	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19
0x4008e40	        0x837b4400	               cmp dword [rbx + 0x44], 0	      5893	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17
0x4008e44	     0xf8469010000	                            je 0x4008fb3	      5893	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17
0x4008e4a	        0xf6434008	               test byte [rbx + 0x40], 8	      5895	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17	IF_18
0x4008e4e	            0x7514	                           jne 0x4008e64	      5895	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17	IF_18
0x4008e50	      0xba00000000	                              mov edx, 0	      5896	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17	CALL_23
0x4008e55	      0xbe08170000	                         mov esi, 0x1708	      5896	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17	CALL_23
0x4008e5a	      0xbf00000000	                              mov edi, 0	      5896	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17	CALL_23
0x4008e5f	      0xe800000000	                          call 0x4008e64	      5896	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17	CALL_23
0x4008e64	        0x488b4348	            mov rax, qword [rbx + 0x48] 	      5897	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17
0x4008e68	        0x4c8b4828	              mov r9, qword [rax + 0x28]	      5897	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17
0x4008e6c	          0x4d89ca	                             mov r10, r9	      5898	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17
0x4008e6f	        0x4c035330	             add r10, qword [rbx + 0x30]	      5898	elf.c	FUNCTION_71	FOR_4	IF_15	ELSE_7	IF_17
0x4008e73	          0x4d39d1	                             cmp r9, r10	      5907	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19
0x4008e76	     0xf8337010000	                           jae 0x4008fb3	      5907	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19
0x4008e7c	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x4008e83	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x4008e8a	          0x488b00	                    mov rax, qword [rax]	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x4008e8d	          0x4885c0	                           test rax, rax	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x4008e90	     0xf8409010000	                            je 0x4008f9f	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x4008e96	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x4008e9b	        0x48833901	                      cmp qword [rcx], 1	      5919	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x4008e9f	            0x7540	                           jne 0x4008ee1	      5919	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x4008ea1	        0x448b4044	            mov r8d, dword [rax + 0x44] 	      5920	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x4008ea5	          0x4585c0	                           test r8d, r8d	      5920	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x4008ea8	            0x7437	                            je 0x4008ee1	      5920	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x4008eaa	        0x418d50ff	                       lea edx, [r8 - 1]	      5921	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x4008eae	      0x488b7cd048	    mov rdi, qword [rax + rdx*8 + 0x48] 	      5921	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x4008eb3	        0x4c8b5f28	            mov r11, qword [rdi + 0x28] 	      5921	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x4008eb7	          0x8b7720	            mov esi, dword [rdi + 0x20] 	      5924	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x4008eba	    0x81e602040000	                          and esi, 0x402	      5924	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x4008ec0	          0x4c89e2	                            mov rdx, r12	      5924	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x4008ec3	    0x81fe00040000	                          cmp esi, 0x400	      5924	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x4008ec9	            0x7404	                            je 0x4008ecf	      5924	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x4008ecb	        0x488b5738	            mov rdx, qword [rdi + 0x38] 	      5924	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x4008ecf	          0x4c01da	                            add rdx, r11	      5921	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x4008ed2	          0x4939d1	                             cmp r9, rdx	      5921	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x4008ed5	            0x730a	                           jae 0x4008ee1	      5921	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x4008ed7	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      5925	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x4008edb	        0x4c395228	            cmp qword [rdx + 0x28], r10 	      5925	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x4008edf	            0x7211	                            jb 0x4008ef2	      5925	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	IF_20
0x4008ee1	          0x488b00	                    mov rax, qword [rax]	      5917	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5
0x4008ee4	        0x4883c140	                           add rcx, 0x40	      5917	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5
0x4008ee8	          0x4885c0	                           test rax, rax	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x4008eeb	            0x75ae	                           jne 0x4008e9b	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x4008eed	      0xe9ad000000	                           jmp 0x4008f9f	      5915	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	FOR_5	CALL_24
0x4008ef2	          0x4885c0	                           test rax, rax	      5929	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21
0x4008ef5	     0xf84a5060000	                            je 0x40095a0	      5929	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21
0x4008efb	      0xba00000000	                              mov edx, 0	      5929	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21
0x4008f00	      0x488b7cd048	    mov rdi, qword [rax + rdx*8 + 0x48] 	      5934	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6
0x4008f05	        0x488b7728	            mov rsi, qword [rdi + 0x28] 	      5935	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6	IF_22
0x4008f09	          0x4939f1	                             cmp r9, rsi	      5936	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6	IF_22
0x4008f0c	            0x770c	                            ja 0x4008f1a	      5936	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6	IF_22
0x4008f0e	          0x4c39d6	                            cmp rsi, r10	      5936	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6	IF_22
0x4008f11	            0x7307	                           jae 0x4008f1a	      5936	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6	IF_22
0x4008f13	      0x48837f3800	               cmp qword [rdi + 0x38], 0	      5937	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6	IF_22
0x4008f18	            0x750b	                           jne 0x4008f25	      5937	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6	IF_22
0x4008f1a	        0x4883c201	                              add rdx, 1	      5937	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6	IF_22
0x4008f1e	          0x4139d0	                            cmp r8d, edx	      5932	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6
0x4008f21	            0x77dd	                            ja 0x4008f00	      5932	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6
0x4008f23	            0xeb7a	                           jmp 0x4008f9f	      5932	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	FOR_6
0x4008f25	          0x4139d0	                            cmp r8d, edx	      5941	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x4008f28	     0xf8672060000	                           jbe 0x40095a0	      5941	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x4008f2e	            0x89d2	                            mov edx, edx	      5941	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x4008f30	        0x488d04d0	                  lea rax, [rax + rdx*8]	      5941	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x4008f34	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      5943	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x4008f38	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	      5943	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x4008f3c	        0x48895518	            mov qword [rbp + 0x18], rdx 	      5943	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x4008f40	        0x488b7048	            mov rsi, qword [rax + 0x48] 	      5944	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x4008f44	        0x488b7630	            mov rsi, qword [rsi + 0x30] 	      5944	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x4008f48	        0x48897520	            mov qword [rbp + 0x20], rsi 	      5944	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x4008f4c	        0x488b4048	            mov rax, qword [rax + 0x48] 	      5945	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x4008f50	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      5945	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x4008f57	        0x48894510	            mov qword [rbp + 0x10], rax 	      5945	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x4008f5b	          0x4929d2	                            sub r10, rdx	      5946	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x4008f5e	        0x4c895530	            mov qword [rbp + 0x30], r10 	      5946	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x4008f62	        0x4c895528	            mov qword [rbp + 0x28], r10 	      5947	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23
0x4008f66	        0x488b4128	            mov rax, qword [rcx + 0x28] 	      5955	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x4008f6a	        0x48034118	             add rax, qword [rcx + 0x18]	      5955	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x4008f6e	          0x4829d0	                            sub rax, rdx	      5955	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x4008f71	          0x4939c2	                            cmp r10, rax	      5955	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x4008f74	            0x7604	                           jbe 0x4008f7a	      5955	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x4008f76	        0x48894528	            mov qword [rbp + 0x28], rax 	      5956	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_24
0x4008f7a	        0xf6434004	               test byte [rbx + 0x40], 4	      5964	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_25
0x4008f7e	            0x7508	                           jne 0x4008f88	      5964	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_25
0x4008f80	    0x48c745380100	               mov qword [rbp + 0x38], 1	      5965	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_25
0x4008f88	        0xf6434001	               test byte [rbx + 0x40], 1	      5966	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_26
0x4008f8c	     0xf857e010000	                           jne 0x4009110	      5966	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_26
0x4008f92	    0x48c745080400	                  mov qword [rbp + 8], 4	      5967	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_26
0x4008f9a	      0xe971010000	                           jmp 0x4009110	      5967	elf.c	FUNCTION_71	FOR_4	IF_15	IF_19	IF_21	IF_23	IF_26
0x4008f9f	          0x4d85f6	                           test r14, r14	      5973	elf.c	FUNCTION_71	FOR_4	IF_15	CALL_25
0x4008fa2	            0x740f	                            je 0x4008fb3	      5973	elf.c	FUNCTION_71	FOR_4	IF_15	CALL_25
0x4008fa4	      0xbe55170000	                         mov esi, 0x1755	      5973	elf.c	FUNCTION_71	FOR_4	IF_15	CALL_25
0x4008fa9	      0xbf00000000	                              mov edi, 0	      5973	elf.c	FUNCTION_71	FOR_4	IF_15	CALL_25
0x4008fae	      0xe800000000	                          call 0x4008fb3	      5973	elf.c	FUNCTION_71	FOR_4	IF_15	CALL_25
0x4008fb3	    0x48c745000000	                      mov qword [rbp], 0	        90	string3.h	FUNCTION_224	CALL_6
0x4008fbb	    0x48c745380000	               mov qword [rbp + 0x38], 0	        90	string3.h	FUNCTION_224	CALL_6
0x4008fc3	        0x488d7d08	                      lea rdi, [rbp + 8]	        90	string3.h	FUNCTION_224	CALL_6
0x4008fc7	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_224	CALL_6
0x4008fcb	          0x4889e9	                            mov rcx, rbp	        90	string3.h	FUNCTION_224	CALL_6
0x4008fce	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_224	CALL_6
0x4008fd1	          0x83c140	                           add ecx, 0x40	        90	string3.h	FUNCTION_224	CALL_6
0x4008fd4	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_224	CALL_6
0x4008fd7	            0x89c9	                            mov ecx, ecx	        90	string3.h	FUNCTION_224	CALL_6
0x4008fd9	          0x4c89e0	                            mov rax, r12	        90	string3.h	FUNCTION_224	CALL_6
0x4008fdc	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_224	CALL_6
0x4008fdf	      0xe92c010000	                           jmp 0x4009110	        90	string3.h	FUNCTION_224	CALL_6
0x4008fe4	    0x483d51e57464	                     cmp rax, 0x6474e551	      5977	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29
0x4008fea	            0x7517	                           jne 0x4009003	      5977	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29
0x4008fec	        0xf6434008	               test byte [rbx + 0x40], 8	      5979	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29	IF_30
0x4008ff0	     0xf841a010000	                            je 0x4009110	      5979	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29	IF_30
0x4008ff6	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      5980	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29	IF_30
0x4008ffa	        0x48894530	            mov qword [rbp + 0x30], rax 	      5980	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29	IF_30
0x4008ffe	      0xe90d010000	                           jmp 0x4009110	      5980	elf.c	FUNCTION_71	FOR_4	ELSE_9	IF_29	IF_30
0x4009003	        0x837b4400	               cmp dword [rbx + 0x44], 0	      5982	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31
0x4009007	     0xf84ca000000	                            je 0x40090d7	      5982	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31
0x400900d	        0x4883f801	                              cmp rax, 1	      5986	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x4009011	     0xf84f9000000	                            je 0x4009110	      5986	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x4009017	        0x4883f804	                              cmp rax, 4	      5987	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400901b	            0x7511	                           jne 0x400902e	      5987	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400901d	      0x410fb64744	           movzx eax, byte [r15 + 0x44] 	      5988	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x4009022	          0x83e007	                              and eax, 7	      5988	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x4009025	            0x3c03	                               cmp al, 3	      5988	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x4009027	            0x7517	                           jne 0x4009040	      5988	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x4009029	      0xe9e2000000	                           jmp 0x4009110	      5988	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400902e	        0x4883f806	                              cmp rax, 6	      5992	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_33
0x4009032	            0x750c	                           jne 0x4009040	      5992	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_33
0x4009034	    0xc74344000000	               mov dword [rbx + 0x44], 0	      5994	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_33
0x400903b	      0xe9d0000000	                           jmp 0x4009110	      5994	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_33
0x4009040	        0xf6434030	           test byte [rbx + 0x40], 0x30 	      5998	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34
0x4009044	            0x7438	                            je 0x400907e	      5998	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34
0x4009046	      0x4c8b742408	                mov r14, qword [rsp + 8]	      5998	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34
0x400904b	      0xba05000000	                              mov edx, 5	      6002	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_28
0x4009050	      0xbe00000000	                              mov esi, 0	      6002	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_28
0x4009055	      0xbf00000000	                              mov edi, 0	      6002	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_28
0x400905a	      0xe800000000	                          call 0x400905f	      6002	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_28
0x400905f	          0x4889ea	                            mov rdx, rbp	      6001	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_27
0x4009062	          0x4c29f2	                            sub rdx, r14	      6001	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_27
0x4009065	        0x48c1fa06	                              sar rdx, 6	      6001	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_27
0x4009069	          0x4c89fe	                            mov rsi, r15	      6001	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_27
0x400906c	          0x4889c7	                            mov rdi, rax	      6001	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_27
0x400906f	      0xb800000000	                              mov eax, 0	      6001	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_27
0x4009074	      0xe800000000	                          call 0x4009079	      6001	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_27
0x4009079	      0xe916030000	                           jmp 0x4009394	      6001	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	IF_34	CALL_27
0x400907e	    0x48c745280000	               mov qword [rbp + 0x28], 0	      6008	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x4009086	        0x488b4348	            mov rax, qword [rbx + 0x48] 	      6009	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400908a	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      6009	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x4009091	        0x48894510	            mov qword [rbp + 0x10], rax 	      6009	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x4009095	          0x8b4344	            mov eax, dword [rbx + 0x44] 	      6009	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x4009098	          0x83e801	                              sub eax, 1	      6009	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400909b	            0xeb33	                           jmp 0x40090d0	      6009	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32
0x400909d	            0x89c2	                            mov edx, eax	      6012	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x400909f	      0x488b4cd348	    mov rcx, qword [rbx + rdx*8 + 0x48] 	      6012	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x40090a4	    0x488b91e00000	            mov rdx, qword [rcx + 0xe0] 	      6013	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	CALL_29
0x40090ab	          0x83e801	                              sub eax, 1	      6013	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	CALL_29
0x40090ae	        0x837a0408	                  cmp dword [rdx + 4], 8	      6014	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x40090b2	            0x741c	                            je 0x40090d0	      6014	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x40090b4	        0x488b7348	            mov rsi, qword [rbx + 0x48] 	      6016	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x40090b8	    0x488b81900000	            mov rax, qword [rcx + 0x90] 	      6016	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x40090bf	    0x482b86900000	             sub rax, qword [rsi + 0x90]	      6016	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x40090c6	        0x48034220	             add rax, qword [rdx + 0x20]	      6016	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x40090ca	        0x48894528	            mov qword [rbp + 0x28], rax 	      6016	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x40090ce	            0xeb40	                           jmp 0x4009110	      6016	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7	IF_35
0x40090d0	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      6010	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x40090d3	            0x75c8	                           jne 0x400909d	      6010	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x40090d5	            0xeb39	                           jmp 0x4009110	      6010	elf.c	FUNCTION_71	FOR_4	ELSE_10	IF_31	IF_32	FOR_7
0x40090d7	         0xfb64340	           movzx eax, byte [rbx + 0x40] 	      6023	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36
0x40090db	            0xa810	                           test al, 0x10	      6023	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36
0x40090dd	            0x7415	                            je 0x40090f4	      6023	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36
0x40090df	        0x4c896d18	            mov qword [rbp + 0x18], r13 	      6025	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36
0x40090e3	        0xf6434002	               test byte [rbx + 0x40], 2	      6026	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36	IF_37
0x40090e7	            0x7527	                           jne 0x4009110	      6026	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36	IF_37
0x40090e9	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      6027	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36	IF_37
0x40090ee	        0x48894520	            mov qword [rbp + 0x20], rax 	      6027	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36	IF_37
0x40090f2	            0xeb1c	                           jmp 0x4009110	      6027	elf.c	FUNCTION_71	FOR_4	ELSE_11	IF_36	IF_37
0x40090f4	            0xa820	                           test al, 0x20	      6029	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38
0x40090f6	            0x7418	                            je 0x4009110	      6029	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38
0x40090f8	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      6031	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38
0x40090fd	        0x48894518	            mov qword [rbp + 0x18], rax 	      6031	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38
0x4009101	        0xf6434002	               test byte [rbx + 0x40], 2	      6032	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38	IF_39
0x4009105	            0x7509	                           jne 0x4009110	      6032	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38	IF_39
0x4009107	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      6033	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38	IF_39
0x400910c	        0x48894520	            mov qword [rbp + 0x20], rax 	      6033	elf.c	FUNCTION_71	FOR_4	ELSE_12	IF_38	IF_39
0x4009110	          0x488b1b	                    mov rbx, qword [rbx]	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x4009113	        0x4883c540	                           add rbp, 0x40	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x4009117	          0x4885db	                           test rbx, rbx	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x400911a	     0xf85f3fcffff	                           jne 0x4008e13	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x4009120	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      6037	elf.c	FUNCTION_71	CALL_30
0x4009127	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      6037	elf.c	FUNCTION_71	CALL_30
0x400912e	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      6037	elf.c	FUNCTION_71	CALL_30
0x4009133	        0x48897040	             mov qword [rax + 0x40], rsi	      6037	elf.c	FUNCTION_71	CALL_30
0x4009137	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      6125	elf.c	FUNCTION_73	ELSE_2	IF_5
0x400913c	    0x488b80580100	           mov rax, qword [rax + 0x158] 	      6125	elf.c	FUNCTION_73	ELSE_2	IF_5
0x4009143	          0x4885c0	                           test rax, rax	      6125	elf.c	FUNCTION_73	ELSE_2	IF_5
0x4009146	            0x7412	                            je 0x400915a	      6125	elf.c	FUNCTION_73	ELSE_2	IF_5
0x4009148	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      6127	elf.c	FUNCTION_73	ELSE_2	IF_5	IF_6
0x400914d	          0x4c89ff	                            mov rdi, r15	      6127	elf.c	FUNCTION_73	ELSE_2	IF_5	IF_6
0x4009150	            0xffd0	                                call rax	      6127	elf.c	FUNCTION_73	ELSE_2	IF_5	IF_6
0x4009152	            0x85c0	                           test eax, eax	      6127	elf.c	FUNCTION_73	ELSE_2	IF_5	IF_6
0x4009154	     0xf843a020000	                            je 0x4009394	      6127	elf.c	FUNCTION_73	ELSE_2	IF_5	IF_6
0x400915a	      0x807c242800	                cmp byte [rsp + 0x28], 0	      6132	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_15
0x400915f	            0x745a	                            je 0x40091bb	      6132	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_15
0x4009161	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      6132	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_15
0x4009166	           0xfb600	                   movzx eax, byte [rax]	      6132	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_15
0x4009169	          0x83e003	                              and eax, 3	      6132	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_15
0x400916c	            0x3c01	                               cmp al, 1	      6132	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_15
0x400916e	            0x754b	                           jne 0x40091bb	      6132	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_15
0x4009170	    0x498b97f80000	            mov rdx, qword [r15 + 0xf8] 	      6134	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_16
0x4009177	        0x488b4260	            mov rax, qword [rdx + 0x60] 	      6135	elf.c	FUNCTION_73	ELSE_2	IF_7	CALL_17
0x400917b	          0x8b5244	            mov edx, dword [rdx + 0x44] 	      6136	elf.c	FUNCTION_73	ELSE_2	IF_7
0x400917e	        0x48c1e206	                              shl rdx, 6	      6136	elf.c	FUNCTION_73	ELSE_2	IF_7
0x4009182	          0x4801c2	                            add rdx, rax	      6136	elf.c	FUNCTION_73	ELSE_2	IF_7
0x4009185	          0x4839d0	                            cmp rax, rdx	      6140	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2
0x4009188	            0x7326	                           jae 0x40091b0	      6140	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2
0x400918a	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      6140	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2
0x4009191	        0x48833801	                      cmp qword [rax], 1	      6141	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2	IF_8
0x4009195	            0x750b	                           jne 0x40091a2	      6141	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2	IF_8
0x4009197	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      6141	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2	IF_8
0x400919b	          0x4839f1	                            cmp rcx, rsi	      6141	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2	IF_8
0x400919e	        0x480f47ce	                          cmova rcx, rsi	      6141	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2	IF_8
0x40091a2	        0x4883c040	                           add rax, 0x40	      6140	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2
0x40091a6	          0x4839c2	                            cmp rdx, rax	      6140	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2
0x40091a9	            0x77e6	                            ja 0x4009191	      6140	elf.c	FUNCTION_73	ELSE_2	IF_7	FOR_2
0x40091ab	          0x4885c9	                           test rcx, rcx	      6146	elf.c	FUNCTION_73	ELSE_2	IF_7	IF_9
0x40091ae	            0x740b	                            je 0x40091bb	      6146	elf.c	FUNCTION_73	ELSE_2	IF_7	IF_9
0x40091b0	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      6147	elf.c	FUNCTION_73	ELSE_2	IF_7	IF_9
0x40091b5	    0x66c740380200	                mov word [rax + 0x38], 2	      6147	elf.c	FUNCTION_73	ELSE_2	IF_7	IF_9
0x40091bb	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      6151	elf.c	FUNCTION_73	ELSE_2	CALL_18
0x40091c2	          0x8b5844	            mov ebx, dword [rax + 0x44] 	      6151	elf.c	FUNCTION_73	ELSE_2	CALL_18
0x40091c5	            0x85db	                           test ebx, ebx	      6152	elf.c	FUNCTION_73	ELSE_2	IF_10
0x40091c7	     0xf84ce000000	                            je 0x400929b	      6152	elf.c	FUNCTION_73	ELSE_2	IF_10
0x40091cd	          0x83fb01	                              cmp ebx, 1	      6166	elf.c	FUNCTION_73	ELSE_2	IF_11
0x40091d0	            0x767e	                           jbe 0x4009250	      6166	elf.c	FUNCTION_73	ELSE_2	IF_11
0x40091d2	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      6167	elf.c	FUNCTION_73	ELSE_2	IF_11
0x40091d7	        0x488b7060	            mov rsi, qword [rax + 0x60] 	      6167	elf.c	FUNCTION_73	ELSE_2	IF_11
0x40091db	        0x48833e06	                      cmp qword [rsi], 6	      6167	elf.c	FUNCTION_73	ELSE_2	IF_11
0x40091df	            0x756f	                           jne 0x4009250	      6167	elf.c	FUNCTION_73	ELSE_2	IF_11
0x40091e1	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      6168	elf.c	FUNCTION_73	ELSE_2	IF_11
0x40091e6	    0x488b80600100	           mov rax, qword [rax + 0x160] 	      6168	elf.c	FUNCTION_73	ELSE_2	IF_11
0x40091ed	          0x4885c0	                           test rax, rax	      6168	elf.c	FUNCTION_73	ELSE_2	IF_11
0x40091f0	            0x740b	                            je 0x40091fd	      6168	elf.c	FUNCTION_73	ELSE_2	IF_11
0x40091f2	            0x89da	                            mov edx, ebx	      6169	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_19
0x40091f4	          0x4c89ff	                            mov rdi, r15	      6169	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_19
0x40091f7	            0xffd0	                                call rax	      6169	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_19
0x40091f9	            0x85c0	                           test eax, eax	      6169	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_19
0x40091fb	            0x7553	                           jne 0x4009250	      6169	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_19
0x40091fd	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      6171	elf.c	FUNCTION_73	ELSE_2	IF_11
0x4009202	        0x488b4060	            mov rax, qword [rax + 0x60] 	      6171	elf.c	FUNCTION_73	ELSE_2	IF_11
0x4009206	      0x4883784001	               cmp qword [rax + 0x40], 1	      6171	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400920b	            0x7543	                           jne 0x4009250	      6171	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400920d	        0x488b4858	            mov rcx, qword [rax + 0x58] 	      6172	elf.c	FUNCTION_73	ELSE_2	IF_11
0x4009211	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      6172	elf.c	FUNCTION_73	ELSE_2	IF_11
0x4009215	          0x4839d1	                            cmp rcx, rdx	      6172	elf.c	FUNCTION_73	ELSE_2	IF_11
0x4009218	            0x770d	                            ja 0x4009227	      6172	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400921a	        0x48034870	             add rcx, qword [rax + 0x70]	      6173	elf.c	FUNCTION_73	ELSE_2	IF_11
0x400921e	        0x48035030	             add rdx, qword [rax + 0x30]	      6173	elf.c	FUNCTION_73	ELSE_2	IF_11
0x4009222	          0x4839d1	                            cmp rcx, rdx	      6173	elf.c	FUNCTION_73	ELSE_2	IF_11
0x4009225	            0x7329	                           jae 0x4009250	      6173	elf.c	FUNCTION_73	ELSE_2	IF_11
0x4009227	      0xba05000000	                              mov edx, 5	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_21
0x400922c	      0xbe00000000	                              mov esi, 0	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_21
0x4009231	      0xbf00000000	                              mov edi, 0	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_21
0x4009236	      0xe800000000	                          call 0x400923b	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_21
0x400923b	          0x4c89fe	                            mov rsi, r15	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_21
0x400923e	          0x4889c7	                            mov rdi, rax	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_21
0x4009241	      0xb800000000	                              mov eax, 0	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_21
0x4009246	      0xe800000000	                          call 0x400924b	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_21
0x400924b	      0xe944010000	                           jmp 0x4009394	      6179	elf.c	FUNCTION_73	ELSE_2	IF_11	CALL_21
0x4009250	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_22
0x4009255	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_22
0x400925c	           0xfb630	                   movzx esi, byte [rax]	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_22
0x400925f	      0xba00000000	                              mov edx, 0	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_22
0x4009264	          0x4c89ff	                            mov rdi, r15	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_22
0x4009267	      0xe800000000	                          call 0x400926c	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_22
0x400926c	            0x89c5	                            mov ebp, eax	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_22
0x400926e	            0x85c0	                           test eax, eax	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_22
0x4009270	     0xf851e010000	                           jne 0x4009394	      6185	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_22
0x4009276	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_23
0x400927b	        0x488b7060	            mov rsi, qword [rax + 0x60] 	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_23
0x400927f	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_23
0x4009284	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_23
0x400928b	            0x89da	                            mov edx, ebx	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_23
0x400928d	          0x4c89ff	                            mov rdi, r15	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_23
0x4009290	          0xff5010	                 call qword [rax + 0x10]	      6186	elf.c	FUNCTION_73	ELSE_2	IF_12	CALL_23
0x4009293	            0x85c0	                           test eax, eax	      4281	elf.c	FUNCTION_59	IF_10	CALL_8
0x4009295	     0xf85f2000000	                           jne 0x400938d	      4281	elf.c	FUNCTION_59	IF_10	CALL_8
0x400929b	      0x837c247000	               cmp dword [rsp + 0x70], 0	      4284	elf.c	FUNCTION_59	IF_11
0x40092a0	     0xf84ae000000	                            je 0x4009354	      4284	elf.c	FUNCTION_59	IF_11
0x40092a6	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      4289	elf.c	FUNCTION_59	IF_11	CALL_9
0x40092ad	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      4289	elf.c	FUNCTION_59	IF_11	CALL_9
0x40092b4	        0x488b7240	            mov rsi, qword [rdx + 0x40] 	      4289	elf.c	FUNCTION_59	IF_11	CALL_9
0x40092b8	        0x488d7868	                   lea rdi, [rax + 0x68]	      4291	elf.c	FUNCTION_59	IF_11	CALL_10
0x40092bc	      0xba01000000	                              mov edx, 1	      4292	elf.c	FUNCTION_59	IF_11	CALL_11
0x40092c1	      0xe800000000	                          call 0x40092c6	      4292	elf.c	FUNCTION_59	IF_11	CALL_11
0x40092c6	    0x498b97f80000	            mov rdx, qword [r15 + 0xf8] 	      4294	elf.c	FUNCTION_59	IF_11	IF_12	CALL_12
0x40092cd	    0x488bbae80200	           mov rdi, qword [rdx + 0x2e8] 	      4294	elf.c	FUNCTION_59	IF_11	IF_12	CALL_12
0x40092d4	          0x4885ff	                           test rdi, rdi	      4294	elf.c	FUNCTION_59	IF_11	IF_12	CALL_12
0x40092d7	            0x7414	                            je 0x40092ed	      4294	elf.c	FUNCTION_59	IF_11	IF_12	CALL_12
0x40092d9	      0x48837f2000	               cmp qword [rdi + 0x20], 0	      4297	elf.c	FUNCTION_59	IF_11	IF_12	IF_13
0x40092de	            0x740d	                            je 0x40092ed	      4297	elf.c	FUNCTION_59	IF_11	IF_12	IF_13
0x40092e0	      0xba01000000	                              mov edx, 1	      4298	elf.c	FUNCTION_59	IF_11	IF_12	CALL_14
0x40092e5	          0x4889c6	                            mov rsi, rax	      4298	elf.c	FUNCTION_59	IF_11	IF_12	CALL_14
0x40092e8	      0xe800000000	                          call 0x40092ed	      4298	elf.c	FUNCTION_59	IF_11	IF_12	CALL_14
0x40092ed	    0x498b9ff80000	            mov rbx, qword [r15 + 0xf8] 	      4302	elf.c	FUNCTION_59	IF_11	CALL_15
0x40092f4	    0x488dbb080100	                  lea rdi, [rbx + 0x108]	      4302	elf.c	FUNCTION_59	IF_11	CALL_15
0x40092fb	      0xba01000000	                              mov edx, 1	      4303	elf.c	FUNCTION_59	IF_11	CALL_16
0x4009300	          0x4889c6	                            mov rsi, rax	      4303	elf.c	FUNCTION_59	IF_11	CALL_16
0x4009303	      0xe800000000	                          call 0x4009308	      4303	elf.c	FUNCTION_59	IF_11	CALL_16
0x4009308	    0x498b97f80000	            mov rdx, qword [r15 + 0xf8] 	      4305	elf.c	FUNCTION_59	IF_11	CALL_17
0x400930f	    0x488b92980c00	           mov rdx, qword [rdx + 0xc98] 	      4305	elf.c	FUNCTION_59	IF_11	CALL_17
0x4009316	        0x48894240	             mov qword [rdx + 0x40], rax	      4305	elf.c	FUNCTION_59	IF_11	CALL_17
0x400931a	    0x488bb3200100	           mov rsi, qword [rbx + 0x120] 	      4309	elf.c	FUNCTION_59	IF_11	IF_14	CALL_18
0x4009321	      0xba00000000	                              mov edx, 0	      4309	elf.c	FUNCTION_59	IF_11	IF_14	CALL_18
0x4009326	          0x4c89ff	                            mov rdi, r15	      4309	elf.c	FUNCTION_59	IF_11	IF_14	CALL_18
0x4009329	      0xe800000000	                          call 0x400932e	      4309	elf.c	FUNCTION_59	IF_11	IF_14	CALL_18
0x400932e	            0x85c0	                           test eax, eax	      4309	elf.c	FUNCTION_59	IF_11	IF_14	CALL_18
0x4009330	            0x7562	                           jne 0x4009394	      4309	elf.c	FUNCTION_59	IF_11	IF_14	CALL_18
0x4009332	      0x488b742458	            mov rsi, qword [rsp + 0x58] 	      4310	elf.c	FUNCTION_59	IF_11	IF_14	CALL_19
0x4009337	          0x4c89ff	                            mov rdi, r15	      4310	elf.c	FUNCTION_59	IF_11	IF_14	CALL_19
0x400933a	      0xe800000000	                          call 0x400933f	      4310	elf.c	FUNCTION_59	IF_11	IF_14	CALL_19
0x400933f	    0x898424880000	             mov dword [rsp + 0x88], eax	      4310	elf.c	FUNCTION_59	IF_11	IF_14	CALL_19
0x4009346	            0x85c0	                           test eax, eax	      4310	elf.c	FUNCTION_59	IF_11	IF_14	CALL_19
0x4009348	            0x744a	                            je 0x4009394	      4310	elf.c	FUNCTION_59	IF_11	IF_14	CALL_19
0x400934a	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      4312	elf.c	FUNCTION_59	IF_11	CALL_20
0x400934f	      0xe800000000	                          call 0x4009354	      4312	elf.c	FUNCTION_59	IF_11	CALL_20
0x4009354	      0x41804f4740	              or byte [r15 + 0x47], 0x40	      4315	elf.c	FUNCTION_59
0x4009359	    0xc78424880000	               mov dword [rsp + 0x88], 1	      4317	elf.c	FUNCTION_59
0x4009364	            0xeb2e	                           jmp 0x4009394	      4317	elf.c	FUNCTION_59
0x4009366	    0xc78424880000	               mov dword [rsp + 0x88], 1	      4226	elf.c	FUNCTION_59	IF_1
0x4009371	            0xeb21	                           jmp 0x4009394	      4226	elf.c	FUNCTION_59	IF_1
0x4009373	    0xc78424880000	               mov dword [rsp + 0x88], 0	      4233	elf.c	FUNCTION_59	IF_3
0x400937e	            0xeb14	                           jmp 0x4009394	      4233	elf.c	FUNCTION_59	IF_3
0x4009380	    0xc78424880000	               mov dword [rsp + 0x88], 0	      4242	elf.c	FUNCTION_59	IF_4
0x400938b	            0xeb07	                           jmp 0x4009394	      4242	elf.c	FUNCTION_59	IF_4
0x400938d	    0x89ac24880000	             mov dword [rsp + 0x88], ebp	      4282	elf.c	FUNCTION_59	IF_10
0x4009394	    0x8b8424880000	            mov eax, dword [rsp + 0x88] 	      4318	elf.c	FUNCTION_59
0x400939b	    0x488b8c24e800	            mov rcx, qword [rsp + 0xe8] 	      4318	elf.c	FUNCTION_59
0x40093a3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4318	elf.c	FUNCTION_59
0x40093ac	     0xf8446030000	                            je 0x40096f8	      4318	elf.c	FUNCTION_59
0x40093b2	      0xe93c030000	                           jmp 0x40096f3	      4318	elf.c	FUNCTION_59
0x40093b7	    0xc78424880000	               mov dword [rsp + 0x88], 0	      4233	elf.c	FUNCTION_59	IF_3
0x40093c2	            0xebd0	                           jmp 0x4009394	      4233	elf.c	FUNCTION_59	IF_3
0x40093c4	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3718	elf.c	FUNCTION_52	IF_11	CALL_12
0x40093cb	      0x418d5c2401	                      lea ebx, [r12 + 1]	      3718	elf.c	FUNCTION_52	IF_11	CALL_12
0x40093d0	    0x4489a0780c00	           mov dword [rax + 0xc78], r12d	      3718	elf.c	FUNCTION_52	IF_11	CALL_12
0x40093d7	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3719	elf.c	FUNCTION_52	IF_11	CALL_14
0x40093dc	          0x8b7068	            mov esi, dword [rax + 0x68] 	      3719	elf.c	FUNCTION_52	IF_11	CALL_14
0x40093df	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      3719	elf.c	FUNCTION_52	IF_11	CALL_14
0x40093e6	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3719	elf.c	FUNCTION_52	IF_11	CALL_14
0x40093ed	        0x488b7808	                mov rdi, qword [rax + 8]	      3719	elf.c	FUNCTION_52	IF_11	CALL_14
0x40093f1	      0xe800000000	                          call 0x40093f6	      3719	elf.c	FUNCTION_52	IF_11	CALL_14
0x40093f6	          0x4189dd	                           mov r13d, ebx	      3718	elf.c	FUNCTION_52	IF_11	CALL_12
0x40093f9	    0x81fbfefe0000	                         cmp ebx, 0xfefe	      3720	elf.c	FUNCTION_52	IF_11	IF_12
0x40093ff	     0xf8610d6ffff	                           jbe 0x4006a15	      3720	elf.c	FUNCTION_52	IF_11	IF_12
0x4009405	      0xe998d5ffff	                           jmp 0x40069a2	      3720	elf.c	FUNCTION_52	IF_11	IF_12
0x400940a	          0x8b437c	            mov eax, dword [rbx + 0x7c] 	      3795	elf.c	FUNCTION_52	FOR_3	IF_20
0x400940d	            0x85c0	                           test eax, eax	      3795	elf.c	FUNCTION_52	FOR_3	IF_20
0x400940f	     0xf8519d8ffff	                           jne 0x4006c2e	      3795	elf.c	FUNCTION_52	FOR_3	IF_20
0x4009415	      0xe97ed8ffff	                           jmp 0x4006c98	      3795	elf.c	FUNCTION_52	FOR_3	IF_20
0x400941a	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      4249	elf.c	FUNCTION_59
0x4009420	     0xf85bb010000	                           jne 0x40095e1	      4249	elf.c	FUNCTION_59
0x4009426	      0xe9c0dcffff	                           jmp 0x40070eb	      4249	elf.c	FUNCTION_59
0x400942b	        0x418b4744	            mov eax, dword [r15 + 0x44] 	      4255	elf.c	FUNCTION_59	IF_6
0x400942f	          0xc1e805	                              shr eax, 5	      4255	elf.c	FUNCTION_59	IF_6
0x4009432	      0x25ffff0f00	                        and eax, 0xfffff	      4255	elf.c	FUNCTION_59	IF_6
0x4009437	        0x89442440	             mov dword [rsp + 0x40], eax	      4255	elf.c	FUNCTION_59	IF_6
0x400943b	    0x498b87b00000	            mov rax, qword [r15 + 0xb0] 	      4066	elf.c	FUNCTION_56
0x4009442	      0x4889442418	             mov qword [rsp + 0x18], rax	      4066	elf.c	FUNCTION_56
0x4009447	    0x498b87900000	            mov rax, qword [r15 + 0x90] 	      4082	elf.c	FUNCTION_56	FOR_1
0x400944e	      0xbb00000000	                              mov ebx, 0	      4082	elf.c	FUNCTION_56	FOR_1
0x4009453	          0x4885c0	                           test rax, rax	      4082	elf.c	FUNCTION_56	FOR_1
0x4009456	     0xf85cbdcffff	                           jne 0x4007127	      4082	elf.c	FUNCTION_56	FOR_1
0x400945c	      0xe9d7dcffff	                           jmp 0x4007138	      4082	elf.c	FUNCTION_56	FOR_1
0x4009461	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      4269	elf.c	FUNCTION_59	CALL_7
0x4009468	    0xc780bc000000	               mov dword [rax + 0xbc], 3	      4271	elf.c	FUNCTION_59
0x4009472	      0x488b742408	                mov rsi, qword [rsp + 8]	      4272	elf.c	FUNCTION_59
0x4009477	    0x488b96800300	           mov rdx, qword [rsi + 0x380] 	      4272	elf.c	FUNCTION_59
0x400947e	    0x488990c00000	             mov qword [rax + 0xc0], rdx	      4272	elf.c	FUNCTION_59
0x4009485	    0x48c780c80000	               mov qword [rax + 0xc8], 0	      4273	elf.c	FUNCTION_59
0x4009490	    0x48c780f00000	               mov qword [rax + 0xf0], 0	      4275	elf.c	FUNCTION_59
0x400949b	    0xc780e0000000	               mov dword [rax + 0xe0], 0	      4276	elf.c	FUNCTION_59
0x40094a5	    0xc780e4000000	               mov dword [rax + 0xe4], 0	      4277	elf.c	FUNCTION_59
0x40094af	    0x48c780e80000	               mov qword [rax + 0xe8], 1	      4279	elf.c	FUNCTION_59
0x40094ba	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      6069	elf.c	FUNCTION_73	CALL_1
0x40094c1	      0x4889442468	             mov qword [rsp + 0x68], rax	      6069	elf.c	FUNCTION_73	CALL_1
0x40094c6	        0x498b4708	                mov rax, qword [r15 + 8]	      6071	elf.c	FUNCTION_73	CALL_3
0x40094ca	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      6071	elf.c	FUNCTION_73	CALL_3
0x40094d1	      0x4889442440	             mov qword [rsp + 0x40], rax	      6071	elf.c	FUNCTION_73	CALL_3
0x40094d6	        0x418b4744	            mov eax, dword [r15 + 0x44] 	      6073	elf.c	FUNCTION_73	IF_1
0x40094da	          0xc1e805	                              shr eax, 5	      6073	elf.c	FUNCTION_73	IF_1
0x40094dd	            0xa842	                           test al, 0x42	      6073	elf.c	FUNCTION_73	IF_1
0x40094df	     0xf849d010000	                            je 0x4009682	      6073	elf.c	FUNCTION_73	IF_1
0x40094e5	      0xe959e7ffff	                           jmp 0x4007c43	      6073	elf.c	FUNCTION_73	IF_1
0x40094ea	      0xb800000000	                              mov eax, 0	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x40094ef	      0xe915ebffff	                           jmp 0x4008009	      5406	elf.c	FUNCTION_70	ELSE_3	FOR_2	ELSE_9	IF_17	ELSE_10	FOR_3
0x40094f4	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      5689	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x40094f9	      0x4829742418	             sub qword [rsp + 0x18], rsi	      5689	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x40094fe	      0xe9b8f5ffff	                           jmp 0x4008abb	      5689	elf.c	FUNCTION_70	ELSE_3	FOR_2
0x4009503	        0x4d8d6548	                   lea r12, [r13 + 0x48]	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x4009507	      0x41837d4400	               cmp dword [r13 + 0x44], 0	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x400950c	     0xf85cdeeffff	                           jne 0x40083df	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x4009512	            0xebe0	                           jmp 0x40094f4	      5556	elf.c	FUNCTION_70	ELSE_3	FOR_2	FOR_7
0x4009514	          0x8b7a04	                mov edi, dword [rdx + 4]	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4009517	          0x83ff08	                              cmp edi, 8	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x400951a	     0xf8538f3ffff	                           jne 0x4008858	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4009520	      0xe99df3ffff	                           jmp 0x40088c2	      5716	elf.c	FUNCTION_70	ELSE_3	FOR_2	IF_60	FOR_9	IF_62	CALL_43
0x4009525	        0x498b4708	                mov rax, qword [r15 + 8]	      5739	elf.c	FUNCTION_71	CALL_1
0x4009529	    0x4c8ba8680300	           mov r13, qword [rax + 0x368] 	      5739	elf.c	FUNCTION_71	CALL_1
0x4009530	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5751	elf.c	FUNCTION_71	CALL_2
0x4009537	        0x4c8b7058	            mov r14, qword [rax + 0x58] 	      5751	elf.c	FUNCTION_71	CALL_2
0x400953b	    0x8b90fc020000	           mov edx, dword [rax + 0x2fc] 	      5752	elf.c	FUNCTION_71	CALL_3
0x4009541	        0x4d8d24d6	                  lea r12, [r14 + rdx*8]	      5752	elf.c	FUNCTION_71	CALL_3
0x4009545	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5753	elf.c	FUNCTION_71	CALL_4
0x400954c	        0x488b4040	            mov rax, qword [rax + 0x40] 	      5753	elf.c	FUNCTION_71	CALL_4
0x4009550	      0x4889442410	             mov qword [rsp + 0x10], rax	      5753	elf.c	FUNCTION_71	CALL_4
0x4009555	        0x498d6e08	                      lea rbp, [r14 + 8]	      5754	elf.c	FUNCTION_71	FOR_1
0x4009559	          0x4939ec	                            cmp r12, rbp	      5754	elf.c	FUNCTION_71	FOR_1
0x400955c	     0xf8790f5ffff	                            ja 0x4008af2	      5754	elf.c	FUNCTION_71	FOR_1
0x4009562	      0xe923f7ffff	                           jmp 0x4008c8a	      5754	elf.c	FUNCTION_71	FOR_1
0x4009567	        0xf6430802	                  test byte [rbx + 8], 2	      5764	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2
0x400956b	     0xf854c010000	                           jne 0x40096bd	      5764	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2
0x4009571	      0xe999f6ffff	                           jmp 0x4008c0f	      5764	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2
0x4009576	        0x4a8d0c2e	                    lea rcx, [rsi + r13]	      5826	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x400957a	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      5826	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x400957f	        0x488d0c3e	                    lea rcx, [rsi + rdi]	      5827	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x4009583	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      5827	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x4009588	          0x4889c3	                            mov rbx, rax	      5827	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x400958b	      0xe983f7ffff	                           jmp 0x4008d13	      5827	elf.c	FUNCTION_71	FOR_2	IF_8	IF_9
0x4009590	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      5832	elf.c	FUNCTION_71	IF_10
0x4009596	       0xf95442428	                 setne byte [rsp + 0x28]	      5832	elf.c	FUNCTION_71	IF_10
0x400959b	      0xe980fbffff	                           jmp 0x4009120	      5832	elf.c	FUNCTION_71	IF_10
0x40095a0	          0x4d85f6	                           test r14, r14	      5973	elf.c	FUNCTION_71	FOR_4	IF_15	CALL_25
0x40095a3	     0xf840afaffff	                            je 0x4008fb3	      5973	elf.c	FUNCTION_71	FOR_4	IF_15	CALL_25
0x40095a9	      0xe9f6f9ffff	                           jmp 0x4008fa4	      5973	elf.c	FUNCTION_71	FOR_4	IF_15	CALL_25
0x40095ae	    0xc78424ac0000	               mov dword [rsp + 0xac], 0	      4261	elf.c	FUNCTION_59
0x40095b9	    0x488d9424ac00	                   lea rdx, [rsp + 0xac]	      4264	elf.c	FUNCTION_59	IF_8	CALL_6
0x40095c1	      0xbe00000000	                              mov esi, 0	      4264	elf.c	FUNCTION_59	IF_8	CALL_6
0x40095c6	          0x4c89ff	                            mov rdi, r15	      4264	elf.c	FUNCTION_59	IF_8	CALL_6
0x40095c9	      0xe800000000	                          call 0x40095ce	      4264	elf.c	FUNCTION_59	IF_8	CALL_6
0x40095ce	    0x83bc24ac0000	               cmp dword [rsp + 0xac], 0	      4265	elf.c	FUNCTION_59	IF_8	IF_9
0x40095d6	     0xf8485feffff	                            je 0x4009461	      4265	elf.c	FUNCTION_59	IF_8	IF_9
0x40095dc	      0xe9b3fdffff	                           jmp 0x4009394	      4265	elf.c	FUNCTION_59	IF_8	IF_9
0x40095e1	    0xc78424ac0000	               mov dword [rsp + 0xac], 0	      4261	elf.c	FUNCTION_59
0x40095ec	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      4269	elf.c	FUNCTION_59	CALL_7
0x40095f3	    0xc780bc000000	               mov dword [rax + 0xbc], 3	      4271	elf.c	FUNCTION_59
0x40095fd	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      4272	elf.c	FUNCTION_59
0x4009602	    0x488b91800300	           mov rdx, qword [rcx + 0x380] 	      4272	elf.c	FUNCTION_59
0x4009609	    0x488990c00000	             mov qword [rax + 0xc0], rdx	      4272	elf.c	FUNCTION_59
0x4009610	    0x48c780c80000	               mov qword [rax + 0xc8], 0	      4273	elf.c	FUNCTION_59
0x400961b	    0x48c780f00000	               mov qword [rax + 0xf0], 0	      4275	elf.c	FUNCTION_59
0x4009626	    0xc780e0000000	               mov dword [rax + 0xe0], 0	      4276	elf.c	FUNCTION_59
0x4009630	    0xc780e4000000	               mov dword [rax + 0xe4], 0	      4277	elf.c	FUNCTION_59
0x400963a	    0x48c780e80000	               mov qword [rax + 0xe8], 1	      4279	elf.c	FUNCTION_59
0x4009645	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      6069	elf.c	FUNCTION_73	CALL_1
0x400964c	      0x4889442468	             mov qword [rsp + 0x68], rax	      6069	elf.c	FUNCTION_73	CALL_1
0x4009651	        0x498b4708	                mov rax, qword [r15 + 8]	      6071	elf.c	FUNCTION_73	CALL_3
0x4009655	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      6071	elf.c	FUNCTION_73	CALL_3
0x400965c	      0x4889442440	             mov qword [rsp + 0x40], rax	      6071	elf.c	FUNCTION_73	CALL_3
0x4009661	        0x418b4744	            mov eax, dword [r15 + 0x44] 	      6073	elf.c	FUNCTION_73	IF_1
0x4009665	          0xc1e805	                              shr eax, 5	      6073	elf.c	FUNCTION_73	IF_1
0x4009668	            0xa842	                           test al, 0x42	      6073	elf.c	FUNCTION_73	IF_1
0x400966a	            0x742b	                            je 0x4009697	      6073	elf.c	FUNCTION_73	IF_1
0x400966c	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4221	elf.c	FUNCTION_59
0x4009675	    0xc74424700000	               mov dword [rsp + 0x70], 0	      6073	elf.c	FUNCTION_73	IF_1
0x400967d	      0xe9d6e5ffff	                           jmp 0x4007c58	      6073	elf.c	FUNCTION_73	IF_1
0x4009682	      0x410fb64744	           movzx eax, byte [r15 + 0x44] 	      6074	elf.c	FUNCTION_73	IF_1
0x4009687	          0x83e007	                              and eax, 7	      6074	elf.c	FUNCTION_73	IF_1
0x400968a	            0x3c03	                               cmp al, 3	      6074	elf.c	FUNCTION_73	IF_1
0x400968c	     0xf85e5e4ffff	                           jne 0x4007b77	      6074	elf.c	FUNCTION_73	IF_1
0x4009692	      0xe9ace5ffff	                           jmp 0x4007c43	      6074	elf.c	FUNCTION_73	IF_1
0x4009697	      0x410fb64744	           movzx eax, byte [r15 + 0x44] 	      6074	elf.c	FUNCTION_73	IF_1
0x400969c	          0x83e007	                              and eax, 7	      6074	elf.c	FUNCTION_73	IF_1
0x400969f	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4221	elf.c	FUNCTION_59
0x40096a8	    0xc74424700000	               mov dword [rsp + 0x70], 0	      6074	elf.c	FUNCTION_73	IF_1
0x40096b0	            0x3c03	                               cmp al, 3	      6074	elf.c	FUNCTION_73	IF_1
0x40096b2	     0xf85bfe4ffff	                           jne 0x4007b77	      6074	elf.c	FUNCTION_73	IF_1
0x40096b8	      0xe99be5ffff	                           jmp 0x4007c58	      6074	elf.c	FUNCTION_73	IF_1
0x40096bd	      0x48837b2000	               cmp qword [rbx + 0x20], 0	      5766	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3
0x40096c2	     0xf858ff4ffff	                           jne 0x4008b57	      5766	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3
0x40096c8	      0xe9fef4ffff	                           jmp 0x4008bcb	      5766	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3
0x40096cd	      0x48837b2000	               cmp qword [rbx + 0x20], 0	      5766	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3
0x40096d2	     0xf84f3f4ffff	                            je 0x4008bcb	      5766	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3
0x40096d8	      0xe984f4ffff	                           jmp 0x4008b61	      5766	elf.c	FUNCTION_71	FOR_1	ELSE_1	IF_2	IF_3
0x40096dd	    0x498b87f80000	            mov rax, qword [r15 + 0xf8] 	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x40096e4	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x40096eb	          0x488b18	                    mov rbx, qword [rax]	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x40096ee	      0xe90df7ffff	                           jmp 0x4008e00	      5878	elf.c	FUNCTION_71	FOR_4	CALL_22
0x40096f3	      0xe800000000	                          call 0x40096f8	      4318	elf.c	FUNCTION_59
0x40096f8	    0x4881c4f80000	                           add rsp, 0xf8	      4318	elf.c	FUNCTION_59
0x40096ff	              0x5b	                                 pop rbx	      4318	elf.c	FUNCTION_59
0x4009700	              0x5d	                                 pop rbp	      4318	elf.c	FUNCTION_59
0x4009701	            0x415c	                                 pop r12	      4318	elf.c	FUNCTION_59
0x4009703	            0x415d	                                 pop r13	      4318	elf.c	FUNCTION_59
0x4009705	            0x415e	                                 pop r14	      4318	elf.c	FUNCTION_59
0x4009707	            0x415f	                                 pop r15	      4318	elf.c	FUNCTION_59
0x4009709	              0xc3	                                     ret	      4318	elf.c	FUNCTION_59
bfd_get_elf_phdrs	FOR,0:ELSE,0:IF,1:WHILE,0:DO,0:SWITCH,0:CALL,4:functions,0	19
0x400ff85	              0x53	                                push rbx	     11241	elf.c	FUNCTION_194
0x400ff86	        0x488b4708	                mov rax, qword [rdi + 8]	     11244	elf.c	FUNCTION_194	IF_1
0x400ff8a	        0x83780805	                  cmp dword [rax + 8], 5	     11244	elf.c	FUNCTION_194	IF_1
0x400ff8e	            0x7411	                            je 0x400ffa1	     11244	elf.c	FUNCTION_194	IF_1
0x400ff90	      0xbf03000000	                              mov edi, 3	     11246	elf.c	FUNCTION_194	IF_1	CALL_1
0x400ff95	      0xe800000000	                          call 0x400ff9a	     11246	elf.c	FUNCTION_194	IF_1	CALL_1
0x400ff9a	      0xb8ffffffff	                     mov eax, 0xffffffff	     11247	elf.c	FUNCTION_194	IF_1
0x400ff9f	            0xeb22	                           jmp 0x400ffc3	     11247	elf.c	FUNCTION_194	IF_1
0x400ffa1	          0x4889f1	                            mov rcx, rsi	     11247	elf.c	FUNCTION_194	IF_1
0x400ffa4	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	     11250	elf.c	FUNCTION_194	CALL_2
0x400ffab	          0x8b5844	            mov ebx, dword [rax + 0x44] 	     11250	elf.c	FUNCTION_194	CALL_2
0x400ffae	          0x4863d3	                         movsxd rdx, ebx	        53	string3.h	FUNCTION_221	CALL_3
0x400ffb1	        0x48c1e206	                              shl rdx, 6	        53	string3.h	FUNCTION_221	CALL_3
0x400ffb5	        0x488b7060	            mov rsi, qword [rax + 0x60] 	        53	string3.h	FUNCTION_221	CALL_3
0x400ffb9	          0x4889cf	                            mov rdi, rcx	        53	string3.h	FUNCTION_221	CALL_3
0x400ffbc	      0xe800000000	                          call 0x400ffc1	        53	string3.h	FUNCTION_221	CALL_3
0x400ffc1	            0x89d8	                            mov eax, ebx	     11254	elf.c	FUNCTION_194
0x400ffc3	              0x5b	                                 pop rbx	     11255	elf.c	FUNCTION_194
0x400ffc4	              0xc3	                                     ret	     11255	elf.c	FUNCTION_194
bfd_elf_bfd_from_remote_memory	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,1:functions,0	6
0x401014a	        0x4883ec08	                              sub rsp, 8	     11376	elf.c	FUNCTION_199
0x401014e	        0x488b4708	                mov rax, qword [rdi + 8]	     11377	elf.c	FUNCTION_199	CALL_1
0x4010152	    0x488b80680300	           mov rax, qword [rax + 0x368] 	     11377	elf.c	FUNCTION_199	CALL_1
0x4010159	    0xff9090020000	                call qword [rax + 0x290]	     11377	elf.c	FUNCTION_199	CALL_1
0x401015f	        0x4883c408	                              add rsp, 8	     11379	elf.c	FUNCTION_199
0x4010163	              0xc3	                                     ret	     11379	elf.c	FUNCTION_199
elfcore_make_note_pseudosection	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,1:functions,0	6
0x400d8b5	        0x4883ec08	                              sub rsp, 8	      9191	elf.c	FUNCTION_116
0x400d8b9	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	      9192	elf.c	FUNCTION_116	CALL_1
0x400d8bd	        0x488b5208	                mov rdx, qword [rdx + 8]	      9192	elf.c	FUNCTION_116	CALL_1
0x400d8c1	      0xe800000000	                          call 0x400d8c6	      9192	elf.c	FUNCTION_116	CALL_1
0x400d8c6	        0x4883c408	                              add rsp, 8	      9194	elf.c	FUNCTION_116
0x400d8ca	              0xc3	                                     ret	      9194	elf.c	FUNCTION_116
bfd_elf_string_from_elf_section	FOR,0:ELSE,0:IF,6:WHILE,0:DO,0:SWITCH,0:CALL,10:functions,0	134
0x4001e80	      0xb800000000	                              mov eax, 0	       331	elf.c	FUNCTION_17	IF_1
0x4001e85	            0x85d2	                           test edx, edx	       330	elf.c	FUNCTION_17	IF_1
0x4001e87	     0xf84ea010000	                            je 0x4002077	       330	elf.c	FUNCTION_17	IF_1
0x4001e8d	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	       333	elf.c	FUNCTION_17	IF_2	CALL_2
0x4001e94	        0x488b4858	            mov rcx, qword [rax + 0x58] 	       333	elf.c	FUNCTION_17	IF_2	CALL_2
0x4001e98	          0x4885c9	                           test rcx, rcx	       333	elf.c	FUNCTION_17	IF_2	CALL_2
0x4001e9b	     0xf84a5010000	                            je 0x4002046	       333	elf.c	FUNCTION_17	IF_2	CALL_2
0x4001ea1	    0x39b0fc020000	           cmp dword [rax + 0x2fc], esi 	       333	elf.c	FUNCTION_17	IF_2	CALL_2
0x4001ea7	     0xf869f010000	                           jbe 0x400204c	       333	elf.c	FUNCTION_17	IF_2	CALL_2
0x4001ead	            0x4157	                                push r15	       327	elf.c	FUNCTION_17
0x4001eaf	            0x4156	                                push r14	       327	elf.c	FUNCTION_17
0x4001eb1	            0x4155	                                push r13	       327	elf.c	FUNCTION_17
0x4001eb3	            0x4154	                                push r12	       327	elf.c	FUNCTION_17
0x4001eb5	              0x55	                                push rbp	       327	elf.c	FUNCTION_17
0x4001eb6	              0x53	                                push rbx	       327	elf.c	FUNCTION_17
0x4001eb7	        0x4883ec18	                           sub rsp, 0x18	       327	elf.c	FUNCTION_17
0x4001ebb	            0x89d3	                            mov ebx, edx	       327	elf.c	FUNCTION_17
0x4001ebd	            0x89f5	                            mov ebp, esi	       327	elf.c	FUNCTION_17
0x4001ebf	          0x4989fc	                            mov r12, rdi	       327	elf.c	FUNCTION_17
0x4001ec2	            0x89f0	                            mov eax, esi	       336	elf.c	FUNCTION_17	CALL_3
0x4001ec4	        0x4c8d34c1	                  lea r14, [rcx + rax*8]	       336	elf.c	FUNCTION_17	CALL_3
0x4001ec8	          0x4d8b2e	                    mov r13, qword [r14]	       336	elf.c	FUNCTION_17	CALL_3
0x4001ecb	      0x49837d4800	               cmp qword [r13 + 0x48], 0	       338	elf.c	FUNCTION_17	IF_3
0x4001ed0	     0xf85ff000000	                           jne 0x4001fd5	       338	elf.c	FUNCTION_17	IF_3
0x4001ed6	        0x418b4504	                mov eax, dword [r13 + 4]	       340	elf.c	FUNCTION_17	IF_3	IF_4
0x4001eda	          0x83f803	                              cmp eax, 3	       340	elf.c	FUNCTION_17	IF_3	IF_4
0x4001edd	            0x7437	                            je 0x4001f16	       340	elf.c	FUNCTION_17	IF_3	IF_4
0x4001edf	      0x3dffffff5f	                     cmp eax, 0x5fffffff	       340	elf.c	FUNCTION_17	IF_3	IF_4
0x4001ee4	            0x7730	                            ja 0x4001f16	       340	elf.c	FUNCTION_17	IF_3	IF_4
0x4001ee6	      0xba05000000	                              mov edx, 5	       344	elf.c	FUNCTION_17	IF_3	IF_4	CALL_5
0x4001eeb	      0xbe00000000	                              mov esi, 0	       344	elf.c	FUNCTION_17	IF_3	IF_4	CALL_5
0x4001ef0	      0xbf00000000	                              mov edi, 0	       344	elf.c	FUNCTION_17	IF_3	IF_4	CALL_5
0x4001ef5	      0xe800000000	                          call 0x4001efa	       344	elf.c	FUNCTION_17	IF_3	IF_4	CALL_5
0x4001efa	            0x89ea	                            mov edx, ebp	       344	elf.c	FUNCTION_17	IF_3	IF_4	CALL_5
0x4001efc	          0x4c89e6	                            mov rsi, r12	       344	elf.c	FUNCTION_17	IF_3	IF_4	CALL_5
0x4001eff	          0x4889c7	                            mov rdi, rax	       344	elf.c	FUNCTION_17	IF_3	IF_4	CALL_5
0x4001f02	      0xb800000000	                              mov eax, 0	       344	elf.c	FUNCTION_17	IF_3	IF_4	CALL_5
0x4001f07	      0xe800000000	                          call 0x4001f0c	       344	elf.c	FUNCTION_17	IF_3	IF_4	CALL_5
0x4001f0c	      0xb800000000	                              mov eax, 0	       347	elf.c	FUNCTION_17	IF_3	IF_4
0x4001f11	      0xe953010000	                           jmp 0x4002069	       347	elf.c	FUNCTION_17	IF_3	IF_4
0x4001f16	          0x4d85ed	                           test r13, r13	       288	elf.c	FUNCTION_16	IF_1
0x4001f19	     0xf8433010000	                            je 0x4002052	       288	elf.c	FUNCTION_16	IF_1
0x4001f1f	        0x4d8b7d20	            mov r15, qword [r13 + 0x20] 	       296	elf.c	FUNCTION_16	IF_2
0x4001f23	        0x498d4701	                      lea rax, [r15 + 1]	       300	elf.c	FUNCTION_16	IF_2	IF_3
0x4001f27	        0x48890424	                    mov qword [rsp], rax	       300	elf.c	FUNCTION_16	IF_2	IF_3
0x4001f2b	        0x4883f801	                              cmp rax, 1	       300	elf.c	FUNCTION_16	IF_2	IF_3
0x4001f2f	     0xf8624010000	                           jbe 0x4002059	       300	elf.c	FUNCTION_16	IF_2	IF_3
0x4001f35	        0x498b4518	            mov rax, qword [r13 + 0x18] 	       295	elf.c	FUNCTION_16	IF_2
0x4001f39	      0x4889442408	                mov qword [rsp + 8], rax	       295	elf.c	FUNCTION_16	IF_2
0x4001f3e	          0x4c89e7	                            mov rdi, r12	       301	elf.c	FUNCTION_16	IF_2	IF_3	CALL_3
0x4001f41	      0xe800000000	                          call 0x4001f46	       301	elf.c	FUNCTION_16	IF_2	IF_3	CALL_3
0x4001f46	          0x4939c7	                            cmp r15, rax	       301	elf.c	FUNCTION_16	IF_2	IF_3	CALL_3
0x4001f49	     0xf870a010000	                            ja 0x4002059	       301	elf.c	FUNCTION_16	IF_2	IF_3	CALL_3
0x4001f4f	      0xba00000000	                              mov edx, 0	       302	elf.c	FUNCTION_16	IF_2	IF_3	CALL_4
0x4001f54	      0x488b742408	                mov rsi, qword [rsp + 8]	       302	elf.c	FUNCTION_16	IF_2	IF_3	CALL_4
0x4001f59	          0x4c89e7	                            mov rdi, r12	       302	elf.c	FUNCTION_16	IF_2	IF_3	CALL_4
0x4001f5c	      0xe800000000	                          call 0x4001f61	       302	elf.c	FUNCTION_16	IF_2	IF_3	CALL_4
0x4001f61	            0x85c0	                           test eax, eax	       302	elf.c	FUNCTION_16	IF_2	IF_3	CALL_4
0x4001f63	     0xf85f0000000	                           jne 0x4002059	       302	elf.c	FUNCTION_16	IF_2	IF_3	CALL_4
0x4001f69	        0x488b3424	                    mov rsi, qword [rsp]	       303	elf.c	FUNCTION_16	IF_2	IF_3	CALL_5
0x4001f6d	          0x4c89e7	                            mov rdi, r12	       303	elf.c	FUNCTION_16	IF_2	IF_3	CALL_5
0x4001f70	      0xe800000000	                          call 0x4001f75	       303	elf.c	FUNCTION_16	IF_2	IF_3	CALL_5
0x4001f75	        0x48890424	                    mov qword [rsp], rax	       303	elf.c	FUNCTION_16	IF_2	IF_3	CALL_5
0x4001f79	          0x4885c0	                           test rax, rax	       303	elf.c	FUNCTION_16	IF_2	IF_3	CALL_5
0x4001f7c	     0xf84d7000000	                            je 0x4002059	       303	elf.c	FUNCTION_16	IF_2	IF_3	CALL_5
0x4001f82	          0x4c89e2	                            mov rdx, r12	       305	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4	CALL_6
0x4001f85	          0x4c89fe	                            mov rsi, r15	       305	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4	CALL_6
0x4001f88	          0x4889c7	                            mov rdi, rax	       305	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4	CALL_6
0x4001f8b	      0xe800000000	                          call 0x4001f90	       305	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4	CALL_6
0x4001f90	          0x4939c7	                            cmp r15, rax	       305	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4	CALL_6
0x4001f93	            0x7430	                            je 0x4001fc5	       305	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4	CALL_6
0x4001f95	      0xe800000000	                          call 0x4001f9a	       307	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4	IF_5	CALL_7
0x4001f9a	          0x83f801	                              cmp eax, 1	       307	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4	IF_5	CALL_7
0x4001f9d	            0x740a	                            je 0x4001fa9	       307	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4	IF_5	CALL_7
0x4001f9f	      0xbf12000000	                           mov edi, 0x12	       308	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4	CALL_8
0x4001fa4	      0xe800000000	                          call 0x4001fa9	       308	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4	CALL_8
0x4001fa9	        0x488b3424	                    mov rsi, qword [rsp]	       309	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4	CALL_9
0x4001fad	          0x4c89e7	                            mov rdi, r12	       309	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4	CALL_9
0x4001fb0	      0xe800000000	                          call 0x4001fb5	       309	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4	CALL_9
0x4001fb5	          0x498b06	                    mov rax, qword [r14]	       314	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4
0x4001fb8	    0x48c740200000	               mov qword [rax + 0x20], 0	       314	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4
0x4001fc0	      0xe994000000	                           jmp 0x4002059	       314	elf.c	FUNCTION_16	IF_2	ELSE_1	IF_4
0x4001fc5	        0x488b0c24	                    mov rcx, qword [rsp]	       317	elf.c	FUNCTION_16	IF_2	ELSE_2
0x4001fc9	      0x42c6043900	                 mov byte [rcx + r15], 0	       317	elf.c	FUNCTION_16	IF_2	ELSE_2
0x4001fce	          0x498b06	                    mov rax, qword [r14]	       318	elf.c	FUNCTION_16	IF_2
0x4001fd1	        0x48894848	             mov qword [rax + 0x48], rcx	       318	elf.c	FUNCTION_16	IF_2
0x4001fd5	            0x89d8	                            mov eax, ebx	       354	elf.c	FUNCTION_17	IF_6
0x4001fd7	        0x493b4520	            cmp rax, qword [r13 + 0x20] 	       354	elf.c	FUNCTION_17	IF_6
0x4001fdb	            0x7263	                            jb 0x4002040	       354	elf.c	FUNCTION_17	IF_6
0x4001fdd	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	       356	elf.c	FUNCTION_17	IF_6	CALL_7
0x4001fe5	          0x8b7050	            mov esi, dword [rax + 0x50] 	       356	elf.c	FUNCTION_17	IF_6	CALL_7
0x4001fe8	            0x39f5	                            cmp ebp, esi	       357	elf.c	FUNCTION_17	IF_6	CALL_8
0x4001fea	            0x7506	                           jne 0x4001ff2	       357	elf.c	FUNCTION_17	IF_6	CALL_8
0x4001fec	        0x413b5d00	                    cmp ebx, dword [r13]	       361	elf.c	FUNCTION_17	IF_6
0x4001ff0	            0x7411	                            je 0x4002003	       361	elf.c	FUNCTION_17	IF_6
0x4001ff2	        0x418b5500	                    mov edx, dword [r13]	       357	elf.c	FUNCTION_17	IF_6	CALL_8
0x4001ff6	          0x4c89e7	                            mov rdi, r12	       357	elf.c	FUNCTION_17	IF_6	CALL_8
0x4001ff9	      0xe800000000	                          call 0x4001ffe	       357	elf.c	FUNCTION_17	IF_6	CALL_8
0x4001ffe	          0x4989c6	                            mov r14, rax	       357	elf.c	FUNCTION_17	IF_6	CALL_8
0x4002001	            0xeb06	                           jmp 0x4002009	       357	elf.c	FUNCTION_17	IF_6	CALL_8
0x4002003	    0x41be00000000	                             mov r14d, 0	       357	elf.c	FUNCTION_17	IF_6	CALL_8
0x4002009	        0x498b6d20	            mov rbp, qword [r13 + 0x20] 	       360	elf.c	FUNCTION_17	IF_6
0x400200d	      0xba05000000	                              mov edx, 5	       359	elf.c	FUNCTION_17	IF_6	CALL_9
0x4002012	      0xbe00000000	                              mov esi, 0	       359	elf.c	FUNCTION_17	IF_6	CALL_9
0x4002017	      0xbf00000000	                              mov edi, 0	       359	elf.c	FUNCTION_17	IF_6	CALL_9
0x400201c	      0xe800000000	                          call 0x4002021	       359	elf.c	FUNCTION_17	IF_6	CALL_9
0x4002021	          0x4d89f0	                             mov r8, r14	       357	elf.c	FUNCTION_17	IF_6	CALL_8
0x4002024	          0x4889e9	                            mov rcx, rbp	       357	elf.c	FUNCTION_17	IF_6	CALL_8
0x4002027	            0x89da	                            mov edx, ebx	       357	elf.c	FUNCTION_17	IF_6	CALL_8
0x4002029	          0x4c89e6	                            mov rsi, r12	       357	elf.c	FUNCTION_17	IF_6	CALL_8
0x400202c	          0x4889c7	                            mov rdi, rax	       357	elf.c	FUNCTION_17	IF_6	CALL_8
0x400202f	      0xb800000000	                              mov eax, 0	       357	elf.c	FUNCTION_17	IF_6	CALL_8
0x4002034	      0xe800000000	                          call 0x4002039	       357	elf.c	FUNCTION_17	IF_6	CALL_8
0x4002039	      0xb800000000	                              mov eax, 0	       364	elf.c	FUNCTION_17	IF_6
0x400203e	            0xeb29	                           jmp 0x4002069	       364	elf.c	FUNCTION_17	IF_6
0x4002040	        0x49034548	             add rax, qword [r13 + 0x48]	       367	elf.c	FUNCTION_17
0x4002044	            0xeb23	                           jmp 0x4002069	       367	elf.c	FUNCTION_17
0x4002046	      0xb800000000	                              mov eax, 0	       334	elf.c	FUNCTION_17	IF_2
0x400204b	              0xc3	                                     ret	       334	elf.c	FUNCTION_17	IF_2
0x400204c	      0xb800000000	                              mov eax, 0	       334	elf.c	FUNCTION_17	IF_2
0x4002051	              0xc3	                                     ret	       368	elf.c	FUNCTION_17
0x4002052	      0xb800000000	                              mov eax, 0	       351	elf.c	FUNCTION_17	IF_3	IF_5
0x4002057	            0xeb10	                           jmp 0x4002069	       351	elf.c	FUNCTION_17	IF_3	IF_5
0x4002059	          0x498b06	                    mov rax, qword [r14]	       318	elf.c	FUNCTION_16	IF_2
0x400205c	    0x48c740480000	               mov qword [rax + 0x48], 0	       318	elf.c	FUNCTION_16	IF_2
0x4002064	      0xb800000000	                              mov eax, 0	       351	elf.c	FUNCTION_17	IF_3	IF_5
0x4002069	        0x4883c418	                           add rsp, 0x18	       368	elf.c	FUNCTION_17
0x400206d	              0x5b	                                 pop rbx	       368	elf.c	FUNCTION_17
0x400206e	              0x5d	                                 pop rbp	       368	elf.c	FUNCTION_17
0x400206f	            0x415c	                                 pop r12	       368	elf.c	FUNCTION_17
0x4002071	            0x415d	                                 pop r13	       368	elf.c	FUNCTION_17
0x4002073	            0x415e	                                 pop r14	       368	elf.c	FUNCTION_17
0x4002075	            0x415f	                                 pop r15	       368	elf.c	FUNCTION_17
0x4002077	            0xf3c3	                                     ret	       368	elf.c	FUNCTION_17
_bfd_elf_find_segment_containing_section	FOR,2:ELSE,0:IF,1:WHILE,0:DO,0:SWITCH,0:CALL,2:functions,0	26
0x40056fe	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x4005705	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x400570c	          0x488b3a	                    mov rdi, qword [rdx]	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x400570f	        0x488b4060	            mov rax, qword [rax + 0x60] 	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x4005713	          0x4885ff	                           test rdi, rdi	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x4005716	            0x7435	                            je 0x400574d	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x4005718	          0x8b5744	            mov edx, dword [rdi + 0x44] 	      4454	elf.c	FUNCTION_61	FOR_1	FOR_2
0x400571b	          0x83ea01	                              sub edx, 1	      4454	elf.c	FUNCTION_61	FOR_1	FOR_2
0x400571e	            0x781b	                            js 0x400573b	      4454	elf.c	FUNCTION_61	FOR_1	FOR_2
0x4005720	          0x4863ca	                         movsxd rcx, edx	      4455	elf.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x4005723	      0x483b74cf48	    cmp rsi, qword [rdi + rcx*8 + 0x48] 	      4455	elf.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x4005728	            0x750c	                           jne 0x4005736	      4455	elf.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x400572a	            0xf3c3	                                     ret	      4455	elf.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x400572c	          0x4863ca	                         movsxd rcx, edx	      4455	elf.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x400572f	      0x483974cf48	    cmp qword [rdi + rcx*8 + 0x48], rsi 	      4455	elf.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x4005734	            0x741c	                            je 0x4005752	      4455	elf.c	FUNCTION_61	FOR_1	FOR_2	IF_1
0x4005736	          0x83ea01	                              sub edx, 1	      4454	elf.c	FUNCTION_61	FOR_1	FOR_2
0x4005739	            0x79f1	                           jns 0x400572c	      4454	elf.c	FUNCTION_61	FOR_1	FOR_2
0x400573b	          0x488b3f	                    mov rdi, qword [rdi]	      4450	elf.c	FUNCTION_61	FOR_1
0x400573e	        0x4883c040	                           add rax, 0x40	      4450	elf.c	FUNCTION_61	FOR_1
0x4005742	          0x4885ff	                           test rdi, rdi	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x4005745	            0x75d1	                           jne 0x4005718	      4448	elf.c	FUNCTION_61	FOR_1	CALL_2
0x4005747	      0xb800000000	                              mov eax, 0	      4459	elf.c	FUNCTION_61
0x400574c	              0xc3	                                     ret	      4459	elf.c	FUNCTION_61
0x400574d	      0xb800000000	                              mov eax, 0	      4459	elf.c	FUNCTION_61
0x4005752	            0xf3c3	                                     ret	      4460	elf.c	FUNCTION_61
find_link	FOR,1:ELSE,0:IF,3:WHILE,0:DO,0:SWITCH,0:CALL,6:functions,0	52
0x40002c9	            0x4155	                                push r13	      1321	elf.c	FUNCTION_29
0x40002cb	            0x4154	                                push r12	      1321	elf.c	FUNCTION_29
0x40002cd	              0x55	                                push rbp	      1321	elf.c	FUNCTION_29
0x40002ce	              0x53	                                push rbx	      1321	elf.c	FUNCTION_29
0x40002cf	        0x4883ec08	                              sub rsp, 8	      1321	elf.c	FUNCTION_29
0x40002d3	          0x4989fc	                            mov r12, rdi	      1321	elf.c	FUNCTION_29
0x40002d6	          0x4989f5	                            mov r13, rsi	      1321	elf.c	FUNCTION_29
0x40002d9	            0x89d3	                            mov ebx, edx	      1321	elf.c	FUNCTION_29
0x40002db	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      1322	elf.c	FUNCTION_29	CALL_1
0x40002e2	        0x488b6858	            mov rbp, qword [rax + 0x58] 	      1322	elf.c	FUNCTION_29	CALL_1
0x40002e6	          0x4885f6	                           test rsi, rsi	      1325	elf.c	FUNCTION_29	CALL_2
0x40002e9	            0x750f	                           jne 0x40002fa	      1325	elf.c	FUNCTION_29	CALL_2
0x40002eb	      0xbe2d050000	                          mov esi, 0x52d	      1325	elf.c	FUNCTION_29	CALL_2
0x40002f0	      0xbf00000000	                              mov edi, 0	      1325	elf.c	FUNCTION_29	CALL_2
0x40002f5	      0xe800000000	                          call 0x40002fa	      1325	elf.c	FUNCTION_29	CALL_2
0x40002fa	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      1328	elf.c	FUNCTION_29	IF_1	CALL_3
0x4000302	    0x448ba0fc0200	          mov r12d, dword [rax + 0x2fc] 	      1328	elf.c	FUNCTION_29	IF_1	CALL_3
0x4000309	          0x4139dc	                           cmp r12d, ebx	      1328	elf.c	FUNCTION_29	IF_1	CALL_3
0x400030c	            0x7618	                           jbe 0x4000326	      1328	elf.c	FUNCTION_29	IF_1	CALL_3
0x400030e	            0x89d8	                            mov eax, ebx	      1329	elf.c	FUNCTION_29	IF_1
0x4000310	      0x488b7cc500	            mov rdi, qword [rbp + rax*8]	      1329	elf.c	FUNCTION_29	IF_1
0x4000315	          0x4885ff	                           test rdi, rdi	      1329	elf.c	FUNCTION_29	IF_1
0x4000318	            0x740c	                            je 0x4000326	      1329	elf.c	FUNCTION_29	IF_1
0x400031a	          0x4c89ee	                            mov rsi, r13	      1330	elf.c	FUNCTION_29	IF_1	CALL_4
0x400031d	      0xe81efdffff	                  call sym.section_match	      1330	elf.c	FUNCTION_29	IF_1	CALL_4
0x4000322	            0x85c0	                           test eax, eax	      1330	elf.c	FUNCTION_29	IF_1	CALL_4
0x4000324	            0x753c	                           jne 0x4000362	      1330	elf.c	FUNCTION_29	IF_1	CALL_4
0x4000326	        0x4183fc01	                             cmp r12d, 1	      1333	elf.c	FUNCTION_29	FOR_1	CALL_5
0x400032a	            0x7631	                           jbe 0x400035d	      1333	elf.c	FUNCTION_29	FOR_1	CALL_5
0x400032c	        0x4883c508	                              add rbp, 8	      1333	elf.c	FUNCTION_29	FOR_1	CALL_5
0x4000330	      0xbb01000000	                              mov ebx, 1	      1333	elf.c	FUNCTION_29	FOR_1	CALL_5
0x4000335	        0x488b7d00	                    mov rdi, qword [rbp]	      1335	elf.c	FUNCTION_29	FOR_1
0x4000339	          0x4885ff	                           test rdi, rdi	      1337	elf.c	FUNCTION_29	FOR_1	IF_2
0x400033c	            0x740c	                            je 0x400034a	      1337	elf.c	FUNCTION_29	FOR_1	IF_2
0x400033e	          0x4c89ee	                            mov rsi, r13	      1339	elf.c	FUNCTION_29	FOR_1	IF_3	CALL_6
0x4000341	      0xe8fafcffff	                  call sym.section_match	      1339	elf.c	FUNCTION_29	FOR_1	IF_3	CALL_6
0x4000346	            0x85c0	                           test eax, eax	      1339	elf.c	FUNCTION_29	FOR_1	IF_3	CALL_6
0x4000348	            0x7518	                           jne 0x4000362	      1339	elf.c	FUNCTION_29	FOR_1	IF_3	CALL_6
0x400034a	          0x83c301	                              add ebx, 1	      1333	elf.c	FUNCTION_29	FOR_1	CALL_5
0x400034d	        0x4883c508	                              add rbp, 8	      1333	elf.c	FUNCTION_29	FOR_1	CALL_5
0x4000351	          0x4139dc	                           cmp r12d, ebx	      1333	elf.c	FUNCTION_29	FOR_1	CALL_5
0x4000354	            0x75df	                           jne 0x4000335	      1333	elf.c	FUNCTION_29	FOR_1	CALL_5
0x4000356	      0xbb00000000	                              mov ebx, 0	      1345	elf.c	FUNCTION_29
0x400035b	            0xeb05	                           jmp 0x4000362	      1345	elf.c	FUNCTION_29
0x400035d	      0xbb00000000	                              mov ebx, 0	      1345	elf.c	FUNCTION_29
0x4000362	            0x89d8	                            mov eax, ebx	      1346	elf.c	FUNCTION_29
0x4000364	        0x4883c408	                              add rsp, 8	      1346	elf.c	FUNCTION_29
0x4000368	              0x5b	                                 pop rbx	      1346	elf.c	FUNCTION_29
0x4000369	              0x5d	                                 pop rbp	      1346	elf.c	FUNCTION_29
0x400036a	            0x415c	                                 pop r12	      1346	elf.c	FUNCTION_29
0x400036c	            0x415d	                                 pop r13	      1346	elf.c	FUNCTION_29
0x400036e	              0xc3	                                     ret	      1346	elf.c	FUNCTION_29
bfd_elf_generic_reloc	FOR,0:ELSE,0:IF,1:WHILE,0:DO,0:SWITCH,0:CALL,0:functions,0	17
0x400276a	          0x4d85c9	                             test r9, r9	      1282	elf.c	ELSE_12	FUNCTION_27	IF_1
0x400276d	            0x742f	                            je 0x400279e	      1282	elf.c	ELSE_12	FUNCTION_27	IF_1
0x400276f	      0xb805000000	                              mov eax, 5	      1291	elf.c	ELSE_12	FUNCTION_27
0x4002774	        0xf6421901	               test byte [rdx + 0x19], 1	      1283	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4002778	            0x7529	                           jne 0x40027a3	      1283	elf.c	ELSE_12	FUNCTION_27	IF_1
0x400277a	        0x488b4618	            mov rax, qword [rsi + 0x18] 	      1284	elf.c	ELSE_12	FUNCTION_27	IF_1
0x400277e	        0x83783000	               cmp dword [rax + 0x30], 0	      1284	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4002782	            0x740c	                            je 0x4002790	      1284	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4002784	      0xb805000000	                              mov eax, 5	      1291	elf.c	ELSE_12	FUNCTION_27
0x4002789	      0x48837e1000	               cmp qword [rsi + 0x10], 0	      1285	elf.c	ELSE_12	FUNCTION_27	IF_1
0x400278e	            0x7513	                           jne 0x40027a3	      1285	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4002790	        0x498b4060	              mov rax, qword [r8 + 0x60]	      1287	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4002794	        0x48014608	                add qword [rsi + 8], rax	      1287	elf.c	ELSE_12	FUNCTION_27	IF_1
0x4002798	      0xb802000000	                              mov eax, 2	      1288	elf.c	ELSE_12	FUNCTION_27	IF_1
0x400279d	              0xc3	                                     ret	      1288	elf.c	ELSE_12	FUNCTION_27	IF_1
0x400279e	      0xb805000000	                              mov eax, 5	      1291	elf.c	ELSE_12	FUNCTION_27
0x40027a3	            0xf3c3	                                     ret	      1292	elf.c	ELSE_12	FUNCTION_27
elfcore_write_prstatus	FOR,0:ELSE,1:IF,3:WHILE,0:DO,0:SWITCH,0:CALL,8:functions,0	101
0x400f6c0	            0x4157	                                push r15	     10644	elf.c	FUNCTION_165
0x400f6c2	            0x4156	                                push r14	     10644	elf.c	FUNCTION_165
0x400f6c4	            0x4155	                                push r13	     10644	elf.c	FUNCTION_165
0x400f6c6	            0x4154	                                push r12	     10644	elf.c	FUNCTION_165
0x400f6c8	              0x55	                                push rbp	     10644	elf.c	FUNCTION_165
0x400f6c9	              0x53	                                push rbx	     10644	elf.c	FUNCTION_165
0x400f6ca	    0x4881ec780100	                          sub rsp, 0x178	     10644	elf.c	FUNCTION_165
0x400f6d1	          0x4889fd	                            mov rbp, rdi	     10644	elf.c	FUNCTION_165
0x400f6d4	      0x4889742408	                mov qword [rsp + 8], rsi	     10644	elf.c	FUNCTION_165
0x400f6d9	          0x4989d5	                            mov r13, rdx	     10644	elf.c	FUNCTION_165
0x400f6dc	          0x4989cf	                            mov r15, rcx	     10644	elf.c	FUNCTION_165
0x400f6df	          0x4589c6	                           mov r14d, r8d	     10644	elf.c	FUNCTION_165
0x400f6e2	          0x4c89cb	                             mov rbx, r9	     10644	elf.c	FUNCTION_165
0x400f6e5	    0x64488b042528	                mov rax, qword fs:[0x28]	     10644	elf.c	FUNCTION_165
0x400f6ee	    0x488984246801	            mov qword [rsp + 0x168], rax	     10644	elf.c	FUNCTION_165
0x400f6f6	            0x31c0	                            xor eax, eax	     10644	elf.c	FUNCTION_165
0x400f6f8	        0x488b4708	                mov rax, qword [rdi + 8]	     10645	elf.c	FUNCTION_165	CALL_1
0x400f6fc	    0x4c8ba0680300	           mov r12, qword [rax + 0x368] 	     10645	elf.c	FUNCTION_165	CALL_1
0x400f703	    0x4d8b94242002	           mov r10, qword [r12 + 0x220] 	     10647	elf.c	FUNCTION_165	IF_1
0x400f70b	          0x4d85d2	                           test r10, r10	     10647	elf.c	FUNCTION_165	IF_1
0x400f70e	            0x7426	                            je 0x400f736	     10647	elf.c	FUNCTION_165	IF_1
0x400f710	        0x4883ec08	                              sub rsp, 8	     10650	elf.c	FUNCTION_165	IF_1
0x400f714	            0x4151	                                 push r9	     10650	elf.c	FUNCTION_165	IF_1
0x400f716	          0x4589c1	                            mov r9d, r8d	     10650	elf.c	FUNCTION_165	IF_1
0x400f719	          0x4989c8	                             mov r8, rcx	     10650	elf.c	FUNCTION_165	IF_1
0x400f71c	      0xb901000000	                              mov ecx, 1	     10650	elf.c	FUNCTION_165	IF_1
0x400f721	      0xb800000000	                              mov eax, 0	     10650	elf.c	FUNCTION_165	IF_1
0x400f726	          0x41ffd2	                                call r10	     10650	elf.c	FUNCTION_165	IF_1
0x400f729	        0x4883c410	                           add rsp, 0x10	     10653	elf.c	FUNCTION_165	IF_1	IF_2
0x400f72d	          0x4885c0	                           test rax, rax	     10653	elf.c	FUNCTION_165	IF_1	IF_2
0x400f730	     0xf8511010000	                           jne 0x400f847	     10653	elf.c	FUNCTION_165	IF_1	IF_2
0x400f736	    0x498b84240003	           mov rax, qword [r12 + 0x300] 	     10659	elf.c	FUNCTION_165	IF_3
0x400f73e	        0x80780c01	                 cmp byte [rax + 0xc], 1	     10659	elf.c	FUNCTION_165	IF_3
0x400f742	     0xf85a4000000	                           jne 0x400f7ec	     10659	elf.c	FUNCTION_165	IF_3
0x400f748	      0x4c8d4c2410	                    lea r9, [rsp + 0x10]	        90	string3.h	FUNCTION_224	CALL_6
0x400f74d	      0xb912000000	                           mov ecx, 0x12	        90	string3.h	FUNCTION_224	CALL_6
0x400f752	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_224	CALL_6
0x400f757	          0x4c89cf	                             mov rdi, r9	        90	string3.h	FUNCTION_224	CALL_6
0x400f75a	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_224	CALL_6
0x400f75d	      0x44897c2428	            mov dword [rsp + 0x28], r15d	     10664	elf.c	FUNCTION_165	IF_3
0x400f762	    0x66448974241c	             mov word [rsp + 0x1c], r14w	     10665	elf.c	FUNCTION_165	IF_3
0x400f768	          0x488b03	                    mov rax, qword [rbx]	     10665	elf.c	FUNCTION_165	IF_3
0x400f76b	      0x4889442458	             mov qword [rsp + 0x58], rax	     10665	elf.c	FUNCTION_165	IF_3
0x400f770	        0x488b4308	                mov rax, qword [rbx + 8]	     10665	elf.c	FUNCTION_165	IF_3
0x400f774	      0x4889442460	             mov qword [rsp + 0x60], rax	     10665	elf.c	FUNCTION_165	IF_3
0x400f779	        0x488b4310	            mov rax, qword [rbx + 0x10] 	     10665	elf.c	FUNCTION_165	IF_3
0x400f77d	      0x4889442468	             mov qword [rsp + 0x68], rax	     10665	elf.c	FUNCTION_165	IF_3
0x400f782	        0x488b4318	            mov rax, qword [rbx + 0x18] 	     10665	elf.c	FUNCTION_165	IF_3
0x400f786	      0x4889442470	             mov qword [rsp + 0x70], rax	     10665	elf.c	FUNCTION_165	IF_3
0x400f78b	        0x488b4320	            mov rax, qword [rbx + 0x20] 	     10665	elf.c	FUNCTION_165	IF_3
0x400f78f	      0x4889442478	             mov qword [rsp + 0x78], rax	     10665	elf.c	FUNCTION_165	IF_3
0x400f794	        0x488b4328	            mov rax, qword [rbx + 0x28] 	     10665	elf.c	FUNCTION_165	IF_3
0x400f798	    0x488984248000	             mov qword [rsp + 0x80], rax	     10665	elf.c	FUNCTION_165	IF_3
0x400f7a0	        0x488b4330	            mov rax, qword [rbx + 0x30] 	     10665	elf.c	FUNCTION_165	IF_3
0x400f7a4	    0x488984248800	             mov qword [rsp + 0x88], rax	     10665	elf.c	FUNCTION_165	IF_3
0x400f7ac	        0x488b4338	            mov rax, qword [rbx + 0x38] 	     10665	elf.c	FUNCTION_165	IF_3
0x400f7b0	    0x488984249000	             mov qword [rsp + 0x90], rax	     10665	elf.c	FUNCTION_165	IF_3
0x400f7b8	          0x8b4340	            mov eax, dword [rbx + 0x40] 	     10665	elf.c	FUNCTION_165	IF_3
0x400f7bb	    0x898424980000	             mov dword [rsp + 0x98], eax	     10665	elf.c	FUNCTION_165	IF_3
0x400f7c2	        0x4883ec08	                              sub rsp, 8	     10667	elf.c	FUNCTION_165	IF_3	CALL_4
0x400f7c6	      0x6890000000	                               push 0x90	     10667	elf.c	FUNCTION_165	IF_3	CALL_4
0x400f7cb	    0x41b801000000	                              mov r8d, 1	     10667	elf.c	FUNCTION_165	IF_3	CALL_4
0x400f7d1	      0xb900000000	                              mov ecx, 0	     10667	elf.c	FUNCTION_165	IF_3	CALL_4
0x400f7d6	          0x4c89ea	                            mov rdx, r13	     10667	elf.c	FUNCTION_165	IF_3	CALL_4
0x400f7d9	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	     10667	elf.c	FUNCTION_165	IF_3	CALL_4
0x400f7de	          0x4889ef	                            mov rdi, rbp	     10667	elf.c	FUNCTION_165	IF_3	CALL_4
0x400f7e1	      0xe800000000	                          call 0x400f7e6	     10667	elf.c	FUNCTION_165	IF_3	CALL_4
0x400f7e6	        0x4883c410	                           add rsp, 0x10	     10667	elf.c	FUNCTION_165	IF_3	CALL_4
0x400f7ea	            0xeb5b	                           jmp 0x400f847	     10667	elf.c	FUNCTION_165	IF_3	CALL_4
0x400f7ec	      0x4c8d4c2410	                    lea r9, [rsp + 0x10]	        90	string3.h	FUNCTION_224	CALL_6
0x400f7f1	      0xb92a000000	                           mov ecx, 0x2a	        90	string3.h	FUNCTION_224	CALL_6
0x400f7f6	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_224	CALL_6
0x400f7fb	          0x4c89cf	                             mov rdi, r9	        90	string3.h	FUNCTION_224	CALL_6
0x400f7fe	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_224	CALL_6
0x400f801	      0x44897c2430	            mov dword [rsp + 0x30], r15d	     10676	elf.c	FUNCTION_165	ELSE_1
0x400f806	    0x66448974241c	             mov word [rsp + 0x1c], r14w	     10677	elf.c	FUNCTION_165	ELSE_1
0x400f80c	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	     10677	elf.c	FUNCTION_165	ELSE_1
0x400f814	      0xb91b000000	                           mov ecx, 0x1b	     10677	elf.c	FUNCTION_165	ELSE_1
0x400f819	          0x4889de	                            mov rsi, rbx	     10677	elf.c	FUNCTION_165	ELSE_1
0x400f81c	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	     10677	elf.c	FUNCTION_165	ELSE_1
0x400f81f	        0x4883ec08	                              sub rsp, 8	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x400f823	      0x6850010000	                              push 0x150	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x400f828	    0x41b801000000	                              mov r8d, 1	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x400f82e	      0xb900000000	                              mov ecx, 0	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x400f833	          0x4c89ea	                            mov rdx, r13	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x400f836	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x400f83b	          0x4889ef	                            mov rdi, rbp	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x400f83e	      0xe800000000	                          call 0x400f843	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x400f843	        0x4883c410	                           add rsp, 0x10	     10679	elf.c	FUNCTION_165	ELSE_1	CALL_7
0x400f847	    0x488b9c246801	           mov rbx, qword [rsp + 0x168] 	     10686	elf.c	FUNCTION_165
0x400f84f	    0x6448331c2528	                xor rbx, qword fs:[0x28]	     10686	elf.c	FUNCTION_165
0x400f858	            0x7405	                            je 0x400f85f	     10686	elf.c	FUNCTION_165
0x400f85a	      0xe800000000	                          call 0x400f85f	     10686	elf.c	FUNCTION_165
0x400f85f	    0x4881c4780100	                          add rsp, 0x178	     10686	elf.c	FUNCTION_165
0x400f866	              0x5b	                                 pop rbx	     10686	elf.c	FUNCTION_165
0x400f867	              0x5d	                                 pop rbp	     10686	elf.c	FUNCTION_165
0x400f868	            0x415c	                                 pop r12	     10686	elf.c	FUNCTION_165
0x400f86a	            0x415d	                                 pop r13	     10686	elf.c	FUNCTION_165
0x400f86c	            0x415e	                                 pop r14	     10686	elf.c	FUNCTION_165
0x400f86e	            0x415f	                                 pop r15	     10686	elf.c	FUNCTION_165
0x400f870	              0xc3	                                     ret	     10686	elf.c	FUNCTION_165
elfcore_grok_nto_regs	FOR,0:ELSE,0:IF,3:WHILE,0:DO,0:SWITCH,0:CALL,6:functions,0	69
0x4000c04	            0x4156	                                push r14	     10363	elf.c	FUNCTION_158
0x4000c06	            0x4155	                                push r13	     10363	elf.c	FUNCTION_158
0x4000c08	            0x4154	                                push r12	     10363	elf.c	FUNCTION_158
0x4000c0a	              0x55	                                push rbp	     10363	elf.c	FUNCTION_158
0x4000c0b	              0x53	                                push rbx	     10363	elf.c	FUNCTION_158
0x4000c0c	        0x4883ec70	                           sub rsp, 0x70	     10363	elf.c	FUNCTION_158
0x4000c10	          0x4889fb	                            mov rbx, rdi	     10363	elf.c	FUNCTION_158
0x4000c13	          0x4989f4	                            mov r12, rsi	     10363	elf.c	FUNCTION_158
0x4000c16	          0x4889d5	                            mov rbp, rdx	     10363	elf.c	FUNCTION_158
0x4000c19	          0x4989cd	                            mov r13, rcx	     10363	elf.c	FUNCTION_158
0x4000c1c	    0x64488b042528	                mov rax, qword fs:[0x28]	     10363	elf.c	FUNCTION_158
0x4000c25	      0x4889442468	             mov qword [rsp + 0x68], rax	     10363	elf.c	FUNCTION_158
0x4000c2a	            0x31c0	                            xor eax, eax	     10363	elf.c	FUNCTION_158
0x4000c2c	          0x4989d1	                             mov r9, rdx	        33	stdio2.h	FUNCTION_204	CALL_1
0x4000c2f	          0x4989c8	                             mov r8, rcx	        33	stdio2.h	FUNCTION_204	CALL_1
0x4000c32	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x4000c37	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_204	CALL_1
0x4000c3c	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_204	CALL_1
0x4000c41	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_204	CALL_1
0x4000c44	      0xe800000000	                          call 0x4000c49	        33	stdio2.h	FUNCTION_204	CALL_1
0x4000c49	      0xb800000000	                              mov eax, 0	     10371	elf.c	FUNCTION_158	CALL_2
0x4000c4e	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	     10371	elf.c	FUNCTION_158	CALL_2
0x4000c55	          0x4889e7	                            mov rdi, rsp	     10371	elf.c	FUNCTION_158	CALL_2
0x4000c58	            0xf2ae	              repne scasb al, byte [rdi]	     10371	elf.c	FUNCTION_158	CALL_2
0x4000c5a	          0x4889ce	                            mov rsi, rcx	     10371	elf.c	FUNCTION_158	CALL_2
0x4000c5d	          0x48f7d6	                                 not rsi	     10371	elf.c	FUNCTION_158	CALL_2
0x4000c60	          0x4889df	                            mov rdi, rbx	     10371	elf.c	FUNCTION_158	CALL_2
0x4000c63	      0xe800000000	                          call 0x4000c68	     10371	elf.c	FUNCTION_158	CALL_2
0x4000c68	          0x4989c6	                            mov r14, rax	     10371	elf.c	FUNCTION_158	CALL_2
0x4000c6b	      0xb800000000	                              mov eax, 0	     10373	elf.c	FUNCTION_158	IF_1
0x4000c70	          0x4d85f6	                           test r14, r14	     10372	elf.c	FUNCTION_158	IF_1
0x4000c73	            0x746d	                            je 0x4000ce2	     10372	elf.c	FUNCTION_158	IF_1
0x4000c75	          0x4889e6	                            mov rsi, rsp	       110	string3.h	FUNCTION_227	CALL_3
0x4000c78	          0x4c89f7	                            mov rdi, r14	       110	string3.h	FUNCTION_227	CALL_3
0x4000c7b	      0xe800000000	                          call 0x4000c80	       110	string3.h	FUNCTION_227	CALL_3
0x4000c80	      0xba00010000	                          mov edx, 0x100	     10376	elf.c	FUNCTION_158	CALL_4
0x4000c85	          0x4c89f6	                            mov rsi, r14	     10376	elf.c	FUNCTION_158	CALL_4
0x4000c88	          0x4889df	                            mov rdi, rbx	     10376	elf.c	FUNCTION_158	CALL_4
0x4000c8b	      0xe800000000	                          call 0x4000c90	     10376	elf.c	FUNCTION_158	CALL_4
0x4000c90	          0x4889c2	                            mov rdx, rax	     10376	elf.c	FUNCTION_158	CALL_4
0x4000c93	          0x4885c0	                           test rax, rax	     10377	elf.c	FUNCTION_158	IF_2
0x4000c96	            0x7445	                            je 0x4000cdd	     10377	elf.c	FUNCTION_158	IF_2
0x4000c98	      0x498b442408	                mov rax, qword [r12 + 8]	     10380	elf.c	FUNCTION_158
0x4000c9d	        0x48894238	             mov qword [rdx + 0x38], rax	     10380	elf.c	FUNCTION_158
0x4000ca1	      0x498b442428	            mov rax, qword [r12 + 0x28] 	     10381	elf.c	FUNCTION_158
0x4000ca6	    0x488982900000	             mov qword [rdx + 0x90], rax	     10381	elf.c	FUNCTION_158
0x4000cad	    0xc74270020000	               mov dword [rdx + 0x70], 2	     10382	elf.c	FUNCTION_158
0x4000cb4	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	     10385	elf.c	FUNCTION_158	IF_3	CALL_5
0x4000cbb	    0x488b80900c00	           mov rax, qword [rax + 0xc90] 	     10385	elf.c	FUNCTION_158	IF_3	CALL_5
0x4000cc2	        0x48634808	            movsxd rcx, dword [rax + 8] 	     10385	elf.c	FUNCTION_158	IF_3	CALL_5
0x4000cc6	      0xb801000000	                              mov eax, 1	     10388	elf.c	FUNCTION_158
0x4000ccb	          0x4839cd	                            cmp rbp, rcx	     10385	elf.c	FUNCTION_158	IF_3	CALL_5
0x4000cce	            0x7512	                           jne 0x4000ce2	     10385	elf.c	FUNCTION_158	IF_3	CALL_5
0x4000cd0	          0x4c89ee	                            mov rsi, r13	     10386	elf.c	FUNCTION_158	CALL_6
0x4000cd3	          0x4889df	                            mov rdi, rbx	     10386	elf.c	FUNCTION_158	CALL_6
0x4000cd6	      0xe8c5feffff	        call sym.elfcore_maybe_make_sect	     10386	elf.c	FUNCTION_158	CALL_6
0x4000cdb	            0xeb05	                           jmp 0x4000ce2	     10386	elf.c	FUNCTION_158	CALL_6
0x4000cdd	      0xb800000000	                              mov eax, 0	     10378	elf.c	FUNCTION_158	IF_2
0x4000ce2	      0x488b5c2468	            mov rbx, qword [rsp + 0x68] 	     10389	elf.c	FUNCTION_158
0x4000ce7	    0x6448331c2528	                xor rbx, qword fs:[0x28]	     10389	elf.c	FUNCTION_158
0x4000cf0	            0x7405	                            je 0x4000cf7	     10389	elf.c	FUNCTION_158
0x4000cf2	      0xe800000000	                          call 0x4000cf7	     10389	elf.c	FUNCTION_158
0x4000cf7	        0x4883c470	                           add rsp, 0x70	     10389	elf.c	FUNCTION_158
0x4000cfb	              0x5b	                                 pop rbx	     10389	elf.c	FUNCTION_158
0x4000cfc	              0x5d	                                 pop rbp	     10389	elf.c	FUNCTION_158
0x4000cfd	            0x415c	                                 pop r12	     10389	elf.c	FUNCTION_158
0x4000cff	            0x415d	                                 pop r13	     10389	elf.c	FUNCTION_158
0x4000d01	            0x415e	                                 pop r14	     10389	elf.c	FUNCTION_158
0x4000d03	              0xc3	                                     ret	     10389	elf.c	FUNCTION_158
_bfd_elf_init_private_section_data	FOR,0:ELSE,0:IF,7:WHILE,0:DO,0:SWITCH,0:CALL,25:functions,0	108
0x4009c42	            0x4156	                                push r14	      7492	elf.c	FUNCTION_83
0x4009c44	            0x4155	                                push r13	      7492	elf.c	FUNCTION_83
0x4009c46	            0x4154	                                push r12	      7492	elf.c	FUNCTION_83
0x4009c48	              0x55	                                push rbp	      7492	elf.c	FUNCTION_83
0x4009c49	              0x53	                                push rbx	      7492	elf.c	FUNCTION_83
0x4009c4a	          0x4d85c0	                             test r8, r8	      7495	elf.c	FUNCTION_83	CALL_1
0x4009c4d	            0x7413	                            je 0x4009c62	      7495	elf.c	FUNCTION_83	CALL_1
0x4009c4f	        0x410fb600	                    movzx eax, byte [r8]	      7495	elf.c	FUNCTION_83	CALL_1
0x4009c53	          0x83e003	                              and eax, 3	      7495	elf.c	FUNCTION_83	CALL_1
0x4009c56	            0x3c02	                               cmp al, 2	      7495	elf.c	FUNCTION_83	CALL_1
0x4009c58	        0x410f95c4	                              setne r12b	      7495	elf.c	FUNCTION_83	CALL_1
0x4009c5c	        0x450fb6e4	                        movzx r12d, r12b	      7495	elf.c	FUNCTION_83	CALL_1
0x4009c60	            0xeb06	                           jmp 0x4009c68	      7495	elf.c	FUNCTION_83	CALL_1
0x4009c62	    0x41bc00000000	                             mov r12d, 0	      7495	elf.c	FUNCTION_83	CALL_1
0x4009c68	        0x488b4708	                mov rax, qword [rdi + 8]	      7497	elf.c	FUNCTION_83	IF_1
0x4009c6c	        0x83780805	                  cmp dword [rax + 8], 5	      7497	elf.c	FUNCTION_83	IF_1
0x4009c70	     0xf8580010000	                           jne 0x4009df6	      7497	elf.c	FUNCTION_83	IF_1
0x4009c76	        0x488b4208	                mov rax, qword [rdx + 8]	      7498	elf.c	FUNCTION_83	IF_1
0x4009c7a	        0x83780805	                  cmp dword [rax + 8], 5	      7498	elf.c	FUNCTION_83	IF_1
0x4009c7e	     0xf8572010000	                           jne 0x4009df6	      7498	elf.c	FUNCTION_83	IF_1
0x4009c84	          0x4c89c3	                             mov rbx, r8	      7498	elf.c	FUNCTION_83	IF_1
0x4009c87	          0x4889cd	                            mov rbp, rcx	      7498	elf.c	FUNCTION_83	IF_1
0x4009c8a	          0x4989f5	                            mov r13, rsi	      7498	elf.c	FUNCTION_83	IF_1
0x4009c8d	          0x4989fe	                            mov r14, rdi	      7498	elf.c	FUNCTION_83	IF_1
0x4009c90	    0x4883b9e00000	               cmp qword [rcx + 0xe0], 0	      7501	elf.c	FUNCTION_83	CALL_3
0x4009c98	            0x750f	                           jne 0x4009ca9	      7501	elf.c	FUNCTION_83	CALL_3
0x4009c9a	      0xbe4d1d0000	                         mov esi, 0x1d4d	      7501	elf.c	FUNCTION_83	CALL_3
0x4009c9f	      0xbf00000000	                              mov edi, 0	      7501	elf.c	FUNCTION_83	CALL_3
0x4009ca4	      0xe800000000	                          call 0x4009ca9	      7501	elf.c	FUNCTION_83	CALL_3
0x4009ca9	    0x488b85e00000	            mov rax, qword [rbp + 0xe0] 	      7507	elf.c	FUNCTION_83	IF_2	CALL_4
0x4009cb0	        0x83780400	                  cmp dword [rax + 4], 0	      7507	elf.c	FUNCTION_83	IF_2	CALL_4
0x4009cb4	            0x7527	                           jne 0x4009cdd	      7507	elf.c	FUNCTION_83	IF_2	CALL_4
0x4009cb6	          0x8b4d20	            mov ecx, dword [rbp + 0x20] 	      7508	elf.c	FUNCTION_83	IF_2
0x4009cb9	        0x418b5520	            mov edx, dword [r13 + 0x20] 	      7508	elf.c	FUNCTION_83	IF_2
0x4009cbd	            0x39d1	                            cmp ecx, edx	      7508	elf.c	FUNCTION_83	IF_2
0x4009cbf	            0x740f	                            je 0x4009cd0	      7508	elf.c	FUNCTION_83	IF_2
0x4009cc1	          0x4585e4	                         test r12d, r12d	      7509	elf.c	FUNCTION_83	IF_2
0x4009cc4	            0x7417	                            je 0x4009cdd	      7509	elf.c	FUNCTION_83	IF_2
0x4009cc6	            0x31ca	                            xor edx, ecx	      7510	elf.c	FUNCTION_83	IF_2
0x4009cc8	    0xf7c2fbfff1ff	                    test edx, 0xfff1fffb	      7510	elf.c	FUNCTION_83	IF_2
0x4009cce	            0x750d	                           jne 0x4009cdd	      7510	elf.c	FUNCTION_83	IF_2
0x4009cd0	    0x498b95e00000	            mov rdx, qword [r13 + 0xe0] 	      7512	elf.c	FUNCTION_83	CALL_6
0x4009cd7	          0x8b5204	                mov edx, dword [rdx + 4]	      7512	elf.c	FUNCTION_83	CALL_6
0x4009cda	          0x895004	                mov dword [rax + 4], edx	      7512	elf.c	FUNCTION_83	CALL_6
0x4009cdd	    0x488b95e00000	            mov rdx, qword [rbp + 0xe0] 	      7515	elf.c	FUNCTION_83	CALL_8
0x4009ce4	    0x498b85e00000	            mov rax, qword [r13 + 0xe0] 	      7515	elf.c	FUNCTION_83	CALL_8
0x4009ceb	        0x488b4008	                mov rax, qword [rax + 8]	      7515	elf.c	FUNCTION_83	CALL_8
0x4009cef	      0x250000f0ff	                     and eax, 0xfff00000	      7515	elf.c	FUNCTION_83	CALL_8
0x4009cf4	        0x48094208	                 or qword [rdx + 8], rax	      7515	elf.c	FUNCTION_83	CALL_8
0x4009cf8	    0x498b85e00000	            mov rax, qword [r13 + 0xe0] 	      7519	elf.c	FUNCTION_83	IF_3	CALL_9
0x4009cff	        0xf6400b01	                test byte [rax + 0xb], 1	      7519	elf.c	FUNCTION_83	IF_3	CALL_9
0x4009d03	            0x740d	                            je 0x4009d12	      7519	elf.c	FUNCTION_83	IF_3	CALL_9
0x4009d05	    0x488b95e00000	            mov rdx, qword [rbp + 0xe0] 	      7520	elf.c	FUNCTION_83	IF_3	CALL_10
0x4009d0c	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      7521	elf.c	FUNCTION_83	CALL_11
0x4009d0f	          0x89422c	             mov dword [rdx + 0x2c], eax	      7521	elf.c	FUNCTION_83	CALL_11
0x4009d12	          0x4885db	                           test rbx, rbx	      7527	elf.c	FUNCTION_83	IF_4
0x4009d15	            0x7406	                            je 0x4009d1d	      7527	elf.c	FUNCTION_83	IF_4
0x4009d17	        0xf6430110	               test byte [rbx + 1], 0x10	      7528	elf.c	FUNCTION_83	IF_4
0x4009d1b	            0x7566	                           jne 0x4009d83	      7528	elf.c	FUNCTION_83	IF_4
0x4009d1d	    0x498b95e00000	            mov rdx, qword [r13 + 0xe0] 	      7529	elf.c	FUNCTION_83	IF_4	CALL_12
0x4009d24	    0x488b82b80000	            mov rax, qword [rdx + 0xb8] 	      7529	elf.c	FUNCTION_83	IF_4	CALL_12
0x4009d2b	          0x4885c0	                           test rax, rax	      7529	elf.c	FUNCTION_83	IF_4	CALL_12
0x4009d2e	            0x7406	                            je 0x4009d36	      7529	elf.c	FUNCTION_83	IF_4	CALL_12
0x4009d30	        0xf6402210	           test byte [rax + 0x22], 0x10 	      7530	elf.c	FUNCTION_83	IF_4	CALL_13
0x4009d34	            0x754d	                           jne 0x4009d83	      7530	elf.c	FUNCTION_83	IF_4	CALL_13
0x4009d36	        0xf6420902	                  test byte [rdx + 9], 2	      7532	elf.c	FUNCTION_83	IF_4	IF_5	CALL_14
0x4009d3a	            0x740f	                            je 0x4009d4b	      7532	elf.c	FUNCTION_83	IF_4	IF_5	CALL_14
0x4009d3c	    0x488b85e00000	            mov rax, qword [rbp + 0xe0] 	      7533	elf.c	FUNCTION_83	IF_4	CALL_15
0x4009d43	    0x488148080002	               or qword [rax + 8], 0x200	      7533	elf.c	FUNCTION_83	IF_4	CALL_15
0x4009d4b	    0x488b85e00000	            mov rax, qword [rbp + 0xe0] 	      7534	elf.c	FUNCTION_83	IF_4	CALL_17
0x4009d52	    0x498b95e00000	            mov rdx, qword [r13 + 0xe0] 	      7534	elf.c	FUNCTION_83	IF_4	CALL_17
0x4009d59	    0x488b92c00000	            mov rdx, qword [rdx + 0xc0] 	      7534	elf.c	FUNCTION_83	IF_4	CALL_17
0x4009d60	    0x488990c00000	             mov qword [rax + 0xc0], rdx	      7534	elf.c	FUNCTION_83	IF_4	CALL_17
0x4009d67	    0x488b85e00000	            mov rax, qword [rbp + 0xe0] 	      7535	elf.c	FUNCTION_83	IF_4	CALL_19
0x4009d6e	    0x498b95e00000	            mov rdx, qword [r13 + 0xe0] 	      7535	elf.c	FUNCTION_83	IF_4	CALL_19
0x4009d75	    0x488b92b00000	            mov rdx, qword [rdx + 0xb0] 	      7535	elf.c	FUNCTION_83	IF_4	CALL_19
0x4009d7c	    0x488990b00000	             mov qword [rax + 0xb0], rdx	      7535	elf.c	FUNCTION_83	IF_4	CALL_19
0x4009d83	          0x4585e4	                         test r12d, r12d	      7539	elf.c	FUNCTION_83	IF_6
0x4009d86	            0x7522	                           jne 0x4009daa	      7539	elf.c	FUNCTION_83	IF_6
0x4009d88	      0x41f6464610	           test byte [r14 + 0x46], 0x10 	      7539	elf.c	FUNCTION_83	IF_6
0x4009d8d	            0x751b	                           jne 0x4009daa	      7539	elf.c	FUNCTION_83	IF_6
0x4009d8f	    0x488b95e00000	            mov rdx, qword [rbp + 0xe0] 	      7540	elf.c	FUNCTION_83	IF_6	CALL_21
0x4009d96	    0x498b85e00000	            mov rax, qword [r13 + 0xe0] 	      7540	elf.c	FUNCTION_83	IF_6	CALL_21
0x4009d9d	        0x488b4008	                mov rax, qword [rax + 8]	      7540	elf.c	FUNCTION_83	IF_6	CALL_21
0x4009da1	      0x2500080000	                          and eax, 0x800	      7540	elf.c	FUNCTION_83	IF_6	CALL_21
0x4009da6	        0x48094208	                 or qword [rdx + 8], rax	      7540	elf.c	FUNCTION_83	IF_6	CALL_21
0x4009daa	    0x498b85e00000	            mov rax, qword [r13 + 0xe0] 	      7548	elf.c	FUNCTION_83	IF_7
0x4009db1	        0xf6400880	               test byte [rax + 8], 0x80	      7548	elf.c	FUNCTION_83	IF_7
0x4009db5	            0x742b	                            je 0x4009de2	      7548	elf.c	FUNCTION_83	IF_7
0x4009db7	    0x488b85e00000	            mov rax, qword [rbp + 0xe0] 	      7550	elf.c	FUNCTION_83	IF_7	CALL_23
0x4009dbe	    0x488148088000	                or qword [rax + 8], 0x80	      7551	elf.c	FUNCTION_83	IF_7
0x4009dc6	    0x488b85e00000	            mov rax, qword [rbp + 0xe0] 	      7552	elf.c	FUNCTION_83	IF_7	CALL_25
0x4009dcd	    0x498b95e00000	            mov rdx, qword [r13 + 0xe0] 	      7552	elf.c	FUNCTION_83	IF_7	CALL_25
0x4009dd4	    0x488b92900000	            mov rdx, qword [rdx + 0x90] 	      7552	elf.c	FUNCTION_83	IF_7	CALL_25
0x4009ddb	    0x488990900000	             mov qword [rax + 0x90], rdx	      7552	elf.c	FUNCTION_83	IF_7	CALL_25
0x4009de2	      0x410fb64525	           movzx eax, byte [r13 + 0x25] 	      7555	elf.c	FUNCTION_83
0x4009de7	          0x83e004	                              and eax, 4	      7555	elf.c	FUNCTION_83
0x4009dea	         0xfb65525	           movzx edx, byte [rbp + 0x25] 	      7555	elf.c	FUNCTION_83
0x4009dee	          0x83e2fb	                     and edx, 0xfffffffb	      7555	elf.c	FUNCTION_83
0x4009df1	             0x9d0	                             or eax, edx	      7555	elf.c	FUNCTION_83
0x4009df3	          0x884525	               mov byte [rbp + 0x25], al	      7555	elf.c	FUNCTION_83
0x4009df6	      0xb801000000	                              mov eax, 1	      7558	elf.c	FUNCTION_83
0x4009dfb	              0x5b	                                 pop rbx	      7558	elf.c	FUNCTION_83
0x4009dfc	              0x5d	                                 pop rbp	      7558	elf.c	FUNCTION_83
0x4009dfd	            0x415c	                                 pop r12	      7558	elf.c	FUNCTION_83
0x4009dff	            0x415d	                                 pop r13	      7558	elf.c	FUNCTION_83
0x4009e01	            0x415e	                                 pop r14	      7558	elf.c	FUNCTION_83
0x4009e03	              0xc3	                                     ret	      7558	elf.c	FUNCTION_83
bfd_section_from_phdr	FOR,0:ELSE,0:IF,2:WHILE,0:DO,0:SWITCH,1:CALL,13:functions,0	128
0x400535e	            0x4157	                                push r15	      2996	elf.c	FUNCTION_43
0x4005360	            0x4156	                                push r14	      2996	elf.c	FUNCTION_43
0x4005362	            0x4155	                                push r13	      2996	elf.c	FUNCTION_43
0x4005364	            0x4154	                                push r12	      2996	elf.c	FUNCTION_43
0x4005366	              0x55	                                push rbp	      2996	elf.c	FUNCTION_43
0x4005367	              0x53	                                push rbx	      2996	elf.c	FUNCTION_43
0x4005368	        0x4883ec08	                              sub rsp, 8	      2996	elf.c	FUNCTION_43
0x400536c	          0x4889fd	                            mov rbp, rdi	      2996	elf.c	FUNCTION_43
0x400536f	          0x4889f3	                            mov rbx, rsi	      2996	elf.c	FUNCTION_43
0x4005372	          0x488b06	                    mov rax, qword [rsi]	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4005375	        0x4883f804	                              cmp rax, 4	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4005379	     0xf84a9000000	                            je 0x4005428	      2999	elf.c	FUNCTION_43	SWITCH_1
0x400537f	        0x4883f804	                              cmp rax, 4	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4005383	            0x771d	                            ja 0x40053a2	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4005385	        0x4883f801	                              cmp rax, 1	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4005389	            0x7470	                            je 0x40053fb	      2999	elf.c	FUNCTION_43	SWITCH_1
0x400538b	        0x4883f801	                              cmp rax, 1	      2999	elf.c	FUNCTION_43	SWITCH_1
0x400538f	            0x725b	                            jb 0x40053ec	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4005391	        0x4883f802	                              cmp rax, 2	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4005395	            0x7473	                            je 0x400540a	      2999	elf.c	FUNCTION_43	SWITCH_1
0x4005397	        0x4883f803	                              cmp rax, 3	      2999	elf.c	FUNCTION_43	SWITCH_1
0x400539b	            0x747c	                            je 0x4005419	      2999	elf.c	FUNCTION_43	SWITCH_1
0x400539d	      0xe977010000	                           jmp 0x4005519	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40053a2	    0x483d50e57464	                     cmp rax, 0x6474e550	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40053a8	     0xf8447010000	                            je 0x40054f5	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40053ae	    0x483d50e57464	                     cmp rax, 0x6474e550	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40053b4	            0x7719	                            ja 0x40053cf	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40053b6	        0x4883f805	                              cmp rax, 5	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40053ba	     0xf841d010000	                            je 0x40054dd	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40053c0	        0x4883f806	                              cmp rax, 6	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40053c4	     0xf841f010000	                            je 0x40054e9	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40053ca	      0xe94a010000	                           jmp 0x4005519	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40053cf	    0x483d51e57464	                     cmp rax, 0x6474e551	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40053d5	     0xf8426010000	                            je 0x4005501	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40053db	    0x483d52e57464	                     cmp rax, 0x6474e552	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40053e1	     0xf8426010000	                            je 0x400550d	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40053e7	      0xe92d010000	                           jmp 0x4005519	      2999	elf.c	FUNCTION_43	SWITCH_1
0x40053ec	      0xb900000000	                              mov ecx, 0	      3002	elf.c	FUNCTION_43	SWITCH_1	CALL_1
0x40053f1	      0xe800000000	                          call 0x40053f6	      3002	elf.c	FUNCTION_43	SWITCH_1	CALL_1
0x40053f6	      0xe93a010000	                           jmp 0x4005535	      3002	elf.c	FUNCTION_43	SWITCH_1	CALL_1
0x40053fb	      0xb900000000	                              mov ecx, 0	      3005	elf.c	FUNCTION_43	SWITCH_1	CALL_2
0x4005400	      0xe800000000	                          call 0x4005405	      3005	elf.c	FUNCTION_43	SWITCH_1	CALL_2
0x4005405	      0xe92b010000	                           jmp 0x4005535	      3005	elf.c	FUNCTION_43	SWITCH_1	CALL_2
0x400540a	      0xb900000000	                              mov ecx, 0	      3008	elf.c	FUNCTION_43	SWITCH_1	CALL_3
0x400540f	      0xe800000000	                          call 0x4005414	      3008	elf.c	FUNCTION_43	SWITCH_1	CALL_3
0x4005414	      0xe91c010000	                           jmp 0x4005535	      3008	elf.c	FUNCTION_43	SWITCH_1	CALL_3
0x4005419	      0xb900000000	                              mov ecx, 0	      3011	elf.c	FUNCTION_43	SWITCH_1	CALL_4
0x400541e	      0xe800000000	                          call 0x4005423	      3011	elf.c	FUNCTION_43	SWITCH_1	CALL_4
0x4005423	      0xe90d010000	                           jmp 0x4005535	      3011	elf.c	FUNCTION_43	SWITCH_1	CALL_4
0x4005428	      0xb900000000	                              mov ecx, 0	      3014	elf.c	FUNCTION_43	SWITCH_1	IF_1	CALL_5
0x400542d	      0xe800000000	                          call 0x4005432	      3014	elf.c	FUNCTION_43	SWITCH_1	IF_1	CALL_5
0x4005432	            0x85c0	                           test eax, eax	      3014	elf.c	FUNCTION_43	SWITCH_1	IF_1	CALL_5
0x4005434	     0xf84fb000000	                            je 0x4005535	      3014	elf.c	FUNCTION_43	SWITCH_1	IF_1	CALL_5
0x400543a	        0x4c8b6b28	            mov r13, qword [rbx + 0x28] 	      3016	elf.c	FUNCTION_43	SWITCH_1	IF_2	CALL_6
0x400543e	        0x498d45ff	                      lea rax, [r13 - 1]	     11188	elf.c	FUNCTION_192	IF_1
0x4005442	    0x41bc01000000	                             mov r12d, 1	     11189	elf.c	FUNCTION_192	IF_1
0x4005448	        0x4883f8fd	             cmp rax, 0xfffffffffffffffd	     11188	elf.c	FUNCTION_192	IF_1
0x400544c	     0xf8780000000	                            ja 0x40054d2	     11188	elf.c	FUNCTION_192	IF_1
0x4005452	        0x4c8b7338	            mov r14, qword [rbx + 0x38] 	      3016	elf.c	FUNCTION_43	SWITCH_1	IF_2	CALL_6
0x4005456	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      3016	elf.c	FUNCTION_43	SWITCH_1	IF_2	CALL_6
0x400545a	      0xba00000000	                              mov edx, 0	     11191	elf.c	FUNCTION_192	IF_2	CALL_1
0x400545f	          0x4889de	                            mov rsi, rbx	     11191	elf.c	FUNCTION_192	IF_2	CALL_1
0x4005462	          0x4889ef	                            mov rdi, rbp	     11191	elf.c	FUNCTION_192	IF_2	CALL_1
0x4005465	      0xe800000000	                          call 0x400546a	     11191	elf.c	FUNCTION_192	IF_2	CALL_1
0x400546a	          0x4189c4	                           mov r12d, eax	     11191	elf.c	FUNCTION_192	IF_2	CALL_1
0x400546d	            0x85c0	                           test eax, eax	     11191	elf.c	FUNCTION_192	IF_2	CALL_1
0x400546f	            0x755b	                           jne 0x40054cc	     11191	elf.c	FUNCTION_192	IF_2	CALL_1
0x4005471	        0x498d7d01	                      lea rdi, [r13 + 1]	     11194	elf.c	FUNCTION_192	CALL_2
0x4005475	      0xe800000000	                          call 0x400547a	     11194	elf.c	FUNCTION_192	CALL_2
0x400547a	          0x4989c7	                            mov r15, rax	     11194	elf.c	FUNCTION_192	CALL_2
0x400547d	          0x4885c0	                           test rax, rax	     11195	elf.c	FUNCTION_192	IF_3
0x4005480	            0x7450	                            je 0x40054d2	     11195	elf.c	FUNCTION_192	IF_3
0x4005482	      0x42c6042800	                 mov byte [rax + r13], 0	     11200	elf.c	FUNCTION_192
0x4005487	          0x4889ea	                            mov rdx, rbp	     11202	elf.c	FUNCTION_192	IF_4	CALL_3
0x400548a	          0x4c89ee	                            mov rsi, r13	     11202	elf.c	FUNCTION_192	IF_4	CALL_3
0x400548d	          0x4889c7	                            mov rdi, rax	     11202	elf.c	FUNCTION_192	IF_4	CALL_3
0x4005490	      0xe800000000	                          call 0x4005495	     11202	elf.c	FUNCTION_192	IF_4	CALL_3
0x4005495	          0x4939c5	                            cmp r13, rax	     11202	elf.c	FUNCTION_192	IF_4	CALL_3
0x4005498	            0x7518	                           jne 0x40054b2	     11202	elf.c	FUNCTION_192	IF_4	CALL_3
0x400549a	          0x4d89f0	                             mov r8, r14	     11203	elf.c	FUNCTION_192	IF_4	CALL_4
0x400549d	          0x4889d9	                            mov rcx, rbx	     11203	elf.c	FUNCTION_192	IF_4	CALL_4
0x40054a0	          0x4c89ea	                            mov rdx, r13	     11203	elf.c	FUNCTION_192	IF_4	CALL_4
0x40054a3	          0x4c89fe	                            mov rsi, r15	     11203	elf.c	FUNCTION_192	IF_4	CALL_4
0x40054a6	          0x4889ef	                            mov rdi, rbp	     11203	elf.c	FUNCTION_192	IF_4	CALL_4
0x40054a9	      0xe856b8ffff	                call sym.elf_parse_notes	     11203	elf.c	FUNCTION_192	IF_4	CALL_4
0x40054ae	            0x85c0	                           test eax, eax	     11203	elf.c	FUNCTION_192	IF_4	CALL_4
0x40054b0	            0x750a	                           jne 0x40054bc	     11203	elf.c	FUNCTION_192	IF_4	CALL_4
0x40054b2	          0x4c89ff	                            mov rdi, r15	     11205	elf.c	FUNCTION_192	IF_4	CALL_5
0x40054b5	      0xe800000000	                          call 0x40054ba	     11205	elf.c	FUNCTION_192	IF_4	CALL_5
0x40054ba	            0xeb16	                           jmp 0x40054d2	     11205	elf.c	FUNCTION_192	IF_4	CALL_5
0x40054bc	          0x4c89ff	                            mov rdi, r15	     11209	elf.c	FUNCTION_192	CALL_6
0x40054bf	      0xe800000000	                          call 0x40054c4	     11209	elf.c	FUNCTION_192	CALL_6
0x40054c4	    0x41bc01000000	                             mov r12d, 1	     11210	elf.c	FUNCTION_192
0x40054ca	            0xeb06	                           jmp 0x40054d2	     11210	elf.c	FUNCTION_192
0x40054cc	    0x41bc00000000	                             mov r12d, 0	     11192	elf.c	FUNCTION_192	IF_2
0x40054d2	          0x4585e4	                         test r12d, r12d	      3002	elf.c	FUNCTION_43	SWITCH_1	CALL_1
0x40054d5	           0xf95c0	                                setne al	      3002	elf.c	FUNCTION_43	SWITCH_1	CALL_1
0x40054d8	           0xfb6c0	                           movzx eax, al	      3002	elf.c	FUNCTION_43	SWITCH_1	CALL_1
0x40054db	            0xeb58	                           jmp 0x4005535	      3002	elf.c	FUNCTION_43	SWITCH_1	CALL_1
0x40054dd	      0xb900000000	                              mov ecx, 0	      3022	elf.c	FUNCTION_43	SWITCH_1	CALL_7
0x40054e2	      0xe800000000	                          call 0x40054e7	      3022	elf.c	FUNCTION_43	SWITCH_1	CALL_7
0x40054e7	            0xeb4c	                           jmp 0x4005535	      3022	elf.c	FUNCTION_43	SWITCH_1	CALL_7
0x40054e9	      0xb900000000	                              mov ecx, 0	      3025	elf.c	FUNCTION_43	SWITCH_1	CALL_8
0x40054ee	      0xe800000000	                          call 0x40054f3	      3025	elf.c	FUNCTION_43	SWITCH_1	CALL_8
0x40054f3	            0xeb40	                           jmp 0x4005535	      3025	elf.c	FUNCTION_43	SWITCH_1	CALL_8
0x40054f5	      0xb900000000	                              mov ecx, 0	      3028	elf.c	FUNCTION_43	SWITCH_1	CALL_9
0x40054fa	      0xe800000000	                          call 0x40054ff	      3028	elf.c	FUNCTION_43	SWITCH_1	CALL_9
0x40054ff	            0xeb34	                           jmp 0x4005535	      3028	elf.c	FUNCTION_43	SWITCH_1	CALL_9
0x4005501	      0xb900000000	                              mov ecx, 0	      3032	elf.c	FUNCTION_43	SWITCH_1	CALL_10
0x4005506	      0xe800000000	                          call 0x400550b	      3032	elf.c	FUNCTION_43	SWITCH_1	CALL_10
0x400550b	            0xeb28	                           jmp 0x4005535	      3032	elf.c	FUNCTION_43	SWITCH_1	CALL_10
0x400550d	      0xb900000000	                              mov ecx, 0	      3035	elf.c	FUNCTION_43	SWITCH_1	CALL_11
0x4005512	      0xe800000000	                          call 0x4005517	      3035	elf.c	FUNCTION_43	SWITCH_1	CALL_11
0x4005517	            0xeb1c	                           jmp 0x4005535	      3035	elf.c	FUNCTION_43	SWITCH_1	CALL_11
0x4005519	        0x488b4508	                mov rax, qword [rbp + 8]	      3039	elf.c	FUNCTION_43	SWITCH_1	CALL_12
0x400551d	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3040	elf.c	FUNCTION_43	SWITCH_1	CALL_13
0x4005524	      0xb900000000	                              mov ecx, 0	      3040	elf.c	FUNCTION_43	SWITCH_1	CALL_13
0x4005529	          0x4889de	                            mov rsi, rbx	      3040	elf.c	FUNCTION_43	SWITCH_1	CALL_13
0x400552c	          0x4889ef	                            mov rdi, rbp	      3040	elf.c	FUNCTION_43	SWITCH_1	CALL_13
0x400552f	    0xff90a8000000	                 call qword [rax + 0xa8]	      3040	elf.c	FUNCTION_43	SWITCH_1	CALL_13
0x4005535	        0x4883c408	                              add rsp, 8	      3042	elf.c	FUNCTION_43
0x4005539	              0x5b	                                 pop rbx	      3042	elf.c	FUNCTION_43
0x400553a	              0x5d	                                 pop rbp	      3042	elf.c	FUNCTION_43
0x400553b	            0x415c	                                 pop r12	      3042	elf.c	FUNCTION_43
0x400553d	            0x415d	                                 pop r13	      3042	elf.c	FUNCTION_43
0x400553f	            0x415e	                                 pop r14	      3042	elf.c	FUNCTION_43
0x4005541	            0x415f	                                 pop r15	      3042	elf.c	FUNCTION_43
0x4005543	              0xc3	                                     ret	      3042	elf.c	FUNCTION_43
_bfd_elf_get_symbol_version_string	FOR,2:ELSE,3:IF,5:WHILE,0:DO,0:SWITCH,0:CALL,6:functions,0	56
0x4002a8d	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      1858	elf.c	FUNCTION_34	IF_1	CALL_1
0x4002a94	    0x83b8800c0000	              cmp dword [rax + 0xc80], 0	      1858	elf.c	FUNCTION_34	IF_1	CALL_1
0x4002a9b	     0xf84a4000000	                            je 0x4002b45	      1858	elf.c	FUNCTION_34	IF_1	CALL_1
0x4002aa1	    0x83b8840c0000	              cmp dword [rax + 0xc84], 0	      1859	elf.c	FUNCTION_34	IF_1	CALL_3
0x4002aa8	            0x750d	                           jne 0x4002ab7	      1859	elf.c	FUNCTION_34	IF_1	CALL_3
0x4002aaa	    0x83b8880c0000	              cmp dword [rax + 0xc88], 0	      1859	elf.c	FUNCTION_34	IF_1	CALL_3
0x4002ab1	     0xf8494000000	                            je 0x4002b4b	      1859	elf.c	FUNCTION_34	IF_1	CALL_3
0x4002ab7	         0xfb77658	           movzx esi, word [rsi + 0x58] 	      1861	elf.c	FUNCTION_34	IF_1
0x4002abb	           0xfbfc6	                           movsx eax, si	      1863	elf.c	FUNCTION_34	IF_1
0x4002abe	          0xc1e81f	                           shr eax, 0x1f	      1863	elf.c	FUNCTION_34	IF_1
0x4002ac1	            0x8902	                    mov dword [rdx], eax	      1863	elf.c	FUNCTION_34	IF_1
0x4002ac3	      0xb800000000	                              mov eax, 0	      1867	elf.c	FUNCTION_34	IF_1	IF_2
0x4002ac8	    0x81e6ff7f0000	                         and esi, 0x7fff	      1866	elf.c	FUNCTION_34	IF_1	IF_2
0x4002ace	     0xf8488000000	                            je 0x4002b5c	      1866	elf.c	FUNCTION_34	IF_1	IF_2
0x4002ad4	          0x83fe01	                              cmp esi, 1	      1868	elf.c	FUNCTION_34	IF_1	ELSE_1	IF_3
0x4002ad7	            0x7478	                            je 0x4002b51	      1868	elf.c	FUNCTION_34	IF_1	ELSE_1	IF_3
0x4002ad9	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      1870	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4	CALL_4
0x4002ae0	    0x3bb040030000	           cmp esi, dword [rax + 0x340] 	      1870	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4	CALL_4
0x4002ae6	            0x7717	                            ja 0x4002aff	      1870	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4	CALL_4
0x4002ae8	          0x8d56ff	                      lea edx, [rsi - 1]	      1871	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4
0x4002aeb	        0x488d14d2	                  lea rdx, [rdx + rdx*8]	      1871	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4
0x4002aef	        0x48c1e203	                              shl rdx, 3	      1871	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4
0x4002af3	    0x480390480300	            add rdx, qword [rax + 0x348]	      1871	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4
0x4002afa	        0x488b4228	            mov rax, qword [rdx + 0x28] 	      1871	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4
0x4002afe	              0xc3	                                     ret	      1871	elf.c	FUNCTION_34	IF_1	ELSE_2	IF_4
0x4002aff	    0x488bb8500300	           mov rdi, qword [rax + 0x350] 	      1878	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	CALL_6
0x4002b06	          0x4885ff	                           test rdi, rdi	      1878	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	CALL_6
0x4002b09	            0x744c	                            je 0x4002b57	      1878	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	CALL_6
0x4002b0b	      0xb800000000	                              mov eax, 0	      1878	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	CALL_6
0x4002b10	        0x488b5730	            mov rdx, qword [rdi + 0x30] 	      1884	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2
0x4002b14	          0x4885d2	                           test rdx, rdx	      1884	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2
0x4002b17	            0x7421	                            je 0x4002b3a	      1884	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2
0x4002b19	         0xfb74a0a	            movzx ecx, word [rdx + 0xa] 	      1886	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2	IF_5
0x4002b1d	            0x39ce	                            cmp esi, ecx	      1886	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2	IF_5
0x4002b1f	            0x7510	                           jne 0x4002b31	      1886	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2	IF_5
0x4002b21	            0xeb08	                           jmp 0x4002b2b	      1886	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2	IF_5
0x4002b23	         0xfb74a0a	            movzx ecx, word [rdx + 0xa] 	      1886	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2	IF_5
0x4002b27	            0x39ce	                            cmp esi, ecx	      1886	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2	IF_5
0x4002b29	            0x7506	                           jne 0x4002b31	      1886	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2	IF_5
0x4002b2b	        0x488b4220	            mov rax, qword [rdx + 0x20] 	      1888	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2	IF_5
0x4002b2f	            0xeb09	                           jmp 0x4002b3a	      1889	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2	IF_5
0x4002b31	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	      1884	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2
0x4002b35	          0x4885d2	                           test rdx, rdx	      1884	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2
0x4002b38	            0x75e9	                           jne 0x4002b23	      1884	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	FOR_2
0x4002b3a	        0x488b7f38	            mov rdi, qword [rdi + 0x38] 	      1880	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1
0x4002b3e	          0x4885ff	                           test rdi, rdi	      1878	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	CALL_6
0x4002b41	            0x75cd	                           jne 0x4002b10	      1878	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	CALL_6
0x4002b43	            0xf3c3	                                     ret	      1878	elf.c	FUNCTION_34	IF_1	ELSE_3	FOR_1	CALL_6
0x4002b45	      0xb800000000	                              mov eax, 0	      1857	elf.c	FUNCTION_34
0x4002b4a	              0xc3	                                     ret	      1857	elf.c	FUNCTION_34
0x4002b4b	      0xb800000000	                              mov eax, 0	      1857	elf.c	FUNCTION_34
0x4002b50	              0xc3	                                     ret	      1857	elf.c	FUNCTION_34
0x4002b51	      0xb800000000	                              mov eax, 0	      1869	elf.c	FUNCTION_34	IF_1	ELSE_1	IF_3
0x4002b56	              0xc3	                                     ret	      1869	elf.c	FUNCTION_34	IF_1	ELSE_1	IF_3
0x4002b57	      0xb800000000	                              mov eax, 0	      1877	elf.c	FUNCTION_34	IF_1	ELSE_3
0x4002b5c	            0xf3c3	                                     ret	      1896	elf.c	FUNCTION_34
_bfd_elf_get_symtab_upper_bound	FOR,0:ELSE,0:IF,1:WHILE,0:DO,0:SWITCH,0:CALL,2:functions,0	14
0x400b956	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      8118	elf.c	FUNCTION_89	CALL_2
0x400b95d	        0x488b5708	                mov rdx, qword [rdi + 8]	      8118	elf.c	FUNCTION_89	CALL_2
0x400b961	    0x488b92680300	           mov rdx, qword [rdx + 0x368] 	      8118	elf.c	FUNCTION_89	CALL_2
0x400b968	    0x488b92000300	           mov rdx, qword [rdx + 0x300] 	      8118	elf.c	FUNCTION_89	CALL_2
0x400b96f	         0xfb64a05	               movzx ecx, byte [rdx + 5]	      8118	elf.c	FUNCTION_89	CALL_2
0x400b973	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      8118	elf.c	FUNCTION_89	CALL_2
0x400b97a	      0xba00000000	                              mov edx, 0	      8118	elf.c	FUNCTION_89	CALL_2
0x400b97f	          0x48f7f1	                                 div rcx	      8118	elf.c	FUNCTION_89	CALL_2
0x400b982	    0x488d0cc50800	                    lea rcx, [rax*8 + 8]	      8119	elf.c	FUNCTION_89
0x400b98a	        0x488d51f8	                      lea rdx, [rcx - 8]	      8119	elf.c	FUNCTION_89
0x400b98e	          0x4885c0	                           test rax, rax	      8119	elf.c	FUNCTION_89
0x400b991	          0x4889c8	                            mov rax, rcx	      8119	elf.c	FUNCTION_89
0x400b994	        0x480f4fc2	                          cmovg rax, rdx	      8119	elf.c	FUNCTION_89
0x400b998	              0xc3	                                     ret	      8124	elf.c	FUNCTION_89
elfcore_grok_psinfo	FOR,0:ELSE,2:IF,3:WHILE,0:DO,0:SWITCH,0:CALL,14:functions,0	110
0x400e33c	              0x55	                                push rbp	      9383	elf.c	FUNCTION_140
0x400e33d	              0x53	                                push rbx	      9383	elf.c	FUNCTION_140
0x400e33e	    0x4881ec980000	                           sub rsp, 0x98	      9383	elf.c	FUNCTION_140
0x400e345	          0x4889fb	                            mov rbx, rdi	      9383	elf.c	FUNCTION_140
0x400e348	    0x64488b042528	                mov rax, qword fs:[0x28]	      9383	elf.c	FUNCTION_140
0x400e351	    0x488984248800	             mov qword [rsp + 0x88], rax	      9383	elf.c	FUNCTION_140
0x400e359	            0x31c0	                            xor eax, eax	      9383	elf.c	FUNCTION_140
0x400e35b	        0x488b4608	                mov rax, qword [rsi + 8]	      9384	elf.c	FUNCTION_140	IF_1
0x400e35f	    0x483d88000000	                           cmp rax, 0x88	      9384	elf.c	FUNCTION_140	IF_1
0x400e365	            0x7571	                           jne 0x400e3d8	      9384	elf.c	FUNCTION_140	IF_1
0x400e367	        0x488b7620	            mov rsi, qword [rsi + 0x20] 	      9384	elf.c	FUNCTION_140	IF_1
0x400e36b	          0x4889e7	                            mov rdi, rsp	      9384	elf.c	FUNCTION_140	IF_1
0x400e36e	      0xb911000000	                           mov ecx, 0x11	      9384	elf.c	FUNCTION_140	IF_1
0x400e373	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	      9384	elf.c	FUNCTION_140	IF_1
0x400e376	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      9391	elf.c	FUNCTION_140	IF_1	CALL_2
0x400e37d	    0x488b80900c00	           mov rax, qword [rax + 0xc90] 	      9391	elf.c	FUNCTION_140	IF_1	CALL_2
0x400e384	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      9391	elf.c	FUNCTION_140	IF_1	CALL_2
0x400e388	          0x895004	                mov dword [rax + 4], edx	      9391	elf.c	FUNCTION_140	IF_1	CALL_2
0x400e38b	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      9393	elf.c	FUNCTION_140	IF_1	CALL_3
0x400e392	    0x488ba8900c00	           mov rbp, qword [rax + 0xc90] 	      9393	elf.c	FUNCTION_140	IF_1	CALL_3
0x400e399	      0x488d742428	                   lea rsi, [rsp + 0x28]	      9394	elf.c	FUNCTION_140	IF_1	CALL_4
0x400e39e	      0xba10000000	                           mov edx, 0x10	      9394	elf.c	FUNCTION_140	IF_1	CALL_4
0x400e3a3	          0x4889df	                            mov rdi, rbx	      9394	elf.c	FUNCTION_140	IF_1	CALL_4
0x400e3a6	      0xe800000000	                          call 0x400e3ab	      9394	elf.c	FUNCTION_140	IF_1	CALL_4
0x400e3ab	        0x48894510	            mov qword [rbp + 0x10], rax 	      9394	elf.c	FUNCTION_140	IF_1	CALL_4
0x400e3af	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      9397	elf.c	FUNCTION_140	IF_1	CALL_5
0x400e3b6	    0x488ba8900c00	           mov rbp, qword [rax + 0xc90] 	      9397	elf.c	FUNCTION_140	IF_1	CALL_5
0x400e3bd	      0x488d742438	                   lea rsi, [rsp + 0x38]	      9398	elf.c	FUNCTION_140	IF_1	CALL_6
0x400e3c2	      0xba50000000	                           mov edx, 0x50	      9398	elf.c	FUNCTION_140	IF_1	CALL_6
0x400e3c7	          0x4889df	                            mov rdi, rbx	      9398	elf.c	FUNCTION_140	IF_1	CALL_6
0x400e3ca	      0xe800000000	                          call 0x400e3cf	      9398	elf.c	FUNCTION_140	IF_1	CALL_6
0x400e3cf	        0x48894518	            mov qword [rbp + 0x18], rax 	      9398	elf.c	FUNCTION_140	IF_1	CALL_6
0x400e3d3	      0xe9f4000000	                           jmp 0x400e4cc	      9398	elf.c	FUNCTION_140	IF_1	CALL_6
0x400e3d8	        0x4883f87c	                           cmp rax, 0x7c	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x400e3dc	     0xf8528010000	                           jne 0x400e50a	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x400e3e2	        0x488b4620	            mov rax, qword [rsi + 0x20] 	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x400e3e6	          0x488b10	                    mov rdx, qword [rax]	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x400e3e9	        0x48891424	                    mov qword [rsp], rdx	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x400e3ed	        0x488b5008	                mov rdx, qword [rax + 8]	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x400e3f1	      0x4889542408	                mov qword [rsp + 8], rdx	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x400e3f6	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x400e3fa	      0x4889542410	             mov qword [rsp + 0x10], rdx	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x400e3ff	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x400e403	      0x4889542418	             mov qword [rsp + 0x18], rdx	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x400e408	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x400e40c	      0x4889542420	             mov qword [rsp + 0x20], rdx	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x400e411	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x400e415	      0x4889542428	             mov qword [rsp + 0x28], rdx	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x400e41a	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x400e41e	      0x4889542430	             mov qword [rsp + 0x30], rdx	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x400e423	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x400e427	      0x4889542438	             mov qword [rsp + 0x38], rdx	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x400e42c	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x400e430	      0x4889542440	             mov qword [rsp + 0x40], rdx	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x400e435	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x400e439	      0x4889542448	             mov qword [rsp + 0x48], rdx	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x400e43e	        0x488b5050	            mov rdx, qword [rax + 0x50] 	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x400e442	      0x4889542450	             mov qword [rsp + 0x50], rdx	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x400e447	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x400e44b	      0x4889542458	             mov qword [rsp + 0x58], rdx	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x400e450	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x400e454	      0x4889542460	             mov qword [rsp + 0x60], rdx	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x400e459	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x400e45d	      0x4889542468	             mov qword [rsp + 0x68], rdx	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x400e462	        0x488b5070	            mov rdx, qword [rax + 0x70] 	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x400e466	      0x4889542470	             mov qword [rsp + 0x70], rdx	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x400e46b	          0x8b4078	            mov eax, dword [rax + 0x78] 	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x400e46e	        0x89442478	             mov dword [rsp + 0x78], eax	      9402	elf.c	FUNCTION_140	ELSE_1	IF_2
0x400e472	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      9410	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_8
0x400e479	    0x488b80900c00	           mov rax, qword [rax + 0xc90] 	      9410	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_8
0x400e480	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      9410	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_8
0x400e484	          0x895004	                mov dword [rax + 4], edx	      9410	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_8
0x400e487	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      9412	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_9
0x400e48e	    0x488ba8900c00	           mov rbp, qword [rax + 0xc90] 	      9412	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_9
0x400e495	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      9413	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_10
0x400e49a	      0xba10000000	                           mov edx, 0x10	      9413	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_10
0x400e49f	      0xe800000000	                          call 0x400e4a4	      9413	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_10
0x400e4a4	        0x48894510	            mov qword [rbp + 0x10], rax 	      9413	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_10
0x400e4a8	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      9416	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_11
0x400e4af	    0x488ba8900c00	           mov rbp, qword [rax + 0xc90] 	      9416	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_11
0x400e4b6	      0x488d74242c	                   lea rsi, [rsp + 0x2c]	      9417	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_12
0x400e4bb	      0xba50000000	                           mov edx, 0x50	      9417	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_12
0x400e4c0	          0x4889df	                            mov rdi, rbx	      9417	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_12
0x400e4c3	      0xe800000000	                          call 0x400e4c8	      9417	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_12
0x400e4c8	        0x48894518	            mov qword [rbp + 0x18], rax 	      9417	elf.c	FUNCTION_140	ELSE_1	IF_2	CALL_12
0x400e4cc	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      9434	elf.c	FUNCTION_140	CALL_13
0x400e4d3	    0x488b80900c00	           mov rax, qword [rax + 0xc90] 	      9434	elf.c	FUNCTION_140	CALL_13
0x400e4da	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      9434	elf.c	FUNCTION_140	CALL_13
0x400e4de	      0xb800000000	                              mov eax, 0	      9435	elf.c	FUNCTION_140	CALL_14
0x400e4e3	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      9435	elf.c	FUNCTION_140	CALL_14
0x400e4ea	          0x4889d7	                            mov rdi, rdx	      9435	elf.c	FUNCTION_140	CALL_14
0x400e4ed	            0xf2ae	              repne scasb al, byte [rdi]	      9435	elf.c	FUNCTION_140	CALL_14
0x400e4ef	          0x48f7d1	                                 not rcx	      9435	elf.c	FUNCTION_140	CALL_14
0x400e4f2	        0x4883e901	                              sub rcx, 1	      9435	elf.c	FUNCTION_140	CALL_14
0x400e4f6	            0x85c9	                           test ecx, ecx	      9437	elf.c	FUNCTION_140	IF_3
0x400e4f8	            0x7e10	                           jle 0x400e50a	      9437	elf.c	FUNCTION_140	IF_3
0x400e4fa	          0x4863c9	                         movsxd rcx, ecx	      9437	elf.c	FUNCTION_140	IF_3
0x400e4fd	      0x488d440aff	                lea rax, [rdx + rcx - 1]	      9437	elf.c	FUNCTION_140	IF_3
0x400e502	          0x803820	                    cmp byte [rax], 0x20	      9437	elf.c	FUNCTION_140	IF_3
0x400e505	            0x7503	                           jne 0x400e50a	      9437	elf.c	FUNCTION_140	IF_3
0x400e507	          0xc60000	                       mov byte [rax], 0	      9438	elf.c	FUNCTION_140	IF_3
0x400e50a	      0xb801000000	                              mov eax, 1	      9442	elf.c	FUNCTION_140
0x400e50f	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      9442	elf.c	FUNCTION_140
0x400e517	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      9442	elf.c	FUNCTION_140
0x400e520	            0x7405	                            je 0x400e527	      9442	elf.c	FUNCTION_140
0x400e522	      0xe800000000	                          call 0x400e527	      9442	elf.c	FUNCTION_140
0x400e527	    0x4881c4980000	                           add rsp, 0x98	      9442	elf.c	FUNCTION_140
0x400e52e	              0x5b	                                 pop rbx	      9442	elf.c	FUNCTION_140
0x400e52f	              0x5d	                                 pop rbp	      9442	elf.c	FUNCTION_140
0x400e530	              0xc3	                                     ret	      9442	elf.c	FUNCTION_140
_bfd_elf_make_dynamic_segment	FOR,0:ELSE,0:IF,1:WHILE,0:DO,0:SWITCH,0:CALL,1:functions,0	12
0x4005754	              0x53	                                push rbx	      4502	elf.c	FUNCTION_63
0x4005755	          0x4889f3	                            mov rbx, rsi	      4502	elf.c	FUNCTION_63
0x4005758	      0xbe50000000	                           mov esi, 0x50	      4505	elf.c	FUNCTION_63	CALL_1
0x400575d	      0xe800000000	                          call 0x4005762	      4505	elf.c	FUNCTION_63	CALL_1
0x4005762	          0x4885c0	                           test rax, rax	      4507	elf.c	FUNCTION_63	IF_1
0x4005765	            0x741a	                            je 0x4005781	      4507	elf.c	FUNCTION_63	IF_1
0x4005767	    0x48c700000000	                      mov qword [rax], 0	      4509	elf.c	FUNCTION_63
0x400576e	    0x48c740080200	                  mov qword [rax + 8], 2	      4510	elf.c	FUNCTION_63
0x4005776	    0xc74044010000	               mov dword [rax + 0x44], 1	      4511	elf.c	FUNCTION_63
0x400577d	        0x48895848	             mov qword [rax + 0x48], rbx	      4512	elf.c	FUNCTION_63
0x4005781	              0x5b	                                 pop rbx	      4515	elf.c	FUNCTION_63
0x4005782	              0xc3	                                     ret	      4515	elf.c	FUNCTION_63
elfcore_write_s390_vxrs_low	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,1:functions,0	8
0x400fa0f	        0x4883ec10	                           sub rsp, 0x10	     10934	elf.c	FUNCTION_182
0x400fa13	          0x4989c9	                             mov r9, rcx	     10934	elf.c	FUNCTION_182
0x400fa16	            0x4150	                                 push r8	     10936	elf.c	FUNCTION_182	CALL_1
0x400fa18	    0x41b809030000	                          mov r8d, 0x309	     10936	elf.c	FUNCTION_182	CALL_1
0x400fa1e	      0xb900000000	                              mov ecx, 0	     10936	elf.c	FUNCTION_182	CALL_1
0x400fa23	      0xe800000000	                          call 0x400fa28	     10936	elf.c	FUNCTION_182	CALL_1
0x400fa28	        0x4883c418	                           add rsp, 0x18	     10938	elf.c	FUNCTION_182
0x400fa2c	              0xc3	                                     ret	     10938	elf.c	FUNCTION_182
elfcore_write_s390_timer	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,1:functions,0	8
0x400f91f	        0x4883ec10	                           sub rsp, 0x10	     10836	elf.c	FUNCTION_174
0x400f923	          0x4989c9	                             mov r9, rcx	     10836	elf.c	FUNCTION_174
0x400f926	            0x4150	                                 push r8	     10838	elf.c	FUNCTION_174	CALL_1
0x400f928	    0x41b801030000	                          mov r8d, 0x301	     10838	elf.c	FUNCTION_174	CALL_1
0x400f92e	      0xb900000000	                              mov ecx, 0	     10838	elf.c	FUNCTION_174	CALL_1
0x400f933	      0xe800000000	                          call 0x400f938	     10838	elf.c	FUNCTION_174	CALL_1
0x400f938	        0x4883c418	                           add rsp, 0x18	     10840	elf.c	FUNCTION_174
0x400f93c	              0xc3	                                     ret	     10840	elf.c	FUNCTION_174
elfcore_write_note	FOR,0:ELSE,0:IF,3:WHILE,2:DO,0:SWITCH,0:CALL,4:functions,0	97
0x400efd9	            0x4157	                                push r15	     10470	elf.c	FUNCTION_161
0x400efdb	            0x4156	                                push r14	     10470	elf.c	FUNCTION_161
0x400efdd	            0x4155	                                push r13	     10470	elf.c	FUNCTION_161
0x400efdf	            0x4154	                                push r12	     10470	elf.c	FUNCTION_161
0x400efe1	              0x55	                                push rbp	     10470	elf.c	FUNCTION_161
0x400efe2	              0x53	                                push rbx	     10470	elf.c	FUNCTION_161
0x400efe3	        0x4883ec28	                           sub rsp, 0x28	     10470	elf.c	FUNCTION_161
0x400efe7	          0x4989ff	                            mov r15, rdi	     10470	elf.c	FUNCTION_161
0x400efea	          0x4989f2	                            mov r10, rsi	     10470	elf.c	FUNCTION_161
0x400efed	          0x4989d6	                            mov r14, rdx	     10470	elf.c	FUNCTION_161
0x400eff0	          0x4989cd	                            mov r13, rcx	     10470	elf.c	FUNCTION_161
0x400eff3	      0x4489442414	             mov dword [rsp + 0x14], r8d	     10470	elf.c	FUNCTION_161
0x400eff8	      0x4c894c2418	              mov qword [rsp + 0x18], r9	     10470	elf.c	FUNCTION_161
0x400effd	        0x8b6c2460	            mov ebp, dword [rsp + 0x60] 	     10470	elf.c	FUNCTION_161
0x400f001	          0x4885c9	                           test rcx, rcx	     10477	elf.c	FUNCTION_161	IF_1
0x400f004	            0x7419	                            je 0x400f01f	     10477	elf.c	FUNCTION_161	IF_1
0x400f006	      0xb800000000	                              mov eax, 0	     10478	elf.c	FUNCTION_161	CALL_1
0x400f00b	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	     10478	elf.c	FUNCTION_161	CALL_1
0x400f012	          0x4c89ef	                            mov rdi, r13	     10478	elf.c	FUNCTION_161	CALL_1
0x400f015	            0xf2ae	              repne scasb al, byte [rdi]	     10478	elf.c	FUNCTION_161	CALL_1
0x400f017	          0x48f7d1	                                 not rcx	     10478	elf.c	FUNCTION_161	CALL_1
0x400f01a	          0x4989cc	                            mov r12, rcx	     10478	elf.c	FUNCTION_161	CALL_1
0x400f01d	            0xeb06	                           jmp 0x400f025	     10478	elf.c	FUNCTION_161	CALL_1
0x400f01f	    0x41bc00000000	                             mov r12d, 0	     10476	elf.c	FUNCTION_161
0x400f025	          0x8d4503	                      lea eax, [rbp + 3]	     10480	elf.c	FUNCTION_161
0x400f028	          0x83e0fc	                     and eax, 0xfffffffc	     10480	elf.c	FUNCTION_161
0x400f02b	            0x4898	                                    cdqe	     10480	elf.c	FUNCTION_161
0x400f02d	      0x498d542403	                      lea rdx, [r12 + 3]	     10480	elf.c	FUNCTION_161
0x400f032	        0x4883e2fc	             and rdx, 0xfffffffffffffffc	     10480	elf.c	FUNCTION_161
0x400f036	      0x488d44100c	              lea rax, [rax + rdx + 0xc]	     10480	elf.c	FUNCTION_161
0x400f03b	          0x496336	                 movsxd rsi, dword [r14]	     10482	elf.c	FUNCTION_161	CALL_2
0x400f03e	      0x4889442408	                mov qword [rsp + 8], rax	     10482	elf.c	FUNCTION_161	CALL_2
0x400f043	          0x4801c6	                            add rsi, rax	     10482	elf.c	FUNCTION_161	CALL_2
0x400f046	          0x4c89d7	                            mov rdi, r10	     10482	elf.c	FUNCTION_161	CALL_2
0x400f049	      0xe800000000	                          call 0x400f04e	     10482	elf.c	FUNCTION_161	CALL_2
0x400f04e	          0x4889c1	                            mov rcx, rax	     10482	elf.c	FUNCTION_161	CALL_2
0x400f051	        0x48890424	                    mov qword [rsp], rax	     10482	elf.c	FUNCTION_161	CALL_2
0x400f055	          0x4885c0	                           test rax, rax	     10483	elf.c	FUNCTION_161	IF_2
0x400f058	     0xf84ae000000	                            je 0x400f10c	     10483	elf.c	FUNCTION_161	IF_2
0x400f05e	          0x418b06	                    mov eax, dword [r14]	     10485	elf.c	FUNCTION_161
0x400f061	          0x4863d8	                         movsxd rbx, eax	     10485	elf.c	FUNCTION_161
0x400f064	          0x4801cb	                            add rbx, rcx	     10485	elf.c	FUNCTION_161
0x400f067	         0x3442408	                add eax, dword [rsp + 8]	     10486	elf.c	FUNCTION_161
0x400f06b	          0x418906	                    mov dword [r14], eax	     10486	elf.c	FUNCTION_161
0x400f06e	        0x498b4708	                mov rax, qword [r15 + 8]	     10488	elf.c	FUNCTION_161
0x400f072	          0x4889de	                            mov rsi, rbx	     10488	elf.c	FUNCTION_161
0x400f075	          0x4c89e7	                            mov rdi, r12	     10488	elf.c	FUNCTION_161
0x400f078	    0xff9090000000	                 call qword [rax + 0x90]	     10488	elf.c	FUNCTION_161
0x400f07e	          0x4c63f5	                         movsxd r14, ebp	     10489	elf.c	FUNCTION_161
0x400f081	        0x488d7304	                      lea rsi, [rbx + 4]	     10489	elf.c	FUNCTION_161
0x400f085	        0x498b4708	                mov rax, qword [r15 + 8]	     10489	elf.c	FUNCTION_161
0x400f089	          0x4c89f7	                            mov rdi, r14	     10489	elf.c	FUNCTION_161
0x400f08c	    0xff9090000000	                 call qword [rax + 0x90]	     10489	elf.c	FUNCTION_161
0x400f092	        0x488d7308	                      lea rsi, [rbx + 8]	     10490	elf.c	FUNCTION_161
0x400f096	      0x48637c2414	         movsxd rdi, dword [rsp + 0x14] 	     10490	elf.c	FUNCTION_161
0x400f09b	        0x498b4708	                mov rax, qword [r15 + 8]	     10490	elf.c	FUNCTION_161
0x400f09f	    0xff9090000000	                 call qword [rax + 0x90]	     10490	elf.c	FUNCTION_161
0x400f0a5	        0x4883c30c	                            add rbx, 0xc	     10491	elf.c	FUNCTION_161
0x400f0a9	          0x4d85ed	                           test r13, r13	     10492	elf.c	FUNCTION_161	IF_3
0x400f0ac	            0x7434	                            je 0x400f0e2	     10492	elf.c	FUNCTION_161	IF_3
0x400f0ae	          0x4c89e2	                            mov rdx, r12	        53	string3.h	FUNCTION_221	CALL_3
0x400f0b1	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_221	CALL_3
0x400f0b4	          0x4889df	                            mov rdi, rbx	        53	string3.h	FUNCTION_221	CALL_3
0x400f0b7	      0xe800000000	                          call 0x400f0bc	        53	string3.h	FUNCTION_221	CALL_3
0x400f0bc	        0x4a8d0423	                    lea rax, [rbx + r12]	     10495	elf.c	FUNCTION_161	IF_3
0x400f0c0	        0x41f6c403	                            test r12b, 3	     10496	elf.c	FUNCTION_161	IF_3	WHILE_1
0x400f0c4	            0x7419	                            je 0x400f0df	     10496	elf.c	FUNCTION_161	IF_3	WHILE_1
0x400f0c6	          0x4889c3	                            mov rbx, rax	     10496	elf.c	FUNCTION_161	IF_3	WHILE_1
0x400f0c9	          0x4929c4	                            sub r12, rax	     10496	elf.c	FUNCTION_161	IF_3	WHILE_1
0x400f0cc	        0x4883c301	                              add rbx, 1	     10498	elf.c	FUNCTION_161	IF_3	WHILE_1
0x400f0d0	        0xc643ff00	                   mov byte [rbx - 1], 0	     10498	elf.c	FUNCTION_161	IF_3	WHILE_1
0x400f0d4	        0x4a8d1423	                    lea rdx, [rbx + r12]	     10496	elf.c	FUNCTION_161	IF_3	WHILE_1
0x400f0d8	          0xf6c203	                              test dl, 3	     10496	elf.c	FUNCTION_161	IF_3	WHILE_1
0x400f0db	            0x75ef	                           jne 0x400f0cc	     10496	elf.c	FUNCTION_161	IF_3	WHILE_1
0x400f0dd	            0xeb03	                           jmp 0x400f0e2	     10496	elf.c	FUNCTION_161	IF_3	WHILE_1
0x400f0df	          0x4889c3	                            mov rbx, rax	     10495	elf.c	FUNCTION_161	IF_3
0x400f0e2	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_221	CALL_3
0x400f0e5	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_221	CALL_3
0x400f0ea	          0x4889df	                            mov rdi, rbx	        53	string3.h	FUNCTION_221	CALL_3
0x400f0ed	      0xe800000000	                          call 0x400f0f2	        53	string3.h	FUNCTION_221	CALL_3
0x400f0f2	          0x4c01f3	                            add rbx, r14	     10503	elf.c	FUNCTION_161
0x400f0f5	        0x40f6c503	                             test bpl, 3	     10504	elf.c	FUNCTION_161	WHILE_2
0x400f0f9	            0x7411	                            je 0x400f10c	     10504	elf.c	FUNCTION_161	WHILE_2
0x400f0fb	        0x4883c301	                              add rbx, 1	     10506	elf.c	FUNCTION_161	WHILE_2
0x400f0ff	        0xc643ff00	                   mov byte [rbx - 1], 0	     10506	elf.c	FUNCTION_161	WHILE_2
0x400f103	          0x83c501	                              add ebp, 1	     10507	elf.c	FUNCTION_161	WHILE_2
0x400f106	        0x40f6c503	                             test bpl, 3	     10504	elf.c	FUNCTION_161	WHILE_2
0x400f10a	            0x75ef	                           jne 0x400f0fb	     10504	elf.c	FUNCTION_161	WHILE_2
0x400f10c	        0x488b0424	                    mov rax, qword [rsp]	     10510	elf.c	FUNCTION_161
0x400f110	        0x4883c428	                           add rsp, 0x28	     10510	elf.c	FUNCTION_161
0x400f114	              0x5b	                                 pop rbx	     10510	elf.c	FUNCTION_161
0x400f115	              0x5d	                                 pop rbp	     10510	elf.c	FUNCTION_161
0x400f116	            0x415c	                                 pop r12	     10510	elf.c	FUNCTION_161
0x400f118	            0x415d	                                 pop r13	     10510	elf.c	FUNCTION_161
0x400f11a	            0x415e	                                 pop r14	     10510	elf.c	FUNCTION_161
0x400f11c	            0x415f	                                 pop r15	     10510	elf.c	FUNCTION_161
0x400f11e	              0xc3	                                     ret	     10510	elf.c	FUNCTION_161
elfcore_maybe_make_sect	FOR,0:ELSE,0:IF,2:WHILE,0:DO,0:SWITCH,0:CALL,2:functions,0	30
0x4000ba0	            0x4154	                                push r12	      9048	elf.c	FUNCTION_113
0x4000ba2	              0x55	                                push rbp	      9048	elf.c	FUNCTION_113
0x4000ba3	              0x53	                                push rbx	      9048	elf.c	FUNCTION_113
0x4000ba4	          0x4889fb	                            mov rbx, rdi	      9048	elf.c	FUNCTION_113
0x4000ba7	          0x4889f5	                            mov rbp, rsi	      9048	elf.c	FUNCTION_113
0x4000baa	          0x4989d4	                            mov r12, rdx	      9048	elf.c	FUNCTION_113
0x4000bad	      0xe800000000	                          call 0x4000bb2	      9051	elf.c	FUNCTION_113	IF_1	CALL_1
0x4000bb2	      0xba01000000	                              mov edx, 1	      9052	elf.c	FUNCTION_113	IF_1
0x4000bb7	          0x4885c0	                           test rax, rax	      9051	elf.c	FUNCTION_113	IF_1	CALL_1
0x4000bba	            0x7541	                           jne 0x4000bfd	      9051	elf.c	FUNCTION_113	IF_1	CALL_1
0x4000bbc	      0x418b542420	            mov edx, dword [r12 + 0x20] 	      9054	elf.c	FUNCTION_113	CALL_2
0x4000bc1	          0x4889ee	                            mov rsi, rbp	      9054	elf.c	FUNCTION_113	CALL_2
0x4000bc4	          0x4889df	                            mov rdi, rbx	      9054	elf.c	FUNCTION_113	CALL_2
0x4000bc7	      0xe800000000	                          call 0x4000bcc	      9054	elf.c	FUNCTION_113	CALL_2
0x4000bcc	          0x4885c0	                           test rax, rax	      9055	elf.c	FUNCTION_113	IF_2
0x4000bcf	            0x7427	                            je 0x4000bf8	      9055	elf.c	FUNCTION_113	IF_2
0x4000bd1	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	      9058	elf.c	FUNCTION_113
0x4000bd6	        0x48895038	             mov qword [rax + 0x38], rdx	      9058	elf.c	FUNCTION_113
0x4000bda	    0x498b94249000	            mov rdx, qword [r12 + 0x90] 	      9059	elf.c	FUNCTION_113
0x4000be2	    0x488990900000	             mov qword [rax + 0x90], rdx	      9059	elf.c	FUNCTION_113
0x4000be9	      0x418b542470	            mov edx, dword [r12 + 0x70] 	      9060	elf.c	FUNCTION_113
0x4000bee	          0x895070	             mov dword [rax + 0x70], edx	      9060	elf.c	FUNCTION_113
0x4000bf1	      0xba01000000	                              mov edx, 1	      9061	elf.c	FUNCTION_113
0x4000bf6	            0xeb05	                           jmp 0x4000bfd	      9061	elf.c	FUNCTION_113
0x4000bf8	      0xba00000000	                              mov edx, 0	      9056	elf.c	FUNCTION_113	IF_2
0x4000bfd	            0x89d0	                            mov eax, edx	      9062	elf.c	FUNCTION_113
0x4000bff	              0x5b	                                 pop rbx	      9062	elf.c	FUNCTION_113
0x4000c00	              0x5d	                                 pop rbp	      9062	elf.c	FUNCTION_113
0x4000c01	            0x415c	                                 pop r12	      9062	elf.c	FUNCTION_113
0x4000c03	              0xc3	                                     ret	      9062	elf.c	FUNCTION_113
_bfd_elf_set_arch_mach	FOR,0:ELSE,0:IF,1:WHILE,0:DO,0:SWITCH,0:CALL,3:functions,0	16
0x400d29e	        0x4883ec08	                              sub rsp, 8	      8723	elf.c	FUNCTION_102
0x400d2a2	        0x488b4708	                mov rax, qword [rdi + 8]	      8726	elf.c	FUNCTION_102	IF_1	CALL_1
0x400d2a6	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      8726	elf.c	FUNCTION_102	IF_1	CALL_1
0x400d2ad	            0x8b08	                    mov ecx, dword [rax]	      8726	elf.c	FUNCTION_102	IF_1	CALL_1
0x400d2af	            0x85f6	                           test esi, esi	      8728	elf.c	FUNCTION_102	IF_1	CALL_2
0x400d2b1	        0x410f95c0	                               setne r8b	      8728	elf.c	FUNCTION_102	IF_1	CALL_2
0x400d2b5	            0x39f1	                            cmp ecx, esi	      8728	elf.c	FUNCTION_102	IF_1	CALL_2
0x400d2b7	           0xf95c0	                                setne al	      8728	elf.c	FUNCTION_102	IF_1	CALL_2
0x400d2ba	          0x4184c0	                            test r8b, al	      8728	elf.c	FUNCTION_102	IF_1	CALL_2
0x400d2bd	            0x7409	                            je 0x400d2c8	      8728	elf.c	FUNCTION_102	IF_1	CALL_2
0x400d2bf	      0xb800000000	                              mov eax, 0	      8729	elf.c	FUNCTION_102	IF_1
0x400d2c4	            0x85c9	                           test ecx, ecx	      8728	elf.c	FUNCTION_102	IF_1	CALL_2
0x400d2c6	            0x7505	                           jne 0x400d2cd	      8728	elf.c	FUNCTION_102	IF_1	CALL_2
0x400d2c8	      0xe800000000	                          call 0x400d2cd	      8731	elf.c	FUNCTION_102	CALL_3
0x400d2cd	        0x4883c408	                              add rsp, 8	      8732	elf.c	FUNCTION_102
0x400d2d1	              0xc3	                                     ret	      8732	elf.c	FUNCTION_102
_bfd_elf_find_line	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,2:functions,0	15
0x400d459	        0x4883ec08	                              sub rsp, 8	      8789	elf.c	FUNCTION_104
0x400d45d	          0x4989c9	                             mov r9, rcx	      8789	elf.c	FUNCTION_104
0x400d460	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      8790	elf.c	FUNCTION_104	CALL_1
0x400d467	    0x480530030000	                          add rax, 0x330	      8790	elf.c	FUNCTION_104	CALL_1
0x400d46d	              0x50	                                push rax	      8790	elf.c	FUNCTION_104	CALL_1
0x400d46e	            0x6a00	                                  push 0	      8790	elf.c	FUNCTION_104	CALL_1
0x400d470	      0x6800000000	                                  push 0	      8790	elf.c	FUNCTION_104	CALL_1
0x400d475	            0x6a00	                                  push 0	      8790	elf.c	FUNCTION_104	CALL_1
0x400d477	            0x4150	                                 push r8	      8790	elf.c	FUNCTION_104	CALL_1
0x400d479	            0x6a00	                                  push 0	      8790	elf.c	FUNCTION_104	CALL_1
0x400d47b	    0x41b800000000	                              mov r8d, 0	      8790	elf.c	FUNCTION_104	CALL_1
0x400d481	      0xb900000000	                              mov ecx, 0	      8790	elf.c	FUNCTION_104	CALL_1
0x400d486	      0xe800000000	                          call 0x400d48b	      8790	elf.c	FUNCTION_104	CALL_1
0x400d48b	        0x4883c438	                           add rsp, 0x38	      8794	elf.c	FUNCTION_104
0x400d48f	              0xc3	                                     ret	      8794	elf.c	FUNCTION_104
bfd_section_from_elf_index	FOR,0:ELSE,0:IF,1:WHILE,0:DO,0:SWITCH,0:CALL,2:functions,0	10
0x4002ea4	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      2591	elf.c	FUNCTION_38	IF_1	CALL_1
0x4002eab	    0x39b0fc020000	           cmp dword [rax + 0x2fc], esi 	      2591	elf.c	FUNCTION_38	IF_1	CALL_1
0x4002eb1	            0x760f	                           jbe 0x4002ec2	      2591	elf.c	FUNCTION_38	IF_1	CALL_1
0x4002eb3	            0x89f6	                            mov esi, esi	      2593	elf.c	FUNCTION_38	CALL_2
0x4002eb5	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2593	elf.c	FUNCTION_38	CALL_2
0x4002eb9	        0x488b04f0	            mov rax, qword [rax + rsi*8]	      2593	elf.c	FUNCTION_38	CALL_2
0x4002ebd	        0x488b4040	            mov rax, qword [rax + 0x40] 	      2593	elf.c	FUNCTION_38	CALL_2
0x4002ec1	              0xc3	                                     ret	      2593	elf.c	FUNCTION_38	CALL_2
0x4002ec2	      0xb800000000	                              mov eax, 0	      2592	elf.c	FUNCTION_38	IF_1
0x4002ec7	              0xc3	                                     ret	      2594	elf.c	FUNCTION_38
bfd_get_elf_phdr_upper_bound	FOR,0:ELSE,0:IF,1:WHILE,0:DO,0:SWITCH,0:CALL,2:functions,0	14
0x400ff50	        0x488b4708	                mov rax, qword [rdi + 8]	     11222	elf.c	FUNCTION_193	IF_1
0x400ff54	        0x83780805	                  cmp dword [rax + 8], 5	     11222	elf.c	FUNCTION_193	IF_1
0x400ff58	            0x7417	                            je 0x400ff71	     11222	elf.c	FUNCTION_193	IF_1
0x400ff5a	        0x4883ec08	                              sub rsp, 8	     11221	elf.c	FUNCTION_193
0x400ff5e	      0xbf03000000	                              mov edi, 3	     11224	elf.c	FUNCTION_193	IF_1	CALL_1
0x400ff63	      0xe800000000	                          call 0x400ff68	     11224	elf.c	FUNCTION_193	IF_1	CALL_1
0x400ff68	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	     11225	elf.c	FUNCTION_193	IF_1
0x400ff6f	            0xeb0f	                           jmp 0x400ff80	     11225	elf.c	FUNCTION_193	IF_1
0x400ff71	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	     11228	elf.c	FUNCTION_193	CALL_2
0x400ff78	          0x8b4044	            mov eax, dword [rax + 0x44] 	     11228	elf.c	FUNCTION_193	CALL_2
0x400ff7b	        0x48c1e006	                              shl rax, 6	     11228	elf.c	FUNCTION_193	CALL_2
0x400ff7f	              0xc3	                                     ret	     11228	elf.c	FUNCTION_193	CALL_2
0x400ff80	        0x4883c408	                              add rsp, 8	     11229	elf.c	FUNCTION_193
0x400ff84	              0xc3	                                     ret	     11229	elf.c	FUNCTION_193
bfd_elf_is_group_section	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,1:functions,0	5
0x4002754	    0x488b86e00000	            mov rax, qword [rsi + 0xe0] 	       963	elf.c	FUNCTION_23	CALL_1
0x400275b	    0x4883b8c00000	               cmp qword [rax + 0xc0], 0	       963	elf.c	FUNCTION_23	CALL_1
0x4002763	           0xf95c0	                                setne al	       963	elf.c	FUNCTION_23	CALL_1
0x4002766	           0xfb6c0	                           movzx eax, al	       963	elf.c	FUNCTION_23	CALL_1
0x4002769	              0xc3	                                     ret	       964	elf.c	FUNCTION_23
_bfd_elf_maybe_function_sym	FOR,0:ELSE,0:IF,3:WHILE,0:DO,0:SWITCH,0:CALL,0:functions,0	15
0x4010547	      0xb800000000	                              mov eax, 0	     11550	elf.c	FUNCTION_203	IF_1
0x401054c	    0xf7471800411d	      test dword [rdi + 0x18], 0x1d4100 	     11547	elf.c	FUNCTION_203	IF_1
0x4010553	            0x7528	                           jne 0x401057d	     11547	elf.c	FUNCTION_203	IF_1
0x4010555	        0x48397720	            cmp qword [rdi + 0x20], rsi 	     11549	elf.c	FUNCTION_203	IF_1
0x4010559	            0x7522	                           jne 0x401057d	     11549	elf.c	FUNCTION_203	IF_1
0x401055b	        0x488b4710	            mov rax, qword [rdi + 0x10] 	     11552	elf.c	FUNCTION_203
0x401055f	          0x488902	                    mov qword [rdx], rax	     11552	elf.c	FUNCTION_203
0x4010562	      0xb801000000	                              mov eax, 1	     11557	elf.c	FUNCTION_203	IF_3
0x4010567	        0xf6471a20	           test byte [rdi + 0x1a], 0x20 	     11554	elf.c	FUNCTION_203	IF_2
0x401056b	            0x7510	                           jne 0x401057d	     11554	elf.c	FUNCTION_203	IF_2
0x401056d	        0x488b4738	            mov rax, qword [rdi + 0x38] 	     11555	elf.c	FUNCTION_203	IF_2
0x4010571	          0x4885c0	                           test rax, rax	     11557	elf.c	FUNCTION_203	IF_3
0x4010574	      0xba01000000	                              mov edx, 1	     11557	elf.c	FUNCTION_203	IF_3
0x4010579	        0x480f44c2	                          cmove rax, rdx	     11557	elf.c	FUNCTION_203	IF_3
0x401057d	            0xf3c3	                                     ret	     11559	elf.c	FUNCTION_203
_bfd_elf_swap_verneed_in	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,0:functions,0	30
0x4001b07	            0x4154	                                push r12	       124	elf.c	FUNCTION_5
0x4001b09	              0x55	                                push rbp	       124	elf.c	FUNCTION_5
0x4001b0a	              0x53	                                push rbx	       124	elf.c	FUNCTION_5
0x4001b0b	          0x4989fc	                            mov r12, rdi	       124	elf.c	FUNCTION_5
0x4001b0e	          0x4889f3	                            mov rbx, rsi	       124	elf.c	FUNCTION_5
0x4001b11	          0x4889d5	                            mov rbp, rdx	       124	elf.c	FUNCTION_5
0x4001b14	        0x488b4708	                mov rax, qword [rdi + 8]	       125	elf.c	FUNCTION_5
0x4001b18	          0x4889f7	                            mov rdi, rsi	       125	elf.c	FUNCTION_5
0x4001b1b	    0xff9098000000	                 call qword [rax + 0x98]	       125	elf.c	FUNCTION_5
0x4001b21	        0x66894500	                      mov word [rbp], ax	       125	elf.c	FUNCTION_5
0x4001b25	        0x488d7b02	                      lea rdi, [rbx + 2]	       126	elf.c	FUNCTION_5
0x4001b29	      0x498b442408	                mov rax, qword [r12 + 8]	       126	elf.c	FUNCTION_5
0x4001b2e	    0xff9098000000	                 call qword [rax + 0x98]	       126	elf.c	FUNCTION_5
0x4001b34	        0x66894502	                  mov word [rbp + 2], ax	       126	elf.c	FUNCTION_5
0x4001b38	        0x488d7b04	                      lea rdi, [rbx + 4]	       127	elf.c	FUNCTION_5
0x4001b3c	      0x498b442408	                mov rax, qword [r12 + 8]	       127	elf.c	FUNCTION_5
0x4001b41	    0xff9080000000	                 call qword [rax + 0x80]	       127	elf.c	FUNCTION_5
0x4001b47	        0x48894508	                mov qword [rbp + 8], rax	       127	elf.c	FUNCTION_5
0x4001b4b	        0x488d7b08	                      lea rdi, [rbx + 8]	       128	elf.c	FUNCTION_5
0x4001b4f	      0x498b442408	                mov rax, qword [r12 + 8]	       128	elf.c	FUNCTION_5
0x4001b54	    0xff9080000000	                 call qword [rax + 0x80]	       128	elf.c	FUNCTION_5
0x4001b5a	        0x48894510	            mov qword [rbp + 0x10], rax 	       128	elf.c	FUNCTION_5
0x4001b5e	        0x488d7b0c	                    lea rdi, [rbx + 0xc]	       129	elf.c	FUNCTION_5
0x4001b62	      0x498b442408	                mov rax, qword [r12 + 8]	       129	elf.c	FUNCTION_5
0x4001b67	    0xff9080000000	                 call qword [rax + 0x80]	       129	elf.c	FUNCTION_5
0x4001b6d	        0x48894518	            mov qword [rbp + 0x18], rax 	       129	elf.c	FUNCTION_5
0x4001b71	              0x5b	                                 pop rbx	       130	elf.c	FUNCTION_5
0x4001b72	              0x5d	                                 pop rbp	       130	elf.c	FUNCTION_5
0x4001b73	            0x415c	                                 pop r12	       130	elf.c	FUNCTION_5
0x4001b75	              0xc3	                                     ret	       130	elf.c	FUNCTION_5
section_match	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,0:functions,0	19
0x4000040	      0xb800000000	                              mov eax, 0	      1308	elf.c	FUNCTION_28
0x4000045	          0x8b4e04	                mov ecx, dword [rsi + 4]	      1308	elf.c	FUNCTION_28
0x4000048	          0x394f04	                cmp dword [rdi + 4], ecx	      1308	elf.c	FUNCTION_28
0x400004b	            0x7533	                           jne 0x4000080	      1308	elf.c	FUNCTION_28
0x400004d	        0x488b5708	                mov rdx, qword [rdi + 8]	      1304	elf.c	FUNCTION_28
0x4000051	        0x48335608	                xor rdx, qword [rsi + 8]	      1304	elf.c	FUNCTION_28
0x4000055	    0x48f7c2bfffff	            test rdx, 0xffffffffffffffbf	      1304	elf.c	FUNCTION_28
0x400005c	            0x7522	                           jne 0x4000080	      1304	elf.c	FUNCTION_28
0x400005e	        0x488b5630	            mov rdx, qword [rsi + 0x30] 	      1306	elf.c	FUNCTION_28
0x4000062	        0x48395730	            cmp qword [rdi + 0x30], rdx 	      1306	elf.c	FUNCTION_28
0x4000066	            0x7518	                           jne 0x4000080	      1306	elf.c	FUNCTION_28
0x4000068	        0x488b5620	            mov rdx, qword [rsi + 0x20] 	      1307	elf.c	FUNCTION_28
0x400006c	        0x48395720	            cmp qword [rdi + 0x20], rdx 	      1307	elf.c	FUNCTION_28
0x4000070	            0x750e	                           jne 0x4000080	      1307	elf.c	FUNCTION_28
0x4000072	        0x488b4638	            mov rax, qword [rsi + 0x38] 	      1308	elf.c	FUNCTION_28
0x4000076	        0x48394738	            cmp qword [rdi + 0x38], rax 	      1308	elf.c	FUNCTION_28
0x400007a	           0xf94c0	                                 sete al	      1308	elf.c	FUNCTION_28
0x400007d	           0xfb6c0	                           movzx eax, al	      1308	elf.c	FUNCTION_28
0x4000080	            0xf3c3	                                     ret	      1311	elf.c	FUNCTION_28
elfcore_write_s390_todpreg	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,1:functions,0	8
0x400f95b	        0x4883ec10	                           sub rsp, 0x10	     10860	elf.c	FUNCTION_176
0x400f95f	          0x4989c9	                             mov r9, rcx	     10860	elf.c	FUNCTION_176
0x400f962	            0x4150	                                 push r8	     10862	elf.c	FUNCTION_176	CALL_1
0x400f964	    0x41b803030000	                          mov r8d, 0x303	     10862	elf.c	FUNCTION_176	CALL_1
0x400f96a	      0xb900000000	                              mov ecx, 0	     10862	elf.c	FUNCTION_176	CALL_1
0x400f96f	      0xe800000000	                          call 0x400f974	     10862	elf.c	FUNCTION_176	CALL_1
0x400f974	        0x4883c418	                           add rsp, 0x18	     10864	elf.c	FUNCTION_176
0x400f978	              0xc3	                                     ret	     10864	elf.c	FUNCTION_176
elfcore_write_register_note	FOR,0:ELSE,0:IF,22:WHILE,0:DO,0:SWITCH,0:CALL,44:functions,0	319
0x400faff	              0x53	                                push rbx	     11034	elf.c	FUNCTION_190
0x400fb00	          0x4989fa	                            mov r10, rdi	     11034	elf.c	FUNCTION_190
0x400fb03	          0x4989f3	                            mov r11, rsi	     11034	elf.c	FUNCTION_190
0x400fb06	          0x4889c8	                            mov rax, rcx	     11034	elf.c	FUNCTION_190
0x400fb09	          0x4c89c3	                             mov rbx, r8	     11034	elf.c	FUNCTION_190
0x400fb0c	      0xbf00000000	                              mov edi, 0	     11035	elf.c	FUNCTION_190	IF_1	CALL_1
0x400fb11	      0xb906000000	                              mov ecx, 6	     11035	elf.c	FUNCTION_190	IF_1	CALL_1
0x400fb16	          0x4889c6	                            mov rsi, rax	     11035	elf.c	FUNCTION_190	IF_1	CALL_1
0x400fb19	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11035	elf.c	FUNCTION_190	IF_1	CALL_1
0x400fb1b	        0x400f97c6	                                seta sil	     11035	elf.c	FUNCTION_190	IF_1	CALL_1
0x400fb1f	           0xf92c1	                                 setb cl	     11035	elf.c	FUNCTION_190	IF_1	CALL_1
0x400fb22	          0x4038ce	                             cmp sil, cl	     11035	elf.c	FUNCTION_190	IF_1	CALL_1
0x400fb25	            0x7516	                           jne 0x400fb3d	     11035	elf.c	FUNCTION_190	IF_1	CALL_1
0x400fb27	          0x4589c8	                            mov r8d, r9d	     11036	elf.c	FUNCTION_190	CALL_2
0x400fb2a	          0x4889d9	                            mov rcx, rbx	     11036	elf.c	FUNCTION_190	CALL_2
0x400fb2d	          0x4c89de	                            mov rsi, r11	     11036	elf.c	FUNCTION_190	CALL_2
0x400fb30	          0x4c89d7	                            mov rdi, r10	     11036	elf.c	FUNCTION_190	CALL_2
0x400fb33	      0xe800000000	                          call 0x400fb38	     11036	elf.c	FUNCTION_190	CALL_2
0x400fb38	      0xe911040000	                           jmp 0x400ff4e	     11036	elf.c	FUNCTION_190	CALL_2
0x400fb3d	      0xbf00000000	                              mov edi, 0	     11037	elf.c	FUNCTION_190	IF_2	CALL_3
0x400fb42	      0xb909000000	                              mov ecx, 9	     11037	elf.c	FUNCTION_190	IF_2	CALL_3
0x400fb47	          0x4889c6	                            mov rsi, rax	     11037	elf.c	FUNCTION_190	IF_2	CALL_3
0x400fb4a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11037	elf.c	FUNCTION_190	IF_2	CALL_3
0x400fb4c	        0x400f97c6	                                seta sil	     11037	elf.c	FUNCTION_190	IF_2	CALL_3
0x400fb50	           0xf92c1	                                 setb cl	     11037	elf.c	FUNCTION_190	IF_2	CALL_3
0x400fb53	          0x4038ce	                             cmp sil, cl	     11037	elf.c	FUNCTION_190	IF_2	CALL_3
0x400fb56	            0x7516	                           jne 0x400fb6e	     11037	elf.c	FUNCTION_190	IF_2	CALL_3
0x400fb58	          0x4589c8	                            mov r8d, r9d	     11038	elf.c	FUNCTION_190	CALL_4
0x400fb5b	          0x4889d9	                            mov rcx, rbx	     11038	elf.c	FUNCTION_190	CALL_4
0x400fb5e	          0x4c89de	                            mov rsi, r11	     11038	elf.c	FUNCTION_190	CALL_4
0x400fb61	          0x4c89d7	                            mov rdi, r10	     11038	elf.c	FUNCTION_190	CALL_4
0x400fb64	      0xe800000000	                          call 0x400fb69	     11038	elf.c	FUNCTION_190	CALL_4
0x400fb69	      0xe9e0030000	                           jmp 0x400ff4e	     11038	elf.c	FUNCTION_190	CALL_4
0x400fb6e	      0xbf00000000	                              mov edi, 0	     11039	elf.c	FUNCTION_190	IF_3	CALL_5
0x400fb73	      0xb90c000000	                            mov ecx, 0xc	     11039	elf.c	FUNCTION_190	IF_3	CALL_5
0x400fb78	          0x4889c6	                            mov rsi, rax	     11039	elf.c	FUNCTION_190	IF_3	CALL_5
0x400fb7b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11039	elf.c	FUNCTION_190	IF_3	CALL_5
0x400fb7d	        0x400f97c6	                                seta sil	     11039	elf.c	FUNCTION_190	IF_3	CALL_5
0x400fb81	           0xf92c1	                                 setb cl	     11039	elf.c	FUNCTION_190	IF_3	CALL_5
0x400fb84	          0x4038ce	                             cmp sil, cl	     11039	elf.c	FUNCTION_190	IF_3	CALL_5
0x400fb87	            0x7516	                           jne 0x400fb9f	     11039	elf.c	FUNCTION_190	IF_3	CALL_5
0x400fb89	          0x4589c8	                            mov r8d, r9d	     11040	elf.c	FUNCTION_190	CALL_6
0x400fb8c	          0x4889d9	                            mov rcx, rbx	     11040	elf.c	FUNCTION_190	CALL_6
0x400fb8f	          0x4c89de	                            mov rsi, r11	     11040	elf.c	FUNCTION_190	CALL_6
0x400fb92	          0x4c89d7	                            mov rdi, r10	     11040	elf.c	FUNCTION_190	CALL_6
0x400fb95	      0xe800000000	                          call 0x400fb9a	     11040	elf.c	FUNCTION_190	CALL_6
0x400fb9a	      0xe9af030000	                           jmp 0x400ff4e	     11040	elf.c	FUNCTION_190	CALL_6
0x400fb9f	      0xbf00000000	                              mov edi, 0	     11041	elf.c	FUNCTION_190	IF_4	CALL_7
0x400fba4	      0xb90d000000	                            mov ecx, 0xd	     11041	elf.c	FUNCTION_190	IF_4	CALL_7
0x400fba9	          0x4889c6	                            mov rsi, rax	     11041	elf.c	FUNCTION_190	IF_4	CALL_7
0x400fbac	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11041	elf.c	FUNCTION_190	IF_4	CALL_7
0x400fbae	        0x400f97c6	                                seta sil	     11041	elf.c	FUNCTION_190	IF_4	CALL_7
0x400fbb2	           0xf92c1	                                 setb cl	     11041	elf.c	FUNCTION_190	IF_4	CALL_7
0x400fbb5	          0x4038ce	                             cmp sil, cl	     11041	elf.c	FUNCTION_190	IF_4	CALL_7
0x400fbb8	            0x7516	                           jne 0x400fbd0	     11041	elf.c	FUNCTION_190	IF_4	CALL_7
0x400fbba	          0x4589c8	                            mov r8d, r9d	     11042	elf.c	FUNCTION_190	CALL_8
0x400fbbd	          0x4889d9	                            mov rcx, rbx	     11042	elf.c	FUNCTION_190	CALL_8
0x400fbc0	          0x4c89de	                            mov rsi, r11	     11042	elf.c	FUNCTION_190	CALL_8
0x400fbc3	          0x4c89d7	                            mov rdi, r10	     11042	elf.c	FUNCTION_190	CALL_8
0x400fbc6	      0xe800000000	                          call 0x400fbcb	     11042	elf.c	FUNCTION_190	CALL_8
0x400fbcb	      0xe97e030000	                           jmp 0x400ff4e	     11042	elf.c	FUNCTION_190	CALL_8
0x400fbd0	      0xbf00000000	                              mov edi, 0	     11043	elf.c	FUNCTION_190	IF_5	CALL_9
0x400fbd5	      0xb90d000000	                            mov ecx, 0xd	     11043	elf.c	FUNCTION_190	IF_5	CALL_9
0x400fbda	          0x4889c6	                            mov rsi, rax	     11043	elf.c	FUNCTION_190	IF_5	CALL_9
0x400fbdd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11043	elf.c	FUNCTION_190	IF_5	CALL_9
0x400fbdf	        0x400f97c6	                                seta sil	     11043	elf.c	FUNCTION_190	IF_5	CALL_9
0x400fbe3	           0xf92c1	                                 setb cl	     11043	elf.c	FUNCTION_190	IF_5	CALL_9
0x400fbe6	          0x4038ce	                             cmp sil, cl	     11043	elf.c	FUNCTION_190	IF_5	CALL_9
0x400fbe9	            0x7516	                           jne 0x400fc01	     11043	elf.c	FUNCTION_190	IF_5	CALL_9
0x400fbeb	          0x4589c8	                            mov r8d, r9d	     11044	elf.c	FUNCTION_190	CALL_10
0x400fbee	          0x4889d9	                            mov rcx, rbx	     11044	elf.c	FUNCTION_190	CALL_10
0x400fbf1	          0x4c89de	                            mov rsi, r11	     11044	elf.c	FUNCTION_190	CALL_10
0x400fbf4	          0x4c89d7	                            mov rdi, r10	     11044	elf.c	FUNCTION_190	CALL_10
0x400fbf7	      0xe800000000	                          call 0x400fbfc	     11044	elf.c	FUNCTION_190	CALL_10
0x400fbfc	      0xe94d030000	                           jmp 0x400ff4e	     11044	elf.c	FUNCTION_190	CALL_10
0x400fc01	      0xbf00000000	                              mov edi, 0	     11045	elf.c	FUNCTION_190	IF_6	CALL_11
0x400fc06	      0xb914000000	                           mov ecx, 0x14	     11045	elf.c	FUNCTION_190	IF_6	CALL_11
0x400fc0b	          0x4889c6	                            mov rsi, rax	     11045	elf.c	FUNCTION_190	IF_6	CALL_11
0x400fc0e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11045	elf.c	FUNCTION_190	IF_6	CALL_11
0x400fc10	        0x400f97c6	                                seta sil	     11045	elf.c	FUNCTION_190	IF_6	CALL_11
0x400fc14	           0xf92c1	                                 setb cl	     11045	elf.c	FUNCTION_190	IF_6	CALL_11
0x400fc17	          0x4038ce	                             cmp sil, cl	     11045	elf.c	FUNCTION_190	IF_6	CALL_11
0x400fc1a	            0x7528	                           jne 0x400fc44	     11045	elf.c	FUNCTION_190	IF_6	CALL_11
0x400fc1c	        0x4883ec08	                              sub rsp, 8	     10825	elf.c	FUNCTION_173	CALL_1
0x400fc20	            0x4151	                                 push r9	     10825	elf.c	FUNCTION_173	CALL_1
0x400fc22	          0x4d89c1	                              mov r9, r8	     10825	elf.c	FUNCTION_173	CALL_1
0x400fc25	    0x41b800030000	                          mov r8d, 0x300	     10825	elf.c	FUNCTION_173	CALL_1
0x400fc2b	      0xb900000000	                              mov ecx, 0	     10825	elf.c	FUNCTION_173	CALL_1
0x400fc30	          0x4c89de	                            mov rsi, r11	     10825	elf.c	FUNCTION_173	CALL_1
0x400fc33	          0x4c89d7	                            mov rdi, r10	     10825	elf.c	FUNCTION_173	CALL_1
0x400fc36	      0xe800000000	                          call 0x400fc3b	     10825	elf.c	FUNCTION_173	CALL_1
0x400fc3b	        0x4883c410	                           add rsp, 0x10	     11046	elf.c	FUNCTION_190	CALL_12
0x400fc3f	      0xe90a030000	                           jmp 0x400ff4e	     11046	elf.c	FUNCTION_190	CALL_12
0x400fc44	      0xbf00000000	                              mov edi, 0	     11047	elf.c	FUNCTION_190	IF_7	CALL_13
0x400fc49	      0xb910000000	                           mov ecx, 0x10	     11047	elf.c	FUNCTION_190	IF_7	CALL_13
0x400fc4e	          0x4889c6	                            mov rsi, rax	     11047	elf.c	FUNCTION_190	IF_7	CALL_13
0x400fc51	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11047	elf.c	FUNCTION_190	IF_7	CALL_13
0x400fc53	        0x400f97c6	                                seta sil	     11047	elf.c	FUNCTION_190	IF_7	CALL_13
0x400fc57	           0xf92c1	                                 setb cl	     11047	elf.c	FUNCTION_190	IF_7	CALL_13
0x400fc5a	          0x4038ce	                             cmp sil, cl	     11047	elf.c	FUNCTION_190	IF_7	CALL_13
0x400fc5d	            0x7516	                           jne 0x400fc75	     11047	elf.c	FUNCTION_190	IF_7	CALL_13
0x400fc5f	          0x4589c8	                            mov r8d, r9d	     11048	elf.c	FUNCTION_190	CALL_14
0x400fc62	          0x4889d9	                            mov rcx, rbx	     11048	elf.c	FUNCTION_190	CALL_14
0x400fc65	          0x4c89de	                            mov rsi, r11	     11048	elf.c	FUNCTION_190	CALL_14
0x400fc68	          0x4c89d7	                            mov rdi, r10	     11048	elf.c	FUNCTION_190	CALL_14
0x400fc6b	      0xe800000000	                          call 0x400fc70	     11048	elf.c	FUNCTION_190	CALL_14
0x400fc70	      0xe9d9020000	                           jmp 0x400ff4e	     11048	elf.c	FUNCTION_190	CALL_14
0x400fc75	      0xbf00000000	                              mov edi, 0	     11049	elf.c	FUNCTION_190	IF_8	CALL_15
0x400fc7a	      0xb911000000	                           mov ecx, 0x11	     11049	elf.c	FUNCTION_190	IF_8	CALL_15
0x400fc7f	          0x4889c6	                            mov rsi, rax	     11049	elf.c	FUNCTION_190	IF_8	CALL_15
0x400fc82	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11049	elf.c	FUNCTION_190	IF_8	CALL_15
0x400fc84	        0x400f97c6	                                seta sil	     11049	elf.c	FUNCTION_190	IF_8	CALL_15
0x400fc88	           0xf92c1	                                 setb cl	     11049	elf.c	FUNCTION_190	IF_8	CALL_15
0x400fc8b	          0x4038ce	                             cmp sil, cl	     11049	elf.c	FUNCTION_190	IF_8	CALL_15
0x400fc8e	            0x7516	                           jne 0x400fca6	     11049	elf.c	FUNCTION_190	IF_8	CALL_15
0x400fc90	          0x4589c8	                            mov r8d, r9d	     11050	elf.c	FUNCTION_190	CALL_16
0x400fc93	          0x4889d9	                            mov rcx, rbx	     11050	elf.c	FUNCTION_190	CALL_16
0x400fc96	          0x4c89de	                            mov rsi, r11	     11050	elf.c	FUNCTION_190	CALL_16
0x400fc99	          0x4c89d7	                            mov rdi, r10	     11050	elf.c	FUNCTION_190	CALL_16
0x400fc9c	      0xe800000000	                          call 0x400fca1	     11050	elf.c	FUNCTION_190	CALL_16
0x400fca1	      0xe9a8020000	                           jmp 0x400ff4e	     11050	elf.c	FUNCTION_190	CALL_16
0x400fca6	      0xbf00000000	                              mov edi, 0	     11051	elf.c	FUNCTION_190	IF_9	CALL_17
0x400fcab	      0xb912000000	                           mov ecx, 0x12	     11051	elf.c	FUNCTION_190	IF_9	CALL_17
0x400fcb0	          0x4889c6	                            mov rsi, rax	     11051	elf.c	FUNCTION_190	IF_9	CALL_17
0x400fcb3	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11051	elf.c	FUNCTION_190	IF_9	CALL_17
0x400fcb5	        0x400f97c6	                                seta sil	     11051	elf.c	FUNCTION_190	IF_9	CALL_17
0x400fcb9	           0xf92c1	                                 setb cl	     11051	elf.c	FUNCTION_190	IF_9	CALL_17
0x400fcbc	          0x4038ce	                             cmp sil, cl	     11051	elf.c	FUNCTION_190	IF_9	CALL_17
0x400fcbf	            0x7516	                           jne 0x400fcd7	     11051	elf.c	FUNCTION_190	IF_9	CALL_17
0x400fcc1	          0x4589c8	                            mov r8d, r9d	     11052	elf.c	FUNCTION_190	CALL_18
0x400fcc4	          0x4889d9	                            mov rcx, rbx	     11052	elf.c	FUNCTION_190	CALL_18
0x400fcc7	          0x4c89de	                            mov rsi, r11	     11052	elf.c	FUNCTION_190	CALL_18
0x400fcca	          0x4c89d7	                            mov rdi, r10	     11052	elf.c	FUNCTION_190	CALL_18
0x400fccd	      0xe800000000	                          call 0x400fcd2	     11052	elf.c	FUNCTION_190	CALL_18
0x400fcd2	      0xe977020000	                           jmp 0x400ff4e	     11052	elf.c	FUNCTION_190	CALL_18
0x400fcd7	      0xbf00000000	                              mov edi, 0	     11053	elf.c	FUNCTION_190	IF_10	CALL_19
0x400fcdc	      0xb90f000000	                            mov ecx, 0xf	     11053	elf.c	FUNCTION_190	IF_10	CALL_19
0x400fce1	          0x4889c6	                            mov rsi, rax	     11053	elf.c	FUNCTION_190	IF_10	CALL_19
0x400fce4	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11053	elf.c	FUNCTION_190	IF_10	CALL_19
0x400fce6	        0x400f97c6	                                seta sil	     11053	elf.c	FUNCTION_190	IF_10	CALL_19
0x400fcea	           0xf92c1	                                 setb cl	     11053	elf.c	FUNCTION_190	IF_10	CALL_19
0x400fced	          0x4038ce	                             cmp sil, cl	     11053	elf.c	FUNCTION_190	IF_10	CALL_19
0x400fcf0	            0x7516	                           jne 0x400fd08	     11053	elf.c	FUNCTION_190	IF_10	CALL_19
0x400fcf2	          0x4589c8	                            mov r8d, r9d	     11054	elf.c	FUNCTION_190	CALL_20
0x400fcf5	          0x4889d9	                            mov rcx, rbx	     11054	elf.c	FUNCTION_190	CALL_20
0x400fcf8	          0x4c89de	                            mov rsi, r11	     11054	elf.c	FUNCTION_190	CALL_20
0x400fcfb	          0x4c89d7	                            mov rdi, r10	     11054	elf.c	FUNCTION_190	CALL_20
0x400fcfe	      0xe800000000	                          call 0x400fd03	     11054	elf.c	FUNCTION_190	CALL_20
0x400fd03	      0xe946020000	                           jmp 0x400ff4e	     11054	elf.c	FUNCTION_190	CALL_20
0x400fd08	      0xbf00000000	                              mov edi, 0	     11055	elf.c	FUNCTION_190	IF_11	CALL_21
0x400fd0d	      0xb911000000	                           mov ecx, 0x11	     11055	elf.c	FUNCTION_190	IF_11	CALL_21
0x400fd12	          0x4889c6	                            mov rsi, rax	     11055	elf.c	FUNCTION_190	IF_11	CALL_21
0x400fd15	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11055	elf.c	FUNCTION_190	IF_11	CALL_21
0x400fd17	        0x400f97c6	                                seta sil	     11055	elf.c	FUNCTION_190	IF_11	CALL_21
0x400fd1b	           0xf92c1	                                 setb cl	     11055	elf.c	FUNCTION_190	IF_11	CALL_21
0x400fd1e	          0x4038ce	                             cmp sil, cl	     11055	elf.c	FUNCTION_190	IF_11	CALL_21
0x400fd21	            0x7516	                           jne 0x400fd39	     11055	elf.c	FUNCTION_190	IF_11	CALL_21
0x400fd23	          0x4589c8	                            mov r8d, r9d	     11056	elf.c	FUNCTION_190	CALL_22
0x400fd26	          0x4889d9	                            mov rcx, rbx	     11056	elf.c	FUNCTION_190	CALL_22
0x400fd29	          0x4c89de	                            mov rsi, r11	     11056	elf.c	FUNCTION_190	CALL_22
0x400fd2c	          0x4c89d7	                            mov rdi, r10	     11056	elf.c	FUNCTION_190	CALL_22
0x400fd2f	      0xe800000000	                          call 0x400fd34	     11056	elf.c	FUNCTION_190	CALL_22
0x400fd34	      0xe915020000	                           jmp 0x400ff4e	     11056	elf.c	FUNCTION_190	CALL_22
0x400fd39	      0xbf00000000	                              mov edi, 0	     11057	elf.c	FUNCTION_190	IF_12	CALL_23
0x400fd3e	      0xb915000000	                           mov ecx, 0x15	     11057	elf.c	FUNCTION_190	IF_12	CALL_23
0x400fd43	          0x4889c6	                            mov rsi, rax	     11057	elf.c	FUNCTION_190	IF_12	CALL_23
0x400fd46	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11057	elf.c	FUNCTION_190	IF_12	CALL_23
0x400fd48	        0x400f97c6	                                seta sil	     11057	elf.c	FUNCTION_190	IF_12	CALL_23
0x400fd4c	           0xf92c1	                                 setb cl	     11057	elf.c	FUNCTION_190	IF_12	CALL_23
0x400fd4f	          0x4038ce	                             cmp sil, cl	     11057	elf.c	FUNCTION_190	IF_12	CALL_23
0x400fd52	            0x7516	                           jne 0x400fd6a	     11057	elf.c	FUNCTION_190	IF_12	CALL_23
0x400fd54	          0x4589c8	                            mov r8d, r9d	     11058	elf.c	FUNCTION_190	CALL_24
0x400fd57	          0x4889d9	                            mov rcx, rbx	     11058	elf.c	FUNCTION_190	CALL_24
0x400fd5a	          0x4c89de	                            mov rsi, r11	     11058	elf.c	FUNCTION_190	CALL_24
0x400fd5d	          0x4c89d7	                            mov rdi, r10	     11058	elf.c	FUNCTION_190	CALL_24
0x400fd60	      0xe800000000	                          call 0x400fd65	     11058	elf.c	FUNCTION_190	CALL_24
0x400fd65	      0xe9e4010000	                           jmp 0x400ff4e	     11058	elf.c	FUNCTION_190	CALL_24
0x400fd6a	      0xbf00000000	                              mov edi, 0	     11059	elf.c	FUNCTION_190	IF_13	CALL_25
0x400fd6f	      0xb916000000	                           mov ecx, 0x16	     11059	elf.c	FUNCTION_190	IF_13	CALL_25
0x400fd74	          0x4889c6	                            mov rsi, rax	     11059	elf.c	FUNCTION_190	IF_13	CALL_25
0x400fd77	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11059	elf.c	FUNCTION_190	IF_13	CALL_25
0x400fd79	        0x400f97c6	                                seta sil	     11059	elf.c	FUNCTION_190	IF_13	CALL_25
0x400fd7d	           0xf92c1	                                 setb cl	     11059	elf.c	FUNCTION_190	IF_13	CALL_25
0x400fd80	          0x4038ce	                             cmp sil, cl	     11059	elf.c	FUNCTION_190	IF_13	CALL_25
0x400fd83	            0x7516	                           jne 0x400fd9b	     11059	elf.c	FUNCTION_190	IF_13	CALL_25
0x400fd85	          0x4589c8	                            mov r8d, r9d	     11060	elf.c	FUNCTION_190	CALL_26
0x400fd88	          0x4889d9	                            mov rcx, rbx	     11060	elf.c	FUNCTION_190	CALL_26
0x400fd8b	          0x4c89de	                            mov rsi, r11	     11060	elf.c	FUNCTION_190	CALL_26
0x400fd8e	          0x4c89d7	                            mov rdi, r10	     11060	elf.c	FUNCTION_190	CALL_26
0x400fd91	      0xe800000000	                          call 0x400fd96	     11060	elf.c	FUNCTION_190	CALL_26
0x400fd96	      0xe9b3010000	                           jmp 0x400ff4e	     11060	elf.c	FUNCTION_190	CALL_26
0x400fd9b	      0xbf00000000	                              mov edi, 0	     11061	elf.c	FUNCTION_190	IF_14	CALL_27
0x400fda0	      0xb90e000000	                            mov ecx, 0xe	     11061	elf.c	FUNCTION_190	IF_14	CALL_27
0x400fda5	          0x4889c6	                            mov rsi, rax	     11061	elf.c	FUNCTION_190	IF_14	CALL_27
0x400fda8	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11061	elf.c	FUNCTION_190	IF_14	CALL_27
0x400fdaa	        0x400f97c6	                                seta sil	     11061	elf.c	FUNCTION_190	IF_14	CALL_27
0x400fdae	           0xf92c1	                                 setb cl	     11061	elf.c	FUNCTION_190	IF_14	CALL_27
0x400fdb1	          0x4038ce	                             cmp sil, cl	     11061	elf.c	FUNCTION_190	IF_14	CALL_27
0x400fdb4	            0x7516	                           jne 0x400fdcc	     11061	elf.c	FUNCTION_190	IF_14	CALL_27
0x400fdb6	          0x4589c8	                            mov r8d, r9d	     11062	elf.c	FUNCTION_190	CALL_28
0x400fdb9	          0x4889d9	                            mov rcx, rbx	     11062	elf.c	FUNCTION_190	CALL_28
0x400fdbc	          0x4c89de	                            mov rsi, r11	     11062	elf.c	FUNCTION_190	CALL_28
0x400fdbf	          0x4c89d7	                            mov rdi, r10	     11062	elf.c	FUNCTION_190	CALL_28
0x400fdc2	      0xe800000000	                          call 0x400fdc7	     11062	elf.c	FUNCTION_190	CALL_28
0x400fdc7	      0xe982010000	                           jmp 0x400ff4e	     11062	elf.c	FUNCTION_190	CALL_28
0x400fdcc	      0xbf00000000	                              mov edi, 0	     11063	elf.c	FUNCTION_190	IF_15	CALL_29
0x400fdd1	      0xb913000000	                           mov ecx, 0x13	     11063	elf.c	FUNCTION_190	IF_15	CALL_29
0x400fdd6	          0x4889c6	                            mov rsi, rax	     11063	elf.c	FUNCTION_190	IF_15	CALL_29
0x400fdd9	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11063	elf.c	FUNCTION_190	IF_15	CALL_29
0x400fddb	        0x400f97c6	                                seta sil	     11063	elf.c	FUNCTION_190	IF_15	CALL_29
0x400fddf	           0xf92c1	                                 setb cl	     11063	elf.c	FUNCTION_190	IF_15	CALL_29
0x400fde2	          0x4038ce	                             cmp sil, cl	     11063	elf.c	FUNCTION_190	IF_15	CALL_29
0x400fde5	            0x7516	                           jne 0x400fdfd	     11063	elf.c	FUNCTION_190	IF_15	CALL_29
0x400fde7	          0x4589c8	                            mov r8d, r9d	     11064	elf.c	FUNCTION_190	CALL_30
0x400fdea	          0x4889d9	                            mov rcx, rbx	     11064	elf.c	FUNCTION_190	CALL_30
0x400fded	          0x4c89de	                            mov rsi, r11	     11064	elf.c	FUNCTION_190	CALL_30
0x400fdf0	          0x4c89d7	                            mov rdi, r10	     11064	elf.c	FUNCTION_190	CALL_30
0x400fdf3	      0xe800000000	                          call 0x400fdf8	     11064	elf.c	FUNCTION_190	CALL_30
0x400fdf8	      0xe951010000	                           jmp 0x400ff4e	     11064	elf.c	FUNCTION_190	CALL_30
0x400fdfd	      0xbf00000000	                              mov edi, 0	     11065	elf.c	FUNCTION_190	IF_16	CALL_31
0x400fe02	      0xb914000000	                           mov ecx, 0x14	     11065	elf.c	FUNCTION_190	IF_16	CALL_31
0x400fe07	          0x4889c6	                            mov rsi, rax	     11065	elf.c	FUNCTION_190	IF_16	CALL_31
0x400fe0a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11065	elf.c	FUNCTION_190	IF_16	CALL_31
0x400fe0c	        0x400f97c6	                                seta sil	     11065	elf.c	FUNCTION_190	IF_16	CALL_31
0x400fe10	           0xf92c1	                                 setb cl	     11065	elf.c	FUNCTION_190	IF_16	CALL_31
0x400fe13	          0x4038ce	                             cmp sil, cl	     11065	elf.c	FUNCTION_190	IF_16	CALL_31
0x400fe16	            0x7516	                           jne 0x400fe2e	     11065	elf.c	FUNCTION_190	IF_16	CALL_31
0x400fe18	          0x4589c8	                            mov r8d, r9d	     11066	elf.c	FUNCTION_190	CALL_32
0x400fe1b	          0x4889d9	                            mov rcx, rbx	     11066	elf.c	FUNCTION_190	CALL_32
0x400fe1e	          0x4c89de	                            mov rsi, r11	     11066	elf.c	FUNCTION_190	CALL_32
0x400fe21	          0x4c89d7	                            mov rdi, r10	     11066	elf.c	FUNCTION_190	CALL_32
0x400fe24	      0xe800000000	                          call 0x400fe29	     11066	elf.c	FUNCTION_190	CALL_32
0x400fe29	      0xe920010000	                           jmp 0x400ff4e	     11066	elf.c	FUNCTION_190	CALL_32
0x400fe2e	      0xbf00000000	                              mov edi, 0	     11067	elf.c	FUNCTION_190	IF_17	CALL_33
0x400fe33	      0xb910000000	                           mov ecx, 0x10	     11067	elf.c	FUNCTION_190	IF_17	CALL_33
0x400fe38	          0x4889c6	                            mov rsi, rax	     11067	elf.c	FUNCTION_190	IF_17	CALL_33
0x400fe3b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11067	elf.c	FUNCTION_190	IF_17	CALL_33
0x400fe3d	        0x400f97c6	                                seta sil	     11067	elf.c	FUNCTION_190	IF_17	CALL_33
0x400fe41	           0xf92c1	                                 setb cl	     11067	elf.c	FUNCTION_190	IF_17	CALL_33
0x400fe44	          0x4038ce	                             cmp sil, cl	     11067	elf.c	FUNCTION_190	IF_17	CALL_33
0x400fe47	            0x7516	                           jne 0x400fe5f	     11067	elf.c	FUNCTION_190	IF_17	CALL_33
0x400fe49	          0x4589c8	                            mov r8d, r9d	     11068	elf.c	FUNCTION_190	CALL_34
0x400fe4c	          0x4889d9	                            mov rcx, rbx	     11068	elf.c	FUNCTION_190	CALL_34
0x400fe4f	          0x4c89de	                            mov rsi, r11	     11068	elf.c	FUNCTION_190	CALL_34
0x400fe52	          0x4c89d7	                            mov rdi, r10	     11068	elf.c	FUNCTION_190	CALL_34
0x400fe55	      0xe800000000	                          call 0x400fe5a	     11068	elf.c	FUNCTION_190	CALL_34
0x400fe5a	      0xe9ef000000	                           jmp 0x400ff4e	     11068	elf.c	FUNCTION_190	CALL_34
0x400fe5f	      0xbf00000000	                              mov edi, 0	     11069	elf.c	FUNCTION_190	IF_18	CALL_35
0x400fe64	      0xb910000000	                           mov ecx, 0x10	     11069	elf.c	FUNCTION_190	IF_18	CALL_35
0x400fe69	          0x4889c6	                            mov rsi, rax	     11069	elf.c	FUNCTION_190	IF_18	CALL_35
0x400fe6c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11069	elf.c	FUNCTION_190	IF_18	CALL_35
0x400fe6e	        0x400f97c6	                                seta sil	     11069	elf.c	FUNCTION_190	IF_18	CALL_35
0x400fe72	           0xf92c1	                                 setb cl	     11069	elf.c	FUNCTION_190	IF_18	CALL_35
0x400fe75	          0x4038ce	                             cmp sil, cl	     11069	elf.c	FUNCTION_190	IF_18	CALL_35
0x400fe78	            0x7516	                           jne 0x400fe90	     11069	elf.c	FUNCTION_190	IF_18	CALL_35
0x400fe7a	          0x4589c8	                            mov r8d, r9d	     11070	elf.c	FUNCTION_190	CALL_36
0x400fe7d	          0x4889d9	                            mov rcx, rbx	     11070	elf.c	FUNCTION_190	CALL_36
0x400fe80	          0x4c89de	                            mov rsi, r11	     11070	elf.c	FUNCTION_190	CALL_36
0x400fe83	          0x4c89d7	                            mov rdi, r10	     11070	elf.c	FUNCTION_190	CALL_36
0x400fe86	      0xe800000000	                          call 0x400fe8b	     11070	elf.c	FUNCTION_190	CALL_36
0x400fe8b	      0xe9be000000	                           jmp 0x400ff4e	     11070	elf.c	FUNCTION_190	CALL_36
0x400fe90	      0xbf00000000	                              mov edi, 0	     11071	elf.c	FUNCTION_190	IF_19	CALL_37
0x400fe95	      0xb90d000000	                            mov ecx, 0xd	     11071	elf.c	FUNCTION_190	IF_19	CALL_37
0x400fe9a	          0x4889c6	                            mov rsi, rax	     11071	elf.c	FUNCTION_190	IF_19	CALL_37
0x400fe9d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11071	elf.c	FUNCTION_190	IF_19	CALL_37
0x400fe9f	        0x400f97c6	                                seta sil	     11071	elf.c	FUNCTION_190	IF_19	CALL_37
0x400fea3	           0xf92c1	                                 setb cl	     11071	elf.c	FUNCTION_190	IF_19	CALL_37
0x400fea6	          0x4038ce	                             cmp sil, cl	     11071	elf.c	FUNCTION_190	IF_19	CALL_37
0x400fea9	            0x7516	                           jne 0x400fec1	     11071	elf.c	FUNCTION_190	IF_19	CALL_37
0x400feab	          0x4589c8	                            mov r8d, r9d	     11072	elf.c	FUNCTION_190	CALL_38
0x400feae	          0x4889d9	                            mov rcx, rbx	     11072	elf.c	FUNCTION_190	CALL_38
0x400feb1	          0x4c89de	                            mov rsi, r11	     11072	elf.c	FUNCTION_190	CALL_38
0x400feb4	          0x4c89d7	                            mov rdi, r10	     11072	elf.c	FUNCTION_190	CALL_38
0x400feb7	      0xe800000000	                          call 0x400febc	     11072	elf.c	FUNCTION_190	CALL_38
0x400febc	      0xe98d000000	                           jmp 0x400ff4e	     11072	elf.c	FUNCTION_190	CALL_38
0x400fec1	      0xbf00000000	                              mov edi, 0	     11073	elf.c	FUNCTION_190	IF_20	CALL_39
0x400fec6	      0xb90f000000	                            mov ecx, 0xf	     11073	elf.c	FUNCTION_190	IF_20	CALL_39
0x400fecb	          0x4889c6	                            mov rsi, rax	     11073	elf.c	FUNCTION_190	IF_20	CALL_39
0x400fece	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11073	elf.c	FUNCTION_190	IF_20	CALL_39
0x400fed0	        0x400f97c6	                                seta sil	     11073	elf.c	FUNCTION_190	IF_20	CALL_39
0x400fed4	           0xf92c1	                                 setb cl	     11073	elf.c	FUNCTION_190	IF_20	CALL_39
0x400fed7	          0x4038ce	                             cmp sil, cl	     11073	elf.c	FUNCTION_190	IF_20	CALL_39
0x400feda	            0x7513	                           jne 0x400feef	     11073	elf.c	FUNCTION_190	IF_20	CALL_39
0x400fedc	          0x4589c8	                            mov r8d, r9d	     11074	elf.c	FUNCTION_190	CALL_40
0x400fedf	          0x4889d9	                            mov rcx, rbx	     11074	elf.c	FUNCTION_190	CALL_40
0x400fee2	          0x4c89de	                            mov rsi, r11	     11074	elf.c	FUNCTION_190	CALL_40
0x400fee5	          0x4c89d7	                            mov rdi, r10	     11074	elf.c	FUNCTION_190	CALL_40
0x400fee8	      0xe800000000	                          call 0x400feed	     11074	elf.c	FUNCTION_190	CALL_40
0x400feed	            0xeb5f	                           jmp 0x400ff4e	     11074	elf.c	FUNCTION_190	CALL_40
0x400feef	      0xbf00000000	                              mov edi, 0	     11075	elf.c	FUNCTION_190	IF_21	CALL_41
0x400fef4	      0xb914000000	                           mov ecx, 0x14	     11075	elf.c	FUNCTION_190	IF_21	CALL_41
0x400fef9	          0x4889c6	                            mov rsi, rax	     11075	elf.c	FUNCTION_190	IF_21	CALL_41
0x400fefc	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11075	elf.c	FUNCTION_190	IF_21	CALL_41
0x400fefe	        0x400f97c6	                                seta sil	     11075	elf.c	FUNCTION_190	IF_21	CALL_41
0x400ff02	           0xf92c1	                                 setb cl	     11075	elf.c	FUNCTION_190	IF_21	CALL_41
0x400ff05	          0x4038ce	                             cmp sil, cl	     11075	elf.c	FUNCTION_190	IF_21	CALL_41
0x400ff08	            0x7513	                           jne 0x400ff1d	     11075	elf.c	FUNCTION_190	IF_21	CALL_41
0x400ff0a	          0x4589c8	                            mov r8d, r9d	     11076	elf.c	FUNCTION_190	CALL_42
0x400ff0d	          0x4889d9	                            mov rcx, rbx	     11076	elf.c	FUNCTION_190	CALL_42
0x400ff10	          0x4c89de	                            mov rsi, r11	     11076	elf.c	FUNCTION_190	CALL_42
0x400ff13	          0x4c89d7	                            mov rdi, r10	     11076	elf.c	FUNCTION_190	CALL_42
0x400ff16	      0xe800000000	                          call 0x400ff1b	     11076	elf.c	FUNCTION_190	CALL_42
0x400ff1b	            0xeb31	                           jmp 0x400ff4e	     11076	elf.c	FUNCTION_190	CALL_42
0x400ff1d	      0xbf00000000	                              mov edi, 0	     11077	elf.c	FUNCTION_190	IF_22	CALL_43
0x400ff22	      0xb914000000	                           mov ecx, 0x14	     11077	elf.c	FUNCTION_190	IF_22	CALL_43
0x400ff27	          0x4889c6	                            mov rsi, rax	     11077	elf.c	FUNCTION_190	IF_22	CALL_43
0x400ff2a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11077	elf.c	FUNCTION_190	IF_22	CALL_43
0x400ff2c	        0x400f97c6	                                seta sil	     11077	elf.c	FUNCTION_190	IF_22	CALL_43
0x400ff30	           0xf92c1	                                 setb cl	     11077	elf.c	FUNCTION_190	IF_22	CALL_43
0x400ff33	      0xb800000000	                              mov eax, 0	     11079	elf.c	FUNCTION_190
0x400ff38	          0x4038ce	                             cmp sil, cl	     11077	elf.c	FUNCTION_190	IF_22	CALL_43
0x400ff3b	            0x7511	                           jne 0x400ff4e	     11077	elf.c	FUNCTION_190	IF_22	CALL_43
0x400ff3d	          0x4589c8	                            mov r8d, r9d	     11078	elf.c	FUNCTION_190	CALL_44
0x400ff40	          0x4889d9	                            mov rcx, rbx	     11078	elf.c	FUNCTION_190	CALL_44
0x400ff43	          0x4c89de	                            mov rsi, r11	     11078	elf.c	FUNCTION_190	CALL_44
0x400ff46	          0x4c89d7	                            mov rdi, r10	     11078	elf.c	FUNCTION_190	CALL_44
0x400ff49	      0xe800000000	                          call 0x400ff4e	     11078	elf.c	FUNCTION_190	CALL_44
0x400ff4e	              0x5b	                                 pop rbx	     11080	elf.c	FUNCTION_190
0x400ff4f	              0xc3	                                     ret	     11080	elf.c	FUNCTION_190
_bfd_elf_canonicalize_dynamic_symtab	FOR,0:ELSE,0:IF,1:WHILE,0:DO,0:SWITCH,0:CALL,2:functions,0	12
0x400baad	              0x53	                                push rbx	      8192	elf.c	FUNCTION_94
0x400baae	          0x4889fb	                            mov rbx, rdi	      8192	elf.c	FUNCTION_94
0x400bab1	        0x488b4708	                mov rax, qword [rdi + 8]	      8193	elf.c	FUNCTION_94	CALL_1
0x400bab5	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      8194	elf.c	FUNCTION_94	CALL_2
0x400babc	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      8194	elf.c	FUNCTION_94	CALL_2
0x400bac3	      0xba01000000	                              mov edx, 1	      8194	elf.c	FUNCTION_94	CALL_2
0x400bac8	          0xff5048	                 call qword [rax + 0x48]	      8194	elf.c	FUNCTION_94	CALL_2
0x400bacb	          0x4885c0	                           test rax, rax	      8196	elf.c	FUNCTION_94	IF_1
0x400bace	            0x7806	                            js 0x400bad6	      8196	elf.c	FUNCTION_94	IF_1
0x400bad0	    0x8983bc000000	             mov dword [rbx + 0xbc], eax	      8197	elf.c	FUNCTION_94	IF_1
0x400bad6	              0x5b	                                 pop rbx	      8199	elf.c	FUNCTION_94
0x400bad7	              0xc3	                                     ret	      8199	elf.c	FUNCTION_94
elf_parse_notes	FOR,1:ELSE,1:IF,11:WHILE,1:DO,0:SWITCH,1:CALL,10:functions,0	224
0x4000d04	            0x4157	                                push r15	     11085	elf.c	FUNCTION_191
0x4000d06	            0x4156	                                push r14	     11085	elf.c	FUNCTION_191
0x4000d08	            0x4155	                                push r13	     11085	elf.c	FUNCTION_191
0x4000d0a	            0x4154	                                push r12	     11085	elf.c	FUNCTION_191
0x4000d0c	              0x55	                                push rbp	     11085	elf.c	FUNCTION_191
0x4000d0d	              0x53	                                push rbx	     11085	elf.c	FUNCTION_191
0x4000d0e	    0x4881ec080100	                          sub rsp, 0x108	     11085	elf.c	FUNCTION_191
0x4000d15	          0x4989fd	                            mov r13, rdi	     11085	elf.c	FUNCTION_191
0x4000d18	          0x4889f3	                            mov rbx, rsi	     11085	elf.c	FUNCTION_191
0x4000d1b	        0x48891424	                    mov qword [rsp], rdx	     11085	elf.c	FUNCTION_191
0x4000d1f	      0x48894c2418	             mov qword [rsp + 0x18], rcx	     11085	elf.c	FUNCTION_191
0x4000d24	    0x64488b042528	                mov rax, qword fs:[0x28]	     11085	elf.c	FUNCTION_191
0x4000d2d	    0x48898424f800	             mov qword [rsp + 0xf8], rax	     11085	elf.c	FUNCTION_191
0x4000d35	            0x31c0	                            xor eax, eax	     11085	elf.c	FUNCTION_191
0x4000d37	        0x4983f803	                               cmp r8, 3	     11092	elf.c	FUNCTION_191	IF_1
0x4000d3b	            0x7616	                           jbe 0x4000d53	     11092	elf.c	FUNCTION_191	IF_1
0x4000d3d	          0x4d89c6	                             mov r14, r8	     11092	elf.c	FUNCTION_191	IF_1
0x4000d40	        0x498d50fc	                       lea rdx, [r8 - 4]	     11094	elf.c	FUNCTION_191	IF_2
0x4000d44	    0x48f7c2fbffff	            test rdx, 0xfffffffffffffffb	     11094	elf.c	FUNCTION_191	IF_2
0x4000d4b	     0xf8515030000	                           jne 0x4001066	     11094	elf.c	FUNCTION_191	IF_2
0x4000d51	            0xeb06	                           jmp 0x4000d59	     11094	elf.c	FUNCTION_191	IF_2
0x4000d53	    0x41be04000000	                             mov r14d, 4	     11093	elf.c	FUNCTION_191	IF_1
0x4000d59	        0x488b0424	                    mov rax, qword [rsp]	     11098	elf.c	FUNCTION_191	WHILE_1
0x4000d5d	          0x4801d8	                            add rax, rbx	     11098	elf.c	FUNCTION_191	WHILE_1
0x4000d60	      0x4889442420	             mov qword [rsp + 0x20], rax	     11098	elf.c	FUNCTION_191	WHILE_1
0x4000d65	          0x4839c3	                            cmp rbx, rax	     11098	elf.c	FUNCTION_191	WHILE_1
0x4000d68	     0xf82dc020000	                            jb 0x400104a	     11098	elf.c	FUNCTION_191	WHILE_1
0x4000d6e	      0xb801000000	                              mov eax, 1	     11179	elf.c	FUNCTION_191
0x4000d73	      0xe9ee020000	                           jmp 0x4001066	     11179	elf.c	FUNCTION_191
0x4000d78	      0x488b442408	                mov rax, qword [rsp + 8]	     11103	elf.c	FUNCTION_191	WHILE_1	IF_3
0x4000d7d	          0x4829d8	                            sub rax, rbx	     11103	elf.c	FUNCTION_191	WHILE_1	IF_3
0x4000d80	        0x48030424	                    add rax, qword [rsp]	     11103	elf.c	FUNCTION_191	WHILE_1	IF_3
0x4000d84	        0x4883f80b	                            cmp rax, 0xb	     11103	elf.c	FUNCTION_191	WHILE_1	IF_3
0x4000d88	     0xf8692020000	                           jbe 0x4001020	     11103	elf.c	FUNCTION_191	WHILE_1	IF_3
0x4000d8e	        0x488d7b08	                      lea rdi, [rbx + 8]	     11106	elf.c	FUNCTION_191	WHILE_1
0x4000d92	        0x498b4508	                mov rax, qword [r13 + 8]	     11106	elf.c	FUNCTION_191	WHILE_1
0x4000d96	    0xff9080000000	                 call qword [rax + 0x80]	     11106	elf.c	FUNCTION_191	WHILE_1
0x4000d9c	      0x4889442440	             mov qword [rsp + 0x40], rax	     11106	elf.c	FUNCTION_191	WHILE_1
0x4000da1	        0x498b4508	                mov rax, qword [r13 + 8]	     11108	elf.c	FUNCTION_191	WHILE_1
0x4000da5	          0x4889df	                            mov rdi, rbx	     11108	elf.c	FUNCTION_191	WHILE_1
0x4000da8	    0xff9080000000	                 call qword [rax + 0x80]	     11108	elf.c	FUNCTION_191	WHILE_1
0x4000dae	      0x4889442430	             mov qword [rsp + 0x30], rax	     11108	elf.c	FUNCTION_191	WHILE_1
0x4000db3	        0x488d530c	                    lea rdx, [rbx + 0xc]	     11109	elf.c	FUNCTION_191	WHILE_1
0x4000db7	      0x4889542448	             mov qword [rsp + 0x48], rdx	     11109	elf.c	FUNCTION_191	WHILE_1
0x4000dbc	      0x488b6c2408	                mov rbp, qword [rsp + 8]	     11110	elf.c	FUNCTION_191	WHILE_1	IF_4
0x4000dc1	          0x4889ee	                            mov rsi, rbp	     11110	elf.c	FUNCTION_191	WHILE_1	IF_4
0x4000dc4	          0x4829d6	                            sub rsi, rdx	     11110	elf.c	FUNCTION_191	WHILE_1	IF_4
0x4000dc7	          0x4889f2	                            mov rdx, rsi	     11110	elf.c	FUNCTION_191	WHILE_1	IF_4
0x4000dca	        0x4c8b2424	                    mov r12, qword [rsp]	     11110	elf.c	FUNCTION_191	WHILE_1	IF_4
0x4000dce	          0x4c01e2	                            add rdx, r12	     11110	elf.c	FUNCTION_191	WHILE_1	IF_4
0x4000dd1	          0x4839d0	                            cmp rax, rdx	     11110	elf.c	FUNCTION_191	WHILE_1	IF_4
0x4000dd4	     0xf874d020000	                            ja 0x4001027	     11110	elf.c	FUNCTION_191	WHILE_1	IF_4
0x4000dda	        0x488d7b04	                      lea rdi, [rbx + 4]	     11113	elf.c	FUNCTION_191	WHILE_1
0x4000dde	        0x498b4508	                mov rax, qword [r13 + 8]	     11113	elf.c	FUNCTION_191	WHILE_1
0x4000de2	    0xff9080000000	                 call qword [rax + 0x80]	     11113	elf.c	FUNCTION_191	WHILE_1
0x4000de8	      0x4889442438	             mov qword [rsp + 0x38], rax	     11113	elf.c	FUNCTION_191	WHILE_1
0x4000ded	      0x4c8b7c2430	            mov r15, qword [rsp + 0x30] 	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_1
0x4000df2	      0x4b8d54370b	              lea rdx, [r15 + r14 + 0xb]	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_1
0x4000df7	      0x4823542410	             and rdx, qword [rsp + 0x10]	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_1
0x4000dfc	          0x4801da	                            add rdx, rbx	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_1
0x4000dff	      0x4889542450	             mov qword [rsp + 0x50], rdx	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_1
0x4000e04	          0x4889d1	                            mov rcx, rdx	     11115	elf.c	FUNCTION_191	WHILE_1
0x4000e07	          0x4889ee	                            mov rsi, rbp	     11115	elf.c	FUNCTION_191	WHILE_1
0x4000e0a	          0x4829e9	                            sub rcx, rbp	     11115	elf.c	FUNCTION_191	WHILE_1
0x4000e0d	      0x48034c2418	             add rcx, qword [rsp + 0x18]	     11115	elf.c	FUNCTION_191	WHILE_1
0x4000e12	      0x48894c2458	             mov qword [rsp + 0x58], rcx	     11115	elf.c	FUNCTION_191	WHILE_1
0x4000e17	          0x4885c0	                           test rax, rax	     11116	elf.c	FUNCTION_191	WHILE_1	IF_5
0x4000e1a	            0x741d	                            je 0x4000e39	     11116	elf.c	FUNCTION_191	WHILE_1	IF_5
0x4000e1c	      0x483b542420	            cmp rdx, qword [rsp + 0x20] 	     11117	elf.c	FUNCTION_191	WHILE_1	IF_5
0x4000e21	     0xf8307020000	                           jae 0x400102e	     11117	elf.c	FUNCTION_191	WHILE_1	IF_5
0x4000e27	          0x4829d6	                            sub rsi, rdx	     11118	elf.c	FUNCTION_191	WHILE_1	IF_5
0x4000e2a	          0x4889f2	                            mov rdx, rsi	     11118	elf.c	FUNCTION_191	WHILE_1	IF_5
0x4000e2d	          0x4c01e2	                            add rdx, r12	     11118	elf.c	FUNCTION_191	WHILE_1	IF_5
0x4000e30	          0x4839d0	                            cmp rax, rdx	     11118	elf.c	FUNCTION_191	WHILE_1	IF_5
0x4000e33	     0xf87fc010000	                            ja 0x4001035	     11118	elf.c	FUNCTION_191	WHILE_1	IF_5
0x4000e39	      0x410fb65544	           movzx edx, byte [r13 + 0x44] 	     11121	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x4000e3e	          0x83e207	                              and edx, 7	     11121	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x4000e41	          0x80fa01	                               cmp dl, 1	     11121	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x4000e44	     0xf8481000000	                            je 0x4000ecb	     11121	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x4000e4a	          0x80fa03	                               cmp dl, 3	     11121	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x4000e4d	     0xf85e9010000	                           jne 0x400103c	     11121	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x4000e53	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	     11135	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x4000e58	      0xbe00000000	                              mov esi, 0	     11135	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x4000e5d	      0xb912000000	                           mov ecx, 0x12	     11135	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x4000e62	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	     11135	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x4000e65	      0x488b442448	            mov rax, qword [rsp + 0x48] 	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_4
0x4000e6a	      0x4889442428	             mov qword [rsp + 0x28], rax	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_4
0x4000e6f	    0x488dac24e000	                   lea rbp, [rsp + 0xe0]	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_4
0x4000e77	    0x41bc05000000	                             mov r12d, 5	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_3
0x4000e7d	        0x488b5500	                    mov rdx, qword [rbp]	     11149	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6
0x4000e81	          0x4939d7	                            cmp r15, rdx	     11149	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6
0x4000e84	            0x7232	                            jb 0x4000eb8	     11149	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6
0x4000e86	        0x488b75f8	                mov rsi, qword [rbp - 8]	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_4
0x4000e8a	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_4
0x4000e8f	      0xe800000000	                          call 0x4000e94	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_4
0x4000e94	            0x85c0	                           test eax, eax	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_4
0x4000e96	            0x7520	                           jne 0x4000eb8	     11150	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	CALL_4
0x4000e98	          0x4d63e4	                        movsxd r12, r12d	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_5
0x4000e9b	        0x4b8d0464	                  lea rax, [r12 + r12*2]	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_5
0x4000e9f	      0x488d742430	                   lea rsi, [rsp + 0x30]	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_5
0x4000ea4	          0x4c89ef	                            mov rdi, r13	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_5
0x4000ea7	        0xff54c470	        call qword [rsp + rax*8 + 0x70] 	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_5
0x4000eab	            0x85c0	                           test eax, eax	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_5
0x4000ead	     0xf8536010000	                           jne 0x4000fe9	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_5
0x4000eb3	      0xe9ae010000	                           jmp 0x4001066	     11153	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	IF_6	IF_7	CALL_5
0x4000eb8	        0x4183ec01	                             sub r12d, 1	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_3
0x4000ebc	        0x4883ed18	                           sub rbp, 0x18	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_3
0x4000ec0	        0x4183fcff	            cmp r12d, 0xffffffffffffffff	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_3
0x4000ec4	            0x75b7	                           jne 0x4000e7d	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_3
0x4000ec6	      0xe91e010000	                           jmp 0x4000fe9	     11147	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	FOR_1	CALL_3
0x4000ecb	        0x4983ff04	                              cmp r15, 4	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_6
0x4000ecf	     0xf85a0000000	                           jne 0x4000f75	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_6
0x4000ed5	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_6
0x4000eda	          0x803a47	                    cmp byte [rdx], 0x47	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_6
0x4000edd	     0xf8506010000	                           jne 0x4000fe9	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_6
0x4000ee3	        0x807a014e	                cmp byte [rdx + 1], 0x4e	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_6
0x4000ee7	     0xf85fc000000	                           jne 0x4000fe9	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_6
0x4000eed	        0x807a0255	                cmp byte [rdx + 2], 0x55	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_6
0x4000ef1	     0xf85f2000000	                           jne 0x4000fe9	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_6
0x4000ef7	        0x807a0300	                   cmp byte [rdx + 3], 0	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_6
0x4000efb	     0xf85e8000000	                           jne 0x4000fe9	     11162	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	CALL_6
0x4000f01	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	      9894	elf.c	FUNCTION_146	SWITCH_1
0x4000f06	        0x4883fa03	                              cmp rdx, 3	      9894	elf.c	FUNCTION_146	SWITCH_1
0x4000f0a	            0x741a	                            je 0x4000f26	      9894	elf.c	FUNCTION_146	SWITCH_1
0x4000f0c	      0xb801000000	                              mov eax, 1	      9897	elf.c	FUNCTION_146	SWITCH_1
0x4000f11	        0x4883fa05	                              cmp rdx, 5	      9894	elf.c	FUNCTION_146	SWITCH_1
0x4000f15	            0x7555	                           jne 0x4000f6c	      9894	elf.c	FUNCTION_146	SWITCH_1
0x4000f17	      0x488d742430	                   lea rsi, [rsp + 0x30]	      9900	elf.c	FUNCTION_146	SWITCH_1	CALL_1
0x4000f1c	          0x4c89ef	                            mov rdi, r13	      9900	elf.c	FUNCTION_146	SWITCH_1	CALL_1
0x4000f1f	      0xe800000000	                          call 0x4000f24	      9900	elf.c	FUNCTION_146	SWITCH_1	CALL_1
0x4000f24	            0xeb46	                           jmp 0x4000f6c	      9900	elf.c	FUNCTION_146	SWITCH_1	CALL_1
0x4000f26	          0x4885c0	                           test rax, rax	      9877	elf.c	FUNCTION_145	IF_1
0x4000f29	     0xf844c010000	                            je 0x400107b	      9877	elf.c	FUNCTION_145	IF_1
0x4000f2f	        0x488d700f	                    lea rsi, [rax + 0xf]	      9880	elf.c	FUNCTION_145	CALL_1
0x4000f33	          0x4c89ef	                            mov rdi, r13	      9880	elf.c	FUNCTION_145	CALL_1
0x4000f36	      0xe800000000	                          call 0x4000f3b	      9880	elf.c	FUNCTION_145	CALL_1
0x4000f3b	          0x4889c5	                            mov rbp, rax	      9880	elf.c	FUNCTION_145	CALL_1
0x4000f3e	          0x4885c0	                           test rax, rax	      9881	elf.c	FUNCTION_145	IF_2
0x4000f41	     0xf8434010000	                            je 0x400107b	      9881	elf.c	FUNCTION_145	IF_2
0x4000f47	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      9884	elf.c	FUNCTION_145
0x4000f4c	        0x48894500	                    mov qword [rbp], rax	      9884	elf.c	FUNCTION_145
0x4000f50	        0x488d7d08	                      lea rdi, [rbp + 8]	        53	string3.h	FUNCTION_221	CALL_3
0x4000f54	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	        53	string3.h	FUNCTION_221	CALL_3
0x4000f59	      0x488b742450	            mov rsi, qword [rsp + 0x50] 	        53	string3.h	FUNCTION_221	CALL_3
0x4000f5e	      0xe800000000	                          call 0x4000f63	        53	string3.h	FUNCTION_221	CALL_3
0x4000f63	    0x4989ad100100	            mov qword [r13 + 0x110], rbp	      9886	elf.c	FUNCTION_145
0x4000f6a	            0xeb7d	                           jmp 0x4000fe9	      9886	elf.c	FUNCTION_145
0x4000f6c	            0x85c0	                           test eax, eax	     11164	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9	CALL_7
0x4000f6e	            0x7579	                           jne 0x4000fe9	     11164	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9	CALL_7
0x4000f70	      0xe9f1000000	                           jmp 0x4001066	     11164	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9	CALL_7
0x4000f75	        0x4983ff08	                              cmp r15, 8	     11167	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10
0x4000f79	            0x756e	                           jne 0x4000fe9	     11167	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10
0x4000f7b	      0xbf00000000	                              mov edi, 0	     11168	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10	CALL_8
0x4000f80	      0xb908000000	                              mov ecx, 8	     11168	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10	CALL_8
0x4000f85	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	     11168	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10	CALL_8
0x4000f8a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11168	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10	CALL_8
0x4000f8c	           0xf97c1	                                 seta cl	     11168	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10	CALL_8
0x4000f8f	           0xf92c2	                                 setb dl	     11168	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10	CALL_8
0x4000f92	            0x38d1	                              cmp cl, dl	     11168	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10	CALL_8
0x4000f94	            0x7553	                           jne 0x4000fe9	     11168	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	ELSE_1	IF_10	CALL_8
0x4000f96	    0x48837c244003	               cmp qword [rsp + 0x40], 3	      9926	elf.c	FUNCTION_148	SWITCH_1
0x4000f9c	            0x754b	                           jne 0x4000fe9	      9926	elf.c	FUNCTION_148	SWITCH_1
0x4000f9e	        0x488d7018	                   lea rsi, [rax + 0x18]	      9910	elf.c	FUNCTION_147
0x4000fa2	          0x4c89ef	                            mov rdi, r13	      9910	elf.c	FUNCTION_147
0x4000fa5	      0xe800000000	                          call 0x4000faa	      9910	elf.c	FUNCTION_147
0x4000faa	          0x4889c5	                            mov rbp, rax	      9910	elf.c	FUNCTION_147
0x4000fad	    0x498b85f80000	            mov rax, qword [r13 + 0xf8] 	      9914	elf.c	FUNCTION_147	CALL_2
0x4000fb4	    0x488b80600c00	           mov rax, qword [rax + 0xc60] 	      9914	elf.c	FUNCTION_147	CALL_2
0x4000fbb	        0x48894500	                    mov qword [rbp], rax	      9914	elf.c	FUNCTION_147	CALL_2
0x4000fbf	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      9915	elf.c	FUNCTION_147
0x4000fc4	        0x48894508	                mov qword [rbp + 8], rax	      9915	elf.c	FUNCTION_147
0x4000fc8	        0x488d7d10	                   lea rdi, [rbp + 0x10]	        53	string3.h	FUNCTION_221	CALL_3
0x4000fcc	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	        53	string3.h	FUNCTION_221	CALL_3
0x4000fd1	      0x488b742450	            mov rsi, qword [rsp + 0x50] 	        53	string3.h	FUNCTION_221	CALL_3
0x4000fd6	      0xe800000000	                          call 0x4000fdb	        53	string3.h	FUNCTION_221	CALL_3
0x4000fdb	    0x498b85f80000	            mov rax, qword [r13 + 0xf8] 	      9918	elf.c	FUNCTION_147	CALL_4
0x4000fe2	    0x4889a8600c00	            mov qword [rax + 0xc60], rbp	      9918	elf.c	FUNCTION_147	CALL_4
0x4000fe9	      0x488b442430	            mov rax, qword [rsp + 0x30] 	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_10
0x4000fee	      0x498d44060b	              lea rax, [r14 + rax + 0xb]	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_10
0x4000ff3	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_10
0x4000ff8	          0x4821c8	                            and rax, rcx	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_10
0x4000ffb	          0x4c89f2	                            mov rdx, r14	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_10
0x4000ffe	      0x4803542438	             add rdx, qword [rsp + 0x38]	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_10
0x4001003	      0x488d4402ff	                lea rax, [rdx + rax - 1]	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_10
0x4001008	          0x4821c8	                            and rax, rcx	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_10
0x400100b	          0x4801c3	                            add rbx, rax	     11176	elf.c	FUNCTION_191	WHILE_1	CALL_10
0x400100e	      0x483b5c2420	            cmp rbx, qword [rsp + 0x20] 	     11098	elf.c	FUNCTION_191	WHILE_1
0x4001013	     0xf825ffdffff	                            jb 0x4000d78	     11098	elf.c	FUNCTION_191	WHILE_1
0x4001019	      0xb801000000	                              mov eax, 1	     11179	elf.c	FUNCTION_191
0x400101e	            0xeb46	                           jmp 0x4001066	     11179	elf.c	FUNCTION_191
0x4001020	      0xb800000000	                              mov eax, 0	     11104	elf.c	FUNCTION_191	WHILE_1	IF_3
0x4001025	            0xeb3f	                           jmp 0x4001066	     11104	elf.c	FUNCTION_191	WHILE_1	IF_3
0x4001027	      0xb800000000	                              mov eax, 0	     11111	elf.c	FUNCTION_191	WHILE_1	IF_4
0x400102c	            0xeb38	                           jmp 0x4001066	     11111	elf.c	FUNCTION_191	WHILE_1	IF_4
0x400102e	      0xb800000000	                              mov eax, 0	     11119	elf.c	FUNCTION_191	WHILE_1	IF_5
0x4001033	            0xeb31	                           jmp 0x4001066	     11119	elf.c	FUNCTION_191	WHILE_1	IF_5
0x4001035	      0xb800000000	                              mov eax, 0	     11119	elf.c	FUNCTION_191	WHILE_1	IF_5
0x400103a	            0xeb2a	                           jmp 0x4001066	     11119	elf.c	FUNCTION_191	WHILE_1	IF_5
0x400103c	      0xb801000000	                              mov eax, 1	     11124	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x4001041	            0xeb23	                           jmp 0x4001066	     11124	elf.c	FUNCTION_191	WHILE_1	SWITCH_1
0x4001043	      0xb800000000	                              mov eax, 0	     11104	elf.c	FUNCTION_191	WHILE_1	IF_3
0x4001048	            0xeb1c	                           jmp 0x4001066	     11104	elf.c	FUNCTION_191	WHILE_1	IF_3
0x400104a	      0x48895c2408	                mov qword [rsp + 8], rbx	     11103	elf.c	FUNCTION_191	WHILE_1	IF_3
0x400104f	      0x48833c240b	                    cmp qword [rsp], 0xb	     11103	elf.c	FUNCTION_191	WHILE_1	IF_3
0x4001054	            0x76ed	                           jbe 0x4001043	     11103	elf.c	FUNCTION_191	WHILE_1	IF_3
0x4001056	          0x4c89f0	                            mov rax, r14	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_1
0x4001059	          0x48f7d8	                                 neg rax	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_1
0x400105c	      0x4889442410	             mov qword [rsp + 0x10], rax	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_1
0x4001061	      0xe928fdffff	                           jmp 0x4000d8e	     11114	elf.c	FUNCTION_191	WHILE_1	CALL_1
0x4001066	    0x488b9c24f800	            mov rbx, qword [rsp + 0xf8] 	     11180	elf.c	FUNCTION_191
0x400106e	    0x6448331c2528	                xor rbx, qword fs:[0x28]	     11180	elf.c	FUNCTION_191
0x4001077	            0x740e	                            je 0x4001087	     11180	elf.c	FUNCTION_191
0x4001079	            0xeb07	                           jmp 0x4001082	     11180	elf.c	FUNCTION_191
0x400107b	      0xb800000000	                              mov eax, 0	     11165	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9
0x4001080	            0xebe4	                           jmp 0x4001066	     11165	elf.c	FUNCTION_191	WHILE_1	SWITCH_1	IF_8	IF_9
0x4001082	      0xe800000000	                          call 0x4001087	     11180	elf.c	FUNCTION_191
0x4001087	    0x4881c4080100	                          add rsp, 0x108	     11180	elf.c	FUNCTION_191
0x400108e	              0x5b	                                 pop rbx	     11180	elf.c	FUNCTION_191
0x400108f	              0x5d	                                 pop rbp	     11180	elf.c	FUNCTION_191
0x4001090	            0x415c	                                 pop r12	     11180	elf.c	FUNCTION_191
0x4001092	            0x415d	                                 pop r13	     11180	elf.c	FUNCTION_191
0x4001094	            0x415e	                                 pop r14	     11180	elf.c	FUNCTION_191
0x4001096	            0x415f	                                 pop r15	     11180	elf.c	FUNCTION_191
0x4001098	              0xc3	                                     ret	     11180	elf.c	FUNCTION_191
_bfd_elf_write_corefile_contents	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,1:functions,0	4
0x4009b81	        0x4883ec08	                              sub rsp, 8	      6444	elf.c	FUNCTION_77
0x4009b85	      0xe800000000	                          call 0x4009b8a	      6446	elf.c	FUNCTION_77	CALL_1
0x4009b8a	        0x4883c408	                              add rsp, 8	      6447	elf.c	FUNCTION_77
0x4009b8e	              0xc3	                                     ret	      6447	elf.c	FUNCTION_77
elfcore_write_arm_vfp	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,1:functions,0	8
0x400fa87	        0x4883ec10	                           sub rsp, 0x10	     10985	elf.c	FUNCTION_186
0x400fa8b	          0x4989c9	                             mov r9, rcx	     10985	elf.c	FUNCTION_186
0x400fa8e	            0x4150	                                 push r8	     10987	elf.c	FUNCTION_186	CALL_1
0x400fa90	    0x41b800040000	                          mov r8d, 0x400	     10987	elf.c	FUNCTION_186	CALL_1
0x400fa96	      0xb900000000	                              mov ecx, 0	     10987	elf.c	FUNCTION_186	CALL_1
0x400fa9b	      0xe800000000	                          call 0x400faa0	     10987	elf.c	FUNCTION_186	CALL_1
0x400faa0	        0x4883c418	                           add rsp, 0x18	     10989	elf.c	FUNCTION_186
0x400faa4	              0xc3	                                     ret	     10989	elf.c	FUNCTION_186
elf_sort_sections	FOR,0:ELSE,4:IF,10:WHILE,0:DO,0:SWITCH,0:CALL,0:functions,0	55
0x4000205	          0x488b0f	                    mov rcx, qword [rdi]	      5114	elf.c	FUNCTION_66
0x4000208	          0x488b16	                    mov rdx, qword [rsi]	      5115	elf.c	FUNCTION_66
0x400020b	        0x488b7930	            mov rdi, qword [rcx + 0x30] 	      5120	elf.c	FUNCTION_66	IF_1
0x400020f	        0x488b7230	            mov rsi, qword [rdx + 0x30] 	      5120	elf.c	FUNCTION_66	IF_1
0x4000213	          0x4839f7	                            cmp rdi, rsi	      5120	elf.c	FUNCTION_66	IF_1
0x4000216	     0xf8291000000	                            jb 0x40002ad	      5120	elf.c	FUNCTION_66	IF_1
0x400021c	      0xb801000000	                              mov eax, 1	      5123	elf.c	FUNCTION_66	ELSE_1	IF_2
0x4000221	     0xf87a0000000	                            ja 0x40002c7	      5122	elf.c	FUNCTION_66	ELSE_1	IF_2
0x4000227	        0x488b7928	            mov rdi, qword [rcx + 0x28] 	      5127	elf.c	FUNCTION_66	IF_3
0x400022b	        0x488b7228	            mov rsi, qword [rdx + 0x28] 	      5127	elf.c	FUNCTION_66	IF_3
0x400022f	          0x4839f7	                            cmp rdi, rsi	      5127	elf.c	FUNCTION_66	IF_3
0x4000232	            0x727f	                            jb 0x40002b3	      5127	elf.c	FUNCTION_66	IF_3
0x4000234	     0xf878d000000	                            ja 0x40002c7	      5129	elf.c	FUNCTION_66	ELSE_2	IF_4
0x400023a	          0x8b7120	            mov esi, dword [rcx + 0x20] 	      5136	elf.c	FUNCTION_66	IF_5
0x400023d	    0xf7c602040000	                         test esi, 0x402	      5136	elf.c	FUNCTION_66	IF_5
0x4000243	            0x751c	                           jne 0x4000261	      5136	elf.c	FUNCTION_66	IF_5
0x4000245	    0xf74220020400	         test dword [rdx + 0x20], 0x402 	      5138	elf.c	FUNCTION_66	IF_5	IF_6
0x400024c	            0x7579	                           jne 0x40002c7	      5138	elf.c	FUNCTION_66	IF_5	IF_6
0x400024e	    0x8b81d8000000	            mov eax, dword [rcx + 0xd8] 	      5142	elf.c	FUNCTION_66	IF_5	IF_6	IF_7
0x4000254	    0x8bbad8000000	            mov edi, dword [rdx + 0xd8] 	      5142	elf.c	FUNCTION_66	IF_5	IF_6	IF_7
0x400025a	            0x39f8	                            cmp eax, edi	      5142	elf.c	FUNCTION_66	IF_5	IF_6	IF_7
0x400025c	            0x740c	                            je 0x400026a	      5142	elf.c	FUNCTION_66	IF_5	IF_6	IF_7
0x400025e	            0x29f8	                            sub eax, edi	      5143	elf.c	FUNCTION_66	IF_5	IF_6	IF_7
0x4000260	              0xc3	                                     ret	      5143	elf.c	FUNCTION_66	IF_5	IF_6	IF_7
0x4000261	    0xf74220020400	         test dword [rdx + 0x20], 0x402 	      5148	elf.c	FUNCTION_66	ELSE_4	IF_8
0x4000268	            0x744f	                            je 0x40002b9	      5148	elf.c	FUNCTION_66	ELSE_4	IF_8
0x400026a	        0x40f6c602	                             test sil, 2	      5156	elf.c	FUNCTION_66
0x400026e	            0x744f	                            je 0x40002bf	      5156	elf.c	FUNCTION_66
0x4000270	        0x488b7138	            mov rsi, qword [rcx + 0x38] 	      5156	elf.c	FUNCTION_66
0x4000274	        0xf6422002	               test byte [rdx + 0x20], 2	      5157	elf.c	FUNCTION_66
0x4000278	            0x7417	                            je 0x4000291	      5157	elf.c	FUNCTION_66
0x400027a	            0xeb05	                           jmp 0x4000281	      5157	elf.c	FUNCTION_66
0x400027c	      0xbe00000000	                              mov esi, 0	      5156	elf.c	FUNCTION_66
0x4000281	        0x488b7a38	            mov rdi, qword [rdx + 0x38] 	      5157	elf.c	FUNCTION_66
0x4000285	      0xb8ffffffff	                     mov eax, 0xffffffff	      5160	elf.c	FUNCTION_66	IF_9
0x400028a	          0x4839f7	                            cmp rdi, rsi	      5159	elf.c	FUNCTION_66	IF_9
0x400028d	            0x7607	                           jbe 0x4000296	      5159	elf.c	FUNCTION_66	IF_9
0x400028f	            0xf3c3	                                     ret	      5159	elf.c	FUNCTION_66	IF_9
0x4000291	      0xbf00000000	                              mov edi, 0	      5157	elf.c	FUNCTION_66
0x4000296	      0xb801000000	                              mov eax, 1	      5162	elf.c	FUNCTION_66	IF_10
0x400029b	          0x4839f7	                            cmp rdi, rsi	      5161	elf.c	FUNCTION_66	IF_10
0x400029e	            0x7227	                            jb 0x40002c7	      5161	elf.c	FUNCTION_66	IF_10
0x40002a0	    0x8b81d8000000	            mov eax, dword [rcx + 0xd8] 	      5164	elf.c	FUNCTION_66
0x40002a6	    0x2b82d8000000	             sub eax, dword [rdx + 0xd8]	      5164	elf.c	FUNCTION_66
0x40002ac	              0xc3	                                     ret	      5164	elf.c	FUNCTION_66
0x40002ad	      0xb8ffffffff	                     mov eax, 0xffffffff	      5121	elf.c	FUNCTION_66	IF_1
0x40002b2	              0xc3	                                     ret	      5121	elf.c	FUNCTION_66	IF_1
0x40002b3	      0xb8ffffffff	                     mov eax, 0xffffffff	      5128	elf.c	FUNCTION_66	IF_3
0x40002b8	              0xc3	                                     ret	      5128	elf.c	FUNCTION_66	IF_3
0x40002b9	      0xb8ffffffff	                     mov eax, 0xffffffff	      5149	elf.c	FUNCTION_66	ELSE_4	IF_8
0x40002be	              0xc3	                                     ret	      5149	elf.c	FUNCTION_66	ELSE_4	IF_8
0x40002bf	        0xf6422002	               test byte [rdx + 0x20], 2	      5157	elf.c	FUNCTION_66
0x40002c3	            0x75b7	                           jne 0x400027c	      5157	elf.c	FUNCTION_66
0x40002c5	            0xebd9	                           jmp 0x40002a0	      5157	elf.c	FUNCTION_66
0x40002c7	            0xf3c3	                                     ret	      5165	elf.c	FUNCTION_66
bfd_sym_from_r_symndx	FOR,0:ELSE,0:IF,3:WHILE,0:DO,0:SWITCH,0:CALL,3:functions,0	65
0x4002dbb	            0x4155	                                push r13	      2560	elf.c	FUNCTION_37
0x4002dbd	            0x4154	                                push r12	      2560	elf.c	FUNCTION_37
0x4002dbf	              0x55	                                push rbp	      2560	elf.c	FUNCTION_37
0x4002dc0	              0x53	                                push rbx	      2560	elf.c	FUNCTION_37
0x4002dc1	        0x4883ec38	                           sub rsp, 0x38	      2560	elf.c	FUNCTION_37
0x4002dc5	          0x4889fd	                            mov rbp, rdi	      2560	elf.c	FUNCTION_37
0x4002dc8	          0x4989f4	                            mov r12, rsi	      2560	elf.c	FUNCTION_37
0x4002dcb	          0x4989d5	                            mov r13, rdx	      2560	elf.c	FUNCTION_37
0x4002dce	    0x64488b042528	                mov rax, qword fs:[0x28]	      2560	elf.c	FUNCTION_37
0x4002dd7	      0x4889442428	             mov qword [rsp + 0x28], rax	      2560	elf.c	FUNCTION_37
0x4002ddc	            0x31c0	                            xor eax, eax	      2560	elf.c	FUNCTION_37
0x4002dde	            0x89d3	                            mov ebx, edx	      2561	elf.c	FUNCTION_37
0x4002de0	          0x83e31f	                           and ebx, 0x1f	      2561	elf.c	FUNCTION_37
0x4002de3	          0x483937	                    cmp qword [rdi], rsi	      2563	elf.c	FUNCTION_37	IF_1
0x4002de6	            0x750d	                           jne 0x4002df5	      2563	elf.c	FUNCTION_37	IF_1
0x4002de8	            0x89d8	                            mov eax, ebx	      2563	elf.c	FUNCTION_37	IF_1
0x4002dea	      0x483b54c708	       cmp rdx, qword [rdi + rax*8 + 8] 	      2563	elf.c	FUNCTION_37	IF_1
0x4002def	     0xf8480000000	                            je 0x4002e75	      2563	elf.c	FUNCTION_37	IF_1
0x4002df5	            0x89d8	                            mov eax, ebx	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4002df7	        0x4883c008	                              add rax, 8	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4002dfb	        0x48c1e005	                              shl rax, 5	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4002dff	    0x498bb424f800	            mov rsi, qword [r12 + 0xf8] 	      2569	elf.c	FUNCTION_37	IF_1	CALL_1
0x4002e07	        0x4883c668	                           add rsi, 0x68	      2569	elf.c	FUNCTION_37	IF_1	CALL_1
0x4002e0b	        0x4883ec08	                              sub rsp, 8	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4002e0f	      0x488d542408	                      lea rdx, [rsp + 8]	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4002e14	              0x52	                                push rdx	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4002e15	      0x4c8d4c2420	                    lea r9, [rsp + 0x20]	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4002e1a	      0x4c8d440508	                 lea r8, [rbp + rax + 8]	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4002e1f	          0x4c89e9	                            mov rcx, r13	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4002e22	      0xba01000000	                              mov edx, 1	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4002e27	          0x4c89e7	                            mov rdi, r12	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4002e2a	      0xe800000000	                          call 0x4002e2f	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4002e2f	        0x4883c410	                           add rsp, 0x10	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4002e33	          0x4885c0	                           test rax, rax	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4002e36	            0x744c	                            je 0x4002e84	      2570	elf.c	FUNCTION_37	IF_1	IF_2	CALL_2
0x4002e38	        0x4c3b6500	                    cmp r12, qword [rbp]	      2574	elf.c	FUNCTION_37	IF_1	IF_3
0x4002e3c	            0x7430	                            je 0x4002e6e	      2574	elf.c	FUNCTION_37	IF_1	IF_3
0x4002e3e	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	        90	string3.h	FUNCTION_224	CALL_6
0x4002e45	        0x48894508	                mov qword [rbp + 8], rax	        90	string3.h	FUNCTION_224	CALL_6
0x4002e49	    0x488985000100	           mov qword [rbp + 0x100], rax 	        90	string3.h	FUNCTION_224	CALL_6
0x4002e50	        0x488d7d10	                   lea rdi, [rbp + 0x10]	        90	string3.h	FUNCTION_224	CALL_6
0x4002e54	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_224	CALL_6
0x4002e58	            0x89ea	                            mov edx, ebp	        90	string3.h	FUNCTION_224	CALL_6
0x4002e5a	            0x29fa	                            sub edx, edi	        90	string3.h	FUNCTION_224	CALL_6
0x4002e5c	    0x8d8a08010000	                  lea ecx, [rdx + 0x108]	        90	string3.h	FUNCTION_224	CALL_6
0x4002e62	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_224	CALL_6
0x4002e65	            0x89c9	                            mov ecx, ecx	        90	string3.h	FUNCTION_224	CALL_6
0x4002e67	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_224	CALL_6
0x4002e6a	        0x4c896500	                    mov qword [rbp], r12	      2577	elf.c	FUNCTION_37	IF_1	IF_3
0x4002e6e	            0x89d8	                            mov eax, ebx	      2579	elf.c	FUNCTION_37	IF_1
0x4002e70	      0x4c896cc508	       mov qword [rbp + rax*8 + 8], r13 	      2579	elf.c	FUNCTION_37	IF_1
0x4002e75	            0x89db	                            mov ebx, ebx	      2582	elf.c	FUNCTION_37
0x4002e77	        0x4883c308	                              add rbx, 8	      2582	elf.c	FUNCTION_37
0x4002e7b	        0x48c1e305	                              shl rbx, 5	      2582	elf.c	FUNCTION_37
0x4002e7f	      0x488d441d08	                lea rax, [rbp + rbx + 8]	      2582	elf.c	FUNCTION_37
0x4002e84	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      2583	elf.c	FUNCTION_37
0x4002e89	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      2583	elf.c	FUNCTION_37
0x4002e92	            0x7405	                            je 0x4002e99	      2583	elf.c	FUNCTION_37
0x4002e94	      0xe800000000	                          call 0x4002e99	      2583	elf.c	FUNCTION_37
0x4002e99	        0x4883c438	                           add rsp, 0x38	      2583	elf.c	FUNCTION_37
0x4002e9d	              0x5b	                                 pop rbx	      2583	elf.c	FUNCTION_37
0x4002e9e	              0x5d	                                 pop rbp	      2583	elf.c	FUNCTION_37
0x4002e9f	            0x415c	                                 pop r12	      2583	elf.c	FUNCTION_37
0x4002ea1	            0x415d	                                 pop r13	      2583	elf.c	FUNCTION_37
0x4002ea3	              0xc3	                                     ret	      2583	elf.c	FUNCTION_37
_bfd_elf_is_function_type	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,0:functions,0	5
0x401053a	          0x83e7f7	                     and edi, 0xfffffff7	     11533	elf.c	FUNCTION_202
0x401053d	          0x83ff02	                              cmp edi, 2	     11533	elf.c	FUNCTION_202
0x4010540	           0xf94c0	                                 sete al	     11533	elf.c	FUNCTION_202
0x4010543	           0xfb6c0	                           movzx eax, al	     11533	elf.c	FUNCTION_202
0x4010546	              0xc3	                                     ret	     11535	elf.c	FUNCTION_202
elfcore_write_prfpreg	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,1:functions,0	8
0x400f871	        0x4883ec10	                           sub rsp, 0x10	     10762	elf.c	FUNCTION_168
0x400f875	          0x4989c9	                             mov r9, rcx	     10762	elf.c	FUNCTION_168
0x400f878	            0x4150	                                 push r8	     10764	elf.c	FUNCTION_168	CALL_1
0x400f87a	    0x41b802000000	                              mov r8d, 2	     10764	elf.c	FUNCTION_168	CALL_1
0x400f880	      0xb900000000	                              mov ecx, 0	     10764	elf.c	FUNCTION_168	CALL_1
0x400f885	      0xe800000000	                          call 0x400f88a	     10764	elf.c	FUNCTION_168	CALL_1
0x400f88a	        0x4883c418	                           add rsp, 0x18	     10766	elf.c	FUNCTION_168
0x400f88e	              0xc3	                                     ret	     10766	elf.c	FUNCTION_168
_bfd_elf_swap_versym_out	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,0:functions,0	8
0x4001cdb	        0x4883ec08	                              sub rsp, 8	       190	elf.c	FUNCTION_10
0x4001cdf	           0xfb70e	                   movzx ecx, word [rsi]	       191	elf.c	FUNCTION_10
0x4001ce2	        0x488b4708	                mov rax, qword [rdi + 8]	       191	elf.c	FUNCTION_10
0x4001ce6	          0x4889d6	                            mov rsi, rdx	       191	elf.c	FUNCTION_10
0x4001ce9	          0x4889cf	                            mov rdi, rcx	       191	elf.c	FUNCTION_10
0x4001cec	    0xff90a8000000	                 call qword [rax + 0xa8]	       191	elf.c	FUNCTION_10
0x4001cf2	        0x4883c408	                              add rsp, 8	       192	elf.c	FUNCTION_10
0x4001cf6	              0xc3	                                     ret	       192	elf.c	FUNCTION_10
_bfd_elf_single_rel_hdr	FOR,0:ELSE,1:IF,1:WHILE,0:DO,0:SWITCH,0:CALL,5:functions,0	17
0x4005544	    0x488b87e00000	            mov rax, qword [rdi + 0xe0] 	      3050	elf.c	FUNCTION_44	IF_1	CALL_1
0x400554b	      0x4883785800	               cmp qword [rax + 0x58], 0	      3050	elf.c	FUNCTION_44	IF_1	CALL_1
0x4005550	            0x7427	                            je 0x4005579	      3050	elf.c	FUNCTION_44	IF_1	CALL_1
0x4005552	              0x53	                                push rbx	      3049	elf.c	FUNCTION_44
0x4005553	          0x4889fb	                            mov rbx, rdi	      3049	elf.c	FUNCTION_44
0x4005556	      0x4883787000	               cmp qword [rax + 0x70], 0	      3052	elf.c	FUNCTION_44	IF_1	CALL_3
0x400555b	            0x740f	                            je 0x400556c	      3052	elf.c	FUNCTION_44	IF_1	CALL_3
0x400555d	      0xbeec0b0000	                          mov esi, 0xbec	      3052	elf.c	FUNCTION_44	IF_1	CALL_3
0x4005562	      0xbf00000000	                              mov edi, 0	      3052	elf.c	FUNCTION_44	IF_1	CALL_3
0x4005567	      0xe800000000	                          call 0x400556c	      3052	elf.c	FUNCTION_44	IF_1	CALL_3
0x400556c	    0x488b83e00000	            mov rax, qword [rbx + 0xe0] 	      3053	elf.c	FUNCTION_44	IF_1	CALL_4
0x4005573	        0x488b4058	            mov rax, qword [rax + 0x58] 	      3053	elf.c	FUNCTION_44	IF_1	CALL_4
0x4005577	            0xeb05	                           jmp 0x400557e	      3053	elf.c	FUNCTION_44	IF_1	CALL_4
0x4005579	        0x488b4070	            mov rax, qword [rax + 0x70] 	      3056	elf.c	FUNCTION_44	CALL_5
0x400557d	              0xc3	                                     ret	      3056	elf.c	FUNCTION_44	CALL_5
0x400557e	              0x5b	                                 pop rbx	      3057	elf.c	FUNCTION_44
0x400557f	              0xc3	                                     ret	      3057	elf.c	FUNCTION_44
elfcore_write_s390_vxrs_high	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,1:functions,0	8
0x400fa2d	        0x4883ec10	                           sub rsp, 0x10	     10946	elf.c	FUNCTION_183
0x400fa31	          0x4989c9	                             mov r9, rcx	     10946	elf.c	FUNCTION_183
0x400fa34	            0x4150	                                 push r8	     10948	elf.c	FUNCTION_183	CALL_1
0x400fa36	    0x41b80a030000	                          mov r8d, 0x30a	     10948	elf.c	FUNCTION_183	CALL_1
0x400fa3c	      0xb900000000	                              mov ecx, 0	     10948	elf.c	FUNCTION_183	CALL_1
0x400fa41	      0xe800000000	                          call 0x400fa46	     10948	elf.c	FUNCTION_183	CALL_1
0x400fa46	        0x4883c418	                           add rsp, 0x18	     10951	elf.c	FUNCTION_183
0x400fa4a	              0xc3	                                     ret	     10951	elf.c	FUNCTION_183
_bfd_elf_fixup_group_sections	FOR,1:ELSE,2:IF,11:WHILE,1:DO,0:SWITCH,0:CALL,6:functions,0	80
0x4009e73	    0x488b97900000	            mov rdx, qword [rdi + 0x90] 	      7602	elf.c	FUNCTION_85	FOR_1
0x4009e7a	          0x4885d2	                           test rdx, rdx	      7602	elf.c	FUNCTION_85	FOR_1
0x4009e7d	     0xf843e010000	                            je 0x4009fc1	      7602	elf.c	FUNCTION_85	FOR_1
0x4009e83	    0x488b82e00000	            mov rax, qword [rdx + 0xe0] 	      7603	elf.c	FUNCTION_85	FOR_1	IF_1	CALL_1
0x4009e8a	        0x83780411	               cmp dword [rax + 4], 0x11	      7603	elf.c	FUNCTION_85	FOR_1	IF_1	CALL_1
0x4009e8e	     0xf8520010000	                           jne 0x4009fb4	      7603	elf.c	FUNCTION_85	FOR_1	IF_1	CALL_1
0x4009e94	    0x488bb8c00000	            mov rdi, qword [rax + 0xc0] 	      7605	elf.c	FUNCTION_85	FOR_1	IF_1	CALL_2
0x4009e9b	          0x4885ff	                           test rdi, rdi	      7609	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1
0x4009e9e	     0xf8410010000	                            je 0x4009fb4	      7609	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1
0x4009ea4	          0x4889f8	                            mov rax, rdi	      7609	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1
0x4009ea7	    0x41b800000000	                              mov r8d, 0	      7609	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1
0x4009ead	        0x488b4868	            mov rcx, qword [rax + 0x68] 	      7614	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2
0x4009eb1	          0x4839f1	                            cmp rcx, rsi	      7614	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2
0x4009eb4	            0x742d	                            je 0x4009ee3	      7614	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2
0x4009eb6	        0x483b7268	            cmp rsi, qword [rdx + 0x68] 	      7615	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2
0x4009eba	            0x7579	                           jne 0x4009f35	      7615	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2
0x4009ebc	    0x488b89e00000	            mov rcx, qword [rcx + 0xe0] 	      7617	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2	CALL_3
0x4009ec3	    0x48816108fffd	 and qword [rcx + 8], 0xfffffffffffffdff	      7617	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2	CALL_3
0x4009ecb	        0x488b4868	            mov rcx, qword [rax + 0x68] 	      7618	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2	CALL_4
0x4009ecf	    0x488b89e00000	            mov rcx, qword [rcx + 0xe0] 	      7618	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2	CALL_4
0x4009ed6	    0x48c781b00000	               mov qword [rcx + 0xb0], 0	      7618	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2	CALL_4
0x4009ee1	            0xeb52	                           jmp 0x4009f35	      7618	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_2	CALL_4
0x4009ee3	        0x483b7268	            cmp rsi, qword [rdx + 0x68] 	      7623	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3
0x4009ee7	            0x744c	                            je 0x4009f35	      7623	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3
0x4009ee9	    0x4c8b88e00000	              mov r9, qword [rax + 0xe0]	      7625	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	CALL_5
0x4009ef0	        0x4d8d5004	                       lea r10, [r8 + 4]	      7626	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3
0x4009ef4	        0x498b4958	              mov rcx, qword [r9 + 0x58]	      7627	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_4
0x4009ef8	          0x4885c9	                           test rcx, rcx	      7627	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_4
0x4009efb	            0x7417	                            je 0x4009f14	      7627	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_4
0x4009efd	        0x488b4908	                mov rcx, qword [rcx + 8]	      7628	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_4
0x4009f01	    0x81e100020000	                          and ecx, 0x200	      7628	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_4
0x4009f07	        0x4983c008	                               add r8, 8	      7629	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_4
0x4009f0b	          0x4885c9	                           test rcx, rcx	      7629	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_4
0x4009f0e	        0x4d0f44c2	                           cmove r8, r10	      7629	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_4
0x4009f12	            0xeb03	                           jmp 0x4009f17	      7629	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_4
0x4009f14	          0x4d89d0	                             mov r8, r10	      7626	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3
0x4009f17	        0x498b4970	              mov rcx, qword [r9 + 0x70]	      7630	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_5
0x4009f1b	          0x4885c9	                           test rcx, rcx	      7630	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_5
0x4009f1e	            0x7415	                            je 0x4009f35	      7630	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_5
0x4009f20	        0x488b4908	                mov rcx, qword [rcx + 8]	      7631	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_5
0x4009f24	    0x81e100020000	                          and ecx, 0x200	      7631	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_5
0x4009f2a	        0x4d8d4804	                        lea r9, [r8 + 4]	      7632	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_5
0x4009f2e	          0x4885c9	                           test rcx, rcx	      7632	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_5
0x4009f31	        0x4d0f45c1	                           cmovne r8, r9	      7632	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	ELSE_1	IF_3	IF_5
0x4009f35	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      7634	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	CALL_6
0x4009f3c	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      7634	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	CALL_6
0x4009f43	          0x4839c7	                            cmp rdi, rax	      7635	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_6
0x4009f46	            0x7409	                            je 0x4009f51	      7635	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1	IF_6
0x4009f48	          0x4885c0	                           test rax, rax	      7609	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1
0x4009f4b	     0xf855cffffff	                           jne 0x4009ead	      7609	elf.c	FUNCTION_85	FOR_1	IF_1	WHILE_1
0x4009f51	          0x4d85c0	                             test r8, r8	      7638	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7
0x4009f54	            0x745e	                            je 0x4009fb4	      7638	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7
0x4009f56	          0x4885f6	                           test rsi, rsi	      7640	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8
0x4009f59	            0x7433	                            je 0x4009f8e	      7640	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8
0x4009f5b	      0x48837a4000	               cmp qword [rdx + 0x40], 0	      7644	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_9
0x4009f60	            0x7508	                           jne 0x4009f6a	      7644	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_9
0x4009f62	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      7645	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_9
0x4009f66	        0x48894240	             mov qword [rdx + 0x40], rax	      7645	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_9
0x4009f6a	        0x488b4240	            mov rax, qword [rdx + 0x40] 	      7646	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8
0x4009f6e	          0x4c29c0	                             sub rax, r8	      7646	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8
0x4009f71	        0x4883f804	                              cmp rax, 4	      7647	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_10
0x4009f75	            0x7606	                           jbe 0x4009f7d	      7647	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_10
0x4009f77	        0x48894238	             mov qword [rdx + 0x38], rax	      7646	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8
0x4009f7b	            0xeb37	                           jmp 0x4009fb4	      7646	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8
0x4009f7d	    0x48c742380000	               mov qword [rdx + 0x38], 0	      7649	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_10
0x4009f85	    0x814a20008000	           or dword [rdx + 0x20], 0x8000	      7650	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_10
0x4009f8c	            0xeb26	                           jmp 0x4009fb4	      7650	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	IF_8	IF_10
0x4009f8e	        0x488b4268	            mov rax, qword [rdx + 0x68] 	      7657	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2
0x4009f92	        0x4c294038	              sub qword [rax + 0x38], r8	      7657	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2
0x4009f96	        0x488b4268	            mov rax, qword [rdx + 0x68] 	      7658	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2	IF_11
0x4009f9a	      0x4883783804	               cmp qword [rax + 0x38], 4	      7658	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2	IF_11
0x4009f9f	            0x7713	                            ja 0x4009fb4	      7658	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2	IF_11
0x4009fa1	    0x48c740380000	               mov qword [rax + 0x38], 0	      7660	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2	IF_11
0x4009fa9	        0x488b4268	            mov rax, qword [rdx + 0x68] 	      7661	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2	IF_11
0x4009fad	    0x814820008000	           or dword [rax + 0x20], 0x8000	      7661	elf.c	FUNCTION_85	FOR_1	IF_1	IF_7	ELSE_2	IF_11
0x4009fb4	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      7602	elf.c	FUNCTION_85	FOR_1
0x4009fb8	          0x4885d2	                           test rdx, rdx	      7602	elf.c	FUNCTION_85	FOR_1
0x4009fbb	     0xf85c2feffff	                           jne 0x4009e83	      7602	elf.c	FUNCTION_85	FOR_1
0x4009fc1	      0xb801000000	                              mov eax, 1	      7668	elf.c	FUNCTION_85
0x4009fc6	              0xc3	                                     ret	      7668	elf.c	FUNCTION_85
elfcore_grok_nto_note	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,1:CALL,4:functions,0	122
0x400d8cb	            0x4155	                                push r13	     10398	elf.c	FUNCTION_159
0x400d8cd	            0x4154	                                push r12	     10398	elf.c	FUNCTION_159
0x400d8cf	              0x55	                                push rbp	     10398	elf.c	FUNCTION_159
0x400d8d0	              0x53	                                push rbx	     10398	elf.c	FUNCTION_159
0x400d8d1	        0x4883ec78	                           sub rsp, 0x78	     10398	elf.c	FUNCTION_159
0x400d8d5	          0x4889fd	                            mov rbp, rdi	     10398	elf.c	FUNCTION_159
0x400d8d8	          0x4889f3	                            mov rbx, rsi	     10398	elf.c	FUNCTION_159
0x400d8db	    0x64488b042528	                mov rax, qword fs:[0x28]	     10398	elf.c	FUNCTION_159
0x400d8e4	      0x4889442468	             mov qword [rsp + 0x68], rax	     10398	elf.c	FUNCTION_159
0x400d8e9	            0x31c0	                            xor eax, eax	     10398	elf.c	FUNCTION_159
0x400d8eb	        0x488b4610	            mov rax, qword [rsi + 0x10] 	     10404	elf.c	FUNCTION_159	SWITCH_1
0x400d8ef	        0x4883f808	                              cmp rax, 8	     10404	elf.c	FUNCTION_159	SWITCH_1
0x400d8f3	            0x743c	                            je 0x400d931	     10404	elf.c	FUNCTION_159	SWITCH_1
0x400d8f5	        0x4883f808	                              cmp rax, 8	     10404	elf.c	FUNCTION_159	SWITCH_1
0x400d8f9	            0x770b	                            ja 0x400d906	     10404	elf.c	FUNCTION_159	SWITCH_1
0x400d8fb	        0x4883f807	                              cmp rax, 7	     10404	elf.c	FUNCTION_159	SWITCH_1
0x400d8ff	            0x741e	                            je 0x400d91f	     10404	elf.c	FUNCTION_159	SWITCH_1
0x400d901	      0xe99b010000	                           jmp 0x400daa1	     10404	elf.c	FUNCTION_159	SWITCH_1
0x400d906	        0x4883f809	                              cmp rax, 9	     10404	elf.c	FUNCTION_159	SWITCH_1
0x400d90a	     0xf846b010000	                            je 0x400da7b	     10404	elf.c	FUNCTION_159	SWITCH_1
0x400d910	        0x4883f80a	                            cmp rax, 0xa	     10404	elf.c	FUNCTION_159	SWITCH_1
0x400d914	     0xf8474010000	                            je 0x400da8e	     10404	elf.c	FUNCTION_159	SWITCH_1
0x400d91a	      0xe982010000	                           jmp 0x400daa1	     10404	elf.c	FUNCTION_159	SWITCH_1
0x400d91f	          0x4889f2	                            mov rdx, rsi	     10407	elf.c	FUNCTION_159	SWITCH_1	CALL_1
0x400d922	      0xbe00000000	                              mov esi, 0	     10407	elf.c	FUNCTION_159	SWITCH_1	CALL_1
0x400d927	      0xe889ffffff	call sym.elfcore_make_note_pseudosection	     10407	elf.c	FUNCTION_159	SWITCH_1	CALL_1
0x400d92c	      0xe975010000	                           jmp 0x400daa6	     10407	elf.c	FUNCTION_159	SWITCH_1	CALL_1
0x400d931	      0xb800000000	                              mov eax, 0	     10315	elf.c	FUNCTION_157	IF_1
0x400d936	      0x48837e080f	                cmp qword [rsi + 8], 0xf	     10314	elf.c	FUNCTION_157	IF_1
0x400d93b	     0xf8665010000	                           jbe 0x400daa6	     10314	elf.c	FUNCTION_157	IF_1
0x400d941	        0x4c8b6620	            mov r12, qword [rsi + 0x20] 	     10307	elf.c	FUNCTION_157
0x400d945	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	     10318	elf.c	FUNCTION_157	CALL_1
0x400d94c	    0x4c8ba8900c00	           mov r13, qword [rax + 0xc90] 	     10318	elf.c	FUNCTION_157	CALL_1
0x400d953	        0x488b4708	                mov rax, qword [rdi + 8]	     10318	elf.c	FUNCTION_157	CALL_1
0x400d957	          0x4c89e7	                            mov rdi, r12	     10318	elf.c	FUNCTION_157	CALL_1
0x400d95a	          0xff5038	                 call qword [rax + 0x38]	     10318	elf.c	FUNCTION_157	CALL_1
0x400d95d	        0x41894504	                mov dword [r13 + 4], eax	     10318	elf.c	FUNCTION_157	CALL_1
0x400d961	      0x498d7c2404	                      lea rdi, [r12 + 4]	     10321	elf.c	FUNCTION_157
0x400d966	        0x488b4508	                mov rax, qword [rbp + 8]	     10321	elf.c	FUNCTION_157
0x400d96a	          0xff5038	                 call qword [rax + 0x38]	     10321	elf.c	FUNCTION_157
0x400d96d	    0x488905000000	            mov qword [0x0400d974], rax 	     10321	elf.c	FUNCTION_157
0x400d974	      0x498d7c2408	                      lea rdi, [r12 + 8]	     10324	elf.c	FUNCTION_157
0x400d979	        0x488b4508	                mov rax, qword [rbp + 8]	     10324	elf.c	FUNCTION_157
0x400d97d	          0xff5038	                 call qword [rax + 0x38]	     10324	elf.c	FUNCTION_157
0x400d980	          0x4989c5	                            mov r13, rax	     10324	elf.c	FUNCTION_157
0x400d983	      0x498d7c240e	                    lea rdi, [r12 + 0xe]	     10327	elf.c	FUNCTION_157	IF_2
0x400d988	        0x488b4508	                mov rax, qword [rbp + 8]	     10327	elf.c	FUNCTION_157	IF_2
0x400d98c	          0xff5050	                 call qword [rax + 0x50]	     10327	elf.c	FUNCTION_157	IF_2
0x400d98f	          0x6685c0	                             test ax, ax	     10327	elf.c	FUNCTION_157	IF_2
0x400d992	            0x7e29	                           jle 0x400d9bd	     10327	elf.c	FUNCTION_157	IF_2
0x400d994	    0x488b95f80000	            mov rdx, qword [rbp + 0xf8] 	     10329	elf.c	FUNCTION_157	IF_2	CALL_2
0x400d99b	    0x488b92900c00	           mov rdx, qword [rdx + 0xc90] 	     10329	elf.c	FUNCTION_157	IF_2	CALL_2
0x400d9a2	              0x98	                                    cwde	     10329	elf.c	FUNCTION_157	IF_2	CALL_2
0x400d9a3	            0x8902	                    mov dword [rdx], eax	     10329	elf.c	FUNCTION_157	IF_2	CALL_2
0x400d9a5	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	     10330	elf.c	FUNCTION_157	IF_2	CALL_3
0x400d9ac	    0x488b80900c00	           mov rax, qword [rax + 0xc90] 	     10330	elf.c	FUNCTION_157	IF_2	CALL_3
0x400d9b3	    0x488b15000000	            mov rdx, qword [0x0400d9ba] 	     10330	elf.c	FUNCTION_157	IF_2	CALL_3
0x400d9ba	          0x895008	                mov dword [rax + 8], edx	     10330	elf.c	FUNCTION_157	IF_2	CALL_3
0x400d9bd	        0x41f6c580	                         test r13b, 0x80	     10336	elf.c	FUNCTION_157	IF_3
0x400d9c1	            0x7418	                            je 0x400d9db	     10336	elf.c	FUNCTION_157	IF_3
0x400d9c3	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	     10337	elf.c	FUNCTION_157	CALL_4
0x400d9ca	    0x488b80900c00	           mov rax, qword [rax + 0xc90] 	     10337	elf.c	FUNCTION_157	CALL_4
0x400d9d1	    0x488b15000000	            mov rdx, qword [0x0400d9d8] 	     10337	elf.c	FUNCTION_157	CALL_4
0x400d9d8	          0x895008	                mov dword [rax + 8], edx	     10337	elf.c	FUNCTION_157	CALL_4
0x400d9db	    0x4c8b05000000	              mov r8, qword [0x0400d9e2]	        33	stdio2.h	FUNCTION_204	CALL_1
0x400d9e2	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x400d9e7	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_204	CALL_1
0x400d9ec	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_204	CALL_1
0x400d9f1	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_204	CALL_1
0x400d9f4	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x400d9f9	      0xe800000000	                          call 0x400d9fe	        33	stdio2.h	FUNCTION_204	CALL_1
0x400d9fe	      0xb800000000	                              mov eax, 0	     10342	elf.c	FUNCTION_157	CALL_6
0x400da03	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	     10342	elf.c	FUNCTION_157	CALL_6
0x400da0a	          0x4889e7	                            mov rdi, rsp	     10342	elf.c	FUNCTION_157	CALL_6
0x400da0d	            0xf2ae	              repne scasb al, byte [rdi]	     10342	elf.c	FUNCTION_157	CALL_6
0x400da0f	          0x48f7d1	                                 not rcx	     10342	elf.c	FUNCTION_157	CALL_6
0x400da12	          0x4889ce	                            mov rsi, rcx	     10342	elf.c	FUNCTION_157	CALL_6
0x400da15	          0x4889ef	                            mov rdi, rbp	     10342	elf.c	FUNCTION_157	CALL_6
0x400da18	      0xe800000000	                          call 0x400da1d	     10342	elf.c	FUNCTION_157	CALL_6
0x400da1d	          0x4989c4	                            mov r12, rax	     10342	elf.c	FUNCTION_157	CALL_6
0x400da20	      0xb800000000	                              mov eax, 0	     10344	elf.c	FUNCTION_157	IF_4
0x400da25	          0x4d85e4	                           test r12, r12	     10343	elf.c	FUNCTION_157	IF_4
0x400da28	            0x747c	                            je 0x400daa6	     10343	elf.c	FUNCTION_157	IF_4
0x400da2a	          0x4889e6	                            mov rsi, rsp	       110	string3.h	FUNCTION_227	CALL_3
0x400da2d	          0x4c89e7	                            mov rdi, r12	       110	string3.h	FUNCTION_227	CALL_3
0x400da30	      0xe800000000	                          call 0x400da35	       110	string3.h	FUNCTION_227	CALL_3
0x400da35	      0xba00010000	                          mov edx, 0x100	     10347	elf.c	FUNCTION_157	CALL_8
0x400da3a	          0x4c89e6	                            mov rsi, r12	     10347	elf.c	FUNCTION_157	CALL_8
0x400da3d	          0x4889ef	                            mov rdi, rbp	     10347	elf.c	FUNCTION_157	CALL_8
0x400da40	      0xe800000000	                          call 0x400da45	     10347	elf.c	FUNCTION_157	CALL_8
0x400da45	          0x4889c2	                            mov rdx, rax	     10347	elf.c	FUNCTION_157	CALL_8
0x400da48	      0xb800000000	                              mov eax, 0	     10349	elf.c	FUNCTION_157	IF_5
0x400da4d	          0x4885d2	                           test rdx, rdx	     10348	elf.c	FUNCTION_157	IF_5
0x400da50	            0x7454	                            je 0x400daa6	     10348	elf.c	FUNCTION_157	IF_5
0x400da52	        0x488b4308	                mov rax, qword [rbx + 8]	     10351	elf.c	FUNCTION_157
0x400da56	        0x48894238	             mov qword [rdx + 0x38], rax	     10351	elf.c	FUNCTION_157
0x400da5a	        0x488b4328	            mov rax, qword [rbx + 0x28] 	     10352	elf.c	FUNCTION_157
0x400da5e	    0x488982900000	             mov qword [rdx + 0x90], rax	     10352	elf.c	FUNCTION_157
0x400da65	    0xc74270020000	               mov dword [rdx + 0x70], 2	     10353	elf.c	FUNCTION_157
0x400da6c	      0xbe00000000	                              mov esi, 0	     10355	elf.c	FUNCTION_157	CALL_9
0x400da71	          0x4889ef	                            mov rdi, rbp	     10355	elf.c	FUNCTION_157	CALL_9
0x400da74	      0xe82731ffff	        call sym.elfcore_maybe_make_sect	     10355	elf.c	FUNCTION_157	CALL_9
0x400da79	            0xeb2b	                           jmp 0x400daa6	     10355	elf.c	FUNCTION_157	CALL_9
0x400da7b	      0xb900000000	                              mov ecx, 0	     10411	elf.c	FUNCTION_159	SWITCH_1	CALL_3
0x400da80	    0x488b15000000	            mov rdx, qword [0x0400da87] 	     10411	elf.c	FUNCTION_159	SWITCH_1	CALL_3
0x400da87	      0xe87831ffff	          call sym.elfcore_grok_nto_regs	     10411	elf.c	FUNCTION_159	SWITCH_1	CALL_3
0x400da8c	            0xeb18	                           jmp 0x400daa6	     10411	elf.c	FUNCTION_159	SWITCH_1	CALL_3
0x400da8e	      0xb900000000	                              mov ecx, 0	     10413	elf.c	FUNCTION_159	SWITCH_1	CALL_4
0x400da93	    0x488b15000000	            mov rdx, qword [0x0400da9a] 	     10413	elf.c	FUNCTION_159	SWITCH_1	CALL_4
0x400da9a	      0xe86531ffff	          call sym.elfcore_grok_nto_regs	     10413	elf.c	FUNCTION_159	SWITCH_1	CALL_4
0x400da9f	            0xeb05	                           jmp 0x400daa6	     10413	elf.c	FUNCTION_159	SWITCH_1	CALL_4
0x400daa1	      0xb801000000	                              mov eax, 1	     10415	elf.c	FUNCTION_159	SWITCH_1
0x400daa6	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	     10417	elf.c	FUNCTION_159
0x400daab	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     10417	elf.c	FUNCTION_159
0x400dab4	            0x7405	                            je 0x400dabb	     10417	elf.c	FUNCTION_159
0x400dab6	      0xe800000000	                          call 0x400dabb	     10417	elf.c	FUNCTION_159
0x400dabb	        0x4883c478	                           add rsp, 0x78	     10417	elf.c	FUNCTION_159
0x400dabf	              0x5b	                                 pop rbx	     10417	elf.c	FUNCTION_159
0x400dac0	              0x5d	                                 pop rbp	     10417	elf.c	FUNCTION_159
0x400dac1	            0x415c	                                 pop r12	     10417	elf.c	FUNCTION_159
0x400dac3	            0x415d	                                 pop r13	     10417	elf.c	FUNCTION_159
0x400dac5	              0xc3	                                     ret	     10417	elf.c	FUNCTION_159
_bfd_elf_rela_local_sym	FOR,0:ELSE,0:IF,3:WHILE,0:DO,0:SWITCH,0:CALL,3:functions,0	52
0x400ffcb	            0x4155	                                push r13	     11273	elf.c	FUNCTION_196
0x400ffcd	            0x4154	                                push r12	     11273	elf.c	FUNCTION_196
0x400ffcf	              0x55	                                push rbp	     11273	elf.c	FUNCTION_196
0x400ffd0	              0x53	                                push rbx	     11273	elf.c	FUNCTION_196
0x400ffd1	        0x4883ec08	                              sub rsp, 8	     11273	elf.c	FUNCTION_196
0x400ffd5	          0x488b2a	                    mov rbp, qword [rdx]	     11274	elf.c	FUNCTION_196
0x400ffd8	          0x4c8b06	                     mov r8, qword [rsi]	     11279	elf.c	FUNCTION_196
0x400ffdb	        0x488b4568	            mov rax, qword [rbp + 0x68] 	     11277	elf.c	FUNCTION_196
0x400ffdf	        0x488b5d60	            mov rbx, qword [rbp + 0x60] 	     11277	elf.c	FUNCTION_196
0x400ffe3	        0x48035828	             add rbx, qword [rax + 0x28]	     11277	elf.c	FUNCTION_196
0x400ffe7	          0x4c01c3	                             add rbx, r8	     11277	elf.c	FUNCTION_196
0x400ffea	        0xf6452280	           test byte [rbp + 0x22], 0x80 	     11280	elf.c	FUNCTION_196	IF_1
0x400ffee	            0x747d	                            je 0x401006d	     11280	elf.c	FUNCTION_196	IF_1
0x400fff0	         0xfb64618	           movzx eax, byte [rsi + 0x18] 	     11281	elf.c	FUNCTION_196	IF_1	CALL_1
0x400fff4	          0x83e00f	                            and eax, 0xf	     11281	elf.c	FUNCTION_196	IF_1	CALL_1
0x400fff7	            0x3c03	                               cmp al, 3	     11281	elf.c	FUNCTION_196	IF_1	CALL_1
0x400fff9	            0x7572	                           jne 0x401006d	     11281	elf.c	FUNCTION_196	IF_1	CALL_1
0x400fffb	         0xfb74524	           movzx eax, word [rbp + 0x24] 	     11282	elf.c	FUNCTION_196	IF_1
0x400ffff	        0x66258003	                           and ax, 0x380	     11282	elf.c	FUNCTION_196	IF_1
0x4010003	        0x663d0001	                           cmp ax, 0x100	     11282	elf.c	FUNCTION_196	IF_1
0x4010007	            0x7564	                           jne 0x401006d	     11282	elf.c	FUNCTION_196	IF_1
0x4010009	          0x4989cc	                            mov r12, rcx	     11282	elf.c	FUNCTION_196	IF_1
0x401000c	          0x4989d5	                            mov r13, rdx	     11282	elf.c	FUNCTION_196	IF_1
0x401000f	          0x4c89c1	                             mov rcx, r8	     11285	elf.c	FUNCTION_196	IF_1	CALL_2
0x4010012	      0x49034c2410	             add rcx, qword [r12 + 0x10]	     11285	elf.c	FUNCTION_196	IF_1	CALL_2
0x4010017	    0x488b85e00000	            mov rax, qword [rbp + 0xe0] 	     11285	elf.c	FUNCTION_196	IF_1	CALL_2
0x401001e	    0x488b90d80000	            mov rdx, qword [rax + 0xd8] 	     11285	elf.c	FUNCTION_196	IF_1	CALL_2
0x4010025	          0x4c89ee	                            mov rsi, r13	     11285	elf.c	FUNCTION_196	IF_1	CALL_2
0x4010028	      0xe800000000	                          call 0x401002d	     11285	elf.c	FUNCTION_196	IF_1	CALL_2
0x401002d	      0x4989442410	             mov qword [r12 + 0x10], rax	     11284	elf.c	FUNCTION_196	IF_1
0x4010032	        0x498b5500	                    mov rdx, qword [r13]	     11288	elf.c	FUNCTION_196	IF_1	IF_2
0x4010036	          0x4839d5	                            cmp rbp, rdx	     11288	elf.c	FUNCTION_196	IF_1	IF_2
0x4010039	            0x7411	                            je 0x401004c	     11288	elf.c	FUNCTION_196	IF_1	IF_2
0x401003b	        0xf6452180	           test byte [rbp + 0x21], 0x80 	     11295	elf.c	FUNCTION_196	IF_1	IF_2	IF_3
0x401003f	            0x7407	                            je 0x4010048	     11295	elf.c	FUNCTION_196	IF_1	IF_2	IF_3
0x4010041	    0x488995c80000	            mov qword [rbp + 0xc8], rdx 	     11296	elf.c	FUNCTION_196	IF_1	IF_2	IF_3
0x4010048	        0x498b5500	                    mov rdx, qword [r13]	     11297	elf.c	FUNCTION_196	IF_1	IF_2
0x401004c	      0x498b442410	            mov rax, qword [r12 + 0x10] 	     11299	elf.c	FUNCTION_196	IF_1
0x4010051	          0x4829d8	                            sub rax, rbx	     11299	elf.c	FUNCTION_196	IF_1
0x4010054	      0x4989442410	             mov qword [r12 + 0x10], rax	     11299	elf.c	FUNCTION_196	IF_1
0x4010059	        0x488b4a68	            mov rcx, qword [rdx + 0x68] 	     11300	elf.c	FUNCTION_196	IF_1
0x401005d	        0x488b5260	            mov rdx, qword [rdx + 0x60] 	     11300	elf.c	FUNCTION_196	IF_1
0x4010061	        0x48035128	             add rdx, qword [rcx + 0x28]	     11300	elf.c	FUNCTION_196	IF_1
0x4010065	          0x4801d0	                            add rax, rdx	     11300	elf.c	FUNCTION_196	IF_1
0x4010068	      0x4989442410	             mov qword [r12 + 0x10], rax	     11300	elf.c	FUNCTION_196	IF_1
0x401006d	          0x4889d8	                            mov rax, rbx	     11303	elf.c	FUNCTION_196
0x4010070	        0x4883c408	                              add rsp, 8	     11303	elf.c	FUNCTION_196
0x4010074	              0x5b	                                 pop rbx	     11303	elf.c	FUNCTION_196
0x4010075	              0x5d	                                 pop rbp	     11303	elf.c	FUNCTION_196
0x4010076	            0x415c	                                 pop r12	     11303	elf.c	FUNCTION_196
0x4010078	            0x415d	                                 pop r13	     11303	elf.c	FUNCTION_196
0x401007a	              0xc3	                                     ret	     11303	elf.c	FUNCTION_196
_bfd_elf_get_symbol_info	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,1:functions,0	6
0x400d1be	        0x4883ec08	                              sub rsp, 8	      8637	elf.c	FUNCTION_99
0x400d1c2	          0x4889f7	                            mov rdi, rsi	      8637	elf.c	FUNCTION_99
0x400d1c5	          0x4889d6	                            mov rsi, rdx	      8638	elf.c	FUNCTION_99	CALL_1
0x400d1c8	      0xe800000000	                          call 0x400d1cd	      8638	elf.c	FUNCTION_99	CALL_1
0x400d1cd	        0x4883c408	                              add rsp, 8	      8639	elf.c	FUNCTION_99
0x400d1d1	              0xc3	                                     ret	      8639	elf.c	FUNCTION_99
_bfd_elf_make_empty_symbol	FOR,0:ELSE,0:IF,1:WHILE,0:DO,0:SWITCH,0:CALL,1:functions,0	9
0x400d1a6	              0x53	                                push rbx	      8623	elf.c	FUNCTION_98
0x400d1a7	          0x4889fb	                            mov rbx, rdi	      8623	elf.c	FUNCTION_98
0x400d1aa	      0xbe60000000	                           mov esi, 0x60	      8626	elf.c	FUNCTION_98	CALL_1
0x400d1af	      0xe800000000	                          call 0x400d1b4	      8626	elf.c	FUNCTION_98	CALL_1
0x400d1b4	          0x4885c0	                           test rax, rax	      8627	elf.c	FUNCTION_98	IF_1
0x400d1b7	            0x7403	                            je 0x400d1bc	      8627	elf.c	FUNCTION_98	IF_1
0x400d1b9	          0x488918	                    mov qword [rax], rbx	      8629	elf.c	FUNCTION_98
0x400d1bc	              0x5b	                                 pop rbx	      8631	elf.c	FUNCTION_98
0x400d1bd	              0xc3	                                     ret	      8631	elf.c	FUNCTION_98
elfcore_write_s390_gs_cb	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,1:functions,0	8
0x400fa4b	        0x4883ec10	                           sub rsp, 0x10	     10959	elf.c	FUNCTION_184
0x400fa4f	          0x4989c9	                             mov r9, rcx	     10959	elf.c	FUNCTION_184
0x400fa52	            0x4150	                                 push r8	     10961	elf.c	FUNCTION_184	CALL_1
0x400fa54	    0x41b80b030000	                          mov r8d, 0x30b	     10961	elf.c	FUNCTION_184	CALL_1
0x400fa5a	      0xb900000000	                              mov ecx, 0	     10961	elf.c	FUNCTION_184	CALL_1
0x400fa5f	      0xe800000000	                          call 0x400fa64	     10961	elf.c	FUNCTION_184	CALL_1
0x400fa64	        0x4883c418	                           add rsp, 0x18	     10964	elf.c	FUNCTION_184
0x400fa68	              0xc3	                                     ret	     10964	elf.c	FUNCTION_184
_bfd_elf_find_inliner_info	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,2:functions,0	6
0x400d490	        0x4883ec08	                              sub rsp, 8	      8807	elf.c	FUNCTION_105
0x400d494	    0x4c8b87f80000	              mov r8, qword [rdi + 0xf8]	      8809	elf.c	FUNCTION_105	CALL_1
0x400d49b	    0x4981c0300300	                           add r8, 0x330	      8809	elf.c	FUNCTION_105	CALL_1
0x400d4a2	      0xe800000000	                          call 0x400d4a7	      8809	elf.c	FUNCTION_105	CALL_1
0x400d4a7	        0x4883c408	                              add rsp, 8	      8813	elf.c	FUNCTION_105
0x400d4ab	              0xc3	                                     ret	      8813	elf.c	FUNCTION_105
elfcore_write_prxfpreg	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,1:functions,0	8
0x400f88f	        0x4883ec10	                           sub rsp, 0x10	     10774	elf.c	FUNCTION_169
0x400f893	          0x4989c9	                             mov r9, rcx	     10774	elf.c	FUNCTION_169
0x400f896	            0x4150	                                 push r8	     10776	elf.c	FUNCTION_169	CALL_1
0x400f898	    0x41b87f2be646	                     mov r8d, 0x46e62b7f	     10776	elf.c	FUNCTION_169	CALL_1
0x400f89e	      0xb900000000	                              mov ecx, 0	     10776	elf.c	FUNCTION_169	CALL_1
0x400f8a3	      0xe800000000	                          call 0x400f8a8	     10776	elf.c	FUNCTION_169	CALL_1
0x400f8a8	        0x4883c418	                           add rsp, 0x18	     10778	elf.c	FUNCTION_169
0x400f8ac	              0xc3	                                     ret	     10778	elf.c	FUNCTION_169
_bfd_elf_swap_vernaux_out	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,0:functions,0	30
0x4001c54	            0x4154	                                push r12	       166	elf.c	FUNCTION_8
0x4001c56	              0x55	                                push rbp	       166	elf.c	FUNCTION_8
0x4001c57	              0x53	                                push rbx	       166	elf.c	FUNCTION_8
0x4001c58	          0x4889fd	                            mov rbp, rdi	       166	elf.c	FUNCTION_8
0x4001c5b	          0x4989f4	                            mov r12, rsi	       166	elf.c	FUNCTION_8
0x4001c5e	          0x4889d3	                            mov rbx, rdx	       166	elf.c	FUNCTION_8
0x4001c61	        0x488b4708	                mov rax, qword [rdi + 8]	       167	elf.c	FUNCTION_8
0x4001c65	          0x4889d6	                            mov rsi, rdx	       167	elf.c	FUNCTION_8
0x4001c68	        0x498b3c24	                    mov rdi, qword [r12]	       167	elf.c	FUNCTION_8
0x4001c6c	    0xff9090000000	                 call qword [rax + 0x90]	       167	elf.c	FUNCTION_8
0x4001c72	        0x488d7304	                      lea rsi, [rbx + 4]	       168	elf.c	FUNCTION_8
0x4001c76	    0x410fb77c2408	               movzx edi, word [r12 + 8]	       168	elf.c	FUNCTION_8
0x4001c7c	        0x488b4508	                mov rax, qword [rbp + 8]	       168	elf.c	FUNCTION_8
0x4001c80	    0xff90a8000000	                 call qword [rax + 0xa8]	       168	elf.c	FUNCTION_8
0x4001c86	        0x488d7306	                      lea rsi, [rbx + 6]	       169	elf.c	FUNCTION_8
0x4001c8a	    0x410fb77c240a	            movzx edi, word [r12 + 0xa] 	       169	elf.c	FUNCTION_8
0x4001c90	        0x488b4508	                mov rax, qword [rbp + 8]	       169	elf.c	FUNCTION_8
0x4001c94	    0xff90a8000000	                 call qword [rax + 0xa8]	       169	elf.c	FUNCTION_8
0x4001c9a	        0x488d7308	                      lea rsi, [rbx + 8]	       170	elf.c	FUNCTION_8
0x4001c9e	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	       170	elf.c	FUNCTION_8
0x4001ca3	        0x488b4508	                mov rax, qword [rbp + 8]	       170	elf.c	FUNCTION_8
0x4001ca7	    0xff9090000000	                 call qword [rax + 0x90]	       170	elf.c	FUNCTION_8
0x4001cad	        0x488d730c	                    lea rsi, [rbx + 0xc]	       171	elf.c	FUNCTION_8
0x4001cb1	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	       171	elf.c	FUNCTION_8
0x4001cb6	        0x488b4508	                mov rax, qword [rbp + 8]	       171	elf.c	FUNCTION_8
0x4001cba	    0xff9090000000	                 call qword [rax + 0x90]	       171	elf.c	FUNCTION_8
0x4001cc0	              0x5b	                                 pop rbx	       172	elf.c	FUNCTION_8
0x4001cc1	              0x5d	                                 pop rbp	       172	elf.c	FUNCTION_8
0x4001cc2	            0x415c	                                 pop r12	       172	elf.c	FUNCTION_8
0x4001cc4	              0xc3	                                     ret	       172	elf.c	FUNCTION_8
elfcore_write_s390_prefix	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,1:functions,0	8
0x400f997	        0x4883ec10	                           sub rsp, 0x10	     10884	elf.c	FUNCTION_178
0x400f99b	          0x4989c9	                             mov r9, rcx	     10884	elf.c	FUNCTION_178
0x400f99e	            0x4150	                                 push r8	     10886	elf.c	FUNCTION_178	CALL_1
0x400f9a0	    0x41b805030000	                          mov r8d, 0x305	     10886	elf.c	FUNCTION_178	CALL_1
0x400f9a6	      0xb900000000	                              mov ecx, 0	     10886	elf.c	FUNCTION_178	CALL_1
0x400f9ab	      0xe800000000	                          call 0x400f9b0	     10886	elf.c	FUNCTION_178	CALL_1
0x400f9b0	        0x4883c418	                           add rsp, 0x18	     10888	elf.c	FUNCTION_178
0x400f9b4	              0xc3	                                     ret	     10888	elf.c	FUNCTION_178
bfd_elf_make_object	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,2:functions,0	8
0x4001e11	        0x4883ec08	                              sub rsp, 8	       261	elf.c	FUNCTION_14
0x4001e15	        0x488b4708	                mov rax, qword [rdi + 8]	       262	elf.c	FUNCTION_14	CALL_1
0x4001e19	    0x488b80680300	           mov rax, qword [rax + 0x368] 	       263	elf.c	FUNCTION_14	CALL_2
0x4001e20	          0x8b5004	                mov edx, dword [rax + 4]	       263	elf.c	FUNCTION_14	CALL_2
0x4001e23	      0xbea00c0000	                          mov esi, 0xca0	       263	elf.c	FUNCTION_14	CALL_2
0x4001e28	      0xe800000000	                          call 0x4001e2d	       263	elf.c	FUNCTION_14	CALL_2
0x4001e2d	        0x4883c408	                              add rsp, 8	       265	elf.c	FUNCTION_14
0x4001e31	              0xc3	                                     ret	       265	elf.c	FUNCTION_14
convert_debug_to_zdebug	FOR,0:ELSE,0:IF,1:WHILE,0:DO,0:SWITCH,0:CALL,3:functions,0	28
0x4000953	            0x4154	                                push r12	       968	elf.c	FUNCTION_24
0x4000955	              0x55	                                push rbp	       968	elf.c	FUNCTION_24
0x4000956	              0x53	                                push rbx	       968	elf.c	FUNCTION_24
0x4000957	          0x4989f8	                             mov r8, rdi	       968	elf.c	FUNCTION_24
0x400095a	          0x4889f5	                            mov rbp, rsi	       968	elf.c	FUNCTION_24
0x400095d	      0xb800000000	                              mov eax, 0	       969	elf.c	FUNCTION_24	CALL_1
0x4000962	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       969	elf.c	FUNCTION_24	CALL_1
0x4000969	          0x4889f7	                            mov rdi, rsi	       969	elf.c	FUNCTION_24	CALL_1
0x400096c	            0xf2ae	              repne scasb al, byte [rdi]	       969	elf.c	FUNCTION_24	CALL_1
0x400096e	          0x48f7d1	                                 not rcx	       969	elf.c	FUNCTION_24	CALL_1
0x4000971	        0x488d59ff	                      lea rbx, [rcx - 1]	       969	elf.c	FUNCTION_24	CALL_1
0x4000975	          0x8d7302	                      lea esi, [rbx + 2]	       970	elf.c	FUNCTION_24	CALL_2
0x4000978	          0x4c89c7	                             mov rdi, r8	       970	elf.c	FUNCTION_24	CALL_2
0x400097b	      0xe800000000	                          call 0x4000980	       970	elf.c	FUNCTION_24	CALL_2
0x4000980	          0x4989c4	                            mov r12, rax	       970	elf.c	FUNCTION_24	CALL_2
0x4000983	          0x4885c0	                           test rax, rax	       971	elf.c	FUNCTION_24	IF_1
0x4000986	            0x7416	                            je 0x400099e	       971	elf.c	FUNCTION_24	IF_1
0x4000988	          0xc6002e	                    mov byte [rax], 0x2e	       973	elf.c	FUNCTION_24
0x400098b	        0xc640017a	                mov byte [rax + 1], 0x7a	       974	elf.c	FUNCTION_24
0x400098f	        0x488d7802	                      lea rdi, [rax + 2]	        53	string3.h	FUNCTION_221	CALL_3
0x4000993	            0x89da	                            mov edx, ebx	        53	string3.h	FUNCTION_221	CALL_3
0x4000995	        0x488d7501	                      lea rsi, [rbp + 1]	        53	string3.h	FUNCTION_221	CALL_3
0x4000999	      0xe800000000	                          call 0x400099e	        53	string3.h	FUNCTION_221	CALL_3
0x400099e	          0x4c89e0	                            mov rax, r12	       977	elf.c	FUNCTION_24
0x40009a1	              0x5b	                                 pop rbx	       977	elf.c	FUNCTION_24
0x40009a2	              0x5d	                                 pop rbp	       977	elf.c	FUNCTION_24
0x40009a3	            0x415c	                                 pop r12	       977	elf.c	FUNCTION_24
0x40009a5	              0xc3	                                     ret	       977	elf.c	FUNCTION_24
_bfd_elf_new_section_hook	FOR,0:ELSE,0:IF,4:WHILE,0:DO,0:SWITCH,0:CALL,5:functions,0	56
0x4004f83	              0x55	                                push rbp	      2834	elf.c	FUNCTION_41
0x4004f84	              0x53	                                push rbx	      2834	elf.c	FUNCTION_41
0x4004f85	        0x4883ec08	                              sub rsp, 8	      2834	elf.c	FUNCTION_41
0x4004f89	          0x4889fd	                            mov rbp, rdi	      2834	elf.c	FUNCTION_41
0x4004f8c	          0x4889f3	                            mov rbx, rsi	      2834	elf.c	FUNCTION_41
0x4004f8f	    0x4883bee00000	               cmp qword [rsi + 0xe0], 0	      2840	elf.c	FUNCTION_41	IF_1
0x4004f97	            0x751a	                           jne 0x4004fb3	      2840	elf.c	FUNCTION_41	IF_1
0x4004f99	      0xbee0000000	                           mov esi, 0xe0	      2842	elf.c	FUNCTION_41	IF_1	CALL_1
0x4004f9e	      0xe800000000	                          call 0x4004fa3	      2842	elf.c	FUNCTION_41	IF_1	CALL_1
0x4004fa3	          0x4885c0	                           test rax, rax	      2844	elf.c	FUNCTION_41	IF_1	IF_2
0x4004fa6	     0xf8490000000	                            je 0x400503c	      2844	elf.c	FUNCTION_41	IF_1	IF_2
0x4004fac	    0x488983e00000	             mov qword [rbx + 0xe0], rax	      2846	elf.c	FUNCTION_41	IF_1
0x4004fb3	        0x488b4508	                mov rax, qword [rbp + 8]	      2850	elf.c	FUNCTION_41	CALL_2
0x4004fb7	    0x488b88680300	           mov rcx, qword [rax + 0x368] 	      2850	elf.c	FUNCTION_41	CALL_2
0x4004fbe	     0xfb681880300	          movzx eax, byte [rcx + 0x388] 	      2851	elf.c	FUNCTION_41
0x4004fc5	          0xc0e802	                               shr al, 2	      2851	elf.c	FUNCTION_41
0x4004fc8	          0x83e004	                              and eax, 4	      2851	elf.c	FUNCTION_41
0x4004fcb	         0xfb65325	           movzx edx, byte [rbx + 0x25] 	      2851	elf.c	FUNCTION_41
0x4004fcf	          0x83e2fb	                     and edx, 0xfffffffb	      2851	elf.c	FUNCTION_41
0x4004fd2	             0x9d0	                             or eax, edx	      2851	elf.c	FUNCTION_41
0x4004fd4	          0x884325	               mov byte [rbx + 0x25], al	      2851	elf.c	FUNCTION_41
0x4004fd7	         0xfb64544	           movzx eax, byte [rbp + 0x44] 	      2862	elf.c	FUNCTION_41	IF_3
0x4004fdb	          0x83e018	                           and eax, 0x18	      2862	elf.c	FUNCTION_41	IF_3
0x4004fde	            0x3c08	                               cmp al, 8	      2862	elf.c	FUNCTION_41	IF_3
0x4004fe0	            0x7506	                           jne 0x4004fe8	      2862	elf.c	FUNCTION_41	IF_3
0x4004fe2	        0xf6432210	           test byte [rbx + 0x22], 0x10 	      2863	elf.c	FUNCTION_41	IF_3
0x4004fe6	            0x7447	                            je 0x400502f	      2863	elf.c	FUNCTION_41	IF_3
0x4004fe8	          0x4889de	                            mov rsi, rbx	      2865	elf.c	FUNCTION_41	IF_3
0x4004feb	          0x4889ef	                            mov rdi, rbp	      2865	elf.c	FUNCTION_41	IF_3
0x4004fee	    0xff91a0000000	                 call qword [rcx + 0xa0]	      2865	elf.c	FUNCTION_41	IF_3
0x4004ff4	          0x4885c0	                           test rax, rax	      2866	elf.c	FUNCTION_41	IF_3	IF_4
0x4004ff7	            0x7436	                            je 0x400502f	      2866	elf.c	FUNCTION_41	IF_3	IF_4
0x4004ff9	          0x8b5320	            mov edx, dword [rbx + 0x20] 	      2867	elf.c	FUNCTION_41	IF_3	IF_4
0x4004ffc	            0x85d2	                           test edx, edx	      2867	elf.c	FUNCTION_41	IF_3	IF_4
0x4004ffe	            0x7413	                            je 0x4005013	      2867	elf.c	FUNCTION_41	IF_3	IF_4
0x4005000	    0xf7c200001000	                      test edx, 0x100000	      2868	elf.c	FUNCTION_41	IF_3	IF_4
0x4005006	            0x750b	                           jne 0x4005013	      2868	elf.c	FUNCTION_41	IF_3	IF_4
0x4005008	          0x8b7010	            mov esi, dword [rax + 0x10] 	      2870	elf.c	FUNCTION_41	IF_3	IF_4
0x400500b	          0x8d56f2	                    lea edx, [rsi - 0xe]	      2870	elf.c	FUNCTION_41	IF_3	IF_4
0x400500e	          0x83fa01	                              cmp edx, 1	      2870	elf.c	FUNCTION_41	IF_3	IF_4
0x4005011	            0x771c	                            ja 0x400502f	      2870	elf.c	FUNCTION_41	IF_3	IF_4
0x4005013	    0x488b93e00000	            mov rdx, qword [rbx + 0xe0] 	      2872	elf.c	FUNCTION_41	IF_3	IF_4	CALL_3
0x400501a	          0x8b4810	            mov ecx, dword [rax + 0x10] 	      2872	elf.c	FUNCTION_41	IF_3	IF_4	CALL_3
0x400501d	          0x894a04	                mov dword [rdx + 4], ecx	      2872	elf.c	FUNCTION_41	IF_3	IF_4	CALL_3
0x4005020	    0x488b93e00000	            mov rdx, qword [rbx + 0xe0] 	      2873	elf.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x4005027	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2873	elf.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x400502b	        0x48894208	                mov qword [rdx + 8], rax	      2873	elf.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x400502f	          0x4889de	                            mov rsi, rbx	      2877	elf.c	FUNCTION_41	CALL_5
0x4005032	          0x4889ef	                            mov rdi, rbp	      2877	elf.c	FUNCTION_41	CALL_5
0x4005035	      0xe800000000	                          call 0x400503a	      2877	elf.c	FUNCTION_41	CALL_5
0x400503a	            0xeb05	                           jmp 0x4005041	      2877	elf.c	FUNCTION_41	CALL_5
0x400503c	      0xb800000000	                              mov eax, 0	      2845	elf.c	FUNCTION_41	IF_1	IF_2
0x4005041	        0x4883c408	                              add rsp, 8	      2878	elf.c	FUNCTION_41
0x4005045	              0x5b	                                 pop rbx	      2878	elf.c	FUNCTION_41
0x4005046	              0x5d	                                 pop rbp	      2878	elf.c	FUNCTION_41
0x4005047	              0xc3	                                     ret	      2878	elf.c	FUNCTION_41
elfcore_write_linux_prpsinfo32	FOR,0:ELSE,1:IF,1:WHILE,0:DO,0:SWITCH,0:CALL,5:functions,0	133
0x400f281	            0x4155	                                push r13	     10595	elf.c	FUNCTION_163
0x400f283	            0x4154	                                push r12	     10595	elf.c	FUNCTION_163
0x400f285	              0x55	                                push rbp	     10595	elf.c	FUNCTION_163
0x400f286	              0x53	                                push rbx	     10595	elf.c	FUNCTION_163
0x400f287	    0x4881ec980000	                           sub rsp, 0x98	     10595	elf.c	FUNCTION_163
0x400f28e	          0x4889fd	                            mov rbp, rdi	     10595	elf.c	FUNCTION_163
0x400f291	          0x4989f4	                            mov r12, rsi	     10595	elf.c	FUNCTION_163
0x400f294	          0x4989d5	                            mov r13, rdx	     10595	elf.c	FUNCTION_163
0x400f297	          0x4889cb	                            mov rbx, rcx	     10595	elf.c	FUNCTION_163
0x400f29a	    0x64488b042528	                mov rax, qword fs:[0x28]	     10595	elf.c	FUNCTION_163
0x400f2a3	    0x488984248800	             mov qword [rsp + 0x88], rax	     10595	elf.c	FUNCTION_163
0x400f2ab	            0x31c0	                            xor eax, eax	     10595	elf.c	FUNCTION_163
0x400f2ad	        0x488b4708	                mov rax, qword [rdi + 8]	     10596	elf.c	FUNCTION_163	IF_1	CALL_1
0x400f2b1	    0x488b90680300	           mov rdx, qword [rax + 0x368] 	     10596	elf.c	FUNCTION_163	IF_1	CALL_1
0x400f2b8	    0xf6828b030000	          test byte [rdx + 0x38b], 0x10 	     10596	elf.c	FUNCTION_163	IF_1	CALL_1
0x400f2bf	     0xf84db000000	                            je 0x400f3a0	     10596	elf.c	FUNCTION_163	IF_1	CALL_1
0x400f2c5	           0xfb611	                   movzx edx, byte [rcx]	       113	elf-linux-core.h	FUNCTION_238
0x400f2c8	          0x881424	                      mov byte [rsp], dl	       113	elf-linux-core.h	FUNCTION_238
0x400f2cb	         0xfb65101	               movzx edx, byte [rcx + 1]	       114	elf-linux-core.h	FUNCTION_238
0x400f2cf	        0x88542401	                  mov byte [rsp + 1], dl	       114	elf-linux-core.h	FUNCTION_238
0x400f2d3	         0xfb65102	               movzx edx, byte [rcx + 2]	       115	elf-linux-core.h	FUNCTION_238
0x400f2d7	        0x88542402	                  mov byte [rsp + 2], dl	       115	elf-linux-core.h	FUNCTION_238
0x400f2db	         0xfb65103	               movzx edx, byte [rcx + 3]	       116	elf-linux-core.h	FUNCTION_238
0x400f2df	        0x88542403	                  mov byte [rsp + 3], dl	       116	elf-linux-core.h	FUNCTION_238
0x400f2e3	      0x488d742404	                      lea rsi, [rsp + 4]	       117	elf-linux-core.h	FUNCTION_238
0x400f2e8	        0x488b7908	                mov rdi, qword [rcx + 8]	       117	elf-linux-core.h	FUNCTION_238
0x400f2ec	          0xff5048	                 call qword [rax + 0x48]	       117	elf-linux-core.h	FUNCTION_238
0x400f2ef	      0x488d742408	                      lea rsi, [rsp + 8]	       118	elf-linux-core.h	FUNCTION_238
0x400f2f4	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	       118	elf-linux-core.h	FUNCTION_238
0x400f2f7	        0x488b4508	                mov rax, qword [rbp + 8]	       118	elf-linux-core.h	FUNCTION_238
0x400f2fb	          0xff5060	                 call qword [rax + 0x60]	       118	elf-linux-core.h	FUNCTION_238
0x400f2fe	      0x488d74240a	                    lea rsi, [rsp + 0xa]	       119	elf-linux-core.h	FUNCTION_238
0x400f303	          0x8b7b14	            mov edi, dword [rbx + 0x14] 	       119	elf-linux-core.h	FUNCTION_238
0x400f306	        0x488b4508	                mov rax, qword [rbp + 8]	       119	elf-linux-core.h	FUNCTION_238
0x400f30a	          0xff5060	                 call qword [rax + 0x60]	       119	elf-linux-core.h	FUNCTION_238
0x400f30d	      0x488d74240c	                    lea rsi, [rsp + 0xc]	       120	elf-linux-core.h	FUNCTION_238
0x400f312	        0x48637b18	         movsxd rdi, dword [rbx + 0x18] 	       120	elf-linux-core.h	FUNCTION_238
0x400f316	        0x488b4508	                mov rax, qword [rbp + 8]	       120	elf-linux-core.h	FUNCTION_238
0x400f31a	          0xff5048	                 call qword [rax + 0x48]	       120	elf-linux-core.h	FUNCTION_238
0x400f31d	      0x488d742410	                   lea rsi, [rsp + 0x10]	       121	elf-linux-core.h	FUNCTION_238
0x400f322	        0x48637b1c	         movsxd rdi, dword [rbx + 0x1c] 	       121	elf-linux-core.h	FUNCTION_238
0x400f326	        0x488b4508	                mov rax, qword [rbp + 8]	       121	elf-linux-core.h	FUNCTION_238
0x400f32a	          0xff5048	                 call qword [rax + 0x48]	       121	elf-linux-core.h	FUNCTION_238
0x400f32d	      0x488d742414	                   lea rsi, [rsp + 0x14]	       122	elf-linux-core.h	FUNCTION_238
0x400f332	        0x48637b20	         movsxd rdi, dword [rbx + 0x20] 	       122	elf-linux-core.h	FUNCTION_238
0x400f336	        0x488b4508	                mov rax, qword [rbp + 8]	       122	elf-linux-core.h	FUNCTION_238
0x400f33a	          0xff5048	                 call qword [rax + 0x48]	       122	elf-linux-core.h	FUNCTION_238
0x400f33d	      0x488d742418	                   lea rsi, [rsp + 0x18]	       123	elf-linux-core.h	FUNCTION_238
0x400f342	        0x48637b24	         movsxd rdi, dword [rbx + 0x24] 	       123	elf-linux-core.h	FUNCTION_238
0x400f346	        0x488b4508	                mov rax, qword [rbp + 8]	       123	elf-linux-core.h	FUNCTION_238
0x400f34a	          0xff5048	                 call qword [rax + 0x48]	       123	elf-linux-core.h	FUNCTION_238
0x400f34d	        0x488d7328	                   lea rsi, [rbx + 0x28]	       126	string3.h	FUNCTION_229	CALL_3
0x400f351	      0x488d7c241c	                   lea rdi, [rsp + 0x1c]	       126	string3.h	FUNCTION_229	CALL_3
0x400f356	      0xba10000000	                           mov edx, 0x10	       126	string3.h	FUNCTION_229	CALL_3
0x400f35b	      0xe800000000	                          call 0x400f360	       126	string3.h	FUNCTION_229	CALL_3
0x400f360	        0x488d7339	                   lea rsi, [rbx + 0x39]	       126	string3.h	FUNCTION_229	CALL_3
0x400f364	      0x488d7c242c	                   lea rdi, [rsp + 0x2c]	       126	string3.h	FUNCTION_229	CALL_3
0x400f369	      0xba50000000	                           mov edx, 0x50	       126	string3.h	FUNCTION_229	CALL_3
0x400f36e	      0xe800000000	                          call 0x400f373	       126	string3.h	FUNCTION_229	CALL_3
0x400f373	        0x4883ec08	                              sub rsp, 8	     10601	elf.c	FUNCTION_163	IF_1	CALL_3
0x400f377	            0x6a7c	                               push 0x7c	     10601	elf.c	FUNCTION_163	IF_1	CALL_3
0x400f379	      0x4c8d4c2410	                    lea r9, [rsp + 0x10]	     10601	elf.c	FUNCTION_163	IF_1	CALL_3
0x400f37e	    0x41b803000000	                              mov r8d, 3	     10601	elf.c	FUNCTION_163	IF_1	CALL_3
0x400f384	      0xb900000000	                              mov ecx, 0	     10601	elf.c	FUNCTION_163	IF_1	CALL_3
0x400f389	          0x4c89ea	                            mov rdx, r13	     10601	elf.c	FUNCTION_163	IF_1	CALL_3
0x400f38c	          0x4c89e6	                            mov rsi, r12	     10601	elf.c	FUNCTION_163	IF_1	CALL_3
0x400f38f	          0x4889ef	                            mov rdi, rbp	     10601	elf.c	FUNCTION_163	IF_1	CALL_3
0x400f392	      0xe800000000	                          call 0x400f397	     10601	elf.c	FUNCTION_163	IF_1	CALL_3
0x400f397	        0x4883c410	                           add rsp, 0x10	     10601	elf.c	FUNCTION_163	IF_1	CALL_3
0x400f39b	      0xe9d9000000	                           jmp 0x400f479	     10601	elf.c	FUNCTION_163	IF_1	CALL_3
0x400f3a0	           0xfb611	                   movzx edx, byte [rcx]	        61	elf-linux-core.h	FUNCTION_237
0x400f3a3	          0x881424	                      mov byte [rsp], dl	        61	elf-linux-core.h	FUNCTION_237
0x400f3a6	         0xfb65101	               movzx edx, byte [rcx + 1]	        62	elf-linux-core.h	FUNCTION_237
0x400f3aa	        0x88542401	                  mov byte [rsp + 1], dl	        62	elf-linux-core.h	FUNCTION_237
0x400f3ae	         0xfb65102	               movzx edx, byte [rcx + 2]	        63	elf-linux-core.h	FUNCTION_237
0x400f3b2	        0x88542402	                  mov byte [rsp + 2], dl	        63	elf-linux-core.h	FUNCTION_237
0x400f3b6	         0xfb65103	               movzx edx, byte [rcx + 3]	        64	elf-linux-core.h	FUNCTION_237
0x400f3ba	        0x88542403	                  mov byte [rsp + 3], dl	        64	elf-linux-core.h	FUNCTION_237
0x400f3be	      0x488d742404	                      lea rsi, [rsp + 4]	        65	elf-linux-core.h	FUNCTION_237
0x400f3c3	        0x488b7908	                mov rdi, qword [rcx + 8]	        65	elf-linux-core.h	FUNCTION_237
0x400f3c7	          0xff5048	                 call qword [rax + 0x48]	        65	elf-linux-core.h	FUNCTION_237
0x400f3ca	      0x488d742408	                      lea rsi, [rsp + 8]	        66	elf-linux-core.h	FUNCTION_237
0x400f3cf	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	        66	elf-linux-core.h	FUNCTION_237
0x400f3d2	        0x488b4508	                mov rax, qword [rbp + 8]	        66	elf-linux-core.h	FUNCTION_237
0x400f3d6	          0xff5048	                 call qword [rax + 0x48]	        66	elf-linux-core.h	FUNCTION_237
0x400f3d9	      0x488d74240c	                    lea rsi, [rsp + 0xc]	        67	elf-linux-core.h	FUNCTION_237
0x400f3de	          0x8b7b14	            mov edi, dword [rbx + 0x14] 	        67	elf-linux-core.h	FUNCTION_237
0x400f3e1	        0x488b4508	                mov rax, qword [rbp + 8]	        67	elf-linux-core.h	FUNCTION_237
0x400f3e5	          0xff5048	                 call qword [rax + 0x48]	        67	elf-linux-core.h	FUNCTION_237
0x400f3e8	      0x488d742410	                   lea rsi, [rsp + 0x10]	        68	elf-linux-core.h	FUNCTION_237
0x400f3ed	        0x48637b18	         movsxd rdi, dword [rbx + 0x18] 	        68	elf-linux-core.h	FUNCTION_237
0x400f3f1	        0x488b4508	                mov rax, qword [rbp + 8]	        68	elf-linux-core.h	FUNCTION_237
0x400f3f5	          0xff5048	                 call qword [rax + 0x48]	        68	elf-linux-core.h	FUNCTION_237
0x400f3f8	      0x488d742414	                   lea rsi, [rsp + 0x14]	        69	elf-linux-core.h	FUNCTION_237
0x400f3fd	        0x48637b1c	         movsxd rdi, dword [rbx + 0x1c] 	        69	elf-linux-core.h	FUNCTION_237
0x400f401	        0x488b4508	                mov rax, qword [rbp + 8]	        69	elf-linux-core.h	FUNCTION_237
0x400f405	          0xff5048	                 call qword [rax + 0x48]	        69	elf-linux-core.h	FUNCTION_237
0x400f408	      0x488d742418	                   lea rsi, [rsp + 0x18]	        70	elf-linux-core.h	FUNCTION_237
0x400f40d	        0x48637b20	         movsxd rdi, dword [rbx + 0x20] 	        70	elf-linux-core.h	FUNCTION_237
0x400f411	        0x488b4508	                mov rax, qword [rbp + 8]	        70	elf-linux-core.h	FUNCTION_237
0x400f415	          0xff5048	                 call qword [rax + 0x48]	        70	elf-linux-core.h	FUNCTION_237
0x400f418	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	        71	elf-linux-core.h	FUNCTION_237
0x400f41d	        0x48637b24	         movsxd rdi, dword [rbx + 0x24] 	        71	elf-linux-core.h	FUNCTION_237
0x400f421	        0x488b4508	                mov rax, qword [rbp + 8]	        71	elf-linux-core.h	FUNCTION_237
0x400f425	          0xff5048	                 call qword [rax + 0x48]	        71	elf-linux-core.h	FUNCTION_237
0x400f428	        0x488d7328	                   lea rsi, [rbx + 0x28]	       126	string3.h	FUNCTION_229	CALL_3
0x400f42c	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       126	string3.h	FUNCTION_229	CALL_3
0x400f431	      0xba10000000	                           mov edx, 0x10	       126	string3.h	FUNCTION_229	CALL_3
0x400f436	      0xe800000000	                          call 0x400f43b	       126	string3.h	FUNCTION_229	CALL_3
0x400f43b	        0x488d7339	                   lea rsi, [rbx + 0x39]	       126	string3.h	FUNCTION_229	CALL_3
0x400f43f	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       126	string3.h	FUNCTION_229	CALL_3
0x400f444	      0xba50000000	                           mov edx, 0x50	       126	string3.h	FUNCTION_229	CALL_3
0x400f449	      0xe800000000	                          call 0x400f44e	       126	string3.h	FUNCTION_229	CALL_3
0x400f44e	        0x4883ec08	                              sub rsp, 8	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x400f452	      0x6880000000	                               push 0x80	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x400f457	      0x4c8d4c2410	                    lea r9, [rsp + 0x10]	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x400f45c	    0x41b803000000	                              mov r8d, 3	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x400f462	      0xb900000000	                              mov ecx, 0	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x400f467	          0x4c89ea	                            mov rdx, r13	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x400f46a	          0x4c89e6	                            mov rsi, r12	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x400f46d	          0x4889ef	                            mov rdi, rbp	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x400f470	      0xe800000000	                          call 0x400f475	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x400f475	        0x4883c410	                           add rsp, 0x10	     10609	elf.c	FUNCTION_163	ELSE_1	CALL_5
0x400f479	    0x488b8c248800	            mov rcx, qword [rsp + 0x88] 	     10612	elf.c	FUNCTION_163
0x400f481	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     10612	elf.c	FUNCTION_163
0x400f48a	            0x7405	                            je 0x400f491	     10612	elf.c	FUNCTION_163
0x400f48c	      0xe800000000	                          call 0x400f491	     10612	elf.c	FUNCTION_163
0x400f491	    0x4881c4980000	                           add rsp, 0x98	     10612	elf.c	FUNCTION_163
0x400f498	              0x5b	                                 pop rbx	     10612	elf.c	FUNCTION_163
0x400f499	              0x5d	                                 pop rbp	     10612	elf.c	FUNCTION_163
0x400f49a	            0x415c	                                 pop r12	     10612	elf.c	FUNCTION_163
0x400f49c	            0x415d	                                 pop r13	     10612	elf.c	FUNCTION_163
0x400f49e	              0xc3	                                     ret	     10612	elf.c	FUNCTION_163
_bfd_elf_set_section_contents	FOR,0:ELSE,0:IF,5:WHILE,0:DO,0:SWITCH,0:CALL,6:functions,0	63
0x400d537	            0x4156	                                push r14	      8850	elf.c	FUNCTION_107
0x400d539	            0x4155	                                push r13	      8850	elf.c	FUNCTION_107
0x400d53b	            0x4154	                                push r12	      8850	elf.c	FUNCTION_107
0x400d53d	              0x55	                                push rbp	      8850	elf.c	FUNCTION_107
0x400d53e	              0x53	                                push rbx	      8850	elf.c	FUNCTION_107
0x400d53f	          0x4889fb	                            mov rbx, rdi	      8850	elf.c	FUNCTION_107
0x400d542	          0x4989f6	                            mov r14, rsi	      8850	elf.c	FUNCTION_107
0x400d545	          0x4989d5	                            mov r13, rdx	      8850	elf.c	FUNCTION_107
0x400d548	          0x4989cc	                            mov r12, rcx	      8850	elf.c	FUNCTION_107
0x400d54b	          0x4c89c5	                             mov rbp, r8	      8850	elf.c	FUNCTION_107
0x400d54e	        0xf6474740	           test byte [rdi + 0x47], 0x40 	      8854	elf.c	FUNCTION_107	IF_1
0x400d552	            0x7512	                           jne 0x400d566	      8854	elf.c	FUNCTION_107	IF_1
0x400d554	      0xbe00000000	                              mov esi, 0	      8855	elf.c	FUNCTION_107	IF_1	CALL_1
0x400d559	      0xe800000000	                          call 0x400d55e	      8855	elf.c	FUNCTION_107	IF_1	CALL_1
0x400d55e	            0x85c0	                           test eax, eax	      8855	elf.c	FUNCTION_107	IF_1	CALL_1
0x400d560	     0xf8497000000	                            je 0x400d5fd	      8855	elf.c	FUNCTION_107	IF_1	CALL_1
0x400d566	          0x4885ed	                           test rbp, rbp	      8858	elf.c	FUNCTION_107	IF_2
0x400d569	     0xf8489000000	                            je 0x400d5f8	      8858	elf.c	FUNCTION_107	IF_2
0x400d56f	    0x498b86e00000	            mov rax, qword [r14 + 0xe0] 	      8861	elf.c	FUNCTION_107	CALL_2
0x400d576	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      8862	elf.c	FUNCTION_107	IF_3
0x400d57a	        0x4883feff	             cmp rsi, 0xffffffffffffffff	      8862	elf.c	FUNCTION_107	IF_3
0x400d57e	            0x7544	                           jne 0x400d5c4	      8862	elf.c	FUNCTION_107	IF_3
0x400d580	        0x488b7848	            mov rdi, qword [rax + 0x48] 	      8865	elf.c	FUNCTION_107	IF_3
0x400d584	      0x4a8d542500	                    lea rdx, [rbp + r12]	      8866	elf.c	FUNCTION_107	IF_3	IF_4
0x400d589	        0x483b5020	            cmp rdx, qword [rax + 0x20] 	      8866	elf.c	FUNCTION_107	IF_3	IF_4
0x400d58d	            0x770c	                            ja 0x400d59b	      8866	elf.c	FUNCTION_107	IF_3	IF_4
0x400d58f	      0x41f6462308	               test byte [r14 + 0x23], 8	      8868	elf.c	FUNCTION_107	IF_3	IF_4
0x400d594	            0x7405	                            je 0x400d59b	      8868	elf.c	FUNCTION_107	IF_3	IF_4
0x400d596	          0x4885ff	                           test rdi, rdi	      8868	elf.c	FUNCTION_107	IF_3	IF_4
0x400d599	            0x7514	                           jne 0x400d5af	      8868	elf.c	FUNCTION_107	IF_3	IF_4
0x400d59b	      0xba00000000	                              mov edx, 0	      8869	elf.c	FUNCTION_107	IF_3	CALL_3
0x400d5a0	      0xbea5220000	                         mov esi, 0x22a5	      8869	elf.c	FUNCTION_107	IF_3	CALL_3
0x400d5a5	      0xbf00000000	                              mov edi, 0	      8869	elf.c	FUNCTION_107	IF_3	CALL_3
0x400d5aa	      0xe800000000	                          call 0x400d5af	      8869	elf.c	FUNCTION_107	IF_3	CALL_3
0x400d5af	          0x4c01e7	                            add rdi, r12	        53	string3.h	FUNCTION_221	CALL_3
0x400d5b2	          0x4889ea	                            mov rdx, rbp	        53	string3.h	FUNCTION_221	CALL_3
0x400d5b5	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_221	CALL_3
0x400d5b8	      0xe800000000	                          call 0x400d5bd	        53	string3.h	FUNCTION_221	CALL_3
0x400d5bd	      0xb801000000	                              mov eax, 1	      8871	elf.c	FUNCTION_107	IF_3
0x400d5c2	            0xeb39	                           jmp 0x400d5fd	      8871	elf.c	FUNCTION_107	IF_3
0x400d5c4	          0x4c01e6	                            add rsi, r12	      8874	elf.c	FUNCTION_107	IF_5	CALL_5
0x400d5c7	      0xba00000000	                              mov edx, 0	      8874	elf.c	FUNCTION_107	IF_5	CALL_5
0x400d5cc	          0x4889df	                            mov rdi, rbx	      8874	elf.c	FUNCTION_107	IF_5	CALL_5
0x400d5cf	      0xe800000000	                          call 0x400d5d4	      8874	elf.c	FUNCTION_107	IF_5	CALL_5
0x400d5d4	            0x89c2	                            mov edx, eax	      8874	elf.c	FUNCTION_107	IF_5	CALL_5
0x400d5d6	      0xb800000000	                              mov eax, 0	      8876	elf.c	FUNCTION_107	IF_5
0x400d5db	            0x85d2	                           test edx, edx	      8874	elf.c	FUNCTION_107	IF_5	CALL_5
0x400d5dd	            0x751e	                           jne 0x400d5fd	      8874	elf.c	FUNCTION_107	IF_5	CALL_5
0x400d5df	          0x4889da	                            mov rdx, rbx	      8875	elf.c	FUNCTION_107	IF_5	CALL_6
0x400d5e2	          0x4889ee	                            mov rsi, rbp	      8875	elf.c	FUNCTION_107	IF_5	CALL_6
0x400d5e5	          0x4c89ef	                            mov rdi, r13	      8875	elf.c	FUNCTION_107	IF_5	CALL_6
0x400d5e8	      0xe800000000	                          call 0x400d5ed	      8875	elf.c	FUNCTION_107	IF_5	CALL_6
0x400d5ed	          0x4839c5	                            cmp rbp, rax	      8856	elf.c	FUNCTION_107	IF_1
0x400d5f0	           0xf94c0	                                 sete al	      8856	elf.c	FUNCTION_107	IF_1
0x400d5f3	           0xfb6c0	                           movzx eax, al	      8856	elf.c	FUNCTION_107	IF_1
0x400d5f6	            0xeb05	                           jmp 0x400d5fd	      8856	elf.c	FUNCTION_107	IF_1
0x400d5f8	      0xb801000000	                              mov eax, 1	      8859	elf.c	FUNCTION_107	IF_2
0x400d5fd	              0x5b	                                 pop rbx	      8879	elf.c	FUNCTION_107
0x400d5fe	              0x5d	                                 pop rbp	      8879	elf.c	FUNCTION_107
0x400d5ff	            0x415c	                                 pop r12	      8879	elf.c	FUNCTION_107
0x400d601	            0x415d	                                 pop r13	      8879	elf.c	FUNCTION_107
0x400d603	            0x415e	                                 pop r14	      8879	elf.c	FUNCTION_107
0x400d605	              0xc3	                                     ret	      8879	elf.c	FUNCTION_107
_bfd_elf_print_private_bfd_data	FOR,6:ELSE,1:IF,18:WHILE,0:DO,0:SWITCH,1:CALL,35:functions,0	639
0x400c634	            0x4157	                                push r15	      1610	elf.c	FUNCTION_33
0x400c636	            0x4156	                                push r14	      1610	elf.c	FUNCTION_33
0x400c638	            0x4155	                                push r13	      1610	elf.c	FUNCTION_33
0x400c63a	            0x4154	                                push r12	      1610	elf.c	FUNCTION_33
0x400c63c	              0x55	                                push rbp	      1610	elf.c	FUNCTION_33
0x400c63d	              0x53	                                push rbx	      1610	elf.c	FUNCTION_33
0x400c63e	        0x4883ec58	                           sub rsp, 0x58	      1610	elf.c	FUNCTION_33
0x400c642	          0x4889fd	                            mov rbp, rdi	      1610	elf.c	FUNCTION_33
0x400c645	          0x4889f3	                            mov rbx, rsi	      1610	elf.c	FUNCTION_33
0x400c648	    0x64488b042528	                mov rax, qword fs:[0x28]	      1610	elf.c	FUNCTION_33
0x400c651	      0x4889442448	             mov qword [rsp + 0x48], rax	      1610	elf.c	FUNCTION_33
0x400c656	            0x31c0	                            xor eax, eax	      1610	elf.c	FUNCTION_33
0x400c658	    0x48c744241800	               mov qword [rsp + 0x18], 0	      1614	elf.c	FUNCTION_33
0x400c661	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      1616	elf.c	FUNCTION_33	CALL_1
0x400c668	        0x4c8b6060	            mov r12, qword [rax + 0x60] 	      1616	elf.c	FUNCTION_33	CALL_1
0x400c66c	          0x4d85e4	                           test r12, r12	      1617	elf.c	FUNCTION_33	IF_1
0x400c66f	     0xf84f1010000	                            je 0x400c866	      1617	elf.c	FUNCTION_33	IF_1
0x400c675	      0xba05000000	                              mov edx, 5	      1621	elf.c	FUNCTION_33	IF_1	CALL_2
0x400c67a	      0xbe00000000	                              mov esi, 0	      1621	elf.c	FUNCTION_33	IF_1	CALL_2
0x400c67f	      0xbf00000000	                              mov edi, 0	      1621	elf.c	FUNCTION_33	IF_1	CALL_2
0x400c684	      0xe800000000	                          call 0x400c689	      1621	elf.c	FUNCTION_33	IF_1	CALL_2
0x400c689	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_15
0x400c68c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_15
0x400c691	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_15
0x400c694	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_15
0x400c699	      0xe800000000	                          call 0x400c69e	        97	stdio2.h	CALL_15
0x400c69e	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      1622	elf.c	FUNCTION_33	IF_1	CALL_3
0x400c6a5	          0x8b4044	            mov eax, dword [rax + 0x44] 	      1622	elf.c	FUNCTION_33	IF_1	CALL_3
0x400c6a8	            0x85c0	                           test eax, eax	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x400c6aa	     0xf84b6010000	                            je 0x400c866	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x400c6b0	        0x448d68ff	                     lea r13d, [rax - 1]	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x400c6b4	        0x4983c501	                              add r13, 1	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x400c6b8	        0x49c1e506	                              shl r13, 6	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x400c6bc	          0x4d01e5	                            add r13, r12	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x400c6bf	        0x4d8b3424	                    mov r14, qword [r12]	      1625	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_4
0x400c6c3	          0x4489f7	                           mov edi, r14d	      1625	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_4
0x400c6c6	      0xe8b739ffff	               call sym.get_segment_type	      1625	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_4
0x400c6cb	          0x4885c0	                           test rax, rax	      1628	elf.c	FUNCTION_33	IF_1	FOR_1	IF_2
0x400c6ce	            0x7521	                           jne 0x400c6f1	      1628	elf.c	FUNCTION_33	IF_1	FOR_1	IF_2
0x400c6d0	          0x4d89f0	                             mov r8, r14	        33	stdio2.h	FUNCTION_204	CALL_1
0x400c6d3	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x400c6d8	      0xba14000000	                           mov edx, 0x14	        33	stdio2.h	FUNCTION_204	CALL_1
0x400c6dd	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_204	CALL_1
0x400c6e2	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	        33	stdio2.h	FUNCTION_204	CALL_1
0x400c6e7	      0xe800000000	                          call 0x400c6ec	        33	stdio2.h	FUNCTION_204	CALL_1
0x400c6ec	      0x488d442430	                   lea rax, [rsp + 0x30]	      1631	elf.c	FUNCTION_33	IF_1	FOR_1	IF_2
0x400c6f1	          0x4889c1	                            mov rcx, rax	        97	stdio2.h	CALL_15
0x400c6f4	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_15
0x400c6f9	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_15
0x400c6fe	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_15
0x400c701	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_15
0x400c706	      0xe800000000	                          call 0x400c70b	        97	stdio2.h	CALL_15
0x400c70b	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      1634	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_5
0x400c710	          0x4889de	                            mov rsi, rbx	      1634	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_5
0x400c713	          0x4889ef	                            mov rdi, rbp	      1634	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_5
0x400c716	      0xe800000000	                          call 0x400c71b	      1634	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_5
0x400c71b	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_15
0x400c71e	      0xba09000000	                              mov edx, 9	        97	stdio2.h	CALL_15
0x400c723	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_15
0x400c728	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_15
0x400c72d	      0xe800000000	                          call 0x400c732	        97	stdio2.h	CALL_15
0x400c732	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      1636	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_6
0x400c737	          0x4889de	                            mov rsi, rbx	      1636	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_6
0x400c73a	          0x4889ef	                            mov rdi, rbp	      1636	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_6
0x400c73d	      0xe800000000	                          call 0x400c742	      1636	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_6
0x400c742	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_15
0x400c745	      0xba09000000	                              mov edx, 9	        97	stdio2.h	CALL_15
0x400c74a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_15
0x400c74f	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_15
0x400c754	      0xe800000000	                          call 0x400c759	        97	stdio2.h	CALL_15
0x400c759	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	      1638	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_7
0x400c75e	          0x4889de	                            mov rsi, rbx	      1638	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_7
0x400c761	          0x4889ef	                            mov rdi, rbp	      1638	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_7
0x400c764	      0xe800000000	                          call 0x400c769	      1638	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_7
0x400c769	      0x498b7c2438	            mov rdi, qword [r12 + 0x38] 	      1639	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_8
0x400c76e	      0xe800000000	                          call 0x400c773	      1639	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_8
0x400c773	            0x89c1	                            mov ecx, eax	        97	stdio2.h	CALL_15
0x400c775	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_15
0x400c77a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_15
0x400c77f	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_15
0x400c782	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_15
0x400c787	      0xe800000000	                          call 0x400c78c	        97	stdio2.h	CALL_15
0x400c78c	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_15
0x400c78f	      0xba12000000	                           mov edx, 0x12	        97	stdio2.h	CALL_15
0x400c794	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_15
0x400c799	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_15
0x400c79e	      0xe800000000	                          call 0x400c7a3	        97	stdio2.h	CALL_15
0x400c7a3	      0x498b542428	            mov rdx, qword [r12 + 0x28] 	      1641	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_9
0x400c7a8	          0x4889de	                            mov rsi, rbx	      1641	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_9
0x400c7ab	          0x4889ef	                            mov rdi, rbp	      1641	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_9
0x400c7ae	      0xe800000000	                          call 0x400c7b3	      1641	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_9
0x400c7b3	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_15
0x400c7b6	      0xba09000000	                              mov edx, 9	        97	stdio2.h	CALL_15
0x400c7bb	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_15
0x400c7c0	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_15
0x400c7c5	      0xe800000000	                          call 0x400c7ca	        97	stdio2.h	CALL_15
0x400c7ca	      0x498b542430	            mov rdx, qword [r12 + 0x30] 	      1643	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_10
0x400c7cf	          0x4889de	                            mov rsi, rbx	      1643	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_10
0x400c7d2	          0x4889ef	                            mov rdi, rbp	      1643	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_10
0x400c7d5	      0xe800000000	                          call 0x400c7da	      1643	elf.c	FUNCTION_33	IF_1	FOR_1	CALL_10
0x400c7da	      0x498b442408	                mov rax, qword [r12 + 8]	      1647	elf.c	FUNCTION_33	IF_1	FOR_1
0x400c7df	          0x4889c2	                            mov rdx, rax	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400c7e2	          0x83e201	                              and edx, 1	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400c7e5	        0x4883fa01	                              cmp rdx, 1	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400c7e9	            0x19f6	                            sbb esi, esi	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400c7eb	          0x83e6b5	                     and esi, 0xffffffb5	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400c7ee	          0x4889c2	                            mov rdx, rax	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400c7f1	          0x83e202	                              and edx, 2	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400c7f4	        0x4883fa01	                              cmp rdx, 1	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400c7f8	            0x19d2	                            sbb edx, edx	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400c7fa	          0x83e2b6	                     and edx, 0xffffffb6	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400c7fd	          0x83e004	                              and eax, 4	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400c800	        0x4883f801	                              cmp rax, 1	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400c804	            0x19c9	                            sbb ecx, ecx	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400c806	          0x83e1bb	                     and ecx, 0xffffffbb	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400c809	          0x83c172	                           add ecx, 0x72	      1644	elf.c	FUNCTION_33	IF_1	FOR_1
0x400c80c	        0x448d4e78	                   lea r9d, [rsi + 0x78]	        97	stdio2.h	CALL_15
0x400c810	        0x448d4277	                   lea r8d, [rdx + 0x77]	        97	stdio2.h	CALL_15
0x400c814	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_15
0x400c819	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_15
0x400c81e	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_15
0x400c821	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_15
0x400c826	      0xe800000000	                          call 0x400c82b	        97	stdio2.h	CALL_15
0x400c82b	      0x498b4c2408	                mov rcx, qword [r12 + 8]	      1648	elf.c	FUNCTION_33	IF_1	FOR_1	IF_3
0x400c830	          0x83e1f8	                     and ecx, 0xfffffff8	      1648	elf.c	FUNCTION_33	IF_1	FOR_1	IF_3
0x400c833	            0x7417	                            je 0x400c84c	      1648	elf.c	FUNCTION_33	IF_1	FOR_1	IF_3
0x400c835	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_15
0x400c83a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_15
0x400c83f	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_15
0x400c842	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_15
0x400c847	      0xe800000000	                          call 0x400c84c	        97	stdio2.h	CALL_15
0x400c84c	          0x4889de	                            mov rsi, rbx	        97	stdio2.h	CALL_15
0x400c84f	      0xbf0a000000	                            mov edi, 0xa	        97	stdio2.h	CALL_15
0x400c854	      0xe800000000	                          call 0x400c859	        97	stdio2.h	CALL_15
0x400c859	        0x4983c440	                           add r12, 0x40	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x400c85d	          0x4d39e5	                            cmp r13, r12	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x400c860	     0xf8559feffff	                           jne 0x400c6bf	      1623	elf.c	FUNCTION_33	IF_1	FOR_1
0x400c866	      0xbe00000000	                              mov esi, 0	      1654	elf.c	FUNCTION_33	CALL_11
0x400c86b	          0x4889ef	                            mov rdi, rbp	      1654	elf.c	FUNCTION_33	CALL_11
0x400c86e	      0xe800000000	                          call 0x400c873	      1654	elf.c	FUNCTION_33	CALL_11
0x400c873	          0x4989c4	                            mov r12, rax	      1654	elf.c	FUNCTION_33	CALL_11
0x400c876	          0x4885c0	                           test rax, rax	      1655	elf.c	FUNCTION_33	IF_4
0x400c879	     0xf84f8050000	                            je 0x400ce77	      1655	elf.c	FUNCTION_33	IF_4
0x400c87f	      0xba05000000	                              mov edx, 5	      1663	elf.c	FUNCTION_33	IF_4	CALL_12
0x400c884	      0xbe00000000	                              mov esi, 0	      1663	elf.c	FUNCTION_33	IF_4	CALL_12
0x400c889	      0xbf00000000	                              mov edi, 0	      1663	elf.c	FUNCTION_33	IF_4	CALL_12
0x400c88e	      0xe800000000	                          call 0x400c893	      1663	elf.c	FUNCTION_33	IF_4	CALL_12
0x400c893	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_15
0x400c896	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_15
0x400c89b	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_15
0x400c89e	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_15
0x400c8a3	      0xe800000000	                          call 0x400c8a8	        97	stdio2.h	CALL_15
0x400c8a8	      0x488d542418	                   lea rdx, [rsp + 0x18]	      1665	elf.c	FUNCTION_33	IF_4	IF_5	CALL_13
0x400c8ad	          0x4c89e6	                            mov rsi, r12	      1665	elf.c	FUNCTION_33	IF_4	IF_5	CALL_13
0x400c8b0	          0x4889ef	                            mov rdi, rbp	      1665	elf.c	FUNCTION_33	IF_4	IF_5	CALL_13
0x400c8b3	      0xe800000000	                          call 0x400c8b8	      1665	elf.c	FUNCTION_33	IF_4	IF_5	CALL_13
0x400c8b8	            0x85c0	                           test eax, eax	      1665	elf.c	FUNCTION_33	IF_4	IF_5	CALL_13
0x400c8ba	     0xf84f8070000	                            je 0x400d0b8	      1665	elf.c	FUNCTION_33	IF_4	IF_5	CALL_13
0x400c8c0	          0x4c89e6	                            mov rsi, r12	      1668	elf.c	FUNCTION_33	IF_4	CALL_14
0x400c8c3	          0x4889ef	                            mov rdi, rbp	      1668	elf.c	FUNCTION_33	IF_4	CALL_14
0x400c8c6	      0xe800000000	                          call 0x400c8cb	      1668	elf.c	FUNCTION_33	IF_4	CALL_14
0x400c8cb	      0x3dfffeffff	                     cmp eax, 0xfffffeff	      1669	elf.c	FUNCTION_33	IF_4	IF_6
0x400c8d0	     0xf84e2070000	                            je 0x400d0b8	      1669	elf.c	FUNCTION_33	IF_4	IF_6
0x400c8d6	        0x488b5508	                mov rdx, qword [rbp + 8]	      1673	elf.c	FUNCTION_33	IF_4	CALL_16
0x400c8da	    0x488b92680300	           mov rdx, qword [rdx + 0x368] 	      1673	elf.c	FUNCTION_33	IF_4	CALL_16
0x400c8e1	    0x488b8a000300	           mov rcx, qword [rdx + 0x300] 	      1673	elf.c	FUNCTION_33	IF_4	CALL_16
0x400c8e8	      0x440fb66906	              movzx r13d, byte [rcx + 6]	      1673	elf.c	FUNCTION_33	IF_4	CALL_16
0x400c8ed	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	      1678	elf.c	FUNCTION_33	IF_4	IF_7
0x400c8f2	          0x4939d5	                            cmp r13, rdx	      1678	elf.c	FUNCTION_33	IF_4	IF_7
0x400c8f5	     0xf87bd070000	                            ja 0x400d0b8	      1678	elf.c	FUNCTION_33	IF_4	IF_7
0x400c8fb	      0x4c8b642418	            mov r12, qword [rsp + 0x18] 	      1676	elf.c	FUNCTION_33	IF_4
0x400c900	          0x4c29ea	                            sub rdx, r13	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x400c903	          0x4c01e2	                            add rdx, r12	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x400c906	        0x48891424	                    mov qword [rsp], rdx	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x400c90a	     0xf8254050000	                            jb 0x400ce64	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x400c910	    0x488b95f80000	            mov rdx, qword [rbp + 0xf8] 	      1671	elf.c	FUNCTION_33	IF_4	CALL_15
0x400c917	            0x89c0	                            mov eax, eax	      1671	elf.c	FUNCTION_33	IF_4	CALL_15
0x400c919	        0x488b5258	            mov rdx, qword [rdx + 0x58] 	      1671	elf.c	FUNCTION_33	IF_4	CALL_15
0x400c91d	        0x488b04c2	            mov rax, qword [rdx + rax*8]	      1671	elf.c	FUNCTION_33	IF_4	CALL_15
0x400c921	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1671	elf.c	FUNCTION_33	IF_4	CALL_15
0x400c924	        0x8944240c	              mov dword [rsp + 0xc], eax	      1671	elf.c	FUNCTION_33	IF_4	CALL_15
0x400c928	        0x4c8b7150	            mov r14, qword [rcx + 0x50] 	      1674	elf.c	FUNCTION_33	IF_4	CALL_17
0x400c92c	        0x488b4508	                mov rax, qword [rbp + 8]	      1689	elf.c	FUNCTION_33	IF_4	FOR_2	CALL_18
0x400c930	    0x4c8bb8680300	           mov r15, qword [rax + 0x368] 	      1689	elf.c	FUNCTION_33	IF_4	FOR_2	CALL_18
0x400c937	      0x488d542420	                   lea rdx, [rsp + 0x20]	      1691	elf.c	FUNCTION_33	IF_4	FOR_2
0x400c93c	          0x4c89e6	                            mov rsi, r12	      1691	elf.c	FUNCTION_33	IF_4	FOR_2
0x400c93f	          0x4889ef	                            mov rdi, rbp	      1691	elf.c	FUNCTION_33	IF_4	FOR_2
0x400c942	          0x41ffd6	                                call r14	      1691	elf.c	FUNCTION_33	IF_4	FOR_2
0x400c945	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1693	elf.c	FUNCTION_33	IF_4	FOR_2	IF_8
0x400c94a	          0x4885ff	                           test rdi, rdi	      1693	elf.c	FUNCTION_33	IF_4	FOR_2	IF_8
0x400c94d	     0xf8411050000	                            je 0x400ce64	      1693	elf.c	FUNCTION_33	IF_4	FOR_2	IF_8
0x400c953	        0x4883ff1d	                           cmp rdi, 0x1d	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c957	     0xf84de070000	                            je 0x400d13b	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c95d	        0x4883ff1d	                           cmp rdi, 0x1d	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c961	     0xf8791010000	                            ja 0x400caf8	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c967	        0x4883ff0e	                            cmp rdi, 0xe	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c96b	     0xf84c3070000	                            je 0x400d134	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c971	        0x4883ff0e	                            cmp rdi, 0xe	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c975	     0xf87bd000000	                            ja 0x400ca38	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c97b	        0x4883ff07	                              cmp rdi, 7	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c97f	     0xf84db030000	                            je 0x400cd60	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c985	        0x4883ff07	                              cmp rdi, 7	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c989	            0x7754	                            ja 0x400c9df	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c98b	        0x4883ff03	                              cmp rdi, 3	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c98f	     0xf8475030000	                            je 0x400cd0a	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c995	        0x4883ff03	                              cmp rdi, 3	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c999	            0x771e	                            ja 0x400c9b9	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c99b	        0x4883ff01	                              cmp rdi, 1	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c99f	     0xf8465040000	                            je 0x400ce0a	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c9a5	      0xb900000000	                              mov ecx, 0	      1711	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c9aa	        0x4883ff02	                              cmp rdi, 2	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c9ae	     0xf843d070000	                            je 0x400d0f1	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c9b4	      0xe95b030000	                           jmp 0x400cd14	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c9b9	      0xb900000000	                              mov ecx, 0	      1714	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c9be	        0x4883ff05	                              cmp rdi, 5	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c9c2	     0xf8429070000	                            je 0x400d0f1	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c9c8	        0x4883ff05	                              cmp rdi, 5	      1713	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c9cc	      0xb900000000	                              mov ecx, 0	      1713	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c9d1	      0xb800000000	                              mov eax, 0	      1713	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c9d6	        0x480f47c8	                          cmova rcx, rax	      1713	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c9da	      0xe912070000	                           jmp 0x400d0f1	      1713	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c9df	        0x4883ff0a	                            cmp rdi, 0xa	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c9e3	     0xf8481030000	                            je 0x400cd6a	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c9e9	        0x4883ff0a	                            cmp rdi, 0xa	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c9ed	            0x7723	                            ja 0x400ca12	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c9ef	      0xb900000000	                              mov ecx, 0	      1717	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c9f4	        0x4883ff08	                              cmp rdi, 8	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c9f8	     0xf84f3060000	                            je 0x400d0f1	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400c9fe	      0xb900000000	                              mov ecx, 0	      1718	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ca03	        0x4883ff09	                              cmp rdi, 9	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ca07	     0xf84e4060000	                            je 0x400d0f1	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ca0d	      0xe902030000	                           jmp 0x400cd14	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ca12	      0xb900000000	                              mov ecx, 0	      1721	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ca17	        0x4883ff0c	                            cmp rdi, 0xc	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ca1b	     0xf84d0060000	                            je 0x400d0f1	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ca21	        0x4883ff0c	                            cmp rdi, 0xc	      1720	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ca25	      0xb900000000	                              mov ecx, 0	      1720	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ca2a	      0xb800000000	                              mov eax, 0	      1720	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ca2f	        0x480f47c8	                          cmova rcx, rax	      1720	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ca33	      0xe9b9060000	                           jmp 0x400d0f1	      1720	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ca38	        0x4883ff15	                           cmp rdi, 0x15	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ca3c	     0xf843c030000	                            je 0x400cd7e	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ca42	        0x4883ff15	                           cmp rdi, 0x15	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ca46	            0x7754	                            ja 0x400ca9c	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ca48	        0x4883ff11	                           cmp rdi, 0x11	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ca4c	     0xf8422030000	                            je 0x400cd74	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ca52	        0x4883ff11	                           cmp rdi, 0x11	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ca56	            0x771e	                            ja 0x400ca76	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ca58	        0x4883ff0f	                            cmp rdi, 0xf	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ca5c	     0xf849e020000	                            je 0x400cd00	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ca62	      0xb900000000	                              mov ecx, 0	      1725	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ca67	        0x4883ff10	                           cmp rdi, 0x10	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ca6b	     0xf8480060000	                            je 0x400d0f1	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ca71	      0xe99e020000	                           jmp 0x400cd14	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ca76	      0xb900000000	                              mov ecx, 0	      1728	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ca7b	        0x4883ff13	                           cmp rdi, 0x13	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ca7f	     0xf846c060000	                            je 0x400d0f1	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ca85	        0x4883ff13	                           cmp rdi, 0x13	      1727	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ca89	      0xb900000000	                              mov ecx, 0	      1727	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ca8e	      0xb800000000	                              mov eax, 0	      1727	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ca93	        0x480f47c8	                          cmova rcx, rax	      1727	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ca97	      0xe955060000	                           jmp 0x400d0f1	      1727	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ca9c	        0x4883ff19	                           cmp rdi, 0x19	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400caa0	     0xf84e2020000	                            je 0x400cd88	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400caa6	        0x4883ff19	                           cmp rdi, 0x19	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400caaa	            0x7726	                            ja 0x400cad2	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400caac	      0xb900000000	                              mov ecx, 0	      1732	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cab1	        0x4883ff17	                           cmp rdi, 0x17	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cab5	     0xf8436060000	                            je 0x400d0f1	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cabb	        0x4883ff17	                           cmp rdi, 0x17	      1731	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cabf	      0xb900000000	                              mov ecx, 0	      1731	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cac4	      0xb800000000	                              mov eax, 0	      1731	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cac9	        0x480f47c8	                          cmova rcx, rax	      1731	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cacd	      0xe91f060000	                           jmp 0x400d0f1	      1731	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cad2	      0xb900000000	                              mov ecx, 0	      1736	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cad7	        0x4883ff1b	                           cmp rdi, 0x1b	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cadb	     0xf8410060000	                            je 0x400d0f1	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cae1	        0x4883ff1b	                           cmp rdi, 0x1b	      1735	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cae5	      0xb900000000	                              mov ecx, 0	      1735	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400caea	      0xb800000000	                              mov eax, 0	      1735	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400caef	        0x480f47c8	                          cmova rcx, rax	      1735	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400caf3	      0xe9f9050000	                           jmp 0x400d0f1	      1735	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400caf8	    0x4881fffcfeff	                     cmp rdi, 0x6ffffefc	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400caff	     0xf84bf020000	                            je 0x400cdc4	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cb05	    0x4881fffcfeff	                     cmp rdi, 0x6ffffefc	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cb0c	     0xf87f7000000	                            ja 0x400cc09	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cb12	    0x4881fffbfdff	                     cmp rdi, 0x6ffffdfb	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cb19	     0xf847d020000	                            je 0x400cd9c	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cb1f	    0x4881fffbfdff	                     cmp rdi, 0x6ffffdfb	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cb26	            0x776e	                            ja 0x400cb96	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cb28	        0x4883ff21	                           cmp rdi, 0x21	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cb2c	     0xf8460020000	                            je 0x400cd92	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cb32	        0x4883ff21	                           cmp rdi, 0x21	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cb36	            0x7723	                            ja 0x400cb5b	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cb38	      0xb900000000	                              mov ecx, 0	      1739	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cb3d	        0x4883ff1e	                           cmp rdi, 0x1e	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cb41	     0xf84aa050000	                            je 0x400d0f1	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cb47	      0xb900000000	                              mov ecx, 0	      1740	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cb4c	        0x4883ff20	                           cmp rdi, 0x20	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cb50	     0xf849b050000	                            je 0x400d0f1	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cb56	      0xe9b9010000	                           jmp 0x400cd14	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cb5b	      0xb900000000	                              mov ecx, 0	      1743	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cb60	    0x4881fff9fdff	                     cmp rdi, 0x6ffffdf9	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cb67	     0xf8484050000	                            je 0x400d0f1	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cb6d	      0xb900000000	                              mov ecx, 0	      1744	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cb72	    0x4881fff9fdff	                     cmp rdi, 0x6ffffdf9	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cb79	     0xf8772050000	                            ja 0x400d0f1	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cb7f	      0xb900000000	                              mov ecx, 0	      1742	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cb84	    0x4881fff8fdff	                     cmp rdi, 0x6ffffdf8	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cb8b	     0xf8460050000	                            je 0x400d0f1	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cb91	      0xe97e010000	                           jmp 0x400cd14	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cb96	    0x4881fffffdff	                     cmp rdi, 0x6ffffdff	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cb9d	     0xf8403020000	                            je 0x400cda6	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cba3	    0x4881fffffdff	                     cmp rdi, 0x6ffffdff	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cbaa	            0x772c	                            ja 0x400cbd8	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cbac	      0xb900000000	                              mov ecx, 0	      1747	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cbb1	    0x4881fffdfdff	                     cmp rdi, 0x6ffffdfd	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cbb8	     0xf8433050000	                            je 0x400d0f1	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cbbe	    0x4881fffdfdff	                     cmp rdi, 0x6ffffdfd	      1746	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cbc5	      0xb900000000	                              mov ecx, 0	      1746	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cbca	      0xb800000000	                              mov eax, 0	      1746	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cbcf	        0x480f47c8	                          cmova rcx, rax	      1746	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cbd3	      0xe919050000	                           jmp 0x400d0f1	      1746	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cbd8	    0x4881fffafeff	                     cmp rdi, 0x6ffffefa	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cbdf	     0xf84cb010000	                            je 0x400cdb0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cbe5	    0x4881fffafeff	                     cmp rdi, 0x6ffffefa	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cbec	     0xf87c8010000	                            ja 0x400cdba	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cbf2	      0xb900000000	                              mov ecx, 0	      1767	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cbf7	    0x4881fff5feff	                     cmp rdi, 0x6ffffef5	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cbfe	     0xf84ed040000	                            je 0x400d0f1	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cc04	      0xe90b010000	                           jmp 0x400cd14	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cc09	    0x4881fffbffff	                     cmp rdi, 0x6ffffffb	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cc10	     0xf84c2010000	                            je 0x400cdd8	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cc16	    0x4881fffbffff	                     cmp rdi, 0x6ffffffb	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cc1d	            0x7777	                            ja 0x400cc96	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cc1f	    0x4881fffffeff	                     cmp rdi, 0x6ffffeff	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cc26	     0xf84a2010000	                            je 0x400cdce	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cc2c	    0x4881fffffeff	                     cmp rdi, 0x6ffffeff	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cc33	            0x7729	                            ja 0x400cc5e	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cc35	      0xb900000000	                              mov ecx, 0	      1753	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cc3a	    0x4881fffdfeff	                     cmp rdi, 0x6ffffefd	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cc41	     0xf84aa040000	                            je 0x400d0f1	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cc47	      0xb900000000	                              mov ecx, 0	      1754	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cc4c	    0x4881fffefeff	                     cmp rdi, 0x6ffffefe	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cc53	     0xf8498040000	                            je 0x400d0f1	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cc59	      0xe9b6000000	                           jmp 0x400cd14	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cc5e	      0xb900000000	                              mov ecx, 0	      1756	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cc63	    0x4881fff9ffff	                     cmp rdi, 0x6ffffff9	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cc6a	     0xf8481040000	                            je 0x400d0f1	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cc70	      0xb900000000	                              mov ecx, 0	      1757	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cc75	    0x4881fff9ffff	                     cmp rdi, 0x6ffffff9	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cc7c	     0xf876f040000	                            ja 0x400d0f1	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cc82	      0xb900000000	                              mov ecx, 0	      1759	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cc87	    0x4881fff0ffff	                     cmp rdi, 0x6ffffff0	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cc8e	     0xf845d040000	                            je 0x400d0f1	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cc94	            0xeb7e	                           jmp 0x400cd14	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cc96	    0x4881ffffffff	                     cmp rdi, 0x6fffffff	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cc9d	     0xf843f010000	                            je 0x400cde2	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cca3	    0x4881ffffffff	                     cmp rdi, 0x6fffffff	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ccaa	            0x772c	                            ja 0x400ccd8	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ccac	      0xb900000000	                              mov ecx, 0	      1761	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ccb1	    0x4881fffdffff	                     cmp rdi, 0x6ffffffd	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ccb8	     0xf8433040000	                            je 0x400d0f1	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ccbe	    0x4881fffdffff	                     cmp rdi, 0x6ffffffd	      1760	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ccc5	      0xb900000000	                              mov ecx, 0	      1760	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ccca	      0xb800000000	                              mov eax, 0	      1760	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cccf	        0x480f47c8	                          cmova rcx, rax	      1760	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ccd3	      0xe919040000	                           jmp 0x400d0f1	      1760	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ccd8	    0x4881fffeffff	                     cmp rdi, 0x7ffffffe	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ccdf	     0xf8411010000	                            je 0x400cdf6	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cce5	    0x4881ffffffff	                     cmp rdi, 0x7fffffff	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ccec	     0xf840e010000	                            je 0x400ce00	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ccf2	    0x4881fffdffff	                     cmp rdi, 0x7ffffffd	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ccf9	            0x7519	                           jne 0x400cd14	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ccfb	      0xe9ec000000	                           jmp 0x400cdec	      1697	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cd00	      0xb900000000	                              mov ecx, 0	      1724	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cd05	      0xe936040000	                           jmp 0x400d140	      1724	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cd0a	      0xb900000000	                              mov ecx, 0	      1712	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cd0f	      0xe9dd030000	                           jmp 0x400d0f1	      1712	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cd14	    0x498b87d00100	           mov rax, qword [r15 + 0x1d0] 	      1700	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_9
0x400cd1b	      0xb900000000	                              mov ecx, 0	      1686	elf.c	FUNCTION_33	IF_4	FOR_2
0x400cd20	          0x4885c0	                           test rax, rax	      1700	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_9
0x400cd23	            0x7405	                            je 0x400cd2a	      1700	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_9
0x400cd25	            0xffd0	                                call rax	      1701	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_9
0x400cd27	          0x4889c1	                            mov rcx, rax	      1701	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_9
0x400cd2a	          0x803900	                       cmp byte [rcx], 0	      1703	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_10	CALL_19
0x400cd2d	     0xf85be030000	                           jne 0x400d0f1	      1703	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_10	CALL_19
0x400cd33	      0x4c8b442420	              mov r8, qword [rsp + 0x20]	        33	stdio2.h	FUNCTION_204	CALL_1
0x400cd38	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x400cd3d	      0xba14000000	                           mov edx, 0x14	        33	stdio2.h	FUNCTION_204	CALL_1
0x400cd42	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_204	CALL_1
0x400cd47	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	        33	stdio2.h	FUNCTION_204	CALL_1
0x400cd4c	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x400cd51	      0xe800000000	                          call 0x400cd56	        33	stdio2.h	FUNCTION_204	CALL_1
0x400cd56	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	      1706	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_10
0x400cd5b	      0xe991030000	                           jmp 0x400d0f1	      1706	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1	IF_10
0x400cd60	      0xb900000000	                              mov ecx, 0	      1716	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cd65	      0xe987030000	                           jmp 0x400d0f1	      1716	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cd6a	      0xb900000000	                              mov ecx, 0	      1719	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cd6f	      0xe97d030000	                           jmp 0x400d0f1	      1719	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cd74	      0xb900000000	                              mov ecx, 0	      1726	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cd79	      0xe973030000	                           jmp 0x400d0f1	      1726	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cd7e	      0xb900000000	                              mov ecx, 0	      1730	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cd83	      0xe969030000	                           jmp 0x400d0f1	      1730	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cd88	      0xb900000000	                              mov ecx, 0	      1734	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cd8d	      0xe95f030000	                           jmp 0x400d0f1	      1734	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cd92	      0xb900000000	                              mov ecx, 0	      1741	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cd97	      0xe955030000	                           jmp 0x400d0f1	      1741	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cd9c	      0xb900000000	                              mov ecx, 0	      1745	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cda1	      0xe94b030000	                           jmp 0x400d0f1	      1745	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cda6	      0xb900000000	                              mov ecx, 0	      1749	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cdab	      0xe941030000	                           jmp 0x400d0f1	      1749	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cdb0	      0xb900000000	                              mov ecx, 0	      1750	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cdb5	      0xe986030000	                           jmp 0x400d140	      1750	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cdba	      0xb900000000	                              mov ecx, 0	      1751	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cdbf	      0xe97c030000	                           jmp 0x400d140	      1751	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cdc4	      0xb900000000	                              mov ecx, 0	      1752	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cdc9	      0xe972030000	                           jmp 0x400d140	      1752	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cdce	      0xb900000000	                              mov ecx, 0	      1755	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cdd3	      0xe919030000	                           jmp 0x400d0f1	      1755	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cdd8	      0xb900000000	                              mov ecx, 0	      1758	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cddd	      0xe90f030000	                           jmp 0x400d0f1	      1758	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cde2	      0xb900000000	                              mov ecx, 0	      1763	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cde7	      0xe905030000	                           jmp 0x400d0f1	      1763	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cdec	      0xb900000000	                              mov ecx, 0	      1764	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cdf1	      0xe94a030000	                           jmp 0x400d140	      1764	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cdf6	      0xb900000000	                              mov ecx, 0	      1765	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400cdfb	      0xe9f1020000	                           jmp 0x400d0f1	      1765	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ce00	      0xb900000000	                              mov ecx, 0	      1766	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ce05	      0xe936030000	                           jmp 0x400d140	      1766	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400ce0a	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_15
0x400ce0f	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_15
0x400ce14	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_15
0x400ce19	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_15
0x400ce1c	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_15
0x400ce21	      0xe800000000	                          call 0x400ce26	        97	stdio2.h	CALL_15
0x400ce26	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      1781	elf.c	FUNCTION_33	IF_4	FOR_2	ELSE_1	CALL_21
0x400ce2a	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      1781	elf.c	FUNCTION_33	IF_4	FOR_2	ELSE_1	CALL_21
0x400ce2e	          0x4889ef	                            mov rdi, rbp	      1781	elf.c	FUNCTION_33	IF_4	FOR_2	ELSE_1	CALL_21
0x400ce31	      0xe800000000	                          call 0x400ce36	      1781	elf.c	FUNCTION_33	IF_4	FOR_2	ELSE_1	CALL_21
0x400ce36	          0x4885c0	                           test rax, rax	      1782	elf.c	FUNCTION_33	IF_4	FOR_2	ELSE_1	IF_12
0x400ce39	     0xf8479020000	                            je 0x400d0b8	      1782	elf.c	FUNCTION_33	IF_4	FOR_2	ELSE_1	IF_12
0x400ce3f	          0x4889de	                            mov rsi, rbx	        97	stdio2.h	CALL_15
0x400ce42	          0x4889c7	                            mov rdi, rax	        97	stdio2.h	CALL_15
0x400ce45	      0xe800000000	                          call 0x400ce4a	        97	stdio2.h	CALL_15
0x400ce4a	          0x4889de	                            mov rsi, rbx	        97	stdio2.h	CALL_15
0x400ce4d	      0xbf0a000000	                            mov edi, 0xa	        97	stdio2.h	CALL_15
0x400ce52	      0xe800000000	                          call 0x400ce57	        97	stdio2.h	CALL_15
0x400ce57	          0x4d01ec	                            add r12, r13	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x400ce5a	        0x4c3b2424	                    cmp r12, qword [rsp]	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x400ce5e	     0xf86c8faffff	                           jbe 0x400c92c	      1683	elf.c	FUNCTION_33	IF_4	FOR_2
0x400ce64	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1789	elf.c	FUNCTION_33	IF_4	CALL_22
0x400ce69	      0xe800000000	                          call 0x400ce6e	      1789	elf.c	FUNCTION_33	IF_4	CALL_22
0x400ce6e	    0x48c744241800	               mov qword [rsp + 0x18], 0	      1790	elf.c	FUNCTION_33	IF_4
0x400ce77	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      1793	elf.c	FUNCTION_33	IF_13	CALL_24
0x400ce7e	    0x8b90840c0000	           mov edx, dword [rax + 0xc84] 	      1793	elf.c	FUNCTION_33	IF_13	CALL_24
0x400ce84	            0x85d2	                           test edx, edx	      1793	elf.c	FUNCTION_33	IF_13	CALL_24
0x400ce86	     0xf84ef020000	                            je 0x400d17b	      1793	elf.c	FUNCTION_33	IF_13	CALL_24
0x400ce8c	    0x4883b8480300	              cmp qword [rax + 0x348], 0	      1793	elf.c	FUNCTION_33	IF_13	CALL_24
0x400ce94	     0xf85cf020000	                           jne 0x400d169	      1793	elf.c	FUNCTION_33	IF_13	CALL_24
0x400ce9a	            0xeb0e	                           jmp 0x400ceaa	      1793	elf.c	FUNCTION_33	IF_13	CALL_24
0x400ce9c	    0x4883b8500300	              cmp qword [rax + 0x350], 0	      1794	elf.c	FUNCTION_33	IF_13	CALL_26
0x400cea4	     0xf85b2020000	                           jne 0x400d15c	      1794	elf.c	FUNCTION_33	IF_13	CALL_26
0x400ceaa	      0xbe00000000	                              mov esi, 0	      1796	elf.c	FUNCTION_33	IF_13	IF_14	CALL_27
0x400ceaf	          0x4889ef	                            mov rdi, rbp	      1796	elf.c	FUNCTION_33	IF_13	IF_14	CALL_27
0x400ceb2	      0xe800000000	                          call 0x400ceb7	      1796	elf.c	FUNCTION_33	IF_13	IF_14	CALL_27
0x400ceb7	            0x85c0	                           test eax, eax	      1796	elf.c	FUNCTION_33	IF_13	IF_14	CALL_27
0x400ceb9	     0xf8419020000	                            je 0x400d0d8	      1796	elf.c	FUNCTION_33	IF_13	IF_14	CALL_27
0x400cebf	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      1800	elf.c	FUNCTION_33	IF_15	CALL_28
0x400cec6	    0x83b8840c0000	              cmp dword [rax + 0xc84], 0	      1800	elf.c	FUNCTION_33	IF_15	CALL_28
0x400cecd	     0xf84f0000000	                            je 0x400cfc3	      1800	elf.c	FUNCTION_33	IF_15	CALL_28
0x400ced3	      0xba05000000	                              mov edx, 5	      1804	elf.c	FUNCTION_33	IF_15	CALL_29
0x400ced8	      0xbe00000000	                              mov esi, 0	      1804	elf.c	FUNCTION_33	IF_15	CALL_29
0x400cedd	      0xbf00000000	                              mov edi, 0	      1804	elf.c	FUNCTION_33	IF_15	CALL_29
0x400cee2	      0xe800000000	                          call 0x400cee7	      1804	elf.c	FUNCTION_33	IF_15	CALL_29
0x400cee7	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_15
0x400ceea	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_15
0x400ceef	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_15
0x400cef2	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_15
0x400cef7	      0xe800000000	                          call 0x400cefc	        97	stdio2.h	CALL_15
0x400cefc	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      1805	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_30
0x400cf03	    0x4c8ba8480300	           mov r13, qword [rax + 0x348] 	      1805	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_30
0x400cf0a	          0x4d85ed	                           test r13, r13	      1805	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_30
0x400cf0d	     0xf84b0000000	                            je 0x400cfc3	      1805	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_30
0x400cf13	    0x41be00000000	                             mov r14d, 0	      1807	elf.c	FUNCTION_33	IF_15	FOR_3
0x400cf19	        0x498b4528	            mov rax, qword [r13 + 0x28] 	      1809	elf.c	FUNCTION_33	IF_15	FOR_3
0x400cf1d	          0x4885c0	                           test rax, rax	      1807	elf.c	FUNCTION_33	IF_15	FOR_3
0x400cf20	        0x490f44c6	                          cmove rax, r14	      1807	elf.c	FUNCTION_33	IF_15	FOR_3
0x400cf24	      0x410fb74d04	               movzx ecx, word [r13 + 4]	        97	stdio2.h	CALL_15
0x400cf29	        0x4883ec08	                              sub rsp, 8	        97	stdio2.h	CALL_15
0x400cf2d	              0x50	                                push rax	        97	stdio2.h	CALL_15
0x400cf2e	        0x4d8b4d08	                 mov r9, qword [r13 + 8]	        97	stdio2.h	CALL_15
0x400cf32	      0x450fb74502	               movzx r8d, word [r13 + 2]	        97	stdio2.h	CALL_15
0x400cf37	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_15
0x400cf3c	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_15
0x400cf41	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_15
0x400cf44	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_15
0x400cf49	      0xe800000000	                          call 0x400cf4e	        97	stdio2.h	CALL_15
0x400cf4e	        0x498b4538	            mov rax, qword [r13 + 0x38] 	      1810	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16
0x400cf52	        0x4883c410	                           add rsp, 0x10	      1810	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16
0x400cf56	          0x4885c0	                           test rax, rax	      1810	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16
0x400cf59	            0x745b	                            je 0x400cfb6	      1810	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16
0x400cf5b	      0x4883781800	               cmp qword [rax + 0x18], 0	      1810	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16
0x400cf60	            0x7454	                            je 0x400cfb6	      1810	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16
0x400cf62	          0x4889de	                            mov rsi, rbx	        97	stdio2.h	CALL_15
0x400cf65	      0xbf09000000	                              mov edi, 9	        97	stdio2.h	CALL_15
0x400cf6a	      0xe800000000	                          call 0x400cf6f	        97	stdio2.h	CALL_15
0x400cf6f	        0x498b4538	            mov rax, qword [r13 + 0x38] 	      1815	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x400cf73	        0x4c8b6018	            mov r12, qword [rax + 0x18] 	      1815	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x400cf77	          0x4d85e4	                           test r12, r12	      1815	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x400cf7a	            0x742d	                            je 0x400cfa9	      1815	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x400cf7c	      0x498b4c2410	            mov rcx, qword [r12 + 0x10] 	      1819	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x400cf81	          0x4885c9	                           test rcx, rcx	      1818	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x400cf84	        0x490f44ce	                          cmove rcx, r14	      1818	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x400cf88	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_15
0x400cf8d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_15
0x400cf92	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_15
0x400cf95	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_15
0x400cf9a	      0xe800000000	                          call 0x400cf9f	        97	stdio2.h	CALL_15
0x400cf9f	      0x4d8b642418	            mov r12, qword [r12 + 0x18] 	      1817	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x400cfa4	          0x4d85e4	                           test r12, r12	      1815	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x400cfa7	            0x75d3	                           jne 0x400cf7c	      1815	elf.c	FUNCTION_33	IF_15	FOR_3	IF_16	FOR_4
0x400cfa9	          0x4889de	                            mov rsi, rbx	        97	stdio2.h	CALL_15
0x400cfac	      0xbf0a000000	                            mov edi, 0xa	        97	stdio2.h	CALL_15
0x400cfb1	      0xe800000000	                          call 0x400cfb6	        97	stdio2.h	CALL_15
0x400cfb6	        0x4d8b6d30	            mov r13, qword [r13 + 0x30] 	      1805	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_30
0x400cfba	          0x4d85ed	                           test r13, r13	      1805	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_30
0x400cfbd	     0xf8556ffffff	                           jne 0x400cf19	      1805	elf.c	FUNCTION_33	IF_15	FOR_3	CALL_30
0x400cfc3	    0x488b95f80000	            mov rdx, qword [rbp + 0xf8] 	      1825	elf.c	FUNCTION_33	IF_17	CALL_31
0x400cfca	      0xb801000000	                              mov eax, 1	      1843	elf.c	FUNCTION_33
0x400cfcf	    0x83ba880c0000	              cmp dword [rdx + 0xc88], 0	      1825	elf.c	FUNCTION_33	IF_17	CALL_31
0x400cfd6	     0xf84fc000000	                            je 0x400d0d8	      1825	elf.c	FUNCTION_33	IF_17	CALL_31
0x400cfdc	      0xba05000000	                              mov edx, 5	      1829	elf.c	FUNCTION_33	IF_17	CALL_32
0x400cfe1	      0xbe00000000	                              mov esi, 0	      1829	elf.c	FUNCTION_33	IF_17	CALL_32
0x400cfe6	      0xbf00000000	                              mov edi, 0	      1829	elf.c	FUNCTION_33	IF_17	CALL_32
0x400cfeb	      0xe800000000	                          call 0x400cff0	      1829	elf.c	FUNCTION_33	IF_17	CALL_32
0x400cff0	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_15
0x400cff3	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_15
0x400cff8	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_15
0x400cffb	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_15
0x400d000	      0xe800000000	                          call 0x400d005	        97	stdio2.h	CALL_15
0x400d005	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	      1830	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_33
0x400d00c	    0x4c8ba8500300	           mov r13, qword [rax + 0x350] 	      1830	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_33
0x400d013	          0x4d85ed	                           test r13, r13	      1830	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_33
0x400d016	     0xf84b7000000	                            je 0x400d0d3	      1830	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_33
0x400d01c	    0x41bc00000000	                             mov r12d, 0	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_34
0x400d022	        0x498b6d28	            mov rbp, qword [r13 + 0x28] 	      1835	elf.c	FUNCTION_33	IF_17	FOR_5
0x400d026	          0x4885ed	                           test rbp, rbp	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_34
0x400d029	        0x490f44ec	                          cmove rbp, r12	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_34
0x400d02d	      0xba05000000	                              mov edx, 5	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_34
0x400d032	      0xbe00000000	                              mov esi, 0	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_34
0x400d037	      0xbf00000000	                              mov edi, 0	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_34
0x400d03c	      0xe800000000	                          call 0x400d041	      1834	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_34
0x400d041	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_15
0x400d044	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_15
0x400d047	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_15
0x400d04c	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_15
0x400d04f	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_15
0x400d054	      0xe800000000	                          call 0x400d059	        97	stdio2.h	CALL_15
0x400d059	        0x498b6d30	            mov rbp, qword [r13 + 0x30] 	      1836	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x400d05d	          0x4885ed	                           test rbp, rbp	      1836	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x400d060	            0x7442	                            je 0x400d0a4	      1836	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x400d062	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1839	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x400d066	          0x4885c0	                           test rax, rax	      1837	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x400d069	        0x490f44c4	                          cmove rax, r12	      1837	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x400d06d	        0x4883ec08	                              sub rsp, 8	        97	stdio2.h	CALL_15
0x400d071	              0x50	                                push rax	        97	stdio2.h	CALL_15
0x400d072	      0x440fb74d0a	            movzx r9d, word [rbp + 0xa] 	        97	stdio2.h	CALL_15
0x400d077	      0x440fb74508	               movzx r8d, word [rbp + 8]	        97	stdio2.h	CALL_15
0x400d07c	        0x488b4d00	                    mov rcx, qword [rbp]	        97	stdio2.h	CALL_15
0x400d080	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_15
0x400d085	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_15
0x400d08a	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_15
0x400d08d	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_15
0x400d092	      0xe800000000	                          call 0x400d097	        97	stdio2.h	CALL_15
0x400d097	        0x488b6d28	            mov rbp, qword [rbp + 0x28] 	      1836	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x400d09b	        0x4883c410	                           add rsp, 0x10	      1836	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x400d09f	          0x4885ed	                           test rbp, rbp	      1836	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x400d0a2	            0x75be	                           jne 0x400d062	      1836	elf.c	FUNCTION_33	IF_17	FOR_5	FOR_6
0x400d0a4	        0x4d8b6d38	            mov r13, qword [r13 + 0x38] 	      1830	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_33
0x400d0a8	          0x4d85ed	                           test r13, r13	      1830	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_33
0x400d0ab	     0xf8571ffffff	                           jne 0x400d022	      1830	elf.c	FUNCTION_33	IF_17	FOR_5	CALL_33
0x400d0b1	      0xb801000000	                              mov eax, 1	      1843	elf.c	FUNCTION_33
0x400d0b6	            0xeb20	                           jmp 0x400d0d8	      1843	elf.c	FUNCTION_33
0x400d0b8	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1846	elf.c	FUNCTION_33	IF_18
0x400d0bd	      0xb800000000	                              mov eax, 0	      1848	elf.c	FUNCTION_33
0x400d0c2	          0x4885ff	                           test rdi, rdi	      1846	elf.c	FUNCTION_33	IF_18
0x400d0c5	            0x7411	                            je 0x400d0d8	      1846	elf.c	FUNCTION_33	IF_18
0x400d0c7	      0xe800000000	                          call 0x400d0cc	      1847	elf.c	FUNCTION_33	CALL_35
0x400d0cc	      0xb800000000	                              mov eax, 0	      1848	elf.c	FUNCTION_33
0x400d0d1	            0xeb05	                           jmp 0x400d0d8	      1848	elf.c	FUNCTION_33
0x400d0d3	      0xb801000000	                              mov eax, 1	      1843	elf.c	FUNCTION_33
0x400d0d8	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	      1849	elf.c	FUNCTION_33
0x400d0dd	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1849	elf.c	FUNCTION_33
0x400d0e6	     0xf84ab000000	                            je 0x400d197	      1849	elf.c	FUNCTION_33
0x400d0ec	      0xe9a1000000	                           jmp 0x400d192	      1849	elf.c	FUNCTION_33
0x400d0f1	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_15
0x400d0f6	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_15
0x400d0fb	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_15
0x400d0fe	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_15
0x400d103	      0xe800000000	                          call 0x400d108	        97	stdio2.h	CALL_15
0x400d108	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	CALL_15
0x400d10b	      0xba02000000	                              mov edx, 2	        97	stdio2.h	CALL_15
0x400d110	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_15
0x400d115	      0xbf00000000	                              mov edi, 0	        97	stdio2.h	CALL_15
0x400d11a	      0xe800000000	                          call 0x400d11f	        97	stdio2.h	CALL_15
0x400d11f	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      1774	elf.c	FUNCTION_33	IF_4	FOR_2	IF_11	CALL_20
0x400d124	          0x4889de	                            mov rsi, rbx	      1774	elf.c	FUNCTION_33	IF_4	FOR_2	IF_11	CALL_20
0x400d127	          0x4889ef	                            mov rdi, rbp	      1774	elf.c	FUNCTION_33	IF_4	FOR_2	IF_11	CALL_20
0x400d12a	      0xe800000000	                          call 0x400d12f	      1774	elf.c	FUNCTION_33	IF_4	FOR_2	IF_11	CALL_20
0x400d12f	      0xe916fdffff	                           jmp 0x400ce4a	      1774	elf.c	FUNCTION_33	IF_4	FOR_2	IF_11	CALL_20
0x400d134	      0xb900000000	                              mov ecx, 0	      1723	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d139	            0xeb05	                           jmp 0x400d140	      1723	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d13b	      0xb900000000	                              mov ecx, 0	      1738	elf.c	FUNCTION_33	IF_4	FOR_2	SWITCH_1
0x400d140	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_15
0x400d145	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_15
0x400d14a	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_15
0x400d14d	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_15
0x400d152	      0xe800000000	                          call 0x400d157	        97	stdio2.h	CALL_15
0x400d157	      0xe9cafcffff	                           jmp 0x400ce26	        97	stdio2.h	CALL_15
0x400d15c	            0x85d2	                           test edx, edx	      1800	elf.c	FUNCTION_33	IF_15	CALL_28
0x400d15e	     0xf8478feffff	                            je 0x400cfdc	      1800	elf.c	FUNCTION_33	IF_15	CALL_28
0x400d164	      0xe96afdffff	                           jmp 0x400ced3	      1800	elf.c	FUNCTION_33	IF_15	CALL_28
0x400d169	    0x83b8880c0000	              cmp dword [rax + 0xc88], 0	      1794	elf.c	FUNCTION_33	IF_13	CALL_26
0x400d170	     0xf8526fdffff	                           jne 0x400ce9c	      1794	elf.c	FUNCTION_33	IF_13	CALL_26
0x400d176	      0xe958fdffff	                           jmp 0x400ced3	      1794	elf.c	FUNCTION_33	IF_13	CALL_26
0x400d17b	    0x83b8880c0000	              cmp dword [rax + 0xc88], 0	      1794	elf.c	FUNCTION_33	IF_13	CALL_26
0x400d182	     0xf8514fdffff	                           jne 0x400ce9c	      1794	elf.c	FUNCTION_33	IF_13	CALL_26
0x400d188	      0xb801000000	                              mov eax, 1	      1843	elf.c	FUNCTION_33
0x400d18d	      0xe946ffffff	                           jmp 0x400d0d8	      1843	elf.c	FUNCTION_33
0x400d192	      0xe800000000	                          call 0x400d197	      1849	elf.c	FUNCTION_33
0x400d197	        0x4883c458	                           add rsp, 0x58	      1849	elf.c	FUNCTION_33
0x400d19b	              0x5b	                                 pop rbx	      1849	elf.c	FUNCTION_33
0x400d19c	              0x5d	                                 pop rbp	      1849	elf.c	FUNCTION_33
0x400d19d	            0x415c	                                 pop r12	      1849	elf.c	FUNCTION_33
0x400d19f	            0x415d	                                 pop r13	      1849	elf.c	FUNCTION_33
0x400d1a1	            0x415e	                                 pop r14	      1849	elf.c	FUNCTION_33
0x400d1a3	            0x415f	                                 pop r15	      1849	elf.c	FUNCTION_33
0x400d1a5	              0xc3	                                     ret	      1849	elf.c	FUNCTION_33
_bfd_elf_get_synthetic_symtab	FOR,3:ELSE,0:IF,13:WHILE,0:DO,0:SWITCH,0:CALL,17:functions,0	232
0x4010164	            0x4157	                                push r15	     11388	elf.c	FUNCTION_200
0x4010166	            0x4156	                                push r14	     11388	elf.c	FUNCTION_200
0x4010168	            0x4155	                                push r13	     11388	elf.c	FUNCTION_200
0x401016a	            0x4154	                                push r12	     11388	elf.c	FUNCTION_200
0x401016c	              0x55	                                push rbp	     11388	elf.c	FUNCTION_200
0x401016d	              0x53	                                push rbx	     11388	elf.c	FUNCTION_200
0x401016e	        0x4883ec58	                           sub rsp, 0x58	     11388	elf.c	FUNCTION_200
0x4010172	    0x64488b042528	                mov rax, qword fs:[0x28]	     11388	elf.c	FUNCTION_200
0x401017b	      0x4889442448	             mov qword [rsp + 0x48], rax	     11388	elf.c	FUNCTION_200
0x4010180	            0x31c0	                            xor eax, eax	     11388	elf.c	FUNCTION_200
0x4010182	        0x488b4708	                mov rax, qword [rdi + 8]	     11389	elf.c	FUNCTION_200	CALL_1
0x4010186	    0x4c8ba8680300	           mov r13, qword [rax + 0x368] 	     11389	elf.c	FUNCTION_200	CALL_1
0x401018d	    0x49c701000000	                       mov qword [r9], 0	     11401	elf.c	FUNCTION_200
0x4010194	          0x8b4744	            mov eax, dword [rdi + 0x44] 	     11403	elf.c	FUNCTION_200	IF_1
0x4010197	          0xc1e805	                              shr eax, 5	     11403	elf.c	FUNCTION_200	IF_1
0x401019a	            0xa842	                           test al, 0x42	     11406	elf.c	FUNCTION_200	IF_2
0x401019c	     0xf84e2020000	                            je 0x4010484	     11406	elf.c	FUNCTION_200	IF_2
0x40101a2	          0x4989fc	                            mov r12, rdi	     11406	elf.c	FUNCTION_200	IF_2
0x40101a5	          0x4c89c5	                             mov rbp, r8	     11406	elf.c	FUNCTION_200	IF_2
0x40101a8	          0x4d89cf	                             mov r15, r9	     11406	elf.c	FUNCTION_200	IF_2
0x40101ab	          0x4885c9	                           test rcx, rcx	     11406	elf.c	FUNCTION_200	IF_2
0x40101ae	     0xf8ed0020000	                           jle 0x4010484	     11406	elf.c	FUNCTION_200	IF_2
0x40101b4	    0x4983bd980200	              cmp qword [r13 + 0x298], 0	     11409	elf.c	FUNCTION_200	IF_3
0x40101bc	     0xf84c9020000	                            je 0x401048b	     11409	elf.c	FUNCTION_200	IF_3
0x40101c2	    0x498bb5f00200	           mov rsi, qword [r13 + 0x2f0] 	     11412	elf.c	FUNCTION_200
0x40101c9	          0x4885f6	                           test rsi, rsi	     11413	elf.c	FUNCTION_200	IF_4
0x40101cc	            0x7519	                           jne 0x40101e7	     11413	elf.c	FUNCTION_200	IF_4
0x40101ce	    0x410fb6858803	          movzx eax, byte [r13 + 0x388] 	     11414	elf.c	FUNCTION_200	IF_4
0x40101d6	          0x83e020	                           and eax, 0x20	     11414	elf.c	FUNCTION_200	IF_4
0x40101d9	      0xbe00000000	                              mov esi, 0	     11414	elf.c	FUNCTION_200	IF_4
0x40101de	      0xb800000000	                              mov eax, 0	     11414	elf.c	FUNCTION_200	IF_4
0x40101e3	        0x480f45f0	                         cmovne rsi, rax	     11414	elf.c	FUNCTION_200	IF_4
0x40101e7	          0x4c89e7	                            mov rdi, r12	     11415	elf.c	FUNCTION_200	CALL_3
0x40101ea	      0xe800000000	                          call 0x40101ef	     11415	elf.c	FUNCTION_200	CALL_3
0x40101ef	          0x4989c6	                            mov r14, rax	     11415	elf.c	FUNCTION_200	CALL_3
0x40101f2	          0x4885c0	                           test rax, rax	     11416	elf.c	FUNCTION_200	IF_5
0x40101f5	     0xf8497020000	                            je 0x4010492	     11416	elf.c	FUNCTION_200	IF_5
0x40101fb	    0x488b98e00000	            mov rbx, qword [rax + 0xe0] 	     11419	elf.c	FUNCTION_200	CALL_4
0x4010202	    0x498b9424f800	            mov rdx, qword [r12 + 0xf8] 	     11420	elf.c	FUNCTION_200	IF_6	CALL_5
0x401020a	      0xb800000000	                              mov eax, 0	     11422	elf.c	FUNCTION_200	IF_6
0x401020f	    0x8bba7c0c0000	           mov edi, dword [rdx + 0xc7c] 	     11420	elf.c	FUNCTION_200	IF_6	CALL_5
0x4010215	          0x397b28	            cmp dword [rbx + 0x28], edi 	     11420	elf.c	FUNCTION_200	IF_6	CALL_5
0x4010218	     0xf858b020000	                           jne 0x40104a9	     11420	elf.c	FUNCTION_200	IF_6	CALL_5
0x401021e	          0x8b5304	                mov edx, dword [rbx + 4]	     11421	elf.c	FUNCTION_200	IF_6
0x4010221	          0x83fa09	                              cmp edx, 9	     11421	elf.c	FUNCTION_200	IF_6
0x4010224	            0x7409	                            je 0x401022f	     11421	elf.c	FUNCTION_200	IF_6
0x4010226	          0x83fa04	                              cmp edx, 4	     11421	elf.c	FUNCTION_200	IF_6
0x4010229	     0xf857a020000	                           jne 0x40104a9	     11421	elf.c	FUNCTION_200	IF_6
0x401022f	      0xbe00000000	                              mov esi, 0	     11424	elf.c	FUNCTION_200	CALL_6
0x4010234	          0x4c89e7	                            mov rdi, r12	     11424	elf.c	FUNCTION_200	CALL_6
0x4010237	      0xe800000000	                          call 0x401023c	     11424	elf.c	FUNCTION_200	CALL_6
0x401023c	          0x4889c7	                            mov rdi, rax	     11424	elf.c	FUNCTION_200	CALL_6
0x401023f	        0x48890424	                    mov qword [rsp], rax	     11424	elf.c	FUNCTION_200	CALL_6
0x4010243	      0xb800000000	                              mov eax, 0	     11426	elf.c	FUNCTION_200	IF_7
0x4010248	          0x4885ff	                           test rdi, rdi	     11425	elf.c	FUNCTION_200	IF_7
0x401024b	     0xf8458020000	                            je 0x40104a9	     11425	elf.c	FUNCTION_200	IF_7
0x4010251	      0x498b442408	                mov rax, qword [r12 + 8]	     11428	elf.c	FUNCTION_200	CALL_7
0x4010256	    0x488b80680300	           mov rax, qword [rax + 0x368] 	     11428	elf.c	FUNCTION_200	CALL_7
0x401025d	    0x488b80000300	           mov rax, qword [rax + 0x300] 	     11428	elf.c	FUNCTION_200	CALL_7
0x4010264	      0xb901000000	                              mov ecx, 1	     11429	elf.c	FUNCTION_200	IF_8
0x4010269	          0x4889ea	                            mov rdx, rbp	     11429	elf.c	FUNCTION_200	IF_8
0x401026c	          0x4c89f6	                            mov rsi, r14	     11429	elf.c	FUNCTION_200	IF_8
0x401026f	          0x4c89e7	                            mov rdi, r12	     11429	elf.c	FUNCTION_200	IF_8
0x4010272	          0xff5040	                 call qword [rax + 0x40]	     11429	elf.c	FUNCTION_200	IF_8
0x4010275	            0x85c0	                           test eax, eax	     11429	elf.c	FUNCTION_200	IF_8
0x4010277	     0xf841c020000	                            je 0x4010499	     11429	elf.c	FUNCTION_200	IF_8
0x401027d	        0x498b4638	            mov rax, qword [r14 + 0x38] 	     11432	elf.c	FUNCTION_200
0x4010281	      0xba00000000	                              mov edx, 0	     11432	elf.c	FUNCTION_200
0x4010286	        0x48f77338	                  div qword [rbx + 0x38]	     11432	elf.c	FUNCTION_200
0x401028a	          0x4889c3	                            mov rbx, rax	     11432	elf.c	FUNCTION_200
0x401028d	      0x4889442408	                mov qword [rsp + 8], rax	     11432	elf.c	FUNCTION_200
0x4010292	        0x488d2c40	                  lea rbp, [rax + rax*2]	     11433	elf.c	FUNCTION_200
0x4010296	        0x48c1e504	                              shl rbp, 4	     11433	elf.c	FUNCTION_200
0x401029a	        0x498b7678	            mov rsi, qword [r14 + 0x78] 	     11434	elf.c	FUNCTION_200
0x401029e	          0x4885c0	                           test rax, rax	     11435	elf.c	FUNCTION_200	FOR_1
0x40102a1	            0x7e64	                           jle 0x4010307	     11435	elf.c	FUNCTION_200	FOR_1
0x40102a3	    0x4d8b9d000300	           mov r11, qword [r13 + 0x300] 	     11435	elf.c	FUNCTION_200	FOR_1
0x40102aa	      0x450fb64b09	               movzx r9d, byte [r11 + 9]	     11435	elf.c	FUNCTION_200	FOR_1
0x40102af	        0x49c1e105	                               shl r9, 5	     11435	elf.c	FUNCTION_200	FOR_1
0x40102b3	          0x4889ea	                            mov rdx, rbp	     11435	elf.c	FUNCTION_200	FOR_1
0x40102b6	    0x41b800000000	                              mov r8d, 0	     11435	elf.c	FUNCTION_200	FOR_1
0x40102bc	    0x49c7c2ffffff	             mov r10, 0xffffffffffffffff	     11437	elf.c	FUNCTION_200	FOR_1	CALL_8
0x40102c3	      0xb800000000	                              mov eax, 0	     11437	elf.c	FUNCTION_200	FOR_1	CALL_8
0x40102c8	          0x488b0e	                    mov rcx, qword [rsi]	     11437	elf.c	FUNCTION_200	FOR_1	CALL_8
0x40102cb	          0x488b09	                    mov rcx, qword [rcx]	     11437	elf.c	FUNCTION_200	FOR_1	CALL_8
0x40102ce	        0x488b7908	                mov rdi, qword [rcx + 8]	     11437	elf.c	FUNCTION_200	FOR_1	CALL_8
0x40102d2	          0x4c89d1	                            mov rcx, r10	     11437	elf.c	FUNCTION_200	FOR_1	CALL_8
0x40102d5	            0xf2ae	              repne scasb al, byte [rdi]	     11437	elf.c	FUNCTION_200	FOR_1	CALL_8
0x40102d7	          0x48f7d1	                                 not rcx	     11437	elf.c	FUNCTION_200	FOR_1	CALL_8
0x40102da	      0x488d540a04	                lea rdx, [rdx + rcx + 4]	     11437	elf.c	FUNCTION_200	FOR_1	CALL_8
0x40102df	      0x48837e1000	               cmp qword [rsi + 0x10], 0	     11438	elf.c	FUNCTION_200	FOR_1	IF_9
0x40102e4	            0x7410	                            je 0x40102f6	     11438	elf.c	FUNCTION_200	FOR_1	IF_9
0x40102e6	      0x41807b0c02	                 cmp byte [r11 + 0xc], 2	     11441	elf.c	FUNCTION_200	FOR_1	IF_9
0x40102eb	           0xf94c1	                                 sete cl	     11441	elf.c	FUNCTION_200	FOR_1	IF_9
0x40102ee	           0xfb6c9	                           movzx ecx, cl	     11441	elf.c	FUNCTION_200	FOR_1	IF_9
0x40102f1	      0x488d54ca0b	           lea rdx, [rdx + rcx*8 + 0xb] 	     11441	elf.c	FUNCTION_200	FOR_1	IF_9
0x40102f6	        0x4983c001	                               add r8, 1	     11435	elf.c	FUNCTION_200	FOR_1
0x40102fa	          0x4c01ce	                             add rsi, r9	     11435	elf.c	FUNCTION_200	FOR_1
0x40102fd	          0x4c39c3	                             cmp rbx, r8	     11435	elf.c	FUNCTION_200	FOR_1
0x4010300	            0x75c6	                           jne 0x40102c8	     11435	elf.c	FUNCTION_200	FOR_1
0x4010302	      0xe9d8010000	                           jmp 0x40104df	     11435	elf.c	FUNCTION_200	FOR_1
0x4010307	          0x4889ef	                            mov rdi, rbp	     11448	elf.c	FUNCTION_200	CALL_9
0x401030a	      0xe800000000	                          call 0x401030f	     11448	elf.c	FUNCTION_200	CALL_9
0x401030f	          0x498907	                    mov qword [r15], rax	     11448	elf.c	FUNCTION_200	CALL_9
0x4010312	          0x4885c0	                           test rax, rax	     11449	elf.c	FUNCTION_200	IF_10
0x4010315	           0xf94c0	                                 sete al	     11449	elf.c	FUNCTION_200	IF_10
0x4010318	           0xfb6c0	                           movzx eax, al	     11449	elf.c	FUNCTION_200	IF_10
0x401031b	          0x48f7d8	                                 neg rax	     11449	elf.c	FUNCTION_200	IF_10
0x401031e	      0xe986010000	                           jmp 0x40104a9	     11449	elf.c	FUNCTION_200	IF_10
0x4010323	          0x4c89f2	                            mov rdx, r14	     11460	elf.c	FUNCTION_200	FOR_2	CALL_10
0x4010326	          0x4c89e6	                            mov rsi, r12	     11460	elf.c	FUNCTION_200	FOR_2	CALL_10
0x4010329	          0x4c89ff	                            mov rdi, r15	     11460	elf.c	FUNCTION_200	FOR_2	CALL_10
0x401032c	    0x41ff95980200	                call qword [r13 + 0x298]	     11460	elf.c	FUNCTION_200	FOR_2	CALL_10
0x4010333	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	     11461	elf.c	FUNCTION_200	FOR_2	IF_11
0x4010337	     0xf841f010000	                            je 0x401045c	     11461	elf.c	FUNCTION_200	FOR_2	IF_11
0x401033d	          0x498b16	                    mov rdx, qword [r14]	     11464	elf.c	FUNCTION_200	FOR_2
0x4010340	          0x488b12	                    mov rdx, qword [rdx]	     11464	elf.c	FUNCTION_200	FOR_2
0x4010343	          0x488b0a	                    mov rcx, qword [rdx]	     11464	elf.c	FUNCTION_200	FOR_2
0x4010346	          0x48890b	                    mov qword [rbx], rcx	     11464	elf.c	FUNCTION_200	FOR_2
0x4010349	        0x488b4a08	                mov rcx, qword [rdx + 8]	     11464	elf.c	FUNCTION_200	FOR_2
0x401034d	        0x48894b08	                mov qword [rbx + 8], rcx	     11464	elf.c	FUNCTION_200	FOR_2
0x4010351	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	     11464	elf.c	FUNCTION_200	FOR_2
0x4010355	        0x48894b10	             mov qword [rbx + 0x10], rcx	     11464	elf.c	FUNCTION_200	FOR_2
0x4010359	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	     11464	elf.c	FUNCTION_200	FOR_2
0x401035d	        0x48894b18	             mov qword [rbx + 0x18], rcx	     11464	elf.c	FUNCTION_200	FOR_2
0x4010361	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	     11464	elf.c	FUNCTION_200	FOR_2
0x4010365	        0x48894b20	             mov qword [rbx + 0x20], rcx	     11464	elf.c	FUNCTION_200	FOR_2
0x4010369	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	     11464	elf.c	FUNCTION_200	FOR_2
0x401036d	        0x48895328	             mov qword [rbx + 0x28], rdx	     11464	elf.c	FUNCTION_200	FOR_2
0x4010371	          0x8b5318	            mov edx, dword [rbx + 0x18] 	     11467	elf.c	FUNCTION_200	FOR_2	IF_12
0x4010374	          0xf6c201	                              test dl, 1	     11467	elf.c	FUNCTION_200	FOR_2	IF_12
0x4010377	            0x7506	                           jne 0x401037f	     11467	elf.c	FUNCTION_200	FOR_2	IF_12
0x4010379	          0x83ca02	                               or edx, 2	     11468	elf.c	FUNCTION_200	FOR_2	IF_12
0x401037c	          0x895318	             mov dword [rbx + 0x18], edx	     11468	elf.c	FUNCTION_200	FOR_2	IF_12
0x401037f	    0x814b18000020	         or dword [rbx + 0x18], 0x200000	     11469	elf.c	FUNCTION_200	FOR_2
0x4010386	        0x4c896320	             mov qword [rbx + 0x20], r12	     11470	elf.c	FUNCTION_200	FOR_2
0x401038a	      0x492b442428	             sub rax, qword [r12 + 0x28]	     11471	elf.c	FUNCTION_200	FOR_2
0x401038f	        0x48894310	             mov qword [rbx + 0x10], rax	     11471	elf.c	FUNCTION_200	FOR_2
0x4010393	        0x48896b08	                mov qword [rbx + 8], rbp	     11472	elf.c	FUNCTION_200	FOR_2
0x4010397	    0x48c743280000	               mov qword [rbx + 0x28], 0	     11473	elf.c	FUNCTION_200	FOR_2
0x401039f	          0x498b06	                    mov rax, qword [r14]	     11474	elf.c	FUNCTION_200	FOR_2	CALL_11
0x40103a2	          0x488b00	                    mov rax, qword [rax]	     11474	elf.c	FUNCTION_200	FOR_2	CALL_11
0x40103a5	        0x488b7008	                mov rsi, qword [rax + 8]	     11474	elf.c	FUNCTION_200	FOR_2	CALL_11
0x40103a9	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	     11474	elf.c	FUNCTION_200	FOR_2	CALL_11
0x40103b0	          0x4889f7	                            mov rdi, rsi	     11474	elf.c	FUNCTION_200	FOR_2	CALL_11
0x40103b3	      0xb800000000	                              mov eax, 0	     11474	elf.c	FUNCTION_200	FOR_2	CALL_11
0x40103b8	            0xf2ae	              repne scasb al, byte [rdi]	     11474	elf.c	FUNCTION_200	FOR_2	CALL_11
0x40103ba	          0x48f7d1	                                 not rcx	     11474	elf.c	FUNCTION_200	FOR_2	CALL_11
0x40103bd	        0x488d41ff	                      lea rax, [rcx - 1]	     11474	elf.c	FUNCTION_200	FOR_2	CALL_11
0x40103c1	        0x48890424	                    mov qword [rsp], rax	        53	string3.h	FUNCTION_221	CALL_3
0x40103c5	          0x4889c2	                            mov rdx, rax	        53	string3.h	FUNCTION_221	CALL_3
0x40103c8	          0x4889ef	                            mov rdi, rbp	        53	string3.h	FUNCTION_221	CALL_3
0x40103cb	      0xe800000000	                          call 0x40103d0	        53	string3.h	FUNCTION_221	CALL_3
0x40103d0	        0x48032c24	                    add rbp, qword [rsp]	     11476	elf.c	FUNCTION_200	FOR_2
0x40103d4	      0x49837e1000	               cmp qword [r14 + 0x10], 0	     11477	elf.c	FUNCTION_200	FOR_2	IF_13
0x40103d9	            0x7468	                            je 0x4010443	     11477	elf.c	FUNCTION_200	FOR_2	IF_13
0x40103db	    0x66c745002b30	                  mov word [rbp], 0x302b	        53	string3.h	FUNCTION_221	CALL_3
0x40103e1	        0xc6450278	                mov byte [rbp + 2], 0x78	        53	string3.h	FUNCTION_221	CALL_3
0x40103e5	        0x4883c503	                              add rbp, 3	     11482	elf.c	FUNCTION_200	FOR_2	IF_13
0x40103e9	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	     11483	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_14
0x40103ed	      0x488d742420	                   lea rsi, [rsp + 0x20]	     11483	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_14
0x40103f2	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	     11483	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_14
0x40103f7	      0xe800000000	                          call 0x40103fc	     11483	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_14
0x40103fc	      0x807c242030	            cmp byte [rsp + 0x20], 0x30 	     11484	elf.c	FUNCTION_200	FOR_2	IF_13	FOR_3
0x4010401	            0x7510	                           jne 0x4010413	     11484	elf.c	FUNCTION_200	FOR_2	IF_13	FOR_3
0x4010403	      0x488d742420	                   lea rsi, [rsp + 0x20]	     11484	elf.c	FUNCTION_200	FOR_2	IF_13	FOR_3
0x4010408	        0x4883c601	                              add rsi, 1	     11484	elf.c	FUNCTION_200	FOR_2	IF_13	FOR_3
0x401040c	          0x803e30	                    cmp byte [rsi], 0x30	     11484	elf.c	FUNCTION_200	FOR_2	IF_13	FOR_3
0x401040f	            0x74f7	                            je 0x4010408	     11484	elf.c	FUNCTION_200	FOR_2	IF_13	FOR_3
0x4010411	            0xeb05	                           jmp 0x4010418	     11484	elf.c	FUNCTION_200	FOR_2	IF_13	FOR_3
0x4010413	      0x488d742420	                   lea rsi, [rsp + 0x20]	     11484	elf.c	FUNCTION_200	FOR_2	IF_13	FOR_3
0x4010418	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	     11486	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_15
0x401041f	          0x4889f7	                            mov rdi, rsi	     11486	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_15
0x4010422	      0xb800000000	                              mov eax, 0	     11486	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_15
0x4010427	            0xf2ae	              repne scasb al, byte [rdi]	     11486	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_15
0x4010429	          0x48f7d1	                                 not rcx	     11486	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_15
0x401042c	        0x488d41ff	                      lea rax, [rcx - 1]	     11486	elf.c	FUNCTION_200	FOR_2	IF_13	CALL_15
0x4010430	        0x48890424	                    mov qword [rsp], rax	        53	string3.h	FUNCTION_221	CALL_3
0x4010434	          0x4889c2	                            mov rdx, rax	        53	string3.h	FUNCTION_221	CALL_3
0x4010437	          0x4889ef	                            mov rdi, rbp	        53	string3.h	FUNCTION_221	CALL_3
0x401043a	      0xe800000000	                          call 0x401043f	        53	string3.h	FUNCTION_221	CALL_3
0x401043f	        0x48032c24	                    add rbp, qword [rsp]	     11488	elf.c	FUNCTION_200	FOR_2	IF_13
0x4010443	    0xc7450040706c	             mov dword [rbp], 0x746c7040	        53	string3.h	FUNCTION_221	CALL_3
0x401044a	        0xc6450400	                   mov byte [rbp + 4], 0	        53	string3.h	FUNCTION_221	CALL_3
0x401044e	        0x4883c505	                              add rbp, 5	     11491	elf.c	FUNCTION_200	FOR_2
0x4010452	        0x4883c330	                           add rbx, 0x30	     11492	elf.c	FUNCTION_200	FOR_2
0x4010456	    0x488344241001	               add qword [rsp + 0x10], 1	     11492	elf.c	FUNCTION_200	FOR_2
0x401045c	        0x4983c701	                              add r15, 1	     11455	elf.c	FUNCTION_200	FOR_2
0x4010460	    0x498b85000300	           mov rax, qword [r13 + 0x300] 	     11455	elf.c	FUNCTION_200	FOR_2
0x4010467	         0xfb64009	               movzx eax, byte [rax + 9]	     11455	elf.c	FUNCTION_200	FOR_2
0x401046b	        0x48c1e005	                              shl rax, 5	     11455	elf.c	FUNCTION_200	FOR_2
0x401046f	          0x4901c6	                            add r14, rax	     11455	elf.c	FUNCTION_200	FOR_2
0x4010472	      0x4c397c2408	                cmp qword [rsp + 8], r15	     11455	elf.c	FUNCTION_200	FOR_2
0x4010477	     0xf8fa6feffff	                            jg 0x4010323	     11455	elf.c	FUNCTION_200	FOR_2
0x401047d	      0x488b442410	            mov rax, qword [rsp + 0x10] 	     11455	elf.c	FUNCTION_200	FOR_2
0x4010482	            0xeb25	                           jmp 0x40104a9	     11455	elf.c	FUNCTION_200	FOR_2
0x4010484	      0xb800000000	                              mov eax, 0	     11407	elf.c	FUNCTION_200	IF_2
0x4010489	            0xeb1e	                           jmp 0x40104a9	     11407	elf.c	FUNCTION_200	IF_2
0x401048b	      0xb800000000	                              mov eax, 0	     11410	elf.c	FUNCTION_200	IF_3
0x4010490	            0xeb17	                           jmp 0x40104a9	     11410	elf.c	FUNCTION_200	IF_3
0x4010492	      0xb800000000	                              mov eax, 0	     11417	elf.c	FUNCTION_200	IF_5
0x4010497	            0xeb10	                           jmp 0x40104a9	     11417	elf.c	FUNCTION_200	IF_5
0x4010499	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	     11430	elf.c	FUNCTION_200	IF_8
0x40104a0	            0xeb07	                           jmp 0x40104a9	     11430	elf.c	FUNCTION_200	IF_8
0x40104a2	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	     11450	elf.c	FUNCTION_200	IF_10
0x40104a9	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	     11496	elf.c	FUNCTION_200
0x40104ae	    0x6448333c2528	                xor rdi, qword fs:[0x28]	     11496	elf.c	FUNCTION_200
0x40104b7	            0x7440	                            je 0x40104f9	     11496	elf.c	FUNCTION_200
0x40104b9	            0xeb39	                           jmp 0x40104f4	     11496	elf.c	FUNCTION_200
0x40104bb	          0x4801dd	                            add rbp, rbx	     11452	elf.c	FUNCTION_200
0x40104be	        0x4d8b7678	            mov r14, qword [r14 + 0x78] 	     11453	elf.c	FUNCTION_200
0x40104c2	    0x48c744241000	               mov qword [rsp + 0x10], 0	     11453	elf.c	FUNCTION_200
0x40104cb	    0x41bf00000000	                             mov r15d, 0	     11453	elf.c	FUNCTION_200
0x40104d1	      0x4c89642418	             mov qword [rsp + 0x18], r12	     11453	elf.c	FUNCTION_200
0x40104d6	        0x4c8b2424	                    mov r12, qword [rsp]	     11453	elf.c	FUNCTION_200
0x40104da	      0xe944feffff	                           jmp 0x4010323	     11453	elf.c	FUNCTION_200
0x40104df	          0x4889d7	                            mov rdi, rdx	     11448	elf.c	FUNCTION_200	CALL_9
0x40104e2	      0xe800000000	                          call 0x40104e7	     11448	elf.c	FUNCTION_200	CALL_9
0x40104e7	          0x4889c3	                            mov rbx, rax	     11448	elf.c	FUNCTION_200	CALL_9
0x40104ea	          0x498907	                    mov qword [r15], rax	     11448	elf.c	FUNCTION_200	CALL_9
0x40104ed	          0x4885c0	                           test rax, rax	     11449	elf.c	FUNCTION_200	IF_10
0x40104f0	            0x75c9	                           jne 0x40104bb	     11449	elf.c	FUNCTION_200	IF_10
0x40104f2	            0xebae	                           jmp 0x40104a2	     11449	elf.c	FUNCTION_200	IF_10
0x40104f4	      0xe800000000	                          call 0x40104f9	     11496	elf.c	FUNCTION_200
0x40104f9	        0x4883c458	                           add rsp, 0x58	     11496	elf.c	FUNCTION_200
0x40104fd	              0x5b	                                 pop rbx	     11496	elf.c	FUNCTION_200
0x40104fe	              0x5d	                                 pop rbp	     11496	elf.c	FUNCTION_200
0x40104ff	            0x415c	                                 pop r12	     11496	elf.c	FUNCTION_200
0x4010501	            0x415d	                                 pop r13	     11496	elf.c	FUNCTION_200
0x4010503	            0x415e	                                 pop r14	     11496	elf.c	FUNCTION_200
0x4010505	            0x415f	                                 pop r15	     11496	elf.c	FUNCTION_200
0x4010507	              0xc3	                                     ret	     11496	elf.c	FUNCTION_200
get_segment_type	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,1:CALL,0:functions,0	48
0x4000082	          0x83ff05	                              cmp edi, 5	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4000085	     0xf8482000000	                            je 0x400010d	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400008b	          0x83ff05	                              cmp edi, 5	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400008e	            0x7735	                            ja 0x40000c5	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4000090	          0x83ff02	                              cmp edi, 2	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4000093	            0x7472	                            je 0x4000107	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4000095	          0x83ff02	                              cmp edi, 2	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4000098	            0x7715	                            ja 0x40000af	      1588	elf.c	FUNCTION_32	SWITCH_1
0x400009a	      0xb800000000	                              mov eax, 0	      1590	elf.c	FUNCTION_32	SWITCH_1
0x400009f	            0x85ff	                           test edi, edi	      1588	elf.c	FUNCTION_32	SWITCH_1
0x40000a1	            0x747b	                            je 0x400011e	      1588	elf.c	FUNCTION_32	SWITCH_1
0x40000a3	      0xb800000000	                              mov eax, 0	      1591	elf.c	FUNCTION_32	SWITCH_1
0x40000a8	          0x83ff01	                              cmp edi, 1	      1588	elf.c	FUNCTION_32	SWITCH_1
0x40000ab	            0x7471	                            je 0x400011e	      1588	elf.c	FUNCTION_32	SWITCH_1
0x40000ad	            0xeb6a	                           jmp 0x4000119	      1588	elf.c	FUNCTION_32	SWITCH_1
0x40000af	      0xb800000000	                              mov eax, 0	      1593	elf.c	FUNCTION_32	SWITCH_1
0x40000b4	          0x83ff03	                              cmp edi, 3	      1588	elf.c	FUNCTION_32	SWITCH_1
0x40000b7	            0x7465	                            je 0x400011e	      1588	elf.c	FUNCTION_32	SWITCH_1
0x40000b9	      0xb800000000	                              mov eax, 0	      1594	elf.c	FUNCTION_32	SWITCH_1
0x40000be	          0x83ff04	                              cmp edi, 4	      1588	elf.c	FUNCTION_32	SWITCH_1
0x40000c1	            0x745b	                            je 0x400011e	      1588	elf.c	FUNCTION_32	SWITCH_1
0x40000c3	            0xeb54	                           jmp 0x4000119	      1588	elf.c	FUNCTION_32	SWITCH_1
0x40000c5	    0x81ff50e57464	                     cmp edi, 0x6474e550	      1588	elf.c	FUNCTION_32	SWITCH_1
0x40000cb	            0x7446	                            je 0x4000113	      1588	elf.c	FUNCTION_32	SWITCH_1
0x40000cd	    0x81ff50e57464	                     cmp edi, 0x6474e550	      1588	elf.c	FUNCTION_32	SWITCH_1
0x40000d3	            0x7716	                            ja 0x40000eb	      1588	elf.c	FUNCTION_32	SWITCH_1
0x40000d5	      0xb800000000	                              mov eax, 0	      1596	elf.c	FUNCTION_32	SWITCH_1
0x40000da	          0x83ff06	                              cmp edi, 6	      1588	elf.c	FUNCTION_32	SWITCH_1
0x40000dd	            0x743f	                            je 0x400011e	      1588	elf.c	FUNCTION_32	SWITCH_1
0x40000df	      0xb800000000	                              mov eax, 0	      1597	elf.c	FUNCTION_32	SWITCH_1
0x40000e4	          0x83ff07	                              cmp edi, 7	      1588	elf.c	FUNCTION_32	SWITCH_1
0x40000e7	            0x7435	                            je 0x400011e	      1588	elf.c	FUNCTION_32	SWITCH_1
0x40000e9	            0xeb2e	                           jmp 0x4000119	      1588	elf.c	FUNCTION_32	SWITCH_1
0x40000eb	      0xb800000000	                              mov eax, 0	      1599	elf.c	FUNCTION_32	SWITCH_1
0x40000f0	    0x81ff51e57464	                     cmp edi, 0x6474e551	      1588	elf.c	FUNCTION_32	SWITCH_1
0x40000f6	            0x7426	                            je 0x400011e	      1588	elf.c	FUNCTION_32	SWITCH_1
0x40000f8	      0xb800000000	                              mov eax, 0	      1600	elf.c	FUNCTION_32	SWITCH_1
0x40000fd	    0x81ff52e57464	                     cmp edi, 0x6474e552	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4000103	            0x7419	                            je 0x400011e	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4000105	            0xeb12	                           jmp 0x4000119	      1588	elf.c	FUNCTION_32	SWITCH_1
0x4000107	      0xb800000000	                              mov eax, 0	      1592	elf.c	FUNCTION_32	SWITCH_1
0x400010c	              0xc3	                                     ret	      1592	elf.c	FUNCTION_32	SWITCH_1
0x400010d	      0xb800000000	                              mov eax, 0	      1595	elf.c	FUNCTION_32	SWITCH_1
0x4000112	              0xc3	                                     ret	      1595	elf.c	FUNCTION_32	SWITCH_1
0x4000113	      0xb800000000	                              mov eax, 0	      1598	elf.c	FUNCTION_32	SWITCH_1
0x4000118	              0xc3	                                     ret	      1598	elf.c	FUNCTION_32	SWITCH_1
0x4000119	      0xb800000000	                              mov eax, 0	      1601	elf.c	FUNCTION_32	SWITCH_1
0x400011e	            0xf3c3	                                     ret	      1604	elf.c	FUNCTION_32
elfcore_grok_spu_note	FOR,0:ELSE,0:IF,2:WHILE,0:DO,0:SWITCH,0:CALL,3:functions,0	39
0x4000880	            0x4155	                                push r13	     10421	elf.c	FUNCTION_160
0x4000882	            0x4154	                                push r12	     10421	elf.c	FUNCTION_160
0x4000884	              0x55	                                push rbp	     10421	elf.c	FUNCTION_160
0x4000885	              0x53	                                push rbx	     10421	elf.c	FUNCTION_160
0x4000886	        0x4883ec08	                              sub rsp, 8	     10421	elf.c	FUNCTION_160
0x400088a	          0x4989fd	                            mov r13, rdi	     10421	elf.c	FUNCTION_160
0x400088d	          0x4889f5	                            mov rbp, rsi	     10421	elf.c	FUNCTION_160
0x4000890	          0x4c8b26	                    mov r12, qword [rsi]	     10427	elf.c	FUNCTION_160
0x4000893	          0x4c89e6	                            mov rsi, r12	     10428	elf.c	FUNCTION_160	CALL_1
0x4000896	      0xe800000000	                          call 0x400089b	     10428	elf.c	FUNCTION_160	CALL_1
0x400089b	          0x4889c3	                            mov rbx, rax	     10428	elf.c	FUNCTION_160	CALL_1
0x400089e	      0xb800000000	                              mov eax, 0	     10430	elf.c	FUNCTION_160	IF_1
0x40008a3	          0x4885db	                           test rbx, rbx	     10429	elf.c	FUNCTION_160	IF_1
0x40008a6	            0x7450	                            je 0x40008f8	     10429	elf.c	FUNCTION_160	IF_1
0x40008a8	        0x488b7518	            mov rsi, qword [rbp + 0x18] 	        53	string3.h	FUNCTION_221	CALL_3
0x40008ac	          0x4c89e2	                            mov rdx, r12	        53	string3.h	FUNCTION_221	CALL_3
0x40008af	          0x4889df	                            mov rdi, rbx	        53	string3.h	FUNCTION_221	CALL_3
0x40008b2	      0xe800000000	                          call 0x40008b7	        53	string3.h	FUNCTION_221	CALL_3
0x40008b7	    0x42c64423ff00	             mov byte [rbx + r12 - 1], 0	     10432	elf.c	FUNCTION_160
0x40008bd	      0xba00010000	                          mov edx, 0x100	     10434	elf.c	FUNCTION_160	CALL_3
0x40008c2	          0x4889de	                            mov rsi, rbx	     10434	elf.c	FUNCTION_160	CALL_3
0x40008c5	          0x4c89ef	                            mov rdi, r13	     10434	elf.c	FUNCTION_160	CALL_3
0x40008c8	      0xe800000000	                          call 0x40008cd	     10434	elf.c	FUNCTION_160	CALL_3
0x40008cd	          0x4885c0	                           test rax, rax	     10435	elf.c	FUNCTION_160	IF_2
0x40008d0	            0x7421	                            je 0x40008f3	     10435	elf.c	FUNCTION_160	IF_2
0x40008d2	        0x488b5508	                mov rdx, qword [rbp + 8]	     10438	elf.c	FUNCTION_160
0x40008d6	        0x48895038	             mov qword [rax + 0x38], rdx	     10438	elf.c	FUNCTION_160
0x40008da	        0x488b5528	            mov rdx, qword [rbp + 0x28] 	     10439	elf.c	FUNCTION_160
0x40008de	    0x488990900000	             mov qword [rax + 0x90], rdx	     10439	elf.c	FUNCTION_160
0x40008e5	    0xc74070010000	               mov dword [rax + 0x70], 1	     10440	elf.c	FUNCTION_160
0x40008ec	      0xb801000000	                              mov eax, 1	     10442	elf.c	FUNCTION_160
0x40008f1	            0xeb05	                           jmp 0x40008f8	     10442	elf.c	FUNCTION_160
0x40008f3	      0xb800000000	                              mov eax, 0	     10436	elf.c	FUNCTION_160	IF_2
0x40008f8	        0x4883c408	                              add rsp, 8	     10443	elf.c	FUNCTION_160
0x40008fc	              0x5b	                                 pop rbx	     10443	elf.c	FUNCTION_160
0x40008fd	              0x5d	                                 pop rbp	     10443	elf.c	FUNCTION_160
0x40008fe	            0x415c	                                 pop r12	     10443	elf.c	FUNCTION_160
0x4000900	            0x415d	                                 pop r13	     10443	elf.c	FUNCTION_160
0x4000902	              0xc3	                                     ret	     10443	elf.c	FUNCTION_160
_bfd_elfcore_strndup	FOR,0:ELSE,1:IF,2:WHILE,0:DO,0:SWITCH,0:CALL,3:functions,0	29
0x400dba1	            0x4154	                                push r12	      9360	elf.c	FUNCTION_139
0x400dba3	              0x55	                                push rbp	      9360	elf.c	FUNCTION_139
0x400dba4	              0x53	                                push rbx	      9360	elf.c	FUNCTION_139
0x400dba5	          0x4889fd	                            mov rbp, rdi	      9360	elf.c	FUNCTION_139
0x400dba8	          0x4989f4	                            mov r12, rsi	      9360	elf.c	FUNCTION_139
0x400dbab	          0x4889d3	                            mov rbx, rdx	      9360	elf.c	FUNCTION_139
0x400dbae	      0xbe00000000	                              mov esi, 0	      9362	elf.c	FUNCTION_139	CALL_1
0x400dbb3	          0x4c89e7	                            mov rdi, r12	      9362	elf.c	FUNCTION_139	CALL_1
0x400dbb6	      0xe800000000	                          call 0x400dbbb	      9362	elf.c	FUNCTION_139	CALL_1
0x400dbbb	          0x4889c2	                            mov rdx, rax	      9368	elf.c	FUNCTION_139	ELSE_1
0x400dbbe	          0x4c29e2	                            sub rdx, r12	      9368	elf.c	FUNCTION_139	ELSE_1
0x400dbc1	          0x4885c0	                           test rax, rax	      9368	elf.c	FUNCTION_139	ELSE_1
0x400dbc4	        0x480f45da	                         cmovne rbx, rdx	      9368	elf.c	FUNCTION_139	ELSE_1
0x400dbc8	        0x488d7301	                      lea rsi, [rbx + 1]	      9370	elf.c	FUNCTION_139	CALL_2
0x400dbcc	          0x4889ef	                            mov rdi, rbp	      9370	elf.c	FUNCTION_139	CALL_2
0x400dbcf	      0xe800000000	                          call 0x400dbd4	      9370	elf.c	FUNCTION_139	CALL_2
0x400dbd4	          0x4889c5	                            mov rbp, rax	      9370	elf.c	FUNCTION_139	CALL_2
0x400dbd7	          0x4885c0	                           test rax, rax	      9371	elf.c	FUNCTION_139	IF_2
0x400dbda	            0x7413	                            je 0x400dbef	      9371	elf.c	FUNCTION_139	IF_2
0x400dbdc	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_221	CALL_3
0x400dbdf	          0x4c89e6	                            mov rsi, r12	        53	string3.h	FUNCTION_221	CALL_3
0x400dbe2	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_221	CALL_3
0x400dbe5	      0xe800000000	                          call 0x400dbea	        53	string3.h	FUNCTION_221	CALL_3
0x400dbea	      0xc6441d0000	                 mov byte [rbp + rbx], 0	      9375	elf.c	FUNCTION_139
0x400dbef	          0x4889e8	                            mov rax, rbp	      9378	elf.c	FUNCTION_139
0x400dbf2	              0x5b	                                 pop rbx	      9378	elf.c	FUNCTION_139
0x400dbf3	              0x5d	                                 pop rbp	      9378	elf.c	FUNCTION_139
0x400dbf4	            0x415c	                                 pop r12	      9378	elf.c	FUNCTION_139
0x400dbf6	              0xc3	                                     ret	      9378	elf.c	FUNCTION_139
_bfd_elf_rel_local_sym	FOR,0:ELSE,0:IF,1:WHILE,0:DO,0:SWITCH,0:CALL,2:functions,0	19
0x401007b	          0x4c8b0a	                     mov r9, qword [rdx]	     11311	elf.c	FUNCTION_197
0x401007e	      0x410fb74124	            movzx eax, word [r9 + 0x24] 	     11313	elf.c	FUNCTION_197	IF_1
0x4010083	        0x66258003	                           and ax, 0x380	     11313	elf.c	FUNCTION_197	IF_1
0x4010087	        0x663d0001	                           cmp ax, 0x100	     11313	elf.c	FUNCTION_197	IF_1
0x401008b	            0x7407	                            je 0x4010094	     11313	elf.c	FUNCTION_197	IF_1
0x401008d	          0x4889c8	                            mov rax, rcx	     11314	elf.c	FUNCTION_197	IF_1
0x4010090	          0x480306	                    add rax, qword [rsi]	     11314	elf.c	FUNCTION_197	IF_1
0x4010093	              0xc3	                                     ret	     11319	elf.c	FUNCTION_197
0x4010094	        0x4883ec08	                              sub rsp, 8	     11310	elf.c	FUNCTION_197
0x4010098	          0x4889c8	                            mov rax, rcx	     11310	elf.c	FUNCTION_197
0x401009b	          0x4989d0	                             mov r8, rdx	     11310	elf.c	FUNCTION_197
0x401009e	          0x480306	                    add rax, qword [rsi]	     11316	elf.c	FUNCTION_197	CALL_1
0x40100a1	          0x4889c1	                            mov rcx, rax	     11316	elf.c	FUNCTION_197	CALL_1
0x40100a4	    0x498b81e00000	              mov rax, qword [r9 + 0xe0]	     11316	elf.c	FUNCTION_197	CALL_1
0x40100ab	    0x488b90d80000	            mov rdx, qword [rax + 0xd8] 	     11316	elf.c	FUNCTION_197	CALL_1
0x40100b2	          0x4c89c6	                             mov rsi, r8	     11316	elf.c	FUNCTION_197	CALL_1
0x40100b5	      0xe800000000	                          call 0x40100ba	     11316	elf.c	FUNCTION_197	CALL_1
0x40100ba	        0x4883c408	                              add rsp, 8	     11319	elf.c	FUNCTION_197
0x40100be	              0xc3	                                     ret	     11319	elf.c	FUNCTION_197
_bfd_elf_write_object_contents	FOR,1:ELSE,0:IF,11:WHILE,0:DO,0:SWITCH,0:CALL,17:functions,0	261
0x400970a	            0x4157	                                push r15	      6381	elf.c	FUNCTION_76
0x400970c	            0x4156	                                push r14	      6381	elf.c	FUNCTION_76
0x400970e	            0x4155	                                push r13	      6381	elf.c	FUNCTION_76
0x4009710	            0x4154	                                push r12	      6381	elf.c	FUNCTION_76
0x4009712	              0x55	                                push rbp	      6381	elf.c	FUNCTION_76
0x4009713	              0x53	                                push rbx	      6381	elf.c	FUNCTION_76
0x4009714	        0x4883ec48	                           sub rsp, 0x48	      6381	elf.c	FUNCTION_76
0x4009718	          0x4989fc	                            mov r12, rdi	      6381	elf.c	FUNCTION_76
0x400971b	    0x64488b042528	                mov rax, qword fs:[0x28]	      6381	elf.c	FUNCTION_76
0x4009724	      0x4889442438	             mov qword [rsp + 0x38], rax	      6381	elf.c	FUNCTION_76
0x4009729	            0x31c0	                            xor eax, eax	      6381	elf.c	FUNCTION_76
0x400972b	        0x488b4708	                mov rax, qword [rdi + 8]	      6382	elf.c	FUNCTION_76	CALL_1
0x400972f	    0x4c8bb8680300	           mov r15, qword [rax + 0x368] 	      6382	elf.c	FUNCTION_76	CALL_1
0x4009736	        0xf6474740	           test byte [rdi + 0x47], 0x40 	      6388	elf.c	FUNCTION_76	IF_1
0x400973a	            0x7516	                           jne 0x4009752	      6388	elf.c	FUNCTION_76	IF_1
0x400973c	      0xbe00000000	                              mov esi, 0	      6389	elf.c	FUNCTION_76	IF_1	CALL_2
0x4009741	      0xe800000000	                          call 0x4009746	      6389	elf.c	FUNCTION_76	IF_1	CALL_2
0x4009746	        0x8944241c	             mov dword [rsp + 0x1c], eax	      6389	elf.c	FUNCTION_76	IF_1	CALL_2
0x400974a	            0x85c0	                           test eax, eax	      6389	elf.c	FUNCTION_76	IF_1	CALL_2
0x400974c	     0xf8407040000	                            je 0x4009b59	      6389	elf.c	FUNCTION_76	IF_1	CALL_2
0x4009752	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      6392	elf.c	FUNCTION_76	CALL_3
0x400975a	        0x488b4058	            mov rax, qword [rax + 0x58] 	      6392	elf.c	FUNCTION_76	CALL_3
0x400975e	      0x4889442428	             mov qword [rsp + 0x28], rax	      6392	elf.c	FUNCTION_76	CALL_3
0x4009763	    0xc74424340000	               mov dword [rsp + 0x34], 0	      6394	elf.c	FUNCTION_76
0x400976b	    0x498b87000300	           mov rax, qword [r15 + 0x300] 	      6395	elf.c	FUNCTION_76	CALL_4
0x4009772	        0x488b7028	            mov rsi, qword [rax + 0x28] 	      6395	elf.c	FUNCTION_76	CALL_4
0x4009776	      0x488d542434	                   lea rdx, [rsp + 0x34]	      6395	elf.c	FUNCTION_76	CALL_4
0x400977b	          0x4c89e7	                            mov rdi, r12	      6395	elf.c	FUNCTION_76	CALL_4
0x400977e	      0xe800000000	                          call 0x4009783	      6395	elf.c	FUNCTION_76	CALL_4
0x4009783	        0x8b442434	            mov eax, dword [rsp + 0x34] 	      6396	elf.c	FUNCTION_76	IF_2
0x4009787	        0x8944241c	             mov dword [rsp + 0x1c], eax	      6396	elf.c	FUNCTION_76	IF_2
0x400978b	            0x85c0	                           test eax, eax	      6396	elf.c	FUNCTION_76	IF_2
0x400978d	     0xf85b1030000	                           jne 0x4009b44	      6396	elf.c	FUNCTION_76	IF_2
0x4009793	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      6293	elf.c	FUNCTION_75	CALL_1
0x400979b	    0x488b90980c00	           mov rdx, qword [rax + 0xc98] 	      6293	elf.c	FUNCTION_75	CALL_1
0x40097a2	        0x488b4a40	            mov rcx, qword [rdx + 0x40] 	      6293	elf.c	FUNCTION_75	CALL_1
0x40097a6	      0x48894c2408	                mov qword [rsp + 8], rcx	      6293	elf.c	FUNCTION_75	CALL_1
0x40097ab	        0x488b5858	            mov rbx, qword [rax + 0x58] 	      6295	elf.c	FUNCTION_75	CALL_2
0x40097af	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	      6296	elf.c	FUNCTION_75	CALL_3
0x40097b5	        0x4c8d2cc3	                  lea r13, [rbx + rax*8]	      6296	elf.c	FUNCTION_75	CALL_3
0x40097b9	        0x4883c308	                              add rbx, 8	      6297	elf.c	FUNCTION_75	FOR_1
0x40097bd	          0x4939dd	                            cmp r13, rbx	      6297	elf.c	FUNCTION_75	FOR_1
0x40097c0	     0xf8665010000	                           jbe 0x400992b	      6297	elf.c	FUNCTION_75	FOR_1
0x40097c6	          0x488b2b	                    mov rbp, qword [rbx]	      6299	elf.c	FUNCTION_75	FOR_1
0x40097c9	      0x48837d18ff	cmp qword [rbp + 0x18], 0xffffffffffffffff	      6300	elf.c	FUNCTION_75	FOR_1	IF_1
0x40097ce	     0xf854a010000	                           jne 0x400991e	      6300	elf.c	FUNCTION_75	FOR_1	IF_1
0x40097d4	          0x8b4504	                mov eax, dword [rbp + 4]	      6303	elf.c	FUNCTION_75	FOR_1	IF_1
0x40097d7	          0x83f809	                              cmp eax, 9	      6305	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x40097da	     0xf8427010000	                            je 0x4009907	      6305	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x40097e0	          0x83f804	                              cmp eax, 4	      6305	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x40097e3	     0xf841e010000	                            je 0x4009907	      6305	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x40097e9	        0x4c8b7540	            mov r14, qword [rbp + 0x40] 	      6302	elf.c	FUNCTION_75	FOR_1	IF_1
0x40097ed	          0x4d85f6	                           test r14, r14	      6306	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x40097f0	     0xf8428010000	                            je 0x400991e	      6306	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x40097f6	      0x41f6462308	               test byte [r14 + 0x23], 8	      6306	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x40097fb	     0xf841d010000	                            je 0x400991e	      6306	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2
0x4009801	          0x498b06	                    mov rax, qword [r14]	      6310	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x4009804	      0x4889442410	             mov qword [rsp + 0x10], rax	      6310	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x4009809	        0x488b5548	            mov rdx, qword [rbp + 0x48] 	      6314	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_4	CALL_4
0x400980d	          0x4c89f6	                            mov rsi, r14	      6314	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4009810	          0x4c89e7	                            mov rdi, r12	      6314	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4009813	      0xe800000000	                          call 0x4009818	      6314	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4009818	            0x85c0	                           test eax, eax	      6314	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_4	CALL_4
0x400981a	     0xf8439030000	                            je 0x4009b59	      6314	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4009820	      0x410fb64624	           movzx eax, byte [r14 + 0x24] 	      6318	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x4009825	          0x83e030	                           and eax, 0x30	      6318	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x4009828	            0x3c10	                            cmp al, 0x10	      6318	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400982a	            0x7523	                           jne 0x400984f	      6318	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400982c	    0x41f644244640	           test byte [r12 + 0x46], 0x40 	      6319	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x4009832	            0x751b	                           jne 0x400984f	      6319	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x4009834	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      6323	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x4009839	          0x4c89e7	                            mov rdi, r12	      6323	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x400983c	      0xe81271ffff	        call sym.convert_debug_to_zdebug	      6323	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x4009841	      0x4889442410	             mov qword [rsp + 0x10], rax	      6323	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5
0x4009846	          0x4885c0	                           test rax, rax	      6325	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5	IF_6
0x4009849	     0xf840a030000	                            je 0x4009b59	      6325	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_5	IF_6
0x400984f	        0x837d00ff	     cmp dword [rbp], 0xffffffffffffffff	      6330	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_7
0x4009853	            0x7414	                            je 0x4009869	      6330	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_7
0x4009855	      0xba00000000	                              mov edx, 0	      6331	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_6
0x400985a	      0xbebb180000	                         mov esi, 0x18bb	      6331	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_6
0x400985f	      0xbf00000000	                              mov edi, 0	      6331	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_6
0x4009864	      0xe800000000	                          call 0x4009869	      6331	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_6
0x4009869	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      6333	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x4009871	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      6333	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x4009878	        0x488b7808	                mov rdi, qword [rax + 8]	      6333	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x400987c	      0xba00000000	                              mov edx, 0	      6333	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x4009881	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      6333	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x4009886	      0xe800000000	                          call 0x400988b	      6333	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x400988b	          0x894500	                    mov dword [rbp], eax	      6333	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_8
0x400988e	    0x498b86e00000	            mov rax, qword [r14 + 0xe0] 	      6335	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_9
0x4009895	      0x4889442420	             mov qword [rsp + 0x20], rax	      6335	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	CALL_9
0x400989a	        0x488b7058	            mov rsi, qword [rax + 0x58] 	      6338	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8
0x400989e	          0x4885f6	                           test rsi, rsi	      6338	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8
0x40098a1	            0x741a	                            je 0x40098bd	      6338	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8
0x40098a3	      0xb900000000	                              mov ecx, 0	      6339	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8	CALL_10
0x40098a8	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      6339	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8	CALL_10
0x40098ad	          0x4c89e7	                            mov rdi, r12	      6339	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8	CALL_10
0x40098b0	      0xe8e477ffff	     call sym._bfd_elf_set_reloc_sh_name	      6339	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8	CALL_10
0x40098b5	            0x85c0	                           test eax, eax	      6339	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8	CALL_10
0x40098b7	     0xf849c020000	                            je 0x4009b59	      6339	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_8	CALL_10
0x40098bd	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      6343	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9
0x40098c2	        0x488b7070	            mov rsi, qword [rax + 0x70] 	      6343	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9
0x40098c6	          0x4885f6	                           test rsi, rsi	      6343	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9
0x40098c9	            0x741a	                            je 0x40098e5	      6343	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9
0x40098cb	      0xb901000000	                              mov ecx, 1	      6344	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9	CALL_11
0x40098d0	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      6344	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9	CALL_11
0x40098d5	          0x4c89e7	                            mov rdi, r12	      6344	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9	CALL_11
0x40098d8	      0xe8bc77ffff	     call sym._bfd_elf_set_reloc_sh_name	      6344	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9	CALL_11
0x40098dd	            0x85c0	                           test eax, eax	      6344	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9	CALL_11
0x40098df	     0xf8474020000	                            je 0x4009b59	      6344	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3	IF_9	CALL_11
0x40098e5	        0x498b4638	            mov rax, qword [r14 + 0x38] 	      6350	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x40098e9	        0x48894520	            mov qword [rbp + 0x20], rax 	      6350	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x40098ed	    0x498b86b00000	            mov rax, qword [r14 + 0xb0] 	      6351	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x40098f4	        0x48894548	            mov qword [rbp + 0x48], rax 	      6351	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x40098f8	        0x488b4540	            mov rax, qword [rbp + 0x40] 	      6352	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x40098fc	    0x48c780b00000	               mov qword [rax + 0xb0], 0	      6352	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	IF_3
0x4009907	      0xba01000000	                              mov edx, 1	      6354	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	CALL_12
0x400990c	      0x488b742408	                mov rsi, qword [rsp + 8]	      6354	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	CALL_12
0x4009911	          0x4889ef	                            mov rdi, rbp	      6354	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	CALL_12
0x4009914	      0xe800000000	                          call 0x4009919	      6354	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	CALL_12
0x4009919	      0x4889442408	                mov qword [rsp + 8], rax	      6354	elf.c	FUNCTION_75	FOR_1	IF_1	IF_2	CALL_12
0x400991e	        0x4883c308	                              add rbx, 8	      6297	elf.c	FUNCTION_75	FOR_1
0x4009922	          0x4939dd	                            cmp r13, rbx	      6297	elf.c	FUNCTION_75	FOR_1
0x4009925	     0xf879bfeffff	                            ja 0x40097c6	      6297	elf.c	FUNCTION_75	FOR_1
0x400992b	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      6363	elf.c	FUNCTION_75	CALL_14
0x4009933	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      6363	elf.c	FUNCTION_75	CALL_14
0x400993a	        0x488b7808	                mov rdi, qword [rax + 8]	      6363	elf.c	FUNCTION_75	CALL_14
0x400993e	      0xe800000000	                          call 0x4009943	      6363	elf.c	FUNCTION_75	CALL_14
0x4009943	    0x498b9c24f800	            mov rbx, qword [r12 + 0xf8] 	      6364	elf.c	FUNCTION_75	CALL_15
0x400994b	    0x488b83980c00	           mov rax, qword [rbx + 0xc98] 	      6365	elf.c	FUNCTION_75	CALL_17
0x4009952	        0x488b7808	                mov rdi, qword [rax + 8]	      6365	elf.c	FUNCTION_75	CALL_17
0x4009956	      0xe800000000	                          call 0x400995b	      6365	elf.c	FUNCTION_75	CALL_17
0x400995b	    0x488983d80000	             mov qword [rbx + 0xd8], rax	      6365	elf.c	FUNCTION_75	CALL_17
0x4009962	    0x488dbbb80000	                   lea rdi, [rbx + 0xb8]	      6364	elf.c	FUNCTION_75	CALL_15
0x4009969	      0xba01000000	                              mov edx, 1	      6366	elf.c	FUNCTION_75	CALL_18
0x400996e	      0x488b742408	                mov rsi, qword [rsp + 8]	      6366	elf.c	FUNCTION_75	CALL_18
0x4009973	      0xe800000000	                          call 0x4009978	      6366	elf.c	FUNCTION_75	CALL_18
0x4009978	    0x498bb424f800	            mov rsi, qword [r12 + 0xf8] 	      6369	elf.c	FUNCTION_75	CALL_19
0x4009980	      0x498b542408	                mov rdx, qword [r12 + 8]	      6370	elf.c	FUNCTION_75	CALL_20
0x4009985	    0x488b92680300	           mov rdx, qword [rdx + 0x368] 	      6371	elf.c	FUNCTION_75	CALL_21
0x400998c	    0x488b92000300	           mov rdx, qword [rdx + 0x300] 	      6371	elf.c	FUNCTION_75	CALL_21
0x4009993	         0xfb64a0b	            movzx ecx, byte [rdx + 0xb] 	      6371	elf.c	FUNCTION_75	CALL_21
0x4009997	      0xba01000000	                              mov edx, 1	      6371	elf.c	FUNCTION_75	CALL_21
0x400999c	            0xd3e2	                             shl edx, cl	      6371	elf.c	FUNCTION_75	CALL_21
0x400999e	          0x4863ca	                         movsxd rcx, edx	      4189	elf.c	FUNCTION_57
0x40099a1	      0x488d4408ff	                lea rax, [rax + rcx - 1]	      4189	elf.c	FUNCTION_57
0x40099a6	            0xf7da	                                 neg edx	      4189	elf.c	FUNCTION_57
0x40099a8	          0x4863d2	                         movsxd rdx, edx	      4189	elf.c	FUNCTION_57
0x40099ab	          0x4821d0	                            and rax, rdx	      4189	elf.c	FUNCTION_57
0x40099ae	        0x48894620	             mov qword [rsi + 0x20], rax	      6372	elf.c	FUNCTION_75
0x40099b2	    0x498b9424f800	            mov rdx, qword [r12 + 0xf8] 	      6374	elf.c	FUNCTION_75	CALL_22
0x40099ba	    0x488b8a980c00	           mov rcx, qword [rdx + 0xc98] 	      6374	elf.c	FUNCTION_75	CALL_22
0x40099c1	          0x8b564c	            mov edx, dword [rsi + 0x4c] 	      6374	elf.c	FUNCTION_75	CALL_22
0x40099c4	         0xfaf5648	            imul edx, dword [rsi + 0x48]	      6374	elf.c	FUNCTION_75	CALL_22
0x40099c8	          0x4801d0	                            add rax, rdx	      6374	elf.c	FUNCTION_75	CALL_22
0x40099cb	        0x48894140	             mov qword [rcx + 0x40], rax	      6374	elf.c	FUNCTION_75	CALL_22
0x40099cf	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      6403	elf.c	FUNCTION_76	CALL_6
0x40099d7	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	      6403	elf.c	FUNCTION_76	CALL_6
0x40099dd	          0x83f801	                              cmp eax, 1	      6404	elf.c	FUNCTION_76	FOR_1
0x40099e0	     0xf86ae000000	                           jbe 0x4009a94	      6404	elf.c	FUNCTION_76	FOR_1
0x40099e6	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      6404	elf.c	FUNCTION_76	FOR_1
0x40099eb	        0x488d5908	                      lea rbx, [rcx + 8]	      6404	elf.c	FUNCTION_76	FOR_1
0x40099ef	          0x8d40fe	                      lea eax, [rax - 2]	      6404	elf.c	FUNCTION_76	FOR_1
0x40099f2	      0x488d44c110	          lea rax, [rcx + rax*8 + 0x10] 	      6404	elf.c	FUNCTION_76	FOR_1
0x40099f7	      0x4889442408	                mov qword [rsp + 8], rax	      6404	elf.c	FUNCTION_76	FOR_1
0x40099fc	          0x4889dd	                            mov rbp, rbx	      6404	elf.c	FUNCTION_76	FOR_1
0x40099ff	          0x4c8b2b	                    mov r13, qword [rbx]	      6408	elf.c	FUNCTION_76	FOR_1
0x4009a02	        0x418b7500	                    mov esi, dword [r13]	      6407	elf.c	FUNCTION_76	FOR_1	CALL_8
0x4009a06	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      6407	elf.c	FUNCTION_76	FOR_1	CALL_8
0x4009a0e	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      6407	elf.c	FUNCTION_76	FOR_1	CALL_8
0x4009a15	        0x488b7808	                mov rdi, qword [rax + 8]	      6407	elf.c	FUNCTION_76	FOR_1	CALL_8
0x4009a19	      0xe800000000	                          call 0x4009a1e	      6407	elf.c	FUNCTION_76	FOR_1	CALL_8
0x4009a1e	        0x41894500	                    mov dword [r13], eax	      6407	elf.c	FUNCTION_76	FOR_1	CALL_8
0x4009a22	    0x498b87880000	            mov rax, qword [r15 + 0x88] 	      6409	elf.c	FUNCTION_76	FOR_1	IF_4
0x4009a29	          0x4885c0	                           test rax, rax	      6409	elf.c	FUNCTION_76	FOR_1	IF_4
0x4009a2c	            0x7410	                            je 0x4009a3e	      6409	elf.c	FUNCTION_76	FOR_1	IF_4
0x4009a2e	          0x488b33	                    mov rsi, qword [rbx]	      6410	elf.c	FUNCTION_76	FOR_1	IF_4	IF_5
0x4009a31	          0x4c89e7	                            mov rdi, r12	      6410	elf.c	FUNCTION_76	FOR_1	IF_4	IF_5
0x4009a34	            0xffd0	                                call rax	      6410	elf.c	FUNCTION_76	FOR_1	IF_4	IF_5
0x4009a36	            0x85c0	                           test eax, eax	      6410	elf.c	FUNCTION_76	FOR_1	IF_4	IF_5
0x4009a38	     0xf8410010000	                            je 0x4009b4e	      6410	elf.c	FUNCTION_76	FOR_1	IF_4	IF_5
0x4009a3e	        0x488b4500	                    mov rax, qword [rbp]	      6412	elf.c	FUNCTION_76	FOR_1	IF_6
0x4009a42	      0x4883784800	               cmp qword [rax + 0x48], 0	      6412	elf.c	FUNCTION_76	FOR_1	IF_6
0x4009a47	            0x743c	                            je 0x4009a85	      6412	elf.c	FUNCTION_76	FOR_1	IF_6
0x4009a49	        0x4c8b6820	            mov r13, qword [rax + 0x20] 	      6414	elf.c	FUNCTION_76	FOR_1	IF_6
0x4009a4d	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      6416	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_9
0x4009a51	      0xba00000000	                              mov edx, 0	      6416	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_9
0x4009a56	          0x4c89e7	                            mov rdi, r12	      6416	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_9
0x4009a59	      0xe800000000	                          call 0x4009a5e	      6416	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_9
0x4009a5e	          0x4189c6	                           mov r14d, eax	      6416	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_9
0x4009a61	            0x85c0	                           test eax, eax	      6416	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_9
0x4009a63	     0xf85f0000000	                           jne 0x4009b59	      6416	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_9
0x4009a69	        0x488b4500	                    mov rax, qword [rbp]	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x4009a6d	        0x488b7848	            mov rdi, qword [rax + 0x48] 	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x4009a71	          0x4c89e2	                            mov rdx, r12	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x4009a74	          0x4c89ee	                            mov rsi, r13	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x4009a77	      0xe800000000	                          call 0x4009a7c	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x4009a7c	          0x4939c5	                            cmp r13, rax	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x4009a7f	     0xf85cf000000	                           jne 0x4009b54	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x4009a85	        0x4883c308	                              add rbx, 8	      6417	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7	CALL_10
0x4009a89	      0x483b5c2408	                cmp rbx, qword [rsp + 8]	      6404	elf.c	FUNCTION_76	FOR_1
0x4009a8e	     0xf8568ffffff	                           jne 0x40099fc	      6404	elf.c	FUNCTION_76	FOR_1
0x4009a94	    0x498b9c24f800	            mov rbx, qword [r12 + 0xf8] 	      6423	elf.c	FUNCTION_76	CALL_11
0x4009a9c	    0x488b83980c00	           mov rax, qword [rbx + 0xc98] 	      6424	elf.c	FUNCTION_76	IF_8	CALL_12
0x4009aa3	      0x4883780800	                  cmp qword [rax + 8], 0	      6424	elf.c	FUNCTION_76	IF_8	CALL_12
0x4009aa8	            0x743f	                            je 0x4009ae9	      6424	elf.c	FUNCTION_76	IF_8	CALL_12
0x4009aaa	    0x488bb3d00000	            mov rsi, qword [rbx + 0xd0] 	      6425	elf.c	FUNCTION_76	IF_8	CALL_13
0x4009ab1	      0xba00000000	                              mov edx, 0	      6425	elf.c	FUNCTION_76	IF_8	CALL_13
0x4009ab6	          0x4c89e7	                            mov rdi, r12	      6425	elf.c	FUNCTION_76	IF_8	CALL_13
0x4009ab9	      0xe800000000	                          call 0x4009abe	      6425	elf.c	FUNCTION_76	IF_8	CALL_13
0x4009abe	            0x85c0	                           test eax, eax	      6425	elf.c	FUNCTION_76	IF_8	CALL_13
0x4009ac0	     0xf8593000000	                           jne 0x4009b59	      6425	elf.c	FUNCTION_76	IF_8	CALL_13
0x4009ac6	    0x498b8424f800	            mov rax, qword [r12 + 0xf8] 	      6426	elf.c	FUNCTION_76	IF_8	CALL_15
0x4009ace	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      6426	elf.c	FUNCTION_76	IF_8	CALL_15
0x4009ad5	        0x488b7008	                mov rsi, qword [rax + 8]	      6426	elf.c	FUNCTION_76	IF_8	CALL_15
0x4009ad9	          0x4c89e7	                            mov rdi, r12	      6426	elf.c	FUNCTION_76	IF_8	CALL_15
0x4009adc	      0xe800000000	                          call 0x4009ae1	      6426	elf.c	FUNCTION_76	IF_8	CALL_15
0x4009ae1	        0x8944241c	             mov dword [rsp + 0x1c], eax	      6426	elf.c	FUNCTION_76	IF_8	CALL_15
0x4009ae5	            0x85c0	                           test eax, eax	      6426	elf.c	FUNCTION_76	IF_8	CALL_15
0x4009ae7	            0x7470	                            je 0x4009b59	      6426	elf.c	FUNCTION_76	IF_8	CALL_15
0x4009ae9	    0x498b87400100	           mov rax, qword [r15 + 0x140] 	      6429	elf.c	FUNCTION_76	IF_9
0x4009af0	          0x4885c0	                           test rax, rax	      6429	elf.c	FUNCTION_76	IF_9
0x4009af3	            0x7417	                            je 0x4009b0c	      6429	elf.c	FUNCTION_76	IF_9
0x4009af5	    0x498b9424f800	            mov rdx, qword [r12 + 0xf8] 	      6430	elf.c	FUNCTION_76	CALL_16
0x4009afd	    0x488b92980c00	           mov rdx, qword [rdx + 0xc98] 	      6430	elf.c	FUNCTION_76	CALL_16
0x4009b04	          0x8b7258	            mov esi, dword [rdx + 0x58] 	      6430	elf.c	FUNCTION_76	CALL_16
0x4009b07	          0x4c89e7	                            mov rdi, r12	      6430	elf.c	FUNCTION_76	CALL_16
0x4009b0a	            0xffd0	                                call rax	      6430	elf.c	FUNCTION_76	CALL_16
0x4009b0c	    0x498b87000300	           mov rax, qword [r15 + 0x300] 	      6432	elf.c	FUNCTION_76	IF_10	CALL_17
0x4009b13	          0x4c89e7	                            mov rdi, r12	      6432	elf.c	FUNCTION_76	IF_10	CALL_17
0x4009b16	          0xff5018	                 call qword [rax + 0x18]	      6432	elf.c	FUNCTION_76	IF_10	CALL_17
0x4009b19	        0x8944241c	             mov dword [rsp + 0x1c], eax	      6432	elf.c	FUNCTION_76	IF_10	CALL_17
0x4009b1d	            0x85c0	                           test eax, eax	      6432	elf.c	FUNCTION_76	IF_10	CALL_17
0x4009b1f	            0x7438	                            je 0x4009b59	      6432	elf.c	FUNCTION_76	IF_10	CALL_17
0x4009b21	    0x488b83980c00	           mov rax, qword [rbx + 0xc98] 	      6436	elf.c	FUNCTION_76	IF_11
0x4009b28	        0x488b4020	            mov rax, qword [rax + 0x20] 	      6436	elf.c	FUNCTION_76	IF_11
0x4009b2c	    0xc744241c0100	               mov dword [rsp + 0x1c], 1	      6439	elf.c	FUNCTION_76
0x4009b34	          0x4885c0	                           test rax, rax	      6436	elf.c	FUNCTION_76	IF_11
0x4009b37	            0x7420	                            je 0x4009b59	      6436	elf.c	FUNCTION_76	IF_11
0x4009b39	          0x4c89e7	                            mov rdi, r12	      6437	elf.c	FUNCTION_76	IF_11
0x4009b3c	            0xffd0	                                call rax	      6437	elf.c	FUNCTION_76	IF_11
0x4009b3e	        0x8944241c	             mov dword [rsp + 0x1c], eax	      6437	elf.c	FUNCTION_76	IF_11
0x4009b42	            0xeb15	                           jmp 0x4009b59	      6437	elf.c	FUNCTION_76	IF_11
0x4009b44	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      6397	elf.c	FUNCTION_76	IF_2
0x4009b4c	            0xeb0b	                           jmp 0x4009b59	      6397	elf.c	FUNCTION_76	IF_2
0x4009b4e	        0x8944241c	             mov dword [rsp + 0x1c], eax	      6411	elf.c	FUNCTION_76	FOR_1	IF_4	IF_5
0x4009b52	            0xeb05	                           jmp 0x4009b59	      6411	elf.c	FUNCTION_76	FOR_1	IF_4	IF_5
0x4009b54	      0x448974241c	            mov dword [rsp + 0x1c], r14d	      6418	elf.c	FUNCTION_76	FOR_1	IF_6	IF_7
0x4009b59	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      6440	elf.c	FUNCTION_76
0x4009b5d	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      6440	elf.c	FUNCTION_76
0x4009b62	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6440	elf.c	FUNCTION_76
0x4009b6b	            0x7405	                            je 0x4009b72	      6440	elf.c	FUNCTION_76
0x4009b6d	      0xe800000000	                          call 0x4009b72	      6440	elf.c	FUNCTION_76
0x4009b72	        0x4883c448	                           add rsp, 0x48	      6440	elf.c	FUNCTION_76
0x4009b76	              0x5b	                                 pop rbx	      6440	elf.c	FUNCTION_76
0x4009b77	              0x5d	                                 pop rbp	      6440	elf.c	FUNCTION_76
0x4009b78	            0x415c	                                 pop r12	      6440	elf.c	FUNCTION_76
0x4009b7a	            0x415d	                                 pop r13	      6440	elf.c	FUNCTION_76
0x4009b7c	            0x415e	                                 pop r14	      6440	elf.c	FUNCTION_76
0x4009b7e	            0x415f	                                 pop r15	      6440	elf.c	FUNCTION_76
0x4009b80	              0xc3	                                     ret	      6440	elf.c	FUNCTION_76
_bfd_elf_swap_verdef_out	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,0:functions,0	38
0x4001a04	            0x4154	                                push r12	        86	elf.c	FUNCTION_2
0x4001a06	              0x55	                                push rbp	        86	elf.c	FUNCTION_2
0x4001a07	              0x53	                                push rbx	        86	elf.c	FUNCTION_2
0x4001a08	          0x4889fd	                            mov rbp, rdi	        86	elf.c	FUNCTION_2
0x4001a0b	          0x4989f4	                            mov r12, rsi	        86	elf.c	FUNCTION_2
0x4001a0e	          0x4889d3	                            mov rbx, rdx	        86	elf.c	FUNCTION_2
0x4001a11	           0xfb73e	                   movzx edi, word [rsi]	        87	elf.c	FUNCTION_2
0x4001a14	        0x488b4508	                mov rax, qword [rbp + 8]	        87	elf.c	FUNCTION_2
0x4001a18	          0x4889d6	                            mov rsi, rdx	        87	elf.c	FUNCTION_2
0x4001a1b	    0xff90a8000000	                 call qword [rax + 0xa8]	        87	elf.c	FUNCTION_2
0x4001a21	        0x488d7302	                      lea rsi, [rbx + 2]	        88	elf.c	FUNCTION_2
0x4001a25	    0x410fb77c2402	               movzx edi, word [r12 + 2]	        88	elf.c	FUNCTION_2
0x4001a2b	        0x488b4508	                mov rax, qword [rbp + 8]	        88	elf.c	FUNCTION_2
0x4001a2f	    0xff90a8000000	                 call qword [rax + 0xa8]	        88	elf.c	FUNCTION_2
0x4001a35	        0x488d7304	                      lea rsi, [rbx + 4]	        89	elf.c	FUNCTION_2
0x4001a39	    0x410fb77c2404	               movzx edi, word [r12 + 4]	        89	elf.c	FUNCTION_2
0x4001a3f	        0x488b4508	                mov rax, qword [rbp + 8]	        89	elf.c	FUNCTION_2
0x4001a43	    0xff90a8000000	                 call qword [rax + 0xa8]	        89	elf.c	FUNCTION_2
0x4001a49	        0x488d7306	                      lea rsi, [rbx + 6]	        90	elf.c	FUNCTION_2
0x4001a4d	    0x410fb77c2406	               movzx edi, word [r12 + 6]	        90	elf.c	FUNCTION_2
0x4001a53	        0x488b4508	                mov rax, qword [rbp + 8]	        90	elf.c	FUNCTION_2
0x4001a57	    0xff90a8000000	                 call qword [rax + 0xa8]	        90	elf.c	FUNCTION_2
0x4001a5d	        0x488d7308	                      lea rsi, [rbx + 8]	        91	elf.c	FUNCTION_2
0x4001a61	      0x498b7c2408	                mov rdi, qword [r12 + 8]	        91	elf.c	FUNCTION_2
0x4001a66	        0x488b4508	                mov rax, qword [rbp + 8]	        91	elf.c	FUNCTION_2
0x4001a6a	    0xff9090000000	                 call qword [rax + 0x90]	        91	elf.c	FUNCTION_2
0x4001a70	        0x488d730c	                    lea rsi, [rbx + 0xc]	        92	elf.c	FUNCTION_2
0x4001a74	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	        92	elf.c	FUNCTION_2
0x4001a79	        0x488b4508	                mov rax, qword [rbp + 8]	        92	elf.c	FUNCTION_2
0x4001a7d	    0xff9090000000	                 call qword [rax + 0x90]	        92	elf.c	FUNCTION_2
0x4001a83	        0x488d7310	                   lea rsi, [rbx + 0x10]	        93	elf.c	FUNCTION_2
0x4001a87	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	        93	elf.c	FUNCTION_2
0x4001a8c	        0x488b4508	                mov rax, qword [rbp + 8]	        93	elf.c	FUNCTION_2
0x4001a90	    0xff9090000000	                 call qword [rax + 0x90]	        93	elf.c	FUNCTION_2
0x4001a96	              0x5b	                                 pop rbx	        94	elf.c	FUNCTION_2
0x4001a97	              0x5d	                                 pop rbp	        94	elf.c	FUNCTION_2
0x4001a98	            0x415c	                                 pop r12	        94	elf.c	FUNCTION_2
0x4001a9a	              0xc3	                                     ret	        94	elf.c	FUNCTION_2
elfcore_write_xstatereg	FOR,0:ELSE,1:IF,1:WHILE,0:DO,0:SWITCH,0:CALL,2:functions,0	13
0x400f8ad	        0x4883ec10	                           sub rsp, 0x10	     10783	elf.c	FUNCTION_170
0x400f8b1	          0x4989c9	                             mov r9, rcx	     10783	elf.c	FUNCTION_170
0x400f8b4	        0x488b4708	                mov rax, qword [rdi + 8]	     10785	elf.c	FUNCTION_170	IF_1	CALL_1
0x400f8b8	    0x488b80680300	           mov rax, qword [rax + 0x368] 	     10785	elf.c	FUNCTION_170	IF_1	CALL_1
0x400f8bf	        0x83780c09	                cmp dword [rax + 0xc], 9	     10788	elf.c	FUNCTION_170	ELSE_1
0x400f8c3	      0xb900000000	                              mov ecx, 0	     10788	elf.c	FUNCTION_170	ELSE_1
0x400f8c8	      0xb800000000	                              mov eax, 0	     10788	elf.c	FUNCTION_170	ELSE_1
0x400f8cd	        0x480f44c8	                          cmove rcx, rax	     10788	elf.c	FUNCTION_170	ELSE_1
0x400f8d1	            0x4150	                                 push r8	     10789	elf.c	FUNCTION_170	CALL_2
0x400f8d3	    0x41b802020000	                          mov r8d, 0x202	     10789	elf.c	FUNCTION_170	CALL_2
0x400f8d9	      0xe800000000	                          call 0x400f8de	     10789	elf.c	FUNCTION_170	CALL_2
0x400f8de	        0x4883c418	                           add rsp, 0x18	     10791	elf.c	FUNCTION_170
0x400f8e2	              0xc3	                                     ret	     10791	elf.c	FUNCTION_170
bfd_elf_get_elf_syms	FOR,2:ELSE,1:IF,18:WHILE,0:DO,0:SWITCH,0:CALL,20:functions,0	231
0x4002079	            0x4157	                                push r15	       386	elf.c	FUNCTION_18
0x400207b	            0x4156	                                push r14	       386	elf.c	FUNCTION_18
0x400207d	            0x4155	                                push r13	       386	elf.c	FUNCTION_18
0x400207f	            0x4154	                                push r12	       386	elf.c	FUNCTION_18
0x4002081	              0x55	                                push rbp	       386	elf.c	FUNCTION_18
0x4002082	              0x53	                                push rbx	       386	elf.c	FUNCTION_18
0x4002083	        0x4883ec38	                           sub rsp, 0x38	       386	elf.c	FUNCTION_18
0x4002087	      0x48894c2408	                mov qword [rsp + 8], rcx	       386	elf.c	FUNCTION_18
0x400208c	          0x4c89c5	                             mov rbp, r8	       386	elf.c	FUNCTION_18
0x400208f	        0x4c890c24	                     mov qword [rsp], r9	       386	elf.c	FUNCTION_18
0x4002093	        0x4c8b4708	                 mov r8, qword [rdi + 8]	       400	elf.c	FUNCTION_18	IF_1
0x4002097	      0x4183780805	                   cmp dword [r8 + 8], 5	       400	elf.c	FUNCTION_18	IF_1
0x400209c	            0x7414	                            je 0x40020b2	       400	elf.c	FUNCTION_18	IF_1
0x400209e	      0xba00000000	                              mov edx, 0	       401	elf.c	FUNCTION_18	CALL_1
0x40020a3	      0xbe91010000	                          mov esi, 0x191	       401	elf.c	FUNCTION_18	CALL_1
0x40020a8	      0xbf00000000	                              mov edi, 0	       401	elf.c	FUNCTION_18	CALL_1
0x40020ad	      0xe800000000	                          call 0x40020b2	       401	elf.c	FUNCTION_18	CALL_1
0x40020b2	          0x4889fb	                            mov rbx, rdi	       401	elf.c	FUNCTION_18	CALL_1
0x40020b5	          0x4989d4	                            mov r12, rdx	       401	elf.c	FUNCTION_18	CALL_1
0x40020b8	          0x4885d2	                           test rdx, rdx	       403	elf.c	FUNCTION_18	IF_2
0x40020bb	     0xf8460030000	                            je 0x4002421	       403	elf.c	FUNCTION_18	IF_2
0x40020c1	    0x4c8b8ff80000	              mov r9, qword [rdi + 0xf8]	       408	elf.c	FUNCTION_18	IF_3	CALL_2
0x40020c8	    0x4d8b91e80200	            mov r10, qword [r9 + 0x2e8] 	       408	elf.c	FUNCTION_18	IF_3	CALL_2
0x40020cf	          0x4d85d2	                           test r10, r10	       408	elf.c	FUNCTION_18	IF_3	CALL_2
0x40020d2	            0x7449	                            je 0x400211d	       408	elf.c	FUNCTION_18	IF_3	CALL_2
0x40020d4	        0x498b7958	              mov rdi, qword [r9 + 0x58]	       411	elf.c	FUNCTION_18	IF_3	CALL_3
0x40020d8	    0x418b89fc0200	            mov ecx, dword [r9 + 0x2fc] 	       417	elf.c	FUNCTION_18	IF_3	FOR_1	IF_4	CALL_5
0x40020df	          0x4c89d0	                            mov rax, r10	       417	elf.c	FUNCTION_18	IF_3	FOR_1	IF_4	CALL_5
0x40020e2	          0x8b5028	            mov edx, dword [rax + 0x28] 	       417	elf.c	FUNCTION_18	IF_3	FOR_1	IF_4	CALL_5
0x40020e5	            0x39ca	                            cmp edx, ecx	       417	elf.c	FUNCTION_18	IF_3	FOR_1	IF_4	CALL_5
0x40020e7	            0x7314	                           jae 0x40020fd	       417	elf.c	FUNCTION_18	IF_3	FOR_1	IF_4	CALL_5
0x40020e9	            0x89d2	                            mov edx, edx	       420	elf.c	FUNCTION_18	IF_3	FOR_1	IF_5
0x40020eb	        0x483934d7	           cmp qword [rdi + rdx*8], rsi 	       420	elf.c	FUNCTION_18	IF_3	FOR_1	IF_5
0x40020ef	            0x750c	                           jne 0x40020fd	       420	elf.c	FUNCTION_18	IF_3	FOR_1	IF_5
0x40020f1	      0x4889442418	             mov qword [rsp + 0x18], rax	       422	elf.c	FUNCTION_18	IF_3	FOR_1	IF_5
0x40020f6	          0x4885c0	                           test rax, rax	       427	elf.c	FUNCTION_18	IF_3	IF_6
0x40020f9	            0x752b	                           jne 0x4002126	       427	elf.c	FUNCTION_18	IF_3	IF_6
0x40020fb	            0xeb09	                           jmp 0x4002106	       427	elf.c	FUNCTION_18	IF_3	IF_6
0x40020fd	        0x488b4058	            mov rax, qword [rax + 0x58] 	       414	elf.c	FUNCTION_18	IF_3	FOR_1	CALL_4
0x4002101	          0x4885c0	                           test rax, rax	       414	elf.c	FUNCTION_18	IF_3	FOR_1	CALL_4
0x4002104	            0x75dc	                           jne 0x40020e2	       414	elf.c	FUNCTION_18	IF_3	FOR_1	CALL_4
0x4002106	        0x4983c168	                            add r9, 0x68	       429	elf.c	FUNCTION_18	IF_3	IF_6	IF_7	CALL_6
0x400210a	          0x4c39ce	                             cmp rsi, r9	       431	elf.c	FUNCTION_18	IF_3	IF_6	CALL_7
0x400210d	      0xb800000000	                              mov eax, 0	       431	elf.c	FUNCTION_18	IF_3	IF_6	CALL_7
0x4002112	        0x490f44c2	                          cmove rax, r10	       431	elf.c	FUNCTION_18	IF_3	IF_6	CALL_7
0x4002116	      0x4889442418	             mov qword [rsp + 0x18], rax	       431	elf.c	FUNCTION_18	IF_3	IF_6	CALL_7
0x400211b	            0xeb09	                           jmp 0x4002126	       431	elf.c	FUNCTION_18	IF_3	IF_6	CALL_7
0x400211d	    0x48c744241800	               mov qword [rsp + 0x18], 0	       407	elf.c	FUNCTION_18
0x4002126	    0x4d8bb0680300	            mov r14, qword [r8 + 0x368] 	       441	elf.c	FUNCTION_18	CALL_8
0x400212d	    0x498b86000300	           mov rax, qword [r14 + 0x300] 	       442	elf.c	FUNCTION_18
0x4002134	      0x440fb66805	              movzx r13d, byte [rax + 5]	       442	elf.c	FUNCTION_18
0x4002139	        0x4c8b7e18	            mov r15, qword [rsi + 0x18] 	       444	elf.c	FUNCTION_18
0x400213d	      0x48833c2400	                      cmp qword [rsp], 0	       445	elf.c	FUNCTION_18	IF_8
0x4002142	     0xf8569020000	                           jne 0x40023b1	       445	elf.c	FUNCTION_18	IF_8
0x4002148	          0x4c89ee	                            mov rsi, r13	       447	elf.c	FUNCTION_18	IF_8	CALL_9
0x400214b	          0x4c89e7	                            mov rdi, r12	       447	elf.c	FUNCTION_18	IF_8	CALL_9
0x400214e	      0xe800000000	                          call 0x4002153	       447	elf.c	FUNCTION_18	IF_8	CALL_9
0x4002153	      0x4889442410	             mov qword [rsp + 0x10], rax	       447	elf.c	FUNCTION_18	IF_8	CALL_9
0x4002158	          0x4885c0	                           test rax, rax	       450	elf.c	FUNCTION_18	IF_9
0x400215b	     0xf8430020000	                            je 0x4002391	       450	elf.c	FUNCTION_18	IF_9
0x4002161	      0xe976020000	                           jmp 0x40023dc	       450	elf.c	FUNCTION_18	IF_9
0x4002166	          0x4d89e7	                            mov r15, r12	       443	elf.c	FUNCTION_18
0x4002169	        0x4d0faffd	                           imul r15, r13	       443	elf.c	FUNCTION_18
0x400216d	          0x4889da	                            mov rdx, rbx	       452	elf.c	FUNCTION_18	IF_9	CALL_11
0x4002170	          0x4c89fe	                            mov rsi, r15	       452	elf.c	FUNCTION_18	IF_9	CALL_11
0x4002173	        0x488b3c24	                    mov rdi, qword [rsp]	       452	elf.c	FUNCTION_18	IF_9	CALL_11
0x4002177	      0xe800000000	                          call 0x400217c	       452	elf.c	FUNCTION_18	IF_9	CALL_11
0x400217c	          0x4939c7	                            cmp r15, rax	       452	elf.c	FUNCTION_18	IF_9	CALL_11
0x400217f	     0xf851d020000	                           jne 0x40023a2	       452	elf.c	FUNCTION_18	IF_9	CALL_11
0x4002185	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       458	elf.c	FUNCTION_18	IF_10
0x400218a	          0x4885c0	                           test rax, rax	       458	elf.c	FUNCTION_18	IF_10
0x400218d	     0xf848d000000	                            je 0x4002220	       458	elf.c	FUNCTION_18	IF_10
0x4002193	      0x4883782000	               cmp qword [rax + 0x20], 0	       458	elf.c	FUNCTION_18	IF_10
0x4002198	     0xf8493000000	                            je 0x4002231	       458	elf.c	FUNCTION_18	IF_10
0x400219e	        0x488b4018	            mov rax, qword [rax + 0x18] 	       463	elf.c	FUNCTION_18	ELSE_1
0x40021a2	      0x4889442418	             mov qword [rsp + 0x18], rax	       463	elf.c	FUNCTION_18	ELSE_1
0x40021a7	    0x41bf00000000	                             mov r15d, 0	       439	elf.c	FUNCTION_18
0x40021ad	    0x48837c247000	               cmp qword [rsp + 0x70], 0	       464	elf.c	FUNCTION_18	ELSE_1	IF_11
0x40021b3	            0x751e	                           jne 0x40021d3	       464	elf.c	FUNCTION_18	ELSE_1	IF_11
0x40021b5	      0xbe04000000	                              mov esi, 4	       466	elf.c	FUNCTION_18	ELSE_1	IF_11
0x40021ba	          0x4c89e7	                            mov rdi, r12	       466	elf.c	FUNCTION_18	ELSE_1	IF_11
0x40021bd	      0xe800000000	                          call 0x40021c2	       466	elf.c	FUNCTION_18	ELSE_1	IF_11
0x40021c2	      0x4889442470	             mov qword [rsp + 0x70], rax	       466	elf.c	FUNCTION_18	ELSE_1	IF_11
0x40021c7	          0x4885c0	                           test rax, rax	       470	elf.c	FUNCTION_18	ELSE_1	IF_12
0x40021ca	     0xf843b020000	                            je 0x400240b	       470	elf.c	FUNCTION_18	ELSE_1	IF_12
0x40021d0	          0x4989c7	                            mov r15, rax	       466	elf.c	FUNCTION_18	ELSE_1	IF_11
0x40021d3	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       471	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_13
0x40021d8	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       471	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_13
0x40021dd	        0x488d34b8	                  lea rsi, [rax + rdi*4]	       471	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_13
0x40021e1	      0xba00000000	                              mov edx, 0	       471	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_13
0x40021e6	          0x4889df	                            mov rdi, rbx	       471	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_13
0x40021e9	      0xe800000000	                          call 0x40021ee	       471	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_13
0x40021ee	            0x85c0	                           test eax, eax	       471	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_13
0x40021f0	     0xf854d010000	                           jne 0x4002343	       471	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_13
0x40021f6	    0x4a8d04a50000	                        lea rax, [r12*4]	       462	elf.c	FUNCTION_18	ELSE_1
0x40021fe	          0x4889da	                            mov rdx, rbx	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_14
0x4002201	      0x4889442418	             mov qword [rsp + 0x18], rax	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_14
0x4002206	          0x4889c6	                            mov rsi, rax	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_14
0x4002209	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_14
0x400220e	      0xe800000000	                          call 0x4002213	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_14
0x4002213	      0x4839442418	            cmp qword [rsp + 0x18], rax 	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_14
0x4002218	     0xf852c010000	                           jne 0x400234a	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_14
0x400221e	            0xeb20	                           jmp 0x4002240	       472	elf.c	FUNCTION_18	ELSE_1	IF_12	CALL_14
0x4002220	    0x41bf00000000	                             mov r15d, 0	       439	elf.c	FUNCTION_18
0x4002226	    0x48c744247000	               mov qword [rsp + 0x70], 0	       459	elf.c	FUNCTION_18	IF_10
0x400222f	            0xeb0f	                           jmp 0x4002240	       459	elf.c	FUNCTION_18	IF_10
0x4002231	    0x41bf00000000	                             mov r15d, 0	       439	elf.c	FUNCTION_18
0x4002237	    0x48c744247000	               mov qword [rsp + 0x70], 0	       459	elf.c	FUNCTION_18	IF_10
0x4002240	    0x48c744241800	               mov qword [rsp + 0x18], 0	       440	elf.c	FUNCTION_18
0x4002249	          0x4885ed	                           test rbp, rbp	       479	elf.c	FUNCTION_18	IF_13
0x400224c	            0x751e	                           jne 0x400226c	       479	elf.c	FUNCTION_18	IF_13
0x400224e	      0xbe20000000	                           mov esi, 0x20	       481	elf.c	FUNCTION_18	IF_13
0x4002253	          0x4c89e7	                            mov rdi, r12	       481	elf.c	FUNCTION_18	IF_13
0x4002256	      0xe800000000	                          call 0x400225b	       481	elf.c	FUNCTION_18	IF_13
0x400225b	          0x4889c5	                            mov rbp, rax	       481	elf.c	FUNCTION_18	IF_13
0x400225e	          0x4885c0	                           test rax, rax	       484	elf.c	FUNCTION_18	IF_13	IF_14
0x4002261	     0xf84e8000000	                            je 0x400234f	       484	elf.c	FUNCTION_18	IF_13	IF_14
0x4002267	      0x4889442418	             mov qword [rsp + 0x18], rax	       481	elf.c	FUNCTION_18	IF_13
0x400226c	        0x49c1e405	                              shl r12, 5	       489	elf.c	FUNCTION_18
0x4002270	      0x4a8d442500	                    lea rax, [rbp + r12]	       489	elf.c	FUNCTION_18
0x4002275	          0x4839c5	                            cmp rbp, rax	       490	elf.c	FUNCTION_18	FOR_2
0x4002278	     0xf83d1000000	                           jae 0x400234f	       490	elf.c	FUNCTION_18	FOR_2
0x400227e	          0x4989ec	                            mov r12, rbp	       490	elf.c	FUNCTION_18	FOR_2
0x4002281	        0x488b3c24	                    mov rdi, qword [rsp]	       490	elf.c	FUNCTION_18	FOR_2
0x4002285	      0x4c897c2420	             mov qword [rsp + 0x20], r15	       490	elf.c	FUNCTION_18	FOR_2
0x400228a	          0x4989c7	                            mov r15, rax	       490	elf.c	FUNCTION_18	FOR_2
0x400228d	      0x48896c2428	             mov qword [rsp + 0x28], rbp	       490	elf.c	FUNCTION_18	FOR_2
0x4002292	          0x4889fd	                            mov rbp, rdi	       490	elf.c	FUNCTION_18	FOR_2
0x4002295	    0x498b86000300	           mov rax, qword [r14 + 0x300] 	       494	elf.c	FUNCTION_18	FOR_2	IF_15
0x400229c	          0x4c89e1	                            mov rcx, r12	       494	elf.c	FUNCTION_18	FOR_2	IF_15
0x400229f	      0x488b542470	            mov rdx, qword [rsp + 0x70] 	       494	elf.c	FUNCTION_18	FOR_2	IF_15
0x40022a4	          0x4889ee	                            mov rsi, rbp	       494	elf.c	FUNCTION_18	FOR_2	IF_15
0x40022a7	          0x4889df	                            mov rdi, rbx	       494	elf.c	FUNCTION_18	FOR_2	IF_15
0x40022aa	          0xff5030	                 call qword [rax + 0x30]	       494	elf.c	FUNCTION_18	FOR_2	IF_15
0x40022ad	            0x85c0	                           test eax, eax	       494	elf.c	FUNCTION_18	FOR_2	IF_15
0x40022af	            0x755c	                           jne 0x400230d	       494	elf.c	FUNCTION_18	FOR_2	IF_15
0x40022b1	      0x4c8b7c2420	            mov r15, qword [rsp + 0x20] 	       494	elf.c	FUNCTION_18	FOR_2	IF_15
0x40022b6	      0xba05000000	                              mov edx, 5	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_17
0x40022bb	      0xbe00000000	                              mov esi, 0	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_17
0x40022c0	      0xbf00000000	                              mov edi, 0	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_17
0x40022c5	      0xe800000000	                          call 0x40022ca	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_17
0x40022ca	          0x4889c7	                            mov rdi, rax	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_17
0x40022cd	          0x4889e8	                            mov rax, rbp	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_17
0x40022d0	        0x482b0424	                    sub rax, qword [rsp]	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_17
0x40022d4	      0xba00000000	                              mov edx, 0	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_17
0x40022d9	          0x49f7f5	                                 div r13	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_17
0x40022dc	      0x488b542408	                mov rdx, qword [rsp + 8]	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_17
0x40022e1	          0x4801c2	                            add rdx, rax	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_17
0x40022e4	          0x4889de	                            mov rsi, rbx	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_17
0x40022e7	      0xb800000000	                              mov eax, 0	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_17
0x40022ec	      0xe800000000	                          call 0x40022f1	       498	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_17
0x40022f1	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       503	elf.c	FUNCTION_18	FOR_2	IF_15
0x40022f6	          0x4889c5	                            mov rbp, rax	       503	elf.c	FUNCTION_18	FOR_2	IF_15
0x40022f9	          0x4885c0	                           test rax, rax	       501	elf.c	FUNCTION_18	FOR_2	IF_15	IF_16
0x40022fc	            0x7451	                            je 0x400234f	       501	elf.c	FUNCTION_18	FOR_2	IF_15	IF_16
0x40022fe	          0x4889c7	                            mov rdi, rax	       502	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_18
0x4002301	      0xe800000000	                          call 0x4002306	       502	elf.c	FUNCTION_18	FOR_2	IF_15	CALL_18
0x4002306	      0xbd00000000	                              mov ebp, 0	       503	elf.c	FUNCTION_18	FOR_2	IF_15
0x400230b	            0xeb42	                           jmp 0x400234f	       503	elf.c	FUNCTION_18	FOR_2	IF_15
0x400230d	          0x4c01ed	                            add rbp, r13	       493	elf.c	FUNCTION_18	FOR_2
0x4002310	        0x4983c420	                           add r12, 0x20	       493	elf.c	FUNCTION_18	FOR_2
0x4002314	      0x488b442470	            mov rax, qword [rsp + 0x70] 	       493	elf.c	FUNCTION_18	FOR_2
0x4002319	        0x4883c004	                              add rax, 4	       493	elf.c	FUNCTION_18	FOR_2
0x400231d	    0x48837c247000	               cmp qword [rsp + 0x70], 0	       493	elf.c	FUNCTION_18	FOR_2
0x4002323	    0x480f44442470	           cmove rax, qword [rsp + 0x70]	       493	elf.c	FUNCTION_18	FOR_2
0x4002329	      0x4889442470	             mov qword [rsp + 0x70], rax	       493	elf.c	FUNCTION_18	FOR_2
0x400232e	          0x4d39e7	                            cmp r15, r12	       490	elf.c	FUNCTION_18	FOR_2
0x4002331	     0xf875effffff	                            ja 0x4002295	       490	elf.c	FUNCTION_18	FOR_2
0x4002337	      0x4c8b7c2420	            mov r15, qword [rsp + 0x20] 	       490	elf.c	FUNCTION_18	FOR_2
0x400233c	      0x488b6c2428	            mov rbp, qword [rsp + 0x28] 	       490	elf.c	FUNCTION_18	FOR_2
0x4002341	            0xeb0c	                           jmp 0x400234f	       490	elf.c	FUNCTION_18	FOR_2
0x4002343	      0xbd00000000	                              mov ebp, 0	       474	elf.c	FUNCTION_18	ELSE_1	IF_12
0x4002348	            0xeb05	                           jmp 0x400234f	       474	elf.c	FUNCTION_18	ELSE_1	IF_12
0x400234a	      0xbd00000000	                              mov ebp, 0	       474	elf.c	FUNCTION_18	ELSE_1	IF_12
0x400234f	    0x48837c241000	               cmp qword [rsp + 0x10], 0	       508	elf.c	FUNCTION_18	IF_17
0x4002355	            0x751a	                           jne 0x4002371	       508	elf.c	FUNCTION_18	IF_17
0x4002357	            0xeb22	                           jmp 0x400237b	       508	elf.c	FUNCTION_18	IF_17
0x4002359	    0x41bf00000000	                             mov r15d, 0	       508	elf.c	FUNCTION_18	IF_17
0x400235f	      0xbd00000000	                              mov ebp, 0	       508	elf.c	FUNCTION_18	IF_17
0x4002364	            0xeb0b	                           jmp 0x4002371	       508	elf.c	FUNCTION_18	IF_17
0x4002366	    0x41bf00000000	                             mov r15d, 0	       451	elf.c	FUNCTION_18	IF_9	CALL_10
0x400236c	      0xbd00000000	                              mov ebp, 0	       451	elf.c	FUNCTION_18	IF_9	CALL_10
0x4002371	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       509	elf.c	FUNCTION_18	CALL_19
0x4002376	      0xe800000000	                          call 0x400237b	       509	elf.c	FUNCTION_18	CALL_19
0x400237b	          0x4d85ff	                           test r15, r15	       510	elf.c	FUNCTION_18	IF_18
0x400237e	     0xf849d000000	                            je 0x4002421	       510	elf.c	FUNCTION_18	IF_18
0x4002384	          0x4c89ff	                            mov rdi, r15	       511	elf.c	FUNCTION_18	CALL_20
0x4002387	      0xe800000000	                          call 0x400238c	       511	elf.c	FUNCTION_18	CALL_20
0x400238c	      0xe990000000	                           jmp 0x4002421	       511	elf.c	FUNCTION_18	CALL_20
0x4002391	      0xbd00000000	                              mov ebp, 0	       511	elf.c	FUNCTION_18	CALL_20
0x4002396	      0xe986000000	                           jmp 0x4002421	       511	elf.c	FUNCTION_18	CALL_20
0x400239b	      0xbd00000000	                              mov ebp, 0	       451	elf.c	FUNCTION_18	IF_9	CALL_10
0x40023a0	            0xeb7f	                           jmp 0x4002421	       451	elf.c	FUNCTION_18	IF_9	CALL_10
0x40023a2	    0x48837c241000	               cmp qword [rsp + 0x10], 0	       508	elf.c	FUNCTION_18	IF_17
0x40023a8	            0x75af	                           jne 0x4002359	       508	elf.c	FUNCTION_18	IF_17
0x40023aa	      0xbd00000000	                              mov ebp, 0	       508	elf.c	FUNCTION_18	IF_17
0x40023af	            0xeb70	                           jmp 0x4002421	       508	elf.c	FUNCTION_18	IF_17
0x40023b1	      0x488b742408	                mov rsi, qword [rsp + 8]	       451	elf.c	FUNCTION_18	IF_9	CALL_10
0x40023b6	        0x490faff5	                           imul rsi, r13	       451	elf.c	FUNCTION_18	IF_9	CALL_10
0x40023ba	          0x4c01fe	                            add rsi, r15	       451	elf.c	FUNCTION_18	IF_9	CALL_10
0x40023bd	      0xba00000000	                              mov edx, 0	       451	elf.c	FUNCTION_18	IF_9	CALL_10
0x40023c2	          0x4889df	                            mov rdi, rbx	       451	elf.c	FUNCTION_18	IF_9	CALL_10
0x40023c5	      0xe800000000	                          call 0x40023ca	       451	elf.c	FUNCTION_18	IF_9	CALL_10
0x40023ca	            0x85c0	                           test eax, eax	       451	elf.c	FUNCTION_18	IF_9	CALL_10
0x40023cc	            0x75cd	                           jne 0x400239b	       451	elf.c	FUNCTION_18	IF_9	CALL_10
0x40023ce	    0x48c744241000	               mov qword [rsp + 0x10], 0	       438	elf.c	FUNCTION_18
0x40023d7	      0xe98afdffff	                           jmp 0x4002166	       438	elf.c	FUNCTION_18
0x40023dc	      0x488b742408	                mov rsi, qword [rsp + 8]	       451	elf.c	FUNCTION_18	IF_9	CALL_10
0x40023e1	        0x490faff5	                           imul rsi, r13	       451	elf.c	FUNCTION_18	IF_9	CALL_10
0x40023e5	          0x4c01fe	                            add rsi, r15	       451	elf.c	FUNCTION_18	IF_9	CALL_10
0x40023e8	      0xba00000000	                              mov edx, 0	       451	elf.c	FUNCTION_18	IF_9	CALL_10
0x40023ed	          0x4889df	                            mov rdi, rbx	       451	elf.c	FUNCTION_18	IF_9	CALL_10
0x40023f0	      0xe800000000	                          call 0x40023f5	       451	elf.c	FUNCTION_18	IF_9	CALL_10
0x40023f5	            0x85c0	                           test eax, eax	       451	elf.c	FUNCTION_18	IF_9	CALL_10
0x40023f7	     0xf8569ffffff	                           jne 0x4002366	       451	elf.c	FUNCTION_18	IF_9	CALL_10
0x40023fd	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       448	elf.c	FUNCTION_18	IF_8
0x4002402	        0x48890424	                    mov qword [rsp], rax	       448	elf.c	FUNCTION_18	IF_8
0x4002406	      0xe95bfdffff	                           jmp 0x4002166	       448	elf.c	FUNCTION_18	IF_8
0x400240b	      0x4c8b7c2470	            mov r15, qword [rsp + 0x70] 	       466	elf.c	FUNCTION_18	ELSE_1	IF_11
0x4002410	      0xbd00000000	                              mov ebp, 0	       474	elf.c	FUNCTION_18	ELSE_1	IF_12
0x4002415	    0x48837c241000	               cmp qword [rsp + 0x10], 0	       508	elf.c	FUNCTION_18	IF_17
0x400241b	     0xf8550ffffff	                           jne 0x4002371	       508	elf.c	FUNCTION_18	IF_17
0x4002421	          0x4889e8	                            mov rax, rbp	       514	elf.c	FUNCTION_18
0x4002424	        0x4883c438	                           add rsp, 0x38	       514	elf.c	FUNCTION_18
0x4002428	              0x5b	                                 pop rbx	       514	elf.c	FUNCTION_18
0x4002429	              0x5d	                                 pop rbp	       514	elf.c	FUNCTION_18
0x400242a	            0x415c	                                 pop r12	       514	elf.c	FUNCTION_18
0x400242c	            0x415d	                                 pop r13	       514	elf.c	FUNCTION_18
0x400242e	            0x415e	                                 pop r14	       514	elf.c	FUNCTION_18
0x4002430	            0x415f	                                 pop r15	       514	elf.c	FUNCTION_18
0x4002432	              0xc3	                                     ret	       514	elf.c	FUNCTION_18
elfcore_write_aarch_hw_watch	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,1:functions,0	8
0x400fae1	        0x4883ec10	                           sub rsp, 0x10	     11021	elf.c	FUNCTION_189
0x400fae5	          0x4989c9	                             mov r9, rcx	     11021	elf.c	FUNCTION_189
0x400fae8	            0x4150	                                 push r8	     11023	elf.c	FUNCTION_189	CALL_1
0x400faea	    0x41b803040000	                          mov r8d, 0x403	     11023	elf.c	FUNCTION_189	CALL_1
0x400faf0	      0xb900000000	                              mov ecx, 0	     11023	elf.c	FUNCTION_189	CALL_1
0x400faf5	      0xe800000000	                          call 0x400fafa	     11023	elf.c	FUNCTION_189	CALL_1
0x400fafa	        0x4883c418	                           add rsp, 0x18	     11025	elf.c	FUNCTION_189
0x400fafe	              0xc3	                                     ret	     11025	elf.c	FUNCTION_189
elfcore_grok_prstatus	FOR,0:ELSE,2:IF,6:WHILE,0:DO,0:SWITCH,0:CALL,15:functions,0	50
0x400dac6	        0x4883ec08	                              sub rsp, 8	      9112	elf.c	FUNCTION_115
0x400daca	        0x488b5608	                mov rdx, qword [rsi + 8]	      9116	elf.c	FUNCTION_115	IF_1
0x400dace	    0x4881fa500100	                          cmp rdx, 0x150	      9116	elf.c	FUNCTION_115	IF_1
0x400dad5	            0x7554	                           jne 0x400db2b	      9116	elf.c	FUNCTION_115	IF_1
0x400dad7	        0x488b4e20	            mov rcx, qword [rsi + 0x20] 	      9122	elf.c	FUNCTION_115	IF_1	CALL_1
0x400dadb	          0x8b4120	            mov eax, dword [rcx + 0x20] 	      9122	elf.c	FUNCTION_115	IF_1	CALL_1
0x400dade	    0x488b97f80000	            mov rdx, qword [rdi + 0xf8] 	      9126	elf.c	FUNCTION_115	IF_1	IF_2	CALL_2
0x400dae5	    0x488b92900c00	           mov rdx, qword [rdx + 0xc90] 	      9126	elf.c	FUNCTION_115	IF_1	IF_2	CALL_2
0x400daec	          0x833a00	                      cmp dword [rdx], 0	      9126	elf.c	FUNCTION_115	IF_1	IF_2	CALL_2
0x400daef	            0x7506	                           jne 0x400daf7	      9126	elf.c	FUNCTION_115	IF_1	IF_2	CALL_2
0x400daf1	         0xfbf490c	            movsx ecx, word [rcx + 0xc] 	      9127	elf.c	FUNCTION_115	IF_1	CALL_3
0x400daf5	            0x890a	                    mov dword [rdx], ecx	      9127	elf.c	FUNCTION_115	IF_1	CALL_3
0x400daf7	    0x488b97f80000	            mov rdx, qword [rdi + 0xf8] 	      9128	elf.c	FUNCTION_115	IF_1	IF_3	CALL_4
0x400dafe	    0x488b92900c00	           mov rdx, qword [rdx + 0xc90] 	      9128	elf.c	FUNCTION_115	IF_1	IF_3	CALL_4
0x400db05	        0x837a0400	                  cmp dword [rdx + 4], 0	      9128	elf.c	FUNCTION_115	IF_1	IF_3	CALL_4
0x400db09	            0x7503	                           jne 0x400db0e	      9128	elf.c	FUNCTION_115	IF_1	IF_3	CALL_4
0x400db0b	          0x894204	                mov dword [rdx + 4], eax	      9129	elf.c	FUNCTION_115	IF_1	CALL_5
0x400db0e	    0x488b97f80000	            mov rdx, qword [rdi + 0xf8] 	      9140	elf.c	FUNCTION_115	IF_1	CALL_7
0x400db15	    0x488b92900c00	           mov rdx, qword [rdx + 0xc90] 	      9140	elf.c	FUNCTION_115	IF_1	CALL_7
0x400db1c	          0x894208	                mov dword [rdx + 8], eax	      9140	elf.c	FUNCTION_115	IF_1	CALL_7
0x400db1f	      0xb970000000	                           mov ecx, 0x70	      9121	elf.c	FUNCTION_115	IF_1
0x400db24	      0xbad8000000	                           mov edx, 0xd8	      9120	elf.c	FUNCTION_115	IF_1
0x400db29	            0xeb60	                           jmp 0x400db8b	      9120	elf.c	FUNCTION_115	IF_1
0x400db2b	      0xb801000000	                              mov eax, 1	      9177	elf.c	FUNCTION_115	ELSE_2
0x400db30	    0x4881fa900000	                           cmp rdx, 0x90	      9144	elf.c	FUNCTION_115	ELSE_1	IF_4
0x400db37	            0x7563	                           jne 0x400db9c	      9144	elf.c	FUNCTION_115	ELSE_1	IF_4
0x400db39	        0x488b4e20	            mov rcx, qword [rsi + 0x20] 	      9151	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_8
0x400db3d	          0x8b4118	            mov eax, dword [rcx + 0x18] 	      9151	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_8
0x400db40	    0x488b97f80000	            mov rdx, qword [rdi + 0xf8] 	      9155	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_5	CALL_9
0x400db47	    0x488b92900c00	           mov rdx, qword [rdx + 0xc90] 	      9155	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_5	CALL_9
0x400db4e	          0x833a00	                      cmp dword [rdx], 0	      9155	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_5	CALL_9
0x400db51	            0x7506	                           jne 0x400db59	      9155	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_5	CALL_9
0x400db53	         0xfbf490c	            movsx ecx, word [rcx + 0xc] 	      9156	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_10
0x400db57	            0x890a	                    mov dword [rdx], ecx	      9156	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_10
0x400db59	    0x488b97f80000	            mov rdx, qword [rdi + 0xf8] 	      9157	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_6	CALL_11
0x400db60	    0x488b92900c00	           mov rdx, qword [rdx + 0xc90] 	      9157	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_6	CALL_11
0x400db67	        0x837a0400	                  cmp dword [rdx + 4], 0	      9157	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_6	CALL_11
0x400db6b	            0x7503	                           jne 0x400db70	      9157	elf.c	FUNCTION_115	ELSE_1	IF_4	IF_6	CALL_11
0x400db6d	          0x894204	                mov dword [rdx + 4], eax	      9158	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_12
0x400db70	    0x488b97f80000	            mov rdx, qword [rdi + 0xf8] 	      9169	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_14
0x400db77	    0x488b92900c00	           mov rdx, qword [rdx + 0xc90] 	      9169	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_14
0x400db7e	          0x894208	                mov dword [rdx + 8], eax	      9169	elf.c	FUNCTION_115	ELSE_1	IF_4	CALL_14
0x400db81	      0xb948000000	                           mov ecx, 0x48	      9150	elf.c	FUNCTION_115	ELSE_1	IF_4
0x400db86	      0xba44000000	                           mov edx, 0x44	      9149	elf.c	FUNCTION_115	ELSE_1	IF_4
0x400db8b	          0x4863c9	                         movsxd rcx, ecx	      9181	elf.c	FUNCTION_115	CALL_15
0x400db8e	        0x48034e28	             add rcx, qword [rsi + 0x28]	      9181	elf.c	FUNCTION_115	CALL_15
0x400db92	      0xbe00000000	                              mov esi, 0	      9181	elf.c	FUNCTION_115	CALL_15
0x400db97	      0xe800000000	                          call 0x400db9c	      9181	elf.c	FUNCTION_115	CALL_15
0x400db9c	        0x4883c408	                              add rsp, 8	      9183	elf.c	FUNCTION_115
0x400dba0	              0xc3	                                     ret	      9183	elf.c	FUNCTION_115
bfd_section_from_shdr	FOR,7:ELSE,9:IF,69:WHILE,0:DO,0:SWITCH,2:CALL,114:functions,0	992
0x4002ec8	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      2005	elf.c	FUNCTION_36	IF_1	CALL_1
0x4002ecf	    0x8b90fc020000	           mov edx, dword [rax + 0x2fc] 	      2005	elf.c	FUNCTION_36	IF_1	CALL_1
0x4002ed5	      0xb800000000	                              mov eax, 0	      2006	elf.c	FUNCTION_36	IF_1
0x4002eda	            0x39f2	                            cmp edx, esi	      2005	elf.c	FUNCTION_36	IF_1	CALL_1
0x4002edc	     0xf86a8100000	                           jbe 0x4003f8a	      2005	elf.c	FUNCTION_36	IF_1	CALL_1
0x4002ee2	            0x4157	                                push r15	      1995	elf.c	FUNCTION_36
0x4002ee4	            0x4156	                                push r14	      1995	elf.c	FUNCTION_36
0x4002ee6	            0x4155	                                push r13	      1995	elf.c	FUNCTION_36
0x4002ee8	            0x4154	                                push r12	      1995	elf.c	FUNCTION_36
0x4002eea	              0x55	                                push rbp	      1995	elf.c	FUNCTION_36
0x4002eeb	              0x53	                                push rbx	      1995	elf.c	FUNCTION_36
0x4002eec	        0x4883ec18	                           sub rsp, 0x18	      1995	elf.c	FUNCTION_36
0x4002ef0	            0x89f5	                            mov ebp, esi	      1995	elf.c	FUNCTION_36
0x4002ef2	          0x4889fb	                            mov rbx, rdi	      1995	elf.c	FUNCTION_36
0x4002ef5	    0x8b0500000000	            mov eax, dword [0x04002efb] 	      2008	elf.c	FUNCTION_36	IF_2
0x4002efb	          0x83c001	                              add eax, 1	      2008	elf.c	FUNCTION_36	IF_2
0x4002efe	    0x890500000000	            mov dword [0x04002f04], eax 	      2008	elf.c	FUNCTION_36	IF_2
0x4002f04	          0x83f803	                              cmp eax, 3	      2008	elf.c	FUNCTION_36	IF_2
0x4002f07	     0xf8686000000	                           jbe 0x4002f93	      2008	elf.c	FUNCTION_36	IF_2
0x4002f0d	    0x483b3d000000	            cmp rdi, qword [0x04002f14] 	      2020	elf.c	FUNCTION_36	IF_2	IF_3
0x4002f14	            0x740d	                            je 0x4002f23	      2020	elf.c	FUNCTION_36	IF_2	IF_3
0x4002f16	    0x48c705000000	               mov qword [0x04002f21], 0	      2021	elf.c	FUNCTION_36	IF_2	IF_3
0x4002f21	            0xeb0a	                           jmp 0x4002f2d	      2021	elf.c	FUNCTION_36	IF_2	IF_3
0x4002f23	    0x48833d000000	               cmp qword [0x04002f2b], 0	      2022	elf.c	FUNCTION_36	IF_2	IF_4
0x4002f2b	            0x7520	                           jne 0x4002f4d	      2022	elf.c	FUNCTION_36	IF_2	IF_4
0x4002f2d	            0x89d2	                            mov edx, edx	      2026	elf.c	FUNCTION_36	IF_2	IF_4	CALL_3
0x4002f2f	    0x488d34950000	                        lea rsi, [rdx*4]	      2026	elf.c	FUNCTION_36	IF_2	IF_4	CALL_3
0x4002f37	          0x4889df	                            mov rdi, rbx	      2026	elf.c	FUNCTION_36	IF_2	IF_4	CALL_3
0x4002f3a	      0xe800000000	                          call 0x4002f3f	      2026	elf.c	FUNCTION_36	IF_2	IF_4	CALL_3
0x4002f3f	    0x488905000000	            mov qword [0x04002f46], rax 	      2025	elf.c	FUNCTION_36	IF_2	IF_4
0x4002f46	    0x48891d000000	            mov qword [0x04002f4d], rbx 	      2027	elf.c	FUNCTION_36	IF_2	IF_4
0x4002f4d	            0x89e8	                            mov eax, ebp	      2029	elf.c	FUNCTION_36	IF_2	IF_5
0x4002f4f	    0x488b15000000	            mov rdx, qword [0x04002f56] 	      2029	elf.c	FUNCTION_36	IF_2	IF_5
0x4002f56	        0x488d0482	                  lea rax, [rdx + rax*4]	      2029	elf.c	FUNCTION_36	IF_2	IF_5
0x4002f5a	          0x833800	                      cmp dword [rax], 0	      2029	elf.c	FUNCTION_36	IF_2	IF_5
0x4002f5d	            0x742e	                            je 0x4002f8d	      2029	elf.c	FUNCTION_36	IF_2	IF_5
0x4002f5f	      0xba05000000	                              mov edx, 5	      2032	elf.c	FUNCTION_36	IF_2	IF_5	CALL_5
0x4002f64	      0xbe00000000	                              mov esi, 0	      2032	elf.c	FUNCTION_36	IF_2	IF_5	CALL_5
0x4002f69	      0xbf00000000	                              mov edi, 0	      2032	elf.c	FUNCTION_36	IF_2	IF_5	CALL_5
0x4002f6e	      0xe800000000	                          call 0x4002f73	      2032	elf.c	FUNCTION_36	IF_2	IF_5	CALL_5
0x4002f73	          0x4889de	                            mov rsi, rbx	      2031	elf.c	FUNCTION_36	IF_2	IF_5	CALL_4
0x4002f76	          0x4889c7	                            mov rdi, rax	      2031	elf.c	FUNCTION_36	IF_2	IF_5	CALL_4
0x4002f79	      0xb800000000	                              mov eax, 0	      2031	elf.c	FUNCTION_36	IF_2	IF_5	CALL_4
0x4002f7e	      0xe800000000	                          call 0x4002f83	      2031	elf.c	FUNCTION_36	IF_2	IF_5	CALL_4
0x4002f83	      0xb800000000	                              mov eax, 0	      2033	elf.c	FUNCTION_36	IF_2	IF_5
0x4002f88	      0xe9ef0f0000	                           jmp 0x4003f7c	      2033	elf.c	FUNCTION_36	IF_2	IF_5
0x4002f8d	    0xc70001000000	                      mov dword [rax], 1	      2035	elf.c	FUNCTION_36	IF_2
0x4002f93	    0x4c8babf80000	            mov r13, qword [rbx + 0xf8] 	      2038	elf.c	FUNCTION_36	CALL_6
0x4002f9a	          0x4189ef	                           mov r15d, ebp	      2038	elf.c	FUNCTION_36	CALL_6
0x4002f9d	        0x498b4558	            mov rax, qword [r13 + 0x58] 	      2038	elf.c	FUNCTION_36	CALL_6
0x4002fa1	        0x4e8b24f8	            mov r12, qword [rax + r15*8]	      2038	elf.c	FUNCTION_36	CALL_6
0x4002fa5	        0x418b7550	            mov esi, dword [r13 + 0x50] 	      2040	elf.c	FUNCTION_36	CALL_8
0x4002fa9	        0x418b1424	                    mov edx, dword [r12]	      2040	elf.c	FUNCTION_36	CALL_8
0x4002fad	          0x4889df	                            mov rdi, rbx	      2040	elf.c	FUNCTION_36	CALL_8
0x4002fb0	      0xe800000000	                          call 0x4002fb5	      2040	elf.c	FUNCTION_36	CALL_8
0x4002fb5	          0x4989c6	                            mov r14, rax	      2040	elf.c	FUNCTION_36	CALL_8
0x4002fb8	          0x4885c0	                           test rax, rax	      2042	elf.c	FUNCTION_36	IF_6
0x4002fbb	     0xf841e0f0000	                            je 0x4003edf	      2042	elf.c	FUNCTION_36	IF_6
0x4002fc1	        0x488b4308	                mov rax, qword [rbx + 8]	      2045	elf.c	FUNCTION_36	CALL_9
0x4002fc5	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      2045	elf.c	FUNCTION_36	CALL_9
0x4002fcc	        0x48890424	                    mov qword [rsp], rax	      2045	elf.c	FUNCTION_36	CALL_9
0x4002fd0	      0x418b442404	                mov eax, dword [r12 + 4]	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4002fd5	          0x83f80a	                            cmp eax, 0xa	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4002fd8	     0xf84080f0000	                            je 0x4003ee6	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4002fde	          0x83f80a	                            cmp eax, 0xa	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4002fe1	            0x7758	                            ja 0x400303b	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4002fe3	          0x83f804	                              cmp eax, 4	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4002fe6	     0xf848f080000	                            je 0x400387b	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4002fec	          0x83f804	                              cmp eax, 4	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4002fef	            0x7729	                            ja 0x400301a	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4002ff1	          0x83f801	                              cmp eax, 1	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4002ff4	     0xf84a8000000	                            je 0x40030a2	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4002ffa	          0x83f801	                              cmp eax, 1	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4002ffd	     0xf82e30e0000	                            jb 0x4003ee6	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003003	          0x83f802	                              cmp eax, 2	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003006	     0xf84a6010000	                            je 0x40031b2	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400300c	          0x83f803	                              cmp eax, 3	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400300f	     0xf84fe050000	                            je 0x4003613	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003015	      0xe92d0d0000	                           jmp 0x4003d47	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400301a	          0x83f808	                              cmp eax, 8	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400301d	     0xf8758080000	                            ja 0x400387b	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003023	          0x83f807	                              cmp eax, 7	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003026	            0x737a	                           jae 0x40030a2	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003028	          0x83f805	                              cmp eax, 5	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400302b	            0x7475	                            je 0x40030a2	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400302d	          0x83f806	                              cmp eax, 6	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003030	     0xf8483000000	                            je 0x40030b9	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003036	      0xe90c0d0000	                           jmp 0x4003d47	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400303b	          0x83f812	                           cmp eax, 0x12	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400303e	     0xf84f6040000	                            je 0x400353a	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003044	          0x83f812	                           cmp eax, 0x12	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003047	            0x771c	                            ja 0x4003065	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003049	          0x83f810	                           cmp eax, 0x10	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400304c	     0xf87b00c0000	                            ja 0x4003d02	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003052	          0x83f80e	                            cmp eax, 0xe	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003055	            0x734b	                           jae 0x40030a2	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003057	          0x83f80b	                            cmp eax, 0xb	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400305a	     0xf8481030000	                            je 0x40033e1	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003060	      0xe9e20c0000	                           jmp 0x4003d47	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003065	      0x3dfdffff6f	                     cmp eax, 0x6ffffffd	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400306a	     0xf849b0a0000	                            je 0x4003b0b	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003070	      0x3dfdffff6f	                     cmp eax, 0x6ffffffd	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003075	            0x7710	                            ja 0x4003087	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003077	    0x8d900a000090	             lea edx, [rax - 0x6ffffff6]	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400307d	          0x83fa01	                              cmp edx, 1	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003080	            0x7620	                           jbe 0x40030a2	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003082	      0xe9c00c0000	                           jmp 0x4003d47	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003087	      0x3dfeffff6f	                     cmp eax, 0x6ffffffe	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400308c	     0xf84ce0b0000	                            je 0x4003c60	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003092	      0x3dffffff6f	                     cmp eax, 0x6fffffff	      2046	elf.c	FUNCTION_36	SWITCH_1
0x4003097	     0xf84100b0000	                            je 0x4003bad	      2046	elf.c	FUNCTION_36	SWITCH_1
0x400309d	      0xe9a50c0000	                           jmp 0x4003d47	      2046	elf.c	FUNCTION_36	SWITCH_1
0x40030a2	            0x89e9	                            mov ecx, ebp	      2061	elf.c	FUNCTION_36	SWITCH_1	CALL_10
0x40030a4	          0x4c89f2	                            mov rdx, r14	      2061	elf.c	FUNCTION_36	SWITCH_1	CALL_10
0x40030a7	          0x4c89e6	                            mov rsi, r12	      2061	elf.c	FUNCTION_36	SWITCH_1	CALL_10
0x40030aa	          0x4889df	                            mov rdi, rbx	      2061	elf.c	FUNCTION_36	SWITCH_1	CALL_10
0x40030ad	      0xe800000000	                          call 0x40030b2	      2061	elf.c	FUNCTION_36	SWITCH_1	CALL_10
0x40030b2	            0x89c1	                            mov ecx, eax	      2061	elf.c	FUNCTION_36	SWITCH_1	CALL_10
0x40030b4	      0xe97f0e0000	                           jmp 0x4003f38	      2062	elf.c	FUNCTION_36	SWITCH_1
0x40030b9	            0x89e9	                            mov ecx, ebp	      2065	elf.c	FUNCTION_36	SWITCH_1	IF_7	CALL_11
0x40030bb	          0x4c89f2	                            mov rdx, r14	      2065	elf.c	FUNCTION_36	SWITCH_1	IF_7	CALL_11
0x40030be	          0x4c89e6	                            mov rsi, r12	      2065	elf.c	FUNCTION_36	SWITCH_1	IF_7	CALL_11
0x40030c1	          0x4889df	                            mov rdi, rbx	      2065	elf.c	FUNCTION_36	SWITCH_1	IF_7	CALL_11
0x40030c4	      0xe800000000	                          call 0x40030c9	      2065	elf.c	FUNCTION_36	SWITCH_1	IF_7	CALL_11
0x40030c9	      0xb900000000	                              mov ecx, 0	      2542	elf.c	FUNCTION_36
0x40030ce	            0x85c0	                           test eax, eax	      2065	elf.c	FUNCTION_36	SWITCH_1	IF_7	CALL_11
0x40030d0	     0xf84620e0000	                            je 0x4003f38	      2065	elf.c	FUNCTION_36	SWITCH_1	IF_7	CALL_11
0x40030d6	      0x418b442428	            mov eax, dword [r12 + 0x28] 	      2068	elf.c	FUNCTION_36	SWITCH_1	IF_8	CALL_12
0x40030db	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	      2068	elf.c	FUNCTION_36	SWITCH_1	IF_8	CALL_12
0x40030e2	    0x8bb2fc020000	           mov esi, dword [rdx + 0x2fc] 	      2068	elf.c	FUNCTION_36	SWITCH_1	IF_8	CALL_12
0x40030e8	            0x39f0	                            cmp eax, esi	      2068	elf.c	FUNCTION_36	SWITCH_1	IF_8	CALL_12
0x40030ea	            0x7633	                           jbe 0x400311f	      2068	elf.c	FUNCTION_36	SWITCH_1	IF_8	CALL_12
0x40030ec	          0x4889df	                            mov rdi, rbx	      2072	elf.c	FUNCTION_36	SWITCH_1	IF_8	SWITCH_2	CALL_13
0x40030ef	      0xe800000000	                          call 0x40030f4	      2072	elf.c	FUNCTION_36	SWITCH_1	IF_8	SWITCH_2	CALL_13
0x40030f4	          0x83f805	                              cmp eax, 5	      2072	elf.c	FUNCTION_36	SWITCH_1	IF_8	SWITCH_2	CALL_13
0x40030f7	            0x740e	                            je 0x4003107	      2072	elf.c	FUNCTION_36	SWITCH_1	IF_8	SWITCH_2	CALL_13
0x40030f9	      0xb900000000	                              mov ecx, 0	      2542	elf.c	FUNCTION_36
0x40030fe	          0x83f808	                              cmp eax, 8	      2072	elf.c	FUNCTION_36	SWITCH_1	IF_8	SWITCH_2	CALL_13
0x4003101	     0xf85310e0000	                           jne 0x4003f38	      2072	elf.c	FUNCTION_36	SWITCH_1	IF_8	SWITCH_2	CALL_13
0x4003107	      0x418b442428	            mov eax, dword [r12 + 0x28] 	      2000	elf.c	FUNCTION_36
0x400310c	      0x2d00ff0000	                         sub eax, 0xff00	      2000	elf.c	FUNCTION_36
0x4003111	          0x83f801	                              cmp eax, 1	      2000	elf.c	FUNCTION_36
0x4003114	           0xf96c1	                                setbe cl	      2000	elf.c	FUNCTION_36
0x4003117	           0xfb6c9	                           movzx ecx, cl	      2000	elf.c	FUNCTION_36
0x400311a	      0xe9190e0000	                           jmp 0x4003f38	      2000	elf.c	FUNCTION_36
0x400311f	        0x488b7a58	            mov rdi, qword [rdx + 0x58] 	      2084	elf.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_10	CALL_14
0x4003123	            0x89c0	                            mov eax, eax	      2084	elf.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_10	CALL_14
0x4003125	        0x488b04c7	            mov rax, qword [rdi + rax*8]	      2084	elf.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_10	CALL_14
0x4003129	          0x4885c0	                           test rax, rax	      2084	elf.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_10	CALL_14
0x400312c	     0xf84bb0d0000	                            je 0x4003eed	      2084	elf.c	FUNCTION_36	SWITCH_1	ELSE_1	IF_10	CALL_14
0x4003132	      0xb901000000	                              mov ecx, 1	      2000	elf.c	FUNCTION_36
0x4003137	        0x83780403	                  cmp dword [rax + 4], 3	      2086	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	CALL_15
0x400313b	     0xf84f70d0000	                            je 0x4003f38	      2086	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	CALL_15
0x4003141	    0x8b827c0c0000	           mov eax, dword [rdx + 0xc7c] 	      2093	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_16
0x4003147	            0x85c0	                           test eax, eax	      2093	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_16
0x4003149	            0x7515	                           jne 0x4003160	      2093	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_16
0x400314b	          0x83fe01	                              cmp esi, 1	      2103	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1
0x400314e	     0xf86a00d0000	                           jbe 0x4003ef4	      2103	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1
0x4003154	        0x488b5708	                mov rdx, qword [rdi + 8]	      2105	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	CALL_20
0x4003158	        0x837a040b	                cmp dword [rdx + 4], 0xb	      2106	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x400315c	            0x7539	                           jne 0x4003197	      2106	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x400315e	            0xeb25	                           jmp 0x4003185	      2106	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x4003160	            0x89c0	                            mov eax, eax	      2095	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12	CALL_18
0x4003162	        0x488b04c7	            mov rax, qword [rdi + rax*8]	      2096	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12
0x4003166	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2096	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12
0x4003169	      0x4189442428	             mov dword [r12 + 0x28], eax	      2096	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	IF_12
0x400316e	      0xb901000000	                              mov ecx, 1	      2000	elf.c	FUNCTION_36
0x4003173	      0xe9c00d0000	                           jmp 0x4003f38	      2000	elf.c	FUNCTION_36
0x4003178	          0x488b10	                    mov rdx, qword [rax]	      2105	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	CALL_20
0x400317b	        0x4883c008	                              add rax, 8	      2105	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	CALL_20
0x400317f	        0x837a040b	                cmp dword [rdx + 4], 0xb	      2106	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x4003183	            0x751e	                           jne 0x40031a3	      2106	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x4003185	          0x8b4228	            mov eax, dword [rdx + 0x28] 	      2108	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x4003188	      0x4189442428	             mov dword [r12 + 0x28], eax	      2108	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x400318d	      0xb901000000	                              mov ecx, 1	      2000	elf.c	FUNCTION_36
0x4003192	      0xe9a10d0000	                           jmp 0x4003f38	      2109	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x4003197	        0x488d4710	                   lea rax, [rdi + 0x10]	      2109	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x400319b	          0x8d56fe	                      lea edx, [rsi - 2]	      2109	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x400319e	      0x488d4cd710	          lea rcx, [rdi + rdx*8 + 0x10] 	      2109	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1	IF_13
0x40031a3	          0x4839c8	                            cmp rax, rcx	      2103	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1
0x40031a6	            0x75d0	                           jne 0x4003178	      2103	elf.c	FUNCTION_36	SWITCH_1	ELSE_2	IF_11	ELSE_3	FOR_1
0x40031a8	      0xb901000000	                              mov ecx, 1	      2000	elf.c	FUNCTION_36
0x40031ad	      0xe9860d0000	                           jmp 0x4003f38	      2000	elf.c	FUNCTION_36
0x40031b2	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	      2117	elf.c	FUNCTION_36	SWITCH_1	IF_14	CALL_21
0x40031b9	    0x8b82780c0000	           mov eax, dword [rdx + 0xc78] 	      2117	elf.c	FUNCTION_36	SWITCH_1	IF_14	CALL_21
0x40031bf	      0xb901000000	                              mov ecx, 1	      2000	elf.c	FUNCTION_36
0x40031c4	            0x39c5	                            cmp ebp, eax	      2117	elf.c	FUNCTION_36	SWITCH_1	IF_14	CALL_21
0x40031c6	     0xf846c0d0000	                            je 0x4003f38	      2117	elf.c	FUNCTION_36	SWITCH_1	IF_14	CALL_21
0x40031cc	      0x498b742438	            mov rsi, qword [r12 + 0x38] 	      2120	elf.c	FUNCTION_36	SWITCH_1	IF_15
0x40031d1	        0x488b0c24	                    mov rcx, qword [rsp]	      2120	elf.c	FUNCTION_36	SWITCH_1	IF_15
0x40031d5	    0x488b89000300	           mov rcx, qword [rcx + 0x300] 	      2120	elf.c	FUNCTION_36	SWITCH_1	IF_15
0x40031dc	         0xfb67905	               movzx edi, byte [rcx + 5]	      2120	elf.c	FUNCTION_36	SWITCH_1	IF_15
0x40031e0	      0xb900000000	                              mov ecx, 0	      2542	elf.c	FUNCTION_36
0x40031e5	          0x4839fe	                            cmp rsi, rdi	      2120	elf.c	FUNCTION_36	SWITCH_1	IF_15
0x40031e8	     0xf854a0d0000	                           jne 0x4003f38	      2120	elf.c	FUNCTION_36	SWITCH_1	IF_15
0x40031ee	      0x498b7c2420	            mov rdi, qword [r12 + 0x20] 	      2123	elf.c	FUNCTION_36	SWITCH_1	IF_16
0x40031f3	      0x418b4c242c	            mov ecx, dword [r12 + 0x2c] 	      2123	elf.c	FUNCTION_36	SWITCH_1	IF_16
0x40031f8	        0x480faff1	                           imul rsi, rcx	      2123	elf.c	FUNCTION_36	SWITCH_1	IF_16
0x40031fc	          0x4839fe	                            cmp rsi, rdi	      2123	elf.c	FUNCTION_36	SWITCH_1	IF_16
0x40031ff	            0x7621	                           jbe 0x4003222	      2123	elf.c	FUNCTION_36	SWITCH_1	IF_16
0x4003201	      0xb900000000	                              mov ecx, 0	      2542	elf.c	FUNCTION_36
0x4003206	          0x4885ff	                           test rdi, rdi	      2125	elf.c	FUNCTION_36	SWITCH_1	IF_16	IF_17
0x4003209	     0xf85290d0000	                           jne 0x4003f38	      2125	elf.c	FUNCTION_36	SWITCH_1	IF_16	IF_17
0x400320f	    0x41c744242c00	               mov dword [r12 + 0x2c], 0	      2130	elf.c	FUNCTION_36	SWITCH_1	IF_16
0x4003218	      0xb901000000	                              mov ecx, 1	      2000	elf.c	FUNCTION_36
0x400321d	      0xe9160d0000	                           jmp 0x4003f38	      2131	elf.c	FUNCTION_36	SWITCH_1	IF_16
0x4003222	            0x85c0	                           test eax, eax	      2136	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_22
0x4003224	            0x7430	                            je 0x4003256	      2136	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_22
0x4003226	      0xba05000000	                              mov edx, 5	      2140	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_24
0x400322b	      0xbe00000000	                              mov esi, 0	      2140	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_24
0x4003230	      0xbf00000000	                              mov edi, 0	      2140	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_24
0x4003235	      0xe800000000	                          call 0x400323a	      2140	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_24
0x400323a	            0x89ea	                            mov edx, ebp	      2138	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_23
0x400323c	          0x4889de	                            mov rsi, rbx	      2138	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_23
0x400323f	          0x4889c7	                            mov rdi, rax	      2138	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_23
0x4003242	      0xb800000000	                              mov eax, 0	      2138	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_23
0x4003247	      0xe800000000	                          call 0x400324c	      2138	elf.c	FUNCTION_36	SWITCH_1	IF_18	CALL_23
0x400324c	      0xb901000000	                              mov ecx, 1	      2000	elf.c	FUNCTION_36
0x4003251	      0xe9e20c0000	                           jmp 0x4003f38	      2143	elf.c	FUNCTION_36	SWITCH_1	IF_18
0x4003256	    0x89aa780c0000	            mov dword [rdx + 0xc78], ebp	      2145	elf.c	FUNCTION_36	SWITCH_1	CALL_25
0x400325c	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4003263	        0x498b1424	                    mov rdx, qword [r12]	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4003267	        0x48895068	             mov qword [rax + 0x68], rdx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x400326b	      0x498b542408	                mov rdx, qword [r12 + 8]	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4003270	        0x48895070	             mov qword [rax + 0x70], rdx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4003274	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4003279	        0x48895078	             mov qword [rax + 0x78], rdx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x400327d	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4003282	    0x488990800000	             mov qword [rax + 0x80], rdx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4003289	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x400328e	    0x488990880000	             mov qword [rax + 0x88], rdx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x4003295	      0x498b542428	            mov rdx, qword [r12 + 0x28] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x400329a	    0x488990900000	             mov qword [rax + 0x90], rdx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x40032a1	      0x498b542430	            mov rdx, qword [r12 + 0x30] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x40032a6	    0x488990980000	             mov qword [rax + 0x98], rdx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x40032ad	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x40032b2	    0x488990a00000	             mov qword [rax + 0xa0], rdx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x40032b9	      0x498b542440	            mov rdx, qword [r12 + 0x40] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x40032be	    0x488990a80000	             mov qword [rax + 0xa8], rdx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x40032c5	      0x498b542448	            mov rdx, qword [r12 + 0x48] 	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x40032ca	    0x488990b00000	             mov qword [rax + 0xb0], rdx	      2146	elf.c	FUNCTION_36	SWITCH_1	CALL_26
0x40032d1	    0x4c8b83f80000	              mov r8, qword [rbx + 0xf8]	      2147	elf.c	FUNCTION_36	SWITCH_1	CALL_28
0x40032d8	        0x498d7068	                    lea rsi, [r8 + 0x68]	      2147	elf.c	FUNCTION_36	SWITCH_1	CALL_28
0x40032dc	        0x498b4058	              mov rax, qword [r8 + 0x58]	      2147	elf.c	FUNCTION_36	SWITCH_1	CALL_28
0x40032e0	        0x4a8934f8	            mov qword [rax + r15*8], rsi	      2147	elf.c	FUNCTION_36	SWITCH_1	CALL_28
0x40032e4	          0x8b4b44	            mov ecx, dword [rbx + 0x44] 	      2148	elf.c	FUNCTION_36	SWITCH_1
0x40032e7	            0x89cf	                            mov edi, ecx	      2148	elf.c	FUNCTION_36	SWITCH_1
0x40032e9	          0xc1ef05	                              shr edi, 5	      2148	elf.c	FUNCTION_36	SWITCH_1
0x40032ec	    0x81e7ffff0f00	                        and edi, 0xfffff	      2148	elf.c	FUNCTION_36	SWITCH_1
0x40032f2	            0x89f8	                            mov eax, edi	      2148	elf.c	FUNCTION_36	SWITCH_1
0x40032f4	          0x83c810	                            or eax, 0x10	      2148	elf.c	FUNCTION_36	SWITCH_1
0x40032f7	          0xc1e005	                              shl eax, 5	      2148	elf.c	FUNCTION_36	SWITCH_1
0x40032fa	            0x89c2	                            mov edx, eax	      2148	elf.c	FUNCTION_36	SWITCH_1
0x40032fc	            0x89c8	                            mov eax, ecx	      2148	elf.c	FUNCTION_36	SWITCH_1
0x40032fe	      0x251f0000fe	                     and eax, 0xfe00001f	      2148	elf.c	FUNCTION_36	SWITCH_1
0x4003303	             0x9d0	                             or eax, edx	      2148	elf.c	FUNCTION_36	SWITCH_1
0x4003305	          0x894344	             mov dword [rbx + 0x44], eax	      2148	elf.c	FUNCTION_36	SWITCH_1
0x4003308	      0x41f6407002	                test byte [r8 + 0x70], 2	      2156	elf.c	FUNCTION_36	SWITCH_1	IF_19
0x400330d	            0x7420	                            je 0x400332f	      2156	elf.c	FUNCTION_36	SWITCH_1	IF_19
0x400330f	        0x40f6c740	                          test dil, 0x40	      2157	elf.c	FUNCTION_36	SWITCH_1	IF_19
0x4003313	            0x741a	                            je 0x400332f	      2157	elf.c	FUNCTION_36	SWITCH_1	IF_19
0x4003315	            0x89e9	                            mov ecx, ebp	      2158	elf.c	FUNCTION_36	SWITCH_1	IF_19	CALL_29
0x4003317	          0x4c89f2	                            mov rdx, r14	      2158	elf.c	FUNCTION_36	SWITCH_1	IF_19	CALL_29
0x400331a	          0x4889df	                            mov rdi, rbx	      2158	elf.c	FUNCTION_36	SWITCH_1	IF_19	CALL_29
0x400331d	      0xe800000000	                          call 0x4003322	      2158	elf.c	FUNCTION_36	SWITCH_1	IF_19	CALL_29
0x4003322	      0xb900000000	                              mov ecx, 0	      2542	elf.c	FUNCTION_36
0x4003327	            0x85c0	                           test eax, eax	      2158	elf.c	FUNCTION_36	SWITCH_1	IF_19	CALL_29
0x4003329	     0xf84090c0000	                            je 0x4003f38	      2158	elf.c	FUNCTION_36	SWITCH_1	IF_19	CALL_29
0x400332f	    0x488bbbf80000	            mov rdi, qword [rbx + 0xf8] 	      2169	elf.c	FUNCTION_36	SWITCH_1	FOR_2	CALL_30
0x4003336	    0x488b87e80200	           mov rax, qword [rdi + 0x2e8] 	      2169	elf.c	FUNCTION_36	SWITCH_1	FOR_2	CALL_30
0x400333d	          0x4885c0	                           test rax, rax	      2169	elf.c	FUNCTION_36	SWITCH_1	FOR_2	CALL_30
0x4003340	            0x741c	                            je 0x400335e	      2169	elf.c	FUNCTION_36	SWITCH_1	FOR_2	CALL_30
0x4003342	          0x3b6828	            cmp ebp, dword [rax + 0x28] 	      2170	elf.c	FUNCTION_36	SWITCH_1	FOR_2	IF_20
0x4003345	            0x750e	                           jne 0x4003355	      2170	elf.c	FUNCTION_36	SWITCH_1	FOR_2	IF_20
0x4003347	      0xe9af0b0000	                           jmp 0x4003efb	      2170	elf.c	FUNCTION_36	SWITCH_1	FOR_2	IF_20
0x400334c	          0x3b6828	            cmp ebp, dword [rax + 0x28] 	      2170	elf.c	FUNCTION_36	SWITCH_1	FOR_2	IF_20
0x400334f	     0xf84ad0b0000	                            je 0x4003f02	      2170	elf.c	FUNCTION_36	SWITCH_1	FOR_2	IF_20
0x4003355	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2169	elf.c	FUNCTION_36	SWITCH_1	FOR_2	CALL_30
0x4003359	          0x4885c0	                           test rax, rax	      2169	elf.c	FUNCTION_36	SWITCH_1	FOR_2	CALL_30
0x400335c	            0x75ee	                           jne 0x400334c	      2169	elf.c	FUNCTION_36	SWITCH_1	FOR_2	CALL_30
0x400335e	    0x8b97fc020000	           mov edx, dword [rdi + 0x2fc] 	      2173	elf.c	FUNCTION_36	SWITCH_1	CALL_31
0x4003364	          0x8d7501	                      lea esi, [rbp + 1]	      2174	elf.c	FUNCTION_36	SWITCH_1	FOR_3
0x4003367	            0x39f2	                            cmp edx, esi	      2174	elf.c	FUNCTION_36	SWITCH_1	FOR_3
0x4003369	            0x761c	                           jbe 0x4003387	      2174	elf.c	FUNCTION_36	SWITCH_1	FOR_3
0x400336b	        0x488b4f58	            mov rcx, qword [rdi + 0x58] 	      2176	elf.c	FUNCTION_36	SWITCH_1	FOR_3	CALL_32
0x400336f	            0x89f0	                            mov eax, esi	      2176	elf.c	FUNCTION_36	SWITCH_1	FOR_3	CALL_32
0x4003371	        0x488b04c1	            mov rax, qword [rcx + rax*8]	      2176	elf.c	FUNCTION_36	SWITCH_1	FOR_3	CALL_32
0x4003375	        0x83780412	               cmp dword [rax + 4], 0x12	      2178	elf.c	FUNCTION_36	SWITCH_1	FOR_3	IF_21
0x4003379	            0x7505	                           jne 0x4003380	      2178	elf.c	FUNCTION_36	SWITCH_1	FOR_3	IF_21
0x400337b	          0x3b6828	            cmp ebp, dword [rax + 0x28] 	      2179	elf.c	FUNCTION_36	SWITCH_1	FOR_3	IF_21
0x400337e	            0x7407	                            je 0x4003387	      2179	elf.c	FUNCTION_36	SWITCH_1	FOR_3	IF_21
0x4003380	          0x83c601	                              add esi, 1	      2174	elf.c	FUNCTION_36	SWITCH_1	FOR_3
0x4003383	            0x39f2	                            cmp edx, esi	      2174	elf.c	FUNCTION_36	SWITCH_1	FOR_3
0x4003385	            0x77e8	                            ja 0x400336f	      2174	elf.c	FUNCTION_36	SWITCH_1	FOR_3
0x4003387	            0x39f2	                            cmp edx, esi	      2183	elf.c	FUNCTION_36	SWITCH_1	IF_22
0x4003389	            0x753a	                           jne 0x40033c5	      2183	elf.c	FUNCTION_36	SWITCH_1	IF_22
0x400338b	          0x83fd01	                              cmp ebp, 1	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x400338e	            0x7630	                           jbe 0x40033c0	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x4003390	        0x488b4758	            mov rax, qword [rdi + 0x58] 	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x4003394	        0x4883c008	                              add rax, 8	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x4003398	      0xbe01000000	                              mov esi, 1	      2186	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4	CALL_33
0x400339d	          0x488b10	                    mov rdx, qword [rax]	      2186	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4	CALL_33
0x40033a0	        0x837a0412	               cmp dword [rdx + 4], 0x12	      2188	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4	IF_23
0x40033a4	            0x7505	                           jne 0x40033ab	      2188	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4	IF_23
0x40033a6	          0x3b6a28	            cmp ebp, dword [rdx + 0x28] 	      2189	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4	IF_23
0x40033a9	            0x741a	                            je 0x40033c5	      2189	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4	IF_23
0x40033ab	          0x83c601	                              add esi, 1	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x40033ae	        0x4883c008	                              add rax, 8	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x40033b2	            0x39f5	                            cmp ebp, esi	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x40033b4	            0x75e7	                           jne 0x400339d	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x40033b6	      0xb901000000	                              mov ecx, 1	      2000	elf.c	FUNCTION_36
0x40033bb	      0xe9780b0000	                           jmp 0x4003f38	      2000	elf.c	FUNCTION_36
0x40033c0	      0xbe01000000	                              mov esi, 1	      2184	elf.c	FUNCTION_36	SWITCH_1	IF_22	FOR_4
0x40033c5	      0xb901000000	                              mov ecx, 1	      2000	elf.c	FUNCTION_36
0x40033ca	            0x39ee	                            cmp esi, ebp	      2193	elf.c	FUNCTION_36	SWITCH_1	IF_24
0x40033cc	     0xf84660b0000	                            je 0x4003f38	      2193	elf.c	FUNCTION_36	SWITCH_1	IF_24
0x40033d2	          0x4889df	                            mov rdi, rbx	      2194	elf.c	FUNCTION_36	SWITCH_1	CALL_34
0x40033d5	      0xe800000000	                          call 0x40033da	      2194	elf.c	FUNCTION_36	SWITCH_1	CALL_34
0x40033da	            0x89c1	                            mov ecx, eax	      2194	elf.c	FUNCTION_36	SWITCH_1	CALL_34
0x40033dc	      0xe9570b0000	                           jmp 0x4003f38	      2194	elf.c	FUNCTION_36	SWITCH_1	CALL_34
0x40033e1	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	      2200	elf.c	FUNCTION_36	SWITCH_1	IF_25	CALL_35
0x40033e8	    0x8b827c0c0000	           mov eax, dword [rdx + 0xc7c] 	      2200	elf.c	FUNCTION_36	SWITCH_1	IF_25	CALL_35
0x40033ee	      0xb901000000	                              mov ecx, 1	      2000	elf.c	FUNCTION_36
0x40033f3	            0x39c5	                            cmp ebp, eax	      2200	elf.c	FUNCTION_36	SWITCH_1	IF_25	CALL_35
0x40033f5	     0xf843d0b0000	                            je 0x4003f38	      2200	elf.c	FUNCTION_36	SWITCH_1	IF_25	CALL_35
0x40033fb	      0x498b742438	            mov rsi, qword [r12 + 0x38] 	      2203	elf.c	FUNCTION_36	SWITCH_1	IF_26
0x4003400	        0x488b0c24	                    mov rcx, qword [rsp]	      2203	elf.c	FUNCTION_36	SWITCH_1	IF_26
0x4003404	    0x488b89000300	           mov rcx, qword [rcx + 0x300] 	      2203	elf.c	FUNCTION_36	SWITCH_1	IF_26
0x400340b	         0xfb67905	               movzx edi, byte [rcx + 5]	      2203	elf.c	FUNCTION_36	SWITCH_1	IF_26
0x400340f	      0xb900000000	                              mov ecx, 0	      2542	elf.c	FUNCTION_36
0x4003414	          0x4839fe	                            cmp rsi, rdi	      2203	elf.c	FUNCTION_36	SWITCH_1	IF_26
0x4003417	     0xf851b0b0000	                           jne 0x4003f38	      2203	elf.c	FUNCTION_36	SWITCH_1	IF_26
0x400341d	      0x498b7c2420	            mov rdi, qword [r12 + 0x20] 	      2206	elf.c	FUNCTION_36	SWITCH_1	IF_27
0x4003422	      0x418b4c242c	            mov ecx, dword [r12 + 0x2c] 	      2206	elf.c	FUNCTION_36	SWITCH_1	IF_27
0x4003427	        0x480faff1	                           imul rsi, rcx	      2206	elf.c	FUNCTION_36	SWITCH_1	IF_27
0x400342b	          0x4839fe	                            cmp rsi, rdi	      2206	elf.c	FUNCTION_36	SWITCH_1	IF_27
0x400342e	            0x7621	                           jbe 0x4003451	      2206	elf.c	FUNCTION_36	SWITCH_1	IF_27
0x4003430	      0xb900000000	                              mov ecx, 0	      2542	elf.c	FUNCTION_36
0x4003435	          0x4885ff	                           test rdi, rdi	      2208	elf.c	FUNCTION_36	SWITCH_1	IF_27	IF_28
0x4003438	     0xf85fa0a0000	                           jne 0x4003f38	      2208	elf.c	FUNCTION_36	SWITCH_1	IF_27	IF_28
0x400343e	    0x41c744242c00	               mov dword [r12 + 0x2c], 0	      2214	elf.c	FUNCTION_36	SWITCH_1	IF_27
0x4003447	      0xb901000000	                              mov ecx, 1	      2000	elf.c	FUNCTION_36
0x400344c	      0xe9e70a0000	                           jmp 0x4003f38	      2215	elf.c	FUNCTION_36	SWITCH_1	IF_27
0x4003451	            0x85c0	                           test eax, eax	      2220	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_36
0x4003453	            0x7430	                            je 0x4003485	      2220	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_36
0x4003455	      0xba05000000	                              mov edx, 5	      2224	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_38
0x400345a	      0xbe00000000	                              mov esi, 0	      2224	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_38
0x400345f	      0xbf00000000	                              mov edi, 0	      2224	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_38
0x4003464	      0xe800000000	                          call 0x4003469	      2224	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_38
0x4003469	            0x89ea	                            mov edx, ebp	      2222	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_37
0x400346b	          0x4889de	                            mov rsi, rbx	      2222	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_37
0x400346e	          0x4889c7	                            mov rdi, rax	      2222	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_37
0x4003471	      0xb800000000	                              mov eax, 0	      2222	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_37
0x4003476	      0xe800000000	                          call 0x400347b	      2222	elf.c	FUNCTION_36	SWITCH_1	IF_29	CALL_37
0x400347b	      0xb901000000	                              mov ecx, 1	      2000	elf.c	FUNCTION_36
0x4003480	      0xe9b30a0000	                           jmp 0x4003f38	      2227	elf.c	FUNCTION_36	SWITCH_1	IF_29
0x4003485	    0x89aa7c0c0000	            mov dword [rdx + 0xc7c], ebp	      2229	elf.c	FUNCTION_36	SWITCH_1	CALL_39
0x400348b	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4003492	        0x498b1424	                    mov rdx, qword [r12]	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4003496	    0x488990580100	            mov qword [rax + 0x158], rdx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x400349d	      0x498b542408	                mov rdx, qword [r12 + 8]	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x40034a2	    0x488990600100	            mov qword [rax + 0x160], rdx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x40034a9	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x40034ae	    0x488990680100	            mov qword [rax + 0x168], rdx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x40034b5	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x40034ba	    0x488990700100	            mov qword [rax + 0x170], rdx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x40034c1	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x40034c6	    0x488990780100	            mov qword [rax + 0x178], rdx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x40034cd	      0x498b542428	            mov rdx, qword [r12 + 0x28] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x40034d2	    0x488990800100	            mov qword [rax + 0x180], rdx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x40034d9	      0x498b542430	            mov rdx, qword [r12 + 0x30] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x40034de	    0x488990880100	            mov qword [rax + 0x188], rdx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x40034e5	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x40034ea	    0x488990900100	            mov qword [rax + 0x190], rdx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x40034f1	      0x498b542440	            mov rdx, qword [r12 + 0x40] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x40034f6	    0x488990980100	            mov qword [rax + 0x198], rdx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x40034fd	      0x498b542448	            mov rdx, qword [r12 + 0x48] 	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4003502	    0x488990a00100	            mov qword [rax + 0x1a0], rdx	      2230	elf.c	FUNCTION_36	SWITCH_1	CALL_40
0x4003509	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2231	elf.c	FUNCTION_36	SWITCH_1	CALL_42
0x4003510	    0x488db0580100	                  lea rsi, [rax + 0x158]	      2231	elf.c	FUNCTION_36	SWITCH_1	CALL_42
0x4003517	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2231	elf.c	FUNCTION_36	SWITCH_1	CALL_42
0x400351b	        0x4a8934f8	            mov qword [rax + r15*8], rsi	      2231	elf.c	FUNCTION_36	SWITCH_1	CALL_42
0x400351f	    0x814b44000200	            or dword [rbx + 0x44], 0x200	      2232	elf.c	FUNCTION_36	SWITCH_1
0x4003526	            0x89e9	                            mov ecx, ebp	      2236	elf.c	FUNCTION_36	SWITCH_1	CALL_43
0x4003528	          0x4c89f2	                            mov rdx, r14	      2236	elf.c	FUNCTION_36	SWITCH_1	CALL_43
0x400352b	          0x4889df	                            mov rdi, rbx	      2236	elf.c	FUNCTION_36	SWITCH_1	CALL_43
0x400352e	      0xe800000000	                          call 0x4003533	      2236	elf.c	FUNCTION_36	SWITCH_1	CALL_43
0x4003533	            0x89c1	                            mov ecx, eax	      2236	elf.c	FUNCTION_36	SWITCH_1	CALL_43
0x4003535	      0xe9fe090000	                           jmp 0x4003f38	      2237	elf.c	FUNCTION_36	SWITCH_1
0x400353a	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2243	elf.c	FUNCTION_36	SWITCH_1	FOR_5	CALL_44
0x4003541	    0x488b80e80200	           mov rax, qword [rax + 0x2e8] 	      2243	elf.c	FUNCTION_36	SWITCH_1	FOR_5	CALL_44
0x4003548	          0x4885c0	                           test rax, rax	      2243	elf.c	FUNCTION_36	SWITCH_1	FOR_5	CALL_44
0x400354b	            0x741c	                            je 0x4003569	      2243	elf.c	FUNCTION_36	SWITCH_1	FOR_5	CALL_44
0x400354d	          0x3b6850	            cmp ebp, dword [rax + 0x50] 	      2244	elf.c	FUNCTION_36	SWITCH_1	FOR_5	IF_30
0x4003550	            0x750e	                           jne 0x4003560	      2244	elf.c	FUNCTION_36	SWITCH_1	FOR_5	IF_30
0x4003552	      0xe9b2090000	                           jmp 0x4003f09	      2244	elf.c	FUNCTION_36	SWITCH_1	FOR_5	IF_30
0x4003557	          0x3b6850	            cmp ebp, dword [rax + 0x50] 	      2244	elf.c	FUNCTION_36	SWITCH_1	FOR_5	IF_30
0x400355a	     0xf84b0090000	                            je 0x4003f10	      2244	elf.c	FUNCTION_36	SWITCH_1	FOR_5	IF_30
0x4003560	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2243	elf.c	FUNCTION_36	SWITCH_1	FOR_5	CALL_44
0x4003564	          0x4885c0	                           test rax, rax	      2243	elf.c	FUNCTION_36	SWITCH_1	FOR_5	CALL_44
0x4003567	            0x75ee	                           jne 0x4003557	      2243	elf.c	FUNCTION_36	SWITCH_1	FOR_5	CALL_44
0x4003569	      0xbe60000000	                           mov esi, 0x60	      2247	elf.c	FUNCTION_36	SWITCH_1	CALL_45
0x400356e	          0x4889df	                            mov rdi, rbx	      2247	elf.c	FUNCTION_36	SWITCH_1	CALL_45
0x4003571	      0xe800000000	                          call 0x4003576	      2247	elf.c	FUNCTION_36	SWITCH_1	CALL_45
0x4003576	          0x4885c0	                           test rax, rax	      2248	elf.c	FUNCTION_36	SWITCH_1	IF_31
0x4003579	     0xf8498090000	                            je 0x4003f17	      2248	elf.c	FUNCTION_36	SWITCH_1	IF_31
0x400357f	          0x896850	             mov dword [rax + 0x50], ebp	      2250	elf.c	FUNCTION_36	SWITCH_1
0x4003582	        0x498b1424	                    mov rdx, qword [r12]	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4003586	          0x488910	                    mov qword [rax], rdx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4003589	      0x498b542408	                mov rdx, qword [r12 + 8]	      2251	elf.c	FUNCTION_36	SWITCH_1
0x400358e	        0x48895008	                mov qword [rax + 8], rdx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4003592	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      2251	elf.c	FUNCTION_36	SWITCH_1
0x4003597	        0x48895010	             mov qword [rax + 0x10], rdx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x400359b	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      2251	elf.c	FUNCTION_36	SWITCH_1
0x40035a0	        0x48895018	             mov qword [rax + 0x18], rdx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x40035a4	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	      2251	elf.c	FUNCTION_36	SWITCH_1
0x40035a9	        0x48895020	             mov qword [rax + 0x20], rdx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x40035ad	      0x498b542428	            mov rdx, qword [r12 + 0x28] 	      2251	elf.c	FUNCTION_36	SWITCH_1
0x40035b2	        0x48895028	             mov qword [rax + 0x28], rdx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x40035b6	      0x498b542430	            mov rdx, qword [r12 + 0x30] 	      2251	elf.c	FUNCTION_36	SWITCH_1
0x40035bb	        0x48895030	             mov qword [rax + 0x30], rdx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x40035bf	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	      2251	elf.c	FUNCTION_36	SWITCH_1
0x40035c4	        0x48895038	             mov qword [rax + 0x38], rdx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x40035c8	      0x498b542440	            mov rdx, qword [r12 + 0x40] 	      2251	elf.c	FUNCTION_36	SWITCH_1
0x40035cd	        0x48895040	             mov qword [rax + 0x40], rdx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x40035d1	      0x498b542448	            mov rdx, qword [r12 + 0x48] 	      2251	elf.c	FUNCTION_36	SWITCH_1
0x40035d6	        0x48895048	             mov qword [rax + 0x48], rdx	      2251	elf.c	FUNCTION_36	SWITCH_1
0x40035da	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	      2252	elf.c	FUNCTION_36	SWITCH_1	CALL_46
0x40035e1	    0x488b92e80200	           mov rdx, qword [rdx + 0x2e8] 	      2252	elf.c	FUNCTION_36	SWITCH_1	CALL_46
0x40035e8	        0x48895058	             mov qword [rax + 0x58], rdx	      2252	elf.c	FUNCTION_36	SWITCH_1	CALL_46
0x40035ec	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	      2253	elf.c	FUNCTION_36	SWITCH_1	CALL_47
0x40035f3	    0x488982e80200	            mov qword [rdx + 0x2e8], rax	      2253	elf.c	FUNCTION_36	SWITCH_1	CALL_47
0x40035fa	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	      2254	elf.c	FUNCTION_36	SWITCH_1	CALL_48
0x4003601	        0x488b5258	            mov rdx, qword [rdx + 0x58] 	      2254	elf.c	FUNCTION_36	SWITCH_1	CALL_48
0x4003605	        0x4a8904fa	            mov qword [rdx + r15*8], rax	      2254	elf.c	FUNCTION_36	SWITCH_1	CALL_48
0x4003609	      0xb901000000	                              mov ecx, 1	      2000	elf.c	FUNCTION_36
0x400360e	      0xe925090000	                           jmp 0x4003f38	      2255	elf.c	FUNCTION_36	SWITCH_1
0x4003613	      0xb901000000	                              mov ecx, 1	      2000	elf.c	FUNCTION_36
0x4003618	    0x49837c244000	               cmp qword [r12 + 0x40], 0	      2259	elf.c	FUNCTION_36	SWITCH_1	IF_32
0x400361e	     0xf8514090000	                           jne 0x4003f38	      2259	elf.c	FUNCTION_36	SWITCH_1	IF_32
0x4003624	        0x413b6d50	            cmp ebp, dword [r13 + 0x50] 	      2262	elf.c	FUNCTION_36	SWITCH_1	IF_33
0x4003628	     0xf8598000000	                           jne 0x40036c6	      2262	elf.c	FUNCTION_36	SWITCH_1	IF_33
0x400362e	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4003635	        0x498b1424	                    mov rdx, qword [r12]	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4003639	    0x488990b80000	             mov qword [rax + 0xb8], rdx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4003640	      0x498b542408	                mov rdx, qword [r12 + 8]	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4003645	    0x488990c00000	             mov qword [rax + 0xc0], rdx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x400364c	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4003651	    0x488990c80000	             mov qword [rax + 0xc8], rdx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4003658	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x400365d	    0x488990d00000	             mov qword [rax + 0xd0], rdx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4003664	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4003669	    0x488990d80000	             mov qword [rax + 0xd8], rdx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4003670	      0x498b542428	            mov rdx, qword [r12 + 0x28] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4003675	    0x488990e00000	             mov qword [rax + 0xe0], rdx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x400367c	      0x498b542430	            mov rdx, qword [r12 + 0x30] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4003681	    0x488990e80000	             mov qword [rax + 0xe8], rdx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4003688	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x400368d	    0x488990f00000	             mov qword [rax + 0xf0], rdx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4003694	      0x498b542440	            mov rdx, qword [r12 + 0x40] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x4003699	    0x488990f80000	             mov qword [rax + 0xf8], rdx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x40036a0	      0x498b542448	            mov rdx, qword [r12 + 0x48] 	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x40036a5	    0x488990000100	            mov qword [rax + 0x100], rdx	      2264	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_49
0x40036ac	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2265	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_51
0x40036b3	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      2265	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_51
0x40036b7	    0x4805b8000000	                           add rax, 0xb8	      2265	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_51
0x40036bd	        0x4a8904fa	            mov qword [rdx + r15*8], rax	      2265	elf.c	FUNCTION_36	SWITCH_1	IF_33	CALL_51
0x40036c1	      0xe972080000	                           jmp 0x4003f38	      2266	elf.c	FUNCTION_36	SWITCH_1	IF_33
0x40036c6	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2269	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_53
0x40036cd	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      2269	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_53
0x40036d1	    0x8b88780c0000	           mov ecx, dword [rax + 0xc78] 	      2269	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_53
0x40036d7	            0x89ce	                            mov esi, ecx	      2269	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_53
0x40036d9	        0x488b34f2	            mov rsi, qword [rdx + rsi*8]	      2269	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_53
0x40036dd	          0x3b6e28	            cmp ebp, dword [rsi + 0x28] 	      2269	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_53
0x40036e0	     0xf859d000000	                           jne 0x4003783	      2269	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_53
0x40036e6	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x40036ed	        0x498b1424	                    mov rdx, qword [r12]	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x40036f1	    0x488990080100	            mov qword [rax + 0x108], rdx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x40036f8	      0x498b542408	                mov rdx, qword [r12 + 8]	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x40036fd	    0x488990100100	            mov qword [rax + 0x110], rdx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4003704	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4003709	    0x488990180100	            mov qword [rax + 0x118], rdx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4003710	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4003715	    0x488990200100	            mov qword [rax + 0x120], rdx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x400371c	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4003721	    0x488990280100	            mov qword [rax + 0x128], rdx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4003728	      0x498b542428	            mov rdx, qword [r12 + 0x28] 	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x400372d	    0x488990300100	            mov qword [rax + 0x130], rdx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4003734	      0x498b542430	            mov rdx, qword [r12 + 0x30] 	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4003739	    0x488990380100	            mov qword [rax + 0x138], rdx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4003740	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4003745	    0x488990400100	            mov qword [rax + 0x140], rdx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x400374c	      0x498b542440	            mov rdx, qword [r12 + 0x40] 	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4003751	    0x488990480100	            mov qword [rax + 0x148], rdx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4003758	      0x498b542448	            mov rdx, qword [r12 + 0x48] 	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x400375d	    0x488990500100	            mov qword [rax + 0x150], rdx	      2272	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_54
0x4003764	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2273	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_56
0x400376b	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      2273	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_56
0x400376f	    0x480508010000	                          add rax, 0x108	      2273	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_56
0x4003775	        0x4a8904fa	            mov qword [rdx + r15*8], rax	      2273	elf.c	FUNCTION_36	SWITCH_1	IF_34	CALL_56
0x4003779	      0xb901000000	                              mov ecx, 1	      2000	elf.c	FUNCTION_36
0x400377e	      0xe9b5070000	                           jmp 0x4003f38	      2274	elf.c	FUNCTION_36	SWITCH_1	IF_34
0x4003783	    0x8bb07c0c0000	           mov esi, dword [rax + 0xc7c] 	      2277	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_58
0x4003789	            0x89f7	                            mov edi, esi	      2277	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_58
0x400378b	        0x488b14fa	            mov rdx, qword [rdx + rdi*8]	      2277	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_58
0x400378f	          0x3b6a28	            cmp ebp, dword [rdx + 0x28] 	      2277	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_58
0x4003792	            0x7542	                           jne 0x40037d6	      2277	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_58
0x4003794	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x400379b	    0x488db8a80100	                  lea rdi, [rax + 0x1a8]	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x40037a2	      0xb914000000	                           mov ecx, 0x14	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x40037a7	          0x4c89e6	                            mov rsi, r12	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x40037aa	            0xf3a5	  rep movsd dword [rdi], dword ptr [rsi]	      2280	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_59
0x40037ac	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2281	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_60
0x40037b3	    0x488db0a80100	                  lea rsi, [rax + 0x1a8]	      2281	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_60
0x40037ba	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2282	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_61
0x40037be	        0x4a8934f8	            mov qword [rax + r15*8], rsi	      2282	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_61
0x40037c2	            0x89e9	                            mov ecx, ebp	      2285	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_62
0x40037c4	          0x4c89f2	                            mov rdx, r14	      2285	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_62
0x40037c7	          0x4889df	                            mov rdi, rbx	      2285	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_62
0x40037ca	      0xe800000000	                          call 0x40037cf	      2285	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_62
0x40037cf	            0x89c1	                            mov ecx, eax	      2285	elf.c	FUNCTION_36	SWITCH_1	IF_35	CALL_62
0x40037d1	      0xe962070000	                           jmp 0x4003f38	      2287	elf.c	FUNCTION_36	SWITCH_1	IF_35
0x40037d6	            0x85c9	                           test ecx, ecx	      2293	elf.c	FUNCTION_36	SWITCH_1	IF_36	CALL_64
0x40037d8	            0x7408	                            je 0x40037e2	      2293	elf.c	FUNCTION_36	SWITCH_1	IF_36	CALL_64
0x40037da	            0x85f6	                           test esi, esi	      2293	elf.c	FUNCTION_36	SWITCH_1	IF_36	CALL_64
0x40037dc	     0xf8582000000	                           jne 0x4003864	      2293	elf.c	FUNCTION_36	SWITCH_1	IF_36	CALL_64
0x40037e2	    0x8b80fc020000	           mov eax, dword [rax + 0x2fc] 	      2297	elf.c	FUNCTION_36	SWITCH_1	IF_36	CALL_65
0x40037e8	        0x8944240c	              mov dword [rsp + 0xc], eax	      2297	elf.c	FUNCTION_36	SWITCH_1	IF_36	CALL_65
0x40037ec	          0x83f801	                              cmp eax, 1	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x40037ef	            0x7673	                           jbe 0x4003864	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x40037f1	    0x48c704240800	                      mov qword [rsp], 8	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x40037f9	    0x41bd01000000	                             mov r13d, 1	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x40037ff	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2300	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	CALL_66
0x4003806	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2300	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	CALL_66
0x400380a	        0x488b0c24	                    mov rcx, qword [rsp]	      2301	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37
0x400380e	        0x488b0408	              mov rax, qword [rax + rcx]	      2301	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37
0x4003812	          0x3b6828	            cmp ebp, dword [rax + 0x28] 	      2301	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37
0x4003815	            0x753d	                           jne 0x4003854	      2301	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37
0x4003817	          0x4439ed	                           cmp ebp, r13d	      2304	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_38
0x400381a	     0xf84fe060000	                            je 0x4003f1e	      2304	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_38
0x4003820	          0x4489ee	                           mov esi, r13d	      2306	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_39	CALL_67
0x4003823	          0x4889df	                            mov rdi, rbx	      2306	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_39	CALL_67
0x4003826	      0xe800000000	                          call 0x400382b	      2306	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_39	CALL_67
0x400382b	            0x85c0	                           test eax, eax	      2306	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_39	CALL_67
0x400382d	     0xf84f2060000	                            je 0x4003f25	      2306	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_39	CALL_67
0x4003833	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2308	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_40	CALL_68
0x400383a	    0x4439a8780c00	          cmp dword [rax + 0xc78], r13d 	      2308	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_40	CALL_68
0x4003841	     0xf849ffeffff	                            je 0x40036e6	      2308	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_40	CALL_68
0x4003847	    0x4439a87c0c00	          cmp dword [rax + 0xc7c], r13d 	      2310	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_41	CALL_69
0x400384e	     0xf8440ffffff	                            je 0x4003794	      2310	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6	IF_37	IF_41	CALL_69
0x4003854	        0x4183c501	                             add r13d, 1	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x4003858	      0x4883042408	                      add qword [rsp], 8	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x400385d	      0x44396c240c	            cmp dword [rsp + 0xc], r13d 	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x4003862	            0x759b	                           jne 0x40037ff	      2298	elf.c	FUNCTION_36	SWITCH_1	IF_36	FOR_6
0x4003864	            0x89e9	                            mov ecx, ebp	      2315	elf.c	FUNCTION_36	SWITCH_1	CALL_70
0x4003866	          0x4c89f2	                            mov rdx, r14	      2315	elf.c	FUNCTION_36	SWITCH_1	CALL_70
0x4003869	          0x4c89e6	                            mov rsi, r12	      2315	elf.c	FUNCTION_36	SWITCH_1	CALL_70
0x400386c	          0x4889df	                            mov rdi, rbx	      2315	elf.c	FUNCTION_36	SWITCH_1	CALL_70
0x400386f	      0xe800000000	                          call 0x4003874	      2315	elf.c	FUNCTION_36	SWITCH_1	CALL_70
0x4003874	            0x89c1	                            mov ecx, eax	      2315	elf.c	FUNCTION_36	SWITCH_1	CALL_70
0x4003876	      0xe9bd060000	                           jmp 0x4003f38	      2316	elf.c	FUNCTION_36	SWITCH_1
0x400387b	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	      2327	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4003880	          0x83f809	                              cmp eax, 9	      2328	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4003883	            0x7511	                           jne 0x4003896	      2328	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4003885	        0x488b0424	                    mov rax, qword [rsp]	      2329	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4003889	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      2329	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4003890	         0xfb64003	               movzx eax, byte [rax + 3]	      2328	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4003894	            0xeb0f	                           jmp 0x40038a5	      2328	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x4003896	        0x488b0424	                    mov rax, qword [rsp]	      2329	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x400389a	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      2329	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x40038a1	         0xfb64004	               movzx eax, byte [rax + 4]	      2328	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x40038a5	      0xb900000000	                              mov ecx, 0	      2542	elf.c	FUNCTION_36
0x40038aa	          0x4839d0	                            cmp rax, rdx	      2327	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x40038ad	     0xf8585060000	                           jne 0x4003f38	      2327	elf.c	FUNCTION_36	SWITCH_1	IF_42
0x40038b3	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	      2324	elf.c	FUNCTION_36	SWITCH_1	CALL_71
0x40038ba	    0x448baafc0200	          mov r13d, dword [rdx + 0x2fc] 	      2324	elf.c	FUNCTION_36	SWITCH_1	CALL_71
0x40038c1	      0x418b442428	            mov eax, dword [r12 + 0x28] 	      2333	elf.c	FUNCTION_36	SWITCH_1	IF_43
0x40038c6	        0x8944240c	              mov dword [rsp + 0xc], eax	      2333	elf.c	FUNCTION_36	SWITCH_1	IF_43
0x40038ca	          0x4139c5	                           cmp r13d, eax	      2333	elf.c	FUNCTION_36	SWITCH_1	IF_43
0x40038cd	            0x7745	                            ja 0x4003914	      2333	elf.c	FUNCTION_36	SWITCH_1	IF_43
0x40038cf	      0xba05000000	                              mov edx, 5	      2337	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_73
0x40038d4	      0xbe00000000	                              mov esi, 0	      2337	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_73
0x40038d9	      0xbf00000000	                              mov edi, 0	      2337	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_73
0x40038de	      0xe800000000	                          call 0x40038e3	      2337	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_73
0x40038e3	          0x4189e8	                            mov r8d, ebp	      2335	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_72
0x40038e6	          0x4c89f1	                            mov rcx, r14	      2335	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_72
0x40038e9	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      2335	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_72
0x40038ed	          0x4889de	                            mov rsi, rbx	      2335	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_72
0x40038f0	          0x4889c7	                            mov rdi, rax	      2335	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_72
0x40038f3	      0xb800000000	                              mov eax, 0	      2335	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_72
0x40038f8	      0xe800000000	                          call 0x40038fd	      2335	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_72
0x40038fd	            0x89e9	                            mov ecx, ebp	      2339	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_74
0x40038ff	          0x4c89f2	                            mov rdx, r14	      2339	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_74
0x4003902	          0x4c89e6	                            mov rsi, r12	      2339	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_74
0x4003905	          0x4889df	                            mov rdi, rbx	      2339	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_74
0x4003908	      0xe800000000	                          call 0x400390d	      2339	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_74
0x400390d	            0x89c1	                            mov ecx, eax	      2339	elf.c	FUNCTION_36	SWITCH_1	IF_43	CALL_74
0x400390f	      0xe924060000	                           jmp 0x4003f38	      2341	elf.c	FUNCTION_36	SWITCH_1	IF_43
0x4003914	          0x8b4344	            mov eax, dword [rbx + 0x44] 	      2353	elf.c	FUNCTION_36	SWITCH_1	IF_44
0x4003917	          0xc1e805	                              shr eax, 5	      2353	elf.c	FUNCTION_36	SWITCH_1	IF_44
0x400391a	            0xa842	                           test al, 0x42	      2353	elf.c	FUNCTION_36	SWITCH_1	IF_44
0x400391c	            0x7558	                           jne 0x4003976	      2353	elf.c	FUNCTION_36	SWITCH_1	IF_44
0x400391e	        0x488b5258	            mov rdx, qword [rdx + 0x58] 	      2354	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_75
0x4003922	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      2354	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_75
0x4003926	        0x488b04c2	            mov rax, qword [rdx + rax*8]	      2354	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_75
0x400392a	          0x8b4004	                mov eax, dword [rax + 4]	      2354	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_75
0x400392d	          0x83f80b	                            cmp eax, 0xb	      2355	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_76
0x4003930	            0x7444	                            je 0x4003976	      2355	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_76
0x4003932	          0x83f802	                              cmp eax, 2	      2355	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_76
0x4003935	            0x743f	                            je 0x4003976	      2355	elf.c	FUNCTION_36	SWITCH_1	IF_44	CALL_76
0x4003937	        0x4183fd01	                             cmp r13d, 1	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x400393b	            0x7639	                           jbe 0x4003976	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x400393d	        0x4883c208	                              add rdx, 8	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x4003941	      0xbe00000000	                              mov esi, 0	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x4003946	      0xb801000000	                              mov eax, 1	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x400394b	          0x488b0a	                    mov rcx, qword [rdx]	      2363	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_77
0x400394e	          0x8b4904	                mov ecx, dword [rcx + 4]	      2363	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_77
0x4003951	          0x83f902	                              cmp ecx, 2	      2363	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_77
0x4003954	            0x7405	                            je 0x400395b	      2363	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_77
0x4003956	          0x83f90b	                            cmp ecx, 0xb	      2363	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_77
0x4003959	            0x7506	                           jne 0x4003961	      2363	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	CALL_77
0x400395b	            0x85f6	                           test esi, esi	      2366	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	IF_46
0x400395d	            0x7517	                           jne 0x4003976	      2366	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45	IF_46
0x400395f	            0x89c6	                            mov esi, eax	      2371	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7	IF_45
0x4003961	          0x83c001	                              add eax, 1	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x4003964	        0x4883c208	                              add rdx, 8	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x4003968	          0x4139c5	                           cmp r13d, eax	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x400396b	            0x75de	                           jne 0x400394b	      2361	elf.c	FUNCTION_36	SWITCH_1	IF_44	FOR_7
0x400396d	            0x85f6	                           test esi, esi	      2374	elf.c	FUNCTION_36	SWITCH_1	IF_44	IF_47
0x400396f	            0x7405	                            je 0x4003976	      2374	elf.c	FUNCTION_36	SWITCH_1	IF_44	IF_47
0x4003971	      0x4189742428	             mov dword [r12 + 0x28], esi	      2375	elf.c	FUNCTION_36	SWITCH_1	IF_44	IF_47
0x4003976	      0x418b742428	            mov esi, dword [r12 + 0x28] 	      2379	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_79
0x400397b	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2379	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_79
0x4003982	            0x89f2	                            mov edx, esi	      2379	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_79
0x4003984	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2379	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_79
0x4003988	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      2379	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_79
0x400398c	          0x8b4004	                mov eax, dword [rax + 4]	      2379	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_79
0x400398f	          0x83f802	                              cmp eax, 2	      2379	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_79
0x4003992	            0x7405	                            je 0x4003999	      2379	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_79
0x4003994	          0x83f80b	                            cmp eax, 0xb	      2379	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_79
0x4003997	            0x7515	                           jne 0x40039ae	      2379	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_79
0x4003999	          0x4889df	                            mov rdi, rbx	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x400399c	      0xe800000000	                          call 0x40039a1	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x40039a1	      0xb900000000	                              mov ecx, 0	      2542	elf.c	FUNCTION_36
0x40039a6	            0x85c0	                           test eax, eax	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x40039a8	     0xf848a050000	                            je 0x4003f38	      2381	elf.c	FUNCTION_36	SWITCH_1	IF_48	CALL_81
0x40039ae	      0x418b442428	            mov eax, dword [r12 + 0x28] 	      2391	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_82
0x40039b3	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	      2391	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_82
0x40039ba	    0x3982780c0000	           cmp dword [rdx + 0xc78], eax 	      2392	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x40039c0	            0x7529	                           jne 0x40039eb	      2392	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x40039c2	            0x85c0	                           test eax, eax	      2392	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x40039c4	            0x7425	                            je 0x40039eb	      2392	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x40039c6	      0x418b74242c	            mov esi, dword [r12 + 0x2c] 	      2393	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x40039cb	          0x4139f5	                           cmp r13d, esi	      2394	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x40039ce	            0x761b	                           jbe 0x40039eb	      2394	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x40039d0	            0x85f6	                           test esi, esi	      2394	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x40039d2	            0x7417	                            je 0x40039eb	      2394	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x40039d4	            0x89f0	                            mov eax, esi	      2395	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_83
0x40039d6	        0x488b5258	            mov rdx, qword [rdx + 0x58] 	      2395	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_83
0x40039da	        0x488b04c2	            mov rax, qword [rdx + rax*8]	      2395	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_83
0x40039de	          0x8b4004	                mov eax, dword [rax + 4]	      2395	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_83
0x40039e1	          0x83f804	                              cmp eax, 4	      2396	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_84
0x40039e4	            0x7405	                            je 0x40039eb	      2396	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_84
0x40039e6	          0x83f809	                              cmp eax, 9	      2396	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_84
0x40039e9	            0x7517	                           jne 0x4003a02	      2396	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_84
0x40039eb	            0x89e9	                            mov ecx, ebp	      2398	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_85
0x40039ed	          0x4c89f2	                            mov rdx, r14	      2398	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_85
0x40039f0	          0x4c89e6	                            mov rsi, r12	      2398	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_85
0x40039f3	          0x4889df	                            mov rdi, rbx	      2398	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_85
0x40039f6	      0xe800000000	                          call 0x40039fb	      2398	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_85
0x40039fb	            0x89c1	                            mov ecx, eax	      2398	elf.c	FUNCTION_36	SWITCH_1	IF_49	CALL_85
0x40039fd	      0xe936050000	                           jmp 0x4003f38	      2400	elf.c	FUNCTION_36	SWITCH_1	IF_49
0x4003a02	          0x4889df	                            mov rdi, rbx	      2403	elf.c	FUNCTION_36	SWITCH_1	IF_50	CALL_86
0x4003a05	      0xe800000000	                          call 0x4003a0a	      2403	elf.c	FUNCTION_36	SWITCH_1	IF_50	CALL_86
0x4003a0a	      0xb900000000	                              mov ecx, 0	      2542	elf.c	FUNCTION_36
0x4003a0f	            0x85c0	                           test eax, eax	      2403	elf.c	FUNCTION_36	SWITCH_1	IF_50	CALL_86
0x4003a11	     0xf8421050000	                            je 0x4003f38	      2403	elf.c	FUNCTION_36	SWITCH_1	IF_50	CALL_86
0x4003a17	      0x418b74242c	            mov esi, dword [r12 + 0x2c] 	      2406	elf.c	FUNCTION_36	SWITCH_1	CALL_87
0x4003a1c	          0x4889df	                            mov rdi, rbx	      2406	elf.c	FUNCTION_36	SWITCH_1	CALL_87
0x4003a1f	      0xe800000000	                          call 0x4003a24	      2406	elf.c	FUNCTION_36	SWITCH_1	CALL_87
0x4003a24	          0x4889c5	                            mov rbp, rax	      2406	elf.c	FUNCTION_36	SWITCH_1	CALL_87
0x4003a27	          0x4885c0	                           test rax, rax	      2407	elf.c	FUNCTION_36	SWITCH_1	IF_51
0x4003a2a	     0xf84fc040000	                            je 0x4003f2c	      2407	elf.c	FUNCTION_36	SWITCH_1	IF_51
0x4003a30	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      2410	elf.c	FUNCTION_36	SWITCH_1	CALL_88
0x4003a37	    0x41837c240404	                  cmp dword [r12 + 4], 4	      2411	elf.c	FUNCTION_36	SWITCH_1	IF_52
0x4003a3d	            0x750a	                           jne 0x4003a49	      2411	elf.c	FUNCTION_36	SWITCH_1	IF_52
0x4003a3f	        0x4c8d6870	                   lea r13, [rax + 0x70]	      2412	elf.c	FUNCTION_36	SWITCH_1	IF_52
0x4003a43	        0x488b4070	            mov rax, qword [rax + 0x70] 	      2412	elf.c	FUNCTION_36	SWITCH_1	IF_52
0x4003a47	            0xeb08	                           jmp 0x4003a51	      2412	elf.c	FUNCTION_36	SWITCH_1	IF_52
0x4003a49	        0x4c8d6858	                   lea r13, [rax + 0x58]	      2414	elf.c	FUNCTION_36	SWITCH_1	ELSE_4
0x4003a4d	        0x488b4058	            mov rax, qword [rax + 0x58] 	      2414	elf.c	FUNCTION_36	SWITCH_1	ELSE_4
0x4003a51	      0xb900000000	                              mov ecx, 0	      2542	elf.c	FUNCTION_36
0x4003a56	          0x4885c0	                           test rax, rax	      2417	elf.c	FUNCTION_36	SWITCH_1	IF_53
0x4003a59	     0xf85d9040000	                           jne 0x4003f38	      2417	elf.c	FUNCTION_36	SWITCH_1	IF_53
0x4003a5f	      0xbe50000000	                           mov esi, 0x50	      2419	elf.c	FUNCTION_36	SWITCH_1	CALL_89
0x4003a64	          0x4889df	                            mov rdi, rbx	      2419	elf.c	FUNCTION_36	SWITCH_1	CALL_89
0x4003a67	      0xe800000000	                          call 0x4003a6c	      2419	elf.c	FUNCTION_36	SWITCH_1	CALL_89
0x4003a6c	          0x4885c0	                           test rax, rax	      2420	elf.c	FUNCTION_36	SWITCH_1	IF_54
0x4003a6f	     0xf84be040000	                            je 0x4003f33	      2420	elf.c	FUNCTION_36	SWITCH_1	IF_54
0x4003a75	      0xb914000000	                           mov ecx, 0x14	      2422	elf.c	FUNCTION_36	SWITCH_1
0x4003a7a	          0x4889c7	                            mov rdi, rax	      2422	elf.c	FUNCTION_36	SWITCH_1
0x4003a7d	          0x4c89e6	                            mov rsi, r12	      2422	elf.c	FUNCTION_36	SWITCH_1
0x4003a80	            0xf3a5	  rep movsd dword [rdi], dword ptr [rsi]	      2422	elf.c	FUNCTION_36	SWITCH_1
0x4003a82	        0x49894500	                    mov qword [r13], rax	      2423	elf.c	FUNCTION_36	SWITCH_1
0x4003a86	    0x488b93f80000	            mov rdx, qword [rbx + 0xf8] 	      2424	elf.c	FUNCTION_36	SWITCH_1	CALL_90
0x4003a8d	        0x488b5258	            mov rdx, qword [rdx + 0x58] 	      2424	elf.c	FUNCTION_36	SWITCH_1	CALL_90
0x4003a91	        0x4a8904fa	            mov qword [rdx + r15*8], rax	      2424	elf.c	FUNCTION_36	SWITCH_1	CALL_90
0x4003a95	    0x8b8d88000000	            mov ecx, dword [rbp + 0x88] 	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4003a9b	      0x498b742438	            mov rsi, qword [r12 + 0x38] 	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4003aa0	      0xb800000000	                              mov eax, 0	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4003aa5	          0x4885f6	                           test rsi, rsi	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4003aa8	            0x740d	                            je 0x4003ab7	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4003aaa	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4003aaf	      0xba00000000	                              mov edx, 0	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4003ab4	          0x48f7f6	                                 div rsi	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4003ab7	        0x488b3c24	                    mov rdi, qword [rsp]	      2426	elf.c	FUNCTION_36	SWITCH_1
0x4003abb	    0x488b97000300	           mov rdx, qword [rdi + 0x300] 	      2426	elf.c	FUNCTION_36	SWITCH_1
0x4003ac2	         0xfb65209	               movzx edx, byte [rdx + 9]	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4003ac6	           0xfafc2	                           imul eax, edx	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4003ac9	             0x1c8	                            add eax, ecx	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4003acb	    0x898588000000	            mov dword [rbp + 0x88], eax 	      2425	elf.c	FUNCTION_36	SWITCH_1	CALL_91
0x4003ad1	        0x834d2004	                or dword [rbp + 0x20], 4	      2427	elf.c	FUNCTION_36	SWITCH_1
0x4003ad5	    0x48c745780000	               mov qword [rbp + 0x78], 0	      2428	elf.c	FUNCTION_36	SWITCH_1
0x4003add	      0x498b442418	            mov rax, qword [r12 + 0x18] 	      2429	elf.c	FUNCTION_36	SWITCH_1
0x4003ae2	    0x488985980000	            mov qword [rbp + 0x98], rax 	      2429	elf.c	FUNCTION_36	SWITCH_1
0x4003ae9	    0x49837c242000	               cmp qword [r12 + 0x20], 0	      2432	elf.c	FUNCTION_36	SWITCH_1	IF_55
0x4003aef	            0x740c	                            je 0x4003afd	      2432	elf.c	FUNCTION_36	SWITCH_1	IF_55
0x4003af1	    0x41837c240404	                  cmp dword [r12 + 4], 4	      2434	elf.c	FUNCTION_36	SWITCH_1	IF_55	IF_56
0x4003af7	            0x7504	                           jne 0x4003afd	      2434	elf.c	FUNCTION_36	SWITCH_1	IF_55	IF_56
0x4003af9	        0x804d2504	                 or byte [rbp + 0x25], 4	      2435	elf.c	FUNCTION_36	SWITCH_1	IF_55	IF_56
0x4003afd	        0x834b4420	             or dword [rbx + 0x44], 0x20	      2437	elf.c	FUNCTION_36	SWITCH_1
0x4003b01	      0xb901000000	                              mov ecx, 1	      2000	elf.c	FUNCTION_36
0x4003b06	      0xe92d040000	                           jmp 0x4003f38	      2438	elf.c	FUNCTION_36	SWITCH_1
0x4003b0b	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2442	elf.c	FUNCTION_36	SWITCH_1	CALL_92
0x4003b12	    0x89a8840c0000	            mov dword [rax + 0xc84], ebp	      2442	elf.c	FUNCTION_36	SWITCH_1	CALL_92
0x4003b18	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003b1f	        0x498b1424	                    mov rdx, qword [r12]	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003b23	    0x488990980200	            mov qword [rax + 0x298], rdx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003b2a	      0x498b542408	                mov rdx, qword [r12 + 8]	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003b2f	    0x488990a00200	            mov qword [rax + 0x2a0], rdx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003b36	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003b3b	    0x488990a80200	            mov qword [rax + 0x2a8], rdx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003b42	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003b47	    0x488990b00200	            mov qword [rax + 0x2b0], rdx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003b4e	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003b53	    0x488990b80200	            mov qword [rax + 0x2b8], rdx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003b5a	      0x498b542428	            mov rdx, qword [r12 + 0x28] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003b5f	    0x488990c00200	            mov qword [rax + 0x2c0], rdx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003b66	      0x498b542430	            mov rdx, qword [r12 + 0x30] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003b6b	    0x488990c80200	            mov qword [rax + 0x2c8], rdx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003b72	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003b77	    0x488990d00200	            mov qword [rax + 0x2d0], rdx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003b7e	      0x498b542440	            mov rdx, qword [r12 + 0x40] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003b83	    0x488990d80200	            mov qword [rax + 0x2d8], rdx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003b8a	      0x498b542448	            mov rdx, qword [r12 + 0x48] 	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003b8f	    0x488990e00200	            mov qword [rax + 0x2e0], rdx	      2443	elf.c	FUNCTION_36	SWITCH_1	CALL_93
0x4003b96	            0x89e9	                            mov ecx, ebp	      2444	elf.c	FUNCTION_36	SWITCH_1	CALL_94
0x4003b98	          0x4c89f2	                            mov rdx, r14	      2444	elf.c	FUNCTION_36	SWITCH_1	CALL_94
0x4003b9b	          0x4c89e6	                            mov rsi, r12	      2444	elf.c	FUNCTION_36	SWITCH_1	CALL_94
0x4003b9e	          0x4889df	                            mov rdi, rbx	      2444	elf.c	FUNCTION_36	SWITCH_1	CALL_94
0x4003ba1	      0xe800000000	                          call 0x4003ba6	      2444	elf.c	FUNCTION_36	SWITCH_1	CALL_94
0x4003ba6	            0x89c1	                            mov ecx, eax	      2444	elf.c	FUNCTION_36	SWITCH_1	CALL_94
0x4003ba8	      0xe98b030000	                           jmp 0x4003f38	      2445	elf.c	FUNCTION_36	SWITCH_1
0x4003bad	      0xb900000000	                              mov ecx, 0	      2542	elf.c	FUNCTION_36
0x4003bb2	    0x49837c243802	               cmp qword [r12 + 0x38], 2	      2448	elf.c	FUNCTION_36	SWITCH_1	IF_57
0x4003bb8	     0xf857a030000	                           jne 0x4003f38	      2448	elf.c	FUNCTION_36	SWITCH_1	IF_57
0x4003bbe	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2451	elf.c	FUNCTION_36	SWITCH_1	CALL_95
0x4003bc5	    0x89a8800c0000	            mov dword [rax + 0xc80], ebp	      2451	elf.c	FUNCTION_36	SWITCH_1	CALL_95
0x4003bcb	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4003bd2	        0x498b1424	                    mov rdx, qword [r12]	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4003bd6	    0x488990f80100	            mov qword [rax + 0x1f8], rdx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4003bdd	      0x498b542408	                mov rdx, qword [r12 + 8]	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4003be2	    0x488990000200	            mov qword [rax + 0x200], rdx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4003be9	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4003bee	    0x488990080200	            mov qword [rax + 0x208], rdx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4003bf5	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4003bfa	    0x488990100200	            mov qword [rax + 0x210], rdx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4003c01	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4003c06	    0x488990180200	            mov qword [rax + 0x218], rdx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4003c0d	      0x498b542428	            mov rdx, qword [r12 + 0x28] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4003c12	    0x488990200200	            mov qword [rax + 0x220], rdx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4003c19	      0x498b542430	            mov rdx, qword [r12 + 0x30] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4003c1e	    0x488990280200	            mov qword [rax + 0x228], rdx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4003c25	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4003c2a	    0x488990300200	            mov qword [rax + 0x230], rdx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4003c31	      0x498b542440	            mov rdx, qword [r12 + 0x40] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4003c36	    0x488990380200	            mov qword [rax + 0x238], rdx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4003c3d	      0x498b542448	            mov rdx, qword [r12 + 0x48] 	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4003c42	    0x488990400200	            mov qword [rax + 0x240], rdx	      2452	elf.c	FUNCTION_36	SWITCH_1	CALL_96
0x4003c49	            0x89e9	                            mov ecx, ebp	      2453	elf.c	FUNCTION_36	SWITCH_1	CALL_97
0x4003c4b	          0x4c89f2	                            mov rdx, r14	      2453	elf.c	FUNCTION_36	SWITCH_1	CALL_97
0x4003c4e	          0x4c89e6	                            mov rsi, r12	      2453	elf.c	FUNCTION_36	SWITCH_1	CALL_97
0x4003c51	          0x4889df	                            mov rdi, rbx	      2453	elf.c	FUNCTION_36	SWITCH_1	CALL_97
0x4003c54	      0xe800000000	                          call 0x4003c59	      2453	elf.c	FUNCTION_36	SWITCH_1	CALL_97
0x4003c59	            0x89c1	                            mov ecx, eax	      2453	elf.c	FUNCTION_36	SWITCH_1	CALL_97
0x4003c5b	      0xe9d8020000	                           jmp 0x4003f38	      2454	elf.c	FUNCTION_36	SWITCH_1
0x4003c60	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2457	elf.c	FUNCTION_36	SWITCH_1	CALL_98
0x4003c67	    0x89a8880c0000	            mov dword [rax + 0xc88], ebp	      2457	elf.c	FUNCTION_36	SWITCH_1	CALL_98
0x4003c6d	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4003c74	        0x498b1424	                    mov rdx, qword [r12]	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4003c78	    0x488990480200	            mov qword [rax + 0x248], rdx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4003c7f	      0x498b542408	                mov rdx, qword [r12 + 8]	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4003c84	    0x488990500200	            mov qword [rax + 0x250], rdx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4003c8b	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4003c90	    0x488990580200	            mov qword [rax + 0x258], rdx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4003c97	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4003c9c	    0x488990600200	            mov qword [rax + 0x260], rdx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4003ca3	      0x498b542420	            mov rdx, qword [r12 + 0x20] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4003ca8	    0x488990680200	            mov qword [rax + 0x268], rdx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4003caf	      0x498b542428	            mov rdx, qword [r12 + 0x28] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4003cb4	    0x488990700200	            mov qword [rax + 0x270], rdx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4003cbb	      0x498b542430	            mov rdx, qword [r12 + 0x30] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4003cc0	    0x488990780200	            mov qword [rax + 0x278], rdx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4003cc7	      0x498b542438	            mov rdx, qword [r12 + 0x38] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4003ccc	    0x488990800200	            mov qword [rax + 0x280], rdx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4003cd3	      0x498b542440	            mov rdx, qword [r12 + 0x40] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4003cd8	    0x488990880200	            mov qword [rax + 0x288], rdx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4003cdf	      0x498b542448	            mov rdx, qword [r12 + 0x48] 	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4003ce4	    0x488990900200	            mov qword [rax + 0x290], rdx	      2458	elf.c	FUNCTION_36	SWITCH_1	CALL_99
0x4003ceb	            0x89e9	                            mov ecx, ebp	      2459	elf.c	FUNCTION_36	SWITCH_1	CALL_100
0x4003ced	          0x4c89f2	                            mov rdx, r14	      2459	elf.c	FUNCTION_36	SWITCH_1	CALL_100
0x4003cf0	          0x4c89e6	                            mov rsi, r12	      2459	elf.c	FUNCTION_36	SWITCH_1	CALL_100
0x4003cf3	          0x4889df	                            mov rdi, rbx	      2459	elf.c	FUNCTION_36	SWITCH_1	CALL_100
0x4003cf6	      0xe800000000	                          call 0x4003cfb	      2459	elf.c	FUNCTION_36	SWITCH_1	CALL_100
0x4003cfb	            0x89c1	                            mov ecx, eax	      2459	elf.c	FUNCTION_36	SWITCH_1	CALL_100
0x4003cfd	      0xe936020000	                           jmp 0x4003f38	      2460	elf.c	FUNCTION_36	SWITCH_1
0x4003d02	      0x498b442420	            mov rax, qword [r12 + 0x20] 	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x4003d07	      0xb900000000	                              mov ecx, 0	      2542	elf.c	FUNCTION_36
0x4003d0c	        0x4883f803	                              cmp rax, 3	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x4003d10	     0xf8622020000	                           jbe 0x4003f38	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x4003d16	    0x49837c243804	               cmp qword [r12 + 0x38], 4	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x4003d1c	     0xf8516020000	                           jne 0x4003f38	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x4003d22	            0xa803	                              test al, 3	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x4003d24	     0xf850e020000	                           jne 0x4003f38	      2466	elf.c	FUNCTION_36	SWITCH_1	IF_58
0x4003d2a	            0x89e9	                            mov ecx, ebp	      2469	elf.c	FUNCTION_36	SWITCH_1	IF_59	CALL_101
0x4003d2c	          0x4c89f2	                            mov rdx, r14	      2469	elf.c	FUNCTION_36	SWITCH_1	IF_59	CALL_101
0x4003d2f	          0x4c89e6	                            mov rsi, r12	      2469	elf.c	FUNCTION_36	SWITCH_1	IF_59	CALL_101
0x4003d32	          0x4889df	                            mov rdi, rbx	      2469	elf.c	FUNCTION_36	SWITCH_1	IF_59	CALL_101
0x4003d35	      0xe800000000	                          call 0x4003d3a	      2469	elf.c	FUNCTION_36	SWITCH_1	IF_59	CALL_101
0x4003d3a	            0x85c0	                           test eax, eax	      2000	elf.c	FUNCTION_36
0x4003d3c	           0xf95c1	                                setne cl	      2000	elf.c	FUNCTION_36
0x4003d3f	           0xfb6c9	                           movzx ecx, cl	      2000	elf.c	FUNCTION_36
0x4003d42	      0xe9f1010000	                           jmp 0x4003f38	      2000	elf.c	FUNCTION_36
0x4003d47	      0x3df5ffff6f	                     cmp eax, 0x6ffffff5	      2476	elf.c	FUNCTION_36	SWITCH_1	IF_60
0x4003d4c	            0x740c	                            je 0x4003d5a	      2476	elf.c	FUNCTION_36	SWITCH_1	IF_60
0x4003d4e	        0x488b0c24	                    mov rcx, qword [rsp]	      2477	elf.c	FUNCTION_36	SWITCH_1	IF_60
0x4003d52	    0x3b8138030000	           cmp eax, dword [rcx + 0x338] 	      2477	elf.c	FUNCTION_36	SWITCH_1	IF_60
0x4003d58	            0x7532	                           jne 0x4003d8c	      2477	elf.c	FUNCTION_36	SWITCH_1	IF_60
0x4003d5a	            0x89e9	                            mov ecx, ebp	      2479	elf.c	FUNCTION_36	SWITCH_1	IF_60	IF_61	CALL_102
0x4003d5c	          0x4c89f2	                            mov rdx, r14	      2479	elf.c	FUNCTION_36	SWITCH_1	IF_60	IF_61	CALL_102
0x4003d5f	          0x4c89e6	                            mov rsi, r12	      2479	elf.c	FUNCTION_36	SWITCH_1	IF_60	IF_61	CALL_102
0x4003d62	          0x4889df	                            mov rdi, rbx	      2479	elf.c	FUNCTION_36	SWITCH_1	IF_60	IF_61	CALL_102
0x4003d65	      0xe800000000	                          call 0x4003d6a	      2479	elf.c	FUNCTION_36	SWITCH_1	IF_60	IF_61	CALL_102
0x4003d6a	      0xb900000000	                              mov ecx, 0	      2542	elf.c	FUNCTION_36
0x4003d6f	            0x85c0	                           test eax, eax	      2479	elf.c	FUNCTION_36	SWITCH_1	IF_60	IF_61	CALL_102
0x4003d71	     0xf84c1010000	                            je 0x4003f38	      2479	elf.c	FUNCTION_36	SWITCH_1	IF_60	IF_61	CALL_102
0x4003d77	          0x4c89e6	                            mov rsi, r12	      2481	elf.c	FUNCTION_36	SWITCH_1	IF_60	CALL_103
0x4003d7a	          0x4889df	                            mov rdi, rbx	      2481	elf.c	FUNCTION_36	SWITCH_1	IF_60	CALL_103
0x4003d7d	      0xe800000000	                          call 0x4003d82	      2481	elf.c	FUNCTION_36	SWITCH_1	IF_60	CALL_103
0x4003d82	      0xb901000000	                              mov ecx, 1	      2000	elf.c	FUNCTION_36
0x4003d87	      0xe9ac010000	                           jmp 0x4003f38	      2482	elf.c	FUNCTION_36	SWITCH_1	IF_60
0x4003d8c	            0x89e9	                            mov ecx, ebp	      2486	elf.c	FUNCTION_36	SWITCH_1	IF_62	CALL_104
0x4003d8e	          0x4c89f2	                            mov rdx, r14	      2486	elf.c	FUNCTION_36	SWITCH_1	IF_62	CALL_104
0x4003d91	          0x4c89e6	                            mov rsi, r12	      2486	elf.c	FUNCTION_36	SWITCH_1	IF_62	CALL_104
0x4003d94	          0x4889df	                            mov rdi, rbx	      2486	elf.c	FUNCTION_36	SWITCH_1	IF_62	CALL_104
0x4003d97	        0x488b0424	                    mov rax, qword [rsp]	      2486	elf.c	FUNCTION_36	SWITCH_1	IF_62	CALL_104
0x4003d9b	    0xff9090000000	                 call qword [rax + 0x90]	      2486	elf.c	FUNCTION_36	SWITCH_1	IF_62	CALL_104
0x4003da1	      0xb901000000	                              mov ecx, 1	      2000	elf.c	FUNCTION_36
0x4003da6	            0x85c0	                           test eax, eax	      2486	elf.c	FUNCTION_36	SWITCH_1	IF_62	CALL_104
0x4003da8	     0xf858a010000	                           jne 0x4003f38	      2486	elf.c	FUNCTION_36	SWITCH_1	IF_62	CALL_104
0x4003dae	      0x458b6c2404	               mov r13d, dword [r12 + 4]	      2489	elf.c	FUNCTION_36	SWITCH_1	IF_63
0x4003db3	          0x4585ed	                         test r13d, r13d	      2489	elf.c	FUNCTION_36	SWITCH_1	IF_63
0x4003db6	            0x7953	                           jns 0x4003e0b	      2489	elf.c	FUNCTION_36	SWITCH_1	IF_63
0x4003db8	    0x41f644240802	                  test byte [r12 + 8], 2	      2491	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64
0x4003dbe	            0x7434	                            je 0x4003df4	      2491	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64
0x4003dc0	      0xba05000000	                              mov edx, 5	      2496	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64	CALL_106
0x4003dc5	      0xbe00000000	                              mov esi, 0	      2496	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64	CALL_106
0x4003dca	      0xbf00000000	                              mov edi, 0	      2496	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64	CALL_106
0x4003dcf	      0xe800000000	                          call 0x4003dd4	      2496	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64	CALL_106
0x4003dd4	          0x4c89f1	                            mov rcx, r14	      2494	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64	CALL_105
0x4003dd7	          0x4489ea	                           mov edx, r13d	      2494	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64	CALL_105
0x4003dda	          0x4889de	                            mov rsi, rbx	      2494	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64	CALL_105
0x4003ddd	          0x4889c7	                            mov rdi, rax	      2494	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64	CALL_105
0x4003de0	      0xb800000000	                              mov eax, 0	      2494	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64	CALL_105
0x4003de5	      0xe800000000	                          call 0x4003dea	      2494	elf.c	FUNCTION_36	SWITCH_1	IF_63	IF_64	CALL_105
0x4003dea	      0xb900000000	                              mov ecx, 0	      2542	elf.c	FUNCTION_36
0x4003def	      0xe944010000	                           jmp 0x4003f38	      2542	elf.c	FUNCTION_36
0x4003df4	            0x89e9	                            mov ecx, ebp	      2501	elf.c	FUNCTION_36	SWITCH_1	IF_63	ELSE_5	CALL_107
0x4003df6	          0x4c89f2	                            mov rdx, r14	      2501	elf.c	FUNCTION_36	SWITCH_1	IF_63	ELSE_5	CALL_107
0x4003df9	          0x4c89e6	                            mov rsi, r12	      2501	elf.c	FUNCTION_36	SWITCH_1	IF_63	ELSE_5	CALL_107
0x4003dfc	          0x4889df	                            mov rdi, rbx	      2501	elf.c	FUNCTION_36	SWITCH_1	IF_63	ELSE_5	CALL_107
0x4003dff	      0xe800000000	                          call 0x4003e04	      2501	elf.c	FUNCTION_36	SWITCH_1	IF_63	ELSE_5	CALL_107
0x4003e04	            0x89c1	                            mov ecx, eax	      2501	elf.c	FUNCTION_36	SWITCH_1	IF_63	ELSE_5	CALL_107
0x4003e06	      0xe92d010000	                           jmp 0x4003f38	      2503	elf.c	FUNCTION_36	SWITCH_1	IF_63	ELSE_5
0x4003e0b	    0x418d85000000	             lea eax, [r13 - 0x70000000]	      2506	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65
0x4003e12	      0x3dffffff0f	                      cmp eax, 0xfffffff	      2506	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65
0x4003e17	            0x7734	                            ja 0x4003e4d	      2506	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65
0x4003e19	      0xba05000000	                              mov edx, 5	      2511	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65	CALL_109
0x4003e1e	      0xbe00000000	                              mov esi, 0	      2511	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65	CALL_109
0x4003e23	      0xbf00000000	                              mov edi, 0	      2511	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65	CALL_109
0x4003e28	      0xe800000000	                          call 0x4003e2d	      2511	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65	CALL_109
0x4003e2d	          0x4c89f1	                            mov rcx, r14	      2509	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65	CALL_108
0x4003e30	          0x4489ea	                           mov edx, r13d	      2509	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65	CALL_108
0x4003e33	          0x4889de	                            mov rsi, rbx	      2509	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65	CALL_108
0x4003e36	          0x4889c7	                            mov rdi, rax	      2509	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65	CALL_108
0x4003e39	      0xb800000000	                              mov eax, 0	      2509	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65	CALL_108
0x4003e3e	      0xe800000000	                          call 0x4003e43	      2509	elf.c	FUNCTION_36	SWITCH_1	ELSE_6	IF_65	CALL_108
0x4003e43	      0xb900000000	                              mov ecx, 0	      2542	elf.c	FUNCTION_36
0x4003e48	      0xe9eb000000	                           jmp 0x4003f38	      2542	elf.c	FUNCTION_36
0x4003e4d	    0x418d85000000	             lea eax, [r13 - 0x60000000]	      2513	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66
0x4003e54	      0x3dffffff0f	                      cmp eax, 0xfffffff	      2513	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66
0x4003e59	            0x7753	                            ja 0x4003eae	      2513	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66
0x4003e5b	    0x41f644240901	                  test byte [r12 + 9], 1	      2516	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	IF_67
0x4003e61	            0x7434	                            je 0x4003e97	      2516	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	IF_67
0x4003e63	      0xba05000000	                              mov edx, 5	      2522	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	IF_67	CALL_111
0x4003e68	      0xbe00000000	                              mov esi, 0	      2522	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	IF_67	CALL_111
0x4003e6d	      0xbf00000000	                              mov edi, 0	      2522	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	IF_67	CALL_111
0x4003e72	      0xe800000000	                          call 0x4003e77	      2522	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	IF_67	CALL_111
0x4003e77	          0x4c89f1	                            mov rcx, r14	      2520	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	IF_67	CALL_110
0x4003e7a	          0x4489ea	                           mov edx, r13d	      2520	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	IF_67	CALL_110
0x4003e7d	          0x4889de	                            mov rsi, rbx	      2520	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	IF_67	CALL_110
0x4003e80	          0x4889c7	                            mov rdi, rax	      2520	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	IF_67	CALL_110
0x4003e83	      0xb800000000	                              mov eax, 0	      2520	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	IF_67	CALL_110
0x4003e88	      0xe800000000	                          call 0x4003e8d	      2520	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	IF_67	CALL_110
0x4003e8d	      0xb900000000	                              mov ecx, 0	      2542	elf.c	FUNCTION_36
0x4003e92	      0xe9a1000000	                           jmp 0x4003f38	      2542	elf.c	FUNCTION_36
0x4003e97	            0x89e9	                            mov ecx, ebp	      2527	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	ELSE_8	CALL_112
0x4003e99	          0x4c89f2	                            mov rdx, r14	      2527	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	ELSE_8	CALL_112
0x4003e9c	          0x4c89e6	                            mov rsi, r12	      2527	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	ELSE_8	CALL_112
0x4003e9f	          0x4889df	                            mov rdi, rbx	      2527	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	ELSE_8	CALL_112
0x4003ea2	      0xe800000000	                          call 0x4003ea7	      2527	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	ELSE_8	CALL_112
0x4003ea7	            0x89c1	                            mov ecx, eax	      2527	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	ELSE_8	CALL_112
0x4003ea9	      0xe98a000000	                           jmp 0x4003f38	      2528	elf.c	FUNCTION_36	SWITCH_1	ELSE_7	IF_66	ELSE_8
0x4003eae	      0xba05000000	                              mov edx, 5	      2535	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_114
0x4003eb3	      0xbe00000000	                              mov esi, 0	      2535	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_114
0x4003eb8	      0xbf00000000	                              mov edi, 0	      2535	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_114
0x4003ebd	      0xe800000000	                          call 0x4003ec2	      2535	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_114
0x4003ec2	          0x4c89f1	                            mov rcx, r14	      2533	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_113
0x4003ec5	          0x4489ea	                           mov edx, r13d	      2533	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_113
0x4003ec8	          0x4889de	                            mov rsi, rbx	      2533	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_113
0x4003ecb	          0x4889c7	                            mov rdi, rax	      2533	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_113
0x4003ece	      0xb800000000	                              mov eax, 0	      2533	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_113
0x4003ed3	      0xe800000000	                          call 0x4003ed8	      2533	elf.c	FUNCTION_36	SWITCH_1	ELSE_9	CALL_113
0x4003ed8	      0xb900000000	                              mov ecx, 0	      2542	elf.c	FUNCTION_36
0x4003edd	            0xeb59	                           jmp 0x4003f38	      2542	elf.c	FUNCTION_36
0x4003edf	      0xb900000000	                              mov ecx, 0	      2542	elf.c	FUNCTION_36
0x4003ee4	            0xeb52	                           jmp 0x4003f38	      2542	elf.c	FUNCTION_36
0x4003ee6	      0xb901000000	                              mov ecx, 1	      2000	elf.c	FUNCTION_36
0x4003eeb	            0xeb4b	                           jmp 0x4003f38	      2000	elf.c	FUNCTION_36
0x4003eed	      0xb900000000	                              mov ecx, 0	      2542	elf.c	FUNCTION_36
0x4003ef2	            0xeb44	                           jmp 0x4003f38	      2542	elf.c	FUNCTION_36
0x4003ef4	      0xb901000000	                              mov ecx, 1	      2000	elf.c	FUNCTION_36
0x4003ef9	            0xeb3d	                           jmp 0x4003f38	      2000	elf.c	FUNCTION_36
0x4003efb	      0xb901000000	                              mov ecx, 1	      2000	elf.c	FUNCTION_36
0x4003f00	            0xeb36	                           jmp 0x4003f38	      2000	elf.c	FUNCTION_36
0x4003f02	      0xb901000000	                              mov ecx, 1	      2000	elf.c	FUNCTION_36
0x4003f07	            0xeb2f	                           jmp 0x4003f38	      2000	elf.c	FUNCTION_36
0x4003f09	      0xb901000000	                              mov ecx, 1	      2000	elf.c	FUNCTION_36
0x4003f0e	            0xeb28	                           jmp 0x4003f38	      2000	elf.c	FUNCTION_36
0x4003f10	      0xb901000000	                              mov ecx, 1	      2000	elf.c	FUNCTION_36
0x4003f15	            0xeb21	                           jmp 0x4003f38	      2000	elf.c	FUNCTION_36
0x4003f17	      0xb900000000	                              mov ecx, 0	      2542	elf.c	FUNCTION_36
0x4003f1c	            0xeb1a	                           jmp 0x4003f38	      2542	elf.c	FUNCTION_36
0x4003f1e	      0xb900000000	                              mov ecx, 0	      2542	elf.c	FUNCTION_36
0x4003f23	            0xeb13	                           jmp 0x4003f38	      2542	elf.c	FUNCTION_36
0x4003f25	      0xb900000000	                              mov ecx, 0	      2542	elf.c	FUNCTION_36
0x4003f2a	            0xeb0c	                           jmp 0x4003f38	      2542	elf.c	FUNCTION_36
0x4003f2c	      0xb900000000	                              mov ecx, 0	      2542	elf.c	FUNCTION_36
0x4003f31	            0xeb05	                           jmp 0x4003f38	      2542	elf.c	FUNCTION_36
0x4003f33	      0xb900000000	                              mov ecx, 0	      2542	elf.c	FUNCTION_36
0x4003f38	    0x488b05000000	            mov rax, qword [0x04003f3f] 	      2544	elf.c	FUNCTION_36	IF_68
0x4003f3f	          0x4885c0	                           test rax, rax	      2544	elf.c	FUNCTION_36	IF_68
0x4003f42	            0x7411	                            je 0x4003f55	      2544	elf.c	FUNCTION_36	IF_68
0x4003f44	    0x483b1d000000	            cmp rbx, qword [0x04003f4b] 	      2544	elf.c	FUNCTION_36	IF_68
0x4003f4b	            0x7508	                           jne 0x4003f55	      2544	elf.c	FUNCTION_36	IF_68
0x4003f4d	    0x42c704b80000	              mov dword [rax + r15*4], 0	      2545	elf.c	FUNCTION_36	IF_68
0x4003f55	    0x8b0500000000	            mov eax, dword [0x04003f5b] 	      2546	elf.c	FUNCTION_36	IF_69
0x4003f5b	          0x8d50ff	                      lea edx, [rax - 1]	      2546	elf.c	FUNCTION_36	IF_69
0x4003f5e	    0x891500000000	            mov dword [0x04003f64], edx 	      2546	elf.c	FUNCTION_36	IF_69
0x4003f64	            0x89c8	                            mov eax, ecx	      2551	elf.c	FUNCTION_36
0x4003f66	            0x85d2	                           test edx, edx	      2546	elf.c	FUNCTION_36	IF_69
0x4003f68	            0x7512	                           jne 0x4003f7c	      2546	elf.c	FUNCTION_36	IF_69
0x4003f6a	    0x48c705000000	               mov qword [0x04003f75], 0	      2548	elf.c	FUNCTION_36	IF_69
0x4003f75	    0x48891d000000	            mov qword [0x04003f7c], rbx 	      2549	elf.c	FUNCTION_36	IF_69
0x4003f7c	        0x4883c418	                           add rsp, 0x18	      2552	elf.c	FUNCTION_36
0x4003f80	              0x5b	                                 pop rbx	      2552	elf.c	FUNCTION_36
0x4003f81	              0x5d	                                 pop rbp	      2552	elf.c	FUNCTION_36
0x4003f82	            0x415c	                                 pop r12	      2552	elf.c	FUNCTION_36
0x4003f84	            0x415d	                                 pop r13	      2552	elf.c	FUNCTION_36
0x4003f86	            0x415e	                                 pop r14	      2552	elf.c	FUNCTION_36
0x4003f88	            0x415f	                                 pop r15	      2552	elf.c	FUNCTION_36
0x4003f8a	            0xf3c3	                                     ret	      2552	elf.c	FUNCTION_36
_bfd_elf_copy_private_section_data	FOR,0:ELSE,0:IF,2:WHILE,0:DO,0:SWITCH,0:CALL,3:functions,0	28
0x4009e04	        0x4c8b4708	                 mov r8, qword [rdi + 8]	      7571	elf.c	FUNCTION_84	IF_1
0x4009e08	      0xb801000000	                              mov eax, 1	      7573	elf.c	FUNCTION_84	IF_1
0x4009e0d	      0x4183780805	                   cmp dword [r8 + 8], 5	      7571	elf.c	FUNCTION_84	IF_1
0x4009e12	            0x755d	                           jne 0x4009e71	      7571	elf.c	FUNCTION_84	IF_1
0x4009e14	        0x4c8b4208	                 mov r8, qword [rdx + 8]	      7572	elf.c	FUNCTION_84	IF_1
0x4009e18	      0x4183780805	                   cmp dword [r8 + 8], 5	      7572	elf.c	FUNCTION_84	IF_1
0x4009e1d	            0x7552	                           jne 0x4009e71	      7572	elf.c	FUNCTION_84	IF_1
0x4009e1f	        0x4883ec08	                              sub rsp, 8	      7568	elf.c	FUNCTION_84
0x4009e23	    0x4c8b86e00000	              mov r8, qword [rsi + 0xe0]	      7575	elf.c	FUNCTION_84	CALL_1
0x4009e2a	    0x4c8b89e00000	              mov r9, qword [rcx + 0xe0]	      7576	elf.c	FUNCTION_84	CALL_2
0x4009e31	        0x498b4038	              mov rax, qword [r8 + 0x38]	      7578	elf.c	FUNCTION_84
0x4009e35	        0x49894138	              mov qword [r9 + 0x38], rax	      7578	elf.c	FUNCTION_84
0x4009e39	        0x418b4004	                 mov eax, dword [r8 + 4]	      7580	elf.c	FUNCTION_84	IF_2
0x4009e3d	          0x83f802	                              cmp eax, 2	      7583	elf.c	FUNCTION_84	IF_2
0x4009e40	        0x410f94c3	                               sete r11b	      7583	elf.c	FUNCTION_84	IF_2
0x4009e44	          0x83f80b	                            cmp eax, 0xb	      7583	elf.c	FUNCTION_84	IF_2
0x4009e47	        0x410f94c2	                               sete r10b	      7583	elf.c	FUNCTION_84	IF_2
0x4009e4b	          0x4508d3	                           or r11b, r10b	      7583	elf.c	FUNCTION_84	IF_2
0x4009e4e	            0x750a	                           jne 0x4009e5a	      7583	elf.c	FUNCTION_84	IF_2
0x4009e50	      0x2dfdffff6f	                     sub eax, 0x6ffffffd	      7583	elf.c	FUNCTION_84	IF_2
0x4009e55	          0x83f801	                              cmp eax, 1	      7583	elf.c	FUNCTION_84	IF_2
0x4009e58	            0x7708	                            ja 0x4009e62	      7583	elf.c	FUNCTION_84	IF_2
0x4009e5a	        0x418b402c	              mov eax, dword [r8 + 0x2c]	      7584	elf.c	FUNCTION_84	IF_2
0x4009e5e	        0x4189412c	              mov dword [r9 + 0x2c], eax	      7584	elf.c	FUNCTION_84	IF_2
0x4009e62	    0x41b800000000	                              mov r8d, 0	      7586	elf.c	FUNCTION_84	CALL_3
0x4009e68	      0xe800000000	                          call 0x4009e6d	      7586	elf.c	FUNCTION_84	CALL_3
0x4009e6d	        0x4883c408	                              add rsp, 8	      7588	elf.c	FUNCTION_84
0x4009e71	            0xf3c3	                                     ret	      7588	elf.c	FUNCTION_84
elfcore_write_ppc_vsx	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,1:functions,0	8
0x400f901	        0x4883ec10	                           sub rsp, 0x10	     10811	elf.c	FUNCTION_172
0x400f905	          0x4989c9	                             mov r9, rcx	     10811	elf.c	FUNCTION_172
0x400f908	            0x4150	                                 push r8	     10813	elf.c	FUNCTION_172	CALL_1
0x400f90a	    0x41b802010000	                          mov r8d, 0x102	     10813	elf.c	FUNCTION_172	CALL_1
0x400f910	      0xb900000000	                              mov ecx, 0	     10813	elf.c	FUNCTION_172	CALL_1
0x400f915	      0xe800000000	                          call 0x400f91a	     10813	elf.c	FUNCTION_172	CALL_1
0x400f91a	        0x4883c418	                           add rsp, 0x18	     10815	elf.c	FUNCTION_172
0x400f91e	              0xc3	                                     ret	     10815	elf.c	FUNCTION_172
elfcore_write_s390_ctrs	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,1:functions,0	8
0x400f979	        0x4883ec10	                           sub rsp, 0x10	     10872	elf.c	FUNCTION_177
0x400f97d	          0x4989c9	                             mov r9, rcx	     10872	elf.c	FUNCTION_177
0x400f980	            0x4150	                                 push r8	     10874	elf.c	FUNCTION_177	CALL_1
0x400f982	    0x41b804030000	                          mov r8d, 0x304	     10874	elf.c	FUNCTION_177	CALL_1
0x400f988	      0xb900000000	                              mov ecx, 0	     10874	elf.c	FUNCTION_177	CALL_1
0x400f98d	      0xe800000000	                          call 0x400f992	     10874	elf.c	FUNCTION_177	CALL_1
0x400f992	        0x4883c418	                           add rsp, 0x18	     10876	elf.c	FUNCTION_177
0x400f996	              0xc3	                                     ret	     10876	elf.c	FUNCTION_177
_bfd_elf_reloc_type_class	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,0:functions,0	2
0x400ffc5	      0xb800000000	                              mov eax, 0	     11263	elf.c	FUNCTION_195
0x400ffca	              0xc3	                                     ret	     11263	elf.c	FUNCTION_195
_bfd_elf_section_from_bfd_section	FOR,0:ELSE,3:IF,7:WHILE,0:DO,0:SWITCH,0:CALL,5:functions,0	62
0x40064a4	              0x53	                                push rbx	      6453	elf.c	FUNCTION_78
0x40064a5	        0x4883ec10	                           sub rsp, 0x10	      6453	elf.c	FUNCTION_78
0x40064a9	    0x64488b042528	                mov rax, qword fs:[0x28]	      6453	elf.c	FUNCTION_78
0x40064b2	      0x4889442408	                mov qword [rsp + 8], rax	      6453	elf.c	FUNCTION_78
0x40064b7	            0x31c0	                            xor eax, eax	      6453	elf.c	FUNCTION_78
0x40064b9	    0x488b86e00000	            mov rax, qword [rsi + 0xe0] 	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x40064c0	          0x4885c0	                           test rax, rax	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x40064c3	            0x740a	                            je 0x40064cf	      6457	elf.c	FUNCTION_78	IF_1	CALL_1
0x40064c5	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x40064cb	            0x85c0	                           test eax, eax	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x40064cd	            0x7542	                           jne 0x4006511	      6458	elf.c	FUNCTION_78	IF_1	CALL_2
0x40064cf	    0x4881fe000000	                              cmp rsi, 0	      6461	elf.c	FUNCTION_78	IF_2
0x40064d6	            0x7464	                            je 0x400653c	      6461	elf.c	FUNCTION_78	IF_2
0x40064d8	        0xf6462110	           test byte [rsi + 0x21], 0x10 	      6463	elf.c	FUNCTION_78	ELSE_1	IF_3
0x40064dc	            0x7565	                           jne 0x4006543	      6463	elf.c	FUNCTION_78	ELSE_1	IF_3
0x40064de	    0x4881fe000000	                              cmp rsi, 0	      6465	elf.c	FUNCTION_78	ELSE_2	IF_4
0x40064e5	            0x753c	                           jne 0x4006523	      6465	elf.c	FUNCTION_78	ELSE_2	IF_4
0x40064e7	            0xeb61	                           jmp 0x400654a	      6465	elf.c	FUNCTION_78	ELSE_2	IF_4
0x40064e9	        0x895c2404	                mov dword [rsp + 4], ebx	      6473	elf.c	FUNCTION_78	IF_5
0x40064ed	      0x488d542404	                      lea rdx, [rsp + 4]	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x40064f2	            0xffd0	                                call rax	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x40064f4	            0x89c2	                            mov edx, eax	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x40064f6	            0x89d8	                            mov eax, ebx	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x40064f8	            0x85d2	                           test edx, edx	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x40064fa	            0x7415	                            je 0x4006511	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x40064fc	        0x8b442404	                mov eax, dword [rsp + 4]	      6476	elf.c	FUNCTION_78	IF_5	IF_6
0x4006500	            0xeb0f	                           jmp 0x4006511	      6476	elf.c	FUNCTION_78	IF_5	IF_6
0x4006502	      0xbf0f000000	                            mov edi, 0xf	      6480	elf.c	FUNCTION_78	CALL_5
0x4006507	      0xe800000000	                          call 0x400650c	      6480	elf.c	FUNCTION_78	CALL_5
0x400650c	      0xb8fffeffff	                     mov eax, 0xfffffeff	      6482	elf.c	FUNCTION_78
0x4006511	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      6483	elf.c	FUNCTION_78
0x4006516	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6483	elf.c	FUNCTION_78
0x400651f	            0x746a	                            je 0x400658b	      6483	elf.c	FUNCTION_78
0x4006521	            0xeb63	                           jmp 0x4006586	      6483	elf.c	FUNCTION_78
0x4006523	        0x488b4708	                mov rax, qword [rdi + 8]	      6470	elf.c	FUNCTION_78	CALL_4
0x4006527	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      6471	elf.c	FUNCTION_78	IF_5
0x400652e	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	      6471	elf.c	FUNCTION_78	IF_5
0x4006535	          0x4885c0	                           test rax, rax	      6471	elf.c	FUNCTION_78	IF_5
0x4006538	            0x7530	                           jne 0x400656a	      6471	elf.c	FUNCTION_78	IF_5
0x400653a	            0xebc6	                           jmp 0x4006502	      6471	elf.c	FUNCTION_78	IF_5
0x400653c	      0xbbf1ffffff	                     mov ebx, 0xfffffff1	      6462	elf.c	FUNCTION_78	IF_2
0x4006541	            0xeb0c	                           jmp 0x400654f	      6462	elf.c	FUNCTION_78	IF_2
0x4006543	      0xbbf2ffffff	                     mov ebx, 0xfffffff2	      6464	elf.c	FUNCTION_78	ELSE_1	IF_3
0x4006548	            0xeb05	                           jmp 0x400654f	      6464	elf.c	FUNCTION_78	ELSE_1	IF_3
0x400654a	      0xbb00000000	                              mov ebx, 0	      6466	elf.c	FUNCTION_78	ELSE_2	IF_4
0x400654f	        0x488b4708	                mov rax, qword [rdi + 8]	      6470	elf.c	FUNCTION_78	CALL_4
0x4006553	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      6471	elf.c	FUNCTION_78	IF_5
0x400655a	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	      6471	elf.c	FUNCTION_78	IF_5
0x4006561	          0x4885c0	                           test rax, rax	      6471	elf.c	FUNCTION_78	IF_5
0x4006564	            0x7583	                           jne 0x40064e9	      6471	elf.c	FUNCTION_78	IF_5
0x4006566	            0x89d8	                            mov eax, ebx	      6471	elf.c	FUNCTION_78	IF_5
0x4006568	            0xeba7	                           jmp 0x4006511	      6471	elf.c	FUNCTION_78	IF_5
0x400656a	    0xc7442404fffe	        mov dword [rsp + 4], 0xfffffeff 	      6473	elf.c	FUNCTION_78	IF_5
0x4006572	      0x488d542404	                      lea rdx, [rsp + 4]	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x4006577	            0xffd0	                                call rax	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x4006579	            0x85c0	                           test eax, eax	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x400657b	     0xf857bffffff	                           jne 0x40064fc	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x4006581	      0xe97cffffff	                           jmp 0x4006502	      6475	elf.c	FUNCTION_78	IF_5	IF_6
0x4006586	      0xe800000000	                          call 0x400658b	      6483	elf.c	FUNCTION_78
0x400658b	        0x4883c410	                           add rsp, 0x10	      6483	elf.c	FUNCTION_78
0x400658f	              0x5b	                                 pop rbx	      6483	elf.c	FUNCTION_78
0x4006590	              0xc3	                                     ret	      6483	elf.c	FUNCTION_78
_bfd_elf_swap_vernaux_in	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,0:functions,0	30
0x4001be5	            0x4154	                                push r12	       152	elf.c	FUNCTION_7
0x4001be7	              0x55	                                push rbp	       152	elf.c	FUNCTION_7
0x4001be8	              0x53	                                push rbx	       152	elf.c	FUNCTION_7
0x4001be9	          0x4989fc	                            mov r12, rdi	       152	elf.c	FUNCTION_7
0x4001bec	          0x4889f3	                            mov rbx, rsi	       152	elf.c	FUNCTION_7
0x4001bef	          0x4889d5	                            mov rbp, rdx	       152	elf.c	FUNCTION_7
0x4001bf2	        0x488b4708	                mov rax, qword [rdi + 8]	       153	elf.c	FUNCTION_7
0x4001bf6	          0x4889f7	                            mov rdi, rsi	       153	elf.c	FUNCTION_7
0x4001bf9	    0xff9080000000	                 call qword [rax + 0x80]	       153	elf.c	FUNCTION_7
0x4001bff	        0x48894500	                    mov qword [rbp], rax	       153	elf.c	FUNCTION_7
0x4001c03	        0x488d7b04	                      lea rdi, [rbx + 4]	       154	elf.c	FUNCTION_7
0x4001c07	      0x498b442408	                mov rax, qword [r12 + 8]	       154	elf.c	FUNCTION_7
0x4001c0c	    0xff9098000000	                 call qword [rax + 0x98]	       154	elf.c	FUNCTION_7
0x4001c12	        0x66894508	                  mov word [rbp + 8], ax	       154	elf.c	FUNCTION_7
0x4001c16	        0x488d7b06	                      lea rdi, [rbx + 6]	       155	elf.c	FUNCTION_7
0x4001c1a	      0x498b442408	                mov rax, qword [r12 + 8]	       155	elf.c	FUNCTION_7
0x4001c1f	    0xff9098000000	                 call qword [rax + 0x98]	       155	elf.c	FUNCTION_7
0x4001c25	        0x6689450a	                mov word [rbp + 0xa], ax	       155	elf.c	FUNCTION_7
0x4001c29	        0x488d7b08	                      lea rdi, [rbx + 8]	       156	elf.c	FUNCTION_7
0x4001c2d	      0x498b442408	                mov rax, qword [r12 + 8]	       156	elf.c	FUNCTION_7
0x4001c32	    0xff9080000000	                 call qword [rax + 0x80]	       156	elf.c	FUNCTION_7
0x4001c38	        0x48894510	            mov qword [rbp + 0x10], rax 	       156	elf.c	FUNCTION_7
0x4001c3c	        0x488d7b0c	                    lea rdi, [rbx + 0xc]	       157	elf.c	FUNCTION_7
0x4001c40	      0x498b442408	                mov rax, qword [r12 + 8]	       157	elf.c	FUNCTION_7
0x4001c45	    0xff9080000000	                 call qword [rax + 0x80]	       157	elf.c	FUNCTION_7
0x4001c4b	        0x48894518	            mov qword [rbp + 0x18], rax 	       157	elf.c	FUNCTION_7
0x4001c4f	              0x5b	                                 pop rbx	       158	elf.c	FUNCTION_7
0x4001c50	              0x5d	                                 pop rbp	       158	elf.c	FUNCTION_7
0x4001c51	            0x415c	                                 pop r12	       158	elf.c	FUNCTION_7
0x4001c53	              0xc3	                                     ret	       158	elf.c	FUNCTION_7
_bfd_elf_no_info_to_howto	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,1:functions,0	5
0x400d606	        0x4883ec08	                              sub rsp, 8	      8885	elf.c	FUNCTION_108
0x400d60a	      0xba00000000	                              mov edx, 0	      8886	elf.c	FUNCTION_108	CALL_1
0x400d60f	      0xbeb6220000	                         mov esi, 0x22b6	      8886	elf.c	FUNCTION_108	CALL_1
0x400d614	      0xbf00000000	                              mov edi, 0	      8886	elf.c	FUNCTION_108	CALL_1
0x400d619	      0xe800000000	        call sym._bfd_elf_validate_reloc	      8886	elf.c	FUNCTION_108	CALL_1
sym_is_global	FOR,0:ELSE,0:IF,1:WHILE,0:DO,0:SWITCH,0:CALL,1:functions,0	22
0x4000120	        0x488b4708	                mov rax, qword [rdi + 8]	      3984	elf.c	FUNCTION_53	CALL_1
0x4000124	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      3985	elf.c	FUNCTION_53	IF_1
0x400012b	        0x488b4050	            mov rax, qword [rax + 0x50] 	      3985	elf.c	FUNCTION_53	IF_1
0x400012f	          0x4885c0	                           test rax, rax	      3985	elf.c	FUNCTION_53	IF_1
0x4000132	            0x7408	                            je 0x400013c	      3985	elf.c	FUNCTION_53	IF_1
0x4000134	        0x4883ec08	                              sub rsp, 8	      3982	elf.c	FUNCTION_53
0x4000138	            0xffd0	                                call rax	      3986	elf.c	FUNCTION_53	IF_1
0x400013a	            0xeb2a	                           jmp 0x4000166	      3986	elf.c	FUNCTION_53	IF_1
0x400013c	      0xb801000000	                              mov eax, 1	      3990	elf.c	FUNCTION_53
0x4000141	    0xf74618820080	      test dword [rsi + 0x18], 0x800082 	      3990	elf.c	FUNCTION_53
0x4000148	            0x7520	                           jne 0x400016a	      3990	elf.c	FUNCTION_53
0x400014a	        0x488b4620	            mov rax, qword [rsi + 0x20] 	      3989	elf.c	FUNCTION_53
0x400014e	    0x483d00000000	                              cmp rax, 0	      3989	elf.c	FUNCTION_53
0x4000154	            0x740a	                            je 0x4000160	      3989	elf.c	FUNCTION_53
0x4000156	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3986	elf.c	FUNCTION_53	IF_1
0x4000159	          0xc1e80c	                            shr eax, 0xc	      3986	elf.c	FUNCTION_53	IF_1
0x400015c	          0x83e001	                              and eax, 1	      3986	elf.c	FUNCTION_53	IF_1
0x400015f	              0xc3	                                     ret	      3986	elf.c	FUNCTION_53	IF_1
0x4000160	      0xb801000000	                              mov eax, 1	      3990	elf.c	FUNCTION_53
0x4000165	              0xc3	                                     ret	      3990	elf.c	FUNCTION_53
0x4000166	        0x4883c408	                              add rsp, 8	      3991	elf.c	FUNCTION_53
0x400016a	            0xf3c3	                                     ret	      3991	elf.c	FUNCTION_53
_bfd_elf_swap_verdef_in	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,0:functions,0	38
0x400196f	            0x4154	                                push r12	        70	elf.c	FUNCTION_1
0x4001971	              0x55	                                push rbp	        70	elf.c	FUNCTION_1
0x4001972	              0x53	                                push rbx	        70	elf.c	FUNCTION_1
0x4001973	          0x4989fc	                            mov r12, rdi	        70	elf.c	FUNCTION_1
0x4001976	          0x4889f3	                            mov rbx, rsi	        70	elf.c	FUNCTION_1
0x4001979	          0x4889d5	                            mov rbp, rdx	        70	elf.c	FUNCTION_1
0x400197c	        0x488b4708	                mov rax, qword [rdi + 8]	        71	elf.c	FUNCTION_1
0x4001980	          0x4889f7	                            mov rdi, rsi	        71	elf.c	FUNCTION_1
0x4001983	    0xff9098000000	                 call qword [rax + 0x98]	        71	elf.c	FUNCTION_1
0x4001989	        0x66894500	                      mov word [rbp], ax	        71	elf.c	FUNCTION_1
0x400198d	        0x488d7b02	                      lea rdi, [rbx + 2]	        72	elf.c	FUNCTION_1
0x4001991	      0x498b442408	                mov rax, qword [r12 + 8]	        72	elf.c	FUNCTION_1
0x4001996	    0xff9098000000	                 call qword [rax + 0x98]	        72	elf.c	FUNCTION_1
0x400199c	        0x66894502	                  mov word [rbp + 2], ax	        72	elf.c	FUNCTION_1
0x40019a0	        0x488d7b04	                      lea rdi, [rbx + 4]	        73	elf.c	FUNCTION_1
0x40019a4	      0x498b442408	                mov rax, qword [r12 + 8]	        73	elf.c	FUNCTION_1
0x40019a9	    0xff9098000000	                 call qword [rax + 0x98]	        73	elf.c	FUNCTION_1
0x40019af	        0x66894504	                  mov word [rbp + 4], ax	        73	elf.c	FUNCTION_1
0x40019b3	        0x488d7b06	                      lea rdi, [rbx + 6]	        74	elf.c	FUNCTION_1
0x40019b7	      0x498b442408	                mov rax, qword [r12 + 8]	        74	elf.c	FUNCTION_1
0x40019bc	    0xff9098000000	                 call qword [rax + 0x98]	        74	elf.c	FUNCTION_1
0x40019c2	        0x66894506	                  mov word [rbp + 6], ax	        74	elf.c	FUNCTION_1
0x40019c6	        0x488d7b08	                      lea rdi, [rbx + 8]	        75	elf.c	FUNCTION_1
0x40019ca	      0x498b442408	                mov rax, qword [r12 + 8]	        75	elf.c	FUNCTION_1
0x40019cf	    0xff9080000000	                 call qword [rax + 0x80]	        75	elf.c	FUNCTION_1
0x40019d5	        0x48894508	                mov qword [rbp + 8], rax	        75	elf.c	FUNCTION_1
0x40019d9	        0x488d7b0c	                    lea rdi, [rbx + 0xc]	        76	elf.c	FUNCTION_1
0x40019dd	      0x498b442408	                mov rax, qword [r12 + 8]	        76	elf.c	FUNCTION_1
0x40019e2	    0xff9080000000	                 call qword [rax + 0x80]	        76	elf.c	FUNCTION_1
0x40019e8	        0x48894510	            mov qword [rbp + 0x10], rax 	        76	elf.c	FUNCTION_1
0x40019ec	        0x488d7b10	                   lea rdi, [rbx + 0x10]	        77	elf.c	FUNCTION_1
0x40019f0	      0x498b442408	                mov rax, qword [r12 + 8]	        77	elf.c	FUNCTION_1
0x40019f5	    0xff9080000000	                 call qword [rax + 0x80]	        77	elf.c	FUNCTION_1
0x40019fb	        0x48894518	            mov qword [rbp + 0x18], rax 	        77	elf.c	FUNCTION_1
0x40019ff	              0x5b	                                 pop rbx	        78	elf.c	FUNCTION_1
0x4001a00	              0x5d	                                 pop rbp	        78	elf.c	FUNCTION_1
0x4001a01	            0x415c	                                 pop r12	        78	elf.c	FUNCTION_1
0x4001a03	              0xc3	                                     ret	        78	elf.c	FUNCTION_1
_bfd_elf_canonicalize_dynamic_reloc	FOR,2:ELSE,0:IF,3:WHILE,0:DO,0:SWITCH,0:CALL,9:functions,0	75
0x400bb56	            0x4157	                                push r15	      8241	elf.c	FUNCTION_96
0x400bb58	            0x4156	                                push r14	      8241	elf.c	FUNCTION_96
0x400bb5a	            0x4155	                                push r13	      8241	elf.c	FUNCTION_96
0x400bb5c	            0x4154	                                push r12	      8241	elf.c	FUNCTION_96
0x400bb5e	              0x55	                                push rbp	      8241	elf.c	FUNCTION_96
0x400bb5f	              0x53	                                push rbx	      8241	elf.c	FUNCTION_96
0x400bb60	        0x4883ec08	                              sub rsp, 8	      8241	elf.c	FUNCTION_96
0x400bb64	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      8246	elf.c	FUNCTION_96	IF_1	CALL_2
0x400bb6b	    0x83b87c0c0000	              cmp dword [rax + 0xc7c], 0	      8246	elf.c	FUNCTION_96	IF_1	CALL_2
0x400bb72	            0x7516	                           jne 0x400bb8a	      8246	elf.c	FUNCTION_96	IF_1	CALL_2
0x400bb74	      0xbf05000000	                              mov edi, 5	      8248	elf.c	FUNCTION_96	IF_1	CALL_3
0x400bb79	      0xe800000000	                          call 0x400bb7e	      8248	elf.c	FUNCTION_96	IF_1	CALL_3
0x400bb7e	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      8249	elf.c	FUNCTION_96	IF_1
0x400bb85	      0xe9d6000000	                           jmp 0x400bc60	      8249	elf.c	FUNCTION_96	IF_1
0x400bb8a	          0x4889fd	                            mov rbp, rdi	      8249	elf.c	FUNCTION_96	IF_1
0x400bb8d	          0x4989f4	                            mov r12, rsi	      8249	elf.c	FUNCTION_96	IF_1
0x400bb90	          0x4989d7	                            mov r15, rdx	      8249	elf.c	FUNCTION_96	IF_1
0x400bb93	        0x488b4708	                mov rax, qword [rdi + 8]	      8252	elf.c	FUNCTION_96	CALL_4
0x400bb97	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      8252	elf.c	FUNCTION_96	CALL_4
0x400bb9e	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      8252	elf.c	FUNCTION_96	CALL_4
0x400bba5	        0x4c8b7040	            mov r14, qword [rax + 0x40] 	      8252	elf.c	FUNCTION_96	CALL_4
0x400bba9	    0x488b9f900000	            mov rbx, qword [rdi + 0x90] 	      8254	elf.c	FUNCTION_96	FOR_1
0x400bbb0	          0x4885db	                           test rbx, rbx	      8254	elf.c	FUNCTION_96	FOR_1
0x400bbb3	     0xf848d000000	                            je 0x400bc46	      8254	elf.c	FUNCTION_96	FOR_1
0x400bbb9	    0x41bd00000000	                             mov r13d, 0	      8254	elf.c	FUNCTION_96	FOR_1
0x400bbbf	    0x488b83e00000	            mov rax, qword [rbx + 0xe0] 	      8256	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_6
0x400bbc6	    0x488b95f80000	            mov rdx, qword [rbp + 0xf8] 	      8256	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_6
0x400bbcd	    0x8bba7c0c0000	           mov edi, dword [rdx + 0xc7c] 	      8256	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_6
0x400bbd3	          0x397828	            cmp dword [rax + 0x28], edi 	      8256	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_6
0x400bbd6	            0x755f	                           jne 0x400bc37	      8256	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_6
0x400bbd8	          0x8b4004	                mov eax, dword [rax + 4]	      8257	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_7
0x400bbdb	          0x83f809	                              cmp eax, 9	      8257	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_7
0x400bbde	            0x7405	                            je 0x400bbe5	      8257	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_7
0x400bbe0	          0x83f804	                              cmp eax, 4	      8257	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_7
0x400bbe3	            0x7552	                           jne 0x400bc37	      8257	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_7
0x400bbe5	      0xb901000000	                              mov ecx, 1	      8263	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x400bbea	          0x4c89fa	                            mov rdx, r15	      8263	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x400bbed	          0x4889de	                            mov rsi, rbx	      8263	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x400bbf0	          0x4889ef	                            mov rdi, rbp	      8263	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x400bbf3	          0x41ffd6	                                call r14	      8263	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x400bbf6	            0x85c0	                           test eax, eax	      8263	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x400bbf8	            0x745f	                            je 0x400bc59	      8263	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x400bbfa	    0x488bb3e00000	            mov rsi, qword [rbx + 0xe0] 	      8265	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_9
0x400bc01	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      8265	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_9
0x400bc05	      0xba00000000	                              mov edx, 0	      8265	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_9
0x400bc0a	        0x48f77638	                  div qword [rsi + 0x38]	      8265	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_9
0x400bc0e	          0x4889c7	                            mov rdi, rax	      8265	elf.c	FUNCTION_96	FOR_1	IF_2	CALL_9
0x400bc11	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	      8266	elf.c	FUNCTION_96	FOR_1	IF_2
0x400bc15	          0x4885c0	                           test rax, rax	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400bc18	            0x7e1a	                           jle 0x400bc34	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400bc1a	      0xb900000000	                              mov ecx, 0	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400bc1f	        0x498934cc	            mov qword [r12 + rcx*8], rsi	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400bc23	        0x4883c101	                              add rcx, 1	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400bc27	        0x488d7620	                   lea rsi, [rsi + 0x20]	      8268	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400bc2b	          0x4839cf	                            cmp rdi, rcx	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400bc2e	            0x75ef	                           jne 0x400bc1f	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400bc30	        0x4d8d24c4	                  lea r12, [r12 + rax*8]	      8267	elf.c	FUNCTION_96	FOR_1	IF_2	FOR_2
0x400bc34	          0x4901c5	                            add r13, rax	      8269	elf.c	FUNCTION_96	FOR_1	IF_2
0x400bc37	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	      8254	elf.c	FUNCTION_96	FOR_1
0x400bc3b	          0x4885db	                           test rbx, rbx	      8254	elf.c	FUNCTION_96	FOR_1
0x400bc3e	     0xf857bffffff	                           jne 0x400bbbf	      8254	elf.c	FUNCTION_96	FOR_1
0x400bc44	            0xeb06	                           jmp 0x400bc4c	      8254	elf.c	FUNCTION_96	FOR_1
0x400bc46	    0x41bd00000000	                             mov r13d, 0	      8253	elf.c	FUNCTION_96
0x400bc4c	    0x49c704240000	                      mov qword [r12], 0	      8273	elf.c	FUNCTION_96
0x400bc54	          0x4c89e8	                            mov rax, r13	      8275	elf.c	FUNCTION_96
0x400bc57	            0xeb07	                           jmp 0x400bc60	      8275	elf.c	FUNCTION_96
0x400bc59	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      8264	elf.c	FUNCTION_96	FOR_1	IF_2	IF_3
0x400bc60	        0x4883c408	                              add rsp, 8	      8276	elf.c	FUNCTION_96
0x400bc64	              0x5b	                                 pop rbx	      8276	elf.c	FUNCTION_96
0x400bc65	              0x5d	                                 pop rbp	      8276	elf.c	FUNCTION_96
0x400bc66	            0x415c	                                 pop r12	      8276	elf.c	FUNCTION_96
0x400bc68	            0x415d	                                 pop r13	      8276	elf.c	FUNCTION_96
0x400bc6a	            0x415e	                                 pop r14	      8276	elf.c	FUNCTION_96
0x400bc6c	            0x415f	                                 pop r15	      8276	elf.c	FUNCTION_96
0x400bc6e	              0xc3	                                     ret	      8276	elf.c	FUNCTION_96
bfd_elf_set_group_contents	FOR,0:ELSE,1:IF,13:WHILE,2:DO,0:SWITCH,0:CALL,22:functions,0	176
0x4000597	          0x8b4620	            mov eax, dword [rsi + 0x20] 	      3458	elf.c	FUNCTION_49	IF_1
0x400059a	      0x2500001002	                      and eax, 0x2100000	      3458	elf.c	FUNCTION_49	IF_1
0x400059f	      0x3d00000002	                      cmp eax, 0x2000000	      3458	elf.c	FUNCTION_49	IF_1
0x40005a4	     0xf85d4020000	                           jne 0x400087e	      3458	elf.c	FUNCTION_49	IF_1
0x40005aa	          0x833a00	                      cmp dword [rdx], 0	      3459	elf.c	FUNCTION_49	IF_1
0x40005ad	     0xf85cb020000	                           jne 0x400087e	      3459	elf.c	FUNCTION_49	IF_1
0x40005b3	            0x4157	                                push r15	      3450	elf.c	FUNCTION_49
0x40005b5	            0x4156	                                push r14	      3450	elf.c	FUNCTION_49
0x40005b7	            0x4155	                                push r13	      3450	elf.c	FUNCTION_49
0x40005b9	            0x4154	                                push r12	      3450	elf.c	FUNCTION_49
0x40005bb	              0x55	                                push rbp	      3450	elf.c	FUNCTION_49
0x40005bc	              0x53	                                push rbx	      3450	elf.c	FUNCTION_49
0x40005bd	        0x4883ec18	                           sub rsp, 0x18	      3450	elf.c	FUNCTION_49
0x40005c1	          0x4889d3	                            mov rbx, rdx	      3450	elf.c	FUNCTION_49
0x40005c4	      0x4889742408	                mov qword [rsp + 8], rsi	      3450	elf.c	FUNCTION_49
0x40005c9	          0x4989fd	                            mov r13, rdi	      3450	elf.c	FUNCTION_49
0x40005cc	    0x488b8ee00000	            mov rcx, qword [rsi + 0xe0] 	      3462	elf.c	FUNCTION_49	IF_2	CALL_1
0x40005d3	          0x8b412c	            mov eax, dword [rcx + 0x2c] 	      3462	elf.c	FUNCTION_49	IF_2	CALL_1
0x40005d6	            0x85c0	                           test eax, eax	      3462	elf.c	FUNCTION_49	IF_2	CALL_1
0x40005d8	            0x756c	                           jne 0x4000646	      3462	elf.c	FUNCTION_49	IF_2	CALL_1
0x40005da	    0x488b81b00000	            mov rax, qword [rcx + 0xb0] 	      3468	elf.c	FUNCTION_49	IF_2	IF_3	CALL_2
0x40005e1	          0x4885c0	                           test rax, rax	      3468	elf.c	FUNCTION_49	IF_2	IF_3	CALL_2
0x40005e4	            0x7409	                            je 0x40005ef	      3468	elf.c	FUNCTION_49	IF_2	IF_3	CALL_2
0x40005e6	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3469	elf.c	FUNCTION_49	IF_2	CALL_3
0x40005ea	          0x4885c0	                           test rax, rax	      3471	elf.c	FUNCTION_49	IF_2	IF_4
0x40005ed	            0x7546	                           jne 0x4000635	      3471	elf.c	FUNCTION_49	IF_2	IF_4
0x40005ef	    0x498b85f80000	            mov rax, qword [r13 + 0xf8] 	      3475	elf.c	FUNCTION_49	IF_2	IF_4	CALL_5
0x40005f6	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3475	elf.c	FUNCTION_49	IF_2	IF_4	CALL_5
0x40005fd	      0x4883781000	               cmp qword [rax + 0x10], 0	      3475	elf.c	FUNCTION_49	IF_2	IF_4	CALL_5
0x4000602	            0x750f	                           jne 0x4000613	      3475	elf.c	FUNCTION_49	IF_2	IF_4	CALL_5
0x4000604	      0xbe930d0000	                          mov esi, 0xd93	      3475	elf.c	FUNCTION_49	IF_2	IF_4	CALL_5
0x4000609	      0xbf00000000	                              mov edi, 0	      3475	elf.c	FUNCTION_49	IF_2	IF_4	CALL_5
0x400060e	      0xe800000000	                          call 0x4000613	      3475	elf.c	FUNCTION_49	IF_2	IF_4	CALL_5
0x4000613	    0x498b85f80000	            mov rax, qword [r13 + 0xf8] 	      3476	elf.c	FUNCTION_49	IF_2	IF_4	CALL_6
0x400061a	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3476	elf.c	FUNCTION_49	IF_2	IF_4	CALL_6
0x4000621	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3476	elf.c	FUNCTION_49	IF_2	IF_4	CALL_6
0x4000626	          0x8b510c	              mov edx, dword [rcx + 0xc]	      3476	elf.c	FUNCTION_49	IF_2	IF_4	CALL_6
0x4000629	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3476	elf.c	FUNCTION_49	IF_2	IF_4	CALL_6
0x400062d	        0x488b04d0	            mov rax, qword [rax + rdx*8]	      3476	elf.c	FUNCTION_49	IF_2	IF_4	CALL_6
0x4000631	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3476	elf.c	FUNCTION_49	IF_2	IF_4	CALL_6
0x4000635	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3478	elf.c	FUNCTION_49	IF_2	CALL_7
0x400063a	    0x488b91e00000	            mov rdx, qword [rcx + 0xe0] 	      3478	elf.c	FUNCTION_49	IF_2	CALL_7
0x4000641	          0x89422c	             mov dword [rdx + 0x2c], eax	      3478	elf.c	FUNCTION_49	IF_2	CALL_7
0x4000644	            0xeb75	                           jmp 0x40006bb	      3478	elf.c	FUNCTION_49	IF_2	CALL_7
0x4000646	          0x83f8fe	             cmp eax, 0xfffffffffffffffe	      3480	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_8
0x4000649	            0x7570	                           jne 0x40006bb	      3480	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_8
0x400064b	    0x488b81c00000	            mov rax, qword [rcx + 0xc0] 	      3494	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_10
0x4000652	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3494	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_10
0x4000659	    0x488b90b80000	            mov rdx, qword [rax + 0xb8] 	      3494	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_10
0x4000660	    0x488b82e00000	            mov rax, qword [rdx + 0xe0] 	      3496	elf.c	FUNCTION_49	ELSE_1	IF_5
0x4000667	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      3496	elf.c	FUNCTION_49	ELSE_1	IF_5
0x400066a	    0x488b92f00000	            mov rdx, qword [rdx + 0xf0] 	      3498	elf.c	FUNCTION_49	ELSE_1	IF_5	IF_6	CALL_12
0x4000671	    0x488b92f80000	            mov rdx, qword [rdx + 0xf8] 	      3498	elf.c	FUNCTION_49	ELSE_1	IF_5	IF_6	CALL_12
0x4000678	      0xbe00000000	                              mov esi, 0	      3497	elf.c	FUNCTION_49	ELSE_1	IF_5
0x400067d	    0xf6828d0c0000	          test byte [rdx + 0xc8d], 0x40 	      3498	elf.c	FUNCTION_49	ELSE_1	IF_5	IF_6	CALL_12
0x4000684	            0x7506	                           jne 0x400068c	      3498	elf.c	FUNCTION_49	ELSE_1	IF_5	IF_6	CALL_12
0x4000686	    0x8bb294000000	            mov esi, dword [rdx + 0x94] 	      3503	elf.c	FUNCTION_49	ELSE_1	IF_5	IF_6
0x400068c	          0x4829f0	                            sub rax, rsi	      3505	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_14
0x400068f	    0x488b92000300	           mov rdx, qword [rdx + 0x300] 	      3505	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_14
0x4000696	        0x488b14c2	            mov rdx, qword [rdx + rax*8]	      3505	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_14
0x400069a	         0xfb64218	           movzx eax, byte [rdx + 0x18] 	      3506	elf.c	FUNCTION_49	ELSE_1	IF_5	WHILE_1
0x400069e	          0x83e806	                              sub eax, 6	      3506	elf.c	FUNCTION_49	ELSE_1	IF_5	WHILE_1
0x40006a1	            0x3c01	                               cmp al, 1	      3506	elf.c	FUNCTION_49	ELSE_1	IF_5	WHILE_1
0x40006a3	            0x770f	                            ja 0x40006b4	      3506	elf.c	FUNCTION_49	ELSE_1	IF_5	WHILE_1
0x40006a5	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	      3508	elf.c	FUNCTION_49	ELSE_1	IF_5	WHILE_1
0x40006a9	         0xfb64218	           movzx eax, byte [rdx + 0x18] 	      3506	elf.c	FUNCTION_49	ELSE_1	IF_5	WHILE_1
0x40006ad	          0x83e806	                              sub eax, 6	      3506	elf.c	FUNCTION_49	ELSE_1	IF_5	WHILE_1
0x40006b0	            0x3c01	                               cmp al, 1	      3506	elf.c	FUNCTION_49	ELSE_1	IF_5	WHILE_1
0x40006b2	            0x76f1	                           jbe 0x40006a5	      3506	elf.c	FUNCTION_49	ELSE_1	IF_5	WHILE_1
0x40006b4	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      3510	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_15
0x40006b8	          0x89412c	             mov dword [rcx + 0x2c], eax	      3510	elf.c	FUNCTION_49	ELSE_1	IF_5	CALL_15
0x40006bb	    0x41be01000000	                             mov r14d, 1	      3514	elf.c	FUNCTION_49
0x40006c1	      0x488b442408	                mov rax, qword [rsp + 8]	      3515	elf.c	FUNCTION_49	IF_7
0x40006c6	    0x4883b8b00000	               cmp qword [rax + 0xb0], 0	      3515	elf.c	FUNCTION_49	IF_7
0x40006ce	            0x753c	                           jne 0x400070c	      3515	elf.c	FUNCTION_49	IF_7
0x40006d0	          0x4989c7	                            mov r15, rax	      3518	elf.c	FUNCTION_49	IF_7	CALL_16
0x40006d3	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      3518	elf.c	FUNCTION_49	IF_7	CALL_16
0x40006d7	          0x4c89ef	                            mov rdi, r13	      3518	elf.c	FUNCTION_49	IF_7	CALL_16
0x40006da	      0xe800000000	                          call 0x40006df	      3518	elf.c	FUNCTION_49	IF_7	CALL_16
0x40006df	    0x498987b00000	             mov qword [r15 + 0xb0], rax	      3518	elf.c	FUNCTION_49	IF_7	CALL_16
0x40006e6	    0x498b97e00000	            mov rdx, qword [r15 + 0xe0] 	      3521	elf.c	FUNCTION_49	IF_7	CALL_17
0x40006ed	        0x48894248	             mov qword [rdx + 0x48], rax	      3521	elf.c	FUNCTION_49	IF_7	CALL_17
0x40006f1	    0x41be00000000	                             mov r14d, 0	      3517	elf.c	FUNCTION_49	IF_7
0x40006f7	    0x4983bfb00000	               cmp qword [r15 + 0xb0], 0	      3522	elf.c	FUNCTION_49	IF_7	IF_8
0x40006ff	            0x750b	                           jne 0x400070c	      3522	elf.c	FUNCTION_49	IF_7	IF_8
0x4000701	    0xc70301000000	                      mov dword [rbx], 1	      3524	elf.c	FUNCTION_49	IF_7	IF_8
0x4000707	      0xe964010000	                           jmp 0x4000870	      3525	elf.c	FUNCTION_49	IF_7	IF_8
0x400070c	      0x488b442408	                mov rax, qword [rsp + 8]	      3529	elf.c	FUNCTION_49
0x4000711	        0x488b6838	            mov rbp, qword [rax + 0x38] 	      3529	elf.c	FUNCTION_49
0x4000715	    0x4803a8b00000	             add rbp, qword [rax + 0xb0]	      3529	elf.c	FUNCTION_49
0x400071c	    0x488b80e00000	            mov rax, qword [rax + 0xe0] 	      3534	elf.c	FUNCTION_49	CALL_18
0x4000723	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      3534	elf.c	FUNCTION_49	CALL_18
0x400072a	        0x48890424	                    mov qword [rsp], rax	      3534	elf.c	FUNCTION_49	CALL_18
0x400072e	          0x4885c0	                           test rax, rax	      3540	elf.c	FUNCTION_49	WHILE_2
0x4000731	     0xf84e8000000	                            je 0x400081f	      3540	elf.c	FUNCTION_49	WHILE_2
0x4000737	          0x4889c3	                            mov rbx, rax	      3540	elf.c	FUNCTION_49	WHILE_2
0x400073a	          0x4889d8	                            mov rax, rbx	      3540	elf.c	FUNCTION_49	WHILE_2
0x400073d	          0x4585f6	                         test r14d, r14d	      3545	elf.c	FUNCTION_49	WHILE_2	IF_9
0x4000740	            0x7504	                           jne 0x4000746	      3545	elf.c	FUNCTION_49	WHILE_2	IF_9
0x4000742	        0x488b4368	            mov rax, qword [rbx + 0x68] 	      3546	elf.c	FUNCTION_49	WHILE_2	IF_9
0x4000746	    0x483d00000000	                              cmp rax, 0	      3548	elf.c	FUNCTION_49	WHILE_2	IF_10
0x400074c	     0xf84b0000000	                            je 0x4000802	      3548	elf.c	FUNCTION_49	WHILE_2	IF_10
0x4000752	          0x4885c0	                           test rax, rax	      3548	elf.c	FUNCTION_49	WHILE_2	IF_10
0x4000755	     0xf84a7000000	                            je 0x4000802	      3548	elf.c	FUNCTION_49	WHILE_2	IF_10
0x400075b	    0x4c8ba0e00000	            mov r12, qword [rax + 0xe0] 	      3550	elf.c	FUNCTION_49	WHILE_2	IF_10	CALL_19
0x4000762	    0x4c8bbbe00000	            mov r15, qword [rbx + 0xe0] 	      3551	elf.c	FUNCTION_49	WHILE_2	IF_10	CALL_20
0x4000769	      0x498b442458	            mov rax, qword [r12 + 0x58] 	      3553	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x400076e	          0x4885c0	                           test rax, rax	      3553	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4000771	            0x743a	                            je 0x40007ad	      3553	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4000773	          0x4585f6	                         test r14d, r14d	      3554	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4000776	            0x7517	                           jne 0x400078f	      3554	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4000778	        0x498b5758	            mov rdx, qword [r15 + 0x58] 	      3555	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x400077c	          0x4885d2	                           test rdx, rdx	      3556	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x400077f	     0xf84d8000000	                            je 0x400085d	      3556	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4000785	        0xf6420902	                  test byte [rdx + 9], 2	      3556	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4000789	     0xf84ce000000	                            je 0x400085d	      3556	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x400078f	    0x488148080002	               or qword [rax + 8], 0x200	      3558	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x4000797	        0x4883ed04	                              sub rbp, 4	      3559	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x400079b	      0x49637c2464	         movsxd rdi, dword [r12 + 0x64] 	      3560	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x40007a0	        0x498b4508	                mov rax, qword [r13 + 8]	      3560	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x40007a4	          0x4889ee	                            mov rsi, rbp	      3560	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x40007a7	    0xff9090000000	                 call qword [rax + 0x90]	      3560	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_11
0x40007ad	      0x498b442470	            mov rax, qword [r12 + 0x70] 	      3562	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x40007b2	          0x4885c0	                           test rax, rax	      3562	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x40007b5	            0x7432	                            je 0x40007e9	      3562	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x40007b7	          0x4585f6	                         test r14d, r14d	      3563	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x40007ba	            0x750f	                           jne 0x40007cb	      3563	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x40007bc	        0x498b5770	            mov rdx, qword [r15 + 0x70] 	      3564	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x40007c0	          0x4885d2	                           test rdx, rdx	      3565	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x40007c3	            0x7424	                            je 0x40007e9	      3565	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x40007c5	        0xf6420902	                  test byte [rdx + 9], 2	      3565	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x40007c9	            0x741e	                            je 0x40007e9	      3565	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x40007cb	    0x488148080002	               or qword [rax + 8], 0x200	      3567	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x40007d3	        0x4883ed04	                              sub rbp, 4	      3568	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x40007d7	      0x49637c247c	         movsxd rdi, dword [r12 + 0x7c] 	      3569	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x40007dc	        0x498b4508	                mov rax, qword [r13 + 8]	      3569	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x40007e0	          0x4889ee	                            mov rsi, rbp	      3569	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x40007e3	    0xff9090000000	                 call qword [rax + 0x90]	      3569	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x40007e9	        0x4883ed04	                              sub rbp, 4	      3571	elf.c	FUNCTION_49	WHILE_2	IF_10
0x40007ed	    0x4963bc248800	         movsxd rdi, dword [r12 + 0x88] 	      3572	elf.c	FUNCTION_49	WHILE_2	IF_10
0x40007f5	        0x498b4508	                mov rax, qword [r13 + 8]	      3572	elf.c	FUNCTION_49	WHILE_2	IF_10
0x40007f9	          0x4889ee	                            mov rsi, rbp	      3572	elf.c	FUNCTION_49	WHILE_2	IF_10
0x40007fc	    0xff9090000000	                 call qword [rax + 0x90]	      3572	elf.c	FUNCTION_49	WHILE_2	IF_10
0x4000802	    0x488b83e00000	            mov rax, qword [rbx + 0xe0] 	      3574	elf.c	FUNCTION_49	WHILE_2	CALL_21
0x4000809	    0x488b98c00000	            mov rbx, qword [rax + 0xc0] 	      3574	elf.c	FUNCTION_49	WHILE_2	CALL_21
0x4000810	        0x48391c24	                    cmp qword [rsp], rbx	      3575	elf.c	FUNCTION_49	WHILE_2	IF_13
0x4000814	            0x7409	                            je 0x400081f	      3575	elf.c	FUNCTION_49	WHILE_2	IF_13
0x4000816	          0x4885db	                           test rbx, rbx	      3540	elf.c	FUNCTION_49	WHILE_2
0x4000819	     0xf851bffffff	                           jne 0x400073a	      3540	elf.c	FUNCTION_49	WHILE_2
0x400081f	        0x4883ed04	                              sub rbp, 4	      3579	elf.c	FUNCTION_49
0x4000823	      0x488b442408	                mov rax, qword [rsp + 8]	      3580	elf.c	FUNCTION_49	CALL_22
0x4000828	    0x483ba8b00000	            cmp rbp, qword [rax + 0xb0] 	      3580	elf.c	FUNCTION_49	CALL_22
0x400082f	            0x740f	                            je 0x4000840	      3580	elf.c	FUNCTION_49	CALL_22
0x4000831	      0xbefc0d0000	                          mov esi, 0xdfc	      3580	elf.c	FUNCTION_49	CALL_22
0x4000836	      0xbf00000000	                              mov edi, 0	      3580	elf.c	FUNCTION_49	CALL_22
0x400083b	      0xe800000000	                          call 0x4000840	      3580	elf.c	FUNCTION_49	CALL_22
0x4000840	      0x488b442408	                mov rax, qword [rsp + 8]	      3582	elf.c	FUNCTION_49
0x4000845	          0x8b7820	            mov edi, dword [rax + 0x20] 	      3582	elf.c	FUNCTION_49
0x4000848	          0xc1ef11	                           shr edi, 0x11	      3582	elf.c	FUNCTION_49
0x400084b	          0x83e701	                              and edi, 1	      3582	elf.c	FUNCTION_49
0x400084e	        0x498b4508	                mov rax, qword [r13 + 8]	      3582	elf.c	FUNCTION_49
0x4000852	          0x4889ee	                            mov rsi, rbp	      3582	elf.c	FUNCTION_49
0x4000855	    0xff9090000000	                 call qword [rax + 0x90]	      3582	elf.c	FUNCTION_49
0x400085b	            0xeb13	                           jmp 0x4000870	      3582	elf.c	FUNCTION_49
0x400085d	      0x498b442470	            mov rax, qword [r12 + 0x70] 	      3562	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4000862	          0x4885c0	                           test rax, rax	      3562	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4000865	     0xf8551ffffff	                           jne 0x40007bc	      3562	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x400086b	      0xe979ffffff	                           jmp 0x40007e9	      3562	elf.c	FUNCTION_49	WHILE_2	IF_10	IF_12
0x4000870	        0x4883c418	                           add rsp, 0x18	      3583	elf.c	FUNCTION_49
0x4000874	              0x5b	                                 pop rbx	      3583	elf.c	FUNCTION_49
0x4000875	              0x5d	                                 pop rbp	      3583	elf.c	FUNCTION_49
0x4000876	            0x415c	                                 pop r12	      3583	elf.c	FUNCTION_49
0x4000878	            0x415d	                                 pop r13	      3583	elf.c	FUNCTION_49
0x400087a	            0x415e	                                 pop r14	      3583	elf.c	FUNCTION_49
0x400087c	            0x415f	                                 pop r15	      3583	elf.c	FUNCTION_49
0x400087e	            0xf3c3	                                     ret	      3583	elf.c	FUNCTION_49
_bfd_elf_post_process_headers	FOR,0:ELSE,0:IF,1:WHILE,0:DO,0:SWITCH,0:CALL,3:functions,0	12
0x4010508	    0x488b97f80000	            mov rdx, qword [rdi + 0xf8] 	     11513	elf.c	FUNCTION_201	CALL_1
0x401050f	        0x488b4708	                mov rax, qword [rdi + 8]	     11515	elf.c	FUNCTION_201	CALL_2
0x4010513	    0x488b80680300	           mov rax, qword [rax + 0x368] 	     11515	elf.c	FUNCTION_201	CALL_2
0x401051a	          0x8b400c	              mov eax, dword [rax + 0xc]	     11515	elf.c	FUNCTION_201	CALL_2
0x401051d	          0x884207	                  mov byte [rdx + 7], al	     11515	elf.c	FUNCTION_201	CALL_2
0x4010520	            0x84c0	                             test al, al	     11520	elf.c	FUNCTION_201	IF_1
0x4010522	            0x7514	                           jne 0x4010538	     11520	elf.c	FUNCTION_201	IF_1
0x4010524	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	     11521	elf.c	FUNCTION_201	IF_1	CALL_3
0x401052b	    0xf6808d0c0000	          test byte [rax + 0xc8d], 0x1c 	     11521	elf.c	FUNCTION_201	IF_1	CALL_3
0x4010532	            0x7404	                            je 0x4010538	     11521	elf.c	FUNCTION_201	IF_1	CALL_3
0x4010534	        0xc6420703	                   mov byte [rdx + 7], 3	     11522	elf.c	FUNCTION_201	IF_1
0x4010538	            0xf3c3	                                     ret	     11522	elf.c	FUNCTION_201	IF_1
_bfd_elf_section_offset	FOR,0:ELSE,0:IF,1:WHILE,0:DO,0:SWITCH,1:CALL,5:functions,0	42
0x40100bf	              0x55	                                push rbp	     11332	elf.c	FUNCTION_198
0x40100c0	              0x53	                                push rbx	     11332	elf.c	FUNCTION_198
0x40100c1	        0x4883ec08	                              sub rsp, 8	     11332	elf.c	FUNCTION_198
0x40100c5	          0x4989d0	                             mov r8, rdx	     11332	elf.c	FUNCTION_198
0x40100c8	          0x4889cd	                            mov rbp, rcx	     11332	elf.c	FUNCTION_198
0x40100cb	         0xfb74224	           movzx eax, word [rdx + 0x24] 	     11333	elf.c	FUNCTION_198	SWITCH_1
0x40100cf	        0x66c1e807	                               shr ax, 7	     11333	elf.c	FUNCTION_198	SWITCH_1
0x40100d3	          0x83e007	                              and eax, 7	     11333	elf.c	FUNCTION_198	SWITCH_1
0x40100d6	            0x3c01	                               cmp al, 1	     11333	elf.c	FUNCTION_198	SWITCH_1
0x40100d8	            0x7406	                            je 0x40100e0	     11333	elf.c	FUNCTION_198	SWITCH_1
0x40100da	            0x3c03	                               cmp al, 3	     11333	elf.c	FUNCTION_198	SWITCH_1
0x40100dc	            0x741d	                            je 0x40100fb	     11333	elf.c	FUNCTION_198	SWITCH_1
0x40100de	            0xeb22	                           jmp 0x4010102	     11333	elf.c	FUNCTION_198	SWITCH_1
0x40100e0	    0x488b82e00000	            mov rax, qword [rdx + 0xe0] 	     11336	elf.c	FUNCTION_198	SWITCH_1	CALL_2
0x40100e7	    0x488bb0d80000	            mov rsi, qword [rax + 0xd8] 	     11336	elf.c	FUNCTION_198	SWITCH_1	CALL_2
0x40100ee	          0x4889ca	                            mov rdx, rcx	     11336	elf.c	FUNCTION_198	SWITCH_1	CALL_2
0x40100f1	          0x4c89c7	                             mov rdi, r8	     11336	elf.c	FUNCTION_198	SWITCH_1	CALL_2
0x40100f4	      0xe800000000	                          call 0x40100f9	     11336	elf.c	FUNCTION_198	SWITCH_1	CALL_2
0x40100f9	            0xeb48	                           jmp 0x4010143	     11336	elf.c	FUNCTION_198	SWITCH_1	CALL_2
0x40100fb	      0xe800000000	                          call 0x4010100	     11339	elf.c	FUNCTION_198	SWITCH_1	CALL_3
0x4010100	            0xeb41	                           jmp 0x4010143	     11339	elf.c	FUNCTION_198	SWITCH_1	CALL_3
0x4010102	          0x4889c8	                            mov rax, rcx	     11339	elf.c	FUNCTION_198	SWITCH_1	CALL_3
0x4010105	        0xf6422304	               test byte [rdx + 0x23], 4	     11342	elf.c	FUNCTION_198	SWITCH_1	IF_1
0x4010109	            0x7438	                            je 0x4010143	     11342	elf.c	FUNCTION_198	SWITCH_1	IF_1
0x401010b	        0x488b4708	                mov rax, qword [rdi + 8]	     11345	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_4
0x401010f	    0x488b80680300	           mov rax, qword [rax + 0x368] 	     11346	elf.c	FUNCTION_198	SWITCH_1	IF_1
0x4010116	    0x488b80000300	           mov rax, qword [rax + 0x300] 	     11346	elf.c	FUNCTION_198	SWITCH_1	IF_1
0x401011d	         0xfb6400a	            movzx eax, byte [rax + 0xa] 	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x4010121	          0xc0e803	                               shr al, 3	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x4010124	           0xfb6c0	                           movzx eax, al	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x4010127	        0x488b5a38	            mov rbx, qword [rdx + 0x38] 	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x401012b	          0x4829c3	                            sub rbx, rax	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x401012e	      0xe800000000	                          call 0x4010133	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x4010133	            0x89c1	                            mov ecx, eax	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x4010135	          0x4889d8	                            mov rax, rbx	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x4010138	      0xba00000000	                              mov edx, 0	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x401013d	          0x48f7f1	                                 div rcx	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x4010140	          0x4829e8	                            sub rax, rbp	     11350	elf.c	FUNCTION_198	SWITCH_1	IF_1	CALL_5
0x4010143	        0x4883c408	                              add rsp, 8	     11354	elf.c	FUNCTION_198
0x4010147	              0x5b	                                 pop rbx	     11354	elf.c	FUNCTION_198
0x4010148	              0x5d	                                 pop rbp	     11354	elf.c	FUNCTION_198
0x4010149	              0xc3	                                     ret	     11354	elf.c	FUNCTION_198
_bfd_elf_close_and_cleanup	FOR,0:ELSE,0:IF,2:WHILE,0:DO,0:SWITCH,0:CALL,7:functions,0	27
0x400d758	              0x55	                                push rbp	      8988	elf.c	FUNCTION_110
0x400d759	              0x53	                                push rbx	      8988	elf.c	FUNCTION_110
0x400d75a	        0x4883ec08	                              sub rsp, 8	      8988	elf.c	FUNCTION_110
0x400d75e	          0x4889fb	                            mov rbx, rdi	      8988	elf.c	FUNCTION_110
0x400d761	    0x488baff80000	            mov rbp, qword [rdi + 0xf8] 	      8989	elf.c	FUNCTION_110	CALL_1
0x400d768	         0xfb64744	           movzx eax, byte [rdi + 0x44] 	      8990	elf.c	FUNCTION_110	IF_1
0x400d76c	          0x83e007	                              and eax, 7	      8990	elf.c	FUNCTION_110	IF_1
0x400d76f	            0x3c01	                               cmp al, 1	      8990	elf.c	FUNCTION_110	IF_1
0x400d771	            0x752e	                           jne 0x400d7a1	      8990	elf.c	FUNCTION_110	IF_1
0x400d773	          0x4885ed	                           test rbp, rbp	      8990	elf.c	FUNCTION_110	IF_1
0x400d776	            0x7429	                            je 0x400d7a1	      8990	elf.c	FUNCTION_110	IF_1
0x400d778	    0x488b85980c00	           mov rax, qword [rbp + 0xc98] 	      8992	elf.c	FUNCTION_110	IF_1	IF_2	CALL_3
0x400d77f	          0x4885c0	                           test rax, rax	      8992	elf.c	FUNCTION_110	IF_1	IF_2	CALL_3
0x400d782	            0x740e	                            je 0x400d792	      8992	elf.c	FUNCTION_110	IF_1	IF_2	CALL_3
0x400d784	        0x488b7808	                mov rdi, qword [rax + 8]	      8992	elf.c	FUNCTION_110	IF_1	IF_2	CALL_3
0x400d788	          0x4885ff	                           test rdi, rdi	      8992	elf.c	FUNCTION_110	IF_1	IF_2	CALL_3
0x400d78b	            0x7405	                            je 0x400d792	      8992	elf.c	FUNCTION_110	IF_1	IF_2	CALL_3
0x400d78d	      0xe800000000	                          call 0x400d792	      8993	elf.c	FUNCTION_110	IF_1	CALL_5
0x400d792	    0x488db5300300	                  lea rsi, [rbp + 0x330]	      8994	elf.c	FUNCTION_110	IF_1	CALL_6
0x400d799	          0x4889df	                            mov rdi, rbx	      8994	elf.c	FUNCTION_110	IF_1	CALL_6
0x400d79c	      0xe800000000	                          call 0x400d7a1	      8994	elf.c	FUNCTION_110	IF_1	CALL_6
0x400d7a1	          0x4889df	                            mov rdi, rbx	      8997	elf.c	FUNCTION_110	CALL_7
0x400d7a4	      0xe800000000	                          call 0x400d7a9	      8997	elf.c	FUNCTION_110	CALL_7
0x400d7a9	        0x4883c408	                              add rsp, 8	      8998	elf.c	FUNCTION_110
0x400d7ad	              0x5b	                                 pop rbx	      8998	elf.c	FUNCTION_110
0x400d7ae	              0x5d	                                 pop rbp	      8998	elf.c	FUNCTION_110
0x400d7af	              0xc3	                                     ret	      8998	elf.c	FUNCTION_110
elfcore_write_ppc_vmx	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,1:functions,0	8
0x400f8e3	        0x4883ec10	                           sub rsp, 0x10	     10799	elf.c	FUNCTION_171
0x400f8e7	          0x4989c9	                             mov r9, rcx	     10799	elf.c	FUNCTION_171
0x400f8ea	            0x4150	                                 push r8	     10801	elf.c	FUNCTION_171	CALL_1
0x400f8ec	    0x41b800010000	                          mov r8d, 0x100	     10801	elf.c	FUNCTION_171	CALL_1
0x400f8f2	      0xb900000000	                              mov ecx, 0	     10801	elf.c	FUNCTION_171	CALL_1
0x400f8f7	      0xe800000000	                          call 0x400f8fc	     10801	elf.c	FUNCTION_171	CALL_1
0x400f8fc	        0x4883c418	                           add rsp, 0x18	     10803	elf.c	FUNCTION_171
0x400f900	              0xc3	                                     ret	     10803	elf.c	FUNCTION_171
_bfd_elf_swap_verdaux_in	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,0:functions,0	18
0x4001a9b	            0x4154	                                push r12	       102	elf.c	FUNCTION_3
0x4001a9d	              0x55	                                push rbp	       102	elf.c	FUNCTION_3
0x4001a9e	              0x53	                                push rbx	       102	elf.c	FUNCTION_3
0x4001a9f	          0x4989fc	                            mov r12, rdi	       102	elf.c	FUNCTION_3
0x4001aa2	          0x4889f3	                            mov rbx, rsi	       102	elf.c	FUNCTION_3
0x4001aa5	          0x4889d5	                            mov rbp, rdx	       102	elf.c	FUNCTION_3
0x4001aa8	        0x488b4708	                mov rax, qword [rdi + 8]	       103	elf.c	FUNCTION_3
0x4001aac	          0x4889f7	                            mov rdi, rsi	       103	elf.c	FUNCTION_3
0x4001aaf	    0xff9080000000	                 call qword [rax + 0x80]	       103	elf.c	FUNCTION_3
0x4001ab5	        0x48894500	                    mov qword [rbp], rax	       103	elf.c	FUNCTION_3
0x4001ab9	        0x488d7b04	                      lea rdi, [rbx + 4]	       104	elf.c	FUNCTION_3
0x4001abd	      0x498b442408	                mov rax, qword [r12 + 8]	       104	elf.c	FUNCTION_3
0x4001ac2	    0xff9080000000	                 call qword [rax + 0x80]	       104	elf.c	FUNCTION_3
0x4001ac8	        0x48894508	                mov qword [rbp + 8], rax	       104	elf.c	FUNCTION_3
0x4001acc	              0x5b	                                 pop rbx	       105	elf.c	FUNCTION_3
0x4001acd	              0x5d	                                 pop rbp	       105	elf.c	FUNCTION_3
0x4001ace	            0x415c	                                 pop r12	       105	elf.c	FUNCTION_3
0x4001ad0	              0xc3	                                     ret	       105	elf.c	FUNCTION_3
_bfd_elf_swap_verneed_out	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,0:functions,0	30
0x4001b76	            0x4154	                                push r12	       138	elf.c	FUNCTION_6
0x4001b78	              0x55	                                push rbp	       138	elf.c	FUNCTION_6
0x4001b79	              0x53	                                push rbx	       138	elf.c	FUNCTION_6
0x4001b7a	          0x4889fd	                            mov rbp, rdi	       138	elf.c	FUNCTION_6
0x4001b7d	          0x4989f4	                            mov r12, rsi	       138	elf.c	FUNCTION_6
0x4001b80	          0x4889d3	                            mov rbx, rdx	       138	elf.c	FUNCTION_6
0x4001b83	           0xfb73e	                   movzx edi, word [rsi]	       139	elf.c	FUNCTION_6
0x4001b86	        0x488b4508	                mov rax, qword [rbp + 8]	       139	elf.c	FUNCTION_6
0x4001b8a	          0x4889d6	                            mov rsi, rdx	       139	elf.c	FUNCTION_6
0x4001b8d	    0xff90a8000000	                 call qword [rax + 0xa8]	       139	elf.c	FUNCTION_6
0x4001b93	        0x488d7302	                      lea rsi, [rbx + 2]	       140	elf.c	FUNCTION_6
0x4001b97	    0x410fb77c2402	               movzx edi, word [r12 + 2]	       140	elf.c	FUNCTION_6
0x4001b9d	        0x488b4508	                mov rax, qword [rbp + 8]	       140	elf.c	FUNCTION_6
0x4001ba1	    0xff90a8000000	                 call qword [rax + 0xa8]	       140	elf.c	FUNCTION_6
0x4001ba7	        0x488d7304	                      lea rsi, [rbx + 4]	       141	elf.c	FUNCTION_6
0x4001bab	      0x498b7c2408	                mov rdi, qword [r12 + 8]	       141	elf.c	FUNCTION_6
0x4001bb0	        0x488b4508	                mov rax, qword [rbp + 8]	       141	elf.c	FUNCTION_6
0x4001bb4	    0xff9090000000	                 call qword [rax + 0x90]	       141	elf.c	FUNCTION_6
0x4001bba	        0x488d7308	                      lea rsi, [rbx + 8]	       142	elf.c	FUNCTION_6
0x4001bbe	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	       142	elf.c	FUNCTION_6
0x4001bc3	        0x488b4508	                mov rax, qword [rbp + 8]	       142	elf.c	FUNCTION_6
0x4001bc7	    0xff9090000000	                 call qword [rax + 0x90]	       142	elf.c	FUNCTION_6
0x4001bcd	        0x488d730c	                    lea rsi, [rbx + 0xc]	       143	elf.c	FUNCTION_6
0x4001bd1	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	       143	elf.c	FUNCTION_6
0x4001bd6	        0x488b4508	                mov rax, qword [rbp + 8]	       143	elf.c	FUNCTION_6
0x4001bda	    0xff9090000000	                 call qword [rax + 0x90]	       143	elf.c	FUNCTION_6
0x4001be0	              0x5b	                                 pop rbx	       144	elf.c	FUNCTION_6
0x4001be1	              0x5d	                                 pop rbp	       144	elf.c	FUNCTION_6
0x4001be2	            0x415c	                                 pop r12	       144	elf.c	FUNCTION_6
0x4001be4	              0xc3	                                     ret	       144	elf.c	FUNCTION_6
elfcore_write_s390_gs_bc	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,1:functions,0	8
0x400fa69	        0x4883ec10	                           sub rsp, 0x10	     10972	elf.c	FUNCTION_185
0x400fa6d	          0x4989c9	                             mov r9, rcx	     10972	elf.c	FUNCTION_185
0x400fa70	            0x4150	                                 push r8	     10974	elf.c	FUNCTION_185	CALL_1
0x400fa72	    0x41b80c030000	                          mov r8d, 0x30c	     10974	elf.c	FUNCTION_185	CALL_1
0x400fa78	      0xb900000000	                              mov ecx, 0	     10974	elf.c	FUNCTION_185	CALL_1
0x400fa7d	      0xe800000000	                          call 0x400fa82	     10974	elf.c	FUNCTION_185	CALL_1
0x400fa82	        0x4883c418	                           add rsp, 0x18	     10977	elf.c	FUNCTION_185
0x400fa86	              0xc3	                                     ret	     10977	elf.c	FUNCTION_185
make_mapping	FOR,1:ELSE,0:IF,2:WHILE,0:DO,0:SWITCH,0:CALL,1:functions,0	48
0x400036f	            0x4157	                                push r15	      4470	elf.c	FUNCTION_62
0x4000371	            0x4156	                                push r14	      4470	elf.c	FUNCTION_62
0x4000373	            0x4155	                                push r13	      4470	elf.c	FUNCTION_62
0x4000375	            0x4154	                                push r12	      4470	elf.c	FUNCTION_62
0x4000377	              0x55	                                push rbp	      4470	elf.c	FUNCTION_62
0x4000378	              0x53	                                push rbx	      4470	elf.c	FUNCTION_62
0x4000379	        0x4883ec08	                              sub rsp, 8	      4470	elf.c	FUNCTION_62
0x400037d	          0x4989f7	                            mov r15, rsi	      4470	elf.c	FUNCTION_62
0x4000380	            0x89d3	                            mov ebx, edx	      4470	elf.c	FUNCTION_62
0x4000382	          0x4189ce	                           mov r14d, ecx	      4470	elf.c	FUNCTION_62
0x4000385	          0x4589c4	                           mov r12d, r8d	      4470	elf.c	FUNCTION_62
0x4000388	            0x89cd	                            mov ebp, ecx	      4477	elf.c	FUNCTION_62
0x400038a	            0x29d5	                            sub ebp, edx	      4477	elf.c	FUNCTION_62
0x400038c	        0x448d6dff	                     lea r13d, [rbp - 1]	      4477	elf.c	FUNCTION_62
0x4000390	    0x4a8d34ed5000	                 lea rsi, [r13*8 + 0x50]	      4478	elf.c	FUNCTION_62	CALL_1
0x4000398	      0xe800000000	                          call 0x400039d	      4478	elf.c	FUNCTION_62	CALL_1
0x400039d	          0x4885c0	                           test rax, rax	      4479	elf.c	FUNCTION_62	IF_1
0x40003a0	            0x7449	                            je 0x40003eb	      4479	elf.c	FUNCTION_62	IF_1
0x40003a2	    0x48c700000000	                      mov qword [rax], 0	      4481	elf.c	FUNCTION_62
0x40003a9	    0x48c740080100	                  mov qword [rax + 8], 1	      4482	elf.c	FUNCTION_62
0x40003b1	            0x89da	                            mov edx, ebx	      4483	elf.c	FUNCTION_62	FOR_1
0x40003b3	        0x498d3cd7	                  lea rdi, [r15 + rdx*8]	      4483	elf.c	FUNCTION_62	FOR_1
0x40003b7	          0x4139de	                           cmp r14d, ebx	      4483	elf.c	FUNCTION_62	FOR_1
0x40003ba	            0x761d	                           jbe 0x40003d9	      4483	elf.c	FUNCTION_62	FOR_1
0x40003bc	        0x4983c501	                              add r13, 1	      4483	elf.c	FUNCTION_62	FOR_1
0x40003c0	      0xba00000000	                              mov edx, 0	      4483	elf.c	FUNCTION_62	FOR_1
0x40003c5	        0x488b34d7	            mov rsi, qword [rdi + rdx*8]	      4484	elf.c	FUNCTION_62	FOR_1
0x40003c9	            0x89d1	                            mov ecx, edx	      4484	elf.c	FUNCTION_62	FOR_1
0x40003cb	      0x488974c848	     mov qword [rax + rcx*8 + 0x48], rsi	      4484	elf.c	FUNCTION_62	FOR_1
0x40003d0	        0x4883c201	                              add rdx, 1	      4484	elf.c	FUNCTION_62	FOR_1
0x40003d4	          0x4c39ea	                            cmp rdx, r13	      4483	elf.c	FUNCTION_62	FOR_1
0x40003d7	            0x75ec	                           jne 0x40003c5	      4483	elf.c	FUNCTION_62	FOR_1
0x40003d9	          0x896844	             mov dword [rax + 0x44], ebp	      4485	elf.c	FUNCTION_62
0x40003dc	            0x85db	                           test ebx, ebx	      4487	elf.c	FUNCTION_62	IF_2
0x40003de	            0x7510	                           jne 0x40003f0	      4487	elf.c	FUNCTION_62	IF_2
0x40003e0	          0x4585e4	                         test r12d, r12d	      4487	elf.c	FUNCTION_62	IF_2
0x40003e3	            0x740b	                            je 0x40003f0	      4487	elf.c	FUNCTION_62	IF_2
0x40003e5	        0x80484030	              or byte [rax + 0x40], 0x30	      4491	elf.c	FUNCTION_62	IF_2
0x40003e9	            0xeb05	                           jmp 0x40003f0	      4491	elf.c	FUNCTION_62	IF_2
0x40003eb	      0xb800000000	                              mov eax, 0	      4480	elf.c	FUNCTION_62	IF_1
0x40003f0	        0x4883c408	                              add rsp, 8	      4495	elf.c	FUNCTION_62
0x40003f4	              0x5b	                                 pop rbx	      4495	elf.c	FUNCTION_62
0x40003f5	              0x5d	                                 pop rbp	      4495	elf.c	FUNCTION_62
0x40003f6	            0x415c	                                 pop r12	      4495	elf.c	FUNCTION_62
0x40003f8	            0x415d	                                 pop r13	      4495	elf.c	FUNCTION_62
0x40003fa	            0x415e	                                 pop r14	      4495	elf.c	FUNCTION_62
0x40003fc	            0x415f	                                 pop r15	      4495	elf.c	FUNCTION_62
0x40003fe	              0xc3	                                     ret	      4495	elf.c	FUNCTION_62
bfd_elf_hash	FOR,0:ELSE,0:IF,1:WHILE,1:DO,0:SWITCH,0:CALL,0:functions,0	17
0x4001cf7	      0xb800000000	                              mov eax, 0	       201	elf.c	FUNCTION_11
0x4001cfc	            0xeb1f	                           jmp 0x4001d1d	       205	elf.c	FUNCTION_11	WHILE_1
0x4001cfe	        0x48c1e004	                              shl rax, 4	       207	elf.c	FUNCTION_11	WHILE_1
0x4001d02	           0xfb6d2	                           movzx edx, dl	       207	elf.c	FUNCTION_11	WHILE_1
0x4001d05	          0x4801d0	                            add rax, rdx	       207	elf.c	FUNCTION_11	WHILE_1
0x4001d08	          0x4889c2	                            mov rdx, rax	       208	elf.c	FUNCTION_11	WHILE_1	IF_1
0x4001d0b	    0x81e2000000f0	                     and edx, 0xf0000000	       208	elf.c	FUNCTION_11	WHILE_1	IF_1
0x4001d11	            0x740a	                            je 0x4001d1d	       208	elf.c	FUNCTION_11	WHILE_1	IF_1
0x4001d13	          0x4831d0	                            xor rax, rdx	       208	elf.c	FUNCTION_11	WHILE_1	IF_1
0x4001d16	        0x48c1ea18	                           shr rdx, 0x18	       213	elf.c	FUNCTION_11	WHILE_1	IF_1
0x4001d1a	          0x4831d0	                            xor rax, rdx	       213	elf.c	FUNCTION_11	WHILE_1	IF_1
0x4001d1d	        0x4883c701	                              add rdi, 1	       205	elf.c	FUNCTION_11	WHILE_1
0x4001d21	         0xfb657ff	               movzx edx, byte [rdi - 1]	       205	elf.c	FUNCTION_11	WHILE_1
0x4001d25	            0x84d2	                             test dl, dl	       205	elf.c	FUNCTION_11	WHILE_1
0x4001d27	            0x75d5	                           jne 0x4001cfe	       205	elf.c	FUNCTION_11	WHILE_1
0x4001d29	            0x89c0	                            mov eax, eax	       216	elf.c	FUNCTION_11
0x4001d2b	              0xc3	                                     ret	       217	elf.c	FUNCTION_11
_bfd_elf_swap_versym_in	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,0:functions,0	8
0x4001cc5	              0x53	                                push rbx	       180	elf.c	FUNCTION_9
0x4001cc6	          0x4889d3	                            mov rbx, rdx	       180	elf.c	FUNCTION_9
0x4001cc9	        0x488b4708	                mov rax, qword [rdi + 8]	       181	elf.c	FUNCTION_9
0x4001ccd	          0x4889f7	                            mov rdi, rsi	       181	elf.c	FUNCTION_9
0x4001cd0	    0xff9098000000	                 call qword [rax + 0x98]	       181	elf.c	FUNCTION_9
0x4001cd6	          0x668903	                      mov word [rbx], ax	       181	elf.c	FUNCTION_9
0x4001cd9	              0x5b	                                 pop rbx	       182	elf.c	FUNCTION_9
0x4001cda	              0xc3	                                     ret	       182	elf.c	FUNCTION_9
_bfd_elf_assign_file_position_for_section	FOR,0:ELSE,0:IF,3:WHILE,0:DO,0:SWITCH,0:CALL,0:functions,0	23
0x40056b1	          0x4889f0	                            mov rax, rsi	      4199	elf.c	FUNCTION_58
0x40056b4	            0x85d2	                           test edx, edx	      4200	elf.c	FUNCTION_58	IF_1
0x40056b6	            0x7426	                            je 0x40056de	      4200	elf.c	FUNCTION_58	IF_1
0x40056b8	        0x488b7730	            mov rsi, qword [rdi + 0x30] 	      4200	elf.c	FUNCTION_58	IF_1
0x40056bc	        0x4883fe01	                              cmp rsi, 1	      4200	elf.c	FUNCTION_58	IF_1
0x40056c0	            0x761c	                           jbe 0x40056de	      4200	elf.c	FUNCTION_58	IF_1
0x40056c2	      0x488d5406ff	                lea rdx, [rsi + rax - 1]	      4201	elf.c	FUNCTION_58	IF_1
0x40056c7	          0x4839d0	                            cmp rax, rdx	      4201	elf.c	FUNCTION_58	IF_1
0x40056ca	            0x770b	                            ja 0x40056d7	      4201	elf.c	FUNCTION_58	IF_1
0x40056cc	          0x4889f0	                            mov rax, rsi	      4201	elf.c	FUNCTION_58	IF_1
0x40056cf	          0x48f7d8	                                 neg rax	      4201	elf.c	FUNCTION_58	IF_1
0x40056d2	          0x4821d0	                            and rax, rdx	      4201	elf.c	FUNCTION_58	IF_1
0x40056d5	            0xeb07	                           jmp 0x40056de	      4201	elf.c	FUNCTION_58	IF_1
0x40056d7	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      4201	elf.c	FUNCTION_58	IF_1
0x40056de	        0x48894718	             mov qword [rdi + 0x18], rax	      4202	elf.c	FUNCTION_58
0x40056e2	        0x488b5740	            mov rdx, qword [rdi + 0x40] 	      4203	elf.c	FUNCTION_58	IF_2
0x40056e6	          0x4885d2	                           test rdx, rdx	      4203	elf.c	FUNCTION_58	IF_2
0x40056e9	            0x7407	                            je 0x40056f2	      4203	elf.c	FUNCTION_58	IF_2
0x40056eb	    0x488982900000	             mov qword [rdx + 0x90], rax	      4204	elf.c	FUNCTION_58	IF_2
0x40056f2	        0x837f0408	                  cmp dword [rdi + 4], 8	      4205	elf.c	FUNCTION_58	IF_3
0x40056f6	            0x7404	                            je 0x40056fc	      4205	elf.c	FUNCTION_58	IF_3
0x40056f8	        0x48034720	             add rax, qword [rdi + 0x20]	      4206	elf.c	FUNCTION_58	IF_3
0x40056fc	            0xf3c3	                                     ret	      4208	elf.c	FUNCTION_58
_bfd_elf_canonicalize_symtab	FOR,0:ELSE,0:IF,1:WHILE,0:DO,0:SWITCH,0:CALL,2:functions,0	12
0x400ba82	              0x53	                                push rbx	      8180	elf.c	FUNCTION_93
0x400ba83	          0x4889fb	                            mov rbx, rdi	      8180	elf.c	FUNCTION_93
0x400ba86	        0x488b4708	                mov rax, qword [rdi + 8]	      8181	elf.c	FUNCTION_93	CALL_1
0x400ba8a	    0x488b80680300	           mov rax, qword [rax + 0x368] 	      8182	elf.c	FUNCTION_93	CALL_2
0x400ba91	    0x488b80000300	           mov rax, qword [rax + 0x300] 	      8182	elf.c	FUNCTION_93	CALL_2
0x400ba98	      0xba00000000	                              mov edx, 0	      8182	elf.c	FUNCTION_93	CALL_2
0x400ba9d	          0xff5048	                 call qword [rax + 0x48]	      8182	elf.c	FUNCTION_93	CALL_2
0x400baa0	          0x4885c0	                           test rax, rax	      8184	elf.c	FUNCTION_93	IF_1
0x400baa3	            0x7806	                            js 0x400baab	      8184	elf.c	FUNCTION_93	IF_1
0x400baa5	    0x8983b8000000	             mov dword [rbx + 0xb8], eax	      8185	elf.c	FUNCTION_93	IF_1
0x400baab	              0x5b	                                 pop rbx	      8187	elf.c	FUNCTION_93
0x400baac	              0xc3	                                     ret	      8187	elf.c	FUNCTION_93
elfcore_write_prpsinfo	FOR,0:ELSE,1:IF,3:WHILE,0:DO,0:SWITCH,0:CALL,10:functions,0	90
0x400f11f	            0x4157	                                push r15	     10535	elf.c	FUNCTION_162
0x400f121	            0x4156	                                push r14	     10535	elf.c	FUNCTION_162
0x400f123	            0x4155	                                push r13	     10535	elf.c	FUNCTION_162
0x400f125	            0x4154	                                push r12	     10535	elf.c	FUNCTION_162
0x400f127	              0x55	                                push rbp	     10535	elf.c	FUNCTION_162
0x400f128	              0x53	                                push rbx	     10535	elf.c	FUNCTION_162
0x400f129	    0x4881ec980000	                           sub rsp, 0x98	     10535	elf.c	FUNCTION_162
0x400f130	          0x4889fb	                            mov rbx, rdi	     10535	elf.c	FUNCTION_162
0x400f133	          0x4989f4	                            mov r12, rsi	     10535	elf.c	FUNCTION_162
0x400f136	          0x4989d5	                            mov r13, rdx	     10535	elf.c	FUNCTION_162
0x400f139	          0x4989cf	                            mov r15, rcx	     10535	elf.c	FUNCTION_162
0x400f13c	          0x4d89c6	                             mov r14, r8	     10535	elf.c	FUNCTION_162
0x400f13f	    0x64488b042528	                mov rax, qword fs:[0x28]	     10535	elf.c	FUNCTION_162
0x400f148	    0x488984248800	             mov qword [rsp + 0x88], rax	     10535	elf.c	FUNCTION_162
0x400f150	            0x31c0	                            xor eax, eax	     10535	elf.c	FUNCTION_162
0x400f152	        0x488b4708	                mov rax, qword [rdi + 8]	     10536	elf.c	FUNCTION_162	CALL_1
0x400f156	    0x488ba8680300	           mov rbp, qword [rax + 0x368] 	     10536	elf.c	FUNCTION_162	CALL_1
0x400f15d	    0x4c8b95200200	           mov r10, qword [rbp + 0x220] 	     10538	elf.c	FUNCTION_162	IF_1
0x400f164	          0x4d85d2	                           test r10, r10	     10538	elf.c	FUNCTION_162	IF_1
0x400f167	            0x741c	                            je 0x400f185	     10538	elf.c	FUNCTION_162	IF_1
0x400f169	          0x4d89c1	                              mov r9, r8	     10541	elf.c	FUNCTION_162	IF_1
0x400f16c	          0x4989c8	                             mov r8, rcx	     10541	elf.c	FUNCTION_162	IF_1
0x400f16f	      0xb903000000	                              mov ecx, 3	     10541	elf.c	FUNCTION_162	IF_1
0x400f174	      0xb800000000	                              mov eax, 0	     10541	elf.c	FUNCTION_162	IF_1
0x400f179	          0x41ffd2	                                call r10	     10541	elf.c	FUNCTION_162	IF_1
0x400f17c	          0x4885c0	                           test rax, rax	     10543	elf.c	FUNCTION_162	IF_1	IF_2
0x400f17f	     0xf85d2000000	                           jne 0x400f257	     10543	elf.c	FUNCTION_162	IF_1	IF_2
0x400f185	    0x488b85000300	           mov rax, qword [rbp + 0x300] 	     10549	elf.c	FUNCTION_162	IF_3
0x400f18c	        0x80780c01	                 cmp byte [rax + 0xc], 1	     10549	elf.c	FUNCTION_162	IF_3
0x400f190	            0x7565	                           jne 0x400f1f7	     10549	elf.c	FUNCTION_162	IF_3
0x400f192	          0x4889e5	                            mov rbp, rsp	        90	string3.h	FUNCTION_224	CALL_6
0x400f195	      0xb90f000000	                            mov ecx, 0xf	        90	string3.h	FUNCTION_224	CALL_6
0x400f19a	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_224	CALL_6
0x400f19f	          0x4889e7	                            mov rdi, rsp	        90	string3.h	FUNCTION_224	CALL_6
0x400f1a2	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_224	CALL_6
0x400f1a5	    0xc70700000000	                      mov dword [rdi], 0	        90	string3.h	FUNCTION_224	CALL_6
0x400f1ab	      0x488d7c241c	                   lea rdi, [rsp + 0x1c]	       126	string3.h	FUNCTION_229	CALL_3
0x400f1b0	      0xba10000000	                           mov edx, 0x10	       126	string3.h	FUNCTION_229	CALL_3
0x400f1b5	          0x4c89fe	                            mov rsi, r15	       126	string3.h	FUNCTION_229	CALL_3
0x400f1b8	      0xe800000000	                          call 0x400f1bd	       126	string3.h	FUNCTION_229	CALL_3
0x400f1bd	      0x488d7c242c	                   lea rdi, [rsp + 0x2c]	       126	string3.h	FUNCTION_229	CALL_3
0x400f1c2	      0xba50000000	                           mov edx, 0x50	       126	string3.h	FUNCTION_229	CALL_3
0x400f1c7	          0x4c89f6	                            mov rsi, r14	       126	string3.h	FUNCTION_229	CALL_3
0x400f1ca	      0xe800000000	                          call 0x400f1cf	       126	string3.h	FUNCTION_229	CALL_3
0x400f1cf	        0x4883ec08	                              sub rsp, 8	     10562	elf.c	FUNCTION_162	IF_3	CALL_5
0x400f1d3	            0x6a7c	                               push 0x7c	     10562	elf.c	FUNCTION_162	IF_3	CALL_5
0x400f1d5	          0x4989e9	                             mov r9, rbp	     10562	elf.c	FUNCTION_162	IF_3	CALL_5
0x400f1d8	    0x41b803000000	                              mov r8d, 3	     10562	elf.c	FUNCTION_162	IF_3	CALL_5
0x400f1de	      0xb900000000	                              mov ecx, 0	     10562	elf.c	FUNCTION_162	IF_3	CALL_5
0x400f1e3	          0x4c89ea	                            mov rdx, r13	     10562	elf.c	FUNCTION_162	IF_3	CALL_5
0x400f1e6	          0x4c89e6	                            mov rsi, r12	     10562	elf.c	FUNCTION_162	IF_3	CALL_5
0x400f1e9	          0x4889df	                            mov rdi, rbx	     10562	elf.c	FUNCTION_162	IF_3	CALL_5
0x400f1ec	      0xe800000000	                          call 0x400f1f1	     10562	elf.c	FUNCTION_162	IF_3	CALL_5
0x400f1f1	        0x4883c410	                           add rsp, 0x10	     10562	elf.c	FUNCTION_162	IF_3	CALL_5
0x400f1f5	            0xeb60	                           jmp 0x400f257	     10562	elf.c	FUNCTION_162	IF_3	CALL_5
0x400f1f7	          0x4889e5	                            mov rbp, rsp	        90	string3.h	FUNCTION_224	CALL_6
0x400f1fa	      0xb911000000	                           mov ecx, 0x11	        90	string3.h	FUNCTION_224	CALL_6
0x400f1ff	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_224	CALL_6
0x400f204	          0x4889e7	                            mov rdi, rsp	        90	string3.h	FUNCTION_224	CALL_6
0x400f207	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_224	CALL_6
0x400f20a	      0x488d7c2428	                   lea rdi, [rsp + 0x28]	       126	string3.h	FUNCTION_229	CALL_3
0x400f20f	      0xba10000000	                           mov edx, 0x10	       126	string3.h	FUNCTION_229	CALL_3
0x400f214	          0x4c89fe	                            mov rsi, r15	       126	string3.h	FUNCTION_229	CALL_3
0x400f217	      0xe800000000	                          call 0x400f21c	       126	string3.h	FUNCTION_229	CALL_3
0x400f21c	      0x488d7c2438	                   lea rdi, [rsp + 0x38]	       126	string3.h	FUNCTION_229	CALL_3
0x400f221	      0xba50000000	                           mov edx, 0x50	       126	string3.h	FUNCTION_229	CALL_3
0x400f226	          0x4c89f6	                            mov rsi, r14	       126	string3.h	FUNCTION_229	CALL_3
0x400f229	      0xe800000000	                          call 0x400f22e	       126	string3.h	FUNCTION_229	CALL_3
0x400f22e	        0x4883ec08	                              sub rsp, 8	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x400f232	      0x6888000000	                               push 0x88	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x400f237	          0x4989e9	                             mov r9, rbp	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x400f23a	    0x41b803000000	                              mov r8d, 3	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x400f240	      0xb900000000	                              mov ecx, 0	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x400f245	          0x4c89ea	                            mov rdx, r13	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x400f248	          0x4c89e6	                            mov rsi, r12	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x400f24b	          0x4889df	                            mov rdi, rbx	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x400f24e	      0xe800000000	                          call 0x400f253	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x400f253	        0x4883c410	                           add rsp, 0x10	     10579	elf.c	FUNCTION_162	ELSE_1	CALL_9
0x400f257	    0x488b8c248800	            mov rcx, qword [rsp + 0x88] 	     10586	elf.c	FUNCTION_162
0x400f25f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     10586	elf.c	FUNCTION_162
0x400f268	            0x7405	                            je 0x400f26f	     10586	elf.c	FUNCTION_162
0x400f26a	      0xe800000000	                          call 0x400f26f	     10586	elf.c	FUNCTION_162
0x400f26f	    0x4881c4980000	                           add rsp, 0x98	     10586	elf.c	FUNCTION_162
0x400f276	              0x5b	                                 pop rbx	     10586	elf.c	FUNCTION_162
0x400f277	              0x5d	                                 pop rbp	     10586	elf.c	FUNCTION_162
0x400f278	            0x415c	                                 pop r12	     10586	elf.c	FUNCTION_162
0x400f27a	            0x415d	                                 pop r13	     10586	elf.c	FUNCTION_162
0x400f27c	            0x415e	                                 pop r14	     10586	elf.c	FUNCTION_162
0x400f27e	            0x415f	                                 pop r15	     10586	elf.c	FUNCTION_162
0x400f280	              0xc3	                                     ret	     10586	elf.c	FUNCTION_162
_bfd_elf_rel_vtable_reloc_fn	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,0:functions,0	2
0x400d7b0	      0xb802000000	                              mov eax, 2	      9013	elf.c	FUNCTION_111
0x400d7b5	              0xc3	                                     ret	      9013	elf.c	FUNCTION_111
_bfd_elf_get_special_section	FOR,1:ELSE,1:IF,8:WHILE,0:DO,0:SWITCH,0:CALL,3:functions,0	81
0x4004df3	            0x4157	                                push r15	      2751	elf.c	FUNCTION_39
0x4004df5	            0x4156	                                push r14	      2751	elf.c	FUNCTION_39
0x4004df7	            0x4155	                                push r13	      2751	elf.c	FUNCTION_39
0x4004df9	            0x4154	                                push r12	      2751	elf.c	FUNCTION_39
0x4004dfb	              0x55	                                push rbp	      2751	elf.c	FUNCTION_39
0x4004dfc	              0x53	                                push rbx	      2751	elf.c	FUNCTION_39
0x4004dfd	        0x4883ec28	                           sub rsp, 0x28	      2751	elf.c	FUNCTION_39
0x4004e01	          0x4989f8	                             mov r8, rdi	      2751	elf.c	FUNCTION_39
0x4004e04	      0xb800000000	                              mov eax, 0	      2755	elf.c	FUNCTION_39	CALL_1
0x4004e09	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      2755	elf.c	FUNCTION_39	CALL_1
0x4004e10	            0xf2ae	              repne scasb al, byte [rdi]	      2755	elf.c	FUNCTION_39	CALL_1
0x4004e12	          0x4c8b2e	                    mov r13, qword [rsi]	      2757	elf.c	FUNCTION_39	FOR_1
0x4004e15	          0x4d85ed	                           test r13, r13	      2757	elf.c	FUNCTION_39	FOR_1
0x4004e18	     0xf84bc000000	                            je 0x4004eda	      2757	elf.c	FUNCTION_39	FOR_1
0x4004e1e	          0x48f7d1	                                 not rcx	      2757	elf.c	FUNCTION_39	FOR_1
0x4004e21	        0x448d79ff	                     lea r15d, [rcx - 1]	      2757	elf.c	FUNCTION_39	FOR_1
0x4004e25	        0x8954241c	             mov dword [rsp + 0x1c], edx	      2757	elf.c	FUNCTION_39	FOR_1
0x4004e29	        0x48893424	                    mov qword [rsp], rsi	      2757	elf.c	FUNCTION_39	FOR_1
0x4004e2d	      0x4c89442408	                 mov qword [rsp + 8], r8	      2757	elf.c	FUNCTION_39	FOR_1
0x4004e32	          0x4889f3	                            mov rbx, rsi	      2757	elf.c	FUNCTION_39	FOR_1
0x4004e35	    0x41bc00000000	                             mov r12d, 0	      2757	elf.c	FUNCTION_39	FOR_1
0x4004e3b	          0x4963c7	                        movsxd rax, r15d	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4004e3e	      0x4889442410	             mov qword [rsp + 0x10], rax	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4004e43	          0x8b6b08	                mov ebp, dword [rbx + 8]	      2760	elf.c	FUNCTION_39	FOR_1
0x4004e46	          0x4139ef	                           cmp r15d, ebp	      2762	elf.c	FUNCTION_39	FOR_1	IF_1
0x4004e49	            0x7c6d	                            jl 0x4004eb8	      2762	elf.c	FUNCTION_39	FOR_1	IF_1
0x4004e4b	          0x4c63f5	                         movsxd r14, ebp	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x4004e4e	          0x4c89f2	                            mov rdx, r14	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x4004e51	          0x4c89ee	                            mov rsi, r13	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x4004e54	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x4004e59	      0xe800000000	                          call 0x4004e5e	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x4004e5e	            0x85c0	                           test eax, eax	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x4004e60	            0x7556	                           jne 0x4004eb8	      2764	elf.c	FUNCTION_39	FOR_1	IF_2	CALL_2
0x4004e62	          0x8b530c	              mov edx, dword [rbx + 0xc]	      2767	elf.c	FUNCTION_39	FOR_1
0x4004e65	            0x85d2	                           test edx, edx	      2768	elf.c	FUNCTION_39	FOR_1	IF_3
0x4004e67	            0x7f2a	                            jg 0x4004e93	      2768	elf.c	FUNCTION_39	FOR_1	IF_3
0x4004e69	      0x488b442408	                mov rax, qword [rsp + 8]	      2770	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4
0x4004e6e	      0x420fb60430	             movzx eax, byte [rax + r14]	      2770	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4
0x4004e73	            0x84c0	                             test al, al	      2770	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4
0x4004e75	            0x7468	                            je 0x4004edf	      2770	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4
0x4004e77	            0x85d2	                           test edx, edx	      2772	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_5
0x4004e79	            0x743d	                            je 0x4004eb8	      2772	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_5
0x4004e7b	            0x3c2e	                            cmp al, 0x2e	      2774	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x4004e7d	            0x7460	                            je 0x4004edf	      2774	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x4004e7f	          0x83fafe	             cmp edx, 0xfffffffffffffffe	      2775	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x4004e82	            0x7434	                            je 0x4004eb8	      2775	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x4004e84	      0x837c241c00	               cmp dword [rsp + 0x1c], 0	      2776	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x4004e89	            0x7454	                            je 0x4004edf	      2776	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x4004e8b	        0x837b1009	               cmp dword [rbx + 0x10], 9	      2776	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x4004e8f	            0x754e	                           jne 0x4004edf	      2776	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x4004e91	            0xeb25	                           jmp 0x4004eb8	      2776	elf.c	FUNCTION_39	FOR_1	IF_3	IF_4	IF_6
0x4004e93	             0x1d5	                            add ebp, edx	      2782	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_7
0x4004e95	          0x4139ef	                           cmp r15d, ebp	      2782	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_7
0x4004e98	            0x7c1e	                            jl 0x4004eb8	      2782	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_7
0x4004e9a	          0x4863d2	                         movsxd rdx, edx	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4004e9d	      0x4b8d743500	                    lea rsi, [r13 + r14]	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4004ea2	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4004ea7	          0x4829d7	                            sub rdi, rdx	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4004eaa	      0x48037c2408	                add rdi, qword [rsp + 8]	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4004eaf	      0xe800000000	                          call 0x4004eb4	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4004eb4	            0x85c0	                           test eax, eax	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4004eb6	            0x7427	                            je 0x4004edf	      2784	elf.c	FUNCTION_39	FOR_1	ELSE_1	IF_8	CALL_3
0x4004eb8	        0x4183c401	                             add r12d, 1	      2757	elf.c	FUNCTION_39	FOR_1
0x4004ebc	          0x4963dc	                        movsxd rbx, r12d	      2757	elf.c	FUNCTION_39	FOR_1
0x4004ebf	        0x48c1e305	                              shl rbx, 5	      2757	elf.c	FUNCTION_39	FOR_1
0x4004ec3	        0x48031c24	                    add rbx, qword [rsp]	      2757	elf.c	FUNCTION_39	FOR_1
0x4004ec7	          0x4c8b2b	                    mov r13, qword [rbx]	      2757	elf.c	FUNCTION_39	FOR_1
0x4004eca	          0x4d85ed	                           test r13, r13	      2757	elf.c	FUNCTION_39	FOR_1
0x4004ecd	     0xf8570ffffff	                           jne 0x4004e43	      2757	elf.c	FUNCTION_39	FOR_1
0x4004ed3	      0xbb00000000	                              mov ebx, 0	      2792	elf.c	FUNCTION_39
0x4004ed8	            0xeb05	                           jmp 0x4004edf	      2792	elf.c	FUNCTION_39
0x4004eda	      0xbb00000000	                              mov ebx, 0	      2792	elf.c	FUNCTION_39
0x4004edf	          0x4889d8	                            mov rax, rbx	      2793	elf.c	FUNCTION_39
0x4004ee2	        0x4883c428	                           add rsp, 0x28	      2793	elf.c	FUNCTION_39
0x4004ee6	              0x5b	                                 pop rbx	      2793	elf.c	FUNCTION_39
0x4004ee7	              0x5d	                                 pop rbp	      2793	elf.c	FUNCTION_39
0x4004ee8	            0x415c	                                 pop r12	      2793	elf.c	FUNCTION_39
0x4004eea	            0x415d	                                 pop r13	      2793	elf.c	FUNCTION_39
0x4004eec	            0x415e	                                 pop r14	      2793	elf.c	FUNCTION_39
0x4004eee	            0x415f	                                 pop r15	      2793	elf.c	FUNCTION_39
0x4004ef0	              0xc3	                                     ret	      2793	elf.c	FUNCTION_39
elfcore_write_s390_tdb	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,1:functions,0	8
0x400f9f1	        0x4883ec10	                           sub rsp, 0x10	     10922	elf.c	FUNCTION_181
0x400f9f5	          0x4989c9	                             mov r9, rcx	     10922	elf.c	FUNCTION_181
0x400f9f8	            0x4150	                                 push r8	     10924	elf.c	FUNCTION_181	CALL_1
0x400f9fa	    0x41b808030000	                          mov r8d, 0x308	     10924	elf.c	FUNCTION_181	CALL_1
0x400fa00	      0xb900000000	                              mov ecx, 0	     10924	elf.c	FUNCTION_181	CALL_1
0x400fa05	      0xe800000000	                          call 0x400fa0a	     10924	elf.c	FUNCTION_181	CALL_1
0x400fa0a	        0x4883c418	                           add rsp, 0x18	     10926	elf.c	FUNCTION_181
0x400fa0e	              0xc3	                                     ret	     10926	elf.c	FUNCTION_181
elfcore_grok_openbsd_note	FOR,0:ELSE,0:IF,8:WHILE,0:DO,0:SWITCH,0:CALL,8:functions,0	103
0x400dbf7	            0x4154	                                push r12	     10260	elf.c	FUNCTION_156
0x400dbf9	              0x55	                                push rbp	     10260	elf.c	FUNCTION_156
0x400dbfa	              0x53	                                push rbx	     10260	elf.c	FUNCTION_156
0x400dbfb	          0x4889fd	                            mov rbp, rdi	     10260	elf.c	FUNCTION_156
0x400dbfe	          0x4889f3	                            mov rbx, rsi	     10260	elf.c	FUNCTION_156
0x400dc01	        0x488b5610	            mov rdx, qword [rsi + 0x10] 	     10261	elf.c	FUNCTION_156	IF_1
0x400dc05	        0x4883fa0a	                            cmp rdx, 0xa	     10261	elf.c	FUNCTION_156	IF_1
0x400dc09	     0xf858b000000	                           jne 0x400dc9a	     10261	elf.c	FUNCTION_156	IF_1
0x400dc0f	      0xb800000000	                              mov eax, 0	     10241	elf.c	FUNCTION_155	IF_1
0x400dc14	      0x48837e0867	               cmp qword [rsi + 8], 0x67	     10240	elf.c	FUNCTION_155	IF_1
0x400dc19	     0xf867c010000	                           jbe 0x400dd9b	     10240	elf.c	FUNCTION_155	IF_1
0x400dc1f	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	     10244	elf.c	FUNCTION_155	CALL_1
0x400dc26	    0x4c8ba0900c00	           mov r12, qword [rax + 0xc90] 	     10244	elf.c	FUNCTION_155	CALL_1
0x400dc2d	        0x488b4620	            mov rax, qword [rsi + 0x20] 	     10245	elf.c	FUNCTION_155
0x400dc31	        0x488d7808	                      lea rdi, [rax + 8]	     10245	elf.c	FUNCTION_155
0x400dc35	        0x488b4508	                mov rax, qword [rbp + 8]	     10245	elf.c	FUNCTION_155
0x400dc39	    0xff9080000000	                 call qword [rax + 0x80]	     10245	elf.c	FUNCTION_155
0x400dc3f	        0x41890424	                    mov dword [r12], eax	     10245	elf.c	FUNCTION_155
0x400dc43	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	     10248	elf.c	FUNCTION_155	CALL_2
0x400dc4a	    0x4c8ba0900c00	           mov r12, qword [rax + 0xc90] 	     10248	elf.c	FUNCTION_155	CALL_2
0x400dc51	        0x488b4320	            mov rax, qword [rbx + 0x20] 	     10249	elf.c	FUNCTION_155
0x400dc55	        0x488d7820	                   lea rdi, [rax + 0x20]	     10249	elf.c	FUNCTION_155
0x400dc59	        0x488b4508	                mov rax, qword [rbp + 8]	     10249	elf.c	FUNCTION_155
0x400dc5d	    0xff9080000000	                 call qword [rax + 0x80]	     10249	elf.c	FUNCTION_155
0x400dc63	      0x4189442404	                mov dword [r12 + 4], eax	     10249	elf.c	FUNCTION_155
0x400dc68	    0x488b85f80000	            mov rax, qword [rbp + 0xf8] 	     10252	elf.c	FUNCTION_155	CALL_3
0x400dc6f	    0x4c8ba0900c00	           mov r12, qword [rax + 0xc90] 	     10252	elf.c	FUNCTION_155	CALL_3
0x400dc76	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	     10253	elf.c	FUNCTION_155	CALL_4
0x400dc7a	        0x4883c648	                           add rsi, 0x48	     10253	elf.c	FUNCTION_155	CALL_4
0x400dc7e	      0xba1f000000	                           mov edx, 0x1f	     10253	elf.c	FUNCTION_155	CALL_4
0x400dc83	          0x4889ef	                            mov rdi, rbp	     10253	elf.c	FUNCTION_155	CALL_4
0x400dc86	      0xe800000000	                          call 0x400dc8b	     10253	elf.c	FUNCTION_155	CALL_4
0x400dc8b	      0x4989442418	             mov qword [r12 + 0x18], rax	     10253	elf.c	FUNCTION_155	CALL_4
0x400dc90	      0xb801000000	                              mov eax, 1	     10255	elf.c	FUNCTION_155
0x400dc95	      0xe901010000	                           jmp 0x400dd9b	     10255	elf.c	FUNCTION_155
0x400dc9a	        0x4883fa14	                           cmp rdx, 0x14	     10264	elf.c	FUNCTION_156	IF_2
0x400dc9e	            0x7512	                           jne 0x400dcb2	     10264	elf.c	FUNCTION_156	IF_2
0x400dca0	          0x4889f2	                            mov rdx, rsi	     10265	elf.c	FUNCTION_156	CALL_2
0x400dca3	      0xbe00000000	                              mov esi, 0	     10265	elf.c	FUNCTION_156	CALL_2
0x400dca8	      0xe808fcffff	call sym.elfcore_make_note_pseudosection	     10265	elf.c	FUNCTION_156	CALL_2
0x400dcad	      0xe9e9000000	                           jmp 0x400dd9b	     10265	elf.c	FUNCTION_156	CALL_2
0x400dcb2	        0x4883fa15	                           cmp rdx, 0x15	     10267	elf.c	FUNCTION_156	IF_3
0x400dcb6	            0x7512	                           jne 0x400dcca	     10267	elf.c	FUNCTION_156	IF_3
0x400dcb8	          0x4889f2	                            mov rdx, rsi	     10268	elf.c	FUNCTION_156	CALL_3
0x400dcbb	      0xbe00000000	                              mov esi, 0	     10268	elf.c	FUNCTION_156	CALL_3
0x400dcc0	      0xe8f0fbffff	call sym.elfcore_make_note_pseudosection	     10268	elf.c	FUNCTION_156	CALL_3
0x400dcc5	      0xe9d1000000	                           jmp 0x400dd9b	     10268	elf.c	FUNCTION_156	CALL_3
0x400dcca	        0x4883fa16	                           cmp rdx, 0x16	     10270	elf.c	FUNCTION_156	IF_4
0x400dcce	            0x7512	                           jne 0x400dce2	     10270	elf.c	FUNCTION_156	IF_4
0x400dcd0	          0x4889f2	                            mov rdx, rsi	     10271	elf.c	FUNCTION_156	CALL_4
0x400dcd3	      0xbe00000000	                              mov esi, 0	     10271	elf.c	FUNCTION_156	CALL_4
0x400dcd8	      0xe8d8fbffff	call sym.elfcore_make_note_pseudosection	     10271	elf.c	FUNCTION_156	CALL_4
0x400dcdd	      0xe9b9000000	                           jmp 0x400dd9b	     10271	elf.c	FUNCTION_156	CALL_4
0x400dce2	        0x4883fa0b	                            cmp rdx, 0xb	     10273	elf.c	FUNCTION_156	IF_5
0x400dce6	            0x7557	                           jne 0x400dd3f	     10273	elf.c	FUNCTION_156	IF_5
0x400dce8	      0xba00010000	                          mov edx, 0x100	     10275	elf.c	FUNCTION_156	IF_5	CALL_5
0x400dced	      0xbe00000000	                              mov esi, 0	     10275	elf.c	FUNCTION_156	IF_5	CALL_5
0x400dcf2	      0xe800000000	                          call 0x400dcf7	     10275	elf.c	FUNCTION_156	IF_5	CALL_5
0x400dcf7	          0x4989c4	                            mov r12, rax	     10275	elf.c	FUNCTION_156	IF_5	CALL_5
0x400dcfa	      0xb800000000	                              mov eax, 0	     10279	elf.c	FUNCTION_156	IF_5	IF_6
0x400dcff	          0x4d85e4	                           test r12, r12	     10278	elf.c	FUNCTION_156	IF_5	IF_6
0x400dd02	     0xf8493000000	                            je 0x400dd9b	     10278	elf.c	FUNCTION_156	IF_5	IF_6
0x400dd08	        0x488b4308	                mov rax, qword [rbx + 8]	     10280	elf.c	FUNCTION_156	IF_5
0x400dd0c	      0x4989442438	             mov qword [r12 + 0x38], rax	     10280	elf.c	FUNCTION_156	IF_5
0x400dd11	        0x488b4328	            mov rax, qword [rbx + 0x28] 	     10281	elf.c	FUNCTION_156	IF_5
0x400dd15	    0x498984249000	             mov qword [r12 + 0x90], rax	     10281	elf.c	FUNCTION_156	IF_5
0x400dd1d	          0x4889ef	                            mov rdi, rbp	     10282	elf.c	FUNCTION_156	IF_5	CALL_6
0x400dd20	      0xe800000000	                          call 0x400dd25	     10282	elf.c	FUNCTION_156	IF_5	CALL_6
0x400dd25	          0x8d501f	                   lea edx, [rax + 0x1f]	     10282	elf.c	FUNCTION_156	IF_5	CALL_6
0x400dd28	            0x85c0	                           test eax, eax	     10282	elf.c	FUNCTION_156	IF_5	CALL_6
0x400dd2a	           0xf48c2	                          cmovs eax, edx	     10282	elf.c	FUNCTION_156	IF_5	CALL_6
0x400dd2d	          0xc1f805	                              sar eax, 5	     10282	elf.c	FUNCTION_156	IF_5	CALL_6
0x400dd30	          0x83c001	                              add eax, 1	     10282	elf.c	FUNCTION_156	IF_5	CALL_6
0x400dd33	      0x4189442470	             mov dword [r12 + 0x70], eax	     10282	elf.c	FUNCTION_156	IF_5	CALL_6
0x400dd38	      0xb801000000	                              mov eax, 1	     10284	elf.c	FUNCTION_156	IF_5
0x400dd3d	            0xeb5c	                           jmp 0x400dd9b	     10284	elf.c	FUNCTION_156	IF_5
0x400dd3f	      0xb801000000	                              mov eax, 1	     10301	elf.c	FUNCTION_156
0x400dd44	        0x4883fa17	                           cmp rdx, 0x17	     10287	elf.c	FUNCTION_156	IF_7
0x400dd48	            0x7551	                           jne 0x400dd9b	     10287	elf.c	FUNCTION_156	IF_7
0x400dd4a	      0xba00010000	                          mov edx, 0x100	     10289	elf.c	FUNCTION_156	IF_7	CALL_7
0x400dd4f	      0xbe00000000	                              mov esi, 0	     10289	elf.c	FUNCTION_156	IF_7	CALL_7
0x400dd54	      0xe800000000	                          call 0x400dd59	     10289	elf.c	FUNCTION_156	IF_7	CALL_7
0x400dd59	          0x4989c4	                            mov r12, rax	     10289	elf.c	FUNCTION_156	IF_7	CALL_7
0x400dd5c	      0xb800000000	                              mov eax, 0	     10293	elf.c	FUNCTION_156	IF_7	IF_8
0x400dd61	          0x4d85e4	                           test r12, r12	     10292	elf.c	FUNCTION_156	IF_7	IF_8
0x400dd64	            0x7435	                            je 0x400dd9b	     10292	elf.c	FUNCTION_156	IF_7	IF_8
0x400dd66	        0x488b4308	                mov rax, qword [rbx + 8]	     10294	elf.c	FUNCTION_156	IF_7
0x400dd6a	      0x4989442438	             mov qword [r12 + 0x38], rax	     10294	elf.c	FUNCTION_156	IF_7
0x400dd6f	        0x488b4328	            mov rax, qword [rbx + 0x28] 	     10295	elf.c	FUNCTION_156	IF_7
0x400dd73	    0x498984249000	             mov qword [r12 + 0x90], rax	     10295	elf.c	FUNCTION_156	IF_7
0x400dd7b	          0x4889ef	                            mov rdi, rbp	     10296	elf.c	FUNCTION_156	IF_7	CALL_8
0x400dd7e	      0xe800000000	                          call 0x400dd83	     10296	elf.c	FUNCTION_156	IF_7	CALL_8
0x400dd83	          0x8d501f	                   lea edx, [rax + 0x1f]	     10296	elf.c	FUNCTION_156	IF_7	CALL_8
0x400dd86	            0x85c0	                           test eax, eax	     10296	elf.c	FUNCTION_156	IF_7	CALL_8
0x400dd88	           0xf48c2	                          cmovs eax, edx	     10296	elf.c	FUNCTION_156	IF_7	CALL_8
0x400dd8b	          0xc1f805	                              sar eax, 5	     10296	elf.c	FUNCTION_156	IF_7	CALL_8
0x400dd8e	          0x83c001	                              add eax, 1	     10296	elf.c	FUNCTION_156	IF_7	CALL_8
0x400dd91	      0x4189442470	             mov dword [r12 + 0x70], eax	     10296	elf.c	FUNCTION_156	IF_7	CALL_8
0x400dd96	      0xb801000000	                              mov eax, 1	     10298	elf.c	FUNCTION_156	IF_7
0x400dd9b	              0x5b	                                 pop rbx	     10302	elf.c	FUNCTION_156
0x400dd9c	              0x5d	                                 pop rbp	     10302	elf.c	FUNCTION_156
0x400dd9d	            0x415c	                                 pop r12	     10302	elf.c	FUNCTION_156
0x400dd9f	              0xc3	                                     ret	     10302	elf.c	FUNCTION_156
_bfd_elf_get_dynamic_reloc_upper_bound	FOR,1:ELSE,0:IF,2:WHILE,0:DO,0:SWITCH,0:CALL,7:functions,0	34
0x400bad8	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	      8212	elf.c	FUNCTION_95	IF_1	CALL_1
0x400badf	    0x8bb07c0c0000	           mov esi, dword [rax + 0xc7c] 	      8212	elf.c	FUNCTION_95	IF_1	CALL_1
0x400bae5	            0x85f6	                           test esi, esi	      8212	elf.c	FUNCTION_95	IF_1	CALL_1
0x400bae7	            0x7517	                           jne 0x400bb00	      8212	elf.c	FUNCTION_95	IF_1	CALL_1
0x400bae9	        0x4883ec08	                              sub rsp, 8	      8208	elf.c	FUNCTION_95
0x400baed	      0xbf05000000	                              mov edi, 5	      8214	elf.c	FUNCTION_95	IF_1	CALL_2
0x400baf2	      0xe800000000	                          call 0x400baf7	      8214	elf.c	FUNCTION_95	IF_1	CALL_2
0x400baf7	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      8215	elf.c	FUNCTION_95	IF_1
0x400bafe	            0xeb51	                           jmp 0x400bb51	      8215	elf.c	FUNCTION_95	IF_1
0x400bb00	    0x488b8f900000	            mov rcx, qword [rdi + 0x90] 	      8219	elf.c	FUNCTION_95	FOR_1
0x400bb07	          0x4885c9	                           test rcx, rcx	      8219	elf.c	FUNCTION_95	FOR_1
0x400bb0a	            0x743f	                            je 0x400bb4b	      8219	elf.c	FUNCTION_95	FOR_1
0x400bb0c	    0x41b808000000	                              mov r8d, 8	      8219	elf.c	FUNCTION_95	FOR_1
0x400bb12	    0x4c8b89e00000	              mov r9, qword [rcx + 0xe0]	      8220	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_4
0x400bb19	        0x413b7128	              cmp esi, dword [r9 + 0x28]	      8220	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_4
0x400bb1d	            0x751f	                           jne 0x400bb3e	      8220	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_4
0x400bb1f	        0x418b7904	                 mov edi, dword [r9 + 4]	      8221	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_5
0x400bb23	          0x83ff09	                              cmp edi, 9	      8221	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_5
0x400bb26	            0x7405	                            je 0x400bb2d	      8221	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_5
0x400bb28	          0x83ff04	                              cmp edi, 4	      8221	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_5
0x400bb2b	            0x7511	                           jne 0x400bb3e	      8221	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_5
0x400bb2d	        0x488b4138	            mov rax, qword [rcx + 0x38] 	      8223	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_7
0x400bb31	      0xba00000000	                              mov edx, 0	      8223	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_7
0x400bb36	        0x49f77138	                   div qword [r9 + 0x38]	      8223	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_7
0x400bb3a	        0x4d8d04c0	                    lea r8, [r8 + rax*8]	      8223	elf.c	FUNCTION_95	FOR_1	IF_2	CALL_7
0x400bb3e	        0x488b4910	            mov rcx, qword [rcx + 0x10] 	      8219	elf.c	FUNCTION_95	FOR_1
0x400bb42	          0x4885c9	                           test rcx, rcx	      8219	elf.c	FUNCTION_95	FOR_1
0x400bb45	            0x75cb	                           jne 0x400bb12	      8219	elf.c	FUNCTION_95	FOR_1
0x400bb47	          0x4c89c0	                             mov rax, r8	      8219	elf.c	FUNCTION_95	FOR_1
0x400bb4a	              0xc3	                                     ret	      8219	elf.c	FUNCTION_95	FOR_1
0x400bb4b	      0xb808000000	                              mov eax, 8	      8218	elf.c	FUNCTION_95
0x400bb50	              0xc3	                                     ret	      8218	elf.c	FUNCTION_95
0x400bb51	        0x4883c408	                              add rsp, 8	      8227	elf.c	FUNCTION_95
0x400bb55	              0xc3	                                     ret	      8227	elf.c	FUNCTION_95
elfcore_write_s390_todcmp	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,1:functions,0	8
0x400f93d	        0x4883ec10	                           sub rsp, 0x10	     10848	elf.c	FUNCTION_175
0x400f941	          0x4989c9	                             mov r9, rcx	     10848	elf.c	FUNCTION_175
0x400f944	            0x4150	                                 push r8	     10850	elf.c	FUNCTION_175	CALL_1
0x400f946	    0x41b802030000	                          mov r8d, 0x302	     10850	elf.c	FUNCTION_175	CALL_1
0x400f94c	      0xb900000000	                              mov ecx, 0	     10850	elf.c	FUNCTION_175	CALL_1
0x400f951	      0xe800000000	                          call 0x400f956	     10850	elf.c	FUNCTION_175	CALL_1
0x400f956	        0x4883c418	                           add rsp, 0x18	     10852	elf.c	FUNCTION_175
0x400f95a	              0xc3	                                     ret	     10852	elf.c	FUNCTION_175
_bfd_elf_set_reloc_sh_name	FOR,0:ELSE,0:IF,2:WHILE,0:DO,0:SWITCH,0:CALL,4:functions,0	49
0x4001099	            0x4156	                                push r14	      3064	elf.c	FUNCTION_45
0x400109b	            0x4155	                                push r13	      3064	elf.c	FUNCTION_45
0x400109d	            0x4154	                                push r12	      3064	elf.c	FUNCTION_45
0x400109f	              0x55	                                push rbp	      3064	elf.c	FUNCTION_45
0x40010a0	              0x53	                                push rbx	      3064	elf.c	FUNCTION_45
0x40010a1	          0x4889fb	                            mov rbx, rdi	      3064	elf.c	FUNCTION_45
0x40010a4	          0x4989f4	                            mov r12, rsi	      3064	elf.c	FUNCTION_45
0x40010a7	          0x4889d5	                            mov rbp, rdx	      3064	elf.c	FUNCTION_45
0x40010aa	          0x4189cd	                           mov r13d, ecx	      3064	elf.c	FUNCTION_45
0x40010ad	      0xb800000000	                              mov eax, 0	      3066	elf.c	FUNCTION_45	CALL_2
0x40010b2	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      3066	elf.c	FUNCTION_45	CALL_2
0x40010b9	          0x4889d7	                            mov rdi, rdx	      3066	elf.c	FUNCTION_45	CALL_2
0x40010bc	            0xf2ae	              repne scasb al, byte [rdi]	      3066	elf.c	FUNCTION_45	CALL_2
0x40010be	          0x48f7d1	                                 not rcx	      3066	elf.c	FUNCTION_45	CALL_2
0x40010c1	        0x488d7105	                      lea rsi, [rcx + 5]	      3065	elf.c	FUNCTION_45	CALL_1
0x40010c5	          0x4889df	                            mov rdi, rbx	      3065	elf.c	FUNCTION_45	CALL_1
0x40010c8	      0xe800000000	                          call 0x40010cd	      3065	elf.c	FUNCTION_45	CALL_1
0x40010cd	          0x4885c0	                           test rax, rax	      3067	elf.c	FUNCTION_45	IF_1
0x40010d0	            0x7464	                            je 0x4001136	      3067	elf.c	FUNCTION_45	IF_1
0x40010d2	          0x4989c6	                            mov r14, rax	      3067	elf.c	FUNCTION_45	IF_1
0x40010d5	          0x4585ed	                         test r13d, r13d	      3070	elf.c	FUNCTION_45
0x40010d8	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_204	CALL_1
0x40010db	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x40010e0	    0x41b800000000	                              mov r8d, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x40010e6	        0x4c0f44c0	                           cmove r8, rax	        33	stdio2.h	FUNCTION_204	CALL_1
0x40010ea	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x40010ef	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_204	CALL_1
0x40010f6	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_204	CALL_1
0x40010fb	          0x4c89f7	                            mov rdi, r14	        33	stdio2.h	FUNCTION_204	CALL_1
0x40010fe	      0xb800000000	                              mov eax, 0	        33	stdio2.h	FUNCTION_204	CALL_1
0x4001103	      0xe800000000	                          call 0x4001108	        33	stdio2.h	FUNCTION_204	CALL_1
0x4001108	    0x488b83f80000	            mov rax, qword [rbx + 0xf8] 	      3072	elf.c	FUNCTION_45	CALL_4
0x400110f	    0x488b80980c00	           mov rax, qword [rax + 0xc98] 	      3072	elf.c	FUNCTION_45	CALL_4
0x4001116	        0x488b7808	                mov rdi, qword [rax + 8]	      3072	elf.c	FUNCTION_45	CALL_4
0x400111a	      0xba00000000	                              mov edx, 0	      3072	elf.c	FUNCTION_45	CALL_4
0x400111f	          0x4c89f6	                            mov rsi, r14	      3072	elf.c	FUNCTION_45	CALL_4
0x4001122	      0xe800000000	                          call 0x4001127	      3072	elf.c	FUNCTION_45	CALL_4
0x4001127	        0x41890424	                    mov dword [r12], eax	      3071	elf.c	FUNCTION_45
0x400112b	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3068	elf.c	FUNCTION_45	IF_1
0x400112e	           0xf95c0	                                setne al	      3068	elf.c	FUNCTION_45	IF_1
0x4001131	           0xfb6c0	                           movzx eax, al	      3068	elf.c	FUNCTION_45	IF_1
0x4001134	            0xeb05	                           jmp 0x400113b	      3068	elf.c	FUNCTION_45	IF_1
0x4001136	      0xb800000000	                              mov eax, 0	      3068	elf.c	FUNCTION_45	IF_1
0x400113b	              0x5b	                                 pop rbx	      3078	elf.c	FUNCTION_45
0x400113c	              0x5d	                                 pop rbp	      3078	elf.c	FUNCTION_45
0x400113d	            0x415c	                                 pop r12	      3078	elf.c	FUNCTION_45
0x400113f	            0x415d	                                 pop r13	      3078	elf.c	FUNCTION_45
0x4001141	            0x415e	                                 pop r14	      3078	elf.c	FUNCTION_45
0x4001143	              0xc3	                                     ret	      3078	elf.c	FUNCTION_45
ignore_section_sym	FOR,0:ELSE,0:IF,3:WHILE,0:DO,0:SWITCH,0:CALL,1:functions,0	44
0x400016c	          0x4885f6	                           test rsi, rsi	      4039	elf.c	FUNCTION_55	IF_1
0x400016f	            0x7469	                            je 0x40001da	      4039	elf.c	FUNCTION_55	IF_1
0x4000171	      0xb800000000	                              mov eax, 0	      4043	elf.c	FUNCTION_55	IF_2
0x4000176	        0xf6461901	               test byte [rsi + 0x19], 1	      4042	elf.c	FUNCTION_55	IF_2
0x400017a	     0xf8483000000	                            je 0x4000203	      4042	elf.c	FUNCTION_55	IF_2
0x4000180	        0x488b5620	            mov rdx, qword [rsi + 0x20] 	      4045	elf.c	FUNCTION_55	IF_3
0x4000184	          0x4885d2	                           test rdx, rdx	      4045	elf.c	FUNCTION_55	IF_3
0x4000187	            0x7457	                            je 0x40001e0	      4045	elf.c	FUNCTION_55	IF_3
0x4000189	          0x488b06	                    mov rax, qword [rsi]	      4048	elf.c	FUNCTION_55	CALL_1
0x400018c	          0x4885c0	                           test rax, rax	      4048	elf.c	FUNCTION_55	CALL_1
0x400018f	            0x7414	                            je 0x40001a5	      4048	elf.c	FUNCTION_55	CALL_1
0x4000191	        0x488b4808	                mov rcx, qword [rax + 8]	      4048	elf.c	FUNCTION_55	CALL_1
0x4000195	        0x83790805	                  cmp dword [rcx + 8], 5	      4048	elf.c	FUNCTION_55	CALL_1
0x4000199	            0x750a	                           jne 0x40001a5	      4048	elf.c	FUNCTION_55	CALL_1
0x400019b	    0x4883b8f80000	               cmp qword [rax + 0xf8], 0	      4048	elf.c	FUNCTION_55	CALL_1
0x40001a3	            0x754d	                           jne 0x40001f2	      4048	elf.c	FUNCTION_55	CALL_1
0x40001a5	    0x4839baf00000	            cmp qword [rdx + 0xf0], rdi 	      4052	elf.c	FUNCTION_55
0x40001ac	            0x7438	                            je 0x40001e6	      4052	elf.c	FUNCTION_55
0x40001ae	        0x488b4268	            mov rax, qword [rdx + 0x68] 	      4053	elf.c	FUNCTION_55
0x40001b2	          0x4885c0	                           test rax, rax	      4053	elf.c	FUNCTION_55
0x40001b5	            0x7415	                            je 0x40001cc	      4053	elf.c	FUNCTION_55
0x40001b7	    0x483bb8f00000	            cmp rdi, qword [rax + 0xf0] 	      4054	elf.c	FUNCTION_55
0x40001be	            0x750c	                           jne 0x40001cc	      4054	elf.c	FUNCTION_55
0x40001c0	      0xb800000000	                              mov eax, 0	      4052	elf.c	FUNCTION_55
0x40001c5	      0x48837a6000	               cmp qword [rdx + 0x60], 0	      4055	elf.c	FUNCTION_55
0x40001ca	            0x7437	                            je 0x4000203	      4055	elf.c	FUNCTION_55
0x40001cc	    0x4881fa000000	                              cmp rdx, 0	      4040	elf.c	FUNCTION_55	IF_1
0x40001d3	           0xf95c0	                                setne al	      4040	elf.c	FUNCTION_55	IF_1
0x40001d6	           0xfb6c0	                           movzx eax, al	      4040	elf.c	FUNCTION_55	IF_1
0x40001d9	              0xc3	                                     ret	      4040	elf.c	FUNCTION_55	IF_1
0x40001da	      0xb800000000	                              mov eax, 0	      4040	elf.c	FUNCTION_55	IF_1
0x40001df	              0xc3	                                     ret	      4040	elf.c	FUNCTION_55	IF_1
0x40001e0	      0xb801000000	                              mov eax, 1	      4046	elf.c	FUNCTION_55	IF_3
0x40001e5	              0xc3	                                     ret	      4046	elf.c	FUNCTION_55	IF_3
0x40001e6	      0xb800000000	                              mov eax, 0	      4052	elf.c	FUNCTION_55
0x40001eb	              0xc3	                                     ret	      4052	elf.c	FUNCTION_55
0x40001ec	      0xb801000000	                              mov eax, 1	      4052	elf.c	FUNCTION_55
0x40001f1	              0xc3	                                     ret	      4052	elf.c	FUNCTION_55
0x40001f2	        0x837e4c00	               cmp dword [rsi + 0x4c], 0	      4051	elf.c	FUNCTION_55
0x40001f6	            0x74ad	                            je 0x40001a5	      4051	elf.c	FUNCTION_55
0x40001f8	    0x4881fa000000	                              cmp rdx, 0	      4051	elf.c	FUNCTION_55
0x40001ff	            0x75a4	                           jne 0x40001a5	      4051	elf.c	FUNCTION_55
0x4000201	            0xebe9	                           jmp 0x40001ec	      4051	elf.c	FUNCTION_55
0x4000203	            0xf3c3	                                     ret	      4057	elf.c	FUNCTION_55
bfd_elf_sym_name	FOR,0:ELSE,1:IF,3:WHILE,0:DO,0:SWITCH,0:CALL,5:functions,0	33
0x4002433	              0x53	                                push rbx	       522	elf.c	FUNCTION_19
0x4002434	          0x4989d0	                             mov r8, rdx	       522	elf.c	FUNCTION_19
0x4002437	          0x4889cb	                            mov rbx, rcx	       522	elf.c	FUNCTION_19
0x400243a	        0x488b4210	            mov rax, qword [rdx + 0x10] 	       524	elf.c	FUNCTION_19
0x400243e	            0x89c2	                            mov edx, eax	       524	elf.c	FUNCTION_19
0x4002440	          0x8b7628	            mov esi, dword [rsi + 0x28] 	       525	elf.c	FUNCTION_19
0x4002443	            0x85c0	                           test eax, eax	       527	elf.c	FUNCTION_19	IF_1	CALL_1
0x4002445	            0x752e	                           jne 0x4002475	       527	elf.c	FUNCTION_19	IF_1	CALL_1
0x4002447	      0x410fb64018	            movzx eax, byte [r8 + 0x18] 	       527	elf.c	FUNCTION_19	IF_1	CALL_1
0x400244c	          0x83e00f	                            and eax, 0xf	       527	elf.c	FUNCTION_19	IF_1	CALL_1
0x400244f	            0x3c03	                               cmp al, 3	       527	elf.c	FUNCTION_19	IF_1	CALL_1
0x4002451	            0x7522	                           jne 0x4002475	       527	elf.c	FUNCTION_19	IF_1	CALL_1
0x4002453	        0x418b401c	              mov eax, dword [r8 + 0x1c]	       529	elf.c	FUNCTION_19	IF_1	CALL_2
0x4002457	    0x488b8ff80000	            mov rcx, qword [rdi + 0xf8] 	       529	elf.c	FUNCTION_19	IF_1	CALL_2
0x400245e	    0x3b81fc020000	           cmp eax, dword [rcx + 0x2fc] 	       529	elf.c	FUNCTION_19	IF_1	CALL_2
0x4002464	            0x730f	                           jae 0x4002475	       529	elf.c	FUNCTION_19	IF_1	CALL_2
0x4002466	            0x89c0	                            mov eax, eax	       531	elf.c	FUNCTION_19	IF_1	CALL_3
0x4002468	        0x488b5158	            mov rdx, qword [rcx + 0x58] 	       531	elf.c	FUNCTION_19	IF_1	CALL_3
0x400246c	        0x488b04c2	            mov rax, qword [rdx + rax*8]	       531	elf.c	FUNCTION_19	IF_1	CALL_3
0x4002470	            0x8b10	                    mov edx, dword [rax]	       531	elf.c	FUNCTION_19	IF_1	CALL_3
0x4002472	          0x8b7150	            mov esi, dword [rcx + 0x50] 	       532	elf.c	FUNCTION_19	IF_1	CALL_4
0x4002475	      0xe800000000	                          call 0x400247a	       535	elf.c	FUNCTION_19	CALL_5
0x400247a	          0x4885c0	                           test rax, rax	       536	elf.c	FUNCTION_19	IF_2
0x400247d	            0x740f	                            je 0x400248e	       536	elf.c	FUNCTION_19	IF_2
0x400247f	          0x4885db	                           test rbx, rbx	       538	elf.c	FUNCTION_19	ELSE_1	IF_3
0x4002482	            0x740f	                            je 0x4002493	       538	elf.c	FUNCTION_19	ELSE_1	IF_3
0x4002484	          0x803800	                       cmp byte [rax], 0	       538	elf.c	FUNCTION_19	ELSE_1	IF_3
0x4002487	            0x750a	                           jne 0x4002493	       538	elf.c	FUNCTION_19	ELSE_1	IF_3
0x4002489	          0x488b03	                    mov rax, qword [rbx]	       539	elf.c	FUNCTION_19	ELSE_1	IF_3
0x400248c	            0xeb05	                           jmp 0x4002493	       539	elf.c	FUNCTION_19	ELSE_1	IF_3
0x400248e	      0xb800000000	                              mov eax, 0	       537	elf.c	FUNCTION_19	IF_2
0x4002493	              0x5b	                                 pop rbx	       542	elf.c	FUNCTION_19
0x4002494	              0xc3	                                     ret	       542	elf.c	FUNCTION_19
_bfd_elf_get_reloc_upper_bound	FOR,0:ELSE,0:IF,0:WHILE,0:DO,0:SWITCH,0:CALL,0:functions,0	4
0x400ba01	    0x8b8688000000	            mov eax, dword [rsi + 0x88] 	      8151	elf.c	FUNCTION_91
0x400ba07	          0x8d4001	                      lea eax, [rax + 1]	      8151	elf.c	FUNCTION_91
0x400ba0a	        0x48c1e003	                              shl rax, 3	      8151	elf.c	FUNCTION_91
0x400ba0e	              0xc3	                                     ret	      8152	elf.c	FUNCTION_91
_bfd_elf_setup_sections	FOR,2:ELSE,4:IF,11:WHILE,1:DO,0:SWITCH,0:CALL,22:functions,0	168
0x4002495	            0x4157	                                push r15	       845	elf.c	FUNCTION_22
0x4002497	            0x4156	                                push r14	       845	elf.c	FUNCTION_22
0x4002499	            0x4155	                                push r13	       845	elf.c	FUNCTION_22
0x400249b	            0x4154	                                push r12	       845	elf.c	FUNCTION_22
0x400249d	              0x55	                                push rbp	       845	elf.c	FUNCTION_22
0x400249e	              0x53	                                push rbx	       845	elf.c	FUNCTION_22
0x400249f	        0x4883ec28	                           sub rsp, 0x28	       845	elf.c	FUNCTION_22
0x40024a3	          0x4989fe	                            mov r14, rdi	       845	elf.c	FUNCTION_22
0x40024a6	    0x488b87f80000	            mov rax, qword [rdi + 0xf8] 	       847	elf.c	FUNCTION_22	CALL_1
0x40024ad	    0x8b80700c0000	           mov eax, dword [rax + 0xc70] 	       847	elf.c	FUNCTION_22	CALL_1
0x40024b3	        0x89442418	             mov dword [rsp + 0x18], eax	       847	elf.c	FUNCTION_22	CALL_1
0x40024b7	    0x488b9f900000	            mov rbx, qword [rdi + 0x90] 	       852	elf.c	FUNCTION_22	FOR_1
0x40024be	          0x4885db	                           test rbx, rbx	       852	elf.c	FUNCTION_22	FOR_1
0x40024c1	     0xf8426010000	                            je 0x40025ed	       852	elf.c	FUNCTION_22	FOR_1
0x40024c7	    0xc74424080100	                  mov dword [rsp + 8], 1	       852	elf.c	FUNCTION_22	FOR_1
0x40024cf	    0x488b83e00000	            mov rax, qword [rbx + 0xe0] 	       854	elf.c	FUNCTION_22	FOR_1	CALL_2
0x40024d6	        0xf6400880	               test byte [rax + 8], 0x80	       855	elf.c	FUNCTION_22	FOR_1	IF_1
0x40024da	     0xf84ba000000	                            je 0x400259a	       855	elf.c	FUNCTION_22	FOR_1	IF_1
0x40024e0	          0x8b6828	            mov ebp, dword [rax + 0x28] 	       857	elf.c	FUNCTION_22	FOR_1	IF_1
0x40024e3	            0x85ed	                           test ebp, ebp	       861	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2
0x40024e5	            0x7544	                           jne 0x400252b	       861	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2
0x40024e7	        0x498b4608	                mov rax, qword [r14 + 8]	       863	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	CALL_3
0x40024eb	    0x488b80680300	           mov rax, qword [rax + 0x368] 	       864	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3
0x40024f2	    0x488ba8e80200	           mov rbp, qword [rax + 0x2e8] 	       864	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3
0x40024f9	          0x4885ed	                           test rbp, rbp	       864	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3
0x40024fc	     0xf84dc000000	                            je 0x40025de	       864	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3
0x4002502	      0xba05000000	                              mov edx, 5	       867	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_5
0x4002507	      0xbe00000000	                              mov esi, 0	       867	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_5
0x400250c	      0xbf00000000	                              mov edi, 0	       867	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_5
0x4002511	      0xe800000000	                          call 0x4002516	       867	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_5
0x4002516	          0x4889da	                            mov rdx, rbx	       865	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_4
0x4002519	          0x4c89f6	                            mov rsi, r14	       865	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_4
0x400251c	          0x4889c7	                            mov rdi, rax	       865	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_4
0x400251f	      0xb800000000	                              mov eax, 0	       865	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_4
0x4002524	            0xffd5	                                call rbp	       865	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_4
0x4002526	      0xe9b3000000	                           jmp 0x40025de	       865	elf.c	FUNCTION_22	FOR_1	IF_1	IF_2	IF_3	CALL_4
0x400252b	    0x498b86f80000	            mov rax, qword [r14 + 0xf8] 	       874	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4	CALL_6
0x4002532	    0x3ba8fc020000	           cmp ebp, dword [rax + 0x2fc] 	       874	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4	CALL_6
0x4002538	            0x7313	                           jae 0x400254d	       874	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4	CALL_6
0x400253a	            0x89ea	                            mov edx, ebp	       876	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4	CALL_7
0x400253c	        0x488b4858	            mov rcx, qword [rax + 0x58] 	       876	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4	CALL_7
0x4002540	        0x488b04d1	            mov rax, qword [rcx + rdx*8]	       877	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4
0x4002544	        0x488b4040	            mov rax, qword [rax + 0x40] 	       877	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_4
0x4002548	          0x4885c0	                           test rax, rax	       883	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5
0x400254b	            0x753d	                           jne 0x400258a	       883	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5
0x400254d	    0x4c8ba3f00000	            mov r12, qword [rbx + 0xf0] 	       885	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_8
0x4002554	      0xba05000000	                              mov edx, 5	       887	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_9
0x4002559	      0xbe00000000	                              mov esi, 0	       887	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_9
0x400255e	      0xbf00000000	                              mov edi, 0	       887	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_9
0x4002563	      0xe800000000	                          call 0x4002568	       887	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_9
0x4002568	          0x4889d9	                            mov rcx, rbx	       885	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_8
0x400256b	            0x89ea	                            mov edx, ebp	       885	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_8
0x400256d	          0x4c89e6	                            mov rsi, r12	       885	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_8
0x4002570	          0x4889c7	                            mov rdi, rax	       885	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_8
0x4002573	      0xb800000000	                              mov eax, 0	       885	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_8
0x4002578	      0xe800000000	                          call 0x400257d	       885	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_8
0x400257d	      0xb800000000	                              mov eax, 0	       885	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5	CALL_8
0x4002582	    0xc74424080000	                  mov dword [rsp + 8], 0	       889	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	IF_5
0x400258a	    0x488b93e00000	            mov rdx, qword [rbx + 0xe0] 	       892	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	CALL_10
0x4002591	    0x488982900000	             mov qword [rdx + 0x90], rax	       892	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	CALL_10
0x4002598	            0xeb44	                           jmp 0x40025de	       892	elf.c	FUNCTION_22	FOR_1	IF_1	ELSE_1	CALL_10
0x400259a	        0x83780411	               cmp dword [rax + 4], 0x11	       895	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6
0x400259e	            0x753e	                           jne 0x40025de	       895	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6
0x40025a0	    0x4883b8c00000	               cmp qword [rax + 0xc0], 0	       896	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_11
0x40025a8	            0x7534	                           jne 0x40025de	       896	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_11
0x40025aa	    0x8ba888000000	            mov ebp, dword [rax + 0x88] 	       898	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_12
0x40025b0	      0xba05000000	                              mov edx, 5	       900	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_13
0x40025b5	      0xbe00000000	                              mov esi, 0	       900	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_13
0x40025ba	      0xbf00000000	                              mov edi, 0	       900	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_13
0x40025bf	      0xe800000000	                          call 0x40025c4	       900	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_13
0x40025c4	            0x89ea	                            mov edx, ebp	       898	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_12
0x40025c6	          0x4c89f6	                            mov rsi, r14	       898	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_12
0x40025c9	          0x4889c7	                            mov rdi, rax	       898	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_12
0x40025cc	      0xb800000000	                              mov eax, 0	       898	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_12
0x40025d1	      0xe800000000	                          call 0x40025d6	       898	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6	CALL_12
0x40025d6	    0xc74424080000	                  mov dword [rsp + 8], 0	       902	elf.c	FUNCTION_22	FOR_1	ELSE_2	IF_6
0x40025de	        0x488b5b10	            mov rbx, qword [rbx + 0x10] 	       852	elf.c	FUNCTION_22	FOR_1
0x40025e2	          0x4885db	                           test rbx, rbx	       852	elf.c	FUNCTION_22	FOR_1
0x40025e5	     0xf85e4feffff	                           jne 0x40024cf	       852	elf.c	FUNCTION_22	FOR_1
0x40025eb	            0xeb08	                           jmp 0x40025f5	       852	elf.c	FUNCTION_22	FOR_1
0x40025ed	    0xc74424080100	                  mov dword [rsp + 8], 1	       848	elf.c	FUNCTION_22
0x40025f5	        0x8b442418	            mov eax, dword [rsp + 0x18] 	       907	elf.c	FUNCTION_22	IF_7
0x40025f9	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       907	elf.c	FUNCTION_22	IF_7
0x40025fc	     0xf843f010000	                            je 0x4002741	       907	elf.c	FUNCTION_22	IF_7
0x4002602	            0x85c0	                           test eax, eax	       910	elf.c	FUNCTION_22	FOR_2
0x4002604	     0xf8437010000	                            je 0x4002741	       910	elf.c	FUNCTION_22	FOR_2
0x400260a	    0x41bf00000000	                             mov r15d, 0	       910	elf.c	FUNCTION_22	FOR_2
0x4002610	    0x41bd00000000	                             mov r13d, 0	       910	elf.c	FUNCTION_22	FOR_2
0x4002616	    0x498b86f80000	            mov rax, qword [r14 + 0xf8] 	       912	elf.c	FUNCTION_22	FOR_2	CALL_15
0x400261d	    0x488b80680c00	           mov rax, qword [rax + 0xc68] 	       912	elf.c	FUNCTION_22	FOR_2	CALL_15
0x4002624	        0x4a8b2c38	              mov rbp, qword [rax + r15]	       912	elf.c	FUNCTION_22	FOR_2	CALL_15
0x4002628	          0x4885ed	                           test rbp, rbp	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x400262b	            0x7410	                            je 0x400263d	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x400262d	      0x48837d4000	               cmp qword [rbp + 0x40], 0	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x4002632	            0x7409	                            je 0x400263d	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x4002634	        0x488b5d48	            mov rbx, qword [rbp + 0x48] 	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x4002638	          0x4885db	                           test rbx, rbx	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x400263b	            0x7534	                           jne 0x4002671	       917	elf.c	FUNCTION_22	FOR_2	IF_8
0x400263d	      0xba05000000	                              mov edx, 5	       921	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_17
0x4002642	      0xbe00000000	                              mov esi, 0	       921	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_17
0x4002647	      0xbf00000000	                              mov edi, 0	       921	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_17
0x400264c	      0xe800000000	                          call 0x4002651	       921	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_17
0x4002651	          0x4489ea	                           mov edx, r13d	       919	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_16
0x4002654	          0x4c89f6	                            mov rsi, r14	       919	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_16
0x4002657	          0x4889c7	                            mov rdi, rax	       919	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_16
0x400265a	      0xb800000000	                              mov eax, 0	       919	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_16
0x400265f	      0xe800000000	                          call 0x4002664	       919	elf.c	FUNCTION_22	FOR_2	IF_8	CALL_16
0x4002664	    0xc74424080000	                  mov dword [rsp + 8], 0	       923	elf.c	FUNCTION_22	FOR_2	IF_8
0x400266c	      0xe9bd000000	                           jmp 0x400272e	       924	elf.c	FUNCTION_22	FOR_2	IF_8
0x4002671	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       924	elf.c	FUNCTION_22	FOR_2	IF_8
0x4002675	        0x48c1e802	                              shr rax, 2	       924	elf.c	FUNCTION_22	FOR_2	IF_8
0x4002679	          0x8d40ff	                      lea eax, [rax - 1]	       924	elf.c	FUNCTION_22	FOR_2	IF_8
0x400267c	        0x4c8d24c3	                  lea r12, [rbx + rax*8]	       924	elf.c	FUNCTION_22	FOR_2	IF_8
0x4002680	      0xe9a0000000	                           jmp 0x4002725	       930	elf.c	FUNCTION_22	FOR_2	WHILE_1
0x4002685	        0x4883c308	                              add rbx, 8	       932	elf.c	FUNCTION_22	FOR_2	WHILE_1
0x4002689	          0x488b03	                    mov rax, qword [rbx]	       934	elf.c	FUNCTION_22	FOR_2	WHILE_1	IF_9
0x400268c	          0x4885c0	                           test rax, rax	       934	elf.c	FUNCTION_22	FOR_2	WHILE_1	IF_9
0x400268f	     0xf8490000000	                            je 0x4002725	       934	elf.c	FUNCTION_22	FOR_2	WHILE_1	IF_9
0x4002695	        0x488b5040	            mov rdx, qword [rax + 0x40] 	       936	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_3	IF_10
0x4002699	          0x4885d2	                           test rdx, rdx	       936	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_3	IF_10
0x400269c	            0x7414	                            je 0x40026b2	       936	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_3	IF_10
0x400269e	    0x488b82e00000	            mov rax, qword [rdx + 0xe0] 	       937	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_3	IF_10
0x40026a5	        0x488b5540	            mov rdx, qword [rbp + 0x40] 	       937	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_3	IF_10
0x40026a9	    0x488990b80000	             mov qword [rax + 0xb8], rdx	       937	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_3	IF_10
0x40026b0	            0xeb73	                           jmp 0x4002725	       937	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_3	IF_10
0x40026b2	          0x8b5004	                mov edx, dword [rax + 4]	       938	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11
0x40026b5	          0x83fa04	                              cmp edx, 4	       938	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11
0x40026b8	            0x746b	                            je 0x4002725	       938	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11
0x40026ba	          0x83fa09	                              cmp edx, 9	       938	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11
0x40026bd	            0x7466	                            je 0x4002725	       938	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11
0x40026bf	        0x488b4d40	            mov rcx, qword [rbp + 0x40] 	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x40026c3	      0x48894c2408	                mov qword [rsp + 8], rcx	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x40026c8	    0x498b96f80000	            mov rdx, qword [r14 + 0xf8] 	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x40026cf	          0x8b7250	            mov esi, dword [rdx + 0x50] 	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x40026d2	            0x8b10	                    mov edx, dword [rax]	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x40026d4	          0x4c89f7	                            mov rdi, r14	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x40026d7	      0xe800000000	                          call 0x40026dc	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x40026dc	      0x4889442410	             mov qword [rsp + 0x10], rax	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x40026e1	          0x488b03	                    mov rax, qword [rbx]	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x40026e4	          0x8b7804	                mov edi, dword [rax + 4]	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x40026e7	        0x897c241c	             mov dword [rsp + 0x1c], edi	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x40026eb	      0xba05000000	                              mov edx, 5	       944	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_20
0x40026f0	      0xbe00000000	                              mov esi, 0	       944	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_20
0x40026f5	      0xbf00000000	                              mov edi, 0	       944	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_20
0x40026fa	      0xe800000000	                          call 0x40026ff	       944	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_20
0x40026ff	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4002704	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4002709	        0x8b54241c	            mov edx, dword [rsp + 0x1c] 	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x400270d	          0x4c89f6	                            mov rsi, r14	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4002710	          0x4889c7	                            mov rdi, rax	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4002713	      0xb800000000	                              mov eax, 0	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x4002718	      0xe800000000	                          call 0x400271d	       942	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11	CALL_19
0x400271d	    0xc74424080000	                  mov dword [rsp + 8], 0	       952	elf.c	FUNCTION_22	FOR_2	WHILE_1	ELSE_4	IF_11
0x4002725	          0x4c39e3	                            cmp rbx, r12	       930	elf.c	FUNCTION_22	FOR_2	WHILE_1
0x4002728	     0xf8557ffffff	                           jne 0x4002685	       930	elf.c	FUNCTION_22	FOR_2	WHILE_1
0x400272e	        0x4183c501	                             add r13d, 1	       910	elf.c	FUNCTION_22	FOR_2
0x4002732	        0x4983c708	                              add r15, 8	       910	elf.c	FUNCTION_22	FOR_2
0x4002736	      0x44396c2418	           cmp dword [rsp + 0x18], r13d 	       910	elf.c	FUNCTION_22	FOR_2
0x400273b	     0xf85d5feffff	                           jne 0x4002616	       910	elf.c	FUNCTION_22	FOR_2
0x4002741	        0x8b442408	                mov eax, dword [rsp + 8]	       958	elf.c	FUNCTION_22
0x4002745	        0x4883c428	                           add rsp, 0x28	       958	elf.c	FUNCTION_22
0x4002749	              0x5b	                                 pop rbx	       958	elf.c	FUNCTION_22
0x400274a	              0x5d	                                 pop rbp	       958	elf.c	FUNCTION_22
0x400274b	            0x415c	                                 pop r12	       958	elf.c	FUNCTION_22
0x400274d	            0x415d	                                 pop r13	       958	elf.c	FUNCTION_22
0x400274f	            0x415e	                                 pop r14	       958	elf.c	FUNCTION_22
0x4002751	            0x415f	                                 pop r15	       958	elf.c	FUNCTION_22
0x4002753	              0xc3	                                     ret	       958	elf.c	FUNCTION_22
