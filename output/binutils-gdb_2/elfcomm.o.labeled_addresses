warn	SWITCH,0:ELSE,0:WHILE,0:FOR,0:IF,0:functions,0:DO,0:CALL,5	54
0x400074a	              0x55	                                push rbp	        49	elfcomm.c	FUNCTION_2
0x400074b	              0x53	                                push rbx	        49	elfcomm.c	FUNCTION_2
0x400074c	    0x4881ecd80000	                           sub rsp, 0xd8	        49	elfcomm.c	FUNCTION_2
0x4000753	          0x4889fb	                            mov rbx, rdi	        49	elfcomm.c	FUNCTION_2
0x4000756	      0x4889742428	             mov qword [rsp + 0x28], rsi	        49	elfcomm.c	FUNCTION_2
0x400075b	      0x4889542430	             mov qword [rsp + 0x30], rdx	        49	elfcomm.c	FUNCTION_2
0x4000760	      0x48894c2438	             mov qword [rsp + 0x38], rcx	        49	elfcomm.c	FUNCTION_2
0x4000765	      0x4c89442440	              mov qword [rsp + 0x40], r8	        49	elfcomm.c	FUNCTION_2
0x400076a	      0x4c894c2448	              mov qword [rsp + 0x48], r9	        49	elfcomm.c	FUNCTION_2
0x400076f	            0x84c0	                             test al, al	        49	elfcomm.c	FUNCTION_2
0x4000771	            0x7437	                            je 0x40007aa	        49	elfcomm.c	FUNCTION_2
0x4000773	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	        49	elfcomm.c	FUNCTION_2
0x4000778	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	        49	elfcomm.c	FUNCTION_2
0x400077d	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	        49	elfcomm.c	FUNCTION_2
0x4000782	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	        49	elfcomm.c	FUNCTION_2
0x400078a	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	        49	elfcomm.c	FUNCTION_2
0x4000792	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	        49	elfcomm.c	FUNCTION_2
0x400079a	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	        49	elfcomm.c	FUNCTION_2
0x40007a2	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	        49	elfcomm.c	FUNCTION_2
0x40007aa	    0x64488b042528	                mov rax, qword fs:[0x28]	        49	elfcomm.c	FUNCTION_2
0x40007b3	      0x4889442418	             mov qword [rsp + 0x18], rax	        49	elfcomm.c	FUNCTION_2
0x40007b8	            0x31c0	                            xor eax, eax	        49	elfcomm.c	FUNCTION_2
0x40007ba	    0x488b3d000000	            mov rdi, qword [0x040007c1] 	        53	elfcomm.c	FUNCTION_2	CALL_1
0x40007c1	      0xe800000000	                          call 0x40007c6	        53	elfcomm.c	FUNCTION_2	CALL_1
0x40007c6	    0xc70424080000	                      mov dword [rsp], 8	        55	elfcomm.c	FUNCTION_2	CALL_2
0x40007cd	    0xc74424043000	               mov dword [rsp + 4], 0x30	        55	elfcomm.c	FUNCTION_2	CALL_2
0x40007d5	    0x488d8424f000	                   lea rax, [rsp + 0xf0]	        55	elfcomm.c	FUNCTION_2	CALL_2
0x40007dd	      0x4889442408	                mov qword [rsp + 8], rax	        55	elfcomm.c	FUNCTION_2	CALL_2
0x40007e2	      0x488d442420	                   lea rax, [rsp + 0x20]	        55	elfcomm.c	FUNCTION_2	CALL_2
0x40007e7	      0x4889442410	             mov qword [rsp + 0x10], rax	        55	elfcomm.c	FUNCTION_2	CALL_2
0x40007ec	    0x488b2d000000	            mov rbp, qword [0x040007f3] 	        56	elfcomm.c	FUNCTION_2	CALL_3
0x40007f3	      0xba05000000	                              mov edx, 5	        56	elfcomm.c	FUNCTION_2	CALL_3
0x40007f8	      0xbe00000000	                              mov esi, 0	        56	elfcomm.c	FUNCTION_2	CALL_3
0x40007fd	      0xbf00000000	                              mov edi, 0	        56	elfcomm.c	FUNCTION_2	CALL_3
0x4000802	      0xe800000000	                          call 0x4000807	        56	elfcomm.c	FUNCTION_2	CALL_3
0x4000807	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_10
0x400080a	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_10
0x400080d	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_10
0x4000812	    0x488b3d000000	            mov rdi, qword [0x04000819] 	        97	stdio2.h	CALL_10
0x4000819	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_10
0x400081e	      0xe800000000	                          call 0x4000823	        97	stdio2.h	CALL_10
0x4000823	          0x4889e1	                            mov rcx, rsp	       127	stdio2.h	FUNCTION_22	CALL_1
0x4000826	          0x4889da	                            mov rdx, rbx	       127	stdio2.h	FUNCTION_22	CALL_1
0x4000829	      0xbe01000000	                              mov esi, 1	       127	stdio2.h	FUNCTION_22	CALL_1
0x400082e	    0x488b3d000000	            mov rdi, qword [0x04000835] 	       127	stdio2.h	FUNCTION_22	CALL_1
0x4000835	      0xe800000000	                          call 0x400083a	       127	stdio2.h	FUNCTION_22	CALL_1
0x400083a	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        59	elfcomm.c	FUNCTION_2
0x400083f	    0x644833042528	                xor rax, qword fs:[0x28]	        59	elfcomm.c	FUNCTION_2
0x4000848	            0x7405	                            je 0x400084f	        59	elfcomm.c	FUNCTION_2
0x400084a	      0xe800000000	                          call 0x400084f	        59	elfcomm.c	FUNCTION_2
0x400084f	    0x4881c4d80000	                           add rsp, 0xd8	        59	elfcomm.c	FUNCTION_2
0x4000856	              0x5b	                                 pop rbx	        59	elfcomm.c	FUNCTION_2
0x4000857	              0x5d	                                 pop rbp	        59	elfcomm.c	FUNCTION_2
0x4000858	              0xc3	                                     ret	        59	elfcomm.c	FUNCTION_2
byte_put_little_endian	SWITCH,1:ELSE,0:WHILE,0:FOR,0:IF,0:functions,0:DO,0:CALL,3	40
0x4000859	              0x53	                                push rbx	        65	elfcomm.c	FUNCTION_3
0x400085a	          0x83fa08	                              cmp edx, 8	        66	elfcomm.c	FUNCTION_3	SWITCH_1
0x400085d	            0x7754	                            ja 0x40008b3	        66	elfcomm.c	FUNCTION_3	SWITCH_1
0x400085f	            0x89d0	                            mov eax, edx	        66	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000861	    0xff24c5000000	                       jmp qword [rax*8]	        66	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000868	          0x4889f0	                            mov rax, rsi	        69	elfcomm.c	FUNCTION_3	SWITCH_1
0x400086b	        0x48c1e838	                           shr rax, 0x38	        69	elfcomm.c	FUNCTION_3	SWITCH_1
0x400086f	          0x884707	                  mov byte [rdi + 7], al	        69	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000872	          0x4889f0	                            mov rax, rsi	        70	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000875	        0x48c1e830	                           shr rax, 0x30	        70	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000879	          0x884706	                  mov byte [rdi + 6], al	        70	elfcomm.c	FUNCTION_3	SWITCH_1
0x400087c	          0x4889f0	                            mov rax, rsi	        71	elfcomm.c	FUNCTION_3	SWITCH_1
0x400087f	        0x48c1e828	                           shr rax, 0x28	        71	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000883	          0x884705	                  mov byte [rdi + 5], al	        71	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000886	          0x4889f0	                            mov rax, rsi	        72	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000889	        0x48c1e820	                           shr rax, 0x20	        72	elfcomm.c	FUNCTION_3	SWITCH_1
0x400088d	          0x884704	                  mov byte [rdi + 4], al	        72	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000890	          0x4889f0	                            mov rax, rsi	        75	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000893	        0x48c1e818	                           shr rax, 0x18	        75	elfcomm.c	FUNCTION_3	SWITCH_1
0x4000897	          0x884703	                  mov byte [rdi + 3], al	        75	elfcomm.c	FUNCTION_3	SWITCH_1
0x400089a	          0x4889f0	                            mov rax, rsi	        78	elfcomm.c	FUNCTION_3	SWITCH_1
0x400089d	        0x48c1e810	                           shr rax, 0x10	        78	elfcomm.c	FUNCTION_3	SWITCH_1
0x40008a1	          0x884702	                  mov byte [rdi + 2], al	        78	elfcomm.c	FUNCTION_3	SWITCH_1
0x40008a4	          0x4889f0	                            mov rax, rsi	        81	elfcomm.c	FUNCTION_3	SWITCH_1
0x40008a7	        0x48c1e808	                              shr rax, 8	        81	elfcomm.c	FUNCTION_3	SWITCH_1
0x40008ab	          0x884701	                  mov byte [rdi + 1], al	        81	elfcomm.c	FUNCTION_3	SWITCH_1
0x40008ae	          0x408837	                     mov byte [rdi], sil	        84	elfcomm.c	FUNCTION_3	SWITCH_1
0x40008b1	            0xeb2a	                           jmp 0x40008dd	        91	elfcomm.c	FUNCTION_3
0x40008b3	            0x89d3	                            mov ebx, edx	        91	elfcomm.c	FUNCTION_3
0x40008b5	      0xba05000000	                              mov edx, 5	        88	elfcomm.c	FUNCTION_3	SWITCH_1	CALL_2
0x40008ba	      0xbe00000000	                              mov esi, 0	        88	elfcomm.c	FUNCTION_3	SWITCH_1	CALL_2
0x40008bf	      0xbf00000000	                              mov edi, 0	        88	elfcomm.c	FUNCTION_3	SWITCH_1	CALL_2
0x40008c4	      0xe800000000	                          call 0x40008c9	        88	elfcomm.c	FUNCTION_3	SWITCH_1	CALL_2
0x40008c9	            0x89de	                            mov esi, ebx	        88	elfcomm.c	FUNCTION_3	SWITCH_1	CALL_2
0x40008cb	          0x4889c7	                            mov rdi, rax	        88	elfcomm.c	FUNCTION_3	SWITCH_1	CALL_2
0x40008ce	      0xb800000000	                              mov eax, 0	        88	elfcomm.c	FUNCTION_3	SWITCH_1	CALL_2
0x40008d3	      0xe800000000	                          call 0x40008d8	        88	elfcomm.c	FUNCTION_3	SWITCH_1	CALL_2
0x40008d8	      0xe800000000	                          call 0x40008dd	        89	elfcomm.c	FUNCTION_3	SWITCH_1	CALL_3
0x40008dd	              0x5b	                                 pop rbx	        91	elfcomm.c	FUNCTION_3
0x40008de	              0xc3	                                     ret	        91	elfcomm.c	FUNCTION_3
make_qualified_name	SWITCH,0:ELSE,4:WHILE,0:FOR,0:IF,6:functions,0:DO,0:CALL,8	140
0x4001456	            0x4157	                                push r15	       890	elfcomm.c	FUNCTION_16
0x4001458	            0x4156	                                push r14	       890	elfcomm.c	FUNCTION_16
0x400145a	            0x4155	                                push r13	       890	elfcomm.c	FUNCTION_16
0x400145c	            0x4154	                                push r12	       890	elfcomm.c	FUNCTION_16
0x400145e	              0x55	                                push rbp	       890	elfcomm.c	FUNCTION_16
0x400145f	              0x53	                                push rbx	       890	elfcomm.c	FUNCTION_16
0x4001460	        0x4883ec08	                              sub rsp, 8	       890	elfcomm.c	FUNCTION_16
0x4001464	          0x4889fb	                            mov rbx, rdi	       890	elfcomm.c	FUNCTION_16
0x4001467	          0x4989f5	                            mov r13, rsi	       890	elfcomm.c	FUNCTION_16
0x400146a	          0x4989d4	                            mov r12, rdx	       890	elfcomm.c	FUNCTION_16
0x400146d	      0xba05000000	                              mov edx, 5	       891	elfcomm.c	FUNCTION_16	CALL_1
0x4001472	      0xbe00000000	                              mov esi, 0	       891	elfcomm.c	FUNCTION_16	CALL_1
0x4001477	      0xbf00000000	                              mov edi, 0	       891	elfcomm.c	FUNCTION_16	CALL_1
0x400147c	      0xe800000000	                          call 0x4001481	       891	elfcomm.c	FUNCTION_16	CALL_1
0x4001481	          0x4989c6	                            mov r14, rax	       891	elfcomm.c	FUNCTION_16	CALL_1
0x4001484	          0x488b2b	                    mov rbp, qword [rbx]	       895	elfcomm.c	FUNCTION_16	CALL_3
0x4001487	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       895	elfcomm.c	FUNCTION_16	CALL_3
0x400148e	      0xb800000000	                              mov eax, 0	       895	elfcomm.c	FUNCTION_16	CALL_3
0x4001493	          0x4889f1	                            mov rcx, rsi	       895	elfcomm.c	FUNCTION_16	CALL_3
0x4001496	          0x4889ef	                            mov rdi, rbp	       895	elfcomm.c	FUNCTION_16	CALL_3
0x4001499	            0xf2ae	              repne scasb al, byte [rdi]	       895	elfcomm.c	FUNCTION_16	CALL_3
0x400149b	          0x4889ca	                            mov rdx, rcx	       895	elfcomm.c	FUNCTION_16	CALL_3
0x400149e	          0x48f7d2	                                 not rdx	       895	elfcomm.c	FUNCTION_16	CALL_3
0x40014a1	          0x4889f1	                            mov rcx, rsi	       895	elfcomm.c	FUNCTION_16	CALL_3
0x40014a4	          0x4c89e7	                            mov rdi, r12	       895	elfcomm.c	FUNCTION_16	CALL_3
0x40014a7	            0xf2ae	              repne scasb al, byte [rdi]	       895	elfcomm.c	FUNCTION_16	CALL_3
0x40014a9	          0x4889c8	                            mov rax, rcx	       895	elfcomm.c	FUNCTION_16	CALL_3
0x40014ac	          0x48f7d0	                                 not rax	       895	elfcomm.c	FUNCTION_16	CALL_3
0x40014af	      0x488d5402fe	                lea rdx, [rdx + rax - 2]	       895	elfcomm.c	FUNCTION_16	CALL_3
0x40014b4	        0x4c8d7a03	                      lea r15, [rdx + 3]	       895	elfcomm.c	FUNCTION_16	CALL_3
0x40014b8	        0x837b5000	               cmp dword [rbx + 0x50], 0	       896	elfcomm.c	FUNCTION_16	IF_1
0x40014bc	            0x7449	                            je 0x4001507	       896	elfcomm.c	FUNCTION_16	IF_1
0x40014be	      0x48837b4000	               cmp qword [rbx + 0x40], 0	       897	elfcomm.c	FUNCTION_16	IF_1
0x40014c3	     0xf844e010000	                            je 0x4001617	       897	elfcomm.c	FUNCTION_16	IF_1
0x40014c9	        0x498b7d00	                    mov rdi, qword [r13]	       900	elfcomm.c	FUNCTION_16	IF_1	IF_2
0x40014cd	          0x4885ff	                           test rdi, rdi	       900	elfcomm.c	FUNCTION_16	IF_1	IF_2
0x40014d0	            0x7417	                            je 0x40014e9	       900	elfcomm.c	FUNCTION_16	IF_1	IF_2
0x40014d2	      0xb800000000	                              mov eax, 0	       901	elfcomm.c	FUNCTION_16	IF_1	CALL_4
0x40014d7	          0x4889f1	                            mov rcx, rsi	       901	elfcomm.c	FUNCTION_16	IF_1	CALL_4
0x40014da	            0xf2ae	              repne scasb al, byte [rdi]	       901	elfcomm.c	FUNCTION_16	IF_1	CALL_4
0x40014dc	          0x48f7d1	                                 not rcx	       901	elfcomm.c	FUNCTION_16	IF_1	CALL_4
0x40014df	      0x4c8d7c0a04	                lea r15, [rdx + rcx + 4]	       901	elfcomm.c	FUNCTION_16	IF_1	CALL_4
0x40014e4	      0xe955010000	                           jmp 0x400163e	       901	elfcomm.c	FUNCTION_16	IF_1	CALL_4
0x40014e9	      0xb800000000	                              mov eax, 0	       903	elfcomm.c	FUNCTION_16	IF_1	CALL_5
0x40014ee	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       903	elfcomm.c	FUNCTION_16	IF_1	CALL_5
0x40014f5	          0x4c89f7	                            mov rdi, r14	       903	elfcomm.c	FUNCTION_16	IF_1	CALL_5
0x40014f8	            0xf2ae	              repne scasb al, byte [rdi]	       903	elfcomm.c	FUNCTION_16	IF_1	CALL_5
0x40014fa	          0x48f7d1	                                 not rcx	       903	elfcomm.c	FUNCTION_16	IF_1	CALL_5
0x40014fd	      0x4c8d7c0a04	                lea r15, [rdx + rcx + 4]	       903	elfcomm.c	FUNCTION_16	IF_1	CALL_5
0x4001502	      0xe937010000	                           jmp 0x400163e	       903	elfcomm.c	FUNCTION_16	IF_1	CALL_5
0x4001507	          0x4c89ff	                            mov rdi, r15	       906	elfcomm.c	FUNCTION_16	CALL_6
0x400150a	      0xe800000000	                          call 0x400150f	       906	elfcomm.c	FUNCTION_16	CALL_6
0x400150f	          0x4889c3	                            mov rbx, rax	       906	elfcomm.c	FUNCTION_16	CALL_6
0x4001512	          0x4885c0	                           test rax, rax	       907	elfcomm.c	FUNCTION_16	IF_3
0x4001515	     0xf8594000000	                           jne 0x40015af	       907	elfcomm.c	FUNCTION_16	IF_3
0x400151b	      0xba05000000	                              mov edx, 5	       909	elfcomm.c	FUNCTION_16	IF_3	CALL_8
0x4001520	      0xbe00000000	                              mov esi, 0	       909	elfcomm.c	FUNCTION_16	IF_3	CALL_8
0x4001525	      0xbf00000000	                              mov edi, 0	       909	elfcomm.c	FUNCTION_16	IF_3	CALL_8
0x400152a	      0xe800000000	                          call 0x400152f	       909	elfcomm.c	FUNCTION_16	IF_3	CALL_8
0x400152f	          0x4889c7	                            mov rdi, rax	       909	elfcomm.c	FUNCTION_16	IF_3	CALL_8
0x4001532	      0xb800000000	                              mov eax, 0	       909	elfcomm.c	FUNCTION_16	IF_3	CALL_8
0x4001537	      0xe800000000	                          call 0x400153c	       909	elfcomm.c	FUNCTION_16	IF_3	CALL_8
0x400153c	      0xb800000000	                              mov eax, 0	       910	elfcomm.c	FUNCTION_16	IF_3
0x4001541	      0xe90d010000	                           jmp 0x4001653	       910	elfcomm.c	FUNCTION_16	IF_3
0x4001546	            0x4154	                                push r12	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001548	              0x50	                                push rax	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001549	          0x4989e9	                             mov r9, rbp	        64	stdio2.h	FUNCTION_19	CALL_1
0x400154c	    0x41b800000000	                              mov r8d, 0	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001552	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001559	      0xba01000000	                              mov edx, 1	        64	stdio2.h	FUNCTION_19	CALL_1
0x400155e	          0x4c89fe	                            mov rsi, r15	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001561	          0x4889df	                            mov rdi, rbx	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001564	      0xb800000000	                              mov eax, 0	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001569	      0xe800000000	                          call 0x400156e	        64	stdio2.h	FUNCTION_19	CALL_1
0x400156e	        0x4883c410	                           add rsp, 0x10	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001572	          0x4889d8	                            mov rax, rbx	       906	elfcomm.c	FUNCTION_16	CALL_6
0x4001575	      0xe9d9000000	                           jmp 0x4001653	       906	elfcomm.c	FUNCTION_16	CALL_6
0x400157a	            0x4154	                                push r12	        64	stdio2.h	FUNCTION_19	CALL_1
0x400157c	            0x4156	                                push r14	        64	stdio2.h	FUNCTION_19	CALL_1
0x400157e	          0x4989e9	                             mov r9, rbp	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001581	    0x41b800000000	                              mov r8d, 0	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001587	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	        64	stdio2.h	FUNCTION_19	CALL_1
0x400158e	      0xba01000000	                              mov edx, 1	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001593	          0x4c89fe	                            mov rsi, r15	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001596	          0x4889df	                            mov rdi, rbx	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001599	      0xb800000000	                              mov eax, 0	        64	stdio2.h	FUNCTION_19	CALL_1
0x400159e	      0xe800000000	                          call 0x40015a3	        64	stdio2.h	FUNCTION_19	CALL_1
0x40015a3	        0x4883c410	                           add rsp, 0x10	        64	stdio2.h	FUNCTION_19	CALL_1
0x40015a7	          0x4889d8	                            mov rax, rbx	       906	elfcomm.c	FUNCTION_16	CALL_6
0x40015aa	      0xe9a4000000	                           jmp 0x4001653	       906	elfcomm.c	FUNCTION_16	CALL_6
0x40015af	        0x4883ec08	                              sub rsp, 8	        64	stdio2.h	FUNCTION_19	CALL_1
0x40015b3	            0x4154	                                push r12	        64	stdio2.h	FUNCTION_19	CALL_1
0x40015b5	          0x4989e9	                             mov r9, rbp	        64	stdio2.h	FUNCTION_19	CALL_1
0x40015b8	    0x41b800000000	                              mov r8d, 0	        64	stdio2.h	FUNCTION_19	CALL_1
0x40015be	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	        64	stdio2.h	FUNCTION_19	CALL_1
0x40015c5	      0xba01000000	                              mov edx, 1	        64	stdio2.h	FUNCTION_19	CALL_1
0x40015ca	          0x4c89fe	                            mov rsi, r15	        64	stdio2.h	FUNCTION_19	CALL_1
0x40015cd	          0x4889c7	                            mov rdi, rax	        64	stdio2.h	FUNCTION_19	CALL_1
0x40015d0	      0xb800000000	                              mov eax, 0	        64	stdio2.h	FUNCTION_19	CALL_1
0x40015d5	      0xe800000000	                          call 0x40015da	        64	stdio2.h	FUNCTION_19	CALL_1
0x40015da	        0x4883c410	                           add rsp, 0x10	        64	stdio2.h	FUNCTION_19	CALL_1
0x40015de	          0x4889d8	                            mov rax, rbx	       906	elfcomm.c	FUNCTION_16	CALL_6
0x40015e1	            0xeb70	                           jmp 0x4001653	       906	elfcomm.c	FUNCTION_16	CALL_6
0x40015e3	        0x4883ec08	                              sub rsp, 8	        64	stdio2.h	FUNCTION_19	CALL_1
0x40015e7	            0x4154	                                push r12	        64	stdio2.h	FUNCTION_19	CALL_1
0x40015e9	          0x4989e9	                             mov r9, rbp	        64	stdio2.h	FUNCTION_19	CALL_1
0x40015ec	    0x41b800000000	                              mov r8d, 0	        64	stdio2.h	FUNCTION_19	CALL_1
0x40015f2	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	        64	stdio2.h	FUNCTION_19	CALL_1
0x40015f9	      0xba01000000	                              mov edx, 1	        64	stdio2.h	FUNCTION_19	CALL_1
0x40015fe	          0x4c89fe	                            mov rsi, r15	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001601	          0x4889df	                            mov rdi, rbx	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001604	      0xb800000000	                              mov eax, 0	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001609	      0xe800000000	                          call 0x400160e	        64	stdio2.h	FUNCTION_19	CALL_1
0x400160e	        0x4883c410	                           add rsp, 0x10	        64	stdio2.h	FUNCTION_19	CALL_1
0x4001612	          0x4889d8	                            mov rax, rbx	       906	elfcomm.c	FUNCTION_16	CALL_6
0x4001615	            0xeb3c	                           jmp 0x4001653	       906	elfcomm.c	FUNCTION_16	CALL_6
0x4001617	          0x4c89ff	                            mov rdi, r15	       906	elfcomm.c	FUNCTION_16	CALL_6
0x400161a	      0xe800000000	                          call 0x400161f	       906	elfcomm.c	FUNCTION_16	CALL_6
0x400161f	          0x4889c3	                            mov rbx, rax	       906	elfcomm.c	FUNCTION_16	CALL_6
0x4001622	          0x4885c0	                           test rax, rax	       907	elfcomm.c	FUNCTION_16	IF_3
0x4001625	            0x75bc	                           jne 0x40015e3	       907	elfcomm.c	FUNCTION_16	IF_3
0x4001627	      0xe9effeffff	                           jmp 0x400151b	       907	elfcomm.c	FUNCTION_16	IF_3
0x400162c	        0x498b4500	                    mov rax, qword [r13]	       916	elfcomm.c	FUNCTION_16	IF_4	IF_5
0x4001630	          0x4885c0	                           test rax, rax	       916	elfcomm.c	FUNCTION_16	IF_4	IF_5
0x4001633	     0xf850dffffff	                           jne 0x4001546	       916	elfcomm.c	FUNCTION_16	IF_4	IF_5
0x4001639	      0xe93cffffff	                           jmp 0x400157a	       916	elfcomm.c	FUNCTION_16	IF_4	IF_5
0x400163e	          0x4c89ff	                            mov rdi, r15	       906	elfcomm.c	FUNCTION_16	CALL_6
0x4001641	      0xe800000000	                          call 0x4001646	       906	elfcomm.c	FUNCTION_16	CALL_6
0x4001646	          0x4889c3	                            mov rbx, rax	       906	elfcomm.c	FUNCTION_16	CALL_6
0x4001649	          0x4885c0	                           test rax, rax	       907	elfcomm.c	FUNCTION_16	IF_3
0x400164c	            0x75de	                           jne 0x400162c	       907	elfcomm.c	FUNCTION_16	IF_3
0x400164e	      0xe9c8feffff	                           jmp 0x400151b	       907	elfcomm.c	FUNCTION_16	IF_3
0x4001653	        0x4883c408	                              add rsp, 8	       929	elfcomm.c	FUNCTION_16
0x4001657	              0x5b	                                 pop rbx	       929	elfcomm.c	FUNCTION_16
0x4001658	              0x5d	                                 pop rbp	       929	elfcomm.c	FUNCTION_16
0x4001659	            0x415c	                                 pop r12	       929	elfcomm.c	FUNCTION_16
0x400165b	            0x415d	                                 pop r13	       929	elfcomm.c	FUNCTION_16
0x400165d	            0x415e	                                 pop r14	       929	elfcomm.c	FUNCTION_16
0x400165f	            0x415f	                                 pop r15	       929	elfcomm.c	FUNCTION_16
0x4001661	              0xc3	                                     ret	       929	elfcomm.c	FUNCTION_16
get_archive_member_name_at	SWITCH,0:ELSE,0:WHILE,0:FOR,0:IF,3:functions,0:DO,0:CALL,10	63
0x4001107	              0x55	                                push rbp	       856	elfcomm.c	FUNCTION_15
0x4001108	              0x53	                                push rbx	       856	elfcomm.c	FUNCTION_15
0x4001109	        0x4883ec08	                              sub rsp, 8	       856	elfcomm.c	FUNCTION_15
0x400110d	          0x4889fb	                            mov rbx, rdi	       856	elfcomm.c	FUNCTION_15
0x4001110	          0x4889d5	                            mov rbp, rdx	       856	elfcomm.c	FUNCTION_15
0x4001113	        0x488b7f08	                mov rdi, qword [rdi + 8]	       859	elfcomm.c	FUNCTION_15	IF_1	CALL_1
0x4001117	      0xba00000000	                              mov edx, 0	       859	elfcomm.c	FUNCTION_15	IF_1	CALL_1
0x400111c	      0xe800000000	                          call 0x4001121	       859	elfcomm.c	FUNCTION_15	IF_1	CALL_1
0x4001121	            0x85c0	                           test eax, eax	       859	elfcomm.c	FUNCTION_15	IF_1	CALL_1
0x4001123	            0x7431	                            je 0x4001156	       859	elfcomm.c	FUNCTION_15	IF_1	CALL_1
0x4001125	          0x488b1b	                    mov rbx, qword [rbx]	       861	elfcomm.c	FUNCTION_15	IF_1	CALL_3
0x4001128	      0xba05000000	                              mov edx, 5	       861	elfcomm.c	FUNCTION_15	IF_1	CALL_3
0x400112d	      0xbe00000000	                              mov esi, 0	       861	elfcomm.c	FUNCTION_15	IF_1	CALL_3
0x4001132	      0xbf00000000	                              mov edi, 0	       861	elfcomm.c	FUNCTION_15	IF_1	CALL_3
0x4001137	      0xe800000000	                          call 0x400113c	       861	elfcomm.c	FUNCTION_15	IF_1	CALL_3
0x400113c	          0x4889de	                            mov rsi, rbx	       861	elfcomm.c	FUNCTION_15	IF_1	CALL_3
0x400113f	          0x4889c7	                            mov rdi, rax	       861	elfcomm.c	FUNCTION_15	IF_1	CALL_3
0x4001142	      0xb800000000	                              mov eax, 0	       861	elfcomm.c	FUNCTION_15	IF_1	CALL_3
0x4001147	      0xe800000000	                          call 0x400114c	       861	elfcomm.c	FUNCTION_15	IF_1	CALL_3
0x400114c	      0xb800000000	                              mov eax, 0	       862	elfcomm.c	FUNCTION_15	IF_1
0x4001151	      0xe99e000000	                           jmp 0x40011f4	       862	elfcomm.c	FUNCTION_15	IF_1
0x4001156	        0x488b4b08	                mov rcx, qword [rbx + 8]	       295	stdio2.h	FUNCTION_31	CALL_9
0x400115a	        0x488d7b58	                   lea rdi, [rbx + 0x58]	       864	elfcomm.c	FUNCTION_15	CALL_4
0x400115e	      0xba3c000000	                           mov edx, 0x3c	       295	stdio2.h	FUNCTION_31	CALL_9
0x4001163	      0xbe01000000	                              mov esi, 1	       295	stdio2.h	FUNCTION_31	CALL_9
0x4001168	      0xe800000000	                          call 0x400116d	       295	stdio2.h	FUNCTION_31	CALL_9
0x400116d	        0x4883f83c	                           cmp rax, 0x3c	       865	elfcomm.c	FUNCTION_15	IF_2
0x4001171	            0x742e	                            je 0x40011a1	       865	elfcomm.c	FUNCTION_15	IF_2
0x4001173	          0x488b1b	                    mov rbx, qword [rbx]	       867	elfcomm.c	FUNCTION_15	IF_2	CALL_6
0x4001176	      0xba05000000	                              mov edx, 5	       867	elfcomm.c	FUNCTION_15	IF_2	CALL_6
0x400117b	      0xbe00000000	                              mov esi, 0	       867	elfcomm.c	FUNCTION_15	IF_2	CALL_6
0x4001180	      0xbf00000000	                              mov edi, 0	       867	elfcomm.c	FUNCTION_15	IF_2	CALL_6
0x4001185	      0xe800000000	                          call 0x400118a	       867	elfcomm.c	FUNCTION_15	IF_2	CALL_6
0x400118a	          0x4889de	                            mov rsi, rbx	       867	elfcomm.c	FUNCTION_15	IF_2	CALL_6
0x400118d	          0x4889c7	                            mov rdi, rax	       867	elfcomm.c	FUNCTION_15	IF_2	CALL_6
0x4001190	      0xb800000000	                              mov eax, 0	       867	elfcomm.c	FUNCTION_15	IF_2	CALL_6
0x4001195	      0xe800000000	                          call 0x400119a	       867	elfcomm.c	FUNCTION_15	IF_2	CALL_6
0x400119a	      0xb800000000	                              mov eax, 0	       868	elfcomm.c	FUNCTION_15	IF_2
0x400119f	            0xeb53	                           jmp 0x40011f4	       868	elfcomm.c	FUNCTION_15	IF_2
0x40011a1	    0x488dbb920000	                   lea rdi, [rbx + 0x92]	       870	elfcomm.c	FUNCTION_15	IF_3	CALL_7
0x40011a8	      0xba02000000	                              mov edx, 2	       870	elfcomm.c	FUNCTION_15	IF_3	CALL_7
0x40011ad	      0xbe00000000	                              mov esi, 0	       870	elfcomm.c	FUNCTION_15	IF_3	CALL_7
0x40011b2	      0xe800000000	                          call 0x40011b7	       870	elfcomm.c	FUNCTION_15	IF_3	CALL_7
0x40011b7	            0x85c0	                           test eax, eax	       870	elfcomm.c	FUNCTION_15	IF_3	CALL_7
0x40011b9	            0x742e	                            je 0x40011e9	       870	elfcomm.c	FUNCTION_15	IF_3	CALL_7
0x40011bb	          0x488b1b	                    mov rbx, qword [rbx]	       872	elfcomm.c	FUNCTION_15	IF_3	CALL_9
0x40011be	      0xba05000000	                              mov edx, 5	       872	elfcomm.c	FUNCTION_15	IF_3	CALL_9
0x40011c3	      0xbe00000000	                              mov esi, 0	       872	elfcomm.c	FUNCTION_15	IF_3	CALL_9
0x40011c8	      0xbf00000000	                              mov edi, 0	       872	elfcomm.c	FUNCTION_15	IF_3	CALL_9
0x40011cd	      0xe800000000	                          call 0x40011d2	       872	elfcomm.c	FUNCTION_15	IF_3	CALL_9
0x40011d2	          0x4889de	                            mov rsi, rbx	       872	elfcomm.c	FUNCTION_15	IF_3	CALL_9
0x40011d5	          0x4889c7	                            mov rdi, rax	       872	elfcomm.c	FUNCTION_15	IF_3	CALL_9
0x40011d8	      0xb800000000	                              mov eax, 0	       872	elfcomm.c	FUNCTION_15	IF_3	CALL_9
0x40011dd	      0xe800000000	                          call 0x40011e2	       872	elfcomm.c	FUNCTION_15	IF_3	CALL_9
0x40011e2	      0xb800000000	                              mov eax, 0	       874	elfcomm.c	FUNCTION_15	IF_3
0x40011e7	            0xeb0b	                           jmp 0x40011f4	       874	elfcomm.c	FUNCTION_15	IF_3
0x40011e9	          0x4889ee	                            mov rsi, rbp	       877	elfcomm.c	FUNCTION_15	CALL_10
0x40011ec	          0x4889df	                            mov rdi, rbx	       877	elfcomm.c	FUNCTION_15	CALL_10
0x40011ef	      0xe800000000	                          call 0x40011f4	       877	elfcomm.c	FUNCTION_15	CALL_10
0x40011f4	        0x4883c408	                              add rsp, 8	       878	elfcomm.c	FUNCTION_15
0x40011f8	              0x5b	                                 pop rbx	       878	elfcomm.c	FUNCTION_15
0x40011f9	              0x5d	                                 pop rbp	       878	elfcomm.c	FUNCTION_15
0x40011fa	              0xc3	                                     ret	       878	elfcomm.c	FUNCTION_15
adjust_relative_path	SWITCH,0:ELSE,1:WHILE,0:FOR,0:IF,5:functions,0:DO,0:CALL,13	88
0x4000bcf	            0x4157	                                push r15	       398	elfcomm.c	FUNCTION_9
0x4000bd1	            0x4156	                                push r14	       398	elfcomm.c	FUNCTION_9
0x4000bd3	            0x4155	                                push r13	       398	elfcomm.c	FUNCTION_9
0x4000bd5	            0x4154	                                push r12	       398	elfcomm.c	FUNCTION_9
0x4000bd7	              0x55	                                push rbp	       398	elfcomm.c	FUNCTION_9
0x4000bd8	              0x53	                                push rbx	       398	elfcomm.c	FUNCTION_9
0x4000bd9	        0x4883ec08	                              sub rsp, 8	       398	elfcomm.c	FUNCTION_9
0x4000bdd	          0x4989ff	                            mov r15, rdi	       398	elfcomm.c	FUNCTION_9
0x4000be0	          0x4989f5	                            mov r13, rsi	       398	elfcomm.c	FUNCTION_9
0x4000be3	          0x4989d4	                            mov r12, rdx	       398	elfcomm.c	FUNCTION_9
0x4000be6	      0xe800000000	                          call 0x4000beb	       400	elfcomm.c	FUNCTION_9	CALL_1
0x4000beb	      0x41807d002f	                    cmp byte [r13], 0x2f	       409	elfcomm.c	FUNCTION_9	IF_1	CALL_2
0x4000bf0	            0x7405	                            je 0x4000bf7	       409	elfcomm.c	FUNCTION_9	IF_1	CALL_2
0x4000bf2	          0x4939c7	                            cmp r15, rax	       409	elfcomm.c	FUNCTION_9	IF_1	CALL_2
0x4000bf5	            0x7565	                           jne 0x4000c5c	       409	elfcomm.c	FUNCTION_9	IF_1	CALL_2
0x4000bf7	      0xb800000000	                              mov eax, 0	       413	elfcomm.c	FUNCTION_9	IF_1	IF_2
0x4000bfc	          0x4c89e7	                            mov rdi, r12	       412	elfcomm.c	FUNCTION_9	IF_1	IF_2
0x4000bff	        0x4883c701	                              add rdi, 1	       412	elfcomm.c	FUNCTION_9	IF_1	IF_2
0x4000c03	     0xf84f0000000	                            je 0x4000cf9	       412	elfcomm.c	FUNCTION_9	IF_1	IF_2
0x4000c09	      0xe800000000	                          call 0x4000c0e	       414	elfcomm.c	FUNCTION_9	IF_1	CALL_3
0x4000c0e	          0x4889c3	                            mov rbx, rax	       414	elfcomm.c	FUNCTION_9	IF_1	CALL_3
0x4000c11	          0x4885c0	                           test rax, rax	       415	elfcomm.c	FUNCTION_9	IF_1	IF_3
0x4000c14	            0x752b	                           jne 0x4000c41	       415	elfcomm.c	FUNCTION_9	IF_1	IF_3
0x4000c16	      0xba05000000	                              mov edx, 5	       417	elfcomm.c	FUNCTION_9	IF_1	IF_3	CALL_5
0x4000c1b	      0xbe00000000	                              mov esi, 0	       417	elfcomm.c	FUNCTION_9	IF_1	IF_3	CALL_5
0x4000c20	      0xbf00000000	                              mov edi, 0	       417	elfcomm.c	FUNCTION_9	IF_1	IF_3	CALL_5
0x4000c25	      0xe800000000	                          call 0x4000c2a	       417	elfcomm.c	FUNCTION_9	IF_1	IF_3	CALL_5
0x4000c2a	          0x4889c7	                            mov rdi, rax	       417	elfcomm.c	FUNCTION_9	IF_1	IF_3	CALL_5
0x4000c2d	      0xb800000000	                              mov eax, 0	       417	elfcomm.c	FUNCTION_9	IF_1	IF_3	CALL_5
0x4000c32	      0xe800000000	                          call 0x4000c37	       417	elfcomm.c	FUNCTION_9	IF_1	IF_3	CALL_5
0x4000c37	      0xb800000000	                              mov eax, 0	       418	elfcomm.c	FUNCTION_9	IF_1	IF_3
0x4000c3c	      0xe9b8000000	                           jmp 0x4000cf9	       418	elfcomm.c	FUNCTION_9	IF_1	IF_3
0x4000c41	          0x4c89e2	                            mov rdx, r12	        53	string3.h	FUNCTION_34	CALL_3
0x4000c44	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_34	CALL_3
0x4000c47	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_34	CALL_3
0x4000c4a	      0xe800000000	                          call 0x4000c4f	        53	string3.h	FUNCTION_34	CALL_3
0x4000c4f	      0x42c6042300	                 mov byte [rbx + r12], 0	       421	elfcomm.c	FUNCTION_9	IF_1
0x4000c54	          0x4889d8	                            mov rax, rbx	       414	elfcomm.c	FUNCTION_9	IF_1	CALL_3
0x4000c57	      0xe99d000000	                           jmp 0x4000cf9	       421	elfcomm.c	FUNCTION_9	IF_1
0x4000c5c	          0x4c29f8	                            sub rax, r15	       427	elfcomm.c	FUNCTION_9	ELSE_1
0x4000c5f	          0x4889c5	                            mov rbp, rax	       427	elfcomm.c	FUNCTION_9	ELSE_1
0x4000c62	        0x4e8d3420	                    lea r14, [rax + r12]	       429	elfcomm.c	FUNCTION_9	ELSE_1
0x4000c66	        0x498d7e01	                      lea rdi, [r14 + 1]	       429	elfcomm.c	FUNCTION_9	ELSE_1
0x4000c6a	          0x4839f8	                            cmp rax, rdi	       432	elfcomm.c	FUNCTION_9	ELSE_1	IF_4
0x4000c6d	            0x7705	                            ja 0x4000c74	       432	elfcomm.c	FUNCTION_9	ELSE_1	IF_4
0x4000c6f	          0x4939fc	                            cmp r12, rdi	       432	elfcomm.c	FUNCTION_9	ELSE_1	IF_4
0x4000c72	            0x762b	                           jbe 0x4000c9f	       432	elfcomm.c	FUNCTION_9	ELSE_1	IF_4
0x4000c74	      0xba05000000	                              mov edx, 5	       434	elfcomm.c	FUNCTION_9	ELSE_1	IF_4	CALL_8
0x4000c79	      0xbe00000000	                              mov esi, 0	       434	elfcomm.c	FUNCTION_9	ELSE_1	IF_4	CALL_8
0x4000c7e	      0xbf00000000	                              mov edi, 0	       434	elfcomm.c	FUNCTION_9	ELSE_1	IF_4	CALL_8
0x4000c83	      0xe800000000	                          call 0x4000c88	       434	elfcomm.c	FUNCTION_9	ELSE_1	IF_4	CALL_8
0x4000c88	          0x4c89e6	                            mov rsi, r12	       434	elfcomm.c	FUNCTION_9	ELSE_1	IF_4	CALL_8
0x4000c8b	          0x4889c7	                            mov rdi, rax	       434	elfcomm.c	FUNCTION_9	ELSE_1	IF_4	CALL_8
0x4000c8e	      0xb800000000	                              mov eax, 0	       434	elfcomm.c	FUNCTION_9	ELSE_1	IF_4	CALL_8
0x4000c93	      0xe800000000	                          call 0x4000c98	       434	elfcomm.c	FUNCTION_9	ELSE_1	IF_4	CALL_8
0x4000c98	      0xb800000000	                              mov eax, 0	       436	elfcomm.c	FUNCTION_9	ELSE_1	IF_4
0x4000c9d	            0xeb5a	                           jmp 0x4000cf9	       436	elfcomm.c	FUNCTION_9	ELSE_1	IF_4
0x4000c9f	      0xe800000000	                          call 0x4000ca4	       439	elfcomm.c	FUNCTION_9	ELSE_1	CALL_9
0x4000ca4	          0x4889c3	                            mov rbx, rax	       439	elfcomm.c	FUNCTION_9	ELSE_1	CALL_9
0x4000ca7	          0x4885c0	                           test rax, rax	       440	elfcomm.c	FUNCTION_9	ELSE_1	IF_5
0x4000caa	            0x7528	                           jne 0x4000cd4	       440	elfcomm.c	FUNCTION_9	ELSE_1	IF_5
0x4000cac	      0xba05000000	                              mov edx, 5	       442	elfcomm.c	FUNCTION_9	ELSE_1	IF_5	CALL_11
0x4000cb1	      0xbe00000000	                              mov esi, 0	       442	elfcomm.c	FUNCTION_9	ELSE_1	IF_5	CALL_11
0x4000cb6	      0xbf00000000	                              mov edi, 0	       442	elfcomm.c	FUNCTION_9	ELSE_1	IF_5	CALL_11
0x4000cbb	      0xe800000000	                          call 0x4000cc0	       442	elfcomm.c	FUNCTION_9	ELSE_1	IF_5	CALL_11
0x4000cc0	          0x4889c7	                            mov rdi, rax	       442	elfcomm.c	FUNCTION_9	ELSE_1	IF_5	CALL_11
0x4000cc3	      0xb800000000	                              mov eax, 0	       442	elfcomm.c	FUNCTION_9	ELSE_1	IF_5	CALL_11
0x4000cc8	      0xe800000000	                          call 0x4000ccd	       442	elfcomm.c	FUNCTION_9	ELSE_1	IF_5	CALL_11
0x4000ccd	      0xb800000000	                              mov eax, 0	       443	elfcomm.c	FUNCTION_9	ELSE_1	IF_5
0x4000cd2	            0xeb25	                           jmp 0x4000cf9	       443	elfcomm.c	FUNCTION_9	ELSE_1	IF_5
0x4000cd4	          0x4889ea	                            mov rdx, rbp	        53	string3.h	FUNCTION_34	CALL_3
0x4000cd7	          0x4c89fe	                            mov rsi, r15	        53	string3.h	FUNCTION_34	CALL_3
0x4000cda	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_34	CALL_3
0x4000cdd	      0xe800000000	                          call 0x4000ce2	        53	string3.h	FUNCTION_34	CALL_3
0x4000ce2	        0x488d3c2b	                    lea rdi, [rbx + rbp]	        53	string3.h	FUNCTION_34	CALL_3
0x4000ce6	          0x4c89e2	                            mov rdx, r12	        53	string3.h	FUNCTION_34	CALL_3
0x4000ce9	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_34	CALL_3
0x4000cec	      0xe800000000	                          call 0x4000cf1	        53	string3.h	FUNCTION_34	CALL_3
0x4000cf1	      0x42c6043300	                 mov byte [rbx + r14], 0	       447	elfcomm.c	FUNCTION_9	ELSE_1
0x4000cf6	          0x4889d8	                            mov rax, rbx	       439	elfcomm.c	FUNCTION_9	ELSE_1	CALL_9
0x4000cf9	        0x4883c408	                              add rsp, 8	       450	elfcomm.c	FUNCTION_9
0x4000cfd	              0x5b	                                 pop rbx	       450	elfcomm.c	FUNCTION_9
0x4000cfe	              0x5d	                                 pop rbp	       450	elfcomm.c	FUNCTION_9
0x4000cff	            0x415c	                                 pop r12	       450	elfcomm.c	FUNCTION_9
0x4000d01	            0x415d	                                 pop r13	       450	elfcomm.c	FUNCTION_9
0x4000d03	            0x415e	                                 pop r14	       450	elfcomm.c	FUNCTION_9
0x4000d05	            0x415f	                                 pop r15	       450	elfcomm.c	FUNCTION_9
0x4000d07	              0xc3	                                     ret	       450	elfcomm.c	FUNCTION_9
setup_archive	SWITCH,0:ELSE,2:WHILE,0:FOR,0:IF,14:functions,0:DO,0:CALL,26	208
0x4000d08	            0x4157	                                push r15	       612	elfcomm.c	FUNCTION_11
0x4000d0a	            0x4156	                                push r14	       612	elfcomm.c	FUNCTION_11
0x4000d0c	            0x4155	                                push r13	       612	elfcomm.c	FUNCTION_11
0x4000d0e	            0x4154	                                push r12	       612	elfcomm.c	FUNCTION_11
0x4000d10	              0x55	                                push rbp	       612	elfcomm.c	FUNCTION_11
0x4000d11	              0x53	                                push rbx	       612	elfcomm.c	FUNCTION_11
0x4000d12	        0x4883ec08	                              sub rsp, 8	       612	elfcomm.c	FUNCTION_11
0x4000d16	          0x4889fb	                            mov rbx, rdi	       612	elfcomm.c	FUNCTION_11
0x4000d19	          0x4989f5	                            mov r13, rsi	       612	elfcomm.c	FUNCTION_11
0x4000d1c	          0x4889d5	                            mov rbp, rdx	       612	elfcomm.c	FUNCTION_11
0x4000d1f	          0x4189cc	                           mov r12d, ecx	       612	elfcomm.c	FUNCTION_11
0x4000d22	          0x4589c7	                           mov r15d, r8d	       612	elfcomm.c	FUNCTION_11
0x4000d25	          0x4889f7	                            mov rdi, rsi	       615	elfcomm.c	FUNCTION_11	CALL_1
0x4000d28	      0xe800000000	                          call 0x4000d2d	       615	elfcomm.c	FUNCTION_11	CALL_1
0x4000d2d	          0x488903	                    mov qword [rbx], rax	       615	elfcomm.c	FUNCTION_11	CALL_1
0x4000d30	        0x48896b08	                mov qword [rbx + 8], rbp	       616	elfcomm.c	FUNCTION_11
0x4000d34	    0x48c743100000	               mov qword [rbx + 0x10], 0	       617	elfcomm.c	FUNCTION_11
0x4000d3c	    0x48c743180000	               mov qword [rbx + 0x18], 0	       618	elfcomm.c	FUNCTION_11
0x4000d44	    0x48c743200000	               mov qword [rbx + 0x20], 0	       619	elfcomm.c	FUNCTION_11
0x4000d4c	    0x48c743280000	               mov qword [rbx + 0x28], 0	       620	elfcomm.c	FUNCTION_11
0x4000d54	    0x48c743300000	               mov qword [rbx + 0x30], 0	       621	elfcomm.c	FUNCTION_11
0x4000d5c	    0x48c743380000	               mov qword [rbx + 0x38], 0	       622	elfcomm.c	FUNCTION_11
0x4000d64	    0x48c743400000	               mov qword [rbx + 0x40], 0	       623	elfcomm.c	FUNCTION_11
0x4000d6c	        0x44896350	            mov dword [rbx + 0x50], r12d	       624	elfcomm.c	FUNCTION_11
0x4000d70	    0xc74354000000	               mov dword [rbx + 0x54], 0	       625	elfcomm.c	FUNCTION_11
0x4000d77	    0x48c743480800	               mov qword [rbx + 0x48], 8	       626	elfcomm.c	FUNCTION_11
0x4000d7f	      0xba00000000	                              mov edx, 0	       629	elfcomm.c	FUNCTION_11	IF_1	CALL_2
0x4000d84	      0xbe08000000	                              mov esi, 8	       629	elfcomm.c	FUNCTION_11	IF_1	CALL_2
0x4000d89	          0x4889ef	                            mov rdi, rbp	       629	elfcomm.c	FUNCTION_11	IF_1	CALL_2
0x4000d8c	      0xe800000000	                          call 0x4000d91	       629	elfcomm.c	FUNCTION_11	IF_1	CALL_2
0x4000d91	            0x85c0	                           test eax, eax	       629	elfcomm.c	FUNCTION_11	IF_1	CALL_2
0x4000d93	            0x742f	                            je 0x4000dc4	       629	elfcomm.c	FUNCTION_11	IF_1	CALL_2
0x4000d95	      0xba05000000	                              mov edx, 5	       631	elfcomm.c	FUNCTION_11	IF_1	CALL_4
0x4000d9a	      0xbe00000000	                              mov esi, 0	       631	elfcomm.c	FUNCTION_11	IF_1	CALL_4
0x4000d9f	      0xbf00000000	                              mov edi, 0	       631	elfcomm.c	FUNCTION_11	IF_1	CALL_4
0x4000da4	      0xe800000000	                          call 0x4000da9	       631	elfcomm.c	FUNCTION_11	IF_1	CALL_4
0x4000da9	          0x4c89ee	                            mov rsi, r13	       631	elfcomm.c	FUNCTION_11	IF_1	CALL_4
0x4000dac	          0x4889c7	                            mov rdi, rax	       631	elfcomm.c	FUNCTION_11	IF_1	CALL_4
0x4000daf	      0xb800000000	                              mov eax, 0	       631	elfcomm.c	FUNCTION_11	IF_1	CALL_4
0x4000db4	      0xe800000000	                          call 0x4000db9	       631	elfcomm.c	FUNCTION_11	IF_1	CALL_4
0x4000db9	    0x41bc01000000	                             mov r12d, 1	       632	elfcomm.c	FUNCTION_11	IF_1
0x4000dbf	      0xe98a020000	                           jmp 0x400104e	       632	elfcomm.c	FUNCTION_11	IF_1
0x4000dc4	          0x4189c4	                           mov r12d, eax	       632	elfcomm.c	FUNCTION_11	IF_1
0x4000dc7	        0x4c8d7358	                   lea r14, [rbx + 0x58]	       634	elfcomm.c	FUNCTION_11	CALL_5
0x4000dcb	          0x4889e9	                            mov rcx, rbp	       295	stdio2.h	FUNCTION_31	CALL_9
0x4000dce	      0xba3c000000	                           mov edx, 0x3c	       295	stdio2.h	FUNCTION_31	CALL_9
0x4000dd3	      0xbe01000000	                              mov esi, 1	       295	stdio2.h	FUNCTION_31	CALL_9
0x4000dd8	          0x4c89f7	                            mov rdi, r14	       295	stdio2.h	FUNCTION_31	CALL_9
0x4000ddb	      0xe800000000	                          call 0x4000de0	       295	stdio2.h	FUNCTION_31	CALL_9
0x4000de0	        0x4883f83c	                           cmp rax, 0x3c	       635	elfcomm.c	FUNCTION_11	IF_2
0x4000de4	            0x7438	                            je 0x4000e1e	       635	elfcomm.c	FUNCTION_11	IF_2
0x4000de6	          0x4885c0	                           test rax, rax	       637	elfcomm.c	FUNCTION_11	IF_2	IF_3
0x4000de9	     0xf845f020000	                            je 0x400104e	       637	elfcomm.c	FUNCTION_11	IF_2	IF_3
0x4000def	      0xba05000000	                              mov edx, 5	       640	elfcomm.c	FUNCTION_11	IF_2	CALL_7
0x4000df4	      0xbe00000000	                              mov esi, 0	       640	elfcomm.c	FUNCTION_11	IF_2	CALL_7
0x4000df9	      0xbf00000000	                              mov edi, 0	       640	elfcomm.c	FUNCTION_11	IF_2	CALL_7
0x4000dfe	      0xe800000000	                          call 0x4000e03	       640	elfcomm.c	FUNCTION_11	IF_2	CALL_7
0x4000e03	          0x4c89ee	                            mov rsi, r13	       640	elfcomm.c	FUNCTION_11	IF_2	CALL_7
0x4000e06	          0x4889c7	                            mov rdi, rax	       640	elfcomm.c	FUNCTION_11	IF_2	CALL_7
0x4000e09	      0xb800000000	                              mov eax, 0	       640	elfcomm.c	FUNCTION_11	IF_2	CALL_7
0x4000e0e	      0xe800000000	                          call 0x4000e13	       640	elfcomm.c	FUNCTION_11	IF_2	CALL_7
0x4000e13	    0x41bc01000000	                             mov r12d, 1	       641	elfcomm.c	FUNCTION_11	IF_2
0x4000e19	      0xe930020000	                           jmp 0x400104e	       641	elfcomm.c	FUNCTION_11	IF_2
0x4000e1e	      0xbf00000000	                              mov edi, 0	       645	elfcomm.c	FUNCTION_11	IF_4	CALL_8
0x4000e23	      0xb910000000	                           mov ecx, 0x10	       645	elfcomm.c	FUNCTION_11	IF_4	CALL_8
0x4000e28	          0x4c89f6	                            mov rsi, r14	       645	elfcomm.c	FUNCTION_11	IF_4	CALL_8
0x4000e2b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       645	elfcomm.c	FUNCTION_11	IF_4	CALL_8
0x4000e2d	           0xf97c2	                                 seta dl	       645	elfcomm.c	FUNCTION_11	IF_4	CALL_8
0x4000e30	           0xf92c0	                                 setb al	       645	elfcomm.c	FUNCTION_11	IF_4	CALL_8
0x4000e33	            0x38c2	                              cmp dl, al	       645	elfcomm.c	FUNCTION_11	IF_4	CALL_8
0x4000e35	            0x7519	                           jne 0x4000e50	       645	elfcomm.c	FUNCTION_11	IF_4	CALL_8
0x4000e37	          0x4489fa	                           mov edx, r15d	       647	elfcomm.c	FUNCTION_11	IF_4	IF_5	CALL_9
0x4000e3a	      0xbe04000000	                              mov esi, 4	       647	elfcomm.c	FUNCTION_11	IF_4	IF_5	CALL_9
0x4000e3f	          0x4889df	                            mov rdi, rbx	       647	elfcomm.c	FUNCTION_11	IF_4	IF_5	CALL_9
0x4000e42	      0xe8c7f4ffff	call sym.process_archive_index_and_symbols	       647	elfcomm.c	FUNCTION_11	IF_4	IF_5	CALL_9
0x4000e47	            0x85c0	                           test eax, eax	       647	elfcomm.c	FUNCTION_11	IF_4	IF_5	CALL_9
0x4000e49	            0x756c	                           jne 0x4000eb7	       647	elfcomm.c	FUNCTION_11	IF_4	IF_5	CALL_9
0x4000e4b	      0xe9f0010000	                           jmp 0x4001040	       647	elfcomm.c	FUNCTION_11	IF_4	IF_5	CALL_9
0x4000e50	      0xbf00000000	                              mov edi, 0	       650	elfcomm.c	FUNCTION_11	ELSE_1	IF_6	CALL_10
0x4000e55	      0xb910000000	                           mov ecx, 0x10	       650	elfcomm.c	FUNCTION_11	ELSE_1	IF_6	CALL_10
0x4000e5a	          0x4c89f6	                            mov rsi, r14	       650	elfcomm.c	FUNCTION_11	ELSE_1	IF_6	CALL_10
0x4000e5d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       650	elfcomm.c	FUNCTION_11	ELSE_1	IF_6	CALL_10
0x4000e5f	           0xf97c2	                                 seta dl	       650	elfcomm.c	FUNCTION_11	ELSE_1	IF_6	CALL_10
0x4000e62	           0xf92c0	                                 setb al	       650	elfcomm.c	FUNCTION_11	ELSE_1	IF_6	CALL_10
0x4000e65	            0x38c2	                              cmp dl, al	       650	elfcomm.c	FUNCTION_11	ELSE_1	IF_6	CALL_10
0x4000e67	            0x7520	                           jne 0x4000e89	       650	elfcomm.c	FUNCTION_11	ELSE_1	IF_6	CALL_10
0x4000e69	    0xc74354010000	               mov dword [rbx + 0x54], 1	       652	elfcomm.c	FUNCTION_11	ELSE_1	IF_6
0x4000e70	          0x4489fa	                           mov edx, r15d	       653	elfcomm.c	FUNCTION_11	ELSE_1	IF_6	IF_7	CALL_11
0x4000e73	      0xbe08000000	                              mov esi, 8	       653	elfcomm.c	FUNCTION_11	ELSE_1	IF_6	IF_7	CALL_11
0x4000e78	          0x4889df	                            mov rdi, rbx	       653	elfcomm.c	FUNCTION_11	ELSE_1	IF_6	IF_7	CALL_11
0x4000e7b	      0xe88ef4ffff	call sym.process_archive_index_and_symbols	       653	elfcomm.c	FUNCTION_11	ELSE_1	IF_6	IF_7	CALL_11
0x4000e80	            0x85c0	                           test eax, eax	       653	elfcomm.c	FUNCTION_11	ELSE_1	IF_6	IF_7	CALL_11
0x4000e82	            0x7533	                           jne 0x4000eb7	       653	elfcomm.c	FUNCTION_11	ELSE_1	IF_6	IF_7	CALL_11
0x4000e84	      0xe9bf010000	                           jmp 0x4001048	       653	elfcomm.c	FUNCTION_11	ELSE_1	IF_6	IF_7	CALL_11
0x4000e89	          0x4585ff	                         test r15d, r15d	       656	elfcomm.c	FUNCTION_11	ELSE_2	IF_8
0x4000e8c	            0x7429	                            je 0x4000eb7	       656	elfcomm.c	FUNCTION_11	ELSE_2	IF_8
0x4000e8e	      0xba05000000	                              mov edx, 5	       657	elfcomm.c	FUNCTION_11	ELSE_2	IF_8
0x4000e93	      0xbe00000000	                              mov esi, 0	       657	elfcomm.c	FUNCTION_11	ELSE_2	IF_8
0x4000e98	      0xbf00000000	                              mov edi, 0	       657	elfcomm.c	FUNCTION_11	ELSE_2	IF_8
0x4000e9d	      0xe800000000	                          call 0x4000ea2	       657	elfcomm.c	FUNCTION_11	ELSE_2	IF_8
0x4000ea2	          0x4c89ea	                            mov rdx, r13	       104	stdio2.h	CALL_13
0x4000ea5	          0x4889c6	                            mov rsi, rax	       104	stdio2.h	CALL_13
0x4000ea8	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	CALL_13
0x4000ead	      0xb800000000	                              mov eax, 0	       104	stdio2.h	CALL_13
0x4000eb2	      0xe800000000	                          call 0x4000eb7	       104	stdio2.h	CALL_13
0x4000eb7	      0xbf00000000	                              mov edi, 0	       659	elfcomm.c	FUNCTION_11	IF_9	CALL_13
0x4000ebc	      0xb910000000	                           mov ecx, 0x10	       659	elfcomm.c	FUNCTION_11	IF_9	CALL_13
0x4000ec1	          0x4c89f6	                            mov rsi, r14	       659	elfcomm.c	FUNCTION_11	IF_9	CALL_13
0x4000ec4	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       659	elfcomm.c	FUNCTION_11	IF_9	CALL_13
0x4000ec6	        0x410f97c6	                               seta r14b	       659	elfcomm.c	FUNCTION_11	IF_9	CALL_13
0x4000eca	           0xf92c0	                                 setb al	       659	elfcomm.c	FUNCTION_11	IF_9	CALL_13
0x4000ecd	          0x4129c6	                           sub r14d, eax	       659	elfcomm.c	FUNCTION_11	IF_9	CALL_13
0x4000ed0	        0x450fbef6	                        movsx r14d, r14b	       659	elfcomm.c	FUNCTION_11	IF_9	CALL_13
0x4000ed4	          0x4585f6	                         test r14d, r14d	       659	elfcomm.c	FUNCTION_11	IF_9	CALL_13
0x4000ed7	     0xf8571010000	                           jne 0x400104e	       659	elfcomm.c	FUNCTION_11	IF_9	CALL_13
0x4000edd	    0x440fb6bb9200	          movzx r15d, byte [rbx + 0x92] 	       662	elfcomm.c	FUNCTION_11	IF_9
0x4000ee5	    0xc68392000000	                mov byte [rbx + 0x92], 0	       663	elfcomm.c	FUNCTION_11	IF_9
0x4000eec	    0x488dbb880000	                   lea rdi, [rbx + 0x88]	       664	elfcomm.c	FUNCTION_11	IF_9	CALL_14
0x4000ef3	      0xba0a000000	                            mov edx, 0xa	       664	elfcomm.c	FUNCTION_11	IF_9	CALL_14
0x4000ef8	      0xbe00000000	                              mov esi, 0	       664	elfcomm.c	FUNCTION_11	IF_9	CALL_14
0x4000efd	      0xe800000000	                          call 0x4000f02	       664	elfcomm.c	FUNCTION_11	IF_9	CALL_14
0x4000f02	          0x4989c4	                            mov r12, rax	       664	elfcomm.c	FUNCTION_11	IF_9	CALL_14
0x4000f05	        0x48894338	             mov qword [rbx + 0x38], rax	       664	elfcomm.c	FUNCTION_11	IF_9	CALL_14
0x4000f09	    0x4488bb920000	             mov byte [rbx + 0x92], r15b	       665	elfcomm.c	FUNCTION_11	IF_9
0x4000f10	        0x4883f807	                              cmp rax, 7	       667	elfcomm.c	FUNCTION_11	IF_9	IF_10
0x4000f14	            0x7732	                            ja 0x4000f48	       667	elfcomm.c	FUNCTION_11	IF_9	IF_10
0x4000f16	      0xba05000000	                              mov edx, 5	       669	elfcomm.c	FUNCTION_11	IF_9	IF_10	CALL_16
0x4000f1b	      0xbe00000000	                              mov esi, 0	       669	elfcomm.c	FUNCTION_11	IF_9	IF_10	CALL_16
0x4000f20	      0xbf00000000	                              mov edi, 0	       669	elfcomm.c	FUNCTION_11	IF_9	IF_10	CALL_16
0x4000f25	      0xe800000000	                          call 0x4000f2a	       669	elfcomm.c	FUNCTION_11	IF_9	IF_10	CALL_16
0x4000f2a	          0x4c89e2	                            mov rdx, r12	       669	elfcomm.c	FUNCTION_11	IF_9	IF_10	CALL_16
0x4000f2d	          0x4c89ee	                            mov rsi, r13	       669	elfcomm.c	FUNCTION_11	IF_9	IF_10	CALL_16
0x4000f30	          0x4889c7	                            mov rdi, rax	       669	elfcomm.c	FUNCTION_11	IF_9	IF_10	CALL_16
0x4000f33	      0xb800000000	                              mov eax, 0	       669	elfcomm.c	FUNCTION_11	IF_9	IF_10	CALL_16
0x4000f38	      0xe800000000	                          call 0x4000f3d	       669	elfcomm.c	FUNCTION_11	IF_9	IF_10	CALL_16
0x4000f3d	    0x41bc01000000	                             mov r12d, 1	       671	elfcomm.c	FUNCTION_11	IF_9	IF_10
0x4000f43	      0xe906010000	                           jmp 0x400104e	       671	elfcomm.c	FUNCTION_11	IF_9	IF_10
0x4000f48	          0x4885c0	                           test rax, rax	       674	elfcomm.c	FUNCTION_11	IF_9	IF_11
0x4000f4b	            0x7932	                           jns 0x4000f7f	       674	elfcomm.c	FUNCTION_11	IF_9	IF_11
0x4000f4d	      0xba05000000	                              mov edx, 5	       676	elfcomm.c	FUNCTION_11	IF_9	IF_11	CALL_18
0x4000f52	      0xbe00000000	                              mov esi, 0	       676	elfcomm.c	FUNCTION_11	IF_9	IF_11	CALL_18
0x4000f57	      0xbf00000000	                              mov edi, 0	       676	elfcomm.c	FUNCTION_11	IF_9	IF_11	CALL_18
0x4000f5c	      0xe800000000	                          call 0x4000f61	       676	elfcomm.c	FUNCTION_11	IF_9	IF_11	CALL_18
0x4000f61	          0x4c89e2	                            mov rdx, r12	       676	elfcomm.c	FUNCTION_11	IF_9	IF_11	CALL_18
0x4000f64	          0x4c89ee	                            mov rsi, r13	       676	elfcomm.c	FUNCTION_11	IF_9	IF_11	CALL_18
0x4000f67	          0x4889c7	                            mov rdi, rax	       676	elfcomm.c	FUNCTION_11	IF_9	IF_11	CALL_18
0x4000f6a	      0xb800000000	                              mov eax, 0	       676	elfcomm.c	FUNCTION_11	IF_9	IF_11	CALL_18
0x4000f6f	      0xe800000000	                          call 0x4000f74	       676	elfcomm.c	FUNCTION_11	IF_9	IF_11	CALL_18
0x4000f74	    0x41bc01000000	                             mov r12d, 1	       678	elfcomm.c	FUNCTION_11	IF_9	IF_11
0x4000f7a	      0xe9cf000000	                           jmp 0x400104e	       678	elfcomm.c	FUNCTION_11	IF_9	IF_11
0x4000f7f	        0x488b4348	            mov rax, qword [rbx + 0x48] 	       681	elfcomm.c	FUNCTION_11	IF_9
0x4000f83	      0x498d44043c	            lea rax, [r12 + rax + 0x3c] 	       681	elfcomm.c	FUNCTION_11	IF_9
0x4000f88	        0x48894348	             mov qword [rbx + 0x48], rax	       681	elfcomm.c	FUNCTION_11	IF_9
0x4000f8c	      0x498d7c2401	                      lea rdi, [r12 + 1]	       684	elfcomm.c	FUNCTION_11	IF_9	CALL_19
0x4000f91	      0xe800000000	                          call 0x4000f96	       684	elfcomm.c	FUNCTION_11	IF_9	CALL_19
0x4000f96	        0x48894330	             mov qword [rbx + 0x30], rax	       684	elfcomm.c	FUNCTION_11	IF_9	CALL_19
0x4000f9a	          0x4885c0	                           test rax, rax	       685	elfcomm.c	FUNCTION_11	IF_9	IF_12
0x4000f9d	            0x752c	                           jne 0x4000fcb	       685	elfcomm.c	FUNCTION_11	IF_9	IF_12
0x4000f9f	      0xba05000000	                              mov edx, 5	       687	elfcomm.c	FUNCTION_11	IF_9	IF_12	CALL_21
0x4000fa4	      0xbe00000000	                              mov esi, 0	       687	elfcomm.c	FUNCTION_11	IF_9	IF_12	CALL_21
0x4000fa9	      0xbf00000000	                              mov edi, 0	       687	elfcomm.c	FUNCTION_11	IF_9	IF_12	CALL_21
0x4000fae	      0xe800000000	                          call 0x4000fb3	       687	elfcomm.c	FUNCTION_11	IF_9	IF_12	CALL_21
0x4000fb3	          0x4889c7	                            mov rdi, rax	       687	elfcomm.c	FUNCTION_11	IF_9	IF_12	CALL_21
0x4000fb6	      0xb800000000	                              mov eax, 0	       687	elfcomm.c	FUNCTION_11	IF_9	IF_12	CALL_21
0x4000fbb	      0xe800000000	                          call 0x4000fc0	       687	elfcomm.c	FUNCTION_11	IF_9	IF_12	CALL_21
0x4000fc0	    0x41bc01000000	                             mov r12d, 1	       688	elfcomm.c	FUNCTION_11	IF_9	IF_12
0x4000fc6	      0xe983000000	                           jmp 0x400104e	       688	elfcomm.c	FUNCTION_11	IF_9	IF_12
0x4000fcb	          0x4889e9	                            mov rcx, rbp	       295	stdio2.h	FUNCTION_31	CALL_9
0x4000fce	      0xba01000000	                              mov edx, 1	       295	stdio2.h	FUNCTION_31	CALL_9
0x4000fd3	          0x4c89e6	                            mov rsi, r12	       295	stdio2.h	FUNCTION_31	CALL_9
0x4000fd6	          0x4889c7	                            mov rdi, rax	       295	stdio2.h	FUNCTION_31	CALL_9
0x4000fd9	      0xe800000000	                          call 0x4000fde	       295	stdio2.h	FUNCTION_31	CALL_9
0x4000fde	        0x4883f801	                              cmp rax, 1	       691	elfcomm.c	FUNCTION_11	IF_9	IF_13	CALL_22
0x4000fe2	            0x743d	                            je 0x4001021	       691	elfcomm.c	FUNCTION_11	IF_9	IF_13	CALL_22
0x4000fe4	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	       693	elfcomm.c	FUNCTION_11	IF_9	IF_13	CALL_23
0x4000fe8	      0xe800000000	                          call 0x4000fed	       693	elfcomm.c	FUNCTION_11	IF_9	IF_13	CALL_23
0x4000fed	    0x48c743300000	               mov qword [rbx + 0x30], 0	       694	elfcomm.c	FUNCTION_11	IF_9	IF_13
0x4000ff5	      0xba05000000	                              mov edx, 5	       695	elfcomm.c	FUNCTION_11	IF_9	IF_13	CALL_25
0x4000ffa	      0xbe00000000	                              mov esi, 0	       695	elfcomm.c	FUNCTION_11	IF_9	IF_13	CALL_25
0x4000fff	      0xbf00000000	                              mov edi, 0	       695	elfcomm.c	FUNCTION_11	IF_9	IF_13	CALL_25
0x4001004	      0xe800000000	                          call 0x4001009	       695	elfcomm.c	FUNCTION_11	IF_9	IF_13	CALL_25
0x4001009	          0x4c89ee	                            mov rsi, r13	       695	elfcomm.c	FUNCTION_11	IF_9	IF_13	CALL_25
0x400100c	          0x4889c7	                            mov rdi, rax	       695	elfcomm.c	FUNCTION_11	IF_9	IF_13	CALL_25
0x400100f	      0xb800000000	                              mov eax, 0	       695	elfcomm.c	FUNCTION_11	IF_9	IF_13	CALL_25
0x4001014	      0xe800000000	                          call 0x4001019	       695	elfcomm.c	FUNCTION_11	IF_9	IF_13	CALL_25
0x4001019	    0x41bc01000000	                             mov r12d, 1	       697	elfcomm.c	FUNCTION_11	IF_9	IF_13
0x400101f	            0xeb2d	                           jmp 0x400104e	       697	elfcomm.c	FUNCTION_11	IF_9	IF_13
0x4001021	        0xf6433801	               test byte [rbx + 0x38], 1	       700	elfcomm.c	FUNCTION_11	IF_9	IF_14
0x4001025	            0x7408	                            je 0x400102f	       700	elfcomm.c	FUNCTION_11	IF_9	IF_14
0x4001027	          0x4889ef	                            mov rdi, rbp	       701	elfcomm.c	FUNCTION_11	IF_9	CALL_26
0x400102a	      0xe800000000	                          call 0x400102f	       701	elfcomm.c	FUNCTION_11	IF_9	CALL_26
0x400102f	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	       703	elfcomm.c	FUNCTION_11	IF_9
0x4001033	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       703	elfcomm.c	FUNCTION_11	IF_9
0x4001037	        0xc6040200	                 mov byte [rdx + rax], 0	       703	elfcomm.c	FUNCTION_11	IF_9
0x400103b	          0x4589f4	                          mov r12d, r14d	       706	elfcomm.c	FUNCTION_11
0x400103e	            0xeb0e	                           jmp 0x400104e	       706	elfcomm.c	FUNCTION_11
0x4001040	    0x41bc01000000	                             mov r12d, 1	       648	elfcomm.c	FUNCTION_11	IF_4	IF_5
0x4001046	            0xeb06	                           jmp 0x400104e	       648	elfcomm.c	FUNCTION_11	IF_4	IF_5
0x4001048	    0x41bc01000000	                             mov r12d, 1	       654	elfcomm.c	FUNCTION_11	ELSE_1	IF_6	IF_7
0x400104e	          0x4489e0	                           mov eax, r12d	       707	elfcomm.c	FUNCTION_11
0x4001051	        0x4883c408	                              add rsp, 8	       707	elfcomm.c	FUNCTION_11
0x4001055	              0x5b	                                 pop rbx	       707	elfcomm.c	FUNCTION_11
0x4001056	              0x5d	                                 pop rbp	       707	elfcomm.c	FUNCTION_11
0x4001057	            0x415c	                                 pop r12	       707	elfcomm.c	FUNCTION_11
0x4001059	            0x415d	                                 pop r13	       707	elfcomm.c	FUNCTION_11
0x400105b	            0x415e	                                 pop r14	       707	elfcomm.c	FUNCTION_11
0x400105d	            0x415f	                                 pop r15	       707	elfcomm.c	FUNCTION_11
0x400105f	              0xc3	                                     ret	       707	elfcomm.c	FUNCTION_11
byte_get_64	SWITCH,0:ELSE,1:WHILE,0:FOR,0:IF,1:functions,0:DO,0:CALL,4	28
0x4000b6b	            0x4154	                                push r12	       377	elfcomm.c	FUNCTION_8
0x4000b6d	              0x55	                                push rbp	       377	elfcomm.c	FUNCTION_8
0x4000b6e	              0x53	                                push rbx	       377	elfcomm.c	FUNCTION_8
0x4000b6f	          0x4889fb	                            mov rbx, rdi	       377	elfcomm.c	FUNCTION_8
0x4000b72	          0x4989f4	                            mov r12, rsi	       377	elfcomm.c	FUNCTION_8
0x4000b75	          0x4889d5	                            mov rbp, rdx	       377	elfcomm.c	FUNCTION_8
0x4000b78	    0x48813d000000	               cmp qword [0x04000b83], 0	       378	elfcomm.c	FUNCTION_8	IF_1
0x4000b83	            0x7522	                           jne 0x4000ba7	       378	elfcomm.c	FUNCTION_8	IF_1
0x4000b85	      0xbe04000000	                              mov esi, 4	       380	elfcomm.c	FUNCTION_8	IF_1	CALL_1
0x4000b8a	      0xe800000000	                          call 0x4000b8f	       380	elfcomm.c	FUNCTION_8	IF_1	CALL_1
0x4000b8f	        0x49890424	                    mov qword [r12], rax	       380	elfcomm.c	FUNCTION_8	IF_1	CALL_1
0x4000b93	        0x488d7b04	                      lea rdi, [rbx + 4]	       381	elfcomm.c	FUNCTION_8	IF_1	CALL_2
0x4000b97	      0xbe04000000	                              mov esi, 4	       381	elfcomm.c	FUNCTION_8	IF_1	CALL_2
0x4000b9c	      0xe800000000	                          call 0x4000ba1	       381	elfcomm.c	FUNCTION_8	IF_1	CALL_2
0x4000ba1	        0x48894500	                    mov qword [rbp], rax	       381	elfcomm.c	FUNCTION_8	IF_1	CALL_2
0x4000ba5	            0xeb23	                           jmp 0x4000bca	       381	elfcomm.c	FUNCTION_8	IF_1	CALL_2
0x4000ba7	        0x488d7f04	                      lea rdi, [rdi + 4]	       385	elfcomm.c	FUNCTION_8	ELSE_1	CALL_3
0x4000bab	      0xbe04000000	                              mov esi, 4	       385	elfcomm.c	FUNCTION_8	ELSE_1	CALL_3
0x4000bb0	      0xe800000000	                          call 0x4000bb5	       385	elfcomm.c	FUNCTION_8	ELSE_1	CALL_3
0x4000bb5	        0x49890424	                    mov qword [r12], rax	       385	elfcomm.c	FUNCTION_8	ELSE_1	CALL_3
0x4000bb9	      0xbe04000000	                              mov esi, 4	       386	elfcomm.c	FUNCTION_8	ELSE_1	CALL_4
0x4000bbe	          0x4889df	                            mov rdi, rbx	       386	elfcomm.c	FUNCTION_8	ELSE_1	CALL_4
0x4000bc1	      0xe800000000	                          call 0x4000bc6	       386	elfcomm.c	FUNCTION_8	ELSE_1	CALL_4
0x4000bc6	        0x48894500	                    mov qword [rbp], rax	       386	elfcomm.c	FUNCTION_8	ELSE_1	CALL_4
0x4000bca	              0x5b	                                 pop rbx	       389	elfcomm.c	FUNCTION_8
0x4000bcb	              0x5d	                                 pop rbp	       389	elfcomm.c	FUNCTION_8
0x4000bcc	            0x415c	                                 pop r12	       389	elfcomm.c	FUNCTION_8
0x4000bce	              0xc3	                                     ret	       389	elfcomm.c	FUNCTION_8
byte_put_big_endian	SWITCH,1:ELSE,0:WHILE,0:FOR,0:IF,0:functions,0:DO,0:CALL,3	36
0x40008df	              0x53	                                push rbx	        95	elfcomm.c	FUNCTION_4
0x40008e0	            0x89d3	                            mov ebx, edx	        95	elfcomm.c	FUNCTION_4
0x40008e2	          0x83fa08	                              cmp edx, 8	        96	elfcomm.c	FUNCTION_4	SWITCH_1
0x40008e5	            0x774c	                            ja 0x4000933	        96	elfcomm.c	FUNCTION_4	SWITCH_1
0x40008e7	            0x89d0	                            mov eax, edx	        96	elfcomm.c	FUNCTION_4	SWITCH_1
0x40008e9	    0xff24c5000000	                       jmp qword [rax*8]	        96	elfcomm.c	FUNCTION_4	SWITCH_1
0x40008f0	        0x40887707	                 mov byte [rdi + 7], sil	        99	elfcomm.c	FUNCTION_4	SWITCH_1
0x40008f4	          0x4889f0	                            mov rax, rsi	       100	elfcomm.c	FUNCTION_4	SWITCH_1
0x40008f7	        0x48c1e808	                              shr rax, 8	       100	elfcomm.c	FUNCTION_4	SWITCH_1
0x40008fb	          0x884706	                  mov byte [rdi + 6], al	       100	elfcomm.c	FUNCTION_4	SWITCH_1
0x40008fe	          0x4889f0	                            mov rax, rsi	       101	elfcomm.c	FUNCTION_4	SWITCH_1
0x4000901	        0x48c1e810	                           shr rax, 0x10	       101	elfcomm.c	FUNCTION_4	SWITCH_1
0x4000905	          0x884705	                  mov byte [rdi + 5], al	       101	elfcomm.c	FUNCTION_4	SWITCH_1
0x4000908	          0x4889f0	                            mov rax, rsi	       102	elfcomm.c	FUNCTION_4	SWITCH_1
0x400090b	        0x48c1e818	                           shr rax, 0x18	       102	elfcomm.c	FUNCTION_4	SWITCH_1
0x400090f	          0x884704	                  mov byte [rdi + 4], al	       102	elfcomm.c	FUNCTION_4	SWITCH_1
0x4000912	        0x48c1ee20	                           shr rsi, 0x20	       104	elfcomm.c	FUNCTION_4	SWITCH_1
0x4000916	        0x40887703	                 mov byte [rdi + 3], sil	       107	elfcomm.c	FUNCTION_4	SWITCH_1
0x400091a	        0x48c1ee08	                              shr rsi, 8	       108	elfcomm.c	FUNCTION_4	SWITCH_1
0x400091e	        0x40887702	                 mov byte [rdi + 2], sil	       111	elfcomm.c	FUNCTION_4	SWITCH_1
0x4000922	        0x48c1ee08	                              shr rsi, 8	       112	elfcomm.c	FUNCTION_4	SWITCH_1
0x4000926	        0x40887701	                 mov byte [rdi + 1], sil	       115	elfcomm.c	FUNCTION_4	SWITCH_1
0x400092a	        0x48c1ee08	                              shr rsi, 8	       116	elfcomm.c	FUNCTION_4	SWITCH_1
0x400092e	          0x408837	                     mov byte [rdi], sil	       119	elfcomm.c	FUNCTION_4	SWITCH_1
0x4000931	            0xeb28	                           jmp 0x400095b	       126	elfcomm.c	FUNCTION_4
0x4000933	      0xba05000000	                              mov edx, 5	       123	elfcomm.c	FUNCTION_4	SWITCH_1	CALL_2
0x4000938	      0xbe00000000	                              mov esi, 0	       123	elfcomm.c	FUNCTION_4	SWITCH_1	CALL_2
0x400093d	      0xbf00000000	                              mov edi, 0	       123	elfcomm.c	FUNCTION_4	SWITCH_1	CALL_2
0x4000942	      0xe800000000	                          call 0x4000947	       123	elfcomm.c	FUNCTION_4	SWITCH_1	CALL_2
0x4000947	            0x89de	                            mov esi, ebx	       123	elfcomm.c	FUNCTION_4	SWITCH_1	CALL_2
0x4000949	          0x4889c7	                            mov rdi, rax	       123	elfcomm.c	FUNCTION_4	SWITCH_1	CALL_2
0x400094c	      0xb800000000	                              mov eax, 0	       123	elfcomm.c	FUNCTION_4	SWITCH_1	CALL_2
0x4000951	      0xe800000000	                          call 0x4000956	       123	elfcomm.c	FUNCTION_4	SWITCH_1	CALL_2
0x4000956	      0xe800000000	                          call 0x400095b	       124	elfcomm.c	FUNCTION_4	SWITCH_1	CALL_3
0x400095b	              0x5b	                                 pop rbx	       126	elfcomm.c	FUNCTION_4
0x400095c	              0xc3	                                     ret	       126	elfcomm.c	FUNCTION_4
byte_get_little_endian	SWITCH,1:ELSE,4:WHILE,0:FOR,0:IF,8:functions,0:DO,0:CALL,3	124
0x400095d	              0x53	                                push rbx	       132	elfcomm.c	FUNCTION_5
0x400095e	          0x83fe08	                              cmp esi, 8	       133	elfcomm.c	FUNCTION_5	SWITCH_1
0x4000961	     0xf8789010000	                            ja 0x4000af0	       133	elfcomm.c	FUNCTION_5	SWITCH_1
0x4000967	            0x89f0	                            mov eax, esi	       133	elfcomm.c	FUNCTION_5	SWITCH_1
0x4000969	    0xff24c5000000	                       jmp qword [rax*8]	       133	elfcomm.c	FUNCTION_5	SWITCH_1
0x4000970	           0xfb607	                   movzx eax, byte [rdi]	       136	elfcomm.c	FUNCTION_5	SWITCH_1
0x4000973	      0xe9a2010000	                           jmp 0x4000b1a	       136	elfcomm.c	FUNCTION_5	SWITCH_1
0x4000978	         0xfb64701	               movzx eax, byte [rdi + 1]	       139	elfcomm.c	FUNCTION_5	SWITCH_1
0x400097c	          0xc1e008	                              shl eax, 8	       139	elfcomm.c	FUNCTION_5	SWITCH_1
0x400097f	           0xfb617	                   movzx edx, byte [rdi]	       139	elfcomm.c	FUNCTION_5	SWITCH_1
0x4000982	             0x9d0	                             or eax, edx	       139	elfcomm.c	FUNCTION_5	SWITCH_1
0x4000984	            0x89c0	                            mov eax, eax	       139	elfcomm.c	FUNCTION_5	SWITCH_1
0x4000986	      0xe98f010000	                           jmp 0x4000b1a	       139	elfcomm.c	FUNCTION_5	SWITCH_1
0x400098b	         0xfb64701	               movzx eax, byte [rdi + 1]	       143	elfcomm.c	FUNCTION_5	SWITCH_1
0x400098f	        0x48c1e008	                              shl rax, 8	       143	elfcomm.c	FUNCTION_5	SWITCH_1
0x4000993	          0x4889c2	                            mov rdx, rax	       143	elfcomm.c	FUNCTION_5	SWITCH_1
0x4000996	         0xfb64702	               movzx eax, byte [rdi + 2]	       143	elfcomm.c	FUNCTION_5	SWITCH_1
0x400099a	        0x48c1e010	                           shl rax, 0x10	       143	elfcomm.c	FUNCTION_5	SWITCH_1
0x400099e	          0x4809d0	                             or rax, rdx	       143	elfcomm.c	FUNCTION_5	SWITCH_1
0x40009a1	           0xfb617	                   movzx edx, byte [rdi]	       143	elfcomm.c	FUNCTION_5	SWITCH_1
0x40009a4	          0x4809d0	                             or rax, rdx	       143	elfcomm.c	FUNCTION_5	SWITCH_1
0x40009a7	      0xe96e010000	                           jmp 0x4000b1a	       143	elfcomm.c	FUNCTION_5	SWITCH_1
0x40009ac	         0xfb64701	               movzx eax, byte [rdi + 1]	       148	elfcomm.c	FUNCTION_5	SWITCH_1
0x40009b0	        0x48c1e008	                              shl rax, 8	       148	elfcomm.c	FUNCTION_5	SWITCH_1
0x40009b4	          0x4889c2	                            mov rdx, rax	       148	elfcomm.c	FUNCTION_5	SWITCH_1
0x40009b7	         0xfb64702	               movzx eax, byte [rdi + 2]	       148	elfcomm.c	FUNCTION_5	SWITCH_1
0x40009bb	        0x48c1e010	                           shl rax, 0x10	       148	elfcomm.c	FUNCTION_5	SWITCH_1
0x40009bf	          0x4809d0	                             or rax, rdx	       148	elfcomm.c	FUNCTION_5	SWITCH_1
0x40009c2	           0xfb617	                   movzx edx, byte [rdi]	       148	elfcomm.c	FUNCTION_5	SWITCH_1
0x40009c5	          0x4809d0	                             or rax, rdx	       148	elfcomm.c	FUNCTION_5	SWITCH_1
0x40009c8	         0xfb65703	               movzx edx, byte [rdi + 3]	       148	elfcomm.c	FUNCTION_5	SWITCH_1
0x40009cc	        0x48c1e218	                           shl rdx, 0x18	       148	elfcomm.c	FUNCTION_5	SWITCH_1
0x40009d0	          0x4809d0	                             or rax, rdx	       148	elfcomm.c	FUNCTION_5	SWITCH_1
0x40009d3	      0xe942010000	                           jmp 0x4000b1a	       148	elfcomm.c	FUNCTION_5	SWITCH_1
0x40009d8	         0xfb64701	               movzx eax, byte [rdi + 1]	       155	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x40009dc	        0x48c1e008	                              shl rax, 8	       155	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x40009e0	          0x4889c2	                            mov rdx, rax	       155	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x40009e3	         0xfb64702	               movzx eax, byte [rdi + 2]	       155	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x40009e7	        0x48c1e010	                           shl rax, 0x10	       155	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x40009eb	          0x4809d0	                             or rax, rdx	       155	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x40009ee	           0xfb617	                   movzx edx, byte [rdi]	       155	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x40009f1	          0x4809d0	                             or rax, rdx	       155	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x40009f4	         0xfb65703	               movzx edx, byte [rdi + 3]	       155	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x40009f8	        0x48c1e218	                           shl rdx, 0x18	       155	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x40009fc	          0x4809d0	                             or rax, rdx	       155	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x40009ff	         0xfb65704	               movzx edx, byte [rdi + 4]	       155	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x4000a03	        0x48c1e220	                           shl rdx, 0x20	       155	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x4000a07	          0x4809d0	                             or rax, rdx	       155	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x4000a0a	      0xe90b010000	                           jmp 0x4000b1a	       155	elfcomm.c	FUNCTION_5	SWITCH_1	IF_1
0x4000a0f	         0xfb64701	               movzx eax, byte [rdi + 1]	       172	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x4000a13	        0x48c1e008	                              shl rax, 8	       172	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x4000a17	          0x4889c2	                            mov rdx, rax	       172	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x4000a1a	         0xfb64702	               movzx eax, byte [rdi + 2]	       172	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x4000a1e	        0x48c1e010	                           shl rax, 0x10	       172	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x4000a22	          0x4809d0	                             or rax, rdx	       172	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x4000a25	           0xfb617	                   movzx edx, byte [rdi]	       172	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x4000a28	          0x4809d0	                             or rax, rdx	       172	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x4000a2b	         0xfb65703	               movzx edx, byte [rdi + 3]	       172	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x4000a2f	        0x48c1e218	                           shl rdx, 0x18	       172	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x4000a33	          0x4809d0	                             or rax, rdx	       172	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x4000a36	         0xfb65704	               movzx edx, byte [rdi + 4]	       172	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x4000a3a	        0x48c1e220	                           shl rdx, 0x20	       172	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x4000a3e	          0x4809d0	                             or rax, rdx	       172	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x4000a41	         0xfb65705	               movzx edx, byte [rdi + 5]	       172	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x4000a45	        0x48c1e228	                           shl rdx, 0x28	       172	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x4000a49	          0x4809d0	                             or rax, rdx	       172	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x4000a4c	      0xe9c9000000	                           jmp 0x4000b1a	       172	elfcomm.c	FUNCTION_5	SWITCH_1	IF_3
0x4000a51	         0xfb64701	               movzx eax, byte [rdi + 1]	       190	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000a55	        0x48c1e008	                              shl rax, 8	       190	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000a59	          0x4889c2	                            mov rdx, rax	       190	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000a5c	         0xfb64702	               movzx eax, byte [rdi + 2]	       190	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000a60	        0x48c1e010	                           shl rax, 0x10	       190	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000a64	          0x4809d0	                             or rax, rdx	       190	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000a67	           0xfb617	                   movzx edx, byte [rdi]	       190	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000a6a	          0x4809d0	                             or rax, rdx	       190	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000a6d	         0xfb65703	               movzx edx, byte [rdi + 3]	       190	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000a71	        0x48c1e218	                           shl rdx, 0x18	       190	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000a75	          0x4809d0	                             or rax, rdx	       190	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000a78	         0xfb65704	               movzx edx, byte [rdi + 4]	       190	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000a7c	        0x48c1e220	                           shl rdx, 0x20	       190	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000a80	          0x4809d0	                             or rax, rdx	       190	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000a83	         0xfb65705	               movzx edx, byte [rdi + 5]	       190	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000a87	        0x48c1e228	                           shl rdx, 0x28	       190	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000a8b	          0x4809d0	                             or rax, rdx	       190	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000a8e	         0xfb65706	               movzx edx, byte [rdi + 6]	       190	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000a92	        0x48c1e230	                           shl rdx, 0x30	       190	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000a96	          0x4809d0	                             or rax, rdx	       190	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000a99	            0xeb7f	                           jmp 0x4000b1a	       190	elfcomm.c	FUNCTION_5	SWITCH_1	IF_5
0x4000a9b	         0xfb64701	               movzx eax, byte [rdi + 1]	       209	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000a9f	        0x48c1e008	                              shl rax, 8	       209	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000aa3	          0x4889c2	                            mov rdx, rax	       209	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000aa6	         0xfb64702	               movzx eax, byte [rdi + 2]	       209	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000aaa	        0x48c1e010	                           shl rax, 0x10	       209	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000aae	          0x4809d0	                             or rax, rdx	       209	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000ab1	           0xfb617	                   movzx edx, byte [rdi]	       209	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000ab4	          0x4809d0	                             or rax, rdx	       209	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000ab7	         0xfb65703	               movzx edx, byte [rdi + 3]	       209	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000abb	        0x48c1e218	                           shl rdx, 0x18	       209	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000abf	          0x4809d0	                             or rax, rdx	       209	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000ac2	         0xfb65704	               movzx edx, byte [rdi + 4]	       209	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000ac6	        0x48c1e220	                           shl rdx, 0x20	       209	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000aca	          0x4809d0	                             or rax, rdx	       209	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000acd	         0xfb65705	               movzx edx, byte [rdi + 5]	       209	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000ad1	        0x48c1e228	                           shl rdx, 0x28	       209	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000ad5	          0x4809d0	                             or rax, rdx	       209	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000ad8	         0xfb65706	               movzx edx, byte [rdi + 6]	       209	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000adc	        0x48c1e230	                           shl rdx, 0x30	       209	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000ae0	          0x4809d0	                             or rax, rdx	       209	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000ae3	         0xfb65707	               movzx edx, byte [rdi + 7]	       209	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000ae7	        0x48c1e238	                           shl rdx, 0x38	       209	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000aeb	          0x4809d0	                             or rax, rdx	       209	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000aee	            0xeb2a	                           jmp 0x4000b1a	       209	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000af0	            0x89f3	                            mov ebx, esi	       209	elfcomm.c	FUNCTION_5	SWITCH_1	IF_7
0x4000af2	      0xba05000000	                              mov edx, 5	       228	elfcomm.c	FUNCTION_5	SWITCH_1	CALL_2
0x4000af7	      0xbe00000000	                              mov esi, 0	       228	elfcomm.c	FUNCTION_5	SWITCH_1	CALL_2
0x4000afc	      0xbf00000000	                              mov edi, 0	       228	elfcomm.c	FUNCTION_5	SWITCH_1	CALL_2
0x4000b01	      0xe800000000	                          call 0x4000b06	       228	elfcomm.c	FUNCTION_5	SWITCH_1	CALL_2
0x4000b06	            0x89de	                            mov esi, ebx	       228	elfcomm.c	FUNCTION_5	SWITCH_1	CALL_2
0x4000b08	          0x4889c7	                            mov rdi, rax	       228	elfcomm.c	FUNCTION_5	SWITCH_1	CALL_2
0x4000b0b	      0xb800000000	                              mov eax, 0	       228	elfcomm.c	FUNCTION_5	SWITCH_1	CALL_2
0x4000b10	      0xe800000000	                          call 0x4000b15	       228	elfcomm.c	FUNCTION_5	SWITCH_1	CALL_2
0x4000b15	      0xe800000000	                          call 0x4000b1a	       229	elfcomm.c	FUNCTION_5	SWITCH_1	CALL_3
0x4000b1a	              0x5b	                                 pop rbx	       231	elfcomm.c	FUNCTION_5
0x4000b1b	              0xc3	                                     ret	       231	elfcomm.c	FUNCTION_5
release_archive	SWITCH,0:ELSE,0:WHILE,0:FOR,0:IF,4:functions,0:DO,0:CALL,4	20
0x4001060	              0x53	                                push rbx	       738	elfcomm.c	FUNCTION_13
0x4001061	          0x4889fb	                            mov rbx, rdi	       738	elfcomm.c	FUNCTION_13
0x4001064	          0x488b3f	                    mov rdi, qword [rdi]	       739	elfcomm.c	FUNCTION_13	IF_1
0x4001067	          0x4885ff	                           test rdi, rdi	       739	elfcomm.c	FUNCTION_13	IF_1
0x400106a	            0x7405	                            je 0x4001071	       739	elfcomm.c	FUNCTION_13	IF_1
0x400106c	      0xe800000000	                          call 0x4001071	       740	elfcomm.c	FUNCTION_13	CALL_1
0x4001071	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       741	elfcomm.c	FUNCTION_13	IF_2
0x4001075	          0x4885ff	                           test rdi, rdi	       741	elfcomm.c	FUNCTION_13	IF_2
0x4001078	            0x7405	                            je 0x400107f	       741	elfcomm.c	FUNCTION_13	IF_2
0x400107a	      0xe800000000	                          call 0x400107f	       742	elfcomm.c	FUNCTION_13	CALL_2
0x400107f	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	       743	elfcomm.c	FUNCTION_13	IF_3
0x4001083	          0x4885ff	                           test rdi, rdi	       743	elfcomm.c	FUNCTION_13	IF_3
0x4001086	            0x7405	                            je 0x400108d	       743	elfcomm.c	FUNCTION_13	IF_3
0x4001088	      0xe800000000	                          call 0x400108d	       744	elfcomm.c	FUNCTION_13	CALL_3
0x400108d	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	       745	elfcomm.c	FUNCTION_13	IF_4
0x4001091	          0x4885ff	                           test rdi, rdi	       745	elfcomm.c	FUNCTION_13	IF_4
0x4001094	            0x7405	                            je 0x400109b	       745	elfcomm.c	FUNCTION_13	IF_4
0x4001096	      0xe800000000	                          call 0x400109b	       746	elfcomm.c	FUNCTION_13	CALL_4
0x400109b	              0x5b	                                 pop rbx	       747	elfcomm.c	FUNCTION_13
0x400109c	              0xc3	                                     ret	       747	elfcomm.c	FUNCTION_13
byte_get_signed	SWITCH,1:ELSE,0:WHILE,0:FOR,0:IF,0:functions,0:DO,0:CALL,2	23
0x4000b1c	              0x53	                                push rbx	       345	elfcomm.c	FUNCTION_7
0x4000b1d	            0x89f3	                            mov ebx, esi	       345	elfcomm.c	FUNCTION_7
0x4000b1f	    0xff1500000000	                 call qword [0x04000b25]	       346	elfcomm.c	FUNCTION_7	CALL_1
0x4000b25	          0x83fb08	                              cmp ebx, 8	       348	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000b28	            0x773a	                            ja 0x4000b64	       348	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000b2a	            0x89db	                            mov ebx, ebx	       348	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000b2c	    0xff24dd000000	                       jmp qword [rbx*8]	       348	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000b33	            0x3480	                            xor al, 0x80	       351	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000b35	        0x4883c080	             add rax, 0xffffffffffffff80	       351	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000b39	            0xeb2e	                           jmp 0x4000b69	       351	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000b3b	          0x80f480	                            xor ah, 0x80	       353	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000b3e	    0x482d00800000	                         sub rax, 0x8000	       353	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000b44	            0xeb23	                           jmp 0x4000b69	       353	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000b46	    0x483500008000	                       xor rax, 0x800000	       355	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000b4c	    0x482d00008000	                       sub rax, 0x800000	       355	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000b52	            0xeb15	                           jmp 0x4000b69	       355	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000b54	      0xba00000080	                     mov edx, 0x80000000	       357	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000b59	          0x4831d0	                            xor rax, rdx	       357	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000b5c	    0x480500000080	             add rax, 0xffffffff80000000	       357	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000b62	            0xeb05	                           jmp 0x4000b69	       357	elfcomm.c	FUNCTION_7	SWITCH_1
0x4000b64	      0xe800000000	                          call 0x4000b69	       368	elfcomm.c	FUNCTION_7	SWITCH_1	CALL_2
0x4000b69	              0x5b	                                 pop rbx	       370	elfcomm.c	FUNCTION_7
0x4000b6a	              0xc3	                                     ret	       370	elfcomm.c	FUNCTION_7
get_archive_member_name	SWITCH,0:ELSE,0:WHILE,1:FOR,1:IF,11:functions,0:DO,0:CALL,15	163
0x40011fb	            0x4155	                                push r13	       759	elfcomm.c	FUNCTION_14
0x40011fd	            0x4154	                                push r12	       759	elfcomm.c	FUNCTION_14
0x40011ff	              0x55	                                push rbp	       759	elfcomm.c	FUNCTION_14
0x4001200	              0x53	                                push rbx	       759	elfcomm.c	FUNCTION_14
0x4001201	        0x4883ec18	                           sub rsp, 0x18	       759	elfcomm.c	FUNCTION_14
0x4001205	          0x4889fb	                            mov rbx, rdi	       759	elfcomm.c	FUNCTION_14
0x4001208	    0x64488b042528	                mov rax, qword fs:[0x28]	       759	elfcomm.c	FUNCTION_14
0x4001211	      0x4889442408	                mov qword [rsp + 8], rax	       759	elfcomm.c	FUNCTION_14
0x4001216	            0x31c0	                            xor eax, eax	       759	elfcomm.c	FUNCTION_14
0x4001218	      0xba01000000	                              mov edx, 1	       759	elfcomm.c	FUNCTION_14
0x400121d	        0x807f582f	            cmp byte [rdi + 0x58], 0x2f 	       762	elfcomm.c	FUNCTION_14	IF_1
0x4001221	     0xf85d6010000	                           jne 0x40013fd	       762	elfcomm.c	FUNCTION_14	IF_1
0x4001227	          0x4989f4	                            mov r12, rsi	       762	elfcomm.c	FUNCTION_14	IF_1
0x400122a	      0x48837f3000	               cmp qword [rdi + 0x30], 0	       770	elfcomm.c	FUNCTION_14	IF_1	IF_2
0x400122f	            0x7407	                            je 0x4001238	       770	elfcomm.c	FUNCTION_14	IF_1	IF_2
0x4001231	      0x48837f3800	               cmp qword [rdi + 0x38], 0	       770	elfcomm.c	FUNCTION_14	IF_1	IF_2
0x4001236	            0x752b	                           jne 0x4001263	       770	elfcomm.c	FUNCTION_14	IF_1	IF_2
0x4001238	      0xba05000000	                              mov edx, 5	       772	elfcomm.c	FUNCTION_14	IF_1	IF_2	CALL_2
0x400123d	      0xbe00000000	                              mov esi, 0	       772	elfcomm.c	FUNCTION_14	IF_1	IF_2	CALL_2
0x4001242	      0xbf00000000	                              mov edi, 0	       772	elfcomm.c	FUNCTION_14	IF_1	IF_2	CALL_2
0x4001247	      0xe800000000	                          call 0x400124c	       772	elfcomm.c	FUNCTION_14	IF_1	IF_2	CALL_2
0x400124c	          0x4889c7	                            mov rdi, rax	       772	elfcomm.c	FUNCTION_14	IF_1	IF_2	CALL_2
0x400124f	      0xb800000000	                              mov eax, 0	       772	elfcomm.c	FUNCTION_14	IF_1	IF_2	CALL_2
0x4001254	      0xe800000000	                          call 0x4001259	       772	elfcomm.c	FUNCTION_14	IF_1	IF_2	CALL_2
0x4001259	      0xb800000000	                              mov eax, 0	       773	elfcomm.c	FUNCTION_14	IF_1	IF_2
0x400125e	      0xe9d3010000	                           jmp 0x4001436	       773	elfcomm.c	FUNCTION_14	IF_1	IF_2
0x4001263	    0x48c747400000	               mov qword [rdi + 0x40], 0	       776	elfcomm.c	FUNCTION_14	IF_1
0x400126b	    0x440fb6af9200	          movzx r13d, byte [rdi + 0x92] 	       777	elfcomm.c	FUNCTION_14	IF_1
0x4001273	    0xc68792000000	                mov byte [rdi + 0x92], 0	       778	elfcomm.c	FUNCTION_14	IF_1
0x400127a	        0x488d7f59	                   lea rdi, [rdi + 0x59]	       779	elfcomm.c	FUNCTION_14	IF_1	CALL_3
0x400127e	      0xba0a000000	                            mov edx, 0xa	       779	elfcomm.c	FUNCTION_14	IF_1	CALL_3
0x4001283	          0x4889e6	                            mov rsi, rsp	       779	elfcomm.c	FUNCTION_14	IF_1	CALL_3
0x4001286	      0xe800000000	                          call 0x400128b	       779	elfcomm.c	FUNCTION_14	IF_1	CALL_3
0x400128b	          0x4889c5	                            mov rbp, rax	       779	elfcomm.c	FUNCTION_14	IF_1	CALL_3
0x400128e	        0x837b5000	               cmp dword [rbx + 0x50], 0	       780	elfcomm.c	FUNCTION_14	IF_1	IF_3
0x4001292	            0x7425	                            je 0x40012b9	       780	elfcomm.c	FUNCTION_14	IF_1	IF_3
0x4001294	        0x488b0424	                    mov rax, qword [rsp]	       780	elfcomm.c	FUNCTION_14	IF_1	IF_3
0x4001298	          0x4885c0	                           test rax, rax	       780	elfcomm.c	FUNCTION_14	IF_1	IF_3
0x400129b	            0x741c	                            je 0x40012b9	       780	elfcomm.c	FUNCTION_14	IF_1	IF_3
0x400129d	          0x80383a	                    cmp byte [rax], 0x3a	       780	elfcomm.c	FUNCTION_14	IF_1	IF_3
0x40012a0	            0x7517	                           jne 0x40012b9	       780	elfcomm.c	FUNCTION_14	IF_1	IF_3
0x40012a2	        0x488d7801	                      lea rdi, [rax + 1]	       781	elfcomm.c	FUNCTION_14	IF_1	CALL_4
0x40012a6	      0xba0a000000	                            mov edx, 0xa	       781	elfcomm.c	FUNCTION_14	IF_1	CALL_4
0x40012ab	      0xbe00000000	                              mov esi, 0	       781	elfcomm.c	FUNCTION_14	IF_1	CALL_4
0x40012b0	      0xe800000000	                          call 0x40012b5	       781	elfcomm.c	FUNCTION_14	IF_1	CALL_4
0x40012b5	        0x48894340	             mov qword [rbx + 0x40], rax	       781	elfcomm.c	FUNCTION_14	IF_1	CALL_4
0x40012b9	    0x4488ab920000	             mov byte [rbx + 0x92], r13b	       782	elfcomm.c	FUNCTION_14	IF_1
0x40012c0	        0x488b4b38	            mov rcx, qword [rbx + 0x38] 	       784	elfcomm.c	FUNCTION_14	IF_1	IF_4
0x40012c4	          0x4839cd	                            cmp rbp, rcx	       784	elfcomm.c	FUNCTION_14	IF_1	IF_4
0x40012c7	            0x7717	                            ja 0x40012e0	       784	elfcomm.c	FUNCTION_14	IF_1	IF_4
0x40012c9	            0x735e	                           jae 0x4001329	       789	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x40012cb	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	       790	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x40012cf	         0xfb6042e	             movzx eax, byte [rsi + rbp]	       790	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x40012d3	            0x84c0	                             test al, al	       791	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x40012d5	            0x7404	                            je 0x40012db	       791	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x40012d7	            0x3c0a	                             cmp al, 0xa	       791	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x40012d9	            0x7533	                           jne 0x400130e	       791	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x40012db	          0x4889e8	                            mov rax, rbp	       791	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x40012de	            0xeb4c	                           jmp 0x400132c	       791	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x40012e0	      0xba05000000	                              mov edx, 5	       786	elfcomm.c	FUNCTION_14	IF_1	IF_4	CALL_6
0x40012e5	      0xbe00000000	                              mov esi, 0	       786	elfcomm.c	FUNCTION_14	IF_1	IF_4	CALL_6
0x40012ea	      0xbf00000000	                              mov edi, 0	       786	elfcomm.c	FUNCTION_14	IF_1	IF_4	CALL_6
0x40012ef	      0xe800000000	                          call 0x40012f4	       786	elfcomm.c	FUNCTION_14	IF_1	IF_4	CALL_6
0x40012f4	          0x4889ee	                            mov rsi, rbp	       786	elfcomm.c	FUNCTION_14	IF_1	IF_4	CALL_6
0x40012f7	          0x4889c7	                            mov rdi, rax	       786	elfcomm.c	FUNCTION_14	IF_1	IF_4	CALL_6
0x40012fa	      0xb800000000	                              mov eax, 0	       786	elfcomm.c	FUNCTION_14	IF_1	IF_4	CALL_6
0x40012ff	      0xe800000000	                          call 0x4001304	       786	elfcomm.c	FUNCTION_14	IF_1	IF_4	CALL_6
0x4001304	      0xb800000000	                              mov eax, 0	       787	elfcomm.c	FUNCTION_14	IF_1	IF_4
0x4001309	      0xe928010000	                           jmp 0x4001436	       787	elfcomm.c	FUNCTION_14	IF_1	IF_4
0x400130e	          0x4889e8	                            mov rax, rbp	       791	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x4001311	        0x4883c001	                              add rax, 1	       792	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x4001315	          0x4839c1	                            cmp rcx, rax	       789	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x4001318	            0x7612	                           jbe 0x400132c	       789	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x400131a	         0xfb61406	             movzx edx, byte [rsi + rax]	       790	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x400131e	            0x84d2	                             test dl, dl	       791	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x4001320	            0x740a	                            je 0x400132c	       791	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x4001322	          0x80fa0a	                             cmp dl, 0xa	       791	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x4001325	            0x75ea	                           jne 0x4001311	       791	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x4001327	            0xeb03	                           jmp 0x400132c	       791	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x4001329	          0x4889e8	                            mov rax, rbp	       789	elfcomm.c	FUNCTION_14	IF_1	WHILE_1
0x400132c	          0x4885c0	                           test rax, rax	       793	elfcomm.c	FUNCTION_14	IF_1	IF_5
0x400132f	            0x7411	                            je 0x4001342	       793	elfcomm.c	FUNCTION_14	IF_1	IF_5
0x4001331	        0x488d50ff	                      lea rdx, [rax - 1]	       793	elfcomm.c	FUNCTION_14	IF_1	IF_5
0x4001335	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	       793	elfcomm.c	FUNCTION_14	IF_1	IF_5
0x4001339	      0x807c06ff2f	         cmp byte [rsi + rax - 1], 0x2f 	       794	elfcomm.c	FUNCTION_14	IF_1	IF_5
0x400133e	        0x480f44c2	                          cmove rax, rdx	       794	elfcomm.c	FUNCTION_14	IF_1	IF_5
0x4001342	          0x4839c8	                            cmp rax, rcx	       794	elfcomm.c	FUNCTION_14	IF_1	IF_5
0x4001345	        0x480f47c1	                          cmova rax, rcx	       794	elfcomm.c	FUNCTION_14	IF_1	IF_5
0x4001349	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	       797	elfcomm.c	FUNCTION_14	IF_1
0x400134d	        0xc6040200	                 mov byte [rdx + rax], 0	       797	elfcomm.c	FUNCTION_14	IF_1
0x4001351	        0x837b5000	               cmp dword [rbx + 0x50], 0	       799	elfcomm.c	FUNCTION_14	IF_1	IF_7
0x4001355	            0x7407	                            je 0x400135e	       799	elfcomm.c	FUNCTION_14	IF_1	IF_7
0x4001357	      0x48837b4000	               cmp qword [rbx + 0x40], 0	       799	elfcomm.c	FUNCTION_14	IF_1	IF_7
0x400135c	            0x750c	                           jne 0x400136a	       799	elfcomm.c	FUNCTION_14	IF_1	IF_7
0x400135e	          0x4889e8	                            mov rax, rbp	       800	elfcomm.c	FUNCTION_14	IF_1	IF_7
0x4001361	        0x48034330	             add rax, qword [rbx + 0x30]	       800	elfcomm.c	FUNCTION_14	IF_1	IF_7
0x4001365	      0xe9cc000000	                           jmp 0x4001436	       800	elfcomm.c	FUNCTION_14	IF_1	IF_7
0x400136a	          0x4839c5	                            cmp rbp, rax	       803	elfcomm.c	FUNCTION_14	IF_1	IF_8
0x400136d	            0x722b	                            jb 0x400139a	       803	elfcomm.c	FUNCTION_14	IF_1	IF_8
0x400136f	      0xba05000000	                              mov edx, 5	       805	elfcomm.c	FUNCTION_14	IF_1	IF_8	CALL_8
0x4001374	      0xbe00000000	                              mov esi, 0	       805	elfcomm.c	FUNCTION_14	IF_1	IF_8	CALL_8
0x4001379	      0xbf00000000	                              mov edi, 0	       805	elfcomm.c	FUNCTION_14	IF_1	IF_8	CALL_8
0x400137e	      0xe800000000	                          call 0x4001383	       805	elfcomm.c	FUNCTION_14	IF_1	IF_8	CALL_8
0x4001383	          0x4889c7	                            mov rdi, rax	       805	elfcomm.c	FUNCTION_14	IF_1	IF_8	CALL_8
0x4001386	      0xb800000000	                              mov eax, 0	       805	elfcomm.c	FUNCTION_14	IF_1	IF_8	CALL_8
0x400138b	      0xe800000000	                          call 0x4001390	       805	elfcomm.c	FUNCTION_14	IF_1	IF_8	CALL_8
0x4001390	      0xb800000000	                              mov eax, 0	       806	elfcomm.c	FUNCTION_14	IF_1	IF_8
0x4001395	      0xe99c000000	                           jmp 0x4001436	       806	elfcomm.c	FUNCTION_14	IF_1	IF_8
0x400139a	          0x4829e8	                            sub rax, rbp	       811	elfcomm.c	FUNCTION_14	IF_1	CALL_9
0x400139d	          0x4889c2	                            mov rdx, rax	       811	elfcomm.c	FUNCTION_14	IF_1	CALL_9
0x40013a0	          0x4889ee	                            mov rsi, rbp	       811	elfcomm.c	FUNCTION_14	IF_1	CALL_9
0x40013a3	        0x48037330	             add rsi, qword [rbx + 0x30]	       811	elfcomm.c	FUNCTION_14	IF_1	CALL_9
0x40013a7	          0x488b3b	                    mov rdi, qword [rbx]	       811	elfcomm.c	FUNCTION_14	IF_1	CALL_9
0x40013aa	      0xe800000000	                          call 0x40013af	       811	elfcomm.c	FUNCTION_14	IF_1	CALL_9
0x40013af	          0x4989c5	                            mov r13, rax	       811	elfcomm.c	FUNCTION_14	IF_1	CALL_9
0x40013b2	          0x4885c0	                           test rax, rax	       813	elfcomm.c	FUNCTION_14	IF_1	IF_9
0x40013b5	            0x7435	                            je 0x40013ec	       813	elfcomm.c	FUNCTION_14	IF_1	IF_9
0x40013b7	          0x4889c6	                            mov rsi, rax	       814	elfcomm.c	FUNCTION_14	IF_1	IF_9	CALL_10
0x40013ba	          0x4c89e7	                            mov rdi, r12	       814	elfcomm.c	FUNCTION_14	IF_1	IF_9	CALL_10
0x40013bd	      0xe800000000	                          call 0x40013c2	       814	elfcomm.c	FUNCTION_14	IF_1	IF_9	CALL_10
0x40013c2	            0x85c0	                           test eax, eax	       814	elfcomm.c	FUNCTION_14	IF_1	IF_9	CALL_10
0x40013c4	            0x7526	                           jne 0x40013ec	       814	elfcomm.c	FUNCTION_14	IF_1	IF_9	CALL_10
0x40013c6	        0x488b7340	            mov rsi, qword [rbx + 0x40] 	       816	elfcomm.c	FUNCTION_14	IF_1	IF_9	CALL_11
0x40013ca	      0xba00000000	                              mov edx, 0	       816	elfcomm.c	FUNCTION_14	IF_1	IF_9	CALL_11
0x40013cf	          0x4c89e7	                            mov rdi, r12	       816	elfcomm.c	FUNCTION_14	IF_1	IF_9	CALL_11
0x40013d2	      0xe800000000	                          call 0x40013d7	       816	elfcomm.c	FUNCTION_14	IF_1	IF_9	CALL_11
0x40013d7	          0x4989c4	                            mov r12, rax	       816	elfcomm.c	FUNCTION_14	IF_1	IF_9	CALL_11
0x40013da	          0x4885c0	                           test rax, rax	       819	elfcomm.c	FUNCTION_14	IF_1	IF_9	IF_10
0x40013dd	            0x740d	                            je 0x40013ec	       819	elfcomm.c	FUNCTION_14	IF_1	IF_9	IF_10
0x40013df	          0x4c89ef	                            mov rdi, r13	       821	elfcomm.c	FUNCTION_14	IF_1	IF_9	IF_10	CALL_12
0x40013e2	      0xe800000000	                          call 0x40013e7	       821	elfcomm.c	FUNCTION_14	IF_1	IF_9	IF_10	CALL_12
0x40013e7	          0x4c89e0	                            mov rax, r12	       822	elfcomm.c	FUNCTION_14	IF_1	IF_9	IF_10
0x40013ea	            0xeb4a	                           jmp 0x4001436	       822	elfcomm.c	FUNCTION_14	IF_1	IF_9	IF_10
0x40013ec	          0x4c89ef	                            mov rdi, r13	       825	elfcomm.c	FUNCTION_14	IF_1	CALL_13
0x40013ef	      0xe800000000	                          call 0x40013f4	       825	elfcomm.c	FUNCTION_14	IF_1	CALL_13
0x40013f4	          0x4889e8	                            mov rax, rbp	       828	elfcomm.c	FUNCTION_14	IF_1
0x40013f7	        0x48034330	             add rax, qword [rbx + 0x30]	       828	elfcomm.c	FUNCTION_14	IF_1
0x40013fb	            0xeb39	                           jmp 0x4001436	       828	elfcomm.c	FUNCTION_14	IF_1
0x40013fd	      0x807c13582f	      cmp byte [rbx + rdx + 0x58], 0x2f 	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x4001402	            0x750b	                           jne 0x400140f	       833	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x4001404	      0xc644135800	          mov byte [rbx + rdx + 0x58], 0	       835	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x4001409	        0x488d4358	                   lea rax, [rbx + 0x58]	       836	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x400140d	            0xeb27	                           jmp 0x4001436	       836	elfcomm.c	FUNCTION_14	FOR_1	IF_11
0x400140f	        0x4883c201	                              add rdx, 1	       832	elfcomm.c	FUNCTION_14	FOR_1
0x4001413	        0x4883fa10	                           cmp rdx, 0x10	       832	elfcomm.c	FUNCTION_14	FOR_1
0x4001417	            0x75e4	                           jne 0x40013fd	       832	elfcomm.c	FUNCTION_14	FOR_1
0x4001419	      0xbf11000000	                           mov edi, 0x11	       842	elfcomm.c	FUNCTION_14	CALL_14
0x400141e	      0xe800000000	                          call 0x4001423	       842	elfcomm.c	FUNCTION_14	CALL_14
0x4001423	        0x488b4b58	            mov rcx, qword [rbx + 0x58] 	        53	string3.h	FUNCTION_34	CALL_3
0x4001427	        0x488b5b60	            mov rbx, qword [rbx + 0x60] 	        53	string3.h	FUNCTION_34	CALL_3
0x400142b	          0x488908	                    mov qword [rax], rcx	        53	string3.h	FUNCTION_34	CALL_3
0x400142e	        0x48895808	                mov qword [rax + 8], rbx	        53	string3.h	FUNCTION_34	CALL_3
0x4001432	        0xc6401000	                mov byte [rax + 0x10], 0	       844	elfcomm.c	FUNCTION_14
0x4001436	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       847	elfcomm.c	FUNCTION_14
0x400143b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       847	elfcomm.c	FUNCTION_14
0x4001444	            0x7405	                            je 0x400144b	       847	elfcomm.c	FUNCTION_14
0x4001446	      0xe800000000	                          call 0x400144b	       847	elfcomm.c	FUNCTION_14
0x400144b	        0x4883c418	                           add rsp, 0x18	       847	elfcomm.c	FUNCTION_14
0x400144f	              0x5b	                                 pop rbx	       847	elfcomm.c	FUNCTION_14
0x4001450	              0x5d	                                 pop rbp	       847	elfcomm.c	FUNCTION_14
0x4001451	            0x415c	                                 pop r12	       847	elfcomm.c	FUNCTION_14
0x4001453	            0x415d	                                 pop r13	       847	elfcomm.c	FUNCTION_14
0x4001455	              0xc3	                                     ret	       847	elfcomm.c	FUNCTION_14
error	SWITCH,0:ELSE,0:WHILE,0:FOR,0:IF,0:functions,0:DO,0:CALL,5	54
0x4000040	              0x55	                                push rbp	        35	elfcomm.c	FUNCTION_1
0x4000041	              0x53	                                push rbx	        35	elfcomm.c	FUNCTION_1
0x4000042	    0x4881ecd80000	                           sub rsp, 0xd8	        35	elfcomm.c	FUNCTION_1
0x4000049	          0x4889fb	                            mov rbx, rdi	        35	elfcomm.c	FUNCTION_1
0x400004c	      0x4889742428	             mov qword [rsp + 0x28], rsi	        35	elfcomm.c	FUNCTION_1
0x4000051	      0x4889542430	             mov qword [rsp + 0x30], rdx	        35	elfcomm.c	FUNCTION_1
0x4000056	      0x48894c2438	             mov qword [rsp + 0x38], rcx	        35	elfcomm.c	FUNCTION_1
0x400005b	      0x4c89442440	              mov qword [rsp + 0x40], r8	        35	elfcomm.c	FUNCTION_1
0x4000060	      0x4c894c2448	              mov qword [rsp + 0x48], r9	        35	elfcomm.c	FUNCTION_1
0x4000065	            0x84c0	                             test al, al	        35	elfcomm.c	FUNCTION_1
0x4000067	            0x7437	                            je 0x40000a0	        35	elfcomm.c	FUNCTION_1
0x4000069	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	        35	elfcomm.c	FUNCTION_1
0x400006e	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	        35	elfcomm.c	FUNCTION_1
0x4000073	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	        35	elfcomm.c	FUNCTION_1
0x4000078	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	        35	elfcomm.c	FUNCTION_1
0x4000080	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	        35	elfcomm.c	FUNCTION_1
0x4000088	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	        35	elfcomm.c	FUNCTION_1
0x4000090	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	        35	elfcomm.c	FUNCTION_1
0x4000098	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	        35	elfcomm.c	FUNCTION_1
0x40000a0	    0x64488b042528	                mov rax, qword fs:[0x28]	        35	elfcomm.c	FUNCTION_1
0x40000a9	      0x4889442418	             mov qword [rsp + 0x18], rax	        35	elfcomm.c	FUNCTION_1
0x40000ae	            0x31c0	                            xor eax, eax	        35	elfcomm.c	FUNCTION_1
0x40000b0	    0x488b3d000000	            mov rdi, qword [0x040000b7] 	        39	elfcomm.c	FUNCTION_1	CALL_1
0x40000b7	      0xe800000000	                          call 0x40000bc	        39	elfcomm.c	FUNCTION_1	CALL_1
0x40000bc	    0xc70424080000	                      mov dword [rsp], 8	        41	elfcomm.c	FUNCTION_1	CALL_2
0x40000c3	    0xc74424043000	               mov dword [rsp + 4], 0x30	        41	elfcomm.c	FUNCTION_1	CALL_2
0x40000cb	    0x488d8424f000	                   lea rax, [rsp + 0xf0]	        41	elfcomm.c	FUNCTION_1	CALL_2
0x40000d3	      0x4889442408	                mov qword [rsp + 8], rax	        41	elfcomm.c	FUNCTION_1	CALL_2
0x40000d8	      0x488d442420	                   lea rax, [rsp + 0x20]	        41	elfcomm.c	FUNCTION_1	CALL_2
0x40000dd	      0x4889442410	             mov qword [rsp + 0x10], rax	        41	elfcomm.c	FUNCTION_1	CALL_2
0x40000e2	    0x488b2d000000	            mov rbp, qword [0x040000e9] 	        42	elfcomm.c	FUNCTION_1	CALL_3
0x40000e9	      0xba05000000	                              mov edx, 5	        42	elfcomm.c	FUNCTION_1	CALL_3
0x40000ee	      0xbe00000000	                              mov esi, 0	        42	elfcomm.c	FUNCTION_1	CALL_3
0x40000f3	      0xbf00000000	                              mov edi, 0	        42	elfcomm.c	FUNCTION_1	CALL_3
0x40000f8	      0xe800000000	                          call 0x40000fd	        42	elfcomm.c	FUNCTION_1	CALL_3
0x40000fd	          0x4889e9	                            mov rcx, rbp	        97	stdio2.h	CALL_10
0x4000100	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	CALL_10
0x4000103	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_10
0x4000108	    0x488b3d000000	            mov rdi, qword [0x0400010f] 	        97	stdio2.h	CALL_10
0x400010f	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_10
0x4000114	      0xe800000000	                          call 0x4000119	        97	stdio2.h	CALL_10
0x4000119	          0x4889e1	                            mov rcx, rsp	       127	stdio2.h	FUNCTION_22	CALL_1
0x400011c	          0x4889da	                            mov rdx, rbx	       127	stdio2.h	FUNCTION_22	CALL_1
0x400011f	      0xbe01000000	                              mov esi, 1	       127	stdio2.h	FUNCTION_22	CALL_1
0x4000124	    0x488b3d000000	            mov rdi, qword [0x0400012b] 	       127	stdio2.h	FUNCTION_22	CALL_1
0x400012b	      0xe800000000	                          call 0x4000130	       127	stdio2.h	FUNCTION_22	CALL_1
0x4000130	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        45	elfcomm.c	FUNCTION_1
0x4000135	    0x644833042528	                xor rax, qword fs:[0x28]	        45	elfcomm.c	FUNCTION_1
0x400013e	            0x7405	                            je 0x4000145	        45	elfcomm.c	FUNCTION_1
0x4000140	      0xe800000000	                          call 0x4000145	        45	elfcomm.c	FUNCTION_1
0x4000145	    0x4881c4d80000	                           add rsp, 0xd8	        45	elfcomm.c	FUNCTION_1
0x400014c	              0x5b	                                 pop rbx	        45	elfcomm.c	FUNCTION_1
0x400014d	              0x5d	                                 pop rbp	        45	elfcomm.c	FUNCTION_1
0x400014e	              0xc3	                                     ret	        45	elfcomm.c	FUNCTION_1
process_archive_index_and_symbols	SWITCH,0:ELSE,1:WHILE,0:FOR,1:IF,13:functions,0:DO,0:CALL,39	271
0x400030e	            0x4157	                                push r15	       466	elfcomm.c	FUNCTION_10
0x4000310	            0x4156	                                push r14	       466	elfcomm.c	FUNCTION_10
0x4000312	            0x4155	                                push r13	       466	elfcomm.c	FUNCTION_10
0x4000314	            0x4154	                                push r12	       466	elfcomm.c	FUNCTION_10
0x4000316	              0x55	                                push rbp	       466	elfcomm.c	FUNCTION_10
0x4000317	              0x53	                                push rbx	       466	elfcomm.c	FUNCTION_10
0x4000318	        0x4883ec28	                           sub rsp, 0x28	       466	elfcomm.c	FUNCTION_10
0x400031c	          0x4889fb	                            mov rbx, rdi	       466	elfcomm.c	FUNCTION_10
0x400031f	          0x4189f7	                           mov r15d, esi	       466	elfcomm.c	FUNCTION_10
0x4000322	          0x4189d5	                           mov r13d, edx	       466	elfcomm.c	FUNCTION_10
0x4000325	    0x64488b042528	                mov rax, qword fs:[0x28]	       466	elfcomm.c	FUNCTION_10
0x400032e	      0x4889442418	             mov qword [rsp + 0x18], rax	       466	elfcomm.c	FUNCTION_10
0x4000333	            0x31c0	                            xor eax, eax	       466	elfcomm.c	FUNCTION_10
0x4000335	    0x440fb6a79200	          movzx r12d, byte [rdi + 0x92] 	       471	elfcomm.c	FUNCTION_10
0x400033d	    0xc68792000000	                mov byte [rdi + 0x92], 0	       472	elfcomm.c	FUNCTION_10
0x4000344	    0x488dbf880000	                   lea rdi, [rdi + 0x88]	       473	elfcomm.c	FUNCTION_10	CALL_1
0x400034b	      0xba0a000000	                            mov edx, 0xa	       473	elfcomm.c	FUNCTION_10	CALL_1
0x4000350	      0xbe00000000	                              mov esi, 0	       473	elfcomm.c	FUNCTION_10	CALL_1
0x4000355	      0xe800000000	                          call 0x400035a	       473	elfcomm.c	FUNCTION_10	CALL_1
0x400035a	          0x4889c5	                            mov rbp, rax	       473	elfcomm.c	FUNCTION_10	CALL_1
0x400035d	    0x4488a3920000	             mov byte [rbx + 0x92], r12b	       474	elfcomm.c	FUNCTION_10
0x4000364	          0x4885c0	                           test rax, rax	       476	elfcomm.c	FUNCTION_10	IF_1
0x4000367	            0x7934	                           jns 0x400039d	       476	elfcomm.c	FUNCTION_10	IF_1
0x4000369	          0x488b1b	                    mov rbx, qword [rbx]	       478	elfcomm.c	FUNCTION_10	IF_1	CALL_3
0x400036c	      0xba05000000	                              mov edx, 5	       478	elfcomm.c	FUNCTION_10	IF_1	CALL_3
0x4000371	      0xbe00000000	                              mov esi, 0	       478	elfcomm.c	FUNCTION_10	IF_1	CALL_3
0x4000376	      0xbf00000000	                              mov edi, 0	       478	elfcomm.c	FUNCTION_10	IF_1	CALL_3
0x400037b	      0xe800000000	                          call 0x4000380	       478	elfcomm.c	FUNCTION_10	IF_1	CALL_3
0x4000380	          0x4889ea	                            mov rdx, rbp	       478	elfcomm.c	FUNCTION_10	IF_1	CALL_3
0x4000383	          0x4889de	                            mov rsi, rbx	       478	elfcomm.c	FUNCTION_10	IF_1	CALL_3
0x4000386	          0x4889c7	                            mov rdi, rax	       478	elfcomm.c	FUNCTION_10	IF_1	CALL_3
0x4000389	      0xb800000000	                              mov eax, 0	       478	elfcomm.c	FUNCTION_10	IF_1	CALL_3
0x400038e	      0xe800000000	                          call 0x4000393	       478	elfcomm.c	FUNCTION_10	IF_1	CALL_3
0x4000393	      0xb800000000	                              mov eax, 0	       480	elfcomm.c	FUNCTION_10	IF_1
0x4000398	      0xe989030000	                           jmp 0x4000726	       480	elfcomm.c	FUNCTION_10	IF_1
0x400039d	          0x4989c4	                            mov r12, rax	       483	elfcomm.c	FUNCTION_10
0x40003a0	        0x4183e401	                             and r12d, 1	       483	elfcomm.c	FUNCTION_10
0x40003a4	          0x4901c4	                            add r12, rax	       483	elfcomm.c	FUNCTION_10
0x40003a7	        0x488b4348	            mov rax, qword [rbx + 0x48] 	       485	elfcomm.c	FUNCTION_10
0x40003ab	      0x498d44043c	            lea rax, [r12 + rax + 0x3c] 	       485	elfcomm.c	FUNCTION_10
0x40003b0	        0x48894348	             mov qword [rbx + 0x48], rax	       485	elfcomm.c	FUNCTION_10
0x40003b4	          0x4585ed	                         test r13d, r13d	       487	elfcomm.c	FUNCTION_10	IF_2
0x40003b7	            0x754a	                           jne 0x4000403	       487	elfcomm.c	FUNCTION_10	IF_2
0x40003b9	        0x488b7b08	                mov rdi, qword [rbx + 8]	       489	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_4
0x40003bd	      0xba01000000	                              mov edx, 1	       489	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_4
0x40003c2	          0x4c89e6	                            mov rsi, r12	       489	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_4
0x40003c5	      0xe800000000	                          call 0x40003ca	       489	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_4
0x40003ca	            0x85c0	                           test eax, eax	       489	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_4
0x40003cc	     0xf84ff020000	                            je 0x40006d1	       489	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_4
0x40003d2	          0x488b1b	                    mov rbx, qword [rbx]	       491	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_6
0x40003d5	      0xba05000000	                              mov edx, 5	       491	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_6
0x40003da	      0xbe00000000	                              mov esi, 0	       491	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_6
0x40003df	      0xbf00000000	                              mov edi, 0	       491	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_6
0x40003e4	      0xe800000000	                          call 0x40003e9	       491	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_6
0x40003e9	          0x4889de	                            mov rsi, rbx	       491	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_6
0x40003ec	          0x4889c7	                            mov rdi, rax	       491	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_6
0x40003ef	      0xb800000000	                              mov eax, 0	       491	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_6
0x40003f4	      0xe800000000	                          call 0x40003f9	       491	elfcomm.c	FUNCTION_10	IF_2	IF_3	CALL_6
0x40003f9	      0xb800000000	                              mov eax, 0	       493	elfcomm.c	FUNCTION_10	IF_2	IF_3
0x40003fe	      0xe923030000	                           jmp 0x4000726	       493	elfcomm.c	FUNCTION_10	IF_2	IF_3
0x4000403	        0x4183ff08	                             cmp r15d, 8	       505	elfcomm.c	FUNCTION_10	ELSE_1	CALL_7
0x4000407	            0x7619	                           jbe 0x4000422	       505	elfcomm.c	FUNCTION_10	ELSE_1	CALL_7
0x4000409	      0xb900000000	                              mov ecx, 0	       505	elfcomm.c	FUNCTION_10	ELSE_1	CALL_7
0x400040e	      0xbaf9010000	                          mov edx, 0x1f9	       505	elfcomm.c	FUNCTION_10	ELSE_1	CALL_7
0x4000413	      0xbe00000000	                              mov esi, 0	       505	elfcomm.c	FUNCTION_10	ELSE_1	CALL_7
0x4000418	      0xbf00000000	                              mov edi, 0	       505	elfcomm.c	FUNCTION_10	ELSE_1	CALL_7
0x400041d	      0xe800000000	                          call 0x4000422	       505	elfcomm.c	FUNCTION_10	ELSE_1	CALL_7
0x4000422	          0x4489fd	                           mov ebp, r15d	       508	elfcomm.c	FUNCTION_10	ELSE_1	IF_4
0x4000425	          0x4939ec	                            cmp r12, rbp	       508	elfcomm.c	FUNCTION_10	ELSE_1	IF_4
0x4000428	            0x732c	                           jae 0x4000456	       508	elfcomm.c	FUNCTION_10	ELSE_1	IF_4
0x400042a	          0x488b1b	                    mov rbx, qword [rbx]	       510	elfcomm.c	FUNCTION_10	ELSE_1	IF_4	CALL_9
0x400042d	      0xba05000000	                              mov edx, 5	       510	elfcomm.c	FUNCTION_10	ELSE_1	IF_4	CALL_9
0x4000432	      0xbe00000000	                              mov esi, 0	       510	elfcomm.c	FUNCTION_10	ELSE_1	IF_4	CALL_9
0x4000437	      0xbf00000000	                              mov edi, 0	       510	elfcomm.c	FUNCTION_10	ELSE_1	IF_4	CALL_9
0x400043c	      0xe800000000	                          call 0x4000441	       510	elfcomm.c	FUNCTION_10	ELSE_1	IF_4	CALL_9
0x4000441	          0x4889de	                            mov rsi, rbx	       510	elfcomm.c	FUNCTION_10	ELSE_1	IF_4	CALL_9
0x4000444	          0x4889c7	                            mov rdi, rax	       510	elfcomm.c	FUNCTION_10	ELSE_1	IF_4	CALL_9
0x4000447	      0xb800000000	                              mov eax, 0	       510	elfcomm.c	FUNCTION_10	ELSE_1	IF_4	CALL_9
0x400044c	      0xe800000000	                          call 0x4000451	       510	elfcomm.c	FUNCTION_10	ELSE_1	IF_4	CALL_9
0x4000451	      0xe974020000	                           jmp 0x40006ca	       511	elfcomm.c	FUNCTION_10	ELSE_1	IF_4
0x4000456	        0x4c8b4308	                 mov r8, qword [rbx + 8]	       290	stdio2.h	FUNCTION_31	IF_1	CALL_5
0x400045a	          0x4889e9	                            mov rcx, rbp	       290	stdio2.h	FUNCTION_31	IF_1	CALL_5
0x400045d	      0xba01000000	                              mov edx, 1	       290	stdio2.h	FUNCTION_31	IF_1	CALL_5
0x4000462	      0xbe08000000	                              mov esi, 8	       290	stdio2.h	FUNCTION_31	IF_1	CALL_5
0x4000467	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       290	stdio2.h	FUNCTION_31	IF_1	CALL_5
0x400046c	      0xe800000000	                          call 0x4000471	       290	stdio2.h	FUNCTION_31	IF_1	CALL_5
0x4000471	          0x4839c5	                            cmp rbp, rax	       516	elfcomm.c	FUNCTION_10	ELSE_1	IF_5
0x4000474	            0x742c	                            je 0x40004a2	       516	elfcomm.c	FUNCTION_10	ELSE_1	IF_5
0x4000476	          0x488b1b	                    mov rbx, qword [rbx]	       518	elfcomm.c	FUNCTION_10	ELSE_1	IF_5	CALL_12
0x4000479	      0xba05000000	                              mov edx, 5	       518	elfcomm.c	FUNCTION_10	ELSE_1	IF_5	CALL_12
0x400047e	      0xbe00000000	                              mov esi, 0	       518	elfcomm.c	FUNCTION_10	ELSE_1	IF_5	CALL_12
0x4000483	      0xbf00000000	                              mov edi, 0	       518	elfcomm.c	FUNCTION_10	ELSE_1	IF_5	CALL_12
0x4000488	      0xe800000000	                          call 0x400048d	       518	elfcomm.c	FUNCTION_10	ELSE_1	IF_5	CALL_12
0x400048d	          0x4889de	                            mov rsi, rbx	       518	elfcomm.c	FUNCTION_10	ELSE_1	IF_5	CALL_12
0x4000490	          0x4889c7	                            mov rdi, rax	       518	elfcomm.c	FUNCTION_10	ELSE_1	IF_5	CALL_12
0x4000493	      0xb800000000	                              mov eax, 0	       518	elfcomm.c	FUNCTION_10	ELSE_1	IF_5	CALL_12
0x4000498	      0xe800000000	                          call 0x400049d	       518	elfcomm.c	FUNCTION_10	ELSE_1	IF_5	CALL_12
0x400049d	      0xe928020000	                           jmp 0x40006ca	       519	elfcomm.c	FUNCTION_10	ELSE_1	IF_5
0x40004a2	          0x4589fe	                          mov r14d, r15d	       522	elfcomm.c	FUNCTION_10	ELSE_1	CALL_13
0x40004a5	          0x4489fe	                           mov esi, r15d	       522	elfcomm.c	FUNCTION_10	ELSE_1	CALL_13
0x40004a8	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       522	elfcomm.c	FUNCTION_10	ELSE_1	CALL_13
0x40004ad	      0xe800000000	                          call 0x40004b2	       522	elfcomm.c	FUNCTION_10	ELSE_1	CALL_13
0x40004b2	          0x4989c5	                            mov r13, rax	       522	elfcomm.c	FUNCTION_10	ELSE_1	CALL_13
0x40004b5	        0x48894310	             mov qword [rbx + 0x10], rax	       522	elfcomm.c	FUNCTION_10	ELSE_1	CALL_13
0x40004b9	          0x4929ec	                            sub r12, rbp	       523	elfcomm.c	FUNCTION_10	ELSE_1
0x40004bc	          0x4889ef	                            mov rdi, rbp	       525	elfcomm.c	FUNCTION_10	ELSE_1	IF_6
0x40004bf	        0x480faff8	                           imul rdi, rax	       525	elfcomm.c	FUNCTION_10	ELSE_1	IF_6
0x40004c3	          0x4939fc	                            cmp r12, rdi	       527	elfcomm.c	FUNCTION_10	ELSE_1	IF_6
0x40004c6	            0x7205	                            jb 0x40004cd	       527	elfcomm.c	FUNCTION_10	ELSE_1	IF_6
0x40004c8	          0x4c39e0	                            cmp rax, r12	       527	elfcomm.c	FUNCTION_10	ELSE_1	IF_6
0x40004cb	            0x7635	                           jbe 0x4000502	       527	elfcomm.c	FUNCTION_10	ELSE_1	IF_6
0x40004cd	          0x488b1b	                    mov rbx, qword [rbx]	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x40004d0	      0xba05000000	                              mov edx, 5	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x40004d5	      0xbe00000000	                              mov esi, 0	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x40004da	      0xbf00000000	                              mov edi, 0	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x40004df	      0xe800000000	                          call 0x40004e4	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x40004e4	          0x4d89e0	                             mov r8, r12	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x40004e7	          0x4489f9	                           mov ecx, r15d	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x40004ea	          0x4c89ea	                            mov rdx, r13	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x40004ed	          0x4889de	                            mov rsi, rbx	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x40004f0	          0x4889c7	                            mov rdi, rax	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x40004f3	      0xb800000000	                              mov eax, 0	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x40004f8	      0xe800000000	                          call 0x40004fd	       529	elfcomm.c	FUNCTION_10	ELSE_1	IF_6	CALL_15
0x40004fd	      0xe9c8010000	                           jmp 0x40006ca	       531	elfcomm.c	FUNCTION_10	ELSE_1	IF_6
0x4000502	      0xe800000000	                          call 0x4000507	       535	elfcomm.c	FUNCTION_10	ELSE_1
0x4000507	        0x48890424	                    mov qword [rsp], rax	       535	elfcomm.c	FUNCTION_10	ELSE_1
0x400050b	          0x4885c0	                           test rax, rax	       537	elfcomm.c	FUNCTION_10	ELSE_1	IF_7
0x400050e	            0x7526	                           jne 0x4000536	       537	elfcomm.c	FUNCTION_10	ELSE_1	IF_7
0x4000510	      0xba05000000	                              mov edx, 5	       539	elfcomm.c	FUNCTION_10	ELSE_1	IF_7	CALL_18
0x4000515	      0xbe00000000	                              mov esi, 0	       539	elfcomm.c	FUNCTION_10	ELSE_1	IF_7	CALL_18
0x400051a	      0xbf00000000	                              mov edi, 0	       539	elfcomm.c	FUNCTION_10	ELSE_1	IF_7	CALL_18
0x400051f	      0xe800000000	                          call 0x4000524	       539	elfcomm.c	FUNCTION_10	ELSE_1	IF_7	CALL_18
0x4000524	          0x4889c7	                            mov rdi, rax	       539	elfcomm.c	FUNCTION_10	ELSE_1	IF_7	CALL_18
0x4000527	      0xb800000000	                              mov eax, 0	       539	elfcomm.c	FUNCTION_10	ELSE_1	IF_7	CALL_18
0x400052c	      0xe800000000	                          call 0x4000531	       539	elfcomm.c	FUNCTION_10	ELSE_1	IF_7	CALL_18
0x4000531	      0xe994010000	                           jmp 0x40006ca	       540	elfcomm.c	FUNCTION_10	ELSE_1	IF_7
0x4000536	        0x488b4b08	                mov rcx, qword [rbx + 8]	       295	stdio2.h	FUNCTION_31	CALL_9
0x400053a	          0x4c89ea	                            mov rdx, r13	       295	stdio2.h	FUNCTION_31	CALL_9
0x400053d	          0x4889ee	                            mov rsi, rbp	       295	stdio2.h	FUNCTION_31	CALL_9
0x4000540	        0x4c8b2c24	                    mov r13, qword [rsp]	       295	stdio2.h	FUNCTION_31	CALL_9
0x4000544	          0x4c89ef	                            mov rdi, r13	       295	stdio2.h	FUNCTION_31	CALL_9
0x4000547	      0xe800000000	                          call 0x400054c	       295	stdio2.h	FUNCTION_31	CALL_9
0x400054c	        0x4c8b7b10	            mov r15, qword [rbx + 0x10] 	       544	elfcomm.c	FUNCTION_10	ELSE_1	IF_8
0x4000550	          0x4939c7	                            cmp r15, rax	       544	elfcomm.c	FUNCTION_10	ELSE_1	IF_8
0x4000553	            0x7434	                            je 0x4000589	       544	elfcomm.c	FUNCTION_10	ELSE_1	IF_8
0x4000555	          0x4c89ef	                            mov rdi, r13	       546	elfcomm.c	FUNCTION_10	ELSE_1	IF_8	CALL_20
0x4000558	      0xe800000000	                          call 0x400055d	       546	elfcomm.c	FUNCTION_10	ELSE_1	IF_8	CALL_20
0x400055d	          0x488b1b	                    mov rbx, qword [rbx]	       547	elfcomm.c	FUNCTION_10	ELSE_1	IF_8	CALL_22
0x4000560	      0xba05000000	                              mov edx, 5	       547	elfcomm.c	FUNCTION_10	ELSE_1	IF_8	CALL_22
0x4000565	      0xbe00000000	                              mov esi, 0	       547	elfcomm.c	FUNCTION_10	ELSE_1	IF_8	CALL_22
0x400056a	      0xbf00000000	                              mov edi, 0	       547	elfcomm.c	FUNCTION_10	ELSE_1	IF_8	CALL_22
0x400056f	      0xe800000000	                          call 0x4000574	       547	elfcomm.c	FUNCTION_10	ELSE_1	IF_8	CALL_22
0x4000574	          0x4889de	                            mov rsi, rbx	       547	elfcomm.c	FUNCTION_10	ELSE_1	IF_8	CALL_22
0x4000577	          0x4889c7	                            mov rdi, rax	       547	elfcomm.c	FUNCTION_10	ELSE_1	IF_8	CALL_22
0x400057a	      0xb800000000	                              mov eax, 0	       547	elfcomm.c	FUNCTION_10	ELSE_1	IF_8	CALL_22
0x400057f	      0xe800000000	                          call 0x4000584	       547	elfcomm.c	FUNCTION_10	ELSE_1	IF_8	CALL_22
0x4000584	      0xe941010000	                           jmp 0x40006ca	       548	elfcomm.c	FUNCTION_10	ELSE_1	IF_8
0x4000589	          0x4889e8	                            mov rax, rbp	       551	elfcomm.c	FUNCTION_10	ELSE_1
0x400058c	        0x490fafc7	                           imul rax, r15	       551	elfcomm.c	FUNCTION_10	ELSE_1
0x4000590	          0x4929c4	                            sub r12, rax	       551	elfcomm.c	FUNCTION_10	ELSE_1
0x4000593	      0x4c89642408	                mov qword [rsp + 8], r12	       551	elfcomm.c	FUNCTION_10	ELSE_1
0x4000598	    0x4a8d3cfd0000	                        lea rdi, [r15*8]	       555	elfcomm.c	FUNCTION_10	ELSE_1	CALL_23
0x40005a0	      0xe800000000	                          call 0x40005a5	       555	elfcomm.c	FUNCTION_10	ELSE_1	CALL_23
0x40005a5	        0x48894318	             mov qword [rbx + 0x18], rax	       554	elfcomm.c	FUNCTION_10	ELSE_1
0x40005a9	          0x4885c0	                           test rax, rax	       556	elfcomm.c	FUNCTION_10	ELSE_1	IF_9
0x40005ac	            0x7411	                            je 0x40005bf	       556	elfcomm.c	FUNCTION_10	ELSE_1	IF_9
0x40005ae	        0x4c8b2c24	                    mov r13, qword [rsp]	       556	elfcomm.c	FUNCTION_10	ELSE_1	IF_9
0x40005b2	    0x41bc00000000	                             mov r12d, 0	       563	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x40005b8	          0x4d85ff	                           test r15, r15	       563	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x40005bb	            0x7531	                           jne 0x40005ee	       563	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x40005bd	            0xeb52	                           jmp 0x4000611	       563	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x40005bf	        0x488b3c24	                    mov rdi, qword [rsp]	       558	elfcomm.c	FUNCTION_10	ELSE_1	IF_9	CALL_24
0x40005c3	      0xe800000000	                          call 0x40005c8	       558	elfcomm.c	FUNCTION_10	ELSE_1	IF_9	CALL_24
0x40005c8	      0xba05000000	                              mov edx, 5	       559	elfcomm.c	FUNCTION_10	ELSE_1	IF_9	CALL_26
0x40005cd	      0xbe00000000	                              mov esi, 0	       559	elfcomm.c	FUNCTION_10	ELSE_1	IF_9	CALL_26
0x40005d2	      0xbf00000000	                              mov edi, 0	       559	elfcomm.c	FUNCTION_10	ELSE_1	IF_9	CALL_26
0x40005d7	      0xe800000000	                          call 0x40005dc	       559	elfcomm.c	FUNCTION_10	ELSE_1	IF_9	CALL_26
0x40005dc	          0x4889c7	                            mov rdi, rax	       559	elfcomm.c	FUNCTION_10	ELSE_1	IF_9	CALL_26
0x40005df	      0xb800000000	                              mov eax, 0	       559	elfcomm.c	FUNCTION_10	ELSE_1	IF_9	CALL_26
0x40005e4	      0xe800000000	                          call 0x40005e9	       559	elfcomm.c	FUNCTION_10	ELSE_1	IF_9	CALL_26
0x40005e9	      0xe9dc000000	                           jmp 0x40006ca	       560	elfcomm.c	FUNCTION_10	ELSE_1	IF_9
0x40005ee	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       564	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x40005f2	        0x4e8d3ce0	                  lea r15, [rax + r12*8]	       564	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x40005f6	          0x4489f6	                           mov esi, r14d	       565	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1	CALL_27
0x40005f9	          0x4c89ef	                            mov rdi, r13	       565	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1	CALL_27
0x40005fc	      0xe800000000	                          call 0x4000601	       565	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1	CALL_27
0x4000601	          0x498907	                    mov qword [r15], rax	       564	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x4000604	        0x4983c401	                              add r12, 1	       563	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x4000608	          0x4901ed	                            add r13, rbp	       563	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x400060b	        0x4c396310	            cmp qword [rbx + 0x10], r12 	       563	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x400060f	            0x77dd	                            ja 0x40005ee	       563	elfcomm.c	FUNCTION_10	ELSE_1	FOR_1
0x4000611	        0x488b3c24	                    mov rdi, qword [rsp]	       567	elfcomm.c	FUNCTION_10	ELSE_1	CALL_28
0x4000615	      0xe800000000	                          call 0x400061a	       567	elfcomm.c	FUNCTION_10	ELSE_1	CALL_28
0x400061a	    0x48837c240800	                  cmp qword [rsp + 8], 0	       570	elfcomm.c	FUNCTION_10	ELSE_1	IF_10
0x4000620	            0x7529	                           jne 0x400064b	       570	elfcomm.c	FUNCTION_10	ELSE_1	IF_10
0x4000622	          0x488b1b	                    mov rbx, qword [rbx]	       572	elfcomm.c	FUNCTION_10	ELSE_1	IF_10	CALL_30
0x4000625	      0xba05000000	                              mov edx, 5	       572	elfcomm.c	FUNCTION_10	ELSE_1	IF_10	CALL_30
0x400062a	      0xbe00000000	                              mov esi, 0	       572	elfcomm.c	FUNCTION_10	ELSE_1	IF_10	CALL_30
0x400062f	      0xbf00000000	                              mov edi, 0	       572	elfcomm.c	FUNCTION_10	ELSE_1	IF_10	CALL_30
0x4000634	      0xe800000000	                          call 0x4000639	       572	elfcomm.c	FUNCTION_10	ELSE_1	IF_10	CALL_30
0x4000639	          0x4889de	                            mov rsi, rbx	       572	elfcomm.c	FUNCTION_10	ELSE_1	IF_10	CALL_30
0x400063c	          0x4889c7	                            mov rdi, rax	       572	elfcomm.c	FUNCTION_10	ELSE_1	IF_10	CALL_30
0x400063f	      0xb800000000	                              mov eax, 0	       572	elfcomm.c	FUNCTION_10	ELSE_1	IF_10	CALL_30
0x4000644	      0xe800000000	                          call 0x4000649	       572	elfcomm.c	FUNCTION_10	ELSE_1	IF_10	CALL_30
0x4000649	            0xeb7f	                           jmp 0x40006ca	       574	elfcomm.c	FUNCTION_10	ELSE_1	IF_10
0x400064b	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       577	elfcomm.c	FUNCTION_10	ELSE_1	CALL_31
0x4000650	      0xe800000000	                          call 0x4000655	       577	elfcomm.c	FUNCTION_10	ELSE_1	CALL_31
0x4000655	        0x48894320	             mov qword [rbx + 0x20], rax	       577	elfcomm.c	FUNCTION_10	ELSE_1	CALL_31
0x4000659	          0x4885c0	                           test rax, rax	       578	elfcomm.c	FUNCTION_10	ELSE_1	IF_11
0x400065c	            0x7523	                           jne 0x4000681	       578	elfcomm.c	FUNCTION_10	ELSE_1	IF_11
0x400065e	      0xba05000000	                              mov edx, 5	       580	elfcomm.c	FUNCTION_10	ELSE_1	IF_11	CALL_33
0x4000663	      0xbe00000000	                              mov esi, 0	       580	elfcomm.c	FUNCTION_10	ELSE_1	IF_11	CALL_33
0x4000668	      0xbf00000000	                              mov edi, 0	       580	elfcomm.c	FUNCTION_10	ELSE_1	IF_11	CALL_33
0x400066d	      0xe800000000	                          call 0x4000672	       580	elfcomm.c	FUNCTION_10	ELSE_1	IF_11	CALL_33
0x4000672	          0x4889c7	                            mov rdi, rax	       580	elfcomm.c	FUNCTION_10	ELSE_1	IF_11	CALL_33
0x4000675	      0xb800000000	                              mov eax, 0	       580	elfcomm.c	FUNCTION_10	ELSE_1	IF_11	CALL_33
0x400067a	      0xe800000000	                          call 0x400067f	       580	elfcomm.c	FUNCTION_10	ELSE_1	IF_11	CALL_33
0x400067f	            0xeb49	                           jmp 0x40006ca	       581	elfcomm.c	FUNCTION_10	ELSE_1	IF_11
0x4000681	      0x4c8b742408	                mov r14, qword [rsp + 8]	       584	elfcomm.c	FUNCTION_10	ELSE_1
0x4000686	        0x4c897328	             mov qword [rbx + 0x28], r14	       584	elfcomm.c	FUNCTION_10	ELSE_1
0x400068a	        0x488b4b08	                mov rcx, qword [rbx + 8]	       295	stdio2.h	FUNCTION_31	CALL_9
0x400068e	          0x4c89f2	                            mov rdx, r14	       295	stdio2.h	FUNCTION_31	CALL_9
0x4000691	      0xbe01000000	                              mov esi, 1	       295	stdio2.h	FUNCTION_31	CALL_9
0x4000696	          0x4889c7	                            mov rdi, rax	       295	stdio2.h	FUNCTION_31	CALL_9
0x4000699	      0xe800000000	                          call 0x400069e	       295	stdio2.h	FUNCTION_31	CALL_9
0x400069e	          0x4939c6	                            cmp r14, rax	       586	elfcomm.c	FUNCTION_10	ELSE_1	IF_12
0x40006a1	            0x742e	                            je 0x40006d1	       586	elfcomm.c	FUNCTION_10	ELSE_1	IF_12
0x40006a3	          0x488b1b	                    mov rbx, qword [rbx]	       588	elfcomm.c	FUNCTION_10	ELSE_1	IF_12	CALL_36
0x40006a6	      0xba05000000	                              mov edx, 5	       588	elfcomm.c	FUNCTION_10	ELSE_1	IF_12	CALL_36
0x40006ab	      0xbe00000000	                              mov esi, 0	       588	elfcomm.c	FUNCTION_10	ELSE_1	IF_12	CALL_36
0x40006b0	      0xbf00000000	                              mov edi, 0	       588	elfcomm.c	FUNCTION_10	ELSE_1	IF_12	CALL_36
0x40006b5	      0xe800000000	                          call 0x40006ba	       588	elfcomm.c	FUNCTION_10	ELSE_1	IF_12	CALL_36
0x40006ba	          0x4889de	                            mov rsi, rbx	       588	elfcomm.c	FUNCTION_10	ELSE_1	IF_12	CALL_36
0x40006bd	          0x4889c7	                            mov rdi, rax	       588	elfcomm.c	FUNCTION_10	ELSE_1	IF_12	CALL_36
0x40006c0	      0xb800000000	                              mov eax, 0	       588	elfcomm.c	FUNCTION_10	ELSE_1	IF_12	CALL_36
0x40006c5	      0xe800000000	                          call 0x40006ca	       588	elfcomm.c	FUNCTION_10	ELSE_1	IF_12	CALL_36
0x40006ca	      0xb800000000	                              mov eax, 0	       511	elfcomm.c	FUNCTION_10	ELSE_1	IF_4
0x40006cf	            0xeb55	                           jmp 0x4000726	       511	elfcomm.c	FUNCTION_10	ELSE_1	IF_4
0x40006d1	        0x488b4b08	                mov rcx, qword [rbx + 8]	       295	stdio2.h	FUNCTION_31	CALL_9
0x40006d5	        0x488d7b58	                   lea rdi, [rbx + 0x58]	       595	elfcomm.c	FUNCTION_10	CALL_37
0x40006d9	      0xba3c000000	                           mov edx, 0x3c	       295	stdio2.h	FUNCTION_31	CALL_9
0x40006de	      0xbe01000000	                              mov esi, 1	       295	stdio2.h	FUNCTION_31	CALL_9
0x40006e3	      0xe800000000	                          call 0x40006e8	       295	stdio2.h	FUNCTION_31	CALL_9
0x40006e8	        0x4883f83c	                           cmp rax, 0x3c	       596	elfcomm.c	FUNCTION_10	IF_13
0x40006ec	            0x7433	                            je 0x4000721	       596	elfcomm.c	FUNCTION_10	IF_13
0x40006ee	          0x4885c0	                           test rax, rax	       596	elfcomm.c	FUNCTION_10	IF_13
0x40006f1	            0x742e	                            je 0x4000721	       596	elfcomm.c	FUNCTION_10	IF_13
0x40006f3	          0x488b1b	                    mov rbx, qword [rbx]	       598	elfcomm.c	FUNCTION_10	IF_13	CALL_39
0x40006f6	      0xba05000000	                              mov edx, 5	       598	elfcomm.c	FUNCTION_10	IF_13	CALL_39
0x40006fb	      0xbe00000000	                              mov esi, 0	       598	elfcomm.c	FUNCTION_10	IF_13	CALL_39
0x4000700	      0xbf00000000	                              mov edi, 0	       598	elfcomm.c	FUNCTION_10	IF_13	CALL_39
0x4000705	      0xe800000000	                          call 0x400070a	       598	elfcomm.c	FUNCTION_10	IF_13	CALL_39
0x400070a	          0x4889de	                            mov rsi, rbx	       598	elfcomm.c	FUNCTION_10	IF_13	CALL_39
0x400070d	          0x4889c7	                            mov rdi, rax	       598	elfcomm.c	FUNCTION_10	IF_13	CALL_39
0x4000710	      0xb800000000	                              mov eax, 0	       598	elfcomm.c	FUNCTION_10	IF_13	CALL_39
0x4000715	      0xe800000000	                          call 0x400071a	       598	elfcomm.c	FUNCTION_10	IF_13	CALL_39
0x400071a	      0xb800000000	                              mov eax, 0	       600	elfcomm.c	FUNCTION_10	IF_13
0x400071f	            0xeb05	                           jmp 0x4000726	       600	elfcomm.c	FUNCTION_10	IF_13
0x4000721	      0xb801000000	                              mov eax, 1	       603	elfcomm.c	FUNCTION_10
0x4000726	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       604	elfcomm.c	FUNCTION_10
0x400072b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       604	elfcomm.c	FUNCTION_10
0x4000734	            0x7405	                            je 0x400073b	       604	elfcomm.c	FUNCTION_10
0x4000736	      0xe800000000	                          call 0x400073b	       604	elfcomm.c	FUNCTION_10
0x400073b	        0x4883c428	                           add rsp, 0x28	       604	elfcomm.c	FUNCTION_10
0x400073f	              0x5b	                                 pop rbx	       604	elfcomm.c	FUNCTION_10
0x4000740	              0x5d	                                 pop rbp	       604	elfcomm.c	FUNCTION_10
0x4000741	            0x415c	                                 pop r12	       604	elfcomm.c	FUNCTION_10
0x4000743	            0x415d	                                 pop r13	       604	elfcomm.c	FUNCTION_10
0x4000745	            0x415e	                                 pop r14	       604	elfcomm.c	FUNCTION_10
0x4000747	            0x415f	                                 pop r15	       604	elfcomm.c	FUNCTION_10
0x4000749	              0xc3	                                     ret	       604	elfcomm.c	FUNCTION_10
byte_get_big_endian	SWITCH,1:ELSE,4:WHILE,0:FOR,0:IF,8:functions,0:DO,0:CALL,3	124
0x400014f	              0x53	                                push rbx	       235	elfcomm.c	FUNCTION_6
0x4000150	          0x83fe08	                              cmp esi, 8	       236	elfcomm.c	FUNCTION_6	SWITCH_1
0x4000153	     0xf8789010000	                            ja 0x40002e2	       236	elfcomm.c	FUNCTION_6	SWITCH_1
0x4000159	            0x89f0	                            mov eax, esi	       236	elfcomm.c	FUNCTION_6	SWITCH_1
0x400015b	    0xff24c5000000	                       jmp qword [rax*8]	       236	elfcomm.c	FUNCTION_6	SWITCH_1
0x4000162	           0xfb607	                   movzx eax, byte [rdi]	       239	elfcomm.c	FUNCTION_6	SWITCH_1
0x4000165	      0xe9a2010000	                           jmp 0x400030c	       239	elfcomm.c	FUNCTION_6	SWITCH_1
0x400016a	           0xfb607	                   movzx eax, byte [rdi]	       242	elfcomm.c	FUNCTION_6	SWITCH_1
0x400016d	          0xc1e008	                              shl eax, 8	       242	elfcomm.c	FUNCTION_6	SWITCH_1
0x4000170	         0xfb65701	               movzx edx, byte [rdi + 1]	       242	elfcomm.c	FUNCTION_6	SWITCH_1
0x4000174	             0x9d0	                             or eax, edx	       242	elfcomm.c	FUNCTION_6	SWITCH_1
0x4000176	            0x89c0	                            mov eax, eax	       242	elfcomm.c	FUNCTION_6	SWITCH_1
0x4000178	      0xe98f010000	                           jmp 0x400030c	       242	elfcomm.c	FUNCTION_6	SWITCH_1
0x400017d	         0xfb64701	               movzx eax, byte [rdi + 1]	       245	elfcomm.c	FUNCTION_6	SWITCH_1
0x4000181	        0x48c1e008	                              shl rax, 8	       245	elfcomm.c	FUNCTION_6	SWITCH_1
0x4000185	          0x4889c2	                            mov rdx, rax	       245	elfcomm.c	FUNCTION_6	SWITCH_1
0x4000188	           0xfb607	                   movzx eax, byte [rdi]	       245	elfcomm.c	FUNCTION_6	SWITCH_1
0x400018b	        0x48c1e010	                           shl rax, 0x10	       245	elfcomm.c	FUNCTION_6	SWITCH_1
0x400018f	          0x4809d0	                             or rax, rdx	       245	elfcomm.c	FUNCTION_6	SWITCH_1
0x4000192	         0xfb65702	               movzx edx, byte [rdi + 2]	       245	elfcomm.c	FUNCTION_6	SWITCH_1
0x4000196	          0x4809d0	                             or rax, rdx	       245	elfcomm.c	FUNCTION_6	SWITCH_1
0x4000199	      0xe96e010000	                           jmp 0x400030c	       245	elfcomm.c	FUNCTION_6	SWITCH_1
0x400019e	         0xfb64702	               movzx eax, byte [rdi + 2]	       250	elfcomm.c	FUNCTION_6	SWITCH_1
0x40001a2	        0x48c1e008	                              shl rax, 8	       250	elfcomm.c	FUNCTION_6	SWITCH_1
0x40001a6	          0x4889c2	                            mov rdx, rax	       250	elfcomm.c	FUNCTION_6	SWITCH_1
0x40001a9	         0xfb64701	               movzx eax, byte [rdi + 1]	       250	elfcomm.c	FUNCTION_6	SWITCH_1
0x40001ad	        0x48c1e010	                           shl rax, 0x10	       250	elfcomm.c	FUNCTION_6	SWITCH_1
0x40001b1	          0x4809d0	                             or rax, rdx	       250	elfcomm.c	FUNCTION_6	SWITCH_1
0x40001b4	         0xfb65703	               movzx edx, byte [rdi + 3]	       250	elfcomm.c	FUNCTION_6	SWITCH_1
0x40001b8	          0x4809d0	                             or rax, rdx	       250	elfcomm.c	FUNCTION_6	SWITCH_1
0x40001bb	           0xfb617	                   movzx edx, byte [rdi]	       250	elfcomm.c	FUNCTION_6	SWITCH_1
0x40001be	        0x48c1e218	                           shl rdx, 0x18	       250	elfcomm.c	FUNCTION_6	SWITCH_1
0x40001c2	          0x4809d0	                             or rax, rdx	       250	elfcomm.c	FUNCTION_6	SWITCH_1
0x40001c5	      0xe942010000	                           jmp 0x400030c	       250	elfcomm.c	FUNCTION_6	SWITCH_1
0x40001ca	         0xfb64703	               movzx eax, byte [rdi + 3]	       257	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x40001ce	        0x48c1e008	                              shl rax, 8	       257	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x40001d2	          0x4889c2	                            mov rdx, rax	       257	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x40001d5	         0xfb64702	               movzx eax, byte [rdi + 2]	       257	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x40001d9	        0x48c1e010	                           shl rax, 0x10	       257	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x40001dd	          0x4809d0	                             or rax, rdx	       257	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x40001e0	         0xfb65704	               movzx edx, byte [rdi + 4]	       257	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x40001e4	          0x4809d0	                             or rax, rdx	       257	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x40001e7	         0xfb65701	               movzx edx, byte [rdi + 1]	       257	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x40001eb	        0x48c1e218	                           shl rdx, 0x18	       257	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x40001ef	          0x4809d0	                             or rax, rdx	       257	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x40001f2	           0xfb617	                   movzx edx, byte [rdi]	       257	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x40001f5	        0x48c1e220	                           shl rdx, 0x20	       257	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x40001f9	          0x4809d0	                             or rax, rdx	       257	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x40001fc	      0xe90b010000	                           jmp 0x400030c	       257	elfcomm.c	FUNCTION_6	SWITCH_1	IF_1
0x4000201	         0xfb64704	               movzx eax, byte [rdi + 4]	       276	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x4000205	        0x48c1e008	                              shl rax, 8	       276	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x4000209	          0x4889c2	                            mov rdx, rax	       276	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x400020c	         0xfb64703	               movzx eax, byte [rdi + 3]	       276	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x4000210	        0x48c1e010	                           shl rax, 0x10	       276	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x4000214	          0x4809d0	                             or rax, rdx	       276	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x4000217	         0xfb65705	               movzx edx, byte [rdi + 5]	       276	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x400021b	          0x4809d0	                             or rax, rdx	       276	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x400021e	         0xfb65702	               movzx edx, byte [rdi + 2]	       276	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x4000222	        0x48c1e218	                           shl rdx, 0x18	       276	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x4000226	          0x4809d0	                             or rax, rdx	       276	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x4000229	         0xfb65701	               movzx edx, byte [rdi + 1]	       276	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x400022d	        0x48c1e220	                           shl rdx, 0x20	       276	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x4000231	          0x4809d0	                             or rax, rdx	       276	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x4000234	           0xfb617	                   movzx edx, byte [rdi]	       276	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x4000237	        0x48c1e228	                           shl rdx, 0x28	       276	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x400023b	          0x4809d0	                             or rax, rdx	       276	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x400023e	      0xe9c9000000	                           jmp 0x400030c	       276	elfcomm.c	FUNCTION_6	SWITCH_1	IF_3
0x4000243	         0xfb64705	               movzx eax, byte [rdi + 5]	       296	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000247	        0x48c1e008	                              shl rax, 8	       296	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x400024b	          0x4889c2	                            mov rdx, rax	       296	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x400024e	         0xfb64704	               movzx eax, byte [rdi + 4]	       296	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000252	        0x48c1e010	                           shl rax, 0x10	       296	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000256	          0x4809d0	                             or rax, rdx	       296	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000259	         0xfb65706	               movzx edx, byte [rdi + 6]	       296	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x400025d	          0x4809d0	                             or rax, rdx	       296	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000260	         0xfb65703	               movzx edx, byte [rdi + 3]	       296	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000264	        0x48c1e218	                           shl rdx, 0x18	       296	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000268	          0x4809d0	                             or rax, rdx	       296	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x400026b	         0xfb65702	               movzx edx, byte [rdi + 2]	       296	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x400026f	        0x48c1e220	                           shl rdx, 0x20	       296	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000273	          0x4809d0	                             or rax, rdx	       296	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000276	         0xfb65701	               movzx edx, byte [rdi + 1]	       296	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x400027a	        0x48c1e228	                           shl rdx, 0x28	       296	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x400027e	          0x4809d0	                             or rax, rdx	       296	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000281	           0xfb617	                   movzx edx, byte [rdi]	       296	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000284	        0x48c1e230	                           shl rdx, 0x30	       296	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x4000288	          0x4809d0	                             or rax, rdx	       296	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x400028b	            0xeb7f	                           jmp 0x400030c	       296	elfcomm.c	FUNCTION_6	SWITCH_1	IF_5
0x400028d	         0xfb64706	               movzx eax, byte [rdi + 6]	       317	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x4000291	        0x48c1e008	                              shl rax, 8	       317	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x4000295	          0x4889c2	                            mov rdx, rax	       317	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x4000298	         0xfb64705	               movzx eax, byte [rdi + 5]	       317	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x400029c	        0x48c1e010	                           shl rax, 0x10	       317	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40002a0	          0x4809d0	                             or rax, rdx	       317	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40002a3	         0xfb65707	               movzx edx, byte [rdi + 7]	       317	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40002a7	          0x4809d0	                             or rax, rdx	       317	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40002aa	         0xfb65704	               movzx edx, byte [rdi + 4]	       317	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40002ae	        0x48c1e218	                           shl rdx, 0x18	       317	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40002b2	          0x4809d0	                             or rax, rdx	       317	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40002b5	         0xfb65703	               movzx edx, byte [rdi + 3]	       317	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40002b9	        0x48c1e220	                           shl rdx, 0x20	       317	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40002bd	          0x4809d0	                             or rax, rdx	       317	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40002c0	         0xfb65702	               movzx edx, byte [rdi + 2]	       317	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40002c4	        0x48c1e228	                           shl rdx, 0x28	       317	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40002c8	          0x4809d0	                             or rax, rdx	       317	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40002cb	         0xfb65701	               movzx edx, byte [rdi + 1]	       317	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40002cf	        0x48c1e230	                           shl rdx, 0x30	       317	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40002d3	          0x4809d0	                             or rax, rdx	       317	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40002d6	           0xfb617	                   movzx edx, byte [rdi]	       317	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40002d9	        0x48c1e238	                           shl rdx, 0x38	       317	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40002dd	          0x4809d0	                             or rax, rdx	       317	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40002e0	            0xeb2a	                           jmp 0x400030c	       317	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40002e2	            0x89f3	                            mov ebx, esi	       317	elfcomm.c	FUNCTION_6	SWITCH_1	IF_7
0x40002e4	      0xba05000000	                              mov edx, 5	       338	elfcomm.c	FUNCTION_6	SWITCH_1	CALL_2
0x40002e9	      0xbe00000000	                              mov esi, 0	       338	elfcomm.c	FUNCTION_6	SWITCH_1	CALL_2
0x40002ee	      0xbf00000000	                              mov edi, 0	       338	elfcomm.c	FUNCTION_6	SWITCH_1	CALL_2
0x40002f3	      0xe800000000	                          call 0x40002f8	       338	elfcomm.c	FUNCTION_6	SWITCH_1	CALL_2
0x40002f8	            0x89de	                            mov esi, ebx	       338	elfcomm.c	FUNCTION_6	SWITCH_1	CALL_2
0x40002fa	          0x4889c7	                            mov rdi, rax	       338	elfcomm.c	FUNCTION_6	SWITCH_1	CALL_2
0x40002fd	      0xb800000000	                              mov eax, 0	       338	elfcomm.c	FUNCTION_6	SWITCH_1	CALL_2
0x4000302	      0xe800000000	                          call 0x4000307	       338	elfcomm.c	FUNCTION_6	SWITCH_1	CALL_2
0x4000307	      0xe800000000	                          call 0x400030c	       339	elfcomm.c	FUNCTION_6	SWITCH_1	CALL_3
0x400030c	              0x5b	                                 pop rbx	       341	elfcomm.c	FUNCTION_6
0x400030d	              0xc3	                                     ret	       341	elfcomm.c	FUNCTION_6
setup_nested_archive	SWITCH,0:ELSE,0:WHILE,0:FOR,0:IF,3:functions,0:DO,0:CALL,5	33
0x400109d	              0x55	                                push rbp	       714	elfcomm.c	FUNCTION_12
0x400109e	              0x53	                                push rbx	       714	elfcomm.c	FUNCTION_12
0x400109f	        0x4883ec08	                              sub rsp, 8	       714	elfcomm.c	FUNCTION_12
0x40010a3	          0x4889fb	                            mov rbx, rdi	       714	elfcomm.c	FUNCTION_12
0x40010a6	          0x4889f5	                            mov rbp, rsi	       714	elfcomm.c	FUNCTION_12
0x40010a9	          0x488b3f	                    mov rdi, qword [rdi]	       718	elfcomm.c	FUNCTION_12	IF_1
0x40010ac	          0x4885ff	                           test rdi, rdi	       718	elfcomm.c	FUNCTION_12	IF_1
0x40010af	            0x7409	                            je 0x40010ba	       718	elfcomm.c	FUNCTION_12	IF_1
0x40010b1	      0xe800000000	                          call 0x40010b6	       719	elfcomm.c	FUNCTION_12	IF_1	CALL_1
0x40010b6	            0x85c0	                           test eax, eax	       719	elfcomm.c	FUNCTION_12	IF_1	CALL_1
0x40010b8	            0x7446	                            je 0x4001100	       719	elfcomm.c	FUNCTION_12	IF_1	CALL_1
0x40010ba	        0x488b7b08	                mov rdi, qword [rbx + 8]	       723	elfcomm.c	FUNCTION_12	IF_2
0x40010be	          0x4885ff	                           test rdi, rdi	       723	elfcomm.c	FUNCTION_12	IF_2
0x40010c1	            0x7405	                            je 0x40010c8	       723	elfcomm.c	FUNCTION_12	IF_2
0x40010c3	      0xe800000000	                          call 0x40010c8	       724	elfcomm.c	FUNCTION_12	CALL_2
0x40010c8	          0x4889df	                            mov rdi, rbx	       725	elfcomm.c	FUNCTION_12	CALL_3
0x40010cb	      0xe800000000	                          call 0x40010d0	       725	elfcomm.c	FUNCTION_12	CALL_3
0x40010d0	      0xbe00000000	                              mov esi, 0	       727	elfcomm.c	FUNCTION_12	CALL_4
0x40010d5	          0x4889ef	                            mov rdi, rbp	       727	elfcomm.c	FUNCTION_12	CALL_4
0x40010d8	      0xe800000000	                          call 0x40010dd	       727	elfcomm.c	FUNCTION_12	CALL_4
0x40010dd	          0x4889c2	                            mov rdx, rax	       727	elfcomm.c	FUNCTION_12	CALL_4
0x40010e0	      0xb801000000	                              mov eax, 1	       729	elfcomm.c	FUNCTION_12	IF_3
0x40010e5	          0x4885d2	                           test rdx, rdx	       728	elfcomm.c	FUNCTION_12	IF_3
0x40010e8	            0x7416	                            je 0x4001100	       728	elfcomm.c	FUNCTION_12	IF_3
0x40010ea	    0x41b800000000	                              mov r8d, 0	       730	elfcomm.c	FUNCTION_12	CALL_5
0x40010f0	      0xb900000000	                              mov ecx, 0	       730	elfcomm.c	FUNCTION_12	CALL_5
0x40010f5	          0x4889ee	                            mov rsi, rbp	       730	elfcomm.c	FUNCTION_12	CALL_5
0x40010f8	          0x4889df	                            mov rdi, rbx	       730	elfcomm.c	FUNCTION_12	CALL_5
0x40010fb	      0xe800000000	                          call 0x4001100	       730	elfcomm.c	FUNCTION_12	CALL_5
0x4001100	        0x4883c408	                              add rsp, 8	       732	elfcomm.c	FUNCTION_12
0x4001104	              0x5b	                                 pop rbx	       732	elfcomm.c	FUNCTION_12
0x4001105	              0x5d	                                 pop rbp	       732	elfcomm.c	FUNCTION_12
0x4001106	              0xc3	                                     ret	       732	elfcomm.c	FUNCTION_12
