C_alloca	DO,0:ELSE,1:WHILE,0:FOR,1:IF,4:functions,0:SWITCH,0:CALL,4	51
0x4000040	            0x4154	                                push r12	       163	alloca.c	ELSE_2	FUNCTION_2
0x4000042	              0x55	                                push rbp	       163	alloca.c	ELSE_2	FUNCTION_2
0x4000043	              0x53	                                push rbx	       163	alloca.c	ELSE_2	FUNCTION_2
0x4000044	        0x4883ec10	                           sub rsp, 0x10	       163	alloca.c	ELSE_2	FUNCTION_2
0x4000048	          0x4989fc	                            mov r12, rdi	       163	alloca.c	ELSE_2	FUNCTION_2
0x400004b	    0x64488b042528	                mov rax, qword fs:[0x28]	       163	alloca.c	ELSE_2	FUNCTION_2
0x4000054	      0x4889442408	                mov qword [rsp + 8], rax	       163	alloca.c	ELSE_2	FUNCTION_2
0x4000059	            0x31c0	                            xor eax, eax	       163	alloca.c	ELSE_2	FUNCTION_2
0x400005b	    0x488b3d000000	            mov rdi, qword [0x04000062] 	       178	alloca.c	ELSE_2	FUNCTION_2	FOR_1
0x4000062	          0x4885ff	                           test rdi, rdi	       178	alloca.c	ELSE_2	FUNCTION_2	FOR_1
0x4000065	            0x742b	                            je 0x4000092	       178	alloca.c	ELSE_2	FUNCTION_2	FOR_1
0x4000067	      0x488d442407	                      lea rax, [rsp + 7]	       179	alloca.c	ELSE_2	FUNCTION_2	FOR_1	IF_2
0x400006c	          0x4889c5	                            mov rbp, rax	       179	alloca.c	ELSE_2	FUNCTION_2	FOR_1	IF_2
0x400006f	          0x4889fb	                            mov rbx, rdi	       178	alloca.c	ELSE_2	FUNCTION_2	FOR_1
0x4000072	        0x48394708	                cmp qword [rdi + 8], rax	       179	alloca.c	ELSE_2	FUNCTION_2	FOR_1	IF_2
0x4000076	            0x731d	                           jae 0x4000095	       179	alloca.c	ELSE_2	FUNCTION_2	FOR_1	IF_2
0x4000078	            0xeb09	                           jmp 0x4000083	       179	alloca.c	ELSE_2	FUNCTION_2	FOR_1	IF_2
0x400007a	          0x4889df	                            mov rdi, rbx	       182	alloca.c	ELSE_2	FUNCTION_2	FOR_1	IF_2
0x400007d	        0x48396b08	                cmp qword [rbx + 8], rbp	       179	alloca.c	ELSE_2	FUNCTION_2	FOR_1	IF_2
0x4000081	            0x7312	                           jae 0x4000095	       179	alloca.c	ELSE_2	FUNCTION_2	FOR_1	IF_2
0x4000083	          0x488b1f	                    mov rbx, qword [rdi]	       182	alloca.c	ELSE_2	FUNCTION_2	FOR_1	IF_2
0x4000086	      0xe800000000	                          call 0x400008b	       184	alloca.c	ELSE_2	FUNCTION_2	FOR_1	IF_2	CALL_2
0x400008b	          0x4885db	                           test rbx, rbx	       178	alloca.c	ELSE_2	FUNCTION_2	FOR_1
0x400008e	            0x75ea	                           jne 0x400007a	       178	alloca.c	ELSE_2	FUNCTION_2	FOR_1
0x4000090	            0xeb03	                           jmp 0x4000095	       178	alloca.c	ELSE_2	FUNCTION_2	FOR_1
0x4000092	          0x4889fb	                            mov rbx, rdi	       178	alloca.c	ELSE_2	FUNCTION_2	FOR_1
0x4000095	    0x48891d000000	            mov qword [0x0400009c], rbx 	       191	alloca.c	ELSE_2	FUNCTION_2
0x400009c	          0x4d85e4	                           test r12, r12	       194	alloca.c	ELSE_2	FUNCTION_2	IF_3
0x400009f	            0x7434	                            je 0x40000d5	       194	alloca.c	ELSE_2	FUNCTION_2	IF_3
0x40000a1	      0x498d7c2410	                   lea rdi, [r12 + 0x10]	       200	alloca.c	ELSE_2	FUNCTION_2	CALL_3
0x40000a6	      0xe800000000	                          call 0x40000ab	       200	alloca.c	ELSE_2	FUNCTION_2	CALL_3
0x40000ab	          0x4885c0	                           test rax, rax	       203	alloca.c	ELSE_2	FUNCTION_2	IF_4
0x40000ae	            0x7505	                           jne 0x40000b5	       203	alloca.c	ELSE_2	FUNCTION_2	IF_4
0x40000b0	      0xe800000000	                          call 0x40000b5	       204	alloca.c	ELSE_2	FUNCTION_2	CALL_4
0x40000b5	    0x488b15000000	            mov rdx, qword [0x040000bc] 	       206	alloca.c	ELSE_2	FUNCTION_2
0x40000bc	          0x488910	                    mov qword [rax], rdx	       206	alloca.c	ELSE_2	FUNCTION_2
0x40000bf	      0x488d542407	                      lea rdx, [rsp + 7]	       207	alloca.c	ELSE_2	FUNCTION_2
0x40000c4	        0x48895008	                mov qword [rax + 8], rdx	       207	alloca.c	ELSE_2	FUNCTION_2
0x40000c8	    0x488905000000	            mov qword [0x040000cf], rax 	       209	alloca.c	ELSE_2	FUNCTION_2
0x40000cf	        0x4883c010	                           add rax, 0x10	       213	alloca.c	ELSE_2	FUNCTION_2
0x40000d3	            0xeb05	                           jmp 0x40000da	       213	alloca.c	ELSE_2	FUNCTION_2
0x40000d5	      0xb800000000	                              mov eax, 0	       195	alloca.c	ELSE_2	FUNCTION_2	IF_3
0x40000da	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       215	alloca.c	ELSE_2	FUNCTION_2
0x40000df	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       215	alloca.c	ELSE_2	FUNCTION_2
0x40000e8	            0x7405	                            je 0x40000ef	       215	alloca.c	ELSE_2	FUNCTION_2
0x40000ea	      0xe800000000	                          call 0x40000ef	       215	alloca.c	ELSE_2	FUNCTION_2
0x40000ef	        0x4883c410	                           add rsp, 0x10	       215	alloca.c	ELSE_2	FUNCTION_2
0x40000f3	              0x5b	                                 pop rbx	       215	alloca.c	ELSE_2	FUNCTION_2
0x40000f4	              0x5d	                                 pop rbp	       215	alloca.c	ELSE_2	FUNCTION_2
0x40000f5	            0x415c	                                 pop r12	       215	alloca.c	ELSE_2	FUNCTION_2
0x40000f7	              0xc3	                                     ret	       215	alloca.c	ELSE_2	FUNCTION_2
