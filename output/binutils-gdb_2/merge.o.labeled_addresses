_bfd_write_merged_section	IF,6:ELSE,1:SWITCH,0:functions,0:WHILE,0:CALL,4:DO,0:FOR,0	155
0x4000c45	          0x4885d2	                           test rdx, rdx	       813	merge.c	FUNCTION_13	IF_1
0x4000c48	     0xf841e020000	                            je 0x4000e6c	       813	merge.c	FUNCTION_13	IF_1
0x4000c4e	      0x48837a2000	               cmp qword [rdx + 0x20], 0	       816	merge.c	FUNCTION_13	IF_2
0x4000c53	     0xf8419020000	                            je 0x4000e72	       816	merge.c	FUNCTION_13	IF_2
0x4000c59	            0x4157	                                push r15	       805	merge.c	FUNCTION_13
0x4000c5b	            0x4156	                                push r14	       805	merge.c	FUNCTION_13
0x4000c5d	            0x4155	                                push r13	       805	merge.c	FUNCTION_13
0x4000c5f	            0x4154	                                push r12	       805	merge.c	FUNCTION_13
0x4000c61	              0x55	                                push rbp	       805	merge.c	FUNCTION_13
0x4000c62	              0x53	                                push rbx	       805	merge.c	FUNCTION_13
0x4000c63	        0x4883ec28	                           sub rsp, 0x28	       805	merge.c	FUNCTION_13
0x4000c67	          0x4889d5	                            mov rbp, rdx	       805	merge.c	FUNCTION_13
0x4000c6a	          0x4889f3	                            mov rbx, rsi	       805	merge.c	FUNCTION_13
0x4000c6d	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       805	merge.c	FUNCTION_13
0x4000c72	        0x488b4668	            mov rax, qword [rsi + 0x68] 	       820	merge.c	FUNCTION_13	CALL_1
0x4000c76	    0x488b90e00000	            mov rdx, qword [rax + 0xe0] 	       820	merge.c	FUNCTION_13	CALL_1
0x4000c7d	      0x48837a18ff	cmp qword [rdx + 0x18], 0xffffffffffffffff	       821	merge.c	FUNCTION_13	IF_3
0x4000c82	            0x7523	                           jne 0x4000ca7	       821	merge.c	FUNCTION_13	IF_3
0x4000c84	        0x4c8b7248	            mov r14, qword [rdx + 0x48] 	       825	merge.c	FUNCTION_13	IF_3
0x4000c88	        0xf6402308	               test byte [rax + 0x23], 8	       827	merge.c	FUNCTION_13	IF_3	IF_4
0x4000c8c	            0x7405	                            je 0x4000c93	       827	merge.c	FUNCTION_13	IF_3	IF_4
0x4000c8e	          0x4d85f6	                           test r14, r14	       827	merge.c	FUNCTION_13	IF_3	IF_4
0x4000c91	            0x7543	                           jne 0x4000cd6	       827	merge.c	FUNCTION_13	IF_3	IF_4
0x4000c93	      0xba00000000	                              mov edx, 0	       828	merge.c	FUNCTION_13	IF_3	CALL_2
0x4000c98	      0xbe3c030000	                          mov esi, 0x33c	       828	merge.c	FUNCTION_13	IF_3	CALL_2
0x4000c9d	      0xbf00000000	                              mov edi, 0	       828	merge.c	FUNCTION_13	IF_3	CALL_2
0x4000ca2	      0xe800000000	                          call 0x4000ca7	       828	merge.c	FUNCTION_13	IF_3	CALL_2
0x4000ca7	        0x488b7660	            mov rsi, qword [rsi + 0x60] 	       834	merge.c	FUNCTION_13	ELSE_1	IF_5	CALL_3
0x4000cab	    0x4803b0900000	             add rsi, qword [rax + 0x90]	       834	merge.c	FUNCTION_13	ELSE_1	IF_5	CALL_3
0x4000cb2	      0xba00000000	                              mov edx, 0	       834	merge.c	FUNCTION_13	ELSE_1	IF_5	CALL_3
0x4000cb7	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       834	merge.c	FUNCTION_13	ELSE_1	IF_5	CALL_3
0x4000cbc	      0xe800000000	                          call 0x4000cc1	       834	merge.c	FUNCTION_13	ELSE_1	IF_5	CALL_3
0x4000cc1	            0x89c2	                            mov edx, eax	       834	merge.c	FUNCTION_13	ELSE_1	IF_5	CALL_3
0x4000cc3	      0xb800000000	                              mov eax, 0	       835	merge.c	FUNCTION_13	ELSE_1	IF_5
0x4000cc8	            0x85d2	                           test edx, edx	       834	merge.c	FUNCTION_13	ELSE_1	IF_5	CALL_3
0x4000cca	     0xf85a8010000	                           jne 0x4000e78	       834	merge.c	FUNCTION_13	ELSE_1	IF_5	CALL_3
0x4000cd0	    0x41be00000000	                             mov r14d, 0	       832	merge.c	FUNCTION_13	ELSE_1
0x4000cd6	        0x4c8b6b60	            mov r13, qword [rbx + 0x60] 	       838	merge.c	FUNCTION_13	IF_6	CALL_4
0x4000cda	        0x488b5d20	            mov rbx, qword [rbp + 0x20] 	       838	merge.c	FUNCTION_13	IF_6	CALL_4
0x4000cde	        0x4c8b7b28	            mov r15, qword [rbx + 0x28] 	       290	merge.c	ELSE_1	FUNCTION_5
0x4000ce2	        0x498b4708	                mov rax, qword [r15 + 8]	       291	merge.c	ELSE_1	FUNCTION_5
0x4000ce6	      0x4889442418	             mov qword [rsp + 0x18], rax	       291	merge.c	ELSE_1	FUNCTION_5
0x4000ceb	        0x488b4068	            mov rax, qword [rax + 0x68] 	       294	merge.c	ELSE_1	FUNCTION_5
0x4000cef	          0x8b4870	            mov ecx, dword [rax + 0x70] 	       294	merge.c	ELSE_1	FUNCTION_5
0x4000cf2	    0x48c704241000	                   mov qword [rsp], 0x10	       299	merge.c	ELSE_1	FUNCTION_5
0x4000cfa	            0x85c9	                           test ecx, ecx	       299	merge.c	ELSE_1	FUNCTION_5
0x4000cfc	            0x740c	                            je 0x4000d0a	       299	merge.c	ELSE_1	FUNCTION_5
0x4000cfe	      0xb801000000	                              mov eax, 1	       299	merge.c	ELSE_1	FUNCTION_5
0x4000d03	          0x48d3e0	                             shl rax, cl	       299	merge.c	ELSE_1	FUNCTION_5
0x4000d06	        0x48890424	                    mov qword [rsp], rax	       299	merge.c	ELSE_1	FUNCTION_5
0x4000d0a	        0x488b3c24	                    mov rdi, qword [rsp]	       301	merge.c	ELSE_1	FUNCTION_5	CALL_1
0x4000d0e	      0xe800000000	                          call 0x4000d13	       301	merge.c	ELSE_1	FUNCTION_5	CALL_1
0x4000d13	      0x4889442408	                mov qword [rsp + 8], rax	       301	merge.c	ELSE_1	FUNCTION_5	CALL_1
0x4000d18	          0x4885c0	                           test rax, rax	       302	merge.c	ELSE_1	FUNCTION_5	IF_1
0x4000d1b	     0xf8444010000	                            je 0x4000e65	       302	merge.c	ELSE_1	FUNCTION_5	IF_1
0x4000d21	          0x4885db	                           test rbx, rbx	       305	merge.c	ELSE_1	FUNCTION_5	FOR_1
0x4000d24	     0xf84c1000000	                            je 0x4000deb	       305	merge.c	ELSE_1	FUNCTION_5	FOR_1
0x4000d2a	    0x41bc00000000	                             mov r12d, 0	       305	merge.c	ELSE_1	FUNCTION_5	FOR_1
0x4000d30	        0x4c3b7b28	            cmp r15, qword [rbx + 0x28] 	       305	merge.c	ELSE_1	FUNCTION_5	FOR_1
0x4000d34	            0x7464	                            je 0x4000d9a	       305	merge.c	ELSE_1	FUNCTION_5	FOR_1
0x4000d36	      0xe9b6000000	                           jmp 0x4000df1	       305	merge.c	ELSE_1	FUNCTION_5	FOR_1
0x4000d3b	          0x8b431c	            mov eax, dword [rbx + 0x1c] 	       310	merge.c	ELSE_1	FUNCTION_5	FOR_1
0x4000d3e	          0x8d68ff	                      lea ebp, [rax - 1]	       310	merge.c	ELSE_1	FUNCTION_5	FOR_1
0x4000d41	          0x4c89e0	                            mov rax, r12	       310	merge.c	ELSE_1	FUNCTION_5	FOR_1
0x4000d44	          0x48f7d8	                                 neg rax	       310	merge.c	ELSE_1	FUNCTION_5	FOR_1
0x4000d47	          0x4821c5	                            and rbp, rax	       311	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2
0x4000d4a	            0x744e	                            je 0x4000d9a	       311	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2
0x4000d4c	        0x48392c24	                    cmp qword [rsp], rbp	       313	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2	CALL_2
0x4000d50	            0x730f	                           jae 0x4000d61	       313	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2	CALL_2
0x4000d52	      0xbe39010000	                          mov esi, 0x139	       313	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2	CALL_2
0x4000d57	      0xbf00000000	                              mov edi, 0	       313	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2	CALL_2
0x4000d5c	      0xe800000000	                          call 0x4000d61	       313	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2	CALL_2
0x4000d61	          0x4d85f6	                           test r14, r14	       314	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2	IF_3
0x4000d64	            0x7416	                            je 0x4000d7c	       314	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2	IF_3
0x4000d66	        0x4b8d3c2e	                    lea rdi, [r14 + r13]	        53	string3.h	FUNCTION_16	CALL_3
0x4000d6a	          0x4889ea	                            mov rdx, rbp	        53	string3.h	FUNCTION_16	CALL_3
0x4000d6d	      0x488b742408	                mov rsi, qword [rsp + 8]	        53	string3.h	FUNCTION_16	CALL_3
0x4000d72	      0xe800000000	                          call 0x4000d77	        53	string3.h	FUNCTION_16	CALL_3
0x4000d77	          0x4901ed	                            add r13, rbp	       317	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2	IF_3
0x4000d7a	            0xeb1b	                           jmp 0x4000d97	       317	merge.c	ELSE_1	FUNCTION_5	FOR_1	IF_2	IF_3
0x4000d7c	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       319	merge.c	FUNCTION_5	FOR_1	IF_2	IF_4	CALL_4
0x4000d81	          0x4889ee	                            mov rsi, rbp	       319	merge.c	FUNCTION_5	FOR_1	IF_2	IF_4	CALL_4
0x4000d84	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       319	merge.c	FUNCTION_5	FOR_1	IF_2	IF_4	CALL_4
0x4000d89	      0xe800000000	                          call 0x4000d8e	       319	merge.c	FUNCTION_5	FOR_1	IF_2	IF_4	CALL_4
0x4000d8e	          0x4839c5	                            cmp rbp, rax	       319	merge.c	FUNCTION_5	FOR_1	IF_2	IF_4	CALL_4
0x4000d91	     0xf85bd000000	                           jne 0x4000e54	       319	merge.c	FUNCTION_5	FOR_1	IF_2	IF_4	CALL_4
0x4000d97	          0x4901ec	                            add r12, rbp	       321	merge.c	FUNCTION_5	FOR_1	IF_2	ELSE_1
0x4000d9a	        0x488b4308	                mov rax, qword [rbx + 8]	       324	merge.c	FUNCTION_5	FOR_1	ELSE_1
0x4000d9e	          0x8b6b18	            mov ebp, dword [rbx + 0x18] 	       325	merge.c	FUNCTION_5	FOR_1	ELSE_1
0x4000da1	          0x4d85f6	                           test r14, r14	       327	merge.c	FUNCTION_5	FOR_1	ELSE_1	IF_5
0x4000da4	            0x7414	                            je 0x4000dba	       327	merge.c	FUNCTION_5	FOR_1	ELSE_1	IF_5
0x4000da6	        0x4b8d3c2e	                    lea rdi, [r14 + r13]	        53	string3.h	FUNCTION_16	CALL_3
0x4000daa	          0x4889ea	                            mov rdx, rbp	        53	string3.h	FUNCTION_16	CALL_3
0x4000dad	          0x4889c6	                            mov rsi, rax	        53	string3.h	FUNCTION_16	CALL_3
0x4000db0	      0xe800000000	                          call 0x4000db5	        53	string3.h	FUNCTION_16	CALL_3
0x4000db5	          0x4901ed	                            add r13, rbp	       330	merge.c	FUNCTION_5	FOR_1	ELSE_1	IF_5
0x4000db8	            0xeb19	                           jmp 0x4000dd3	       330	merge.c	FUNCTION_5	FOR_1	ELSE_1	IF_5
0x4000dba	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       332	merge.c	FUNCTION_5	FOR_1	ELSE_1	ELSE_2	IF_6	CALL_6
0x4000dbf	          0x4889ee	                            mov rsi, rbp	       332	merge.c	FUNCTION_5	FOR_1	ELSE_1	ELSE_2	IF_6	CALL_6
0x4000dc2	          0x4889c7	                            mov rdi, rax	       332	merge.c	FUNCTION_5	FOR_1	ELSE_1	ELSE_2	IF_6	CALL_6
0x4000dc5	      0xe800000000	                          call 0x4000dca	       332	merge.c	FUNCTION_5	FOR_1	ELSE_1	ELSE_2	IF_6	CALL_6
0x4000dca	          0x4839c5	                            cmp rbp, rax	       332	merge.c	FUNCTION_5	FOR_1	ELSE_1	ELSE_2	IF_6	CALL_6
0x4000dcd	     0xf8581000000	                           jne 0x4000e54	       332	merge.c	FUNCTION_5	FOR_1	ELSE_1	ELSE_2	IF_6	CALL_6
0x4000dd3	          0x4901ec	                            add r12, rbp	       335	merge.c	FUNCTION_5	FOR_1	ELSE_1
0x4000dd6	        0x488b5b30	            mov rbx, qword [rbx + 0x30] 	       305	merge.c	ELSE_1	FUNCTION_5	FOR_1
0x4000dda	          0x4885db	                           test rbx, rbx	       305	merge.c	ELSE_1	FUNCTION_5	FOR_1
0x4000ddd	            0x7412	                            je 0x4000df1	       305	merge.c	ELSE_1	FUNCTION_5	FOR_1
0x4000ddf	        0x4c3b7b28	            cmp r15, qword [rbx + 0x28] 	       305	merge.c	ELSE_1	FUNCTION_5	FOR_1
0x4000de3	     0xf8452ffffff	                            je 0x4000d3b	       305	merge.c	ELSE_1	FUNCTION_5	FOR_1
0x4000de9	            0xeb06	                           jmp 0x4000df1	       305	merge.c	ELSE_1	FUNCTION_5	FOR_1
0x4000deb	    0x41bc00000000	                             mov r12d, 0	       305	merge.c	ELSE_1	FUNCTION_5	FOR_1
0x4000df1	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       339	merge.c	FUNCTION_5	ELSE_1
0x4000df6	        0x488b5838	            mov rbx, qword [rax + 0x38] 	       339	merge.c	FUNCTION_5	ELSE_1
0x4000dfa	          0x4c29e3	                            sub rbx, r12	       340	merge.c	FUNCTION_5	ELSE_1	IF_7
0x4000dfd	            0x7444	                            je 0x4000e43	       340	merge.c	FUNCTION_5	ELSE_1	IF_7
0x4000dff	        0x48391c24	                    cmp qword [rsp], rbx	       342	merge.c	FUNCTION_5	ELSE_1	IF_7	CALL_7
0x4000e03	            0x730f	                           jae 0x4000e14	       342	merge.c	FUNCTION_5	ELSE_1	IF_7	CALL_7
0x4000e05	      0xbe56010000	                          mov esi, 0x156	       342	merge.c	FUNCTION_5	ELSE_1	IF_7	CALL_7
0x4000e0a	      0xbf00000000	                              mov edi, 0	       342	merge.c	FUNCTION_5	ELSE_1	IF_7	CALL_7
0x4000e0f	      0xe800000000	                          call 0x4000e14	       342	merge.c	FUNCTION_5	ELSE_1	IF_7	CALL_7
0x4000e14	          0x4d85f6	                           test r14, r14	       343	merge.c	FUNCTION_5	ELSE_1	IF_7	IF_8
0x4000e17	            0x7413	                            je 0x4000e2c	       343	merge.c	FUNCTION_5	ELSE_1	IF_7	IF_8
0x4000e19	        0x4b8d3c2e	                    lea rdi, [r14 + r13]	        53	string3.h	FUNCTION_16	CALL_3
0x4000e1d	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_16	CALL_3
0x4000e20	      0x488b742408	                mov rsi, qword [rsp + 8]	        53	string3.h	FUNCTION_16	CALL_3
0x4000e25	      0xe800000000	                          call 0x4000e2a	        53	string3.h	FUNCTION_16	CALL_3
0x4000e2a	            0xeb17	                           jmp 0x4000e43	        53	string3.h	FUNCTION_16	CALL_3
0x4000e2c	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	       345	merge.c	FUNCTION_5	ELSE_1	IF_7	ELSE_3	IF_9	CALL_9
0x4000e31	          0x4889de	                            mov rsi, rbx	       345	merge.c	FUNCTION_5	ELSE_1	IF_7	ELSE_3	IF_9	CALL_9
0x4000e34	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       345	merge.c	FUNCTION_5	ELSE_1	IF_7	ELSE_3	IF_9	CALL_9
0x4000e39	      0xe800000000	                          call 0x4000e3e	       345	merge.c	FUNCTION_5	ELSE_1	IF_7	ELSE_3	IF_9	CALL_9
0x4000e3e	          0x4839c3	                            cmp rbx, rax	       345	merge.c	FUNCTION_5	ELSE_1	IF_7	ELSE_3	IF_9	CALL_9
0x4000e41	            0x7511	                           jne 0x4000e54	       345	merge.c	FUNCTION_5	ELSE_1	IF_7	ELSE_3	IF_9	CALL_9
0x4000e43	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       349	merge.c	FUNCTION_5	ELSE_1	CALL_10
0x4000e48	      0xe800000000	                          call 0x4000e4d	       349	merge.c	FUNCTION_5	ELSE_1	CALL_10
0x4000e4d	      0xb801000000	                              mov eax, 1	       350	merge.c	FUNCTION_5	ELSE_1
0x4000e52	            0xeb24	                           jmp 0x4000e78	       350	merge.c	FUNCTION_5	ELSE_1
0x4000e54	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       353	merge.c	FUNCTION_5	ELSE_1	CALL_11
0x4000e59	      0xe800000000	                          call 0x4000e5e	       353	merge.c	FUNCTION_5	ELSE_1	CALL_11
0x4000e5e	      0xb800000000	                              mov eax, 0	       354	merge.c	FUNCTION_5	ELSE_1
0x4000e63	            0xeb13	                           jmp 0x4000e78	       354	merge.c	FUNCTION_5	ELSE_1
0x4000e65	      0xb800000000	                              mov eax, 0	       303	merge.c	ELSE_1	FUNCTION_5	IF_1
0x4000e6a	            0xeb0c	                           jmp 0x4000e78	       303	merge.c	ELSE_1	FUNCTION_5	IF_1
0x4000e6c	      0xb800000000	                              mov eax, 0	       814	merge.c	FUNCTION_13	IF_1
0x4000e71	              0xc3	                                     ret	       814	merge.c	FUNCTION_13	IF_1
0x4000e72	      0xb801000000	                              mov eax, 1	       817	merge.c	FUNCTION_13	IF_2
0x4000e77	              0xc3	                                     ret	       817	merge.c	FUNCTION_13	IF_2
0x4000e78	        0x4883c428	                           add rsp, 0x28	       843	merge.c	FUNCTION_13
0x4000e7c	              0x5b	                                 pop rbx	       843	merge.c	FUNCTION_13
0x4000e7d	              0x5d	                                 pop rbp	       843	merge.c	FUNCTION_13
0x4000e7e	            0x415c	                                 pop r12	       843	merge.c	FUNCTION_13
0x4000e80	            0x415d	                                 pop r13	       843	merge.c	FUNCTION_13
0x4000e82	            0x415e	                                 pop r14	       843	merge.c	FUNCTION_13
0x4000e84	            0x415f	                                 pop r15	       843	merge.c	FUNCTION_13
0x4000e86	              0xc3	                                     ret	       843	merge.c	FUNCTION_13
_bfd_merge_sections_free	IF,0:ELSE,0:SWITCH,0:functions,0:WHILE,0:CALL,2:DO,0:FOR,1	13
0x4001066	              0x53	                                push rbx	       928	merge.c	FUNCTION_15
0x4001067	          0x4889fb	                            mov rbx, rdi	       928	merge.c	FUNCTION_15
0x400106a	          0x4885ff	                           test rdi, rdi	       931	merge.c	FUNCTION_15	FOR_1
0x400106d	            0x741a	                            je 0x4001089	       931	merge.c	FUNCTION_15	FOR_1
0x400106f	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       933	merge.c	FUNCTION_15	FOR_1	CALL_1
0x4001073	      0xe800000000	                          call 0x4001078	       933	merge.c	FUNCTION_15	FOR_1	CALL_1
0x4001078	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       934	merge.c	FUNCTION_15	FOR_1	CALL_2
0x400107c	      0xe800000000	                          call 0x4001081	       934	merge.c	FUNCTION_15	FOR_1	CALL_2
0x4001081	          0x488b1b	                    mov rbx, qword [rbx]	       931	merge.c	FUNCTION_15	FOR_1
0x4001084	          0x4885db	                           test rbx, rbx	       931	merge.c	FUNCTION_15	FOR_1
0x4001087	            0x75e6	                           jne 0x400106f	       931	merge.c	FUNCTION_15	FOR_1
0x4001089	              0x5b	                                 pop rbx	       936	merge.c	FUNCTION_15
0x400108a	              0xc3	                                     ret	       936	merge.c	FUNCTION_15
_bfd_merge_sections	IF,11:ELSE,2:SWITCH,0:functions,0:WHILE,0:CALL,2:DO,0:FOR,4	408
0x4000694	            0x4157	                                push r15	       728	merge.c	FUNCTION_12
0x4000696	            0x4156	                                push r14	       728	merge.c	FUNCTION_12
0x4000698	            0x4155	                                push r13	       728	merge.c	FUNCTION_12
0x400069a	            0x4154	                                push r12	       728	merge.c	FUNCTION_12
0x400069c	              0x55	                                push rbp	       728	merge.c	FUNCTION_12
0x400069d	              0x53	                                push rbx	       728	merge.c	FUNCTION_12
0x400069e	        0x4883ec48	                           sub rsp, 0x48	       728	merge.c	FUNCTION_12
0x40006a2	      0x48897c2438	             mov qword [rsp + 0x38], rdi	       728	merge.c	FUNCTION_12
0x40006a7	          0x4989d7	                            mov r15, rdx	       728	merge.c	FUNCTION_12
0x40006aa	      0x48894c2430	             mov qword [rsp + 0x30], rcx	       728	merge.c	FUNCTION_12
0x40006af	          0x4885d2	                           test rdx, rdx	       731	merge.c	FUNCTION_12	FOR_1
0x40006b2	     0xf8438050000	                            je 0x4000bf0	       731	merge.c	FUNCTION_12	FOR_1
0x40006b8	        0x498b4708	                mov rax, qword [r15 + 8]	       735	merge.c	FUNCTION_12	FOR_1	IF_1
0x40006bc	          0x4885c0	                           test rax, rax	       735	merge.c	FUNCTION_12	FOR_1	IF_1
0x40006bf	     0xf8418050000	                            je 0x4000bdd	       735	merge.c	FUNCTION_12	FOR_1	IF_1
0x40006c5	          0x488b10	                    mov rdx, qword [rax]	       740	merge.c	FUNCTION_12	FOR_1
0x40006c8	        0x49895708	                mov qword [r15 + 8], rdx	       740	merge.c	FUNCTION_12	FOR_1
0x40006cc	    0x48c700000000	                      mov qword [rax], 0	       741	merge.c	FUNCTION_12	FOR_1
0x40006d3	        0x498b4708	                mov rax, qword [r15 + 8]	       744	merge.c	FUNCTION_12	FOR_1	FOR_2
0x40006d7	      0x4889442408	                mov qword [rsp + 8], rax	       744	merge.c	FUNCTION_12	FOR_1	FOR_2
0x40006dc	          0x4885c0	                           test rax, rax	       744	merge.c	FUNCTION_12	FOR_1	FOR_2
0x40006df	     0xf8420050000	                            je 0x4000c05	       744	merge.c	FUNCTION_12	FOR_1	FOR_2
0x40006e5	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       745	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2
0x40006ea	        0x488b6f08	                mov rbp, qword [rdi + 8]	       745	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2
0x40006ee	          0x8b4520	            mov eax, dword [rbp + 0x20] 	       745	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2
0x40006f1	          0xf6c480	                           test ah, 0x80	       745	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2
0x40006f4	            0x7429	                            je 0x400071f	       745	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2
0x40006f6	        0x488b4710	            mov rax, qword [rdi + 0x10] 	       747	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2
0x40006fa	    0x48c700000000	                      mov qword [rax], 0	       747	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2
0x4000701	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	       748	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2	IF_3
0x4000706	          0x4885db	                           test rbx, rbx	       748	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2	IF_3
0x4000709	     0xf8411020000	                            je 0x4000920	       748	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2	IF_3
0x400070f	        0x488b7708	                mov rsi, qword [rdi + 8]	       749	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2	IF_3
0x4000713	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	       749	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2	IF_3
0x4000718	            0xffd3	                                call rbx	       749	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2	IF_3
0x400071a	      0xe901020000	                           jmp 0x4000920	       749	merge.c	FUNCTION_12	FOR_1	FOR_2	IF_2	IF_3
0x400071f	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       477	merge.c	FUNCTION_7
0x4000724	        0x4c8d7728	                   lea r14, [rdi + 0x28]	       477	merge.c	FUNCTION_7
0x4000728	          0x4d89f4	                            mov r12, r14	       477	merge.c	FUNCTION_7
0x400072b	        0x4c036538	             add r12, qword [rbp + 0x38]	       477	merge.c	FUNCTION_7
0x400072f	      0xa900000001	                     test eax, 0x1000000	       480	merge.c	FUNCTION_7	IF_1
0x4000734	            0x7513	                           jne 0x4000749	       480	merge.c	FUNCTION_7	IF_1
0x4000736	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       480	merge.c	FUNCTION_7	IF_1
0x400073b	          0x4d39e6	                            cmp r14, r12	       532	merge.c	FUNCTION_7	ELSE_2	FOR_3
0x400073e	     0xf828e010000	                            jb 0x40008d2	       532	merge.c	FUNCTION_7	ELSE_2	FOR_3
0x4000744	      0xe9d7010000	                           jmp 0x4000920	       532	merge.c	FUNCTION_7	ELSE_2	FOR_3
0x4000749	          0x4d39e6	                            cmp r14, r12	       482	merge.c	FUNCTION_7	IF_1	FOR_1
0x400074c	     0xf83ce010000	                           jae 0x4000920	       482	merge.c	FUNCTION_7	IF_1	FOR_1
0x4000752	          0x8b4d70	            mov ecx, dword [rbp + 0x70] 	       479	merge.c	FUNCTION_7
0x4000755	      0xb801000000	                              mov eax, 1	       479	merge.c	FUNCTION_7
0x400075a	          0x48d3e0	                             shl rax, cl	       479	merge.c	FUNCTION_7
0x400075d	      0x4889442428	             mov qword [rsp + 0x28], rax	       479	merge.c	FUNCTION_7
0x4000762	        0x4883e801	                              sub rax, 1	       479	merge.c	FUNCTION_7
0x4000766	          0x4c89f3	                            mov rbx, r14	       479	merge.c	FUNCTION_7
0x4000769	    0x41bd00000000	                             mov r13d, 0	       479	merge.c	FUNCTION_7
0x400076f	            0x89c7	                            mov edi, eax	       500	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5	CALL_2
0x4000771	          0x83c701	                              add edi, 1	       500	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5	CALL_2
0x4000774	        0x897c2414	             mov dword [rsp + 0x14], edi	       500	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5	CALL_2
0x4000778	      0x4c89742420	             mov qword [rsp + 0x20], r14	       500	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5	CALL_2
0x400077d	          0x4989c6	                            mov r14, rax	       500	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5	CALL_2
0x4000780	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       484	merge.c	FUNCTION_7	IF_1	FOR_1
0x4000785	      0x48897c2418	             mov qword [rsp + 0x18], rdi	       484	merge.c	FUNCTION_7	IF_1	FOR_1
0x400078a	          0x4889d8	                            mov rax, rbx	       484	merge.c	FUNCTION_7	IF_1	FOR_1
0x400078d	          0x4829f8	                            sub rax, rdi	       484	merge.c	FUNCTION_7	IF_1	FOR_1
0x4000790	        0x488d50ff	                      lea rdx, [rax - 1]	       485	merge.c	FUNCTION_7	IF_1	FOR_1
0x4000794	          0x4831d0	                            xor rax, rdx	       485	merge.c	FUNCTION_7	IF_1	FOR_1
0x4000797	        0x488d5001	                      lea rdx, [rax + 1]	       485	merge.c	FUNCTION_7	IF_1	FOR_1
0x400079b	          0x48d1ea	                              shr rdx, 1	       486	merge.c	FUNCTION_7	IF_1	FOR_1	IF_2
0x400079e	            0x7405	                            je 0x40007a5	       486	merge.c	FUNCTION_7	IF_1	FOR_1	IF_2
0x40007a0	          0x4939d6	                            cmp r14, rdx	       486	merge.c	FUNCTION_7	IF_1	FOR_1	IF_2
0x40007a3	            0x7305	                           jae 0x40007aa	       486	merge.c	FUNCTION_7	IF_1	FOR_1	IF_2
0x40007a5	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       487	merge.c	FUNCTION_7	IF_1	FOR_1	IF_2
0x40007aa	        0x498b7f10	            mov rdi, qword [r15 + 0x10] 	       488	merge.c	FUNCTION_7	IF_1	FOR_1	CALL_1
0x40007ae	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       488	merge.c	FUNCTION_7	IF_1	FOR_1	CALL_1
0x40007b3	          0x4889de	                            mov rsi, rbx	       488	merge.c	FUNCTION_7	IF_1	FOR_1	CALL_1
0x40007b6	      0xe8ddfbffff	                  call sym.sec_merge_add	       488	merge.c	FUNCTION_7	IF_1	FOR_1	CALL_1
0x40007bb	          0x4885c0	                           test rax, rax	       490	merge.c	FUNCTION_7	IF_1	FOR_1	IF_3
0x40007be	     0xf8437010000	                            je 0x40008fb	       490	merge.c	FUNCTION_7	IF_1	FOR_1	IF_3
0x40007c4	          0x8b4018	            mov eax, dword [rax + 0x18] 	       492	merge.c	FUNCTION_7	IF_1	FOR_1
0x40007c7	          0x4801c3	                            add rbx, rax	       492	merge.c	FUNCTION_7	IF_1	FOR_1
0x40007ca	    0x83bdc4000000	               cmp dword [rbp + 0xc4], 1	       493	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4
0x40007d1	            0x740e	                            je 0x40007e1	       493	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4
0x40007d3	          0x4939dc	                            cmp r12, rbx	       510	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2
0x40007d6	     0xf87c1000000	                            ja 0x400089d	       510	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2
0x40007dc	      0xe93f010000	                           jmp 0x4000920	       510	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2
0x40007e1	          0x4939dc	                            cmp r12, rbx	       495	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1
0x40007e4	     0xf8636010000	                           jbe 0x4000920	       495	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1
0x40007ea	          0x803b00	                       cmp byte [rbx], 0	       495	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1
0x40007ed	            0x7591	                           jne 0x4000780	       495	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1
0x40007ef	          0x4489e8	                           mov eax, r13d	       495	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1
0x40007f2	          0x4989ed	                            mov r13, rbp	       495	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1
0x40007f5	      0x488b6c2420	            mov rbp, qword [rsp + 0x20] 	       495	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1
0x40007fa	            0x85c0	                           test eax, eax	       497	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5
0x40007fc	            0x7530	                           jne 0x400082e	       497	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5
0x40007fe	          0x4889da	                            mov rdx, rbx	       497	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5
0x4000801	          0x4829ea	                            sub rdx, rbp	       497	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5
0x4000804	          0x4c85f2	                           test rdx, r14	       497	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5
0x4000807	            0x7525	                           jne 0x400082e	       497	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5
0x4000809	        0x498b7f10	            mov rdi, qword [r15 + 0x10] 	       500	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5	CALL_2
0x400080d	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       500	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5	CALL_2
0x4000812	        0x8b542414	            mov edx, dword [rsp + 0x14] 	       500	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5	CALL_2
0x4000816	      0xbe00000000	                              mov esi, 0	       500	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5	CALL_2
0x400081b	      0xe878fbffff	                  call sym.sec_merge_add	       500	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5	CALL_2
0x4000820	          0x4885c0	                           test rax, rax	       502	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5	IF_6
0x4000823	     0xf84d2000000	                            je 0x40008fb	       502	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5	IF_6
0x4000829	      0xb801000000	                              mov eax, 1	       499	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1	IF_5
0x400082e	        0x4883c301	                              add rbx, 1	       505	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1
0x4000832	          0x4939dc	                            cmp r12, rbx	       495	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1
0x4000835	     0xf84e5000000	                            je 0x4000920	       495	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1
0x400083b	          0x803b00	                       cmp byte [rbx], 0	       495	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1
0x400083e	            0x74ba	                            je 0x40007fa	       495	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1
0x4000840	          0x4c89ed	                            mov rbp, r13	       495	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1
0x4000843	          0x4189c5	                           mov r13d, eax	       495	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1
0x4000846	      0xe935ffffff	                           jmp 0x4000780	       495	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1
0x400084b	        0x4883c201	                              add rdx, 1	       495	merge.c	FUNCTION_7	IF_1	FOR_1	IF_4	WHILE_1
0x400084f	        0x807aff00	                   cmp byte [rdx - 1], 0	       513	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2	IF_7
0x4000853	            0x756a	                           jne 0x40008bf	       513	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2	IF_7
0x4000855	          0x83c001	                              add eax, 1	       512	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2
0x4000858	            0x39c8	                            cmp eax, ecx	       512	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2
0x400085a	            0x75ef	                           jne 0x400084b	       512	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2
0x400085c	            0x85f6	                           test esi, esi	       517	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9
0x400085e	            0x752a	                           jne 0x400088a	       517	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9
0x4000860	          0x4889d8	                            mov rax, rbx	       517	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9
0x4000863	          0x4c29e8	                            sub rax, r13	       517	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9
0x4000866	          0x4c85f0	                           test rax, r14	       517	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9
0x4000869	            0x751f	                           jne 0x400088a	       517	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9
0x400086b	        0x498b7f10	            mov rdi, qword [r15 + 0x10] 	       520	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9	CALL_3
0x400086f	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       520	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9	CALL_3
0x4000874	        0x8b542414	            mov edx, dword [rsp + 0x14] 	       520	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9	CALL_3
0x4000878	          0x4889de	                            mov rsi, rbx	       520	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9	CALL_3
0x400087b	      0xe818fbffff	                  call sym.sec_merge_add	       520	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9	CALL_3
0x4000880	          0x4885c0	                           test rax, rax	       522	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9	IF_10
0x4000883	            0x7476	                            je 0x40008fb	       522	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9	IF_10
0x4000885	      0xbe01000000	                              mov esi, 1	       519	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	IF_9
0x400088a	    0x8b85c4000000	            mov eax, dword [rbp + 0xc4] 	       525	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2
0x4000890	          0x4801c3	                            add rbx, rax	       525	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2
0x4000893	          0x4939dc	                            cmp r12, rbx	       510	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2
0x4000896	            0x770d	                            ja 0x40008a5	       510	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2
0x4000898	      0xe983000000	                           jmp 0x4000920	       510	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2
0x400089d	          0x4489ee	                           mov esi, r13d	       510	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2
0x40008a0	      0x4c8b6c2418	            mov r13, qword [rsp + 0x18] 	       510	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2
0x40008a5	    0x8b8dc4000000	            mov ecx, dword [rbp + 0xc4] 	       512	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2
0x40008ab	            0x85c9	                           test ecx, ecx	       512	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2
0x40008ad	            0x74ad	                            je 0x400085c	       512	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2
0x40008af	          0x803b00	                       cmp byte [rbx], 0	       513	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2	IF_7
0x40008b2	            0x7510	                           jne 0x40008c4	       513	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2	IF_7
0x40008b4	        0x488d5301	                      lea rdx, [rbx + 1]	       513	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2	IF_7
0x40008b8	      0xb800000000	                              mov eax, 0	       513	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2	IF_7
0x40008bd	            0xeb96	                           jmp 0x4000855	       513	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2	IF_7
0x40008bf	          0x4189f5	                           mov r13d, esi	       513	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2	IF_7
0x40008c2	            0xeb03	                           jmp 0x40008c7	       513	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2	IF_7
0x40008c4	          0x4189f5	                           mov r13d, esi	       513	merge.c	FUNCTION_7	IF_1	FOR_1	ELSE_1	WHILE_2	FOR_2	IF_7
0x40008c7	          0x4939dc	                            cmp r12, rbx	       482	merge.c	FUNCTION_7	IF_1	FOR_1
0x40008ca	     0xf87b0feffff	                            ja 0x4000780	       482	merge.c	FUNCTION_7	IF_1	FOR_1
0x40008d0	            0xeb4e	                           jmp 0x4000920	       482	merge.c	FUNCTION_7	IF_1	FOR_1
0x40008d2	        0x498b7f10	            mov rdi, qword [r15 + 0x10] 	       534	merge.c	FUNCTION_7	ELSE_2	FOR_3	CALL_4
0x40008d6	          0x4889d9	                            mov rcx, rbx	       534	merge.c	FUNCTION_7	ELSE_2	FOR_3	CALL_4
0x40008d9	      0xba01000000	                              mov edx, 1	       534	merge.c	FUNCTION_7	ELSE_2	FOR_3	CALL_4
0x40008de	          0x4c89f6	                            mov rsi, r14	       534	merge.c	FUNCTION_7	ELSE_2	FOR_3	CALL_4
0x40008e1	      0xe8b2faffff	                  call sym.sec_merge_add	       534	merge.c	FUNCTION_7	ELSE_2	FOR_3	CALL_4
0x40008e6	          0x4885c0	                           test rax, rax	       535	merge.c	FUNCTION_7	ELSE_2	FOR_3	IF_11
0x40008e9	            0x7410	                            je 0x40008fb	       535	merge.c	FUNCTION_7	ELSE_2	FOR_3	IF_11
0x40008eb	    0x8b85c4000000	            mov eax, dword [rbp + 0xc4] 	       532	merge.c	FUNCTION_7	ELSE_2	FOR_3
0x40008f1	          0x4901c6	                            add r14, rax	       532	merge.c	FUNCTION_7	ELSE_2	FOR_3
0x40008f4	          0x4d39f4	                            cmp r12, r14	       532	merge.c	FUNCTION_7	ELSE_2	FOR_3
0x40008f7	            0x77d9	                            ja 0x40008d2	       532	merge.c	FUNCTION_7	ELSE_2	FOR_3
0x40008f9	            0xeb25	                           jmp 0x4000920	       532	merge.c	FUNCTION_7	ELSE_2	FOR_3
0x40008fb	        0x498b4708	                mov rax, qword [r15 + 8]	       543	merge.c	FUNCTION_7	FOR_4
0x40008ff	          0x4885c0	                           test rax, rax	       543	merge.c	FUNCTION_7	FOR_4
0x4000902	     0xf84f6020000	                            je 0x4000bfe	       543	merge.c	FUNCTION_7	FOR_4
0x4000908	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       544	merge.c	FUNCTION_7	FOR_4
0x400090c	    0x48c702000000	                      mov qword [rdx], 0	       544	merge.c	FUNCTION_7	FOR_4
0x4000913	          0x488b00	                    mov rax, qword [rax]	       543	merge.c	FUNCTION_7	FOR_4
0x4000916	          0x4885c0	                           test rax, rax	       543	merge.c	FUNCTION_7	FOR_4
0x4000919	            0x75ed	                           jne 0x4000908	       543	merge.c	FUNCTION_7	FOR_4
0x400091b	      0xe9de020000	                           jmp 0x4000bfe	       543	merge.c	FUNCTION_7	FOR_4
0x4000920	      0x488b442408	                mov rax, qword [rsp + 8]	       744	merge.c	FUNCTION_12	FOR_1	FOR_2
0x4000925	          0x488b00	                    mov rax, qword [rax]	       744	merge.c	FUNCTION_12	FOR_1	FOR_2
0x4000928	      0x4889442408	                mov qword [rsp + 8], rax	       744	merge.c	FUNCTION_12	FOR_1	FOR_2
0x400092d	          0x4885c0	                           test rax, rax	       744	merge.c	FUNCTION_12	FOR_1	FOR_2
0x4000930	     0xf85affdffff	                           jne 0x40006e5	       744	merge.c	FUNCTION_12	FOR_1	FOR_2
0x4000936	      0xe9ca020000	                           jmp 0x4000c05	       744	merge.c	FUNCTION_12	FOR_1	FOR_2
0x400093b	      0xb800000000	                              mov eax, 0	       744	merge.c	FUNCTION_12	FOR_1	FOR_2
0x4000940	      0xba00000000	                              mov edx, 0	       744	merge.c	FUNCTION_12	FOR_1	FOR_2
0x4000945	        0x837e4400	               cmp dword [rsi + 0x44], 0	       760	merge.c	FUNCTION_12	FOR_1	IF_7
0x4000949	     0xf8419020000	                            je 0x4000b68	       760	merge.c	FUNCTION_12	FOR_1	IF_7
0x400094f	        0x488b7e28	            mov rdi, qword [rsi + 0x28] 	       624	merge.c	FUNCTION_11	CALL_1
0x4000953	        0x48c1e703	                              shl rdi, 3	       624	merge.c	FUNCTION_11	CALL_1
0x4000957	      0xe800000000	                          call 0x400095c	       624	merge.c	FUNCTION_11	CALL_1
0x400095c	          0x4989c4	                            mov r12, rax	       624	merge.c	FUNCTION_11	CALL_1
0x400095f	          0x4885c0	                           test rax, rax	       625	merge.c	FUNCTION_11	IF_1
0x4000962	     0xf848f020000	                            je 0x4000bf7	       625	merge.c	FUNCTION_11	IF_1
0x4000968	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       628	merge.c	FUNCTION_11	FOR_1
0x400096c	        0x488b4230	            mov rax, qword [rdx + 0x30] 	       628	merge.c	FUNCTION_11	FOR_1
0x4000970	          0x4885c0	                           test rax, rax	       628	merge.c	FUNCTION_11	FOR_1
0x4000973	     0xf849f020000	                            je 0x4000c18	       628	merge.c	FUNCTION_11	FOR_1
0x4000979	          0x4c89e1	                            mov rcx, r12	       628	merge.c	FUNCTION_11	FOR_1
0x400097c	      0xba00000000	                              mov edx, 0	       628	merge.c	FUNCTION_11	FOR_1
0x4000981	            0xeb03	                           jmp 0x4000986	       628	merge.c	FUNCTION_11	FOR_1
0x4000983	          0x4889d9	                            mov rcx, rbx	       628	merge.c	FUNCTION_11	FOR_1
0x4000986	          0x4889cb	                            mov rbx, rcx	       629	merge.c	FUNCTION_11	FOR_1	IF_2
0x4000989	        0x83781c00	               cmp dword [rax + 0x1c], 0	       629	merge.c	FUNCTION_11	FOR_1	IF_2
0x400098d	            0x7422	                            je 0x40009b1	       629	merge.c	FUNCTION_11	FOR_1	IF_2
0x400098f	        0x488d5908	                      lea rbx, [rcx + 8]	       631	merge.c	FUNCTION_11	FOR_1	IF_2
0x4000993	          0x488901	                    mov qword [rcx], rax	       631	merge.c	FUNCTION_11	FOR_1	IF_2
0x4000996	        0x498b4f10	            mov rcx, qword [r15 + 0x10] 	       633	merge.c	FUNCTION_11	FOR_1	IF_2
0x400099a	          0x8b4940	            mov ecx, dword [rcx + 0x40] 	       633	merge.c	FUNCTION_11	FOR_1	IF_2
0x400099d	          0x294818	             sub dword [rax + 0x18], ecx	       633	merge.c	FUNCTION_11	FOR_1	IF_2
0x40009a0	          0x8b481c	            mov ecx, dword [rax + 0x1c] 	       634	merge.c	FUNCTION_11	FOR_1	IF_2	IF_3
0x40009a3	            0x39d1	                            cmp ecx, edx	       634	merge.c	FUNCTION_11	FOR_1	IF_2	IF_3
0x40009a5	            0x740a	                            je 0x40009b1	       634	merge.c	FUNCTION_11	FOR_1	IF_2	IF_3
0x40009a7	            0x85d2	                           test edx, edx	       637	merge.c	FUNCTION_11	FOR_1	IF_2	IF_3	IF_4
0x40009a9	      0xbaffffffff	                     mov edx, 0xffffffff	       637	merge.c	FUNCTION_11	FOR_1	IF_2	IF_3	IF_4
0x40009ae	           0xf44d1	                          cmove edx, ecx	       637	merge.c	FUNCTION_11	FOR_1	IF_2	IF_3	IF_4
0x40009b1	        0x488b4030	            mov rax, qword [rax + 0x30] 	       628	merge.c	FUNCTION_11	FOR_1
0x40009b5	          0x4885c0	                           test rax, rax	       628	merge.c	FUNCTION_11	FOR_1
0x40009b8	            0x75c9	                           jne 0x4000983	       628	merge.c	FUNCTION_11	FOR_1
0x40009ba	        0x498b4f10	            mov rcx, qword [r15 + 0x10] 	       643	merge.c	FUNCTION_11
0x40009be	          0x4889d8	                            mov rax, rbx	       643	merge.c	FUNCTION_11
0x40009c1	          0x4c29e0	                            sub rax, r12	       643	merge.c	FUNCTION_11
0x40009c4	        0x48c1f803	                              sar rax, 3	       643	merge.c	FUNCTION_11
0x40009c8	        0x48894128	             mov qword [rcx + 0x28], rax	       643	merge.c	FUNCTION_11
0x40009cc	        0x498b4710	            mov rax, qword [r15 + 0x10] 	       644	merge.c	FUNCTION_11	IF_5
0x40009d0	        0x488b7028	            mov rsi, qword [rax + 0x28] 	       644	merge.c	FUNCTION_11	IF_5
0x40009d4	          0x4885f6	                           test rsi, rsi	       644	merge.c	FUNCTION_11	IF_5
0x40009d7	     0xf8497000000	                            je 0x4000a74	       644	merge.c	FUNCTION_11	IF_5
0x40009dd	          0x83faff	             cmp edx, 0xffffffffffffffff	       646	merge.c	FUNCTION_11	IF_5	CALL_2
0x40009e0	            0x740f	                            je 0x40009f1	       646	merge.c	FUNCTION_11	IF_5	CALL_2
0x40009e2	      0xb900000000	                              mov ecx, 0	       646	merge.c	FUNCTION_11	IF_5	CALL_2
0x40009e7	          0x395040	            cmp dword [rax + 0x40], edx 	       648	merge.c	FUNCTION_11	IF_5
0x40009ea	            0x720a	                            jb 0x40009f6	       648	merge.c	FUNCTION_11	IF_5
0x40009ec	            0xeb03	                           jmp 0x40009f1	       648	merge.c	FUNCTION_11	IF_5
0x40009ee	          0x4c89e3	                            mov rbx, r12	       628	merge.c	FUNCTION_11	FOR_1
0x40009f1	      0xb900000000	                              mov ecx, 0	       646	merge.c	FUNCTION_11	IF_5	CALL_2
0x40009f6	      0xba08000000	                              mov edx, 8	       646	merge.c	FUNCTION_11	IF_5	CALL_2
0x40009fb	          0x4c89e7	                            mov rdi, r12	       646	merge.c	FUNCTION_11	IF_5	CALL_2
0x40009fe	      0xe800000000	                          call 0x4000a03	       646	merge.c	FUNCTION_11	IF_5	CALL_2
0x4000a03	        0x4c8d6bf8	                      lea r13, [rbx - 8]	       652	merge.c	FUNCTION_11	IF_5
0x4000a07	        0x488b5bf8	                mov rbx, qword [rbx - 8]	       652	merge.c	FUNCTION_11	IF_5
0x4000a0b	        0x498b4710	            mov rax, qword [r15 + 0x10] 	       653	merge.c	FUNCTION_11	IF_5
0x4000a0f	          0x8b4040	            mov eax, dword [rax + 0x40] 	       653	merge.c	FUNCTION_11	IF_5
0x4000a12	           0x14318	             add dword [rbx + 0x18], eax	       653	merge.c	FUNCTION_11	IF_5
0x4000a15	            0xeb54	                           jmp 0x4000a6b	       653	merge.c	FUNCTION_11	IF_5
0x4000a17	        0x498b6d00	                    mov rbp, qword [r13]	       656	merge.c	FUNCTION_11	IF_5	WHILE_1
0x4000a1b	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       658	merge.c	FUNCTION_11	IF_5	WHILE_1
0x4000a1f	          0x8b4518	            mov eax, dword [rbp + 0x18] 	       658	merge.c	FUNCTION_11	IF_5	WHILE_1
0x4000a22	           0x34240	             add eax, dword [rdx + 0x40]	       658	merge.c	FUNCTION_11	IF_5	WHILE_1
0x4000a25	          0x894518	            mov dword [rbp + 0x18], eax 	       658	merge.c	FUNCTION_11	IF_5	WHILE_1
0x4000a28	          0x8b551c	            mov edx, dword [rbp + 0x1c] 	       659	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000a2b	          0x39531c	            cmp dword [rbx + 0x1c], edx 	       659	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000a2e	            0x7238	                            jb 0x4000a68	       659	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000a30	          0x8b7318	            mov esi, dword [rbx + 0x18] 	       660	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000a33	            0x89f1	                            mov ecx, esi	       660	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000a35	            0x29c1	                            sub ecx, eax	       660	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000a37	          0x83ea01	                              sub edx, 1	       660	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000a3a	            0x85ca	                           test edx, ecx	       660	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000a3c	            0x752a	                           jne 0x4000a68	       660	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000a3e	            0x39f0	                            cmp eax, esi	       603	merge.c	FUNCTION_10	IF_1
0x4000a40	            0x7326	                           jae 0x4000a68	       603	merge.c	FUNCTION_10	IF_1
0x4000a42	            0x89c2	                            mov edx, eax	       608	merge.c	FUNCTION_10	CALL_1
0x4000a44	        0x488b7508	                mov rsi, qword [rbp + 8]	       608	merge.c	FUNCTION_10	CALL_1
0x4000a48	            0x89c9	                            mov ecx, ecx	       608	merge.c	FUNCTION_10	CALL_1
0x4000a4a	          0x4889cf	                            mov rdi, rcx	       608	merge.c	FUNCTION_10	CALL_1
0x4000a4d	        0x48037b08	                add rdi, qword [rbx + 8]	       608	merge.c	FUNCTION_10	CALL_1
0x4000a51	      0xe800000000	                          call 0x4000a56	       608	merge.c	FUNCTION_10	CALL_1
0x4000a56	            0x85c0	                           test eax, eax	       661	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6	CALL_3
0x4000a58	            0x750e	                           jne 0x4000a68	       661	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6	CALL_3
0x4000a5a	        0x48895d20	            mov qword [rbp + 0x20], rbx 	       663	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000a5e	    0xc7451c000000	               mov dword [rbp + 0x1c], 0	       664	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000a65	          0x4889dd	                            mov rbp, rbx	       664	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000a68	          0x4889eb	                            mov rbx, rbp	       664	merge.c	FUNCTION_11	IF_5	WHILE_1	IF_6
0x4000a6b	        0x4983ed08	                              sub r13, 8	       654	merge.c	FUNCTION_11	IF_5	WHILE_1
0x4000a6f	          0x4d39ec	                            cmp r12, r13	       654	merge.c	FUNCTION_11	IF_5	WHILE_1
0x4000a72	            0x76a3	                           jbe 0x4000a17	       654	merge.c	FUNCTION_11	IF_5	WHILE_1
0x4000a74	          0x4c89e7	                            mov rdi, r12	       671	merge.c	FUNCTION_11	CALL_4
0x4000a77	      0xe800000000	                          call 0x4000a7c	       671	merge.c	FUNCTION_11	CALL_4
0x4000a7c	        0x498b4710	            mov rax, qword [r15 + 0x10] 	       675	merge.c	FUNCTION_11
0x4000a80	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       675	merge.c	FUNCTION_11
0x4000a84	        0x488b7128	            mov rsi, qword [rcx + 0x28] 	       675	merge.c	FUNCTION_11
0x4000a88	      0xb800000000	                              mov eax, 0	       676	merge.c	FUNCTION_11	FOR_2
0x4000a8d	          0x4885c9	                           test rcx, rcx	       676	merge.c	FUNCTION_11	FOR_2
0x4000a90	            0x7514	                           jne 0x4000aa6	       676	merge.c	FUNCTION_11	FOR_2
0x4000a92	            0xeb4d	                           jmp 0x4000ae1	       676	merge.c	FUNCTION_11	FOR_2
0x4000a94	        0x48397128	            cmp qword [rcx + 0x28], rsi 	       678	merge.c	FUNCTION_11	FOR_2	IF_7
0x4000a98	            0x740c	                            je 0x4000aa6	       678	merge.c	FUNCTION_11	FOR_2	IF_7
0x4000a9a	        0x488b5608	                mov rdx, qword [rsi + 8]	       680	merge.c	FUNCTION_11	FOR_2	IF_7
0x4000a9e	        0x48894238	             mov qword [rdx + 0x38], rax	       680	merge.c	FUNCTION_11	FOR_2	IF_7
0x4000aa2	        0x488b7128	            mov rsi, qword [rcx + 0x28] 	       681	merge.c	FUNCTION_11	FOR_2	IF_7
0x4000aa6	        0x83791c00	               cmp dword [rcx + 0x1c], 0	       683	merge.c	FUNCTION_11	FOR_2	IF_8
0x4000aaa	            0x742c	                            je 0x4000ad8	       683	merge.c	FUNCTION_11	FOR_2	IF_8
0x4000aac	        0x488b5128	            mov rdx, qword [rcx + 0x28] 	       685	merge.c	FUNCTION_11	FOR_2	IF_8	IF_9
0x4000ab0	      0x48837a2000	               cmp qword [rdx + 0x20], 0	       685	merge.c	FUNCTION_11	FOR_2	IF_8	IF_9
0x4000ab5	            0x7509	                           jne 0x4000ac0	       685	merge.c	FUNCTION_11	FOR_2	IF_8	IF_9
0x4000ab7	        0x48894a20	             mov qword [rdx + 0x20], rcx	       687	merge.c	FUNCTION_11	FOR_2	IF_8	IF_9
0x4000abb	      0xb800000000	                              mov eax, 0	       688	merge.c	FUNCTION_11	FOR_2	IF_8	IF_9
0x4000ac0	          0x8b511c	            mov edx, dword [rcx + 0x1c] 	       690	merge.c	FUNCTION_11	FOR_2	IF_8
0x4000ac3	      0x488d4402ff	                lea rax, [rdx + rax - 1]	       690	merge.c	FUNCTION_11	FOR_2	IF_8
0x4000ac8	          0x48f7da	                                 neg rdx	       690	merge.c	FUNCTION_11	FOR_2	IF_8
0x4000acb	          0x4821d0	                            and rax, rdx	       690	merge.c	FUNCTION_11	FOR_2	IF_8
0x4000ace	        0x48894120	             mov qword [rcx + 0x20], rax	       691	merge.c	FUNCTION_11	FOR_2	IF_8
0x4000ad2	          0x8b5118	            mov edx, dword [rcx + 0x18] 	       692	merge.c	FUNCTION_11	FOR_2	IF_8
0x4000ad5	          0x4801d0	                            add rax, rdx	       692	merge.c	FUNCTION_11	FOR_2	IF_8
0x4000ad8	        0x488b4930	            mov rcx, qword [rcx + 0x30] 	       676	merge.c	FUNCTION_11	FOR_2
0x4000adc	          0x4885c9	                           test rcx, rcx	       676	merge.c	FUNCTION_11	FOR_2
0x4000adf	            0x75b3	                           jne 0x4000a94	       676	merge.c	FUNCTION_11	FOR_2
0x4000ae1	        0x488b5608	                mov rdx, qword [rsi + 8]	       695	merge.c	FUNCTION_11
0x4000ae5	        0x48894238	             mov qword [rdx + 0x38], rax	       695	merge.c	FUNCTION_11
0x4000ae9	        0x488b5608	                mov rdx, qword [rsi + 8]	       696	merge.c	FUNCTION_11	IF_10
0x4000aed	          0x8b4a70	            mov ecx, dword [rdx + 0x70] 	       696	merge.c	FUNCTION_11	IF_10
0x4000af0	            0x85c9	                           test ecx, ecx	       696	merge.c	FUNCTION_11	IF_10
0x4000af2	            0x741b	                            je 0x4000b0f	       696	merge.c	FUNCTION_11	IF_10
0x4000af4	      0xb801000000	                              mov eax, 1	       698	merge.c	FUNCTION_11	IF_10
0x4000af9	          0x48d3e0	                             shl rax, cl	       698	merge.c	FUNCTION_11	IF_10
0x4000afc	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	       699	merge.c	FUNCTION_11	IF_10
0x4000b00	      0x488d4c08ff	                lea rcx, [rax + rcx - 1]	       699	merge.c	FUNCTION_11	IF_10
0x4000b05	          0x48f7d8	                                 neg rax	       699	merge.c	FUNCTION_11	IF_10
0x4000b08	          0x4821c8	                            and rax, rcx	       699	merge.c	FUNCTION_11	IF_10
0x4000b0b	        0x48894238	             mov qword [rdx + 0x38], rax	       699	merge.c	FUNCTION_11	IF_10
0x4000b0f	        0x498b4710	            mov rax, qword [r15 + 0x10] 	       704	merge.c	FUNCTION_11	FOR_3
0x4000b13	        0x488d7030	                   lea rsi, [rax + 0x30]	       704	merge.c	FUNCTION_11	FOR_3
0x4000b17	        0x488b4030	            mov rax, qword [rax + 0x30] 	       704	merge.c	FUNCTION_11	FOR_3
0x4000b1b	          0x4885c0	                           test rax, rax	       704	merge.c	FUNCTION_11	FOR_3
0x4000b1e	     0xf8496000000	                            je 0x4000bba	       704	merge.c	FUNCTION_11	FOR_3
0x4000b24	        0x83781c00	               cmp dword [rax + 0x1c], 0	       705	merge.c	FUNCTION_11	FOR_3	IF_11
0x4000b28	            0x7406	                            je 0x4000b30	       705	merge.c	FUNCTION_11	FOR_3	IF_11
0x4000b2a	        0x488d7030	                   lea rsi, [rax + 0x30]	       706	merge.c	FUNCTION_11	FOR_3	IF_11
0x4000b2e	            0xeb2d	                           jmp 0x4000b5d	       706	merge.c	FUNCTION_11	FOR_3	IF_11
0x4000b30	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       709	merge.c	FUNCTION_11	ELSE_3
0x4000b34	          0x488916	                    mov qword [rsi], rdx	       709	merge.c	FUNCTION_11	ELSE_3
0x4000b37	          0x8b7818	            mov edi, dword [rax + 0x18] 	       710	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000b3a	            0x85ff	                           test edi, edi	       710	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000b3c	            0x741f	                            je 0x4000b5d	       710	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000b3e	        0x488b4820	            mov rcx, qword [rax + 0x20] 	       712	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000b42	        0x488b5128	            mov rdx, qword [rcx + 0x28] 	       712	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000b46	        0x48895028	             mov qword [rax + 0x28], rdx	       712	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000b4a	          0x8b511c	            mov edx, dword [rcx + 0x1c] 	       713	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000b4d	          0x89501c	             mov dword [rax + 0x1c], edx	       713	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000b50	          0x8b5118	            mov edx, dword [rcx + 0x18] 	       714	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000b53	            0x29fa	                            sub edx, edi	       714	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000b55	        0x48035120	             add rdx, qword [rcx + 0x20]	       714	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000b59	        0x48895020	             mov qword [rax + 0x20], rdx	       714	merge.c	FUNCTION_11	ELSE_3	IF_12
0x4000b5d	        0x488b4030	            mov rax, qword [rax + 0x30] 	       704	merge.c	FUNCTION_11	FOR_3
0x4000b61	          0x4885c0	                           test rax, rax	       704	merge.c	FUNCTION_11	FOR_3
0x4000b64	            0x75be	                           jne 0x4000b24	       704	merge.c	FUNCTION_11	FOR_3
0x4000b66	            0xeb52	                           jmp 0x4000bba	       704	merge.c	FUNCTION_11	FOR_3
0x4000b68	        0x488b7128	            mov rsi, qword [rcx + 0x28] 	       775	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3	IF_9
0x4000b6c	      0x48837e2000	               cmp qword [rsi + 0x20], 0	       775	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3	IF_9
0x4000b71	            0x751a	                           jne 0x4000b8d	       775	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3	IF_9
0x4000b73	          0x4885d2	                           test rdx, rdx	       777	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3	IF_9	IF_10
0x4000b76	            0x7408	                            je 0x4000b80	       777	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3	IF_9	IF_10
0x4000b78	        0x488b5208	                mov rdx, qword [rdx + 8]	       778	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3	IF_9	IF_10
0x4000b7c	        0x48894238	             mov qword [rdx + 0x38], rax	       778	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3	IF_9	IF_10
0x4000b80	        0x488b4128	            mov rax, qword [rcx + 0x28] 	       779	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3	IF_9
0x4000b84	        0x48894820	             mov qword [rax + 0x20], rcx	       779	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3	IF_9
0x4000b88	      0xb800000000	                              mov eax, 0	       780	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3	IF_9
0x4000b8d	          0x8b511c	            mov edx, dword [rcx + 0x1c] 	       782	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3
0x4000b90	      0x488d4410ff	                lea rax, [rax + rdx - 1]	       782	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3
0x4000b95	          0x48f7da	                                 neg rdx	       782	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3
0x4000b98	          0x4821d0	                            and rax, rdx	       782	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3
0x4000b9b	        0x48894120	             mov qword [rcx + 0x20], rax	       784	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3
0x4000b9f	          0x8b5118	            mov edx, dword [rcx + 0x18] 	       785	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3
0x4000ba2	          0x4801d0	                            add rax, rdx	       785	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3
0x4000ba5	        0x488b5128	            mov rdx, qword [rcx + 0x28] 	       786	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3
0x4000ba9	        0x488b4930	            mov rcx, qword [rcx + 0x30] 	       773	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3
0x4000bad	          0x4885c9	                           test rcx, rcx	       773	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3
0x4000bb0	            0x75b6	                           jne 0x4000b68	       773	merge.c	FUNCTION_12	FOR_1	ELSE_2	FOR_3
0x4000bb2	        0x488b5208	                mov rdx, qword [rdx + 8]	       788	merge.c	FUNCTION_12	FOR_1	ELSE_2
0x4000bb6	        0x48894238	             mov qword [rdx + 0x38], rax	       788	merge.c	FUNCTION_12	FOR_1	ELSE_2
0x4000bba	        0x498b4708	                mov rax, qword [r15 + 8]	       793	merge.c	FUNCTION_12	FOR_1	FOR_4
0x4000bbe	          0x4885c0	                           test rax, rax	       793	merge.c	FUNCTION_12	FOR_1	FOR_4
0x4000bc1	            0x741a	                            je 0x4000bdd	       793	merge.c	FUNCTION_12	FOR_1	FOR_4
0x4000bc3	      0x4883782000	               cmp qword [rax + 0x20], 0	       794	merge.c	FUNCTION_12	FOR_1	FOR_4	IF_11
0x4000bc8	            0x750b	                           jne 0x4000bd5	       794	merge.c	FUNCTION_12	FOR_1	FOR_4	IF_11
0x4000bca	        0x488b5008	                mov rdx, qword [rax + 8]	       795	merge.c	FUNCTION_12	FOR_1	FOR_4	IF_11
0x4000bce	    0x814a20008020	         or dword [rdx + 0x20], 0x208000	       795	merge.c	FUNCTION_12	FOR_1	FOR_4	IF_11
0x4000bd5	          0x488b00	                    mov rax, qword [rax]	       793	merge.c	FUNCTION_12	FOR_1	FOR_4
0x4000bd8	          0x4885c0	                           test rax, rax	       793	merge.c	FUNCTION_12	FOR_1	FOR_4
0x4000bdb	            0x75e6	                           jne 0x4000bc3	       793	merge.c	FUNCTION_12	FOR_1	FOR_4
0x4000bdd	          0x4d8b3f	                    mov r15, qword [r15]	       731	merge.c	FUNCTION_12	FOR_1
0x4000be0	          0x4d85ff	                           test r15, r15	       731	merge.c	FUNCTION_12	FOR_1
0x4000be3	     0xf85cffaffff	                           jne 0x40006b8	       731	merge.c	FUNCTION_12	FOR_1
0x4000be9	      0xb801000000	                              mov eax, 1	       798	merge.c	FUNCTION_12
0x4000bee	            0xeb46	                           jmp 0x4000c36	       798	merge.c	FUNCTION_12
0x4000bf0	      0xb801000000	                              mov eax, 1	       798	merge.c	FUNCTION_12
0x4000bf5	            0xeb3f	                           jmp 0x4000c36	       798	merge.c	FUNCTION_12
0x4000bf7	      0xb800000000	                              mov eax, 0	       763	merge.c	FUNCTION_12	FOR_1	IF_7	IF_8
0x4000bfc	            0xeb38	                           jmp 0x4000c36	       763	merge.c	FUNCTION_12	FOR_1	IF_7	IF_8
0x4000bfe	      0xb800000000	                              mov eax, 0	       752	merge.c	FUNCTION_12	FOR_1	ELSE_1	IF_4
0x4000c03	            0xeb31	                           jmp 0x4000c36	       752	merge.c	FUNCTION_12	FOR_1	ELSE_1	IF_4
0x4000c05	        0x498b7710	            mov rsi, qword [r15 + 0x10] 	       757	merge.c	FUNCTION_12	FOR_1	IF_6
0x4000c09	        0x488b4e30	            mov rcx, qword [rsi + 0x30] 	       757	merge.c	FUNCTION_12	FOR_1	IF_6
0x4000c0d	          0x4885c9	                           test rcx, rcx	       757	merge.c	FUNCTION_12	FOR_1	IF_6
0x4000c10	     0xf8525fdffff	                           jne 0x400093b	       757	merge.c	FUNCTION_12	FOR_1	IF_6
0x4000c16	            0xebc5	                           jmp 0x4000bdd	       757	merge.c	FUNCTION_12	FOR_1	IF_6
0x4000c18	    0x48c742280000	               mov qword [rdx + 0x28], 0	       643	merge.c	FUNCTION_11
0x4000c20	        0x498b4710	            mov rax, qword [r15 + 0x10] 	       644	merge.c	FUNCTION_11	IF_5
0x4000c24	        0x488b7028	            mov rsi, qword [rax + 0x28] 	       644	merge.c	FUNCTION_11	IF_5
0x4000c28	          0x4885f6	                           test rsi, rsi	       644	merge.c	FUNCTION_11	IF_5
0x4000c2b	     0xf85bdfdffff	                           jne 0x40009ee	       644	merge.c	FUNCTION_11	IF_5
0x4000c31	      0xe93efeffff	                           jmp 0x4000a74	       644	merge.c	FUNCTION_11	IF_5
0x4000c36	        0x4883c448	                           add rsp, 0x48	       799	merge.c	FUNCTION_12
0x4000c3a	              0x5b	                                 pop rbx	       799	merge.c	FUNCTION_12
0x4000c3b	              0x5d	                                 pop rbp	       799	merge.c	FUNCTION_12
0x4000c3c	            0x415c	                                 pop r12	       799	merge.c	FUNCTION_12
0x4000c3e	            0x415d	                                 pop r13	       799	merge.c	FUNCTION_12
0x4000c40	            0x415e	                                 pop r14	       799	merge.c	FUNCTION_12
0x4000c42	            0x415f	                                 pop r15	       799	merge.c	FUNCTION_12
0x4000c44	              0xc3	                                     ret	       799	merge.c	FUNCTION_12
sec_merge_add	IF,3:ELSE,1:SWITCH,0:functions,0:WHILE,0:CALL,1:DO,0:FOR,0	28
0x4000398	              0x55	                                push rbp	       265	merge.c	FUNCTION_4
0x4000399	              0x53	                                push rbx	       265	merge.c	FUNCTION_4
0x400039a	        0x4883ec08	                              sub rsp, 8	       265	merge.c	FUNCTION_4
0x400039e	          0x4889fb	                            mov rbx, rdi	       265	merge.c	FUNCTION_4
0x40003a1	          0x4889cd	                            mov rbp, rcx	       265	merge.c	FUNCTION_4
0x40003a4	      0xb901000000	                              mov ecx, 1	       268	merge.c	FUNCTION_4	CALL_1
0x40003a9	      0xe8f1fdffff	          call sym.sec_merge_hash_lookup	       268	merge.c	FUNCTION_4	CALL_1
0x40003ae	          0x4885c0	                           test rax, rax	       269	merge.c	FUNCTION_4	IF_1
0x40003b1	            0x7431	                            je 0x40003e4	       269	merge.c	FUNCTION_4	IF_1
0x40003b3	          0x4889c2	                            mov rdx, rax	       269	merge.c	FUNCTION_4	IF_1
0x40003b6	      0x4883782800	               cmp qword [rax + 0x28], 0	       272	merge.c	FUNCTION_4	IF_2
0x40003bb	            0x752c	                           jne 0x40003e9	       272	merge.c	FUNCTION_4	IF_2
0x40003bd	      0x4883432801	               add qword [rbx + 0x28], 1	       274	merge.c	FUNCTION_4	IF_2
0x40003c2	        0x48896828	             mov qword [rax + 0x28], rbp	       275	merge.c	FUNCTION_4	IF_2
0x40003c6	      0x48837b3000	               cmp qword [rbx + 0x30], 0	       276	merge.c	FUNCTION_4	IF_2	IF_3
0x40003cb	            0x7506	                           jne 0x40003d3	       276	merge.c	FUNCTION_4	IF_2	IF_3
0x40003cd	        0x48894330	             mov qword [rbx + 0x30], rax	       277	merge.c	FUNCTION_4	IF_2	IF_3
0x40003d1	            0xeb08	                           jmp 0x40003db	       277	merge.c	FUNCTION_4	IF_2	IF_3
0x40003d3	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       279	merge.c	FUNCTION_4	IF_2	ELSE_1
0x40003d7	        0x48895030	             mov qword [rax + 0x30], rdx	       279	merge.c	FUNCTION_4	IF_2	ELSE_1
0x40003db	        0x48895338	             mov qword [rbx + 0x38], rdx	       280	merge.c	FUNCTION_4	IF_2	ELSE_1
0x40003df	          0x4889d0	                            mov rax, rdx	       283	merge.c	FUNCTION_4	ELSE_1
0x40003e2	            0xeb05	                           jmp 0x40003e9	       283	merge.c	FUNCTION_4	ELSE_1
0x40003e4	      0xb800000000	                              mov eax, 0	       270	merge.c	FUNCTION_4	IF_1
0x40003e9	        0x4883c408	                              add rsp, 8	       284	merge.c	FUNCTION_4	ELSE_1
0x40003ed	              0x5b	                                 pop rbx	       284	merge.c	FUNCTION_4	ELSE_1
0x40003ee	              0x5d	                                 pop rbp	       284	merge.c	FUNCTION_4	ELSE_1
0x40003ef	              0xc3	                                     ret	       284	merge.c	FUNCTION_4	ELSE_1
strrevcmp_align	IF,2:ELSE,0:SWITCH,0:functions,0:WHILE,1:CALL,0:DO,0:FOR,0	46
0x40000b2	          0x488b0f	                    mov rcx, qword [rdi]	       576	merge.c	FUNCTION_9
0x40000b5	          0x488b36	                    mov rsi, qword [rsi]	       577	merge.c	FUNCTION_9
0x40000b8	        0x448b5118	           mov r10d, dword [rcx + 0x18] 	       578	merge.c	FUNCTION_9
0x40000bc	        0x448b4e18	            mov r9d, dword [rsi + 0x18] 	       579	merge.c	FUNCTION_9
0x40000c0	          0x8b411c	            mov eax, dword [rcx + 0x1c] 	       583	merge.c	FUNCTION_9
0x40000c3	          0x83e801	                              sub eax, 1	       583	merge.c	FUNCTION_9
0x40000c6	          0x4489d2	                           mov edx, r10d	       583	merge.c	FUNCTION_9
0x40000c9	            0x21c2	                            and edx, eax	       583	merge.c	FUNCTION_9
0x40000cb	          0x4421c8	                            and eax, r9d	       583	merge.c	FUNCTION_9
0x40000ce	            0x29c2	                            sub edx, eax	       583	merge.c	FUNCTION_9
0x40000d0	            0x89d0	                            mov eax, edx	       586	merge.c	FUNCTION_9	IF_1
0x40000d2	            0x85d2	                           test edx, edx	       585	merge.c	FUNCTION_9	IF_1
0x40000d4	            0x7566	                           jne 0x400013c	       585	merge.c	FUNCTION_9	IF_1
0x40000d6	          0x4539ca	                           cmp r10d, r9d	       582	merge.c	FUNCTION_9
0x40000d9	          0x4589cb	                           mov r11d, r9d	       582	merge.c	FUNCTION_9
0x40000dc	        0x450f46da	                       cmovbe r11d, r10d	       582	merge.c	FUNCTION_9
0x40000e0	          0x4585db	                         test r11d, r11d	       588	merge.c	FUNCTION_9	WHILE_1
0x40000e3	            0x7451	                            je 0x4000136	       588	merge.c	FUNCTION_9	WHILE_1
0x40000e5	          0x4489d0	                           mov eax, r10d	       580	merge.c	FUNCTION_9
0x40000e8	        0x488b5108	                mov rdx, qword [rcx + 8]	       580	merge.c	FUNCTION_9
0x40000ec	      0x488d7c02ff	                lea rdi, [rdx + rax - 1]	       580	merge.c	FUNCTION_9
0x40000f1	          0x4489c8	                            mov eax, r9d	       581	merge.c	FUNCTION_9
0x40000f4	        0x488b5608	                mov rdx, qword [rsi + 8]	       581	merge.c	FUNCTION_9
0x40000f8	      0x4c8d4402ff	                 lea r8, [rdx + rax - 1]	       581	merge.c	FUNCTION_9
0x40000fd	           0xfb617	                   movzx edx, byte [rdi]	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x4000100	        0x410fb608	                    movzx ecx, byte [r8]	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x4000104	            0x38ca	                              cmp dl, cl	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x4000106	            0x741d	                            je 0x4000125	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x4000108	            0xeb12	                           jmp 0x400011c	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x400010a	       0xfb65407ff	         movzx edx, byte [rdi + rax - 1]	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x400010f	        0x4883e801	                              sub rax, 1	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x4000113	      0x410fb60c00	              movzx ecx, byte [r8 + rax]	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x4000118	            0x38ca	                              cmp dl, cl	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x400011a	            0x7415	                            je 0x4000131	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x400011c	           0xfb6c2	                           movzx eax, dl	       591	merge.c	FUNCTION_9	WHILE_1	IF_2
0x400011f	           0xfb6c9	                           movzx ecx, cl	       591	merge.c	FUNCTION_9	WHILE_1	IF_2
0x4000122	            0x29c8	                            sub eax, ecx	       591	merge.c	FUNCTION_9	WHILE_1	IF_2
0x4000124	              0xc3	                                     ret	       591	merge.c	FUNCTION_9	WHILE_1	IF_2
0x4000125	        0x418d73ff	                      lea esi, [r11 - 1]	       591	merge.c	FUNCTION_9	WHILE_1	IF_2
0x4000129	          0x48f7de	                                 neg rsi	       591	merge.c	FUNCTION_9	WHILE_1	IF_2
0x400012c	      0xb800000000	                              mov eax, 0	       590	merge.c	FUNCTION_9	WHILE_1	IF_2
0x4000131	          0x4839c6	                            cmp rsi, rax	       588	merge.c	FUNCTION_9	WHILE_1
0x4000134	            0x75d4	                           jne 0x400010a	       588	merge.c	FUNCTION_9	WHILE_1
0x4000136	          0x4489d0	                           mov eax, r10d	       596	merge.c	FUNCTION_9
0x4000139	          0x4429c8	                            sub eax, r9d	       596	merge.c	FUNCTION_9
0x400013c	            0xf3c3	                                     ret	       597	merge.c	FUNCTION_9
_bfd_add_merge_section	IF,13:ELSE,1:SWITCH,0:functions,0:WHILE,0:CALL,6:DO,0:FOR,1	174
0x40003f0	            0x4157	                                push r15	       363	merge.c	FUNCTION_6
0x40003f2	            0x4156	                                push r14	       363	merge.c	FUNCTION_6
0x40003f4	            0x4155	                                push r13	       363	merge.c	FUNCTION_6
0x40003f6	            0x4154	                                push r12	       363	merge.c	FUNCTION_6
0x40003f8	              0x55	                                push rbp	       363	merge.c	FUNCTION_6
0x40003f9	              0x53	                                push rbx	       363	merge.c	FUNCTION_6
0x40003fa	        0x4883ec28	                           sub rsp, 0x28	       363	merge.c	FUNCTION_6
0x40003fe	    0x64488b042528	                mov rax, qword fs:[0x28]	       363	merge.c	FUNCTION_6
0x4000407	      0x4889442418	             mov qword [rsp + 0x18], rax	       363	merge.c	FUNCTION_6
0x400040c	            0x31c0	                            xor eax, eax	       363	merge.c	FUNCTION_6
0x400040e	        0xf6474508	               test byte [rdi + 0x45], 8	       370	merge.c	FUNCTION_6	IF_1
0x4000412	            0x7517	                           jne 0x400042b	       370	merge.c	FUNCTION_6	IF_1
0x4000414	          0x4989fc	                            mov r12, rdi	       370	merge.c	FUNCTION_6	IF_1
0x4000417	          0x4989f6	                            mov r14, rsi	       370	merge.c	FUNCTION_6	IF_1
0x400041a	          0x4889d5	                            mov rbp, rdx	       370	merge.c	FUNCTION_6	IF_1
0x400041d	          0x4989cd	                            mov r13, rcx	       370	merge.c	FUNCTION_6	IF_1
0x4000420	          0x8b5220	            mov edx, dword [rdx + 0x20] 	       371	merge.c	FUNCTION_6	IF_1
0x4000423	    0xf7c200008000	                      test edx, 0x800000	       371	merge.c	FUNCTION_6	IF_1
0x4000429	            0x7514	                           jne 0x400043f	       371	merge.c	FUNCTION_6	IF_1
0x400042b	      0xba00000000	                              mov edx, 0	       372	merge.c	FUNCTION_6	CALL_1
0x4000430	      0xbe74010000	                          mov esi, 0x174	       372	merge.c	FUNCTION_6	CALL_1
0x4000435	      0xbf00000000	                              mov edi, 0	       372	merge.c	FUNCTION_6	CALL_1
0x400043a	      0xe800000000	                          call 0x400043f	       372	merge.c	FUNCTION_6	CALL_1
0x400043f	      0xb801000000	                              mov eax, 1	       377	merge.c	FUNCTION_6	IF_2
0x4000444	      0x48837d3800	               cmp qword [rbp + 0x38], 0	       374	merge.c	FUNCTION_6	IF_2
0x4000449	     0xf8415020000	                            je 0x4000664	       374	merge.c	FUNCTION_6	IF_2
0x400044f	          0xf6c680	                           test dh, 0x80	       375	merge.c	FUNCTION_6	IF_2
0x4000452	     0xf850c020000	                           jne 0x4000664	       375	merge.c	FUNCTION_6	IF_2
0x4000458	    0x8bbdc4000000	            mov edi, dword [rbp + 0xc4] 	       376	merge.c	FUNCTION_6	IF_2
0x400045e	            0x85ff	                           test edi, edi	       376	merge.c	FUNCTION_6	IF_2
0x4000460	     0xf84fe010000	                            je 0x4000664	       376	merge.c	FUNCTION_6	IF_2
0x4000466	          0xf6c204	                              test dl, 4	       379	merge.c	FUNCTION_6	IF_3
0x4000469	     0xf85f5010000	                           jne 0x4000664	       379	merge.c	FUNCTION_6	IF_3
0x400046f	          0x8b4d70	            mov ecx, dword [rbp + 0x70] 	       385	merge.c	FUNCTION_6
0x4000472	            0x89f8	                            mov eax, edi	       386	merge.c	FUNCTION_6	IF_4
0x4000474	            0xd3e8	                             shr eax, cl	       386	merge.c	FUNCTION_6	IF_4
0x4000476	            0x85c0	                           test eax, eax	       386	merge.c	FUNCTION_6	IF_4
0x4000478	            0x751c	                           jne 0x4000496	       386	merge.c	FUNCTION_6	IF_4
0x400047a	          0x8d77ff	                      lea esi, [rdi - 1]	       387	merge.c	FUNCTION_6	IF_4
0x400047d	      0xb801000000	                              mov eax, 1	       398	merge.c	FUNCTION_6	IF_4
0x4000482	            0x85fe	                           test esi, edi	       387	merge.c	FUNCTION_6	IF_4
0x4000484	     0xf85da010000	                           jne 0x4000664	       387	merge.c	FUNCTION_6	IF_4
0x400048a	    0xf7c200000001	                     test edx, 0x1000000	       388	merge.c	FUNCTION_6	IF_4
0x4000490	     0xf84ce010000	                            je 0x4000664	       388	merge.c	FUNCTION_6	IF_4
0x4000496	      0xb801000000	                              mov eax, 1	       389	merge.c	FUNCTION_6	IF_4
0x400049b	            0xd3e0	                             shl eax, cl	       389	merge.c	FUNCTION_6	IF_4
0x400049d	            0x39c7	                            cmp edi, eax	       389	merge.c	FUNCTION_6	IF_4
0x400049f	            0x7610	                           jbe 0x40004b1	       389	merge.c	FUNCTION_6	IF_4
0x40004a1	          0x8d70ff	                      lea esi, [rax - 1]	       390	merge.c	FUNCTION_6	IF_4
0x40004a4	      0xb801000000	                              mov eax, 1	       398	merge.c	FUNCTION_6	IF_4
0x40004a9	            0x85fe	                           test esi, edi	       390	merge.c	FUNCTION_6	IF_4
0x40004ab	     0xf85b3010000	                           jne 0x4000664	       390	merge.c	FUNCTION_6	IF_4
0x40004b1	          0x498b1e	                    mov rbx, qword [r14]	       401	merge.c	FUNCTION_6	FOR_1
0x40004b4	          0x4885db	                           test rbx, rbx	       401	merge.c	FUNCTION_6	FOR_1
0x40004b7	            0x7444	                            je 0x40004fd	       401	merge.c	FUNCTION_6	FOR_1
0x40004b9	        0x488b4308	                mov rax, qword [rbx + 8]	       402	merge.c	FUNCTION_6	FOR_1	IF_5
0x40004bd	          0x4885c0	                           test rax, rax	       402	merge.c	FUNCTION_6	FOR_1	IF_5
0x40004c0	            0x7428	                            je 0x40004ea	       402	merge.c	FUNCTION_6	FOR_1	IF_5
0x40004c2	        0x488b4008	                mov rax, qword [rax + 8]	       403	merge.c	FUNCTION_6	FOR_1	IF_5
0x40004c6	            0x89d6	                            mov esi, edx	       403	merge.c	FUNCTION_6	FOR_1	IF_5
0x40004c8	          0x337020	             xor esi, dword [rax + 0x20]	       403	merge.c	FUNCTION_6	FOR_1	IF_5
0x40004cb	    0xf7c600008001	                     test esi, 0x1800000	       403	merge.c	FUNCTION_6	FOR_1	IF_5
0x40004d1	            0x7517	                           jne 0x40004ea	       403	merge.c	FUNCTION_6	FOR_1	IF_5
0x40004d3	    0x3bb8c4000000	            cmp edi, dword [rax + 0xc4] 	       404	merge.c	FUNCTION_6	FOR_1	IF_5
0x40004d9	            0x750f	                           jne 0x40004ea	       404	merge.c	FUNCTION_6	FOR_1	IF_5
0x40004db	          0x3b4870	            cmp ecx, dword [rax + 0x70] 	       405	merge.c	FUNCTION_6	FOR_1	IF_5
0x40004de	            0x750a	                           jne 0x40004ea	       405	merge.c	FUNCTION_6	FOR_1	IF_5
0x40004e0	        0x488b7568	            mov rsi, qword [rbp + 0x68] 	       406	merge.c	FUNCTION_6	FOR_1	IF_5
0x40004e4	        0x48397068	            cmp qword [rax + 0x68], rsi 	       406	merge.c	FUNCTION_6	FOR_1	IF_5
0x40004e8	            0x740a	                            je 0x40004f4	       406	merge.c	FUNCTION_6	FOR_1	IF_5
0x40004ea	          0x488b1b	                    mov rbx, qword [rbx]	       401	merge.c	FUNCTION_6	FOR_1
0x40004ed	          0x4885db	                           test rbx, rbx	       401	merge.c	FUNCTION_6	FOR_1
0x40004f0	            0x75c7	                           jne 0x40004b9	       401	merge.c	FUNCTION_6	FOR_1
0x40004f2	            0xeb09	                           jmp 0x40004fd	       401	merge.c	FUNCTION_6	FOR_1
0x40004f4	          0x4885db	                           test rbx, rbx	       409	merge.c	FUNCTION_6	IF_6
0x40004f7	     0xf85a3000000	                           jne 0x40005a0	       409	merge.c	FUNCTION_6	IF_6
0x40004fd	      0xbe18000000	                           mov esi, 0x18	       412	merge.c	FUNCTION_6	IF_6
0x4000502	          0x4c89e7	                            mov rdi, r12	       412	merge.c	FUNCTION_6	IF_6
0x4000505	      0xe800000000	                          call 0x400050a	       412	merge.c	FUNCTION_6	IF_6
0x400050a	          0x4889c3	                            mov rbx, rax	       412	merge.c	FUNCTION_6	IF_6
0x400050d	          0x4885c0	                           test rax, rax	       414	merge.c	FUNCTION_6	IF_6	IF_7
0x4000510	     0xf8441010000	                            je 0x4000657	       414	merge.c	FUNCTION_6	IF_6	IF_7
0x4000516	          0x498b06	                    mov rax, qword [r14]	       416	merge.c	FUNCTION_6	IF_6
0x4000519	          0x488903	                    mov qword [rbx], rax	       416	merge.c	FUNCTION_6	IF_6
0x400051c	    0x48c743080000	                  mov qword [rbx + 8], 0	       417	merge.c	FUNCTION_6	IF_6
0x4000524	          0x49891e	                    mov qword [r14], rbx	       418	merge.c	FUNCTION_6	IF_6
0x4000527	          0x8b4520	            mov eax, dword [rbp + 0x20] 	       419	merge.c	FUNCTION_6	IF_6	CALL_3
0x400052a	      0x2500000001	                      and eax, 0x1000000	       419	merge.c	FUNCTION_6	IF_6	CALL_3
0x400052f	        0x8944240c	              mov dword [rsp + 0xc], eax	       419	merge.c	FUNCTION_6	IF_6	CALL_3
0x4000533	    0x448bbdc40000	           mov r15d, dword [rbp + 0xc4] 	       419	merge.c	FUNCTION_6	IF_6	CALL_3
0x400053a	      0xbf48000000	                           mov edi, 0x48	       239	merge.c	FUNCTION_3	CALL_1
0x400053f	      0xe800000000	                          call 0x4000544	       239	merge.c	FUNCTION_3	CALL_1
0x4000544	          0x4989c6	                            mov r14, rax	       239	merge.c	FUNCTION_3	CALL_1
0x4000547	          0x4885c0	                           test rax, rax	       240	merge.c	FUNCTION_3	IF_1
0x400054a	     0xf8426010000	                            je 0x4000676	       240	merge.c	FUNCTION_3	IF_1
0x4000550	      0xb93b410000	                         mov ecx, 0x413b	       243	merge.c	FUNCTION_3	IF_2	CALL_2
0x4000555	      0xba38000000	                           mov edx, 0x38	       243	merge.c	FUNCTION_3	IF_2	CALL_2
0x400055a	      0xbe00000000	                              mov esi, 0	       243	merge.c	FUNCTION_3	IF_2	CALL_2
0x400055f	          0x4889c7	                            mov rdi, rax	       243	merge.c	FUNCTION_3	IF_2	CALL_2
0x4000562	      0xe800000000	                          call 0x4000567	       243	merge.c	FUNCTION_3	IF_2	CALL_2
0x4000567	            0x85c0	                           test eax, eax	       243	merge.c	FUNCTION_3	IF_2	CALL_2
0x4000569	            0x750d	                           jne 0x4000578	       243	merge.c	FUNCTION_3	IF_2	CALL_2
0x400056b	          0x4c89f7	                            mov rdi, r14	       246	merge.c	FUNCTION_3	IF_2	CALL_3
0x400056e	      0xe800000000	                          call 0x4000573	       246	merge.c	FUNCTION_3	IF_2	CALL_3
0x4000573	      0xe9fe000000	                           jmp 0x4000676	       246	merge.c	FUNCTION_3	IF_2	CALL_3
0x4000578	    0x49c746280000	               mov qword [r14 + 0x28], 0	       250	merge.c	FUNCTION_3
0x4000580	    0x49c746300000	               mov qword [r14 + 0x30], 0	       251	merge.c	FUNCTION_3
0x4000588	    0x49c746380000	               mov qword [r14 + 0x38], 0	       252	merge.c	FUNCTION_3
0x4000590	        0x45897e40	            mov dword [r14 + 0x40], r15d	       253	merge.c	FUNCTION_3
0x4000594	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       254	merge.c	FUNCTION_3
0x4000598	        0x41894644	             mov dword [r14 + 0x44], eax	       254	merge.c	FUNCTION_3
0x400059c	        0x4c897310	             mov qword [rbx + 0x10], r14	       419	merge.c	FUNCTION_6	IF_6	CALL_3
0x40005a0	        0x488b4538	            mov rax, qword [rbp + 0x38] 	       426	merge.c	FUNCTION_6
0x40005a4	        0x488d702f	                   lea rsi, [rax + 0x2f]	       426	merge.c	FUNCTION_6
0x40005a8	        0xf6452301	               test byte [rbp + 0x23], 1	       427	merge.c	FUNCTION_6	IF_9
0x40005ac	            0x7409	                            je 0x40005b7	       427	merge.c	FUNCTION_6	IF_9
0x40005ae	    0x8b85c4000000	            mov eax, dword [rbp + 0xc4] 	       431	merge.c	FUNCTION_6	IF_9
0x40005b4	          0x4801c6	                            add rsi, rax	       431	merge.c	FUNCTION_6	IF_9
0x40005b7	          0x4c89e7	                            mov rdi, r12	       432	merge.c	FUNCTION_6	CALL_4
0x40005ba	      0xe800000000	                          call 0x40005bf	       432	merge.c	FUNCTION_6	CALL_4
0x40005bf	          0x4989c4	                            mov r12, rax	       432	merge.c	FUNCTION_6	CALL_4
0x40005c2	        0x49894500	                    mov qword [r13], rax	       432	merge.c	FUNCTION_6	CALL_4
0x40005c6	          0x4885c0	                           test rax, rax	       433	merge.c	FUNCTION_6	IF_10
0x40005c9	     0xf8488000000	                            je 0x4000657	       433	merge.c	FUNCTION_6	IF_10
0x40005cf	        0x488b4308	                mov rax, qword [rbx + 8]	       437	merge.c	FUNCTION_6	IF_11
0x40005d3	          0x4885c0	                           test rax, rax	       437	merge.c	FUNCTION_6	IF_11
0x40005d6	            0x7410	                            je 0x40005e8	       437	merge.c	FUNCTION_6	IF_11
0x40005d8	          0x488b00	                    mov rax, qword [rax]	       439	merge.c	FUNCTION_6	IF_11
0x40005db	        0x49890424	                    mov qword [r12], rax	       439	merge.c	FUNCTION_6	IF_11
0x40005df	        0x488b4308	                mov rax, qword [rbx + 8]	       440	merge.c	FUNCTION_6	IF_11
0x40005e3	          0x4c8920	                    mov qword [rax], r12	       440	merge.c	FUNCTION_6	IF_11
0x40005e6	            0xeb04	                           jmp 0x40005ec	       440	merge.c	FUNCTION_6	IF_11
0x40005e8	        0x4d892424	                    mov qword [r12], r12	       443	merge.c	FUNCTION_6	ELSE_1
0x40005ec	        0x4c896308	                mov qword [rbx + 8], r12	       444	merge.c	FUNCTION_6
0x40005f0	      0x49896c2408	                mov qword [r12 + 8], rbp	       445	merge.c	FUNCTION_6
0x40005f5	      0x4d896c2410	             mov qword [r12 + 0x10], r13	       446	merge.c	FUNCTION_6
0x40005fa	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       447	merge.c	FUNCTION_6
0x40005fe	      0x4989442418	             mov qword [r12 + 0x18], rax	       447	merge.c	FUNCTION_6
0x4000603	    0x49c744242000	               mov qword [r12 + 0x20], 0	       448	merge.c	FUNCTION_6
0x400060c	        0x488b4538	            mov rax, qword [rbp + 0x38] 	       450	merge.c	FUNCTION_6
0x4000610	        0x48894540	            mov qword [rbp + 0x40], rax 	       450	merge.c	FUNCTION_6
0x4000614	        0xf6452301	               test byte [rbp + 0x23], 1	       451	merge.c	FUNCTION_6	IF_12
0x4000618	            0x7415	                            je 0x400062f	       451	merge.c	FUNCTION_6	IF_12
0x400061a	    0x8b95c4000000	            mov edx, dword [rbp + 0xc4] 	        90	string3.h	FUNCTION_19	CALL_6
0x4000620	      0x498d7c0428	            lea rdi, [r12 + rax + 0x28] 	        90	string3.h	FUNCTION_19	CALL_6
0x4000625	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_19	CALL_6
0x400062a	      0xe800000000	                          call 0x400062f	        90	string3.h	FUNCTION_19	CALL_6
0x400062f	        0x4983c428	                           add r12, 0x28	       453	merge.c	FUNCTION_6
0x4000633	      0x4c89642410	             mov qword [rsp + 0x10], r12	       453	merge.c	FUNCTION_6
0x4000638	    0x488bbdf00000	            mov rdi, qword [rbp + 0xf0] 	       454	merge.c	FUNCTION_6	IF_13	CALL_6
0x400063f	      0x488d542410	                   lea rdx, [rsp + 0x10]	       454	merge.c	FUNCTION_6	IF_13	CALL_6
0x4000644	          0x4889ee	                            mov rsi, rbp	       454	merge.c	FUNCTION_6	IF_13	CALL_6
0x4000647	      0xe800000000	                          call 0x400064c	       454	merge.c	FUNCTION_6	IF_13	CALL_6
0x400064c	            0x89c2	                            mov edx, eax	       454	merge.c	FUNCTION_6	IF_13	CALL_6
0x400064e	      0xb801000000	                              mov eax, 1	       457	merge.c	FUNCTION_6
0x4000653	            0x85d2	                           test edx, edx	       454	merge.c	FUNCTION_6	IF_13	CALL_6
0x4000655	            0x750d	                           jne 0x4000664	       454	merge.c	FUNCTION_6	IF_13	CALL_6
0x4000657	    0x49c745000000	                      mov qword [r13], 0	       460	merge.c	FUNCTION_6
0x400065f	      0xb800000000	                              mov eax, 0	       461	merge.c	FUNCTION_6
0x4000664	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       462	merge.c	FUNCTION_6
0x4000669	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       462	merge.c	FUNCTION_6
0x4000672	            0x7411	                            je 0x4000685	       462	merge.c	FUNCTION_6
0x4000674	            0xeb0a	                           jmp 0x4000680	       462	merge.c	FUNCTION_6
0x4000676	    0x48c743100000	               mov qword [rbx + 0x10], 0	       419	merge.c	FUNCTION_6	IF_6	CALL_3
0x400067e	            0xebd7	                           jmp 0x4000657	       419	merge.c	FUNCTION_6	IF_6	CALL_3
0x4000680	      0xe800000000	                          call 0x4000685	       462	merge.c	FUNCTION_6
0x4000685	        0x4883c428	                           add rsp, 0x28	       462	merge.c	FUNCTION_6
0x4000689	              0x5b	                                 pop rbx	       462	merge.c	FUNCTION_6
0x400068a	              0x5d	                                 pop rbp	       462	merge.c	FUNCTION_6
0x400068b	            0x415c	                                 pop r12	       462	merge.c	FUNCTION_6
0x400068d	            0x415d	                                 pop r13	       462	merge.c	FUNCTION_6
0x400068f	            0x415e	                                 pop r14	       462	merge.c	FUNCTION_6
0x4000691	            0x415f	                                 pop r15	       462	merge.c	FUNCTION_6
0x4000693	              0xc3	                                     ret	       462	merge.c	FUNCTION_6
sec_merge_hash_newfunc	IF,3:ELSE,0:SWITCH,0:functions,0:WHILE,0:CALL,2:DO,0:FOR,0	27
0x400013e	              0x55	                                push rbp	       107	merge.c	FUNCTION_1
0x400013f	              0x53	                                push rbx	       107	merge.c	FUNCTION_1
0x4000140	        0x4883ec08	                              sub rsp, 8	       107	merge.c	FUNCTION_1
0x4000144	          0x4889f3	                            mov rbx, rsi	       107	merge.c	FUNCTION_1
0x4000147	          0x4889d5	                            mov rbp, rdx	       107	merge.c	FUNCTION_1
0x400014a	          0x4885ff	                           test rdi, rdi	       110	merge.c	FUNCTION_1	IF_1
0x400014d	            0x751a	                           jne 0x4000169	       110	merge.c	FUNCTION_1	IF_1
0x400014f	      0xbe38000000	                           mov esi, 0x38	       111	merge.c	FUNCTION_1	IF_1
0x4000154	          0x4889df	                            mov rdi, rbx	       111	merge.c	FUNCTION_1	IF_1
0x4000157	      0xe800000000	                          call 0x400015c	       111	merge.c	FUNCTION_1	IF_1
0x400015c	          0x4889c7	                            mov rdi, rax	       111	merge.c	FUNCTION_1	IF_1
0x400015f	      0xb800000000	                              mov eax, 0	       114	merge.c	FUNCTION_1	IF_2
0x4000164	          0x4885ff	                           test rdi, rdi	       113	merge.c	FUNCTION_1	IF_2
0x4000167	            0x742f	                            je 0x4000198	       113	merge.c	FUNCTION_1	IF_2
0x4000169	          0x4889ea	                            mov rdx, rbp	       117	merge.c	FUNCTION_1	CALL_2
0x400016c	          0x4889de	                            mov rsi, rbx	       117	merge.c	FUNCTION_1	CALL_2
0x400016f	      0xe800000000	                          call 0x4000174	       117	merge.c	FUNCTION_1	CALL_2
0x4000174	          0x4885c0	                           test rax, rax	       119	merge.c	FUNCTION_1	IF_3
0x4000177	            0x741f	                            je 0x4000198	       119	merge.c	FUNCTION_1	IF_3
0x4000179	    0x48c740200000	               mov qword [rax + 0x20], 0	       124	merge.c	FUNCTION_1	IF_3
0x4000181	    0xc7401c000000	               mov dword [rax + 0x1c], 0	       125	merge.c	FUNCTION_1	IF_3
0x4000188	    0x48c740280000	               mov qword [rax + 0x28], 0	       126	merge.c	FUNCTION_1	IF_3
0x4000190	    0x48c740300000	               mov qword [rax + 0x30], 0	       127	merge.c	FUNCTION_1	IF_3
0x4000198	        0x4883c408	                              add rsp, 8	       131	merge.c	FUNCTION_1
0x400019c	              0x5b	                                 pop rbx	       131	merge.c	FUNCTION_1
0x400019d	              0x5d	                                 pop rbp	       131	merge.c	FUNCTION_1
0x400019e	              0xc3	                                     ret	       131	merge.c	FUNCTION_1
sec_merge_hash_lookup	IF,9:ELSE,2:SWITCH,0:functions,0:WHILE,1:CALL,2:DO,0:FOR,5	162
0x400019f	            0x4157	                                push r15	       138	merge.c	FUNCTION_2
0x40001a1	            0x4156	                                push r14	       138	merge.c	FUNCTION_2
0x40001a3	            0x4155	                                push r13	       138	merge.c	FUNCTION_2
0x40001a5	            0x4154	                                push r12	       138	merge.c	FUNCTION_2
0x40001a7	              0x55	                                push rbp	       138	merge.c	FUNCTION_2
0x40001a8	              0x53	                                push rbx	       138	merge.c	FUNCTION_2
0x40001a9	        0x4883ec18	                           sub rsp, 0x18	       138	merge.c	FUNCTION_2
0x40001ad	          0x4989fd	                            mov r13, rdi	       138	merge.c	FUNCTION_2
0x40001b0	          0x4989f6	                            mov r14, rsi	       138	merge.c	FUNCTION_2
0x40001b3	        0x8954240c	              mov dword [rsp + 0xc], edx	       138	merge.c	FUNCTION_2
0x40001b7	        0x894c2408	                mov dword [rsp + 8], ecx	       138	merge.c	FUNCTION_2
0x40001bb	        0x837f4400	               cmp dword [rdi + 0x44], 0	       149	merge.c	FUNCTION_2	IF_1
0x40001bf	            0x7516	                           jne 0x40001d7	       149	merge.c	FUNCTION_2	IF_1
0x40001c1	          0x8b6f40	            mov ebp, dword [rdi + 0x40] 	       186	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x40001c4	    0x41bc00000000	                             mov r12d, 0	       186	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x40001ca	            0x85ed	                           test ebp, ebp	       186	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x40001cc	     0xf841f010000	                            je 0x40002f1	       186	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x40001d2	      0xe9e6000000	                           jmp 0x40002bd	       186	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x40001d7	          0x8b7f40	            mov edi, dword [rdi + 0x40] 	       151	merge.c	FUNCTION_2	IF_1	IF_2
0x40001da	          0x83ff01	                              cmp edi, 1	       151	merge.c	FUNCTION_2	IF_1	IF_2
0x40001dd	            0x7553	                           jne 0x4000232	       151	merge.c	FUNCTION_2	IF_1	IF_2
0x40001df	        0x488d4e01	                      lea rcx, [rsi + 1]	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40001e3	           0xfb616	                   movzx edx, byte [rsi]	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40001e6	            0x85d2	                           test edx, edx	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40001e8	            0x7430	                            je 0x400021a	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40001ea	      0xbd00000000	                              mov ebp, 0	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40001ef	      0xb800000000	                              mov eax, 0	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40001f4	            0x89d6	                            mov esi, edx	       155	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40001f6	          0xc1e611	                           shl esi, 0x11	       155	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40001f9	             0x1f2	                            add edx, esi	       155	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40001fb	            0x89d2	                            mov edx, edx	       155	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x40001fd	          0x4801d0	                            add rax, rdx	       155	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x4000200	          0x4889c2	                            mov rdx, rax	       156	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x4000203	        0x48c1ea02	                              shr rdx, 2	       156	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x4000207	          0x4831d0	                            xor rax, rdx	       156	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x400020a	          0x83c501	                              add ebp, 1	       157	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x400020d	           0xfb611	                   movzx edx, byte [rcx]	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x4000210	        0x4883c101	                              add rcx, 1	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x4000214	            0x85d2	                           test edx, edx	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x4000216	            0x75dc	                           jne 0x40001f4	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x4000218	            0xeb0a	                           jmp 0x4000224	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x400021a	      0xbd00000000	                              mov ebp, 0	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x400021f	      0xb800000000	                              mov eax, 0	       153	merge.c	FUNCTION_2	IF_1	IF_2	WHILE_1
0x4000224	            0x89ea	                            mov edx, ebp	       159	merge.c	FUNCTION_2	IF_1	IF_2
0x4000226	          0xc1e211	                           shl edx, 0x11	       159	merge.c	FUNCTION_2	IF_1	IF_2
0x4000229	        0x448d242a	                   lea r12d, [rdx + rbp]	       159	merge.c	FUNCTION_2	IF_1	IF_2
0x400022d	          0x4c01e0	                            add rax, r12	       159	merge.c	FUNCTION_2	IF_1	IF_2
0x4000230	            0xeb7d	                           jmp 0x40002af	       159	merge.c	FUNCTION_2	IF_1	IF_2
0x4000232	          0x4889f1	                            mov rcx, rsi	       159	merge.c	FUNCTION_2	IF_1	IF_2
0x4000235	      0xbd00000000	                              mov ebp, 0	       159	merge.c	FUNCTION_2	IF_1	IF_2
0x400023a	      0xb800000000	                              mov eax, 0	       159	merge.c	FUNCTION_2	IF_1	IF_2
0x400023f	        0x448d47ff	                      lea r8d, [rdi - 1]	       159	merge.c	FUNCTION_2	IF_1	IF_2
0x4000243	        0x4983c001	                               add r8, 1	       159	merge.c	FUNCTION_2	IF_1	IF_2
0x4000247	            0x85ff	                           test edi, edi	       165	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2
0x4000249	            0x7455	                            je 0x40002a0	       165	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2
0x400024b	          0x803900	                       cmp byte [rcx], 0	       166	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2	IF_3
0x400024e	            0x751e	                           jne 0x400026e	       166	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2	IF_3
0x4000250	        0x488d7101	                      lea rsi, [rcx + 1]	       166	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2	IF_3
0x4000254	      0xba00000000	                              mov edx, 0	       166	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2	IF_3
0x4000259	            0xeb0a	                           jmp 0x4000265	       166	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2	IF_3
0x400025b	        0x4883c601	                              add rsi, 1	       166	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2	IF_3
0x400025f	        0x807eff00	                   cmp byte [rsi - 1], 0	       166	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2	IF_3
0x4000263	            0x7509	                           jne 0x400026e	       166	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2	IF_3
0x4000265	          0x83c201	                              add edx, 1	       165	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2
0x4000268	            0x39d7	                            cmp edi, edx	       165	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2
0x400026a	            0x75ef	                           jne 0x400025b	       165	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2
0x400026c	            0xeb32	                           jmp 0x40002a0	       165	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2
0x400026e	        0x4a8d3401	                     lea rsi, [rcx + r8]	       165	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_2
0x4000272	        0x4883c101	                              add rcx, 1	       172	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_3
0x4000276	         0xfb651ff	               movzx edx, byte [rcx - 1]	       172	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_3
0x400027a	          0x4189d1	                            mov r9d, edx	       173	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_3
0x400027d	        0x41c1e111	                           shl r9d, 0x11	       173	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_3
0x4000281	          0x4401ca	                            add edx, r9d	       173	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_3
0x4000284	            0x89d2	                            mov edx, edx	       173	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_3
0x4000286	          0x4801d0	                            add rax, rdx	       173	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_3
0x4000289	          0x4889c2	                            mov rdx, rax	       174	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_3
0x400028c	        0x48c1ea02	                              shr rdx, 2	       174	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_3
0x4000290	          0x4831d0	                            xor rax, rdx	       174	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_3
0x4000293	          0x4839f1	                            cmp rcx, rsi	       170	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_3
0x4000296	            0x75da	                           jne 0x4000272	       170	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1	FOR_3
0x4000298	          0x83c501	                              add ebp, 1	       176	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1
0x400029b	          0x4889f1	                            mov rcx, rsi	       177	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1
0x400029e	            0xeba7	                           jmp 0x4000247	       177	merge.c	FUNCTION_2	IF_1	ELSE_1	FOR_1
0x40002a0	            0x89ea	                            mov edx, ebp	       178	merge.c	FUNCTION_2	IF_1	ELSE_1
0x40002a2	          0xc1e211	                           shl edx, 0x11	       178	merge.c	FUNCTION_2	IF_1	ELSE_1
0x40002a5	        0x448d242a	                   lea r12d, [rdx + rbp]	       178	merge.c	FUNCTION_2	IF_1	ELSE_1
0x40002a9	          0x4c01e0	                            add rax, r12	       178	merge.c	FUNCTION_2	IF_1	ELSE_1
0x40002ac	           0xfafef	                           imul ebp, edi	       179	merge.c	FUNCTION_2	IF_1	ELSE_1
0x40002af	          0x4989c4	                            mov r12, rax	       181	merge.c	FUNCTION_2	IF_1
0x40002b2	        0x49c1ec02	                              shr r12, 2	       181	merge.c	FUNCTION_2	IF_1
0x40002b6	          0x4931c4	                            xor r12, rax	       181	merge.c	FUNCTION_2	IF_1
0x40002b9	             0x1fd	                            add ebp, edi	       182	merge.c	FUNCTION_2	IF_1
0x40002bb	            0xeb34	                           jmp 0x40002f1	       182	merge.c	FUNCTION_2	IF_1
0x40002bd	          0x8d45ff	                      lea eax, [rbp - 1]	       182	merge.c	FUNCTION_2	IF_1
0x40002c0	      0x488d740601	                lea rsi, [rsi + rax + 1]	       182	merge.c	FUNCTION_2	IF_1
0x40002c5	          0x4c89f2	                            mov rdx, r14	       186	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x40002c8	    0x41bc00000000	                             mov r12d, 0	       186	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x40002ce	        0x4883c201	                              add rdx, 1	       188	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x40002d2	         0xfb642ff	               movzx eax, byte [rdx - 1]	       188	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x40002d6	            0x89c1	                            mov ecx, eax	       189	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x40002d8	          0xc1e111	                           shl ecx, 0x11	       189	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x40002db	             0x1c8	                            add eax, ecx	       189	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x40002dd	            0x89c0	                            mov eax, eax	       189	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x40002df	          0x4901c4	                            add r12, rax	       189	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x40002e2	          0x4c89e0	                            mov rax, r12	       190	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x40002e5	        0x48c1e802	                              shr rax, 2	       190	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x40002e9	          0x4931c4	                            xor r12, rax	       190	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x40002ec	          0x4839d6	                            cmp rsi, rdx	       186	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x40002ef	            0x75dd	                           jne 0x40002ce	       186	merge.c	FUNCTION_2	ELSE_2	FOR_4
0x40002f1	        0x418b4d18	            mov ecx, dword [r13 + 0x18] 	       196	merge.c	FUNCTION_2	FOR_5
0x40002f5	          0x4c89e0	                            mov rax, r12	       196	merge.c	FUNCTION_2	FOR_5
0x40002f8	      0xba00000000	                              mov edx, 0	       196	merge.c	FUNCTION_2	FOR_5
0x40002fd	          0x48f7f1	                                 div rcx	       196	merge.c	FUNCTION_2	FOR_5
0x4000300	        0x498b4500	                    mov rax, qword [r13]	       196	merge.c	FUNCTION_2	FOR_5
0x4000304	        0x488b1cd0	            mov rbx, qword [rax + rdx*8]	       196	merge.c	FUNCTION_2	FOR_5
0x4000308	          0x4885db	                           test rbx, rbx	       196	merge.c	FUNCTION_2	FOR_5
0x400030b	            0x7451	                            je 0x400035e	       196	merge.c	FUNCTION_2	FOR_5
0x400030d	          0x4189ef	                           mov r15d, ebp	       202	merge.c	FUNCTION_2	FOR_5	IF_5	CALL_1
0x4000310	        0x4c3b6310	            cmp r12, qword [rbx + 0x10] 	       200	merge.c	FUNCTION_2	FOR_5	IF_5
0x4000314	            0x7540	                           jne 0x4000356	       200	merge.c	FUNCTION_2	FOR_5	IF_5
0x4000316	          0x3b6b18	            cmp ebp, dword [rbx + 0x18] 	       201	merge.c	FUNCTION_2	FOR_5	IF_5
0x4000319	            0x753b	                           jne 0x4000356	       201	merge.c	FUNCTION_2	FOR_5	IF_5
0x400031b	        0x488b7b08	                mov rdi, qword [rbx + 8]	       202	merge.c	FUNCTION_2	FOR_5	IF_5	CALL_1
0x400031f	          0x4c89fa	                            mov rdx, r15	       202	merge.c	FUNCTION_2	FOR_5	IF_5	CALL_1
0x4000322	          0x4c89f6	                            mov rsi, r14	       202	merge.c	FUNCTION_2	FOR_5	IF_5	CALL_1
0x4000325	      0xe800000000	                          call 0x400032a	       202	merge.c	FUNCTION_2	FOR_5	IF_5	CALL_1
0x400032a	            0x85c0	                           test eax, eax	       202	merge.c	FUNCTION_2	FOR_5	IF_5	CALL_1
0x400032c	            0x7528	                           jne 0x4000356	       202	merge.c	FUNCTION_2	FOR_5	IF_5	CALL_1
0x400032e	          0x4889d8	                            mov rax, rbx	       202	merge.c	FUNCTION_2	FOR_5	IF_5	CALL_1
0x4000331	        0x8b7c240c	              mov edi, dword [rsp + 0xc]	       206	merge.c	FUNCTION_2	FOR_5	IF_5	IF_6
0x4000335	          0x397b1c	            cmp dword [rbx + 0x1c], edi 	       206	merge.c	FUNCTION_2	FOR_5	IF_5	IF_6
0x4000338	            0x734f	                           jae 0x4000389	       206	merge.c	FUNCTION_2	FOR_5	IF_5	IF_6
0x400033a	      0xb800000000	                              mov eax, 0	       221	merge.c	FUNCTION_2	IF_8
0x400033f	      0x837c240800	                  cmp dword [rsp + 8], 0	       208	merge.c	FUNCTION_2	FOR_5	IF_5	IF_6	IF_7
0x4000344	            0x7443	                            je 0x4000389	       208	merge.c	FUNCTION_2	FOR_5	IF_5	IF_6	IF_7
0x4000346	    0xc74318000000	               mov dword [rbx + 0x18], 0	       211	merge.c	FUNCTION_2	FOR_5	IF_5	IF_6	IF_7
0x400034d	    0xc7431c000000	               mov dword [rbx + 0x1c], 0	       212	merge.c	FUNCTION_2	FOR_5	IF_5	IF_6	IF_7
0x4000354	            0xeb0f	                           jmp 0x4000365	       212	merge.c	FUNCTION_2	FOR_5	IF_5	IF_6	IF_7
0x4000356	          0x488b1b	                    mov rbx, qword [rbx]	       198	merge.c	FUNCTION_2	FOR_5
0x4000359	          0x4885db	                           test rbx, rbx	       196	merge.c	FUNCTION_2	FOR_5
0x400035c	            0x75b2	                           jne 0x4000310	       196	merge.c	FUNCTION_2	FOR_5
0x400035e	      0x837c240800	                  cmp dword [rsp + 8], 0	       220	merge.c	FUNCTION_2	IF_8
0x4000363	            0x741f	                            je 0x4000384	       220	merge.c	FUNCTION_2	IF_8
0x4000365	          0x4c89e2	                            mov rdx, r12	       223	merge.c	FUNCTION_2
0x4000368	          0x4c89f6	                            mov rsi, r14	       223	merge.c	FUNCTION_2
0x400036b	          0x4c89ef	                            mov rdi, r13	       223	merge.c	FUNCTION_2
0x400036e	      0xe800000000	                          call 0x4000373	       223	merge.c	FUNCTION_2
0x4000373	          0x4885c0	                           test rax, rax	       225	merge.c	FUNCTION_2	IF_9
0x4000376	            0x7411	                            je 0x4000389	       225	merge.c	FUNCTION_2	IF_9
0x4000378	          0x896818	             mov dword [rax + 0x18], ebp	       227	merge.c	FUNCTION_2
0x400037b	        0x8b7c240c	              mov edi, dword [rsp + 0xc]	       228	merge.c	FUNCTION_2
0x400037f	          0x89781c	             mov dword [rax + 0x1c], edi	       228	merge.c	FUNCTION_2
0x4000382	            0xeb05	                           jmp 0x4000389	       229	merge.c	FUNCTION_2
0x4000384	      0xb800000000	                              mov eax, 0	       221	merge.c	FUNCTION_2	IF_8
0x4000389	        0x4883c418	                           add rsp, 0x18	       230	merge.c	FUNCTION_2
0x400038d	              0x5b	                                 pop rbx	       230	merge.c	FUNCTION_2
0x400038e	              0x5d	                                 pop rbp	       230	merge.c	FUNCTION_2
0x400038f	            0x415c	                                 pop r12	       230	merge.c	FUNCTION_2
0x4000391	            0x415d	                                 pop r13	       230	merge.c	FUNCTION_2
0x4000393	            0x415e	                                 pop r14	       230	merge.c	FUNCTION_2
0x4000395	            0x415f	                                 pop r15	       230	merge.c	FUNCTION_2
0x4000397	              0xc3	                                     ret	       230	merge.c	FUNCTION_2
_bfd_merged_section_offset	IF,11:ELSE,2:SWITCH,0:functions,0:WHILE,2:CALL,6:DO,0:FOR,1	136
0x4000e87	            0x4156	                                push r14	       852	merge.c	FUNCTION_14
0x4000e89	            0x4155	                                push r13	       852	merge.c	FUNCTION_14
0x4000e8b	            0x4154	                                push r12	       852	merge.c	FUNCTION_14
0x4000e8d	              0x55	                                push rbp	       852	merge.c	FUNCTION_14
0x4000e8e	              0x53	                                push rbx	       852	merge.c	FUNCTION_14
0x4000e8f	          0x4c8b2e	                    mov r13, qword [rsi]	       856	merge.c	FUNCTION_14
0x4000e92	          0x4885d2	                           test rdx, rdx	       860	merge.c	FUNCTION_14	IF_1
0x4000e95	     0xf84b8010000	                            je 0x4001053	       860	merge.c	FUNCTION_14	IF_1
0x4000e9b	          0x4889cb	                            mov rbx, rcx	       860	merge.c	FUNCTION_14	IF_1
0x4000e9e	          0x4889d5	                            mov rbp, rdx	       860	merge.c	FUNCTION_14	IF_1
0x4000ea1	          0x4989f4	                            mov r12, rsi	       860	merge.c	FUNCTION_14	IF_1
0x4000ea4	        0x498b4540	            mov rax, qword [r13 + 0x40] 	       863	merge.c	FUNCTION_14	IF_2
0x4000ea8	          0x4839c1	                            cmp rcx, rax	       863	merge.c	FUNCTION_14	IF_2
0x4000eab	            0x7244	                            jb 0x4000ef1	       863	merge.c	FUNCTION_14	IF_2
0x4000ead	            0x762e	                           jbe 0x4000edd	       865	merge.c	FUNCTION_14	IF_2	IF_3
0x4000eaf	    0x4d8ba5f00000	            mov r12, qword [r13 + 0xf0] 	       866	merge.c	FUNCTION_14	IF_2	IF_3	CALL_1
0x4000eb6	      0xba05000000	                              mov edx, 5	       868	merge.c	FUNCTION_14	IF_2	IF_3	CALL_2
0x4000ebb	      0xbe00000000	                              mov esi, 0	       868	merge.c	FUNCTION_14	IF_2	IF_3	CALL_2
0x4000ec0	      0xbf00000000	                              mov edi, 0	       868	merge.c	FUNCTION_14	IF_2	IF_3	CALL_2
0x4000ec5	      0xe800000000	                          call 0x4000eca	       868	merge.c	FUNCTION_14	IF_2	IF_3	CALL_2
0x4000eca	          0x4889da	                            mov rdx, rbx	       866	merge.c	FUNCTION_14	IF_2	IF_3	CALL_1
0x4000ecd	          0x4c89e6	                            mov rsi, r12	       866	merge.c	FUNCTION_14	IF_2	IF_3	CALL_1
0x4000ed0	          0x4889c7	                            mov rdi, rax	       866	merge.c	FUNCTION_14	IF_2	IF_3	CALL_1
0x4000ed3	      0xb800000000	                              mov eax, 0	       866	merge.c	FUNCTION_14	IF_2	IF_3	CALL_1
0x4000ed8	      0xe800000000	                          call 0x4000edd	       866	merge.c	FUNCTION_14	IF_2	IF_3	CALL_1
0x4000edd	      0x48837d2000	               cmp qword [rbp + 0x20], 0	       870	merge.c	FUNCTION_14	IF_2
0x4000ee2	     0xf8470010000	                            je 0x4001058	       870	merge.c	FUNCTION_14	IF_2
0x4000ee8	        0x498b4538	            mov rax, qword [r13 + 0x38] 	       870	merge.c	FUNCTION_14	IF_2
0x4000eec	      0xe96c010000	                           jmp 0x400105d	       870	merge.c	FUNCTION_14	IF_2
0x4000ef1	        0x488b7a18	            mov rdi, qword [rdx + 0x18] 	       873	merge.c	FUNCTION_14	IF_4
0x4000ef5	        0x837f4400	               cmp dword [rdi + 0x44], 0	       873	merge.c	FUNCTION_14	IF_4
0x4000ef9	     0xf848b000000	                            je 0x4000f8a	       873	merge.c	FUNCTION_14	IF_4
0x4000eff	    0x418b8dc40000	            mov ecx, dword [r13 + 0xc4] 	       875	merge.c	FUNCTION_14	IF_4	IF_5
0x4000f06	          0x83f901	                              cmp ecx, 1	       875	merge.c	FUNCTION_14	IF_4	IF_5
0x4000f09	            0x7527	                           jne 0x4000f32	       875	merge.c	FUNCTION_14	IF_4	IF_5
0x4000f0b	        0x488d4228	                   lea rax, [rdx + 0x28]	       877	merge.c	FUNCTION_14	IF_4	IF_5
0x4000f0f	      0x488d5418ff	                lea rdx, [rax + rbx - 1]	       877	merge.c	FUNCTION_14	IF_4	IF_5
0x4000f14	          0x4839d0	                            cmp rax, rdx	       878	merge.c	FUNCTION_14	IF_4	IF_5	WHILE_1
0x4000f17	            0x7713	                            ja 0x4000f2c	       878	merge.c	FUNCTION_14	IF_4	IF_5	WHILE_1
0x4000f19	          0x803a00	                       cmp byte [rdx], 0	       878	merge.c	FUNCTION_14	IF_4	IF_5	WHILE_1
0x4000f1c	            0x740e	                            je 0x4000f2c	       878	merge.c	FUNCTION_14	IF_4	IF_5	WHILE_1
0x4000f1e	        0x4883ea01	                              sub rdx, 1	       879	merge.c	FUNCTION_14	IF_4	IF_5	WHILE_1
0x4000f22	          0x4839d0	                            cmp rax, rdx	       878	merge.c	FUNCTION_14	IF_4	IF_5	WHILE_1
0x4000f25	            0x7705	                            ja 0x4000f2c	       878	merge.c	FUNCTION_14	IF_4	IF_5	WHILE_1
0x4000f27	          0x803a00	                       cmp byte [rdx], 0	       878	merge.c	FUNCTION_14	IF_4	IF_5	WHILE_1
0x4000f2a	            0x75f2	                           jne 0x4000f1e	       878	merge.c	FUNCTION_14	IF_4	IF_5	WHILE_1
0x4000f2c	        0x4c8d7201	                      lea r14, [rdx + 1]	       880	merge.c	FUNCTION_14	IF_4	IF_5
0x4000f30	            0xeb73	                           jmp 0x4000fa5	       880	merge.c	FUNCTION_14	IF_4	IF_5
0x4000f32	        0x488d7228	                   lea rsi, [rdx + 0x28]	       884	merge.c	FUNCTION_14	IF_4	ELSE_1
0x4000f36	          0x4189ce	                           mov r14d, ecx	       884	merge.c	FUNCTION_14	IF_4	ELSE_1
0x4000f39	          0x4889d8	                            mov rax, rbx	       885	merge.c	FUNCTION_14	IF_4	ELSE_1
0x4000f3c	      0xba00000000	                              mov edx, 0	       885	merge.c	FUNCTION_14	IF_4	ELSE_1
0x4000f41	          0x49f7f6	                                 div r14	       885	merge.c	FUNCTION_14	IF_4	ELSE_1
0x4000f44	        0x490fafc6	                           imul rax, r14	       885	merge.c	FUNCTION_14	IF_4	ELSE_1
0x4000f48	          0x4889c2	                            mov rdx, rax	       885	merge.c	FUNCTION_14	IF_4	ELSE_1
0x4000f4b	          0x4c29f2	                            sub rdx, r14	       885	merge.c	FUNCTION_14	IF_4	ELSE_1
0x4000f4e	          0x4801f2	                            add rdx, rsi	       886	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2
0x4000f51	            0x731e	                           jae 0x4000f71	       886	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2
0x4000f53	            0xeb30	                           jmp 0x4000f85	       886	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2
0x4000f55	        0x4983c001	                               add r8, 1	       886	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2
0x4000f59	      0x418078ff00	                    cmp byte [r8 - 1], 0	       891	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1	IF_6
0x4000f5e	            0x7509	                           jne 0x4000f69	       891	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1	IF_6
0x4000f60	          0x83c001	                              add eax, 1	       890	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1
0x4000f63	            0x39c1	                            cmp ecx, eax	       890	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1
0x4000f65	            0x75ee	                           jne 0x4000f55	       890	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1
0x4000f67	            0xeb1c	                           jmp 0x4000f85	       890	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1
0x4000f69	          0x4c29f2	                            sub rdx, r14	       890	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1
0x4000f6c	          0x4839d6	                            cmp rsi, rdx	       886	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2
0x4000f6f	            0x7714	                            ja 0x4000f85	       886	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2
0x4000f71	            0x85c9	                           test ecx, ecx	       890	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1
0x4000f73	            0x7410	                            je 0x4000f85	       890	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1
0x4000f75	          0x803a00	                       cmp byte [rdx], 0	       891	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1	IF_6
0x4000f78	            0x75ef	                           jne 0x4000f69	       891	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1	IF_6
0x4000f7a	        0x4c8d4201	                       lea r8, [rdx + 1]	       891	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1	IF_6
0x4000f7e	      0xb800000000	                              mov eax, 0	       891	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1	IF_6
0x4000f83	            0xebdb	                           jmp 0x4000f60	       891	merge.c	FUNCTION_14	IF_4	ELSE_1	WHILE_2	FOR_1	IF_6
0x4000f85	          0x4901d6	                            add r14, rdx	       897	merge.c	FUNCTION_14	IF_4	ELSE_1
0x4000f88	            0xeb1b	                           jmp 0x4000fa5	       897	merge.c	FUNCTION_14	IF_4	ELSE_1
0x4000f8a	    0x418b8dc40000	            mov ecx, dword [r13 + 0xc4] 	       902	merge.c	FUNCTION_14	ELSE_2
0x4000f91	          0x4889d8	                            mov rax, rbx	       902	merge.c	FUNCTION_14	ELSE_2
0x4000f94	      0xba00000000	                              mov edx, 0	       902	merge.c	FUNCTION_14	ELSE_2
0x4000f99	          0x48f7f1	                                 div rcx	       902	merge.c	FUNCTION_14	ELSE_2
0x4000f9c	        0x480fafc8	                           imul rcx, rax	       902	merge.c	FUNCTION_14	ELSE_2
0x4000fa0	      0x4c8d740d28	            lea r14, [rbp + rcx + 0x28] 	       902	merge.c	FUNCTION_14	ELSE_2
0x4000fa5	      0xb900000000	                              mov ecx, 0	       904	merge.c	FUNCTION_14	CALL_3
0x4000faa	      0xba00000000	                              mov edx, 0	       904	merge.c	FUNCTION_14	CALL_3
0x4000faf	          0x4c89f6	                            mov rsi, r14	       904	merge.c	FUNCTION_14	CALL_3
0x4000fb2	      0xe8e8f1ffff	          call sym.sec_merge_hash_lookup	       904	merge.c	FUNCTION_14	CALL_3
0x4000fb7	          0x4889c6	                            mov rsi, rax	       904	merge.c	FUNCTION_14	CALL_3
0x4000fba	          0x4885c0	                           test rax, rax	       905	merge.c	FUNCTION_14	IF_8
0x4000fbd	            0x757a	                           jne 0x4001039	       905	merge.c	FUNCTION_14	IF_8
0x4000fbf	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       907	merge.c	FUNCTION_14	IF_8	IF_9
0x4000fc3	        0x83784400	               cmp dword [rax + 0x44], 0	       907	merge.c	FUNCTION_14	IF_8	IF_9
0x4000fc7	            0x7514	                           jne 0x4000fdd	       907	merge.c	FUNCTION_14	IF_8	IF_9
0x4000fc9	      0xba00000000	                              mov edx, 0	       908	merge.c	FUNCTION_14	IF_8	CALL_4
0x4000fce	      0xbe8c030000	                          mov esi, 0x38c	       908	merge.c	FUNCTION_14	IF_8	CALL_4
0x4000fd3	      0xbf00000000	                              mov edi, 0	       908	merge.c	FUNCTION_14	IF_8	CALL_4
0x4000fd8	      0xe800000000	                          call 0x4000fdd	       908	merge.c	FUNCTION_14	IF_8	CALL_4
0x4000fdd	        0x41803e00	                       cmp byte [r14], 0	       911	merge.c	FUNCTION_14	IF_8	IF_10
0x4000fe1	            0x7414	                            je 0x4000ff7	       911	merge.c	FUNCTION_14	IF_8	IF_10
0x4000fe3	      0xba00000000	                              mov edx, 0	       912	merge.c	FUNCTION_14	IF_8	CALL_5
0x4000fe8	      0xbe90030000	                          mov esi, 0x390	       912	merge.c	FUNCTION_14	IF_8	CALL_5
0x4000fed	      0xbf00000000	                              mov edi, 0	       912	merge.c	FUNCTION_14	IF_8	CALL_5
0x4000ff2	      0xe800000000	                          call 0x4000ff7	       912	merge.c	FUNCTION_14	IF_8	CALL_5
0x4000ff7	        0x488b7030	            mov rsi, qword [rax + 0x30] 	       913	merge.c	FUNCTION_14	IF_8	IF_11
0x4000ffb	          0x4885f6	                           test rsi, rsi	       913	merge.c	FUNCTION_14	IF_8	IF_11
0x4000ffe	            0x7514	                           jne 0x4001014	       913	merge.c	FUNCTION_14	IF_8	IF_11
0x4001000	      0xba00000000	                              mov edx, 0	       914	merge.c	FUNCTION_14	IF_8	CALL_6
0x4001005	      0xbe92030000	                          mov esi, 0x392	       914	merge.c	FUNCTION_14	IF_8	CALL_6
0x400100a	      0xbf00000000	                              mov edi, 0	       914	merge.c	FUNCTION_14	IF_8	CALL_6
0x400100f	      0xe800000000	                          call 0x4001014	       914	merge.c	FUNCTION_14	IF_8	CALL_6
0x4001014	    0x418b8dc40000	            mov ecx, dword [r13 + 0xc4] 	       916	merge.c	FUNCTION_14	IF_8
0x400101b	          0x4889d8	                            mov rax, rbx	       916	merge.c	FUNCTION_14	IF_8
0x400101e	      0xba00000000	                              mov edx, 0	       916	merge.c	FUNCTION_14	IF_8
0x4001023	          0x48f7f1	                                 div rcx	       916	merge.c	FUNCTION_14	IF_8
0x4001026	        0x4883c001	                              add rax, 1	       916	merge.c	FUNCTION_14	IF_8
0x400102a	        0x480fafc8	                           imul rcx, rax	       916	merge.c	FUNCTION_14	IF_8
0x400102e	          0x8b4618	            mov eax, dword [rsi + 0x18] 	       916	merge.c	FUNCTION_14	IF_8
0x4001031	          0x4829c1	                            sub rcx, rax	       916	merge.c	FUNCTION_14	IF_8
0x4001034	      0x4c8d740d28	            lea r14, [rbp + rcx + 0x28] 	       916	merge.c	FUNCTION_14	IF_8
0x4001039	        0x488b4628	            mov rax, qword [rsi + 0x28] 	       920	merge.c	FUNCTION_14
0x400103d	        0x488b4008	                mov rax, qword [rax + 8]	       920	merge.c	FUNCTION_14
0x4001041	        0x49890424	                    mov qword [r12], rax	       920	merge.c	FUNCTION_14
0x4001045	      0x488d441d28	            lea rax, [rbp + rbx + 0x28] 	       921	merge.c	FUNCTION_14
0x400104a	          0x4c29f0	                            sub rax, r14	       921	merge.c	FUNCTION_14
0x400104d	        0x48034620	             add rax, qword [rsi + 0x20]	       921	merge.c	FUNCTION_14
0x4001051	            0xeb0a	                           jmp 0x400105d	       921	merge.c	FUNCTION_14
0x4001053	          0x4889c8	                            mov rax, rcx	       861	merge.c	FUNCTION_14	IF_1
0x4001056	            0xeb05	                           jmp 0x400105d	       861	merge.c	FUNCTION_14	IF_1
0x4001058	      0xb800000000	                              mov eax, 0	       870	merge.c	FUNCTION_14	IF_2
0x400105d	              0x5b	                                 pop rbx	       922	merge.c	FUNCTION_14
0x400105e	              0x5d	                                 pop rbp	       922	merge.c	FUNCTION_14
0x400105f	            0x415c	                                 pop r12	       922	merge.c	FUNCTION_14
0x4001061	            0x415d	                                 pop r13	       922	merge.c	FUNCTION_14
0x4001063	            0x415e	                                 pop r14	       922	merge.c	FUNCTION_14
0x4001065	              0xc3	                                     ret	       922	merge.c	FUNCTION_14
strrevcmp	IF,1:ELSE,0:SWITCH,0:functions,0:WHILE,1:CALL,0:DO,0:FOR,0	36
0x4000040	          0x488b0f	                    mov rcx, qword [rdi]	       551	merge.c	FUNCTION_8
0x4000043	          0x488b16	                    mov rdx, qword [rsi]	       552	merge.c	FUNCTION_8
0x4000046	          0x8b4118	            mov eax, dword [rcx + 0x18] 	       553	merge.c	FUNCTION_8
0x4000049	        0x448b5218	           mov r10d, dword [rdx + 0x18] 	       554	merge.c	FUNCTION_8
0x400004d	            0x89c6	                            mov esi, eax	       555	merge.c	FUNCTION_8
0x400004f	        0x488b4908	                mov rcx, qword [rcx + 8]	       555	merge.c	FUNCTION_8
0x4000053	      0x4c8d4431ff	                 lea r8, [rcx + rsi - 1]	       555	merge.c	FUNCTION_8
0x4000058	          0x4489d1	                           mov ecx, r10d	       556	merge.c	FUNCTION_8
0x400005b	        0x488b5208	                mov rdx, qword [rdx + 8]	       556	merge.c	FUNCTION_8
0x400005f	      0x4c8d4c0aff	                 lea r9, [rdx + rcx - 1]	       556	merge.c	FUNCTION_8
0x4000064	          0x4439d0	                           cmp eax, r10d	       557	merge.c	FUNCTION_8
0x4000067	          0x4489d2	                           mov edx, r10d	       557	merge.c	FUNCTION_8
0x400006a	           0xf46d0	                         cmovbe edx, eax	       557	merge.c	FUNCTION_8
0x400006d	            0x85d2	                           test edx, edx	       559	merge.c	FUNCTION_8	WHILE_1
0x400006f	            0x743d	                            je 0x40000ae	       559	merge.c	FUNCTION_8	WHILE_1
0x4000071	        0x410fb630	                    movzx esi, byte [r8]	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x4000075	        0x410fb609	                    movzx ecx, byte [r9]	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x4000079	          0x4038ce	                             cmp sil, cl	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x400007c	            0x7420	                            je 0x400009e	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x400007e	            0xeb14	                           jmp 0x4000094	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x4000080	    0x410fb67410ff	          movzx esi, byte [r8 + rdx - 1]	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x4000086	        0x4883ea01	                              sub rdx, 1	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x400008a	      0x410fb60c11	              movzx ecx, byte [r9 + rdx]	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x400008f	          0x4038ce	                             cmp sil, cl	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x4000092	            0x7415	                            je 0x40000a9	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x4000094	        0x400fb6c6	                          movzx eax, sil	       562	merge.c	FUNCTION_8	WHILE_1	IF_1
0x4000098	           0xfb6c9	                           movzx ecx, cl	       562	merge.c	FUNCTION_8	WHILE_1	IF_1
0x400009b	            0x29c8	                            sub eax, ecx	       562	merge.c	FUNCTION_8	WHILE_1	IF_1
0x400009d	              0xc3	                                     ret	       562	merge.c	FUNCTION_8	WHILE_1	IF_1
0x400009e	          0x8d7aff	                      lea edi, [rdx - 1]	       562	merge.c	FUNCTION_8	WHILE_1	IF_1
0x40000a1	          0x48f7df	                                 neg rdi	       562	merge.c	FUNCTION_8	WHILE_1	IF_1
0x40000a4	      0xba00000000	                              mov edx, 0	       561	merge.c	FUNCTION_8	WHILE_1	IF_1
0x40000a9	          0x4839fa	                            cmp rdx, rdi	       559	merge.c	FUNCTION_8	WHILE_1
0x40000ac	            0x75d2	                           jne 0x4000080	       559	merge.c	FUNCTION_8	WHILE_1
0x40000ae	          0x4429d0	                           sub eax, r10d	       567	merge.c	FUNCTION_8
0x40000b1	              0xc3	                                     ret	       568	merge.c	FUNCTION_8
