s_ifdef	ELSE,1:IF,3:WHILE,0:FOR,0:DO,0:functions,0:SWITCH,0:CALL,18	139
0x40001b8	            0x4154	                                push r12	        70	cond.c	FUNCTION_1
0x40001ba	              0x55	                                push rbp	        70	cond.c	FUNCTION_1
0x40001bb	              0x53	                                push rbx	        70	cond.c	FUNCTION_1
0x40001bc	        0x4883ec50	                           sub rsp, 0x50	        70	cond.c	FUNCTION_1
0x40001c0	            0x89fd	                            mov ebp, edi	        70	cond.c	FUNCTION_1
0x40001c2	    0x64488b042528	                mov rax, qword fs:[0x28]	        70	cond.c	FUNCTION_1
0x40001cb	      0x4889442448	             mov qword [rsp + 0x48], rax	        70	cond.c	FUNCTION_1
0x40001d0	            0x31c0	                            xor eax, eax	        70	cond.c	FUNCTION_1
0x40001d2	    0x488b05000000	            mov rax, qword [0x040001d9] 	        79	cond.c	FUNCTION_1	CALL_1
0x40001d9	          0x803820	                    cmp byte [rax], 0x20	        79	cond.c	FUNCTION_1	CALL_1
0x40001dc	            0x750b	                           jne 0x40001e9	        79	cond.c	FUNCTION_1	CALL_1
0x40001de	        0x4883c001	                              add rax, 1	        79	cond.c	FUNCTION_1	CALL_1
0x40001e2	    0x488905000000	            mov qword [0x040001e9], rax 	        79	cond.c	FUNCTION_1	CALL_1
0x40001e9	    0x488b05000000	            mov rax, qword [0x040001f0] 	        80	cond.c	FUNCTION_1
0x40001f0	      0x4889442408	                mov qword [rsp + 8], rax	        80	cond.c	FUNCTION_1
0x40001f5	           0xfb600	                   movzx eax, byte [rax]	        82	cond.c	FUNCTION_1	IF_1	CALL_2
0x40001f8	           0xfb6d0	                           movzx edx, al	        82	cond.c	FUNCTION_1	IF_1	CALL_2
0x40001fb	    0xf68200000000	                      test byte [rdx], 2	        82	cond.c	FUNCTION_1	IF_1	CALL_2
0x4000202	            0x7563	                           jne 0x4000267	        82	cond.c	FUNCTION_1	IF_1	CALL_2
0x4000204	            0x3c22	                            cmp al, 0x22	        82	cond.c	FUNCTION_1	IF_1	CALL_2
0x4000206	            0x745f	                            je 0x4000267	        82	cond.c	FUNCTION_1	IF_1	CALL_2
0x4000208	      0xba05000000	                              mov edx, 5	        84	cond.c	FUNCTION_1	IF_1	CALL_4
0x400020d	      0xbe00000000	                              mov esi, 0	        84	cond.c	FUNCTION_1	IF_1	CALL_4
0x4000212	      0xbf00000000	                              mov edi, 0	        84	cond.c	FUNCTION_1	IF_1	CALL_4
0x4000217	      0xe800000000	                          call 0x400021c	        84	cond.c	FUNCTION_1	IF_1	CALL_4
0x400021c	          0x4889c7	                            mov rdi, rax	        84	cond.c	FUNCTION_1	IF_1	CALL_4
0x400021f	      0xb800000000	                              mov eax, 0	        84	cond.c	FUNCTION_1	IF_1	CALL_4
0x4000224	      0xe800000000	                          call 0x4000229	        84	cond.c	FUNCTION_1	IF_1	CALL_4
0x4000229	    0x488b05000000	            mov rax, qword [0x04000230] 	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x4000230	    0x483905000000	            cmp qword [0x04000237], rax 	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x4000237	            0x750f	                           jne 0x4000248	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x4000239	      0xbe01000000	                              mov esi, 1	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x400023e	      0xbf00000000	                              mov edi, 0	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x4000243	      0xe800000000	                          call 0x4000248	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x4000248	    0x488b05000000	            mov rax, qword [0x0400024f] 	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x400024f	        0x488d5001	                      lea rdx, [rax + 1]	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x4000253	    0x488915000000	            mov qword [0x0400025a], rdx 	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x400025a	          0xc60000	                       mov byte [rax], 0	        85	cond.c	FUNCTION_1	IF_1	CALL_5
0x400025d	      0xe800000000	                          call 0x4000262	        86	cond.c	FUNCTION_1	IF_1	CALL_6
0x4000262	      0xe981010000	                           jmp 0x40003e8	        86	cond.c	FUNCTION_1	IF_1	CALL_6
0x4000267	      0x488d7c2408	                      lea rdi, [rsp + 8]	        90	cond.c	FUNCTION_1	CALL_7
0x400026c	      0xe800000000	                          call 0x4000271	        90	cond.c	FUNCTION_1	CALL_7
0x4000271	            0x89c3	                            mov ebx, eax	        90	cond.c	FUNCTION_1	CALL_7
0x4000273	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        91	cond.c	FUNCTION_1	CALL_8
0x4000278	      0xe800000000	                          call 0x400027d	        91	cond.c	FUNCTION_1	CALL_8
0x400027d	          0x4989c4	                            mov r12, rax	        91	cond.c	FUNCTION_1	CALL_8
0x4000280	           0xfbefb	                           movsx edi, bl	        92	cond.c	FUNCTION_1	CALL_9
0x4000283	      0xe800000000	                          call 0x4000288	        92	cond.c	FUNCTION_1	CALL_9
0x4000288	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        94	cond.c	FUNCTION_1	CALL_10
0x400028d	      0xe8bafeffff	              call sym.initialize_cframe	        94	cond.c	FUNCTION_1	CALL_10
0x4000292	      0x837c244000	               cmp dword [rsp + 0x40], 0	        96	cond.c	FUNCTION_1	IF_2
0x4000297	            0x740a	                            je 0x40002a3	        96	cond.c	FUNCTION_1	IF_2
0x4000299	    0xc744243c0100	               mov dword [rsp + 0x3c], 1	        97	cond.c	FUNCTION_1	IF_2
0x40002a1	            0xeb48	                           jmp 0x40002eb	        97	cond.c	FUNCTION_1	IF_2
0x40002a3	      0xba00000000	                              mov edx, 0	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x40002a8	          0x4d85e4	                           test r12, r12	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x40002ab	            0x7432	                            je 0x40002df	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x40002ad	          0x4c89e7	                            mov rdi, r12	       107	cond.c	FUNCTION_1	ELSE_1	CALL_12
0x40002b0	      0xe800000000	                          call 0x40002b5	       107	cond.c	FUNCTION_1	ELSE_1	CALL_12
0x40002b5	            0x85c0	                           test eax, eax	       107	cond.c	FUNCTION_1	ELSE_1	CALL_12
0x40002b7	            0x7511	                           jne 0x40002ca	       107	cond.c	FUNCTION_1	ELSE_1	CALL_12
0x40002b9	          0x4c89e7	                            mov rdi, r12	       107	cond.c	FUNCTION_1	ELSE_1	CALL_12
0x40002bc	      0xe800000000	                          call 0x40002c1	       107	cond.c	FUNCTION_1	ELSE_1	CALL_12
0x40002c1	      0xba00000000	                              mov edx, 0	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x40002c6	            0x85c0	                           test eax, eax	       107	cond.c	FUNCTION_1	ELSE_1	CALL_12
0x40002c8	            0x7415	                            je 0x40002df	       107	cond.c	FUNCTION_1	ELSE_1	CALL_12
0x40002ca	          0x4c89e7	                            mov rdi, r12	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x40002cd	      0xe800000000	                          call 0x40002d2	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x40002d2	    0x483905000000	            cmp qword [0x040002d9], rax 	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x40002d9	           0xf95c2	                                setne dl	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x40002dc	           0xfb6d2	                           movzx edx, dl	       108	cond.c	FUNCTION_1	ELSE_1	CALL_13
0x40002df	            0x39ea	                            cmp edx, ebp	       110	cond.c	FUNCTION_1	ELSE_1
0x40002e1	           0xf94c0	                                 sete al	       110	cond.c	FUNCTION_1	ELSE_1
0x40002e4	           0xfb6c0	                           movzx eax, al	       110	cond.c	FUNCTION_1	ELSE_1
0x40002e7	        0x8944243c	             mov dword [rsp + 0x3c], eax	       110	cond.c	FUNCTION_1	ELSE_1
0x40002eb	    0x488b05000000	            mov rax, qword [0x040002f2] 	       114	cond.c	FUNCTION_1	CALL_14
0x40002f2	    0x482b05000000	             sub rax, qword [0x040002f9]	       114	cond.c	FUNCTION_1	CALL_14
0x40002f9	        0x4883f837	                           cmp rax, 0x37	       114	cond.c	FUNCTION_1	CALL_14
0x40002fd	            0x770f	                            ja 0x400030e	       114	cond.c	FUNCTION_1	CALL_14
0x40002ff	      0xbe38000000	                           mov esi, 0x38	       114	cond.c	FUNCTION_1	CALL_14
0x4000304	      0xbf00000000	                              mov edi, 0	       114	cond.c	FUNCTION_1	CALL_14
0x4000309	      0xe800000000	                          call 0x400030e	       114	cond.c	FUNCTION_1	CALL_14
0x400030e	    0x488b05000000	            mov rax, qword [0x04000315] 	       114	cond.c	FUNCTION_1	CALL_14
0x4000315	        0x488d5038	                   lea rdx, [rax + 0x38]	       114	cond.c	FUNCTION_1	CALL_14
0x4000319	    0x488b05000000	            mov rax, qword [0x04000320] 	       114	cond.c	FUNCTION_1	CALL_14
0x4000320	          0x4839c2	                            cmp rdx, rax	       114	cond.c	FUNCTION_1	CALL_14
0x4000323	            0x7507	                           jne 0x400032c	       114	cond.c	FUNCTION_1	CALL_14
0x4000325	    0x800d00000000	                 or byte [0x0400032c], 2	       114	cond.c	FUNCTION_1	CALL_14
0x400032c	    0x488b0d000000	            mov rcx, qword [0x04000333] 	       114	cond.c	FUNCTION_1	CALL_14
0x4000333	          0x4801ca	                            add rdx, rcx	       114	cond.c	FUNCTION_1	CALL_14
0x4000336	          0x48f7d1	                                 not rcx	       114	cond.c	FUNCTION_1	CALL_14
0x4000339	          0x4821ca	                            and rdx, rcx	       114	cond.c	FUNCTION_1	CALL_14
0x400033c	    0x488915000000	            mov qword [0x04000343], rdx 	       114	cond.c	FUNCTION_1	CALL_14
0x4000343	    0x488b0d000000	            mov rcx, qword [0x0400034a] 	       114	cond.c	FUNCTION_1	CALL_14
0x400034a	    0x488b35000000	            mov rsi, qword [0x04000351] 	       114	cond.c	FUNCTION_1	CALL_14
0x4000351	          0x4829ca	                            sub rdx, rcx	       114	cond.c	FUNCTION_1	CALL_14
0x4000354	          0x4889f3	                            mov rbx, rsi	       114	cond.c	FUNCTION_1	CALL_14
0x4000357	          0x4829cb	                            sub rbx, rcx	       114	cond.c	FUNCTION_1	CALL_14
0x400035a	          0x4839da	                            cmp rdx, rbx	       114	cond.c	FUNCTION_1	CALL_14
0x400035d	            0x7607	                           jbe 0x4000366	       114	cond.c	FUNCTION_1	CALL_14
0x400035f	    0x488935000000	            mov qword [0x04000366], rsi 	       114	cond.c	FUNCTION_1	CALL_14
0x4000366	    0x488b15000000	            mov rdx, qword [0x0400036d] 	       114	cond.c	FUNCTION_1	CALL_14
0x400036d	    0x488915000000	            mov qword [0x04000374], rdx 	       114	cond.c	FUNCTION_1	CALL_14
0x4000374	    0x488905000000	            mov qword [0x0400037b], rax 	       113	cond.c	FUNCTION_1
0x400037b	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000380	          0x488910	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000383	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000388	        0x48895008	                mov qword [rax + 8], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x400038c	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000391	        0x48895010	             mov qword [rax + 0x10], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000395	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	        53	string3.h	FUNCTION_14	CALL_3
0x400039a	        0x48895018	             mov qword [rax + 0x18], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x400039e	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	        53	string3.h	FUNCTION_14	CALL_3
0x40003a3	        0x48895020	             mov qword [rax + 0x20], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40003a7	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	        53	string3.h	FUNCTION_14	CALL_3
0x40003ac	        0x48895028	             mov qword [rax + 0x28], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40003b0	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	        53	string3.h	FUNCTION_14	CALL_3
0x40003b5	        0x48895030	             mov qword [rax + 0x30], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40003b9	    0xf60500000000	           test byte [0x040003c0], 0x20 	       117	cond.c	FUNCTION_1	IF_3	CALL_16
0x40003c0	            0x7421	                            je 0x40003e3	       117	cond.c	FUNCTION_1	IF_3	CALL_16
0x40003c2	      0x837c243c00	               cmp dword [rsp + 0x3c], 0	       118	cond.c	FUNCTION_1	IF_3
0x40003c7	            0x741a	                            je 0x40003e3	       118	cond.c	FUNCTION_1	IF_3
0x40003c9	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       119	cond.c	FUNCTION_1	IF_3
0x40003ce	          0x4885c0	                           test rax, rax	       119	cond.c	FUNCTION_1	IF_3
0x40003d1	            0x7406	                            je 0x40003d9	       119	cond.c	FUNCTION_1	IF_3
0x40003d3	        0x83782c00	               cmp dword [rax + 0x2c], 0	       120	cond.c	FUNCTION_1	IF_3
0x40003d7	            0x750a	                           jne 0x40003e3	       120	cond.c	FUNCTION_1	IF_3
0x40003d9	      0xbf02000000	                              mov edi, 2	       121	cond.c	FUNCTION_1	CALL_17
0x40003de	      0xe800000000	                          call 0x40003e3	       121	cond.c	FUNCTION_1	CALL_17
0x40003e3	      0xe800000000	                          call 0x40003e8	       123	cond.c	FUNCTION_1	CALL_18
0x40003e8	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       124	cond.c	FUNCTION_1
0x40003ed	    0x644833042528	                xor rax, qword fs:[0x28]	       124	cond.c	FUNCTION_1
0x40003f6	            0x7405	                            je 0x40003fd	       124	cond.c	FUNCTION_1
0x40003f8	      0xe800000000	                          call 0x40003fd	       124	cond.c	FUNCTION_1
0x40003fd	        0x4883c450	                           add rsp, 0x50	       124	cond.c	FUNCTION_1
0x4000401	              0x5b	                                 pop rbx	       124	cond.c	FUNCTION_1
0x4000402	              0x5d	                                 pop rbp	       124	cond.c	FUNCTION_1
0x4000403	            0x415c	                                 pop r12	       124	cond.c	FUNCTION_1
0x4000405	              0xc3	                                     ret	       124	cond.c	FUNCTION_1
get_mri_string	ELSE,1:IF,3:WHILE,3:FOR,0:DO,0:functions,0:SWITCH,0:CALL,2	73
0x4000040	    0x488b05000000	            mov rax, qword [0x04000047] 	       229	cond.c	FUNCTION_4	CALL_1
0x4000047	          0x803820	                    cmp byte [rax], 0x20	       229	cond.c	FUNCTION_4	CALL_1
0x400004a	            0x750b	                           jne 0x4000057	       229	cond.c	FUNCTION_4	CALL_1
0x400004c	        0x4883c001	                              add rax, 1	       229	cond.c	FUNCTION_4	CALL_1
0x4000050	    0x488905000000	            mov qword [0x04000057], rax 	       229	cond.c	FUNCTION_4	CALL_1
0x4000057	    0x488b05000000	            mov rax, qword [0x0400005e] 	       230	cond.c	FUNCTION_4
0x400005e	           0xfb610	                   movzx edx, byte [rax]	       231	cond.c	FUNCTION_4	IF_1
0x4000061	          0x80fa27	                            cmp dl, 0x27	       231	cond.c	FUNCTION_4	IF_1
0x4000064	            0x741f	                            je 0x4000085	       231	cond.c	FUNCTION_4	IF_1
0x4000066	           0xfbeca	                           movsx ecx, dl	       249	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000069	            0x39cf	                            cmp edi, ecx	       249	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x400006b	     0xf84cd000000	                            je 0x400013e	       249	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000071	           0xfb6ca	                           movzx ecx, dl	       250	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000074	          0x4889c2	                            mov rdx, rax	       250	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000077	    0x80b900000000	                       cmp byte [rcx], 0	       250	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x400007e	            0x746f	                            je 0x40000ef	       250	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000080	      0xe9c1000000	                           jmp 0x4000146	       250	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000085	        0x488d5001	                      lea rdx, [rax + 1]	       233	cond.c	FUNCTION_4	IF_1
0x4000089	    0x488915000000	            mov qword [0x04000090], rdx 	       234	cond.c	FUNCTION_4	IF_1
0x4000090	            0xeb31	                           jmp 0x40000c3	       235	cond.c	FUNCTION_4	IF_1	WHILE_1
0x4000092	        0x4883c201	                              add rdx, 1	       237	cond.c	FUNCTION_4	IF_1	WHILE_1
0x4000096	        0x488d7901	                      lea rdi, [rcx + 1]	       237	cond.c	FUNCTION_4	IF_1	WHILE_1
0x400009a	    0x48893d000000	            mov qword [0x040000a1], rdi 	       237	cond.c	FUNCTION_4	IF_1	WHILE_1
0x40000a1	           0xfb609	                   movzx ecx, byte [rcx]	       237	cond.c	FUNCTION_4	IF_1	WHILE_1
0x40000a4	          0x884aff	                  mov byte [rdx - 1], cl	       237	cond.c	FUNCTION_4	IF_1	WHILE_1
0x40000a7	          0x80f927	                            cmp cl, 0x27	       238	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x40000aa	            0x7517	                           jne 0x40000c3	       238	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x40000ac	    0x488b0d000000	            mov rcx, qword [0x040000b3] 	       240	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3
0x40000b3	          0x803927	                    cmp byte [rcx], 0x27	       240	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3
0x40000b6	            0x751e	                           jne 0x40000d6	       240	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2	IF_3
0x40000b8	        0x4883c101	                              add rcx, 1	       242	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x40000bc	    0x48890d000000	            mov qword [0x040000c3], rcx 	       242	cond.c	FUNCTION_4	IF_1	WHILE_1	IF_2
0x40000c3	    0x488b0d000000	            mov rcx, qword [0x040000ca] 	       235	cond.c	FUNCTION_4	IF_1	WHILE_1
0x40000ca	           0xfb639	                   movzx edi, byte [rcx]	       235	cond.c	FUNCTION_4	IF_1	WHILE_1
0x40000cd	    0x80bf00000000	                       cmp byte [rdi], 0	       235	cond.c	FUNCTION_4	IF_1	WHILE_1
0x40000d4	            0x74bc	                            je 0x4000092	       235	cond.c	FUNCTION_4	IF_1	WHILE_1
0x40000d6	    0x488b0d000000	            mov rcx, qword [0x040000dd] 	       245	cond.c	FUNCTION_4	IF_1	CALL_2
0x40000dd	          0x803920	                    cmp byte [rcx], 0x20	       245	cond.c	FUNCTION_4	IF_1	CALL_2
0x40000e0	            0x7564	                           jne 0x4000146	       245	cond.c	FUNCTION_4	IF_1	CALL_2
0x40000e2	        0x4883c101	                              add rcx, 1	       245	cond.c	FUNCTION_4	IF_1	CALL_2
0x40000e6	    0x48890d000000	            mov qword [0x040000ed], rcx 	       245	cond.c	FUNCTION_4	IF_1	CALL_2
0x40000ed	            0xeb57	                           jmp 0x4000146	       245	cond.c	FUNCTION_4	IF_1	CALL_2
0x40000ef	        0x4883c201	                              add rdx, 1	       251	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x40000f3	    0x488915000000	            mov qword [0x040000fa], rdx 	       251	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x40000fa	           0xfb60a	                   movzx ecx, byte [rdx]	       249	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x40000fd	        0x440fbec1	                           movsx r8d, cl	       249	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000101	          0x4139f8	                            cmp r8d, edi	       249	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000104	            0x740c	                            je 0x4000112	       249	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000106	           0xfb6c9	                           movzx ecx, cl	       250	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000109	    0x80b900000000	                       cmp byte [rcx], 0	       250	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000110	            0x74dd	                            je 0x40000ef	       250	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000112	          0x4839d0	                            cmp rax, rdx	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x4000115	            0x732f	                           jae 0x4000146	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x4000117	         0xfb64aff	               movzx ecx, byte [rdx - 1]	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x400011b	          0x80f920	                            cmp cl, 0x20	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x400011e	            0x7405	                            je 0x4000125	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x4000120	          0x80f909	                               cmp cl, 9	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x4000123	            0x7521	                           jne 0x4000146	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x4000125	        0x4883ea01	                              sub rdx, 1	       254	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x4000129	          0x4839d0	                            cmp rax, rdx	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x400012c	            0x7415	                            je 0x4000143	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x400012e	         0xfb64aff	               movzx ecx, byte [rdx - 1]	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x4000132	          0x80f920	                            cmp cl, 0x20	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x4000135	            0x74ee	                            je 0x4000125	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x4000137	          0x80f909	                               cmp cl, 9	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x400013a	            0x74e9	                            je 0x4000125	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x400013c	            0xeb08	                           jmp 0x4000146	       253	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x400013e	          0x4889c2	                            mov rdx, rax	       249	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000141	            0xeb03	                           jmp 0x4000146	       249	cond.c	FUNCTION_4	ELSE_1	WHILE_2
0x4000143	          0x4889c2	                            mov rdx, rax	       254	cond.c	FUNCTION_4	ELSE_1	WHILE_3
0x4000146	          0x4829c2	                            sub rdx, rax	       257	cond.c	FUNCTION_4
0x4000149	            0x8916	                    mov dword [rsi], edx	       257	cond.c	FUNCTION_4
0x400014b	              0xc3	                                     ret	       259	cond.c	FUNCTION_4
cond_exit_macro	ELSE,0:IF,0:WHILE,1:FOR,0:DO,0:functions,0:SWITCH,0:CALL,1	21
0x40012e0	              0x53	                                push rbx	       573	cond.c	FUNCTION_13
0x40012e1	            0x89fb	                            mov ebx, edi	       573	cond.c	FUNCTION_13
0x40012e3	            0xeb37	                           jmp 0x400131c	       574	cond.c	FUNCTION_13	WHILE_1
0x40012e5	        0x488b4620	            mov rax, qword [rsi + 0x20] 	       579	cond.c	FUNCTION_13	WHILE_1
0x40012e9	    0x488905000000	            mov qword [0x040012f0], rax 	       579	cond.c	FUNCTION_13	WHILE_1
0x40012f0	    0x483b35000000	            cmp rsi, qword [0x040012f7] 	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x40012f7	            0x7619	                           jbe 0x4001312	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x40012f9	    0x483b35000000	            cmp rsi, qword [0x04001300] 	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x4001300	            0x7310	                           jae 0x4001312	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x4001302	    0x488935000000	            mov qword [0x04001309], rsi 	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x4001309	    0x488935000000	            mov qword [0x04001310], rsi 	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x4001310	            0xeb0a	                           jmp 0x400131c	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x4001312	      0xbf00000000	                              mov edi, 0	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x4001317	      0xe800000000	                          call 0x400131c	       580	cond.c	FUNCTION_13	WHILE_1	CALL_1
0x400131c	    0x488b35000000	            mov rsi, qword [0x04001323] 	       574	cond.c	FUNCTION_13	WHILE_1
0x4001323	          0x4885f6	                           test rsi, rsi	       574	cond.c	FUNCTION_13	WHILE_1
0x4001326	            0x7405	                            je 0x400132d	       574	cond.c	FUNCTION_13	WHILE_1
0x4001328	          0x395e34	            cmp dword [rsi + 0x34], ebx 	       574	cond.c	FUNCTION_13	WHILE_1
0x400132b	            0x7db8	                           jge 0x40012e5	       574	cond.c	FUNCTION_13	WHILE_1
0x400132d	              0x5b	                                 pop rbx	       582	cond.c	FUNCTION_13
0x400132e	              0xc3	                                     ret	       582	cond.c	FUNCTION_13
cond_finish_check	ELSE,1:IF,3:WHILE,0:FOR,0:DO,0:functions,0:SWITCH,0:CALL,8	47
0x4001218	    0x488b05000000	            mov rax, qword [0x0400121f] 	       550	cond.c	FUNCTION_12	IF_1
0x400121f	          0x4885c0	                           test rax, rax	       550	cond.c	FUNCTION_12	IF_1
0x4001222	     0xf84b6000000	                            je 0x40012de	       550	cond.c	FUNCTION_12	IF_1
0x4001228	          0x397834	            cmp dword [rax + 0x34], edi 	       550	cond.c	FUNCTION_12	IF_1
0x400122b	     0xf8cad000000	                            jl 0x40012de	       550	cond.c	FUNCTION_12	IF_1
0x4001231	              0x53	                                push rbx	       549	cond.c	FUNCTION_12
0x4001232	            0x85ff	                           test edi, edi	       552	cond.c	FUNCTION_12	IF_1	IF_2
0x4001234	            0x7823	                            js 0x4001259	       552	cond.c	FUNCTION_12	IF_1	IF_2
0x4001236	      0xba05000000	                              mov edx, 5	       553	cond.c	FUNCTION_12	IF_1	CALL_2
0x400123b	      0xbe00000000	                              mov esi, 0	       553	cond.c	FUNCTION_12	IF_1	CALL_2
0x4001240	      0xbf00000000	                              mov edi, 0	       553	cond.c	FUNCTION_12	IF_1	CALL_2
0x4001245	      0xe800000000	                          call 0x400124a	       553	cond.c	FUNCTION_12	IF_1	CALL_2
0x400124a	          0x4889c7	                            mov rdi, rax	       553	cond.c	FUNCTION_12	IF_1	CALL_2
0x400124d	      0xb800000000	                              mov eax, 0	       553	cond.c	FUNCTION_12	IF_1	CALL_2
0x4001252	      0xe800000000	                          call 0x4001257	       553	cond.c	FUNCTION_12	IF_1	CALL_2
0x4001257	            0xeb21	                           jmp 0x400127a	       553	cond.c	FUNCTION_12	IF_1	CALL_2
0x4001259	      0xba05000000	                              mov edx, 5	       555	cond.c	FUNCTION_12	IF_1	CALL_4
0x400125e	      0xbe00000000	                              mov esi, 0	       555	cond.c	FUNCTION_12	IF_1	CALL_4
0x4001263	      0xbf00000000	                              mov edi, 0	       555	cond.c	FUNCTION_12	IF_1	CALL_4
0x4001268	      0xe800000000	                          call 0x400126d	       555	cond.c	FUNCTION_12	IF_1	CALL_4
0x400126d	          0x4889c7	                            mov rdi, rax	       555	cond.c	FUNCTION_12	IF_1	CALL_4
0x4001270	      0xb800000000	                              mov eax, 0	       555	cond.c	FUNCTION_12	IF_1	CALL_4
0x4001275	      0xe800000000	                          call 0x400127a	       555	cond.c	FUNCTION_12	IF_1	CALL_4
0x400127a	      0xba05000000	                              mov edx, 5	       559	cond.c	FUNCTION_12	IF_1	CALL_6
0x400127f	      0xbe00000000	                              mov esi, 0	       559	cond.c	FUNCTION_12	IF_1	CALL_6
0x4001284	      0xbf00000000	                              mov edi, 0	       559	cond.c	FUNCTION_12	IF_1	CALL_6
0x4001289	      0xe800000000	                          call 0x400128e	       559	cond.c	FUNCTION_12	IF_1	CALL_6
0x400128e	    0x488b0d000000	            mov rcx, qword [0x04001295] 	       558	cond.c	FUNCTION_12	IF_1
0x4001295	          0x8b7108	                mov esi, dword [rcx + 8]	       557	cond.c	FUNCTION_12	IF_1	CALL_5
0x4001298	          0x4889c2	                            mov rdx, rax	       557	cond.c	FUNCTION_12	IF_1	CALL_5
0x400129b	          0x488b39	                    mov rdi, qword [rcx]	       557	cond.c	FUNCTION_12	IF_1	CALL_5
0x400129e	      0xb800000000	                              mov eax, 0	       557	cond.c	FUNCTION_12	IF_1	CALL_5
0x40012a3	      0xe800000000	                          call 0x40012a8	       557	cond.c	FUNCTION_12	IF_1	CALL_5
0x40012a8	    0x488b1d000000	            mov rbx, qword [0x040012af] 	       560	cond.c	FUNCTION_12	IF_1	IF_3
0x40012af	        0x837b2800	               cmp dword [rbx + 0x28], 0	       560	cond.c	FUNCTION_12	IF_1	IF_3
0x40012b3	            0x7428	                            je 0x40012dd	       560	cond.c	FUNCTION_12	IF_1	IF_3
0x40012b5	      0xba05000000	                              mov edx, 5	       563	cond.c	FUNCTION_12	IF_1	CALL_8
0x40012ba	      0xbe00000000	                              mov esi, 0	       563	cond.c	FUNCTION_12	IF_1	CALL_8
0x40012bf	      0xbf00000000	                              mov edi, 0	       563	cond.c	FUNCTION_12	IF_1	CALL_8
0x40012c4	      0xe800000000	                          call 0x40012c9	       563	cond.c	FUNCTION_12	IF_1	CALL_8
0x40012c9	          0x8b7318	            mov esi, dword [rbx + 0x18] 	       561	cond.c	FUNCTION_12	IF_1	IF_3	CALL_7
0x40012cc	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	       561	cond.c	FUNCTION_12	IF_1	IF_3	CALL_7
0x40012d0	          0x4889c2	                            mov rdx, rax	       561	cond.c	FUNCTION_12	IF_1	IF_3	CALL_7
0x40012d3	      0xb800000000	                              mov eax, 0	       561	cond.c	FUNCTION_12	IF_1	IF_3	CALL_7
0x40012d8	      0xe800000000	                          call 0x40012dd	       561	cond.c	FUNCTION_12	IF_1	IF_3	CALL_7
0x40012dd	              0x5b	                                 pop rbx	       565	cond.c	FUNCTION_12
0x40012de	            0xf3c3	                                     ret	       565	cond.c	FUNCTION_12
s_if	ELSE,1:IF,5:WHILE,1:FOR,0:DO,0:functions,0:SWITCH,1:CALL,13	160
0x4000406	              0x55	                                push rbp	       128	cond.c	FUNCTION_2
0x4000407	              0x53	                                push rbx	       128	cond.c	FUNCTION_2
0x4000408	        0x4883ec78	                           sub rsp, 0x78	       128	cond.c	FUNCTION_2
0x400040c	            0x89fd	                            mov ebp, edi	       128	cond.c	FUNCTION_2
0x400040e	    0x64488b042528	                mov rax, qword fs:[0x28]	       128	cond.c	FUNCTION_2
0x4000417	      0x4889442468	             mov qword [rsp + 0x68], rax	       128	cond.c	FUNCTION_2
0x400041c	            0x31c0	                            xor eax, eax	       128	cond.c	FUNCTION_2
0x400041e	      0xc644240f00	                 mov byte [rsp + 0xf], 0	       133	cond.c	FUNCTION_2
0x4000423	      0xbb00000000	                              mov ebx, 0	       132	cond.c	FUNCTION_2
0x4000428	    0x833d00000000	               cmp dword [0x0400042f], 0	       135	cond.c	FUNCTION_2	IF_1
0x400042f	            0x740d	                            je 0x400043e	       135	cond.c	FUNCTION_2	IF_1
0x4000431	      0x488d7c240f	                    lea rdi, [rsp + 0xf]	       136	cond.c	FUNCTION_2	CALL_1
0x4000436	      0xe800000000	                          call 0x400043b	       136	cond.c	FUNCTION_2	CALL_1
0x400043b	          0x4889c3	                            mov rbx, rax	       136	cond.c	FUNCTION_2	CALL_1
0x400043e	    0x488b05000000	            mov rax, qword [0x04000445] 	       139	cond.c	FUNCTION_2	CALL_2
0x4000445	          0x803820	                    cmp byte [rax], 0x20	       139	cond.c	FUNCTION_2	CALL_2
0x4000448	            0x750b	                           jne 0x4000455	       139	cond.c	FUNCTION_2	CALL_2
0x400044a	        0x4883c001	                              add rax, 1	       139	cond.c	FUNCTION_2	CALL_2
0x400044e	    0x488905000000	            mov qword [0x04000455], rax 	       139	cond.c	FUNCTION_2	CALL_2
0x4000455	    0x488b05000000	            mov rax, qword [0x0400045c] 	       141	cond.c	FUNCTION_2	IF_2
0x400045c	          0x4885c0	                           test rax, rax	       141	cond.c	FUNCTION_2	IF_2
0x400045f	            0x7442	                            je 0x40004a3	       141	cond.c	FUNCTION_2	IF_2
0x4000461	        0x83782c00	               cmp dword [rax + 0x2c], 0	       141	cond.c	FUNCTION_2	IF_2
0x4000465	            0x743c	                            je 0x40004a3	       141	cond.c	FUNCTION_2	IF_2
0x4000467	    0x48c744242000	               mov qword [rsp + 0x20], 0	       143	cond.c	FUNCTION_2	IF_2
0x4000470	    0x488b05000000	            mov rax, qword [0x04000477] 	       144	cond.c	FUNCTION_2	IF_2	WHILE_1
0x4000477	           0xfb610	                   movzx edx, byte [rax]	       144	cond.c	FUNCTION_2	IF_2	WHILE_1
0x400047a	    0x80ba00000000	                       cmp byte [rdx], 0	       144	cond.c	FUNCTION_2	IF_2	WHILE_1
0x4000481	            0x755c	                           jne 0x40004df	       144	cond.c	FUNCTION_2	IF_2	WHILE_1
0x4000483	        0x4883c001	                              add rax, 1	       144	cond.c	FUNCTION_2	IF_2	WHILE_1
0x4000487	          0x4889c2	                            mov rdx, rax	       145	cond.c	FUNCTION_2	IF_2	WHILE_1
0x400048a	    0x488905000000	            mov qword [0x04000491], rax 	       145	cond.c	FUNCTION_2	IF_2	WHILE_1
0x4000491	        0x4883c001	                              add rax, 1	       145	cond.c	FUNCTION_2	IF_2	WHILE_1
0x4000495	           0xfb612	                   movzx edx, byte [rdx]	       144	cond.c	FUNCTION_2	IF_2	WHILE_1
0x4000498	    0x80ba00000000	                       cmp byte [rdx], 0	       144	cond.c	FUNCTION_2	IF_2	WHILE_1
0x400049f	            0x74e6	                            je 0x4000487	       144	cond.c	FUNCTION_2	IF_2	WHILE_1
0x40004a1	            0xeb3c	                           jmp 0x40004df	       144	cond.c	FUNCTION_2	IF_2	WHILE_1
0x40004a3	      0xba00000000	                              mov edx, 0	       149	cond.c	FUNCTION_2	ELSE_1	CALL_3
0x40004a8	      0x488d742410	                   lea rsi, [rsp + 0x10]	       149	cond.c	FUNCTION_2	ELSE_1	CALL_3
0x40004ad	      0xbf00000000	                              mov edi, 0	       149	cond.c	FUNCTION_2	ELSE_1	CALL_3
0x40004b2	      0xe800000000	                          call 0x40004b7	       149	cond.c	FUNCTION_2	ELSE_1	CALL_3
0x40004b7	      0x807c242802	                cmp byte [rsp + 0x28], 2	       150	cond.c	FUNCTION_2	ELSE_1	IF_3
0x40004bc	            0x7421	                            je 0x40004df	       150	cond.c	FUNCTION_2	ELSE_1	IF_3
0x40004be	      0xba05000000	                              mov edx, 5	       151	cond.c	FUNCTION_2	ELSE_1	CALL_5
0x40004c3	      0xbe00000000	                              mov esi, 0	       151	cond.c	FUNCTION_2	ELSE_1	CALL_5
0x40004c8	      0xbf00000000	                              mov edi, 0	       151	cond.c	FUNCTION_2	ELSE_1	CALL_5
0x40004cd	      0xe800000000	                          call 0x40004d2	       151	cond.c	FUNCTION_2	ELSE_1	CALL_5
0x40004d2	          0x4889c7	                            mov rdi, rax	       151	cond.c	FUNCTION_2	ELSE_1	CALL_5
0x40004d5	      0xb800000000	                              mov eax, 0	       151	cond.c	FUNCTION_2	ELSE_1	CALL_5
0x40004da	      0xe800000000	                          call 0x40004df	       151	cond.c	FUNCTION_2	ELSE_1	CALL_5
0x40004df	          0x8d7deb	                   lea edi, [rbp - 0x15]	       154	cond.c	FUNCTION_2	SWITCH_1
0x40004e2	          0x83ff05	                              cmp edi, 5	       154	cond.c	FUNCTION_2	SWITCH_1
0x40004e5	            0x7765	                            ja 0x400054c	       154	cond.c	FUNCTION_2	SWITCH_1
0x40004e7	            0x89ff	                            mov edi, edi	       154	cond.c	FUNCTION_2	SWITCH_1
0x40004e9	    0xff24fd000000	                       jmp qword [rdi*8]	       154	cond.c	FUNCTION_2	SWITCH_1
0x40004f0	    0x48837c242000	               cmp qword [rsp + 0x20], 0	       156	cond.c	FUNCTION_2	SWITCH_1
0x40004f6	        0x400f94c5	                                sete bpl	       156	cond.c	FUNCTION_2	SWITCH_1
0x40004fa	        0x400fb6ed	                          movzx ebp, bpl	       156	cond.c	FUNCTION_2	SWITCH_1
0x40004fe	            0xeb60	                           jmp 0x4000560	       156	cond.c	FUNCTION_2	SWITCH_1
0x4000500	    0x48837c242000	               cmp qword [rsp + 0x20], 0	       157	cond.c	FUNCTION_2	SWITCH_1
0x4000506	        0x400f95c5	                               setne bpl	       157	cond.c	FUNCTION_2	SWITCH_1
0x400050a	        0x400fb6ed	                          movzx ebp, bpl	       157	cond.c	FUNCTION_2	SWITCH_1
0x400050e	            0xeb50	                           jmp 0x4000560	       157	cond.c	FUNCTION_2	SWITCH_1
0x4000510	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       158	cond.c	FUNCTION_2	SWITCH_1
0x4000515	        0x48c1e83f	                           shr rax, 0x3f	       158	cond.c	FUNCTION_2	SWITCH_1
0x4000519	          0x4889c5	                            mov rbp, rax	       158	cond.c	FUNCTION_2	SWITCH_1
0x400051c	            0xeb42	                           jmp 0x4000560	       158	cond.c	FUNCTION_2	SWITCH_1
0x400051e	    0x48837c242000	               cmp qword [rsp + 0x20], 0	       159	cond.c	FUNCTION_2	SWITCH_1
0x4000524	        0x400f9ec5	                               setle bpl	       159	cond.c	FUNCTION_2	SWITCH_1
0x4000528	        0x400fb6ed	                          movzx ebp, bpl	       159	cond.c	FUNCTION_2	SWITCH_1
0x400052c	            0xeb32	                           jmp 0x4000560	       159	cond.c	FUNCTION_2	SWITCH_1
0x400052e	      0x488b6c2420	            mov rbp, qword [rsp + 0x20] 	       160	cond.c	FUNCTION_2	SWITCH_1
0x4000533	          0x48f7d5	                                 not rbp	       160	cond.c	FUNCTION_2	SWITCH_1
0x4000536	        0x48c1ed3f	                           shr rbp, 0x3f	       160	cond.c	FUNCTION_2	SWITCH_1
0x400053a	            0xeb24	                           jmp 0x4000560	       160	cond.c	FUNCTION_2	SWITCH_1
0x400053c	    0x48837c242000	               cmp qword [rsp + 0x20], 0	       161	cond.c	FUNCTION_2	SWITCH_1
0x4000542	        0x400f9fc5	                                setg bpl	       161	cond.c	FUNCTION_2	SWITCH_1
0x4000546	        0x400fb6ed	                          movzx ebp, bpl	       161	cond.c	FUNCTION_2	SWITCH_1
0x400054a	            0xeb14	                           jmp 0x4000560	       161	cond.c	FUNCTION_2	SWITCH_1
0x400054c	      0xba00000000	                              mov edx, 0	       163	cond.c	FUNCTION_2	SWITCH_1	CALL_6
0x4000551	      0xbea3000000	                           mov esi, 0xa3	       163	cond.c	FUNCTION_2	SWITCH_1	CALL_6
0x4000556	      0xbf00000000	                              mov edi, 0	       163	cond.c	FUNCTION_2	SWITCH_1	CALL_6
0x400055b	      0xe800000000	                          call 0x4000560	       163	cond.c	FUNCTION_2	SWITCH_1	CALL_6
0x4000560	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       169	cond.c	FUNCTION_2	CALL_7
0x4000565	      0xe8e2fbffff	              call sym.initialize_cframe	       169	cond.c	FUNCTION_2	CALL_7
0x400056a	      0x837c246000	               cmp dword [rsp + 0x60], 0	       170	cond.c	FUNCTION_2
0x400056f	           0xf95c2	                                setne dl	       170	cond.c	FUNCTION_2
0x4000572	            0x85ed	                           test ebp, ebp	       170	cond.c	FUNCTION_2
0x4000574	           0xf94c0	                                 sete al	       170	cond.c	FUNCTION_2
0x4000577	             0x9d0	                             or eax, edx	       170	cond.c	FUNCTION_2
0x4000579	           0xfb6c0	                           movzx eax, al	       170	cond.c	FUNCTION_2
0x400057c	        0x8944245c	             mov dword [rsp + 0x5c], eax	       170	cond.c	FUNCTION_2
0x4000580	    0x488b05000000	            mov rax, qword [0x04000587] 	       172	cond.c	FUNCTION_2	CALL_8
0x4000587	    0x482b05000000	             sub rax, qword [0x0400058e]	       172	cond.c	FUNCTION_2	CALL_8
0x400058e	        0x4883f837	                           cmp rax, 0x37	       172	cond.c	FUNCTION_2	CALL_8
0x4000592	            0x770f	                            ja 0x40005a3	       172	cond.c	FUNCTION_2	CALL_8
0x4000594	      0xbe38000000	                           mov esi, 0x38	       172	cond.c	FUNCTION_2	CALL_8
0x4000599	      0xbf00000000	                              mov edi, 0	       172	cond.c	FUNCTION_2	CALL_8
0x400059e	      0xe800000000	                          call 0x40005a3	       172	cond.c	FUNCTION_2	CALL_8
0x40005a3	    0x488b05000000	            mov rax, qword [0x040005aa] 	       172	cond.c	FUNCTION_2	CALL_8
0x40005aa	        0x488d5038	                   lea rdx, [rax + 0x38]	       172	cond.c	FUNCTION_2	CALL_8
0x40005ae	    0x488b05000000	            mov rax, qword [0x040005b5] 	       172	cond.c	FUNCTION_2	CALL_8
0x40005b5	          0x4839c2	                            cmp rdx, rax	       172	cond.c	FUNCTION_2	CALL_8
0x40005b8	            0x7507	                           jne 0x40005c1	       172	cond.c	FUNCTION_2	CALL_8
0x40005ba	    0x800d00000000	                 or byte [0x040005c1], 2	       172	cond.c	FUNCTION_2	CALL_8
0x40005c1	    0x488b0d000000	            mov rcx, qword [0x040005c8] 	       172	cond.c	FUNCTION_2	CALL_8
0x40005c8	          0x4801ca	                            add rdx, rcx	       172	cond.c	FUNCTION_2	CALL_8
0x40005cb	          0x48f7d1	                                 not rcx	       172	cond.c	FUNCTION_2	CALL_8
0x40005ce	          0x4821ca	                            and rdx, rcx	       172	cond.c	FUNCTION_2	CALL_8
0x40005d1	    0x488915000000	            mov qword [0x040005d8], rdx 	       172	cond.c	FUNCTION_2	CALL_8
0x40005d8	    0x488b0d000000	            mov rcx, qword [0x040005df] 	       172	cond.c	FUNCTION_2	CALL_8
0x40005df	    0x488b35000000	            mov rsi, qword [0x040005e6] 	       172	cond.c	FUNCTION_2	CALL_8
0x40005e6	          0x4829ca	                            sub rdx, rcx	       172	cond.c	FUNCTION_2	CALL_8
0x40005e9	          0x4889f7	                            mov rdi, rsi	       172	cond.c	FUNCTION_2	CALL_8
0x40005ec	          0x4829cf	                            sub rdi, rcx	       172	cond.c	FUNCTION_2	CALL_8
0x40005ef	          0x4839fa	                            cmp rdx, rdi	       172	cond.c	FUNCTION_2	CALL_8
0x40005f2	            0x7607	                           jbe 0x40005fb	       172	cond.c	FUNCTION_2	CALL_8
0x40005f4	    0x488935000000	            mov qword [0x040005fb], rsi 	       172	cond.c	FUNCTION_2	CALL_8
0x40005fb	    0x488b15000000	            mov rdx, qword [0x04000602] 	       172	cond.c	FUNCTION_2	CALL_8
0x4000602	    0x488915000000	            mov qword [0x04000609], rdx 	       172	cond.c	FUNCTION_2	CALL_8
0x4000609	    0x488905000000	            mov qword [0x04000610], rax 	       171	cond.c	FUNCTION_2
0x4000610	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000615	          0x488910	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000618	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	        53	string3.h	FUNCTION_14	CALL_3
0x400061d	        0x48895008	                mov qword [rax + 8], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000621	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000626	        0x48895010	             mov qword [rax + 0x10], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x400062a	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	        53	string3.h	FUNCTION_14	CALL_3
0x400062f	        0x48895018	             mov qword [rax + 0x18], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000633	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000638	        0x48895020	             mov qword [rax + 0x20], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x400063c	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	        53	string3.h	FUNCTION_14	CALL_3
0x4000641	        0x48895028	             mov qword [rax + 0x28], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x4000645	      0x488b542460	            mov rdx, qword [rsp + 0x60] 	        53	string3.h	FUNCTION_14	CALL_3
0x400064a	        0x48895030	             mov qword [rax + 0x30], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x400064e	    0xf60500000000	           test byte [0x04000655], 0x20 	       175	cond.c	FUNCTION_2	IF_4	CALL_10
0x4000655	            0x7421	                            je 0x4000678	       175	cond.c	FUNCTION_2	IF_4	CALL_10
0x4000657	      0x837c245c00	               cmp dword [rsp + 0x5c], 0	       176	cond.c	FUNCTION_2	IF_4
0x400065c	            0x741a	                            je 0x4000678	       176	cond.c	FUNCTION_2	IF_4
0x400065e	      0x488b442450	            mov rax, qword [rsp + 0x50] 	       177	cond.c	FUNCTION_2	IF_4
0x4000663	          0x4885c0	                           test rax, rax	       177	cond.c	FUNCTION_2	IF_4
0x4000666	            0x7406	                            je 0x400066e	       177	cond.c	FUNCTION_2	IF_4
0x4000668	        0x83782c00	               cmp dword [rax + 0x2c], 0	       178	cond.c	FUNCTION_2	IF_4
0x400066c	            0x750a	                           jne 0x4000678	       178	cond.c	FUNCTION_2	IF_4
0x400066e	      0xbf02000000	                              mov edi, 2	       179	cond.c	FUNCTION_2	CALL_11
0x4000673	      0xe800000000	                          call 0x4000678	       179	cond.c	FUNCTION_2	CALL_11
0x4000678	    0x833d00000000	               cmp dword [0x0400067f], 0	       181	cond.c	FUNCTION_2	IF_5
0x400067f	            0x740d	                            je 0x400068e	       181	cond.c	FUNCTION_2	IF_5
0x4000681	       0xfbe74240f	            movsx esi, byte [rsp + 0xf] 	       182	cond.c	FUNCTION_2	CALL_12
0x4000686	          0x4889df	                            mov rdi, rbx	       182	cond.c	FUNCTION_2	CALL_12
0x4000689	      0xe800000000	                          call 0x400068e	       182	cond.c	FUNCTION_2	CALL_12
0x400068e	      0xe800000000	                          call 0x4000693	       184	cond.c	FUNCTION_2	CALL_13
0x4000693	      0x488b442468	            mov rax, qword [rsp + 0x68] 	       185	cond.c	FUNCTION_2
0x4000698	    0x644833042528	                xor rax, qword fs:[0x28]	       185	cond.c	FUNCTION_2
0x40006a1	            0x7405	                            je 0x40006a8	       185	cond.c	FUNCTION_2
0x40006a3	      0xe800000000	                          call 0x40006a8	       185	cond.c	FUNCTION_2
0x40006a8	        0x4883c478	                           add rsp, 0x78	       185	cond.c	FUNCTION_2
0x40006ac	              0x5b	                                 pop rbx	       185	cond.c	FUNCTION_2
0x40006ad	              0x5d	                                 pop rbp	       185	cond.c	FUNCTION_2
0x40006ae	              0xc3	                                     ret	       185	cond.c	FUNCTION_2
s_ifb	ELSE,1:IF,2:WHILE,0:FOR,0:DO,0:functions,0:SWITCH,0:CALL,7	88
0x40006af	              0x53	                                push rbx	       192	cond.c	FUNCTION_3
0x40006b0	        0x4883ec40	                           sub rsp, 0x40	       192	cond.c	FUNCTION_3
0x40006b4	            0x89fb	                            mov ebx, edi	       192	cond.c	FUNCTION_3
0x40006b6	    0x64488b042528	                mov rax, qword fs:[0x28]	       192	cond.c	FUNCTION_3
0x40006bf	      0x4889442438	             mov qword [rsp + 0x38], rax	       192	cond.c	FUNCTION_3
0x40006c4	            0x31c0	                            xor eax, eax	       192	cond.c	FUNCTION_3
0x40006c6	          0x4889e7	                            mov rdi, rsp	       195	cond.c	FUNCTION_3	CALL_1
0x40006c9	      0xe87efaffff	              call sym.initialize_cframe	       195	cond.c	FUNCTION_3	CALL_1
0x40006ce	      0x837c243000	               cmp dword [rsp + 0x30], 0	       197	cond.c	FUNCTION_3	IF_1
0x40006d3	            0x740a	                            je 0x40006df	       197	cond.c	FUNCTION_3	IF_1
0x40006d5	    0xc744242c0100	               mov dword [rsp + 0x2c], 1	       198	cond.c	FUNCTION_3	IF_1
0x40006dd	            0xeb3a	                           jmp 0x4000719	       198	cond.c	FUNCTION_3	IF_1
0x40006df	    0x488b05000000	            mov rax, qword [0x040006e6] 	       203	cond.c	FUNCTION_3	ELSE_1	CALL_2
0x40006e6	          0x803820	                    cmp byte [rax], 0x20	       203	cond.c	FUNCTION_3	ELSE_1	CALL_2
0x40006e9	            0x750b	                           jne 0x40006f6	       203	cond.c	FUNCTION_3	ELSE_1	CALL_2
0x40006eb	        0x4883c001	                              add rax, 1	       203	cond.c	FUNCTION_3	ELSE_1	CALL_2
0x40006ef	    0x488905000000	            mov qword [0x040006f6], rax 	       203	cond.c	FUNCTION_3	ELSE_1	CALL_2
0x40006f6	    0x488b05000000	            mov rax, qword [0x040006fd] 	       204	cond.c	FUNCTION_3	ELSE_1
0x40006fd	           0xfb600	                   movzx eax, byte [rax]	       204	cond.c	FUNCTION_3	ELSE_1
0x4000700	    0x80b800000000	                       cmp byte [rax], 0	       205	cond.c	FUNCTION_3	ELSE_1
0x4000707	           0xf94c0	                                 sete al	       205	cond.c	FUNCTION_3	ELSE_1
0x400070a	           0xfb6c0	                           movzx eax, al	       205	cond.c	FUNCTION_3	ELSE_1
0x400070d	            0x39d8	                            cmp eax, ebx	       205	cond.c	FUNCTION_3	ELSE_1
0x400070f	           0xf94c0	                                 sete al	       205	cond.c	FUNCTION_3	ELSE_1
0x4000712	           0xfb6c0	                           movzx eax, al	       205	cond.c	FUNCTION_3	ELSE_1
0x4000715	        0x8944242c	             mov dword [rsp + 0x2c], eax	       205	cond.c	FUNCTION_3	ELSE_1
0x4000719	    0x488b05000000	            mov rax, qword [0x04000720] 	       209	cond.c	FUNCTION_3	CALL_3
0x4000720	    0x482b05000000	             sub rax, qword [0x04000727]	       209	cond.c	FUNCTION_3	CALL_3
0x4000727	        0x4883f837	                           cmp rax, 0x37	       209	cond.c	FUNCTION_3	CALL_3
0x400072b	            0x770f	                            ja 0x400073c	       209	cond.c	FUNCTION_3	CALL_3
0x400072d	      0xbe38000000	                           mov esi, 0x38	       209	cond.c	FUNCTION_3	CALL_3
0x4000732	      0xbf00000000	                              mov edi, 0	       209	cond.c	FUNCTION_3	CALL_3
0x4000737	      0xe800000000	                          call 0x400073c	       209	cond.c	FUNCTION_3	CALL_3
0x400073c	    0x488b05000000	            mov rax, qword [0x04000743] 	       209	cond.c	FUNCTION_3	CALL_3
0x4000743	        0x488d5038	                   lea rdx, [rax + 0x38]	       209	cond.c	FUNCTION_3	CALL_3
0x4000747	    0x488b05000000	            mov rax, qword [0x0400074e] 	       209	cond.c	FUNCTION_3	CALL_3
0x400074e	          0x4839c2	                            cmp rdx, rax	       209	cond.c	FUNCTION_3	CALL_3
0x4000751	            0x7507	                           jne 0x400075a	       209	cond.c	FUNCTION_3	CALL_3
0x4000753	    0x800d00000000	                 or byte [0x0400075a], 2	       209	cond.c	FUNCTION_3	CALL_3
0x400075a	    0x488b0d000000	            mov rcx, qword [0x04000761] 	       209	cond.c	FUNCTION_3	CALL_3
0x4000761	          0x4801ca	                            add rdx, rcx	       209	cond.c	FUNCTION_3	CALL_3
0x4000764	          0x48f7d1	                                 not rcx	       209	cond.c	FUNCTION_3	CALL_3
0x4000767	          0x4821ca	                            and rdx, rcx	       209	cond.c	FUNCTION_3	CALL_3
0x400076a	    0x488915000000	            mov qword [0x04000771], rdx 	       209	cond.c	FUNCTION_3	CALL_3
0x4000771	    0x488b0d000000	            mov rcx, qword [0x04000778] 	       209	cond.c	FUNCTION_3	CALL_3
0x4000778	    0x488b35000000	            mov rsi, qword [0x0400077f] 	       209	cond.c	FUNCTION_3	CALL_3
0x400077f	          0x4829ca	                            sub rdx, rcx	       209	cond.c	FUNCTION_3	CALL_3
0x4000782	          0x4889f3	                            mov rbx, rsi	       209	cond.c	FUNCTION_3	CALL_3
0x4000785	          0x4829cb	                            sub rbx, rcx	       209	cond.c	FUNCTION_3	CALL_3
0x4000788	          0x4839da	                            cmp rdx, rbx	       209	cond.c	FUNCTION_3	CALL_3
0x400078b	            0x7607	                           jbe 0x4000794	       209	cond.c	FUNCTION_3	CALL_3
0x400078d	    0x488935000000	            mov qword [0x04000794], rsi 	       209	cond.c	FUNCTION_3	CALL_3
0x4000794	    0x488b15000000	            mov rdx, qword [0x0400079b] 	       209	cond.c	FUNCTION_3	CALL_3
0x400079b	    0x488915000000	            mov qword [0x040007a2], rdx 	       209	cond.c	FUNCTION_3	CALL_3
0x40007a2	    0x488905000000	            mov qword [0x040007a9], rax 	       208	cond.c	FUNCTION_3
0x40007a9	        0x488b1424	                    mov rdx, qword [rsp]	        53	string3.h	FUNCTION_14	CALL_3
0x40007ad	          0x488910	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40007b0	      0x488b542408	                mov rdx, qword [rsp + 8]	        53	string3.h	FUNCTION_14	CALL_3
0x40007b5	        0x48895008	                mov qword [rax + 8], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40007b9	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_14	CALL_3
0x40007be	        0x48895010	             mov qword [rax + 0x10], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40007c2	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_14	CALL_3
0x40007c7	        0x48895018	             mov qword [rax + 0x18], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40007cb	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	        53	string3.h	FUNCTION_14	CALL_3
0x40007d0	        0x48895020	             mov qword [rax + 0x20], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40007d4	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	        53	string3.h	FUNCTION_14	CALL_3
0x40007d9	        0x48895028	             mov qword [rax + 0x28], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40007dd	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	        53	string3.h	FUNCTION_14	CALL_3
0x40007e2	        0x48895030	             mov qword [rax + 0x30], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40007e6	    0xf60500000000	           test byte [0x040007ed], 0x20 	       212	cond.c	FUNCTION_3	IF_2	CALL_5
0x40007ed	            0x7421	                            je 0x4000810	       212	cond.c	FUNCTION_3	IF_2	CALL_5
0x40007ef	      0x837c242c00	               cmp dword [rsp + 0x2c], 0	       213	cond.c	FUNCTION_3	IF_2
0x40007f4	            0x741a	                            je 0x4000810	       213	cond.c	FUNCTION_3	IF_2
0x40007f6	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       214	cond.c	FUNCTION_3	IF_2
0x40007fb	          0x4885c0	                           test rax, rax	       214	cond.c	FUNCTION_3	IF_2
0x40007fe	            0x7406	                            je 0x4000806	       214	cond.c	FUNCTION_3	IF_2
0x4000800	        0x83782c00	               cmp dword [rax + 0x2c], 0	       215	cond.c	FUNCTION_3	IF_2
0x4000804	            0x750a	                           jne 0x4000810	       215	cond.c	FUNCTION_3	IF_2
0x4000806	      0xbf02000000	                              mov edi, 2	       216	cond.c	FUNCTION_3	CALL_6
0x400080b	      0xe800000000	                          call 0x4000810	       216	cond.c	FUNCTION_3	CALL_6
0x4000810	      0xe800000000	                          call 0x4000815	       218	cond.c	FUNCTION_3	CALL_7
0x4000815	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       219	cond.c	FUNCTION_3
0x400081a	    0x644833042528	                xor rax, qword fs:[0x28]	       219	cond.c	FUNCTION_3
0x4000823	            0x7405	                            je 0x400082a	       219	cond.c	FUNCTION_3
0x4000825	      0xe800000000	                          call 0x400082a	       219	cond.c	FUNCTION_3
0x400082a	        0x4883c440	                           add rsp, 0x40	       219	cond.c	FUNCTION_3
0x400082e	              0x5b	                                 pop rbx	       219	cond.c	FUNCTION_3
0x400082f	              0xc3	                                     ret	       219	cond.c	FUNCTION_3
s_else	ELSE,3:IF,5:WHILE,1:FOR,0:DO,0:functions,0:SWITCH,0:CALL,13	83
0x4000dd9	              0x53	                                push rbx	       413	cond.c	FUNCTION_8
0x4000dda	    0x488b1d000000	            mov rbx, qword [0x04000de1] 	       414	cond.c	FUNCTION_8	IF_1
0x4000de1	          0x4885db	                           test rbx, rbx	       414	cond.c	FUNCTION_8	IF_1
0x4000de4	            0x7526	                           jne 0x4000e0c	       414	cond.c	FUNCTION_8	IF_1
0x4000de6	      0xba05000000	                              mov edx, 5	       416	cond.c	FUNCTION_8	IF_1	CALL_2
0x4000deb	      0xbe00000000	                              mov esi, 0	       416	cond.c	FUNCTION_8	IF_1	CALL_2
0x4000df0	      0xbf00000000	                              mov edi, 0	       416	cond.c	FUNCTION_8	IF_1	CALL_2
0x4000df5	      0xe800000000	                          call 0x4000dfa	       416	cond.c	FUNCTION_8	IF_1	CALL_2
0x4000dfa	          0x4889c7	                            mov rdi, rax	       416	cond.c	FUNCTION_8	IF_1	CALL_2
0x4000dfd	      0xb800000000	                              mov eax, 0	       416	cond.c	FUNCTION_8	IF_1	CALL_2
0x4000e02	      0xe800000000	                          call 0x4000e07	       416	cond.c	FUNCTION_8	IF_1	CALL_2
0x4000e07	      0xe9ee000000	                           jmp 0x4000efa	       416	cond.c	FUNCTION_8	IF_1	CALL_2
0x4000e0c	        0x837b2800	               cmp dword [rbx + 0x28], 0	       418	cond.c	FUNCTION_8	ELSE_1	IF_2
0x4000e10	     0xf8480000000	                            je 0x4000e96	       418	cond.c	FUNCTION_8	ELSE_1	IF_2
0x4000e16	      0xba05000000	                              mov edx, 5	       420	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_4
0x4000e1b	      0xbe00000000	                              mov esi, 0	       420	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_4
0x4000e20	      0xbf00000000	                              mov edi, 0	       420	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_4
0x4000e25	      0xe800000000	                          call 0x4000e2a	       420	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_4
0x4000e2a	          0x4889c7	                            mov rdi, rax	       420	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_4
0x4000e2d	      0xb800000000	                              mov eax, 0	       420	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_4
0x4000e32	      0xe800000000	                          call 0x4000e37	       420	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_4
0x4000e37	      0xba05000000	                              mov edx, 5	       423	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_6
0x4000e3c	      0xbe00000000	                              mov esi, 0	       423	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_6
0x4000e41	      0xbf00000000	                              mov edi, 0	       423	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_6
0x4000e46	      0xe800000000	                          call 0x4000e4b	       423	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_6
0x4000e4b	    0x488b0d000000	            mov rcx, qword [0x04000e52] 	       422	cond.c	FUNCTION_8	ELSE_1	IF_2
0x4000e52	          0x8b7118	            mov esi, dword [rcx + 0x18] 	       421	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_5
0x4000e55	        0x488b7910	            mov rdi, qword [rcx + 0x10] 	       421	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_5
0x4000e59	          0x4889c2	                            mov rdx, rax	       421	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_5
0x4000e5c	      0xb800000000	                              mov eax, 0	       421	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_5
0x4000e61	      0xe800000000	                          call 0x4000e66	       421	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_5
0x4000e66	      0xba05000000	                              mov edx, 5	       426	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_8
0x4000e6b	      0xbe00000000	                              mov esi, 0	       426	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_8
0x4000e70	      0xbf00000000	                              mov edi, 0	       426	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_8
0x4000e75	      0xe800000000	                          call 0x4000e7a	       426	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_8
0x4000e7a	    0x488b0d000000	            mov rcx, qword [0x04000e81] 	       425	cond.c	FUNCTION_8	ELSE_1	IF_2
0x4000e81	          0x8b7108	                mov esi, dword [rcx + 8]	       424	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_7
0x4000e84	          0x4889c2	                            mov rdx, rax	       424	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_7
0x4000e87	          0x488b39	                    mov rdi, qword [rcx]	       424	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_7
0x4000e8a	      0xb800000000	                              mov eax, 0	       424	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_7
0x4000e8f	      0xe800000000	                          call 0x4000e94	       424	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_7
0x4000e94	            0xeb64	                           jmp 0x4000efa	       424	cond.c	FUNCTION_8	ELSE_1	IF_2	CALL_7
0x4000e96	        0x488d7b18	                   lea rdi, [rbx + 0x18]	       431	cond.c	FUNCTION_8	ELSE_2	CALL_9
0x4000e9a	      0xe800000000	                          call 0x4000e9f	       431	cond.c	FUNCTION_8	ELSE_2	CALL_9
0x4000e9f	        0x48894310	             mov qword [rbx + 0x10], rax	       431	cond.c	FUNCTION_8	ELSE_2	CALL_9
0x4000ea3	    0x488b05000000	            mov rax, qword [0x04000eaa] 	       434	cond.c	FUNCTION_8	ELSE_2
0x4000eaa	        0x83782c00	               cmp dword [rax + 0x2c], 0	       434	cond.c	FUNCTION_8	ELSE_2
0x4000eae	           0xf94c2	                                 sete dl	       434	cond.c	FUNCTION_8	ELSE_2
0x4000eb1	           0xfb6d2	                           movzx edx, dl	       434	cond.c	FUNCTION_8	ELSE_2
0x4000eb4	           0xb5030	              or edx, dword [rax + 0x30]	       434	cond.c	FUNCTION_8	ELSE_2
0x4000eb7	          0x89502c	             mov dword [rax + 0x2c], edx	       433	cond.c	FUNCTION_8	ELSE_2
0x4000eba	    0xf60500000000	           test byte [0x04000ec1], 0x20 	       436	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_10
0x4000ec1	            0x7429	                            je 0x4000eec	       436	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_10
0x4000ec3	        0x488b4020	            mov rax, qword [rax + 0x20] 	       437	cond.c	FUNCTION_8	ELSE_2	IF_3
0x4000ec7	          0x4885c0	                           test rax, rax	       437	cond.c	FUNCTION_8	ELSE_2	IF_3
0x4000eca	            0x7406	                            je 0x4000ed2	       437	cond.c	FUNCTION_8	ELSE_2	IF_3
0x4000ecc	        0x83782c00	               cmp dword [rax + 0x2c], 0	       438	cond.c	FUNCTION_8	ELSE_2	IF_3
0x4000ed0	            0x751a	                           jne 0x4000eec	       438	cond.c	FUNCTION_8	ELSE_2	IF_3
0x4000ed2	            0x85d2	                           test edx, edx	       440	cond.c	FUNCTION_8	ELSE_2	IF_3	IF_4
0x4000ed4	            0x750c	                           jne 0x4000ee2	       440	cond.c	FUNCTION_8	ELSE_2	IF_3	IF_4
0x4000ed6	      0xbf01000000	                              mov edi, 1	       441	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_11
0x4000edb	      0xe800000000	                          call 0x4000ee0	       441	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_11
0x4000ee0	            0xeb0a	                           jmp 0x4000eec	       441	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_11
0x4000ee2	      0xbf02000000	                              mov edi, 2	       443	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_12
0x4000ee7	      0xe800000000	                          call 0x4000eec	       443	cond.c	FUNCTION_8	ELSE_2	IF_3	CALL_12
0x4000eec	    0x488b05000000	            mov rax, qword [0x04000ef3] 	       446	cond.c	FUNCTION_8	ELSE_2
0x4000ef3	    0xc74028010000	               mov dword [rax + 0x28], 1	       446	cond.c	FUNCTION_8	ELSE_2
0x4000efa	    0x833d00000000	               cmp dword [0x04000f01], 0	       449	cond.c	FUNCTION_8	IF_5
0x4000f01	            0x7431	                            je 0x4000f34	       449	cond.c	FUNCTION_8	IF_5
0x4000f03	    0x488b05000000	            mov rax, qword [0x04000f0a] 	       451	cond.c	FUNCTION_8	IF_5	WHILE_1
0x4000f0a	           0xfb610	                   movzx edx, byte [rax]	       451	cond.c	FUNCTION_8	IF_5	WHILE_1
0x4000f0d	    0x80ba00000000	                       cmp byte [rdx], 0	       451	cond.c	FUNCTION_8	IF_5	WHILE_1
0x4000f14	            0x751e	                           jne 0x4000f34	       451	cond.c	FUNCTION_8	IF_5	WHILE_1
0x4000f16	        0x4883c001	                              add rax, 1	       451	cond.c	FUNCTION_8	IF_5	WHILE_1
0x4000f1a	          0x4889c2	                            mov rdx, rax	       452	cond.c	FUNCTION_8	IF_5	WHILE_1
0x4000f1d	    0x488905000000	            mov qword [0x04000f24], rax 	       452	cond.c	FUNCTION_8	IF_5	WHILE_1
0x4000f24	        0x4883c001	                              add rax, 1	       452	cond.c	FUNCTION_8	IF_5	WHILE_1
0x4000f28	           0xfb612	                   movzx edx, byte [rdx]	       451	cond.c	FUNCTION_8	IF_5	WHILE_1
0x4000f2b	    0x80ba00000000	                       cmp byte [rdx], 0	       451	cond.c	FUNCTION_8	IF_5	WHILE_1
0x4000f32	            0x74e6	                            je 0x4000f1a	       451	cond.c	FUNCTION_8	IF_5	WHILE_1
0x4000f34	      0xe800000000	                          call 0x4000f39	       455	cond.c	FUNCTION_8	CALL_13
0x4000f39	              0x5b	                                 pop rbx	       456	cond.c	FUNCTION_8
0x4000f3a	              0xc3	                                     ret	       456	cond.c	FUNCTION_8
s_elseif	ELSE,4:IF,7:WHILE,1:FOR,0:DO,0:functions,0:SWITCH,1:CALL,18	168
0x4000a43	              0x55	                                push rbp	       307	cond.c	FUNCTION_6
0x4000a44	              0x53	                                push rbx	       307	cond.c	FUNCTION_6
0x4000a45	        0x4883ec38	                           sub rsp, 0x38	       307	cond.c	FUNCTION_6
0x4000a49	            0x89fd	                            mov ebp, edi	       307	cond.c	FUNCTION_6
0x4000a4b	    0x64488b042528	                mov rax, qword fs:[0x28]	       307	cond.c	FUNCTION_6
0x4000a54	      0x4889442428	             mov qword [rsp + 0x28], rax	       307	cond.c	FUNCTION_6
0x4000a59	            0x31c0	                            xor eax, eax	       307	cond.c	FUNCTION_6
0x4000a5b	    0x488b1d000000	            mov rbx, qword [0x04000a62] 	       308	cond.c	FUNCTION_6	IF_1
0x4000a62	          0x4885db	                           test rbx, rbx	       308	cond.c	FUNCTION_6	IF_1
0x4000a65	            0x7526	                           jne 0x4000a8d	       308	cond.c	FUNCTION_6	IF_1
0x4000a67	      0xba05000000	                              mov edx, 5	       310	cond.c	FUNCTION_6	IF_1	CALL_2
0x4000a6c	      0xbe00000000	                              mov esi, 0	       310	cond.c	FUNCTION_6	IF_1	CALL_2
0x4000a71	      0xbf00000000	                              mov edi, 0	       310	cond.c	FUNCTION_6	IF_1	CALL_2
0x4000a76	      0xe800000000	                          call 0x4000a7b	       310	cond.c	FUNCTION_6	IF_1	CALL_2
0x4000a7b	          0x4889c7	                            mov rdi, rax	       310	cond.c	FUNCTION_6	IF_1	CALL_2
0x4000a7e	      0xb800000000	                              mov eax, 0	       310	cond.c	FUNCTION_6	IF_1	CALL_2
0x4000a83	      0xe800000000	                          call 0x4000a88	       310	cond.c	FUNCTION_6	IF_1	CALL_2
0x4000a88	      0xe9b1000000	                           jmp 0x4000b3e	       310	cond.c	FUNCTION_6	IF_1	CALL_2
0x4000a8d	        0x837b2800	               cmp dword [rbx + 0x28], 0	       312	cond.c	FUNCTION_6	ELSE_1	IF_2
0x4000a91	     0xf8480000000	                            je 0x4000b17	       312	cond.c	FUNCTION_6	ELSE_1	IF_2
0x4000a97	      0xba05000000	                              mov edx, 5	       314	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x4000a9c	      0xbe00000000	                              mov esi, 0	       314	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x4000aa1	      0xbf00000000	                              mov edi, 0	       314	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x4000aa6	      0xe800000000	                          call 0x4000aab	       314	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x4000aab	          0x4889c7	                            mov rdi, rax	       314	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x4000aae	      0xb800000000	                              mov eax, 0	       314	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x4000ab3	      0xe800000000	                          call 0x4000ab8	       314	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_4
0x4000ab8	      0xba05000000	                              mov edx, 5	       317	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_6
0x4000abd	      0xbe00000000	                              mov esi, 0	       317	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_6
0x4000ac2	      0xbf00000000	                              mov edi, 0	       317	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_6
0x4000ac7	      0xe800000000	                          call 0x4000acc	       317	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_6
0x4000acc	    0x488b0d000000	            mov rcx, qword [0x04000ad3] 	       316	cond.c	FUNCTION_6	ELSE_1	IF_2
0x4000ad3	          0x8b7118	            mov esi, dword [rcx + 0x18] 	       315	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_5
0x4000ad6	        0x488b7910	            mov rdi, qword [rcx + 0x10] 	       315	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_5
0x4000ada	          0x4889c2	                            mov rdx, rax	       315	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_5
0x4000add	      0xb800000000	                              mov eax, 0	       315	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_5
0x4000ae2	      0xe800000000	                          call 0x4000ae7	       315	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_5
0x4000ae7	      0xba05000000	                              mov edx, 5	       320	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_8
0x4000aec	      0xbe00000000	                              mov esi, 0	       320	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_8
0x4000af1	      0xbf00000000	                              mov edi, 0	       320	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_8
0x4000af6	      0xe800000000	                          call 0x4000afb	       320	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_8
0x4000afb	    0x488b0d000000	            mov rcx, qword [0x04000b02] 	       319	cond.c	FUNCTION_6	ELSE_1	IF_2
0x4000b02	          0x8b7108	                mov esi, dword [rcx + 8]	       318	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x4000b05	          0x4889c2	                            mov rdx, rax	       318	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x4000b08	          0x488b39	                    mov rdi, qword [rcx]	       318	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x4000b0b	      0xb800000000	                              mov eax, 0	       318	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x4000b10	      0xe800000000	                          call 0x4000b15	       318	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x4000b15	            0xeb27	                           jmp 0x4000b3e	       318	cond.c	FUNCTION_6	ELSE_1	IF_2	CALL_7
0x4000b17	        0x488d7b18	                   lea rdi, [rbx + 0x18]	       325	cond.c	FUNCTION_6	ELSE_2	CALL_9
0x4000b1b	      0xe800000000	                          call 0x4000b20	       325	cond.c	FUNCTION_6	ELSE_2	CALL_9
0x4000b20	        0x48894310	             mov qword [rbx + 0x10], rax	       325	cond.c	FUNCTION_6	ELSE_2	CALL_9
0x4000b24	    0x488b05000000	            mov rax, qword [0x04000b2b] 	       327	cond.c	FUNCTION_6	ELSE_2
0x4000b2b	        0x83782c00	               cmp dword [rax + 0x2c], 0	       327	cond.c	FUNCTION_6	ELSE_2
0x4000b2f	           0xf94c2	                                 sete dl	       327	cond.c	FUNCTION_6	ELSE_2
0x4000b32	           0xfb6d2	                           movzx edx, dl	       327	cond.c	FUNCTION_6	ELSE_2
0x4000b35	           0xb5030	              or edx, dword [rax + 0x30]	       327	cond.c	FUNCTION_6	ELSE_2
0x4000b38	          0x895030	             mov dword [rax + 0x30], edx	       327	cond.c	FUNCTION_6	ELSE_2
0x4000b3b	          0x89502c	             mov dword [rax + 0x2c], edx	       328	cond.c	FUNCTION_6	ELSE_2
0x4000b3e	    0x488b0d000000	            mov rcx, qword [0x04000b45] 	       331	cond.c	FUNCTION_6	IF_3
0x4000b45	          0x4885c9	                           test rcx, rcx	       331	cond.c	FUNCTION_6	IF_3
0x4000b48	     0xf8460010000	                            je 0x4000cae	       331	cond.c	FUNCTION_6	IF_3
0x4000b4e	        0x83792c00	               cmp dword [rcx + 0x2c], 0	       331	cond.c	FUNCTION_6	IF_3
0x4000b52	     0xf856f010000	                           jne 0x4000cc7	       331	cond.c	FUNCTION_6	IF_3
0x4000b58	            0xeb2c	                           jmp 0x4000b86	       331	cond.c	FUNCTION_6	IF_3
0x4000b5a	        0x4883c001	                              add rax, 1	       331	cond.c	FUNCTION_6	IF_3
0x4000b5e	          0x4889c2	                            mov rdx, rax	       334	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000b61	    0x488905000000	            mov qword [0x04000b68], rax 	       334	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000b68	        0x4883c001	                              add rax, 1	       334	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000b6c	           0xfb612	                   movzx edx, byte [rdx]	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000b6f	    0x80ba00000000	                       cmp byte [rdx], 0	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000b76	            0x74e6	                            je 0x4000b5e	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000b78	          0x4885c9	                           test rcx, rcx	       336	cond.c	FUNCTION_6	IF_3	IF_4
0x4000b7b	     0xf85eb000000	                           jne 0x4000c6c	       336	cond.c	FUNCTION_6	IF_3	IF_4
0x4000b81	      0xe95a010000	                           jmp 0x4000ce0	       336	cond.c	FUNCTION_6	IF_3	IF_4
0x4000b86	    0x488b05000000	            mov rax, qword [0x04000b8d] 	       345	cond.c	FUNCTION_6	ELSE_3	CALL_10
0x4000b8d	          0x803820	                    cmp byte [rax], 0x20	       345	cond.c	FUNCTION_6	ELSE_3	CALL_10
0x4000b90	            0x750b	                           jne 0x4000b9d	       345	cond.c	FUNCTION_6	ELSE_3	CALL_10
0x4000b92	        0x4883c001	                              add rax, 1	       345	cond.c	FUNCTION_6	ELSE_3	CALL_10
0x4000b96	    0x488905000000	            mov qword [0x04000b9d], rax 	       345	cond.c	FUNCTION_6	ELSE_3	CALL_10
0x4000b9d	      0xba00000000	                              mov edx, 0	       347	cond.c	FUNCTION_6	ELSE_3	CALL_11
0x4000ba2	          0x4889e6	                            mov rsi, rsp	       347	cond.c	FUNCTION_6	ELSE_3	CALL_11
0x4000ba5	      0xbf00000000	                              mov edi, 0	       347	cond.c	FUNCTION_6	ELSE_3	CALL_11
0x4000baa	      0xe800000000	                          call 0x4000baf	       347	cond.c	FUNCTION_6	ELSE_3	CALL_11
0x4000baf	      0x807c241802	                cmp byte [rsp + 0x18], 2	       348	cond.c	FUNCTION_6	ELSE_3	IF_5
0x4000bb4	            0x7421	                            je 0x4000bd7	       348	cond.c	FUNCTION_6	ELSE_3	IF_5
0x4000bb6	      0xba05000000	                              mov edx, 5	       349	cond.c	FUNCTION_6	ELSE_3	CALL_13
0x4000bbb	      0xbe00000000	                              mov esi, 0	       349	cond.c	FUNCTION_6	ELSE_3	CALL_13
0x4000bc0	      0xbf00000000	                              mov edi, 0	       349	cond.c	FUNCTION_6	ELSE_3	CALL_13
0x4000bc5	      0xe800000000	                          call 0x4000bca	       349	cond.c	FUNCTION_6	ELSE_3	CALL_13
0x4000bca	          0x4889c7	                            mov rdi, rax	       349	cond.c	FUNCTION_6	ELSE_3	CALL_13
0x4000bcd	      0xb800000000	                              mov eax, 0	       349	cond.c	FUNCTION_6	ELSE_3	CALL_13
0x4000bd2	      0xe800000000	                          call 0x4000bd7	       349	cond.c	FUNCTION_6	ELSE_3	CALL_13
0x4000bd7	          0x83ed15	                           sub ebp, 0x15	       351	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000bda	          0x83fd05	                              cmp ebp, 5	       351	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000bdd	            0x775d	                            ja 0x4000c3c	       351	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000bdf	            0x89ed	                            mov ebp, ebp	       351	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000be1	    0xff24ed000000	                       jmp qword [rbp*8]	       351	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000be8	    0x48837c241000	               cmp qword [rsp + 0x10], 0	       353	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000bee	           0xf94c1	                                 sete cl	       353	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000bf1	           0xfb6c9	                           movzx ecx, cl	       353	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000bf4	            0xeb5a	                           jmp 0x4000c50	       353	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000bf6	    0x48837c241000	               cmp qword [rsp + 0x10], 0	       354	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000bfc	           0xf95c1	                                setne cl	       354	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000bff	           0xfb6c9	                           movzx ecx, cl	       354	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000c02	            0xeb4c	                           jmp 0x4000c50	       354	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000c04	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       355	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000c09	        0x48c1e83f	                           shr rax, 0x3f	       355	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000c0d	          0x4889c1	                            mov rcx, rax	       355	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000c10	            0xeb3e	                           jmp 0x4000c50	       355	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000c12	    0x48837c241000	               cmp qword [rsp + 0x10], 0	       356	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000c18	           0xf9ec1	                                setle cl	       356	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000c1b	           0xfb6c9	                           movzx ecx, cl	       356	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000c1e	            0xeb30	                           jmp 0x4000c50	       356	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000c20	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       357	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000c25	          0x48f7d1	                                 not rcx	       357	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000c28	        0x48c1e93f	                           shr rcx, 0x3f	       357	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000c2c	            0xeb22	                           jmp 0x4000c50	       357	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000c2e	    0x48837c241000	               cmp qword [rsp + 0x10], 0	       358	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000c34	           0xf9fc1	                                 setg cl	       358	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000c37	           0xfb6c9	                           movzx ecx, cl	       358	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000c3a	            0xeb14	                           jmp 0x4000c50	       358	cond.c	FUNCTION_6	ELSE_3	SWITCH_1
0x4000c3c	      0xba00000000	                              mov edx, 0	       360	cond.c	FUNCTION_6	ELSE_3	SWITCH_1	CALL_14
0x4000c41	      0xbe68010000	                          mov esi, 0x168	       360	cond.c	FUNCTION_6	ELSE_3	SWITCH_1	CALL_14
0x4000c46	      0xbf00000000	                              mov edi, 0	       360	cond.c	FUNCTION_6	ELSE_3	SWITCH_1	CALL_14
0x4000c4b	      0xe800000000	                          call 0x4000c50	       360	cond.c	FUNCTION_6	ELSE_3	SWITCH_1	CALL_14
0x4000c50	    0x488b15000000	            mov rdx, qword [0x04000c57] 	       364	cond.c	FUNCTION_6	ELSE_3
0x4000c57	        0x837a3000	               cmp dword [rdx + 0x30], 0	       364	cond.c	FUNCTION_6	ELSE_3
0x4000c5b	        0x400f95c6	                               setne sil	       364	cond.c	FUNCTION_6	ELSE_3
0x4000c5f	            0x85c9	                           test ecx, ecx	       364	cond.c	FUNCTION_6	ELSE_3
0x4000c61	           0xf94c0	                                 sete al	       364	cond.c	FUNCTION_6	ELSE_3
0x4000c64	             0x9f0	                             or eax, esi	       364	cond.c	FUNCTION_6	ELSE_3
0x4000c66	           0xfb6c0	                           movzx eax, al	       364	cond.c	FUNCTION_6	ELSE_3
0x4000c69	          0x89422c	             mov dword [rdx + 0x2c], eax	       364	cond.c	FUNCTION_6	ELSE_3
0x4000c6c	    0xf60500000000	           test byte [0x04000c73], 0x20 	       367	cond.c	FUNCTION_6	IF_6	CALL_15
0x4000c73	            0x7432	                            je 0x4000ca7	       367	cond.c	FUNCTION_6	IF_6	CALL_15
0x4000c75	    0x488b15000000	            mov rdx, qword [0x04000c7c] 	       368	cond.c	FUNCTION_6	IF_6
0x4000c7c	        0x488b4220	            mov rax, qword [rdx + 0x20] 	       368	cond.c	FUNCTION_6	IF_6
0x4000c80	          0x4885c0	                           test rax, rax	       368	cond.c	FUNCTION_6	IF_6
0x4000c83	            0x7406	                            je 0x4000c8b	       368	cond.c	FUNCTION_6	IF_6
0x4000c85	        0x83782c00	               cmp dword [rax + 0x2c], 0	       369	cond.c	FUNCTION_6	IF_6
0x4000c89	            0x751c	                           jne 0x4000ca7	       369	cond.c	FUNCTION_6	IF_6
0x4000c8b	        0x837a2c00	               cmp dword [rdx + 0x2c], 0	       371	cond.c	FUNCTION_6	IF_6	IF_7
0x4000c8f	            0x750c	                           jne 0x4000c9d	       371	cond.c	FUNCTION_6	IF_6	IF_7
0x4000c91	      0xbf01000000	                              mov edi, 1	       372	cond.c	FUNCTION_6	IF_6	CALL_16
0x4000c96	      0xe800000000	                          call 0x4000c9b	       372	cond.c	FUNCTION_6	IF_6	CALL_16
0x4000c9b	            0xeb0a	                           jmp 0x4000ca7	       372	cond.c	FUNCTION_6	IF_6	CALL_16
0x4000c9d	      0xbf02000000	                              mov edi, 2	       374	cond.c	FUNCTION_6	IF_6	CALL_17
0x4000ca2	      0xe800000000	                          call 0x4000ca7	       374	cond.c	FUNCTION_6	IF_6	CALL_17
0x4000ca7	      0xe800000000	                          call 0x4000cac	       377	cond.c	FUNCTION_6	CALL_18
0x4000cac	            0xeb32	                           jmp 0x4000ce0	       377	cond.c	FUNCTION_6	CALL_18
0x4000cae	    0x488b05000000	            mov rax, qword [0x04000cb5] 	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000cb5	           0xfb610	                   movzx edx, byte [rax]	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000cb8	    0x80ba00000000	                       cmp byte [rdx], 0	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000cbf	     0xf8495feffff	                            je 0x4000b5a	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000cc5	            0xeb19	                           jmp 0x4000ce0	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000cc7	    0x488b05000000	            mov rax, qword [0x04000cce] 	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000cce	           0xfb610	                   movzx edx, byte [rax]	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000cd1	    0x80ba00000000	                       cmp byte [rdx], 0	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000cd8	     0xf847cfeffff	                            je 0x4000b5a	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000cde	            0xeb8c	                           jmp 0x4000c6c	       333	cond.c	FUNCTION_6	IF_3	WHILE_1
0x4000ce0	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       378	cond.c	FUNCTION_6
0x4000ce5	    0x644833042528	                xor rax, qword fs:[0x28]	       378	cond.c	FUNCTION_6
0x4000cee	            0x7405	                            je 0x4000cf5	       378	cond.c	FUNCTION_6
0x4000cf0	      0xe800000000	                          call 0x4000cf5	       378	cond.c	FUNCTION_6
0x4000cf5	        0x4883c438	                           add rsp, 0x38	       378	cond.c	FUNCTION_6
0x4000cf9	              0x5b	                                 pop rbx	       378	cond.c	FUNCTION_6
0x4000cfa	              0x5d	                                 pop rbp	       378	cond.c	FUNCTION_6
0x4000cfb	              0xc3	                                     ret	       378	cond.c	FUNCTION_6
s_ifeqs	ELSE,0:IF,2:WHILE,0:FOR,0:DO,0:functions,0:SWITCH,0:CALL,13	116
0x4000f3b	            0x4154	                                push r12	       460	cond.c	FUNCTION_9
0x4000f3d	              0x55	                                push rbp	       460	cond.c	FUNCTION_9
0x4000f3e	              0x53	                                push rbx	       460	cond.c	FUNCTION_9
0x4000f3f	        0x4883ec50	                           sub rsp, 0x50	       460	cond.c	FUNCTION_9
0x4000f43	            0x89fb	                            mov ebx, edi	       460	cond.c	FUNCTION_9
0x4000f45	    0x64488b042528	                mov rax, qword fs:[0x28]	       460	cond.c	FUNCTION_9
0x4000f4e	      0x4889442448	             mov qword [rsp + 0x48], rax	       460	cond.c	FUNCTION_9
0x4000f53	            0x31c0	                            xor eax, eax	       460	cond.c	FUNCTION_9
0x4000f55	      0x488d7c2408	                      lea rdi, [rsp + 8]	       466	cond.c	FUNCTION_9	CALL_1
0x4000f5a	      0xe800000000	                          call 0x4000f5f	       466	cond.c	FUNCTION_9	CALL_1
0x4000f5f	          0x4889c5	                            mov rbp, rax	       466	cond.c	FUNCTION_9	CALL_1
0x4000f62	    0x488b05000000	            mov rax, qword [0x04000f69] 	       468	cond.c	FUNCTION_9	CALL_2
0x4000f69	          0x803820	                    cmp byte [rax], 0x20	       468	cond.c	FUNCTION_9	CALL_2
0x4000f6c	            0x750b	                           jne 0x4000f79	       468	cond.c	FUNCTION_9	CALL_2
0x4000f6e	        0x4883c001	                              add rax, 1	       468	cond.c	FUNCTION_9	CALL_2
0x4000f72	    0x488905000000	            mov qword [0x04000f79], rax 	       468	cond.c	FUNCTION_9	CALL_2
0x4000f79	    0x488b05000000	            mov rax, qword [0x04000f80] 	       469	cond.c	FUNCTION_9	IF_1
0x4000f80	          0x80382c	                    cmp byte [rax], 0x2c	       469	cond.c	FUNCTION_9	IF_1
0x4000f83	            0x742b	                            je 0x4000fb0	       469	cond.c	FUNCTION_9	IF_1
0x4000f85	      0xba05000000	                              mov edx, 5	       471	cond.c	FUNCTION_9	IF_1	CALL_4
0x4000f8a	      0xbe00000000	                              mov esi, 0	       471	cond.c	FUNCTION_9	IF_1	CALL_4
0x4000f8f	      0xbf00000000	                              mov edi, 0	       471	cond.c	FUNCTION_9	IF_1	CALL_4
0x4000f94	      0xe800000000	                          call 0x4000f99	       471	cond.c	FUNCTION_9	IF_1	CALL_4
0x4000f99	          0x4889c7	                            mov rdi, rax	       471	cond.c	FUNCTION_9	IF_1	CALL_4
0x4000f9c	      0xb800000000	                              mov eax, 0	       471	cond.c	FUNCTION_9	IF_1	CALL_4
0x4000fa1	      0xe800000000	                          call 0x4000fa6	       471	cond.c	FUNCTION_9	IF_1	CALL_4
0x4000fa6	      0xe800000000	                          call 0x4000fab	       472	cond.c	FUNCTION_9	IF_1	CALL_5
0x4000fab	      0xe95b010000	                           jmp 0x400110b	       472	cond.c	FUNCTION_9	IF_1	CALL_5
0x4000fb0	        0x4883c001	                              add rax, 1	       476	cond.c	FUNCTION_9
0x4000fb4	    0x488905000000	            mov qword [0x04000fbb], rax 	       476	cond.c	FUNCTION_9
0x4000fbb	      0x488d7c240c	                    lea rdi, [rsp + 0xc]	       478	cond.c	FUNCTION_9	CALL_6
0x4000fc0	      0xe800000000	                          call 0x4000fc5	       478	cond.c	FUNCTION_9	CALL_6
0x4000fc5	        0x8b542408	                mov edx, dword [rsp + 8]	       480	cond.c	FUNCTION_9	CALL_7
0x4000fc9	    0x41bc00000000	                             mov r12d, 0	       480	cond.c	FUNCTION_9	CALL_7
0x4000fcf	        0x3b54240c	              cmp edx, dword [rsp + 0xc]	       480	cond.c	FUNCTION_9	CALL_7
0x4000fd3	            0x7518	                           jne 0x4000fed	       480	cond.c	FUNCTION_9	CALL_7
0x4000fd5	          0x4863d2	                         movsxd rdx, edx	       480	cond.c	FUNCTION_9	CALL_7
0x4000fd8	          0x4889c6	                            mov rsi, rax	       480	cond.c	FUNCTION_9	CALL_7
0x4000fdb	          0x4889ef	                            mov rdi, rbp	       480	cond.c	FUNCTION_9	CALL_7
0x4000fde	      0xe800000000	                          call 0x4000fe3	       480	cond.c	FUNCTION_9	CALL_7
0x4000fe3	            0x85c0	                           test eax, eax	       480	cond.c	FUNCTION_9	CALL_7
0x4000fe5	        0x410f94c4	                               sete r12b	       480	cond.c	FUNCTION_9	CALL_7
0x4000fe9	        0x450fb6e4	                        movzx r12d, r12b	       480	cond.c	FUNCTION_9	CALL_7
0x4000fed	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       482	cond.c	FUNCTION_9	CALL_8
0x4000ff2	      0xe855f1ffff	              call sym.initialize_cframe	       482	cond.c	FUNCTION_9	CALL_8
0x4000ff7	      0x837c244000	               cmp dword [rsp + 0x40], 0	       483	cond.c	FUNCTION_9
0x4000ffc	           0xf95c2	                                setne dl	       483	cond.c	FUNCTION_9
0x4000fff	          0x4139dc	                           cmp r12d, ebx	       483	cond.c	FUNCTION_9
0x4001002	           0xf94c0	                                 sete al	       483	cond.c	FUNCTION_9
0x4001005	             0x9d0	                             or eax, edx	       483	cond.c	FUNCTION_9
0x4001007	           0xfb6c0	                           movzx eax, al	       483	cond.c	FUNCTION_9
0x400100a	        0x8944243c	             mov dword [rsp + 0x3c], eax	       483	cond.c	FUNCTION_9
0x400100e	    0x488b05000000	            mov rax, qword [0x04001015] 	       485	cond.c	FUNCTION_9	CALL_9
0x4001015	    0x482b05000000	             sub rax, qword [0x0400101c]	       485	cond.c	FUNCTION_9	CALL_9
0x400101c	        0x4883f837	                           cmp rax, 0x37	       485	cond.c	FUNCTION_9	CALL_9
0x4001020	            0x770f	                            ja 0x4001031	       485	cond.c	FUNCTION_9	CALL_9
0x4001022	      0xbe38000000	                           mov esi, 0x38	       485	cond.c	FUNCTION_9	CALL_9
0x4001027	      0xbf00000000	                              mov edi, 0	       485	cond.c	FUNCTION_9	CALL_9
0x400102c	      0xe800000000	                          call 0x4001031	       485	cond.c	FUNCTION_9	CALL_9
0x4001031	    0x488b05000000	            mov rax, qword [0x04001038] 	       485	cond.c	FUNCTION_9	CALL_9
0x4001038	        0x488d5038	                   lea rdx, [rax + 0x38]	       485	cond.c	FUNCTION_9	CALL_9
0x400103c	    0x488b05000000	            mov rax, qword [0x04001043] 	       485	cond.c	FUNCTION_9	CALL_9
0x4001043	          0x4839c2	                            cmp rdx, rax	       485	cond.c	FUNCTION_9	CALL_9
0x4001046	            0x7507	                           jne 0x400104f	       485	cond.c	FUNCTION_9	CALL_9
0x4001048	    0x800d00000000	                 or byte [0x0400104f], 2	       485	cond.c	FUNCTION_9	CALL_9
0x400104f	    0x488b0d000000	            mov rcx, qword [0x04001056] 	       485	cond.c	FUNCTION_9	CALL_9
0x4001056	          0x4801ca	                            add rdx, rcx	       485	cond.c	FUNCTION_9	CALL_9
0x4001059	          0x48f7d1	                                 not rcx	       485	cond.c	FUNCTION_9	CALL_9
0x400105c	          0x4821ca	                            and rdx, rcx	       485	cond.c	FUNCTION_9	CALL_9
0x400105f	    0x488915000000	            mov qword [0x04001066], rdx 	       485	cond.c	FUNCTION_9	CALL_9
0x4001066	    0x488b0d000000	            mov rcx, qword [0x0400106d] 	       485	cond.c	FUNCTION_9	CALL_9
0x400106d	    0x488b35000000	            mov rsi, qword [0x04001074] 	       485	cond.c	FUNCTION_9	CALL_9
0x4001074	          0x4829ca	                            sub rdx, rcx	       485	cond.c	FUNCTION_9	CALL_9
0x4001077	          0x4889f3	                            mov rbx, rsi	       485	cond.c	FUNCTION_9	CALL_9
0x400107a	          0x4829cb	                            sub rbx, rcx	       485	cond.c	FUNCTION_9	CALL_9
0x400107d	          0x4839da	                            cmp rdx, rbx	       485	cond.c	FUNCTION_9	CALL_9
0x4001080	            0x7607	                           jbe 0x4001089	       485	cond.c	FUNCTION_9	CALL_9
0x4001082	    0x488935000000	            mov qword [0x04001089], rsi 	       485	cond.c	FUNCTION_9	CALL_9
0x4001089	    0x488b15000000	            mov rdx, qword [0x04001090] 	       485	cond.c	FUNCTION_9	CALL_9
0x4001090	    0x488915000000	            mov qword [0x04001097], rdx 	       485	cond.c	FUNCTION_9	CALL_9
0x4001097	    0x488905000000	            mov qword [0x0400109e], rax 	       484	cond.c	FUNCTION_9
0x400109e	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_14	CALL_3
0x40010a3	          0x488910	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40010a6	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_14	CALL_3
0x40010ab	        0x48895008	                mov qword [rax + 8], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40010af	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	        53	string3.h	FUNCTION_14	CALL_3
0x40010b4	        0x48895010	             mov qword [rax + 0x10], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40010b8	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	        53	string3.h	FUNCTION_14	CALL_3
0x40010bd	        0x48895018	             mov qword [rax + 0x18], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40010c1	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	        53	string3.h	FUNCTION_14	CALL_3
0x40010c6	        0x48895020	             mov qword [rax + 0x20], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40010ca	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	        53	string3.h	FUNCTION_14	CALL_3
0x40010cf	        0x48895028	             mov qword [rax + 0x28], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40010d3	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	        53	string3.h	FUNCTION_14	CALL_3
0x40010d8	        0x48895030	             mov qword [rax + 0x30], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40010dc	    0xf60500000000	           test byte [0x040010e3], 0x20 	       488	cond.c	FUNCTION_9	IF_2	CALL_11
0x40010e3	            0x7421	                            je 0x4001106	       488	cond.c	FUNCTION_9	IF_2	CALL_11
0x40010e5	      0x837c243c00	               cmp dword [rsp + 0x3c], 0	       489	cond.c	FUNCTION_9	IF_2
0x40010ea	            0x741a	                            je 0x4001106	       489	cond.c	FUNCTION_9	IF_2
0x40010ec	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       490	cond.c	FUNCTION_9	IF_2
0x40010f1	          0x4885c0	                           test rax, rax	       490	cond.c	FUNCTION_9	IF_2
0x40010f4	            0x7406	                            je 0x40010fc	       490	cond.c	FUNCTION_9	IF_2
0x40010f6	        0x83782c00	               cmp dword [rax + 0x2c], 0	       491	cond.c	FUNCTION_9	IF_2
0x40010fa	            0x750a	                           jne 0x4001106	       491	cond.c	FUNCTION_9	IF_2
0x40010fc	      0xbf02000000	                              mov edi, 2	       492	cond.c	FUNCTION_9	CALL_12
0x4001101	      0xe800000000	                          call 0x4001106	       492	cond.c	FUNCTION_9	CALL_12
0x4001106	      0xe800000000	                          call 0x400110b	       494	cond.c	FUNCTION_9	CALL_13
0x400110b	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       495	cond.c	FUNCTION_9
0x4001110	    0x644833042528	                xor rax, qword fs:[0x28]	       495	cond.c	FUNCTION_9
0x4001119	            0x7405	                            je 0x4001120	       495	cond.c	FUNCTION_9
0x400111b	      0xe800000000	                          call 0x4001120	       495	cond.c	FUNCTION_9
0x4001120	        0x4883c450	                           add rsp, 0x50	       495	cond.c	FUNCTION_9
0x4001124	              0x5b	                                 pop rbx	       495	cond.c	FUNCTION_9
0x4001125	              0x5d	                                 pop rbp	       495	cond.c	FUNCTION_9
0x4001126	            0x415c	                                 pop r12	       495	cond.c	FUNCTION_9
0x4001128	              0xc3	                                     ret	       495	cond.c	FUNCTION_9
ignore_input	ELSE,1:IF,4:WHILE,0:FOR,0:DO,0:functions,0:SWITCH,0:CALL,6	66
0x4001129	              0x53	                                push rbx	       499	cond.c	FUNCTION_10
0x400112a	    0x488b1d000000	            mov rbx, qword [0x04001131] 	       502	cond.c	FUNCTION_10
0x4001131	        0x807bff2e	                cmp byte [rbx - 1], 0x2e	       511	cond.c	FUNCTION_10	ELSE_1	IF_3
0x4001135	            0x741f	                            je 0x4001156	       511	cond.c	FUNCTION_10	ELSE_1	IF_3
0x4001137	    0x488b05000000	            mov rax, qword [0x0400113e] 	       512	cond.c	FUNCTION_10	ELSE_1	IF_3
0x400113e	          0x4885c0	                           test rax, rax	       512	cond.c	FUNCTION_10	ELSE_1	IF_3
0x4001141	     0xf84c3000000	                            je 0x400120a	       512	cond.c	FUNCTION_10	ELSE_1	IF_3
0x4001147	        0x83782c00	               cmp dword [rax + 0x2c], 0	       512	cond.c	FUNCTION_10	ELSE_1	IF_3
0x400114b	           0xf95c0	                                setne al	       512	cond.c	FUNCTION_10	ELSE_1	IF_3
0x400114e	           0xfb6c0	                           movzx eax, al	       512	cond.c	FUNCTION_10	ELSE_1	IF_3
0x4001151	      0xe9c0000000	                           jmp 0x4001216	       512	cond.c	FUNCTION_10	ELSE_1	IF_3
0x4001156	           0xfb603	                   movzx eax, byte [rbx]	       517	cond.c	FUNCTION_10	IF_4
0x4001159	          0x83e0df	                     and eax, 0xffffffdf	       517	cond.c	FUNCTION_10	IF_4
0x400115c	            0x3c49	                            cmp al, 0x49	       516	cond.c	FUNCTION_10	IF_4
0x400115e	            0x754c	                           jne 0x40011ac	       516	cond.c	FUNCTION_10	IF_4
0x4001160	      0xba02000000	                              mov edx, 2	       518	cond.c	FUNCTION_10	IF_4	CALL_1
0x4001165	      0xbe00000000	                              mov esi, 0	       518	cond.c	FUNCTION_10	IF_4	CALL_1
0x400116a	          0x4889df	                            mov rdi, rbx	       518	cond.c	FUNCTION_10	IF_4	CALL_1
0x400116d	      0xe800000000	                          call 0x4001172	       518	cond.c	FUNCTION_10	IF_4	CALL_1
0x4001172	            0x85c0	                           test eax, eax	       518	cond.c	FUNCTION_10	IF_4	CALL_1
0x4001174	     0xf849c000000	                            je 0x4001216	       518	cond.c	FUNCTION_10	IF_4	CALL_1
0x400117a	      0xba05000000	                              mov edx, 5	       519	cond.c	FUNCTION_10	IF_4	CALL_2
0x400117f	      0xbe00000000	                              mov esi, 0	       519	cond.c	FUNCTION_10	IF_4	CALL_2
0x4001184	          0x4889df	                            mov rdi, rbx	       519	cond.c	FUNCTION_10	IF_4	CALL_2
0x4001187	      0xe800000000	                          call 0x400118c	       519	cond.c	FUNCTION_10	IF_4	CALL_2
0x400118c	            0x85c0	                           test eax, eax	       519	cond.c	FUNCTION_10	IF_4	CALL_2
0x400118e	     0xf8482000000	                            je 0x4001216	       519	cond.c	FUNCTION_10	IF_4	CALL_2
0x4001194	      0xba06000000	                              mov edx, 6	       520	cond.c	FUNCTION_10	IF_4	CALL_3
0x4001199	      0xbe00000000	                              mov esi, 0	       520	cond.c	FUNCTION_10	IF_4	CALL_3
0x400119e	          0x4889df	                            mov rdi, rbx	       520	cond.c	FUNCTION_10	IF_4	CALL_3
0x40011a1	      0xe800000000	                          call 0x40011a6	       520	cond.c	FUNCTION_10	IF_4	CALL_3
0x40011a6	            0x85c0	                           test eax, eax	       520	cond.c	FUNCTION_10	IF_4	CALL_3
0x40011a8	            0x7548	                           jne 0x40011f2	       520	cond.c	FUNCTION_10	IF_4	CALL_3
0x40011aa	            0xeb6a	                           jmp 0x4001216	       520	cond.c	FUNCTION_10	IF_4	CALL_3
0x40011ac	            0x3c45	                            cmp al, 0x45	       521	cond.c	FUNCTION_10	IF_4
0x40011ae	            0x7542	                           jne 0x40011f2	       521	cond.c	FUNCTION_10	IF_4
0x40011b0	      0xba04000000	                              mov edx, 4	       523	cond.c	FUNCTION_10	IF_4	CALL_4
0x40011b5	      0xbe00000000	                              mov esi, 0	       523	cond.c	FUNCTION_10	IF_4	CALL_4
0x40011ba	          0x4889df	                            mov rdi, rbx	       523	cond.c	FUNCTION_10	IF_4	CALL_4
0x40011bd	      0xe800000000	                          call 0x40011c2	       523	cond.c	FUNCTION_10	IF_4	CALL_4
0x40011c2	            0x85c0	                           test eax, eax	       523	cond.c	FUNCTION_10	IF_4	CALL_4
0x40011c4	            0x7450	                            je 0x4001216	       523	cond.c	FUNCTION_10	IF_4	CALL_4
0x40011c6	      0xba05000000	                              mov edx, 5	       524	cond.c	FUNCTION_10	IF_4	CALL_5
0x40011cb	      0xbe00000000	                              mov esi, 0	       524	cond.c	FUNCTION_10	IF_4	CALL_5
0x40011d0	          0x4889df	                            mov rdi, rbx	       524	cond.c	FUNCTION_10	IF_4	CALL_5
0x40011d3	      0xe800000000	                          call 0x40011d8	       524	cond.c	FUNCTION_10	IF_4	CALL_5
0x40011d8	            0x85c0	                           test eax, eax	       524	cond.c	FUNCTION_10	IF_4	CALL_5
0x40011da	            0x743a	                            je 0x4001216	       524	cond.c	FUNCTION_10	IF_4	CALL_5
0x40011dc	      0xba04000000	                              mov edx, 4	       525	cond.c	FUNCTION_10	IF_4	CALL_6
0x40011e1	      0xbe00000000	                              mov esi, 0	       525	cond.c	FUNCTION_10	IF_4	CALL_6
0x40011e6	          0x4889df	                            mov rdi, rbx	       525	cond.c	FUNCTION_10	IF_4	CALL_6
0x40011e9	      0xe800000000	                          call 0x40011ee	       525	cond.c	FUNCTION_10	IF_4	CALL_6
0x40011ee	            0x85c0	                           test eax, eax	       525	cond.c	FUNCTION_10	IF_4	CALL_6
0x40011f0	            0x7424	                            je 0x4001216	       525	cond.c	FUNCTION_10	IF_4	CALL_6
0x40011f2	    0x488b05000000	            mov rax, qword [0x040011f9] 	       528	cond.c	FUNCTION_10
0x40011f9	          0x4885c0	                           test rax, rax	       528	cond.c	FUNCTION_10
0x40011fc	            0x7413	                            je 0x4001211	       528	cond.c	FUNCTION_10
0x40011fe	        0x83782c00	               cmp dword [rax + 0x2c], 0	       512	cond.c	FUNCTION_10	ELSE_1	IF_3
0x4001202	           0xf95c0	                                setne al	       512	cond.c	FUNCTION_10	ELSE_1	IF_3
0x4001205	           0xfb6c0	                           movzx eax, al	       512	cond.c	FUNCTION_10	ELSE_1	IF_3
0x4001208	            0xeb0c	                           jmp 0x4001216	       512	cond.c	FUNCTION_10	ELSE_1	IF_3
0x400120a	      0xb800000000	                              mov eax, 0	       512	cond.c	FUNCTION_10	ELSE_1	IF_3
0x400120f	            0xeb05	                           jmp 0x4001216	       512	cond.c	FUNCTION_10	ELSE_1	IF_3
0x4001211	      0xb800000000	                              mov eax, 0	       528	cond.c	FUNCTION_10
0x4001216	              0x5b	                                 pop rbx	       529	cond.c	FUNCTION_10
0x4001217	              0xc3	                                     ret	       529	cond.c	FUNCTION_10
s_ifc	ELSE,1:IF,4:WHILE,0:FOR,0:DO,0:functions,0:SWITCH,0:CALL,13	126
0x4000830	            0x4155	                                push r13	       265	cond.c	FUNCTION_5
0x4000832	            0x4154	                                push r12	       265	cond.c	FUNCTION_5
0x4000834	              0x55	                                push rbp	       265	cond.c	FUNCTION_5
0x4000835	              0x53	                                push rbx	       265	cond.c	FUNCTION_5
0x4000836	        0x4883ec58	                           sub rsp, 0x58	       265	cond.c	FUNCTION_5
0x400083a	            0x89fd	                            mov ebp, edi	       265	cond.c	FUNCTION_5
0x400083c	    0x64488b042528	                mov rax, qword fs:[0x28]	       265	cond.c	FUNCTION_5
0x4000845	      0x4889442448	             mov qword [rsp + 0x48], rax	       265	cond.c	FUNCTION_5
0x400084a	            0x31c0	                            xor eax, eax	       265	cond.c	FUNCTION_5
0x400084c	      0xc644240700	                   mov byte [rsp + 7], 0	       267	cond.c	FUNCTION_5
0x4000851	      0xbb00000000	                              mov ebx, 0	       266	cond.c	FUNCTION_5
0x4000856	    0x833d00000000	               cmp dword [0x0400085d], 0	       273	cond.c	FUNCTION_5	IF_1
0x400085d	            0x740d	                            je 0x400086c	       273	cond.c	FUNCTION_5	IF_1
0x400085f	      0x488d7c2407	                      lea rdi, [rsp + 7]	       274	cond.c	FUNCTION_5	CALL_1
0x4000864	      0xe800000000	                          call 0x4000869	       274	cond.c	FUNCTION_5	CALL_1
0x4000869	          0x4889c3	                            mov rbx, rax	       274	cond.c	FUNCTION_5	CALL_1
0x400086c	      0x488d742408	                      lea rsi, [rsp + 8]	       276	cond.c	FUNCTION_5	CALL_2
0x4000871	      0xbf2c000000	                           mov edi, 0x2c	       276	cond.c	FUNCTION_5	CALL_2
0x4000876	      0xe8c5f7ffff	                 call sym.get_mri_string	       276	cond.c	FUNCTION_5	CALL_2
0x400087b	          0x4989c4	                            mov r12, rax	       276	cond.c	FUNCTION_5	CALL_2
0x400087e	    0x488b05000000	            mov rax, qword [0x04000885] 	       278	cond.c	FUNCTION_5	IF_2
0x4000885	          0x80382c	                    cmp byte [rax], 0x2c	       278	cond.c	FUNCTION_5	IF_2
0x4000888	            0x7423	                            je 0x40008ad	       278	cond.c	FUNCTION_5	IF_2
0x400088a	      0xba05000000	                              mov edx, 5	       279	cond.c	FUNCTION_5	CALL_4
0x400088f	      0xbe00000000	                              mov esi, 0	       279	cond.c	FUNCTION_5	CALL_4
0x4000894	      0xbf00000000	                              mov edi, 0	       279	cond.c	FUNCTION_5	CALL_4
0x4000899	      0xe800000000	                          call 0x400089e	       279	cond.c	FUNCTION_5	CALL_4
0x400089e	          0x4889c7	                            mov rdi, rax	       279	cond.c	FUNCTION_5	CALL_4
0x40008a1	      0xb800000000	                              mov eax, 0	       279	cond.c	FUNCTION_5	CALL_4
0x40008a6	      0xe800000000	                          call 0x40008ab	       279	cond.c	FUNCTION_5	CALL_4
0x40008ab	            0xeb0b	                           jmp 0x40008b8	       279	cond.c	FUNCTION_5	CALL_4
0x40008ad	        0x4883c001	                              add rax, 1	       281	cond.c	FUNCTION_5	ELSE_1
0x40008b1	    0x488905000000	            mov qword [0x040008b8], rax 	       281	cond.c	FUNCTION_5	ELSE_1
0x40008b8	      0x488d74240c	                    lea rsi, [rsp + 0xc]	       283	cond.c	FUNCTION_5	CALL_5
0x40008bd	      0xbf3b000000	                           mov edi, 0x3b	       283	cond.c	FUNCTION_5	CALL_5
0x40008c2	      0xe879f7ffff	                 call sym.get_mri_string	       283	cond.c	FUNCTION_5	CALL_5
0x40008c7	        0x8b542408	                mov edx, dword [rsp + 8]	       285	cond.c	FUNCTION_5	CALL_6
0x40008cb	    0x41bd00000000	                             mov r13d, 0	       285	cond.c	FUNCTION_5	CALL_6
0x40008d1	        0x3b54240c	              cmp edx, dword [rsp + 0xc]	       285	cond.c	FUNCTION_5	CALL_6
0x40008d5	            0x7518	                           jne 0x40008ef	       285	cond.c	FUNCTION_5	CALL_6
0x40008d7	          0x4863d2	                         movsxd rdx, edx	       285	cond.c	FUNCTION_5	CALL_6
0x40008da	          0x4889c6	                            mov rsi, rax	       285	cond.c	FUNCTION_5	CALL_6
0x40008dd	          0x4c89e7	                            mov rdi, r12	       285	cond.c	FUNCTION_5	CALL_6
0x40008e0	      0xe800000000	                          call 0x40008e5	       285	cond.c	FUNCTION_5	CALL_6
0x40008e5	            0x85c0	                           test eax, eax	       285	cond.c	FUNCTION_5	CALL_6
0x40008e7	        0x410f94c5	                               sete r13b	       285	cond.c	FUNCTION_5	CALL_6
0x40008eb	        0x450fb6ed	                        movzx r13d, r13b	       285	cond.c	FUNCTION_5	CALL_6
0x40008ef	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       287	cond.c	FUNCTION_5	CALL_7
0x40008f4	      0xe853f8ffff	              call sym.initialize_cframe	       287	cond.c	FUNCTION_5	CALL_7
0x40008f9	      0x837c244000	               cmp dword [rsp + 0x40], 0	       288	cond.c	FUNCTION_5
0x40008fe	           0xf95c2	                                setne dl	       288	cond.c	FUNCTION_5
0x4000901	          0x4139ed	                           cmp r13d, ebp	       288	cond.c	FUNCTION_5
0x4000904	           0xf94c0	                                 sete al	       288	cond.c	FUNCTION_5
0x4000907	             0x9d0	                             or eax, edx	       288	cond.c	FUNCTION_5
0x4000909	           0xfb6c0	                           movzx eax, al	       288	cond.c	FUNCTION_5
0x400090c	        0x8944243c	             mov dword [rsp + 0x3c], eax	       288	cond.c	FUNCTION_5
0x4000910	    0x488b05000000	            mov rax, qword [0x04000917] 	       290	cond.c	FUNCTION_5	CALL_8
0x4000917	    0x482b05000000	             sub rax, qword [0x0400091e]	       290	cond.c	FUNCTION_5	CALL_8
0x400091e	        0x4883f837	                           cmp rax, 0x37	       290	cond.c	FUNCTION_5	CALL_8
0x4000922	            0x770f	                            ja 0x4000933	       290	cond.c	FUNCTION_5	CALL_8
0x4000924	      0xbe38000000	                           mov esi, 0x38	       290	cond.c	FUNCTION_5	CALL_8
0x4000929	      0xbf00000000	                              mov edi, 0	       290	cond.c	FUNCTION_5	CALL_8
0x400092e	      0xe800000000	                          call 0x4000933	       290	cond.c	FUNCTION_5	CALL_8
0x4000933	    0x488b05000000	            mov rax, qword [0x0400093a] 	       290	cond.c	FUNCTION_5	CALL_8
0x400093a	        0x488d5038	                   lea rdx, [rax + 0x38]	       290	cond.c	FUNCTION_5	CALL_8
0x400093e	    0x488b05000000	            mov rax, qword [0x04000945] 	       290	cond.c	FUNCTION_5	CALL_8
0x4000945	          0x4839c2	                            cmp rdx, rax	       290	cond.c	FUNCTION_5	CALL_8
0x4000948	            0x7507	                           jne 0x4000951	       290	cond.c	FUNCTION_5	CALL_8
0x400094a	    0x800d00000000	                 or byte [0x04000951], 2	       290	cond.c	FUNCTION_5	CALL_8
0x4000951	    0x488b0d000000	            mov rcx, qword [0x04000958] 	       290	cond.c	FUNCTION_5	CALL_8
0x4000958	          0x4801ca	                            add rdx, rcx	       290	cond.c	FUNCTION_5	CALL_8
0x400095b	          0x48f7d1	                                 not rcx	       290	cond.c	FUNCTION_5	CALL_8
0x400095e	          0x4821ca	                            and rdx, rcx	       290	cond.c	FUNCTION_5	CALL_8
0x4000961	    0x488915000000	            mov qword [0x04000968], rdx 	       290	cond.c	FUNCTION_5	CALL_8
0x4000968	    0x488b0d000000	            mov rcx, qword [0x0400096f] 	       290	cond.c	FUNCTION_5	CALL_8
0x400096f	    0x488b35000000	            mov rsi, qword [0x04000976] 	       290	cond.c	FUNCTION_5	CALL_8
0x4000976	          0x4829ca	                            sub rdx, rcx	       290	cond.c	FUNCTION_5	CALL_8
0x4000979	          0x4889f7	                            mov rdi, rsi	       290	cond.c	FUNCTION_5	CALL_8
0x400097c	          0x4829cf	                            sub rdi, rcx	       290	cond.c	FUNCTION_5	CALL_8
0x400097f	          0x4839fa	                            cmp rdx, rdi	       290	cond.c	FUNCTION_5	CALL_8
0x4000982	            0x7607	                           jbe 0x400098b	       290	cond.c	FUNCTION_5	CALL_8
0x4000984	    0x488935000000	            mov qword [0x0400098b], rsi 	       290	cond.c	FUNCTION_5	CALL_8
0x400098b	    0x488b15000000	            mov rdx, qword [0x04000992] 	       290	cond.c	FUNCTION_5	CALL_8
0x4000992	    0x488915000000	            mov qword [0x04000999], rdx 	       290	cond.c	FUNCTION_5	CALL_8
0x4000999	    0x488905000000	            mov qword [0x040009a0], rax 	       289	cond.c	FUNCTION_5
0x40009a0	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_14	CALL_3
0x40009a5	          0x488910	                    mov qword [rax], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40009a8	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_14	CALL_3
0x40009ad	        0x48895008	                mov qword [rax + 8], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40009b1	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	        53	string3.h	FUNCTION_14	CALL_3
0x40009b6	        0x48895010	             mov qword [rax + 0x10], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40009ba	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	        53	string3.h	FUNCTION_14	CALL_3
0x40009bf	        0x48895018	             mov qword [rax + 0x18], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40009c3	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	        53	string3.h	FUNCTION_14	CALL_3
0x40009c8	        0x48895020	             mov qword [rax + 0x20], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40009cc	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	        53	string3.h	FUNCTION_14	CALL_3
0x40009d1	        0x48895028	             mov qword [rax + 0x28], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40009d5	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	        53	string3.h	FUNCTION_14	CALL_3
0x40009da	        0x48895030	             mov qword [rax + 0x30], rdx	        53	string3.h	FUNCTION_14	CALL_3
0x40009de	    0xf60500000000	           test byte [0x040009e5], 0x20 	       293	cond.c	FUNCTION_5	IF_3	CALL_10
0x40009e5	            0x7421	                            je 0x4000a08	       293	cond.c	FUNCTION_5	IF_3	CALL_10
0x40009e7	      0x837c243c00	               cmp dword [rsp + 0x3c], 0	       294	cond.c	FUNCTION_5	IF_3
0x40009ec	            0x741a	                            je 0x4000a08	       294	cond.c	FUNCTION_5	IF_3
0x40009ee	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       295	cond.c	FUNCTION_5	IF_3
0x40009f3	          0x4885c0	                           test rax, rax	       295	cond.c	FUNCTION_5	IF_3
0x40009f6	            0x7406	                            je 0x40009fe	       295	cond.c	FUNCTION_5	IF_3
0x40009f8	        0x83782c00	               cmp dword [rax + 0x2c], 0	       296	cond.c	FUNCTION_5	IF_3
0x40009fc	            0x750a	                           jne 0x4000a08	       296	cond.c	FUNCTION_5	IF_3
0x40009fe	      0xbf02000000	                              mov edi, 2	       297	cond.c	FUNCTION_5	CALL_11
0x4000a03	      0xe800000000	                          call 0x4000a08	       297	cond.c	FUNCTION_5	CALL_11
0x4000a08	    0x833d00000000	               cmp dword [0x04000a0f], 0	       299	cond.c	FUNCTION_5	IF_4
0x4000a0f	            0x740d	                            je 0x4000a1e	       299	cond.c	FUNCTION_5	IF_4
0x4000a11	       0xfbe742407	               movsx esi, byte [rsp + 7]	       300	cond.c	FUNCTION_5	CALL_12
0x4000a16	          0x4889df	                            mov rdi, rbx	       300	cond.c	FUNCTION_5	CALL_12
0x4000a19	      0xe800000000	                          call 0x4000a1e	       300	cond.c	FUNCTION_5	CALL_12
0x4000a1e	      0xe800000000	                          call 0x4000a23	       302	cond.c	FUNCTION_5	CALL_13
0x4000a23	      0x488b442448	            mov rax, qword [rsp + 0x48] 	       303	cond.c	FUNCTION_5
0x4000a28	    0x644833042528	                xor rax, qword fs:[0x28]	       303	cond.c	FUNCTION_5
0x4000a31	            0x7405	                            je 0x4000a38	       303	cond.c	FUNCTION_5
0x4000a33	      0xe800000000	                          call 0x4000a38	       303	cond.c	FUNCTION_5
0x4000a38	        0x4883c458	                           add rsp, 0x58	       303	cond.c	FUNCTION_5
0x4000a3c	              0x5b	                                 pop rbx	       303	cond.c	FUNCTION_5
0x4000a3d	              0x5d	                                 pop rbp	       303	cond.c	FUNCTION_5
0x4000a3e	            0x415c	                                 pop r12	       303	cond.c	FUNCTION_5
0x4000a40	            0x415d	                                 pop r13	       303	cond.c	FUNCTION_5
0x4000a42	              0xc3	                                     ret	       303	cond.c	FUNCTION_5
initialize_cframe	ELSE,0:IF,0:WHILE,0:FOR,0:DO,0:functions,0:SWITCH,0:CALL,2	30
0x400014c	              0x53	                                push rbx	       533	cond.c	FUNCTION_11
0x400014d	          0x4889fb	                            mov rbx, rdi	       533	cond.c	FUNCTION_11
0x4000150	    0x48c707000000	                      mov qword [rdi], 0	        90	string3.h	FUNCTION_17	CALL_6
0x4000157	    0x48c747300000	               mov qword [rdi + 0x30], 0	        90	string3.h	FUNCTION_17	CALL_6
0x400015f	        0x488d7f08	                      lea rdi, [rdi + 8]	        90	string3.h	FUNCTION_17	CALL_6
0x4000163	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_17	CALL_6
0x4000167	          0x4889d9	                            mov rcx, rbx	        90	string3.h	FUNCTION_17	CALL_6
0x400016a	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_17	CALL_6
0x400016d	          0x83c138	                           add ecx, 0x38	        90	string3.h	FUNCTION_17	CALL_6
0x4000170	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_17	CALL_6
0x4000173	            0x89c9	                            mov ecx, ecx	        90	string3.h	FUNCTION_17	CALL_6
0x4000175	      0xb800000000	                              mov eax, 0	        90	string3.h	FUNCTION_17	CALL_6
0x400017a	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_17	CALL_6
0x400017d	        0x488d7b08	                      lea rdi, [rbx + 8]	       536	cond.c	FUNCTION_11	CALL_2
0x4000181	      0xe800000000	                          call 0x4000186	       536	cond.c	FUNCTION_11	CALL_2
0x4000186	          0x488903	                    mov qword [rbx], rax	       536	cond.c	FUNCTION_11	CALL_2
0x4000189	    0x488b05000000	            mov rax, qword [0x04000190] 	       537	cond.c	FUNCTION_11
0x4000190	        0x48894320	             mov qword [rbx + 0x20], rax	       537	cond.c	FUNCTION_11
0x4000194	          0x4885c0	                           test rax, rax	       538	cond.c	FUNCTION_11
0x4000197	            0x740c	                            je 0x40001a5	       538	cond.c	FUNCTION_11
0x4000199	        0x83782c00	               cmp dword [rax + 0x2c], 0	       538	cond.c	FUNCTION_11
0x400019d	           0xf95c0	                                setne al	       538	cond.c	FUNCTION_11
0x40001a0	           0xfb6c0	                           movzx eax, al	       538	cond.c	FUNCTION_11
0x40001a3	            0xeb05	                           jmp 0x40001aa	       538	cond.c	FUNCTION_11
0x40001a5	      0xb800000000	                              mov eax, 0	       538	cond.c	FUNCTION_11
0x40001aa	          0x894330	             mov dword [rbx + 0x30], eax	       538	cond.c	FUNCTION_11
0x40001ad	    0x8b0500000000	            mov eax, dword [0x040001b3] 	       539	cond.c	FUNCTION_11
0x40001b3	          0x894334	             mov dword [rbx + 0x34], eax	       539	cond.c	FUNCTION_11
0x40001b6	              0x5b	                                 pop rbx	       540	cond.c	FUNCTION_11
0x40001b7	              0xc3	                                     ret	       540	cond.c	FUNCTION_11
s_endif	ELSE,1:IF,3:WHILE,1:FOR,0:DO,0:functions,0:SWITCH,0:CALL,6	51
0x4000cfc	        0x4883ec08	                              sub rsp, 8	       382	cond.c	FUNCTION_7
0x4000d00	    0x488b05000000	            mov rax, qword [0x04000d07] 	       385	cond.c	FUNCTION_7	IF_1
0x4000d07	          0x4885c0	                           test rax, rax	       385	cond.c	FUNCTION_7	IF_1
0x4000d0a	            0x7523	                           jne 0x4000d2f	       385	cond.c	FUNCTION_7	IF_1
0x4000d0c	      0xba05000000	                              mov edx, 5	       387	cond.c	FUNCTION_7	IF_1	CALL_2
0x4000d11	      0xbe00000000	                              mov esi, 0	       387	cond.c	FUNCTION_7	IF_1	CALL_2
0x4000d16	      0xbf00000000	                              mov edi, 0	       387	cond.c	FUNCTION_7	IF_1	CALL_2
0x4000d1b	      0xe800000000	                          call 0x4000d20	       387	cond.c	FUNCTION_7	IF_1	CALL_2
0x4000d20	          0x4889c7	                            mov rdi, rax	       387	cond.c	FUNCTION_7	IF_1	CALL_2
0x4000d23	      0xb800000000	                              mov eax, 0	       387	cond.c	FUNCTION_7	IF_1	CALL_2
0x4000d28	      0xe800000000	                          call 0x4000d2d	       387	cond.c	FUNCTION_7	IF_1	CALL_2
0x4000d2d	            0xeb66	                           jmp 0x4000d95	       387	cond.c	FUNCTION_7	IF_1	CALL_2
0x4000d2f	    0xf60500000000	           test byte [0x04000d36], 0x20 	       391	cond.c	FUNCTION_7	ELSE_1	IF_2	CALL_3
0x4000d36	            0x741f	                            je 0x4000d57	       391	cond.c	FUNCTION_7	ELSE_1	IF_2	CALL_3
0x4000d38	        0x83782c00	               cmp dword [rax + 0x2c], 0	       392	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4000d3c	            0x7419	                            je 0x4000d57	       392	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4000d3e	        0x488b4020	            mov rax, qword [rax + 0x20] 	       393	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4000d42	          0x4885c0	                           test rax, rax	       393	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4000d45	            0x7406	                            je 0x4000d4d	       393	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4000d47	        0x83782c00	               cmp dword [rax + 0x2c], 0	       394	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4000d4b	            0x750a	                           jne 0x4000d57	       394	cond.c	FUNCTION_7	ELSE_1	IF_2
0x4000d4d	      0xbf01000000	                              mov edi, 1	       395	cond.c	FUNCTION_7	ELSE_1	CALL_4
0x4000d52	      0xe800000000	                          call 0x4000d57	       395	cond.c	FUNCTION_7	ELSE_1	CALL_4
0x4000d57	    0x488b35000000	            mov rsi, qword [0x04000d5e] 	       397	cond.c	FUNCTION_7	ELSE_1
0x4000d5e	        0x488b4620	            mov rax, qword [rsi + 0x20] 	       398	cond.c	FUNCTION_7	ELSE_1
0x4000d62	    0x488905000000	            mov qword [0x04000d69], rax 	       398	cond.c	FUNCTION_7	ELSE_1
0x4000d69	    0x483b35000000	            cmp rsi, qword [0x04000d70] 	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x4000d70	            0x7619	                           jbe 0x4000d8b	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x4000d72	    0x483b35000000	            cmp rsi, qword [0x04000d79] 	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x4000d79	            0x7310	                           jae 0x4000d8b	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x4000d7b	    0x488935000000	            mov qword [0x04000d82], rsi 	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x4000d82	    0x488935000000	            mov qword [0x04000d89], rsi 	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x4000d89	            0xeb0a	                           jmp 0x4000d95	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x4000d8b	      0xbf00000000	                              mov edi, 0	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x4000d90	      0xe800000000	                          call 0x4000d95	       399	cond.c	FUNCTION_7	ELSE_1	CALL_5
0x4000d95	    0x833d00000000	               cmp dword [0x04000d9c], 0	       402	cond.c	FUNCTION_7	IF_3
0x4000d9c	            0x7431	                            je 0x4000dcf	       402	cond.c	FUNCTION_7	IF_3
0x4000d9e	    0x488b05000000	            mov rax, qword [0x04000da5] 	       404	cond.c	FUNCTION_7	IF_3	WHILE_1
0x4000da5	           0xfb610	                   movzx edx, byte [rax]	       404	cond.c	FUNCTION_7	IF_3	WHILE_1
0x4000da8	    0x80ba00000000	                       cmp byte [rdx], 0	       404	cond.c	FUNCTION_7	IF_3	WHILE_1
0x4000daf	            0x751e	                           jne 0x4000dcf	       404	cond.c	FUNCTION_7	IF_3	WHILE_1
0x4000db1	        0x4883c001	                              add rax, 1	       404	cond.c	FUNCTION_7	IF_3	WHILE_1
0x4000db5	          0x4889c2	                            mov rdx, rax	       405	cond.c	FUNCTION_7	IF_3	WHILE_1
0x4000db8	    0x488905000000	            mov qword [0x04000dbf], rax 	       405	cond.c	FUNCTION_7	IF_3	WHILE_1
0x4000dbf	        0x4883c001	                              add rax, 1	       405	cond.c	FUNCTION_7	IF_3	WHILE_1
0x4000dc3	           0xfb612	                   movzx edx, byte [rdx]	       404	cond.c	FUNCTION_7	IF_3	WHILE_1
0x4000dc6	    0x80ba00000000	                       cmp byte [rdx], 0	       404	cond.c	FUNCTION_7	IF_3	WHILE_1
0x4000dcd	            0x74e6	                            je 0x4000db5	       404	cond.c	FUNCTION_7	IF_3	WHILE_1
0x4000dcf	      0xe800000000	                          call 0x4000dd4	       408	cond.c	FUNCTION_7	CALL_6
0x4000dd4	        0x4883c408	                              add rsp, 8	       409	cond.c	FUNCTION_7
0x4000dd8	              0xc3	                                     ret	       409	cond.c	FUNCTION_7
